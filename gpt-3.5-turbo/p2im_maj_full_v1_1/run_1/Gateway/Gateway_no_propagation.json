{
    "functions": {
        "FUN_0800010c": {
            "additional_data": {
                "DAT_200000f4": {
                    "1": "flag_value",
                    "18": "flag"
                },
                "DAT_200000f4._0_1_": {
                    "1": "flag_initialized"
                },
                "FUN_0800010c": {
                    "1": "update_data",
                    "18": "initialize_flag",
                    "2": "update_flag_if_unset"
                },
                "param_1": {
                    "1": "input_data",
                    "10": "input",
                    "2": "input_param",
                    "3": "input_parameter",
                    "7": "input_value"
                }
            },
            "called": [
                "FUN_0800a424"
            ],
            "calling": [],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initialize_flag_0800010c(undefined4 input)\n\n{\n  if ((char)DAT_200000f4 == '\\0') {\n    DAT_200000f4._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "current_name": "initialize_flag_0800010c",
            "entrypoint": "0x0800010c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800010c": "initialize_flag_0800010c",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000178": {
            "additional_data": {
                "FUN_08000178": {
                    "1": "find_length",
                    "17": "find_end_of_string",
                    "2": "get_string_length"
                },
                "cVar1": {
                    "1": "current_value",
                    "18": "current_char",
                    "2": "current_character_value",
                    "3": "current_char_value",
                    "5": "current_character"
                },
                "param_1": {
                    "1": "input_str",
                    "12": "input_string",
                    "14": "string",
                    "4": "str"
                },
                "pcVar2": {
                    "1": "next_position",
                    "14": "next_char",
                    "2": "next_char_pointer",
                    "4": "next_char_ptr",
                    "8": "next_character"
                },
                "pcVar3": {
                    "1": "next_char",
                    "3": "current_ptr",
                    "4": "current_char_ptr",
                    "6": "current_position"
                }
            },
            "called": [],
            "calling": [
                "FUN_08002e44",
                "FUN_080032a2"
            ],
            "code": "\nchar * find_end_of_string_08000178(char *string)\n\n{\n  char current_char;\n  char *next_char;\n  char *current_position;\n  \n  current_position = string;\n  do {\n    next_char = current_position + 1;\n    current_char = *current_position;\n    current_position = next_char;\n  } while (current_char != '\\0');\n  return next_char + (-1 - (int)string);\n}\n\n",
            "current_name": "find_end_of_string_08000178",
            "entrypoint": "0x08000178",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000178": "find_end_of_string_08000178",
                "cVar1": "current_char",
                "param_1": "string",
                "pcVar2": "next_char",
                "pcVar3": "current_position"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000188": {
            "additional_data": {
                "": {
                    "2": ""
                },
                "0x3f": {
                    "1": "interrupt_code"
                },
                "<original_variable_name>": {
                    "1": "unimportant_variable"
                },
                "DAT_": {
                    "1": "unchanged"
                },
                "FUN_08000188": {
                    "1": "send_interrupt",
                    "2": "execute_system_call",
                    "3": "trigger_software_interrupt",
                    "8": "send_software_interrupt"
                },
                "PTR_": {
                    "1": "unchanged"
                },
                "software_interrupt": {
                    "1": "call_software_interrupt",
                    "2": "send_interrupt",
                    "3": "invoke_interrupt",
                    "7": "trigger_interrupt"
                }
            },
            "called": [],
            "calling": [
                "FUN_0800018c"
            ],
            "code": "\nvoid send_software_interrupt_08000188(void)\n\n{\n  trigger_interrupt(0x3f);\n  return;\n}\n\n",
            "current_name": "send_software_interrupt_08000188",
            "entrypoint": "0x08000188",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000188": "send_software_interrupt_08000188",
                "software_interrupt": "trigger_interrupt"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800018c": {
            "additional_data": {
                "FUN_08000188": {
                    "1": "extract_data"
                },
                "FUN_0800018c": {
                    "1": "extract_and_process_data",
                    "13": "execute_function",
                    "2": "execute_operation",
                    "7": "process_data"
                },
                "param_1": {
                    "1": "data_param",
                    "2": "input_data",
                    "3": "value1",
                    "4": "input_1",
                    "5": "input_param",
                    "7": "input1"
                },
                "param_2": {
                    "1": "input_2",
                    "2": "arg2",
                    "4": "unused_param"
                },
                "param_3": {
                    "1": "unknown2",
                    "2": "arg3",
                    "3": "unused_param"
                },
                "param_4": {
                    "1": "function_argument4",
                    "2": "arg4",
                    "3": "value4",
                    "4": "input_4",
                    "7": "input4"
                },
                "uVar1": {
                    "1": "status",
                    "26": "result",
                    "3": "return_value"
                }
            },
            "called": [
                "FUN_08000188"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nundefined4 execute_function_0800018c(undefined4 input1,undefined4 unused_param,undefined4 unused_param,undefined4 input4)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000110 != 0) {\n    return 0;\n  }\n  result = FUN_08000188(1,input1,0,0,input4);\n  return result;\n}\n\n",
            "current_name": "execute_function_0800018c",
            "entrypoint": "0x0800018c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800018c": "execute_function_0800018c",
                "param_1": "input1",
                "param_2": "unused_param",
                "param_3": "unused_param",
                "param_4": "input4",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000214": {
            "additional_data": {
                "&DAT_0800a6cc": {
                    "1": "data_var4",
                    "2": "data3"
                },
                "&DAT_0800a908": {
                    "1": "data2"
                },
                "&DAT_200001f0": {
                    "1": "byte_data"
                },
                "&DAT_2000022c": {
                    "1": "data4"
                },
                "&DAT_200003d4": {
                    "1": "data_ptr"
                },
                "(byte)(&DAT_200001f0)[param_1]": {
                    "1": "byte_value"
                },
                "(char)(&DAT_0800a908)[param_1]": {
                    "1": "character_value"
                },
                "(int)(char)(&DAT_0800a908)[param_1]": {
                    "1": "lookup_value"
                },
                "(uint)(byte)(&DAT_200001f0)[param_1]": {
                    "1": "operation_code"
                },
                "DAT_0800a908": {
                    "1": "flag_array"
                },
                "DAT_200001f0": {
                    "1": "index_array"
                },
                "DAT_2000022c": {
                    "1": "code_array"
                },
                "DAT_200003d4": {
                    "1": "data_var1"
                },
                "FUN_08000214": {
                    "1": "check_and_process_data",
                    "2": "check_and_execute_action",
                    "26": "process_data"
                },
                "FUN_080026b0": {
                    "1": "reverse_data_index"
                },
                "FUN_08002fa0": {
                    "1": "check_condition",
                    "3": "check_data"
                },
                "FUN_08002fc2": {
                    "1": "sub_function5",
                    "4": "update_data"
                },
                "FUN_080036ac": {
                    "1": "check_value",
                    "3": "check_condition"
                },
                "FUN_0800738a": {
                    "1": "reverse_data",
                    "2": "perform_operation"
                },
                "FUN_080088e0": {
                    "1": "sub_function4"
                },
                "bVar1": {
                    "1": "is_flag_true",
                    "16": "is_valid",
                    "2": "is_true",
                    "3": "is_flag_set"
                },
                "iVar2": {
                    "27": "result",
                    "4": "return_value"
                },
                "param_1": {
                    "1": "param",
                    "11": "input",
                    "2": "input_value",
                    "3": "data_size",
                    "4": "index",
                    "6": "data_index"
                },
                "param_2": {
                    "1": "param",
                    "2": "param1",
                    "20": "param2"
                },
                "param_3": {
                    "1": "param1",
                    "2": "arg2",
                    "22": "param3"
                },
                "param_4": {
                    "1": "param",
                    "2": "arg3",
                    "22": "param4"
                }
            },
            "called": [
                "FUN_0800021a"
            ],
            "calling": [
                "FUN_08001cd0"
            ],
            "code": "\nvoid process_data_08000214(uint input,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  bool is_valid;\n  int result;\n  \n  if (0x3b < (int)input) {\n    return;\n  }\n  result = FUN_08002fa0(&DAT_200003d4,input,param3,param4,param4);\n  if (result == 3) {\n    if (input < 0x3c) {\n      if ((&DAT_0800a908)[input] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[input]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[input],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080088e0(input,param2);\n    }\n    FUN_08002fc2(&DAT_200003d4,input,param2);\n  }\n  else if (result == 4) {\n    if (input < 0x3c) {\n      if ((&DAT_0800a908)[input] == -1) {\n        is_valid = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          is_valid = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[input]);\n          if (result == 1) {\n            is_valid = false;\n          }\n          else {\n            is_valid = true;\n          }\n        }\n      }\n    }\n    else {\n      is_valid = false;\n    }\n    if (is_valid) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[input] * 3,param2);\n    }\n    FUN_08002fc2(&DAT_200003d4,input,param2);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08000214",
            "entrypoint": "0x08000214",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000214": "process_data_08000214",
                "bVar1": "is_valid",
                "iVar2": "result",
                "param_1": "input",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800021a": {
            "additional_data": {
                "&DAT_0800a6cc": {
                    "1": "some_data",
                    "2": "operation_data"
                },
                "&DAT_0800a908": {
                    "1": "data_block2",
                    "2": "array"
                },
                "&DAT_200001f0": {
                    "1": "action_data2"
                },
                "&DAT_2000022c": {
                    "1": "action_data1",
                    "2": "data1"
                },
                "&DAT_200003d4": {
                    "1": "data_block1",
                    "4": "data"
                },
                "(&DAT_0800a908)[param_1]": {
                    "1": "data_block2[param_1]"
                },
                "(&DAT_200001f0)[param_1]": {
                    "1": "data_block4[param_1]"
                },
                "(byte)(&DAT_200001f0)[param_1]": {
                    "1": "data2"
                },
                "(char)(&DAT_0800a908)[param_1]": {
                    "1": "data_value"
                },
                "(int)(char)(&DAT_0800a908)[param_1]": {
                    "1": "valid_indices[index]"
                },
                "(uint)(byte)(&DAT_200001f0)[param_1]": {
                    "1": "byte_value"
                },
                "(uint)(byte)(&DAT_200001f0)[param_1] * 3": {
                    "1": "index3"
                },
                "DAT_0800a908": {
                    "1": "array1"
                },
                "FUN_0800021a": {
                    "1": "execute_operation",
                    "26": "process_data"
                },
                "FUN_080026b0": {
                    "1": "process_data_true",
                    "2": "perform_action",
                    "4": "reverse_data"
                },
                "FUN_08002fa0": {
                    "1": "get_status",
                    "3": "check_validity",
                    "6": "check_data"
                },
                "FUN_08002fc2": {
                    "1": "update_result",
                    "13": "update_data"
                },
                "FUN_080036ac": {
                    "1": "get_condition_result",
                    "2": "get_info",
                    "5": "check_condition"
                },
                "FUN_0800738a": {
                    "1": "reverse_data",
                    "2": "perform_operation",
                    "3": "process_condition"
                },
                "FUN_080088e0": {
                    "1": "execute_operation",
                    "2": "update_data",
                    "3": "perform_action"
                },
                "bVar1": {
                    "1": "is_available",
                    "14": "is_valid",
                    "2": "is_true",
                    "5": "is_condition_met"
                },
                "char": {
                    "1": "character"
                },
                "char)": {
                    "1": "data_char"
                },
                "iVar2": {
                    "1": "error_code",
                    "22": "result",
                    "4": "return_value"
                },
                "param_1": {
                    "1": "input_param",
                    "10": "input",
                    "2": "input_index",
                    "3": "index"
                },
                "param_2": {
                    "1": "param",
                    "11": "param2",
                    "2": "param_2",
                    "3": "value",
                    "4": "param1"
                },
                "param_3": {
                    "1": "input1",
                    "12": "param3",
                    "2": "value2",
                    "4": "param_3"
                },
                "param_4": {
                    "1": "arg2",
                    "12": "param4",
                    "2": "value3",
                    "4": "param_4"
                }
            },
            "called": [
                "FUN_080026b0",
                "FUN_08002fa0",
                "FUN_080036ac",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0"
            ],
            "calling": [
                "FUN_08000214"
            ],
            "code": "\nvoid process_data_0800021a(uint input,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  bool is_valid;\n  int result;\n  \n  result = FUN_08002fa0(&DAT_200003d4,input,param3,param4,param4);\n  if (result == 3) {\n    if (input < 0x3c) {\n      if ((&DAT_0800a908)[input] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(data_char(&DAT_0800a908)[input]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(data_char(&DAT_0800a908)[input],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080088e0(input,param2);\n    }\n    FUN_08002fc2(&DAT_200003d4,input,param2);\n  }\n  else if (result == 4) {\n    if (input < 0x3c) {\n      if ((&DAT_0800a908)[input] == -1) {\n        is_valid = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          is_valid = false;\n        }\n        else {\n          result = FUN_080036ac((int)(data_char(&DAT_0800a908)[input]);\n          if (result == 1) {\n            is_valid = false;\n          }\n          else {\n            is_valid = true;\n          }\n        }\n      }\n    }\n    else {\n      is_valid = false;\n    }\n    if (is_valid) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[input] * 3,param2);\n    }\n    FUN_08002fc2(&DAT_200003d4,input,param2);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "process_data_0800021a",
            "entrypoint": "0x0800021a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800021a": "process_data_0800021a",
                "bVar1": "is_valid",
                "char": "character",
                "char)": "data_char",
                "iVar2": "result",
                "param_1": "input",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000488": {
            "additional_data": {
                "DAT_20000114": {
                    "1": "toggle_data",
                    "4": "data"
                },
                "DAT_20000171": {
                    "1": "is_toggle_enabled",
                    "2": "flag"
                },
                "FUN_08000488": {
                    "1": "set_bit_in_data",
                    "11": "update_bit",
                    "2": "update_bit_in_data",
                    "4": "update_data"
                },
                "FUN_08002ef2": {
                    "1": "update_data_section",
                    "14": "update_data"
                },
                "FUN_08008880": {
                    "1": "get_mask",
                    "2": "calculate_mask"
                },
                "UVar1": {
                    "1": "new_bit_value"
                },
                "param_1": {
                    "1": "data_index",
                    "12": "bit_position",
                    "4": "flag_index",
                    "5": "index",
                    "9": "bit_index"
                },
                "param_2": {
                    "1": "set_flag",
                    "15": "bit_value",
                    "2": "flag_value",
                    "3": "value",
                    "4": "flag"
                },
                "uVar1": {
                    "1": "updated_bitmask",
                    "2": "random_value",
                    "21": "result"
                }
            },
            "called": [
                "FUN_08008880",
                "FUN_08002ef2"
            ],
            "calling": [
                "FUN_080005f8"
            ],
            "code": "\nvoid update_bit_08000488(uint bit_position,int bit_value)\n\n{\n  undefined4 result;\n  \n  if ((int)bit_position < 0xe) {\n    if (bit_value == 0) {\n      DAT_20000114 = DAT_20000114 & ~(1 << (bit_position & 0xff));\n      return;\n    }\n    DAT_20000114 = 1 << (bit_position & 0xff) | DAT_20000114;\n    if (DAT_20000171 == '\\0') {\n      result = FUN_08008880();\n      FUN_08002ef2(&DAT_200003d4,bit_position,result);\n      return;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "update_bit_08000488",
            "entrypoint": "0x08000488",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000488": "update_bit_08000488",
                "param_1": "bit_position",
                "param_2": "bit_value",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080004d4": {
            "additional_data": {
                "FUNK_08002580": {
                    "1": "process_byte"
                },
                "FUN_080004d4": {
                    "1": "extract_and_process_data",
                    "2": "process_input",
                    "3": "process_params",
                    "7": "process_data",
                    "9": "process_param"
                },
                "FUN_08002580": {
                    "1": "reverse_bytes"
                },
                "iVar1": {
                    "1": "iteration_count",
                    "15": "counter",
                    "3": "count",
                    "7": "loop_counter"
                },
                "param_1": {
                    "1": "param",
                    "11": "flag",
                    "2": "input_param",
                    "3": "input_value"
                },
                "param_2": {
                    "1": "flag_value",
                    "15": "value",
                    "2": "input_value",
                    "3": "flag"
                },
                "puVar2": {
                    "2": "byte_ptr",
                    "3": "byte_array_ptr",
                    "4": "byte_array",
                    "6": "data_pointer",
                    "9": "data_ptr"
                }
            },
            "called": [
                "FUN_08002580"
            ],
            "calling": [],
            "code": "\nvoid process_param_080004d4(int flag,int value)\n\n{\n  int counter;\n  undefined *data_ptr;\n  \n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    data_ptr = &DAT_2000022c;\n    for (counter = 0xb; -1 < counter; counter = counter + -1) {\n      FUN_08002580(data_ptr);\n      data_ptr = data_ptr + 3;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_param_080004d4",
            "entrypoint": "0x080004d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080004d4": "process_param_080004d4",
                "iVar1": "counter",
                "param_1": "flag",
                "param_2": "value",
                "puVar2": "data_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000500": {
            "additional_data": {
                "&DAT_2000011f": {
                    "1": "reverse_order_array",
                    "2": "counter_array"
                },
                "&DAT_2000011f[DAT_2000011c]": {
                    "1": "another_array[another_variable]"
                },
                "&DAT_200001f0": {
                    "1": "attached_servos",
                    "8": "servo_array"
                },
                "&DAT_200001f0[param_1]": {
                    "1": "servo_array[servo_index]"
                },
                "&DAT_2000022c": {
                    "1": "servo_base_address",
                    "3": "servo_data"
                },
                "&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[param_1] * 3": {
                    "1": "action_address"
                },
                "&DAT_200003d4": {
                    "8": "error_message"
                },
                "0": {
                    "1": "zero"
                },
                "3": {
                    "1": "byte_size"
                },
                "DAT_20000111": {
                    "1": "rev_pointer"
                },
                "DAT_2000011c": {
                    "1": "temp_var",
                    "2": "current_servo",
                    "6": "counter"
                },
                "DAT_2000011f": {
                    "1": "auxiliary_array",
                    "2": "temp_array"
                },
                "DAT_200001ed": {
                    "1": "num_servos",
                    "18": "max_servos",
                    "3": "max_servo_count",
                    "6": "servo_count"
                },
                "DAT_200001f0": {
                    "1": "servo_table",
                    "13": "servo_array",
                    "2": "servo_list"
                },
                "DAT_2000022c": {
                    "1": "buffer",
                    "2": "servo_data_array",
                    "7": "servo_data"
                },
                "DAT_200003d4": {
                    "1": "error_buffer",
                    "19": "error_message"
                },
                "FUN_08000500": {
                    "1": "attach_servo_to_controller",
                    "26": "attach_servo"
                },
                "FUN_080025ac": {
                    "1": "update_servo_data",
                    "2": "configure_servo",
                    "3": "process_servo",
                    "4": "set_servo_position"
                },
                "FUN_08002634": {
                    "1": "update_values",
                    "2": "delete_servo",
                    "3": "reset_servo_position",
                    "5": "reset_servo"
                },
                "FUN_08002f14": {
                    "1": "print_message",
                    "18": "display_error_message",
                    "3": "print_error_message",
                    "5": "show_error_message"
                },
                "PTR_PARAM_2": {
                    "1": "param2_ptr"
                },
                "PTR_PARAM_3": {
                    "1": "param3_ptr"
                },
                "byte": {
                    "1": "byte_value"
                },
                "byte_080025ac": {
                    "1": "byte_array"
                },
                "param_1": {
                    "1": "servo_id",
                    "2": "data_pointer",
                    "24": "servo_index"
                },
                "param_2": {
                    "1": "param_2",
                    "18": "param2",
                    "3": "value1"
                },
                "param_3": {
                    "1": "arg2",
                    "18": "param3",
                    "2": "param2",
                    "3": "value2"
                },
                "param_4": {
                    "1": "param",
                    "19": "param4",
                    "2": "param3",
                    "3": "value3"
                }
            },
            "called": [
                "FUN_08002634",
                "FUN_08002f14",
                "FUN_080025ac"
            ],
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "code": "\nvoid attach_servo_08000500(int servo_index,int param2,int param3,undefined4 param4)\n\n{\n  if (0xb < DAT_200001ed) {\n    FUN_08002f14(&DAT_200003d4,\"Max servos attached\",param3,param4,param4);\n    return;\n  }\n  if (DAT_2000011c == 0) {\n    (&DAT_200001f0)[servo_index] = DAT_200001ed;\n    DAT_200001ed = DAT_200001ed + 1;\n  }\n  else {\n    (&DAT_200001f0)[servo_index] = (&DAT_2000011f)[DAT_2000011c];\n    DAT_2000011c = DAT_2000011c - 1;\n  }\n  if ((0 < param2) && (0 < param3)) {\n    FUN_080025ac(&DAT_2000022c + (uint)(byte_value)(&DAT_200001f0)[servo_index] * 3,servo_index,param2,param3);\n    return;\n  }\n  FUN_08002634(&DAT_2000022c + (uint)(byte_value)(&DAT_200001f0)[servo_index] * 3,servo_index);\n  return;\n}\n\n",
            "current_name": "attach_servo_08000500",
            "entrypoint": "0x08000500",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000500": "attach_servo_08000500",
                "byte": "byte_value",
                "param_1": "servo_index",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000588": {
            "additional_data": {
                "&DAT_2000011f": {
                    "1": "new_data"
                },
                "&DAT_200001f0": {
                    "1": "data_arr",
                    "2": "array",
                    "3": "data_array"
                },
                "&DAT_200001f0)[param_1]": {
                    "1": "current_value"
                },
                "&DAT_200001f0[param_1]": {
                    "1": "item_array[index]"
                },
                "&DAT_2000022c": {
                    "1": "data_arr",
                    "2": "data_ptr"
                },
                "(&DAT_2000011f)[DAT_2000011c]": {
                    "1": "updated_data"
                },
                "(&DAT_200001f0)[param_1]": {
                    "1": "data_value"
                },
                "(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[param_1] * 3)": {
                    "1": "data_pointer"
                },
                "0xff": {
                    "1": "reset_value"
                },
                "DAT_2000011c": {
                    "1": "new_index",
                    "18": "counter",
                    "2": "increment",
                    "5": "count"
                },
                "DAT_2000011f": {
                    "1": "processed_data",
                    "4": "updated_values",
                    "5": "updated_data"
                },
                "DAT_200001ed": {
                    "1": "target_byte",
                    "10": "current_value",
                    "2": "last_value",
                    "4": "target_value"
                },
                "DAT_200001f0": {
                    "1": "value_arr",
                    "2": "data_array",
                    "7": "data"
                },
                "DAT_200001f0[param_1]": {
                    "1": "current_item"
                },
                "DAT_2000022c": {
                    "1": "data_offset",
                    "2": "data_arr",
                    "3": "data_array"
                },
                "FUN_08000588": {
                    "1": "update_data_value",
                    "18": "update_data",
                    "6": "process_data"
                },
                "FUN_08002644": {
                    "1": "update_data_helper",
                    "4": "process_data"
                },
                "byte": {
                    "1": "byte_array"
                },
                "byte *param_1": {
                    "2": "data_pointer"
                },
                "param_1": {
                    "31": "index"
                },
                "param_2": {
                    "2": "param2"
                },
                "param_3": {
                    "2": "param3"
                },
                "param_4": {
                    "2": "param4"
                }
            },
            "called": [
                "FUN_08002644"
            ],
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "code": "\nvoid update_data_08000588(int index)\n\n{\n  FUN_08002644(&DAT_2000022c + (uint)(data_pointer)(&DAT_200001f0)[index] * 3);\n  if (((&DAT_200001f0)[index] == DAT_200001ed) && (DAT_200001ed != '\\0')) {\n    DAT_200001ed = DAT_200001ed + -1;\n  }\n  else if (DAT_200001ed != '\\0') {\n    DAT_2000011c = DAT_2000011c + 1;\n    (&DAT_2000011f)[DAT_2000011c] = (&DAT_200001f0)[index];\n  }\n  (&DAT_200001f0)[index] = 0xff;\n  return;\n}\n\n",
            "current_name": "update_data_08000588",
            "entrypoint": "0x08000588",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000588": "update_data_08000588",
                "byte": "data_pointer",
                "param_1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080005e0": {
            "additional_data": {
                "": {
                    "2": ""
                },
                "DAT_20000004": {
                    "1": "default_setting",
                    "2": "default_byte",
                    "4": "initial_value",
                    "7": "data_value"
                },
                "DAT_20000170": {
                    "1": "data_value",
                    "4": "counter",
                    "6": "data_flag",
                    "8": "data_counter"
                },
                "FUN_080005e0": {
                    "1": "reset_flags",
                    "27": "initialize_data",
                    "3": "initialize_variables"
                },
                "original_param_1": {
                    "1": "data_pointer"
                },
                "original_var_1": {
                    "1": "counter"
                },
                "original_variable_name_1": {
                    "1": "reset_value"
                },
                "original_variable_name_2": {
                    "1": "max_value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08000aec",
                "FUN_080005f8"
            ],
            "code": "\nvoid initialize_data_080005e0(void)\n\n{\n  DAT_20000170 = 0;\n  DAT_20000004 = 0xff;\n  return;\n}\n\n",
            "current_name": "initialize_data_080005e0",
            "entrypoint": "0x080005e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080005e0": "initialize_data_080005e0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080005f8": {
            "additional_data": {
                "&DAT_0800a66c": {
                    "1": "config_data3"
                },
                "&DAT_0800a69c": {
                    "1": "pin_mode_type2"
                },
                "&DAT_0800a6cc": {
                    "1": "pin_mode_type1"
                },
                "&DAT_0800a908": {
                    "1": "another_data_array"
                },
                "&DAT_20000170": {
                    "1": "is_set"
                },
                "&DAT_20000174": {
                    "1": "pin_data"
                },
                "&DAT_200001f0": {
                    "1": "byte_array"
                },
                "&DAT_2000022c": {
                    "1": "pin_config_data"
                },
                "&DAT_200003d4": {
                    "1": "input_data"
                },
                "DAT_0800a66c": {
                    "1": "extra_data3"
                },
                "DAT_0800a69c": {
                    "1": "extra_data2"
                },
                "DAT_0800a6cc": {
                    "1": "extra_data1"
                },
                "DAT_0800a908": {
                    "1": "pin_modes"
                },
                "DAT_20000170": {
                    "1": "data_var",
                    "3": "flag"
                },
                "DAT_20000174": {
                    "1": "pin_states"
                },
                "DAT_200001f0": {
                    "1": "byte_array3"
                },
                "DAT_2000022c": {
                    "1": "pin_address_table"
                },
                "DAT_200003d4": {
                    "1": "data3"
                },
                "FUN_080000488": {
                    "1": "set_pin_state"
                },
                "FUN_080000588": {
                    "1": "toggle_pin_state"
                },
                "FUN_0800005e0": {
                    "1": "reset_pin"
                },
                "FUN_0800026f8": {
                    "1": "perform_action3"
                },
                "FUN_080002f14": {
                    "2": "print_error_message"
                },
                "FUN_080002fa0": {
                    "1": "get_pin_mode"
                },
                "FUN_080002fc2": {
                    "1": "clear_pin"
                },
                "FUN_0800036ac": {
                    "1": "check_pin_mode"
                },
                "FUN_08000488": {
                    "1": "do_something_for_pin",
                    "2": "perform_pin_action"
                },
                "FUN_08000500": {
                    "1": "change_pin_value"
                },
                "FUN_08000588": {
                    "1": "update_data",
                    "2": "cleanup_pin"
                },
                "FUN_080005e0": {
                    "1": "perform_special_action",
                    "2": "handle_error"
                },
                "FUN_080005f8": {
                    "1": "pin_function",
                    "2": "process_function",
                    "7": "process_pin"
                },
                "FUN_08000738a": {
                    "1": "get_string_index"
                },
                "FUN_0800088e0": {
                    "1": "set_pin_interrupt"
                },
                "FUN_080008990": {
                    "1": "set_pin_mode"
                },
                "FUN_080008a24": {
                    "1": "set_pin_pull_up_down"
                },
                "FUN_080008a8": {
                    "1": "update_pins"
                },
                "FUN_080026f8": {
                    "1": "get_pin_address",
                    "2": "retrieve_data"
                },
                "FUN_08002f14": {
                    "1": "display_error_message",
                    "4": "print_error_message"
                },
                "FUN_08002fa0": {
                    "1": "get_return_value",
                    "3": "get_pin_mode"
                },
                "FUN_08002fa8": {
                    "1": "update_data",
                    "2": "set_pin_mode",
                    "3": "update_pin_mode"
                },
                "FUN_08002fc2": {
                    "1": "set_pin_configuration",
                    "2": "update_pin_state"
                },
                "FUN_080036ac": {
                    "1": "is_pin_enabled",
                    "2": "check_condition"
                },
                "FUN_080036ac()": {
                    "1": "check_value()"
                },
                "FUN_0800738a": {
                    "1": "check_pin_availability",
                    "2": "get_pin_value"
                },
                "FUN_080088e0": {
                    "1": "update_pin_state",
                    "2": "update_pin_status"
                },
                "FUN_08008990": {
                    "1": "perform_action_c",
                    "5": "set_pin_mode"
                },
                "FUN_08008a24": {
                    "1": "perform_additional_action"
                },
                "bVar3": {
                    "1": "bool_result",
                    "2": "check",
                    "6": "is_valid",
                    "8": "is_true"
                },
                "byte": {
                    "1": "byte_var"
                },
                "cVar2": {
                    "1": "conditional_value",
                    "2": "special_case",
                    "3": "char_value",
                    "6": "flag"
                },
                "iVar1": {
                    "1": "temp_var",
                    "2": "pin_status",
                    "21": "result",
                    "3": "return_value"
                },
                "param_1": {
                    "1": "first_parameter",
                    "2": "param",
                    "3": "pin_index",
                    "6": "pin",
                    "9": "pin_number"
                },
                "param_2": {
                    "1": "second_parameter",
                    "12": "mode",
                    "8": "pin_mode"
                },
                "uVar4": {
                    "1": "value",
                    "2": "shifted_pin_number",
                    "3": "index"
                }
            },
            "called": [
                "FUN_08002f14",
                "FUN_08008990",
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0",
                "FUN_08000488",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08008a24",
                "FUN_08002fa8",
                "FUN_08000500",
                "FUN_080026f8"
            ],
            "calling": [
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_08000a64"
            ],
            "code": "\nvoid process_pin_080005f8(uint pin_number,int mode)\n\n{\n  int result;\n  char flag;\n  bool is_true;\n  uint index;\n  \n  result = FUN_08002fa0(&DAT_200003d4,pin_number);\n  if (result != 0x7f) {\n    result = FUN_08002fa0(&DAT_200003d4,pin_number);\n    if (result == 6) {\n      if (DAT_20000170 == '\\0') {\n        flag = '\\0';\n      }\n      else {\n        flag = DAT_20000170;\n        if (mode == 6) {\n          flag = '\\0';\n        }\n      }\n    }\n    else {\n      flag = '\\0';\n    }\n    if (flag != '\\0') {\n      FUN_080005e0();\n    }\n    if (pin_number < 0x3c) {\n      if ((&DAT_0800a908)[pin_number] == -1) {\n        is_true = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          is_true = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[pin_number]);\n          if (result == 1) {\n            is_true = false;\n          }\n          else if (mode == 4) {\n            is_true = false;\n          }\n          else {\n            is_true = true;\n          }\n        }\n      }\n    }\n    else {\n      is_true = false;\n    }\n    if (is_true) {\n      if ((byte_var)(&DAT_200001f0)[pin_number] < 0xc) {\n        result = FUN_080026f8(&DAT_2000022c + (uint)(byte_var)(&DAT_200001f0)[pin_number] * 3);\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08000588(pin_number);\n      }\n    }\n    index = pin_number - 0x2e & 0xff;\n    if (index < 0xe) {\n      if (pin_number < 0x3c) {\n        result = (int)(char)(&DAT_0800a908)[pin_number];\n      }\n      else {\n        result = -1;\n      }\n      result = FUN_080036ac(result);\n      if (result == 0) {\n        is_true = false;\n      }\n      else {\n        if (pin_number < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[pin_number];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 1) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    else {\n      is_true = false;\n    }\n    if (is_true) {\n      FUN_08000488(index,mode == 2);\n    }\n    if (pin_number < 0x3c) {\n      if ((&DAT_0800a908)[pin_number] == -1) {\n        is_true = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          is_true = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[pin_number]);\n          if (result == 1) {\n            is_true = false;\n          }\n          else {\n            is_true = true;\n          }\n        }\n      }\n    }\n    else {\n      is_true = false;\n    }\n    if (is_true) {\n      if ((mode == 0) || (mode == 0xb)) {\n        (&DAT_20000174)[pin_number >> 3] = (&DAT_20000174)[pin_number >> 3] | (byte_var)(1 << (pin_number & 7));\n      }\n      else {\n        (&DAT_20000174)[pin_number >> 3] = (&DAT_20000174)[pin_number >> 3] & ~(byte_var)(1 << (pin_number & 7));\n      }\n    }\n    FUN_08002fc2(&DAT_200003d4,pin_number,0);\n    switch(mode) {\n    case 0:\n      if (pin_number < 0x3c) {\n        if ((&DAT_0800a908)[pin_number] == -1) {\n          is_true = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            is_true = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pin_number]);\n            if (result == 1) {\n              is_true = false;\n            }\n            else {\n              is_true = true;\n            }\n          }\n        }\n      }\n      else {\n        is_true = false;\n      }\n      if (is_true) {\n        FUN_08008990(pin_number,0);\n        FUN_08002fa8(&DAT_200003d4,pin_number,0);\n        return;\n      }\n      break;\n    case 1:\n      if (pin_number < 0x3c) {\n        if ((&DAT_0800a908)[pin_number] == -1) {\n          is_true = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            is_true = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pin_number]);\n            if (result == 1) {\n              is_true = false;\n            }\n            else {\n              is_true = true;\n            }\n          }\n        }\n      }\n      else {\n        is_true = false;\n      }\n      if (is_true) {\n        result = FUN_08002fa0(&DAT_200003d4,pin_number);\n        if (result == 3) {\n          FUN_08008a24(pin_number,0);\n        }\n        FUN_08008990(pin_number,1);\n        FUN_08002fa8(&DAT_200003d4,pin_number,1);\n        return;\n      }\n      break;\n    case 2:\n      if (index < 0xe) {\n        if (pin_number < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[pin_number];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 0) {\n          is_true = false;\n        }\n        else {\n          if (pin_number < 0x3c) {\n            result = (int)(char)(&DAT_0800a908)[pin_number];\n          }\n          else {\n            result = -1;\n          }\n          result = FUN_080036ac(result);\n          if (result == 1) {\n            is_true = false;\n          }\n          else {\n            is_true = true;\n          }\n        }\n      }\n      else {\n        is_true = false;\n      }\n      if (is_true) {\n        if (pin_number < 0x3c) {\n          if ((&DAT_0800a908)[pin_number] == -1) {\n            is_true = false;\n          }\n          else {\n            result = FUN_080036ac();\n            if (result == 0) {\n              is_true = false;\n            }\n            else {\n              result = FUN_080036ac((int)(char)(&DAT_0800a908)[pin_number]);\n              if (result == 1) {\n                is_true = false;\n              }\n            }\n          }\n        }\n        else {\n          is_true = false;\n        }\n        if (is_true) {\n          FUN_08008990(pin_number,0);\n        }\n        FUN_08002fa8(&DAT_200003d4,pin_number,2);\n        return;\n      }\n      break;\n    case 3:\n      if (pin_number < 0x3c) {\n        if ((&DAT_0800a908)[pin_number] == -1) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pin_number]);\n            if (result == 1) {\n              result = 0;\n            }\n            else {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[pin_number],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08008990(pin_number,1);\n        FUN_080088e0(pin_number,0);\n        FUN_08002fa8(&DAT_200003d4,pin_number,3);\n        return;\n      }\n      break;\n    case 4:\n      if (pin_number < 0x3c) {\n        if ((&DAT_0800a908)[pin_number] == -1) {\n          is_true = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            is_true = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pin_number]);\n            if (result == 1) {\n              is_true = false;\n            }\n            else {\n              is_true = true;\n            }\n          }\n        }\n      }\n      else {\n        is_true = false;\n      }\n      if (is_true) {\n        FUN_08002fa8(&DAT_200003d4,pin_number,4);\n        if (((byte_var)(&DAT_200001f0)[pin_number] != 0xff) &&\n           (result = FUN_080026f8(&DAT_2000022c + (uint)(byte_var)(&DAT_200001f0)[pin_number] * 3),\n           result != 0)) {\n          is_true = false;\n        }\n        if (is_true) {\n          FUN_08000500(pin_number,0xffffffff);\n          return;\n        }\n      }\n      break;\n    default:\n      FUN_08002f14(&DAT_200003d4,\"Unknown pin mode\");\n      break;\n    case 6:\n      if (pin_number < 0x3c) {\n        if ((&DAT_0800a908)[pin_number] == -1) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pin_number]);\n            if (result == 1) {\n              result = 0;\n            }\n            else {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[pin_number],&DAT_0800a69c);\n              if (result == 0) {\n                result = FUN_0800738a((int)(char)(&DAT_0800a908)[pin_number],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08002fa8(&DAT_200003d4,pin_number,6);\n        return;\n      }\n      break;\n    case 10:\n      break;\n    case 0xb:\n      if (pin_number < 0x3c) {\n        if ((&DAT_0800a908)[pin_number] == -1) {\n          is_true = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            is_true = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pin_number]);\n            if (result == 1) {\n              is_true = false;\n            }\n            else {\n              is_true = true;\n            }\n          }\n        }\n      }\n      else {\n        is_true = false;\n      }\n      if (is_true) {\n        FUN_08008990(pin_number,2);\n        FUN_08002fa8(&DAT_200003d4,pin_number,0xb);\n        FUN_08002fc2(&DAT_200003d4,pin_number,1);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_pin_080005f8",
            "entrypoint": "0x080005f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080005f8": "process_pin_080005f8",
                "bVar3": "is_true",
                "byte": "byte_var",
                "cVar2": "flag",
                "iVar1": "result",
                "param_1": "pin_number",
                "param_2": "mode",
                "uVar4": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a64": {
            "called": [
                "FUN_080036ac",
                "FUN_08002a26",
                "FUN_0800738a",
                "FUN_080005f8"
            ],
            "calling": [
                "FUN_08001cd0"
            ],
            "code": "\nvoid FUNC_08000a64(void)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  for (uVar2 = 0; uVar2 < 0x3c; uVar2 = uVar2 + 1 & 0xff) {\n    if (uVar2 < 0x3c) {\n      if ((&DAT_0800a908)[uVar2] == -1) {\n        iVar1 = 0;\n      }\n      else {\n        iVar1 = FUN_080036ac();\n        if (iVar1 == 0) {\n          iVar1 = 0;\n        }\n        else {\n          iVar1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uVar2]);\n          if (iVar1 == 1) {\n            iVar1 = 0;\n          }\n          else {\n            iVar1 = FUN_0800738a((int)(char)(&DAT_0800a908)[uVar2],&DAT_0800a69c);\n            if (iVar1 == 0) {\n              iVar1 = FUN_0800738a((int)(char)(&DAT_0800a908)[uVar2],&DAT_0800a66c);\n            }\n          }\n        }\n      }\n    }\n    else {\n      iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n      FUN_080005f8(uVar2,6);\n    }\n  }\n  DAT_20000170 = 1;\n  FUN_08002a26(&DAT_20000314);\n  return;\n}\n\n",
            "current_name": "FUNC_08000a64",
            "entrypoint": "0x08000a64",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08000a64": "FUNC_08000a64"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08000aec": {
            "additional_data": {
                "&DAT_0800a908": {
                    "1": "data_array",
                    "3": "data"
                },
                "&DAT_20000174": {
                    "1": "data2",
                    "4": "array2"
                },
                "&DAT_20000180": {
                    "1": "array_c",
                    "4": "array3"
                },
                "&DAT_200001e8": {
                    "1": "array_a",
                    "4": "array1"
                },
                "&DAT_200001f0": {
                    "1": "result",
                    "2": "array4"
                },
                "DAT_0800a908": {
                    "1": "data4"
                },
                "DAT_20000114": {
                    "1": "var1",
                    "2": "counter1",
                    "3": "variable1"
                },
                "DAT_2000011c": {
                    "1": "value2",
                    "2": "counter2",
                    "3": "variable2"
                },
                "DAT_20000170": {
                    "1": "flag_value",
                    "2": "check_flag",
                    "4": "flag2"
                },
                "DAT_20000171": {
                    "1": "is_initialized",
                    "3": "flag1",
                    "5": "flag"
                },
                "DAT_20000174": {
                    "1": "data2",
                    "2": "array2"
                },
                "DAT_20000180": {
                    "1": "data3",
                    "2": "array3"
                },
                "DAT_200001e8": {
                    "1": "data1",
                    "2": "array1"
                },
                "DAT_200001ed": {
                    "1": "var3",
                    "2": "counter3",
                    "3": "variable3"
                },
                "DAT_200001f0": {
                    "1": "data5",
                    "2": "array4"
                },
                "FUN_080005e0": {
                    "1": "handle_condition",
                    "2": "execute_function1",
                    "4": "perform_initialization",
                    "7": "do_something"
                },
                "FUN_080005f8": {
                    "1": "execute_function_2",
                    "2": "perform_operation",
                    "3": "update_data",
                    "7": "process_data"
                },
                "FUN_08000aec": {
                    "1": "initialize_system",
                    "28": "initialize_data"
                },
                "FUN_080036ac": {
                    "1": "check_match",
                    "16": "check_value",
                    "2": "process_value",
                    "7": "check_condition"
                },
                "bVar1": {
                    "1": "is_matching",
                    "2": "is_allowed",
                    "3": "is_match",
                    "4": "is_flag_set",
                    "5": "is_true",
                    "7": "is_condition_met"
                },
                "iVar2": {
                    "1": "status",
                    "2": "condition_result",
                    "24": "result"
                },
                "param_1": {
                    "1": "character",
                    "2": "value_to_check"
                },
                "param_2": {
                    "1": "flag_value"
                },
                "uVar3": {
                    "1": "loop_index",
                    "2": "iterator",
                    "21": "index",
                    "5": "counter"
                }
            },
            "called": [
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_080005f8"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nvoid initialize_data_08000aec(void)\n\n{\n  bool is_condition_met;\n  int result;\n  uint index;\n  \n  DAT_20000171 = 1;\n  if (DAT_20000170 != '\\0') {\n    FUN_080005e0();\n  }\n  for (index = 0; index < 5; index = index + 1 & 0xff) {\n    (&DAT_200001e8)[index] = 0;\n    (&DAT_20000174)[index] = 0;\n    (&DAT_20000180)[index] = 0;\n  }\n  for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n    if ((index - 0x2e & 0xff) < 0xe) {\n      if (index < 0x3c) {\n        result = (int)(char)(&DAT_0800a908)[index];\n      }\n      else {\n        result = -1;\n      }\n      result = FUN_080036ac(result);\n      if (result == 0) {\n        is_condition_met = false;\n      }\n      else {\n        if (index < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[index];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 1) {\n          is_condition_met = false;\n        }\n        else {\n          is_condition_met = true;\n        }\n      }\n    }\n    else {\n      is_condition_met = false;\n    }\n    if (is_condition_met) {\n      FUN_080005f8(index,2);\n    }\n    else {\n      if ((((index < 0x3c) && ((&DAT_0800a908)[index] != -1)) &&\n          (result = FUN_080036ac(), result != 0)) &&\n         (result = FUN_080036ac((int)(char)(&DAT_0800a908)[index]), result != 1)) {\n        is_condition_met = true;\n      }\n      if (is_condition_met) {\n        FUN_080005f8(index,1);\n      }\n    }\n    (&DAT_200001f0)[index] = 0xff;\n  }\n  DAT_20000114 = 0;\n  DAT_2000011c = 0;\n  DAT_200001ed = 0;\n  DAT_20000171 = 0;\n  return;\n}\n\n",
            "current_name": "initialize_data_08000aec",
            "entrypoint": "0x08000aec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000aec": "initialize_data_08000aec",
                "bVar1": "is_condition_met",
                "iVar2": "result",
                "uVar3": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000be8": {
            "additional_data": {
                "FUN_08000be8": {
                    "1": "execute_operation",
                    "6": "update_data",
                    "8": "process_data"
                },
                "FUN_08002efe": {
                    "1": "process_sub_function"
                },
                "param_1": {
                    "1": "character_index",
                    "28": "index"
                },
                "param_2": {
                    "1": "param_mask",
                    "2": "bit_mask",
                    "26": "mask"
                },
                "param_3": {
                    "1": "check",
                    "10": "flag",
                    "17": "condition"
                },
                "param_4": {
                    "1": "additional_param",
                    "15": "param",
                    "2": "value",
                    "3": "param_4",
                    "4": "data"
                },
                "puVar1": {
                    "1": "array_address",
                    "2": "start_address",
                    "3": "ptr1",
                    "4": "data_pointer1"
                },
                "puVar2": {
                    "1": "result",
                    "2": "masked_value",
                    "3": "data_pointer2"
                }
            },
            "called": [
                "FUN_08002efe"
            ],
            "calling": [
                "FUN_08000ef8"
            ],
            "code": "\nvoid process_data_08000be8(int index,uint mask,int condition,undefined4 param)\n\n{\n  undefined1 *data_pointer1;\n  undefined1 *masked_data;\n  \n  data_pointer1 = &DAT_20000174;\n  masked_data = (undefined1 *)((byte)(&DAT_20000174)[index] & mask);\n  if ((condition != 0) ||\n     (data_pointer1 = (undefined1 *)(uint)(byte)(&DAT_20000180)[index], masked_data != data_pointer1)) {\n    FUN_08002efe(&DAT_200003d4,index,masked_data,data_pointer1,param);\n    (&DAT_20000180)[index] = (char)masked_data;\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08000be8",
            "entrypoint": "0x08000be8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000be8": "process_data_08000be8",
                "param_1": "index",
                "param_2": "mask",
                "param_3": "condition",
                "param_4": "param",
                "puVar1": "data_pointer1",
                "puVar2": "masked_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000ef8": {
            "additional_data": {
                "DAT_20000174": {
                    "1": "flags1"
                },
                "DAT_20000175": {
                    "1": "flag2"
                },
                "DAT_20000176": {
                    "1": "byte_constant3"
                },
                "DAT_20000177": {
                    "1": "byte_constant4"
                },
                "DAT_20000178": {
                    "1": "byte_constant5"
                },
                "DAT_20000179": {
                    "1": "byte_constant6"
                },
                "DAT_2000017a": {
                    "1": "byte_constant7"
                },
                "DAT_2000017b": {
                    "1": "byte_constant8"
                },
                "DAT_2000017c": {
                    "1": "byte_constant9"
                },
                "DAT_2000017d": {
                    "1": "byte_constant10"
                },
                "DAT_2000017e": {
                    "1": "byte_constant11"
                },
                "DAT_200001e8": {
                    "1": "use_flag_1"
                },
                "DAT_200001e9": {
                    "1": "enable_config2"
                },
                "DAT_200001ea": {
                    "1": "enable_flag3"
                },
                "DAT_200001eb": {
                    "1": "bool_constant4"
                },
                "DAT_200001ec": {
                    "1": "bool_constant5"
                },
                "DAT_200001ed": {
                    "1": "bool_constant6"
                },
                "DAT_200001ee": {
                    "1": "bool_constant7"
                },
                "FUN_08000be8": {
                    "1": "apply_flags",
                    "2": "set_option"
                },
                "FUN_08000ef8": {
                    "1": "check_flags",
                    "3": "configure_permissions",
                    "4": "configure_options",
                    "6": "process_flags"
                },
                "FUN_080036ac": {
                    "1": "get_condition_value",
                    "2": "get_option_value"
                },
                "FUN_08008a6c": {
                    "1": "check_license",
                    "3": "check_option",
                    "4": "check_condition"
                },
                "bVar1": {
                    "1": "flag2",
                    "2": "category_permissions",
                    "3": "flag1",
                    "5": "flag_byte"
                },
                "bVar2": {
                    "1": "flag_byte2"
                },
                "bVar3": {
                    "1": "bool_result",
                    "2": "has_permission",
                    "3": "flag"
                },
                "bVar4": {
                    "1": "result",
                    "2": "permissions",
                    "3": "new_flags"
                },
                "char FUN_08008a6c": {
                    "1": "perform_operation"
                },
                "iVar1": {
                    "1": "num"
                },
                "iVar2": {
                    "1": "flag_value",
                    "18": "result"
                },
                "param_1": {
                    "1": "condition_type",
                    "2": "flag_group",
                    "3": "flag_type",
                    "6": "category"
                },
                "param_2": {
                    "1": "config_flags",
                    "10": "flags",
                    "2": "flag_value"
                },
                "param_3": {
                    "1": "additional_param",
                    "10": "param_3",
                    "2": "value",
                    "4": "param3"
                },
                "param_4": {
                    "1": "undefined",
                    "3": "param4",
                    "8": "param_4"
                },
                "uint FUN_080036ac": {
                    "1": "check_condition"
                },
                "void FUN_08000be8": {
                    "1": "set_value"
                }
            },
            "called": [
                "FUN_08000be8",
                "FUN_080036ac",
                "FUN_08008a6c"
            ],
            "calling": [
                "FUN_080022f8"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001ade) */\n/* WARNING: Removing unreachable block (ram,0x08001a4a) */\n/* WARNING: Removing unreachable block (ram,0x080019b6) */\n/* WARNING: Removing unreachable block (ram,0x08001912) */\n/* WARNING: Removing unreachable block (ram,0x08001866) */\n/* WARNING: Removing unreachable block (ram,0x080017d2) */\n/* WARNING: Removing unreachable block (ram,0x0800173e) */\n/* WARNING: Removing unreachable block (ram,0x0800169a) */\n/* WARNING: Removing unreachable block (ram,0x080015ee) */\n/* WARNING: Removing unreachable block (ram,0x0800155a) */\n/* WARNING: Removing unreachable block (ram,0x08001490) */\n/* WARNING: Removing unreachable block (ram,0x080014a2) */\n/* WARNING: Removing unreachable block (ram,0x080014e4) */\n/* WARNING: Removing unreachable block (ram,0x080014b0) */\n/* WARNING: Removing unreachable block (ram,0x080014ba) */\n/* WARNING: Removing unreachable block (ram,0x080014e8) */\n/* WARNING: Removing unreachable block (ram,0x080014c2) */\n/* WARNING: Removing unreachable block (ram,0x080014b6) */\n/* WARNING: Removing unreachable block (ram,0x08001496) */\n/* WARNING: Removing unreachable block (ram,0x08001430) */\n/* WARNING: Removing unreachable block (ram,0x08001376) */\n/* WARNING: Removing unreachable block (ram,0x080012e2) */\n/* WARNING: Removing unreachable block (ram,0x0800124e) */\n/* WARNING: Removing unreachable block (ram,0x080011b8) */\n/* WARNING: Removing unreachable block (ram,0x08001100) */\n/* WARNING: Removing unreachable block (ram,0x0800106c) */\n/* WARNING: Removing unreachable block (ram,0x08000fd8) */\n/* WARNING: Removing unreachable block (ram,0x08000f42) */\n/* WARNING: Removing unreachable block (ram,0x08000f8e) */\n/* WARNING: Removing unreachable block (ram,0x08001022) */\n/* WARNING: Removing unreachable block (ram,0x080010b6) */\n/* WARNING: Removing unreachable block (ram,0x0800114a) */\n/* WARNING: Removing unreachable block (ram,0x08001204) */\n/* WARNING: Removing unreachable block (ram,0x08001298) */\n/* WARNING: Removing unreachable block (ram,0x0800132c) */\n/* WARNING: Removing unreachable block (ram,0x080013c0) */\n/* WARNING: Removing unreachable block (ram,0x0800147c) */\n/* WARNING: Removing unreachable block (ram,0x08001510) */\n/* WARNING: Removing unreachable block (ram,0x080015a4) */\n/* WARNING: Removing unreachable block (ram,0x08001638) */\n/* WARNING: Removing unreachable block (ram,0x080016f4) */\n/* WARNING: Removing unreachable block (ram,0x08001788) */\n/* WARNING: Removing unreachable block (ram,0x0800181c) */\n/* WARNING: Removing unreachable block (ram,0x080018b0) */\n/* WARNING: Removing unreachable block (ram,0x0800196c) */\n/* WARNING: Removing unreachable block (ram,0x08001a00) */\n/* WARNING: Removing unreachable block (ram,0x08001a94) */\n/* WARNING: Removing unreachable block (ram,0x08001b28) */\n/* WARNING: Removing unreachable block (ram,0x080014ca) */\n\nvoid process_flags_08000ef8(void)\n\n{\n  byte flag_byte;\n  int result;\n  bool flag;\n  byte new_flags;\n  \n  flag_byte = DAT_20000174;\n  if (DAT_200001e8 != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      new_flags = 0;\n    }\n    else {\n      result = FUN_080036ac(3);\n      if (result == 1) {\n        new_flags = 0;\n      }\n      else if ((flag_byte & 1) == 0) {\n        new_flags = 0;\n      }\n      else {\n        result = FUN_08008a6c(0);\n        if (result == 0) {\n          new_flags = 0;\n        }\n        else {\n          new_flags = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(2);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 2) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(1);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(10);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 4) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(2);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x13);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 8) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(3);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x15);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 0x10) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(4);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x14);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 0x20) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(5);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x1a);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 0x40) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(6);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(8);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 0x80) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(7);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 0x80;\n    }\n    FUN_08000be8(0,new_flags);\n  }\n  flag_byte = DAT_20000175;\n  if (DAT_200001e9 != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      new_flags = 0;\n    }\n    else {\n      result = FUN_080036ac(9);\n      if (result == 1) {\n        new_flags = 0;\n      }\n      else if ((flag_byte & 1) == 0) {\n        new_flags = 0;\n      }\n      else {\n        result = FUN_08008a6c(8);\n        if (result == 0) {\n          new_flags = 0;\n        }\n        else {\n          new_flags = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x27);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 2) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(9);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x16);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 4) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(10);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(7);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 8) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0xb);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(6);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 0x10) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0xc);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(5);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 0x20) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0xd);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x19);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 0x40) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0xe);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x18);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 0x80) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0xf);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 0x80;\n    }\n    FUN_08000be8(1,new_flags,0);\n  }\n  flag_byte = DAT_20000176;\n  if (DAT_200001ea != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      new_flags = 0;\n    }\n    else {\n      result = FUN_080036ac(0x2a);\n      if (result == 1) {\n        new_flags = 0;\n      }\n      else if ((flag_byte & 1) == 0) {\n        new_flags = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x10);\n        if (result == 0) {\n          new_flags = 0;\n        }\n        else {\n          new_flags = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x2c);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 2) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0x11);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0xd);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 8) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0x13);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0xe);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 0x10) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0x14);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0xf);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 0x20) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0x15);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x17);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 0x40) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0x16);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x2d);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 0x80) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0x17);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 0x80;\n    }\n    FUN_08000be8(2,new_flags,0);\n  }\n  flag_byte = DAT_20000177;\n  if (DAT_200001eb != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      new_flags = 0;\n    }\n    else {\n      result = FUN_080036ac(0x2e);\n      if (result == 1) {\n        new_flags = 0;\n      }\n      else if ((flag_byte & 1) == 0) {\n        new_flags = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x18);\n        if (result == 0) {\n          new_flags = 0;\n        }\n        else {\n          new_flags = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x2f);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 2) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0x19);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x30);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 4) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1a);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x31);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 8) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1b);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x22);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 0x10) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1c);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x23);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 0x20) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1d);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x2b);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 0x40) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1e);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x32);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 0x80) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1f);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 0x80;\n    }\n    FUN_08000be8(3,new_flags,0);\n  }\n  flag_byte = DAT_20000178;\n  if (DAT_200001ec != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      new_flags = 0;\n    }\n    else {\n      result = FUN_080036ac(0x29);\n      if (result == 1) {\n        new_flags = 0;\n      }\n      else if ((flag_byte & 1) == 0) {\n        new_flags = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x20);\n        if (result == 0) {\n          new_flags = 0;\n        }\n        else {\n          new_flags = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x28);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 2) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0x21);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x26);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 4) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0x22);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x25);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 8) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0x23);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0xc);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 0x10) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0x24);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0xb);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 0x20) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0x25);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x1c);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 0x40) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0x26);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      flag = false;\n    }\n    else {\n      result = FUN_080036ac(0x1b);\n      if (result == 1) {\n        flag = false;\n      }\n      else if ((flag_byte & 0x80) == 0) {\n        flag = false;\n      }\n      else {\n        result = FUN_08008a6c(0x27);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    if (flag) {\n      new_flags = new_flags | 0x80;\n    }\n    FUN_08000be8(4,new_flags,0);\n  }\n  return;\n}\n\n",
            "current_name": "process_flags_08000ef8",
            "entrypoint": "0x08000ef8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000ef8": "process_flags_08000ef8",
                "bVar1": "flag_byte",
                "bVar3": "flag",
                "bVar4": "new_flags",
                "iVar2": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001b48": {
            "additional_data": {
                "FUN_0800018c": {
                    "1": "disable_feature",
                    "2": "disable_interrupts",
                    "3": "finalize_initialization"
                },
                "FUN_08000aec": {
                    "1": "initialize_gpio",
                    "13": "perform_initialization",
                    "2": "enable_gateway",
                    "3": "execute_initialization"
                },
                "FUN_08001b48": {
                    "1": "initiate_firmware_loading",
                    "10": "initialize_gateway",
                    "19": "initialize_firmware"
                },
                "FUN_08002e44": {
                    "1": "initialize_data",
                    "10": "load_firmware",
                    "2": "set_firmware_file_path",
                    "6": "set_firmware_path"
                },
                "FUN_08002f2c": {
                    "1": "configure_settings",
                    "2": "send_data",
                    "3": "configure_device",
                    "4": "configure_firmware"
                },
                "FUN_08002f84": {
                    "1": "send_command_with_value",
                    "2": "set_firmware_parameter",
                    "3": "configure_device"
                },
                "FUN_08002f94": {
                    "1": "set_device_config",
                    "2": "execute_task"
                },
                "FUN_08003048": {
                    "1": "configure_settings",
                    "2": "configure_communication",
                    "3": "configure_firmware"
                }
            },
            "called": [
                "FUN_08002f84",
                "FUN_08000aec",
                "FUN_08003048",
                "FUN_08002f94",
                "FUN_08002f2c",
                "FUN_08002e44",
                "FUN_0800018c"
            ],
            "calling": [
                "FUN_08008f1c"
            ],
            "code": "\nvoid initialize_firmware_08001b48(void)\n\n{\n  FUN_08002e44(&DAT_200003d4,\"/home/bo/p2im/p2im-real_firmware_scratch/Gateway/StandardFirmata.ino\",\n               2,5);\n  FUN_08002f2c(&DAT_200003d4,0xe0,0x8000215);\n  FUN_08002f2c(&DAT_200003d4,0x90,&LAB_080002ec_1);\n  FUN_08002f2c(&DAT_200003d4,0xc0,0x8000489);\n  FUN_08002f2c(&DAT_200003d4,0xd0,&LAB_08000c18_1);\n  FUN_08002f2c(&DAT_200003d4,0xf4,0x80005f9);\n  FUN_08002f2c(&DAT_200003d4,0xf5,&LAB_080001a8_1);\n  FUN_08002f94(&DAT_200003d4,0xf0,0x8001cd1);\n  FUN_08002f84(&DAT_200003d4,0xff,0x8000aed);\n  FUN_08003048(&DAT_200003d4,0xe100);\n  FUN_08000aec();\n  FUN_0800018c(0);\n  return;\n}\n\n",
            "current_name": "initialize_firmware_08001b48",
            "entrypoint": "0x08001b48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001b48": "initialize_firmware_08001b48"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001bf8": {
            "additional_data": {
                "FUN_08001bf8": {
                    "1": "extract_data_from_binary",
                    "2": "extract_data",
                    "22": "initialize_data",
                    "4": "process_data"
                },
                "FUN_0800288c": {
                    "1": "process_sub_function",
                    "17": "process_data",
                    "3": "copy_data"
                },
                "param_1": {
                    "1": "data_ptr_1",
                    "2": "data",
                    "3": "data_buffer",
                    "4": "data1",
                    "8": "data_pointer",
                    "9": "data_ptr"
                },
                "param_2": {
                    "1": "unknown_data",
                    "12": "unused_param",
                    "2": "unused_parameter",
                    "3": "data2",
                    "6": "unused"
                },
                "param_3": {
                    "1": "parameter_1",
                    "2": "size",
                    "3": "data_length"
                },
                "param_4": {
                    "1": "value_2",
                    "2": "offset",
                    "3": "data4"
                }
            },
            "called": [
                "FUN_0800288c"
            ],
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18"
            ],
            "code": "\nvoid initialize_data_08001bf8(undefined4 data_ptr,undefined4 unused_param,undefined4 data3,undefined4 data4)\n\n{\n  FUN_0800288c(&DAT_20000314,data_ptr,data3,data4,data4);\n  return;\n}\n\n",
            "current_name": "initialize_data_08001bf8",
            "entrypoint": "0x08001bf8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001bf8": "initialize_data_08001bf8",
                "param_1": "data_ptr",
                "param_2": "unused_param",
                "param_3": "data3",
                "param_4": "data4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001c08": {
            "additional_data": {
                "FUN_08001c08": {
                    "1": "calculate_return_value",
                    "13": "initialize_data",
                    "2": "extract_data",
                    "4": "extract_data_from_binary"
                },
                "FUN_08002720": {
                    "1": "get_data",
                    "2": "retrieve_data",
                    "3": "process_data"
                },
                "uVar1": {
                    "1": "status",
                    "13": "result",
                    "2": "return_value"
                }
            },
            "called": [
                "FUN_08002720"
            ],
            "calling": [
                "FUN_08001c18"
            ],
            "code": "\nundefined initialize_data_08001c08(void)\n\n{\n  undefined result;\n  \n  result = FUN_08002720(&DAT_20000314);\n  return result;\n}\n\n",
            "current_name": "initialize_data_08001c08",
            "entrypoint": "0x08001c08",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001c08": "initialize_data_08001c08",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001c18": {
            "additional_data": {
                "&DAT_20000130": {
                    "1": "device_address_char"
                },
                "&DAT_20000131": {
                    "1": "byte_to_receive_char"
                },
                "&DAT_20000132": {
                    "1": "received_data"
                },
                "&DAT_20000314": {
                    "1": "device_data"
                },
                "&DAT_200003d4": {
                    "1": "error_message"
                },
                "DAT_20000130": {
                    "1": "source_address_byte",
                    "2": "processed_device_address"
                },
                "DAT_20000131": {
                    "1": "i2c_byte_count",
                    "2": "byte_count_byte"
                },
                "DAT_20000132": {
                    "1": "received_buffer",
                    "2": "received_bytes",
                    "6": "received_data"
                },
                "DAT_20000314": {
                    "1": "i2c_buffer",
                    "2": "i2c_data_buffer",
                    "3": "data_buffer"
                },
                "DAT_200003d4": {
                    "3": "error_message"
                },
                "FUN_08001bf8": {
                    "1": "initialize_communication",
                    "2": "initialize_data",
                    "3": "initialize_device"
                },
                "FUN_08001c08": {
                    "1": "fetch_byte",
                    "2": "receive_data",
                    "4": "read_byte",
                    "5": "receive_byte"
                },
                "FUN_08001c18": {
                    "1": "handle_i2_c_data",
                    "2": "process_data",
                    "22": "process_i2_c_data",
                    "4": "process_received_data"
                },
                "FUN_0800270c": {
                    "1": "get_received_bytes",
                    "2": "get_available_bytes",
                    "4": "get_received_count"
                },
                "FUN_08002a30": {
                    "1": "initialize_data",
                    "2": "initialize_device",
                    "4": "set_device_address"
                },
                "FUN_08002a58": {
                    "1": "process_extra_info",
                    "2": "set_device_address",
                    "3": "configure_device"
                },
                "FUN_08002c14": {
                    "1": "check_data_length",
                    "2": "initialize_device",
                    "7": "process_data"
                },
                "FUN_08002f0a": {
                    "1": "print_info_message",
                    "2": "report_success"
                },
                "FUN_08002f14": {
                    "1": "show_error_message",
                    "13": "print_error_message",
                    "2": "report_error_too_many_bytes"
                },
                "bVar4": {
                    "1": "is_data_valid",
                    "2": "is_bytes_received",
                    "3": "is_data_received",
                    "5": "is_received"
                },
                "iVar2": {
                    "1": "received_byte_count",
                    "3": "bytes_received",
                    "5": "received_length",
                    "7": "received_bytes"
                },
                "iVar3": {
                    "1": "read_status",
                    "2": "bytes_received",
                    "3": "byte_status"
                },
                "param_1": {
                    "1": "data_pin",
                    "2": "device_id",
                    "20": "device_address",
                    "3": "address"
                },
                "param_2": {
                    "1": "read_size",
                    "2": "command",
                    "6": "byte_count"
                },
                "param_3": {
                    "1": "received_data_size",
                    "2": "expected_byte_count",
                    "3": "expected_size",
                    "6": "expected_count",
                    "8": "expected_bytes"
                },
                "param_4": {
                    "1": "data_end_address",
                    "2": "buffer",
                    "3": "additional_data",
                    "4": "data_buffer"
                },
                "uVar1": {
                    "1": "byte_value",
                    "11": "received_data",
                    "15": "received_byte"
                }
            },
            "called": [
                "FUN_08002f14",
                "FUN_08002f0a",
                "FUN_0800270c",
                "FUN_08002a58",
                "FUN_08001bf8",
                "FUN_08002c14",
                "FUN_08002a30",
                "FUN_08001c08"
            ],
            "calling": [
                "FUN_08001cd0",
                "FUN_080022f8"
            ],
            "code": "\nvoid process_i2_c_data_08001c18(undefined4 device_address,uint byte_count,int expected_bytes,undefined4 data_buffer)\n\n{\n  undefined received_byte;\n  int received_bytes;\n  int byte_status;\n  bool is_received;\n  \n  if (byte_count == 0xffffffff) {\n    byte_count = 0;\n  }\n  else {\n    FUN_08002a30(&DAT_20000314,device_address);\n    FUN_08001bf8(byte_count & 0xff);\n    FUN_08002a58(&DAT_20000314,data_buffer);\n  }\n  FUN_08002c14(&DAT_20000314,device_address,expected_bytes);\n  received_bytes = FUN_0800270c(&DAT_20000314);\n  if (expected_bytes < received_bytes) {\n    FUN_08002f14(&DAT_200003d4,\"I2C: Too many bytes received\");\n  }\n  else {\n    received_bytes = FUN_0800270c(&DAT_20000314);\n    if (received_bytes < expected_bytes) {\n      FUN_08002f14(&DAT_200003d4,\"I2C: Too few bytes received\");\n    }\n  }\n  DAT_20000130 = (undefined)device_address;\n  DAT_20000131 = (undefined)byte_count;\n  received_bytes = 0;\n  while( true ) {\n    if (received_bytes < expected_bytes) {\n      byte_status = FUN_0800270c(&DAT_20000314);\n      if (byte_status == 0) {\n        is_received = false;\n      }\n      else {\n        is_received = true;\n      }\n    }\n    else {\n      is_received = false;\n    }\n    if (!is_received) break;\n    received_byte = FUN_08001c08();\n    (&DAT_20000132)[received_bytes] = received_byte;\n    received_bytes = received_bytes + 1;\n  }\n  FUN_08002f0a(&DAT_200003d4,0x77,expected_bytes + 2U & 0xff,&DAT_20000130);\n  return;\n}\n\n",
            "current_name": "process_i2_c_data_08001c18",
            "entrypoint": "0x08001c18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001c18": "process_i2_c_data_08001c18",
                "bVar4": "is_received",
                "iVar2": "received_bytes",
                "iVar3": "byte_status",
                "param_1": "device_address",
                "param_2": "byte_count",
                "param_3": "expected_bytes",
                "param_4": "data_buffer",
                "uVar1": "received_byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "additional_data": {
                "&DAT_200003d4": {
                    "1": "data_buffer"
                },
                "DATA_20000004": {
                    "1": "int_value4"
                },
                "DATA_20000008": {
                    "1": "int_value6"
                },
                "DATA_2000012c": {
                    "1": "int_value5"
                },
                "DATA_20000188": {
                    "1": "array5"
                },
                "DATA_2000018c": {
                    "1": "array6"
                },
                "DATA_20000190": {
                    "1": "array7"
                },
                "DATA_20000191": {
                    "1": "array8"
                },
                "DATA_200001f0": {
                    "1": "array3"
                },
                "DATA_2000022c": {
                    "1": "array4"
                },
                "DAT_0800a69c": {
                    "1": "data3"
                },
                "DAT_0800a6cc": {
                    "1": "data4"
                },
                "DAT_0800a908": {
                    "1": "array1"
                },
                "DAT_20000004": {
                    "1": "data14"
                },
                "DAT_20000008": {
                    "1": "data16"
                },
                "DAT_20000170": {
                    "1": "bool_value2"
                },
                "DAT_20000188": {
                    "1": "byte_array1"
                },
                "DAT_2000018c": {
                    "1": "int_array1"
                },
                "DAT_20000190": {
                    "1": "byte_array2"
                },
                "DAT_20000191": {
                    "1": "data9"
                },
                "DAT_200001f0": {
                    "1": "byte_data"
                },
                "DAT_2000022c": {
                    "1": "int_value4"
                },
                "DAT_2000024b": {
                    "1": "data2"
                },
                "DAT_20000314": {
                    "1": "data_buffer2"
                },
                "DAT_20000348": {
                    "1": "data12"
                },
                "DAT_2000034c": {
                    "1": "data13"
                },
                "DAT_20000350": {
                    "1": "data11"
                },
                "DAT_200003d4": {
                    "1": "output_buffer"
                },
                "FUNC_08000a64": {
                    "1": "initialize_code"
                },
                "FUN_08000214": {
                    "1": "process_value2"
                },
                "FUN_08000500": {
                    "1": "action2"
                },
                "FUN_08000588": {
                    "1": "process_value1"
                },
                "FUN_080005f8": {
                    "1": "perform_operation"
                },
                "FUN_08000a64": {
                    "1": "process_data14",
                    "3": "initialize"
                },
                "FUN_08001bf8": {
                    "1": "perform_action",
                    "2": "process_data2",
                    "4": "process_data"
                },
                "FUN_08001c18": {
                    "1": "handle_data",
                    "2": "process_data4"
                },
                "FUN_08001cd0": {
                    "1": "process_request",
                    "12": "process_data",
                    "2": "process_binary_data",
                    "4": "process_command"
                },
                "FUN_080026f8": {
                    "1": "process_data13",
                    "2": "get_data"
                },
                "FUN_08002a30": {
                    "1": "process_data8",
                    "2": "initialize_data"
                },
                "FUN_08002ac0": {
                    "1": "update_values",
                    "2": "process_data3"
                },
                "FUN_08002f14": {
                    "1": "display_error_message",
                    "4": "print_error_message"
                },
                "FUN_08002f1e": {
                    "1": "send_byte",
                    "7": "send_data"
                },
                "FUN_08002fa0": {
                    "1": "process_data5"
                },
                "FUN_08002fba": {
                    "1": "get_masked_value"
                },
                "FUN_080036ac": {
                    "1": "check_data",
                    "3": "check_value",
                    "4": "check_condition"
                },
                "FUN_0800738a": {
                    "1": "search_array"
                },
                "bVar1": {
                    "1": "byte_value1",
                    "19": "byte1",
                    "4": "first_byte",
                    "7": "byte_var1"
                },
                "bVar12": {
                    "1": "bool_variable",
                    "13": "bool_var",
                    "2": "bool_value",
                    "3": "flag",
                    "6": "bool1"
                },
                "bVar2": {
                    "1": "byte_value2",
                    "19": "byte2",
                    "4": "second_byte",
                    "7": "byte_var2"
                },
                "bVar3": {
                    "1": "byte_value3",
                    "19": "byte3",
                    "4": "third_byte",
                    "7": "byte_var3"
                },
                "bVar5": {
                    "1": "byte_value",
                    "17": "byte4",
                    "2": "byte_var4",
                    "3": "fourth_byte",
                    "5": "byte_var5"
                },
                "cVar6": {
                    "1": "char_variable",
                    "10": "char1",
                    "14": "char_var",
                    "2": "char_var6"
                },
                "iVar11": {
                    "1": "i_var3",
                    "3": "loop_var3",
                    "5": "int3",
                    "9": "int_var3"
                },
                "iVar7": {
                    "1": "integer_var",
                    "3": "int_value1",
                    "4": "index",
                    "5": "int_var",
                    "9": "int_var1"
                },
                "iVar8": {
                    "1": "var2",
                    "12": "int_var2",
                    "3": "int_value2",
                    "5": "int2"
                },
                "param_1": {
                    "1": "function_type",
                    "16": "opcode",
                    "4": "command_type",
                    "5": "command"
                },
                "param_2": {
                    "1": "input_length",
                    "14": "length",
                    "2": "param_size",
                    "3": "param_length",
                    "8": "size"
                },
                "param_3": {
                    "1": "input_data",
                    "2": "param_array",
                    "23": "data"
                },
                "param_4": {
                    "1": "unknown_parameter",
                    "10": "param",
                    "11": "param_4",
                    "5": "param4"
                },
                "uVar10": {
                    "1": "temp_index2",
                    "3": "uint_value2",
                    "4": "uint2",
                    "5": "loop_var2",
                    "8": "uint_var2"
                },
                "uVar4": {
                    "1": "uint_var4",
                    "22": "result"
                },
                "uVar9": {
                    "1": "unsigned_var",
                    "2": "uint_var",
                    "3": "uint_value1",
                    "4": "uint1",
                    "5": "loop_var1",
                    "6": "uint_var1"
                }
            },
            "called": [
                "FUN_08002f1e",
                "FUN_08002f14",
                "FUN_080036ac",
                "FUN_08001bf8",
                "FUN_0800738a",
                "FUN_08002ac0",
                "FUN_08001c18",
                "FUN_08002fba",
                "FUN_08002a30",
                "FUN_080005f8",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08000a64",
                "FUN_08000500",
                "FUN_08000214",
                "FUN_080026f8"
            ],
            "calling": [],
            "code": "\nvoid process_data_08001cd0(undefined4 opcode,int length,byte *data,undefined4 param_4)\n\n{\n  byte byte1;\n  byte byte2;\n  byte byte3;\n  undefined4 result;\n  byte byte4;\n  char char_var;\n  int int_var1;\n  int int_var2;\n  uint uint_var1;\n  uint uint_var2;\n  int int_var3;\n  bool bool_var;\n  \n  switch(opcode) {\n  case 0x69:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6a);\n    for (uint_var1 = 0; uint_var1 < 0x3c; uint_var1 = uint_var1 + 1 & 0xff) {\n      uint_var2 = uint_var1 - 0x2e & 0xff;\n      if (uint_var2 < 0xe) {\n        if (uint_var1 < 0x3c) {\n          int_var1 = (int)(char)(&DAT_0800a908)[uint_var1];\n        }\n        else {\n          int_var1 = -1;\n        }\n        int_var1 = FUN_080036ac(int_var1);\n        if (int_var1 == 0) {\n          uint_var2 = 0x7f;\n        }\n        else {\n          if (uint_var1 < 0x3c) {\n            int_var1 = (int)(char)(&DAT_0800a908)[uint_var1];\n          }\n          else {\n            int_var1 = -1;\n          }\n          int_var1 = FUN_080036ac(int_var1);\n          if (int_var1 == 1) {\n            uint_var2 = 0x7f;\n          }\n        }\n      }\n      else {\n        uint_var2 = 0x7f;\n      }\n      FUN_08002f1e(&DAT_200003d4,uint_var2);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    break;\n  case 0x6b:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6c);\n    for (uint_var1 = 0; uint_var1 < 0x3c; uint_var1 = uint_var1 + 1 & 0xff) {\n      if (uint_var1 < 0x3c) {\n        if ((&DAT_0800a908)[uint_var1] == -1) {\n          bool_var = false;\n        }\n        else {\n          int_var1 = FUN_080036ac();\n          if (int_var1 == 0) {\n            bool_var = false;\n          }\n          else {\n            int_var1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uint_var1]);\n            if (int_var1 == 1) {\n              bool_var = false;\n            }\n            else {\n              bool_var = true;\n            }\n          }\n        }\n      }\n      else {\n        bool_var = false;\n      }\n      if (bool_var) {\n        FUN_08002f1e(&DAT_200003d4,0);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,0xb);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      if ((uint_var1 - 0x2e & 0xff) < 0xe) {\n        if (uint_var1 < 0x3c) {\n          int_var1 = (int)(char)(&DAT_0800a908)[uint_var1];\n        }\n        else {\n          int_var1 = -1;\n        }\n        int_var1 = FUN_080036ac(int_var1);\n        if (int_var1 == 0) {\n          bool_var = false;\n        }\n        else {\n          if (uint_var1 < 0x3c) {\n            int_var1 = (int)(char)(&DAT_0800a908)[uint_var1];\n          }\n          else {\n            int_var1 = -1;\n          }\n          int_var1 = FUN_080036ac(int_var1);\n          if (int_var1 == 1) {\n            bool_var = false;\n          }\n          else {\n            bool_var = true;\n          }\n        }\n      }\n      else {\n        bool_var = false;\n      }\n      if (bool_var) {\n        FUN_08002f1e(&DAT_200003d4,2);\n        FUN_08002f1e(&DAT_200003d4,10);\n      }\n      if (uint_var1 < 0x3c) {\n        if ((&DAT_0800a908)[uint_var1] == -1) {\n          int_var1 = 0;\n        }\n        else {\n          int_var1 = FUN_080036ac();\n          if (int_var1 == 0) {\n            int_var1 = 0;\n          }\n          else {\n            int_var1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uint_var1]);\n            if (int_var1 == 1) {\n              int_var1 = 0;\n            }\n            else {\n              int_var1 = FUN_0800738a((int)(char)(&DAT_0800a908)[uint_var1],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        int_var1 = 0;\n      }\n      if (int_var1 != 0) {\n        FUN_08002f1e(&DAT_200003d4,3);\n        FUN_08002f1e(&DAT_200003d4,8);\n      }\n      if (uint_var1 < 0x3c) {\n        if ((&DAT_0800a908)[uint_var1] == -1) {\n          bool_var = false;\n        }\n        else {\n          int_var1 = FUN_080036ac();\n          if (int_var1 == 0) {\n            bool_var = false;\n          }\n          else {\n            int_var1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uint_var1]);\n            if (int_var1 == 1) {\n              bool_var = false;\n            }\n            else {\n              bool_var = true;\n            }\n          }\n        }\n      }\n      else {\n        bool_var = false;\n      }\n      if (bool_var) {\n        FUN_08002f1e(&DAT_200003d4,4);\n        FUN_08002f1e(&DAT_200003d4,0xe);\n      }\n      if (uint_var1 < 0x3c) {\n        if ((&DAT_0800a908)[uint_var1] == -1) {\n          int_var1 = 0;\n        }\n        else {\n          int_var1 = FUN_080036ac();\n          if (int_var1 == 0) {\n            int_var1 = 0;\n          }\n          else {\n            int_var1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uint_var1]);\n            if (int_var1 == 1) {\n              int_var1 = 0;\n            }\n            else {\n              int_var1 = FUN_0800738a((int)(char)(&DAT_0800a908)[uint_var1],&DAT_0800a69c);\n              if (int_var1 == 0) {\n                int_var1 = FUN_0800738a((int)(char)(&DAT_0800a908)[uint_var1],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        int_var1 = 0;\n      }\n      if (int_var1 != 0) {\n        FUN_08002f1e(&DAT_200003d4,6);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      FUN_08002f1e(&DAT_200003d4,0x7f);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    return;\n  case 0x6d:\n    if (length != 0) {\n      byte1 = *data;\n      FUN_08002f1e(&DAT_200003d4,0xf0);\n      FUN_08002f1e(&DAT_200003d4,0x6e);\n      FUN_08002f1e(&DAT_200003d4,byte1);\n      if (byte1 < 0x3c) {\n        result = FUN_08002fa0(&DAT_200003d4,byte1);\n        FUN_08002f1e(&DAT_200003d4,result);\n        uint_var1 = FUN_08002fba(&DAT_200003d4,byte1);\n        FUN_08002f1e(&DAT_200003d4,uint_var1 & 0x7f);\n        uint_var1 = FUN_08002fba(&DAT_200003d4,byte1);\n        if ((uint_var1 & 0xff80) != 0) {\n          int_var1 = FUN_08002fba(&DAT_200003d4,byte1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(int_var1 << 0x12) >> 0x19);\n        }\n        uint_var1 = FUN_08002fba(&DAT_200003d4,byte1);\n        if ((uint_var1 & 0xc000) != 0) {\n          int_var1 = FUN_08002fba(&DAT_200003d4,byte1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(int_var1 << 0xb) >> 0x19);\n        }\n      }\n      FUN_08002f1e(&DAT_200003d4,0xf7);\n      return;\n    }\n    break;\n  case 0x6f:\n    if (1 < length) {\n      uint_var1 = (uint)data[1];\n      if (2 < length) {\n        uint_var1 = uint_var1 | (uint)data[2] << 7;\n      }\n      if (3 < length) {\n        uint_var1 = uint_var1 | (uint)data[3] << 0xe;\n      }\n      FUN_08000214(*data,uint_var1);\n      return;\n    }\n    break;\n  case 0x70:\n    if (4 < length) {\n      uint_var1 = (uint)*data;\n      byte1 = data[1];\n      byte4 = data[2];\n      byte2 = data[3];\n      byte3 = data[4];\n      if (uint_var1 < 0x3c) {\n        if ((&DAT_0800a908)[uint_var1] == -1) {\n          bool_var = false;\n        }\n        else {\n          int_var1 = FUN_080036ac();\n          if (int_var1 == 0) {\n            bool_var = false;\n          }\n          else {\n            int_var1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uint_var1]);\n            if (int_var1 == 1) {\n              bool_var = false;\n            }\n            else {\n              bool_var = true;\n            }\n          }\n        }\n      }\n      else {\n        bool_var = false;\n      }\n      if (bool_var) {\n        if ((byte)(&DAT_200001f0)[uint_var1] < 0xc) {\n          int_var1 = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[uint_var1] * 3);\n        }\n        else {\n          int_var1 = 0;\n        }\n        if (int_var1 != 0) {\n          FUN_08000588(uint_var1);\n        }\n        FUN_08000500(uint_var1,(uint)byte1 + (uint)byte4 * 0x80,(uint)byte2 + (uint)byte3 * 0x80);\n        FUN_080005f8(uint_var1,4);\n        return;\n      }\n    }\n    break;\n  case 0x76:\n    byte1 = data[1];\n    byte4 = byte1 & 0x18;\n    if ((byte1 & 0x20) != 0) {\n      FUN_08002f14(&DAT_200003d4,\"10-bit addressing not supported\",byte4,byte1,param_4);\n      return;\n    }\n    byte2 = *data;\n    bool_var = (byte1 & 0x40) == 0;\n    if (byte4 < 0x19) {\n      switch(byte4) {\n      case 0:\n        FUN_08002a30(&DAT_20000314,byte2);\n        for (uint_var1 = 2; (int)uint_var1 < length; uint_var1 = uint_var1 + 2 & 0xff) {\n          FUN_08001bf8(data[uint_var1 + 1] * -0x80 + data[uint_var1]);\n        }\n        FUN_08002ac0(&DAT_20000314);\n        return;\n      case 8:\n        if (length == 6) {\n          int_var1 = (uint)data[2] + (uint)data[3] * 0x80;\n          char_var = data[4] + data[5] * -0x80;\n        }\n        else {\n          char_var = data[2] + data[3] * -0x80;\n          int_var1 = -1;\n        }\n        FUN_08001c18(byte2,int_var1,char_var);\n        return;\n      case 0x10:\n        if (DAT_20000004 + 1 < 8) {\n          if (length == 6) {\n            int_var1 = (uint)data[2] + (uint)data[3] * 0x80;\n            char_var = data[4] + data[5] * -0x80;\n          }\n          else {\n            char_var = data[2] + data[3] * -0x80;\n            int_var1 = -1;\n          }\n          DAT_20000004 = DAT_20000004 + '\\x01';\n          int_var2 = (int)DAT_20000004;\n          int_var3 = int_var2 * 0xc;\n          (&DAT_20000188)[int_var3] = byte2;\n          (&DAT_2000018c)[int_var2 * 3] = int_var1;\n          (&DAT_20000190)[int_var3] = char_var;\n          (&DAT_20000191)[int_var3] = bool_var;\n          return;\n        }\n        FUN_08002f14(&DAT_200003d4,\"too many queries\",(int)DAT_20000004,bool_var,param_4);\n        return;\n      case 0x18:\n        if (DAT_20000004 < 1) {\n          DAT_20000004 = 0xff;\n          return;\n        }\n      }\n      for (uint_var1 = 0; int_var1 = DAT_20000004 + 1, (int)uint_var1 < int_var1; uint_var1 = uint_var1 + 1 & 0xff) {\n        if (byte2 == (&DAT_20000188)[uint_var1 * 0xc]) goto LAB_08001e66;\n      }\n      uint_var1 = 0;\nLAB_08001e66:\n      for (; (int)uint_var1 < int_var1; uint_var1 = uint_var1 + 1 & 0xff) {\n        if (uint_var1 < 8) {\n          int_var2 = (uint_var1 + 1) * 0xc;\n          int_var3 = uint_var1 * 0xc;\n          (&DAT_20000188)[int_var3] = (&DAT_20000188)[int_var2];\n          (&DAT_2000018c)[uint_var1 * 3] = (&DAT_2000018c)[(uint_var1 + 1) * 3];\n          (&DAT_20000190)[int_var3] = (&DAT_20000190)[int_var2];\n          (&DAT_20000191)[int_var3] = (&DAT_20000191)[int_var2];\n        }\n      }\n      DAT_20000004 = DAT_20000004 + -1;\n      return;\n    }\n    break;\n  case 0x78:\n    int_var1 = (uint)*data + (uint)data[1] * 0x80;\n    if ((1 < length) && (int_var1 != 0)) {\n      DAT_2000012c = int_var1;\n    }\n    if (DAT_20000170 == '\\0') {\n      FUNC_08000a64();\n      return;\n    }\n    break;\n  case 0x7a:\n    if ((1 < length) &&\n       (DAT_20000008 = (uint)*data + (uint)data[1] * 0x80, DAT_20000008 == 0)) {\n      DAT_20000008 = 1;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08001cd0",
            "entrypoint": "0x08001cd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001cd0": "process_data_08001cd0",
                "bVar1": "byte1",
                "bVar12": "bool_var",
                "bVar2": "byte2",
                "bVar3": "byte3",
                "bVar5": "byte4",
                "cVar6": "char_var",
                "iVar11": "int_var3",
                "iVar7": "int_var1",
                "iVar8": "int_var2",
                "param_1": "opcode",
                "param_2": "length",
                "param_3": "data",
                "uVar10": "uint_var2",
                "uVar4": "result",
                "uVar9": "uint_var1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080022f8": {
            "additional_data": {
                "DAT_0800a908": {
                    "1": "input_buffer"
                },
                "DAT_20000004": {
                    "1": "array_size"
                },
                "DAT_20000008": {
                    "1": "input_size",
                    "2": "threshold"
                },
                "DAT_20000114": {
                    "1": "flags"
                },
                "DAT_20000118": {
                    "1": "data_count",
                    "2": "total_size"
                },
                "DAT_2000017c": {
                    "1": "processed_size"
                },
                "DAT_20000188": {
                    "1": "array1"
                },
                "DAT_2000018c": {
                    "1": "array2"
                },
                "DAT_20000190": {
                    "1": "array3"
                },
                "DAT_20000191": {
                    "1": "array4"
                },
                "DAT_200003d4": {
                    "1": "data_buffer",
                    "2": "data"
                },
                "FUNC_08002ed2": {
                    "1": "process_data_match"
                },
                "FUN_08000ef8": {
                    "1": "initialize_system",
                    "22": "initialize",
                    "3": "initialize_data"
                },
                "FUN_08001c18": {
                    "1": "process_data_entry",
                    "2": "process_element",
                    "3": "perform_operation",
                    "4": "process_data"
                },
                "FUN_080022f8": {
                    "1": "update_data",
                    "2": "initialize_and_process_data",
                    "21": "process_data"
                },
                "FUN_08002ec4": {
                    "1": "has_data",
                    "3": "get_next_entry",
                    "5": "get_next_data",
                    "7": "get_data"
                },
                "FUN_08002ed2": {
                    "1": "perform_operation",
                    "2": "process_element",
                    "3": "process_data_entry",
                    "5": "process_data"
                },
                "FUN_08002ef2": {
                    "1": "update_data_item",
                    "2": "update_data_entry",
                    "21": "update_data"
                },
                "FUN_08002fa0": {
                    "1": "check_entry_type",
                    "16": "check_condition",
                    "3": "check_data"
                },
                "FUN_080036ac": {
                    "1": "is_data_valid",
                    "2": "validate_data",
                    "3": "evaluate_expression"
                },
                "FUN_080036ac__iVar2": {
                    "1": "check_condition__input"
                },
                "FUN_08008880": {
                    "1": "calculate_hash",
                    "12": "calculate_value",
                    "2": "transform_data",
                    "3": "generate_value"
                },
                "FUN_08008abc": {
                    "1": "get_total_size",
                    "2": "get_data_length",
                    "3": "calculate_threshold"
                },
                "bVar1": {
                    "1": "is_condition_met",
                    "4": "is_valid"
                },
                "iVar2": {
                    "1": "return_value",
                    "2": "result",
                    "3": "index"
                },
                "iVar2__checkCondition": {
                    "1": "check_condition__result"
                },
                "param_1": {
                    "1": "input_data"
                },
                "uVar3": {
                    "1": "new_data",
                    "4": "result"
                },
                "uVar4": {
                    "1": "outer_index",
                    "2": "outer_loop_index"
                },
                "uVar5": {
                    "1": "modified_index",
                    "2": "inner_loop_index"
                }
            },
            "called": [
                "FUN_08002ed2",
                "FUN_08008abc",
                "FUN_08002fa0",
                "FUN_08008880",
                "FUN_080036ac",
                "FUN_08002ef2",
                "FUN_08001c18",
                "FUN_08002ec4",
                "FUN_08000ef8"
            ],
            "calling": [
                "FUN_08008f1c"
            ],
            "code": "\nvoid process_data_080022f8(void)\n\n{\n  bool is_valid;\n  int index;\n  undefined4 result;\n  uint outer_loop_index;\n  uint inner_loop_index;\n  \n  FUN_08000ef8();\n  while (index = FUN_08002ec4(&DAT_200003d4), index != 0) {\n    FUN_08002ed2(&DAT_200003d4);\n  }\n  DAT_20000118 = FUN_08008abc();\n  if (DAT_20000008 < (uint)(DAT_20000118 - DAT_2000017c)) {\n    DAT_2000017c = DAT_2000017c + DAT_20000008;\n    for (outer_loop_index = 0; outer_loop_index < 0x3c; outer_loop_index = outer_loop_index + 1 & 0xff) {\n      inner_loop_index = outer_loop_index - 0x2e & 0xff;\n      if (inner_loop_index < 0xe) {\n        if (outer_loop_index < 0x3c) {\n          index = (int)(char)(&DAT_0800a908)[outer_loop_index];\n        }\n        else {\n          index = -1;\n        }\n        index = FUN_080036ac(index);\n        if (index == 0) {\n          is_valid = false;\n        }\n        else {\n          if (outer_loop_index < 0x3c) {\n            index = (int)(char)(&DAT_0800a908)[outer_loop_index];\n          }\n          else {\n            index = -1;\n          }\n          index = FUN_080036ac(index);\n          if (index == 1) {\n            is_valid = false;\n          }\n          else {\n            index = FUN_08002fa0(&DAT_200003d4,outer_loop_index);\n            if (index == 2) {\n              is_valid = true;\n            }\n            else {\n              is_valid = false;\n            }\n          }\n        }\n      }\n      else {\n        is_valid = false;\n      }\n      if ((is_valid) && ((DAT_20000114 >> inner_loop_index & 1U) != 0)) {\n        result = FUN_08008880(inner_loop_index);\n        FUN_08002ef2(&DAT_200003d4,inner_loop_index,result);\n      }\n    }\n    if (-1 < DAT_20000004) {\n      for (outer_loop_index = 0; (int)outer_loop_index < DAT_20000004 + 1; outer_loop_index = outer_loop_index + 1 & 0xff) {\n        index = outer_loop_index * 0xc;\n        FUN_08001c18((&DAT_20000188)[index],(&DAT_2000018c)[outer_loop_index * 3],(&DAT_20000190)[index],\n                     (&DAT_20000191)[index]);\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_data_080022f8",
            "entrypoint": "0x080022f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080022f8": "process_data_080022f8",
                "bVar1": "is_valid",
                "iVar2": "index",
                "uVar3": "result",
                "uVar4": "outer_loop_index",
                "uVar5": "inner_loop_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002400": {
            "additional_data": {
                "0xb": {
                    "1": "max_iterations"
                },
                "FUN_08002400": {
                    "1": "check_for_bit_set",
                    "2": "check_bit_flag",
                    "3": "check_data_flag",
                    "4": "check_flag"
                },
                "param_1": {
                    "1": "value",
                    "2": "input_param",
                    "5": "input_index",
                    "8": "index"
                },
                "uVar1": {
                    "1": "iteration_index",
                    "19": "counter",
                    "2": "count",
                    "3": "iteration_count"
                }
            },
            "called": [],
            "calling": [
                "FUN_08002644",
                "FUN_080025ac"
            ],
            "code": "\nundefined4 check_flag_08002400(int input)\n\n{\n  uint counter;\n  \n  counter = 0;\n  while( true ) {\n    if (0xb < counter) {\n      return 0;\n    }\n    if (((&DAT_20000258)[(input * 0xc + counter) * 8] & 0x40) != 0) break;\n    counter = counter + 1 & 0xff;\n  }\n  return 1;\n}\n\n",
            "current_name": "check_flag_08002400",
            "entrypoint": "0x08002400",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002400": "check_flag_08002400",
                "param_1": "input",
                "uVar1": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800242c": {
            "additional_data": {
                "&LAB_08002444_1": {
                    "1": "timer_callback"
                },
                "FUN_0800242c": {
                    "1": "initialize_function",
                    "18": "initialize_connection",
                    "2": "initialize_connections",
                    "3": "initialize_timeout",
                    "4": "initialize_communication"
                },
                "FUN_08007648": {
                    "1": "open_connection",
                    "2": "set_timer",
                    "6": "establish_connection",
                    "7": "send_data"
                },
                "LAB_08002444_1": {
                    "1": "label"
                },
                "param_1": {
                    "1": "config_params",
                    "2": "param_1",
                    "3": "socket",
                    "7": "connection"
                },
                "param_2": {
                    "1": "connection_parameter2",
                    "17": "timeout",
                    "2": "param_2"
                },
                "param_3": {
                    "1": "connection_param3",
                    "11": "buffer_size",
                    "2": "param_3",
                    "3": "constant_value"
                },
                "param_4": {
                    "1": "config_param",
                    "10": "callback",
                    "2": "param_4",
                    "3": "callback_function"
                }
            },
            "called": [
                "FUN_08007648"
            ],
            "calling": [
                "FUN_080025ac"
            ],
            "code": "\nvoid initialize_connection_0800242c(undefined4 connection,undefined4 timeout,undefined4 buffer_size,undefined4 callback)\n\n{\n  FUN_08007648(connection,60000,0x5dc,timer_callback,callback);\n  return;\n}\n\n",
            "current_name": "initialize_connection_0800242c",
            "entrypoint": "0x0800242c",
            "imported": false,
            "improved": true,
            "renaming": {
                "&LAB_08002444_1": "timer_callback",
                "FUN_0800242c": "initialize_connection_0800242c",
                "LAB_08002444_1": "error_handler",
                "param_1": "connection",
                "param_2": "timeout",
                "param_3": "buffer_size",
                "param_4": "callback"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002578": {
            "additional_data": {
                "FUN_08002578": {
                    "1": "init_binary_processing",
                    "12": "initialize_system",
                    "2": "execute_main_function",
                    "4": "execute_initialization",
                    "8": "initialize_application"
                },
                "FUN_080076e0": {
                    "1": "handle_system_initialization",
                    "2": "perform_task",
                    "3": "execute_initialization",
                    "6": "perform_initialization"
                },
                "param_1": {
                    "1": "input_data"
                }
            },
            "called": [
                "FUN_080076e0"
            ],
            "calling": [
                "FUN_08002644"
            ],
            "code": "\nvoid initialize_system_08002578(void)\n\n{\n  FUN_080076e0();\n  return;\n}\n\n",
            "current_name": "initialize_system_08002578",
            "entrypoint": "0x08002578",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002578": "initialize_system_08002578"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002580": {
            "additional_data": {
                "&DAT_2000025c + uVar2 * 8": {
                    "1": "data_offset"
                },
                "(uint)DAT_20000250": {
                    "1": "input_data"
                },
                "(uint)DAT_20000250 + 1": {
                    "1": "new_data_index"
                },
                "*(undefined4 *)(&DAT_2000025c + uVar2 * 8)": {
                    "1": "data_entry"
                },
                "*param_1": {
                    "1": "output_value"
                },
                "FUN_08002580": {
                    "1": "set_byte",
                    "2": "initialize_variable",
                    "4": "set_byte_value",
                    "6": "update_data",
                    "8": "initialize_data"
                },
                "cVar1": {
                    "1": "new_data",
                    "12": "next_value",
                    "2": "next_byte",
                    "3": "incremented_value",
                    "6": "next_char"
                },
                "param_1": {
                    "1": "byte_data",
                    "2": "output",
                    "3": "byte_array",
                    "6": "output_buffer"
                },
                "uVar2": {
                    "1": "limit",
                    "2": "current_value",
                    "3": "counter",
                    "6": "data_size"
                }
            },
            "called": [],
            "calling": [
                "FUN_080004d4"
            ],
            "code": "\nvoid initialize_data_08002580(byte *output_buffer)\n\n{\n  char next_value;\n  uint data_size;\n  \n  data_size = (uint)DAT_20000250;\n  if (0xb < data_size) {\n    *output_buffer = 0xff;\n    return;\n  }\n  next_value = DAT_20000250 + 1;\n  *output_buffer = DAT_20000250;\n  DAT_20000250 = next_value;\n  *(undefined4 *)(&DAT_2000025c + data_size * 8) = 0x5dc;\n  return;\n}\n\n",
            "current_name": "initialize_data_08002580",
            "entrypoint": "0x08002580",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002580": "initialize_data_08002580",
                "cVar1": "next_value",
                "param_1": "output_buffer",
                "uVar2": "data_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080025ac": {
            "additional_data": {
                "DAT_20000258": {
                    "1": "global_array",
                    "3": "data_array"
                },
                "DAT_200002fc": {
                    "1": "some_data",
                    "3": "result"
                },
                "FUN_08002400": {
                    "1": "execute_case3",
                    "2": "reverse_data",
                    "4": "calculate_result"
                },
                "FUN_0800242c": {
                    "1": "process_data_helper2",
                    "2": "perform_action"
                },
                "FUN_080025ac": {
                    "1": "decode_and_process_data",
                    "10": "process_data",
                    "2": "extract_data"
                },
                "FUN_08008990": {
                    "1": "perform_operation",
                    "5": "process_data"
                },
                "iVar4": {
                    "1": "temp_var4",
                    "2": "temp1",
                    "3": "temp_var",
                    "4": "temp4",
                    "5": "var4"
                },
                "param_1": {
                    "1": "bytes_array",
                    "14": "data",
                    "2": "input_data",
                    "3": "byte_array"
                },
                "param_2": {
                    "1": "param2_value",
                    "2": "value1",
                    "3": "param_a",
                    "4": "param2",
                    "5": "param",
                    "9": "value"
                },
                "param_3": {
                    "1": "param_3",
                    "2": "value2",
                    "3": "param_b",
                    "4": "param3",
                    "5": "param2",
                    "9": "offset1"
                },
                "param_4": {
                    "1": "value2",
                    "2": "val2",
                    "3": "param_c",
                    "4": "param4",
                    "5": "param3",
                    "9": "offset2"
                },
                "sub_function_1": {
                    "1": "perform_operation_1"
                },
                "sub_function_2": {
                    "1": "perform_operation_2"
                },
                "uVar1": {
                    "1": "byte_mask",
                    "2": "updated_value",
                    "4": "temp1",
                    "5": "var1"
                },
                "uVar2": {
                    "1": "updated_var2",
                    "2": "index",
                    "3": "data_value",
                    "4": "temp2",
                    "5": "var2"
                },
                "uVar3": {
                    "1": "updated_var3",
                    "2": "division_result",
                    "3": "result3",
                    "4": "temp3",
                    "5": "divided_value"
                }
            },
            "called": [
                "FUN_08008990",
                "FUN_0800242c",
                "FUN_08002400"
            ],
            "calling": [
                "FUN_08002634",
                "FUN_08000500"
            ],
            "code": "\nbyte process_data_080025ac(byte *data,uint value,int offset1,int offset2)\n\n{\n  uint var1;\n  uint var2;\n  uint var3;\n  int var4;\n  \n  if (*data < 0xc) {\n    FUN_08008990(value,1,offset1,*data,offset2);\n    var2 = (uint)*data;\n    var1 = (byte)(&DAT_20000258)[var2 * 8] & 0xffffffc0 | value & 0x3f;\n    (&DAT_20000258)[var2 * 8] = (char)var1;\n    var4 = -offset1 + 0x220;\n    if (var4 < 0) {\n      var4 = -offset1 + 0x223;\n    }\n    data[1] = (byte)((uint)(var4 << 0x16) >> 0x18);\n    var4 = -offset2 + 0x960;\n    if (var4 < 0) {\n      var4 = -offset2 + 0x963;\n    }\n    data[2] = (byte)((uint)(var4 << 0x16) >> 0x18);\n    var3 = *data / 0xc;\n    var4 = FUN_08002400(var3,var1,var2,(uint)*data * -0x55555555);\n    if (var4 == 0) {\n      DAT_200002fc = (undefined)var3;\n      FUN_0800242c();\n    }\n    (&DAT_20000258)[(uint)*data * 8] = (&DAT_20000258)[(uint)*data * 8] | 0x40;\n  }\n  return *data;\n}\n\n",
            "current_name": "process_data_080025ac",
            "entrypoint": "0x080025ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080025ac": "process_data_080025ac",
                "iVar4": "var4",
                "param_1": "data",
                "param_2": "value",
                "param_3": "offset1",
                "param_4": "offset2",
                "uVar1": "var1",
                "uVar2": "var2",
                "uVar3": "var3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002634": {
            "additional_data": {
                "FUN_080025ac": {
                    "1": "perform_operation",
                    "2": "sub_function",
                    "8": "process_data"
                },
                "FUN_08002634": {
                    "1": "initialize_communication",
                    "10": "initialize_graphics",
                    "2": "initialize_function"
                },
                "param_1": {
                    "1": "first_param",
                    "2": "input1",
                    "3": "param1",
                    "4": "buffer",
                    "5": "arg1"
                },
                "param_2": {
                    "1": "data_param",
                    "2": "length",
                    "3": "size",
                    "4": "data2",
                    "5": "arg2"
                },
                "param_3": {
                    "1": "height",
                    "2": "param3",
                    "4": "arg3",
                    "5": "constant1",
                    "6": "width"
                },
                "param_4": {
                    "1": "end_index",
                    "4": "size2",
                    "5": "constant2",
                    "6": "height"
                }
            },
            "called": [
                "FUN_080025ac"
            ],
            "calling": [
                "FUN_08000500"
            ],
            "code": "\nvoid initialize_graphics_08002634(undefined4 arg1,undefined4 arg2,undefined4 width,undefined4 height)\n\n{\n  FUN_080025ac(arg1,arg2,0x220,0x960,height);\n  return;\n}\n\n",
            "current_name": "initialize_graphics_08002634",
            "entrypoint": "0x08002634",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002634": "initialize_graphics_08002634",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "width",
                "param_4": "height"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002644": {
            "additional_data": {
                "FUN_08002400": {
                    "1": "calculate_something",
                    "2": "process_sub_function",
                    "3": "calculate_value"
                },
                "FUN_08002578": {
                    "1": "handle_result",
                    "2": "handle_error",
                    "3": "handle_success"
                },
                "FUN_08002644": {
                    "1": "decode_and_process_data",
                    "17": "process_data",
                    "3": "update_data",
                    "4": "process_byte"
                },
                "bVar1": {
                    "1": "byte_val",
                    "2": "original_value",
                    "3": "current_value",
                    "4": "current_byte",
                    "6": "modified_byte"
                },
                "iVar3": {
                    "26": "result",
                    "4": "return_value"
                },
                "param_1": {
                    "1": "input_array",
                    "2": "input_byte",
                    "20": "data",
                    "4": "input_data"
                },
                "param_2": {
                    "1": "param_2",
                    "2": "param1",
                    "20": "param2",
                    "3": "param_a"
                },
                "param_3": {
                    "1": "param_3",
                    "19": "param3",
                    "2": "parameter3",
                    "3": "arg2"
                },
                "param_4": {
                    "1": "param_4",
                    "2": "parameter4",
                    "20": "param4",
                    "3": "param_c"
                },
                "uVar2": {
                    "1": "current_value",
                    "2": "first_element",
                    "4": "byte_value",
                    "8": "index",
                    "9": "first_byte"
                }
            },
            "called": [
                "FUN_08002400",
                "FUN_08002578"
            ],
            "calling": [
                "FUN_08000588"
            ],
            "code": "\nvoid process_data_08002644(byte *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  byte modified_byte;\n  uint first_byte;\n  int result;\n  \n  first_byte = (uint)*data;\n  modified_byte = (&DAT_20000258)[first_byte * 8];\n  (&DAT_20000258)[first_byte * 8] = modified_byte & 0xbf;\n  result = FUN_08002400(first_byte / 0xc,param2,modified_byte & 0xbf,first_byte * -0x55555555,param4);\n  if (result == 0) {\n    FUN_08002578(&DAT_200002b8);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08002644",
            "entrypoint": "0x08002644",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002644": "process_data_08002644",
                "bVar1": "modified_byte",
                "iVar3": "result",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar2": "first_byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800267c": {
            "additional_data": {
                "(char)param_1[1]": {
                    "1": "second_array_char"
                },
                "(char)param_1[2]": {
                    "1": "third_array_char"
                },
                "(uint)*param_1": {
                    "1": "array_index"
                },
                "(uint)*param_1 * 8": {
                    "1": "array_index"
                },
                "*(int *)(&DAT_2000025c + (uint)*param_1 * 8)": {
                    "1": "updated_array_value"
                },
                "*param_1": {
                    "1": "first_element",
                    "2": "array_value"
                },
                "DAT_2000025c": {
                    "1": "array_value"
                },
                "FUN_0800267c": {
                    "1": "update_parameter_value",
                    "5": "update_values",
                    "7": "update_array_value",
                    "8": "update_data"
                },
                "SBORROW4": {
                    "1": "swift_borrow"
                },
                "iVar1": {
                    "1": "calculation_result",
                    "14": "index",
                    "2": "new_index",
                    "3": "multiplier",
                    "4": "new_value"
                },
                "param_1": {
                    "1": "bytes",
                    "11": "data",
                    "12": "array",
                    "2": "byte_array",
                    "3": "input_array"
                },
                "param_2": {
                    "1": "value_to_update",
                    "2": "index",
                    "24": "value"
                }
            },
            "called": [],
            "calling": [
                "FUN_080026b0"
            ],
            "code": "\nvoid update_data_0800267c(byte *array,int value)\n\n{\n  int index;\n  \n  if (*array < 0xc) {\n    index = (0x88 - second_array_char) * 4;\n    if ((index - value == 0 || index < value) &&\n       (index = (600 - third_array_char) * 4,\n       value == index || value + (600 - third_array_char) * -4 < 0 != swift_borrow(value,index)))\n    {\n      index = value;\n    }\n    *(int *)(&DAT_2000025c + (uint)*array * 8) = index;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_0800267c",
            "entrypoint": "0x0800267c",
            "imported": false,
            "improved": true,
            "renaming": {
                "(char)param_1[1]": "second_array_char",
                "(char)param_1[2]": "third_array_char",
                "FUN_0800267c": "update_data_0800267c",
                "SBORROW4": "swift_borrow",
                "iVar1": "index",
                "param_1": "array",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080026b0": {
            "additional_data": {
                "(0x88 - *(char *)(param_1 + 1)) * 4": {
                    "1": "calculation_1"
                },
                "(600 - *(char *)(param_1 + 2)) * 4": {
                    "1": "calculation_2"
                },
                "*(char *)(param_1 + 1)": {
                    "1": "char1"
                },
                "*(char *)(param_1 + 2)": {
                    "1": "char2"
                },
                "0": {
                    "1": "min_limit"
                },
                "0x220": {
                    "1": "max_limit"
                },
                "0xb4": {
                    "1": "default_limit"
                },
                "FUN_0800267c": {
                    "1": "function_call",
                    "2": "send_data",
                    "5": "print_result",
                    "6": "process_result"
                },
                "FUN_080026b0": {
                    "1": "update_parameters",
                    "11": "process_data",
                    "2": "update_param_and_call_function",
                    "3": "process_params"
                },
                "FUN_08008ef4": {
                    "1": "limit_size",
                    "2": "calculate_bounds",
                    "3": "clamp_value",
                    "4": "calculate_value",
                    "5": "limit_value"
                },
                "param_1": {
                    "1": "input1",
                    "2": "data_pointer",
                    "3": "input_parameter",
                    "5": "input_param",
                    "6": "input_data"
                },
                "param_1 + 1": {
                    "1": "offset_1"
                },
                "param_1 + 2": {
                    "1": "offset_2"
                },
                "param_2": {
                    "1": "param",
                    "2": "length",
                    "3": "size",
                    "4": "limit",
                    "7": "value"
                },
                "param_2 < 0x220": {
                    "1": "is_within_range(input_param_2)"
                },
                "param_3": {
                    "1": "min_limit",
                    "2": "min_value"
                },
                "param_4": {
                    "1": "max_limit"
                },
                "param_5": {
                    "1": "param_offset",
                    "2": "offset"
                }
            },
            "called": [
                "FUN_08008ef4",
                "FUN_0800267c"
            ],
            "calling": [
                "FUN_0800021a"
            ],
            "code": "\nvoid process_data_080026b0(int input_data,int value)\n\n{\n  if (value < 0x220) {\n    if (value < 0) {\n      value = 0;\n    }\n    else if (0xb4 < value) {\n      value = 0xb4;\n    }\n    value = FUN_08008ef4(value,0,0xb4,(0x88 - *(char *)(input_data + 1)) * 4,\n                           (600 - *(char *)(input_data + 2)) * 4);\n  }\n  FUN_0800267c(input_data,value);\n  return;\n}\n\n",
            "current_name": "process_data_080026b0",
            "entrypoint": "0x080026b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080026b0": "process_data_080026b0",
                "param_1": "input_data",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080026f8": {
            "additional_data": {
                "&DAT_20000258": {
                    "2": "data_table",
                    "3": "data_array"
                },
                "(&DAT_20000258)": {
                    "1": "lookup_table"
                },
                "((uint)(byte)(&DAT_20000258)[(uint)*param_1 * 8] << 0x19) >> 0x1f": {
                    "1": "shifted_result"
                },
                "(*param_1)": {
                    "1": "byte_value"
                },
                "(bit_value << 0x19) >> 0x1f": {
                    "1": "final_bit"
                },
                "(byte)(&DAT_20000258)[(uint)*param_1 * 8]": {
                    "1": "selected_byte"
                },
                "(uint)(byte)(&DAT_20000258)[(uint)*param_1 * 8]": {
                    "1": "lookup_value",
                    "2": "bit_value"
                },
                "(uint)(byte)(&DAT_20000258)[(uint)*param_1 * 8] << 0x19": {
                    "1": "shifted_value"
                },
                "(uint)*param_1": {
                    "1": "index"
                },
                "(uint)*param_1 * 8": {
                    "1": "data_array_index",
                    "2": "lookup_index",
                    "3": "index"
                },
                "*(PTR_DAT_20000258)": {
                    "1": "lookup_table"
                },
                "*param_1": {
                    "1": "data_value",
                    "2": "dereferenced_input_byte",
                    "3": "byte_value"
                },
                "*param_1 * 8": {
                    "1": "index"
                },
                "<< 0x19": {
                    "1": "left_shift_operation"
                },
                ">> 0x1f": {
                    "1": "right_shift_operation"
                },
                "DAT_20000258": {
                    "1": "bit_lookup_table",
                    "3": "bit_array",
                    "5": "data_array"
                },
                "FUN_080026f8": {
                    "1": "calculate_multiplier",
                    "2": "get_bit_from_lookup_table",
                    "3": "calculate_shifted_value"
                },
                "[(uint)*param_1 * 8]": {
                    "1": "byte_position"
                },
                "bit_value << 0x19": {
                    "1": "shifted_value"
                },
                "byte": {
                    "1": "unsigned_byte"
                },
                "param_1": {
                    "1": "byte_data",
                    "10": "input_byte",
                    "3": "input",
                    "4": "byte_array"
                },
                "uint": {
                    "1": "unsigned_int"
                }
            },
            "called": [],
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "code": "\nunsigned_int calculate_shifted_value_080026f8(byte_value *input_byte)\n\n{\n  return ((unsigned_int)(byte_value)(&DAT_20000258)[(unsigned_int)*input_byte * 8] << 0x19) >> 0x1f;\n}\n\n",
            "current_name": "calculate_shifted_value_080026f8",
            "entrypoint": "0x080026f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080026f8": "calculate_shifted_value_080026f8",
                "byte": "byte_value",
                "param_1": "input_byte",
                "uint": "unsigned_int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800270c": {
            "additional_data": {
                "DAT_200003b5": {
                    "1": "num2",
                    "2": "second_data",
                    "3": "second_value",
                    "4": "value_2",
                    "8": "value2"
                },
                "DAT_200003b7": {
                    "1": "input_value1",
                    "2": "variable1",
                    "3": "first_value",
                    "4": "value_1",
                    "8": "value1"
                },
                "FUN_0800270c": {
                    "1": "calculate_offset",
                    "27": "calculate_difference",
                    "3": "calculate_data_difference"
                }
            },
            "called": [],
            "calling": [
                "FUN_08001c18"
            ],
            "code": "\nint calculate_difference_0800270c(void)\n\n{\n  return (uint)DAT_200003b7 - (uint)DAT_200003b5;\n}\n\n",
            "current_name": "calculate_difference_0800270c",
            "entrypoint": "0x0800270c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800270c": "calculate_difference_0800270c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002720": {
            "additional_data": {
                "*(byte *)(DAT_200003c8 + uVar1)": {
                    "2": "next_byte"
                },
                "<byte_array_variable>": {
                    "1": "byte_array_variable"
                },
                "DAT_200003b5": {
                    "1": "current_value",
                    "15": "current_index",
                    "2": "data_start_index"
                },
                "DAT_200003b7": {
                    "1": "length",
                    "13": "max_index",
                    "2": "data_end_index"
                },
                "DAT_200003c8": {
                    "1": "data_array_ptr",
                    "4": "buffer",
                    "5": "memory_address",
                    "7": "byte_array"
                },
                "FUN_08002720": {
                    "1": "get_byte_at_offset",
                    "2": "extract_byte_from_memory",
                    "3": "retrieve_byte_from_memory",
                    "7": "get_next_byte",
                    "8": "read_next_byte"
                },
                "byte": {
                    "1": "data_type"
                },
                "return": {
                    "1": "byte_value"
                },
                "uVar1": {
                    "11": "current_index",
                    "20": "index"
                }
            },
            "called": [],
            "calling": [
                "FUN_08001c08"
            ],
            "code": "\nuint read_next_byte_08002720(void)\n\n{\n  uint index;\n  \n  index = (uint)DAT_200003b5;\n  if (index < DAT_200003b7) {\n    DAT_200003b5 = DAT_200003b5 + 1;\n    byte_value (uint)*(data_type *)(DAT_200003c8 + index);\n  }\n  byte_value 0xffffffff;\n}\n\n",
            "current_name": "read_next_byte_08002720",
            "entrypoint": "0x08002720",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002720": "read_next_byte_08002720",
                "byte": "data_type",
                "return": "byte_value",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080027f0": {
            "additional_data": {
                "DAT_200003b4": {
                    "1": "is_condition_met",
                    "2": "check_flag",
                    "4": "flag"
                },
                "DAT_200003b6": {
                    "1": "base_address",
                    "2": "offset"
                },
                "DAT_200003b8": {
                    "1": "total"
                },
                "DAT_200003c5": {
                    "1": "max_data_offset",
                    "2": "max_offset"
                },
                "DAT_200003cc": {
                    "1": "memory_ptr",
                    "3": "buffer"
                },
                "FUN_080027f0": {
                    "2": "process_input",
                    "24": "process_data",
                    "3": "update_data"
                },
                "FUN_08007ede": {
                    "1": "execute_operation",
                    "2": "verify_data",
                    "3": "validate_data",
                    "4": "check_validity"
                },
                "FUN_080091b0": {
                    "1": "calculate_checksum",
                    "2": "copy_data",
                    "5": "update_data"
                },
                "FUN_08009908": {
                    "1": "adjust_data_length",
                    "12": "allocate_memory",
                    "2": "adjust_size"
                },
                "iVar1": {
                    "1": "error_check",
                    "29": "result"
                },
                "isFlagSet": {
                    "1": "is_flag_set"
                },
                "param_1": {
                    "1": "input_data",
                    "2": "input_param",
                    "3": "data_ptr",
                    "8": "input"
                },
                "param_1 + 0x14": {
                    "1": "updated_data_pointer"
                },
                "param_2": {
                    "1": "arg2",
                    "11": "value",
                    "2": "input2",
                    "3": "param2",
                    "5": "param"
                },
                "param_3": {
                    "1": "current_value",
                    "2": "input3",
                    "3": "length",
                    "6": "size"
                },
                "uVar2": {
                    "1": "total",
                    "2": "new_data_size",
                    "3": "sum",
                    "6": "new_size"
                }
            },
            "called": [
                "FUN_080091b0",
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "calling": [],
            "code": "\nuint process_data_080027f0(int input,undefined4 value,uint size)\n\n{\n  int result;\n  uint new_size;\n  \n  if (DAT_200003b4 == '\\0') {\n    result = FUN_08007ede(input + 0x14,value,size & 0xffff);\n    if (result == 0) {\n      return size;\n    }\n    return 0;\n  }\n  new_size = DAT_200003b8 + size;\n  if (DAT_200003c5 < new_size) {\n    if (new_size < 0x20) {\n      new_size = 0x20;\n    }\n    DAT_200003cc = FUN_08009908(DAT_200003cc,new_size);\n    if (DAT_200003cc == 0) {\n      DAT_200003c5 = 0;\n    }\n    else {\n      DAT_200003c5 = (byte)new_size;\n    }\n  }\n  if (DAT_200003cc == 0) {\n    *(undefined4 *)(input + 4) = 1;\n    return 0;\n  }\n  FUN_080091b0((uint)DAT_200003b6 + DAT_200003cc,value,size);\n  DAT_200003b6 = DAT_200003b6 + (char)size;\n  DAT_200003b8 = DAT_200003b6;\n  return size;\n}\n\n",
            "current_name": "process_data_080027f0",
            "entrypoint": "0x080027f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080027f0": "process_data_080027f0",
                "iVar1": "result",
                "param_1": "input",
                "param_2": "value",
                "param_3": "size",
                "uVar2": "new_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800288c": {
            "additional_data": {
                "DAT_200003b4": {
                    "1": "is_flag_zero",
                    "3": "flag"
                },
                "DAT_200003b6": {
                    "1": "current_byte_index"
                },
                "DAT_200003b8": {
                    "1": "index",
                    "2": "current_index"
                },
                "DAT_200003c5": {
                    "1": "max_size"
                },
                "DAT_200003cc": {
                    "1": "buffer_pointer",
                    "5": "buffer"
                },
                "FUN_0800288c": {
                    "28": "process_data",
                    "3": "process_input"
                },
                "FUN_08007ede": {
                    "1": "copy_data",
                    "4": "write_data"
                },
                "FUN_08009908": {
                    "2": "allocate_buffer",
                    "3": "allocate_memory"
                },
                "iVar2": {
                    "1": "error",
                    "17": "status",
                    "3": "error_code",
                    "5": "result"
                },
                "local_11": {
                    "1": "current_value",
                    "2": "input_value",
                    "4": "new_data",
                    "5": "new_value"
                },
                "param3": {
                    "1": "length"
                },
                "param_1": {
                    "1": "data_address",
                    "2": "data_offset",
                    "3": "input_param",
                    "9": "input"
                },
                "param_1 + 0x14": {
                    "1": "address"
                },
                "param_2": {
                    "1": "input_data",
                    "3": "flag",
                    "4": "data",
                    "5": "value",
                    "8": "input_byte"
                },
                "param_3": {
                    "1": "buffer_size"
                },
                "uVar1": {
                    "1": "success",
                    "25": "result",
                    "4": "return_value"
                },
                "uVar3": {
                    "1": "size",
                    "16": "new_size",
                    "2": "length",
                    "3": "new_data_size"
                }
            },
            "called": [
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "calling": [
                "FUN_08001bf8"
            ],
            "code": "\nundefined4 process_data_0800288c(int input,undefined input_byte)\n\n{\n  undefined4 result;\n  int status;\n  uint new_size;\n  undefined new_value;\n  \n  new_value = input_byte;\n  if (DAT_200003b4 == '\\0') {\n    status = FUN_08007ede(input + 0x14,&new_value,1);\n    if (status == 0) {\n      result = 1;\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    new_size = DAT_200003b8 + 1;\n    if (DAT_200003c5 < new_size) {\n      if (new_size < 0x20) {\n        new_size = 0x20;\n      }\n      DAT_200003cc = FUN_08009908(DAT_200003cc,new_size);\n      if (DAT_200003cc == 0) {\n        DAT_200003c5 = 0;\n      }\n      else {\n        DAT_200003c5 = (byte)new_size;\n      }\n    }\n    if (DAT_200003cc == 0) {\n      *(undefined4 *)(input + 4) = 1;\n      result = 0;\n    }\n    else {\n      *(undefined *)(DAT_200003cc + (uint)DAT_200003b6) = new_value;\n      DAT_200003b6 = DAT_200003b6 + 1;\n      result = 1;\n      DAT_200003b8 = DAT_200003b6;\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "process_data_0800288c",
            "entrypoint": "0x0800288c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800288c": "process_data_0800288c",
                "iVar2": "status",
                "local_11": "new_value",
                "param_1": "input",
                "param_2": "input_byte",
                "uVar1": "result",
                "uVar3": "new_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800291c": {
            "additional_data": {
                "&PTR_FUN_0800288c_1_0800a5a0": {
                    "1": "function_ptr"
                },
                "((int)param_1 + 0x6d)": {
                    "1": "parameters_address"
                },
                "(int)param_1 + 0x6d": {
                    "1": "seventy_fourth_element"
                },
                "(int)parameters + 0x6d": {
                    "1": "other_param"
                },
                "(param_1 + 0x1b)": {
                    "1": "offset1"
                },
                "*(outputArray + 0x1b)": {
                    "1": "offset1"
                },
                "*(outputArray + 0x6d)": {
                    "1": "offset2"
                },
                "*(undefined *)((int)param_1 + 0x6d)": {
                    "1": "value2",
                    "2": "value_b",
                    "3": "params[109]"
                },
                "*(undefined *)(param_1 + 0x1b)": {
                    "1": "set_pointer_value1",
                    "2": "value_a",
                    "3": "parameters[27]"
                },
                "*outputArray": {
                    "1": "function_pointer"
                },
                "*param_1": {
                    "1": "param_array[0]",
                    "3": "parameters[0]"
                },
                "*parameters": {
                    "1": "first_param"
                },
                "FUN_0800291c": {
                    "1": "set_default_parameters",
                    "3": "initialize_function",
                    "4": "initialize_data",
                    "5": "initialize_params",
                    "6": "initialize_param",
                    "9": "initialize_parameters"
                },
                "PTR_FUN_0800288c_1_0800a5a0": {
                    "1": "initial_function_ptr",
                    "8": "function_pointer"
                },
                "[param_1 + 0x1]": {
                    "1": "param_array[1]"
                },
                "[param_1 + 0x2]": {
                    "1": "param_array[2]"
                },
                "data[109]": {
                    "1": "value4"
                },
                "data[1]": {
                    "1": "value1"
                },
                "data[27]": {
                    "1": "value3"
                },
                "data[2]": {
                    "1": "value2"
                },
                "outputArray[1]": {
                    "1": "status"
                },
                "outputArray[2]": {
                    "1": "value"
                },
                "param_1": {
                    "1": "param",
                    "13": "parameters",
                    "3": "params",
                    "4": "param_array"
                },
                "param_1 + 0x1b": {
                    "1": "twenty_fourth_element",
                    "2": "parameters_end"
                },
                "param_1[1]": {
                    "1": "parameter[1]",
                    "3": "params[1]",
                    "9": "parameters[1]"
                },
                "param_1[27]": {
                    "1": "param28"
                },
                "param_1[2]": {
                    "1": "function_param3",
                    "3": "params[2]",
                    "9": "parameters[2]"
                },
                "parameters + 0x1b": {
                    "1": "sub_param"
                },
                "parameters[1]": {
                    "1": "second_param"
                },
                "parameters[2]": {
                    "1": "third_param"
                }
            },
            "called": [],
            "calling": [
                "FUN_08002948"
            ],
            "code": "\nvoid initialize_parameters_0800291c(undefined4 *parameters)\n\n{\n  parameters[1] = 0;\n  parameters[2] = 1000;\n  *parameters = &PTR_FUN_0800288c_1_0800a5a0;\n  *(undefined *)(parameters + 0x1b) = 0x19;\n  *(undefined *)((int)parameters + 0x6d) = 0x18;\n  return;\n}\n\n",
            "current_name": "initialize_parameters_0800291c",
            "entrypoint": "0x0800291c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800291c": "initialize_parameters_0800291c",
                "param_1": "parameters",
                "param_1[1]": "parameters[1]",
                "param_1[2]": "parameters[2]"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002948": {
            "additional_data": {
                "&DAT_20000314": {
                    "1": "data_pointer"
                },
                "DAT_20000314": {
                    "1": "data_address",
                    "2": "data_buffer"
                },
                "FUN_0700191c": {
                    "1": "update_data"
                },
                "FUN_07001948": {
                    "1": "process_input"
                },
                "FUN_0800291c": {
                    "1": "update_data",
                    "11": "process_data",
                    "2": "execute_function"
                },
                "FUN_08002948": {
                    "1": "check_parameter_and_call_function",
                    "2": "check_and_execute",
                    "3": "check_param_and_execute",
                    "4": "check_param",
                    "6": "check_and_call_function"
                },
                "param_1": {
                    "1": "value1",
                    "2": "value",
                    "3": "parameter1",
                    "4": "status"
                },
                "param_2": {
                    "1": "param_2",
                    "10": "value",
                    "2": "input2",
                    "3": "parameter2",
                    "4": "param2"
                }
            },
            "called": [
                "FUN_0800291c"
            ],
            "calling": [
                "FUN_08002c1e"
            ],
            "code": "\nvoid check_and_call_function_08002948(int param1,int value)\n\n{\n  if (param1 != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_0800291c(&DAT_20000314);\n  }\n  return;\n}\n\n",
            "current_name": "check_and_call_function_08002948",
            "entrypoint": "0x08002948",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002948": "check_and_call_function_08002948",
                "param_1": "param1",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002968": {
            "additional_data": {
                "&LAB_08002774_1": {
                    "1": "action1_address"
                },
                "&LAB_08002b00_1": {
                    "1": "action2_address"
                },
                "(param_1 + 0x10)": {
                    "1": "shifted_value_address"
                },
                "(param_1 + 0x11)": {
                    "1": "flag_address"
                },
                "*(char *)(param_1 + 0x10)": {
                    "1": "parameter_byte"
                },
                "*(char *)(param_1 + 0x11)": {
                    "1": "flag_value"
                },
                "*(undefined *)(param_1 + 0x11)": {
                    "1": "flag"
                },
                "0x4000": {
                    "1": "param3_data"
                },
                "100000": {
                    "1": "param2_data"
                },
                "DAT_200003b4": {
                    "1": "data4"
                },
                "DAT_200003b5": {
                    "1": "var1"
                },
                "DAT_200003b6": {
                    "1": "data2"
                },
                "DAT_200003b7": {
                    "1": "counter2"
                },
                "DAT_200003b8": {
                    "1": "data4"
                },
                "DAT_200003c4": {
                    "1": "data1_length"
                },
                "DAT_200003c5": {
                    "1": "size2"
                },
                "DAT_200003c8": {
                    "1": "ptr_data1",
                    "2": "data1"
                },
                "DAT_200003cc": {
                    "1": "ptr_data2"
                },
                "FUN_08002968": {
                    "1": "initialize_variables",
                    "14": "initialize_function",
                    "2": "initialize_params",
                    "3": "initialize_device",
                    "6": "initialize_data"
                },
                "FUN_080077b0": {
                    "1": "perform_initialization",
                    "2": "initialize_memory",
                    "3": "configure_device",
                    "4": "perform_operation"
                },
                "FUN_08007f7c": {
                    "1": "apply_label2",
                    "2": "perform_task2"
                },
                "FUN_08007f8e": {
                    "1": "execute_first_operation",
                    "2": "set_callback1",
                    "3": "perform_task1"
                },
                "FUN_080091c6": {
                    "1": "configure_data_with_params",
                    "2": "perform_action",
                    "3": "copy_data"
                },
                "FUN_080091c6_1": {
                    "1": "initialize_data2"
                },
                "LAB_08002774_1": {
                    "1": "task1_label"
                },
                "LAB_08002b00_1": {
                    "1": "task2_label"
                },
                "iVar1": {
                    "1": "shifted_input",
                    "12": "shifted_value",
                    "2": "shifted_parameter",
                    "4": "shifted_flags",
                    "5": "shifted_param2"
                },
                "iVar2": {
                    "1": "offset",
                    "2": "var1"
                },
                "iVar2 + 0x14": {
                    "1": "processed_data_address"
                },
                "param_1": {
                    "1": "data_structure",
                    "10": "param1",
                    "2": "input_pointer",
                    "4": "data_address"
                },
                "param_1 + 0x10": {
                    "1": "address_offset"
                },
                "param_1 + 0x11": {
                    "1": "is_zero"
                },
                "param_1 + 0x14": {
                    "1": "param1_plus_offset"
                },
                "param_2": {
                    "1": "parameter",
                    "11": "param2",
                    "2": "arg2",
                    "3": "input_value",
                    "4": "param_value"
                },
                "param_3": {
                    "1": "arg3",
                    "3": "param3"
                },
                "param_4": {
                    "1": "shifted_parameter",
                    "2": "param4"
                },
                "param_5": {
                    "1": "is_type33",
                    "2": "param5"
                }
            },
            "called": [
                "FUN_080077b0",
                "FUN_08007f8e",
                "FUN_080091c6",
                "FUN_08007f7c"
            ],
            "calling": [
                "FUN_08002a1c"
            ],
            "code": "\nvoid initialize_function_08002968(int param1,uint param2)\n\n{\n  int shifted_value;\n  int var1;\n  \n  DAT_200003b5 = 0;\n  DAT_200003b7 = 0;\n  if (DAT_200003c8 != 0) {\n    FUN_080091c6(DAT_200003c8,0,DAT_200003c4);\n  }\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  if (DAT_200003cc != 0) {\n    FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n  }\n  DAT_200003b4 = 0;\n  shifted_value = (param2 & 0x7f) << 1;\n  *(char *)(param1 + 0x10) = (char)shifted_value;\n  if (param2 == 0x33) {\n    *(undefined *)(param1 + 0x11) = 1;\n  }\n  else {\n    *(undefined *)(param1 + 0x11) = 0;\n  }\n  var1 = param1 + 0x14;\n  FUN_080077b0(var1,100000,0x4000,shifted_value,*(undefined *)(param1 + 0x11));\n  if (*(char *)(param1 + 0x11) == '\\0') {\n    FUN_08007f8e(var1,action1_address);\n    FUN_08007f7c(var1,action2_address);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_function_08002968",
            "entrypoint": "0x08002968",
            "imported": false,
            "improved": true,
            "renaming": {
                "&LAB_08002774_1": "action1_address",
                "&LAB_08002b00_1": "action2_address",
                "FUN_08002968": "initialize_function_08002968",
                "LAB_08002774_1": "task1_label",
                "LAB_08002b00_1": "task2_label",
                "iVar1": "shifted_value",
                "iVar2": "var1",
                "param_1": "param1",
                "param_2": "param2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002a1c": {
            "additional_data": {
                "FUN_08002968": {
                    "1": "perform_operation",
                    "2": "sub_function",
                    "3": "reverse_data",
                    "4": "call_subfunction",
                    "5": "call_sub_function"
                },
                "FUN_08002a1c": {
                    "1": "run_main_function",
                    "17": "execute_function",
                    "3": "initialize",
                    "4": "initialize_function"
                },
                "param_1": {
                    "1": "input_param",
                    "10": "arg1",
                    "2": "input1",
                    "3": "sub_param1",
                    "4": "param1"
                },
                "param_2": {
                    "1": "param",
                    "10": "arg2",
                    "2": "value2",
                    "3": "sub_param2",
                    "4": "param2"
                },
                "param_3": {
                    "1": "buffer_address",
                    "11": "arg3",
                    "2": "input3",
                    "6": "param3"
                },
                "param_4": {
                    "1": "size_param",
                    "11": "arg4",
                    "2": "input4",
                    "6": "param4"
                }
            },
            "called": [
                "FUN_08002968"
            ],
            "calling": [
                "FUN_08002a26"
            ],
            "code": "\nvoid execute_function_08002a1c(undefined4 arg1,undefined arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08002968(arg1,arg2,arg3,arg4,arg4);\n  return;\n}\n\n",
            "current_name": "execute_function_08002a1c",
            "entrypoint": "0x08002a1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002a1c": "execute_function_08002a1c",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002a26": {
            "additional_data": {
                "FUN_08002a1c": {
                    "1": "perform_operation",
                    "2": "sub_function"
                },
                "FUN_08002a26": {
                    "1": "execute_operation",
                    "10": "execute_function",
                    "2": "execute_function_with_params",
                    "8": "initialize_function"
                },
                "param_1": {
                    "1": "data_1",
                    "4": "param_1",
                    "5": "input_param",
                    "8": "arg1"
                },
                "param_2": {
                    "1": "sub_param1",
                    "2": "param_2",
                    "4": "arg2"
                },
                "param_3": {
                    "1": "subfunction_param_3",
                    "2": "output_param",
                    "5": "param_3",
                    "8": "arg3"
                },
                "param_4": {
                    "1": "input4",
                    "5": "param4",
                    "6": "param_4",
                    "8": "arg4"
                }
            },
            "called": [
                "FUN_08002a1c"
            ],
            "calling": [
                "FUN_08000a64"
            ],
            "code": "\nvoid execute_function_08002a26(undefined4 arg1,undefined4 unused_param,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08002a1c(arg1,0x33,arg3,arg4,arg4);\n  return;\n}\n\n",
            "current_name": "execute_function_08002a26",
            "entrypoint": "0x08002a26",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002a26": "execute_function_08002a26",
                "param_1": "arg1",
                "param_2": "unused_param",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002a30": {
            "additional_data": {
                "DAT_200003b4": {
                    "1": "initialized_flag",
                    "2": "data_flag",
                    "3": "is_initialized",
                    "4": "flag"
                },
                "DAT_200003b6": {
                    "1": "unused_var1",
                    "8": "unused_variable"
                },
                "DAT_200003b8": {
                    "1": "unused_var2",
                    "4": "unused_variable"
                },
                "DAT_200003d0": {
                    "1": "shifted_char",
                    "2": "shifted_input",
                    "3": "shifted_param2",
                    "4": "shifted_value"
                },
                "FUN_08002a30": {
                    "1": "initialize_data_structure",
                    "29": "initialize_data"
                },
                "char": {
                    "1": "data_char"
                },
                "param_1": {
                    "1": "undefined_parameter",
                    "2": "param",
                    "3": "unused_param",
                    "7": "param1",
                    "8": "status"
                },
                "param_2": {
                    "1": "multiplier",
                    "10": "input_value",
                    "2": "arg2",
                    "4": "param2",
                    "6": "value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08001cd0",
                "FUN_08002b68",
                "FUN_08001c18"
            ],
            "code": "\nvoid initialize_data_08002a30(undefined4 status,int input_value)\n\n{\n  DAT_200003b4 = 1;\n  DAT_200003d0 = (data_char)(input_value << 1);\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  return;\n}\n\n",
            "current_name": "initialize_data_08002a30",
            "entrypoint": "0x08002a30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002a30": "initialize_data_08002a30",
                "char": "data_char",
                "param_1": "status",
                "param_2": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002a58": {
            "additional_data": {
                "DAT_200003b4": {
                    "1": "var2"
                },
                "DAT_200003b6": {
                    "1": "data_var1",
                    "2": "var1"
                },
                "DAT_200003b8": {
                    "1": "var2",
                    "2": "data3"
                },
                "DAT_200003c5": {
                    "1": "reset_param"
                },
                "DAT_200003cc": {
                    "1": "data_pointer2",
                    "2": "data2"
                },
                "DAT_200003d0": {
                    "1": "data_pointer1",
                    "2": "data1"
                },
                "FUN_08002a58": {
                    "1": "check_validation",
                    "14": "check_status",
                    "3": "check_data_validity",
                    "4": "check_validity"
                },
                "FUN_08007e74": {
                    "1": "validate_input",
                    "2": "process_data"
                },
                "FUN_080091c6": {
                    "6": "reset_data"
                },
                "F_UNREVERSE_08002a58": {
                    "1": "process_data"
                },
                "iVar1": {
                    "1": "result_code",
                    "28": "result"
                },
                "param_1": {
                    "1": "parameter",
                    "16": "input",
                    "2": "input_param",
                    "3": "data_ptr"
                },
                "param_2": {
                    "1": "param2"
                },
                "param_3": {
                    "1": "reset_count"
                },
                "param_4": {
                    "1": "param4",
                    "2": "param3"
                },
                "uVar2": {
                    "1": "output",
                    "10": "return_value",
                    "15": "status",
                    "2": "result"
                }
            },
            "called": [
                "FUN_080091c6",
                "FUN_08007e74"
            ],
            "calling": [
                "FUN_08002b68",
                "FUN_08002ac0",
                "FUN_08001c18"
            ],
            "code": "\nundefined4 check_status_08002a58(int input)\n\n{\n  int result;\n  undefined4 status;\n  \n  if (*(char *)(input + 0x11) == '\\0') {\n    status = 4;\n  }\n  else {\n    result = FUN_08007e74(input + 0x14,DAT_200003d0,DAT_200003cc,DAT_200003b8);\n    if (result == 0) {\n      status = 0;\n    }\n    else if (result == 1) {\n      status = 1;\n    }\n    else {\n      status = 4;\n    }\n    if (DAT_200003cc != 0) {\n      FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n    }\n    DAT_200003b6 = 0;\n    DAT_200003b8 = 0;\n    DAT_200003b4 = 0;\n  }\n  return status;\n}\n\n",
            "current_name": "check_status_08002a58",
            "entrypoint": "0x08002a58",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002a58": "check_status_08002a58",
                "iVar1": "result",
                "param_1": "input",
                "uVar2": "status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ac0": {
            "additional_data": {
                "FUN_08002a58": {
                    "1": "subfunction",
                    "2": "perform_operation",
                    "3": "call_subfunction"
                },
                "FUN_08002ac0": {
                    "1": "execute_operation",
                    "13": "execute_function",
                    "2": "initiate_process",
                    "6": "initialize_function"
                },
                "int param_1": {
                    "1": "sub_function_param"
                },
                "param_1": {
                    "1": "param",
                    "12": "arg1",
                    "2": "input_param",
                    "3": "input1",
                    "4": "param1"
                },
                "param_2": {
                    "1": "param_2",
                    "2": "unused_param",
                    "3": "input_2",
                    "4": "param2",
                    "9": "arg2"
                },
                "param_3": {
                    "1": "param_c",
                    "12": "arg3",
                    "2": "output_param",
                    "3": "input3",
                    "4": "input_3",
                    "5": "param3"
                },
                "param_4": {
                    "1": "param_four",
                    "12": "arg4",
                    "2": "unused_param_2",
                    "3": "input4",
                    "4": "input_4",
                    "5": "param4"
                }
            },
            "called": [
                "FUN_08002a58"
            ],
            "calling": [
                "FUN_08001cd0"
            ],
            "code": "\nvoid execute_function_08002ac0(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08002a58(arg1,1,arg3,arg4,arg4);\n  return;\n}\n\n",
            "current_name": "execute_function_08002ac0",
            "entrypoint": "0x08002ac0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ac0": "execute_function_08002ac0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002acc": {
            "additional_data": {
                "DAT_200003c4": {
                    "1": "current_length",
                    "2": "current_size",
                    "7": "current_value"
                },
                "DAT_200003c8": {
                    "1": "updated_dat_value",
                    "2": "result_value",
                    "3": "result",
                    "4": "updated_value"
                },
                "FUN_08002acc": {
                    "1": "resize_and_check",
                    "2": "update_param_and_data",
                    "3": "update_parameter",
                    "4": "update_data"
                },
                "FUN_08009908": {
                    "1": "processing_function",
                    "3": "modify_value"
                },
                "param_1": {
                    "1": "size",
                    "2": "data_size",
                    "3": "new_size",
                    "5": "input_param",
                    "6": "input_value"
                },
                "param_2": {
                    "1": "unused_param2",
                    "11": "param2",
                    "3": "param_2",
                    "8": "unused_param"
                },
                "param_3": {
                    "1": "input_param",
                    "11": "param3",
                    "2": "unused_param2",
                    "4": "param_3"
                },
                "param_4": {
                    "1": "info",
                    "11": "param4",
                    "2": "unused_param",
                    "3": "unused_param2",
                    "4": "param_4"
                }
            },
            "called": [
                "FUN_08009908"
            ],
            "calling": [
                "FUN_08002b68"
            ],
            "code": "\nvoid update_data_08002acc(uint input_value,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  if (DAT_200003c4 < input_value) {\n    if (input_value < 0x20) {\n      input_value = 0x20;\n    }\n    DAT_200003c8 = FUN_08009908(DAT_200003c8,input_value,param3,(uint)DAT_200003c4,param4);\n    if (DAT_200003c8 == 0) {\n      DAT_200003c4 = 0;\n    }\n    else {\n      DAT_200003c4 = (byte)input_value;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "update_data_08002acc",
            "entrypoint": "0x08002acc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002acc": "update_data_08002acc",
                "param_1": "input_value",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002b68": {
            "additional_data": {
                "DAT_200003b5": {
                    "1": "variable1"
                },
                "DAT_200003b7": {
                    "1": "flag2"
                },
                "DAT_200003c8": {
                    "1": "constant",
                    "2": "constant_value"
                },
                "FUN_08002a30": {
                    "1": "perform_operation",
                    "2": "process_buffer"
                },
                "FUN_08002a58": {
                    "1": "reset_array",
                    "2": "reset_buffer"
                },
                "FUN_08002acc": {
                    "1": "yet_another_sub_function",
                    "2": "initialize_value",
                    "4": "initialize"
                },
                "FUN_08002b68": {
                    "1": "process_function",
                    "16": "process_data",
                    "2": "execute_function"
                },
                "FUN_08007f0e": {
                    "1": "some_sub_function",
                    "3": "process_data"
                },
                "PARAM_1_OFFSET": {
                    "1": "offset"
                },
                "PARAM_2_SHIFT": {
                    "1": "shift_amount"
                },
                "iVar1": {
                    "26": "result",
                    "5": "return_value"
                },
                "param_1": {
                    "1": "array_ptr",
                    "12": "data",
                    "2": "output_buffer",
                    "3": "output_array",
                    "7": "array"
                },
                "param_2": {
                    "1": "command_length",
                    "12": "size",
                    "2": "input_size",
                    "3": "buffer_size",
                    "4": "length"
                },
                "param_3": {
                    "1": "input_param",
                    "2": "param1",
                    "4": "param_a",
                    "5": "param"
                },
                "param_4": {
                    "1": "value2",
                    "2": "param2",
                    "3": "value",
                    "4": "arg2"
                },
                "param_5": {
                    "1": "byte_param",
                    "10": "flag",
                    "11": "byte_value",
                    "3": "byte_val"
                },
                "uVar2": {
                    "1": "data_value",
                    "3": "byte_val",
                    "5": "byte_count",
                    "7": "flag_value"
                },
                "uVar3": {
                    "1": "data_value",
                    "3": "temp",
                    "4": "masked_value"
                }
            },
            "called": [
                "FUN_08007f0e",
                "FUN_08002a58",
                "FUN_08002acc",
                "FUN_08002a30"
            ],
            "calling": [
                "FUN_08002c00"
            ],
            "code": "\nundefined4\nprocess_data_08002b68(undefined4 *data,uint size,undefined4 value,uint mask,byte byte_value)\n\n{\n  int result;\n  uint flag_value;\n  uint masked_value;\n  \n  flag_value = (uint)byte_value;\n  if (*(char *)((int)data + 0x11) == '\\0') {\n    return 0;\n  }\n  masked_value = mask;\n  FUN_08002acc(value);\n  if (DAT_200003c8 != 0) {\n    if (flag_value != 0) {\n      FUN_08002a30(data,size);\n      if (3 < flag_value) {\n        flag_value = 3;\n      }\n      while( true ) {\n        if (flag_value == 0) break;\n        (**(code **)*data)(data,mask >> ((flag_value - 1 & 0x1f) << 3) & 0xff);\n        flag_value = flag_value - 1 & 0xff;\n      }\n      FUN_08002a58(data,0);\n    }\n    result = FUN_08007f0e(data + 5,(size & 0x7f) << 1,DAT_200003c8,value,masked_value);\n    if (result != 0) {\n      value = 0;\n    }\n    DAT_200003b5 = 0;\n    DAT_200003b7 = (char)value;\n    return value;\n  }\n  data[1] = 1;\n  return 0;\n}\n\n",
            "current_name": "process_data_08002b68",
            "entrypoint": "0x08002b68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002b68": "process_data_08002b68",
                "iVar1": "result",
                "param_1": "data",
                "param_2": "size",
                "param_3": "value",
                "param_4": "mask",
                "param_5": "byte_value",
                "uVar2": "flag_value",
                "uVar3": "masked_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002c00": {
            "additional_data": {
                "FUN_08002b68": {
                    "1": "perform_operation",
                    "2": "perform_initialization",
                    "4": "process_data"
                },
                "FUN_08002c00": {
                    "1": "initialize_components",
                    "2": "execute_initialization",
                    "3": "initialize_program",
                    "7": "initialize_system"
                },
                "param_1": {
                    "1": "buffer_pointer",
                    "2": "input_pointer",
                    "3": "output_buffer",
                    "4": "data_pointer"
                },
                "param_2": {
                    "1": "arg2",
                    "2": "length",
                    "3": "array_size",
                    "4": "input_size",
                    "6": "buffer_size"
                },
                "param_3": {
                    "1": "input_pointer",
                    "2": "param1",
                    "4": "parameter3",
                    "5": "param3",
                    "6": "value1"
                },
                "param_4": {
                    "1": "flag2",
                    "2": "input_size",
                    "3": "parameter4",
                    "5": "param4",
                    "6": "value2"
                },
                "param_5": {
                    "1": "sub_function_param5",
                    "14": "flag",
                    "2": "byte_param",
                    "3": "byte_value"
                }
            },
            "called": [
                "FUN_08002b68"
            ],
            "calling": [
                "FUN_08002c14"
            ],
            "code": "\nvoid initialize_system_08002c00(void)\n\n{\n  FUN_08002b68();\n  return;\n}\n\n",
            "current_name": "initialize_system_08002c00",
            "entrypoint": "0x08002c00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002c00": "initialize_system_08002c00"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002c14": {
            "additional_data": {
                "FUN_08002c00": {
                    "1": "setup_configuration",
                    "12": "perform_initialization",
                    "2": "initialize_data",
                    "6": "execute_initialization"
                },
                "FUN_08002c14": {
                    "1": "initialize_components",
                    "2": "execute_main_function",
                    "3": "initialize_program",
                    "5": "initialize",
                    "6": "initialize_system",
                    "8": "execute_initialization"
                }
            },
            "called": [
                "FUN_08002c00"
            ],
            "calling": [
                "FUN_08001c18"
            ],
            "code": "\nvoid execute_initialization_08002c14(void)\n\n{\n  FUN_08002c00();\n  return;\n}\n\n",
            "current_name": "execute_initialization_08002c14",
            "entrypoint": "0x08002c14",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002c14": "execute_initialization_08002c14"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002c1e": {
            "additional_data": {
                "FUN_08002948": {
                    "1": "perform_sub_operation",
                    "2": "perform_operation",
                    "3": "process_data"
                },
                "FUN_08002c1e": {
                    "1": "initialize_communication",
                    "2": "initialize_connection",
                    "3": "initialize_function",
                    "4": "execute_function",
                    "6": "initialize"
                },
                "param_1": {
                    "1": "input1",
                    "12": "arg1",
                    "2": "param1"
                },
                "param_2": {
                    "1": "reserved2",
                    "12": "arg2",
                    "2": "unused"
                },
                "param_3": {
                    "1": "system_param1",
                    "12": "arg3",
                    "2": "parameter3",
                    "3": "param3"
                },
                "param_4": {
                    "1": "input4",
                    "12": "arg4",
                    "2": "parameter4",
                    "3": "param4"
                },
                "undefined4 param_1": {
                    "1": "param1"
                },
                "undefined4 param_2": {
                    "1": "param2"
                },
                "undefined4 param_3": {
                    "1": "param3"
                },
                "undefined4 param_4": {
                    "1": "param4"
                }
            },
            "called": [
                "FUN_08002948"
            ],
            "calling": [],
            "code": "\nvoid initialize_08002c1e(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08002948(1,0xffff,arg3,arg4,arg4);\n  return;\n}\n\n",
            "current_name": "initialize_08002c1e",
            "entrypoint": "0x08002c1e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002c1e": "initialize_08002c1e",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002c2c": {
            "additional_data": {
                "DAT_200005d4": {
                    "1": "callback_function"
                },
                "FUN_08002c2c": {
                    "1": "execute_intercepted_code",
                    "22": "execute_callback",
                    "7": "execute_callback_function"
                },
                "param_1": {
                    "1": "callback_argument1",
                    "2": "argument1",
                    "3": "unused_param",
                    "6": "callback_function"
                },
                "param_2": {
                    "1": "intercepted_param2",
                    "2": "param_a",
                    "3": "arg2",
                    "4": "callback_param1",
                    "8": "arg1"
                },
                "param_3": {
                    "1": "argument3",
                    "2": "arg1",
                    "3": "arg3",
                    "4": "callback_param2",
                    "8": "arg2"
                },
                "param_4": {
                    "1": "callback_parameter4",
                    "2": "arg2",
                    "3": "callback_param3",
                    "7": "arg3"
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_callback_08002c2c(undefined4 callback_function,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  if (DAT_200005d4 != (code *)0x0) {\n    (*DAT_200005d4)(arg1,arg2,arg2,DAT_200005d4,arg3);\n  }\n  return;\n}\n\n",
            "current_name": "execute_callback_08002c2c",
            "entrypoint": "0x08002c2c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002c2c": "execute_callback_08002c2c",
                "param_1": "callback_function",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ce0": {
            "additional_data": {
                "&LAB_08002c40_1": {
                    "1": "label_1",
                    "2": "value4"
                },
                "&LAB_08002c54_1": {
                    "1": "function_label4",
                    "2": "value10"
                },
                "&LAB_08002c68_1": {
                    "1": "function_label5",
                    "2": "value12"
                },
                "&LAB_08002c7c_1": {
                    "1": "function_label2",
                    "2": "value6"
                },
                "&LAB_08002c90_1": {
                    "1": "label3",
                    "2": "value8"
                },
                "&LAB_08002ca4_1": {
                    "1": "function_label6",
                    "2": "value14"
                },
                "&LAB_08002cb8_1": {
                    "1": "label_7",
                    "2": "value16"
                },
                "&LAB_08002cd0_1": {
                    "1": "label_10",
                    "2": "value22"
                },
                "&LAB_08002dea_1": {
                    "1": "param22",
                    "2": "value20"
                },
                "&LAB_08002e1a_1": {
                    "1": "label_8",
                    "2": "value18"
                },
                "*(undefined *)(param_1 + 0x1f8)": {
                    "1": "flag_3",
                    "2": "status"
                },
                "*(undefined *)(param_1 + 0xc4)": {
                    "1": "initialized_flag",
                    "2": "flag_variable",
                    "3": "flag"
                },
                "*(undefined4 *)(param_1 + 200)": {
                    "1": "result",
                    "2": "value"
                },
                "0": {
                    "1": "param3"
                },
                "0x1f8": {
                    "1": "flag3"
                },
                "0x40": {
                    "1": "length"
                },
                "0x44": {
                    "1": "offset2"
                },
                "0x71": {
                    "1": "constant7",
                    "2": "value13"
                },
                "0x79": {
                    "1": "offset11",
                    "2": "value17"
                },
                "0x90": {
                    "1": "constant2",
                    "2": "value3"
                },
                "0xc0": {
                    "1": "constant3",
                    "2": "value5"
                },
                "0xc4": {
                    "1": "flag1"
                },
                "0xd0": {
                    "1": "param8",
                    "2": "value7"
                },
                "0xe0": {
                    "1": "param1",
                    "2": "value1"
                },
                "0xf0": {
                    "1": "constant8",
                    "2": "value15"
                },
                "0xf4": {
                    "1": "register_value5",
                    "2": "value9"
                },
                "0xf5": {
                    "1": "register_value6",
                    "2": "value11"
                },
                "0xf9": {
                    "1": "param21",
                    "2": "value19"
                },
                "0xff": {
                    "1": "constant11",
                    "2": "value21"
                },
                "200": {
                    "1": "flag2"
                },
                "FND_08002ce0": {
                    "1": "initialize_data"
                },
                "FUN_08002c2c": {
                    "1": "label_address1"
                },
                "FUN_08002c2c + 1": {
                    "1": "param2",
                    "2": "value2"
                },
                "FUN_08002ce0": {
                    "1": "initialize_and_configure",
                    "18": "initialize_function",
                    "2": "initialize",
                    "3": "initialize_parameters"
                },
                "FUN_0800314e": {
                    "1": "init_memory",
                    "2": "initialize_data",
                    "4": "allocate_memory",
                    "6": "initialize_pointer",
                    "7": "initialize_memory"
                },
                "FUN_080032bc": {
                    "1": "copy_to_memory",
                    "16": "copy_data",
                    "6": "copy_memory"
                },
                "FUN_08003306": {
                    "1": "perform_operation",
                    "2": "initialize_memory",
                    "8": "set_values"
                },
                "FUN_08003346": {
                    "1": "perform_action_one",
                    "2": "reverse_data"
                },
                "FUN_08003350": {
                    "1": "reverse_bits"
                },
                "FUN_08003366": {
                    "1": "reverse_pointer"
                },
                "FUN_08003370": {
                    "1": "modify_value_two"
                },
                "LAB_08002c40_1": {
                    "1": "label_address2",
                    "4": "label1"
                },
                "LAB_08002c54_1": {
                    "1": "configuration4",
                    "4": "label4"
                },
                "LAB_08002c68_1": {
                    "1": "third_label",
                    "4": "label5"
                },
                "LAB_08002c7c_1": {
                    "1": "constant2",
                    "4": "label2"
                },
                "LAB_08002c90_1": {
                    "1": "constant3",
                    "4": "label3"
                },
                "LAB_08002ca4_1": {
                    "1": "configuration6",
                    "4": "label6"
                },
                "LAB_08002cb8_1": {
                    "1": "seventh_label",
                    "4": "label7"
                },
                "LAB_08002cd0_1": {
                    "1": "configuration10",
                    "4": "label10"
                },
                "LAB_08002dea_1": {
                    "1": "ninth_label",
                    "4": "label9"
                },
                "LAB_08002e1a_1": {
                    "1": "constant8",
                    "4": "label8"
                },
                "iVar1": {
                    "1": "address_offset",
                    "10": "offset",
                    "2": "temp_var1",
                    "4": "temp_var"
                },
                "iVar2": {
                    "1": "param_2"
                },
                "param_1": {
                    "1": "buffer",
                    "2": "data",
                    "3": "input_param",
                    "4": "base_address",
                    "5": "param"
                },
                "param_1 + 0x1f8": {
                    "2": "variable3"
                },
                "param_1 + 0x40": {
                    "1": "memory_start"
                },
                "param_1 + 0x44": {
                    "1": "source_address"
                },
                "param_1 + 0xc4": {
                    "2": "variable1"
                },
                "param_1 + 200": {
                    "2": "variable2"
                },
                "param_2": {
                    "1": "value",
                    "2": "param2"
                },
                "param_3": {
                    "1": "param3"
                },
                "param_4": {
                    "1": "parameter"
                },
                "undefined": {
                    "1": "zero"
                },
                "undefined4": {
                    "1": "zero32"
                }
            },
            "called": [
                "FUN_08003350",
                "FUN_08003366",
                "FUN_08003306",
                "FUN_0800314e",
                "FUN_080032bc",
                "FUN_08003346",
                "FUN_08003370"
            ],
            "calling": [
                "FUN_08002dbc"
            ],
            "code": "\nint initialize_function_08002ce0(int param)\n\n{\n  int offset;\n  \n  FUN_0800314e(param + 0x40);\n  offset = param + 0x44;\n  FUN_080032bc(offset,param,0x40);\n  *(zero *)(param + 0xc4) = 0;\n  *(zero32 *)(param + 200) = 0;\n  *(zero *)(param + 0x1f8) = 0;\n  FUN_08003306(offset,0xe0,FUN_08002c2c + 1,0);\n  FUN_08003306(offset,0x90,value4,0);\n  FUN_08003306(offset,0xc0,value6,0);\n  FUN_08003306(offset,0xd0,value8,0);\n  FUN_08003306(offset,0xf4,value10,0);\n  FUN_08003306(offset,0xf5,value12,0);\n  FUN_08003366(offset,0x71,value14,0);\n  FUN_08003370(offset,0xf0,value16,0);\n  FUN_08003346(offset,0x79,value18,param);\n  FUN_08003350(offset,0xf9,value20,param);\n  FUN_08003350(offset,0xff,value22,0);\n  return param;\n}\n\n",
            "current_name": "initialize_function_08002ce0",
            "entrypoint": "0x08002ce0",
            "imported": false,
            "improved": true,
            "renaming": {
                "&LAB_08002c40_1": "value4",
                "&LAB_08002c54_1": "value10",
                "&LAB_08002c68_1": "value12",
                "&LAB_08002c7c_1": "value6",
                "&LAB_08002c90_1": "value8",
                "&LAB_08002ca4_1": "value14",
                "&LAB_08002cb8_1": "value16",
                "&LAB_08002cd0_1": "value22",
                "&LAB_08002dea_1": "value20",
                "&LAB_08002e1a_1": "value18",
                "FUN_08002ce0": "initialize_function_08002ce0",
                "LAB_08002c40_1": "label1",
                "LAB_08002c54_1": "label4",
                "LAB_08002c68_1": "label5",
                "LAB_08002c7c_1": "label2",
                "LAB_08002c90_1": "label3",
                "LAB_08002ca4_1": "label6",
                "LAB_08002cb8_1": "label7",
                "LAB_08002cd0_1": "label10",
                "LAB_08002dea_1": "label9",
                "LAB_08002e1a_1": "label8",
                "iVar1": "offset",
                "param_1": "param",
                "undefined": "zero",
                "undefined4": "zero32"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002dbc": {
            "additional_data": {
                "&DAT_200003d4": {
                    "1": "data",
                    "2": "data_buffer"
                },
                "DAT_200003d4": {
                    "1": "data"
                },
                "FUN_08002ce0": {
                    "1": "handle_data_processing",
                    "2": "perform_operation",
                    "4": "execute_function",
                    "7": "process_data"
                },
                "FUN_08002ce0_param_1": {
                    "1": "data_address"
                },
                "FUN_08002dbc": {
                    "1": "handle_param_changes",
                    "2": "check_and_call",
                    "3": "check_and_execute",
                    "4": "check_and_call_function",
                    "9": "check_param"
                },
                "int param_1": {
                    "1": ""
                },
                "param_1": {
                    "1": "status_code",
                    "2": "first_param",
                    "3": "input_param",
                    "4": "value"
                },
                "param_2": {
                    "1": "flag_value",
                    "2": "value2",
                    "5": "flag",
                    "9": "value"
                }
            },
            "called": [
                "FUN_08002ce0"
            ],
            "calling": [],
            "code": "\nvoid check_param_08002dbc(int value,int value)\n\n{\n  if (value != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_08002ce0(&DAT_200003d4);\n  }\n  return;\n}\n\n",
            "current_name": "check_param_08002dbc",
            "entrypoint": "0x08002dbc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002dbc": "check_param_08002dbc",
                "param_1": "value",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ddc": {
            "additional_data": {
                "FUN_08002ddc": {
                    "1": "update_values",
                    "2": "initialize_memory",
                    "4": "initialize_buffer"
                },
                "FUN_0800322c": {
                    "1": "perform_operation",
                    "3": "call_sub_function"
                },
                "FUN_0800322c_param_1": {
                    "1": "processed_data_ptr"
                },
                "FUN_0800322c_param_2": {
                    "1": "process_input1"
                },
                "FUN_0800322c_param_3": {
                    "1": "process_input2"
                },
                "param_1": {
                    "1": "memory_address",
                    "2": "data",
                    "3": "input",
                    "4": "base_address"
                },
                "param_2": {
                    "1": "src_value",
                    "2": "value_1",
                    "5": "value1"
                },
                "param_3": {
                    "1": "value_3",
                    "2": "value_2",
                    "5": "value2"
                },
                "param_4": {
                    "1": "data_end_address",
                    "2": "unused_param3",
                    "3": "output_param",
                    "5": "param4"
                }
            },
            "called": [
                "FUN_0800322c"
            ],
            "calling": [
                "FUN_08002e26"
            ],
            "code": "\nvoid initialize_buffer_08002ddc(int base_address,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_0800322c(base_address + 0x40,2,5,param4,param4);\n  return;\n}\n\n",
            "current_name": "initialize_buffer_08002ddc",
            "entrypoint": "0x08002ddc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ddc": "initialize_buffer_08002ddc",
                "param_1": "base_address",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002df6": {
            "additional_data": {
                "*(byte *)(param_1 + 0xc4)": {
                    "1": "byte_value"
                },
                "*(byte *)(param_1 + 0xc4) - 2": {
                    "1": "subfunction_param2"
                },
                "FUN_08002df6": {
                    "1": "handle_param",
                    "24": "process_data"
                },
                "FUN_080031ce": {
                    "1": "process_sub_data",
                    "2": "process_data",
                    "9": "process_sub_function"
                },
                "param_1": {
                    "1": "param_1",
                    "13": "data",
                    "2": "input_param",
                    "4": "data_ptr",
                    "7": "input_data"
                },
                "param_1 + 0x40": {
                    "1": "result_pointer"
                },
                "param_1 + 0xc4": {
                    "1": "data_offset"
                },
                "param_1 + 200": {
                    "1": "subfunction_param_ptr",
                    "2": "data_pointer"
                },
                "param_2": {
                    "1": "param_2",
                    "3": "param2",
                    "5": "param1"
                },
                "param_3": {
                    "1": "arg2",
                    "3": "param3",
                    "5": "param2"
                },
                "param_4": {
                    "1": "sub_param3",
                    "3": "param4",
                    "5": "param3"
                },
                "param_5": {
                    "1": "sub_func_param4",
                    "2": "offset",
                    "3": "param5",
                    "5": "param4"
                },
                "puVar1": {
                    "1": "binary_pointer",
                    "2": "pointer_to_data",
                    "3": "ptr",
                    "4": "ptr_data",
                    "5": "data_ptr"
                },
                "puVar1[2]": {
                    "1": "subfunction_param3"
                }
            },
            "called": [
                "FUN_080031ce"
            ],
            "calling": [
                "FUN_08002e26"
            ],
            "code": "\nvoid process_data_08002df6(int data)\n\n{\n  undefined *data_ptr;\n  \n  if (*(byte *)(data + 0xc4) == 0) {\n    return;\n  }\n  data_ptr = *(undefined **)(data + 200);\n  FUN_080031ce(data + 0x40,*data_ptr,data_ptr[1],*(byte *)(data + 0xc4) - 2,data_ptr + 2);\n  return;\n}\n\n",
            "current_name": "process_data_08002df6",
            "entrypoint": "0x08002df6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002df6": "process_data_08002df6",
                "param_1": "data",
                "puVar1": "data_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002e26": {
            "additional_data": {
                "*param_1": {
                    "1": "pointer_value"
                },
                "FUN_08002ddc": {
                    "1": "process_param_related_data",
                    "2": "process_data1",
                    "6": "process_data"
                },
                "FUN_08002df6": {
                    "1": "process_function2",
                    "2": "process_data2"
                },
                "FUN_08002e26": {
                    "1": "set_param_value",
                    "2": "set_param_and_call_subfunctions",
                    "4": "update_parameter_value",
                    "5": "update_data"
                },
                "FUN_08003154": {
                    "1": "validate_data",
                    "2": "initialize_data"
                },
                "param_1": {
                    "1": "data_structure_pointer",
                    "11": "base_address",
                    "2": "data_pointer",
                    "5": "object_address"
                },
                "param_1 + 0x40": {
                    "1": "pointer_address"
                },
                "param_1 + 0xc0": {
                    "1": "updated_address"
                },
                "param_2": {
                    "1": "new_data",
                    "12": "new_value",
                    "2": "value",
                    "4": "parameter_value"
                },
                "param_3": {
                    "1": "param_a",
                    "2": "unused_parameter"
                },
                "param_4": {
                    "1": "unused2",
                    "2": "unused_parameter"
                }
            },
            "called": [
                "FUN_08002ddc",
                "FUN_08002df6",
                "FUN_08003154"
            ],
            "calling": [
                "FUN_08003048"
            ],
            "code": "\nvoid update_data_08002e26(int base_address,undefined4 new_value)\n\n{\n  *(undefined4 *)(base_address + 0xc0) = new_value;\n  FUN_08003154(base_address + 0x40);\n  FUN_08002ddc(base_address);\n  FUN_08002df6(base_address);\n  return;\n}\n\n",
            "current_name": "update_data_08002e26",
            "entrypoint": "0x08002e26",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002e26": "update_data_08002e26",
                "param_1": "base_address",
                "param_2": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002e44": {
            "additional_data": {
                "FUN_08000178": {
                    "1": "first_char_of_string"
                },
                "FUN_08002e44": {
                    "1": "extract_filename",
                    "2": "extract_and_modify_string",
                    "3": "extract_file_path"
                },
                "FUN_08009190": {
                    "1": "allocate_buffer",
                    "2": "allocate_memory"
                },
                "FUN_080091a0": {
                    "1": "perform_function_a"
                },
                "FUN_08009954": {
                    "1": "copy_data",
                    "2": "copy_substring"
                },
                "FUN_0800997e": {
                    "1": "find_delimiter_position"
                },
                "FUN_080099a4": {
                    "1": "find_index_of",
                    "2": "find_extension"
                },
                "bVar1": {
                    "1": "processed_value",
                    "11": "byte_value",
                    "2": "offset",
                    "8": "byte_var"
                },
                "cVar2": {
                    "1": "first_character",
                    "14": "char_value",
                    "2": "char_result",
                    "8": "char_var"
                },
                "iVar3": {
                    "1": "result",
                    "2": "string_comparison_result",
                    "4": "file_extension"
                },
                "iVar4": {
                    "1": "result_2",
                    "15": "slash_index",
                    "4": "result2"
                },
                "param_1": {
                    "1": "dest_ptr",
                    "12": "output_buffer",
                    "2": "file_info"
                },
                "param_2": {
                    "1": "input_pointer",
                    "2": "input_param",
                    "3": "input_string",
                    "5": "input_path",
                    "6": "input_buffer",
                    "7": "file_path"
                },
                "param_3": {
                    "1": "undefined_var_1",
                    "4": "param_3",
                    "5": "undefined1",
                    "7": "undefined_param1",
                    "8": "param3"
                },
                "param_4": {
                    "1": "undefined_var_2",
                    "4": "param_4",
                    "5": "undefined2",
                    "7": "undefined_param2",
                    "8": "param4"
                },
                "puVar5": {
                    "1": "ptr",
                    "2": "new_string",
                    "3": "buffer_pointer",
                    "4": "string_ptr"
                }
            },
            "called": [
                "FUN_0800997e",
                "FUN_08009954",
                "FUN_080099a4",
                "FUN_08000178",
                "FUN_080091a0",
                "FUN_08009190"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nvoid extract_file_path_08002e44(int output_buffer,int file_path,undefined param3,undefined param4)\n\n{\n  byte byte_value;\n  char char_value;\n  int result1;\n  int slash_index;\n  undefined *string_ptr;\n  \n  result1 = FUN_080099a4(file_path,\".cpp\");\n  slash_index = FUN_0800997e(file_path,0x2f);\n  if (slash_index == 0) {\n    slash_index = FUN_0800997e(file_path,0x5c);\n  }\n  if (slash_index != 0) {\n    file_path = slash_index + 1;\n  }\n  if (result1 == 0) {\n    char_value = FUN_08000178(file_path);\n    *(char *)(output_buffer + 0xc4) = char_value + '\\x02';\n  }\n  else {\n    *(char *)(output_buffer + 0xc4) = ((char)result1 - (char)file_path) + '\\x02';\n  }\n  FUN_080091a0(*(undefined4 *)(output_buffer + 200));\n  byte_value = *(byte *)(output_buffer + 0xc4);\n  string_ptr = (undefined *)FUN_08009190(byte_value + 1);\n  *(undefined **)(output_buffer + 200) = string_ptr;\n  string_ptr[byte_value] = 0;\n  *string_ptr = param3;\n  string_ptr[1] = param4;\n  FUN_08009954(string_ptr + 2,file_path,*(byte *)(output_buffer + 0xc4) - 2);\n  return;\n}\n\n",
            "current_name": "extract_file_path_08002e44",
            "entrypoint": "0x08002e44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002e44": "extract_file_path_08002e44",
                "bVar1": "byte_value",
                "cVar2": "char_value",
                "iVar3": "result1",
                "iVar4": "slash_index",
                "param_1": "output_buffer",
                "param_2": "file_path",
                "param_3": "param3",
                "param_4": "param4",
                "puVar5": "string_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ec4": {
            "additional_data": {
                "(**(int **)(param_1 + 0xc0) + 8)": {
                    "1": "function_ptr_to_execute"
                },
                "*(code **)(**(int **)(param_1 + 0xc0) + 8)": {
                    "1": "function_to_execute"
                },
                "*(int *)(param_1 + 0xc0)": {
                    "1": "function_pointer_address"
                },
                "*(int **)(param_1 + 0xc0)": {
                    "1": "ptr_to_function_pointer"
                },
                "**(code **)(**(int **)(param_1 + 0xc0) + 8)": {
                    "1": "callback_function",
                    "2": "function_to_execute"
                },
                "**(int **)(param_1 + 0xc0)": {
                    "1": "function",
                    "2": "function_table"
                },
                "**(int **)(param_1 + 0xc0) + 8": {
                    "1": "callback_function",
                    "2": "function_to_execute"
                },
                "0xc0": {
                    "1": "function_offset"
                },
                "8": {
                    "4": "function_offset"
                },
                "<original_variable_name_1>": {
                    "1": "<new_variable_name_1>"
                },
                "<original_variable_name_2>": {
                    "1": "<new_variable_name_2>"
                },
                "<original_variable_name_n>": {
                    "1": "<new_variable_name_n>"
                },
                "<unnamed_variable_1>": {
                    "1": "ptr_to_function_ptr"
                },
                "<unnamed_variable_2>": {
                    "1": "ptr_to_function"
                },
                "<unnamed_variable_3>": {
                    "1": "function_to_execute"
                },
                "F": {
                    "1": "execute_function"
                },
                "FUN_08002ec4": {
                    "1": "execute_function_from_ptr",
                    "10": "execute_function",
                    "2": "execute_callback_function",
                    "8": "execute_callback"
                },
                "code": {
                    "1": "function_pointer"
                },
                "int": {
                    "1": "integer"
                },
                "param_1": {
                    "1": "callback_function",
                    "10": "function_pointer",
                    "2": "function_ptr"
                },
                "param_1 + 0xc0": {
                    "1": "callback_ptr",
                    "4": "function_pointer_offset"
                },
                "param_2": {
                    "1": "additional_parameter"
                },
                "var_1": {
                    "1": "function_address"
                },
                "var_2": {
                    "1": "function_pointer_address"
                },
                "var_3": {
                    "1": "function_to_execute"
                }
            },
            "called": [],
            "calling": [
                "FUN_080022f8"
            ],
            "code": "\nvoid execute_function_08002ec4(integer function_pointer)\n\n{\n  (**(function_pointer **)(**(integer **)(function_pointer + 0xc0) + 8))();\n  return;\n}\n\n",
            "current_name": "execute_function_08002ec4",
            "entrypoint": "0x08002ec4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ec4": "execute_function_08002ec4",
                "code": "function_pointer",
                "int": "integer",
                "param_1": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ed2": {
            "additional_data": {
                "<original_function_name>": {
                    "1": "process_data"
                },
                "FUN_08002ed2": {
                    "1": "check_return_value_and_update",
                    "13": "extract_and_process_data",
                    "2": "execute_function",
                    "3": "process_param"
                },
                "FUN_08003474": {
                    "1": "update_data_section",
                    "2": "update_data",
                    "6": "process_data"
                },
                "param_1": {
                    "1": "input_data",
                    "2": "param",
                    "3": "input_param",
                    "4": "data_address"
                },
                "param_2": {
                    "1": "data_val",
                    "2": "processed_data",
                    "3": "data_value"
                },
                "uVar1": {
                    "1": "function_result",
                    "24": "result",
                    "3": "return_value"
                },
                "uvar1": {
                    "1": "result"
                }
            },
            "called": [
                "FUN_08003474"
            ],
            "calling": [
                "FUN_080022f8"
            ],
            "code": "\nvoid extract_and_process_data_08002ed2(int data_ptr)\n\n{\n  uint result;\n  \n  result = (**(code **)(**(int **)(data_ptr + 0xc0) + 0xc))();\n  if (result != 0xffffffff) {\n    FUN_08003474(data_ptr + 0x44,result & 0xff);\n  }\n  return;\n}\n\n",
            "current_name": "extract_and_process_data_08002ed2",
            "entrypoint": "0x08002ed2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ed2": "extract_and_process_data_08002ed2",
                "param_1": "data_ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ef2": {
            "additional_data": {
                "*param_1": {
                    "1": "array_pointer"
                },
                "FUN_08002ef2": {
                    "1": "extract_and_process_data",
                    "2": "initialize",
                    "3": "process_data",
                    "4": "execute_function"
                },
                "FUN_08003158": {
                    "1": "copy_and_store_data",
                    "2": "perform_operation",
                    "3": "copy_data",
                    "5": "sub_function"
                },
                "param_1": {
                    "1": "dest_data_ptr",
                    "2": "input_param",
                    "3": "data_ptr"
                },
                "param_2": {
                    "1": "dest_size",
                    "2": "length",
                    "3": "param2",
                    "5": "value"
                },
                "param_3": {
                    "1": "parameter_3",
                    "3": "param3",
                    "4": "data",
                    "5": "value"
                },
                "param_4": {
                    "1": "option",
                    "2": "size",
                    "3": "value",
                    "4": "address"
                }
            },
            "called": [
                "FUN_08003158"
            ],
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "code": "\nvoid execute_function_08002ef2(int data_ptr,undefined4 size,undefined2 value,undefined4 address)\n\n{\n  FUN_08003158(data_ptr + 0x40,size,value,address,address);\n  return;\n}\n\n",
            "current_name": "execute_function_08002ef2",
            "entrypoint": "0x08002ef2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ef2": "execute_function_08002ef2",
                "param_1": "data_ptr",
                "param_2": "size",
                "param_3": "value",
                "param_4": "address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002efe": {
            "additional_data": {
                "*param_1": {
                    "1": "array_ptr"
                },
                "FUN_08002efe": {
                    "1": "copy_data_and_call_function",
                    "2": "extract_and_process_data",
                    "6": "process_data"
                },
                "FUN_0800319e": {
                    "1": "copy_and_call_another_function_sub",
                    "2": "copy_data",
                    "4": "process_data"
                },
                "param_1": {
                    "1": "param",
                    "2": "input_param",
                    "3": "buffer",
                    "5": "data"
                },
                "param_2": {
                    "1": "param_2_val",
                    "2": "param_2",
                    "3": "param",
                    "6": "size"
                },
                "param_3": {
                    "1": "identifier",
                    "2": "param_3",
                    "4": "value"
                },
                "param_4": {
                    "1": "num",
                    "2": "param4",
                    "3": "value"
                },
                "undefined2": {
                    "1": "ushort"
                },
                "undefined4": {
                    "1": "uint"
                }
            },
            "called": [
                "FUN_0800319e"
            ],
            "calling": [
                "FUN_08000be8"
            ],
            "code": "\nvoid process_data_08002efe(int data,uint size,ushort value,uint value)\n\n{\n  FUN_0800319e(data + 0x40,size,value,value,value);\n  return;\n}\n\n",
            "current_name": "process_data_08002efe",
            "entrypoint": "0x08002efe",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002efe": "process_data_08002efe",
                "param_1": "data",
                "param_2": "size",
                "param_3": "value",
                "param_4": "value",
                "undefined2": "ushort",
                "undefined4": "uint"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f0a": {
            "additional_data": {
                "FUN_08002f0a": {
                    "1": "initialize_sub_function",
                    "2": "initialize_components",
                    "3": "initialize_function",
                    "4": "initialize_data"
                },
                "FUN_0800325a": {
                    "1": "perform_operation",
                    "2": "sub_function",
                    "5": "call_sub_function",
                    "8": "process_data"
                },
                "param_1": {
                    "1": "data_offset",
                    "2": "param",
                    "3": "data",
                    "5": "input_param",
                    "6": "input_value"
                },
                "param_2": {
                    "1": "sub_func_param2",
                    "2": "ptr",
                    "4": "param_2"
                },
                "param_3": {
                    "1": "arg2",
                    "2": "size",
                    "3": "data_length",
                    "4": "param_3"
                },
                "param_4": {
                    "1": "sub_func_param4",
                    "3": "offset",
                    "4": "param_4"
                }
            },
            "called": [
                "FUN_0800325a"
            ],
            "calling": [
                "FUN_08001c18"
            ],
            "code": "\nvoid initialize_data_08002f0a(int input_value)\n\n{\n  FUN_0800325a(input_value + 0x40);\n  return;\n}\n\n",
            "current_name": "initialize_data_08002f0a",
            "entrypoint": "0x08002f0a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f0a": "initialize_data_08002f0a",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f14": {
            "additional_data": {
                "FUN_08002f14": {
                    "1": "initialize_and_call_subfunction",
                    "3": "initialize_function",
                    "6": "initialize_memory",
                    "7": "initialize_data"
                },
                "FUN_080032a2": {
                    "1": "perform_operation",
                    "8": "process_data"
                },
                "param_1": {
                    "1": "param",
                    "2": "input_param",
                    "3": "start_address",
                    "5": "offset"
                },
                "param_2": {
                    "1": "arg1"
                },
                "param_3": {
                    "1": "unused_param_3"
                },
                "param_4": {
                    "1": "unused_param_4"
                }
            },
            "called": [
                "FUN_080032a2"
            ],
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18",
                "FUN_08000500",
                "FUN_080005f8"
            ],
            "code": "\nvoid initialize_data_08002f14(int offset)\n\n{\n  FUN_080032a2(offset + 0x40);\n  return;\n}\n\n",
            "current_name": "initialize_data_08002f14",
            "entrypoint": "0x08002f14",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f14": "initialize_data_08002f14",
                "param_1": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f1e": {
            "additional_data": {
                "**(code **)**(undefined4 **)(param_1 + 0xc0)": {
                    "1": "function_to_call",
                    "2": "function_pointer"
                },
                "**(code **)**(undefined4 **)(param_1 + 0xc0))": {
                    "1": "function_to_execute"
                },
                "<unnamed_variable_1>": {
                    "1": "function_pointer_offset"
                },
                "F1_08002f1e": {
                    "1": "execute_callback"
                },
                "FUN_08002f1e": {
                    "1": "execute_code_from_address",
                    "13": "execute_function",
                    "2": "execute_function_at_address",
                    "5": "execute_callback"
                },
                "c0": {
                    "1": "offset"
                },
                "code": {
                    "1": "function_code"
                },
                "code **": {
                    "1": "function_pointer_ptr"
                },
                "param_1": {
                    "1": "callback_ptr",
                    "16": "function_pointer",
                    "2": "function_address",
                    "3": "callback"
                },
                "param_1 + 0xc0": {
                    "1": "function_ptr",
                    "3": "function_pointer_offset"
                },
                "undefined4 **": {
                    "1": "function_pointer_ptr_ptr"
                }
            },
            "called": [],
            "calling": [
                "FUN_08001cd0"
            ],
            "code": "\nvoid execute_function_08002f1e(int function_pointer)\n\n{\n  (**(function_code **)**(undefined4 **)(function_pointer + 0xc0))();\n  return;\n}\n\n",
            "current_name": "execute_function_08002f1e",
            "entrypoint": "0x08002f1e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f1e": "execute_function_08002f1e",
                "code": "function_code",
                "param_1": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f2c": {
            "additional_data": {
                "0x90": {
                    "1": "condition_5"
                },
                "0xc0": {
                    "1": "condition_6"
                },
                "0xd0": {
                    "1": "condition_1"
                },
                "0xe0": {
                    "1": "condition_4"
                },
                "0xf4": {
                    "1": "condition_2"
                },
                "0xf5": {
                    "1": "condition_3"
                },
                "DAT_200005d4": {
                    "1": "data_4"
                },
                "DAT_200005dc": {
                    "1": "data_5"
                },
                "DAT_200005e0": {
                    "1": "data_2"
                },
                "DAT_200005e4": {
                    "1": "data_3"
                },
                "DAT_200005ec": {
                    "1": "data_6"
                },
                "DAT_200005f0": {
                    "1": "data_1"
                },
                "FUN_08002f2c": {
                    "1": "update_parameters",
                    "17": "update_data",
                    "2": "update_data_value",
                    "4": "set_data_value"
                },
                "param_1": {
                    "1": "unknown_param",
                    "11": "param1",
                    "2": "param_1",
                    "8": "status"
                },
                "param_2": {
                    "1": "data_flag",
                    "2": "opcode",
                    "3": "data_code",
                    "4": "value",
                    "5": "param2",
                    "6": "code"
                },
                "param_3": {
                    "1": "value_2",
                    "10": "new_value",
                    "2": "new_data",
                    "5": "param3",
                    "6": "value"
                },
                "uVar1": {
                    "1": "temp",
                    "2": "temp_var",
                    "4": "temp_value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nvoid update_data_08002f2c(undefined4 param1,uint code,undefined4 new_value)\n\n{\n  undefined4 temp_value;\n  \n  if (code == 0xd0) {\n    DAT_200005f0 = new_value;\n    return;\n  }\n  if (0xd0 < code) {\n    if (code == 0xf4) {\n      DAT_200005e0 = new_value;\n      return;\n    }\n    temp_value = new_value;\n    if ((code != 0xf5) && (temp_value = DAT_200005e4, code == 0xe0)) {\n      DAT_200005d4 = new_value;\n      return;\n    }\n    DAT_200005e4 = temp_value;\n    return;\n  }\n  if (code == 0x90) {\n    DAT_200005dc = new_value;\n    return;\n  }\n  if (code != 0xc0) {\n    return;\n  }\n  DAT_200005ec = new_value;\n  return;\n}\n\n",
            "current_name": "update_data_08002f2c",
            "entrypoint": "0x08002f2c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f2c": "update_data_08002f2c",
                "param_1": "param1",
                "param_2": "code",
                "param_3": "new_value",
                "uVar1": "temp_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f84": {
            "additional_data": {
                "DAT_200005e8": {
                    "1": "updated_dat_value"
                },
                "FUN_08002f84": {
                    "1": "update_value_if_needed",
                    "9": "update_data"
                },
                "param_1": {
                    "1": "param",
                    "2": "value_to_check",
                    "3": "arg1",
                    "4": "param1"
                },
                "param_2": {
                    "1": "input_param",
                    "12": "value",
                    "3": "status",
                    "4": "value_to_check"
                },
                "param_3": {
                    "1": "parameter_value",
                    "11": "new_value",
                    "2": "value_to_store",
                    "4": "new_data"
                }
            },
            "called": [],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nvoid update_data_08002f84(undefined4 unused_param,int value,undefined4 new_value)\n\n{\n  if (value == 0xff) {\n    DAT_200005e8 = new_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_08002f84",
            "entrypoint": "0x08002f84",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f84": "update_data_08002f84",
                "param_1": "unused_param",
                "param_2": "value",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f94": {
            "additional_data": {
                "FUN_08002f94": {
                    "1": "set_data_value",
                    "2": "set_global_variable",
                    "3": "store_param_3",
                    "5": "set_data",
                    "9": "initialize_data"
                },
                "param_1": {
                    "1": "function_param1",
                    "2": "parameter1",
                    "3": "value1"
                },
                "param_1_unused": {
                    "1": "unused_value_1"
                },
                "param_2": {
                    "1": "new_param2",
                    "2": "parameter2",
                    "3": "value_2",
                    "4": "unused_param_2"
                },
                "param_2_unused": {
                    "1": "unused_value_2"
                },
                "param_3": {
                    "1": "param",
                    "2": "data_value",
                    "3": "data",
                    "4": "new_value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nvoid initialize_data_08002f94(undefined4 value1,undefined4 unused_param_2,undefined4 new_value)\n\n{\n  DAT_200005d0 = new_value;\n  return;\n}\n\n",
            "current_name": "initialize_data_08002f94",
            "entrypoint": "0x08002f94",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f94": "initialize_data_08002f94",
                "param_1": "value1",
                "param_2": "unused_param_2",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002fa0": {
            "additional_data": {
                "0xcc": {
                    "1": "byte_offset"
                },
                "FUN_08002fa0": {
                    "1": "get_item_from_offset",
                    "5": "get_value_at_offset",
                    "6": "get_byte_from_offset",
                    "8": "get_value_from_offset"
                },
                "param_1": {
                    "1": "address_offset",
                    "2": "index",
                    "28": "offset"
                },
                "param_2": {
                    "1": "pointer",
                    "29": "base_address"
                }
            },
            "called": [],
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_080022f8",
                "FUN_080005f8"
            ],
            "code": "\nundefined get_value_from_offset_08002fa0(int offset,int base_address)\n\n{\n  return *(undefined *)(base_address + offset + 0xcc);\n}\n\n",
            "current_name": "get_value_from_offset_08002fa0",
            "entrypoint": "0x08002fa0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002fa0": "get_value_from_offset_08002fa0",
                "param_1": "offset",
                "param_2": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002fa8": {
            "additional_data": {
                "*(char *)(param_1 + param_2 + 0xcc)": {
                    "1": "current_character"
                },
                "*(undefined *)(param_1 + param_2 + 0xcc)": {
                    "1": "new_character"
                },
                "<original_function_name>": {
                    "1": "update_character_at_index"
                },
                "<param_1>": {
                    "1": "array_base_address"
                },
                "<param_2>": {
                    "1": "index"
                },
                "<param_3>": {
                    "1": "new_value"
                },
                "FUN_08002fa8": {
                    "1": "update_value_if_not_seven_f",
                    "18": "update_character",
                    "2": "update_char_if_not127",
                    "3": "update_character_byte"
                },
                "param_1": {
                    "1": "character_base",
                    "2": "address",
                    "26": "base_address"
                },
                "param_2": {
                    "30": "offset"
                },
                "param_3": {
                    "1": "new_byte",
                    "20": "new_value",
                    "3": "value",
                    "4": "new_character"
                },
                "var_1": {
                    "1": "character_byte"
                }
            },
            "called": [],
            "calling": [
                "FUN_080005f8"
            ],
            "code": "\nvoid update_character_08002fa8(int base_address,int offset,undefined new_value)\n\n{\n  if (*(char *)(base_address + offset + 0xcc) != '\\x7f') {\n    *(undefined *)(base_address + offset + 0xcc) = new_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_character_08002fa8",
            "entrypoint": "0x08002fa8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002fa8": "update_character_08002fa8",
                "param_1": "base_address",
                "param_2": "offset",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002fba": {
            "additional_data": {
                "*4": {
                    "1": "size"
                },
                "+ 0x42": {
                    "1": "offset_increment"
                },
                "+0x42": {
                    "1": "additional_offset"
                },
                "0x42": {
                    "2": "offset"
                },
                "4": {
                    "1": "element_size"
                },
                "<anonymous>": {
                    "1": "offset"
                },
                "<new_variable_name_1>": {
                    "1": "<original_variable_name_1>"
                },
                "<original_variable_name_1>": {
                    "1": "<new_variable_name_1>"
                },
                "DAT_": {
                    "1": "unused_variable"
                },
                "FUN_08002fba": {
                    "1": "retrieve_element_by_index",
                    "2": "retrieve_value",
                    "3": "get_indexed_value",
                    "4": "get_value_from_offset",
                    "5": "get_offset_value"
                },
                "local_1": {
                    "1": "target_address"
                },
                "local_2": {
                    "1": "value"
                },
                "param_1": {
                    "1": "array_address",
                    "20": "base_address",
                    "3": "array",
                    "4": "array_base"
                },
                "param_1 + (param_2 + 0x42) * 4": {
                    "1": "array_element_address"
                },
                "param_2": {
                    "1": "index_offset",
                    "12": "offset",
                    "16": "index",
                    "2": "offset_index"
                },
                "param_2 + 0x42": {
                    "1": "adjusted_offset"
                },
                "param_3": {
                    "1": "offset"
                },
                "param_4": {
                    "1": "size"
                },
                "param_n": {
                    "1": "new_parameter_name_n"
                }
            },
            "called": [],
            "calling": [
                "FUN_08001cd0"
            ],
            "code": "\nundefined4 get_offset_value_08002fba(int base_address,int index)\n\n{\n  return *(undefined4 *)(base_address + (index + 0x42) * 4);\n}\n\n",
            "current_name": "get_offset_value_08002fba",
            "entrypoint": "0x08002fba",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002fba": "get_offset_value_08002fba",
                "param_1": "base_address",
                "param_2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002fc2": {
            "additional_data": {
                "*(undefined4 *)(param_1 + (param_2 + 0x42) * 4)": {
                    "1": "target_address"
                },
                "<new_variable_name>": {
                    "1": "array_element_address"
                },
                "FUN_08002fc2": {
                    "1": "update_value_at_index",
                    "2": "set_value_at_index",
                    "4": "store_value_at_offset",
                    "5": "write_to_memory"
                },
                "offset * 4": {
                    "1": "relative_address"
                },
                "param_1": {
                    "1": "param_base_address",
                    "15": "base_address",
                    "2": "array_base",
                    "3": "memory_address",
                    "4": "array_pointer"
                },
                "param_1 + (param_2 + 0x42) * 4": {
                    "1": "address"
                },
                "param_2": {
                    "11": "offset",
                    "18": "index",
                    "2": "offset_index"
                },
                "param_2 + 0x42": {
                    "1": "offset"
                },
                "param_3": {
                    "1": "data",
                    "23": "value",
                    "7": "new_value"
                }
            },
            "called": [],
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "code": "\nvoid write_to_memory_08002fc2(int base_address,int index,undefined4 value)\n\n{\n  *(undefined4 *)(base_address + (index + 0x42) * 4) = value;\n  return;\n}\n\n",
            "current_name": "write_to_memory_08002fc2",
            "entrypoint": "0x08002fc2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002fc2": "write_to_memory_08002fc2",
                "param_1": "base_address",
                "param_2": "index",
                "param_3": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002fca": {
            "additional_data": {
                "FUNC_08008ac4": {
                    "1": "process_value2"
                },
                "FUN_08002fca": {
                    "1": "iterate_over_param",
                    "13": "process_data",
                    "2": "perform_operation",
                    "3": "execute_loop",
                    "5": "process_loop"
                },
                "FUN_08008a24": {
                    "1": "change_state"
                },
                "FUN_08008ac4": {
                    "1": "perform_action"
                },
                "param_1": {
                    "1": "input1",
                    "10": "arg1",
                    "5": "unused_param"
                },
                "param_2": {
                    "1": "value2",
                    "10": "arg2",
                    "2": "counter",
                    "3": "count"
                },
                "param_3": {
                    "1": "iteration_count",
                    "2": "length",
                    "6": "loop_count",
                    "7": "count",
                    "8": "num_iterations"
                },
                "param_4": {
                    "1": "first_input_parameter",
                    "2": "param_4",
                    "3": "value1",
                    "6": "param_a",
                    "9": "arg4"
                },
                "param_5": {
                    "1": "value_to_pass_func_2",
                    "2": "param_5",
                    "3": "value2",
                    "6": "param_b",
                    "9": "arg5"
                },
                "uVar1": {
                    "1": "iter_count",
                    "2": "iteration_counter",
                    "3": "counter",
                    "4": "iteration",
                    "5": "iteration_count",
                    "6": "i"
                }
            },
            "called": [
                "FUN_08008ac4",
                "FUN_08008a24"
            ],
            "calling": [
                "FUN_08003002"
            ],
            "code": "\nvoid process_data_08002fca(undefined4 arg1,undefined4 arg2,int num_iterations,undefined4 arg4,\n                 undefined4 arg5)\n\n{\n  uint i;\n  \n  for (i = 0; (int)i < num_iterations; i = i + 1 & 0xff) {\n    FUNC_08008ac4(arg5);\n    FUN_08008a24(arg2,1);\n    FUNC_08008ac4(arg4);\n    FUN_08008a24(arg2,0);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08002fca",
            "entrypoint": "0x08002fca",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002fca": "process_data_08002fca",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "num_iterations",
                "param_4": "arg4",
                "param_5": "arg5",
                "uVar1": "i"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003002": {
            "additional_data": {
                "0x28": {
                    "1": "param_value1"
                },
                "0x7d": {
                    "1": "action3_parameter2"
                },
                "0xd": {
                    "1": "flag_type_value1",
                    "2": "message_type1"
                },
                "0xd2": {
                    "1": "message_data"
                },
                "0xfa": {
                    "1": "operation3_operand"
                },
                "1": {
                    "1": "operation1_operand2"
                },
                "2": {
                    "1": "flag_param2_value1"
                },
                "5": {
                    "1": "flag_param1_value2"
                },
                "FUNC_08008ac4": {
                    "1": "call_function_c",
                    "3": "execute_command",
                    "7": "perform_action"
                },
                "FUN_08002fca": {
                    "1": "send_command",
                    "2": "perform_operation",
                    "3": "send_data"
                },
                "FUN_08003002": {
                    "1": "initialize_process",
                    "2": "check_and_execute",
                    "3": "check_and_process_data",
                    "6": "check_and_execute_operations"
                },
                "FUN_08008990": {
                    "1": "execute_first_operation",
                    "2": "send_data",
                    "3": "execute_operation1"
                },
                "FUN_08008ac4": {
                    "1": "perform_sub_action"
                },
                "param_1": {
                    "1": "task_parameter",
                    "2": "data_address",
                    "3": "input_parameter"
                },
                "param_2": {
                    "1": "flag_value",
                    "2": "param_a",
                    "3": "param1"
                },
                "param_3": {
                    "1": "param_f",
                    "2": "param3",
                    "3": "param2"
                },
                "param_4": {
                    "1": "param_g",
                    "2": "param3",
                    "3": "param4"
                },
                "param_5": {
                    "1": "arg"
                }
            },
            "called": [
                "FUN_08008990",
                "FUN_08008ac4",
                "FUN_08002fca"
            ],
            "calling": [
                "FUN_08003048"
            ],
            "code": "\nvoid check_and_execute_operations_08003002(int param)\n\n{\n  if (*(char *)(param + 0x1f8) != '\\0') {\n    return;\n  }\n  FUN_08008990(0xd,1);\n  FUN_08002fca(param,0xd,2,0x28,0xd2);\n  FUNC_08008ac4(0xfa);\n  FUN_08002fca(param,0xd,5,0x28,0xd2);\n  FUNC_08008ac4(0x7d);\n  return;\n}\n\n",
            "current_name": "check_and_execute_operations_08003002",
            "entrypoint": "0x08003002",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003002": "check_and_execute_operations_08003002",
                "param_1": "param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003048": {
            "additional_data": {
                "DAT_20000700": {
                    "1": "data_structure"
                },
                "FUNKY_FUNCTION": {
                    "1": "process_data"
                },
                "FUN_08002e26": {
                    "1": "execute_task2",
                    "11": "process_data",
                    "2": "perform_task2",
                    "3": "perform_action2",
                    "6": "update_data"
                },
                "FUN_08003002": {
                    "1": "perform_initialization",
                    "2": "perform_operation",
                    "3": "initialize_data",
                    "5": "perform_action"
                },
                "FUN_08003048": {
                    "1": "initialize_function",
                    "2": "initialize_data_structures",
                    "21": "initialize_data"
                },
                "FUN_08008c44": {
                    "1": "update_data",
                    "2": "initialize_memory",
                    "4": "process_data",
                    "6": "copy_data"
                },
                "param_1": {
                    "1": "input1",
                    "2": "input_param",
                    "5": "data_pointer",
                    "7": "data"
                },
                "param_2": {
                    "1": "offset",
                    "2": "size",
                    "3": "value",
                    "6": "param2"
                },
                "param_3": {
                    "1": "parameter_b",
                    "2": "param_3",
                    "3": "param3",
                    "5": "size"
                },
                "param_4": {
                    "1": "offset",
                    "2": "arg4",
                    "3": "value",
                    "6": "param4"
                }
            },
            "called": [
                "FUN_08003002",
                "FUN_08002e26",
                "FUN_08008c44"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nvoid initialize_data_08003048(undefined4 data,undefined4 param2,undefined4 size,undefined4 param4)\n\n{\n  FUN_08008c44(&DAT_20000700,param2,6,param4,param4);\n  FUN_08003002(data);\n  FUN_08002e26(data,&DAT_20000700);\n  return;\n}\n\n",
            "current_name": "initialize_data_08003048",
            "entrypoint": "0x08003048",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003048": "initialize_data_08003048",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "size",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800307a": {
            "additional_data": {
                "FUN_0800307a": {
                    "1": "reencode_data",
                    "10": "decode_data",
                    "2": "decompress_data",
                    "3": "decode_and_process_data",
                    "4": "decode_and_execute"
                },
                "param_1": {
                    "1": "function_methods",
                    "2": "function_ptr",
                    "3": "output_buffer",
                    "7": "function_pointer"
                },
                "param_2": {
                    "1": "num_elements",
                    "10": "input_size",
                    "11": "input_length",
                    "2": "length",
                    "5": "data_length"
                },
                "param_3": {
                    "1": "data_bytes",
                    "18": "input_data",
                    "2": "input_array",
                    "3": "encoded_data"
                },
                "param_4": {
                    "1": "bit_limit",
                    "13": "max_iterations",
                    "2": "output_length",
                    "4": "max_output_length"
                },
                "uVar1": {
                    "1": "data_byte",
                    "27": "current_byte"
                },
                "uVar2": {
                    "1": "bit_count",
                    "10": "bit_offset",
                    "2": "bits_processed",
                    "4": "bit_counter",
                    "5": "bit_index",
                    "6": "bit_position"
                },
                "uVar3": {
                    "1": "output_position",
                    "2": "iteration_counter",
                    "3": "output_length",
                    "7": "iteration_count"
                },
                "uVar4": {
                    "1": "input_position",
                    "10": "byte_index",
                    "2": "input_counter",
                    "4": "current_index",
                    "5": "input_index"
                }
            },
            "called": [],
            "calling": [
                "FUN_08003158",
                "FUN_080031ce",
                "FUN_08003106",
                "FUN_0800319e",
                "FUN_0800325a"
            ],
            "code": "\nvoid decode_data_0800307a(undefined4 *function_pointer,uint input_length,byte *input_data,uint max_iterations)\n\n{\n  uint current_byte;\n  uint bit_offset;\n  uint iteration_count;\n  uint byte_index;\n  \n  current_byte = (uint)*input_data;\n  if (max_iterations == 0) {\n    max_iterations = 0xffffffff;\n  }\n  byte_index = 0;\n  bit_offset = 0;\n  iteration_count = 0;\n  while ((byte_index < input_length && (iteration_count < max_iterations))) {\n    (***(code ***)(undefined4 *)*function_pointer)\n              ((undefined4 *)*function_pointer,((uint)input_data[byte_index] << (bit_offset & 0xff) | current_byte) & 0x7f);\n    current_byte = (int)(uint)input_data[byte_index] >> (7 - bit_offset & 0xff) & 0xff;\n    bit_offset = bit_offset + 1;\n    while ((iteration_count = iteration_count + 1, 6 < bit_offset && (iteration_count < max_iterations))) {\n      (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,current_byte & 0x7f);\n      current_byte = current_byte >> 7;\n      bit_offset = bit_offset - 7;\n    }\n    byte_index = byte_index + 1;\n  }\n  if ((bit_offset != 0) && (iteration_count < max_iterations)) {\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,(1 << (bit_offset & 0xff)) - 1U & current_byte)\n    ;\n  }\n  return;\n}\n\n",
            "current_name": "decode_data_0800307a",
            "entrypoint": "0x0800307a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800307a": "decode_data_0800307a",
                "param_1": "function_pointer",
                "param_2": "input_length",
                "param_3": "input_data",
                "param_4": "max_iterations",
                "uVar1": "current_byte",
                "uVar2": "bit_offset",
                "uVar3": "iteration_count",
                "uVar4": "byte_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003106": {
            "additional_data": {
                "*param_1": {
                    "1": "ptr_memory"
                },
                "FUN_0800307a": {
                    "1": "execute_operation",
                    "4": "perform_operation"
                },
                "FUN_08003106": {
                    "1": "execute_reverse",
                    "12": "execute_function",
                    "2": "execute_instructions",
                    "3": "execute_operations",
                    "4": "execute_function_chain"
                },
                "param_1": {
                    "1": "operations_list",
                    "2": "function_chain",
                    "4": "function_pointers",
                    "8": "function_ptr",
                    "9": "function_pointer"
                },
                "param_2": {
                    "1": "input1",
                    "4": "value_1",
                    "5": "param_2",
                    "7": "value1"
                },
                "param_3": {
                    "1": "byte_param",
                    "4": "value_2",
                    "5": "param_3",
                    "7": "value2"
                },
                "param_4": {
                    "1": "value4",
                    "4": "value_3",
                    "5": "param_4",
                    "7": "value3"
                },
                "puVar1": {
                    "1": "temp_pointer",
                    "2": "ptr_to_function",
                    "3": "function_ptr_value",
                    "4": "function_ptr"
                }
            },
            "called": [
                "FUN_0800307a"
            ],
            "calling": [
                "FUN_08003158"
            ],
            "code": "\nvoid execute_function_08003106(undefined4 *function_pointer,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  undefined4 *function_ptr;\n  \n  function_ptr = (undefined4 *)*function_pointer;\n  if (function_ptr != (undefined4 *)0x0) {\n    (**(code **)*function_ptr)(function_ptr,0xf0);\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,0x6f);\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,value1);\n    FUN_0800307a(function_pointer,value2,value3,value2);\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,0xf7);\n  }\n  return;\n}\n\n",
            "current_name": "execute_function_08003106",
            "entrypoint": "0x08003106",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003106": "execute_function_08003106",
                "param_1": "function_pointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "puVar1": "function_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800314e": {
            "additional_data": {
                "*param_1": {
                    "2": "param"
                },
                "0": {
                    "1": "default_value"
                },
                "FUN_0800314e": {
                    "1": "clear_value",
                    "2": "initialize_pointer",
                    "3": "initialize_value",
                    "4": "initialize_parameter",
                    "8": "initialize_param"
                },
                "param_1": {
                    "1": "output",
                    "2": "param",
                    "3": "result",
                    "4": "output_param",
                    "5": "output_pointer"
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid initialize_param_0800314e(undefined4 *output_pointer)\n\n{\n  *output_pointer = 0;\n  return;\n}\n\n",
            "current_name": "initialize_param_0800314e",
            "entrypoint": "0x0800314e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800314e": "initialize_param_0800314e",
                "param_1": "output_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003154": {
            "additional_data": {
                "FUN_08003154": {
                    "1": "assign_param_value",
                    "14": "copy_value_to_pointer",
                    "2": "set_param_value",
                    "3": "assign_value_to_pointer",
                    "5": "assign_value"
                },
                "param_1": {
                    "1": "result",
                    "18": "destination",
                    "2": "destination_pointer"
                },
                "param_2": {
                    "1": "input_param",
                    "14": "value",
                    "3": "input_value",
                    "4": "value_to_copy",
                    "6": "source"
                }
            },
            "called": [],
            "calling": [
                "FUN_08002e26"
            ],
            "code": "\nvoid copy_value_to_pointer_08003154(undefined4 *destination,undefined4 value)\n\n{\n  *destination = value;\n  return;\n}\n\n",
            "current_name": "copy_value_to_pointer_08003154",
            "entrypoint": "0x08003154",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003154": "copy_value_to_pointer_08003154",
                "param_1": "destination",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003158": {
            "additional_data": {
                "FUN_0800307a": {
                    "1": "process_small_input"
                },
                "FUN_08003106": {
                    "1": "execute_alternative"
                },
                "FUN_08003158": {
                    "1": "execute_operation",
                    "13": "execute_function",
                    "2": "process_function",
                    "7": "process_data"
                },
                "local_a": {
                    "1": "processed_value",
                    "2": "data",
                    "4": "temp_value",
                    "5": "local_value"
                },
                "param_1": {
                    "1": "input_ptr",
                    "13": "function_pointer",
                    "2": "function_list",
                    "3": "data_ptr",
                    "4": "data_pointer"
                },
                "param_2": {
                    "1": "operation_code",
                    "10": "flag",
                    "2": "flags",
                    "3": "value1"
                },
                "param_3": {
                    "1": "ushort_value",
                    "12": "value",
                    "3": "value2",
                    "4": "data_value"
                },
                "param_4": {
                    "1": "data_length"
                },
                "puVar1": {
                    "1": "pointer_value",
                    "2": "func_ptr",
                    "4": "function_ptr",
                    "5": "function_pointer"
                }
            },
            "called": [
                "FUN_0800307a",
                "FUN_08003106"
            ],
            "calling": [
                "FUN_08002ef2"
            ],
            "code": "\nvoid execute_function_08003158(undefined4 *function_pointer,uint flag,ushort value)\n\n{\n  undefined4 *function_pointer;\n  ushort local_value;\n  \n  function_pointer = (undefined4 *)*function_pointer;\n  if (function_pointer != (undefined4 *)0x0) {\n    local_value = value;\n    if (((int)flag < 0x10) && (value < 0x4000)) {\n      (**(code **)*function_pointer)(function_pointer,flag | 0xe0);\n      FUN_0800307a(function_pointer,2,&local_value);\n    }\n    else {\n      FUN_08003106(function_pointer,flag,2,&local_value);\n    }\n  }\n  return;\n}\n\n",
            "current_name": "execute_function_08003158",
            "entrypoint": "0x08003158",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003158": "execute_function_08003158",
                "local_a": "local_value",
                "param_1": "function_pointer",
                "param_2": "flag",
                "param_3": "value",
                "puVar1": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800319e": {
            "additional_data": {
                "FUN_0800307a": {
                    "1": "process_data"
                },
                "FUN_0800319e": {
                    "1": "execute_function_and_update_context",
                    "13": "execute_function",
                    "2": "execute_function_with_param",
                    "3": "execute_and_update"
                },
                "local_a": {
                    "1": "result",
                    "2": "temporary_data"
                },
                "param_1": {
                    "1": "context",
                    "10": "function_pointer",
                    "14": "function_ptr",
                    "2": "command_list"
                },
                "param_2": {
                    "1": "execution_flags",
                    "17": "flags",
                    "3": "param_flags",
                    "5": "flag"
                },
                "param_3": {
                    "1": "parameter_value",
                    "19": "data",
                    "3": "value"
                },
                "puVar1": {
                    "1": "function_ptr_address",
                    "2": "ptr_to_function",
                    "3": "callback_function",
                    "4": "function_ptr",
                    "6": "function"
                }
            },
            "called": [
                "FUN_0800307a"
            ],
            "calling": [
                "FUN_08002efe"
            ],
            "code": "\nvoid execute_function_0800319e(undefined4 *function_ptr,uint flags,undefined2 data)\n\n{\n  undefined4 *function;\n  undefined2 local_value;\n  \n  function = (undefined4 *)*function_ptr;\n  if (function != (undefined4 *)0x0) {\n    local_value = data;\n    (**(code **)*function)(function,flags & 0xf | 0x90);\n    FUN_0800307a(function_ptr,2,&local_value);\n  }\n  return;\n}\n\n",
            "current_name": "execute_function_0800319e",
            "entrypoint": "0x0800319e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800319e": "execute_function_0800319e",
                "local_a": "local_value",
                "param_1": "function_ptr",
                "param_2": "flags",
                "param_3": "data",
                "puVar1": "function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080031ce": {
            "additional_data": {
                "FUN_0800307a": {
                    "1": "process_data"
                },
                "FUN_080031ce": {
                    "1": "process_function",
                    "2": "execute_process",
                    "21": "execute_function"
                },
                "param_1": {
                    "1": "data_pointer",
                    "12": "function_ptr",
                    "2": "function_table",
                    "3": "function_list",
                    "9": "function_pointer"
                },
                "param_2": {
                    "1": "arg2",
                    "12": "param2",
                    "2": "parameter_2",
                    "5": "param_2"
                },
                "param_3": {
                    "1": "input_param",
                    "13": "param3",
                    "2": "arg_2",
                    "5": "param_3"
                },
                "param_4": {
                    "1": "parameter_4",
                    "3": "loop_count",
                    "5": "param4",
                    "9": "count"
                },
                "param_5": {
                    "1": "base_param",
                    "11": "offset",
                    "2": "start_index",
                    "7": "param5"
                },
                "puVar1": {
                    "1": "temp_pointer",
                    "2": "ptr_to_function",
                    "3": "ptr"
                },
                "uVar2": {
                    "1": "iteration_index",
                    "12": "index",
                    "2": "iteration_counter",
                    "3": "counter",
                    "5": "i"
                }
            },
            "called": [
                "FUN_0800307a"
            ],
            "calling": [
                "FUN_08002df6"
            ],
            "code": "\nvoid execute_function_080031ce(undefined4 *function_ptr,undefined4 param2,undefined4 param3,uint count,int offset\n                 )\n\n{\n  undefined4 *ptr;\n  uint index;\n  \n  ptr = (undefined4 *)*function_ptr;\n  if (ptr != (undefined4 *)0x0) {\n    (**(code **)*ptr)(ptr,0xf0,param3,*(code **)*ptr,count);\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,0x79);\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,param2);\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,param3);\n    for (index = 0; index < count; index = index + 1) {\n      FUN_0800307a(function_ptr,1,offset + index,0);\n    }\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,0xf7);\n  }\n  return;\n}\n\n",
            "current_name": "execute_function_080031ce",
            "entrypoint": "0x080031ce",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080031ce": "execute_function_080031ce",
                "param_1": "function_ptr",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "count",
                "param_5": "offset",
                "puVar1": "ptr",
                "uVar2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800322c": {
            "additional_data": {
                "*param_1": {
                    "1": "function"
                },
                "*puVar1": {
                    "1": "operations_ptr_value"
                },
                "0x0": {
                    "1": "null",
                    "2": "null_ptr"
                },
                "0xf9": {
                    "1": "constant_value"
                },
                "FUN_0800322c": {
                    "1": "execute_operation",
                    "2": "execute_three_operations",
                    "20": "execute_function",
                    "3": "execute_operations"
                },
                "param_1": {
                    "1": "operations_array",
                    "10": "function_ptr",
                    "13": "function_pointer"
                },
                "param_2": {
                    "1": "parameter_2",
                    "2": "input1",
                    "7": "param2",
                    "8": "param_2"
                },
                "param_3": {
                    "1": "arg2",
                    "2": "value2",
                    "7": "param3",
                    "8": "param_3"
                },
                "puVar1": {
                    "1": "current_action",
                    "2": "ptr_to_function",
                    "3": "function_ptr",
                    "4": "function_pointer_value",
                    "5": "function_address"
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ddc"
            ],
            "code": "\nvoid execute_function_0800322c(undefined4 *function_pointer,undefined4 param_2,undefined4 param_3)\n\n{\n  undefined4 *function_address;\n  \n  function_address = (undefined4 *)*function_pointer;\n  if (function_address != (undefined4 *)0x0) {\n    (**(code **)*function_address)(function_address,0xf9);\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,param_2);\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,param_3);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "execute_function_0800322c",
            "entrypoint": "0x0800322c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800322c": "execute_function_0800322c",
                "param_1": "function_pointer",
                "puVar1": "function_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800325a": {
            "additional_data": {
                "*param_1": {
                    "1": "operation_list"
                },
                "FUN_0800325a": {
                    "1": "execute_subroutine",
                    "15": "execute_function",
                    "2": "execute_command",
                    "3": "execute_operations"
                },
                "param_1": {
                    "1": "data_pointer",
                    "2": "function_list",
                    "3": "command_list",
                    "6": "function_pointers",
                    "9": "function_ptr"
                },
                "param_2": {
                    "1": "value",
                    "2": "command_param",
                    "3": "param_value",
                    "6": "param"
                },
                "param_3": {
                    "1": "iteration_count",
                    "12": "num_iterations",
                    "3": "num_operations",
                    "5": "count"
                },
                "param_4": {
                    "1": "base_param",
                    "13": "offset",
                    "2": "starting_index",
                    "3": "initial_value"
                },
                "puVar1": {
                    "1": "ptr",
                    "2": "function_ptr_value",
                    "3": "command_ptr",
                    "7": "function_ptr"
                },
                "uVar2": {
                    "1": "counter",
                    "2": "iteration_index",
                    "4": "iteration_counter",
                    "6": "index",
                    "7": "iteration_count",
                    "9": "i"
                }
            },
            "called": [
                "FUN_0800307a"
            ],
            "calling": [
                "FUN_08002f0a",
                "FUN_080032a2"
            ],
            "code": "\nvoid execute_function_0800325a(undefined4 *function_ptr,undefined4 param,uint num_iterations,int offset)\n\n{\n  undefined4 *function_ptr;\n  uint i;\n  \n  function_ptr = (undefined4 *)*function_ptr;\n  if (function_ptr != (undefined4 *)0x0) {\n    (**(code **)*function_ptr)(function_ptr,0xf0);\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,param);\n    for (i = 0; i < num_iterations; i = i + 1) {\n      FUN_0800307a(function_ptr,1,offset + i,0);\n    }\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,0xf7);\n  }\n  return;\n}\n\n",
            "current_name": "execute_function_0800325a",
            "entrypoint": "0x0800325a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800325a": "execute_function_0800325a",
                "param_1": "function_ptr",
                "param_2": "param",
                "param_3": "num_iterations",
                "param_4": "offset",
                "puVar1": "function_ptr",
                "uVar2": "i"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080032a2": {
            "additional_data": {
                "FUN_08000178": {
                    "1": "convert_string",
                    "2": "get_modified_param",
                    "4": "get_string"
                },
                "FUN_0800325a": {
                    "1": "execute_action",
                    "2": "send_packet",
                    "4": "send_data"
                },
                "FUN_080032a2": {
                    "1": "initialize_components",
                    "12": "send_data",
                    "2": "send_data_to_server",
                    "5": "process_data"
                },
                "param_1": {
                    "1": "data_array",
                    "2": "request",
                    "3": "data_ptr",
                    "5": "arg1"
                },
                "param_2": {
                    "1": "input_ptr",
                    "2": "input_param",
                    "5": "arg2",
                    "7": "input"
                },
                "param_3": {
                    "1": "unknown_value",
                    "2": "message_type",
                    "3": "length",
                    "6": "size"
                },
                "param_4": {
                    "1": "offset",
                    "2": "param4",
                    "3": "extra_param",
                    "5": "arg4"
                },
                "uVar1": {
                    "1": "result_string",
                    "21": "result"
                }
            },
            "called": [
                "FUN_08000178",
                "FUN_0800325a"
            ],
            "calling": [
                "FUN_08002f14"
            ],
            "code": "\nvoid send_data_080032a2(undefined4 arg1,undefined4 input,undefined4 size,undefined4 arg4)\n\n{\n  undefined4 result;\n  \n  result = FUN_08000178(input);\n  FUN_0800325a(arg1,0x71,result,input,arg4);\n  return;\n}\n\n",
            "current_name": "send_data_080032a2",
            "entrypoint": "0x080032a2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080032a2": "send_data_080032a2",
                "param_1": "arg1",
                "param_2": "input",
                "param_3": "size",
                "param_4": "arg4",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080032bc": {
            "additional_data": {
                "(bool *)param_1": {
                    "1": "check_value"
                },
                "*(bool *)param_1": {
                    "1": "data_structure.is_value_zero"
                },
                "*(int *)(param_1 + 4)": {
                    "1": "data_ptr->value",
                    "2": "data_structure.value"
                },
                "*(undefined *)(param_1 + 0x14)": {
                    "1": "struct_address.unknown4"
                },
                "*(undefined *)(param_1 + 0xc)": {
                    "1": "data_structure.variable1"
                },
                "*(undefined *)(param_1 + 0xd)": {
                    "1": "data_ptr->var2"
                },
                "*(undefined4 *)(param_1 + 0x10)": {
                    "1": "data_structure.variable3"
                },
                "*(undefined4 *)(param_1 + 0x18)": {
                    "1": "data_structure.variable5"
                },
                "*(undefined4 *)(param_1 + 0x1c)": {
                    "1": "data_structure.variable6"
                },
                "*(undefined4 *)(param_1 + 0x20)": {
                    "1": "struct_address.unknown7"
                },
                "*(undefined4 *)(param_1 + 0x24)": {
                    "1": "struct_address.unknown8"
                },
                "*(undefined4 *)(param_1 + 0x28)": {
                    "1": "struct_address.unknown9"
                },
                "*(undefined4 *)(param_1 + 0x2c)": {
                    "1": "zero10"
                },
                "*(undefined4 *)(param_1 + 0x30)": {
                    "1": "struct_address.unknown11"
                },
                "*(undefined4 *)(param_1 + 0x34)": {
                    "1": "struct_address.unknown12"
                },
                "*(undefined4 *)(param_1 + 0x38)": {
                    "1": "zero13"
                },
                "*(undefined4 *)(param_1 + 0x3c)": {
                    "1": "struct_address.unknown14"
                },
                "*(undefined4 *)(param_1 + 0x40)": {
                    "1": "struct_address.unknown15"
                },
                "*(undefined4 *)(param_1 + 0x44)": {
                    "1": "zero16"
                },
                "*(undefined4 *)(param_1 + 0x48)": {
                    "1": "data_structure.variable17"
                },
                "*(undefined4 *)(param_1 + 0x4c)": {
                    "1": "struct_address.unknown18"
                },
                "*(undefined4 *)(param_1 + 0x50)": {
                    "1": "data_structure.variable19"
                },
                "*(undefined4 *)(param_1 + 0x54)": {
                    "1": "struct_address.unknown20"
                },
                "*(undefined4 *)(param_1 + 0x58)": {
                    "1": "data_structure.variable21"
                },
                "*(undefined4 *)(param_1 + 0x5c)": {
                    "1": "data_structure.variable22"
                },
                "*(undefined4 *)(param_1 + 0x60)": {
                    "1": "struct_address.unknown23"
                },
                "*(undefined4 *)(param_1 + 0x68)": {
                    "1": "zero25"
                },
                "*(undefined4 *)(param_1 + 0x6c)": {
                    "1": "data_structure.variable26"
                },
                "*(undefined4 *)(param_1 + 0x70)": {
                    "1": "struct_address.unknown27"
                },
                "*(undefined4 *)(param_1 + 0x74)": {
                    "1": "struct_address.unknown28"
                },
                "*(undefined4 *)(param_1 + 0x78)": {
                    "1": "zero29"
                },
                "*(undefined4 *)(param_1 + 100)": {
                    "1": "struct_address.unknown24"
                },
                "*(undefined4 *)(param_1 + 8)": {
                    "1": "data_structure.extra_data"
                },
                "0": {
                    "1": "null"
                },
                "0x10": {
                    "1": "zero_2"
                },
                "0x14": {
                    "1": "zero_3"
                },
                "0x18": {
                    "1": "zero_4"
                },
                "0x1c": {
                    "1": "zero_5"
                },
                "0x20": {
                    "1": "zero_6"
                },
                "0x24": {
                    "1": "zero_7"
                },
                "0x28": {
                    "1": "zero_8"
                },
                "0x2c": {
                    "1": "zero_9"
                },
                "0x30": {
                    "1": "zero_10"
                },
                "0x34": {
                    "1": "zero_11"
                },
                "0x38": {
                    "1": "zero_12"
                },
                "0x3c": {
                    "1": "zero_13"
                },
                "0x4": {
                    "1": "structure_value"
                },
                "0x40": {
                    "1": "zero_14"
                },
                "0x44": {
                    "1": "zero_15"
                },
                "0x48": {
                    "1": "zero_16"
                },
                "0x4c": {
                    "1": "zero_17"
                },
                "0x50": {
                    "1": "zero_18"
                },
                "0x54": {
                    "1": "zero_19"
                },
                "0x58": {
                    "1": "zero_20"
                },
                "0x5c": {
                    "1": "zero_21"
                },
                "0x60": {
                    "1": "zero_22"
                },
                "0x68": {
                    "1": "zero_23"
                },
                "0x6c": {
                    "1": "zero_24"
                },
                "0x70": {
                    "1": "zero_25"
                },
                "0x74": {
                    "1": "zero_26"
                },
                "0x78": {
                    "1": "zero_27"
                },
                "0x8": {
                    "1": "data_value"
                },
                "0xc": {
                    "1": "zero_0"
                },
                "0xd": {
                    "1": "zero_1"
                },
                "10": {
                    "1": "offset10"
                },
                "14": {
                    "1": "offset14"
                },
                "18": {
                    "1": "offset18"
                },
                "1c": {
                    "1": "offset1_c"
                },
                "20": {
                    "1": "offset20"
                },
                "24": {
                    "1": "offset24"
                },
                "28": {
                    "1": "offset28"
                },
                "2c": {
                    "1": "offset2_c"
                },
                "30": {
                    "1": "offset30"
                },
                "34": {
                    "1": "offset34"
                },
                "38": {
                    "1": "offset38"
                },
                "3c": {
                    "1": "offset3_c"
                },
                "4": {
                    "1": "offset4"
                },
                "40": {
                    "1": "offset40"
                },
                "44": {
                    "1": "offset44"
                },
                "48": {
                    "1": "offset48"
                },
                "4c": {
                    "1": "offset4_c"
                },
                "50": {
                    "1": "offset50"
                },
                "54": {
                    "1": "offset54"
                },
                "58": {
                    "1": "offset58"
                },
                "5c": {
                    "1": "offset5_c"
                },
                "60": {
                    "1": "offset60"
                },
                "68": {
                    "1": "offset68"
                },
                "6c": {
                    "1": "offset6_c"
                },
                "70": {
                    "1": "offset70"
                },
                "74": {
                    "1": "offset74"
                },
                "78": {
                    "1": "offset78"
                },
                "8": {
                    "1": "offset8"
                },
                "FUN_080032bc": {
                    "1": "initialize_function",
                    "2": "initialize_memory",
                    "4": "initialize_data",
                    "6": "initialize_parameters",
                    "7": "initialize_params"
                },
                "c": {
                    "1": "offset_c"
                },
                "d": {
                    "1": "offset_d"
                },
                "defaultValue": {
                    "1": "default"
                },
                "memoryAddress": {
                    "1": "address"
                },
                "param_1": {
                    "1": "param_base_address",
                    "2": "memory_address",
                    "3": "struct_address",
                    "5": "data_structure"
                },
                "param_1 + 0x10": {
                    "1": "flag3_address"
                },
                "param_1 + 0x14": {
                    "1": "variable4"
                },
                "param_1 + 0x18": {
                    "1": "struct_address.unknown5_address"
                },
                "param_1 + 0x1c": {
                    "1": "variable6"
                },
                "param_1 + 0x20": {
                    "1": "variable7"
                },
                "param_1 + 0x24": {
                    "1": "struct_address.unknown8_address"
                },
                "param_1 + 0x28": {
                    "1": "variable9"
                },
                "param_1 + 0x2c": {
                    "1": "variable10"
                },
                "param_1 + 0x30": {
                    "1": "struct_address.unknown11_address"
                },
                "param_1 + 0x34": {
                    "1": "variable12"
                },
                "param_1 + 0x38": {
                    "1": "struct_address.unknown13_address"
                },
                "param_1 + 0x3c": {
                    "1": "struct_address.unknown14_address"
                },
                "param_1 + 0x40": {
                    "1": "struct_address.unknown15_address"
                },
                "param_1 + 0x44": {
                    "1": "struct_address.unknown16_address"
                },
                "param_1 + 0x48": {
                    "1": "struct_address.unknown17_address"
                },
                "param_1 + 0x4c": {
                    "1": "struct_address.unknown18_address"
                },
                "param_1 + 0x50": {
                    "1": "variable19"
                },
                "param_1 + 0x54": {
                    "1": "variable20"
                },
                "param_1 + 0x58": {
                    "1": "struct_address.unknown21_address"
                },
                "param_1 + 0x5c": {
                    "1": "variable22"
                },
                "param_1 + 0x60": {
                    "1": "struct_address.unknown23_address"
                },
                "param_1 + 0x68": {
                    "1": "flag5_address"
                },
                "param_1 + 0x6c": {
                    "1": "flag6_address"
                },
                "param_1 + 0x70": {
                    "1": "variable27"
                },
                "param_1 + 0x74": {
                    "1": "flag8_address"
                },
                "param_1 + 0x78": {
                    "1": "flag9_address"
                },
                "param_1 + 0xc": {
                    "1": "variable1"
                },
                "param_1 + 0xd": {
                    "1": "variable2"
                },
                "param_1 + 100": {
                    "1": "variable24"
                },
                "param_1 + 4": {
                    "1": "struct_value_address"
                },
                "param_1 + 8": {
                    "1": "extra_value_address"
                },
                "param_2": {
                    "1": "input_value",
                    "20": "value",
                    "9": "param_value"
                },
                "param_2 == 0": {
                    "1": "is_value_zero"
                },
                "param_3": {
                    "1": "zero_value",
                    "2": "param",
                    "4": "param_data",
                    "7": "default_value"
                },
                "value": {
                    "1": "value_to_set"
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid initialize_params_080032bc(int data_structure,int value,undefined4 default_value)\n\n{\n  *(int *)(data_structure + 4) = value;\n  *(undefined4 *)(data_structure + 8) = default_value;\n  *(undefined *)(data_structure + 0xc) = 0;\n  *(undefined *)(data_structure + 0xd) = 0;\n  *(undefined4 *)(data_structure + 0x10) = 0;\n  *(undefined *)(data_structure + 0x14) = 0;\n  *(undefined4 *)(data_structure + 0x18) = 0;\n  *(undefined4 *)(data_structure + 0x1c) = 0;\n  *(undefined4 *)(data_structure + 0x20) = 0;\n  *(undefined4 *)(data_structure + 0x24) = 0;\n  *(undefined4 *)(data_structure + 0x28) = 0;\n  *(undefined4 *)(data_structure + 0x2c) = 0;\n  *(undefined4 *)(data_structure + 0x30) = 0;\n  *(undefined4 *)(data_structure + 0x34) = 0;\n  *(undefined4 *)(data_structure + 0x38) = 0;\n  *(undefined4 *)(data_structure + 0x3c) = 0;\n  *(undefined4 *)(data_structure + 0x40) = 0;\n  *(undefined4 *)(data_structure + 0x44) = 0;\n  *(undefined4 *)(data_structure + 0x48) = 0;\n  *(undefined4 *)(data_structure + 0x4c) = 0;\n  *(undefined4 *)(data_structure + 0x50) = 0;\n  *(undefined4 *)(data_structure + 0x54) = 0;\n  *(undefined4 *)(data_structure + 0x58) = 0;\n  *(undefined4 *)(data_structure + 0x5c) = 0;\n  *(undefined4 *)(data_structure + 0x60) = 0;\n  *(undefined4 *)(data_structure + 100) = 0;\n  *(undefined4 *)(data_structure + 0x68) = 0;\n  *(undefined4 *)(data_structure + 0x6c) = 0;\n  *(undefined4 *)(data_structure + 0x70) = 0;\n  *(undefined4 *)(data_structure + 0x74) = 0;\n  *(undefined4 *)(data_structure + 0x78) = 0;\n  *(bool *)data_structure = value == 0;\n  return;\n}\n\n",
            "current_name": "initialize_params_080032bc",
            "entrypoint": "0x080032bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080032bc": "initialize_params_080032bc",
                "param_1": "data_structure",
                "param_2": "value",
                "param_3": "default_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003306": {
            "additional_data": {
                "0x90": {
                    "1": "condition_e"
                },
                "0xc0": {
                    "1": "special_value_6"
                },
                "0xd0": {
                    "1": "special_value_1"
                },
                "0xe0": {
                    "1": "special_value_4"
                },
                "0xf4": {
                    "1": "condition_b"
                },
                "0xf5": {
                    "1": "special_value_3"
                },
                "FUN_08003306": {
                    "1": "update_config_values",
                    "2": "update_values",
                    "3": "update_param_values",
                    "4": "update_data"
                },
                "param_1": {
                    "1": "param",
                    "11": "base_address",
                    "2": "data_address",
                    "3": "object_address"
                },
                "param_1 + 0x1c": {
                    "1": "offset8"
                },
                "param_1 + 0x20": {
                    "1": "offset10"
                },
                "param_1 + 0x24": {
                    "1": "offset12"
                },
                "param_1 + 0x28": {
                    "1": "offset2"
                },
                "param_1 + 0x2c": {
                    "1": "offset4"
                },
                "param_1 + 0x30": {
                    "1": "offset6"
                },
                "param_1 + 0x4c": {
                    "1": "offset7"
                },
                "param_1 + 0x50": {
                    "1": "offset9"
                },
                "param_1 + 0x54": {
                    "1": "offset11"
                },
                "param_1 + 0x58": {
                    "1": "address1"
                },
                "param_1 + 0x5c": {
                    "1": "offset3"
                },
                "param_1 + 0x60": {
                    "1": "offset5"
                },
                "param_2": {
                    "1": "parameter_code",
                    "12": "value",
                    "2": "data_value",
                    "8": "param_value"
                },
                "param_3": {
                    "1": "new_config_value1",
                    "18": "new_value1",
                    "6": "value1"
                },
                "param_4": {
                    "1": "new_param4",
                    "18": "new_value2",
                    "6": "value2"
                },
                "param_5": {
                    "1": "new_value3"
                },
                "param_6": {
                    "1": "new_value4"
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid update_parameters_08003306(int base_address,uint value,undefined4 new_value1,undefined4 new_value2)\n\n{\n  if (value == 0xd0) {\n    *(undefined4 *)(base_address + 0x58) = new_value1;\n    *(undefined4 *)(base_address + 0x28) = new_value2;\n    return;\n  }\n  if (0xd0 < value) {\n    if (value == 0xf4) {\n      *(undefined4 *)(base_address + 0x5c) = new_value1;\n      *(undefined4 *)(base_address + 0x2c) = new_value2;\n      return;\n    }\n    if (value == 0xf5) {\n      *(undefined4 *)(base_address + 0x60) = new_value1;\n      *(undefined4 *)(base_address + 0x30) = new_value2;\n    }\n    else if (value == 0xe0) {\n      *(undefined4 *)(base_address + 0x4c) = new_value1;\n      *(undefined4 *)(base_address + 0x1c) = new_value2;\n      return;\n    }\n    return;\n  }\n  if (value == 0x90) {\n    *(undefined4 *)(base_address + 0x50) = new_value1;\n    *(undefined4 *)(base_address + 0x20) = new_value2;\n    return;\n  }\n  if (value == 0xc0) {\n    *(undefined4 *)(base_address + 0x54) = new_value1;\n    *(undefined4 *)(base_address + 0x24) = new_value2;\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "update_parameters_08003306",
            "entrypoint": "0x08003306",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003306": "update_parameters_08003306",
                "param_1": "base_address",
                "param_2": "value",
                "param_3": "new_value1",
                "param_4": "new_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003346": {
            "additional_data": {
                "FUN_08003346": {
                    "1": "store_parameters_if_condition",
                    "2": "update_values",
                    "4": "update_params",
                    "6": "update_data",
                    "9": "update_parameters"
                },
                "param_1": {
                    "1": "obj_ptr",
                    "10": "base_address",
                    "2": "data_address",
                    "3": "data_ptr",
                    "7": "object_address"
                },
                "param_1 + 0x34": {
                    "1": "object_property2"
                },
                "param_1 + 0x70": {
                    "1": "object_property_value"
                },
                "param_2": {
                    "1": "flag_value",
                    "2": "value_to_check",
                    "3": "flag",
                    "4": "check_value",
                    "7": "condition",
                    "8": "value"
                },
                "param_3": {
                    "1": "new_param1_value",
                    "20": "new_value1",
                    "3": "new_param1",
                    "4": "value1"
                },
                "param_4": {
                    "1": "address_to_store2",
                    "20": "new_value2",
                    "3": "new_param2",
                    "4": "value2"
                },
                "param_5": {
                    "1": "new_value3"
                },
                "param_6": {
                    "1": "new_value4"
                },
                "param_7": {
                    "1": "new_value5"
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid update_parameters_08003346(int base_address,int value,undefined4 new_value1,undefined4 new_value2)\n\n{\n  if (value == 0x79) {\n    *(undefined4 *)(base_address + 0x70) = new_value1;\n    *(undefined4 *)(base_address + 0x34) = new_value2;\n  }\n  return;\n}\n\n",
            "current_name": "update_parameters_08003346",
            "entrypoint": "0x08003346",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003346": "update_parameters_08003346",
                "param_1": "base_address",
                "param_2": "value",
                "param_3": "new_value1",
                "param_4": "new_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003350": {
            "additional_data": {
                "0x38": {
                    "1": "offset2"
                },
                "0x48": {
                    "1": "offset4"
                },
                "0x74": {
                    "1": "offset1"
                },
                "0x78": {
                    "1": "offset3"
                },
                "0xf9": {
                    "1": "constant_one"
                },
                "0xff": {
                    "1": "constant_two"
                },
                "FUN_08003350": {
                    "1": "set_param_values",
                    "10": "update_parameters",
                    "2": "update_values",
                    "3": "update_data",
                    "4": "set_parameters"
                },
                "baseAddress + 0x38": {
                    "1": "address2"
                },
                "baseAddress + 0x48": {
                    "1": "address4"
                },
                "baseAddress + 0x74": {
                    "1": "address1"
                },
                "baseAddress + 0x78": {
                    "1": "address3"
                },
                "param_1": {
                    "1": "object",
                    "10": "base_address",
                    "2": "obj_addr",
                    "3": "obj_ptr",
                    "7": "object_address"
                },
                "param_1 + 0x38": {
                    "1": "obj_value2"
                },
                "param_1 + 0x48": {
                    "1": "obj_value4"
                },
                "param_1 + 0x74": {
                    "1": "obj_value1"
                },
                "param_1 + 0x78": {
                    "1": "obj_value3"
                },
                "param_2": {
                    "1": "param_code",
                    "18": "value",
                    "2": "param_value",
                    "3": "status",
                    "4": "flag"
                },
                "param_3": {
                    "1": "first_param",
                    "15": "new_value1",
                    "2": "parameter1",
                    "4": "value1",
                    "6": "new_param1"
                },
                "param_4": {
                    "1": "second_param",
                    "15": "new_value2",
                    "2": "parameter2",
                    "4": "value2",
                    "6": "new_param2"
                },
                "param_5": {
                    "1": "new_value3"
                },
                "param_6": {
                    "1": "new_param4"
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid update_parameters_08003350(int base_address,int value,undefined4 new_value1,undefined4 new_value2)\n\n{\n  if (value == 0xf9) {\n    *(undefined4 *)(base_address + 0x74) = new_value1;\n    *(undefined4 *)(base_address + 0x38) = new_value2;\n    return;\n  }\n  if (value != 0xff) {\n    return;\n  }\n  *(undefined4 *)(base_address + 0x78) = new_value1;\n  *(undefined4 *)(base_address + 0x48) = new_value2;\n  return;\n}\n\n",
            "current_name": "update_parameters_08003350",
            "entrypoint": "0x08003350",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003350": "update_parameters_08003350",
                "param_1": "base_address",
                "param_2": "value",
                "param_3": "new_value1",
                "param_4": "new_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003366": {
            "additional_data": {
                "*(undefined4 *)(param_1 + 0x40)": {
                    "1": "update_value2_address"
                },
                "*(undefined4 *)(param_1 + 0x68)": {
                    "1": "update_value1_address"
                },
                "FUN_08003366": {
                    "1": "update_variables",
                    "11": "update_parameters",
                    "2": "update_param_values",
                    "3": "update_data",
                    "6": "update_params"
                },
                "param_1": {
                    "1": "buffer",
                    "10": "base_address",
                    "2": "data_pointer",
                    "3": "data_address"
                },
                "param_2": {
                    "1": "flag_value",
                    "2": "input_value",
                    "20": "value",
                    "4": "condition"
                },
                "param_3": {
                    "1": "new_param_a",
                    "16": "new_value1",
                    "3": "value1",
                    "7": "new_param1"
                },
                "param_4": {
                    "1": "new_param_b",
                    "17": "new_value2",
                    "3": "value2",
                    "7": "new_param2"
                },
                "param_5": {
                    "2": "new_value3"
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid update_parameters_08003366(int object_address,int value,undefined4 new_value1,undefined4 new_value2)\n\n{\n  if (value == 0x71) {\n    *(undefined4 *)(object_address + 0x68) = new_value1;\n    *(undefined4 *)(object_address + 0x40) = new_value2;\n  }\n  return;\n}\n\n",
            "current_name": "update_parameters_08003366",
            "entrypoint": "0x08003366",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003366": "update_parameters_08003366",
                "param_1": "object_address",
                "param_2": "value",
                "param_3": "new_value1",
                "param_4": "new_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003370": {
            "additional_data": {
                "*(undefined4 *)(param_1 + 0x44)": {
                    "1": "object.field2"
                },
                "*(undefined4 *)(param_1 + 0x6c)": {
                    "1": "object.field1"
                },
                "FUN_08003370": {
                    "1": "update_parameters",
                    "18": "set_parameters",
                    "2": "set_values",
                    "3": "set_param_values"
                },
                "param_1": {
                    "1": "data_pointer",
                    "14": "object_address",
                    "2": "obj",
                    "3": "object",
                    "6": "base_address"
                },
                "param_1 + 0x44": {
                    "1": "object.offset2"
                },
                "param_1 + 0x6c": {
                    "1": "object.offset1"
                },
                "param_2": {
                    "1": "unused_parameter1",
                    "2": "param2",
                    "4": "unused_parameter",
                    "5": "unused_param"
                },
                "param_3": {
                    "1": "parameter3_value",
                    "16": "value1",
                    "5": "parameter1"
                },
                "param_4": {
                    "1": "parameter4_value",
                    "16": "value2",
                    "5": "parameter2"
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid set_parameters_08003370(int object_address,undefined4 unused_param,undefined4 value1,undefined4 value2)\n\n{\n  *(undefined4 *)(object_address + 0x6c) = value1;\n  *(undefined4 *)(object_address + 0x44) = value2;\n  return;\n}\n\n",
            "current_name": "set_parameters_08003370",
            "entrypoint": "0x08003370",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003370": "set_parameters_08003370",
                "param_1": "object_address",
                "param_2": "unused_param",
                "param_3": "value1",
                "param_4": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003376": {
            "additional_data": {
                "!bVar1": {
                    "1": "is_valid"
                },
                "(**(code **)(param_1 + 100))(*(undefined4 *)(param_1 + 0x3c))": {
                    "1": "execute_callback_function"
                },
                "*(code **)(param_1 + 100)": {
                    "1": "callback_func",
                    "3": "callback",
                    "4": "callback_function"
                },
                "*(int *)(param_1 + 4)": {
                    "1": "memory"
                },
                "*(uint *)(param_1 + 8)": {
                    "1": "data_size_value",
                    "3": "data_size"
                },
                "*(undefined *)(*(int *)(param_1 + 4) + param_3)": {
                    "1": "modified_byte"
                },
                "*(undefined4 *)(param_1 + 0x3c)": {
                    "1": "arg",
                    "2": "param"
                },
                "**(code **)(param_1 + 100)": {
                    "1": "error_code"
                },
                "***(code **)(param_1 + 100)": {
                    "1": "invoke_callback"
                },
                "*param_1": {
                    "1": "has_error"
                },
                "*param_1 = 1": {
                    "1": "set_flag"
                },
                "FUN_08003376": {
                    "1": "write_data_to_memory",
                    "3": "copy_data",
                    "7": "update_data",
                    "8": "update_memory"
                },
                "bVar1": {
                    "1": "is_position_valid",
                    "2": "is_greater",
                    "3": "is_out_of_bounds",
                    "4": "is_out_of_range"
                },
                "code": {
                    "1": "function_ptr"
                },
                "param_1": {
                    "1": "buffer",
                    "2": "data_pointer",
                    "4": "data_struct",
                    "8": "memory"
                },
                "param_1 + 0x3c": {
                    "1": "callback_arg"
                },
                "param_1 + 100": {
                    "1": "function_pointer_offset"
                },
                "param_1 + 8": {
                    "1": "data_size"
                },
                "param_2": {
                    "1": "byte_to_store",
                    "18": "value",
                    "3": "new_data",
                    "6": "new_value"
                },
                "param_3": {
                    "2": "offset",
                    "22": "index",
                    "3": "address"
                },
                "param_3 < *(uint *)(param_1 + 8)": {
                    "1": "is_index_within_data_size"
                }
            },
            "called": [],
            "calling": [
                "FUN_08003474",
                "FUN_080033cc"
            ],
            "code": "\nvoid update_memory_08003376(undefined *memory,undefined value,uint index)\n\n{\n  bool is_out_of_range;\n  \n  if (index < *(uint *)(memory + 8)) {\n    is_out_of_range = false;\n  }\n  else {\n    is_out_of_range = true;\n    if (*(function_ptr **)(memory + 100) != (function_ptr *)0x0) {\n      *memory = 1;\n      (**(function_ptr **)(memory + 100))(*(undefined4 *)(memory + 0x3c));\n      if (index < *(uint *)(memory + 8)) {\n        is_out_of_range = false;\n      }\n      else {\n        is_out_of_range = true;\n      }\n    }\n  }\n  if (is_valid) {\n    *(undefined *)(*(int *)(memory + 4) + index) = value;\n  }\n  return;\n}\n\n",
            "current_name": "update_memory_08003376",
            "entrypoint": "0x08003376",
            "imported": false,
            "improved": true,
            "renaming": {
                "!bVar1": "is_valid",
                "FUN_08003376": "update_memory_08003376",
                "bVar1": "is_out_of_range",
                "code": "function_ptr",
                "param_1": "memory",
                "param_2": "value",
                "param_3": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080033a8": {
            "additional_data": {
                "FUN_080033a8": {
                    "1": "copy_bytes_with_shift",
                    "16": "copy_and_shift_bits",
                    "3": "copy_and_shift_data",
                    "7": "copy_and_shift_bytes"
                },
                "bVar1": {
                    "1": "src_byte",
                    "23": "current_byte",
                    "6": "byte_value"
                },
                "iVar2": {
                    "1": "index",
                    "10": "dest_index",
                    "2": "current_index",
                    "4": "output_index",
                    "5": "dst_index",
                    "8": "destination_index"
                },
                "param_1": {
                    "1": "src",
                    "2": "source_address",
                    "5": "undefined"
                },
                "param_2": {
                    "1": "src_length",
                    "2": "length",
                    "3": "byte_count",
                    "5": "size",
                    "7": "num_bytes"
                },
                "param_3": {
                    "1": "source_address",
                    "2": "buffer",
                    "3": "destination_address",
                    "4": "src"
                },
                "uVar3": {
                    "1": "current_index",
                    "11": "source_index",
                    "2": "input_index",
                    "3": "byte_index",
                    "9": "src_index"
                }
            },
            "called": [],
            "calling": [
                "FUN_080033cc"
            ],
            "code": "\nvoid copy_and_shift_bits_080033a8(undefined4 undefined,uint num_bytes,int src)\n\n{\n  byte current_byte;\n  int dest_index;\n  uint source_index;\n  \n  dest_index = 0;\n  for (source_index = 0; source_index < num_bytes; source_index = source_index + 2) {\n    current_byte = *(byte *)(src + source_index);\n    *(byte *)(src + dest_index) = current_byte;\n    *(byte *)(src + dest_index) = *(char *)(src + source_index + 1) << 7 | current_byte;\n    dest_index = dest_index + 1;\n  }\n  return;\n}\n\n",
            "current_name": "copy_and_shift_bits_080033a8",
            "entrypoint": "0x080033a8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080033a8": "copy_and_shift_bits_080033a8",
                "bVar1": "current_byte",
                "iVar2": "dest_index",
                "param_1": "undefined",
                "param_2": "num_bytes",
                "param_3": "src",
                "uVar3": "source_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080033cc": {
            "additional_data": {
                "FUN_08003376": {
                    "1": "print_output",
                    "4": "print_result"
                },
                "FUN_080033a8": {
                    "1": "process_chars",
                    "3": "process_substring"
                },
                "FUN_080033cc": {
                    "1": "process_command",
                    "2": "process_character",
                    "20": "process_input",
                    "5": "process_data"
                },
                "cVar1": {
                    "31": "first_char"
                },
                "iVar2": {
                    "1": "variable2",
                    "2": "length",
                    "21": "result",
                    "5": "index"
                },
                "param_1": {
                    "1": "input_param",
                    "3": "input",
                    "7": "input_data",
                    "8": "input_struct"
                },
                "param_2": {
                    "1": "arg2",
                    "18": "param2",
                    "2": "param1",
                    "3": "param_2",
                    "4": "arg1"
                },
                "param_3": {
                    "1": "arg3",
                    "18": "param3",
                    "2": "var2",
                    "3": "param_3",
                    "4": "arg2"
                },
                "param_4": {
                    "1": "arg4",
                    "18": "param4",
                    "2": "param3",
                    "3": "param_4",
                    "4": "arg3"
                },
                "pcVar3": {
                    "1": "input_pointer",
                    "11": "char_pointer",
                    "3": "string_ptr",
                    "4": "char_ptr"
                }
            },
            "called": [
                "FUN_08003376",
                "FUN_080033a8"
            ],
            "calling": [
                "FUN_08003474"
            ],
            "code": "\nvoid process_input_080033cc(int input_struct,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  char first_char;\n  int result;\n  char *char_pointer;\n  \n  char_pointer = *(char **)(input_struct + 4);\n  first_char = *char_pointer;\n  if (first_char == 'q') {\n    if (*(int *)(input_struct + 0x68) != 0) {\n      result = FUN_080033a8(input_struct,*(int *)(input_struct + 0x18) + -1,char_pointer + 1,char_pointer,param4);\n      FUN_08003376(input_struct,0,result + 1);\n      (**(code **)(input_struct + 0x68))(*(undefined4 *)(input_struct + 0x40),*(int *)(input_struct + 4) + 1);\n      return;\n    }\n  }\n  else if (first_char == 'y') {\n    if (*(code **)(input_struct + 0x70) != (code *)0x0) {\n      if (*(uint *)(input_struct + 0x18) < 3) {\n        (**(code **)(input_struct + 0x70))(*(undefined4 *)(input_struct + 0x34),0,0);\n        return;\n      }\n      result = FUN_080033a8(input_struct,*(uint *)(input_struct + 0x18) - 3,char_pointer + 3,char_pointer,param4);\n      FUN_08003376(input_struct,0,result + 3);\n      result = *(int *)(input_struct + 4);\n      (**(code **)(input_struct + 0x70))\n                (*(undefined4 *)(input_struct + 0x34),*(undefined *)(result + 1),*(undefined *)(result + 2)\n                 ,result + 3);\n      return;\n    }\n  }\n  else if (*(code **)(input_struct + 0x6c) != (code *)0x0) {\n    (**(code **)(input_struct + 0x6c))\n              (*(undefined4 *)(input_struct + 0x44),first_char,*(int *)(input_struct + 0x18) + -1,char_pointer + 1);\n  }\n  return;\n}\n\n",
            "current_name": "process_input_080033cc",
            "entrypoint": "0x080033cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080033cc": "process_input_080033cc",
                "cVar1": "first_char",
                "iVar2": "result",
                "param_1": "input_struct",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "pcVar3": "char_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800344a": {
            "additional_data": {
                "(*(code **)(param_1 + 0x78))(*(undefined4 *)(param_1 + 0x48))": {
                    "2": "call_function"
                },
                "*(code **)(param_1 + 0x78)": {
                    "1": "data_ptr->function_ptr",
                    "2": "function_ptr",
                    "3": "callback_function"
                },
                "*(int *)(param_1 + 4)": {
                    "1": "data_ptr"
                },
                "*(int *)(param_1 + 4) + uVar1)": {
                    "1": "data_structure_ptr->field7[index]"
                },
                "*(uint *)(param_1 + 8)": {
                    "1": "data_ptr->count",
                    "2": "data_size"
                },
                "*(undefined *)(*(int *)(param_1 + 4) + uVar1)": {
                    "1": "data_element",
                    "2": "array_element"
                },
                "*(undefined *)(param_1 + 0x14)": {
                    "1": "data_structure_ptr->field5"
                },
                "*(undefined *)(param_1 + 0xc)": {
                    "1": "data_structure_ptr->field2",
                    "2": "flag1"
                },
                "*(undefined *)(param_1 + 0xd)": {
                    "1": "data_structure_ptr->field3",
                    "2": "flag2"
                },
                "*(undefined4 *)(param_1 + 0x10)": {
                    "1": "initialized_flag"
                },
                "*(undefined4 *)(param_1 + 0x18)": {
                    "1": "data_structure_ptr->field6",
                    "2": "callback_result"
                },
                "*(undefined4 *)(param_1 + 0x48)": {
                    "1": "data_structure_ptr->param_ptr"
                },
                "FUN_0800344a": {
                    "1": "reset_memory_block",
                    "14": "initialize_data",
                    "2": "initialize_function",
                    "3": "initialize_data_structure",
                    "5": "initialize_memory"
                },
                "param_1": {
                    "1": "buffer_address",
                    "2": "function_data",
                    "3": "memory_address",
                    "4": "data_pointer",
                    "5": "data_address"
                },
                "param_1 + 0x10": {
                    "1": "initialized_flag_address"
                },
                "param_1 + 0x14": {
                    "1": "flag3_address"
                },
                "param_1 + 0x18": {
                    "1": "flag4_address"
                },
                "param_1 + 0xc": {
                    "1": "flag1_address"
                },
                "param_1 + 0xd": {
                    "1": "flag2_address"
                },
                "param_1 + 8": {
                    "1": "data_size"
                },
                "uVar1": {
                    "19": "index",
                    "3": "i",
                    "4": "counter",
                    "5": "iterator"
                }
            },
            "called": [],
            "calling": [
                "FUN_08003474"
            ],
            "code": "\nvoid initialize_data_0800344a(int data_address)\n\n{\n  uint index;\n  \n  *(undefined4 *)(data_address + 0x10) = 0;\n  *(undefined *)(data_address + 0xc) = 0;\n  *(undefined *)(data_address + 0xd) = 0;\n  for (index = 0; index < *(uint *)(data_address + 8); index = index + 1) {\n    *(undefined *)(*(int *)(data_address + 4) + index) = 0;\n  }\n  *(undefined *)(data_address + 0x14) = 0;\n  *(undefined4 *)(data_address + 0x18) = 0;\n  if (*(code **)(data_address + 0x78) != (code *)0x0) {\n    (**(code **)(data_address + 0x78))(*(undefined4 *)(data_address + 0x48));\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_0800344a",
            "entrypoint": "0x0800344a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800344a": "initialize_data_0800344a",
                "param_1": "data_address",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003474": {
            "additional_data": {
                "(*(byte **)(param_1 + 4))[1] + (uint)**(byte **)(param_1 + 4) * 0x80": {
                    "1": "calculation"
                },
                "*(byte *)(param_1 + 0xd)": {
                    "1": "lower_nibble"
                },
                "*(char *)(param_1 + 0x14)": {
                    "1": "flag"
                },
                "*(code **)(param_1 + 0x4c)": {
                    "1": "callback7"
                },
                "*(code **)(param_1 + 0x50)": {
                    "1": "callback3"
                },
                "*(code **)(param_1 + 0x54)": {
                    "1": "callback4"
                },
                "*(code **)(param_1 + 0x58)": {
                    "1": "callback2"
                },
                "*(code **)(param_1 + 0x5c)": {
                    "1": "callback5"
                },
                "*(code **)(param_1 + 0x60)": {
                    "1": "callback6"
                },
                "*(code **)(param_1 + 0x74)": {
                    "1": "callback1"
                },
                "*(int *)(param_1 + 0x10)": {
                    "1": "status"
                },
                "*(undefined *)(param_1 + 0xc)": {
                    "1": "current_value"
                },
                "*(undefined4 *)(param_1 + 0x18)": {
                    "1": "counter"
                },
                "FUN_08003376": {
                    "1": "update_parameter_with_address",
                    "2": "process_flag",
                    "5": "process_value"
                },
                "FUN_080033cc": {
                    "1": "reset_params",
                    "2": "reset_state",
                    "6": "reset_data"
                },
                "FUN_0800344a": {
                    "1": "handle_unsupported_input",
                    "2": "handle_error"
                },
                "FUN_08003474": {
                    "1": "process_code",
                    "14": "process_data",
                    "2": "handle_input",
                    "9": "process_input"
                },
                "FriendlyFunctionName": {
                    "1": "process_input"
                },
                "PTR_FUN_080033cc": {
                    "1": "cleanup_function"
                },
                "bVar1": {
                    "1": "byte_variable",
                    "16": "byte_value",
                    "2": "byte_val",
                    "3": "flag",
                    "6": "temp_byte"
                },
                "param_1": {
                    "1": "input_param",
                    "2": "input_data",
                    "5": "input_ptr",
                    "8": "data"
                },
                "param_2": {
                    "1": "key",
                    "16": "value",
                    "2": "input",
                    "9": "input_value"
                },
                "param_3": {
                    "1": "counter"
                }
            },
            "called": [
                "FUN_08003376",
                "FUN_080033cc",
                "FUN_0800344a"
            ],
            "calling": [
                "FUN_08002ed2"
            ],
            "code": "\nvoid process_data_08003474(int data,uint value)\n\n{\n  byte byte_value;\n  \n  if (*(char *)(data + 0x14) != '\\0') {\n    if (value != 0xf7) {\n      FUN_08003376(data,value,*(undefined4 *)(data + 0x18));\n      *(int *)(data + 0x18) = *(int *)(data + 0x18) + 1;\n      return;\n    }\n    *(undefined *)(data + 0x14) = 0;\n    FUN_080033cc();\n    return;\n  }\n  if ((*(int *)(data + 0x10) == 0) || (0x7f < (int)value)) {\n    if ((int)value < 0xf0) {\n      *(byte *)(data + 0xd) = (byte)value & 0xf;\n      value = value & 0xf0;\n    }\n    if (value == 0xf0) {\n      *(undefined *)(data + 0x14) = 1;\n      *(undefined4 *)(data + 0x18) = 0;\n      return;\n    }\n    if (value < 0xf1) {\n      if (value != 0xc0) {\n        if (value < 0xc1) {\n          if (value != 0x90) {\n            return;\n          }\n        }\n        else {\n          if (value == 0xd0) goto LAB_0800359c;\n          if (value != 0xe0) {\n            return;\n          }\n        }\nLAB_08003586:\n        *(undefined4 *)(data + 0x10) = 2;\n        *(char *)(data + 0xc) = (char)value;\n        return;\n      }\nLAB_0800359c:\n      *(undefined4 *)(data + 0x10) = 1;\n      *(char *)(data + 0xc) = (char)value;\n      return;\n    }\n    if (value != 0xf9) {\n      if (0xf9 < value) {\n        if (value == 0xff) {\n          FUN_0800344a(data);\n          return;\n        }\n        return;\n      }\n      if (1 < value - 0xf4) {\n        return;\n      }\n      goto LAB_08003586;\n    }\n    if (*(code **)(data + 0x74) != (code *)0x0) {\n      (**(code **)(data + 0x74))(*(undefined4 *)(data + 0x38));\n    }\n  }\n  else {\n    *(int *)(data + 0x10) = *(int *)(data + 0x10) + -1;\n    FUN_08003376();\n    if ((*(int *)(data + 0x10) == 0) && (byte_value = *(byte *)(data + 0xc), byte_value != 0)) {\n      if (byte_value == 0xd0) {\n        if (*(code **)(data + 0x58) != (code *)0x0) {\n          (**(code **)(data + 0x58))\n                    (*(undefined4 *)(data + 0x28),*(undefined *)(data + 0xd),\n                     **(undefined **)(data + 4));\n        }\n      }\n      else if (byte_value < 0xd1) {\n        if (byte_value == 0x90) {\n          if (*(code **)(data + 0x50) != (code *)0x0) {\n            (**(code **)(data + 0x50))\n                      (*(undefined4 *)(data + 0x20),*(undefined *)(data + 0xd),\n                       (uint)(*(byte **)(data + 4))[1] + (uint)**(byte **)(data + 4) * 0x80);\n          }\n        }\n        else if ((byte_value == 0xc0) && (*(code **)(data + 0x54) != (code *)0x0)) {\n          (**(code **)(data + 0x54))\n                    (*(undefined4 *)(data + 0x24),*(undefined *)(data + 0xd),\n                     **(undefined **)(data + 4));\n        }\n      }\n      else if (byte_value == 0xf4) {\n        if (*(code **)(data + 0x5c) != (code *)0x0) {\n          (**(code **)(data + 0x5c))\n                    (*(undefined4 *)(data + 0x2c),(*(undefined **)(data + 4))[1],\n                     **(undefined **)(data + 4));\n        }\n      }\n      else if (byte_value == 0xf5) {\n        if (*(code **)(data + 0x60) != (code *)0x0) {\n          (**(code **)(data + 0x60))\n                    (*(undefined4 *)(data + 0x30),(*(undefined **)(data + 4))[1],\n                     **(undefined **)(data + 4));\n        }\n      }\n      else if ((byte_value == 0xe0) && (*(code **)(data + 0x4c) != (code *)0x0)) {\n        (**(code **)(data + 0x4c))\n                  (*(undefined4 *)(data + 0x1c),*(undefined *)(data + 0xd),\n                   (uint)(*(byte **)(data + 4))[1] + (uint)**(byte **)(data + 4) * 0x80);\n      }\n      *(undefined *)(data + 0xc) = 0;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08003474",
            "entrypoint": "0x08003474",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003474": "process_data_08003474",
                "bVar1": "byte_value",
                "param_1": "data",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080035b8": {
            "additional_data": {
                "/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp": {
                    "1": "file"
                },
                "0": {
                    "1": "sensor_type"
                },
                "0x88": {
                    "1": "error_line1"
                },
                "0x95": {
                    "1": "error_line2"
                },
                "0x9c": {
                    "1": "error_line3"
                },
                "0xffffffff": {
                    "1": "sensor_identifier"
                },
                "4": {
                    "1": "sensor_count"
                },
                "FUN_080035b8": {
                    "1": "initialize_device",
                    "12": "initialize_board",
                    "13": "initialize_hardware",
                    "3": "initialize_system"
                },
                "FUN_08003f30": {
                    "1": "configure_interrupt_handler",
                    "2": "configure_timer"
                },
                "FUN_08003fd8": {
                    "1": "print_time_elapsed",
                    "2": "convert_to_seconds",
                    "4": "delay_milliseconds"
                },
                "FUN_08004024": {
                    "1": "initialize_components",
                    "2": "set_mode"
                },
                "FUN_08005460": {
                    "1": "initialize_gpio",
                    "2": "verify_board_config"
                },
                "FUN_080058ac": {
                    "1": "verify_pin_count"
                },
                "FUN_08005a1c": {
                    "1": "calculate_result",
                    "2": "get_current_time"
                },
                "FUN_08005aa4": {
                    "1": "verify_uart_config",
                    "2": "configure_spi"
                },
                "FUN_080073e8": {
                    "1": "print_error",
                    "3": "handle_error",
                    "5": "log_error"
                },
                "iVar1": {
                    "1": "return_value",
                    "21": "result"
                },
                "local_10": {
                    "1": "output_type",
                    "2": "var10",
                    "3": "value4"
                },
                "local_14": {
                    "1": "stack_var4",
                    "2": "constant3",
                    "3": "value3"
                },
                "local_1c": {
                    "1": "uart_baud_rate",
                    "2": "var8",
                    "3": "pin_mode"
                },
                "local_20": {
                    "1": "board_type",
                    "2": "var7",
                    "3": "value1"
                },
                "local_30": {
                    "1": "gpio_modes",
                    "2": "gpio_config",
                    "4": "board_config"
                },
                "local_30[4]": {
                    "1": "timer_config"
                },
                "local_34": {
                    "1": "device_info5",
                    "2": "value10"
                },
                "local_38": {
                    "1": "device_info4",
                    "2": "var5"
                },
                "local_3c": {
                    "1": "interrupt_trigger",
                    "2": "value8"
                },
                "local_40": {
                    "1": "param8",
                    "2": "value7"
                },
                "local_44": {
                    "1": "param7",
                    "2": "value6"
                },
                "local_4c": {
                    "1": "input6",
                    "2": "uart_baud_rate"
                },
                "local_54": {
                    "1": "array1",
                    "2": "spi_config"
                },
                "local_54[2]": {
                    "1": "config1"
                },
                "local_c": {
                    "1": "clock_setting",
                    "2": "var11",
                    "3": "value5"
                },
                "param_1": {
                    "1": "param1"
                },
                "param_2": {
                    "1": "param2"
                },
                "param_3": {
                    "1": "param3"
                },
                "uVar2": {
                    "1": "multiplier",
                    "2": "time_in_millis",
                    "6": "time"
                }
            },
            "called": [
                "FUN_08005a1c",
                "FUN_08005aa4",
                "FUN_08004024",
                "FUN_08003fd8",
                "FUN_08003f30",
                "FUN_08005460",
                "FUN_080073e8",
                "FUN_080058ac"
            ],
            "calling": [
                "FUN_080072fa"
            ],
            "code": "\nvoid initialize_hardware_080035b8(void)\n\n{\n  int result;\n  uint time;\n  undefined4 uart_config [2];\n  undefined4 uart_baud_rate;\n  undefined4 gpio_settings;\n  undefined4 gpio_mode;\n  undefined4 value8;\n  undefined4 value9;\n  undefined4 alternate_function;\n  undefined4 board_config [4];\n  undefined4 value1;\n  undefined4 pin_mode;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  \n  board_config[0] = 2;\n  value1 = 1;\n  pin_mode = 0x10;\n  value3 = 2;\n  value4 = 0;\n  value5 = 0x380000;\n  result = FUN_08005460(board_config);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  gpio_settings = 0xf;\n  gpio_mode = 2;\n  value8 = 0;\n  value9 = 0x400;\n  alternate_function = 0;\n  result = FUN_080058ac(&gpio_settings);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  uart_config[0] = 2;\n  uart_baud_rate = 0x8000;\n  result = FUN_08005aa4(uart_config);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  time = FUN_08005a1c();\n  FUN_08003fd8(time / 1000);\n  FUN_08004024(4);\n  FUN_08003f30(0xffffffff,0);\n  return;\n}\n\n",
            "current_name": "initialize_hardware_080035b8",
            "entrypoint": "0x080035b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080035b8": "initialize_hardware_080035b8",
                "iVar1": "result",
                "local_10": "value4",
                "local_14": "value3",
                "local_1c": "pin_mode",
                "local_20": "value1",
                "local_30": "board_config",
                "local_34": "alternate_function",
                "local_38": "value9",
                "local_3c": "value8",
                "local_40": "gpio_mode",
                "local_44": "gpio_settings",
                "local_4c": "uart_baud_rate",
                "local_54": "uart_config",
                "local_c": "value5",
                "uVar2": "time"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080036a2": {
            "additional_data": {
                "FUN_080036a2": {
                    "1": "execute_initialized_routine",
                    "12": "initialize_system",
                    "2": "initialize",
                    "5": "initialize_application",
                    "7": "execute_initialization"
                },
                "FUN_080072fa": {
                    "1": "do_component_setup",
                    "2": "perform_additional_tasks",
                    "4": "execute_initialization",
                    "8": "perform_initialization"
                }
            },
            "called": [
                "FUN_080072fa"
            ],
            "calling": [
                "FUN_08008f0e"
            ],
            "code": "\nvoid initialize_system_080036a2(void)\n\n{\n  FUN_080072fa();\n  return;\n}\n\n",
            "current_name": "initialize_system_080036a2",
            "entrypoint": "0x080036a2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080036a2": "initialize_system_080036a2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080036ac": {
            "additional_data": {
                "&DAT_0800a908": {
                    "1": "array",
                    "2": "character_array"
                },
                "FUN_080036ac": {
                    "1": "check_value_in_array",
                    "15": "find_character_index",
                    "3": "find_char_index"
                },
                "param_1": {
                    "1": "index",
                    "18": "character",
                    "2": "input_param",
                    "4": "value"
                },
                "uVar1": {
                    "1": "char_index",
                    "27": "index"
                }
            },
            "called": [],
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_080022f8",
                "FUN_08000a64",
                "FUN_08000ef8",
                "FUN_080005f8"
            ],
            "code": "\nuint find_character_index_080036ac(int character)\n\n{\n  uint index;\n  \n  if ((uint)(character << 0x18) >> 0x1c < 5) {\n    for (index = 0; (index < 0x3c && (character != (char)(&DAT_0800a908)[index])); index = index + 1)\n    {\n    }\n  }\n  else {\n    index = 0xffffffff;\n  }\n  return index;\n}\n\n",
            "current_name": "find_character_index_080036ac",
            "entrypoint": "0x080036ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080036ac": "find_character_index_080036ac",
                "param_1": "character",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080036d4": {
            "called": [],
            "calling": [
                "FUN_08003724"
            ],
            "code": "\nvoid FUNC_080036d4(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080036d4",
            "entrypoint": "0x080036d4",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080036d4": "FUNC_080036d4"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080036d8": {
            "additional_data": {
                "0xf": {
                    "11": "threshold",
                    "2": "limit",
                    "5": "max_value"
                },
                "0xffffffff": {
                    "1": "operation_constant",
                    "2": "constant",
                    "3": "constant3"
                },
                "1000 / DAT_2000000c": {
                    "1": "divisor"
                },
                "DAT_2000000c": {
                    "1": "divisor",
                    "3": "value2",
                    "7": "constant2"
                },
                "DAT_20000010": {
                    "1": "current_value",
                    "2": "updated_data",
                    "3": "stored_value"
                },
                "DAT_20000018": {
                    "1": "system_constant1",
                    "3": "value1",
                    "7": "constant1"
                },
                "FUN_080036d8": {
                    "1": "calculate_time_delay",
                    "15": "initialize_data",
                    "2": "check_and_set_param"
                },
                "FUN_08003f30": {
                    "1": "initialize_values",
                    "2": "execute_operation",
                    "3": "set_values",
                    "4": "update_data",
                    "5": "process_data",
                    "6": "perform_operation"
                },
                "FUN_08003fd8": {
                    "1": "calculate_rate",
                    "12": "calculate_value",
                    "2": "calculate_division",
                    "8": "calculate_ratio"
                },
                "FUn_08003fd8": {
                    "1": "calculate_result"
                },
                "iVar1": {
                    "1": "error_code",
                    "28": "result"
                },
                "ivar1": {
                    "1": "result"
                },
                "param_1": {
                    "1": "param",
                    "12": "input_value",
                    "2": "parameter",
                    "5": "input_param"
                },
                "param_2": {
                    "1": "data_parameter1",
                    "2": "value1",
                    "3": "value2",
                    "5": "param2"
                },
                "param_3": {
                    "1": "data_param3",
                    "2": "value2",
                    "3": "value3",
                    "5": "param3"
                }
            },
            "called": [
                "FUN_08003fd8",
                "FUN_08003f30"
            ],
            "calling": [
                "FUN_08003724",
                "FUN_080058d2"
            ],
            "code": "\nundefined4 initialize_data_080036d8(uint input_value)\n\n{\n  int result;\n  \n  result = FUN_08003fd8(DAT_20000018 / (1000 / DAT_2000000c));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < input_value) {\n    return 1;\n  }\n  FUN_08003f30(0xffffffff,input_value,0);\n  DAT_20000010 = input_value;\n  return 0;\n}\n\n",
            "current_name": "initialize_data_080036d8",
            "entrypoint": "0x080036d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080036d8": "initialize_data_080036d8",
                "iVar1": "result",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003724": {
            "additional_data": {
                "0x10": {
                    "1": "flag_mask"
                },
                "0xf": {
                    "1": "bit_mask"
                },
                "FUNC_080036d4": {
                    "1": "perform_initialization",
                    "2": "execute_function",
                    "3": "call_function"
                },
                "FUN_080036d4": {
                    "1": "reset_system"
                },
                "FUN_080036d8": {
                    "1": "set_value_and_call_function",
                    "2": "set_priority",
                    "3": "set_configuration",
                    "6": "set_mode",
                    "8": "set_flag"
                },
                "FUN_08003724": {
                    "1": "initiate",
                    "2": "set_flags_and_call_functions",
                    "5": "set_flag_and_call_functions",
                    "6": "initialize_device",
                    "9": "initialize_system"
                },
                "FUN_08003f0c": {
                    "1": "do_action",
                    "2": "configure_settings",
                    "3": "configure_device",
                    "5": "perform_action"
                },
                "_DAT_40022000": {
                    "1": "flag_variable"
                },
                "param_1": {
                    "1": "status_code",
                    "2": "value",
                    "3": "flag_value"
                }
            },
            "called": [
                "FUN_080036d4",
                "FUN_080036d8",
                "FUN_08003f0c"
            ],
            "calling": [
                "FUN_080072fa"
            ],
            "code": "\n\n\nundefined4 initialize_system_08003724(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08003f0c(3);\n  FUN_080036d8(0xf);\n  FUNC_080036d4();\n  return 0;\n}\n\n",
            "current_name": "initialize_system_08003724",
            "entrypoint": "0x08003724",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003724": "initialize_system_08003724"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003748": {
            "additional_data": {
                "DAT_2000000c": {
                    "1": "addend",
                    "10": "input_value",
                    "2": "input_num",
                    "3": "value",
                    "5": "input"
                },
                "DAT_20000a34": {
                    "1": "current_value",
                    "11": "sum",
                    "13": "result"
                },
                "FUN_08003748": {
                    "1": "additional_value_to_sum",
                    "2": "addition",
                    "4": "calculate_sum"
                },
                "uint": {
                    "1": "unsigned_integer"
                }
            },
            "called": [],
            "calling": [
                "FUN_08007246"
            ],
            "code": "\nvoid update_sum_08003748(void)\n\n{\n  DAT_20000a34 = (unsigned_integer)DAT_2000000c + DAT_20000a34;\n  return;\n}\n\n",
            "current_name": "update_sum_08003748",
            "entrypoint": "0x08003748",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003748": "update_sum_08003748",
                "uint": "unsigned_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003760": {
            "additional_data": {
                "DAT_20000a34": {
                    "1": "data_from_memory",
                    "11": "data",
                    "2": "data_value"
                },
                "FUN_08003760": {
                    "1": "get_data_from_address",
                    "16": "get_data_value",
                    "2": "get_global_value",
                    "9": "get_data"
                }
            },
            "called": [],
            "calling": [
                "FUN_080066e8",
                "FUN_080067ac",
                "FUN_0800376c",
                "FUN_08003b8c",
                "FUN_080058d2",
                "FUN_08007e74",
                "FUN_08008500",
                "FUN_08005aa4",
                "FUN_08007f0e",
                "FUN_0800723c",
                "FUN_08003a20",
                "FUN_08003e20",
                "FUN_08005460"
            ],
            "code": "\nundefined4 get_data_value_08003760(void)\n\n{\n  return DAT_20000a34;\n}\n\n",
            "current_name": "get_data_value_08003760",
            "entrypoint": "0x08003760",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003760": "get_data_value_08003760"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800376c": {
            "additional_data": {
                "FUN_0800376c": {
                    "1": "check_validity",
                    "2": "check_and_update_flags",
                    "3": "check_and_process_data"
                },
                "iVar1": {
                    "1": "start_value",
                    "14": "initial_value",
                    "2": "current_value",
                    "3": "start_time"
                },
                "iVar3": {
                    "1": "temporary_value",
                    "2": "result2",
                    "3": "difference",
                    "4": "temp_value"
                },
                "local_1c": {
                    "1": "iteration_count",
                    "2": "count",
                    "22": "counter"
                },
                "param_1": {
                    "1": "input_pointer",
                    "2": "pointer_array",
                    "3": "param",
                    "4": "param_array",
                    "6": "data"
                },
                "param_2": {
                    "1": "max_iterations",
                    "2": "value",
                    "3": "limit",
                    "4": "size",
                    "5": "param_value",
                    "6": "length"
                },
                "puVar5": {
                    "1": "pointer_value",
                    "2": "pointer_var",
                    "3": "flags"
                },
                "uVar2": {
                    "1": "var2",
                    "11": "random_value",
                    "3": "random_val",
                    "4": "result",
                    "6": "factor"
                },
                "uVar4": {
                    "13": "return_value",
                    "14": "result",
                    "4": "return_val"
                },
                "uVar6": {
                    "1": "temp_val",
                    "13": "calculation_result",
                    "2": "multiplier",
                    "3": "calculation"
                }
            },
            "called": [
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nundefined4 check_and_process_data_0800376c(uint **data,uint length)\n\n{\n  int initial_value;\n  uint random_value;\n  int temp_value;\n  undefined4 result;\n  uint *data;\n  uint calculation_result;\n  uint counter;\n  \n  counter = 0;\n  initial_value = FUN_08003760();\n  calculation_result = DAT_20000018;\n  data = *data;\n  if ((data[2] & 0x100) == 0) {\n    if (((data[1] & 0x100) == 0) && ((data[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**data & 2) != 0) goto LAB_0800387e;\n      } while ((length == 0xffffffff) ||\n              ((length != 0 && (temp_value = FUN_08003760(), (uint)(temp_value - initial_value) <= length))));\n      data[10] = (uint *)((uint)data[10] | 4);\n      *(undefined *)(data + 9) = 0;\n      result = 3;\n    }\n    else {\n      random_value = FUN_08005bb8(2);\n      data = *data;\n      if (((data[4] & 0x24924924) == 0) && ((data[3] & 0x924924) == 0)) {\n        if ((data[4] & 0x12492492) == 0) {\n          if ((data[3] & 0x492492) == 0) {\n            temp_value = 0x14;\n          }\n          else {\n            temp_value = 0x29;\n          }\n        }\n        else {\n          temp_value = 0x29;\n        }\n      }\n      else if (((data[4] & 0x12492492) == 0) && ((data[3] & 0x492492) == 0)) {\n        temp_value = 0x54;\n      }\n      else if ((data[4] & 0x249249) == 0) {\n        if ((data[3] & 0x249249) == 0) {\n          temp_value = 0x54;\n        }\n        else {\n          temp_value = 0xfc;\n        }\n      }\n      else {\n        temp_value = 0xfc;\n      }\n      calculation_result = (calculation_result / random_value) * temp_value;\n      for (; counter <= calculation_result && calculation_result - counter != 0; counter = counter + 1) {\n        if ((length != 0xffffffff) &&\n           ((length == 0 || (temp_value = FUN_08003760(), length < (uint)(temp_value - initial_value))))) {\n          data[10] = (uint *)((uint)data[10] | 4);\n          *(undefined *)(data + 9) = 0;\n          return 3;\n        }\n      }\nLAB_0800387e:\n      **data = 0xffffffed;\n      data[10] = (uint *)((uint)data[10] | 0x200);\n      if (((*data)[2] & 0xe0000) == 0xe0000) {\n        if (data[3] == (uint *)0x0) {\n          data[10] = (uint *)((uint)data[10] & 0xfffffeff);\n          if (((uint)data[10] & 0x1000) == 0) {\n            data[10] = (uint *)((uint)data[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    data[10] = (uint *)((uint)data[10] | 0x20);\n    *(undefined *)(data + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "current_name": "check_and_process_data_0800376c",
            "entrypoint": "0x0800376c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800376c": "check_and_process_data_0800376c",
                "iVar1": "initial_value",
                "iVar3": "temp_value",
                "local_1c": "counter",
                "param_1": "data",
                "param_2": "length",
                "puVar5": "data",
                "uVar2": "random_value",
                "uVar4": "result",
                "uVar6": "calculation_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080038dc": {
            "additional_data": {
                "*(undefined4 *)(*param_1 + 0x4c)": {
                    "1": "value_at_memory_address_plus4_c"
                },
                "*param_1": {
                    "1": "address_value",
                    "8": "offset_value"
                },
                "*param_1 + 0x4c": {
                    "1": "offset_value"
                },
                "0x4c": {
                    "2": "offset"
                },
                "FUN_080038dc": {
                    "1": "extract_value_from_ptr_offset",
                    "17": "get_offset_value",
                    "2": "get_memory_value",
                    "5": "get_value_from_offset"
                },
                "PTR_dat_4c": {
                    "1": "offset_address"
                },
                "param_1": {
                    "1": "input_array",
                    "12": "offset_pointer",
                    "2": "input_pointer"
                }
            },
            "called": [],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nundefined4 get_offset_value_080038dc(int *offset_pointer)\n\n{\n  return *(undefined4 *)(*offset_pointer + 0x4c);\n}\n\n",
            "current_name": "get_offset_value_080038dc",
            "entrypoint": "0x080038dc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080038dc": "get_offset_value_080038dc",
                "param_1": "offset_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080038e4": {
            "additional_data": {
                "*(char *)(param_1 + 9)": {
                    "1": "flag"
                },
                "*(uint *)(*param_1 + 0x10)": {
                    "1": "config_value4"
                },
                "*(uint *)(*param_1 + 0x2c)": {
                    "1": "config_value3"
                },
                "*(uint *)(*param_1 + 0x30)": {
                    "1": "config_value2"
                },
                "*(uint *)(*param_1 + 0x34)": {
                    "1": "config_value1"
                },
                "*(uint *)(*param_1 + 0xc)": {
                    "1": "config_value5"
                },
                "*param_1": {
                    "1": "config_value"
                },
                "*param_2": {
                    "1": "values_address"
                },
                "DAT_20000018": {
                    "1": "constant_value"
                },
                "FUN_080038e4": {
                    "1": "set_bit_values",
                    "10": "update_configuration",
                    "2": "update_settings",
                    "3": "update_registers",
                    "4": "update_parameters"
                },
                "local_c": {
                    "1": "loop_iterator",
                    "19": "counter",
                    "2": "delay_counter",
                    "4": "loop_counter",
                    "5": "count"
                },
                "param_1": {
                    "1": "memory_config",
                    "2": "register_array",
                    "8": "config"
                },
                "param_2": {
                    "1": "value_pointer",
                    "11": "values",
                    "2": "input_values",
                    "3": "value_array",
                    "4": "data"
                },
                "uRam40012408": {
                    "1": "ram_value"
                },
                "uVar1": {
                    "14": "return_value",
                    "15": "result"
                },
                "uVar2": {
                    "1": "value_index",
                    "2": "config_value",
                    "3": "offset",
                    "6": "value",
                    "8": "index"
                }
            },
            "called": [],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nundefined4 update_configuration_080038e4(int *config,uint *values)\n\n{\n  undefined4 result;\n  uint index;\n  int counter;\n  \n  if (*(char *)(config + 9) == '\\x01') {\n    result = 2;\n  }\n  else {\n    *(undefined *)(config + 9) = 1;\n    index = values[1];\n    if (index < 7) {\n      index = index * 5 - 5;\n      *(uint *)(*config + 0x34) =\n           *values << (index & 0xff) | *(uint *)(*config + 0x34) & ~(0x1f << (index & 0xff));\n    }\n    else if (index < 0xd) {\n      index = index * 5 - 0x23;\n      *(uint *)(*config + 0x30) =\n           *values << (index & 0xff) | *(uint *)(*config + 0x30) & ~(0x1f << (index & 0xff));\n    }\n    else {\n      index = index * 5 - 0x41;\n      *(uint *)(*config + 0x2c) =\n           *values << (index & 0xff) | *(uint *)(*config + 0x2c) & ~(0x1f << (index & 0xff));\n    }\n    index = *values;\n    if (index < 10) {\n      *(uint *)(*config + 0x10) =\n           values[2] << (index * 3 & 0xff) |\n           *(uint *)(*config + 0x10) & ~(7 << (index * 3 & 0xff));\n    }\n    else {\n      index = index * 3 - 0x1e;\n      *(uint *)(*config + 0xc) =\n           values[2] << (index & 0xff) | *(uint *)(*config + 0xc) & ~(7 << (index & 0xff));\n    }\n    if (*values - 0x10 < 2) {\n      if (*config == 0x40012400) {\n        if ((ram_value & 0x800000) == 0) {\n          ram_value = ram_value | 0x800000;\n          if (*values == 0x10) {\n            for (counter = (DAT_20000018 / 1000000) * 10; counter != 0; counter = counter + -1) {\n            }\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        config[10] = config[10] | 0x20;\n        result = 1;\n      }\n    }\n    else {\n      result = 0;\n    }\n    *(undefined *)(config + 9) = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "update_configuration_080038e4",
            "entrypoint": "0x080038e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080038e4": "update_configuration_080038e4",
                "local_c": "counter",
                "param_1": "config",
                "param_2": "values",
                "uRam40012408": "ram_value",
                "uVar1": "result",
                "uVar2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003a1c": {
            "additional_data": {
                "": {
                    "2": ""
                },
                "*(undefined4 *)(param_1 + 0x28)": {
                    "1": "value",
                    "2": "value_at_offset"
                },
                "+ 0x28": {
                    "1": "offset"
                },
                "0x28": {
                    "1": "offset"
                },
                "<original_variable_name>": {
                    "1": "<new_variable_name>"
                },
                "<unchanged_variable>": {
                    "1": "<unchanged_variable>"
                },
                "DAT_": {
                    "1": ""
                },
                "FUN_08003a1c": {
                    "1": "get_pointer_value_by_offset",
                    "2": "get_return_value",
                    "4": "get_value_at_offset",
                    "6": "get_value_from_offset",
                    "8": "get_offset_value"
                },
                "PTR_": {
                    "1": ""
                },
                "PTR_XXXX": {
                    "1": "unimportant_pointer"
                },
                "local_variable_name_1": {
                    "1": "pointer_value"
                },
                "new_variable_name_1": {
                    "1": "offset_value"
                },
                "param_1": {
                    "1": "pointer_address",
                    "12": "base_address",
                    "2": "pointer",
                    "3": "input_address",
                    "8": "offset"
                },
                "param_1 + 0x28": {
                    "2": "offset_value"
                },
                "param_2": {
                    "1": "new_parameter_name_2"
                },
                "param_n": {
                    "1": "new_parameter_name_n"
                },
                "ptr": {
                    "1": "data_ptr"
                },
                "return_value": {
                    "1": "address"
                },
                "var_1": {
                    "1": "value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nundefined4 get_offset_value_08003a1c(int base_address)\n\n{\n  return *(undefined4 *)(base_address + 0x28);\n}\n\n",
            "current_name": "get_offset_value_08003a1c",
            "entrypoint": "0x08003a1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003a1c": "get_offset_value_08003a1c",
                "param_1": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003a20": {
            "additional_data": {
                "FUN_08003760": {
                    "1": "perform_operation",
                    "2": "sub_function"
                },
                "FUN_08003a20": {
                    "1": "check_and_modify_flag",
                    "2": "initialize_device",
                    "4": "process_data"
                },
                "iVar1": {
                    "1": "temp_var1",
                    "2": "current_value",
                    "20": "result",
                    "4": "return_value"
                },
                "iVar3": {
                    "1": "param",
                    "2": "device_ptr",
                    "3": "ptr_data",
                    "6": "data_value"
                },
                "local_14": {
                    "1": "time_delay",
                    "10": "counter",
                    "2": "delay",
                    "6": "loop_counter",
                    "7": "iteration_count"
                },
                "param_1": {
                    "1": "resource_pointer",
                    "12": "data",
                    "2": "device_data"
                },
                "param_2": {
                    "1": "flag_value",
                    "2": "size",
                    "3": "flag",
                    "9": "param"
                },
                "uVar2": {
                    "4": "result",
                    "9": "return_value"
                }
            },
            "called": [
                "FUN_08003760"
            ],
            "calling": [
                "FUN_08003e20",
                "FUN_08003aa0"
            ],
            "code": "\nundefined4 process_data_08003a20(int *data,undefined4 param)\n\n{\n  int result;\n  undefined4 return_value;\n  int data_value;\n  uint counter;\n  \n  data_value = *data;\n  if ((*(uint *)(data_value + 8) & 1) == 0) {\n    *(uint *)(data_value + 8) = *(uint *)(data_value + 8) | 1;\n    for (counter = DAT_20000018 / 1000000; counter != 0; counter = counter - 1) {\n    }\n    data_value = FUN_08003760(data,param,DAT_20000018 * 0x431bde83);\n    do {\n      if ((*(uint *)(*data + 8) & 1) != 0) {\n        return 0;\n      }\n      result = FUN_08003760();\n    } while ((uint)(result - data_value) < 3);\n    data[10] = data[10] | 0x10;\n    data[0xb] = data[0xb] | 1;\n    *(undefined *)(data + 9) = 0;\n    return_value = 1;\n  }\n  else {\n    return_value = 0;\n  }\n  return return_value;\n}\n\n",
            "current_name": "process_data_08003a20",
            "entrypoint": "0x08003a20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003a20": "process_data_08003a20",
                "iVar1": "result",
                "iVar3": "data_value",
                "local_14": "counter",
                "param_1": "data",
                "param_2": "param",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003aa0": {
            "additional_data": {
                "(undefined4 *)*param_1": {
                    "1": "ptr2"
                },
                "*(char *)(param_1 + 9)": {
                    "1": "status"
                },
                "*(param_1 + 9)": {
                    "1": "is_flag_set"
                },
                "*(param_1[0])": {
                    "1": "data"
                },
                "*(uint *)(iVar3 + 8)": {
                    "1": "flag_value"
                },
                "*(undefined *)(param_1 + 9)": {
                    "1": "status_pointer"
                },
                "*_DAT_40012404": {
                    "1": "constant_value"
                },
                "*param_1": {
                    "1": "value_pointer"
                },
                "*puVar2": {
                    "1": "pointer_value"
                },
                "<original_parameter_name_1>": {
                    "1": "<new_parameter_name_1>"
                },
                "<original_variable_name_1>": {
                    "1": "<new_variable_name_1>"
                },
                "<original_variable_name_2>": {
                    "1": "<new_variable_name_2>"
                },
                "DAT_40012404": {
                    "1": "constant_value2"
                },
                "FUN_08003a20": {
                    "1": "get_status",
                    "3": "perform_initialization"
                },
                "FUN_08003aa0": {
                    "1": "update_flags_and_values",
                    "2": "update_flags",
                    "3": "initialize_function"
                },
                "F_FUN_08003a20": {
                    "1": "check_function"
                },
                "_DAT_40012404": {
                    "1": "constant",
                    "2": "constant_value"
                },
                "iVar1": {
                    "1": "error_code",
                    "2": "return_value",
                    "24": "result",
                    "3": "status"
                },
                "iVar3": {
                    "1": "another_result",
                    "13": "value",
                    "2": "i_var",
                    "4": "temp_var"
                },
                "param_1": {
                    "1": "flags",
                    "2": "param_array",
                    "3": "params",
                    "4": "input_array",
                    "5": "parameters"
                },
                "param_1[0xb]": {
                    "1": "param3"
                },
                "param_1[10]": {
                    "1": "flags"
                },
                "param_1[9]": {
                    "1": "param2"
                },
                "param_2": {
                    "3": "param"
                },
                "puVar2": {
                    "1": "pointer_variable",
                    "13": "ptr",
                    "2": "pointer_var",
                    "6": "pointer"
                }
            },
            "called": [
                "FUN_08003a20"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\n\n\nint initialize_function_08003aa0(int *parameters)\n\n{\n  int result;\n  undefined4 *ptr;\n  int value;\n  \n  if (*(char *)(parameters + 9) != '\\x01') {\n    *(undefined *)(parameters + 9) = 1;\n    result = FUN_08003a20();\n    if (result == 0) {\n      flags = flags & 0xfffffcfeU | 0x100;\n      ptr = (undefined4 *)*parameters;\n      if ((ptr == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        flags = flags | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          flags = flags & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        flags = flags & 0xffefffff;\n        if ((ptr[1] & 0x400) != 0) {\n          flags = flags & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((flags & 0x1000U) == 0) {\n        value2 = 0;\n      }\n      else {\n        value2 = value2 & 0xfffffff9;\n      }\n      *(undefined *)(parameters + 9) = 0;\n      *ptr = 0xfffffffd;\n      value = *parameters;\n      if (((*(uint *)(value + 8) & 0xe0000) == 0xe0000) &&\n         ((value != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(parameters + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "current_name": "initialize_function_08003aa0",
            "entrypoint": "0x08003aa0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003aa0": "initialize_function_08003aa0",
                "iVar1": "result",
                "iVar3": "value",
                "param_1": "parameters",
                "param_1[0xb]": "value2",
                "param_1[10]": "flags",
                "puVar2": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003b8c": {
            "additional_data": {
                "FUN_08003760": {
                    "1": "get_time_difference",
                    "4": "get_random_value"
                },
                "FUN_08003b8c": {
                    "1": "check_validity_and_update",
                    "2": "check_and_set_flags",
                    "9": "check_and_update_flags"
                },
                "iVar1": {
                    "1": "current_value",
                    "10": "temp_var1",
                    "2": "result",
                    "4": "result1"
                },
                "iVar2": {
                    "1": "iteration_value2",
                    "10": "temp_var2",
                    "2": "temp2",
                    "4": "value"
                },
                "param_1": {
                    "1": "input_arr",
                    "13": "input_array",
                    "4": "array",
                    "5": "input_data"
                }
            },
            "called": [
                "FUN_08003760"
            ],
            "calling": [
                "FUN_08003bd8",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003de4"
            ],
            "code": "\nundefined4 check_and_update_flags_08003b8c(int *input_array)\n\n{\n  int temp_var1;\n  int temp_var2;\n  \n  temp_var2 = *input_array;\n  if ((*(uint *)(temp_var2 + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(temp_var2 + 8) = *(uint *)(temp_var2 + 8) & 0xfffffffe;\n  temp_var2 = FUN_08003760();\n  do {\n    if ((*(uint *)(*input_array + 8) & 1) == 0) {\n      return 0;\n    }\n    temp_var1 = FUN_08003760();\n  } while ((uint)(temp_var1 - temp_var2) < 3);\n  input_array[10] = input_array[10] | 0x10;\n  input_array[0xb] = input_array[0xb] | 1;\n  return 1;\n}\n\n",
            "current_name": "check_and_update_flags_08003b8c",
            "entrypoint": "0x08003b8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003b8c": "check_and_update_flags_08003b8c",
                "iVar1": "temp_var1",
                "iVar2": "temp_var2",
                "param_1": "input_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003bd8": {
            "additional_data": {
                "FUN_08003b8c": {
                    "1": "check_device_status",
                    "2": "check_params"
                },
                "FUN_08003bd8": {
                    "1": "check_and_configure_device",
                    "2": "validate_input",
                    "3": "initialize_device",
                    "5": "validate_parameters"
                },
                "FUN_08006ca8": {
                    "1": "initialize_components"
                },
                "iVar1": {
                    "1": "error_code",
                    "29": "result"
                },
                "param_1": {
                    "1": "param",
                    "2": "device_params",
                    "3": "config",
                    "6": "input_array"
                },
                "uVar2": {
                    "1": "combined",
                    "2": "var2",
                    "4": "flag1",
                    "8": "var1"
                },
                "uVar3": {
                    "1": "calculation_2",
                    "2": "value2",
                    "4": "flag2",
                    "8": "var2"
                }
            },
            "called": [
                "FUN_08006ca8",
                "FUN_08003b8c"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nundefined4 validate_parameters_08003bd8(int *input_array)\n\n{\n  int result;\n  uint var1;\n  uint var2;\n  \n  if (input_array == (int *)0x0) {\n    return 1;\n  }\n  if (input_array[10] == 0) {\n    input_array[0xb] = 0;\n    *(undefined *)(input_array + 9) = 0;\n    FUN_08006ca8();\n  }\n  result = FUN_08003b8c(input_array);\n  if (((input_array[10] & 0x10U) == 0) && (result == 0)) {\n    input_array[10] = input_array[10] & 0xffffeefdU | 2;\n    var1 = input_array[1] | input_array[7] | input_array[3] << 1;\n    if (input_array[2] == 0x100) {\n      var2 = 0x100;\n    }\n    else {\n      var2 = 0;\n      if (input_array[2] == 1) {\n        var2 = 0x100;\n      }\n    }\n    if (input_array[5] == 1) {\n      if (input_array[3] == 0) {\n        var2 = var2 | (input_array[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        input_array[10] = input_array[10] | 0x20;\n        input_array[0xb] = input_array[0xb] | 1;\n      }\n    }\n    *(uint *)(*input_array + 4) = var2 | *(uint *)(*input_array + 4) & 0xffff16ff;\n    *(uint *)(*input_array + 8) = *(uint *)(*input_array + 8) & 0xffe1f7fd | var1;\n    if ((input_array[2] == 0x100) || (input_array[2] == 1)) {\n      var2 = (input_array[4] + -1) * 0x100000;\n    }\n    else {\n      var2 = 0;\n    }\n    *(uint *)(*input_array + 0x2c) = var2 | *(uint *)(*input_array + 0x2c) & 0xff0fffff;\n    if (var1 != (*(uint *)(*input_array + 8) & 0xff1f0efe)) {\n      input_array[10] = input_array[10] & 0xffffffedU | 0x10;\n      input_array[0xb] = input_array[0xb] | 1;\n      return 1;\n    }\n    input_array[0xb] = 0;\n    input_array[10] = input_array[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  input_array[10] = input_array[10] | 0x10;\n  return 1;\n}\n\n",
            "current_name": "validate_parameters_08003bd8",
            "entrypoint": "0x08003bd8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003bd8": "validate_parameters_08003bd8",
                "iVar1": "result",
                "param_1": "input_array",
                "uVar2": "var1",
                "uVar3": "var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003ce8": {
            "additional_data": {
                "*(uint *)(*param_1 + 0x10)": {
                    "1": "fifth_value"
                },
                "*(uint *)(*param_1 + 0x14)": {
                    "1": "sixth_value"
                },
                "*(uint *)(*param_1 + 0x18)": {
                    "1": "pointer_value_uint24"
                },
                "*(uint *)(*param_1 + 0x1c)": {
                    "1": "pointer_value_uint28"
                },
                "*(uint *)(*param_1 + 0x20)": {
                    "1": "ninth_value"
                },
                "*(uint *)(*param_1 + 0x24)": {
                    "1": "pointer_value_uint36"
                },
                "*(uint *)(*param_1 + 0x28)": {
                    "1": "eleventh_value"
                },
                "*(uint *)(*param_1 + 0x2c)": {
                    "1": "pointer_value_uint44"
                },
                "*(uint *)(*param_1 + 0x30)": {
                    "1": "thirteenth_value"
                },
                "*(uint *)(*param_1 + 0x34)": {
                    "1": "pointer_value_uint52"
                },
                "*(uint *)(*param_1 + 0x38)": {
                    "1": "pointer_value_uint56"
                },
                "*(uint *)(*param_1 + 0xc)": {
                    "1": "pointer_value_uint12"
                },
                "*(uint *)(*param_1 + 4)": {
                    "1": "second_value"
                },
                "*(uint *)(*param_1 + 8)": {
                    "1": "third_value"
                },
                "*(undefined4 *)*param_1": {
                    "1": "pointer_value_int"
                },
                "*param_1": {
                    "1": "pointer_value"
                },
                "FIV_08003b8c": {
                    "1": "check_function"
                },
                "FUN_08003b8c": {
                    "1": "get_status",
                    "2": "check_function",
                    "3": "check_validity",
                    "6": "check_condition"
                },
                "FUN_08003ce8": {
                    "1": "clear_memory_protection",
                    "2": "update_configuration"
                },
                "FUN_08006d24": {
                    "1": "reset_array",
                    "2": "clear_memory",
                    "3": "sub_function_2"
                },
                "iVar1": {
                    "2": "return_value",
                    "29": "result"
                },
                "param_1": {
                    "1": "param",
                    "2": "parameter",
                    "3": "memory_block",
                    "4": "array",
                    "5": "input_array"
                },
                "param_1[0]": {
                    "1": "memory_block[0]"
                },
                "param_1[0xb]": {
                    "1": "data_array[0xb]"
                },
                "param_1[10]": {
                    "1": "input_array[10]",
                    "2": "parameter[10]"
                },
                "param_1[11]": {
                    "1": "memory_block[11]"
                },
                "param_1[9]": {
                    "1": "memory_block[9]"
                },
                "undefined4": {
                    "1": "return_value"
                }
            },
            "called": [
                "FUN_08006d24",
                "FUN_08003b8c"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nint update_configuration_08003ce8(int *input_array)\n\n{\n  int result;\n  \n  if (input_array == (int *)0x0) {\n    result = 1;\n  }\n  else {\n    parameter[10] = parameter[10] | 2;\n    result = FUN_08003b8c();\n    if (result == 0) {\n      *(return_value *)*input_array = 0xffffffe0;\n      *(uint *)(*input_array + 4) = *(uint *)(*input_array + 4) & 0xff3f0000;\n      *(uint *)(*input_array + 8) = *(uint *)(*input_array + 8) & 0xff0106f0;\n      *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) & 0xff000000;\n      *(uint *)(*input_array + 0x10) = *(uint *)(*input_array + 0x10) & 0xc0000000;\n      *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) & 0xfffff000;\n      *(uint *)(*input_array + 0x18) = *(uint *)(*input_array + 0x18) & 0xfffff000;\n      *(uint *)(*input_array + 0x1c) = *(uint *)(*input_array + 0x1c) & 0xfffff000;\n      *(uint *)(*input_array + 0x20) = *(uint *)(*input_array + 0x20) & 0xfffff000;\n      *(uint *)(*input_array + 0x24) = *(uint *)(*input_array + 0x24) & 0xfffff000;\n      *(uint *)(*input_array + 0x28) = *(uint *)(*input_array + 0x28) & 0xfffff000;\n      *(uint *)(*input_array + 0x2c) = *(uint *)(*input_array + 0x2c) & 0xff000000;\n      *(uint *)(*input_array + 0x2c) = *(uint *)(*input_array + 0x2c) & 0xff000000;\n      *(uint *)(*input_array + 0x30) = *(uint *)(*input_array + 0x30) & 0xc0000000;\n      *(uint *)(*input_array + 0x34) = *(uint *)(*input_array + 0x34) & 0xc0000000;\n      *(uint *)(*input_array + 0x38) = *(uint *)(*input_array + 0x38) & 0xffc00000;\n      *(uint *)(*input_array + 0x38) = *(uint *)(*input_array + 0x38) & 0xffc00000;\n      FUN_08006d24(input_array);\n      data_array[0xb] = 0;\n      parameter[10] = 0;\n    }\n    *(undefined *)(input_array + 9) = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "update_configuration_08003ce8",
            "entrypoint": "0x08003ce8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003ce8": "update_configuration_08003ce8",
                "iVar1": "result",
                "param_1": "input_array",
                "param_1[0xb]": "data_array[0xb]",
                "param_1[10]": "parameter[10]",
                "undefined4": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003de4": {
            "additional_data": {
                "(char *)(param_1 + 0x24)": {
                    "1": "status_flag"
                },
                "(undefined *)(param_1 + 0x24)": {
                    "1": "status_pointer"
                },
                "*(char *)(param_1 + 0x24)": {
                    "1": "flag_value"
                },
                "*(uint *)(param_1 + 0x28)": {
                    "1": "data_value"
                },
                "*(undefined *)(param_1 + 0x24)": {
                    "1": "flag_modified"
                },
                "*FUN_08003b8c": {
                    "1": "check_condition"
                },
                "*param_1": {
                    "1": "data_pointer"
                },
                "0xffffeefe": {
                    "1": "flag_mask"
                },
                "1": {
                    "1": "flag_enabled"
                },
                "FON_08003de4": {
                    "1": "check_and_update_flag"
                },
                "FUN_08003b8c": {
                    "1": "check_validity"
                },
                "FUN_08003de4": {
                    "1": "update_flags_and_return",
                    "2": "check_status_and_update",
                    "3": "check_and_update_value",
                    "4": "check_and_update_flag",
                    "7": "check_and_update_status"
                },
                "iVar1": {
                    "1": "return_value",
                    "29": "result"
                },
                "param_1": {
                    "1": "object",
                    "3": "input",
                    "4": "param",
                    "5": "input_value",
                    "6": "status"
                }
            },
            "called": [
                "FUN_08003b8c"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nint check_and_update_status_08003de4(int status)\n\n{\n  int result;\n  \n  if (*(char *)(status + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(status + 0x24) = 1;\n  result = FUN_08003b8c();\n  if (result == 0) {\n    *(uint *)(status + 0x28) = *(uint *)(status + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(status + 0x24) = 0;\n  return result;\n}\n\n",
            "current_name": "check_and_update_status_08003de4",
            "entrypoint": "0x08003de4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003de4": "check_and_update_status_08003de4",
                "iVar1": "result",
                "param_1": "status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003e20": {
            "additional_data": {
                "& 4": {
                    "1": "mask_2"
                },
                "& 8": {
                    "1": "mask_1"
                },
                "*(char *)(param_1 + 9)": {
                    "1": "status"
                },
                "*(uint *)(*param_1 + 8)": {
                    "1": "operation_flags"
                },
                "*param_1": {
                    "1": "parameters"
                },
                "0": {
                    "1": "constant_0"
                },
                "0x01": {
                    "1": "condition_value"
                },
                "0x10": {
                    "1": "constant_3"
                },
                "0xffffeefdU": {
                    "1": "mask_and_value_1"
                },
                "0xffffeefdU | 2": {
                    "1": "flag_mask"
                },
                "0xffffffedU": {
                    "1": "mask_and_value_2"
                },
                "0xffffffedU | 0x10": {
                    "1": "flag_update"
                },
                "0xfffffffcU": {
                    "1": "mask_and_value_3"
                },
                "0xfffffffcU | 1": {
                    "1": "final_flag_value"
                },
                "1": {
                    "1": "status_active"
                },
                "10": {
                    "1": "time_threshold"
                },
                "2": {
                    "1": "constant_1"
                },
                "8": {
                    "1": "operation_flag_1"
                },
                "DAT_20000018": {
                    "1": "constant_value"
                },
                "FUN_08003760": {
                    "1": "get_current_time"
                },
                "FUN_08003a20": {
                    "2": "perform_operation"
                },
                "FUN_08003b8c": {
                    "2": "check_condition"
                },
                "FUN_08003e20": {
                    "1": "perform_operation",
                    "6": "process_data",
                    "7": "check_and_process_data"
                },
                "FUN_08005bb8": {
                    "1": "calculate_division"
                },
                "PTR_FUN_08003760": {
                    "1": "get_value"
                },
                "iVar2": {
                    "1": "check_result",
                    "2": "status",
                    "22": "result",
                    "5": "return_value"
                },
                "iVar4": {
                    "1": "start_ticks",
                    "3": "temp_var1",
                    "4": "initial_value",
                    "8": "start_value"
                },
                "iVar5": {
                    "1": "var2",
                    "11": "current_value",
                    "3": "temp_var2",
                    "6": "current_time"
                },
                "local_14": {
                    "1": "loop_var3",
                    "12": "loop_counter",
                    "2": "count",
                    "3": "iteration_count",
                    "4": "counter"
                },
                "param_1": {
                    "1": "operation_params",
                    "15": "data",
                    "2": "status",
                    "3": "input_array"
                },
                "param_1[10]": {
                    "1": "flags"
                },
                "uVar1": {
                    "1": "quotient",
                    "2": "value1",
                    "5": "division_factor",
                    "6": "dividend",
                    "9": "division_result"
                },
                "uVar3": {
                    "1": "quotient",
                    "2": "value2",
                    "3": "division_value",
                    "4": "function_result",
                    "6": "divisor"
                }
            },
            "called": [
                "FUN_08003a20",
                "FUN_08003b8c",
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nint check_and_process_data_08003e20(int *data)\n\n{\n  uint division_result;\n  int result;\n  uint divisor;\n  int start_value;\n  int current_value;\n  int loop_counter;\n  \n  if (*(char *)(data + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(data + 9) = 1;\n  result = FUN_08003b8c();\n  if (result == 0) {\n    flags = flags & mask_and_value_1 | 2;\n    division_result = DAT_20000018;\n    divisor = FUN_08005bb8(2);\n    for (loop_counter = division_result / divisor << 1; loop_counter != 0; loop_counter = loop_counter + -1) {\n    }\n    FUN_08003a20(data);\n    *(uint *)(*data + 8) = *(uint *)(*data + 8) | 8;\n    start_value = FUN_08003760();\n    while (current_value = *data, (*(uint *)(current_value + 8) & 8) != 0) {\n      current_value = FUN_08003760();\n      if (10 < (uint)(current_value - start_value)) {\n        flags = flags & mask_and_value_2 | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(current_value + 8) = *(uint *)(current_value + 8) | 4;\n    start_value = FUN_08003760();\n    while ((*(uint *)(*data + 8) & 4) != 0) {\n      current_value = FUN_08003760();\n      if (10 < (uint)(current_value - start_value)) {\n        flags = flags & mask_and_value_2 | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    flags = flags & mask_and_value_3 | 1;\n  }\n  *(undefined *)(data + 9) = 0;\n  return result;\n}\n\n",
            "current_name": "check_and_process_data_08003e20",
            "entrypoint": "0x08003e20",
            "imported": false,
            "improved": true,
            "renaming": {
                "0xffffeefdU": "mask_and_value_1",
                "0xffffffedU": "mask_and_value_2",
                "0xfffffffcU": "mask_and_value_3",
                "FUN_08003e20": "check_and_process_data_08003e20",
                "iVar2": "result",
                "iVar4": "start_value",
                "iVar5": "current_value",
                "local_14": "loop_counter",
                "param_1": "data",
                "param_1[10]": "flags",
                "uVar1": "division_result",
                "uVar3": "divisor"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f0c": {
            "additional_data": {
                "0x5fa0000": {
                    "1": "constant"
                },
                "0xf8ff": {
                    "1": "bit_mask"
                },
                "DAT_e000ed0c": {
                    "1": "register_value"
                },
                "FUN_08003f0c": {
                    "1": "update_data_with_param",
                    "10": "update_register_value",
                    "5": "update_configuration"
                },
                "_DAT_e000ed0c": {
                    "1": "configuration",
                    "11": "register_value",
                    "2": "configuration_register",
                    "3": "existing_value"
                },
                "_DAT_e000ed0c & 0xf8ff": {
                    "1": "preserve_configuration"
                },
                "param_1": {
                    "1": "new_config",
                    "16": "input_value",
                    "3": "value",
                    "4": "new_value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08008f0e",
                "FUN_08003724"
            ],
            "code": "\n\n\nvoid update_register_value_08003f0c(uint input_value)\n\n{\n  _DAT_e000ed0c = (input_value & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "current_name": "update_register_value_08003f0c",
            "entrypoint": "0x08003f0c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f0c": "update_register_value_08003f0c",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f30": {
            "additional_data": {
                "(char)(uVar1 << 4)": {
                    "1": "updated_value"
                },
                "(int)param_1": {
                    "1": "negative_memory_address"
                },
                "(param_1 & 0xf) + 0xe000ed14": {
                    "1": "target_address1"
                },
                "*(char *)((param_1 & 0xf) + 0xe000ed14)": {
                    "1": "store_value1"
                },
                "*(char *)(param_1 + 0xe000e400)": {
                    "1": "store_value2"
                },
                "1 << (uVar1 & 0xff)) - 1U & param_3": {
                    "1": "masked_value2"
                },
                "FUN_08003f30": {
                    "1": "update_register_value",
                    "3": "update_character_data",
                    "4": "update_data",
                    "7": "update_memory"
                },
                "param_1": {
                    "1": "register_index",
                    "14": "address",
                    "2": "input_flag",
                    "7": "character_index"
                },
                "param_1 & 0xf": {
                    "1": "lower_nibble"
                },
                "param_1 + 0xe000e400": {
                    "1": "target_address2"
                },
                "param_2": {
                    "1": "attribute_mask",
                    "2": "bit_mask1",
                    "3": "value1",
                    "5": "mask",
                    "7": "bit_mask"
                },
                "param_2 & (1 << (uVar2 & 0xff)) - 1U": {
                    "1": "masked_value1"
                },
                "param_3": {
                    "1": "new_data",
                    "2": "bit_mask2",
                    "3": "value2",
                    "5": "data"
                },
                "uVar1": {
                    "1": "shift_count",
                    "12": "shift_amount",
                    "2": "shifted_data",
                    "3": "shifted_value",
                    "4": "shifted_bits"
                },
                "uVar1 & 0xff": {
                    "1": "shift_mask1"
                },
                "uVar1 + 4": {
                    "1": "shift_offset"
                },
                "uVar1 + 4 < 7": {
                    "1": "is_less_than_threshold"
                },
                "uVar1 - 3": {
                    "1": "adjusted_shift_offset"
                },
                "uVar1 << 4": {
                    "1": "shifted_value"
                },
                "uVar1_bitmask": {
                    "1": "bitmask"
                },
                "uVar1_case_1": {
                    "1": "0"
                },
                "uVar1_final": {
                    "1": "shift_amount"
                },
                "uVar1_masked": {
                    "1": "shifted_original_data"
                },
                "uVar1_modified": {
                    "1": "modified_data"
                },
                "uVar1_modified_1": {
                    "1": "0"
                },
                "uVar1_sub": {
                    "1": "adjusted_shift_amount"
                },
                "uVar2": {
                    "1": "temporary_value",
                    "2": "adjusted_shift_amount",
                    "8": "remaining_bits"
                },
                "uVar2 & 0xff": {
                    "1": "shift_amount2"
                },
                "uVar2_final": {
                    "1": "shifted_bits"
                },
                "uVar3": {
                    "1": "shift_mask",
                    "2": "temp"
                },
                "uVar4": {
                    "1": "shifted_mask1"
                },
                "uVar5": {
                    "1": "shifted_data"
                },
                "uVar6": {
                    "1": "shifted_register_index"
                }
            },
            "called": [],
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_080036d8",
                "FUN_080035b8",
                "FUN_0800863c"
            ],
            "code": "\n\n\nvoid update_memory_08003f30(uint address,uint bit_mask,uint data)\n\n{\n  uint shift_amount;\n  uint remaining_bits;\n  \n  shift_amount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  remaining_bits = 7 - shift_amount;\n  if (3 < remaining_bits) {\n    remaining_bits = 4;\n  }\n  if (shift_amount + 4 < 7) {\n    shift_amount = 0;\n  }\n  else {\n    shift_amount = shift_amount - 3;\n  }\n  shift_amount = (bit_mask & (1 << (remaining_bits & 0xff)) - 1U) << (shift_amount & 0xff) |\n          (1 << (shift_amount & 0xff)) - 1U & data;\n  if (negative_memory_address < 0) {\n    *(char *)((address & 0xf) + 0xe000ed14) = (char)(shift_amount << 4);\n  }\n  else {\n    *(char *)(address + 0xe000e400) = (char)(shift_amount << 4);\n  }\n  return;\n}\n\n",
            "current_name": "update_memory_08003f30",
            "entrypoint": "0x08003f30",
            "imported": false,
            "improved": true,
            "renaming": {
                "(int)param_1": "negative_memory_address",
                "FUN_08003f30": "update_memory_08003f30",
                "param_1": "address",
                "param_2": "bit_mask",
                "param_3": "data",
                "uVar1": "shift_amount",
                "uVar2": "remaining_bits"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f94": {
            "additional_data": {
                "(int)param_1": {
                    "1": "position_integer",
                    "2": "int_index"
                },
                "(param_1 & 0x1f)": {
                    "1": "bit_position"
                },
                "(param_1 >> 5)": {
                    "1": "shifted_position"
                },
                "(param_1 >> 5) * 4 + -0x1fff1f00": {
                    "1": "array_index"
                },
                "*((param_1 >> 5) * 4 + -0x1fff1f00)": {
                    "1": "bit_array"
                },
                "*(int *)((param_1 >> 5) * 4 + -0x1fff1f00)": {
                    "1": "ptr_bit_array",
                    "3": "bit_array",
                    "6": "array"
                },
                "-1": {
                    "1": "negative_one"
                },
                "1 << (param_1 & 0x1f)": {
                    "1": "bit_pattern",
                    "4": "bit_value",
                    "6": "bit_mask"
                },
                "FUN_08003f94": {
                    "1": "set_bit_in_int_array",
                    "10": "set_bit",
                    "3": "set_bit_value",
                    "4": "set_bit_at_index",
                    "7": "set_bit_in_array"
                },
                "numBits": {
                    "1": "num_bits"
                },
                "param_1": {
                    "1": "num",
                    "13": "index",
                    "2": "position",
                    "6": "bit_position",
                    "8": "bit_index"
                },
                "param_1 & 0x1f": {
                    "1": "bit_position"
                },
                "param_1 >> 5": {
                    "1": "word_position"
                },
                "param_2": {
                    "1": "param_2"
                },
                "param_3": {
                    "1": "another_param"
                },
                "param_4": {
                    "1": "one_more_param"
                }
            },
            "called": [],
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_0800863c"
            ],
            "code": "\nvoid set_bit_08003f94(uint index)\n\n{\n  if (-1 < int_index) {\n    *(int *)((index >> 5) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_08003f94",
            "entrypoint": "0x08003f94",
            "imported": false,
            "improved": true,
            "renaming": {
                "(int)param_1": "int_index",
                "FUN_08003f94": "set_bit_08003f94",
                "param_1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003fb0": {
            "additional_data": {
                "*(int *)(((param_1 >> 5) + 0x20) * 4 + -0x1fff1f00)": {
                    "2": "memory_address"
                },
                "1 << (param_1 & 0x1f)": {
                    "1": "bitmask"
                },
                "DataSynchronizationBarrier": {
                    "1": "perform_data_sync_barrier",
                    "3": "sync_data"
                },
                "FUN_08003fb0": {
                    "1": "set_bit_in_data",
                    "17": "set_bit_in_memory",
                    "2": "update_bit",
                    "3": "set_bit_in_register"
                },
                "InstructionSynchronizationBarrier": {
                    "1": "perform_instr_sync_barrier",
                    "3": "sync_instructions"
                },
                "param_1": {
                    "1": "number",
                    "12": "bit_position",
                    "13": "bit_index",
                    "3": "index"
                },
                "param_1 & 0x1f": {
                    "1": "bit_offset"
                },
                "param_1 >> 5": {
                    "1": "division_result"
                }
            },
            "called": [],
            "calling": [
                "FUN_080076e0"
            ],
            "code": "\nvoid set_bit_in_memory_08003fb0(uint bit_index)\n\n{\n  if (-1 < (int)bit_index) {\n    *(int *)(((bit_index >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (bit_index & 0x1f);\n    sync_data(0xf);\n    sync_instructions(0xf);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_in_memory_08003fb0",
            "entrypoint": "0x08003fb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "DataSynchronizationBarrier": "sync_data",
                "FUN_08003fb0": "set_bit_in_memory_08003fb0",
                "InstructionSynchronizationBarrier": "sync_instructions",
                "param_1": "bit_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003fd8": {
            "additional_data": {
                "0x1000000": {
                    "1": "threshold"
                },
                "DAT_e000ed23": {
                    "1": "flag_value",
                    "2": "control_byte",
                    "3": "status",
                    "5": "constant_value"
                },
                "FUN_08003fd8": {
                    "1": "initialize_register",
                    "13": "initialize_memory",
                    "3": "initialize_data",
                    "4": "initialize_parameters"
                },
                "_DAT_e000e010": {
                    "1": "limit",
                    "2": "constant",
                    "3": "counter"
                },
                "_DAT_e000e014": {
                    "1": "memory_offset",
                    "2": "data_offset",
                    "7": "memory_address"
                },
                "_DAT_e000e018": {
                    "1": "initialized_flag",
                    "2": "memory_offset",
                    "4": "initialized_value",
                    "6": "counter"
                },
                "param_1": {
                    "1": "process_id",
                    "12": "value",
                    "13": "input_value",
                    "2": "address"
                }
            },
            "called": [],
            "calling": [
                "FUN_080036d8",
                "FUN_080035b8"
            ],
            "code": "\n\n\nundefined4 initialize_memory_08003fd8(int input_value)\n\n{\n  if (input_value - 1U < 0x1000000) {\n    _DAT_e000e014 = input_value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_memory_08003fd8",
            "entrypoint": "0x08003fd8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003fd8": "initialize_memory_08003fd8",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004004": {
            "additional_data": {
                "(((param_1 >> 5) + 0x60) * 4 + -0x1FFF1F00)": {
                    "1": "array_address"
                },
                "(((param_1 >> 5) + 0x60) * 4 + -0x1fff1f00)": {
                    "1": "address"
                },
                "(index & 0x1f)": {
                    "1": "bit_position_in_word"
                },
                "(int)param_1": {
                    "1": ""
                },
                "(position & 0x1f)": {
                    "1": "bit_offset"
                },
                "*(((index >> 5) + 0x60) * 4 + -0x1fff1f00)": {
                    "1": "array_pointer"
                },
                "*(((position >> 5) + 0x60) * 4 + -0x1fff1f00)": {
                    "1": "bit_address"
                },
                "*((int *)(((param_1 >> 5) + 0x60) * 4 + -0x1fff1f00))": {
                    "1": "bit_field"
                },
                "*(int *)(((param_1 >> 5) + 0x60) * 4 + -0x1fff1f00)": {
                    "1": "array_address",
                    "3": "bit_array"
                },
                "*(int *)((index >> 5) + 0x60) * 4 + -0x1fff1f00": {
                    "1": "array_address"
                },
                "-0x1fff1f00": {
                    "1": "base_address"
                },
                "-1": {
                    "1": ""
                },
                "0x1f": {
                    "1": "bit_mask"
                },
                "0x1fff1f00": {
                    "1": "array_offset"
                },
                "0x60": {
                    "1": "base_address_offset"
                },
                "1 << (index & 0x1f)": {
                    "1": "bitmask"
                },
                "1 << (param_1 & 0x1F)": {
                    "1": "bit_mask"
                },
                "1 << (param_1 & 0x1f)": {
                    "1": "bit_shifted_value",
                    "6": "bit_mask"
                },
                "FUN_08004004": {
                    "1": "set_bit_at_offset",
                    "2": "set_bit_at_index",
                    "4": "set_bit_at_position",
                    "6": "set_bit_in_memory",
                    "8": "set_bit_in_array"
                },
                "int": {
                    "1": "integer"
                },
                "param_1": {
                    "1": "offset",
                    "10": "bit_index",
                    "3": "position",
                    "5": "bit_position",
                    "9": "index"
                },
                "param_1 & 0x1f": {
                    "1": "bit_offset"
                },
                "param_1 >> 5": {
                    "1": "byte_position",
                    "2": "byte_index"
                },
                "param_2": {
                    "1": "bit_value"
                },
                "param_3": {
                    "1": "bit_array"
                },
                "param_4": {
                    "1": "bit_value"
                },
                "param_5": {
                    "2": "bit_mask"
                },
                "param_6": {
                    "1": "index_offset"
                },
                "param_7": {
                    "1": "bit_shift"
                },
                "param_8": {
                    "1": "bit_masked_value"
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid set_bit_in_array_08004004(uinteger bit_index)\n\n{\n  if (-1 < (integer)bit_index) {\n    *(integer *)(((bit_index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (bit_index & 0x1f);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_in_array_08004004",
            "entrypoint": "0x08004004",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004004": "set_bit_in_array_08004004",
                "int": "integer",
                "param_1": "bit_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004024": {
            "additional_data": {
                "FUN_08004024": {
                    "1": "set_system_status",
                    "2": "update_flags",
                    "3": "set_flag",
                    "4": "update_flag"
                },
                "_DAT_e000e010": {
                    "1": "status_register",
                    "2": "flag_value",
                    "3": "control_register",
                    "4": "register_value"
                },
                "param_1": {
                    "1": "new_state",
                    "2": "access_level",
                    "3": "flag",
                    "4": "flag_value",
                    "5": "input_value",
                    "8": "value"
                }
            },
            "called": [],
            "calling": [
                "FUN_080035b8"
            ],
            "code": "\n\n\nvoid update_flag_08004024(int value)\n\n{\n  if (value != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "current_name": "update_flag_08004024",
            "entrypoint": "0x08004024",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004024": "update_flag_08004024",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004044": {
            "called": [],
            "calling": [
                "FUN_08004046"
            ],
            "code": "\nvoid FUNC_08004044(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004044",
            "entrypoint": "0x08004044",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004044": "FUNC_08004044"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004046": {
            "additional_data": {
                "FUNC_08004044": {
                    "1": "execute_sub_function",
                    "2": "call_initialization_function",
                    "4": "perform_initialization",
                    "5": "execute_initialization"
                },
                "FUN_08004046": {
                    "1": "execute_main_task",
                    "2": "execute_initialization",
                    "3": "execute_main_function",
                    "6": "execute_function",
                    "8": "initialize_system"
                }
            },
            "called": [
                "FUN_08004044"
            ],
            "calling": [
                "FUN_08007246"
            ],
            "code": "\nvoid initialize_system_08004046(void)\n\n{\n  FUNC_08004044();\n  return;\n}\n\n",
            "current_name": "initialize_system_08004046",
            "entrypoint": "0x08004046",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004046": "initialize_system_08004046"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004050": {
            "additional_data": {
                "(*(code *)param_1[0xd])()": {
                    "1": "execute_callback"
                },
                "(code *)param_1[0xd]": {
                    "1": "callback"
                },
                "(int)param_1 + 0x21": {
                    "1": "permission_flag_address"
                },
                "*(char *)((int)data + 0x21)": {
                    "1": "flag"
                },
                "*(char *)((int)param_1 + 0x21)": {
                    "1": "permission_flag_value",
                    "2": "flag"
                },
                "*(code *)param_1[0xd]": {
                    "1": "callback"
                },
                "*(undefined *)((int)data + 0x21)": {
                    "1": "flag"
                },
                "*(undefined *)((int)param_1 + 0x21)": {
                    "1": "hardware_config->flag",
                    "2": "status"
                },
                "*(undefined *)(data + 8)": {
                    "1": "flag2"
                },
                "*(undefined *)(param_1 + 8)": {
                    "1": "result",
                    "3": "flag"
                },
                "**config": {
                    "1": "entry"
                },
                "**param_1": {
                    "1": "memory_value"
                },
                "**param_1 & 0xfffffff1": {
                    "1": "updated_pointer_value1"
                },
                "**param_1 & 0xfffffffe": {
                    "1": "updated_pointer_value2"
                },
                "*param_1": {
                    "1": "pointer"
                },
                "0x21": {
                    "1": "status"
                },
                "0x4": {
                    "1": "default_setting"
                },
                "0x40020008": {
                    "1": "setting1"
                },
                "0x4002001c": {
                    "1": "setting2"
                },
                "0x40020030": {
                    "1": "setting3"
                },
                "0x40020044": {
                    "1": "setting4"
                },
                "0x40020058": {
                    "1": "setting5"
                },
                "0x4002006c": {
                    "1": "setting6"
                },
                "0xd": {
                    "1": "callback"
                },
                "0xe": {
                    "1": "setting_index"
                },
                "<original_function_name>": {
                    "1": "configure_hardware"
                },
                "<param_1>": {
                    "1": "configurations"
                },
                "<puVar1>": {
                    "1": "current_configuration"
                },
                "FUN_08004050": {
                    "1": "set_data_permissions",
                    "2": "update_settings",
                    "3": "configure_settings",
                    "6": "initialize_data"
                },
                "PTR_08004050_8": {
                    "1": "some_pointer"
                },
                "PTR_08004050_C": {
                    "1": "callback_function"
                },
                "PTR_40020004": {
                    "1": "global_value"
                },
                "PTR_40020008": {
                    "1": "value_1"
                },
                "PTR_4002001c": {
                    "1": "value_2"
                },
                "PTR_40020030": {
                    "1": "value_3"
                },
                "PTR_40020044": {
                    "1": "value_4"
                },
                "PTR_40020058": {
                    "1": "value_5"
                },
                "PTR_4002006c": {
                    "1": "value_6"
                },
                "_DAT_40020004": {
                    "1": "initialization_value",
                    "2": "data_value"
                },
                "code": {
                    "1": "callback_function"
                },
                "original_variable_name_n": {
                    "1": "new_variable_name_n"
                },
                "param_1": {
                    "1": "config_data",
                    "2": "configuration",
                    "3": "parameters",
                    "4": "data",
                    "6": "settings"
                },
                "param_1 + 8": {
                    "1": "callback_function_pointer"
                },
                "param_1[0xd]": {
                    "1": "hardware_config->callback",
                    "2": "callback_function"
                },
                "param_1[0xe]": {
                    "1": "error_flag",
                    "3": "error_code"
                },
                "puVar1": {
                    "1": "selected_config",
                    "2": "config_value",
                    "3": "current_value",
                    "4": "value",
                    "6": "current_setting"
                },
                "puVar1 == (uint *)0x40020008": {
                    "1": "is_pointer_equal1"
                },
                "puVar1 == (uint *)0x4002001c": {
                    "1": "is_pointer_equal2"
                },
                "puVar1 == (uint *)0x40020030": {
                    "1": "is_pointer_equal3"
                },
                "puVar1 == (uint *)0x40020044": {
                    "1": "is_pointer_equal4"
                },
                "puVar1 == (uint *)0x40020058": {
                    "1": "is_pointer_equal5"
                },
                "puVar1 == (uint *)0x4002006c": {
                    "1": "is_pointer_equal6"
                }
            },
            "called": [],
            "calling": [
                "FUN_080069ec",
                "FUN_08004f3c"
            ],
            "code": "\n\n\nundefined4 initialize_data_08004050(uint **settings)\n\n{\n  uint *current_setting;\n  \n  if (*(char *)((int)settings + 0x21) != '\\x02') {\n    error_code = (uint *)0x4;\n    return 1;\n  }\n  **settings = **settings & 0xfffffff1;\n  **settings = **settings & 0xfffffffe;\n  current_setting = *settings;\n  if (current_setting == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (current_setting == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (current_setting == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (current_setting == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (current_setting == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (current_setting == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)settings + 0x21) = 1;\n  *(undefined *)(settings + 8) = 0;\n  if (callback_func != (uint *)0x0) {\n    (*(callback_function *)callback_func)();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "initialize_data_08004050",
            "entrypoint": "0x08004050",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004050": "initialize_data_08004050",
                "code": "callback_function",
                "param_1": "settings",
                "param_1[0xd]": "callback_func",
                "param_1[0xe]": "error_code",
                "puVar1": "current_setting"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040e8": {
            "additional_data": {
                "FUN_080040e8": {
                    "1": "update_values",
                    "2": "update_flags",
                    "3": "update_flags_and_registers",
                    "4": "update_registers",
                    "5": "update_bits"
                },
                "iVar7": {
                    "1": "shift_value_1",
                    "2": "shift_offset",
                    "3": "shift",
                    "6": "shift_amount",
                    "7": "bit_shift"
                },
                "iVar8": {
                    "1": "array_index",
                    "16": "register_index",
                    "2": "index2",
                    "4": "index"
                },
                "param_1": {
                    "1": "config_params",
                    "2": "output_array",
                    "3": "output_params"
                },
                "param_2": {
                    "1": "register2",
                    "2": "input_parameters",
                    "3": "input_data",
                    "4": "input_params"
                },
                "puVar1": {
                    "1": "bit_array_ptr",
                    "4": "output_ptr"
                },
                "uVar2": {
                    "1": "mask",
                    "30": "bit_mask"
                },
                "uVar3": {
                    "1": "bit_mask_result",
                    "11": "bit_check",
                    "2": "flag_check",
                    "4": "input_bit"
                },
                "uVar4": {
                    "1": "register_idx",
                    "2": "counter",
                    "3": "bit_position",
                    "7": "index",
                    "9": "bit_index"
                },
                "uVar5": {
                    "1": "instruction",
                    "12": "opcode",
                    "2": "condition",
                    "3": "flag_value"
                },
                "uVar6": {
                    "1": "var2",
                    "2": "register_value",
                    "4": "updated_value",
                    "6": "update_value",
                    "8": "new_value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "code": "\n\n\nvoid update_bits_080040e8(uint *bit_array1,uint *input_params)\n\n{\n  uint *output_ptr;\n  uint bit_mask;\n  uint bit_check;\n  uint bit_index;\n  uint opcode;\n  uint new_value;\n  int bit_shift;\n  int register_index;\n  \n  new_value = 0;\n  bit_index = 0;\n  do {\n    if (0xf < bit_index) {\n      return;\n    }\n    bit_mask = 1 << (bit_index & 0xff);\n    bit_check = *input_params & bit_mask;\n    if (bit_mask == bit_check) {\n      opcode = input_params[1];\n      if (opcode == 0x12) {\n        new_value = input_params[3] + 0xc;\n      }\n      else if (opcode < 0x13) {\n        if (opcode == 2) {\n          new_value = input_params[3] + 8;\n        }\n        else if (opcode < 3) {\n          if (opcode == 0) goto LAB_0800423a;\n          if (opcode == 1) {\n            new_value = input_params[3];\n          }\n        }\n        else if (opcode == 3) {\n          new_value = 0;\n        }\n        else if (opcode == 0x11) {\n          new_value = input_params[3] + 4;\n        }\n      }\n      else if (opcode == 0x10210000) {\nLAB_0800423a:\n        if (input_params[2] == 0) {\n          new_value = 4;\n        }\n        else if (input_params[2] == 1) {\n          bit_array1[4] = bit_mask;\n          new_value = 8;\n        }\n        else {\n          bit_array1[5] = bit_mask;\n          new_value = 8;\n        }\n      }\n      else if (opcode < 0x10210001) {\n        if ((opcode == 0x10110000) || (opcode == 0x10120000)) goto LAB_0800423a;\n      }\n      else if ((opcode == 0x10310000) || ((opcode == 0x10320000 || (opcode == 0x10220000))))\n      goto LAB_0800423a;\n      bit_mask = bit_index;\n      output_ptr = bit_array1;\n      if (0xff < bit_check) {\n        bit_mask = bit_index - 8;\n        output_ptr = bit_array1 + 1;\n      }\n      *output_ptr = *output_ptr & ~(0xf << (bit_mask << 2 & 0xff)) | new_value << (bit_mask << 2 & 0xff);\n      if ((input_params[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        bit_shift = (bit_index & 3) << 2;\n        if (bit_array1 == (uint *)0x40010800) {\n          register_index = 0;\n        }\n        else if (bit_array1 == (uint *)0x40010c00) {\n          register_index = 1;\n        }\n        else if (bit_array1 == (uint *)0x40011000) {\n          register_index = 2;\n        }\n        else if (bit_array1 == (uint *)0x40011400) {\n          register_index = 3;\n        }\n        else {\n          register_index = 4;\n        }\n        *(uint *)(((bit_index >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((bit_index >> 2) + 2) * 4 + 0x40010000) & ~(0xf << bit_shift) | register_index << bit_shift;\n        if ((input_params[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bit_check;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bit_check;\n        }\n        if ((input_params[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bit_check;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bit_check;\n        }\n        if ((input_params[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bit_check;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bit_check;\n        }\n        if ((input_params[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bit_check;\n        }\n        else {\n          _DAT_4001040c = bit_check | _DAT_4001040c;\n        }\n      }\n    }\n    bit_index = bit_index + 1;\n  } while( true );\n}\n\n",
            "current_name": "update_bits_080040e8",
            "entrypoint": "0x080040e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040e8": "update_bits_080040e8",
                "iVar7": "bit_shift",
                "iVar8": "register_index",
                "param_1": "bit_array1",
                "param_2": "input_params",
                "puVar1": "output_ptr",
                "uVar2": "bit_mask",
                "uVar3": "bit_check",
                "uVar4": "bit_index",
                "uVar5": "opcode",
                "uVar6": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080042d4": {
            "additional_data": {
                "* (uint *)(param_1 + 8)": {
                    "1": "bit_array"
                },
                "*(uint *)(param_1 + 8)": {
                    "1": "bit_field"
                },
                "<unnamed variable>": {
                    "1": "mask"
                },
                "DAT_": {
                    "1": "<unchanged>"
                },
                "FUN_080042d4": {
                    "1": "check_param_and_flag",
                    "26": "check_bit"
                },
                "PTR_": {
                    "1": "<unchanged>"
                },
                "local_variable_1": {
                    "1": "result"
                },
                "param_1": {
                    "1": "input_param",
                    "2": "data_address",
                    "3": "offset",
                    "9": "input_value"
                },
                "param_1 + 8": {
                    "1": "bit_array_ptr",
                    "2": "mask_address"
                },
                "param_1_ptr_plus_8": {
                    "1": "input_bitmask_address"
                },
                "param_2": {
                    "1": "input_2",
                    "13": "bit_mask",
                    "6": "bitmask"
                },
                "param_2 & *(uint *)(param_1 + 8)": {
                    "1": "masked_value",
                    "2": "bitwise_result"
                },
                "param_2_bitmask": {
                    "1": "bit_mask"
                },
                "param_3": {
                    "1": "bit_mask"
                },
                "result": {
                    "1": "is_bit_set"
                },
                "return value": {
                    "1": "is_match"
                },
                "var_param_1": {
                    "1": "mask_value"
                }
            },
            "called": [],
            "calling": [
                "FUN_080072f0"
            ],
            "code": "\nundefined4 check_bit_080042d4(int input_value,uint bit_mask)\n\n{\n  if ((bit_mask & *(uint *)(input_value + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "check_bit_080042d4",
            "entrypoint": "0x080042d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080042d4": "check_bit_080042d4",
                "param_1": "input_value",
                "param_2": "bit_mask"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080042e2": {
            "additional_data": {
                "*(int *)(param_1 + 0x10)": {
                    "1": "value_ptr",
                    "2": "object_value",
                    "3": "target_address"
                },
                "FUN_080042e2": {
                    "1": "set_shifted_value",
                    "13": "set_param_value",
                    "2": "update_param_value",
                    "3": "update_param",
                    "4": "update_parameter_value"
                },
                "param_1": {
                    "1": "data_address",
                    "18": "object_address",
                    "5": "base_address"
                },
                "param_1 + 0x10": {
                    "1": "address_to_update",
                    "7": "value_address"
                },
                "param_1+0x10": {
                    "1": "target_address"
                },
                "param_2": {
                    "1": "new_data",
                    "12": "new_value",
                    "16": "value"
                },
                "param_2 << 0x10": {
                    "1": "shifted_data",
                    "3": "shifted_value"
                },
                "param_3": {
                    "1": "is_shift",
                    "17": "is_shifted",
                    "2": "use_shift",
                    "5": "shift_value"
                },
                "param_4": {
                    "1": "shift_amount"
                },
                "param_5": {
                    "1": "shifted_address"
                },
                "shifted_value": {
                    "1": "shifted_value"
                },
                "value_address": {
                    "1": "value_location"
                }
            },
            "called": [],
            "calling": [
                "FUN_080072d8"
            ],
            "code": "\nvoid set_param_value_080042e2(int object_address,int value,int is_shifted)\n\n{\n  if (is_shifted == 0) {\n    *(int *)(object_address + 0x10) = value << 0x10;\n    return;\n  }\n  *(int *)(object_address + 0x10) = value;\n  return;\n}\n\n",
            "current_name": "set_param_value_080042e2",
            "entrypoint": "0x080042e2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080042e2": "set_param_value_080042e2",
                "param_1": "object_address",
                "param_2": "value",
                "param_3": "is_shifted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080042f0": {
            "additional_data": {
                "FUN_080042f0": {
                    "1": "update_and_call_function",
                    "11": "update_data_and_call_function",
                    "2": "update_data_if_bit_set",
                    "3": "update_and_execute",
                    "4": "update_data",
                    "6": "update_data_if_flag_set"
                },
                "FUN_08009094": {
                    "1": "execute_update_function",
                    "2": "execute_function",
                    "3": "execute_update",
                    "4": "perform_update"
                },
                "_DAT_40010414": {
                    "1": "current_state",
                    "2": "global_data",
                    "3": "data_flag",
                    "6": "data"
                },
                "param_1": {
                    "1": "new_data",
                    "6": "flag",
                    "7": "input_value",
                    "8": "data"
                }
            },
            "called": [
                "FUN_08009094"
            ],
            "calling": [],
            "code": "\n\n\nvoid update_data_and_call_function_080042f0(uint data)\n\n{\n  if ((_DAT_40010414 & data) != 0) {\n    _DAT_40010414 = data;\n    FUN_08009094();\n  }\n  return;\n}\n\n",
            "current_name": "update_data_and_call_function_080042f0",
            "entrypoint": "0x080042f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080042f0": "update_data_and_call_function_080042f0",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800430c": {
            "additional_data": {
                "(uint)(param_1[0x11] << 0x10) >> 0x17 & 6": {
                    "1": "calculated_value"
                },
                "(uint)(param_1[0x11] << 0x10) >> 0x17 & 6 | 0xf0": {
                    "1": "updated_flag_value1"
                },
                "(uint)(param_1[0x11] << 0x10) >> 0x17 & 6 | 0xf1": {
                    "1": "updated_flag_value2"
                },
                "*(char *)((int)flagData + 0x3d)": {
                    "1": "char_check2"
                },
                "*(char *)((int)flagData + 0x3e)": {
                    "1": "char_check1"
                },
                "*(char *)((int)flag_data + 0x3d)": {
                    "1": "char2"
                },
                "*(char *)((int)flag_data + 0x3e)": {
                    "1": "char1"
                },
                "*(char *)((int)flags + 0x3d)": {
                    "1": "char2"
                },
                "*(char *)((int)flags + 0x3e)": {
                    "1": "char1"
                },
                "*(char *)((int)param_1 + 0x3d)": {
                    "1": "char_value_2",
                    "2": "char2",
                    "3": "char_value2"
                },
                "*(char *)((int)param_1 + 0x3e)": {
                    "1": "char_var1",
                    "2": "char1"
                },
                "*(char *)((int)value + 0x3d)": {
                    "1": "char_at_0x3d"
                },
                "*(char *)((int)value + 0x3e)": {
                    "1": "char_at_0x3e"
                },
                "*(uint *)(*inputArr + 0x10)": {
                    "1": "flag_to_update"
                },
                "*(uint *)(*param_1 + 0x10)": {
                    "1": "device_status_register",
                    "2": "flag_value",
                    "3": "result"
                },
                "*(uint *)(*value + 0x10)": {
                    "1": "updated_flags"
                },
                "*param_1": {
                    "1": "param_array[0]"
                },
                "*param_1 + 0x10": {
                    "1": "flag_pointer"
                },
                "0": {
                    "1": "constant0"
                },
                "0x10": {
                    "1": "result_value"
                },
                "0x11": {
                    "1": "bit_mask_value"
                },
                "0x14": {
                    "1": "condition_value"
                },
                "0x3d": {
                    "1": "char_value2"
                },
                "0x3e": {
                    "1": "char1"
                },
                "0x4000": {
                    "1": "constant2"
                },
                "0xf0": {
                    "1": "mask_0xf0"
                },
                "0xf1": {
                    "1": "mask_0xf1"
                },
                "0xfe": {
                    "1": "mask1"
                },
                "0xffU": {
                    "1": "constant255"
                },
                "0xffU | 1": {
                    "1": "mask_0xff_or_1"
                },
                "1": {
                    "1": "flag_bit"
                },
                "4": {
                    "1": "constant"
                },
                "DAT_": {
                    "1": "dat_"
                },
                "DAT_0800430c": {
                    "1": "constant_value"
                },
                "FUN_0800430c": {
                    "1": "apply_logic",
                    "2": "update_parameter_value",
                    "3": "set_flag_value"
                },
                "PTR_": {
                    "1": "ptr_"
                },
                "PTR_0800430c": {
                    "1": "pointer_value"
                },
                "PTR_funPtr": {
                    "1": "new_function_pointer"
                },
                "char": {
                    "1": "character"
                },
                "inputArr[0x11]": {
                    "1": "value"
                },
                "inputArr[0x14]": {
                    "1": "condition1"
                },
                "inputArr[4]": {
                    "1": "condition2"
                },
                "param_1": {
                    "1": "value",
                    "2": "flags",
                    "3": "flag_data"
                },
                "param_1 + 0x3e": {
                    "1": "flag_char"
                },
                "param_1[0x11]": {
                    "1": "param_mask",
                    "2": "flag_value",
                    "7": "value"
                },
                "param_1[0x14]": {
                    "1": "control_ptr_flags",
                    "2": "flag_type",
                    "4": "flag"
                },
                "param_1[4]": {
                    "1": "input_array[4]",
                    "2": "value"
                },
                "uint": {
                    "1": "unsigned_int"
                },
                "value": {
                    "1": "value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 update_flag_value_0800430c(int *input_array)\n\n{\n  if (*(character *)((int)input_array + 0x3e) == '@') {\n    if (flag == 0) {\n      *(unsigned_int *)(*input_array + 0x10) = value & 0xfe;\n    }\n    else {\n      *(unsigned_int *)(*input_array + 0x10) = value & constant255 | 1;\n    }\n  }\n  else if (param_value == 0x4000) {\n    if (*(character *)((int)input_array + 0x3d) == '!') {\n      *(unsigned_int *)(*input_array + 0x10) = value & 0xfe;\n    }\n    else {\n      *(unsigned_int *)(*input_array + 0x10) = value & constant255 | 1;\n    }\n  }\n  else if (flag == 0) {\n    *(unsigned_int *)(*input_array + 0x10) = (unsigned_int)(value << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (flag == 1) {\n    *(unsigned_int *)(*input_array + 0x10) = (unsigned_int)(value << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flag_value_0800430c",
            "entrypoint": "0x0800430c",
            "imported": false,
            "improved": true,
            "renaming": {
                "0xffU": "constant255",
                "FUN_0800430c": "update_flag_value_0800430c",
                "char": "character",
                "param_1": "input_array",
                "param_1[0x11]": "value",
                "param_1[0x14]": "flag",
                "param_1[4]": "param_value",
                "uint": "unsigned_int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004396": {
            "additional_data": {
                "& 0xff": {
                    "2": "mask"
                },
                "(*(uint *)(*param_1 + 0x10))": {
                    "1": "uint_value"
                },
                "*(uint *)(*address_ptr + 0x10)": {
                    "1": "address_to_write"
                },
                "*(uint *)(*param_1 + 0x10)": {
                    "1": "pointer_value"
                },
                "*param_1": {
                    "1": "input_array_ptr"
                },
                "*param_1 + 0x10": {
                    "1": "uint_pointer"
                },
                "0x10": {
                    "3": "offset"
                },
                "0x11": {
                    "2": "index"
                },
                "0xff": {
                    "1": "bitmask",
                    "2": "bit_mask",
                    "3": "mask"
                },
                "FUN_08004396": {
                    "1": "set_byte_value_from_index",
                    "2": "update_parameter_value",
                    "3": "set_byte_value",
                    "7": "set_param_value"
                },
                "local_1": {
                    "1": "offset"
                },
                "local_2": {
                    "1": "value"
                },
                "param_1": {
                    "1": "input_pointer",
                    "2": "param",
                    "3": "param_array",
                    "4": "input_array"
                },
                "param_1[0x11]": {
                    "1": "array_value_at_index",
                    "2": "input_value",
                    "4": "value"
                },
                "param_1[0x11] & 0xff": {
                    "1": "masked_value"
                },
                "param_array": {
                    "1": "param_array"
                }
            },
            "called": [],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 set_param_value_08004396(int *array)\n\n{\n  *(uint *)(*array + 0x10) = value & 0xff;\n  return 0;\n}\n\n",
            "current_name": "set_param_value_08004396",
            "entrypoint": "0x08004396",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004396": "set_param_value_08004396",
                "param_1": "array",
                "param_1[0x11]": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080043a2": {
            "additional_data": {
                "(int)parameters + 0x2a": {
                    "1": "offset"
                },
                "(uint *)0x12": {
                    "1": "constant4"
                },
                "(uint *)0x2": {
                    "1": "constant5"
                },
                "(uint *)0x4": {
                    "1": "constant2"
                },
                "(uint *)0x4)": {
                    "1": "flag_value2"
                },
                "(uint *)0x8": {
                    "1": "constant3"
                },
                "(uint *)0x8)": {
                    "1": "flag_value3"
                },
                "(uint *)0xc000": {
                    "1": "constant"
                },
                "(uint *)0xffff0000": {
                    "1": "constant1"
                },
                "*(char *)((int)param_1 + 0x3d)": {
                    "1": "char_var1",
                    "3": "char1"
                },
                "*(char *)((int)param_1 + 0x3e)": {
                    "1": "char_value_2",
                    "2": "character2",
                    "3": "char_value2"
                },
                "*(char *)((int)parameters + 0x3d)": {
                    "1": "char1"
                },
                "*(char *)((int)parameters + 0x3e)": {
                    "1": "character2"
                },
                "*(char*)((int)param_1 + 0x3d)": {
                    "1": "char_value1"
                },
                "*(char*)((int)param_1 + 0x3e)": {
                    "1": "char_value2"
                },
                "*(short *)((int)param_1 + 0x2a)": {
                    "1": "flag_value",
                    "10": "short_value",
                    "2": "short_var"
                },
                "*(short *)((int)parameters + 0x2a)": {
                    "1": "short_value"
                },
                "*(short*)((int)param_1 + 0x2a)": {
                    "1": "short_value"
                },
                "**(parameters)": {
                    "1": "pointer_value"
                },
                "**param_1": {
                    "1": "param1_value"
                },
                "**parameters": {
                    "1": "value"
                },
                "*param_1": {
                    "1": "param_deref"
                },
                "*puVar1": {
                    "1": "pointer_value"
                },
                "0x0": {
                    "3": "null"
                },
                "0x100": {
                    "1": "permission1",
                    "2": "flag1"
                },
                "0x1000": {
                    "1": "permission5",
                    "2": "flag5"
                },
                "0x12": {
                    "1": "constant_3",
                    "2": "constant2"
                },
                "0x2": {
                    "1": "constant5"
                },
                "0x200": {
                    "1": "permission2",
                    "2": "flag2"
                },
                "0x4": {
                    "1": "value1",
                    "2": "constant3"
                },
                "0x400": {
                    "1": "flag_3",
                    "2": "flag3"
                },
                "0x8": {
                    "1": "ptr_const3",
                    "2": "constant4"
                },
                "0x800": {
                    "1": "permission4",
                    "2": "flag4"
                },
                "0xc000": {
                    "1": "constant"
                },
                "0xffff0000": {
                    "1": "constant2"
                },
                "0xfffffbff": {
                    "1": "mask1"
                },
                "DAT_0804a8f5": {
                    "1": "string_literal"
                },
                "DAT_0804a8f9": {
                    "1": "special_char"
                },
                "DAT_0804a913": {
                    "1": "flag"
                },
                "DAT_0804a917": {
                    "1": "constant1"
                },
                "DAT_0804a91b": {
                    "1": "constant2"
                },
                "FUN_080043a2": {
                    "1": "apply_flag_operations",
                    "12": "update_flags",
                    "2": "process_flags"
                },
                "c000": {
                    "1": "constant1"
                },
                "char_1": {
                    "1": "first_char"
                },
                "char_2": {
                    "1": "second_char"
                },
                "param_1": {
                    "1": "param_list",
                    "2": "param",
                    "20": "parameters",
                    "3": "params"
                },
                "param_1[0x12]": {
                    "1": "param_12"
                },
                "param_1[0x14]": {
                    "1": "param14",
                    "2": "ptr"
                },
                "param_1[0xb]": {
                    "1": "ptr3",
                    "2": "parameters[11]"
                },
                "param_1[0xb] == (uint *)0x2": {
                    "1": "is_value5"
                },
                "param_1[0xc]": {
                    "1": "param_check2"
                },
                "param_1[0xc] == (uint *)0x12": {
                    "1": "is_value4"
                },
                "param_1[4]": {
                    "1": "pointer3",
                    "2": "value"
                },
                "parameters[0x14]": {
                    "1": "param14"
                },
                "parameters[0xb]": {
                    "1": "param_b"
                },
                "parameters[0xc]": {
                    "1": "param_c"
                },
                "parameters[4]": {
                    "1": "param4"
                },
                "puVar1": {
                    "1": "param_1_b",
                    "2": "ptr",
                    "3": "flag_ptr",
                    "4": "pointer",
                    "5": "value"
                },
                "puVar1 == (uint *)0x4": {
                    "1": "is_value2"
                },
                "puVar1 == (uint *)0x8": {
                    "1": "is_value3"
                },
                "puVar1 == (uint *)0xffff0000": {
                    "1": "is_value1"
                },
                "puVar1[1]": {
                    "1": "pointer_value"
                },
                "puVar1[1] & 0x800": {
                    "1": "bitwise_and_result"
                },
                "puVar1[1] & 0x800) == 0": {
                    "1": "bitwise_and_comparison"
                },
                "return 0": {
                    "1": "return"
                },
                "short_1": {
                    "1": "short_value"
                },
                "uint": {
                    "1": "unsigned_int"
                },
                "uint *)0xffff0000)": {
                    "1": "flag_value1"
                },
                "uint *puVar2": {
                    "1": "ptr_temp"
                }
            },
            "called": [],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 update_flags_080043a2(unsigned_int **parameters)\n\n{\n  unsigned_int *value;\n  \n  value = param_b;\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((param_14 != (unsigned_int *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((param_14 == (unsigned_int *)0x0) && (param_4 == (unsigned_int *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      param_14 = (unsigned_int *)((int)param_14 + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (value == (unsigned_int *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          value = *parameters;\n          if ((temp_ptr_value & 0x800) == 0) {\n            *value = *value | 0x200;\n          }\n          else {\n            *value = *value & 0xfffffbff;\n          }\n        }\n        else if (((value == (unsigned_int *)0x4) || (value == (unsigned_int *)0x8)) ||\n                (param_c == (unsigned_int *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (param_b == (unsigned_int *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (param_b == (unsigned_int *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters | 0x800;\n          **parameters = **parameters & 0xfffffbff;\n        }\n        value = *parameters;\n        if ((temp_ptr_value & 0x800) != 0) {\n          temp_ptr_value = temp_ptr_value | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        value = *parameters;\n        if ((temp_ptr_value & 0x800) != 0) {\n          temp_ptr_value = temp_ptr_value | 0x1000;\n        }\n      }\n      param_14 = (unsigned_int *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flags_080043a2",
            "entrypoint": "0x080043a2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080043a2": "update_flags_080043a2",
                "param_1": "parameters",
                "param_1[0x14]": "param_14",
                "param_1[0xb]": "param_b",
                "param_1[0xc]": "param_c",
                "param_1[4]": "param_4",
                "puVar1": "value",
                "puVar1[1]": "temp_ptr_value",
                "uint": "unsigned_int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800457c": {
            "additional_data": {
                "*(short *)((int)param_1 + 0x2a)": {
                    "1": "short_val"
                },
                "*(uint *)(*param_1 + 0x10)": {
                    "1": "value_to_assign"
                },
                "*param_1": {
                    "1": "pointer"
                },
                "FUN_0800457c": {
                    "1": "increment_pointer",
                    "2": "decode_and_decrement",
                    "3": "update_pointer",
                    "4": "update_value",
                    "8": "update_data"
                },
                "param_1": {
                    "1": "memory_array",
                    "3": "input_array",
                    "6": "array",
                    "8": "data"
                },
                "pbVar1": {
                    "1": "pointer_to_byte",
                    "17": "byte_pointer",
                    "3": "current_byte",
                    "7": "byte_ptr"
                },
                "short *": {
                    "1": "short_pointer"
                }
            },
            "called": [],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 update_data_0800457c(int *data)\n\n{\n  byte *byte_pointer;\n  \n  if (*(short *)((int)data + 0x2a) != 0) {\n    byte_pointer = (byte *)data[9];\n    data[9] = (int)(byte_pointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*byte_pointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_data_0800457c",
            "entrypoint": "0x0800457c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800457c": "update_data_0800457c",
                "param_1": "data",
                "pbVar1": "byte_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800459c": {
            "additional_data": {
                "(char)*(undefined4 *)(*param_1 + 0x10)": {
                    "1": "new_value"
                },
                "(int)(puVar1 + 1)": {
                    "1": "updated_ptr_to_char"
                },
                "(undefined4 *)(*param_1 + 0x10)": {
                    "1": "converted_value"
                },
                "*(short *)((int)data_array + 0x2a)": {
                    "1": "counter"
                },
                "*(short *)((int)param_1 + 0x2a)": {
                    "1": "character_field_length",
                    "2": "remaining_elements",
                    "3": "count"
                },
                "*(short *)((int)param_1 + 0x2a) + -1": {
                    "1": "updated_count"
                },
                "*(short*)((int)param_1 + 0x2a)": {
                    "1": "array_length"
                },
                "*(undefined *)((int)array + 0x2a)": {
                    "1": "value_at_2a"
                },
                "*(undefined *)(ptr + 1)": {
                    "1": "value"
                },
                "*(undefined4 *)(*array + 0x10)": {
                    "1": "value_at_offset_10"
                },
                "*(undefined4 *)(*param_1 + 0x10)": {
                    "1": "value_to_update",
                    "2": "value"
                },
                "*data_array": {
                    "1": "data_value"
                },
                "*param_1": {
                    "1": "base_address"
                },
                "*puVar1": {
                    "1": "current_value",
                    "2": "value"
                },
                "FUN_0800459c": {
                    "1": "update_parameter_and_decrement_counter",
                    "2": "update_parameter_value",
                    "5": "update_value",
                    "7": "update_data"
                },
                "param_1": {
                    "1": "param",
                    "2": "data_pointer",
                    "3": "parameter",
                    "4": "input_array",
                    "7": "array"
                },
                "param_1 + 0x2a": {
                    "1": "array_offset"
                },
                "param_1 + 1": {
                    "1": "new_next_address"
                },
                "param_1[9]": {
                    "1": "buffer",
                    "3": "array[9]"
                },
                "puVar1": {
                    "1": "temp_pointer",
                    "2": "array_element",
                    "5": "ptr"
                },
                "puVar1 + 1": {
                    "1": "updated_pointer_incremented"
                }
            },
            "called": [],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 update_data_0800459c(int *array)\n\n{\n  undefined *ptr;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    ptr = (undefined *)array[9];\n    array[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*array + 0x10);\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_data_0800459c",
            "entrypoint": "0x0800459c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800459c": "update_data_0800459c",
                "param_1": "array",
                "param_1[9]": "array[9]",
                "puVar1": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080045bc": {
            "called": [],
            "calling": [
                "FUN_080045c0"
            ],
            "code": "\nvoid FUNC_080045bc(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080045bc",
            "entrypoint": "0x080045bc",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080045bc": "FUNC_080045bc"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080045c0": {
            "additional_data": {
                "**param_1": {
                    "1": "input_value"
                },
                "FUNC_080045bc": {
                    "1": "initialize_value"
                },
                "FUN_080045c0": {
                    "1": "update_parameters",
                    "13": "calculate_parameters",
                    "2": "calculate_parameter",
                    "4": "calculate_values",
                    "6": "calculate_params"
                },
                "FUN_08005a28": {
                    "1": "retrieve_value"
                },
                "bVar1": {
                    "1": "is_lesser_value",
                    "2": "is_within_threshold",
                    "7": "is_less_than_threshold",
                    "9": "is_condition_met"
                },
                "param_1": {
                    "1": "parameter",
                    "18": "parameters",
                    "7": "params"
                },
                "puVar3": {
                    "1": "variable2",
                    "2": "temp",
                    "3": "ptr"
                },
                "uVar2": {
                    "1": "total",
                    "11": "result",
                    "2": "calculation_result",
                    "3": "value",
                    "6": "total_value"
                },
                "uVar4": {
                    "1": "u_var4",
                    "2": "new_value",
                    "3": "adjusted_value",
                    "4": "result"
                }
            },
            "called": [
                "FUN_080045bc",
                "FUN_08005a28"
            ],
            "calling": [
                "FUN_080077b0"
            ],
            "code": "\nundefined4 calculate_parameters_080045c0(uint **parameters)\n\n{\n  bool is_condition_met;\n  uint result;\n  uint *ptr;\n  uint result;\n  \n  if (parameters == (uint **)0x0) {\n    return 1;\n  }\n  if (*(char *)((int)parameters + 0x3d) == '\\0') {\n    *(undefined *)(parameters + 0xf) = 0;\n    FUNC_080045bc();\n  }\n  *(undefined *)((int)parameters + 0x3d) = 0x24;\n  **parameters = **parameters & 0xfffffffe;\n  result = FUN_08005a28();\n  if (parameters[1] < (uint *)0x186a1) {\n    if (result < 2000000) {\n      is_condition_met = true;\n    }\n    else {\n      is_condition_met = false;\n    }\n  }\n  else {\n    is_condition_met = result < 4000000;\n  }\n  if (is_condition_met) {\n    return 1;\n  }\n  result = result / 1000000;\n  (*parameters)[1] = result;\n  if ((uint *)0x186a0 < parameters[1]) {\n    result = (result * 300) / 1000;\n  }\n  (*parameters)[8] = result + 1;\n  ptr = parameters[1];\n  if (ptr < (uint *)0x186a1) {\n    result = (result - 1) / (uint)((int)ptr << 1) + 1 & 0xfff;\n    if (result < 4) {\n      result = 4;\n    }\n  }\n  else {\n    if (parameters[2] == (uint *)0x0) {\n      result = (result - 1) / (uint)((int)ptr * 3);\n    }\n    else {\n      result = (result - 1) / (uint)((int)ptr * 0x19);\n    }\n    if ((result + 1 & 0xfff) == 0) {\n      result = 1;\n    }\n    else if (parameters[2] == (uint *)0x0) {\n      result = (result - 1) / (uint)((int)ptr * 3) + 1 & 0xfff | 0x8000;\n    }\n    else {\n      result = (result - 1) / (uint)((int)ptr * 0x19) + 1 & 0xfff | 0xc000;\n    }\n  }\n  (*parameters)[7] = result;\n  **parameters = (uint)parameters[7] | (uint)parameters[8];\n  (*parameters)[2] = (uint)parameters[4] | (uint)parameters[3];\n  (*parameters)[3] = (uint)parameters[5] | (uint)parameters[6];\n  **parameters = **parameters | 1;\n  parameters[0x10] = (uint *)0x0;\n  *(undefined *)((int)parameters + 0x3d) = 0x20;\n  parameters[0xc] = (uint *)0x0;\n  *(undefined *)((int)parameters + 0x3e) = 0;\n  return 0;\n}\n\n",
            "current_name": "calculate_parameters_080045c0",
            "entrypoint": "0x080045c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080045c0": "calculate_parameters_080045c0",
                "bVar1": "is_condition_met",
                "param_1": "parameters",
                "puVar3": "ptr",
                "uVar2": "result",
                "uVar4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004728": {
            "additional_data": {
                "FUN_08004728": {
                    "1": "initialize_communication",
                    "15": "process_data",
                    "2": "handle_input",
                    "4": "process_input"
                },
                "local_c": {
                    "1": "iteration_count",
                    "24": "counter",
                    "5": "count"
                },
                "param_1": {
                    "1": "input1",
                    "12": "data",
                    "2": "input_array",
                    "3": "input_data",
                    "4": "input"
                },
                "param_2": {
                    "1": "param_pointer1",
                    "2": "input1",
                    "3": "param_a",
                    "7": "param1"
                },
                "param_3": {
                    "1": "param_pointer2",
                    "2": "value2",
                    "3": "param_b",
                    "7": "param2"
                },
                "param_4": {
                    "1": "input4",
                    "2": "status",
                    "3": "param_c",
                    "5": "flag",
                    "6": "param3"
                },
                "puVar2": {
                    "1": "temp_pointer",
                    "17": "ptr",
                    "2": "current_pointer",
                    "6": "temp_ptr"
                },
                "uVar1": {
                    "1": "status",
                    "23": "result",
                    "7": "return_value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08007e74"
            ],
            "code": "\nundefined4 process_data_08004728(uint **data,uint *param1,uint *param2,undefined2 param3)\n\n{\n  undefined4 result;\n  uint *ptr;\n  int counter;\n  \n  if (*(char *)((int)data + 0x3d) == ' ') {\n    counter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (counter == 0) {\n        data[0xc] = (uint *)0x0;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        *(undefined *)(data + 0xf) = 0;\n        return 3;\n      }\n      ptr = *data;\n      counter = counter + -1;\n    } while ((ptr[6] & 2) != 0);\n    if (*(char *)(data + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(data + 0xf) = 1;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **data = **data & 0xfffff7ff;\n      *(undefined *)((int)data + 0x3d) = 0x21;\n      *(undefined *)((int)data + 0x3e) = 0x10;\n      result = 0;\n      data[0x10] = (uint *)0x0;\n      data[9] = param2;\n      *(undefined2 *)((int)data + 0x2a) = param3;\n      data[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(data + 10) = *(undefined2 *)((int)data + 0x2a);\n      data[0x11] = param1;\n      **data = **data | 0x100;\n      *(undefined *)(data + 0xf) = 0;\n      (*data)[1] = (*data)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "process_data_08004728",
            "entrypoint": "0x08004728",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004728": "process_data_08004728",
                "local_c": "counter",
                "param_1": "data",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080047f4": {
            "additional_data": {
                "<original_function_name>": {
                    "1": "<more_descriptive_function_name>"
                },
                "FUN_080047f4": {
                    "1": "update_parameters",
                    "15": "process_data",
                    "2": "process_input",
                    "3": "process_params"
                },
                "local_c": {
                    "1": "local_var",
                    "2": "iteration_count",
                    "22": "counter",
                    "5": "count"
                },
                "param_1": {
                    "1": "data_arr",
                    "2": "input_data",
                    "4": "data_ptr",
                    "7": "data"
                },
                "param_2": {
                    "1": "param_2",
                    "2": "output1",
                    "3": "input1",
                    "4": "param1",
                    "5": "param_ptr1"
                },
                "param_3": {
                    "1": "param_pointer2",
                    "2": "output2",
                    "3": "input2",
                    "4": "param2",
                    "5": "param3"
                },
                "param_4": {
                    "1": "param2_char",
                    "2": "flag",
                    "3": "input3",
                    "4": "param3",
                    "6": "param4"
                },
                "puVar2": {
                    "1": "ptr_var",
                    "12": "ptr",
                    "2": "current_param",
                    "5": "temp_ptr"
                },
                "uVar1": {
                    "1": "result_code",
                    "15": "return_value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08007f0e"
            ],
            "code": "\nundefined4 process_data_080047f4(uint **data,uint *param_ptr1,uint *param_ptr2,undefined2 param4)\n\n{\n  undefined4 result;\n  uint *ptr;\n  int counter;\n  \n  if (*(char *)((int)data + 0x3d) == ' ') {\n    counter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (counter == 0) {\n        data[0xc] = (uint *)0x0;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        *(undefined *)(data + 0xf) = 0;\n        return 3;\n      }\n      ptr = *data;\n      counter = counter + -1;\n    } while ((ptr[6] & 2) != 0);\n    if (*(char *)(data + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(data + 0xf) = 1;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **data = **data & 0xfffff7ff;\n      *(undefined *)((int)data + 0x3d) = 0x22;\n      *(undefined *)((int)data + 0x3e) = 0x10;\n      result = 0;\n      data[0x10] = (uint *)0x0;\n      data[9] = param_ptr2;\n      *(undefined2 *)((int)data + 0x2a) = param4;\n      data[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(data + 10) = *(undefined2 *)((int)data + 0x2a);\n      data[0x11] = param_ptr1;\n      **data = **data | 0x400;\n      **data = **data | 0x100;\n      *(undefined *)(data + 0xf) = 0;\n      (*data)[1] = (*data)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "process_data_080047f4",
            "entrypoint": "0x080047f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080047f4": "process_data_080047f4",
                "local_c": "counter",
                "param_1": "data",
                "param_2": "param_ptr1",
                "param_3": "param_ptr2",
                "param_4": "param4",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080048c8": {
            "additional_data": {
                "(*param_1)[1]": {
                    "1": "array_value"
                },
                "(*puVar2 & 1)": {
                    "1": "check_flag"
                },
                "(char *)((int)param_1 + 0x3d)": {
                    "1": "char_ptr"
                },
                "(char *)(param_1 + 0xf)": {
                    "1": "char_ptr"
                },
                "(short *)((int)param_1 + 0x2a)": {
                    "1": "short_ptr"
                },
                "(uint *)0x0": {
                    "1": "null"
                },
                "(undefined *)((int)param_1 + 0x3d)": {
                    "1": "char_ptr"
                },
                "(undefined *)((int)param_1 + 0x3e)": {
                    "1": "char_ptr"
                },
                "(undefined *)(param_1 + 0xf)": {
                    "1": "status_ptr"
                },
                "*(char *)((int)param_1 + 0x3d)": {
                    "1": "char_at_input_array_index_0x3d"
                },
                "*(char *)(param_1 + 0xf)": {
                    "1": "char_value2",
                    "2": "flag"
                },
                "*(short *)((int)param_1 + 0x2a)": {
                    "1": "param_3_short"
                },
                "*(undefined *)((int)param_1 + 0x3d)": {
                    "1": "undefined_at_input_array_index_0x3d",
                    "2": "undefined_char1"
                },
                "*(undefined *)((int)param_1 + 0x3e)": {
                    "1": "char2",
                    "2": "undefined_char2"
                },
                "*(undefined *)(param_1 + 0xf)": {
                    "1": "flag_byte"
                },
                "*(undefined2 *)((int)param_1 + 0x2a)": {
                    "1": "value"
                },
                "*(undefined2 *)(param_1 + 10)": {
                    "1": "param_3_undefined"
                },
                "**param_1": {
                    "1": "data_value"
                },
                "*puVar2": {
                    "1": "val1"
                },
                "FUN_080048c8": {
                    "1": "validate_parameters",
                    "2": "initialize_data",
                    "3": "process_params",
                    "4": "validate_input",
                    "5": "process_parameters"
                },
                "param_1": {
                    "1": "parameter_ptr",
                    "2": "input_data",
                    "3": "param_list"
                },
                "param_1[0x10]": {
                    "1": "array_ptr"
                },
                "param_1[0xb]": {
                    "1": "array_var3"
                },
                "param_1[9]": {
                    "1": "array_var2"
                },
                "param_2": {
                    "1": "param2_ptr",
                    "2": "input_pointer",
                    "3": "data_ptr"
                },
                "param_3": {
                    "1": "param_3",
                    "2": "param_size",
                    "3": "length",
                    "4": "size"
                },
                "param_4": {
                    "1": "result",
                    "2": "output_pointer",
                    "3": "param3"
                },
                "puVar2": {
                    "1": "first_param",
                    "2": "ptr1",
                    "3": "ptr_var",
                    "7": "ptr"
                },
                "uVar1": {
                    "1": "result_code",
                    "18": "result",
                    "4": "status",
                    "7": "return_value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08007fa0"
            ],
            "code": "\nundefined4 process_parameters_080048c8(uint **param_list,uint *data_ptr,int size,uint *param3)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)param_list + 0x3d) == '(') {\n    if (data_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(param_list + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(param_list + 0xf) = 1;\n      ptr = *param_list;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **param_list = **param_list & 0xfffff7ff;\n      *(undefined *)((int)param_list + 0x3d) = 0x29;\n      *(undefined *)((int)param_list + 0x3e) = 0x20;\n      result = 0;\n      ptr1 = (uint *)0x0;\n      param2_ptr = data_ptr;\n      *(short *)((int)param_list + 0x2a) = (short)size;\n      param4_ptr = param3;\n      *(undefined2 *)(param_list + 10) = *(undefined2 *)((int)param_list + 0x2a);\n      *(undefined *)(param_list + 0xf) = 0;\n      (*param_list)[1] = (*param_list)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "process_parameters_080048c8",
            "entrypoint": "0x080048c8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080048c8": "process_parameters_080048c8",
                "param_1": "param_list",
                "param_1[0x10]": "ptr1",
                "param_1[0xb]": "param4_ptr",
                "param_1[9]": "param2_ptr",
                "param_2": "data_ptr",
                "param_3": "size",
                "param_4": "param3",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004954": {
            "additional_data": {
                "(*param_1)[1]": {
                    "1": "double_ptr_offset"
                },
                "(*puVar2 & 1)": {
                    "1": "check_bit"
                },
                "(char *)(param_1 + 0xf)": {
                    "1": "flag_ptr"
                },
                "(int)param_1 + 0x3d": {
                    "1": "input_flag"
                },
                "(int)param_1 + 0x3e": {
                    "1": "temp_var"
                },
                "(short)param_3": {
                    "1": "converted_count"
                },
                "(uint *)0x0": {
                    "1": "null_ptr"
                },
                "*(char *) (param_1 + 61)": {
                    "1": "input_char"
                },
                "*(char *) (param_1 + 62)": {
                    "1": "output_char"
                },
                "*(char *)((int)param_1 + 0x3d)": {
                    "1": "param1_char",
                    "2": "char_value"
                },
                "*(char *)(param_1 + 0xf)": {
                    "1": "flag_value",
                    "3": "flag"
                },
                "*(short *)((int)param_1 + 0x2a)": {
                    "1": "short_offset",
                    "3": "short_value"
                },
                "*(undefined *)((int)param_1 + 0x3d)": {
                    "1": "char_1"
                },
                "*(undefined *)((int)param_1 + 0x3e)": {
                    "1": "undefined_ptr_offset2"
                },
                "*(undefined *)(param_1 + 0xf)": {
                    "1": "undefined_char_at_offset_0xf"
                },
                "*(undefined2 *)((int)param_1 + 0x2a)": {
                    "1": "short_val"
                },
                "*(undefined2 *)(param_1 + 10)": {
                    "1": "short_val_2",
                    "2": "undefined2_value"
                },
                "**(param_1)": {
                    "1": "double_ptr_value"
                },
                "**param_1": {
                    "1": "ptr_value_deref"
                },
                "**param_1 & 0xfffff7ff": {
                    "1": "updated_value2"
                },
                "*param_1": {
                    "1": "value1"
                },
                "*puVar2": {
                    "1": "value2"
                },
                "*puVar2 & 1": {
                    "1": "first_bit"
                },
                "FUN_08004954": {
                    "1": "validate_and_process_input",
                    "2": "initialize_parameters",
                    "3": "initialize_params",
                    "4": "parse_input"
                },
                "param_1": {
                    "1": "input_ptr",
                    "2": "config",
                    "3": "input_data"
                },
                "param_1[0x10]": {
                    "1": "ptr0"
                },
                "param_1[0xb]": {
                    "1": "param_array_offset3"
                },
                "param_1[9]": {
                    "1": "param_array_offset2"
                },
                "param_2": {
                    "1": "optional_value",
                    "2": "value",
                    "3": "param2"
                },
                "param_3": {
                    "1": "param3_count",
                    "2": "param_size",
                    "4": "length",
                    "5": "size"
                },
                "param_4": {
                    "1": "context",
                    "2": "result_pointer",
                    "3": "param4",
                    "4": "output_param"
                },
                "puVar2": {
                    "1": "ptr_data",
                    "11": "ptr",
                    "2": "pointer",
                    "3": "ptr_var",
                    "4": "pointer_var"
                },
                "uVar1": {
                    "1": "return_status",
                    "18": "result",
                    "3": "status",
                    "8": "return_value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08007fa0"
            ],
            "code": "\nundefined4 parse_input_08004954(uint **param_list,uint *data_pointer,int size,uint *output_param)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)param_list + 0x3d) == '(') {\n    if (data_pointer == (uint *)0x0) {\n      result = 1;\n    }\n    else if (size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(param_list + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(param_list + 0xf) = 1;\n      ptr = *param_list;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **param_list = **param_list & 0xfffff7ff;\n      *(undefined *)((int)param_list + 0x3d) = 0x2a;\n      *(undefined *)((int)param_list + 0x3e) = 0x20;\n      result = 0;\n      temp_ptr = (uint *)0x0;\n      input_ptr = data_pointer;\n      *(short *)((int)param_list + 0x2a) = converted_count;\n      data_ptr = output_param;\n      *(undefined2 *)(param_list + 10) = *(undefined2 *)((int)param_list + 0x2a);\n      *(undefined *)(param_list + 0xf) = 0;\n      (*param_list)[1] = (*param_list)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "parse_input_08004954",
            "entrypoint": "0x08004954",
            "imported": false,
            "improved": true,
            "renaming": {
                "(short)param_3": "converted_count",
                "FUN_08004954": "parse_input_08004954",
                "param_1": "param_list",
                "param_1[0x10]": "temp_ptr",
                "param_1[0xb]": "data_ptr",
                "param_1[9]": "input_ptr",
                "param_2": "data_pointer",
                "param_3": "size",
                "param_4": "output_param",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080049e0": {
            "additional_data": {
                "((*param_1)[1] | 0x300)": {
                    "1": "set_second_element"
                },
                "(**param_1 | 0x400)": {
                    "1": "set_flag_pointer"
                },
                "(*param)[1]": {
                    "1": "param_at_index1"
                },
                "(*param_1)[1]": {
                    "1": "value_at_pointer_pointer_plus_one",
                    "2": "second_element"
                },
                "(*param_1)[1] = (*param_1)[1] | 0x300": {
                    "1": "set_param1_index1_flag"
                },
                "(*param_1)[1] | 0x300": {
                    "1": "set_bits_8_and_9_of_second_element"
                },
                "(*puVar1 & 1)": {
                    "1": "is_bit_set",
                    "2": "is_flag_set"
                },
                "*(char *)((int)param + 0x3d)": {
                    "1": "param_char"
                },
                "*(char *)((int)param_1 + 0x3d)": {
                    "1": "flag_char",
                    "3": "char_value"
                },
                "*(char *)((int)parameters + 0x3d)": {
                    "1": "character"
                },
                "*(undefined *)((int)param + 0x3d)": {
                    "1": "updated_param_char"
                },
                "*(undefined *)((int)param_1 + 0x3d)": {
                    "1": "updated_char_value"
                },
                "*(undefined *)((int)parameters + 0x3d)": {
                    "1": "assigned_character"
                },
                "**param": {
                    "1": "double_dereferenced_param"
                },
                "**param_1": {
                    "1": "first_element_value_dereferenced"
                },
                "**param_1 = **param_1 | 0x400": {
                    "1": "set_param1_bit_flag"
                },
                "**param_1 | 0x400": {
                    "1": "set_bit_10_of_data"
                },
                "*param": {
                    "1": "dereferenced_param"
                },
                "*param_1": {
                    "1": "flag_value"
                },
                "*puVar1": {
                    "1": "pointer_value",
                    "2": "first_element_value"
                },
                "*puVar1 & 1": {
                    "1": "first_bit_of_ptr"
                },
                "*puVar1 = *puVar1 | 1": {
                    "1": "set_param1_bit"
                },
                "*puVar1 | 1": {
                    "1": "set_flag"
                },
                "0x28": {
                    "1": "updated_char"
                },
                "0x300": {
                    "1": "flag3"
                },
                "0x3d": {
                    "1": "offset"
                },
                "0x400": {
                    "1": "flag2"
                },
                "1": {
                    "1": "flag"
                },
                "FUN_080049e0": {
                    "1": "reverse_and_modify_flags",
                    "14": "initialize_data",
                    "2": "initialize_param",
                    "3": "initialize_parameters",
                    "6": "initialize_flags"
                },
                "param_1": {
                    "1": "configuration",
                    "2": "param",
                    "3": "parameters",
                    "4": "flags",
                    "5": "data",
                    "7": "data_pointer"
                },
                "puVar1": {
                    "1": "current_value",
                    "2": "ptr",
                    "3": "flag_ptr",
                    "5": "first_element"
                },
                "return 0": {
                    "1": "return_success"
                },
                "return 2": {
                    "1": "return_error_code"
                }
            },
            "called": [],
            "calling": [
                "FUN_08008020",
                "FUN_08007f8e",
                "FUN_08007ff0",
                "FUN_08007f7c"
            ],
            "code": "\nundefined4 initialize_data_080049e0(uint **data_pointer)\n\n{\n  uint *first_element;\n  \n  if (*(char *)((int)data_pointer + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)data_pointer + 0x3d) = 0x28;\n  first_element = *data_pointer;\n  if ((*first_element & 1) == 0) {\n    *first_element = *first_element | 1;\n  }\n  **data_pointer = **data_pointer | 0x400;\n  (*data_pointer)[1] = (*data_pointer)[1] | 0x300;\n  return 0;\n}\n\n",
            "current_name": "initialize_data_080049e0",
            "entrypoint": "0x080049e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080049e0": "initialize_data_080049e0",
                "param_1": "data_pointer",
                "puVar1": "first_element"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a1e": {
            "called": [],
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "code": "\nvoid FUNC_08004a1e(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004a1e",
            "entrypoint": "0x08004a1e",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004a1e": "FUNC_08004a1e"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004a20": {
            "called": [],
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "code": "\nvoid FUNC_08004a20(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004a20",
            "entrypoint": "0x08004a20",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004a20": "FUNC_08004a20"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004a22": {
            "called": [],
            "calling": [
                "FUN_08004aec",
                "FUN_08004a24"
            ],
            "code": "\nvoid FUNC_08004a22(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004a22",
            "entrypoint": "0x08004a22",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004a22": "FUNC_08004a22"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004a24": {
            "additional_data": {
                "*param_1": {
                    "1": "param"
                },
                "FUNC_08004a22": {
                    "1": "execute_process",
                    "3": "perform_action"
                },
                "FUN_08004a24": {
                    "1": "modify_buffer",
                    "18": "process_data",
                    "2": "process_param",
                    "3": "process_input"
                },
                "cVar1": {
                    "1": "char_check",
                    "10": "character",
                    "11": "char_value",
                    "2": "char_var",
                    "3": "last_char"
                },
                "param_1": {
                    "1": "input_data",
                    "17": "data",
                    "2": "buffer"
                },
                "pbVar2": {
                    "1": "data_ptr",
                    "14": "byte_pointer",
                    "2": "byte_array"
                }
            },
            "called": [
                "FUN_08004a22"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 process_data_08004a24(int *data)\n\n{\n  char char_value;\n  byte *byte_ptr;\n  \n  char_value = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    byte_ptr = (byte *)data[9];\n    data[9] = (int)(byte_ptr + 1);\n    *(uint *)(*data + 0x10) = (uint)*byte_ptr;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (char_value == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08004a22();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_08004a24",
            "entrypoint": "0x08004a24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a24": "process_data_08004a24",
                "cVar1": "char_value",
                "param_1": "data",
                "pbVar2": "byte_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a74": {
            "called": [],
            "calling": [
                "FUN_08004a76",
                "FUN_08005084"
            ],
            "code": "\nvoid FUNC_08004a74(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004a74",
            "entrypoint": "0x08004a74",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004a74": "FUNC_08004a74"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004a76": {
            "additional_data": {
                "*(char *)((int)param_1 + 0x3d)": {
                    "1": "character_data"
                },
                "*(short *)((int)param_1 + 0x2a)": {
                    "1": "short_data"
                },
                "*(short *)((int)param_1 + 0x2a) == 0": {
                    "1": "is_short_zero"
                },
                "*(uint *)(*param_1 + 4)": {
                    "1": "uint_data"
                },
                "*(undefined4 *)(*param_1 + 0x10)": {
                    "1": "value"
                },
                "*param_1": {
                    "1": "ptr_data"
                },
                "FUNC_08004a74": {
                    "1": "execute_process",
                    "2": "execute_func",
                    "3": "execute_callback",
                    "7": "perform_action"
                },
                "FUN_08004a76": {
                    "1": "update_parameter_value",
                    "15": "process_data",
                    "2": "process_param",
                    "4": "process_parameter"
                },
                "cVar1": {
                    "1": "character_var",
                    "10": "character",
                    "11": "char_value",
                    "2": "current_char",
                    "3": "char_var"
                },
                "param_1": {
                    "1": "input_data",
                    "2": "parameter",
                    "3": "param",
                    "9": "data"
                },
                "puVar2": {
                    "1": "undefined_ptr",
                    "2": "next_ptr",
                    "3": "byte_pointer",
                    "7": "ptr",
                    "8": "pointer"
                }
            },
            "called": [
                "FUN_08004a74"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 process_data_08004a76(int *data)\n\n{\n  char char_value;\n  undefined *pointer;\n  \n  char_value = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    pointer = (undefined *)data[9];\n    data[9] = (int)(pointer + 1);\n    *pointer = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (char_value == '*')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x22;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08004a74();\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_08004a76",
            "entrypoint": "0x08004a76",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a76": "process_data_08004a76",
                "cVar1": "char_value",
                "param_1": "data",
                "puVar2": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ac2": {
            "additional_data": {
                "FUN_08004ac2": {
                    "1": "process_flags",
                    "18": "process_data",
                    "2": "update_data"
                },
                "FUN_08007fa0": {
                    "1": "execute_sub_function",
                    "2": "execute_operation"
                },
                "param_1": {
                    "1": "parameter_list",
                    "10": "data",
                    "2": "input_data",
                    "5": "input_array",
                    "8": "data_pointer"
                },
                "param_2": {
                    "1": "flag_a",
                    "11": "flag1",
                    "2": "param1",
                    "3": "flag_1",
                    "8": "param2"
                },
                "param_3": {
                    "1": "value2",
                    "11": "flag2",
                    "2": "param2",
                    "3": "flag_2",
                    "8": "param3"
                },
                "param_4": {
                    "1": "output",
                    "12": "param4",
                    "2": "result",
                    "7": "param"
                },
                "uVar1": {
                    "1": "value1",
                    "18": "selected_value",
                    "2": "chosen_value",
                    "4": "value",
                    "5": "result"
                },
                "uVar2": {
                    "1": "value2",
                    "3": "flag_value",
                    "4": "flags",
                    "7": "flag",
                    "9": "value"
                }
            },
            "called": [
                "FUN_08007fa0"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 process_data_08004ac2(int *data,undefined4 flag1,undefined4 flag2,undefined4 param4)\n\n{\n  undefined2 selected_value;\n  uint value;\n  \n  value = *(uint *)(*data + 0x18);\n  if ((value & 0x80) == 0) {\n    selected_value = *(undefined2 *)(data + 3);\n  }\n  else {\n    selected_value = *(undefined2 *)(data + 6);\n  }\n  FUN_08007fa0(data,(*(uint *)(*data + 0x18) & 4) == 0,selected_value,value,param4);\n  return 0;\n}\n\n",
            "current_name": "process_data_08004ac2",
            "entrypoint": "0x08004ac2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ac2": "process_data_08004ac2",
                "param_1": "data",
                "param_2": "flag1",
                "param_3": "flag2",
                "param_4": "param4",
                "uVar1": "selected_value",
                "uVar2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004aec": {
            "additional_data": {
                "(*(char *)((int)param_1 + 0x3d))": {
                    "1": "character_value"
                },
                "(*param_1)": {
                    "1": "pointer_value"
                },
                "(*param_1)[1]": {
                    "1": "param_1_offset1",
                    "2": "value1"
                },
                "(*param_1)[5]": {
                    "1": "param_1_offset5",
                    "2": "value2"
                },
                "(int)param_1 + 0x3d": {
                    "1": "character_address"
                },
                "*(char *)((int)param_1 + 0x3d)": {
                    "1": "parameter_char"
                },
                "*(undefined *)((int)param_1 + 0x3d)": {
                    "1": "param_array_char1"
                },
                "*(undefined *)((int)param_1 + 0x3e)": {
                    "1": "zero_value"
                },
                "**param_1": {
                    "1": "value3"
                },
                "0x3d": {
                    "1": "character"
                },
                "0x3e": {
                    "1": "second_character"
                },
                "0xb": {
                    "1": "command"
                },
                "0xc": {
                    "1": "status"
                },
                "FUNC_08004a22": {
                    "1": "handle_case2",
                    "2": "execute_function",
                    "4": "perform_action"
                },
                "FUN_08004aec": {
                    "1": "analyze_parameters",
                    "13": "process_param",
                    "2": "process_parameters",
                    "3": "process_parameter"
                },
                "FUN_08007ff0": {
                    "1": "apply_function1",
                    "2": "perform_operation1"
                },
                "char": {
                    "1": "character"
                },
                "param_1": {
                    "1": "input_param",
                    "2": "parameter",
                    "4": "params",
                    "5": "param_array",
                    "7": "param",
                    "8": "parameters"
                },
                "param_1[0xb]": {
                    "1": "condition1"
                },
                "param_1[0xc]": {
                    "1": "flag2"
                },
                "parse_param[0xb]": {
                    "1": "value_at_index_b"
                },
                "parse_param[0xc]": {
                    "1": "value_at_index_c"
                }
            },
            "called": [
                "FUN_08007ff0",
                "FUN_08004a22"
            ],
            "calling": [
                "FUN_080052f0"
            ],
            "code": "\nundefined4 process_param_08004aec(uint **parameters)\n\n{\n  if (((ptr_value1 == (uint *)0x4) || (ptr_value1 == (uint *)0x8)) &&\n     (*(character *)((int)parameters + 0x3d) == '(')) {\n    ptr_value1 = (uint *)0xffff0000;\n    (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n    (*parameters)[5] = 0xfffffbff;\n    **parameters = **parameters & 0xfffffbff;\n    ptr_value2 = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    FUN_08007ff0();\n  }\n  else if (*(character *)((int)parameters + 0x3d) == '!') {\n    ptr_value1 = (uint *)0xffff0000;\n    ptr_value2 = (uint *)0x21;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n    (*parameters)[5] = 0xfffffbff;\n    **parameters = **parameters & 0xfffffbff;\n    FUNC_08004a22();\n  }\n  else {\n    (*parameters)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_param_08004aec",
            "entrypoint": "0x08004aec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004aec": "process_param_08004aec",
                "char": "character",
                "param_1": "parameters",
                "param_1[0xb]": "ptr_value1",
                "param_1[0xc]": "ptr_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004b80": {
            "called": [],
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "code": "\nvoid FUNC_08004b80(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004b80",
            "entrypoint": "0x08004b80",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004b80": "FUNC_08004b80"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004b82": {
            "additional_data": {
                "FUNCH_08004a1e": {
                    "1": "process_case1"
                },
                "FUNCH_08004b80": {
                    "1": "process_case2"
                },
                "FUNC_08004a1e": {
                    "1": "process_character_case1",
                    "2": "function_a",
                    "3": "process_case1"
                },
                "FUNC_08004b80": {
                    "1": "process_data_b",
                    "2": "handle_case2",
                    "3": "process_case2"
                },
                "FUN_08004b82": {
                    "1": "process_input_data",
                    "2": "process_function",
                    "3": "process_input",
                    "4": "process_param",
                    "7": "process_data"
                },
                "cVar1": {
                    "1": "char_1",
                    "11": "char_value",
                    "2": "char1",
                    "4": "first_char",
                    "8": "character"
                },
                "param_1": {
                    "1": "param_list",
                    "2": "input",
                    "3": "param",
                    "4": "input_data",
                    "9": "parameters"
                },
                "puVar2": {
                    "1": "ptr_value",
                    "2": "ptr_var",
                    "6": "pointer",
                    "8": "pointer_value"
                }
            },
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 process_data_08004b82(uint **parameters)\n\n{\n  char char_value;\n  uint *pointer_value;\n  \n  char_value = *(char *)((int)parameters + 0x3d);\n  pointer_value = parameters[0xb];\n  if ((*(short *)(parameters + 10) == 0) && (char_value == '!')) {\n    if ((pointer_value == (uint *)0x4) || ((pointer_value == (uint *)0x8 || (pointer_value == (uint *)0xffff0000)))) {\n      (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n      **parameters = **parameters | 0x200;\n      parameters[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      if (*(char *)((int)parameters + 0x3e) == '@') {\n        *(undefined *)((int)parameters + 0x3e) = 0;\n        FUNC_08004b80();\n      }\n      else {\n        *(undefined *)((int)parameters + 0x3e) = 0;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n      parameters[0xc] = (uint *)0x11;\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      FUNC_08004a1e();\n    }\n  }\n  else if ((char_value == '!') || ((*(char *)((int)parameters + 0x3e) == '@' && (char_value == '\\\"')))) {\n    if (*(short *)((int)parameters + 0x2a) == 0) {\n      (*parameters)[1] = (*parameters)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)parameters + 0x3e) == '@') {\n      if (parameters[0x14] == (uint *)0x0) {\n        if (parameters[0x13] == (uint *)0x1) {\n          (*parameters)[4] = (uint)parameters[0x12] & 0xff;\n          parameters[0x14] = (uint *)((int)parameters[0x14] + 2);\n        }\n        else {\n          (*parameters)[4] = (uint)((int)parameters[0x12] << 0x10) >> 0x18;\n          parameters[0x14] = (uint *)((int)parameters[0x14] + 1);\n        }\n      }\n      else if (parameters[0x14] == (uint *)0x1) {\n        (*parameters)[4] = (uint)parameters[0x12] & 0xff;\n        parameters[0x14] = (uint *)((int)parameters[0x14] + 1);\n      }\n      else if (parameters[0x14] == (uint *)0x2) {\n        if (*(char *)((int)parameters + 0x3d) == '\\\"') {\n          **parameters = **parameters | 0x100;\n        }\n        else if (*(char *)((int)parameters + 0x3d) == '!') {\n          pointer_value = parameters[9];\n          parameters[9] = (uint *)((int)pointer_value + 1);\n          (*parameters)[4] = (uint)*(byte *)pointer_value;\n          *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointer_value = parameters[9];\n      parameters[9] = (uint *)((int)pointer_value + 1);\n      (*parameters)[4] = (uint)*(byte *)pointer_value;\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_08004b82",
            "entrypoint": "0x08004b82",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004b82": "process_data_08004b82",
                "cVar1": "char_value",
                "param_1": "parameters",
                "puVar2": "pointer_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ccc": {
            "additional_data": {
                "(**param_1)": {
                    "1": "double_deref_param_1"
                },
                "(*param_1)[1]": {
                    "1": "first_element"
                },
                "(*param_1)[4]": {
                    "1": "array_value_4"
                },
                "(*parameters)[1]": {
                    "1": "first_element"
                },
                "(int)param_1 + 0x2a": {
                    "1": "short_value1"
                },
                "(int)param_1 + 0x3d": {
                    "1": "char_value1"
                },
                "(int)param_1 + 0x3e": {
                    "1": "char_value2"
                },
                "(uint *)0x0": {
                    "1": "pointer0"
                },
                "(uint *)0x11": {
                    "1": "pointer11"
                },
                "(uint *)0x4": {
                    "1": "constant_four"
                },
                "(uint *)0x8": {
                    "1": "constant_eight"
                },
                "(uint *)0xffff0000": {
                    "1": "pointer_ffff0000"
                },
                "*(byte *)puVar1": {
                    "2": "byte_value"
                },
                "*(char *)((int)param_1 + 0x3d)": {
                    "1": "char_expression",
                    "2": "char_value"
                },
                "*(char *)((int)param_1 + 0x3e)": {
                    "1": "char_value_2"
                },
                "*(char *)((int)parameters + 0x3d)": {
                    "1": "first_char"
                },
                "*(char *)((int)parameters + 0x3e)": {
                    "1": "second_char"
                },
                "*(short *)((int)param_1 + 0x2a)": {
                    "1": "short_check",
                    "3": "short_value"
                },
                "*(short *)((int)parameters + 0x2a)": {
                    "1": "second_value"
                },
                "*(uint *)((int)puVar1 + 1)": {
                    "1": "uint_value"
                },
                "*(undefined *)((int)param_1 + 0x3d)": {
                    "1": "undefined_value1"
                },
                "*(undefined *)((int)param_1 + 0x3e)": {
                    "1": "second_char"
                },
                "**(short **)((int)param_1 + 0x2a)": {
                    "1": "param[0x2a][0]"
                },
                "**param_1": {
                    "1": "parameter_value_dereferenced"
                },
                "**parameters": {
                    "1": "second_element"
                },
                "*param_1": {
                    "1": "parameter_value"
                },
                "0x0": {
                    "1": "value_4"
                },
                "0x11": {
                    "1": "value_6"
                },
                "0x20": {
                    "1": "value_5"
                },
                "0x4": {
                    "1": "value_1"
                },
                "0x8": {
                    "1": "value_2"
                },
                "0xffff0000": {
                    "1": "value_3"
                },
                "FUNC_08004a1e": {
                    "1": "do_action",
                    "2": "handle_case_a",
                    "5": "handle_case1"
                },
                "FUNC_08004b80": {
                    "1": "handle_at",
                    "2": "perform_action_b",
                    "5": "handle_case2"
                },
                "FUN_08004ccc": {
                    "1": "update_parameters",
                    "13": "process_param",
                    "2": "process_param_array",
                    "4": "process_input"
                },
                "param_1": {
                    "1": "param",
                    "11": "parameters",
                    "2": "parameter",
                    "4": "param_list",
                    "6": "param_array"
                },
                "param_1[0xb]": {
                    "1": "third_element"
                },
                "param_1[0xc]": {
                    "1": "pointer_value"
                },
                "param_1[9]": {
                    "1": "param_19"
                },
                "puVar1": {
                    "1": "value_pointer",
                    "2": "current_value",
                    "3": "pointer",
                    "8": "value"
                },
                "puVar1 == (uint *)0x4": {
                    "1": "is_temp_pointer1_equal4"
                },
                "puVar1 == (uint *)0x8": {
                    "1": "is_temp_pointer1_equal8"
                },
                "puVar1 == (uint *)0xffff0000": {
                    "1": "is_temp_pointer1_equal_ffff0000"
                }
            },
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 process_param_08004ccc(uint **parameters)\n\n{\n  uint *value;\n  \n  value = temp_pointer2;\n  if (*(char *)((int)parameters + 0x3d) == '!') {\n    if (*(short *)((int)parameters + 0x2a) == 0) {\n      if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        **parameters = **parameters | 0x200;\n        param[0xc] = (uint *)0x0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        if (*(char *)((int)parameters + 0x3e) == '@') {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08004b80();\n        }\n        else {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08004a1e();\n        }\n      }\n      else {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        param[0xc] = (uint *)0x11;\n        *(undefined *)((int)parameters + 0x3e) = 0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      value = pointer_to_element;\n      pointer_to_element = (uint *)((int)value + 1);\n      (*parameters)[4] = (uint)*(byte *)value;\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_param_08004ccc",
            "entrypoint": "0x08004ccc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ccc": "process_param_08004ccc",
                "param_1": "parameters",
                "param_1[0xb]": "temp_pointer2",
                "param_1[0xc]": "param[0xc]",
                "param_1[9]": "pointer_to_element",
                "puVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d6a": {
            "called": [],
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "code": "\nvoid FUNC_08004d6a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004d6a",
            "entrypoint": "0x08004d6a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004d6a": "FUNC_08004d6a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004d6c": {
            "additional_data": {
                "(*param_1)[1]": {
                    "1": "second_element_value"
                },
                "(char)((int)param_1 + 0x3d)": {
                    "1": "char_value1"
                },
                "(char)((int)param_1 + 0x3e)": {
                    "1": "char_value2"
                },
                "(char)(*param_1)[4]": {
                    "1": "char_value3"
                },
                "(int)param_1": {
                    "1": "parameter_int"
                },
                "(short *)((int)param_1 + 0x2a)": {
                    "1": "short_ptr"
                },
                "(short)((int)param_1 + 0x2a)": {
                    "1": "short_value1"
                },
                "(ushort)((int)param_1 + 0x2a)": {
                    "1": "ushort_value1"
                },
                "*(char *)puVar1": {
                    "1": "char_value2"
                },
                "*(undefined *)((int)param_1 + 0x3d)": {
                    "1": "char_value1"
                },
                "*(undefined *)((int)param_1 + 0x3e)": {
                    "1": "char_value3"
                },
                "**param_1": {
                    "1": "value_ptr"
                },
                "*param_1": {
                    "1": "parameter_value"
                },
                "FUNC_08004a20": {
                    "1": "handle_not_at",
                    "2": "handle_other_symbol"
                },
                "FUNC_08004d6a": {
                    "1": "process_case_a",
                    "2": "handle_at_character",
                    "3": "handle_at"
                },
                "FUN_08004d6c": {
                    "1": "update_permissions",
                    "2": "update_flags_and_data",
                    "3": "update_flags_and_values",
                    "4": "process_data",
                    "5": "process_param"
                },
                "param_1": {
                    "1": "input_param",
                    "2": "param_list",
                    "3": "param",
                    "4": "parameter",
                    "6": "parameters"
                },
                "param_1[0xb]": {
                    "1": "parameter_b"
                },
                "param_1[0xc]": {
                    "1": "pointer_c"
                },
                "param_1[9]": {
                    "1": "pointer_arg"
                },
                "puVar1": {
                    "1": "temp_var1",
                    "11": "temp_ptr",
                    "2": "ptr1",
                    "3": "pointer_var",
                    "4": "temp_pointer"
                }
            },
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 process_param_08004d6c(uint **parameters)\n\n{\n  uint *temp_ptr;\n  \n  if (*(char *)(parameter_int + 0x3d) == '\\\"') {\n    if (*(ushort *)(parameter_int + 0x2a) < 4) {\n      if (*(ushort *)(parameter_int + 0x2a) - 2 < 2) {\n        if (eleventh_element_value == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x800;\n        }\n        (*parameters)[1] = (*parameters)[1] & 0xfffffbff;\n      }\n      else {\n        if (eleventh_element_value == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        temp_ptr = ninth_element_value;\n        ninth_element_value = (uint *)((int)temp_ptr + 1);\n        *(char *)temp_ptr = (char)(*parameters)[4];\n        *(short *)(parameter_int + 0x2a) = *(short *)(parameter_int + 0x2a) + -1;\n        *(undefined *)(parameter_int + 0x3d) = 0x20;\n        pointer_c = (uint *)0x0;\n        if (*(char *)(parameter_int + 0x3e) == '@') {\n          *(undefined *)(parameter_int + 0x3e) = 0;\n          FUNC_08004d6a();\n        }\n        else {\n          *(undefined *)(parameter_int + 0x3e) = 0;\n          FUNC_08004a20();\n        }\n      }\n    }\n    else {\n      temp_ptr = ninth_element_value;\n      ninth_element_value = (uint *)((int)temp_ptr + 1);\n      *(char *)temp_ptr = (char)(*parameters)[4];\n      *(short *)(parameter_int + 0x2a) = *(short *)(parameter_int + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_param_08004d6c",
            "entrypoint": "0x08004d6c",
            "imported": false,
            "improved": true,
            "renaming": {
                "(int)param_1": "parameter_int",
                "FUN_08004d6c": "process_param_08004d6c",
                "param_1": "parameters",
                "param_1[0xb]": "eleventh_element_value",
                "param_1[0xc]": "pointer_c",
                "param_1[9]": "ninth_element_value",
                "puVar1": "temp_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004e3c": {
            "additional_data": {
                "FUC_08004a20": {
                    "1": "alternative_action"
                },
                "FUC_08004d6a": {
                    "1": "cleanup_action"
                },
                "FUNC_08004a20": {
                    "1": "perform_action_b",
                    "2": "handle_case2"
                },
                "FUNC_08004d6a": {
                    "1": "handle_at_character",
                    "2": "handle_case1",
                    "4": "handle_at_symbol"
                },
                "FUN_08004e3c": {
                    "1": "perform_operation",
                    "15": "process_data",
                    "2": "process_param",
                    "3": "process_function",
                    "4": "process_parameter"
                },
                "param_1": {
                    "1": "param",
                    "15": "data",
                    "2": "parameter_list",
                    "7": "parameters"
                },
                "puVar1": {
                    "1": "pointer1",
                    "2": "value_ptr",
                    "3": "current_value",
                    "9": "value"
                }
            },
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 process_data_08004e3c(uint **data)\n\n{\n  uint *value;\n  \n  value = data[0xb];\n  if (*(short *)((int)data + 0x2a) == 3) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      **data = **data & 0xfffffbff;\n    }\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 2) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n      **data = **data | 0x200;\n    }\n    else {\n      if (value == (uint *)0x2) {\n        **data = **data | 0x400;\n      }\n      else {\n        **data = **data & 0xfffffbff;\n      }\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n    }\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    data[0xc] = (uint *)0x0;\n    if (*(char *)((int)data + 0x3e) == '@') {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004d6a();\n    }\n    else {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004a20();\n    }\n  }\n  else {\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_08004e3c",
            "entrypoint": "0x08004e3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004e3c": "process_data_08004e3c",
                "param_1": "data",
                "puVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004f3a": {
            "called": [],
            "calling": [
                "FUN_08004f3c"
            ],
            "code": "\nvoid FUNC_08004f3a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004f3a",
            "entrypoint": "0x08004f3a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004f3a": "FUNC_08004f3a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004f3c": {
            "additional_data": {
                "*param_1": {
                    "1": "param"
                },
                "*puVar2": {
                    "1": "ptr"
                },
                "*puVar3": {
                    "1": "ptr2"
                },
                "FUNC_08004f3a": {
                    "1": "reverse"
                },
                "FUN_08004050": {
                    "1": "reverse_parameter2"
                },
                "FUN_08004f3c": {
                    "1": "parse_input",
                    "2": "update_parameter",
                    "3": "process_function",
                    "8": "process_data"
                },
                "FUN_08007ff0": {
                    "1": "process_data_d"
                },
                "FUN_08008020": {
                    "1": "process_data_a"
                },
                "iVar1": {
                    "1": "var1",
                    "19": "result",
                    "5": "index"
                },
                "param_1": {
                    "1": "parameter_1",
                    "2": "input_array",
                    "3": "input_data",
                    "4": "param",
                    "6": "data"
                },
                "puVar2": {
                    "1": "temp_pointer",
                    "2": "ptr_var2",
                    "3": "ptr2",
                    "7": "pointer1"
                },
                "puVar3": {
                    "1": "pointer_var3",
                    "2": "data_pointer",
                    "3": "ptr3",
                    "4": "ptr2",
                    "7": "pointer2"
                }
            },
            "called": [
                "FUN_08008020",
                "FUN_08004050",
                "FUN_08004f3a",
                "FUN_08007ff0"
            ],
            "calling": [
                "FUN_080052f0",
                "FUN_08005084"
            ],
            "code": "\nvoid process_data_08004f3c(uint **data)\n\n{\n  int result;\n  uint *pointer1;\n  uint *pointer2;\n  \n  if (*(byte *)((int)data + 0x3d) - 0x29 < 2) {\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)data + 0x3d) != '`') && (((*data)[1] & 0x800) == 0)) {\n      *(undefined *)((int)data + 0x3d) = 0x20;\n    }\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3e) = 0;\n  }\n  **data = **data & 0xfffff7ff;\n  pointer2 = *data;\n  if ((pointer2[1] & 0x800) == 0) {\n    if (*(char *)((int)data + 0x3d) == '`') {\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      data[0x10] = (uint *)0x0;\n      if ((pointer2[5] & 0x40) != 0) {\n        pointer1 = data[9];\n        data[9] = (uint *)((int)pointer1 + 1);\n        *(char *)pointer1 = (char)pointer2[4];\n      }\n      **data = **data & 0xfffffffe;\n      FUNC_08004f3a(data);\n    }\n    else {\n      if ((pointer2[5] & 0x40) != 0) {\n        pointer1 = data[9];\n        data[9] = (uint *)((int)pointer1 + 1);\n        *(char *)pointer1 = (char)pointer2[4];\n      }\n      FUN_08008020(data);\n    }\n  }\n  else {\n    pointer2[1] = pointer2[1] & 0xfffff7ff;\n    if (*(char *)((int)data[0xd] + 0x21) == '\\x01') {\n      data[0xe][0xd] = (uint)&LAB_080053cc_1;\n      result = FUN_08004050(data[0xe]);\n      if (result != 0) {\n        if (((*data)[5] & 0x40) != 0) {\n          pointer2 = data[9];\n          data[9] = (uint *)((int)pointer2 + 1);\n          *(char *)pointer2 = (char)(*data)[4];\n        }\n        **data = **data & 0xfffffffe;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        (*(code *)data[0xe][0xd])();\n      }\n    }\n    else {\n      data[0xd][0xd] = (uint)&LAB_080053cc_1;\n      result = FUN_08004050(data[0xd]);\n      if (result != 0) {\n        **data = **data & 0xfffffffe;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        (*(code *)data[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)data + 0x3d) == '(') && (((uint)data[0x10] & 4) != 0)) {\n    data[0xb] = (uint *)0xffff0000;\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    *(undefined *)((int)data + 0x3e) = 0;\n    FUN_08007ff0(data);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08004f3c",
            "entrypoint": "0x08004f3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004f3c": "process_data_08004f3c",
                "iVar1": "result",
                "param_1": "data",
                "puVar2": "pointer1",
                "puVar3": "pointer2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005084": {
            "additional_data": {
                "FUNC_08004a74": {
                    "1": "handle_quotes"
                },
                "FUN_08004f3c": {
                    "1": "handle_data_error"
                },
                "FUN_08005084": {
                    "1": "improve_code",
                    "2": "extract_information",
                    "3": "process_param",
                    "5": "process_function",
                    "8": "process_data"
                },
                "FUN_08007ff0": {
                    "1": "handle_parentheses"
                },
                "cVar1": {
                    "1": "delimiter",
                    "13": "char_value",
                    "2": "char1",
                    "8": "character"
                },
                "param_1": {
                    "1": "input_data",
                    "3": "param",
                    "4": "params",
                    "7": "parameters",
                    "9": "data"
                },
                "puVar2": {
                    "1": "ptr_var",
                    "2": "ptr_var1",
                    "3": "pointer_1",
                    "4": "ptr1",
                    "6": "pointer1"
                },
                "puVar3": {
                    "1": "next_data",
                    "2": "var2",
                    "3": "ptr_var2",
                    "5": "ptr2",
                    "6": "pointer2"
                }
            },
            "called": [
                "FUN_08004a74",
                "FUN_08007ff0",
                "FUN_08004f3c"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 process_data_08005084(uint **data)\n\n{\n  char char_value;\n  uint *pointer1;\n  uint *pointer2;\n  \n  char_value = *(char *)((int)data + 0x3d);\n  (*data)[1] = (*data)[1] & 0xfffff8ff;\n  **data = **data | 1;\n  **data = **data & 0xfffffbff;\n  pointer1 = *data;\n  if ((pointer1[1] & 0x800) != 0) {\n    if ((*(char *)((int)data + 0x3d) == '\\\"') || (*(char *)((int)data + 0x3d) == '*')) {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xe] + 4);\n    }\n    else {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)data + 0x2a) != 0) {\n    if ((pointer1[5] & 4) != 0) {\n      pointer2 = data[9];\n      data[9] = (uint *)((int)pointer2 + 1);\n      *(char *)pointer2 = (char)pointer1[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    if (((*data)[5] & 0x40) != 0) {\n      pointer1 = data[9];\n      data[9] = (uint *)((int)pointer1 + 1);\n      *(char *)pointer1 = (char)(*data)[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    data[0x10] = (uint *)((uint)data[0x10] | 4);\n  }\n  if (data[0x10] == (uint *)0x0) {\n    if (((char_value == '(') || (char_value == '*')) || (char_value == ')')) {\n      data[0xb] = (uint *)0xffff0000;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUN_08007ff0();\n    }\n    else if ((data[0xc] == (uint *)0x22) || (char_value == '\\\"')) {\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004a74();\n    }\n  }\n  else {\n    FUN_08004f3c();\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_08005084",
            "entrypoint": "0x08005084",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005084": "process_data_08005084",
                "cVar1": "char_value",
                "param_1": "data",
                "puVar2": "pointer1",
                "puVar3": "pointer2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005188": {
            "additional_data": {
                "(int)param_1 + 0x3e": {
                    "1": "data_offset"
                },
                "*param_1": {
                    "1": "function_params"
                },
                "FUN_0800430c": {
                    "1": "handle_case3"
                },
                "FUN_08004396": {
                    "1": "handle_case2"
                },
                "FUN_080043a2": {
                    "1": "perform_action_a"
                },
                "FUN_0800457c": {
                    "1": "handle_case12"
                },
                "FUN_0800459c": {
                    "1": "handle_case11"
                },
                "FUN_08004a76": {
                    "1": "handle_case10"
                },
                "FUN_08004ac2": {
                    "1": "handle_case8"
                },
                "FUN_08004b82": {
                    "1": "perform_action_f"
                },
                "FUN_08004ccc": {
                    "1": "perform_action_g"
                },
                "FUN_08004d6c": {
                    "1": "perform_action_d"
                },
                "FUN_08004e3c": {
                    "1": "handle_case5"
                },
                "FUN_08005084": {
                    "1": "perform_action_i"
                },
                "FUN_08005188": {
                    "1": "handle_data_processing",
                    "20": "process_data",
                    "3": "process_function"
                },
                "dataValue": {
                    "1": "data_value"
                },
                "flag1": {
                    "1": "flag1"
                },
                "flag2": {
                    "1": "flag2"
                },
                "flag3": {
                    "1": "flag3"
                },
                "iVar1": {
                    "1": "ptr_data",
                    "10": "value",
                    "2": "data_ptr",
                    "3": "param_value",
                    "4": "ptr",
                    "5": "data_value"
                },
                "param_1": {
                    "1": "input_data",
                    "17": "data",
                    "2": "param",
                    "3": "input_array"
                },
                "uVar2": {
                    "1": "flag_var1",
                    "10": "value1",
                    "12": "flag1",
                    "2": "flags1"
                },
                "uVar3": {
                    "1": "status",
                    "10": "value2",
                    "12": "flag2",
                    "2": "flags2"
                },
                "uVar4": {
                    "1": "config_flags",
                    "10": "value3",
                    "12": "flag3",
                    "2": "flags3"
                }
            },
            "called": [
                "FUN_08004e3c",
                "FUN_08004ccc",
                "FUN_08004396",
                "FUN_08004ac2",
                "FUN_08004a76",
                "FUN_0800459c",
                "FUN_0800457c",
                "FUN_080043a2",
                "FUN_08005084",
                "FUN_0800430c",
                "FUN_08004a24",
                "FUN_08004b82",
                "FUN_08004d6c"
            ],
            "calling": [],
            "code": "\nvoid process_data_08005188(int *data)\n\n{\n  int value;\n  uint flag1;\n  uint flag2;\n  uint flag3;\n  \n  value = *data;\n  flag3 = *(uint *)(value + 0x18);\n  flag1 = *(uint *)(value + 0x14);\n  flag2 = *(uint *)(value + 4);\n  if ((*(char *)((int)data + 0x3e) == '\\x10') || (*(char *)((int)data + 0x3e) == '@')) {\n    if (((flag1 & 0x10001) == 0) || ((flag2 & 0x200) == 0)) {\n      if (((flag1 & 0x10008) == 0) || ((flag2 & 0x200) == 0)) {\n        if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n          FUN_080043a2(data);\n        }\n      }\n      else {\n        FUN_08004396(data);\n      }\n    }\n    else {\n      FUN_0800430c(data);\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004d6c(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08004e3c(data);\n        return;\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004b82(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08004ccc(data);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08004ac2();\n      return;\n    }\n    if (((flag1 & 0x10010) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08005084(data);\n      return;\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004a76(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_0800459c(data);\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004a24(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_0800457c(data);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08005188",
            "entrypoint": "0x08005188",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005188": "process_data_08005188",
                "iVar1": "value",
                "param_1": "data",
                "uVar2": "flag1",
                "uVar3": "flag2",
                "uVar4": "flag3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080052f0": {
            "additional_data": {
                "FUN_08004aec": {
                    "1": "process_parameters_a"
                },
                "FUN_08004f3c": {
                    "1": "process_parameters_b"
                },
                "FUN_080052f0": {
                    "1": "update_flags_and_values",
                    "13": "update_flags",
                    "2": "update_permissions",
                    "3": "process_parameters",
                    "4": "process_flags"
                },
                "cVar1": {
                    "1": "character_var1",
                    "12": "character",
                    "3": "character1",
                    "4": "char_var",
                    "5": "char_value",
                    "6": "char1"
                },
                "param_1": {
                    "1": "arguments",
                    "2": "param",
                    "3": "permissions",
                    "5": "flags",
                    "7": "parameters",
                    "8": "params"
                },
                "puVar2": {
                    "1": "ptr_var",
                    "11": "ptr",
                    "2": "pointer_var2",
                    "4": "pointer"
                },
                "uVar3": {
                    "1": "flag_value",
                    "10": "value1",
                    "2": "var1",
                    "9": "flag1"
                },
                "uVar4": {
                    "1": "variable2",
                    "10": "value2",
                    "2": "var2",
                    "9": "flag2"
                }
            },
            "called": [
                "FUN_08004aec",
                "FUN_08004f3c"
            ],
            "calling": [],
            "code": "\nvoid update_flags_080052f0(uint **params)\n\n{\n  char character;\n  uint *ptr;\n  uint value1;\n  uint value2;\n  \n  ptr = *params;\n  value1 = ptr[5];\n  value2 = ptr[1];\n  if (((value1 & 0x10100) != 0) && ((value2 & 0x100) != 0)) {\n    params[0x10] = (uint *)((uint)params[0x10] | 1);\n    ptr[5] = 0xfffffeff;\n    **params = **params | 0x8000;\n  }\n  if (((value1 & 0x10200) != 0) && ((value2 & 0x100) != 0)) {\n    params[0x10] = (uint *)((uint)params[0x10] | 2);\n    (*params)[5] = 0xfffffdff;\n  }\n  if (((value1 & 0x10400) != 0) && ((value2 & 0x100) != 0)) {\n    character = *(char *)((int)params + 0x3d);\n    if (((*(char *)((int)params + 0x3e) == ' ') && (*(short *)((int)params + 0x2a) == 0)) &&\n       (((character == '!' || (character == ')')) || ((character == '(' && (params[0xc] == (uint *)0x21)))))) {\n      FUN_08004aec(params);\n    }\n    else {\n      params[0x10] = (uint *)((uint)params[0x10] | 4);\n      if (*(char *)((int)params + 0x3e) == '\\x10') {\n        **params = **params | 0x200;\n      }\n      (*params)[5] = 0xfffffbff;\n    }\n  }\n  if (((value1 & 0x10800) != 0) && ((value2 & 0x100) != 0)) {\n    params[0x10] = (uint *)((uint)params[0x10] | 8);\n    (*params)[5] = 0xfffff7ff;\n  }\n  if (params[0x10] != (uint *)0x0) {\n    FUN_08004f3c(params);\n  }\n  return;\n}\n\n",
            "current_name": "update_flags_080052f0",
            "entrypoint": "0x080052f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080052f0": "update_flags_080052f0",
                "cVar1": "character",
                "param_1": "params",
                "puVar2": "ptr",
                "uVar3": "value1",
                "uVar4": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800542a": {
            "additional_data": {
                "*(undefined *)(param_1 + 0x3d)": {
                    "1": "value_at_offset_0x3d",
                    "2": "value",
                    "7": "byte_value"
                },
                "*undefined": {
                    "1": "value"
                },
                "0x3d": {
                    "1": "offset"
                },
                "<original_variable_name_1>": {
                    "1": "<new_variable_name_1>"
                },
                "FUN_0800542a": {
                    "1": "extract_byte_from_offset",
                    "2": "get_byte_at_offset",
                    "6": "get_value_from_offset",
                    "9": "get_byte_from_offset"
                },
                "param_1": {
                    "1": "pointer_address",
                    "15": "offset",
                    "3": "address",
                    "4": "memory_address",
                    "6": "base_address"
                }
            },
            "called": [],
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "code": "\nundefined get_byte_from_offset_0800542a(int offset)\n\n{\n  return *(undefined *)(offset + 0x3d);\n}\n\n",
            "current_name": "get_byte_from_offset_0800542a",
            "entrypoint": "0x0800542a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800542a": "get_byte_from_offset_0800542a",
                "param_1": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005430": {
            "additional_data": {
                "* (param_1 + 0x40)": {
                    "1": "value_at_offset"
                },
                "*(*(ptr + 0x40))": {
                    "1": "value"
                },
                "*(undefined4 *)(param_1 + 0x40)": {
                    "1": "memory_value",
                    "2": "parameter_value",
                    "3": "value"
                },
                "0x40": {
                    "1": "offset_value"
                },
                "DAT_": {
                    "2": ""
                },
                "DAT_XXXX": {
                    "1": "dat_xxxx"
                },
                "FUN_08005430": {
                    "1": "get_param_value",
                    "11": "get_value_from_offset",
                    "2": "get_parameter_value",
                    "3": "get_pointer_value",
                    "4": "get_value_at_offset"
                },
                "PTR_": {
                    "2": ""
                },
                "PTR_XXXX": {
                    "1": "ptr_xxxx"
                },
                "param_1": {
                    "1": "memory_location",
                    "10": "base_address",
                    "3": "address",
                    "4": "memory_address",
                    "6": "offset"
                },
                "param_1 + 0x40": {
                    "1": "value_address"
                },
                "return_value": {
                    "1": "value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "code": "\nundefined4 get_value_from_offset_08005430(int base_address)\n\n{\n  return *(undefined4 *)(base_address + 0x40);\n}\n\n",
            "current_name": "get_value_from_offset_08005430",
            "entrypoint": "0x08005430",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005430": "get_value_from_offset_08005430",
                "param_1": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005434": {
            "additional_data": {
                "FUN_08005434": {
                    "1": "delay_milliseconds",
                    "17": "calculate_iterations",
                    "9": "calculate_delay"
                },
                "bVar1": {
                    "1": "is_not_zero"
                },
                "local_4": {
                    "1": "estimated_iterations",
                    "3": "calculated_value",
                    "4": "result"
                },
                "param_1": {
                    "1": "milliseconds",
                    "25": "input_value",
                    "4": "input"
                }
            },
            "called": [],
            "calling": [
                "FUN_08005460"
            ],
            "code": "\nvoid calculate_iterations_08005434(int input_value)\n\n{\n  bool continue_loop;\n  int delay;\n  \n  delay = input_value * (DAT_20000018 / 8000);\n  do {\n    continue_loop = delay != 0;\n    delay = delay + -1;\n  } while (continue_loop);\n  return;\n}\n\n",
            "current_name": "calculate_iterations_08005434",
            "entrypoint": "0x08005434",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005434": "calculate_iterations_08005434",
                "bVar1": "continue_loop",
                "local_4": "delay",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005460": {
            "additional_data": {
                "FUN_08003760": {
                    "1": "get_tick_count",
                    "2": "get_time_elapsed",
                    "3": "get_current_time"
                },
                "FUN_08005434": {
                    "1": "process_flag_change",
                    "5": "set_flag"
                },
                "FUN_08005460": {
                    "1": "check_flags",
                    "2": "check_status",
                    "7": "process_flags"
                },
                "_DAT_40007000": {
                    "1": "register_value_4"
                },
                "_DAT_40021000": {
                    "1": "control_register2",
                    "5": "register2"
                },
                "_DAT_40021004": {
                    "1": "register_value",
                    "4": "register1"
                },
                "_DAT_4002101c": {
                    "1": "register6",
                    "2": "register5"
                },
                "_DAT_40021020": {
                    "1": "register_value_5",
                    "2": "register8"
                },
                "_DAT_40021024": {
                    "1": "flag2",
                    "2": "register6"
                },
                "_DAT_42420000": {
                    "1": "flag2",
                    "2": "register3"
                },
                "_DAT_42420060": {
                    "1": "variable_2",
                    "2": "register9"
                },
                "_DAT_42420480": {
                    "1": "flag3",
                    "2": "register5"
                },
                "bVar5": {
                    "1": "is_set",
                    "16": "flag",
                    "3": "is_condition_met",
                    "7": "is_flag_set"
                },
                "iVar1": {
                    "1": "time_start",
                    "13": "start_time",
                    "2": "start_value",
                    "3": "counter1",
                    "6": "initial_value"
                },
                "iVar2": {
                    "1": "current_iteration_value",
                    "12": "current_time",
                    "3": "counter2",
                    "4": "current_value"
                },
                "param_1": {
                    "1": "input_data",
                    "11": "flags",
                    "2": "status_flags",
                    "3": "input_params",
                    "4": "param",
                    "5": "parameters"
                },
                "uVar3": {
                    "1": "return_val",
                    "21": "result",
                    "4": "return_value"
                },
                "uVar4": {
                    "1": "option_value",
                    "13": "value",
                    "2": "temp",
                    "3": "param1_value"
                }
            },
            "called": [
                "FUN_08005434",
                "FUN_08003760"
            ],
            "calling": [
                "FUN_080035b8"
            ],
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 process_flags_08005460(uint *flags)\n\n{\n  int start_time;\n  int current_time;\n  undefined4 result;\n  uint value;\n  bool flag;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (flags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      value = flags[1];\n      if (value == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (value == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (value == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (flags[1] == 0) {\n        start_time = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          current_time = FUN_08003760();\n          if (100 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        start_time = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          current_time = FUN_08003760();\n          if (100 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (flags[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n    else if (flags[4] == 0) {\n      _DAT_42420000 = 0;\n      start_time = FUN_08003760();\n      while ((_DAT_40021000 & 2) != 0) {\n        current_time = FUN_08003760();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      start_time = FUN_08003760();\n      while ((_DAT_40021000 & 2) == 0) {\n        current_time = FUN_08003760();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[6] == 0) {\n      _DAT_42420480 = 0;\n      start_time = FUN_08003760();\n      while ((_DAT_40021024 & 2) != 0) {\n        current_time = FUN_08003760();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      start_time = FUN_08003760();\n      while ((_DAT_40021024 & 2) == 0) {\n        current_time = FUN_08003760();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n      FUN_08005434(1);\n    }\n  }\n  if ((*flags & 4) != 0) {\n    flag = (_DAT_4002101c & 0x10000000) == 0;\n    if (flag) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      start_time = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        current_time = FUN_08003760();\n        if (100 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    value = flags[3];\n    if (value == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (value == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (value == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (flags[3] == 0) {\n      start_time = FUN_08003760();\n      while ((_DAT_40021020 & 2) != 0) {\n        current_time = FUN_08003760();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      start_time = FUN_08003760();\n      while ((_DAT_40021020 & 2) == 0) {\n        current_time = FUN_08003760();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    if (flag) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (flags[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (flags[7] == 2) {\n    _DAT_42420060 = 0;\n    start_time = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (flags[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | flags[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | flags[8] | flags[9];\n        _DAT_42420060 = 1;\n        start_time = FUN_08003760();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          current_time = FUN_08003760();\n        } while ((uint)(current_time - start_time) < 3);\n        return 3;\n      }\n      current_time = FUN_08003760();\n    } while ((uint)(current_time - start_time) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    start_time = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      current_time = FUN_08003760();\n    } while ((uint)(current_time - start_time) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "current_name": "process_flags_08005460",
            "entrypoint": "0x08005460",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005460": "process_flags_08005460",
                "bVar5": "flag",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "flags",
                "uVar3": "result",
                "uVar4": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005840": {
            "additional_data": {
                "FUN_08005840": {
                    "1": "calculate_processing_time",
                    "14": "calculate_delay",
                    "2": "calculate_value",
                    "4": "calculate_time_delay",
                    "5": "calculate_execution_time"
                },
                "PTR__VAR_4": {
                    "1": "temp1"
                },
                "PTR__VAR_8": {
                    "1": "temp2"
                },
                "_DAT_40021004": {
                    "1": "input_data",
                    "2": "data_value",
                    "5": "register_value"
                },
                "local_1c": {
                    "1": "execution_time_overflow",
                    "2": "multiplier",
                    "4": "counter",
                    "7": "input_value"
                },
                "uStack_10": {
                    "1": "delay_parameter4",
                    "2": "value3",
                    "3": "data3",
                    "4": "multiplier2",
                    "5": "constant3"
                },
                "uStack_14": {
                    "1": "constant3",
                    "2": "value2",
                    "3": "data2",
                    "4": "multiplier1",
                    "5": "constant2"
                },
                "uStack_18": {
                    "1": "shifted_data_value",
                    "2": "offset",
                    "3": "data1",
                    "5": "constant1"
                },
                "uStack_c": {
                    "1": "constant3",
                    "2": "value4",
                    "3": "data4",
                    "5": "constant"
                },
                "uVar1": {
                    "1": "execution_time",
                    "2": "result",
                    "3": "time_delay",
                    "4": "delay"
                }
            },
            "called": [],
            "calling": [
                "FUN_080058d2"
            ],
            "code": "\n\n\nuint calculate_delay_08005840(void)\n\n{\n  uint delay;\n  undefined2 input_value;\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant;\n  \n  constant = 0x10100f0e;\n  constant3 = 0xd0c0b0a;\n  constant2 = 0x9080706;\n  constant1 = 0x5040302;\n  input_value = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    delay = (uint)*(byte *)((int)&constant1 + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      delay = delay * 4000000;\n    }\n    else {\n      delay = (delay * 8000000) /\n              (uint)*(byte *)((int)&input_value - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    delay = 8000000;\n  }\n  return delay;\n}\n\n",
            "current_name": "calculate_delay_08005840",
            "entrypoint": "0x08005840",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005840": "calculate_delay_08005840",
                "local_1c": "input_value",
                "uStack_10": "constant3",
                "uStack_14": "constant2",
                "uStack_18": "constant1",
                "uStack_c": "constant",
                "uVar1": "delay"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080058ac": {
            "additional_data": {
                "&DAT_0800a944": {
                    "1": "table"
                },
                "0xf": {
                    "1": "value_mask"
                },
                "DAT_0800a944": {
                    "1": "bit_mask",
                    "2": "lookup_table"
                },
                "DAT_20000018": {
                    "1": "checksum",
                    "6": "result"
                },
                "DAT_40021000": {
                    "1": "communication_config"
                },
                "DAT_40021004": {
                    "1": "memory_control"
                },
                "DAT_40022000": {
                    "1": "memory_info"
                },
                "FUN_080036d8": {
                    "1": "set_display"
                },
                "FUN_08003760": {
                    "1": "calculate_time_difference",
                    "2": "get_current_time",
                    "4": "get_time"
                },
                "FUN_08005840": {
                    "1": "perform_initialization",
                    "3": "calculate_value"
                },
                "FUN_080058ac": {
                    "1": "resize_memory_block",
                    "2": "initialize_system",
                    "4": "update_configuration",
                    "7": "process_data"
                },
                "_DAT_40021004": {
                    "1": "global_variable2",
                    "2": "status_register",
                    "3": "status",
                    "4": "control_register"
                },
                "_DAT_40022000": {
                    "1": "global_variable1",
                    "2": "max_value"
                },
                "iVar1": {
                    "1": "initial_interval",
                    "12": "start_time",
                    "3": "start",
                    "4": "initial_time"
                },
                "iVar2": {
                    "1": "temp_variable3",
                    "18": "current_time",
                    "3": "current_value"
                },
                "param_1": {
                    "1": "configuration",
                    "2": "data_config",
                    "3": "data_array",
                    "7": "data"
                },
                "param_2": {
                    "1": "new_size",
                    "2": "length",
                    "8": "size"
                },
                "uVar3": {
                    "1": "option_value",
                    "3": "temp_value",
                    "4": "result",
                    "5": "value",
                    "7": "status"
                }
            },
            "called": [
                "FUN_080058d2"
            ],
            "calling": [
                "FUN_080035b8"
            ],
            "code": "\n\n\nundefined4 process_data_080058ac(uint *data,uint size)\n\n{\n  int start_time;\n  int current_time;\n  uint status;\n  \n  if ((_DAT_40022000 & 7) < size) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | size;\n    if (size != (size & 7)) {\n      return 1;\n    }\n  }\n  if ((*data & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | data[2];\n  }\n  if ((*data & 1) != 0) {\n    status = data[1];\n    if (status == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((status != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = status | _DAT_40021004 & 0xfffffffc;\n    start_time = FUN_08003760();\n    if (data[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        current_time = FUN_08003760();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else if (data[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        current_time = FUN_08003760();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        current_time = FUN_08003760();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (size < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | size;\n    if (size != (size & 7)) {\n      return 1;\n    }\n  }\n  if ((*data & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | data[3];\n  }\n  if ((*data & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | data[4] << 3;\n  }\n  status = FUN_08005840();\n  DAT_20000018 = status >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "current_name": "process_data_080058ac",
            "entrypoint": "0x080058ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080058ac": "process_data_080058ac",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "data",
                "param_2": "size",
                "uVar3": "status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080058d2": {
            "additional_data": {
                "&DAT_0800a944": {
                    "1": "shift_table"
                },
                "(_DAT_40021000 & 0x20000) == 0": {
                    "1": "check1"
                },
                "(_DAT_40021004 << 0x18) >> 0x1c": {
                    "1": "shifted_value"
                },
                "(register1 << 0x18) >> 0x1c": {
                    "1": "shifted_register1"
                },
                "5000": {
                    "1": "timeout_limit"
                },
                "DAT_0800a944": {
                    "1": "execution_time_map"
                },
                "DAT_20000018": {
                    "1": "data_result",
                    "8": "result"
                },
                "FUC_08003760": {
                    "1": "get_current_time"
                },
                "FUN_080036d8": {
                    "1": "set_flags",
                    "5": "set_mode"
                },
                "FUN_080036d8(0xf)": {
                    "1": "set_mode(0xf)"
                },
                "FUN_08003760": {
                    "1": "get_timer",
                    "2": "get_time_elapsed",
                    "7": "get_elapsed_time",
                    "8": "get_current_time"
                },
                "FUN_08005840": {
                    "1": "get_device_data",
                    "2": "calculate_value",
                    "3": "get_data"
                },
                "FUN_08005840()": {
                    "1": "calculate_value()"
                },
                "FUN_080058d2": {
                    "1": "improve_code",
                    "2": "process_flags",
                    "6": "update_configuration"
                },
                "F_DECODE": {
                    "1": "decode_binary_function"
                },
                "_DAT_40021000": {
                    "1": "register2",
                    "2": "register_flags"
                },
                "_DAT_40021004": {
                    "1": "settings",
                    "2": "register_value"
                },
                "_DAT_40021004 & 0xc": {
                    "1": "register1_check1"
                },
                "_DAT_40021004 & 0xc) != 0": {
                    "1": "register1_check4"
                },
                "_DAT_40021004 & 0xc) != 4": {
                    "1": "register1_check2"
                },
                "_DAT_40021004 & 0xc) != 8": {
                    "1": "register1_check3"
                },
                "_DAT_40021004 & 0xffffc7ff": {
                    "1": "register1_modified4"
                },
                "_DAT_40021004 & 0xfffff8ff": {
                    "1": "register1_modified3"
                },
                "_DAT_40021004 & 0xffffff0f": {
                    "1": "register1_modified1"
                },
                "_DAT_40021004 | 0xfffffffc": {
                    "1": "register1_modified2"
                },
                "_DAT_40022000": {
                    "1": "device_register2",
                    "2": "register_3"
                },
                "_DAT_40022000 & 0xfffffff8 | param_2": {
                    "1": "register3_modified"
                },
                "empty_VARIABLE_NAME": {
                    "1": "status"
                },
                "iVar1": {
                    "1": "start",
                    "13": "start_time",
                    "3": "initial_value",
                    "4": "start_value",
                    "7": "initial_time"
                },
                "iVar2": {
                    "1": "current",
                    "19": "current_time",
                    "7": "current_value"
                },
                "param_1": {
                    "1": "settings_flags",
                    "18": "flags",
                    "6": "config_flags"
                },
                "param_1[1]": {
                    "1": "flag1"
                },
                "param_1[1] == 1": {
                    "1": "check_flag1"
                },
                "param_1[1] == 2": {
                    "1": "check_flag2"
                },
                "param_1[2]": {
                    "1": "flag2"
                },
                "param_1[3]": {
                    "1": "flag3"
                },
                "param_1[4] << 3": {
                    "1": "shifted_flag4"
                },
                "param_2": {
                    "1": "param",
                    "2": "limit",
                    "21": "value"
                },
                "param_2 & 7": {
                    "1": "masked_value"
                },
                "param_2 < (register3 & 7)": {
                    "1": "check2"
                },
                "return 0": {
                    "1": "return_code3"
                },
                "return 1": {
                    "1": "return_code1"
                },
                "return 3": {
                    "1": "return_code2"
                },
                "uVar3": {
                    "1": "mode",
                    "10": "result",
                    "3": "flag_value",
                    "4": "status"
                }
            },
            "called": [
                "FUN_080036d8",
                "FUN_08003760",
                "FUN_08005840"
            ],
            "calling": [
                "FUN_080058ac"
            ],
            "code": "\n\n\nundefined4 update_configuration_080058d2(uint *flags,uint value)\n\n{\n  int start_time;\n  int current_time;\n  uint result;\n  \n  if ((*flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | flag2;\n  }\n  if ((*flags & 1) != 0) {\n    result = flag1;\n    if (result == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((result != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = result | _DAT_40021004 & 0xfffffffc;\n    start_time = FUN_08003760();\n    if (flag1 == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        current_time = FUN_08003760();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else if (flag1 == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        current_time = FUN_08003760();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        current_time = FUN_08003760();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (value < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | value;\n    if (value != (value & 7)) {\n      return 1;\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | flag3;\n  }\n  if ((*flags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | flags[4] << 3;\n  }\n  result = FUN_08005840();\n  DAT_20000018 = result >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "current_name": "update_configuration_080058d2",
            "entrypoint": "0x080058d2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080058d2": "update_configuration_080058d2",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "flags",
                "param_1[1]": "flag1",
                "param_1[2]": "flag2",
                "param_1[3]": "flag3",
                "param_2": "value",
                "uVar3": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a1c": {
            "additional_data": {
                "DAC_20000018": {
                    "1": "data"
                },
                "DAT_20000018": {
                    "1": "data_offset",
                    "2": "global_variable",
                    "4": "data_value",
                    "7": "data"
                },
                "FUN_08005a1c": {
                    "1": "get_constant_value",
                    "11": "get_data",
                    "2": "get_global_variable",
                    "3": "get_dat_value",
                    "8": "get_data_value"
                },
                "undefined4": {
                    "1": "uint32_t"
                }
            },
            "called": [],
            "calling": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080035b8"
            ],
            "code": "\nuint32_t get_data_08005a1c(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "current_name": "get_data_08005a1c",
            "entrypoint": "0x08005a1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a1c": "get_data_08005a1c",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a28": {
            "additional_data": {
                "&DAT_0800a954": {
                    "1": "shift_table",
                    "3": "shift_array"
                },
                "DAT_0800a954": {
                    "1": "shift_amount"
                },
                "FUN_08005a1c": {
                    "1": "get_value_from_sub_function",
                    "10": "get_value",
                    "2": "get_unsigned_value",
                    "5": "get_initial_value"
                },
                "FUN_08005a28": {
                    "1": "extracted_value_shift",
                    "2": "shifted_return_value",
                    "4": "shifted_result",
                    "5": "shift_and_return_result"
                },
                "_DAT_40021004": {
                    "1": "value_offset",
                    "2": "shift_value",
                    "4": "input_value"
                },
                "uVar1": {
                    "1": "unsigned_value",
                    "5": "result"
                }
            },
            "called": [
                "FUN_08005a1c"
            ],
            "calling": [
                "FUN_080045c0",
                "FUN_08006538",
                "FUN_080075dc"
            ],
            "code": "\n\n\nuint shift_and_return_result_08005a28(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a1c();\n  return result >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "current_name": "shift_and_return_result_08005a28",
            "entrypoint": "0x08005a28",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a28": "shift_and_return_result_08005a28",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a48": {
            "additional_data": {
                "&DAT_0800a954": {
                    "1": "shift_count",
                    "2": "shift_amount"
                },
                "DAT_0800a954": {
                    "1": "bit_shift_table",
                    "2": "shift_table"
                },
                "FUN_08005a1c": {
                    "1": "get_value_from_sub_function",
                    "2": "get_data",
                    "4": "get_original_value",
                    "5": "get_initial_value"
                },
                "FUN_08005a48": {
                    "1": "shifted_right_value",
                    "2": "shift_and_return",
                    "4": "get_shifted_value",
                    "7": "shifted_result"
                },
                "_DAT_40021004": {
                    "1": "binary_value",
                    "9": "input_value"
                },
                "uVar1": {
                    "1": "retrieved_value",
                    "5": "result"
                }
            },
            "called": [
                "FUN_08005a1c"
            ],
            "calling": [
                "FUN_08006538",
                "FUN_08005bb8",
                "FUN_080075dc"
            ],
            "code": "\n\n\nuint shifted_result_08005a48(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a1c();\n  return result >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "current_name": "shifted_result_08005a48",
            "entrypoint": "0x08005a48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a48": "shifted_result_08005a48",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a68": {
            "additional_data": {
                "*param_1": {
                    "1": "output_array[0]"
                },
                "*param_2": {
                    "1": "input_array[0]"
                },
                "FUN_08005a68": {
                    "1": "set_values",
                    "2": "initialize_values",
                    "3": "set_parameters",
                    "5": "initialize_data",
                    "8": "initialize_params",
                    "9": "initialize_parameters"
                },
                "_DAT_40021004": {
                    "1": "input_data_register1",
                    "2": "data_1",
                    "5": "input_data",
                    "7": "input_value"
                },
                "_DAT_40022000": {
                    "1": "status_value",
                    "2": "data_value"
                },
                "data_array": {
                    "1": "output_data"
                },
                "flags_ptr": {
                    "1": "initialized_flags"
                },
                "inputArray": {
                    "1": "c"
                },
                "outputArray": {
                    "1": "a"
                },
                "output_ptr": {
                    "1": "initialized_value"
                },
                "param_1": {
                    "1": "register_array",
                    "12": "output_array",
                    "2": "output_param",
                    "3": "result"
                },
                "param_1[1]": {
                    "1": "parameter_list[1]",
                    "2": "output_array[1]"
                },
                "param_1[2]": {
                    "1": "permission_flags[2]",
                    "2": "output_array[2]"
                },
                "param_1[3]": {
                    "1": "parameter_list[3]",
                    "2": "output_array[3]"
                },
                "param_1[4]": {
                    "1": "permission_flags[4]",
                    "2": "output_array[4]"
                },
                "param_2": {
                    "1": "status_register",
                    "2": "input_data",
                    "7": "input_array"
                },
                "param_2[0]": {
                    "1": "input_array[0]"
                },
                "someValue": {
                    "1": "b"
                },
                "status_flags": {
                    "1": "flags"
                }
            },
            "called": [],
            "calling": [
                "FUN_080075dc"
            ],
            "code": "\n\n\nvoid initialize_parameters_08005a68(undefined4 *output_array,uint *input_array)\n\n{\n  *output_array = 0xf;\n  output_array[1] = _DAT_40021004 & 3;\n  output_array[2] = _DAT_40021004 & 0xf0;\n  output_array[3] = _DAT_40021004 & 0x700;\n  output_array[4] = _DAT_40021004 >> 3 & 0x700;\n  *input_array = _DAT_40022000 & 7;\n  return;\n}\n\n",
            "current_name": "initialize_parameters_08005a68",
            "entrypoint": "0x08005a68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a68": "initialize_parameters_08005a68",
                "param_1": "output_array",
                "param_1[1]": "output_array[1]",
                "param_1[2]": "output_array[2]",
                "param_1[3]": "output_array[3]",
                "param_1[4]": "output_array[4]",
                "param_2": "input_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005aa4": {
            "additional_data": {
                "*param_1": {
                    "1": "peripheral_config"
                },
                "FUN_08003760": {
                    "1": "get_elapsed_time",
                    "2": "get_random_value"
                },
                "FUN_08005aa4": {
                    "1": "update_flags_and_settings",
                    "2": "update_registers",
                    "3": "configure_device",
                    "6": "update_configuration",
                    "7": "update_settings"
                },
                "_DAT_40007000": {
                    "1": "bitwise_flag2"
                },
                "_DAT_40021004": {
                    "1": "control_address"
                },
                "_DAT_4002101c": {
                    "1": "status_register1"
                },
                "_DAT_40021020": {
                    "1": "status_register",
                    "2": "register2"
                },
                "_DAT_42420440": {
                    "1": "buffer",
                    "2": "temp3"
                },
                "bVar5": {
                    "1": "flag_changed",
                    "11": "is_flag_set",
                    "2": "is_bit_set",
                    "4": "flag"
                },
                "iVar3": {
                    "1": "initial_count",
                    "11": "initial_value",
                    "3": "start",
                    "4": "start_value",
                    "6": "start_time"
                },
                "iVar4": {
                    "1": "loop_var2",
                    "12": "current_value",
                    "2": "current",
                    "6": "current_time"
                },
                "param_1": {
                    "1": "configuration",
                    "2": "hardware_config",
                    "3": "config_params",
                    "5": "config",
                    "8": "settings"
                },
                "uVar1": {
                    "1": "result",
                    "15": "temp_var1",
                    "2": "temp1",
                    "5": "flag1"
                },
                "uVar2": {
                    "1": "flag2_result",
                    "15": "temp_var2",
                    "2": "temp2",
                    "5": "flag2"
                }
            },
            "called": [
                "FUN_08003760"
            ],
            "calling": [
                "FUN_080035b8"
            ],
            "code": "\n\n\nundefined4 update_settings_08005aa4(uint *settings)\n\n{\n  uint temp_var1;\n  uint temp_var2;\n  int initial_value;\n  int current_value;\n  bool is_flag_set;\n  \n  if ((*settings & 1) != 0) {\n    is_flag_set = (_DAT_4002101c & 0x10000000) == 0;\n    if (is_flag_set) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initial_value = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        current_value = FUN_08003760();\n        if (100 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (settings[1] & 0x300))) {\n      temp_var2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      temp_var1 = _DAT_40021020 & 1;\n      _DAT_40021020 = temp_var2;\n      if (temp_var1 != 0) {\n        initial_value = FUN_08003760();\n        while ((_DAT_40021020 & 2) == 0) {\n          current_value = FUN_08003760();\n          if (5000 < (uint)(current_value - initial_value)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | settings[1];\n    if (is_flag_set) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*settings & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | settings[2];\n  }\n  if ((*settings & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | settings[3];\n  }\n  return 0;\n}\n\n",
            "current_name": "update_settings_08005aa4",
            "entrypoint": "0x08005aa4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005aa4": "update_settings_08005aa4",
                "bVar5": "is_flag_set",
                "iVar3": "initial_value",
                "iVar4": "current_value",
                "param_1": "settings",
                "uVar1": "temp_var1",
                "uVar2": "temp_var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005bb8": {
            "additional_data": {
                "*((byte *)&uStack_20 + ((_DAT_40021004 << 10) >> 0x1c))": {
                    "1": "variable6"
                },
                "*(byte *)((int)&local_24 - ((int)(_DAT_40021004 << 0xe) >> 0x1f))": {
                    "1": "variable5"
                },
                "FUN_08005bb8": {
                    "1": "calculate_time_delay",
                    "2": "calculate_something",
                    "3": "calculate_output_value",
                    "4": "calculate_parameter",
                    "5": "calculate_parameter_value",
                    "6": "calculate_value"
                },
                "F_08005bb8": {
                    "1": "calculate_parameter"
                },
                "_DAT_40021000": {
                    "1": "constant2"
                },
                "_DAT_40021004": {
                    "1": "data_1"
                },
                "_DAT_40021020": {
                    "1": "data_3"
                },
                "_DAT_40021024": {
                    "1": "data_4"
                },
                "local_24": {
                    "1": "counter",
                    "2": "variable1",
                    "3": "constant_1",
                    "7": "constant_value"
                },
                "param_1": {
                    "1": "input_param",
                    "16": "input_value",
                    "3": "parameter",
                    "6": "input"
                },
                "uStack_14": {
                    "1": "stack_var4",
                    "2": "variable5",
                    "3": "constant1"
                },
                "uStack_18": {
                    "1": "constant3",
                    "2": "constant4",
                    "3": "constant2"
                },
                "uStack_1c": {
                    "1": "variable2",
                    "2": "constant_value3",
                    "5": "constant3"
                },
                "uStack_20": {
                    "1": "variable1",
                    "2": "variable2",
                    "3": "constant4"
                },
                "uVar1": {
                    "1": "time_delay",
                    "2": "delay",
                    "20": "result",
                    "4": "output_value"
                }
            },
            "called": [
                "FUN_08005a48"
            ],
            "calling": [
                "FUN_0800376c",
                "FUN_08003e20"
            ],
            "code": "\n\n\nuint calculate_value_08005bb8(int input_value)\n\n{\n  uint result;\n  undefined2 constant_value;\n  undefined4 stack_value1;\n  undefined4 constant3;\n  undefined4 constant2;\n  undefined4 constant1;\n  \n  constant1 = 0x10100f0e;\n  constant2 = 0xd0c0b0a;\n  constant3 = 0x9080706;\n  stack_value1 = 0x5040302;\n  constant_value = 0x201;\n  if (input_value == 2) {\n    result = FUN_08005a48();\n    result = result / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (input_value == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      result = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        result = 4000000;\n      }\n      else {\n        result = 8000000 / *(byte *)((int)&constant_value - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      result = result * *(byte *)((int)&stack_value1 + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        result = (result * 2) / 3;\n      }\n    }\n  }\n  else if (input_value == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      result = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      result = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        result = 0;\n      }\n      else {\n        result = 0xf424;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_value_08005bb8",
            "entrypoint": "0x08005bb8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005bb8": "calculate_value_08005bb8",
                "local_24": "constant_value",
                "param_1": "input_value",
                "uStack_14": "constant1",
                "uStack_18": "constant2",
                "uStack_1c": "constant3",
                "uStack_20": "stack_value1",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005cb4": {
            "additional_data": {
                "(*param_1)": {
                    "1": "data_value1"
                },
                "(*param_1)[1]": {
                    "1": "second_pointer",
                    "2": "second_element"
                },
                "(int)param_1": {
                    "1": "data_address"
                },
                "(int)param_1 + 0x11": {
                    "3": "offset"
                },
                "*(undefined *)((int)dataPointer + 0x11)": {
                    "1": "status"
                },
                "*(undefined *)((int)param_1 + 0x11)": {
                    "1": "flag_value"
                },
                "**param_1": {
                    "1": "input_value",
                    "2": "data"
                },
                "*_DAT_40010414": {
                    "1": "memory_size"
                },
                "*param_1": {
                    "1": "memory_value"
                },
                "DAT_40010414": {
                    "1": "constant_value"
                },
                "FUN_08005cb4": {
                    "1": "perform_initialization",
                    "15": "initialize_data",
                    "7": "initialize_memory"
                },
                "FUN_080073c0": {
                    "1": "perform_additional_tasks",
                    "2": "perform_action",
                    "3": "reset_flags",
                    "5": "perform_cleanup"
                },
                "PTR_08005cb4": {
                    "1": "pointer_to_function"
                },
                "_DAT_40010414": {
                    "1": "memory_base_address",
                    "2": "memory_address",
                    "3": "constant_value"
                },
                "param_1": {
                    "1": "parameter",
                    "2": "input_data",
                    "6": "data",
                    "8": "data_pointer"
                }
            },
            "called": [
                "FUN_080073c0"
            ],
            "calling": [],
            "code": "\n\n\nvoid initialize_data_08005cb4(uint **data_pointer)\n\n{\n  if (((**data_pointer & 2) != 0) && (((*data_pointer)[1] & 2) != 0)) {\n    FUN_080073c0();\n    (*data_pointer)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)(pointer_int_value + 0x11) = 1;\n  return;\n}\n\n",
            "current_name": "initialize_data_08005cb4",
            "entrypoint": "0x08005cb4",
            "imported": false,
            "improved": true,
            "renaming": {
                "(int)param_1": "pointer_int_value",
                "FUN_08005cb4": "initialize_data_08005cb4",
                "param_1": "data_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005cec": {
            "additional_data": {
                "0x18": {
                    "1": "flag2"
                },
                "0x20": {
                    "1": "state_flag_address"
                },
                "0x34": {
                    "1": "data_address"
                },
                "0x4": {
                    "1": "old_flags2_value"
                },
                "0x40012c00": {
                    "1": "constant_value"
                },
                "0xfffffcff": {
                    "1": "clear_bit5"
                },
                "0xffffff8c": {
                    "1": "info_mask"
                },
                "0xfffffff7": {
                    "1": "clear_bit_3"
                },
                "0xfffffffb": {
                    "1": "clear_bit4"
                },
                "0xfffffffd": {
                    "1": "clear_bit_1"
                },
                "0xfffffffe": {
                    "1": "clear_bit_0"
                },
                "FUN_08005cec": {
                    "1": "update_memory_values",
                    "3": "update_param_values",
                    "4": "update_flags_and_values",
                    "5": "update_parameters",
                    "7": "update_data"
                },
                "param_1": {
                    "1": "param_addr",
                    "11": "base_address",
                    "2": "data_address",
                    "5": "address"
                },
                "param_2": {
                    "1": "new_data",
                    "2": "input_data",
                    "3": "parameters",
                    "4": "param_values",
                    "5": "values"
                },
                "param_2[1]": {
                    "1": "values_index1"
                },
                "param_2[2]": {
                    "1": "values_index2"
                },
                "param_2[3]": {
                    "1": "values_index3"
                },
                "param_2[5]": {
                    "1": "values_index5"
                },
                "param_2[6]": {
                    "1": "values_index6"
                },
                "uVar1": {
                    "1": "updated_config1",
                    "15": "updated_value1",
                    "2": "modified_flag",
                    "3": "updated_var1"
                },
                "uVar2": {
                    "1": "new_flags2",
                    "15": "updated_value2",
                    "2": "updated_data2",
                    "3": "updated_var2"
                },
                "uVar3": {
                    "1": "updated_data3",
                    "13": "updated_value3",
                    "3": "updated_var3",
                    "5": "new_value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "code": "\nvoid update_data_08005cec(int base_address,uint *values)\n\n{\n  uint updated_value1;\n  uint updated_value2;\n  uint updated_value3;\n  \n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xfffffffe;\n  updated_value2 = *(uint *)(base_address + 4);\n  updated_value3 = *values;\n  updated_value1 = *(uint *)(base_address + 0x20) & 0xfffffffd | values_index2;\n  if (base_address == 0x40012c00) {\n    updated_value1 = (updated_value1 & 0xfffffff7 | values_index3) & 0xfffffffb;\n    updated_value2 = updated_value2 & 0xfffffcff | values_index5 | values_index6;\n  }\n  *(uint *)(base_address + 4) = updated_value2;\n  *(uint *)(base_address + 0x18) = *(uint *)(base_address + 0x18) & 0xffffff8c | updated_value3;\n  *(uint *)(base_address + 0x34) = values_index1;\n  *(uint *)(base_address + 0x20) = updated_value1;\n  return;\n}\n\n",
            "current_name": "update_data_08005cec",
            "entrypoint": "0x08005cec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005cec": "update_data_08005cec",
                "param_1": "base_address",
                "param_2": "values",
                "param_2[1]": "values_index1",
                "param_2[2]": "values_index2",
                "param_2[3]": "values_index3",
                "param_2[5]": "values_index5",
                "param_2[6]": "values_index6",
                "uVar1": "updated_value1",
                "uVar2": "updated_value2",
                "uVar3": "updated_value3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005d48": {
            "additional_data": {
                "0x1c": {
                    "1": "offset2"
                },
                "0x20": {
                    "1": "offset1"
                },
                "0x3c": {
                    "1": "offset3"
                },
                "FUN_08005d48": {
                    "1": "update_register_values",
                    "10": "update_parameters",
                    "2": "update_values",
                    "3": "update_params",
                    "4": "update_data"
                },
                "param_1": {
                    "1": "param_base_address",
                    "2": "data_pointer",
                    "3": "data_address",
                    "4": "param_address",
                    "9": "base_address"
                },
                "param_2": {
                    "1": "input_array",
                    "2": "input_data",
                    "3": "register_values",
                    "4": "param_values",
                    "6": "parameters"
                },
                "uVar1": {
                    "1": "updated_bitmask1",
                    "12": "updated_value1",
                    "2": "modified_flag",
                    "5": "updated_var1"
                },
                "uVar2": {
                    "1": "var2",
                    "12": "updated_value2",
                    "2": "updated_value_2",
                    "5": "updated_var2"
                },
                "uVar3": {
                    "1": "value2",
                    "12": "updated_value3",
                    "2": "new_value",
                    "5": "updated_var3"
                }
            },
            "called": [],
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "code": "\nvoid update_parameters_08005d48(int base_address,uint *parameters)\n\n{\n  uint updated_value1;\n  uint updated_value2;\n  uint updated_value3;\n  \n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xfffffeff;\n  updated_value2 = *(uint *)(base_address + 4);\n  updated_value3 = *parameters;\n  updated_value1 = *(uint *)(base_address + 0x20) & 0xfffffdff | parameters[2] << 8;\n  if (base_address == 0x40012c00) {\n    updated_value1 = (updated_value1 & 0xfffff7ff | parameters[3] << 8) & 0xfffffbff;\n    updated_value2 = updated_value2 & 0xffffcfff | parameters[5] << 4 | parameters[6] << 4;\n  }\n  *(uint *)(base_address + 4) = updated_value2;\n  *(uint *)(base_address + 0x1c) = *(uint *)(base_address + 0x1c) & 0xffffff8c | updated_value3;\n  *(uint *)(base_address + 0x3c) = parameters[1];\n  *(uint *)(base_address + 0x20) = updated_value1;\n  return;\n}\n\n",
            "current_name": "update_parameters_08005d48",
            "entrypoint": "0x08005d48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005d48": "update_parameters_08005d48",
                "param_1": "base_address",
                "param_2": "parameters",
                "uVar1": "updated_value1",
                "uVar2": "updated_value2",
                "uVar3": "updated_value3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005dac": {
            "additional_data": {
                "FUN_08005dac": {
                    "1": "update_memory_values",
                    "2": "update_configuration",
                    "3": "set_flags_and_values",
                    "4": "update_params",
                    "6": "update_parameters"
                },
                "baseAddr": {
                    "1": "base_addr"
                },
                "baseValue": {
                    "1": "base_value"
                },
                "iVar2": {
                    "1": "first_param",
                    "2": "param2_value1",
                    "3": "param2_value",
                    "5": "value1",
                    "7": "value2"
                },
                "iVar3": {
                    "1": "updated_var3",
                    "2": "param_value3",
                    "3": "param2_value2",
                    "5": "value2",
                    "7": "value3"
                },
                "param2Value1": {
                    "1": "param2_value1"
                },
                "param2Value2": {
                    "1": "param2_value2"
                },
                "param_1": {
                    "1": "param_base_address",
                    "10": "base_address",
                    "2": "param1",
                    "4": "memory_address",
                    "5": "data_address"
                },
                "param_2": {
                    "1": "params_ptr",
                    "2": "params_array",
                    "4": "values",
                    "5": "param_array",
                    "7": "parameters"
                },
                "params": {
                    "1": "params"
                },
                "uVar1": {
                    "1": "updated_value",
                    "2": "current_value",
                    "3": "old_value",
                    "7": "value1"
                }
            },
            "called": [],
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "code": "\nvoid update_data_08005dac(int base_address,int *parameters)\n\n{\n  uint value1;\n  int value2;\n  int value3;\n  \n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xffffefff;\n  value1 = *(uint *)(base_address + 4);\n  value2 = *parameters;\n  value3 = parameters[2];\n  if (base_address == 0x40012c00) {\n    value1 = value1 & 0xffffbfff | parameters[5] << 6;\n  }\n  *(uint *)(base_address + 4) = value1;\n  *(uint *)(base_address + 0x1c) = *(uint *)(base_address + 0x1c) & 0xffff8cff | value2 << 8;\n  *(int *)(base_address + 0x40) = parameters[1];\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xffffdfff | value3 << 0xc;\n  return;\n}\n\n",
            "current_name": "update_data_08005dac",
            "entrypoint": "0x08005dac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005dac": "update_data_08005dac",
                "iVar2": "value2",
                "iVar3": "value3",
                "param_1": "base_address",
                "param_2": "parameters",
                "uVar1": "value1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005df4": {
            "additional_data": {
                "*(undefined *)((int)param_1 + 0x3d)": {
                    "1": "flag"
                },
                "*(undefined *)(param_1 + 0xf)": {
                    "1": "null_flag"
                },
                "*puVar1": {
                    "1": "val"
                },
                "FUN_08005df4": {
                    "1": "update_parameters",
                    "10": "update_data",
                    "2": "update_flag_and_call_function",
                    "3": "update_parameter"
                },
                "FUN_08007710": {
                    "1": "perform_additional_operations",
                    "2": "execute_function",
                    "3": "perform_operation",
                    "5": "call_sub_function",
                    "7": "process_data"
                },
                "param_1": {
                    "1": "input_data",
                    "2": "parameter",
                    "5": "param",
                    "9": "data"
                },
                "puVar1": {
                    "1": "pointer_to_param1",
                    "2": "current_data",
                    "8": "ptr",
                    "9": "pointer"
                }
            },
            "called": [
                "FUN_08007710"
            ],
            "calling": [
                "FUN_080076e0"
            ],
            "code": "\nvoid update_data_08005df4(uint **data)\n\n{\n  uint *pointer;\n  \n  *(undefined *)((int)data + 0x3d) = 2;\n  pointer = *data;\n  if ((pointer[8] & 0x1111) == 0) {\n    if ((pointer[8] & 0x444) == 0) {\n      *pointer = *pointer & 0xfffffffe;\n    }\n  }\n  FUN_08007710(data);\n  *(undefined *)((int)data + 0x3d) = 0;\n  *(undefined *)(data + 0xf) = 0;\n  return;\n}\n\n",
            "current_name": "update_data_08005df4",
            "entrypoint": "0x08005df4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005df4": "update_data_08005df4",
                "param_1": "data",
                "puVar1": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005e2e": {
            "additional_data": {
                "*(undefined *)((int)param_1 + 0x3d)": {
                    "1": "updated_value"
                },
                "*(undefined *)(param_1 + 0xf)": {
                    "1": "flag2"
                },
                "FUN_08005e2e": {
                    "1": "set_and_clear_flags",
                    "2": "set_flag_and_check",
                    "3": "update_flags_and_call_function",
                    "6": "update_data"
                },
                "FUN_08007110": {
                    "1": "finalize_changes",
                    "2": "process_param",
                    "3": "execute_sub_function",
                    "4": "process_data",
                    "5": "execute_function"
                },
                "param_1": {
                    "1": "input_array",
                    "2": "input_data",
                    "4": "parameters",
                    "5": "data",
                    "8": "param"
                },
                "param_1 + 0x3d": {
                    "1": "flag"
                },
                "puVar1": {
                    "1": "pointer_value",
                    "2": "current_pointer",
                    "3": "data_ptr",
                    "5": "pointer",
                    "6": "ptr"
                },
                "puVar1[8]": {
                    "1": "flags_array"
                }
            },
            "called": [
                "FUN_08007110"
            ],
            "calling": [
                "FUN_080071e4"
            ],
            "code": "\nvoid update_data_08005e2e(uint **param)\n\n{\n  uint *ptr;\n  \n  *(undefined *)((int)param + 0x3d) = 2;\n  ptr = *param;\n  if ((flags_array & 0x1111) == 0) {\n    if ((flags_array & 0x444) == 0) {\n      *ptr = *ptr & 0xfffffffe;\n    }\n  }\n  FUN_08007110(param);\n  *(undefined *)((int)param + 0x3d) = 0;\n  *(undefined *)(param + 0xf) = 0;\n  return;\n}\n\n",
            "current_name": "update_data_08005e2e",
            "entrypoint": "0x08005e2e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005e2e": "update_data_08005e2e",
                "param_1": "param",
                "puVar1": "ptr",
                "puVar1[8]": "flags_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005e68": {
            "called": [],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid FUNC_08005e68(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005e68",
            "entrypoint": "0x08005e68",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005e68": "FUNC_08005e68"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005e6a": {
            "called": [],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid FUNC_08005e6a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005e6a",
            "entrypoint": "0x08005e6a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005e6a": "FUNC_08005e6a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005e6c": {
            "called": [],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid FUNC_08005e6c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005e6c",
            "entrypoint": "0x08005e6c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005e6c": "FUNC_08005e6c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005e6e": {
            "additional_data": {
                "*(uint *)(*param_1 + 0x18)": {
                    "1": "group_flag1"
                },
                "*(uint *)(*param_1 + 0x1c)": {
                    "1": "group_flag2"
                },
                "*(uint *)(iVar1 + 0x10)": {
                    "1": "var1"
                },
                "*(uint *)(iVar1 + 0xc)": {
                    "1": "flag2"
                },
                "*(undefined *)(param_1 + 7)": {
                    "1": "status"
                },
                "*(undefined4 *)(iVar1 + 0x10)": {
                    "1": "new_flag1"
                },
                "FUNC_08005e68": {
                    "1": "process_condition1_alternative",
                    "2": "perform_action2"
                },
                "FUNC_08005e6a": {
                    "1": "perform_action_b",
                    "2": "perform_action2",
                    "3": "perform_action1"
                },
                "FUNC_08005e6c": {
                    "1": "execute_function4",
                    "3": "perform_action4"
                },
                "FUNC_080064ac": {
                    "1": "reverse_action",
                    "2": "perform_action5",
                    "3": "perform_action6"
                },
                "FUNC_080064ae": {
                    "1": "execute_if_condition_three",
                    "2": "perform_action4"
                },
                "FUNC_0800771c": {
                    "1": "execute_flag1"
                },
                "FUN_08005e6e": {
                    "1": "process_function",
                    "13": "process_flags",
                    "3": "process_data",
                    "4": "process_params"
                },
                "FUN_0800771c": {
                    "1": "helper_function_1",
                    "2": "reset_flags",
                    "6": "check_condition1"
                },
                "FUN_08007736": {
                    "1": "update_value3",
                    "2": "handle_case2"
                },
                "PTR_FUN_0800771c": {
                    "1": "update_condition_one"
                },
                "PTR_FUN_08007736": {
                    "1": "update_condition_two"
                },
                "iVar1": {
                    "1": "ptr_value",
                    "13": "value",
                    "2": "current_value",
                    "3": "ptr"
                },
                "param_1": {
                    "1": "param",
                    "10": "flags",
                    "3": "params",
                    "6": "input_array"
                },
                "uint": {
                    "1": "unsigned_integer"
                }
            },
            "called": [
                "FUN_0800771c",
                "FUN_08005e6a",
                "FUN_08005e6c",
                "FUN_080064ae",
                "FUN_08005e68",
                "FUN_080064ac",
                "FUN_08007736"
            ],
            "calling": [],
            "code": "\nvoid process_flags_08005e6e(int *flags)\n\n{\n  int value;\n  \n  value = *flags;\n  if (((*(unsigned_integer *)(value + 0x10) & 2) != 0) && ((*(unsigned_integer *)(value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffd;\n    *(undefined *)(flags + 7) = 1;\n    if ((*(unsigned_integer *)(*flags + 0x18) & 3) == 0) {\n      FUN_0800771c();\n      FUNC_08005e6a(flags);\n    }\n    else {\n      FUNC_08005e68();\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  value = *flags;\n  if (((*(unsigned_integer *)(value + 0x10) & 4) != 0) && ((*(unsigned_integer *)(value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffb;\n    *(undefined *)(flags + 7) = 2;\n    if ((*(unsigned_integer *)(*flags + 0x18) & 0x300) == 0) {\n      FUN_0800771c(flags);\n      FUNC_08005e6a(flags);\n    }\n    else {\n      FUNC_08005e68(flags);\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  value = *flags;\n  if (((*(unsigned_integer *)(value + 0x10) & 8) != 0) && ((*(unsigned_integer *)(value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffff7;\n    *(undefined *)(flags + 7) = 4;\n    if ((*(unsigned_integer *)(*flags + 0x1c) & 3) == 0) {\n      FUN_0800771c(flags);\n      FUNC_08005e6a(flags);\n    }\n    else {\n      FUNC_08005e68(flags);\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  value = *flags;\n  if (((*(unsigned_integer *)(value + 0x10) & 0x10) != 0) && ((*(unsigned_integer *)(value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffef;\n    *(undefined *)(flags + 7) = 8;\n    if ((*(unsigned_integer *)(*flags + 0x1c) & 0x300) == 0) {\n      FUN_0800771c(flags);\n      FUNC_08005e6a(flags);\n    }\n    else {\n      FUNC_08005e68(flags);\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  value = *flags;\n  if (((*(unsigned_integer *)(value + 0x10) & 1) != 0) && ((*(unsigned_integer *)(value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffe;\n    FUN_08007736(flags);\n  }\n  value = *flags;\n  if (((*(unsigned_integer *)(value + 0x10) & 0x80) != 0) && ((*(unsigned_integer *)(value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffff7f;\n    FUNC_080064ae(flags);\n  }\n  value = *flags;\n  if (((*(unsigned_integer *)(value + 0x10) & 0x40) != 0) && ((*(unsigned_integer *)(value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffbf;\n    FUNC_08005e6c(flags);\n  }\n  value = *flags;\n  if (((*(unsigned_integer *)(value + 0x10) & 0x20) != 0) && ((*(unsigned_integer *)(value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffdf;\n    FUNC_080064ac(flags);\n  }\n  return;\n}\n\n",
            "current_name": "process_flags_08005e6e",
            "entrypoint": "0x08005e6e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005e6e": "process_flags_08005e6e",
                "iVar1": "value",
                "param_1": "flags",
                "uint": "unsigned_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005fe8": {
            "additional_data": {
                "FUN_08005fe8": {
                    "1": "update_registers",
                    "17": "update_memory",
                    "2": "update_memory_registers",
                    "3": "update_memory_values",
                    "5": "update_parameters"
                },
                "param_1": {
                    "1": "base_address",
                    "2": "target_memory",
                    "9": "memory_address"
                },
                "param_1[0]": {
                    "1": "memory_register1_val"
                },
                "param_1[0xb]": {
                    "1": "memory_address[11]"
                },
                "param_1[10]": {
                    "1": "memory_address[10]"
                },
                "param_1[5]": {
                    "1": "memory_address[5]"
                },
                "param_2": {
                    "1": "register2",
                    "2": "new_memory",
                    "3": "new_params",
                    "4": "new_data",
                    "5": "data"
                },
                "param_2[1]": {
                    "1": "destination[1]"
                },
                "param_2[2]": {
                    "1": "data[2]"
                },
                "param_2[3]": {
                    "1": "destination[3]"
                },
                "param_2[4]": {
                    "1": "memory_register2_val4"
                },
                "param_2[5]": {
                    "1": "memory_register2_val5"
                },
                "uRam40012c30": {
                    "1": "specific_param",
                    "2": "memory_value",
                    "8": "special_value"
                },
                "uVar1": {
                    "1": "prev_memory_value",
                    "2": "current_value",
                    "4": "updated_value",
                    "5": "old_value",
                    "6": "original_value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08006092",
                "FUN_08006060"
            ],
            "code": "\nvoid update_memory_08005fe8(uint *memory_address,uint *data)\n\n{\n  uint original_value;\n  \n  original_value = *memory_address;\n  if ((((memory_address == (uint *)0x40012c00) || (memory_address == (uint *)0x40000000)) ||\n      (memory_address == (uint *)0x40000400)) || (memory_address == (uint *)0x40000800)) {\n    original_value = original_value & 0xffffff8f | memory_register2_val1;\n  }\n  if (((memory_address == (uint *)0x40012c00) || (memory_address == (uint *)0x40000000)) ||\n     ((memory_address == (uint *)0x40000400 || (memory_address == (uint *)0x40000800)))) {\n    original_value = original_value & 0xfffffcff | memory_register2_val3;\n  }\n  *memory_address = original_value & 0xffffff7f | memory_register2_val5;\n  source[11] = memory_register2_val2;\n  source[10] = *data;\n  if (memory_address == (uint *)0x40012c00) {\n    special_value = memory_register2_val4;\n  }\n  memory_address[5] = 1;\n  return;\n}\n\n",
            "current_name": "update_memory_08005fe8",
            "entrypoint": "0x08005fe8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005fe8": "update_memory_08005fe8",
                "param_1": "memory_address",
                "param_1[0xb]": "source[11]",
                "param_1[10]": "source[10]",
                "param_1[5]": "memory_address[5]",
                "param_2": "data",
                "param_2[1]": "memory_register2_val1",
                "param_2[2]": "memory_register2_val2",
                "param_2[3]": "memory_register2_val3",
                "param_2[4]": "memory_register2_val4",
                "param_2[5]": "memory_register2_val5",
                "uRam40012c30": "special_value",
                "uVar1": "original_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006060": {
            "additional_data": {
                "(int)param_1 + 0x3d": {
                    "1": "status_flag_address"
                },
                "*(char *) ((int)param_1 + 0x3d)": {
                    "1": "flag"
                },
                "*(char *)((int)dataPointer + 0x3d)": {
                    "1": "is_data_valid"
                },
                "*(char *)((int)param_1 + 0x3d)": {
                    "1": "check_condition",
                    "2": "flag_value",
                    "3": "status",
                    "5": "flag"
                },
                "*(undefined *)((int)dataPointer + 0x3d)": {
                    "1": "data_status"
                },
                "*(undefined *)((int)param_1 + 0x3d)": {
                    "1": "data_state",
                    "2": "set_flag",
                    "3": "status",
                    "5": "flag"
                },
                "*(undefined *)(dataPointer + 0xf)": {
                    "1": "data_flag"
                },
                "*(undefined *)(param_1 + 0xf)": {
                    "1": "result",
                    "2": "status_value",
                    "5": "flag"
                },
                "*param_1": {
                    "1": "data_1",
                    "3": "first_param",
                    "5": "data"
                },
                "0x3d": {
                    "1": "status_flag"
                },
                "0xf": {
                    "1": "null_character"
                },
                "1": {
                    "1": "flag_reset"
                },
                "2": {
                    "1": "flag_set"
                },
                "FUN_08005fe8": {
                    "1": "process_data_helper",
                    "17": "process_data",
                    "5": "copy_data"
                },
                "FUN_08006060": {
                    "1": "validate_and_execute",
                    "2": "update_data",
                    "3": "check_and_update_data",
                    "4": "process_data",
                    "7": "initialize_data"
                },
                "FUN_08007708": {
                    "1": "perform_initialization",
                    "2": "initialize_data",
                    "3": "perform_action",
                    "5": "perform_cleanup"
                },
                "char": {
                    "1": "temp2"
                },
                "char_1": {
                    "1": "flag"
                },
                "int": {
                    "1": "temp1"
                },
                "param_1": {
                    "1": "input_data",
                    "2": "param",
                    "4": "data_ptr",
                    "5": "data_pointer",
                    "9": "data"
                },
                "param_1 + 1": {
                    "1": "next_param",
                    "2": "next_data_pointer",
                    "3": "second_param",
                    "5": "next_data"
                },
                "param_2": {
                    "1": "next_data"
                },
                "void FUN_08005fe8(uint *param_1,uint *param_2)": {
                    "1": "handle_data"
                },
                "void FUN_08007708(void)": {
                    "1": "initialize"
                }
            },
            "called": [
                "FUN_08007708",
                "FUN_08005fe8"
            ],
            "calling": [
                "FUN_08007648"
            ],
            "code": "\nundefined4 initialize_data_08006060(undefined4 *data)\n\n{\n  if (data != (undefined4 *)0x0) {\n    if (*(temp2 *)((temp1)data + 0x3d) == '\\0') {\n      *(undefined *)(data + 0xf) = 0;\n      FUN_08007708();\n    }\n    *(undefined *)((temp1)data + 0x3d) = 2;\n    FUN_08005fe8(*data,data + 1);\n    *(undefined *)((temp1)data + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_data_08006060",
            "entrypoint": "0x08006060",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006060": "initialize_data_08006060",
                "char": "temp2",
                "int": "temp1",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006092": {
            "additional_data": {
                "(int)param_1 + 0x3d": {
                    "1": "address"
                },
                "*((int)param_1 + 0x3d)": {
                    "1": "is_processed"
                },
                "*(char *)((int)param_1 + 0x3d)": {
                    "1": "flag_value",
                    "3": "flag"
                },
                "*(undefined *)((int)param_1 + 0x3d)": {
                    "1": "prior_status"
                },
                "*(undefined *)(param_1 + 0xf)": {
                    "1": "flag_value",
                    "2": "flag",
                    "3": "status"
                },
                "*param_1": {
                    "1": "data_value",
                    "2": "data"
                },
                "*param_2": {
                    "1": "param_array"
                },
                "0x0": {
                    "1": "null"
                },
                "0x3d": {
                    "1": "flag_offset"
                },
                "FUN_08005fe8": {
                    "1": "perform_operation",
                    "18": "process_data",
                    "2": "update_data",
                    "3": "process_params"
                },
                "FUN_08006092": {
                    "1": "check_and_execute",
                    "2": "check_and_update_state",
                    "3": "process_param",
                    "5": "check_and_process_data"
                },
                "FUN_08006e68": {
                    "1": "initialize_process",
                    "2": "perform_action",
                    "3": "initialize",
                    "4": "initialize_data"
                },
                "PTR_char": {
                    "1": "char_ptr"
                },
                "char": {
                    "1": "character"
                },
                "param_1": {
                    "1": "input_data",
                    "11": "data",
                    "2": "data_array",
                    "3": "input_array",
                    "5": "param"
                },
                "param_1 + 0x3d": {
                    "1": "param_flag"
                },
                "param_1 + 0xf": {
                    "1": "flagged_byte"
                },
                "param_1 + 1": {
                    "1": "second_array",
                    "2": "next_data"
                },
                "param_1_1": {
                    "1": "data_ptr_1"
                },
                "param_2": {
                    "1": "next_data"
                }
            },
            "called": [
                "FUN_08006e68",
                "FUN_08005fe8"
            ],
            "calling": [
                "FUN_08007118"
            ],
            "code": "\nundefined4 check_and_process_data_08006092(undefined4 *data)\n\n{\n  if (data != (undefined4 *)0x0) {\n    if (*(character *)((int)data + 0x3d) == '\\0') {\n      *(undefined *)(data + 0xf) = 0;\n      FUN_08006e68();\n    }\n    *(undefined *)((int)data + 0x3d) = 2;\n    FUN_08005fe8(*data,data + 1);\n    *(undefined *)((int)data + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "check_and_process_data_08006092",
            "entrypoint": "0x08006092",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006092": "check_and_process_data_08006092",
                "char": "character",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080060c4": {
            "additional_data": {
                "*(int *)(param_1 + 0x38)": {
                    "1": "updated_value3"
                },
                "*(uint *)(param_1 + 0x18)": {
                    "1": "value_at_address3"
                },
                "*(uint *)(param_1 + 0x20)": {
                    "1": "value_at_address1"
                },
                "*(uint *)(param_1 + 0x4)": {
                    "1": "memory_value2"
                },
                "*(uint *)(param_1 + 4)": {
                    "1": "value_at_address2"
                },
                "0x18": {
                    "1": "address_offset2",
                    "2": "offset2"
                },
                "0x20": {
                    "1": "offset"
                },
                "0x38": {
                    "1": "offset4"
                },
                "0x40012c00": {
                    "1": "constant1"
                },
                "0xffff8cff": {
                    "2": "mask5"
                },
                "0xfffff3ff": {
                    "2": "mask4"
                },
                "0xffffff7f": {
                    "2": "mask3"
                },
                "0xffffffdf": {
                    "2": "mask2"
                },
                "0xffffffef": {
                    "2": "mask1"
                },
                "4": {
                    "1": "offset1"
                },
                "FUN_080060c4": {
                    "1": "update_flags_and_values",
                    "10": "update_parameters",
                    "2": "update_parameter",
                    "3": "update_data"
                },
                "iVar3": {
                    "1": "value_index",
                    "3": "updated_var3",
                    "4": "input_value",
                    "8": "param_value"
                },
                "param_1": {
                    "1": "param_addr",
                    "2": "data_ptr",
                    "4": "param_address",
                    "6": "address",
                    "9": "base_address"
                },
                "param_1 + 0x18": {
                    "1": "param3_offset",
                    "3": "address3"
                },
                "param_1 + 0x20": {
                    "1": "address_updated"
                },
                "param_1 + 0x38": {
                    "1": "address_value1",
                    "3": "address4"
                },
                "param_1 + 0x4": {
                    "1": "address_flags2"
                },
                "param_1 + 4": {
                    "1": "param2_offset",
                    "2": "address2"
                },
                "param_2": {
                    "1": "update_data",
                    "3": "config_data",
                    "4": "params",
                    "5": "parameters",
                    "6": "param_array"
                },
                "param_2[2]": {
                    "1": "param2_element",
                    "2": "value2"
                },
                "param_2[3]": {
                    "1": "params_value2",
                    "2": "value2"
                },
                "param_2[5]": {
                    "1": "param2_value5",
                    "2": "value3"
                },
                "param_2[6]": {
                    "1": "value_offset4",
                    "2": "value4"
                },
                "uVar1": {
                    "1": "updated_flags1",
                    "14": "updated_value1",
                    "2": "flags1",
                    "4": "updated_var1"
                },
                "uVar2": {
                    "1": "flag2",
                    "14": "updated_value2",
                    "2": "flags2",
                    "4": "updated_var2"
                }
            },
            "called": [],
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "code": "\nvoid update_parameters_080060c4(int base_address,int *param_array)\n\n{\n  uint updated_value1;\n  uint updated_value2;\n  int param_value;\n  \n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xffffffef;\n  updated_value2 = *(uint *)(base_address + 4);\n  param_value = *param_array;\n  updated_value1 = *(uint *)(base_address + 0x20) & 0xffffffdf | value1 << 4;\n  if (base_address == 0x40012c00) {\n    updated_value1 = (updated_value1 & 0xffffff7f | value2 << 4) & 0xffffffbf;\n    updated_value2 = updated_value2 & 0xfffff3ff | value3 << 2 | value4 << 2;\n  }\n  *(uint *)(base_address + 4) = updated_value2;\n  *(uint *)(base_address + 0x18) = *(uint *)(base_address + 0x18) & 0xffff8cff | param_value << 8;\n  *(int *)(base_address + 0x38) = param_array[1];\n  *(uint *)(base_address + 0x20) = updated_value1;\n  return;\n}\n\n",
            "current_name": "update_parameters_080060c4",
            "entrypoint": "0x080060c4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080060c4": "update_parameters_080060c4",
                "iVar3": "param_value",
                "param_1": "base_address",
                "param_2": "param_array",
                "param_2[2]": "value1",
                "param_2[3]": "value2",
                "param_2[5]": "value3",
                "param_2[6]": "value4",
                "uVar1": "updated_value1",
                "uVar2": "updated_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006128": {
            "additional_data": {
                "(int)param_1 + 0x3d": {
                    "1": "result_status_address"
                },
                "*(char *)(param_1 + 0xf)": {
                    "1": "status",
                    "3": "flag"
                },
                "*(undefined *)((int)param_1 + 0x3d)": {
                    "1": "variable1",
                    "3": "counter"
                },
                "*(undefined *)(param_1 + 0xf)": {
                    "1": "flag_value",
                    "2": "flag"
                },
                "*param_1": {
                    "1": "param1_data"
                },
                "*param_2": {
                    "1": "data"
                },
                "0": {
                    "1": "operation_1"
                },
                "0xc": {
                    "1": "operation_4"
                },
                "4": {
                    "1": "operation_2"
                },
                "8": {
                    "1": "operation_3"
                },
                "FUN_08005cec": {
                    "1": "process_value0",
                    "4": "perform_operation_a"
                },
                "FUN_08005cec(*param_1)": {
                    "1": "execute_sub_function1"
                },
                "FUN_08005d48": {
                    "1": "apply_operation_c",
                    "4": "perform_operation_c"
                },
                "FUN_08005d48(*param_1)": {
                    "1": "execute_sub_function3"
                },
                "FUN_08005dac": {
                    "1": "perform_operation",
                    "4": "perform_operation_d"
                },
                "FUN_08005dac(*param_1)": {
                    "1": "execute_sub_function4"
                },
                "FUN_080060c4": {
                    "1": "perform_action_b",
                    "4": "perform_operation_b"
                },
                "FUN_080060c4(*param_1)": {
                    "1": "execute_sub_function2"
                },
                "FUN_08006128": {
                    "1": "process_command",
                    "2": "execute_command",
                    "4": "process_function",
                    "6": "execute_function",
                    "7": "execute_operation"
                },
                "param_1": {
                    "1": "input_data",
                    "2": "command_params",
                    "3": "function_params",
                    "7": "data"
                },
                "param_1 + 0x3d": {
                    "1": "data_value"
                },
                "param_1 + 0xf": {
                    "1": "is_processed_address",
                    "2": "data_flag"
                },
                "param_1[0xf]": {
                    "1": "is_processed"
                },
                "param_2": {
                    "1": "param_2",
                    "2": "arg2",
                    "4": "flag",
                    "5": "param2",
                    "6": "value"
                },
                "param_3": {
                    "1": "arg2",
                    "2": "selection",
                    "3": "option",
                    "5": "param3",
                    "6": "operation"
                },
                "param_3 == 0": {
                    "1": "is_param3_zero"
                },
                "param_3 == 0xc": {
                    "1": "is_param3_twelve"
                },
                "param_3 == 4": {
                    "1": "is_param3_four"
                },
                "param_3 == 8": {
                    "1": "is_param3_eight"
                },
                "return 0": {
                    "1": "return_success"
                },
                "return 2": {
                    "1": "return_failure"
                },
                "switch(param_3)": {
                    "1": "switch_statement"
                }
            },
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "calling": [
                "FUN_08007648"
            ],
            "code": "\nundefined4 execute_operation_08006128(undefined4 *data,undefined4 value,undefined4 operation)\n\n{\n  if (*(char *)(data + 0xf) != '\\x01') {\n    *(undefined *)(data + 0xf) = 1;\n    *(undefined *)((int)data + 0x3d) = 2;\n    switch_statement {\n    case 0:\n      FUN_08005cec(*data);\n      break;\n    case 4:\n      FUN_080060c4(*data);\n      break;\n    case 8:\n      FUN_08005d48(*data);\n      break;\n    case 0xc:\n      FUN_08005dac(*data);\n    }\n    *(undefined *)((int)data + 0x3d) = 1;\n    *(undefined *)(data + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "execute_operation_08006128",
            "entrypoint": "0x08006128",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006128": "execute_operation_08006128",
                "param_1": "data",
                "param_2": "value",
                "param_3": "operation",
                "switch(param_3)": "switch_statement"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006186": {
            "additional_data": {
                "(int)param_1": {
                    "1": "data_pointer"
                },
                "(int)param_1 + 0x3d": {
                    "1": "status_offset"
                },
                "(param_1 + 0xf)": {
                    "1": "flag_value"
                },
                "*(char *)(param_1 + 0xf)": {
                    "1": "current_flag"
                },
                "*(int *)(param_2 + 0x10)": {
                    "1": "flag_value3"
                },
                "*(uint *)(*param_1 + 0x18)": {
                    "1": "data_value"
                },
                "*(uint *)(*param_1 + 0x1c)": {
                    "1": "data_value2"
                },
                "*(uint *)(param_2 + 0x10)": {
                    "1": "input_value"
                },
                "*(undefined *)((int)param_1 + 0x3d)": {
                    "1": "flag_value"
                },
                "*(undefined *)(param_1 + 0xf)": {
                    "1": "flag_value"
                },
                "*param_1": {
                    "1": "data_value"
                },
                "*param_1 + 0x18": {
                    "1": "flag1"
                },
                "*param_1 + 0x1c": {
                    "1": "flag2"
                },
                "FUN_08005cec": {
                    "1": "set_permission_type4",
                    "2": "update_flag_d",
                    "3": "update_flag4"
                },
                "FUN_08005d48": {
                    "1": "set_flag_and_value_case8",
                    "2": "update_flag_a",
                    "3": "update_flag1"
                },
                "FUN_08005dac": {
                    "1": "set_flag_and_value_mode2",
                    "2": "update_flag_b",
                    "3": "update_flag2"
                },
                "FUN_080060c4": {
                    "1": "update_flag_option_c",
                    "2": "set_flag3",
                    "3": "update_flag3"
                },
                "FUN_08006186": {
                    "1": "set_permissions",
                    "2": "update_flags",
                    "3": "update_parameter"
                },
                "param_1": {
                    "1": "flags",
                    "2": "settings",
                    "3": "parameter",
                    "9": "data"
                },
                "param_2": {
                    "1": "parameter_pointer",
                    "2": "config_data",
                    "3": "input",
                    "6": "data",
                    "9": "param"
                },
                "param_3": {
                    "1": "operation_code",
                    "2": "mode",
                    "3": "action",
                    "5": "flag",
                    "9": "option"
                }
            },
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "calling": [
                "FUN_08007118"
            ],
            "code": "\nundefined4 process_data_08006186(int *data,int param,undefined4 option)\n\n{\n  if (*(char *)(data + 0xf) != '\\x01') {\n    *(undefined *)(data + 0xf) = 1;\n    *(undefined *)(data_pointer + 0x3d) = 2;\n    switch(option) {\n    case 0:\n      FUN_08005cec(*data);\n      *(uint *)(*data + 0x18) = *(uint *)(*data + 0x18) | 8;\n      *(uint *)(*data + 0x18) = *(uint *)(*data + 0x18) & 0xfffffffb;\n      *(uint *)(*data + 0x18) = *(uint *)(*data + 0x18) | *(uint *)(param + 0x10);\n      break;\n    case 4:\n      FUN_080060c4(*data);\n      *(uint *)(*data + 0x18) = *(uint *)(*data + 0x18) | 0x800;\n      *(uint *)(*data + 0x18) = *(uint *)(*data + 0x18) & 0xfffffbff;\n      *(uint *)(*data + 0x18) = *(uint *)(*data + 0x18) | *(int *)(param + 0x10) << 8;\n      break;\n    case 8:\n      FUN_08005d48(*data);\n      *(uint *)(*data + 0x1c) = *(uint *)(*data + 0x1c) | 8;\n      *(uint *)(*data + 0x1c) = *(uint *)(*data + 0x1c) & 0xfffffffb;\n      *(uint *)(*data + 0x1c) = *(uint *)(*data + 0x1c) | *(uint *)(param + 0x10);\n      break;\n    case 0xc:\n      FUN_08005dac(*data);\n      *(uint *)(*data + 0x1c) = *(uint *)(*data + 0x1c) | 0x800;\n      *(uint *)(*data + 0x1c) = *(uint *)(*data + 0x1c) & 0xfffffbff;\n      *(uint *)(*data + 0x1c) = *(uint *)(*data + 0x1c) | *(int *)(param + 0x10) << 8;\n    }\n    *(undefined *)(data_pointer + 0x3d) = 1;\n    *(undefined *)(data + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "process_data_08006186",
            "entrypoint": "0x08006186",
            "imported": false,
            "improved": true,
            "renaming": {
                "(int)param_1": "data_pointer",
                "FUN_08006186": "process_data_08006186",
                "param_1": "data",
                "param_2": "param",
                "param_3": "option"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006262": {
            "additional_data": {
                "(param_2 & 0xff)": {
                    "2": "bit_offset"
                },
                "*(uint *)(baseAddress + 0x20)": {
                    "1": "bit_value"
                },
                "*(uint *)(param_1 + 0x20)": {
                    "1": "bit_field"
                },
                "1 << (param_2 & 0xff)": {
                    "1": "bit_mask"
                },
                "FUN_08006262": {
                    "1": "clear_bit_and_shift",
                    "2": "update_value",
                    "3": "update_bits",
                    "6": "update_bit",
                    "8": "update_bit_value"
                },
                "param_1": {
                    "1": "data_pointer",
                    "18": "base_address",
                    "2": "data_address"
                },
                "param_1 + 0x20": {
                    "1": "bit_field_address"
                },
                "param_2": {
                    "1": "flag_index",
                    "2": "position",
                    "25": "bit_position",
                    "3": "bit_index"
                },
                "param_2 & 0xff": {
                    "1": "masked_position"
                },
                "param_3": {
                    "1": "flag_value",
                    "10": "bit_value",
                    "15": "new_value",
                    "3": "value"
                },
                "param_3 << (param_2 & 0xff)": {
                    "1": "new_field_value"
                }
            },
            "called": [],
            "calling": [
                "FUN_080063c0",
                "FUN_08006280",
                "FUN_080062f4",
                "FUN_08006390"
            ],
            "code": "\nvoid update_bit_value_08006262(int base_address,uint bit_position,int new_value)\n\n{\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & ~(1 << (bit_position & 0xff));\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) | new_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "current_name": "update_bit_value_08006262",
            "entrypoint": "0x08006262",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006262": "update_bit_value_08006262",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006280": {
            "additional_data": {
                "(**param_1)": {
                    "1": "permission_data_value"
                },
                "(*param_1)[3]": {
                    "1": "permission"
                },
                "(*param_1)[3] | 0x10": {
                    "1": "updated_permission4"
                },
                "(*param_1)[3] | 2": {
                    "1": "updated_permission1"
                },
                "(*param_1)[3] | 4": {
                    "1": "updated_permission2"
                },
                "(*param_1)[3] | 8": {
                    "1": "updated_permission3"
                },
                "***param_1": {
                    "1": "value_ptr"
                },
                "**param_1": {
                    "1": "data_value"
                },
                "*param_1": {
                    "1": "value_pointer",
                    "3": "data"
                },
                "0x40012c00": {
                    "1": "some_constant_value"
                },
                "0x40012c44 | 0x8000": {
                    "1": "updated_global_variable"
                },
                "1": {
                    "1": "flag_bit"
                },
                "FUN_08006262": {
                    "1": "apply_permission",
                    "2": "update_values",
                    "7": "perform_action",
                    "8": "process_data"
                },
                "FUN_08006280": {
                    "1": "update_data_and_flags",
                    "2": "update_flags_and_status",
                    "3": "update_permissions",
                    "8": "update_flags_and_values"
                },
                "param_1": {
                    "1": "permission_data",
                    "2": "data_ptr",
                    "9": "data"
                },
                "param_1 (inside FUN_08006262)": {
                    "1": "data"
                },
                "param_2": {
                    "1": "permission_flag",
                    "19": "flag",
                    "2": "permission_type",
                    "5": "value"
                },
                "param_2 (inside FUN_08006262)": {
                    "1": "flag"
                },
                "param_3": {
                    "1": "flag2",
                    "2": "value",
                    "5": "flag"
                },
                "param_3 (inside FUN_08006262)": {
                    "1": "value"
                },
                "uRam40012c44": {
                    "1": "some_memory_location"
                },
                "uint": {
                    "1": "unsigned_integer"
                }
            },
            "called": [
                "FUN_08006262"
            ],
            "calling": [
                "FUN_08007648"
            ],
            "code": "\nundefined4 update_flags_and_values_08006280(unsigned_integer **data,undefined4 flag)\n\n{\n  switch(flag) {\n  case 0:\n    (*data)[3] = (*data)[3] | 2;\n    break;\n  case 4:\n    (*data)[3] = (*data)[3] | 4;\n    break;\n  case 8:\n    (*data)[3] = (*data)[3] | 8;\n    break;\n  case 0xc:\n    (*data)[3] = (*data)[3] | 0x10;\n  }\n  FUN_08006262(*data,flag,1);\n  if (*data == (unsigned_integer *)0x40012c00) {\n    status_flag = status_flag | 0x8000;\n  }\n  **data = **data | 1;\n  return 0;\n}\n\n",
            "current_name": "update_flags_and_values_08006280",
            "entrypoint": "0x08006280",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006280": "update_flags_and_values_08006280",
                "param_1": "data",
                "param_2": "flag",
                "uRam40012c44": "status_flag",
                "uint": "unsigned_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080062f4": {
            "additional_data": {
                "(*param_1)[3]": {
                    "1": "data[3]"
                },
                "(*param_1)[8]": {
                    "1": "data[8]"
                },
                "*param_1": {
                    "1": "data"
                },
                "0": {
                    "1": "bitmask_0"
                },
                "0xc": {
                    "1": "bitmask_0xc"
                },
                "4": {
                    "1": "bitmask_4"
                },
                "8": {
                    "1": "bitmask_8"
                },
                "FUN_08006262": {
                    "1": "perform_operation",
                    "2": "process_data",
                    "5": "perform_action"
                },
                "FUN_080062f4": {
                    "1": "update_parameter_and_check",
                    "12": "update_flags_and_values",
                    "3": "update_permissions"
                },
                "param_1": {
                    "1": "parameter",
                    "2": "flag_array",
                    "3": "array",
                    "7": "data"
                },
                "param_2": {
                    "1": "value_to_compare",
                    "10": "value",
                    "2": "permission_type",
                    "4": "flag_value",
                    "7": "flag"
                },
                "param_3": {
                    "1": "additional_data"
                },
                "puVar1": {
                    "1": "data_ptr_temp",
                    "2": "ptr_data",
                    "3": "ptr",
                    "4": "temp_pointer",
                    "7": "temp_ptr"
                },
                "puVar1[8]": {
                    "1": "param8_value"
                },
                "uRam40012c00": {
                    "1": "constant_a",
                    "2": "constant1"
                },
                "uRam40012c20": {
                    "1": "flag_a",
                    "2": "constant2"
                },
                "uRam40012c44": {
                    "1": "flag_b",
                    "2": "constant3"
                }
            },
            "called": [
                "FUN_08006262"
            ],
            "calling": [
                "FUN_080076e0"
            ],
            "code": "\nundefined4 update_flags_and_values_080062f4(uint **data,undefined4 value)\n\n{\n  uint *temp_ptr;\n  \n  switch(value) {\n  case 0:\n    (*data)[3] = (*data)[3] & 0xfffffffd;\n    break;\n  case 4:\n    (*data)[3] = (*data)[3] & 0xfffffffb;\n    break;\n  case 8:\n    (*data)[3] = (*data)[3] & 0xfffffff7;\n    break;\n  case 0xc:\n    (*data)[3] = (*data)[3] & 0xffffffef;\n  }\n  FUN_08006262(*data,value,0);\n  if (((*data == (uint *)0x40012c00) && ((constant2 & 0x1111) == 0)) &&\n     ((constant2 & 0x444) == 0)) {\n    constant3 = constant3 & 0xffff7fff;\n  }\n  temp_ptr = *data;\n  if (((param8_value & 0x1111) == 0) && ((param8_value & 0x444) == 0)) {\n    *temp_ptr = *temp_ptr & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flags_and_values_080062f4",
            "entrypoint": "0x080062f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080062f4": "update_flags_and_values_080062f4",
                "param_1": "data",
                "param_2": "value",
                "puVar1": "temp_ptr",
                "puVar1[8]": "param8_value",
                "uRam40012c20": "constant2",
                "uRam40012c44": "constant3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006390": {
            "additional_data": {
                "**param_1": {
                    "1": "pointer_value",
                    "2": "data_value"
                },
                "*param_1": {
                    "1": "pointed_value"
                },
                "DAT_40012c00": {
                    "1": "target_address",
                    "2": "target_value"
                },
                "DAT_40012c44": {
                    "1": "flag_register"
                },
                "FUN_08006262": {
                    "1": "update_data",
                    "2": "process_data"
                },
                "FUN_08006390": {
                    "1": "set_flag_and_value",
                    "2": "update_data",
                    "6": "update_flags_and_status"
                },
                "PTR_FUN_08006262": {
                    "1": "modify_value"
                },
                "param_1": {
                    "1": "input_pointer",
                    "2": "pointer_to_pointer",
                    "3": "flags",
                    "4": "data",
                    "6": "pointer"
                },
                "param_2": {
                    "1": "flag_value",
                    "2": "new_value",
                    "24": "value"
                },
                "param_3": {
                    "1": "flag_value",
                    "5": "flag"
                },
                "ptr": {
                    "1": "data_ptr"
                },
                "ptr1": {
                    "1": "data_ptr"
                },
                "ptr2": {
                    "1": "value_ptr"
                },
                "ptrdataPointer": {
                    "1": "pointer_to_data"
                },
                "uRam40012c44": {
                    "1": "status_value",
                    "2": "flag_value",
                    "3": "status_register",
                    "6": "flag"
                },
                "uint": {
                    "1": "unsigned_integer"
                },
                "value": {
                    "1": "value"
                }
            },
            "called": [
                "FUN_08006262"
            ],
            "calling": [
                "FUN_08007118"
            ],
            "code": "\nundefined4 update_flags_and_status_08006390(unsigned_integer **pointer,undefined4 value)\n\n{\n  FUN_08006262(*pointer,value,1);\n  if (*pointer == (unsigned_integer *)0x40012c00) {\n    flag = flag | 0x8000;\n  }\n  **pointer = **pointer | 1;\n  return 0;\n}\n\n",
            "current_name": "update_flags_and_status_08006390",
            "entrypoint": "0x08006390",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006390": "update_flags_and_status_08006390",
                "param_1": "pointer",
                "param_2": "value",
                "uRam40012c44": "flag",
                "uint": "unsigned_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080063c0": {
            "additional_data": {
                "*param_1": {
                    "1": "array"
                },
                "FUN_08006262": {
                    "1": "initialize_block",
                    "2": "perform_operation",
                    "4": "process_data"
                },
                "FUN_080063c0": {
                    "1": "improve_code",
                    "2": "update_flags_and_set",
                    "3": "initialize_flags",
                    "4": "initialize_memory"
                },
                "PTR_DAT_003d": {
                    "1": "pointer_to_undefined"
                },
                "PTR_DAT_40012c44": {
                    "1": "pointer_to_flag_value2"
                },
                "param_1": {
                    "1": "value",
                    "2": "param1",
                    "3": "data",
                    "4": "memory"
                },
                "param_2": {
                    "1": "flag_value",
                    "11": "value",
                    "2": "param2"
                },
                "param_3": {
                    "1": "additional_parameter",
                    "2": "offset",
                    "3": "index"
                },
                "puVar1": {
                    "1": "pointer_to_u_int",
                    "2": "current_pointer",
                    "3": "current_data",
                    "4": "ptr"
                },
                "puVar1[8]": {
                    "1": "array_ptr[8]"
                },
                "uRam40012c00": {
                    "1": "block_start_address",
                    "2": "constant_value_1"
                },
                "uRam40012c20": {
                    "1": "constant2",
                    "2": "constant_value_2"
                },
                "uRam40012c44": {
                    "1": "constant3",
                    "2": "constant_value_3"
                }
            },
            "called": [
                "FUN_08006262"
            ],
            "calling": [
                "FUN_080071e4"
            ],
            "code": "\nundefined4 initialize_memory_080063c0(uint **memory,undefined4 value)\n\n{\n  uint *ptr;\n  \n  FUN_08006262(*memory,value,0);\n  if (((*memory == (uint *)0x40012c00) && ((constant_value_2 & 0x1111) == 0)) &&\n     ((constant_value_2 & 0x444) == 0)) {\n    constant_value_3 = constant_value_3 & 0xffff7fff;\n  }\n  ptr = *memory;\n  if (((array_ptr[8] & 0x1111) == 0) && ((array_ptr[8] & 0x444) == 0)) {\n    *ptr = *ptr & 0xfffffffe;\n  }\n  *(undefined *)((int)memory + 0x3d) = 1;\n  return 0;\n}\n\n",
            "current_name": "initialize_memory_080063c0",
            "entrypoint": "0x080063c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080063c0": "initialize_memory_080063c0",
                "param_1": "memory",
                "param_2": "value",
                "puVar1": "ptr",
                "puVar1[8]": "array_ptr[8]",
                "uRam40012c20": "constant_value_2",
                "uRam40012c44": "constant_value_3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006420": {
            "additional_data": {
                "& ~(4 << (param_2 & 0xff))": {
                    "1": "clear_mask"
                },
                "(4 << (param_2 & 0xff))": {
                    "1": "clear_mask"
                },
                "(param_2 & 0xff)": {
                    "1": "bit_mask"
                },
                "*(uint *)(param_1 + 0x20)": {
                    "1": "original_value",
                    "6": "flags"
                },
                "4": {
                    "1": "bit_mask"
                },
                "4 << (param_2 & 0xff)": {
                    "1": "bit_mask",
                    "3": "mask"
                },
                "FUN_08006420": {
                    "1": "update_bits_in_range",
                    "2": "update_bitwise_flags",
                    "3": "update_bitwise_value",
                    "7": "update_flags"
                },
                "param_1": {
                    "1": "input_data",
                    "2": "address",
                    "20": "base_address",
                    "3": "register_address"
                },
                "param_1 + 0x20": {
                    "1": "register_address"
                },
                "param_2": {
                    "1": "position",
                    "11": "bit_offset",
                    "17": "bit_position"
                },
                "param_2 & 0xff": {
                    "1": "limited_bit_position",
                    "3": "bit_index"
                },
                "param_3": {
                    "1": "value_to_set",
                    "10": "value",
                    "11": "new_value",
                    "6": "bit_value"
                },
                "param_3 << (param_2 & 0xff)": {
                    "1": "shifted_data"
                },
                "param_4": {
                    "2": "mask"
                },
                "param_5": {
                    "1": "shift_amount"
                },
                "uint": {
                    "1": "unsigned_integer"
                },
                "var_1": {
                    "1": "bitwise_mask"
                },
                "var_2": {
                    "1": "shifted_value"
                },
                "| param_3 << (param_2 & 0xff)": {
                    "1": "value_shifted"
                }
            },
            "called": [],
            "calling": [
                "FUN_0800643c",
                "FUN_08006460"
            ],
            "code": "\nvoid update_flags_08006420(int base_address,unsigned_integer bit_position,int new_value)\n\n{\n  *(unsigned_integer *)(base_address + 0x20) = *(unsigned_integer *)(base_address + 0x20) & ~(4 << (bit_position & 0xff));\n  *(unsigned_integer *)(base_address + 0x20) = *(unsigned_integer *)(base_address + 0x20) | new_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "current_name": "update_flags_08006420",
            "entrypoint": "0x08006420",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006420": "update_flags_08006420",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "new_value",
                "uint": "unsigned_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800643c": {
            "additional_data": {
                "(*param_1)[0x11]": {
                    "1": "data_element"
                },
                "(*param_1)[0x11] | 0x8000": {
                    "1": "set_flag"
                },
                "**param_1": {
                    "1": "pointer_value",
                    "4": "data_value"
                },
                "*param_1": {
                    "1": "permissions",
                    "2": "data_pointer"
                },
                "*param_1[0x11]": {
                    "1": "value_array[17]"
                },
                "0x11": {
                    "1": "index"
                },
                "FUN_08006420": {
                    "1": "update_flags",
                    "2": "set_value",
                    "3": "set_values"
                },
                "FUN_0800643c": {
                    "1": "update_bitwise_operations",
                    "2": "set_flags",
                    "3": "update_flags"
                },
                "[0x11]": {
                    "1": "element_at_index17"
                },
                "new_variable_name_1": {
                    "1": "temp"
                },
                "param_1": {
                    "1": "flags",
                    "10": "data",
                    "2": "buffer",
                    "3": "pointer"
                },
                "param_1[0]": {
                    "1": "buffer[0]"
                },
                "param_1[0x11]": {
                    "1": "pointer[17]",
                    "2": "buffer[17]"
                },
                "param_2": {
                    "1": "size",
                    "22": "value",
                    "3": "flag_value"
                },
                "param_3": {
                    "1": "param_3",
                    "17": "size",
                    "3": "length"
                },
                "pointer[0]": {
                    "1": "pointer[0]"
                },
                "pointer[0x11]": {
                    "1": "pointer[17]"
                },
                "undefined4": {
                    "1": "uint32"
                }
            },
            "called": [
                "FUN_08006420"
            ],
            "calling": [
                "FUN_08007118"
            ],
            "code": "\nuint32 set_flags_and_permissions_0800643c(uint **data,uint32 value)\n\n{\n  FUN_08006420(*data,value,4);\n  (*data)element_at_index17 = (*data)element_at_index17 | 0x8000;\n  **data = **data | 1;\n  return 0;\n}\n\n",
            "current_name": "set_flags_and_permissions_0800643c",
            "entrypoint": "0x0800643c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800643c": "set_flags_and_permissions_0800643c",
                "[0x11]": "element_at_index17",
                "param_1": "data",
                "param_2": "value",
                "undefined4": "uint32"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006460": {
            "additional_data": {
                "*param_1": {
                    "1": "data"
                },
                "*puVar1": {
                    "1": "value2"
                },
                "FUN_08006420": {
                    "1": "set_permissions",
                    "3": "process_data"
                },
                "FUN_08006460": {
                    "1": "apply_modifications",
                    "2": "clear_flags_and_bits",
                    "4": "update_flags",
                    "5": "update_data",
                    "6": "update_flags_and_values"
                },
                "param_1": {
                    "1": "ptr_array",
                    "2": "input_data",
                    "3": "array_ptr",
                    "4": "data_pointer",
                    "9": "data"
                },
                "param_1[0x11]": {
                    "1": "array_ptr[17]"
                },
                "param_1[8]": {
                    "1": "array_ptr[8]"
                },
                "param_2": {
                    "1": "param",
                    "18": "value",
                    "2": "size",
                    "5": "flag"
                },
                "param_3": {
                    "1": "index"
                },
                "puVar1": {
                    "1": "permissions",
                    "2": "ptr",
                    "3": "current_array_ptr",
                    "5": "pointer"
                },
                "puVar1[0x11]": {
                    "1": "value1"
                },
                "puVar1[8]": {
                    "1": "flag"
                }
            },
            "called": [
                "FUN_08006420"
            ],
            "calling": [
                "FUN_080071e4"
            ],
            "code": "\nundefined4 update_flags_and_values_08006460(uint **data,undefined4 value)\n\n{\n  uint *pointer;\n  \n  FUN_08006420(*data,value,0);\n  pointer = *data;\n  if (((flag & 0x1111) == 0) && ((flag & 0x444) == 0)) {\n    value1 = value1 & 0xffff7fff;\n  }\n  pointer = *data;\n  if (((flag & 0x1111) == 0) && ((flag & 0x444) == 0)) {\n    *pointer = *pointer & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flags_and_values_08006460",
            "entrypoint": "0x08006460",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006460": "update_flags_and_values_08006460",
                "param_1": "data",
                "param_2": "value",
                "puVar1": "pointer",
                "puVar1[0x11]": "value1",
                "puVar1[8]": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080064ac": {
            "called": [],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid FUNC_080064ac(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080064ac",
            "entrypoint": "0x080064ac",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080064ac": "FUNC_080064ac"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080064ae": {
            "called": [],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid FUNC_080064ae(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080064ae",
            "entrypoint": "0x080064ae",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080064ae": "FUNC_080064ae"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080064b0": {
            "additional_data": {
                "(int)param_1": {
                    "1": "input_array_address"
                },
                "(int)param_1 + 0x3a": {
                    "1": "flag_char"
                },
                "(uint *)(*param_1 + 0x14)": {
                    "1": "flag2"
                },
                "(uint *)(*param_1 + 0xc)": {
                    "1": "flag1"
                },
                "(undefined *)((int)param_1 + 0x3a)": {
                    "1": "status"
                },
                "*(uint *)(*param_1 + 0x14)": {
                    "1": "status_register",
                    "7": "value2"
                },
                "*(uint *)(*param_1 + 0xc)": {
                    "1": "flags",
                    "7": "value1"
                },
                "*(undefined *)((int)param_1 + 0x3a)": {
                    "1": "flag_value",
                    "2": "character"
                },
                "*param_1": {
                    "1": "ptr_value"
                },
                "*param_1 + 0x14": {
                    "1": "flag2"
                },
                "*param_1 + 0xc": {
                    "1": "flag1"
                },
                "0x14": {
                    "1": "offset14",
                    "2": "offset2"
                },
                "0x20": {
                    "1": "character_value"
                },
                "0x3a": {
                    "1": "offset3a"
                },
                "0xc": {
                    "1": "mask1_offset",
                    "2": "offset1"
                },
                "0xfffffedf": {
                    "1": "mask1_value",
                    "2": "mask1"
                },
                "0xfffffffe": {
                    "1": "mask2_value",
                    "2": "mask2"
                },
                "DAT_0804cbac": {
                    "1": "constant_mask1"
                },
                "DAT_0804cbbe": {
                    "1": "constant_mask2"
                },
                "DAT_14": {
                    "1": "flags_constant14"
                },
                "DAT_c": {
                    "1": "flags_constant_c"
                },
                "FUN_080064b0": {
                    "1": "update_values",
                    "10": "clear_flags",
                    "2": "update_data",
                    "3": "set_flags_and_values"
                },
                "PTR_param_1": {
                    "1": "pointer_to_input"
                },
                "base+0x14": {
                    "1": "flag2_address"
                },
                "base+0xc": {
                    "1": "flag1_address"
                },
                "baseAddress": {
                    "1": "base"
                },
                "flag1Address": {
                    "1": "flag1"
                },
                "flag2Address": {
                    "1": "flag2"
                },
                "int": {
                    "2": "integer"
                },
                "param_1": {
                    "1": "memory_address",
                    "2": "ptr",
                    "3": "memory_pointer",
                    "4": "data_ptr",
                    "5": "flags"
                },
                "param_1[0]": {
                    "1": "base_address"
                },
                "uint": {
                    "3": "unsigned_int"
                },
                "undefined": {
                    "1": "u"
                }
            },
            "called": [],
            "calling": [
                "FUN_080069ec"
            ],
            "code": "\nvoid clear_flags_080064b0(integer *flags)\n\n{\n  *(unsigned_int *)(*flags + 0xc) = *(unsigned_int *)(*flags + 0xc) & 0xfffffedf;\n  *(unsigned_int *)(*flags + 0x14) = *(unsigned_int *)(*flags + 0x14) & 0xfffffffe;\n  *(character *)(input_array_address + 0x3a) = 0x20;\n  return;\n}\n\n",
            "current_name": "clear_flags_080064b0",
            "entrypoint": "0x080064b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "(int)param_1": "input_array_address",
                "FUN_080064b0": "clear_flags_080064b0",
                "int": "integer",
                "param_1": "flags",
                "uint": "unsigned_int",
                "undefined": "character"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080064cc": {
            "additional_data": {
                "(int)(pbVar2 + 1)": {
                    "1": "new_ptr_to_data"
                },
                "(uint)*pbVar2": {
                    "1": "value"
                },
                "*(char *)((int)param_1 + 0x39)": {
                    "1": "char_value",
                    "2": "first_char"
                },
                "*(short *)((int)param_1 + 0x26)": {
                    "1": "counter2",
                    "3": "counter"
                },
                "*(uint *)(*param_1 + 0xc)": {
                    "1": "flag_value"
                },
                "*(uint *)(*param_1 + 4)": {
                    "1": "result"
                },
                "*(ushort *)param_1[8]": {
                    "1": "temp_value",
                    "2": "ushort_value"
                },
                "*(ushort *)param_1[8] & 0x1ff": {
                    "1": "masked_value"
                },
                "*param_1": {
                    "2": "data_ptr"
                },
                "*param_1 + 4": {
                    "1": "data_offset"
                },
                "0x1000": {
                    "1": "constant_value"
                },
                "0x26": {
                    "1": "other_offset_value"
                },
                "0x39": {
                    "1": "offset_value"
                },
                "0xc": {
                    "1": "other_offset_value"
                },
                "4": {
                    "1": "offset_value"
                },
                "8": {
                    "1": "index"
                },
                "FUN_080064cc": {
                    "1": "update_data",
                    "18": "process_data",
                    "2": "parse_data"
                },
                "param_1": {
                    "1": "input_data",
                    "19": "data",
                    "3": "input_array",
                    "5": "data_array"
                },
                "param_1[2]": {
                    "1": "value1"
                },
                "param_1[4]": {
                    "1": "value2"
                },
                "param_1[8]": {
                    "1": "byte_array",
                    "2": "byte_ptr"
                },
                "pbVar2": {
                    "1": "byte_array",
                    "14": "byte_ptr",
                    "2": "byte_data",
                    "9": "byte_pointer"
                },
                "sVar1": {
                    "1": "temp_var1",
                    "10": "count",
                    "5": "counter"
                }
            },
            "called": [],
            "calling": [
                "FUN_080069ec"
            ],
            "code": "\nundefined4 process_data_080064cc(int *data)\n\n{\n  short remaining_iterations;\n  byte *byte_ptr;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (value_2 == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)byte_ptr & 0x1ff;\n    if (check_value == 0) {\n      byte_ptr = byte_ptr + 2;\n    }\n    else {\n      byte_ptr = byte_ptr + 1;\n    }\n  }\n  else {\n    byte_ptr = (byte *)byte_ptr;\n    byte_ptr = (int)(byte_ptr + 1);\n    *(uint *)(*data + 4) = (uint)*byte_ptr;\n  }\n  remaining_iterations = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = remaining_iterations;\n  if (remaining_iterations == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_080064cc",
            "entrypoint": "0x080064cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080064cc": "process_data_080064cc",
                "param_1": "data",
                "param_1[2]": "value_2",
                "param_1[4]": "check_value",
                "param_1[8]": "byte_ptr",
                "pbVar2": "byte_ptr",
                "sVar1": "remaining_iterations"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006538": {
            "additional_data": {
                "*param_1": {
                    "1": "data"
                },
                "FUN_08005a28": {
                    "1": "calculate_result",
                    "2": "calculate_value1"
                },
                "FUN_08005a48": {
                    "1": "calculate_value_2",
                    "2": "calculate_value2"
                },
                "FUN_08006538": {
                    "1": "update_data",
                    "2": "update_config_values",
                    "3": "calculate_values",
                    "8": "update_values"
                },
                "iRam40013808": {
                    "1": "output_value"
                },
                "iVar1": {
                    "2": "result_1",
                    "21": "result1",
                    "8": "value1"
                },
                "iVar10": {
                    "1": "base_pointer",
                    "16": "result10",
                    "2": "temp_var",
                    "8": "value10"
                },
                "iVar2": {
                    "2": "result_2",
                    "21": "result2",
                    "8": "value2"
                },
                "iVar3": {
                    "2": "result_3",
                    "21": "result3",
                    "8": "value3"
                },
                "iVar4": {
                    "2": "result_4",
                    "21": "result4",
                    "8": "value4"
                },
                "iVar5": {
                    "2": "result_5",
                    "21": "result5",
                    "8": "value5"
                },
                "iVar6": {
                    "2": "result_6",
                    "21": "result6",
                    "8": "value6"
                },
                "iVar7": {
                    "2": "result_7",
                    "21": "result7",
                    "8": "value7"
                },
                "iVar8": {
                    "2": "result_8",
                    "21": "result8",
                    "8": "value8"
                },
                "iVar9": {
                    "2": "result_9",
                    "21": "result9",
                    "8": "value9"
                },
                "param_1": {
                    "1": "input_parameters",
                    "2": "input_data",
                    "3": "input",
                    "5": "parameters",
                    "6": "input_array"
                }
            },
            "called": [
                "FUN_08005a28",
                "FUN_08005a48"
            ],
            "calling": [
                "FUN_0800674e"
            ],
            "code": "\nvoid update_values_08006538(int *input_array)\n\n{\n  int result1;\n  int result2;\n  int result3;\n  int result4;\n  int result5;\n  int result6;\n  int result7;\n  int result8;\n  int result9;\n  int result10;\n  \n  *(uint *)(*input_array + 0x10) = *(uint *)(*input_array + 0x10) & 0xffffcfff | input_array[3];\n  *(uint *)(*input_array + 0xc) =\n       input_array[2] | input_array[4] | input_array[5] | *(uint *)(*input_array + 0xc) & 0xffffe9f3;\n  *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) & 0xfffffcff | input_array[6];\n  result10 = *input_array;\n  if (result10 != 0x40013800) {\n    result1 = FUN_08005a28();\n    result6 = input_array[1];\n    result2 = FUN_08005a28();\n    result7 = input_array[1];\n    result3 = FUN_08005a28();\n    result8 = input_array[1];\n    result4 = FUN_08005a28();\n    result9 = input_array[1];\n    result5 = FUN_08005a28();\n    *(uint *)(result10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(input_array[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n    return;\n  }\n  result10 = FUN_08005a48();\n  result5 = input_array[1];\n  result1 = FUN_08005a48();\n  result6 = input_array[1];\n  result2 = FUN_08005a48();\n  result7 = input_array[1];\n  result3 = FUN_08005a48();\n  result8 = input_array[1];\n  result4 = FUN_08005a48();\n  final_result = ((uint)((int)((ulonglong)\n                               (((uint)(result3 * 0x19) / (uint)(result8 << 2) +\n                                (int)(((ulonglong)(uint)(result4 * 0x19) /\n                                      (ulonglong)(uint)(input_array[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(result1 * 0x19) / (uint)(result6 << 2) +\n                   (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(result7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(result10 * 0x19) / (ulonglong)(uint)(result5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "current_name": "update_values_08006538",
            "entrypoint": "0x08006538",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006538": "update_values_08006538",
                "iRam40013808": "final_result",
                "iVar1": "result1",
                "iVar10": "result10",
                "iVar2": "result2",
                "iVar3": "result3",
                "iVar4": "result4",
                "iVar5": "result5",
                "iVar6": "result6",
                "iVar7": "result7",
                "iVar8": "result8",
                "iVar9": "result9",
                "param_1": "input_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080066e8": {
            "additional_data": {
                "(*param_1)[3]": {
                    "1": "array_pointer[3]",
                    "2": "third_element",
                    "3": "array_element_3"
                },
                "(*param_1)[5]": {
                    "1": "data[5]",
                    "2": "fifth_element",
                    "3": "array_element_5"
                },
                "(int)param_1 + 0x39": {
                    "1": "pointer_position_1"
                },
                "(int)param_1 + 0x3a": {
                    "1": "pointer_position_2"
                },
                "*(undefined *)((int)param_1 + 0x39)": {
                    "1": "param_array[0x39]"
                },
                "*(undefined *)((int)param_1 + 0x3a)": {
                    "1": "param_array[0x3a]"
                },
                "*(undefined *)(param_1 + 0xe)": {
                    "1": "param_array[0xe]"
                },
                "*param_1": {
                    "1": "first_element"
                },
                "0": {
                    "1": "condition_failed"
                },
                "0x20": {
                    "1": "new_value_for_pointer_positions"
                },
                "0xfffffe5f": {
                    "1": "mask_for_array_element_3"
                },
                "0xfffffffe": {
                    "1": "mask_for_array_element_5"
                },
                "3": {
                    "1": "condition_passed"
                },
                "FUN_08003760": {
                    "1": "get_value"
                },
                "FUN_080066e8": {
                    "1": "check_param_validity",
                    "2": "validate_parameters",
                    "3": "check_parameters",
                    "5": "check_condition"
                },
                "iVar1": {
                    "1": "difference",
                    "20": "result"
                },
                "param_1": {
                    "1": "ptr_array",
                    "2": "data_ptr",
                    "3": "pointer_array",
                    "5": "input_array"
                },
                "param_1 + 0xe": {
                    "1": "pointer_offset"
                },
                "param_2": {
                    "1": "value_2",
                    "3": "flags",
                    "6": "bit_mask",
                    "8": "mask",
                    "9": "flag"
                },
                "param_3": {
                    "1": "is_condition_true",
                    "15": "expected_result",
                    "2": "is_valid",
                    "8": "condition"
                },
                "param_4": {
                    "1": "compare_value",
                    "11": "comparison_value",
                    "2": "reference_value",
                    "3": "value",
                    "4": "limit"
                },
                "param_5": {
                    "1": "check_param",
                    "14": "threshold",
                    "2": "limit",
                    "7": "max_difference"
                }
            },
            "called": [
                "FUN_08003760"
            ],
            "calling": [
                "FUN_080067ac"
            ],
            "code": "\nundefined4 check_condition_080066e8(uint **input_array,uint flag,uint expected_result,int comparison_value,uint threshold)\n\n{\n  int result;\n  \n  do {\n    if (((flag & ~**input_array) == 0) != expected_result) {\n      return 0;\n    }\n  } while ((threshold == 0xffffffff) ||\n          ((threshold != 0 && (result = FUN_08003760(), (uint)(result - comparison_value) <= threshold))));\n  (*input_array)[3] = (*input_array)[3] & 0xfffffe5f;\n  (*input_array)[5] = (*input_array)[5] & 0xfffffffe;\n  *(undefined *)((int)input_array + 0x39) = 0x20;\n  *(undefined *)((int)input_array + 0x3a) = 0x20;\n  *(undefined *)(input_array + 0xe) = 0;\n  return 3;\n}\n\n",
            "current_name": "check_condition_080066e8",
            "entrypoint": "0x080066e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080066e8": "check_condition_080066e8",
                "iVar1": "result",
                "param_1": "input_array",
                "param_2": "flag",
                "param_3": "expected_result",
                "param_4": "comparison_value",
                "param_5": "threshold"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800674c": {
            "called": [],
            "calling": [
                "FUN_0800674e"
            ],
            "code": "\nvoid FUNC_0800674c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800674c",
            "entrypoint": "0x0800674c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800674c": "FUNC_0800674c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800674e": {
            "additional_data": {
                "(*(char *)((int)param_1 + 0x39))": {
                    "1": "is_data_initialized"
                },
                "(int)param_1 + 0x39": {
                    "1": "char_ptr_1"
                },
                "(int)param_1 + 0x3a": {
                    "1": "char_ptr_2"
                },
                "*(char *)((int)param_1 + 0x39)": {
                    "1": "condition_check",
                    "2": "char_value",
                    "5": "flag"
                },
                "*(int *)": {
                    "1": "ptr"
                },
                "*(uint *)(*data_structure_ptr + 0x10)": {
                    "1": "data_value_2"
                },
                "*(uint *)(*data_structure_ptr + 0x14)": {
                    "1": "data_value_3"
                },
                "*(uint *)(*data_structure_ptr + 0xc)": {
                    "1": "data_value_1"
                },
                "*(uint *)(*param_1 + 0x10)": {
                    "1": "value_at_index10",
                    "4": "value2"
                },
                "*(uint *)(*param_1 + 0x14)": {
                    "1": "value_at_index14",
                    "4": "value3"
                },
                "*(uint *)(*param_1 + 0xc)": {
                    "1": "uint_value_1",
                    "4": "value1"
                },
                "*(undefined *)((int)param_1 + 0x39)": {
                    "1": "parameter_flag"
                },
                "*(undefined *)((int)param_1 + 0x3a)": {
                    "1": "param->flag2"
                },
                "*(undefined *)(param_1 + 0xe)": {
                    "1": "initialized_flag",
                    "2": "undefined_value"
                },
                "*param_1": {
                    "1": "param_value"
                },
                "*param_1 + 0x10": {
                    "1": "var2"
                },
                "*param_1 + 0x14": {
                    "1": "var3"
                },
                "*param_1 + 0xc": {
                    "1": "var1"
                },
                "0x0": {
                    "4": "null"
                },
                "0x10": {
                    "1": "param_one_offset"
                },
                "0x14": {
                    "1": "offset3"
                },
                "0x20": {
                    "1": "new_value2"
                },
                "0x2000": {
                    "1": "or_mask"
                },
                "0x24": {
                    "1": "element_value"
                },
                "0x39": {
                    "1": "offset_value_1"
                },
                "0x3a": {
                    "1": "offset_value_3"
                },
                "0xc": {
                    "1": "offset1"
                },
                "0xf": {
                    "1": "offset_value_2"
                },
                "0xffffb7ff": {
                    "1": "second_and_mask"
                },
                "0xffffdfff": {
                    "1": "bit_mask_1"
                },
                "0xffffffd5": {
                    "1": "third_and_mask"
                },
                "FUNC_0800674c": {
                    "1": "initialize_variable",
                    "2": "perform_initialization",
                    "3": "initialize",
                    "5": "initialize_data"
                },
                "FUN_08006538": {
                    "1": "update_data",
                    "12": "process_data",
                    "3": "process_param"
                },
                "FUN_0800674e": {
                    "1": "initialize_parameter",
                    "2": "process_parameter",
                    "3": "initialize_data",
                    "4": "process_data"
                },
                "c": {
                    "1": "value"
                },
                "char *": {
                    "1": "array_ptr"
                },
                "data_structure_ptr": {
                    "1": "data_structure"
                },
                "e": {
                    "1": "flag"
                },
                "f": {
                    "1": "flag_value"
                },
                "param_1": {
                    "1": "parameters",
                    "2": "data_structure_ptr",
                    "3": "input_array",
                    "4": "data",
                    "5": "param"
                },
                "param_1 + 0x39": {
                    "1": "char_pointer"
                },
                "param_1 + 0x3a": {
                    "1": "char_pointer2"
                },
                "param_1 + 0xe": {
                    "1": "zero_byte_pointer"
                },
                "param_1[0xe]": {
                    "1": "param->flag"
                },
                "param_1[0xf]": {
                    "1": "value4"
                },
                "return 0": {
                    "1": "success"
                },
                "return 1": {
                    "1": "failure"
                },
                "undefined": {
                    "1": "byte"
                }
            },
            "called": [
                "FUN_0800674c",
                "FUN_08006538"
            ],
            "calling": [
                "FUN_08008078"
            ],
            "code": "\nbyte4 process_data_0800674e(int *param)\n\n{\n  if (param != (int *)0x0) {\n    if (*(char *)((int)param + 0x39) == '\\0') {\n      *(byte *)(param + 0xe) = 0;\n      FUNC_0800674c();\n    }\n    *(byte *)((int)param + 0x39) = 0x24;\n    *(uint *)(*param + 0xc) = *(uint *)(*param + 0xc) & 0xffffdfff;\n    FUN_08006538(param);\n    *(uint *)(*param + 0x10) = *(uint *)(*param + 0x10) & 0xffffb7ff;\n    *(uint *)(*param + 0x14) = *(uint *)(*param + 0x14) & 0xffffffd5;\n    *(uint *)(*param + 0xc) = *(uint *)(*param + 0xc) | 0x2000;\n    flag_f = 0;\n    *(byte *)((int)param + 0x39) = 0x20;\n    *(byte *)((int)param + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "process_data_0800674e",
            "entrypoint": "0x0800674e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800674e": "process_data_0800674e",
                "param_1": "param",
                "param_1[0xf]": "flag_f",
                "undefined": "byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080067ac": {
            "additional_data": {
                "(int)param_1 + 0x39": {
                    "1": "char_check"
                },
                "*(byte *)data_array": {
                    "1": "byte_value"
                },
                "*(byte *)param_2": {
                    "1": "input_value"
                },
                "*(char *)((int)data_ptr + 0x39)": {
                    "1": "flag"
                },
                "*(char *)((int)param_1 + 0x39)": {
                    "1": "character_check"
                },
                "*(char *)(data_ptr + 0xe)": {
                    "1": "flag2"
                },
                "*(char *)(param_1 + 0xe)": {
                    "1": "element_check"
                },
                "*(short *)((int)data_ptr + 0x26)": {
                    "1": "short_value2"
                },
                "*(short *)((int)param_1 + 0x26)": {
                    "1": "ushort_index"
                },
                "*(short *)(data_ptr + 9)": {
                    "1": "short_value1"
                },
                "*(uint *)(*data_ptr + 4)": {
                    "1": "uint_value"
                },
                "*(uint *)(*param_1 + 4)": {
                    "1": "array_value2"
                },
                "*(undefined *)((int)data_ptr + 0x39)": {
                    "1": "status_flag"
                },
                "*(undefined *)(data_ptr + 0xe)": {
                    "1": "reset_flag"
                },
                "*param_1": {
                    "1": "pointer_value"
                },
                "FUN_08003760": {
                    "1": "process_subfunction2",
                    "2": "initialize_data",
                    "3": "get_value"
                },
                "FUN_080066e8": {
                    "1": "process_chunk",
                    "2": "reverse_bytes"
                },
                "FUN_080067ac": {
                    "1": "validate_input",
                    "2": "parse_data",
                    "25": "process_data"
                },
                "iVar1": {
                    "1": "sub_function_result",
                    "2": "status",
                    "24": "result",
                    "4": "return_value"
                },
                "param_1": {
                    "1": "input_array",
                    "2": "data_buffer",
                    "3": "array",
                    "6": "data_pointer",
                    "8": "data"
                },
                "param_1 + 0xe": {
                    "1": "flag_pointer"
                },
                "param_1[2]": {
                    "1": "array_value"
                },
                "param_1[4]": {
                    "1": "condition_check"
                },
                "param_2": {
                    "1": "packet_type",
                    "2": "data_array",
                    "3": "buffer",
                    "6": "ushort_pointer"
                },
                "param_3": {
                    "1": "param_3",
                    "2": "size",
                    "3": "data_length",
                    "4": "input_size",
                    "5": "length",
                    "6": "array_length"
                },
                "param_4": {
                    "1": "param4_value",
                    "11": "param4",
                    "2": "parameter",
                    "6": "param_4",
                    "7": "param"
                },
                "param_5": {
                    "1": "input_parameter_5"
                },
                "uVar2": {
                    "1": "return_val",
                    "16": "return_value",
                    "6": "result",
                    "7": "status"
                }
            },
            "called": [
                "FUN_080066e8",
                "FUN_08003760"
            ],
            "calling": [
                "FUN_08008500"
            ],
            "code": "\nundefined4 process_data_080067ac(int *data,ushort *ushort_pointer,int array_length,undefined4 param4)\n\n{\n  int result;\n  undefined4 return_value;\n  \n  if (*(char *)((int)data + 0x39) == ' ') {\n    if (ushort_pointer == (ushort *)0x0) {\n      return_value = 1;\n    }\n    else if (array_length == 0) {\n      return_value = 1;\n    }\n    else if (*(char *)(data + 0xe) == '\\x01') {\n      return_value = 2;\n    }\n    else {\n      *(undefined *)(data + 0xe) = 1;\n      data[0xf] = 0;\n      *(undefined *)((int)data + 0x39) = 0x21;\n      return_value = FUN_08003760();\n      *(short *)(data + 9) = (short)array_length;\n      *(short *)((int)data + 0x26) = (short)array_length;\n      while (*(short *)((int)data + 0x26) != 0) {\n        *(short *)((int)data + 0x26) = *(short *)((int)data + 0x26) + -1;\n        if (array_value == 0x1000) {\n          result = FUN_080066e8(data,0x80,0,return_value,param4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data + 4) = *ushort_pointer & 0x1ff;\n          if (condition_check == 0) {\n            ushort_pointer = ushort_pointer + 1;\n          }\n          else {\n            ushort_pointer = (ushort *)((int)ushort_pointer + 1);\n          }\n        }\n        else {\n          result = FUN_080066e8(data,0x80,0,return_value,param4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data + 4) = (uint)*(byte *)ushort_pointer;\n          ushort_pointer = (ushort *)((int)ushort_pointer + 1);\n        }\n      }\n      result = FUN_080066e8(data,0x40,0,return_value,param4);\n      if (result == 0) {\n        *(undefined *)((int)data + 0x39) = 0x20;\n        *(undefined *)(data + 0xe) = 0;\n        return_value = 0;\n      }\n      else {\n        return_value = 3;\n      }\n    }\n  }\n  else {\n    return_value = 2;\n  }\n  return return_value;\n}\n\n",
            "current_name": "process_data_080067ac",
            "entrypoint": "0x080067ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080067ac": "process_data_080067ac",
                "iVar1": "result",
                "param_1": "data",
                "param_1[2]": "array_value",
                "param_1[4]": "condition_check",
                "param_2": "ushort_pointer",
                "param_3": "array_length",
                "param_4": "param4",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800688e": {
            "additional_data": {
                "(char *)((int)param_1 + 0x39)": {
                    "1": "char_element"
                },
                "(char *)(param_1 + 0xe)": {
                    "1": "char_element2"
                },
                "(int)param_1 + 0x39": {
                    "1": "element1"
                },
                "(short *)((int)param_1 + 0x26)": {
                    "1": "param3"
                },
                "(uint *)(*param_1 + 0xc)": {
                    "1": "uint_element"
                },
                "*(char *)((int)param_1 + 0x39)": {
                    "1": "char_check",
                    "3": "char_value"
                },
                "*(char *)(param_1 + 0xe)": {
                    "1": "character_2",
                    "2": "byte_value"
                },
                "*(short *)((int)param_1 + 0x26)": {
                    "1": "short_value2",
                    "2": "data_value3"
                },
                "*(short *)(param_1 + 9)": {
                    "1": "parameter9",
                    "2": "data_value2"
                },
                "*(uint *)(*param_1 + 0xc)": {
                    "1": "address_value",
                    "2": "pointer_value"
                },
                "*(undefined *)((int)param_1 + 0x39)": {
                    "1": "updated_flag"
                },
                "*(undefined *)(param_1 + 0xe)": {
                    "1": "undefined_at14"
                },
                "*param_1": {
                    "1": "ptr"
                },
                "*param_1 + 0xc": {
                    "1": "ptr_value"
                },
                "0x39": {
                    "1": "status"
                },
                "0x80": {
                    "1": "128"
                },
                "FUN_0800688e": {
                    "1": "update_parameter",
                    "2": "validate_parameters",
                    "3": "process_data",
                    "4": "validate_input",
                    "6": "update_data"
                },
                "PTR_INTPARAM_1 + 0x26": {
                    "1": "short_value_ptr"
                },
                "byte *((int)data + 0x39)": {
                    "1": "new_flag_char"
                },
                "char": {
                    "1": "character"
                },
                "char *((int)data + 0x26)": {
                    "1": "short_flag"
                },
                "char *((int)data + 0x39)": {
                    "1": "flag"
                },
                "char *(*((int)data + 4)) + 0xc)": {
                    "1": "pointer"
                },
                "charPtr1": {
                    "1": "char_value"
                },
                "charPtr2": {
                    "1": "flag_value"
                },
                "char_1": {
                    "1": "character"
                },
                "config + 0x26": {
                    "1": "param"
                },
                "config + 0x39": {
                    "1": "error_flag"
                },
                "config + 0xe": {
                    "1": "flag2"
                },
                "config + 9": {
                    "1": "param_type"
                },
                "config[0xf]": {
                    "1": "counter"
                },
                "config[8]": {
                    "1": "device_type"
                },
                "data": {
                    "1": "data_ptr"
                },
                "input_array": {
                    "1": "array"
                },
                "int": {
                    "1": "integer"
                },
                "int *((int)data + 0xe)": {
                    "1": "int_value"
                },
                "int *((int)data + 0xf)": {
                    "1": "int_value2"
                },
                "intPtr1": {
                    "1": "int_ptr_value"
                },
                "int_1": {
                    "1": "integer_value"
                },
                "param_1": {
                    "1": "param_list",
                    "13": "data",
                    "2": "data_ptr",
                    "3": "parameters",
                    "6": "input_array"
                },
                "param_1 + 0x26": {
                    "1": "short_value2"
                },
                "param_1 + 0x39": {
                    "1": "data_ptr[57]"
                },
                "param_1 + 0xe": {
                    "1": "element2"
                },
                "param_1 + 0xf": {
                    "1": "counter_ptr"
                },
                "param_1 + 9": {
                    "1": "short_value_ptr"
                },
                "param_1[0xf]": {
                    "1": "data_ptr[15]",
                    "2": "data_value4"
                },
                "param_1[8]": {
                    "1": "parameter8",
                    "2": "data_value1"
                },
                "param_1[9]": {
                    "1": "data[9]"
                },
                "param_2": {
                    "1": "device_id",
                    "2": "value_1",
                    "26": "value1"
                },
                "param_3": {
                    "1": "param3",
                    "2": "value_2",
                    "26": "value2"
                },
                "short": {
                    "1": "short_value"
                },
                "shortPtr": {
                    "1": "short_pointer"
                },
                "shortPtr1": {
                    "1": "short_value1"
                },
                "shortPtr2": {
                    "1": "short_value2"
                },
                "short_1": {
                    "1": "short_value"
                },
                "uint": {
                    "1": "unsigned_int"
                },
                "undefined4": {
                    "1": "result"
                },
                "undefinedPtr": {
                    "1": "undefined_pointer"
                },
                "ushort *((int)data + 9)": {
                    "1": "short_value"
                },
                "value1": {
                    "1": "initial_value"
                },
                "value2": {
                    "1": "second_value"
                },
                "value_1": {
                    "1": "num1"
                },
                "value_2": {
                    "1": "num2"
                }
            },
            "called": [],
            "calling": [
                "FUN_08008694",
                "FUN_08008730"
            ],
            "code": "\nresult update_data_0800688e(integer *data,integer value1,integer value2)\n\n{\n  if (*(character *)((integer)data + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(character *)(data + 0xe) != '\\x01') {\n    data_value1 = value1;\n    *(short_value *)(data + 9) = (short_value)value2;\n    *(short_value *)((integer)data + 0x26) = (short_value)value2;\n    data_value4 = 0;\n    *(undefined *)((integer)data + 0x39) = 0x21;\n    *(undefined *)(data + 0xe) = 0;\n    *(unsigned_int *)(*data + 0xc) = *(unsigned_int *)(*data + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "update_data_0800688e",
            "entrypoint": "0x0800688e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800688e": "update_data_0800688e",
                "char": "character",
                "int": "integer",
                "param_1": "data",
                "param_1[0xf]": "data_value4",
                "param_1[8]": "data_value1",
                "param_2": "value1",
                "param_3": "value2",
                "short": "short_value",
                "uint": "unsigned_int",
                "undefined4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080068d6": {
            "additional_data": {
                "*(char *)((int)param_1 + 0x3a)": {
                    "1": "char_check",
                    "2": "char_at_index_58",
                    "3": "character",
                    "7": "char_value"
                },
                "*(char *)(param_1 + 0xe)": {
                    "1": "flag_check",
                    "2": "char_at_index_14",
                    "3": "flag_value",
                    "4": "flag"
                },
                "*(short *)((int)param_1 + 0x2e)": {
                    "1": "data[14]",
                    "2": "data_value3",
                    "4": "short_value2"
                },
                "*(short *)(param_1 + 0xb)": {
                    "1": "short_at_b",
                    "2": "short_at_index_11",
                    "3": "short_value1"
                },
                "*(uint *)(*param_1 + 0x14)": {
                    "1": "ptr_value2",
                    "2": "uint_value2"
                },
                "*(uint *)(*param_1 + 0xc)": {
                    "1": "data[2]",
                    "2": "uint_value1"
                },
                "*(undefined *)((int)param_1 + 0x3a)": {
                    "1": "data[58]",
                    "2": "undefined_value"
                },
                "*(undefined *)(param_1 + 0xe)": {
                    "1": "data[14]",
                    "2": "undefined_flag"
                },
                "*data": {
                    "1": "data_pointer"
                },
                "*data + 0x14": {
                    "1": "pointer_value2"
                },
                "*data + 0xC": {
                    "1": "pointer_value1"
                },
                "FUN_080068d6": {
                    "1": "validate_parameters",
                    "2": "process_params",
                    "3": "initialize_data",
                    "4": "validate_input"
                },
                "data[10]": {
                    "1": "buffer_size"
                },
                "data[11]": {
                    "1": "short_value1"
                },
                "data[14]": {
                    "1": "short_value2"
                },
                "data[14].shortValue": {
                    "1": "value2_as_short"
                },
                "data[15]": {
                    "1": "flag"
                },
                "data[58]": {
                    "1": "char_value"
                },
                "input": {
                    "1": "input_array"
                },
                "inputParams": {
                    "1": "input"
                },
                "input_array": {
                    "1": "input_buf"
                },
                "input_buffer": {
                    "1": "input_array"
                },
                "inputs": {
                    "1": "input_array"
                },
                "length": {
                    "1": "num_elements"
                },
                "param_1": {
                    "1": "parameters",
                    "2": "params",
                    "7": "data",
                    "9": "input_array"
                },
                "param_1 + 0xe": {
                    "1": "array_element"
                },
                "param_1[0xf]": {
                    "1": "array_value_at_f",
                    "2": "data_value4"
                },
                "param_1[10]": {
                    "1": "input_buffer[10]",
                    "2": "data[10]",
                    "3": "input_array[10]"
                },
                "param_2": {
                    "1": "param_2_value",
                    "17": "value1",
                    "5": "size"
                },
                "param_3": {
                    "1": "param_y",
                    "17": "value2",
                    "5": "value_2"
                },
                "size": {
                    "1": "array_size"
                },
                "value": {
                    "1": "input_value"
                },
                "value1": {
                    "1": "some_value"
                },
                "value2": {
                    "1": "new_value2"
                },
                "value_1": {
                    "1": "length"
                },
                "value_2": {
                    "1": "value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "code": "\nundefined4 process_data_080068d6(int *input_array,int value1,int value2)\n\n{\n  if (*(char *)((int)input_array + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array[10] = value1;\n    *(short *)(input_array + 0xb) = (short)value2;\n    *(short *)((int)input_array + 0x2e) = (short)value2;\n    data[15] = 0;\n    *(undefined *)((int)input_array + 0x3a) = 0x22;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x100;\n    *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) | 1;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "process_data_080068d6",
            "entrypoint": "0x080068d6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080068d6": "process_data_080068d6",
                "param_1": "input_array",
                "param_1[0xf]": "data[15]",
                "param_1[10]": "input_array[10]",
                "param_2": "value1",
                "param_3": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006932": {
            "additional_data": {
                "(int)param_1": {
                    "1": "parameter_address"
                },
                "*(uint *)(*param_1 + 0xc)": {
                    "1": "value_to_update"
                },
                "*(undefined *)((int)param_1 + 0x39)": {
                    "1": "value",
                    "3": "new_value"
                },
                "*param_1": {
                    "1": "data_value"
                },
                "0x20": {
                    "1": "new_constant_value",
                    "2": "new_value"
                },
                "0x39": {
                    "1": "constant_value"
                },
                "0xc": {
                    "1": "offset_address",
                    "3": "offset"
                },
                "0xffffffbf": {
                    "1": "bitmask",
                    "2": "bit_mask"
                },
                "<variable_name_1>": {
                    "1": "<new_variable_name_1>"
                },
                "<variable_name_2>": {
                    "1": "<new_variable_name_2>"
                },
                "FUN_08006932": {
                    "1": "update_parameters",
                    "4": "update_flags_and_call_function",
                    "5": "set_flag_and_call_function"
                },
                "FUN_08008730": {
                    "1": "invoke_task",
                    "2": "perform_additional_operations",
                    "3": "execute_function",
                    "4": "execute_sub_function"
                },
                "param_1": {
                    "1": "ptr_array",
                    "2": "param",
                    "3": "data",
                    "4": "data_pointer",
                    "5": "input_array"
                }
            },
            "called": [
                "FUN_08008730"
            ],
            "calling": [
                "FUN_080069ec"
            ],
            "code": "\nundefined4 set_flag_and_call_function_08006932(int *input_array)\n\n{\n  *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) & 0xffffffbf;\n  *(undefined *)(parameter_address + 0x39) = 0x20;\n  FUN_08008730();\n  return 0;\n}\n\n",
            "current_name": "set_flag_and_call_function_08006932",
            "entrypoint": "0x08006932",
            "imported": false,
            "improved": true,
            "renaming": {
                "(int)param_1": "parameter_address",
                "FUN_08006932": "set_flag_and_call_function_08006932",
                "param_1": "input_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800694c": {
            "additional_data": {
                "FUN_0800694c": {
                    "1": "convert_character",
                    "11": "process_data",
                    "2": "process_binary_data",
                    "3": "process_string",
                    "5": "parse_string"
                },
                "FUN_0800870c": {
                    "1": "reset_hardware"
                },
                "param_1": {
                    "1": "character_array",
                    "11": "data",
                    "2": "input_data",
                    "3": "data_array",
                    "4": "input_array"
                },
                "pbVar1": {
                    "1": "dest_byte",
                    "17": "byte_ptr",
                    "3": "output_byte",
                    "9": "byte_pointer"
                },
                "puVar3": {
                    "1": "dest_ptr",
                    "16": "undefined_ptr",
                    "9": "undefined_pointer"
                },
                "sVar2": {
                    "1": "offset",
                    "10": "count",
                    "2": "decremented_value",
                    "3": "short_value",
                    "9": "counter"
                }
            },
            "called": [
                "FUN_0800870c"
            ],
            "calling": [
                "FUN_080069ec"
            ],
            "code": "\nundefined4 process_data_0800694c(int *data)\n\n{\n  byte *byte_ptr;\n  short count;\n  undefined *undefined_ptr;\n  \n  if (*(char *)((int)data + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      *(ushort *)data[10] = (ushort)((uint)(*(int *)(*data + 4) << 0x17) >> 0x17);\n      data[10] = data[10] + 2;\n    }\n    else {\n      *(ushort *)data[10] = (ushort)*(undefined4 *)(*data + 4) & 0xff;\n      data[10] = data[10] + 1;\n    }\n  }\n  else if (data[4] == 0) {\n    undefined_ptr = (undefined *)data[10];\n    data[10] = (int)(undefined_ptr + 1);\n    *undefined_ptr = (char)*(undefined4 *)(*data + 4);\n  }\n  else {\n    byte_ptr = (byte *)data[10];\n    data[10] = (int)(byte_ptr + 1);\n    *byte_ptr = (byte)*(undefined4 *)(*data + 4) & 0x7f;\n  }\n  count = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = count;\n  if (count != 0) {\n    return 0;\n  }\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffffdf;\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xfffffeff;\n  *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) & 0xfffffffe;\n  *(undefined *)((int)data + 0x3a) = 0x20;\n  FUN_0800870c();\n  return 0;\n}\n\n",
            "current_name": "process_data_0800694c",
            "entrypoint": "0x0800694c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800694c": "process_data_0800694c",
                "param_1": "data",
                "pbVar1": "byte_ptr",
                "puVar3": "undefined_ptr",
                "sVar2": "count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080069ec": {
            "additional_data": {
                "&LAB_08006b0c_1": {
                    "1": "label_addr"
                },
                "(*param_1)[5]": {
                    "1": "param_1_5_value"
                },
                "FUNC_08004050": {
                    "1": "perform_operation"
                },
                "FUNC_0800877c": {
                    "1": "release_resources",
                    "2": "cleanup_function",
                    "4": "cleanup"
                },
                "FUN_08004050": {
                    "1": "check_flag13"
                },
                "FUN_080064b0": {
                    "1": "call_release_resources",
                    "2": "perform_action"
                },
                "FUN_080064cc": {
                    "1": "execute_function_2"
                },
                "FUN_08006932": {
                    "1": "handle_flag_set"
                },
                "FUN_0800694c": {
                    "1": "function_0800694c"
                },
                "FUN_080069ec": {
                    "1": "check_flags",
                    "2": "check_flags_and_call_functions",
                    "3": "process_flags",
                    "4": "process_data",
                    "7": "check_and_update_flags"
                },
                "LAB_08006b0c_1": {
                    "1": "action_label"
                },
                "iVar1": {
                    "1": "index",
                    "22": "result",
                    "8": "return_value"
                },
                "param_1": {
                    "1": "ptr_array",
                    "3": "data",
                    "4": "flags",
                    "5": "param",
                    "7": "parameters"
                },
                "param_1[0xd]": {
                    "1": "action_ptr"
                },
                "param_1[0xd][0xd]": {
                    "1": "action_ptr_call"
                },
                "param_1[0xf]": {
                    "1": "flag_ptr"
                },
                "puVar3": {
                    "1": "value_pointer",
                    "2": "pointer_var3",
                    "3": "value_ptr",
                    "5": "pointer",
                    "7": "ptr"
                },
                "uVar2": {
                    "1": "flag2",
                    "2": "value_2",
                    "3": "value1",
                    "4": "flag_value",
                    "6": "value2"
                },
                "uVar4": {
                    "1": "value_2",
                    "2": "flag4",
                    "3": "flag_check",
                    "6": "flag"
                },
                "uVar5": {
                    "1": "value_3",
                    "2": "flag_mask",
                    "3": "flag1",
                    "4": "value1"
                },
                "uint **param_1": {
                    "1": "input_data"
                }
            },
            "called": [
                "FUN_0800877c",
                "FUN_080064b0",
                "FUN_08004050",
                "FUN_08006932",
                "FUN_0800694c",
                "FUN_080064cc"
            ],
            "calling": [],
            "code": "\nvoid check_and_update_flags_080069ec(uint **parameters)\n\n{\n  int result;\n  uint value2;\n  uint *ptr;\n  uint flag;\n  uint value3;\n  \n  ptr = *parameters;\n  value3 = *ptr;\n  value2 = ptr[3];\n  if ((((value3 & 0xf) == 0) && ((value3 & 0x20) != 0)) && ((value2 & 0x20) != 0)) {\n    FUN_0800694c(parameters);\n    return;\n  }\n  if (((value3 & 0xf) == 0) || ((flag = ptr[5] & 1, flag == 0 && ((value2 & 0x120) == 0)))) {\n    if (((value3 & 0x80) != 0) && ((value2 & 0x80) != 0)) {\n      FUN_080064cc(parameters);\n      return;\n    }\n    if (((value3 & 0x40) != 0) && ((value2 & 0x40) != 0)) {\n      FUN_08006932(parameters);\n    }\n  }\n  else {\n    if (((value3 & 1) != 0) && ((value2 & 0x100) != 0)) {\n      flag = (uint *)((uint)flag | 1);\n    }\n    if (((value3 & 4) != 0) && (flag != 0)) {\n      flag = (uint *)((uint)flag | 2);\n    }\n    if (((value3 & 2) != 0) && (flag != 0)) {\n      flag = (uint *)((uint)flag | 4);\n    }\n    if (((value3 & 8) != 0) && (flag != 0)) {\n      flag = (uint *)((uint)flag | 8);\n    }\n    if (flag != (uint *)0x0) {\n      if (((value3 & 0x20) != 0) && ((value2 & 0x20) != 0)) {\n        FUN_0800694c(parameters);\n      }\n      if ((((uint)flag & 8) == 0) && (((*parameters)[5] & 0x40) == 0)) {\n        FUNC_0800877c(parameters);\n        flag = (uint *)0x0;\n        return;\n      }\n      FUN_080064b0(parameters);\n      ptr = *parameters;\n      if ((ptr[5] & 0x40) == 0) {\n        FUNC_0800877c(parameters);\n        return;\n      }\n      ptr[5] = ptr[5] & 0xffffffbf;\n      if (another_param == (uint *)0x0) {\n        FUNC_0800877c(parameters);\n        return;\n      }\n      action_ptr_call = (uint)label_addr;\n      result = FUN_08004050(another_param);\n      if (result != 0) {\n        (*(code *)action_ptr_call)();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "check_and_update_flags_080069ec",
            "entrypoint": "0x080069ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "&LAB_08006b0c_1": "label_addr",
                "FUN_080069ec": "check_and_update_flags_080069ec",
                "LAB_08006b0c_1": "label_address",
                "iVar1": "result",
                "param_1": "parameters",
                "param_1[0xd]": "another_param",
                "param_1[0xd][0xd]": "action_ptr_call",
                "param_1[0xf]": "flag",
                "puVar3": "ptr",
                "uVar2": "value2",
                "uVar4": "flag",
                "uVar5": "value3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006b1c": {
            "additional_data": {
                "*(byte *)(param_1 + 0x39)": {
                    "1": "byte_value_2",
                    "10": "byte2",
                    "2": "byte_value2"
                },
                "*(byte *)(param_1 + 0x3a)": {
                    "1": "byte_at_offset_plus_0x3a",
                    "10": "byte1",
                    "2": "byte_value1"
                },
                "0x39": {
                    "3": "offset2"
                },
                "0x3a": {
                    "3": "offset1"
                },
                "FUN_08006b1c": {
                    "31": "combine_bytes"
                },
                "param_1": {
                    "1": "input_param",
                    "15": "input",
                    "2": "offset",
                    "6": "address"
                },
                "param_1 + 0x39": {
                    "1": "offset_plus_0x39",
                    "2": "byte2_address"
                },
                "param_1 + 0x3a": {
                    "1": "first_byte_address",
                    "2": "byte1_address"
                },
                "param_2": {
                    "1": "output_param"
                },
                "param_n": {
                    "1": "new_param"
                },
                "var1": {
                    "1": "byte1"
                },
                "var2": {
                    "1": "byte2"
                },
                "var_1": {
                    "1": "first_byte"
                },
                "var_2": {
                    "1": "second_byte"
                },
                "var_n": {
                    "1": "new_var"
                }
            },
            "called": [],
            "calling": [
                "FUN_080085b8",
                "FUN_080085dc"
            ],
            "code": "\nbyte combine_bytes_08006b1c(int input)\n\n{\n  return *(byte *)(input + 0x3a) | *(byte *)(input + 0x39);\n}\n\n",
            "current_name": "combine_bytes_08006b1c",
            "entrypoint": "0x08006b1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006b1c": "combine_bytes_08006b1c",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006b28": {
            "additional_data": {
                "(param_1 & 0xf)": {
                    "1": "bit_position",
                    "2": "bit_index"
                },
                "(param_1 << 0x18) >> 0x1c": {
                    "2": "shifted_index"
                },
                "(param_1 << 0x18) >> 0x1c) * 4": {
                    "1": "offset"
                },
                "*(uint *)(param_2 + ((param_1 << 0x18) >> 0x1c) * 4)": {
                    "1": "retrieve_value",
                    "2": "target_address"
                },
                "1": {
                    "1": "bit_value"
                },
                ">> 0x1c": {
                    "1": "shift_amount"
                },
                "DAT_": {
                    "1": "unchanged_variable_with_dat_"
                },
                "FUN_08006b28": {
                    "1": "retrieve_bit_from_word",
                    "2": "get_bit_at_index",
                    "3": "retrieve_bit_value",
                    "4": "extract_bit",
                    "5": "get_bit"
                },
                "PTR_": {
                    "1": "unchanged_variable_with_ptr_"
                },
                "extractedValue >> (param_1 & 0xf) & 1": {
                    "1": "result"
                },
                "param_1": {
                    "1": "data_value",
                    "2": "bit_index",
                    "7": "index",
                    "9": "value"
                },
                "param_1 & 0xf": {
                    "2": "bit_position",
                    "3": "bit_mask"
                },
                "param_1 << 0x18": {
                    "1": "shifted_index",
                    "3": "shifted_value"
                },
                "param_2": {
                    "1": "array_start",
                    "2": "pointer",
                    "4": "array_ptr",
                    "5": "address",
                    "9": "array_address"
                },
                "param_3": {
                    "2": "bit_position"
                },
                "param_4": {
                    "1": "mask"
                },
                "param_5": {
                    "1": "shift"
                },
                "result": {
                    "1": "extracted_bit"
                },
                "shifted_index >> 0x1c": {
                    "1": "computed_index"
                },
                "shifted_value >> 0x1c": {
                    "1": "index"
                }
            },
            "called": [],
            "calling": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_080088e0",
                "FUN_08008a6c"
            ],
            "code": "\nuint get_bit_value_08006b28(uint value,int array_address)\n\n{\n  return *(uint *)(array_address + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "current_name": "get_bit_value_08006b28",
            "entrypoint": "0x08006b28",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006b28": "get_bit_value_08006b28",
                "param_1": "value",
                "param_2": "array_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006b3e": {
            "additional_data": {
                "*(uint *)(param_2 + uVar1 * 4)": {
                    "1": "array_element"
                },
                "1 << (param_1 & 0xf)": {
                    "1": "bit_mask"
                },
                "FUN_08006b3e": {
                    "1": "update_bit_in_array",
                    "11": "set_bit_in_array",
                    "2": "update_bit",
                    "6": "set_bit"
                },
                "param_1": {
                    "1": "bit",
                    "13": "bit_position",
                    "2": "value",
                    "3": "input_value",
                    "5": "bit_index"
                },
                "param_1 & 0xf": {
                    "1": "bit_index"
                },
                "param_2": {
                    "1": "bit_array",
                    "17": "array",
                    "2": "memory_address",
                    "5": "array_address"
                },
                "uVar1": {
                    "1": "shifted_bit",
                    "2": "shifted_position",
                    "3": "array_index",
                    "5": "shifted_index",
                    "6": "index"
                }
            },
            "called": [],
            "calling": [
                "FUN_08008990",
                "FUN_080088e0"
            ],
            "code": "\nvoid set_bit_in_array_08006b3e(uint bit_position,int array)\n\n{\n  uint index;\n  \n  index = (bit_position << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) | 1 << (bit_position & 0xf);\n  return;\n}\n\n",
            "current_name": "set_bit_in_array_08006b3e",
            "entrypoint": "0x08006b3e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006b3e": "set_bit_in_array_08006b3e",
                "param_1": "bit_position",
                "param_2": "array",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006b5c": {
            "additional_data": {
                "(param_1 & 0xf)": {
                    "1": "bit_mask"
                },
                "(param_1 << 0x18) >> 0x1c": {
                    "1": "shifted_position"
                },
                "*PTR_[param_2 + uVar1 * 4]": {
                    "1": "target_bit_in_array"
                },
                "4": {
                    "1": "element_size"
                },
                "FUN_08006b5c": {
                    "1": "update_array_value",
                    "16": "update_bit",
                    "2": "update_bit_in_array",
                    "5": "update_bit_value"
                },
                "param_1": {
                    "1": "bit",
                    "15": "bit_position",
                    "5": "value",
                    "8": "bit_index"
                },
                "param_2": {
                    "1": "array_start",
                    "11": "array",
                    "2": "data",
                    "3": "array_pointer",
                    "9": "array_address"
                },
                "uVar1": {
                    "1": "array_index",
                    "2": "bit_index",
                    "3": "shifted_index",
                    "6": "shifted_position",
                    "7": "index"
                }
            },
            "called": [],
            "calling": [
                "FUN_08008990"
            ],
            "code": "\nvoid update_bit_08006b5c(uint bit_position,int array)\n\n{\n  uint index;\n  \n  index = (bit_position << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) & ~(1 << (bit_position & 0xf));\n  return;\n}\n\n",
            "current_name": "update_bit_08006b5c",
            "entrypoint": "0x08006b5c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006b5c": "update_bit_08006b5c",
                "param_1": "bit_position",
                "param_2": "array",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006b7c": {
            "additional_data": {
                "0": {
                    "1": "memory_address_0",
                    "2": "mem_address_0",
                    "3": "memory_address_1",
                    "5": "base_address"
                },
                "1": {
                    "1": "memory_address_1",
                    "2": "first_address",
                    "3": "memory_address_2"
                },
                "2": {
                    "1": "value_3",
                    "2": "base_address_2",
                    "3": "memory_address_3"
                },
                "3": {
                    "1": "address_d",
                    "2": "base_address_3",
                    "3": "memory_address_4"
                },
                "4": {
                    "1": "address_5",
                    "2": "fourth_address",
                    "3": "memory_address_5"
                },
                "FUN_08006b7c": {
                    "1": "get_address_from_parameter",
                    "24": "get_memory_address",
                    "3": "map_param_to_address"
                },
                "case 0": {
                    "1": "base"
                },
                "case 1": {
                    "1": "1"
                },
                "case 2": {
                    "1": "address_two"
                },
                "case 3": {
                    "1": "3"
                },
                "case 4": {
                    "1": "return_address5"
                },
                "param_1": {
                    "1": "input_number",
                    "2": "parameter",
                    "3": "param",
                    "7": "index",
                    "9": "input"
                },
                "return": {
                    "3": "memory_address"
                },
                "return_value": {
                    "1": "memory_address"
                }
            },
            "called": [],
            "calling": [
                "FUN_08008a24",
                "FUN_08008a6c"
            ],
            "code": "\nundefined4 get_memory_address_08006b7c(undefined4 input)\n\n{\n  switch(input) {\n  case 0:\n    memory_address 0x40010800;\n  case 1:\n    memory_address 0x40010c00;\n  case 2:\n    memory_address 0x40011000;\n  case 3:\n    memory_address 0x40011400;\n  case 4:\n    memory_address 0x40011800;\n  default:\n    memory_address 0;\n  }\n}\n\n",
            "current_name": "get_memory_address_08006b7c",
            "entrypoint": "0x08006b7c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006b7c": "get_memory_address_08006b7c",
                "param_1": "input",
                "return": "memory_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006bb8": {
            "additional_data": {
                "FUN_08006bb8": {
                    "1": "set_memory_address_flag",
                    "3": "set_memory_address",
                    "9": "set_flag_and_return_address"
                },
                "_DAT_40021018": {
                    "1": "base_address",
                    "2": "memory_address"
                },
                "param_1": {
                    "1": "page_number",
                    "2": "flag_value",
                    "3": "peripheral_index",
                    "8": "flag"
                },
                "uVar1": {
                    "1": "memory_address",
                    "2": "new_address",
                    "3": "return_address",
                    "4": "result",
                    "7": "return_value",
                    "9": "address"
                }
            },
            "called": [],
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "code": "\n\n\nundefined4 set_flag_and_return_address_08006bb8(undefined4 flag)\n\n{\n  undefined4 address;\n  \n  switch(flag) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    address = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    address = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    address = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    address = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    address = 0x40011800;\n    break;\n  default:\n    address = 0;\n  }\n  return address;\n}\n\n",
            "current_name": "set_flag_and_return_address_08006bb8",
            "entrypoint": "0x08006bb8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006bb8": "set_flag_and_return_address_08006bb8",
                "param_1": "flag",
                "uVar1": "address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006c60": {
            "additional_data": {
                "FUN_08006c60": {
                    "1": "calculate_result",
                    "12": "calculate_shifted_value",
                    "2": "get_shifted_value"
                },
                "iVar1": {
                    "1": "shifted_value",
                    "29": "result"
                },
                "param_1": {
                    "1": "arg_1",
                    "2": "param1",
                    "3": "input_param_1",
                    "4": "input1",
                    "5": "input_param",
                    "8": "input_value"
                },
                "param_2": {
                    "1": "length",
                    "2": "value2",
                    "3": "unused_parameter",
                    "7": "unused_param"
                },
                "param_3": {
                    "1": "unused_param",
                    "2": "data_param_1",
                    "3": "param3",
                    "4": "input3"
                },
                "param_4": {
                    "1": "param2",
                    "2": "unused_param",
                    "3": "param4",
                    "4": "input4"
                },
                "uVar2": {
                    "1": "bitfield",
                    "16": "shifted_value",
                    "2": "converted_value",
                    "7": "shifted_result"
                }
            },
            "called": [
                "FUN_08007376"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nuint calculate_shifted_value_08006c60(undefined4 input_value,undefined4 unused_param,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  uint shifted_value;\n  \n  result = FUN_08007376(input_value,&DAT_0800a5b8,input3,input4,input4);\n  shifted_value = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shifted_value - 1) {\n    shifted_value = 0;\n  }\n  return shifted_value;\n}\n\n",
            "current_name": "calculate_shifted_value_08006c60",
            "entrypoint": "0x08006c60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006c60": "calculate_shifted_value_08006c60",
                "iVar1": "result",
                "param_1": "input_value",
                "param_2": "unused_param",
                "param_3": "input3",
                "param_4": "input4",
                "uVar2": "shifted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006c7c": {
            "additional_data": {
                "FUN_08006c7c": {
                    "1": "check_result",
                    "2": "decode_value",
                    "9": "process_data"
                },
                "iVar1": {
                    "1": "result_of_subfunction",
                    "28": "result"
                },
                "param_1": {
                    "1": "input_param_1",
                    "2": "input_param1",
                    "3": "input1",
                    "5": "input_1",
                    "6": "input_value",
                    "7": "input_param"
                },
                "param_2": {
                    "1": "aux_param1",
                    "11": "unused_param",
                    "2": "param_2",
                    "3": "input2",
                    "5": "input_2"
                },
                "param_3": {
                    "1": "unused_param",
                    "2": "data_1",
                    "4": "input_3",
                    "5": "data_param"
                },
                "param_4": {
                    "1": "size_of_data",
                    "2": "input4",
                    "4": "input_4"
                },
                "uVar2": {
                    "1": "operation_code",
                    "10": "shifted_value",
                    "18": "shifted_result",
                    "2": "shifted_bits"
                }
            },
            "called": [
                "FUN_08007376"
            ],
            "calling": [
                "FUN_080071e4",
                "FUN_08007118"
            ],
            "code": "\nundefined4 process_data_08006c7c(undefined4 input_param,undefined4 unused_param,undefined4 data_param,undefined4 input_4)\n\n{\n  int result;\n  uint shifted_result;\n  \n  result = FUN_08007376(input_param,&DAT_0800a6cc,data_param,input_4,input_4);\n  shifted_result = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_result == 3) {\n    return 8;\n  }\n  if (shifted_result != 4) {\n    if (shifted_result != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "current_name": "process_data_08006c7c",
            "entrypoint": "0x08006c7c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006c7c": "process_data_08006c7c",
                "iVar1": "result",
                "param_1": "input_param",
                "param_2": "unused_param",
                "param_3": "data_param",
                "param_4": "input_4",
                "uVar2": "shifted_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006ca8": {
            "additional_data": {
                "DAT_20000014": {
                    "1": "config_data"
                },
                "FUN_080040e8": {
                    "1": "send_data"
                },
                "FUN_08006bb8": {
                    "1": "calculate_value",
                    "2": "process_data"
                },
                "FUN_08006ca8": {
                    "1": "set_bit_in_flag",
                    "2": "initialize_flags",
                    "3": "update_status",
                    "4": "process_data"
                },
                "iVar3": {
                    "1": "original_value",
                    "2": "status_value",
                    "3": "current_value",
                    "4": "data_value"
                },
                "local_10": {
                    "1": "zero_value",
                    "2": "constant0",
                    "5": "value2",
                    "7": "constant2"
                },
                "local_14": {
                    "1": "constant3",
                    "2": "param1",
                    "5": "value1",
                    "8": "constant1"
                },
                "local_18": {
                    "1": "bit_shift",
                    "19": "bit_mask",
                    "8": "bitmask"
                },
                "param_1": {
                    "1": "input_pointer",
                    "2": "input_data",
                    "3": "data_ptr",
                    "4": "data_pointer"
                },
                "param_2": {
                    "1": "config_param",
                    "10": "param",
                    "2": "input_value",
                    "3": "param2",
                    "8": "value"
                },
                "uVar1": {
                    "30": "result"
                },
                "uVar2": {
                    "1": "flags",
                    "2": "updated_flag",
                    "3": "flag_value",
                    "5": "flag",
                    "8": "updated_value"
                }
            },
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "calling": [
                "FUN_08003bd8"
            ],
            "code": "\n\n\nvoid process_data_08006ca8(int *data_pointer,undefined4 param)\n\n{\n  undefined4 result;\n  uint updated_value;\n  int value;\n  uint bit_mask;\n  undefined4 constant1;\n  undefined4 constant2;\n  \n  value = *data_pointer;\n  if (value == 0x40012400) {\n    updated_value = _DAT_40021018 | 0x200;\n    value = 0x200;\n    _DAT_40021018 = updated_value;\n  }\n  else {\n    updated_value = 0x40012800;\n    if (value == 0x40012800) {\n      updated_value = _DAT_40021018 | 0x400;\n      value = 0x400;\n      _DAT_40021018 = updated_value;\n    }\n  }\n  result = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c,param,updated_value,value);\n  bit_mask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  constant1 = 3;\n  constant2 = 0;\n  FUN_080040e8(result,&bit_mask);\n  return;\n}\n\n",
            "current_name": "process_data_08006ca8",
            "entrypoint": "0x08006ca8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006ca8": "process_data_08006ca8",
                "iVar3": "value",
                "local_10": "constant2",
                "local_14": "constant1",
                "local_18": "bit_mask",
                "param_1": "data_pointer",
                "param_2": "param",
                "uVar1": "result",
                "uVar2": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006d24": {
            "additional_data": {
                "*param_1": {
                    "1": "control_value",
                    "3": "value",
                    "4": "register_value"
                },
                "0x40012400": {
                    "1": "expected_value_a"
                },
                "0x40012800": {
                    "1": "restricted_permission"
                },
                "FUN_08006d24": {
                    "1": "update_data_access",
                    "2": "update_control_register",
                    "3": "update_memory_protection",
                    "5": "update_registers",
                    "9": "update_control_registers"
                },
                "PTR_4002100c": {
                    "1": "control_reg1"
                },
                "PTR_40021018": {
                    "1": "control_reg2"
                },
                "_DAT_4002100c": {
                    "1": "register_a",
                    "5": "control_register1",
                    "8": "register1"
                },
                "_DAT_40021018": {
                    "1": "flag2",
                    "5": "control_register2",
                    "8": "register2"
                },
                "param_1": {
                    "1": "config_ptr",
                    "2": "permissions",
                    "3": "memory_address",
                    "6": "register_value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08003ce8"
            ],
            "code": "\n\n\nvoid update_control_registers_08006d24(int *register_value)\n\n{\n  if (*register_value != 0x40012400) {\n    if (*register_value == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "current_name": "update_control_registers_08006d24",
            "entrypoint": "0x08006d24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006d24": "update_control_registers_08006d24",
                "param_1": "register_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006d80": {
            "additional_data": {
                "&DAT_0800a5b8": {
                    "1": "data"
                },
                "DAT_0800a5b8": {
                    "1": "constant_value"
                },
                "DAT_20000014": {
                    "1": "memory_address"
                },
                "FUN_0800376c": {
                    "1": "check_condition"
                },
                "FUN_080038dc": {
                    "1": "calculate_flag"
                },
                "FUN_080038e4": {
                    "1": "check_variable2"
                },
                "FUN_08003a1c": {
                    "1": "function_four",
                    "2": "check_flag"
                },
                "FUN_08003aa0": {
                    "1": "validate_data2"
                },
                "FUN_08003bd8": {
                    "1": "check_data"
                },
                "FUN_08003ce8": {
                    "1": "reverse_check"
                },
                "FUN_08003de4": {
                    "1": "check_variable6"
                },
                "FUN_08003e20": {
                    "1": "check_value3"
                },
                "FUN_08006c60": {
                    "1": "calculate_flag",
                    "2": "calculate_value"
                },
                "FUN_08006d80": {
                    "1": "extract_and_process_data",
                    "2": "extract_binary_data",
                    "3": "check_and_process_data"
                },
                "FUN_08007320": {
                    "1": "check_condition"
                },
                "FUN_080091c6": {
                    "1": "initialize_buffers",
                    "2": "initialize_buffer"
                },
                "iVar1": {
                    "1": "error_code"
                },
                "local_10": {
                    "1": "temp_8",
                    "12": "var8",
                    "2": "constant2",
                    "5": "temp8"
                },
                "local_1c": {
                    "1": "local_variable_11",
                    "12": "var7",
                    "2": "var5",
                    "5": "temp7"
                },
                "local_20": {
                    "1": "is_file_type_valid",
                    "14": "var6",
                    "2": "var8",
                    "6": "temp6"
                },
                "local_24": {
                    "1": "is_decomp_valid",
                    "14": "var5",
                    "2": "temp4",
                    "6": "temp5"
                },
                "local_28": {
                    "1": "constant3",
                    "14": "var4",
                    "2": "var7",
                    "6": "temp4"
                },
                "local_2c": {
                    "1": "is_file_valid",
                    "16": "var3",
                    "8": "temp3"
                },
                "local_30": {
                    "1": "variable2",
                    "16": "var2",
                    "8": "temp2"
                },
                "local_34": {
                    "1": "variable2",
                    "16": "var1",
                    "8": "temp1"
                },
                "local_38": {
                    "1": "local_variable_4",
                    "19": "buffer",
                    "2": "data_ptr",
                    "3": "temp"
                },
                "local_3c": {
                    "1": "local_variable_3",
                    "21": "flag2",
                    "6": "flag_2"
                },
                "local_40": {
                    "1": "local_variable_2",
                    "21": "flag1",
                    "6": "flag_1"
                },
                "local_44": {
                    "1": "local_variable_1",
                    "2": "condition",
                    "6": "length",
                    "7": "value"
                },
                "local_46": {
                    "1": "status",
                    "2": "output",
                    "26": "result"
                },
                "param_1": {
                    "1": "entry",
                    "12": "input_data",
                    "3": "data",
                    "8": "input_param"
                },
                "uVar2": {
                    "1": "u_value",
                    "2": "flags"
                }
            },
            "called": [
                "FUN_080038dc",
                "FUN_08003bd8",
                "FUN_080038e4",
                "FUN_08003a1c",
                "FUN_08006c60",
                "FUN_080091c6",
                "FUN_0800376c",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003aa0",
                "FUN_08003de4",
                "FUN_08007320"
            ],
            "calling": [
                "FUN_08008880"
            ],
            "code": "\nundefined2 check_and_process_data_08006d80(undefined4 input_data)\n\n{\n  int result;\n  uint flags;\n  undefined2 result;\n  uint value;\n  undefined4 flag1;\n  undefined4 flag2;\n  int buffer;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  undefined4 var5;\n  undefined4 var6;\n  undefined4 var7;\n  undefined4 var8;\n  \n  FUN_080091c6(&buffer,0,0x30);\n  value = 0;\n  flag1 = 0;\n  flag2 = 0;\n  result = 0;\n  buffer = FUN_08007320(input_data,&DAT_0800a5b8);\n  if (buffer == 0) {\n    result = 0;\n  }\n  else {\n    var1 = 0;\n    var2 = 0;\n    var3 = 0;\n    var5 = 0;\n    var7 = 0xe0000;\n    var8 = 0;\n    var4 = 1;\n    var6 = 0;\n    DAT_20000014 = (undefined)input_data;\n    result = FUN_08003bd8(&buffer);\n    if (result == 0) {\n      value = FUN_08006c60(input_data);\n      if (value < 0x12) {\n        flag1 = 1;\n        flag2 = 2;\n        result = FUN_080038e4(&buffer,&value);\n        if (result == 0) {\n          result = FUN_08003e20(&buffer);\n          if (result == 0) {\n            result = FUN_08003aa0(&buffer);\n            if (result == 0) {\n              result = FUN_0800376c(&buffer,10);\n              if (result == 0) {\n                flags = FUN_08003a1c(&buffer);\n                if ((flags & 0x200) != 0) {\n                  result = FUN_080038dc(&buffer);\n                }\n                result = FUN_08003de4(&buffer);\n                if (result == 0) {\n                  result = FUN_08003ce8(&buffer);\n                  if (result != 0) {\n                    result = 0;\n                  }\n                }\n                else {\n                  result = 0;\n                }\n              }\n              else {\n                result = 0;\n              }\n            }\n            else {\n              result = 0;\n            }\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "check_and_process_data_08006d80",
            "entrypoint": "0x08006d80",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006d80": "check_and_process_data_08006d80",
                "iVar1": "result",
                "local_10": "var8",
                "local_1c": "var7",
                "local_20": "var6",
                "local_24": "var5",
                "local_28": "var4",
                "local_2c": "var3",
                "local_30": "var2",
                "local_34": "var1",
                "local_38": "buffer",
                "local_3c": "flag2",
                "local_40": "flag1",
                "local_44": "value",
                "local_46": "result",
                "param_1": "input_data",
                "uVar2": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006e68": {
            "additional_data": {
                "DAT_20000014": {
                    "1": "input_data"
                },
                "FUN_080040e8": {
                    "1": "update_value"
                },
                "FUN_08006bb8": {
                    "1": "convert_value"
                },
                "FUN_08006e68": {
                    "1": "update_configuration",
                    "2": "initialize_settings",
                    "3": "configure_hardware",
                    "4": "initialize_device",
                    "9": "initialize_hardware"
                },
                "FUN_08007376": {
                    "1": "calculate_value"
                },
                "FUN_08007438": {
                    "1": "set_register"
                },
                "_DAT_40010004": {
                    "1": "register2"
                },
                "_DAT_40021018": {
                    "1": "hardware_register"
                },
                "iVar1": {
                    "1": "status",
                    "15": "result",
                    "2": "device_status",
                    "3": "config_value"
                },
                "local_14": {
                    "1": "bit3",
                    "2": "constant2",
                    "5": "value2",
                    "6": "var3",
                    "8": "value3"
                },
                "local_18": {
                    "1": "flag_b",
                    "2": "constant2",
                    "6": "var2",
                    "8": "value2"
                },
                "local_1c": {
                    "1": "flag_a",
                    "12": "value1",
                    "2": "variable1",
                    "4": "constant1",
                    "6": "var1"
                },
                "local_20": {
                    "1": "device_flags",
                    "14": "bit_mask",
                    "2": "flag",
                    "5": "bitmask",
                    "9": "mask"
                },
                "param_1": {
                    "1": "input_param",
                    "2": "config_param",
                    "3": "input_data",
                    "4": "config_data"
                },
                "uVar2": {
                    "1": "conversion_result",
                    "2": "shifted_input",
                    "4": "converted_value",
                    "9": "shifted_value"
                }
            },
            "called": [
                "FUN_08007438",
                "FUN_08007376",
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "calling": [
                "FUN_08006092"
            ],
            "code": "\n\n\nvoid initialize_hardware_08006e68(undefined4 config)\n\n{\n  int result;\n  undefined4 shifted_value;\n  uint bit_mask;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  \n  result = FUN_08007376((int)(char)DAT_20000014,&DAT_0800a6cc);\n  FUN_08007438(config);\n  shifted_value = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c);\n  value1 = 2;\n  value2 = 0;\n  value3 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  switch((uint)(result << 0x11) >> 0x19) {\n  case 1:\n    _DAT_40010004 = _DAT_40010004 | 0x7000001;\n    break;\n  case 2:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n    break;\n  case 3:\n    _DAT_40010004 = _DAT_40010004 | 0x7000002;\n    break;\n  case 4:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n    break;\n  case 5:\n    _DAT_40010004 = _DAT_40010004 | 0x7000004;\n    break;\n  case 6:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n    break;\n  case 7:\n    _DAT_40010004 = _DAT_40010004 | 0x7000008;\n    break;\n  case 8:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n    break;\n  case 9:\n    _DAT_40010004 = _DAT_40010004 | 0x7000030;\n    break;\n  case 10:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n    break;\n  case 0xb:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n    break;\n  case 0xc:\n    _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n    break;\n  case 0xd:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n    break;\n  case 0xe:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n    break;\n  case 0xf:\n    _DAT_40010004 = _DAT_40010004 | 0x7000300;\n    break;\n  case 0x10:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n    break;\n  case 0x11:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n    break;\n  case 0x12:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n    break;\n  case 0x13:\n    _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n    break;\n  case 0x14:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n    break;\n  case 0x15:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n    break;\n  case 0x16:\n    _DAT_40010004 = _DAT_40010004 | 0x7001000;\n    break;\n  case 0x17:\n    _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n    break;\n  case 0x1b:\n    _DAT_40010004 = _DAT_40010004 | 0x7008000;\n    break;\n  case 0x1c:\n    _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n    break;\n  case 0x21:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n    break;\n  case 0x22:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n    break;\n  case 0x23:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n    break;\n  case 0x24:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  bit_mask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  FUN_080040e8(shifted_value,&bit_mask);\n  return;\n}\n\n",
            "current_name": "initialize_hardware_08006e68",
            "entrypoint": "0x08006e68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006e68": "initialize_hardware_08006e68",
                "iVar1": "result",
                "local_14": "value3",
                "local_18": "value2",
                "local_1c": "value1",
                "local_20": "bit_mask",
                "param_1": "config",
                "uVar2": "shifted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007110": {
            "additional_data": {
                "FUN_08007110": {
                    "1": "start_execution",
                    "4": "initialize_program",
                    "5": "initialize_system",
                    "6": "initialize_application"
                },
                "FUN_080074e0": {
                    "1": "perform_operation",
                    "2": "initialize_data",
                    "3": "execute_initialization",
                    "7": "perform_initialization"
                },
                "param_1": {
                    "1": "config_data",
                    "2": "data"
                }
            },
            "called": [
                "FUN_080074e0"
            ],
            "calling": [
                "FUN_08005e2e"
            ],
            "code": "\nvoid initialize_application_08007110(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "current_name": "initialize_application_08007110",
            "entrypoint": "0x08007110",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007110": "initialize_application_08007110"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007118": {
            "additional_data": {
                "DAT_0800a6cc": {
                    "1": "some_constant_value",
                    "2": "constant_value",
                    "3": "data"
                },
                "DAT_20000014": {
                    "1": "some_data2",
                    "2": "constant2"
                },
                "FUN_08006092": {
                    "1": "check_flag",
                    "2": "check_input",
                    "3": "check_condition"
                },
                "FUN_08006186": {
                    "1": "modify_variables",
                    "2": "perform_operation"
                },
                "FUN_08006390": {
                    "1": "perform_operation",
                    "2": "process_data3"
                },
                "FUN_0800643c": {
                    "1": "function4",
                    "2": "reverse_data"
                },
                "FUN_08006c7c": {
                    "1": "perform_operation"
                },
                "FUN_08007118": {
                    "1": "extracted_function",
                    "15": "process_data",
                    "2": "process_binary",
                    "3": "extract_and_process_data"
                },
                "FUN_08007320": {
                    "1": "get_info",
                    "4": "get_value"
                },
                "FUN_08007376": {
                    "1": "check_flags",
                    "2": "check_value"
                },
                "FUN_080075dc": {
                    "1": "divide_values",
                    "6": "calculate_value"
                },
                "FUN_080091c6": {
                    "1": "initialize_data",
                    "2": "initialize_array",
                    "3": "allocate_memory",
                    "4": "initialize_buffer"
                },
                "char param_5": {
                    "1": "flag"
                },
                "iVar2": {
                    "1": "var2",
                    "2": "func_result",
                    "5": "result"
                },
                "iVar3": {
                    "1": "second_func_result",
                    "3": "status"
                },
                "int iVar2": {
                    "1": "check_result"
                },
                "int iVar3": {
                    "1": "function_result"
                },
                "int local_4c": {
                    "1": "additional_param_minus_one"
                },
                "int local_54": {
                    "1": "division_result_minus_one"
                },
                "int local_58": {
                    "1": "buffer_length"
                },
                "int param_3": {
                    "1": "additional_param"
                },
                "local_1b": {
                    "1": "local_1b",
                    "2": "var13",
                    "3": "flag2",
                    "5": "var14"
                },
                "local_44": {
                    "1": "var_i",
                    "2": "var11",
                    "3": "local_var11",
                    "5": "var13"
                },
                "local_48": {
                    "1": "temp9",
                    "2": "var10",
                    "3": "local_var10",
                    "5": "var12"
                },
                "local_4c": {
                    "1": "param_minus_one",
                    "2": "var10",
                    "3": "local_var9",
                    "5": "var11"
                },
                "local_50": {
                    "1": "value9",
                    "2": "var9",
                    "3": "var8",
                    "5": "var10"
                },
                "local_54": {
                    "1": "calculation1",
                    "4": "result",
                    "5": "quotient"
                },
                "local_58": {
                    "1": "flag_value",
                    "14": "buffer",
                    "2": "array",
                    "6": "var8"
                },
                "local_5c": {
                    "1": "local_variable13",
                    "12": "var7",
                    "2": "value7",
                    "3": "var_7",
                    "6": "local_var7"
                },
                "local_60": {
                    "1": "constant_6",
                    "12": "var6",
                    "2": "value6",
                    "3": "var_6",
                    "6": "local_var6"
                },
                "local_64": {
                    "1": "temp4",
                    "12": "var5",
                    "2": "value5",
                    "3": "var_5",
                    "6": "local_var5"
                },
                "local_68": {
                    "1": "constant_4",
                    "12": "var4",
                    "2": "value4",
                    "3": "var_4",
                    "6": "local_var4"
                },
                "local_6c": {
                    "1": "local_value_3",
                    "12": "var3",
                    "2": "value3",
                    "3": "var_3",
                    "6": "local_var3"
                },
                "local_70": {
                    "1": "local_value_2",
                    "12": "var2",
                    "2": "value2",
                    "3": "var_2",
                    "6": "local_var2"
                },
                "local_74": {
                    "1": "size",
                    "12": "var1",
                    "2": "value1",
                    "3": "var_1",
                    "6": "local_var1"
                },
                "param_1": {
                    "1": "input1",
                    "2": "input_param",
                    "6": "input",
                    "8": "input_value"
                },
                "param_2": {
                    "1": "arg2",
                    "15": "divisor",
                    "3": "division_factor",
                    "5": "divider"
                },
                "param_3": {
                    "1": "addend",
                    "2": "limit",
                    "3": "subtract_value",
                    "5": "value"
                },
                "param_4": {
                    "1": "input4",
                    "2": "param_4",
                    "3": "param4",
                    "5": "param_value",
                    "6": "param"
                },
                "param_5": {
                    "1": "param5",
                    "22": "flag"
                },
                "return": {
                    "1": "void"
                },
                "uVar1": {
                    "1": "div_result",
                    "3": "quotient",
                    "6": "division_result"
                },
                "uint param_2": {
                    "1": "data_divisor"
                },
                "uint uVar1": {
                    "1": "division_result"
                },
                "undefined local_1b": {
                    "1": "unused4"
                },
                "undefined4 local_44": {
                    "1": "unused3"
                },
                "undefined4 local_48": {
                    "1": "unused2"
                },
                "undefined4 local_50": {
                    "1": "unused1"
                },
                "undefined4 local_5c": {
                    "1": "constant_g"
                },
                "undefined4 local_60": {
                    "1": "constant_f"
                },
                "undefined4 local_64": {
                    "1": "constant_e"
                },
                "undefined4 local_68": {
                    "1": "constant_d"
                },
                "undefined4 local_6c": {
                    "1": "constant_c"
                },
                "undefined4 local_70": {
                    "1": "constant_b"
                },
                "undefined4 local_74": {
                    "1": "constant_a"
                },
                "undefined4 param_1": {
                    "1": "data_source"
                },
                "undefined4 param_4": {
                    "1": "param_value"
                }
            },
            "called": [
                "FUN_08006092",
                "FUN_08006186",
                "FUN_0800643c",
                "FUN_08006c7c",
                "FUN_080091c6",
                "FUN_08007376",
                "FUN_080075dc",
                "FUN_08006390",
                "FUN_08007320"
            ],
            "calling": [
                "FUN_080088e0"
            ],
            "code": "\nvoid process_data_08007118(undefined4 input_value,uint divisor,int value,undefined4 param,char flag)\n\n{\n  uint division_result;\n  int result;\n  int status;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  undefined4 var5;\n  undefined4 var6;\n  undefined4 var7;\n  int buffer;\n  int var9;\n  undefined4 var10;\n  int var11;\n  undefined4 var12;\n  undefined4 var13;\n  undefined var14;\n  \n  FUN_080091c6(&buffer,0,0x40);\n  var1 = 0;\n  var2 = 0;\n  var3 = 0;\n  var4 = 0;\n  var5 = 0;\n  var6 = 0;\n  var7 = 0;\n  buffer = FUN_08007320(input_value,&DAT_0800a6cc);\n  if (buffer != 0) {\n    division_result = FUN_080075dc();\n    var9 = division_result / divisor - 1;\n    var11 = value + -1;\n    var12 = 0;\n    var10 = 0;\n    var13 = 0;\n    var14 = 0;\n    if (flag == '\\x01') {\n      DAT_20000014 = (undefined)input_value;\n      result = FUN_08006092(&buffer);\n      if (result != 0) {\n        void;\n      }\n    }\n    result = FUN_08006c7c(input_value);\n    if ((((result == 0) || (result == 4)) || (result == 8)) || ((result == 0xc || (result == 0x18)))) {\n      var1 = 0x60;\n      var3 = 0;\n      var5 = 0;\n      var4 = 0;\n      var7 = 0;\n      var6 = 0;\n      var2 = param;\n      status = FUN_08006186(&buffer,&var1,result);\n      if (status == 0) {\n        division_result = FUN_08007376(input_value,&DAT_0800a6cc);\n        if ((division_result & 0x100000) == 0) {\n          FUN_08006390(&buffer,result);\n        }\n        else {\n          FUN_0800643c(&buffer,result);\n        }\n      }\n    }\n  }\n  void;\n}\n\n",
            "current_name": "process_data_08007118",
            "entrypoint": "0x08007118",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007118": "process_data_08007118",
                "iVar2": "result",
                "iVar3": "status",
                "local_1b": "var14",
                "local_44": "var13",
                "local_48": "var12",
                "local_4c": "var11",
                "local_50": "var10",
                "local_54": "var9",
                "local_58": "buffer",
                "local_5c": "var7",
                "local_60": "var6",
                "local_64": "var5",
                "local_68": "var4",
                "local_6c": "var3",
                "local_70": "var2",
                "local_74": "var1",
                "param_1": "input_value",
                "param_2": "divisor",
                "param_3": "value",
                "param_4": "param",
                "param_5": "flag",
                "return": "void",
                "uVar1": "division_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080071e4": {
            "additional_data": {
                "FUN_08005e2e": {
                    "1": "cleanup_data",
                    "7": "cleanup"
                },
                "FUN_080063c0": {
                    "1": "handle_non_flag",
                    "2": "process_result1"
                },
                "FUN_08006460": {
                    "1": "handle_other_flag",
                    "2": "process_result2"
                },
                "FUN_08006c7c": {
                    "1": "get_status",
                    "4": "check_condition"
                },
                "FUN_080071e4": {
                    "1": "execute_operation",
                    "18": "process_data",
                    "2": "extract_data",
                    "3": "process_function"
                },
                "FUN_08007320": {
                    "1": "get_info"
                },
                "FUN_08007376": {
                    "1": "get_result2",
                    "3": "check_flag"
                },
                "iVar1": {
                    "1": "result1",
                    "15": "result",
                    "3": "error_code",
                    "4": "status"
                },
                "local_50": {
                    "1": "result",
                    "11": "results",
                    "2": "data_buffer",
                    "4": "result_array"
                },
                "param_1": {
                    "11": "input_data",
                    "13": "data",
                    "2": "input_param",
                    "5": "input"
                },
                "uVar2": {
                    "1": "bit_value",
                    "13": "flag",
                    "2": "result2",
                    "8": "flags"
                }
            },
            "called": [
                "FUN_08005e2e",
                "FUN_080063c0",
                "FUN_08006c7c",
                "FUN_08006460",
                "FUN_08007376",
                "FUN_08007320"
            ],
            "calling": [
                "FUN_08008990"
            ],
            "code": "\nvoid process_data_080071e4(undefined4 data)\n\n{\n  int result;\n  uint flag;\n  int results [17];\n  \n  results[0] = FUN_08007320(data,&DAT_0800a6cc);\n  if ((results[0] != 0) &&\n     ((((result = FUN_08006c7c(data), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flag = FUN_08007376(data,&DAT_0800a6cc);\n    if ((flag & 0x100000) == 0) {\n      FUN_080063c0(results,result);\n    }\n    else {\n      FUN_08006460(results,result);\n    }\n    FUN_08005e2e(results);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_080071e4",
            "entrypoint": "0x080071e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080071e4": "process_data_080071e4",
                "iVar1": "result",
                "local_50": "results",
                "param_1": "data",
                "uVar2": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800723c": {
            "additional_data": {
                "FUN_08003760": {
                    "1": "perform_starting_actions",
                    "2": "initialize_resources",
                    "3": "initialize_data",
                    "4": "perform_initialization",
                    "7": "execute_initialization"
                },
                "FUN_0800723c": {
                    "1": "execute_program",
                    "2": "execute_initialization_process",
                    "5": "execute_initialization",
                    "9": "initialize_system"
                }
            },
            "called": [
                "FUN_08003760"
            ],
            "calling": [
                "FUN_08008abc"
            ],
            "code": "\nvoid initialize_system_0800723c(void)\n\n{\n  FUN_08003760();\n  return;\n}\n\n",
            "current_name": "initialize_system_0800723c",
            "entrypoint": "0x0800723c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800723c": "initialize_system_0800723c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007244": {
            "called": [],
            "calling": [
                "FUN_08007246"
            ],
            "code": "\nvoid FUNC_08007244(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08007244",
            "entrypoint": "0x08007244",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08007244": "FUNC_08007244"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08007246": {
            "additional_data": {
                "FUNC_08007244": {
                    "1": "run_post_processing",
                    "2": "perform_cleanup",
                    "3": "perform_task"
                },
                "FUN_08003748": {
                    "1": "execute_first_operation",
                    "2": "execute_third_task",
                    "4": "configure_settings",
                    "5": "load_data"
                },
                "FUN_08004046": {
                    "1": "perform_subtask2",
                    "2": "fetch_data",
                    "3": "load_data",
                    "4": "configure_settings"
                },
                "FUN_08007246": {
                    "1": "execute_main_task",
                    "2": "initialize_and_execute",
                    "4": "initialize",
                    "7": "initialize_program"
                }
            },
            "called": [
                "FUN_08007244",
                "FUN_08004046",
                "FUN_08003748"
            ],
            "calling": [],
            "code": "\nvoid initialize_system_08007246(void)\n\n{\n  FUN_08003748();\n  FUN_08004046();\n  FUNC_08007244();\n  return;\n}\n\n",
            "current_name": "initialize_system_08007246",
            "entrypoint": "0x08007246",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007246": "initialize_system_08007246"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007258": {
            "additional_data": {
                "FUN_08007258": {
                    "1": "initialize_peripherals",
                    "2": "configure_peripheral",
                    "3": "initialize_function",
                    "4": "initialize_device",
                    "5": "initialize_peripheral"
                },
                "_DAT_40010004": {
                    "1": "peripheral_register2",
                    "2": "control_register",
                    "4": "register2"
                },
                "_DAT_40021018": {
                    "1": "peripheral_register1",
                    "4": "register1"
                },
                "local_14": {
                    "1": "constant3",
                    "2": "local_variable",
                    "3": "local_var3",
                    "5": "local_var",
                    "6": "constant",
                    "7": "constant_value"
                },
                "local_18": {
                    "1": "arg2",
                    "3": "local_param2",
                    "6": "local_param3",
                    "7": "param3_copy"
                },
                "local_1c": {
                    "1": "param1",
                    "3": "local_param1",
                    "6": "local_param2",
                    "7": "param2_copy"
                },
                "local_20": {
                    "1": "bit_shifted_value",
                    "20": "bit_mask",
                    "4": "bitmask",
                    "5": "mask"
                },
                "param_1": {
                    "1": "input_value1",
                    "2": "input_data",
                    "3": "input_param",
                    "5": "device_id"
                },
                "param_2": {
                    "1": "option1",
                    "19": "param2",
                    "6": "param1"
                },
                "param_3": {
                    "1": "input_value3",
                    "19": "param3",
                    "6": "param2"
                },
                "uVar1": {
                    "1": "shifted_register",
                    "12": "result",
                    "2": "result1",
                    "4": "shifted_value"
                }
            },
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "calling": [
                "FUN_08008990"
            ],
            "code": "\n\n\nvoid initialize_peripheral_08007258(uint device_id,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 result;\n  uint bit_mask;\n  undefined4 param2_copy;\n  undefined4 param3_copy;\n  undefined4 constant_value;\n  \n  result = FUN_08006bb8((device_id << 0x18) >> 0x1c);\n  bit_mask = 1 << (device_id & 0xf) & 0xffff;\n  constant_value = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((device_id - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((device_id == 0xf) || (device_id == 0x13)) || (device_id == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  param2_copy = param2;\n  param3_copy = param3;\n  FUN_080040e8(result,&bit_mask);\n  return;\n}\n\n",
            "current_name": "initialize_peripheral_08007258",
            "entrypoint": "0x08007258",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007258": "initialize_peripheral_08007258",
                "local_14": "constant_value",
                "local_18": "param3_copy",
                "local_1c": "param2_copy",
                "local_20": "bit_mask",
                "param_1": "device_id",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080072d8": {
            "additional_data": {
                "FUN_080042e2": {
                    "1": "perform_sub_logic",
                    "2": "execute_operation",
                    "3": "perform_operation",
                    "5": "process_data"
                },
                "FUN_080072d8": {
                    "1": "choose_function_based_on_parameter",
                    "2": "process_input",
                    "8": "process_param"
                },
                "param_1": {
                    "1": "data_1",
                    "2": "param1",
                    "3": "input_1",
                    "6": "arg1",
                    "8": "input1"
                },
                "param_2": {
                    "1": "flags",
                    "2": "param2",
                    "3": "input_2",
                    "6": "arg2",
                    "8": "input2"
                },
                "param_3": {
                    "1": "operation_code",
                    "13": "flag",
                    "2": "value",
                    "9": "condition"
                },
                "param_4": {
                    "1": "input3",
                    "10": "data",
                    "2": "param",
                    "3": "param4",
                    "5": "arg4"
                }
            },
            "called": [
                "FUN_080042e2"
            ],
            "calling": [
                "FUN_08008a24"
            ],
            "code": "\nvoid process_param_080072d8(undefined4 input1,undefined2 input2,int flag,undefined4 data)\n\n{\n  if (flag == 0) {\n    FUN_080042e2(input1,input2,0,data,data);\n    return;\n  }\n  FUN_080042e2(input1,input2,1,data,data);\n  return;\n}\n\n",
            "current_name": "process_param_080072d8",
            "entrypoint": "0x080072d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080072d8": "process_param_080072d8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "flag",
                "param_4": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080072f0": {
            "additional_data": {
                "FUN_080042d4": {
                    "1": "perform_operation",
                    "12": "call_sub_function",
                    "2": "call_subfunction",
                    "3": "process_data"
                },
                "FUN_080072f0": {
                    "1": "initialize_components",
                    "2": "initialize_function",
                    "21": "execute_function"
                },
                "param_1": {
                    "1": "sub_arg1",
                    "2": "input_param",
                    "3": "input1",
                    "4": "sub_param1",
                    "5": "arg1"
                },
                "param_2": {
                    "1": "value2",
                    "2": "sub_func_param2",
                    "3": "input2",
                    "4": "sub_param2",
                    "5": "arg2"
                },
                "param_3": {
                    "1": "function_param3",
                    "11": "arg3",
                    "2": "output_param",
                    "5": "input3"
                },
                "param_4": {
                    "1": "input_arg4",
                    "11": "arg4",
                    "5": "input4"
                }
            },
            "called": [
                "FUN_080042d4"
            ],
            "calling": [
                "FUN_08008a6c"
            ],
            "code": "\nvoid execute_function_080072f0(undefined4 arg1,undefined2 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_080042d4(arg1,arg2,arg3,arg4,arg4);\n  return;\n}\n\n",
            "current_name": "execute_function_080072f0",
            "entrypoint": "0x080072f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080072f0": "execute_function_080072f0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080072fa": {
            "additional_data": {
                "FUN_080035b8": {
                    "1": "perform_initialization",
                    "2": "load_data",
                    "3": "perform_second_task",
                    "5": "configure_settings"
                },
                "FUN_08003724": {
                    "1": "initialize_process",
                    "2": "perform_initialization",
                    "3": "perform_first_task"
                },
                "FUN_080072fa": {
                    "1": "execute_initialization_tasks",
                    "12": "initialize_system",
                    "3": "initialize_components",
                    "5": "initialize_program"
                }
            },
            "called": [
                "FUN_08003724",
                "FUN_080035b8"
            ],
            "calling": [
                "FUN_080036a2"
            ],
            "code": "\nvoid initialize_system_080072fa(void)\n\n{\n  FUN_08003724();\n  FUN_080035b8();\n  return;\n}\n\n",
            "current_name": "initialize_system_080072fa",
            "entrypoint": "0x080072fa",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080072fa": "initialize_system_080072fa"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007306": {
            "additional_data": {
                "*(undefined4 *)(param_2 + 4)": {
                    "1": "result",
                    "2": "found_value"
                },
                "*param_2": {
                    "2": "current_value",
                    "6": "current_element"
                },
                "DAT_": {
                    "1": "ignore"
                },
                "DAT_0804f528": {
                    "1": "array_element"
                },
                "DAT_0804f52c": {
                    "1": "result"
                },
                "FUN_08007306": {
                    "1": "find_value_in_list",
                    "14": "find_value_in_array",
                    "2": "find_value_offset"
                },
                "PTR_": {
                    "1": "ignore"
                },
                "break": {
                    "1": "found"
                },
                "param_1": {
                    "1": "key",
                    "10": "value_to_find",
                    "6": "target_value",
                    "9": "value"
                },
                "param_2": {
                    "1": "dict",
                    "23": "array",
                    "4": "array_ptr"
                },
                "param_2 + 0xc": {
                    "1": "next_value",
                    "2": "array_element",
                    "4": "next_element"
                },
                "param_2[0]": {
                    "1": "array[0]"
                },
                "param_2[1]": {
                    "1": "array[1]"
                },
                "param_2[n]": {
                    "1": "array[n]"
                },
                "return": {
                    "1": "found_value"
                }
            },
            "called": [
                "FUN_08007306"
            ],
            "calling": [
                "FUN_08007306",
                "FUN_08007320"
            ],
            "code": "\nundefined4 find_value_in_array_08007306(int value_to_find,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      found_value 0;\n    }\n    if (*array == value_to_find) found;\n    array = array + 0xc;\n  }\n  found_value *(undefined4 *)(array + 4);\n}\n\n",
            "current_name": "find_value_in_array_08007306",
            "entrypoint": "0x08007306",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007306": "find_value_in_array_08007306",
                "break": "found",
                "param_1": "value_to_find",
                "param_2": "array",
                "return": "found_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007320": {
            "additional_data": {
                "FUN_08007306": {
                    "1": "execute_operation",
                    "2": "process_input"
                },
                "FUN_08007320": {
                    "1": "check_param_validity",
                    "2": "check_param_and_call_function",
                    "3": "check_valid_param",
                    "9": "check_param"
                },
                "param_1": {
                    "1": "condition",
                    "11": "input_param",
                    "3": "param",
                    "4": "input_value",
                    "8": "input"
                },
                "param_2": {
                    "1": "additional_argument",
                    "2": "data_param"
                },
                "uVar1": {
                    "1": "subfunction_result",
                    "20": "result",
                    "4": "return_value"
                }
            },
            "called": [
                "FUN_08007306"
            ],
            "calling": [
                "FUN_08008078",
                "FUN_080084b0",
                "FUN_080077b0",
                "FUN_080071e4",
                "FUN_08007118",
                "FUN_08006d80",
                "FUN_08008500"
            ],
            "code": "\nundefined4 check_param_08007320(int input_param)\n\n{\n  undefined4 result;\n  \n  if (input_param != -1) {\n    result = FUN_08007306();\n    return result;\n  }\n  return 0;\n}\n\n",
            "current_name": "check_param_08007320",
            "entrypoint": "0x08007320",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007320": "check_param_08007320",
                "param_1": "input_param",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007332": {
            "additional_data": {
                "(int *)(param_2 + 4)": {
                    "1": "current_character"
                },
                "*(int *)(param_2 + 4)": {
                    "1": "array_item"
                },
                "*param_2": {
                    "1": "first_character",
                    "2": "result"
                },
                "*param_2 + 4": {
                    "1": "value_ptr"
                },
                "DAT_": {
                    "2": ""
                },
                "DAT_08007336": {
                    "1": "array_length"
                },
                "FUN_08007332": {
                    "1": "find_value_in_list",
                    "2": "find_character_position",
                    "3": "find_value_in_array",
                    "5": "find_character_index",
                    "6": "find_character"
                },
                "PTR_": {
                    "2": ""
                },
                "new_variable_name_1": {
                    "1": "current_character"
                },
                "param_1": {
                    "1": "item",
                    "2": "target",
                    "3": "character_to_find",
                    "4": "value",
                    "5": "character"
                },
                "param_2": {
                    "1": "char_array",
                    "2": "item_list",
                    "3": "string_array",
                    "4": "character_array",
                    "5": "array_ptr",
                    "6": "string",
                    "7": "array"
                },
                "param_2 + 0xc": {
                    "1": "next_array_element",
                    "2": "next_element"
                },
                "param_2 + 4": {
                    "1": "data_array_ptr"
                },
                "param_2+4": {
                    "1": "array_ptr"
                },
                "param_3": {
                    "1": "character_index"
                }
            },
            "called": [
                "FUN_08007332"
            ],
            "calling": [
                "FUN_0800734a",
                "FUN_08007332"
            ],
            "code": "\nint find_character_08007332(int character,char *array)\n\n{\n  while( true ) {\n    if (*(int *)(array + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(array + 4) == character) break;\n    array = array + 0xc;\n  }\n  return (int)*array;\n}\n\n",
            "current_name": "find_character_08007332",
            "entrypoint": "0x08007332",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007332": "find_character_08007332",
                "param_1": "character",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800734a": {
            "additional_data": {
                "0xffffffff": {
                    "1": "error_code"
                },
                "FUN_08007332": {
                    "1": "perform_operation",
                    "6": "process_input"
                },
                "FUN_0800734a": {
                    "1": "check_param_validity",
                    "10": "check_param",
                    "3": "check_return_value",
                    "7": "check_parameter"
                },
                "param_1": {
                    "1": "input_number",
                    "2": "param",
                    "7": "input_param",
                    "8": "input_value"
                },
                "param_2": {
                    "1": "string_ptr",
                    "2": "string_param"
                },
                "uVar1": {
                    "1": "result_value",
                    "23": "result",
                    "5": "return_value"
                }
            },
            "called": [
                "FUN_08007332"
            ],
            "calling": [
                "FUN_080084b0",
                "FUN_08008d30"
            ],
            "code": "\nundefined4 check_param_0800734a(int input)\n\n{\n  undefined4 result;\n  \n  if (input != 0) {\n    result = FUN_08007332();\n    return result;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "check_param_0800734a",
            "entrypoint": "0x0800734a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800734a": "check_param_0800734a",
                "param_1": "input",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800735a": {
            "additional_data": {
                "(param_2 + 8)": {
                    "1": "desired_value"
                },
                "(undefined4 *)(param_2 + 8)": {
                    "1": "found_value"
                },
                "*(undefined4 *)(param_2 + 8)": {
                    "1": "retrieved_value",
                    "3": "found_value"
                },
                "*param_2": {
                    "1": "array_element",
                    "2": "current_element",
                    "4": "current_value"
                },
                "*param_2 + 0xc": {
                    "1": "next_element"
                },
                "*param_2 == -1": {
                    "1": "current_value_is_minus_one"
                },
                "*param_2 == param_1": {
                    "1": "current_value_equals_value"
                },
                "0xc": {
                    "1": "offset"
                },
                "0xffffffff": {
                    "1": "value_not_found"
                },
                "DAT_": {
                    "1": "unchanged"
                },
                "FUN_0800735a": {
                    "1": "find_value_by_index",
                    "2": "find_value_in_list",
                    "6": "find_value_index",
                    "7": "find_value",
                    "9": "find_value_in_array"
                },
                "PRT_q": {
                    "1": "q"
                },
                "PTR_": {
                    "1": "unchanged"
                },
                "PTR_p": {
                    "1": "p"
                },
                "param_1": {
                    "1": "item",
                    "12": "value_to_find",
                    "2": "search_value",
                    "6": "target_value",
                    "7": "value"
                },
                "param_2": {
                    "1": "list_ptr",
                    "14": "array",
                    "2": "array_of_values",
                    "6": "array_ptr"
                },
                "param_2 + 0xc": {
                    "1": "next_parameter",
                    "4": "next_element"
                },
                "param_2 + 8": {
                    "2": "found_value"
                },
                "param_2+0xc": {
                    "1": "current_element"
                },
                "param_2+8": {
                    "1": "result_index"
                },
                "param_2[0]": {
                    "1": "array[0]"
                }
            },
            "called": [
                "FUN_0800735a"
            ],
            "calling": [
                "FUN_0800735a",
                "FUN_08007376"
            ],
            "code": "\nundefined4 find_value_in_array_0800735a(int value_to_find,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0xffffffff;\n    }\n    if (*array == value_to_find) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 8);\n}\n\n",
            "current_name": "find_value_in_array_0800735a",
            "entrypoint": "0x0800735a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800735a": "find_value_in_array_0800735a",
                "param_1": "value_to_find",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007376": {
            "additional_data": {
                "FUN_0800735a": {
                    "1": "process_data"
                },
                "FUN_08007376": {
                    "1": "handle_return_value",
                    "2": "check_parameter",
                    "4": "check_param",
                    "5": "get_return_value"
                },
                "param_1": {
                    "1": "status_code",
                    "14": "input_value",
                    "2": "input_param",
                    "3": "input_parameter",
                    "6": "input"
                },
                "param_2": {
                    "1": "message"
                },
                "uVar1": {
                    "1": "converted_value",
                    "18": "result",
                    "8": "return_value"
                }
            },
            "called": [
                "FUN_0800735a"
            ],
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08006c60",
                "FUN_080071e4",
                "FUN_08006c7c",
                "FUN_08007118"
            ],
            "code": "\nundefined4 get_return_value_08007376(int input_value)\n\n{\n  undefined4 result;\n  \n  if (input_value == -1) {\n    return 0xffffffff;\n  }\n  result = FUN_0800735a();\n  return result;\n}\n\n",
            "current_name": "get_return_value_08007376",
            "entrypoint": "0x08007376",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007376": "get_return_value_08007376",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800738a": {
            "additional_data": {
                "*param_2": {
                    "1": "current_array_value",
                    "2": "current_value",
                    "3": "current_element"
                },
                "DAT_": {
                    "1": "unchanged"
                },
                "FUN_0800738a": {
                    "1": "check_match",
                    "2": "check_value_in_array",
                    "3": "compare_values"
                },
                "PTR_": {
                    "1": "unchanged"
                },
                "param_1": {
                    "1": "input_param",
                    "11": "value",
                    "2": "value_to_check",
                    "3": "value_1"
                },
                "param_2": {
                    "1": "value2",
                    "2": "array_ptr",
                    "4": "array_of_values",
                    "6": "string",
                    "9": "array"
                },
                "param_3": {
                    "1": "array_length"
                }
            },
            "called": [],
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08008990",
                "FUN_08000a64",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "code": "\nundefined4 find_value_in_array_0800738a(int value,char *array)\n\n{\n  if (value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (value == *array) break;\n    array = array + 0xc;\n  }\n  return 1;\n}\n\n",
            "current_name": "find_value_in_array_0800738a",
            "entrypoint": "0x0800738a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800738a": "find_value_in_array_0800738a",
                "param_1": "value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080073ae": {
            "additional_data": {
                "FUN_080073ae": {
                    "1": "compare_and_return_nonzero",
                    "2": "compare_and_return_zero_if_equal",
                    "3": "compare_and_return_non_zero",
                    "4": "compare_and_return_smaller",
                    "5": "compare_and_return"
                },
                "param_1": {
                    "1": "number1",
                    "11": "value1",
                    "2": "first_number",
                    "3": "num1",
                    "4": "first_param",
                    "8": "value_1"
                },
                "param_1 != param_2": {
                    "1": "value1_not_equal_value2"
                },
                "param_1 = 0": {
                    "1": "set_value1_to_zero"
                },
                "param_1 == 0": {
                    "1": "value1_is_zero"
                },
                "param_2": {
                    "1": "input_2",
                    "11": "value2",
                    "2": "second_number",
                    "3": "num2",
                    "4": "second_param",
                    "8": "value_2"
                },
                "param_2 == 0": {
                    "1": "value2_is_zero"
                }
            },
            "called": [],
            "calling": [
                "FUN_08008078",
                "FUN_080077b0"
            ],
            "code": "\nint compare_and_return_080073ae(int value1,int value2)\n\n{\n  if (value1 != value2) {\n    if (value1 == 0) {\n      return value2;\n    }\n    if (value2 == 0) {\n      return value1;\n    }\n    value1 = 0;\n  }\n  return value1;\n}\n\n",
            "current_name": "compare_and_return_080073ae",
            "entrypoint": "0x080073ae",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080073ae": "compare_and_return_080073ae",
                "param_1": "value1",
                "param_2": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080073c0": {
            "additional_data": {
                "DAT_200005f4": {
                    "1": "callback_pointer",
                    "12": "callback_function",
                    "4": "callback_function_ptr",
                    "6": "callback_function_pointer"
                },
                "DAT_2000060c": {
                    "1": "function_parameter",
                    "5": "callback_parameter",
                    "7": "callback_function_parameter",
                    "9": "callback_data"
                },
                "FUN_080073c0": {
                    "1": "execute_code_if_not_null",
                    "12": "execute_callback",
                    "15": "execute_callback_function"
                },
                "PTR_200005f4": {
                    "1": "callback_func"
                },
                "code": {
                    "1": "function_pointer",
                    "2": "callback_function"
                },
                "code *DAT_200005f4": {
                    "1": "callback_function_pointer"
                },
                "execute_callback_if_present": {
                    "1": "execute_callback_if_present"
                },
                "execute_code_if_not_null": {
                    "1": "execute_dispatcher"
                },
                "execute_dispatcher": {
                    "1": "execute_dispatcher"
                },
                "function_pointer": {
                    "1": "dispatcher"
                }
            },
            "called": [],
            "calling": [
                "FUN_08005cb4"
            ],
            "code": "\nvoid execute_callback_function_080073c0(void)\n\n{\n  if (DAT_200005f4 != (callback_function *)0x0) {\n    (*DAT_200005f4)(DAT_2000060c);\n  }\n  return;\n}\n\n",
            "current_name": "execute_callback_function_080073c0",
            "entrypoint": "0x080073c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080073c0": "execute_callback_function_080073c0",
                "code": "callback_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080073e8": {
            "additional_data": {
                "": {
                    "1": ""
                },
                "<original_parameter_name>": {
                    "1": "<new_parameter_name>"
                },
                "<original_parameter_name_1>": {
                    "1": "<new_parameter_name_1>"
                },
                "<original_variable_name_1>": {
                    "1": "<new_variable_name_1>"
                },
                "DAT_": {
                    "1": "unchanged",
                    "2": ""
                },
                "DAT_080073e8": {
                    "1": "none"
                },
                "DAT_1": {
                    "1": "unchanged"
                },
                "FUN_080073e8": {
                    "1": "loop_infinitely",
                    "26": "infinite_loop",
                    "3": "run_infinite_loop"
                },
                "PTR_": {
                    "1": "unchanged",
                    "2": ""
                },
                "PTR_0800ac98": {
                    "1": "p_data"
                },
                "PTR_1": {
                    "1": "unchanged"
                },
                "do": {
                    "1": "loop",
                    "2": "do"
                },
                "original_function_name": {
                    "1": "more_descriptive_function_name"
                },
                "true": {
                    "3": "true"
                },
                "while": {
                    "1": "as_long_as"
                }
            },
            "called": [
                "FUN_080073e8"
            ],
            "calling": [
                "FUN_080035b8",
                "FUN_080073e8"
            ],
            "code": "\nvoid infinite_loop_080073e8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } as_long_as( true );\n}\n\n",
            "current_name": "infinite_loop_080073e8",
            "entrypoint": "0x080073e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080073e8": "infinite_loop_080073e8",
                "while": "as_long_as"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080073ec": {
            "additional_data": {
                "": {
                    "1": "memory_address"
                },
                "FUN_080073ec": {
                    "1": "set_flags_and_values",
                    "3": "initialize_system",
                    "4": "initialize_memory",
                    "6": "initialize_peripheral_registers",
                    "9": "initialize_registers"
                },
                "_DAT_40021000": {
                    "1": "system_status_flags",
                    "4": "peripheral_register1",
                    "5": "control_register1",
                    "7": "register1"
                },
                "_DAT_40021004": {
                    "1": "io_register_2",
                    "4": "peripheral_register2",
                    "5": "control_register2",
                    "7": "register2"
                },
                "_DAT_40021008": {
                    "1": "status_register",
                    "2": "timer_register",
                    "3": "data_register",
                    "4": "peripheral_register3",
                    "6": "register3"
                },
                "_DAT_e000ed08": {
                    "1": "system_control",
                    "3": "interrupt_control_register",
                    "4": "peripheral_register4",
                    "5": "interrupt_register",
                    "6": "register4"
                }
            },
            "called": [],
            "calling": [
                "entry"
            ],
            "code": "\n\n\nvoid initialize_registers_080073ec(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "current_name": "initialize_registers_080073ec",
            "entrypoint": "0x080073ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080073ec": "initialize_registers_080073ec"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007438": {
            "additional_data": {
                "*param_1": {
                    "1": "register_value",
                    "2": "value"
                },
                "0x40000000": {
                    "1": "flag_2"
                },
                "0x40000400": {
                    "1": "flag_3"
                },
                "0x40000800": {
                    "1": "flag_4"
                },
                "0x40012c00": {
                    "1": "flag_1"
                },
                "DAT_20000610": {
                    "1": "last_data_pointer1",
                    "2": "memory_address1"
                },
                "DAT_20000614": {
                    "1": "value_ptr2",
                    "2": "data_ptr2"
                },
                "DAT_20000618": {
                    "1": "register5",
                    "2": "data_ptr3"
                },
                "DAT_2000061c": {
                    "1": "data_flag4",
                    "2": "flag_ptr4"
                },
                "FUN_08007438": {
                    "1": "update_control_register",
                    "2": "update_registers",
                    "3": "update_flags",
                    "4": "update_data_flags"
                },
                "PTR_40021018": {
                    "1": "register_status1"
                },
                "PTR_4002101c": {
                    "1": "register_status2"
                },
                "PTR_DAT_20000610": {
                    "1": "status_zero"
                },
                "PTR_DAT_20000614": {
                    "1": "status_one"
                },
                "PTR_DAT_20000618": {
                    "1": "status_two"
                },
                "PTR_DAT_2000061c": {
                    "1": "status_three"
                },
                "_DAT_40021018": {
                    "1": "status_flags1",
                    "2": "flags1",
                    "3": "flag_register1"
                },
                "_DAT_4002101c": {
                    "1": "status_register_b",
                    "2": "flag2",
                    "3": "flag_register2"
                },
                "param_1": {
                    "1": "configuration",
                    "2": "status",
                    "3": "memory_address",
                    "4": "input",
                    "6": "data_pointer"
                },
                "param_2": {
                    "1": "new_status_flag"
                }
            },
            "called": [],
            "calling": [
                "FUN_08006e68",
                "FUN_08007708"
            ],
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid update_status_flags_08007438(int *data_pointer)\n\n{\n  if (*data_pointer == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 | 0x800;\n    DAT_20000610 = data_pointer;\n  }\n  if (*data_pointer == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n    DAT_20000614 = data_pointer;\n  }\n  if (*data_pointer == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c | 2;\n    DAT_20000618 = data_pointer;\n  }\n  if (*data_pointer == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c | 4;\n    DAT_2000061c = data_pointer;\n  }\n  return;\n}\n\n",
            "current_name": "update_status_flags_08007438",
            "entrypoint": "0x08007438",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007438": "update_status_flags_08007438",
                "param_1": "data_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080074e0": {
            "additional_data": {
                "*param_1": {
                    "1": "value_at_memory_address",
                    "2": "config_value",
                    "3": "value"
                },
                "0x40000000": {
                    "1": "flag_2_magical_constant"
                },
                "0x40000400": {
                    "1": "flag_3_magical_constant"
                },
                "0x40000800": {
                    "1": "flag_4_magical_constant"
                },
                "0x40012c00": {
                    "1": "flag_1_magical_constant"
                },
                "DAT_40021018": {
                    "1": "flag_value_1"
                },
                "DAT_4002101c": {
                    "1": "flag_value_2"
                },
                "FUN_080074e0": {
                    "1": "update_values",
                    "2": "update_flags_based_on_value",
                    "4": "update_configuration"
                },
                "FUN_080074e0_LOCAL_1": {
                    "1": "flag_value"
                },
                "PTR_40021018": {
                    "1": "register_1"
                },
                "PTR_4002101c": {
                    "1": "register_2"
                },
                "PTR_DAT_40021018": {
                    "1": "memory_address_1"
                },
                "PTR_DAT_4002101c": {
                    "1": "memory_address_2"
                },
                "_DAT_40021018": {
                    "1": "control_register1",
                    "2": "register1"
                },
                "_DAT_4002101c": {
                    "1": "control_register2",
                    "2": "register2"
                },
                "param_1": {
                    "1": "input_pointer",
                    "2": "input_value",
                    "3": "value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08007710",
                "FUN_08007110"
            ],
            "code": "\n\n\nvoid update_configuration_080074e0(int *config_value)\n\n{\n  if (*config_value == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*config_value == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*config_value == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*config_value == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "current_name": "update_configuration_080074e0",
            "entrypoint": "0x080074e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080074e0": "update_configuration_080074e0",
                "param_1": "config_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007544": {
            "additional_data": {
                "0x19": {
                    "1": "priority_4"
                },
                "0x1c": {
                    "1": "priority_2"
                },
                "0x1d": {
                    "1": "priority_1"
                },
                "0x1e": {
                    "1": "priority_3"
                },
                "0x40000000": {
                    "1": "timer_0"
                },
                "0x40000400": {
                    "1": "timer_1"
                },
                "0x40000800": {
                    "1": "timer_2"
                },
                "0x40012c00": {
                    "1": "timer_3"
                },
                "0xffffffff": {
                    "1": "invalid_timer"
                },
                "FUN_08007544": {
                    "1": "get_timer_interrupt_priority",
                    "15": "get_timer_ir_qn",
                    "2": "find_timer_irq"
                },
                "FUN_080098d8": {
                    "1": "log_unknown_irq",
                    "12": "print_error_message",
                    "3": "log_error_message"
                },
                "param_1": {
                    "1": "timer_irq",
                    "12": "irq_number",
                    "2": "timer_ir_qn"
                },
                "uint param_1": {
                    "1": "timer_number"
                }
            },
            "called": [
                "FUN_080098d8"
            ],
            "calling": [
                "FUN_080076e0",
                "FUN_08007648"
            ],
            "code": "\nundefined4 get_timer_ir_qn_08007544(uint irq_number)\n\n{\n  if (irq_number == 0xffffffff) {\n    return 0;\n  }\n  if (irq_number == 0x40000400) {\n    return 0x1d;\n  }\n  if (irq_number < 0x40000401) {\n    if (irq_number == 0x40000000) {\n      return 0x1c;\n    }\n  }\n  else {\n    if (irq_number == 0x40000800) {\n      return 0x1e;\n    }\n    if (irq_number == 0x40012c00) {\n      return 0x19;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer IRQn\");\n  return 0;\n}\n\n",
            "current_name": "get_timer_ir_qn_08007544",
            "entrypoint": "0x08007544",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007544": "get_timer_ir_qn_08007544",
                "param_1": "irq_number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007594": {
            "additional_data": {
                "FUN_08007594": {
                    "1": "identify_timer_instance",
                    "22": "check_timer_instance",
                    "3": "check_timer",
                    "4": "get_timer_instance"
                },
                "FUN_080098d8": {
                    "1": "display_error_message",
                    "14": "print_error_message",
                    "8": "log_error_message"
                },
                "param_1": {
                    "1": "timer",
                    "2": "instance",
                    "22": "timer_instance"
                },
                "param_2": {
                    "3": "n/a"
                },
                "param_3": {
                    "3": "n/a"
                },
                "param_4": {
                    "3": "n/a"
                }
            },
            "called": [
                "FUN_080098d8"
            ],
            "calling": [
                "FUN_080075dc"
            ],
            "code": "\nundefined4 check_timer_instance_08007594(uint timer_instance)\n\n{\n  if (timer_instance == 0xffffffff) {\n    return 0;\n  }\n  if (timer_instance == 0x40000400) {\n    return 1;\n  }\n  if (timer_instance < 0x40000401) {\n    if (timer_instance == 0x40000000) {\n      return 1;\n    }\n  }\n  else {\n    if (timer_instance == 0x40000800) {\n      return 1;\n    }\n    if (timer_instance == 0x40012c00) {\n      return 2;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer instance\");\n  return 0;\n}\n\n",
            "current_name": "check_timer_instance_08007594",
            "entrypoint": "0x08007594",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007594": "check_timer_instance_08007594",
                "param_1": "timer_instance"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080075dc": {
            "additional_data": {
                "FUN_08005a28": {
                    "1": "handle_case1"
                },
                "FUN_08005a48": {
                    "1": "handle_case2"
                },
                "FUN_08005a68": {
                    "1": "set_values",
                    "2": "initialize_variables"
                },
                "FUN_08007594": {
                    "1": "calculate_result"
                },
                "FUN_080075dc": {
                    "1": "calculate_doubled_value",
                    "2": "calculate_clock_shift",
                    "3": "calculate_clock_frequency",
                    "7": "calculate_shifted_value",
                    "8": "calculate_clock_multiplier"
                },
                "FUN_080098d8": {
                    "1": "show_error_message",
                    "2": "display_error_message",
                    "3": "print_error_message"
                },
                "iVar2": {
                    "1": "final_result",
                    "19": "result",
                    "5": "return_value"
                },
                "local_10": {
                    "1": "var_5",
                    "2": "local_variable5",
                    "3": "var5",
                    "4": "var4"
                },
                "local_14": {
                    "1": "temp_value3",
                    "2": "local_var3",
                    "3": "value4",
                    "4": "var3"
                },
                "local_18": {
                    "1": "variable2",
                    "2": "local_variable3",
                    "3": "value3",
                    "4": "var2"
                },
                "local_1c": {
                    "1": "variable1",
                    "2": "local_variable2",
                    "3": "value2",
                    "4": "var1"
                },
                "local_20": {
                    "1": "second_param",
                    "2": "local_variable1",
                    "3": "value1"
                },
                "local_c": {
                    "1": "source2",
                    "2": "local_variable6",
                    "3": "var6",
                    "4": "var5"
                },
                "param_1": {
                    "1": "input_val",
                    "3": "input",
                    "4": "input_param",
                    "9": "clock_source"
                },
                "uVar1": {
                    "1": "value1",
                    "2": "clock_source",
                    "3": "temp1",
                    "4": "temp_var1"
                },
                "uVar3": {
                    "1": "original_clock_setting",
                    "2": "clock_value",
                    "3": "temp2",
                    "4": "temp_var2"
                }
            },
            "called": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080098d8",
                "FUN_08007594",
                "FUN_08005a68"
            ],
            "calling": [
                "FUN_08007648",
                "FUN_08007118"
            ],
            "code": "\nint calculate_clock_multiplier_080075dc(undefined4 input_value)\n\n{\n  uint temp_var1;\n  int result;\n  uint temp_var2;\n  undefined4 var1;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  uint var4;\n  uint var5;\n  \n  var1 = 0;\n  var2 = 0;\n  var3 = 0;\n  var4 = 0;\n  var5 = 0;\n  var1 = 0;\n  FUN_08005a68(&var1,&var1);\n  result = FUN_08007594(input_value);\n  temp_var1 = var5;\n  temp_var2 = var4;\n  if (result == 1) {\n    result = FUN_08005a28();\n  }\n  else if (result == 2) {\n    result = FUN_08005a48();\n    temp_var2 = temp_var1;\n  }\n  else {\n    FUN_080098d8(\"TIM: Unknown clock source\");\n    result = 0;\n    temp_var2 = 0;\n  }\n  if (temp_var2 != 0x500) {\n    if (temp_var2 < 0x501) {\n      if (temp_var2 != 0x400) {\n        return result;\n      }\n    }\n    else if ((temp_var2 != 0x600) && (temp_var2 != 0x700)) {\n      return result;\n    }\n  }\n  return result << 1;\n}\n\n",
            "current_name": "calculate_clock_multiplier_080075dc",
            "entrypoint": "0x080075dc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080075dc": "calculate_clock_multiplier_080075dc",
                "iVar2": "result",
                "local_10": "var4",
                "local_14": "var3",
                "local_18": "var2",
                "local_1c": "var1",
                "local_20": "var1",
                "local_c": "var5",
                "param_1": "input_value",
                "uVar1": "temp_var1",
                "uVar3": "temp_var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007648": {
            "additional_data": {
                "FUN_08003f30": {
                    "1": "execute_process1",
                    "2": "perform_operation"
                },
                "FUN_08003f94": {
                    "1": "show_message"
                },
                "FUN_08006060": {
                    "2": "check_condition"
                },
                "FUN_08006128": {
                    "1": "perform_operation"
                },
                "FUN_08006280": {
                    "1": "handle_error"
                },
                "FUN_08007544": {
                    "1": "get_character",
                    "2": "get_char"
                },
                "FUN_080075dc": {
                    "1": "calculate_result",
                    "2": "calculate_value"
                },
                "FUN_08007648": {
                    "12": "initialize_parameters",
                    "5": "initialize_data",
                    "9": "initialize_params"
                },
                "cVar1": {
                    "1": "result",
                    "13": "char_value",
                    "3": "char_var",
                    "8": "character"
                },
                "iVar3": {
                    "1": "integer_var",
                    "10": "return_value",
                    "3": "result2",
                    "5": "result"
                },
                "local_1c": {
                    "1": "local_value7",
                    "14": "local_var7",
                    "2": "var7",
                    "3": "local_var_7"
                },
                "local_20": {
                    "1": "local_value_6",
                    "14": "local_var6",
                    "2": "var5",
                    "3": "local_var_6"
                },
                "local_24": {
                    "1": "local5",
                    "14": "local_var5",
                    "2": "var5",
                    "3": "local_var_5"
                },
                "local_28": {
                    "1": "local_value4",
                    "14": "local_var4",
                    "2": "local_data4",
                    "3": "local_variable4"
                },
                "local_2c": {
                    "1": "local3",
                    "14": "local_var3",
                    "2": "var2",
                    "3": "local_var_3"
                },
                "local_30": {
                    "1": "local_value_2",
                    "14": "local_var2",
                    "2": "var2",
                    "3": "local_var_2"
                },
                "local_34": {
                    "1": "local1",
                    "14": "local_var1",
                    "2": "local_data1",
                    "3": "local_variable1",
                    "4": "var1"
                },
                "param_1": {
                    "1": "output_buffer",
                    "2": "output_params",
                    "3": "param_array",
                    "4": "data",
                    "5": "parameters",
                    "7": "params"
                },
                "param_2": {
                    "1": "input_data",
                    "12": "value1",
                    "2": "value",
                    "3": "value_1",
                    "4": "input_value1"
                },
                "param_3": {
                    "1": "arg2",
                    "12": "value2",
                    "2": "value3",
                    "3": "value_2",
                    "4": "input_value2"
                },
                "param_4": {
                    "1": "arg3",
                    "12": "value3",
                    "2": "value4",
                    "3": "value_3",
                    "4": "input_value3"
                },
                "puVar4": {
                    "1": "next_args",
                    "2": "param_ptr",
                    "3": "pointer"
                },
                "uVar2": {
                    "1": "divided_result",
                    "2": "divided_value",
                    "20": "result"
                }
            },
            "called": [
                "FUN_08007544",
                "FUN_08006280",
                "FUN_08003f30",
                "FUN_08006060",
                "FUN_08003f94",
                "FUN_080075dc",
                "FUN_08006128"
            ],
            "calling": [
                "FUN_0800242c"
            ],
            "code": "\nvoid initialize_parameters_08007648(undefined4 *params,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  char char_value;\n  uint result;\n  int return_value;\n  undefined4 *pointer;\n  undefined4 local_var1;\n  undefined4 local_var2;\n  undefined4 local_var3;\n  undefined4 local_var4;\n  undefined4 local_var5;\n  undefined4 local_var6;\n  undefined4 local_var7;\n  \n  local_var1 = 0;\n  local_var2 = 0;\n  local_var3 = 0;\n  local_var4 = 0;\n  local_var5 = 0;\n  local_var6 = 0;\n  local_var7 = 0;\n  pointer = params + 1;\n  *params = 0x40000000;\n  params[1] = 0x40000000;\n  params[4] = value1;\n  result = FUN_080075dc();\n  params[2] = result / 1000000 - 1;\n  params[5] = 0;\n  params[3] = 0;\n  params[6] = 0;\n  params[0x13] = value3;\n  local_var1 = 0;\n  local_var3 = 0;\n  local_var5 = 0;\n  local_var4 = 0;\n  local_var6 = 0;\n  local_var7 = 0;\n  local_var2 = value2;\n  char_value = FUN_08007544(*params);\n  FUN_08003f30((int)char_value,0xe,0);\n  char_value = FUN_08007544(*params);\n  FUN_08003f94((int)char_value);\n  return_value = FUN_08006060(pointer);\n  if ((return_value == 0) && (return_value = FUN_08006128(pointer,&local_var1,0), return_value == 0)) {\n    FUN_08006280(pointer,0);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_parameters_08007648",
            "entrypoint": "0x08007648",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007648": "initialize_parameters_08007648",
                "cVar1": "char_value",
                "iVar3": "return_value",
                "local_1c": "local_var7",
                "local_20": "local_var6",
                "local_24": "local_var5",
                "local_28": "local_var4",
                "local_2c": "local_var3",
                "local_30": "local_var2",
                "local_34": "local_var1",
                "param_1": "params",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "puVar4": "pointer",
                "uVar2": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080076e0": {
            "additional_data": {
                "*param_1": {
                    "1": "input_data"
                },
                "FUN_08003fb0": {
                    "1": "process_data"
                },
                "FUN_08005df4": {
                    "1": "check_data"
                },
                "FUN_080062f4": {
                    "1": "process_array_and_value"
                },
                "FUN_08007544": {
                    "1": "calculate_char"
                },
                "FUN_080076e0": {
                    "1": "initialize_and_process",
                    "15": "initialize_data",
                    "2": "process_data",
                    "3": "initialize",
                    "4": "initialize_param",
                    "5": "initialize_function"
                },
                "cVar1": {
                    "1": "char_result",
                    "29": "result"
                },
                "iVar2": {
                    "1": "error_check",
                    "17": "return_value",
                    "9": "status"
                },
                "param_1": {
                    "1": "param",
                    "2": "input_array",
                    "3": "param_array",
                    "4": "data_pointer",
                    "9": "data"
                }
            },
            "called": [
                "FUN_08003fb0",
                "FUN_08007544",
                "FUN_08005df4",
                "FUN_080062f4"
            ],
            "calling": [
                "FUN_08002578"
            ],
            "code": "\nvoid initialize_data_080076e0(undefined4 *data)\n\n{\n  char result;\n  int return_value;\n  \n  data[0x13] = 0;\n  result = FUN_08007544(*data);\n  FUN_08003fb0((int)result);\n  return_value = FUN_08005df4(data + 1);\n  if (return_value == 0) {\n    FUN_080062f4(data + 1,0);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_080076e0",
            "entrypoint": "0x080076e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080076e0": "initialize_data_080076e0",
                "cVar1": "result",
                "iVar2": "return_value",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007708": {
            "additional_data": {
                "FUN_08007438": {
                    "1": "initialize_components",
                    "12": "perform_initialization",
                    "2": "initialize_data",
                    "5": "execute_initialization"
                },
                "FUN_08007708": {
                    "1": "run_initialization_process",
                    "2": "execute_preparation",
                    "3": "execute_main_function",
                    "6": "initialize_system",
                    "7": "initialize_application"
                },
                "param_1": {
                    "1": "subfunction_1_param_1",
                    "5": "data_array"
                }
            },
            "called": [
                "FUN_08007438"
            ],
            "calling": [
                "FUN_08006060"
            ],
            "code": "\nvoid initialize_application_08007708(void)\n\n{\n  FUN_08007438();\n  return;\n}\n\n",
            "current_name": "initialize_application_08007708",
            "entrypoint": "0x08007708",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007708": "initialize_application_08007708"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007710": {
            "additional_data": {
                "FUN_080074e0": {
                    "1": "initialize_components",
                    "12": "perform_initialization",
                    "2": "initialize_data",
                    "3": "process_data",
                    "5": "execute_initialization"
                },
                "FUN_08007710": {
                    "1": "initialize_components",
                    "10": "initialize_system",
                    "12": "initialize_application",
                    "2": "execute_main_function",
                    "3": "execute_initialization"
                },
                "param_1": {
                    "1": "data_pointer",
                    "2": "input_array",
                    "5": "data_array"
                }
            },
            "called": [
                "FUN_080074e0"
            ],
            "calling": [
                "FUN_08005df4"
            ],
            "code": "\nvoid initialize_application_08007710(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "current_name": "initialize_application_08007710",
            "entrypoint": "0x08007710",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007710": "initialize_application_08007710"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007718": {
            "additional_data": {
                "FUN_08007718": {
                    "1": "decrement_parameter",
                    "2": "subtract_by_four",
                    "26": "subtract_four"
                },
                "param_1": {
                    "1": "number",
                    "10": "input",
                    "2": "input_number",
                    "3": "num",
                    "6": "input_value",
                    "7": "result"
                },
                "return": {
                    "3": "result"
                }
            },
            "called": [],
            "calling": [
                "FUN_0800771c",
                "FUN_08007736"
            ],
            "code": "\nint subtract_four_08007718(int input)\n\n{\n  result input + -4;\n}\n\n",
            "current_name": "subtract_four_08007718",
            "entrypoint": "0x08007718",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007718": "subtract_four_08007718",
                "param_1": "input",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800771c": {
            "additional_data": {
                "'\\x01'": {
                    "1": "flag_enabled"
                },
                "(*(char *)(input_param + 0x1c)": {
                    "1": "condition_check_result"
                },
                "(*(char *)(param_1 + 0x1c) == '\\x01')": {
                    "1": "condition_met"
                },
                "(*(code **)(iVar1 + 0x4c)": {
                    "1": "callback"
                },
                "(*(code **)(iVar1 + 0x4c) != (code *)0x0)": {
                    "1": "callback_exists"
                },
                "(*(code **)(result + 0x4c)": {
                    "1": "function_ptr"
                },
                "(char *)": {
                    "1": "flag_ptr"
                },
                "(char *)(param_1 + 0x1c)": {
                    "1": "condition_flag"
                },
                "(code *)0x0": {
                    "1": "null_pointer"
                },
                "(code **)": {
                    "1": "callback_function_ptr"
                },
                "(iVar1 + 0x4c)": {
                    "1": "function_pointer_offset"
                },
                "(iVar1,0)": {
                    "1": "execute_function"
                },
                "*(char *)(callbackData + 0x1c)": {
                    "1": "is_callback_enabled"
                },
                "*(char *)(param_1 + 0x1c)": {
                    "1": "character_value"
                },
                "*(code **)(iVar1 + 0x4c)": {
                    "1": "callback"
                },
                "**(code **)(iVar1 + 0x4c)": {
                    "1": "dereferenced_function"
                },
                "0x0": {
                    "1": "null"
                },
                "0x4c": {
                    "1": "offset_value"
                },
                "DAT_0800771d": {
                    "1": "callback_flag"
                },
                "FUN_08007718": {
                    "1": "get_callback_function_pointer",
                    "2": "get_callback_function",
                    "3": "get_function_address",
                    "6": "get_function_pointer"
                },
                "FUN_0800771c": {
                    "1": "execute_callback_if_enabled",
                    "2": "execute_callback_if_needed",
                    "3": "execute_function_if_needed",
                    "4": "execute_callback_if_condition_met",
                    "5": "execute_function_if_condition_met"
                },
                "_iVar1": {
                    "1": "result"
                },
                "code": {
                    "1": "function"
                },
                "iVar1": {
                    "1": "callback_ptr",
                    "3": "callback_function",
                    "5": "result",
                    "8": "function_pointer"
                },
                "param_1": {
                    "1": "parameter",
                    "2": "input",
                    "3": "input_param",
                    "4": "input_value",
                    "7": "callback_data"
                },
                "param_1 + 0x1c": {
                    "1": "callback_data_flag_address"
                }
            },
            "called": [
                "FUN_08007718"
            ],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid execute_function_if_condition_met_0800771c(int callback_data)\n\n{\n  int function_pointer;\n  \n  function_pointer = FUN_08007718();\n  if ((*(function_pointer **)(function_pointer + 0x4c) != (function_pointer *)0x0) && (*(char *)(callback_data + 0x1c) == '\\x01')) {\n    (**(function_pointer **)(function_pointer + 0x4c))execute_function;\n  }\n  return;\n}\n\n",
            "current_name": "execute_function_if_condition_met_0800771c",
            "entrypoint": "0x0800771c",
            "imported": false,
            "improved": true,
            "renaming": {
                "(iVar1,0)": "execute_function",
                "FUN_0800771c": "execute_function_if_condition_met_0800771c",
                "code": "function_pointer",
                "iVar1": "function_pointer",
                "param_1": "callback_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007736": {
            "additional_data": {
                "*(code **)(iVar1 + 0x48)": {
                    "1": "function_ptr"
                },
                "FUN_08007718": {
                    "1": "get_callback_function_pointer",
                    "2": "get_callback_function",
                    "3": "get_function_address",
                    "7": "get_callback_address",
                    "9": "get_function_pointer"
                },
                "FUN_08007736": {
                    "1": "execute_optional_function",
                    "2": "execute_code",
                    "4": "execute_callback_function",
                    "7": "execute_callback",
                    "9": "execute_function"
                },
                "[iVar1 + 0x48]": {
                    "1": "function"
                },
                "iVar1": {
                    "1": "param1",
                    "2": "result",
                    "9": "function_pointer"
                },
                "param_1": {
                    "1": "input_argument",
                    "2": "input"
                }
            },
            "called": [
                "FUN_08007718"
            ],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid execute_function_08007736(void)\n\n{\n  int function_pointer;\n  \n  function_pointer = FUN_08007718();\n  if (*(code **)(function_pointer + 0x48) != (code *)0x0) {\n    (**(code **)(function_pointer + 0x48))();\n  }\n  return;\n}\n\n",
            "current_name": "execute_function_08007736",
            "entrypoint": "0x08007736",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007736": "execute_function_08007736",
                "iVar1": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007744": {
            "additional_data": {
                "* (int *)": {
                    "1": "pointer_to_address"
                },
                "* (undefined4 *)": {
                    "1": "pointer_to_value"
                },
                "*(int *)(param_1 + 4)": {
                    "1": "ptr_value"
                },
                "*(int *)(param_1 + 4) + 0x24": {
                    "1": "address_of_value",
                    "2": "value_address"
                },
                "*(undefined4 *)(*(int *)(param_1 + 4) + 0x24)": {
                    "1": "dereference_address_offset",
                    "2": "value_at_offset",
                    "3": "value"
                },
                "*(undefined4 *)(address_of_value)": {
                    "1": "inner_value"
                },
                "*(undefined4 *)(ptr_value + 0x24)": {
                    "1": "result"
                },
                "*new_variable_name_2": {
                    "1": "final_value"
                },
                "*ptr_offset_plus_4": {
                    "1": "offset_value"
                },
                "<unnamed_variable_1>": {
                    "1": "inner_value"
                },
                "DAT_": {
                    "1": "dat"
                },
                "DAT_1": {
                    "1": "data"
                },
                "DAT_XXXXX": {
                    "1": "offset"
                },
                "FUN_08007744": {
                    "1": "get_constant_value",
                    "2": "get_memory_address",
                    "4": "get_inner_value",
                    "5": "get_pointer_value",
                    "6": "get_value_from_offset"
                },
                "PTR_": {
                    "1": "ptr"
                },
                "PTR_1": {
                    "1": "pointer"
                },
                "PTR_XXXXX": {
                    "1": "memory_ptr"
                },
                "address + 0x24": {
                    "1": "value_address"
                },
                "func_ptr": {
                    "1": "function_pointer"
                },
                "int": {
                    "1": "pointer"
                },
                "new_variable_name": {
                    "1": "pointer_offset"
                },
                "new_variable_name_1": {
                    "1": "address_pointer"
                },
                "new_variable_name_2": {
                    "1": "final_address"
                },
                "param_1": {
                    "1": "input_ptr",
                    "2": "input_param",
                    "5": "input_value",
                    "7": "offset"
                },
                "param_1 + 4": {
                    "1": "offset_plus_4",
                    "2": "ptr_offset"
                },
                "param_1+4": {
                    "1": "ptr_offset"
                },
                "ptr_offset_plus_4 + 0x24": {
                    "1": "result"
                },
                "ptr_to_updated_param + 0x24": {
                    "1": "offset_address"
                },
                "ptr_value + 0x24": {
                    "1": "value_offset"
                },
                "result": {
                    "1": "data"
                }
            },
            "called": [],
            "calling": [],
            "code": "\nundefined4 get_value_from_offset_08007744(unsigned_integer offset)\n\n{\n  return *(undefined4 *)(*(unsigned_integer *)(offset + 4) + 0x24);\n}\n\n",
            "current_name": "get_value_from_offset_08007744",
            "entrypoint": "0x08007744",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007744": "get_value_from_offset_08007744",
                "int": "unsigned_integer",
                "param_1": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800774a": {
            "additional_data": {
                "*(int *)(param_1 + 4)": {
                    "1": "memory_location"
                },
                "*(int *)(param_1 + 4) + 0x24": {
                    "1": "target_address"
                },
                "*(undefined4 *)(*(int *)(param_1 + 4) + 0x24)": {
                    "1": "target_memory_address"
                },
                "FUN_0800774a": {
                    "1": "update_value_in_memory",
                    "2": "update_pointer_value",
                    "3": "update_parameter",
                    "4": "update_parameter_value",
                    "9": "set_param_value"
                },
                "param_1": {
                    "1": "memory_address",
                    "2": "parameter1",
                    "3": "object_ptr",
                    "4": "base_address",
                    "6": "object_address"
                },
                "param_1 + 4": {
                    "1": "address_offset"
                },
                "param_2": {
                    "1": "value_to_set",
                    "2": "new_parameter_value",
                    "21": "new_value",
                    "4": "value"
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid set_param_value_0800774a(int object_address,undefined4 new_value)\n\n{\n  *(undefined4 *)(*(int *)(object_address + 4) + 0x24) = new_value;\n  return;\n}\n\n",
            "current_name": "set_param_value_0800774a",
            "entrypoint": "0x0800774a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800774a": "set_param_value_0800774a",
                "param_1": "object_address",
                "param_2": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007750": {
            "additional_data": {
                "*(undefined4 *)(*(int *)(param_1 + 4) + 0x34 + param_2 * 4)": {
                    "1": "address"
                },
                "*(undefined4 *)(address)": {
                    "1": "stored_value"
                },
                "FUN_08007750": {
                    "1": "store_value_at_offset",
                    "10": "set_param_value",
                    "2": "store_data_at_offset",
                    "3": "update_value_in_array"
                },
                "data_ptr + 0x34 + index * 4": {
                    "1": "address"
                },
                "param_1": {
                    "1": "memory_address",
                    "2": "object_address",
                    "3": "array_pointer",
                    "4": "base_address"
                },
                "param_1 + 4": {
                    "1": "data_ptr"
                },
                "param_2": {
                    "1": "parameter2",
                    "2": "param2",
                    "28": "index"
                },
                "param_3": {
                    "1": "parameter3",
                    "18": "value",
                    "3": "data",
                    "8": "new_value"
                },
                "return": {
                    "1": "void"
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid set_param_value_08007750(int base_address,int index,undefined4 value)\n\n{\n  *(undefined4 *)(*(int *)(base_address + 4) + 0x34 + index * 4) = value;\n  void;\n}\n\n",
            "current_name": "set_param_value_08007750",
            "entrypoint": "0x08007750",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007750": "set_param_value_08007750",
                "param_1": "base_address",
                "param_2": "index",
                "param_3": "value",
                "return": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080077b0": {
            "additional_data": {
                "DAT_0800a66c": {
                    "1": "i2c_peripheral2"
                },
                "DAT_0800a69c": {
                    "1": "i2c_peripheral1"
                },
                "DAT_20000668": {
                    "1": "pointer1"
                },
                "DAT_2000066c": {
                    "1": "global_data_2"
                },
                "FUN_08003f30": {
                    "1": "set_pin_function"
                },
                "FUN_08003f94": {
                    "1": "shutdown_pin"
                },
                "FUN_080040e8": {
                    "1": "configure_i2_c"
                },
                "FUN_080045c0": {
                    "1": "init_data"
                },
                "FUN_08006bb8": {
                    "1": "get_config_value"
                },
                "FUN_08007320": {
                    "1": "get_peripheral_from_pin"
                },
                "FUN_08007376": {
                    "1": "get_value_from_pin"
                },
                "FUN_080073ae": {
                    "1": "check_pin_match"
                },
                "FUN_080077b0": {
                    "1": "configure_i2_c_pins",
                    "14": "initialize_i2_c",
                    "2": "configure_i2_c_peripheral",
                    "3": "configure_i2_c",
                    "4": "initialize_i2_c_pins",
                    "6": "initialize_i2_c_peripheral"
                },
                "FUN_080098d8": {
                    "1": "print_error_message"
                },
                "_DAT_40010004": {
                    "1": "dev_ctrl_reg",
                    "2": "register4"
                },
                "_DAT_40021010": {
                    "1": "periph_reg_2",
                    "4": "register2"
                },
                "_DAT_40021018": {
                    "1": "register4",
                    "3": "register3"
                },
                "_DAT_4002101c": {
                    "1": "config1_reg",
                    "4": "register1"
                },
                "ctrl_reg_value": {
                    "1": "control_register_value"
                },
                "i2cPeripheral1": {
                    "1": "i2c_peripheral_pin1"
                },
                "i2cPeripheral2": {
                    "1": "i2c_peripheral_pin2"
                },
                "iVar1": {
                    "1": "pin1",
                    "2": "i2c_pin1_peripheral",
                    "3": "result1",
                    "5": "peripheral1",
                    "6": "pin_peripheral1"
                },
                "iVar2": {
                    "1": "peripheral_address",
                    "2": "i2c_pin2_peripheral",
                    "3": "pin2_peripheral",
                    "5": "peripheral2",
                    "6": "pin_peripheral2"
                },
                "local_2c": {
                    "1": "value6",
                    "2": "local_var1",
                    "3": "constant3"
                },
                "local_30": {
                    "1": "local30",
                    "2": "shift_value",
                    "3": "bit_mask3"
                },
                "local_34": {
                    "1": "u_var2",
                    "4": "bit_mask2",
                    "9": "pin_mask2"
                },
                "local_38": {
                    "1": "bit_mask",
                    "10": "pin_mask1",
                    "2": "pin1_mask",
                    "3": "pin_mask",
                    "4": "bit_mask1"
                },
                "param_1": {
                    "1": "pin",
                    "2": "pin_configuration",
                    "3": "i2c_pins",
                    "5": "i2c_config",
                    "6": "pins",
                    "7": "pin_config"
                },
                "param_2": {
                    "1": "value2",
                    "18": "param2",
                    "7": "pin1"
                },
                "param_3": {
                    "1": "clock_speed",
                    "18": "param3",
                    "7": "pin2"
                },
                "param_4": {
                    "1": "clock_speed",
                    "18": "param4",
                    "5": "param_4"
                },
                "param_5": {
                    "1": "param",
                    "18": "param5",
                    "7": "param_5"
                },
                "piVar6": {
                    "1": "next_pin",
                    "2": "ptr"
                },
                "reg_val_1": {
                    "1": "register_value1"
                },
                "reg_val_2": {
                    "1": "register_value2"
                },
                "uVar3": {
                    "1": "bit_shifted_i2_c_pin",
                    "2": "bit_rate",
                    "3": "value1"
                },
                "uVar4": {
                    "1": "pin_mode1",
                    "3": "value2",
                    "5": "u_var4"
                },
                "uVar5": {
                    "1": "tmp2",
                    "3": "value3",
                    "5": "u_var5"
                }
            },
            "called": [
                "FUN_080045c0",
                "FUN_080098d8",
                "FUN_080073ae",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "calling": [
                "FUN_08002968"
            ],
            "code": "\n\n\nvoid initialize_i2_c_080077b0(int *pin_config,int param2,int param3,int param4,undefined param5)\n\n{\n  int pin_peripheral1;\n  int pin_peripheral2;\n  undefined4 pin_config1;\n  uint u_var4;\n  uint u_var5;\n  int *ptr;\n  uint pin_mask1;\n  uint pin_mask2;\n  uint pin_mask3;\n  undefined4 constant3;\n  \n  if (pin_config != (int *)0x0) {\n    ptr = pin_config + 1;\n    pin_peripheral1 = FUN_08007320((int)*(char *)(pin_config + 0x16),&DAT_0800a69c);\n    pin_peripheral2 = FUN_08007320((int)*(char *)((int)pin_config + 0x59),&DAT_0800a66c);\n    if ((pin_peripheral1 == 0) || (pin_peripheral2 == 0)) {\n      FUN_080098d8(\"ERROR: at least one I2C pin has no peripheral\\n\");\n    }\n    else {\n      pin_peripheral1 = FUN_080073ae(pin_peripheral1,pin_peripheral2);\n      *pin_config = pin_peripheral1;\n      if (pin_peripheral1 == 0) {\n        FUN_080098d8(\"ERROR: I2C pins mismatch\\n\");\n      }\n      else {\n        if (pin_peripheral1 == 0x40005400) {\n          _DAT_4002101c = _DAT_4002101c | 0x200000;\n          _DAT_40021010 = _DAT_40021010 & 0xffdfffff;\n          *(undefined *)((int)pin_config + 0x5a) = 0x1f;\n          *(undefined *)((int)pin_config + 0x5b) = 0x20;\n          DAT_20000668 = ptr;\n        }\n        if (*pin_config == 0x40005800) {\n          _DAT_4002101c = _DAT_4002101c | 0x400000;\n          _DAT_40021010 = _DAT_40021010 & 0xffbfffff;\n          *(undefined *)((int)pin_config + 0x5a) = 0x21;\n          *(undefined *)((int)pin_config + 0x5b) = 0x22;\n          DAT_2000066c = ptr;\n        }\n        pin_config1 = FUN_08006bb8((uint)((int)*(char *)((int)pin_config + 0x59) << 0x18) >> 0x1c);\n        pin_mask1 = 1 << ((int)*(char *)((int)pin_config + 0x59) & 0xfU) & 0xffff;\n        u_var4 = FUN_08007376((int)*(char *)((int)pin_config + 0x59),&DAT_0800a66c);\n        u_var5 = FUN_08007376((int)*(char *)((int)pin_config + 0x59),&DAT_0800a66c);\n        pin_mask2 = (u_var4 >> 3 & 1) << 4 | u_var5 & 7;\n        constant3 = 3;\n        pin_peripheral1 = FUN_08007376((int)*(char *)((int)pin_config + 0x59),&DAT_0800a66c);\n        pin_mask3 = (uint)(pin_peripheral1 << 0x1a) >> 0x1e;\n        pin_peripheral1 = FUN_08007376((int)*(char *)((int)pin_config + 0x59),&DAT_0800a66c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        u_var5 = 1;\n        u_var4 = _DAT_40021018;\n        switch((uint)(pin_peripheral1 << 0x11) >> 0x19) {\n        case 1:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = u_var5;\n          break;\n        case 2:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 3:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = u_var5;\n          break;\n        case 4:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 5:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = u_var5;\n          break;\n        case 6:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 7:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = u_var5;\n          break;\n        case 8:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 9:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = u_var5;\n          break;\n        case 10:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0xb:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0xc:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0xd:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0xe:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0xf:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x10:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x11:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x12:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x13:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x14:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x15:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x16:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x17:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x1b:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x1c:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x21:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x22:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x23:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x24:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = u_var5;\n        }\n        FUN_080040e8(pin_config1,&pin_mask1,u_var4,u_var5);\n        pin_config1 = FUN_08006bb8((uint)((int)*(char *)(pin_config + 0x16) << 0x18) >> 0x1c);\n        pin_mask1 = 1 << ((int)*(char *)(pin_config + 0x16) & 0xfU) & 0xffff;\n        u_var4 = FUN_08007376((int)*(char *)(pin_config + 0x16),&DAT_0800a69c);\n        u_var5 = FUN_08007376((int)*(char *)(pin_config + 0x16),&DAT_0800a69c);\n        pin_mask2 = (u_var4 >> 3 & 1) << 4 | u_var5 & 7;\n        constant3 = 3;\n        pin_peripheral1 = FUN_08007376((int)*(char *)(pin_config + 0x16),&DAT_0800a69c);\n        pin_mask3 = (uint)(pin_peripheral1 << 0x1a) >> 0x1e;\n        pin_peripheral1 = FUN_08007376((int)*(char *)(pin_config + 0x16),&DAT_0800a69c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        u_var5 = 1;\n        u_var4 = _DAT_40021018;\n        switch((uint)(pin_peripheral1 << 0x11) >> 0x19) {\n        case 1:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = u_var5;\n          break;\n        case 2:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 3:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = u_var5;\n          break;\n        case 4:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 5:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = u_var5;\n          break;\n        case 6:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 7:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = u_var5;\n          break;\n        case 8:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 9:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = u_var5;\n          break;\n        case 10:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0xb:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0xc:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0xd:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0xe:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0xf:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x10:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x11:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x12:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x13:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x14:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x15:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x16:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x17:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x1b:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x1c:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x21:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x22:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x23:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = u_var5;\n          break;\n        case 0x24:\n          u_var4 = 0x40010000;\n          u_var5 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = u_var5;\n        }\n        FUN_080040e8(pin_config1,&pin_mask1,u_var4,u_var5);\n        pin_config[1] = *pin_config;\n        pin_config[2] = param2;\n        pin_config[3] = 0;\n        pin_config[4] = param4;\n        pin_config[7] = 0xff;\n        pin_config[5] = param3;\n        pin_config[6] = 0;\n        pin_config[8] = 0;\n        pin_config[9] = 0;\n        *(undefined *)((int)pin_config + 0x41) = 0;\n        FUN_08003f30((int)*(char *)((int)pin_config + 0x5a),0,1);\n        FUN_08003f94((int)*(char *)((int)pin_config + 0x5a));\n        FUN_08003f30((int)*(char *)((int)pin_config + 0x5b),0,1);\n        FUN_08003f94((int)*(char *)((int)pin_config + 0x5b));\n        FUN_080045c0(ptr);\n        *(undefined *)((int)pin_config + 0x5d) = param5;\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_i2_c_080077b0",
            "entrypoint": "0x080077b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080077b0": "initialize_i2_c_080077b0",
                "iVar1": "pin_peripheral1",
                "iVar2": "pin_peripheral2",
                "local_2c": "constant3",
                "local_30": "pin_mask3",
                "local_34": "pin_mask2",
                "local_38": "pin_mask1",
                "param_1": "pin_config",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "piVar6": "ptr",
                "uVar3": "pin_config1",
                "uVar4": "u_var4",
                "uVar5": "u_var5"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007e74": {
            "additional_data": {
                "FUN_08003760": {
                    "1": "get_reference_value",
                    "11": "get_initial_value"
                },
                "FUN_08004728": {
                    "1": "check_function",
                    "2": "check_data",
                    "4": "check_condition"
                },
                "FUN_0800542a": {
                    "1": "get_character",
                    "3": "check_condition",
                    "5": "check_character"
                },
                "FUN_08005430": {
                    "1": "perform_operation",
                    "5": "check_value"
                },
                "FUN_08007e74": {
                    "1": "check_condition",
                    "13": "process_data",
                    "2": "calculate_result",
                    "3": "analyze_data"
                },
                "iVar1": {
                    "1": "reference_value",
                    "2": "start_value",
                    "24": "initial_value"
                },
                "iVar2": {
                    "1": "loop_value",
                    "12": "result",
                    "2": "result2",
                    "4": "return_value",
                    "5": "sub_function_result"
                },
                "iVar4": {
                    "1": "result_status",
                    "10": "result",
                    "12": "status",
                    "2": "condition"
                },
                "iVar5": {
                    "1": "param_plus_4",
                    "12": "temp_var",
                    "2": "temp_variable",
                    "3": "offset",
                    "6": "temp"
                },
                "param_1": {
                    "1": "parameter",
                    "12": "data",
                    "2": "input_ptr",
                    "3": "data_ptr",
                    "5": "input_array"
                },
                "param_2": {
                    "1": "ptr_to_param2",
                    "10": "param1",
                    "4": "ptr1",
                    "8": "param2"
                },
                "param_3": {
                    "1": "arg2",
                    "10": "param2",
                    "4": "ptr2",
                    "8": "param3"
                },
                "param_4": {
                    "1": "param",
                    "2": "ptr3",
                    "9": "param3"
                },
                "uVar3": {
                    "1": "loop_counter",
                    "2": "counter",
                    "26": "difference"
                },
                "uVar6": {
                    "1": "modified_param4",
                    "2": "param4_copy",
                    "4": "param4",
                    "9": "temp_param"
                }
            },
            "called": [
                "FUN_08004728",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "calling": [
                "FUN_08002a58"
            ],
            "code": "\nint process_data_08007e74(int data,undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  int initial_value;\n  int result;\n  uint difference;\n  int status;\n  int temp_var;\n  undefined4 temp_param;\n  \n  temp_param = param3;\n  initial_value = FUN_08003760();\n  difference = 0;\n  status = 2;\n  do {\n    temp_var = data + 4;\n    result = FUN_08004728(temp_var,param1,param2,param3,temp_param);\n    if (result == 0) {\n      status = 0;\n      while ((result = FUN_0800542a(temp_var), result != 0x20 && (status == 0))) {\n        result = FUN_08003760();\n        difference = result - initial_value;\n        if (difference < 0x65) {\n          result = FUN_08005430(temp_var);\n          if (result != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    result = FUN_08005430(temp_var);\n  } while ((result == 4) && (difference < 100));\n  return status;\n}\n\n",
            "current_name": "process_data_08007e74",
            "entrypoint": "0x08007e74",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007e74": "process_data_08007e74",
                "iVar1": "initial_value",
                "iVar2": "result",
                "iVar4": "status",
                "iVar5": "temp_var",
                "param_1": "data",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "uVar3": "difference",
                "uVar6": "temp_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007ede": {
            "additional_data": {
                "FUN_08007ede": {
                    "1": "copy_bytes_to_offset",
                    "18": "copy_data",
                    "2": "copy_bytes",
                    "4": "copy_and_increment"
                },
                "param_1": {
                    "1": "destination_base",
                    "2": "dest",
                    "3": "destination_buffer",
                    "4": "dest_address",
                    "7": "dest_addr"
                },
                "param_2": {
                    "1": "source_address",
                    "2": "src",
                    "3": "source_buffer",
                    "5": "src_address",
                    "7": "source",
                    "8": "src_addr"
                },
                "param_3": {
                    "1": "data_length",
                    "10": "num_bytes",
                    "11": "length",
                    "2": "data_size",
                    "7": "size"
                },
                "uVar1": {
                    "1": "counter",
                    "12": "i",
                    "13": "index",
                    "3": "byte_index"
                }
            },
            "called": [],
            "calling": [
                "FUN_080027f0",
                "FUN_0800288c"
            ],
            "code": "\nundefined4 copy_data_08007ede(int dest_addr,int src_addr,uint length)\n\n{\n  uint index;\n  \n  if (0x20 < length) {\n    return 2;\n  }\n  for (index = 0; index < length; index = index + 1 & 0xff) {\n    *(undefined *)(dest_addr + index + 0x68) = *(undefined *)(src_addr + index);\n    *(char *)(dest_addr + 0x88) = *(char *)(dest_addr + 0x88) + '\\x01';\n  }\n  return 0;\n}\n\n",
            "current_name": "copy_data_08007ede",
            "entrypoint": "0x08007ede",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007ede": "copy_data_08007ede",
                "param_1": "dest_addr",
                "param_2": "src_addr",
                "param_3": "length",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007f0e": {
            "additional_data": {
                "FUN_08003760": {
                    "2": "get_current_value",
                    "4": "get_initial_value"
                },
                "FUN_080047f4": {
                    "1": "check_data",
                    "2": "check_condition"
                },
                "FUN_0800542a": {
                    "1": "check_empty_space",
                    "2": "is_space"
                },
                "FUN_08005430": {
                    "1": "get_status"
                },
                "FUN_08007f0e": {
                    "1": "check_condition_and_count",
                    "4": "analyze_data",
                    "9": "process_data"
                },
                "iVar1": {
                    "1": "return_value1",
                    "2": "start_value",
                    "22": "initial_value"
                },
                "iVar2": {
                    "1": "var2",
                    "19": "result",
                    "2": "result2"
                },
                "iVar4": {
                    "1": "matching_string_count",
                    "19": "status",
                    "2": "result",
                    "5": "flag"
                },
                "iVar5": {
                    "1": "temp_var1",
                    "11": "temp_var",
                    "2": "temp_variable",
                    "7": "temp"
                },
                "param_1": {
                    "1": "input_param",
                    "2": "input_array",
                    "3": "input_parameter",
                    "4": "input_value",
                    "8": "data"
                },
                "param_2": {
                    "1": "arg2",
                    "2": "param_ptr1",
                    "3": "param_a",
                    "4": "param_2",
                    "5": "param2",
                    "6": "param1"
                },
                "param_3": {
                    "1": "arg2",
                    "2": "param_ptr2",
                    "3": "param_b",
                    "4": "param_3",
                    "5": "param3",
                    "6": "param2"
                },
                "param_4": {
                    "1": "arg3",
                    "3": "param_c",
                    "4": "param",
                    "6": "param3"
                },
                "result2": {
                    "1": "result3"
                },
                "uVar3": {
                    "1": "string_length_difference",
                    "25": "difference",
                    "3": "counter"
                },
                "uVar6": {
                    "1": "temporary_value",
                    "2": "temp_arg",
                    "4": "param4_copy",
                    "5": "temp_param",
                    "9": "param4"
                }
            },
            "called": [
                "FUN_080047f4",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "calling": [
                "FUN_08002b68"
            ],
            "code": "\nint process_data_08007f0e(int data,undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  int initial_value;\n  int result;\n  uint difference;\n  int status;\n  int temp_var;\n  undefined4 param4;\n  \n  param4 = param3;\n  initial_value = FUN_08003760();\n  difference = 0;\n  status = 2;\n  do {\n    temp_var = data + 4;\n    result = FUN_080047f4(temp_var,param1,param2,param3,param4);\n    if (result == 0) {\n      status = 0;\n      while ((result = FUN_0800542a(temp_var), result != 0x20 && (status == 0))) {\n        result = FUN_08003760();\n        difference = result - initial_value;\n        if (difference < 0x65) {\n          result = FUN_08005430(temp_var);\n          if (result != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    result = FUN_08005430(temp_var);\n  } while ((result == 4) && (difference < 100));\n  return status;\n}\n\n",
            "current_name": "process_data_08007f0e",
            "entrypoint": "0x08007f0e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007f0e": "process_data_08007f0e",
                "iVar1": "initial_value",
                "iVar2": "result",
                "iVar4": "status",
                "iVar5": "temp_var",
                "param_1": "data",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "uVar3": "difference",
                "uVar6": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007f78": {
            "additional_data": {
                "": {
                    "1": ""
                },
                "FUN_08007f78": {
                    "1": "subtract_four_from_input",
                    "2": "subtract_by_four",
                    "27": "subtract_four"
                },
                "local_var_1": {
                    "1": "result"
                },
                "local_var_2": {
                    "1": "new_variable_name_2"
                },
                "local_var_n": {
                    "1": "new_variable_name_n"
                },
                "param_1": {
                    "1": "number",
                    "13": "input",
                    "2": "input_number",
                    "5": "result"
                },
                "param_2": {
                    "1": "input2",
                    "3": "new_parameter_name_2"
                },
                "param_3": {
                    "1": "new_parameter_name_3"
                },
                "param_n": {
                    "1": "new_parameter_name_n"
                },
                "ptr_1": {
                    "1": "new_variable_name_1"
                }
            },
            "called": [],
            "calling": [
                "FUN_08008020",
                "FUN_08007fa0",
                "FUN_08007ff0"
            ],
            "code": "\nint subtract_four_08007f78(int input)\n\n{\n  return input + -4;\n}\n\n",
            "current_name": "subtract_four_08007f78",
            "entrypoint": "0x08007f78",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007f78": "subtract_four_08007f78",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007f7c": {
            "additional_data": {
                "*(int *)(param_1 + 0x60)": {
                    "1": "updated_value"
                },
                "FUN_080049e0": {
                    "1": "update_obj_ptr_and_call"
                },
                "FUN_08007f7c": {
                    "1": "update_param_and_call_subfunction",
                    "2": "update_param_and_call",
                    "3": "update_param_value",
                    "4": "update_parameter",
                    "5": "update_param_and_call_function",
                    "8": "update_param"
                },
                "param_1": {
                    "1": "current_value",
                    "2": "input_param",
                    "4": "object_address"
                },
                "param_1 + 4": {
                    "1": "next_param"
                },
                "param_2": {
                    "1": "new_data",
                    "15": "new_value",
                    "2": "new_param_value",
                    "5": "value"
                }
            },
            "called": [
                "FUN_080049e0"
            ],
            "calling": [
                "FUN_08002968"
            ],
            "code": "\nvoid update_param_08007f7c(int object_address,int new_value)\n\n{\n  if (object_address != 0) {\n    if (new_value != 0) {\n      *(int *)(object_address + 0x60) = new_value;\n      FUN_080049e0(object_address + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "update_param_08007f7c",
            "entrypoint": "0x08007f7c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007f7c": "update_param_08007f7c",
                "param_1": "object_address",
                "param_2": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007f8e": {
            "additional_data": {
                "FUN_080049e0": {
                    "1": "perform_operation",
                    "2": "update_function"
                },
                "FUN_08007f8e": {
                    "1": "update_param_with_offset",
                    "2": "update_data",
                    "3": "update_parameter",
                    "4": "update_param",
                    "6": "update_param_and_call_function"
                },
                "PTR_*": {
                    "1": "unchanged"
                },
                "PTR_080049e0": {
                    "2": "param_1"
                },
                "PTR_080049e4": {
                    "1": "temp_var"
                },
                "param_1": {
                    "1": "input_pointer",
                    "2": "var1",
                    "3": "input_param",
                    "4": "input_parameter"
                },
                "param_1 + 100": {
                    "1": "data_offset"
                },
                "param_1 + 4": {
                    "1": "next_data"
                },
                "param_2": {
                    "1": "second_param",
                    "14": "new_value",
                    "2": "var2",
                    "9": "value"
                }
            },
            "called": [
                "FUN_080049e0"
            ],
            "calling": [
                "FUN_08002968"
            ],
            "code": "\nvoid update_param_and_call_function_08007f8e(int input_parameter,int new_value)\n\n{\n  if (input_parameter != 0) {\n    if (new_value != 0) {\n      *(int *)(input_parameter + 100) = new_value;\n      FUN_080049e0(input_parameter + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "update_param_and_call_function_08007f8e",
            "entrypoint": "0x08007f8e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007f8e": "update_param_and_call_function_08007f8e",
                "param_1": "input_parameter",
                "param_2": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007fa0": {
            "additional_data": {
                "*(code **)(iVar1 + 100)": {
                    "1": "callback_function"
                },
                "*(int *)(param_1 + 0xc)": {
                    "1": "value_at_index"
                },
                "*(undefined *)(iVar1 + 0x5c)": {
                    "1": "func_result_offset_2",
                    "2": "var2"
                },
                "*(undefined *)(iVar1 + 0x88)": {
                    "1": "var1"
                },
                "0x20": {
                    "1": "a"
                },
                "8": {
                    "1": "size"
                },
                "FUM_08007f78": {
                    "1": "get_return_value"
                },
                "FUN_080048c8": {
                    "1": "perform_action_b",
                    "6": "process_data"
                },
                "FUN_08004954": {
                    "1": "process_data_specific",
                    "2": "modify_data",
                    "3": "set_flag"
                },
                "FUN_08007f78": {
                    "1": "get_something",
                    "3": "get_pointer",
                    "4": "get_return_value"
                },
                "FUN_08007fa0": {
                    "1": "update_parameters",
                    "10": "process_params",
                    "2": "process_data",
                    "4": "process_parameters",
                    "5": "update_data"
                },
                "F_UND_08007f78": {
                    "1": "get_saved_value"
                },
                "code": {
                    "1": "func"
                },
                "iParam3": {
                    "1": "process_data_param_3"
                },
                "iVar1": {
                    "1": "result_ptr",
                    "22": "result",
                    "4": "return_value"
                },
                "iVar1 + 0x68": {
                    "1": "dest"
                },
                "param_1": {
                    "1": "input_data",
                    "2": "input_param",
                    "3": "input_ptr",
                    "6": "data"
                },
                "param_1 + 0xc": {
                    "1": "data_offset"
                },
                "param_2": {
                    "1": "result_pointer",
                    "17": "flag",
                    "2": "input2"
                },
                "param_3": {
                    "1": "param_c",
                    "2": "input3",
                    "4": "condition",
                    "7": "value"
                },
                "param_4": {
                    "1": "b",
                    "2": "input4",
                    "3": "param_4",
                    "6": "param"
                }
            },
            "called": [
                "FUN_08004954",
                "FUN_08007f78",
                "FUN_080048c8"
            ],
            "calling": [
                "FUN_08004ac2"
            ],
            "code": "\nvoid process_params_08007fa0(int data,int flag,int value,undefined4 param)\n\n{\n  int result;\n  \n  result = FUN_08007f78();\n  if (value == *(int *)(data + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5c) = 0;\n      if (*(func **)(result + 100) != (func *)0x0) {\n        (**(func **)(result + 100))();\n      }\n      FUN_080048c8(data,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5c) = 1;\n    FUN_08004954(data,result + 0x68,0x20,8,param);\n  }\n  return;\n}\n\n",
            "current_name": "process_params_08007fa0",
            "entrypoint": "0x08007fa0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007fa0": "process_params_08007fa0",
                "code": "func",
                "iVar1": "result",
                "param_1": "data",
                "param_2": "flag",
                "param_3": "value",
                "param_4": "param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007ff0": {
            "additional_data": {
                "'\\x01'": {
                    "1": "true_value"
                },
                "(code *)0x0": {
                    "1": "null_function_pointer"
                },
                "(iVar1 + 0x2c)": {
                    "1": "another_character"
                },
                "(iVar1 + 0x5c)": {
                    "1": "character"
                },
                "(iVar1 + 0x60)": {
                    "1": "function_pointer_not_null"
                },
                "*(char *)(iVar1 + 0x2c)": {
                    "1": "condition2"
                },
                "*(char *)(iVar1 + 0x5c)": {
                    "1": "condition1"
                },
                "**(code **)(iVar1 + 0x60)": {
                    "1": "function"
                },
                "FUND_08007f78": {
                    "1": "get_function_ptr"
                },
                "FUN_080049e0": {
                    "1": "execute_operation",
                    "2": "cleanup_resources",
                    "3": "perform_cleanup",
                    "4": "cleanup"
                },
                "FUN_08007f78": {
                    "1": "get_callback_address",
                    "11": "get_function_pointer",
                    "4": "get_function_ptr",
                    "7": "get_function_address"
                },
                "FUN_08007ff0": {
                    "1": "execute_function_and_handle_errors",
                    "14": "execute_function",
                    "3": "execute_code"
                },
                "Fun_080049e0": {
                    "1": "perform_cleanup"
                },
                "code": {
                    "1": "function_pointer"
                },
                "code *": {
                    "1": "function_pointer"
                },
                "iVar1": {
                    "1": "ptr",
                    "2": "function_result",
                    "3": "return_value",
                    "4": "function_pointer",
                    "6": "function_ptr",
                    "7": "result"
                },
                "iVar1 + 0x2c": {
                    "1": "character"
                },
                "iVar1 + 0x5c": {
                    "1": "flag"
                },
                "iVar1 + 0x60": {
                    "1": "ptr_to_function_pointer"
                },
                "iVar1 + 0x68": {
                    "1": "function_arg"
                },
                "param_1": {
                    "1": "arg",
                    "2": "parameter",
                    "4": "param",
                    "5": "input_data",
                    "8": "input_param"
                }
            },
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "calling": [
                "FUN_08004aec",
                "FUN_08004f3c",
                "FUN_08005084"
            ],
            "code": "\nvoid execute_function_08007ff0(undefined4 input_param)\n\n{\n  int result;\n  \n  result = FUN_08007f78();\n  if (((*(function_ptr **)(result + 0x60) != (function_ptr *)0x0) && (*(char *)(result + 0x5c) == '\\x01')) &&\n     (*(char *)(result + 0x2c) != ' ')) {\n    (**(function_ptr **)(result + 0x60))(result + 0x68);\n  }\n  FUN_080049e0(input_param);\n  return;\n}\n\n",
            "current_name": "execute_function_08007ff0",
            "entrypoint": "0x08007ff0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007ff0": "execute_function_08007ff0",
                "code": "function_ptr",
                "iVar1": "result",
                "param_1": "input_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008020": {
            "additional_data": {
                "(char *)(iVar1 + 0x5d)": {
                    "1": "check"
                },
                "*(char *)(iVar1 + 0x5d)": {
                    "1": "return_value_check"
                },
                "FUN_080049e0": {
                    "1": "process_input",
                    "20": "execute_function",
                    "5": "call_function"
                },
                "FUN_08007f78": {
                    "1": "get_int_value",
                    "2": "get_flag_value",
                    "4": "get_return_value",
                    "5": "get_result"
                },
                "FUN_08008020": {
                    "1": "handle_if_flag_zero",
                    "18": "check_and_call_function",
                    "8": "check_and_execute_function"
                },
                "iVar1": {
                    "1": "pointer_value",
                    "25": "result",
                    "3": "return_value"
                },
                "param_1": {
                    "1": "function_parameter",
                    "2": "param",
                    "6": "argument",
                    "8": "input_param"
                }
            },
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "calling": [
                "FUN_08004f3c"
            ],
            "code": "\nvoid check_and_call_function_08008020(undefined4 input_param)\n\n{\n  int result;\n  \n  result = FUN_08007f78();\n  if (*(char *)(result + 0x5d) == '\\0') {\n    FUN_080049e0(input_param);\n  }\n  return;\n}\n\n",
            "current_name": "check_and_call_function_08008020",
            "entrypoint": "0x08008020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008020": "check_and_call_function_08008020",
                "iVar1": "result",
                "param_1": "input_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008078": {
            "additional_data": {
                "&(DAT_200006c0)[*(byte *)(param_1 + 0x11)]": {
                    "1": "uart_pointer_array_index"
                },
                "&(param_1 + 1)": {
                    "1": "uart_pin_config"
                },
                "&DAT_0800a81c": {
                    "1": "pin_setting_array2"
                },
                "&DAT_0800a864": {
                    "1": "pin_setting_array1"
                },
                "(&DAT_200006c0)[*(byte *)(param_1 + 0x11)]": {
                    "1": "gpio_pin_config"
                },
                "(int)*(char *)((int)param_1 + 0x59)": {
                    "1": "pin_index2"
                },
                "*(byte *)(param_1 + 0x16)": {
                    "1": "pin_index3"
                },
                "*(char *)((int)param_1 + 0x59)": {
                    "1": "uart_pin_variable2"
                },
                "*(char *)(param_1 + 0x16)": {
                    "1": "uart_pin_variable1"
                },
                "*(undefined *)((int)param_1 + 0x5a)": {
                    "1": "uart_mode_register2"
                },
                "*(undefined *)(param_1 + 0x11)": {
                    "1": "uart_pin_number1"
                },
                "*param_1": {
                    "1": "uart_config"
                },
                "0x0": {
                    "2": "null"
                },
                "0x10": {
                    "1": "uart_config_data_offset5"
                },
                "0x11": {
                    "1": "uart_config_data_offset6"
                },
                "0x12": {
                    "1": "uart_pin_config_data_offset1"
                },
                "0x13": {
                    "1": "uart_config_data_offset7"
                },
                "0x14": {
                    "1": "uart_config_data_offset8"
                },
                "0x15": {
                    "1": "uart_config_data_offset9"
                },
                "0x16": {
                    "1": "uart_pin_config_data_offset8"
                },
                "0x17": {
                    "1": "uart_config_data_offset15"
                },
                "0x1b": {
                    "1": "uart_pin_config_value_offset4"
                },
                "0x1c": {
                    "1": "uart_pin_config_data_offset6"
                },
                "0x1d": {
                    "1": "uart_config_offset3"
                },
                "0x1e": {
                    "1": "uart_config_offset2"
                },
                "0x1f": {
                    "1": "uart_config_offset1"
                },
                "0x21": {
                    "1": "uart_pin_config_value_offset5"
                },
                "0x22": {
                    "1": "uart_pin_config_value_offset6"
                },
                "0x23": {
                    "1": "uart_pin_config_value_offset7"
                },
                "0x24": {
                    "1": "uart_pin_config_value_offset8"
                },
                "0x25": {
                    "1": "uart_pin_config_value_offset1"
                },
                "0x26": {
                    "1": "uart_pin_config_value_offset2"
                },
                "0x27": {
                    "1": "uart_pin_config_value_offset3"
                },
                "0x3": {
                    "1": "uart_config_data_offset10"
                },
                "0x4": {
                    "1": "uart_config_data_offset11"
                },
                "0x40004400": {
                    "1": "uart_pin_config_value2"
                },
                "0x40004800": {
                    "1": "uart_pin_config_value3"
                },
                "0x40013800": {
                    "1": "uart_pin_config_value1"
                },
                "0x59": {
                    "1": "uart_pin_config_data_offset7"
                },
                "0x5a": {
                    "1": "uart_pin_config_offset2"
                },
                "0x9": {
                    "1": "uart_config_data_offset12"
                },
                "0xa": {
                    "1": "uart_config_data_offset13"
                },
                "0xb": {
                    "1": "uart_config_data_offset14"
                },
                "0xc": {
                    "1": "uart_config_data_offset3"
                },
                "0xd": {
                    "1": "uart_config_data_offset2"
                },
                "0xe": {
                    "1": "uart_config_data_offset1"
                },
                "0xf": {
                    "1": "uart_config_data_offset4"
                },
                "DAT_0800a81c": {
                    "1": "pin_register_array2",
                    "2": "uart_pin_config_table2"
                },
                "DAT_0800a864": {
                    "1": "pin_register_array1",
                    "2": "uart_pin_config_table1"
                },
                "DAT_200006c0": {
                    "1": "peripheral_register_array"
                },
                "FUNC_080073ae": {
                    "1": "get_peripheral"
                },
                "FUN_080040e8": {
                    "1": "set_uart_pin_config",
                    "2": "configure_uart_pins"
                },
                "FUN_0800674e": {
                    "1": "initialize_uart_pin_settings",
                    "4": "initialize_uart"
                },
                "FUN_08006bb8": {
                    "1": "get_uart_configuration_setting"
                },
                "FUN_08007320": {
                    "1": "get_peripheral_value",
                    "2": "get_uart_pin",
                    "4": "get_uart_peripheral"
                },
                "FUN_08007376": {
                    "1": "get_alternate_function_value",
                    "2": "get_uart_pin_config"
                },
                "FUN_080073ae": {
                    "1": "get_uart_pin",
                    "2": "get_uart_pin_config"
                },
                "FUN_08008078": {
                    "1": "configure_uart_pin_and_peripheral",
                    "2": "initialize_uart_pin",
                    "6": "initialize_uart",
                    "8": "configure_uart_pins"
                },
                "FUN_080098d8": {
                    "3": "log_error",
                    "7": "print_error",
                    "8": "print_error_message"
                },
                "PTR": {
                    "1": "pointer"
                },
                "_DAT_40010004": {
                    "1": "uart_config_register2"
                },
                "_DAT_4002100c": {
                    "1": "uart_register1"
                },
                "_DAT_40021010": {
                    "1": "uart2_base_address"
                },
                "_DAT_40021018": {
                    "1": "uart1_peripheral_reg2"
                },
                "_DAT_4002101c": {
                    "1": "register_mask4"
                },
                "iVar1": {
                    "1": "uart_pin1_result",
                    "10": "uart_pin1",
                    "2": "uart_pin1_status",
                    "3": "uart_peripheral1"
                },
                "iVar2": {
                    "1": "spi_pin_config",
                    "10": "uart_pin2",
                    "2": "uart_pin2_config",
                    "3": "uart_peripheral2"
                },
                "local_14": {
                    "1": "uart_config_size",
                    "2": "local_variable"
                },
                "local_18": {
                    "1": "uart_pin2_bit",
                    "2": "uart_baud_rate"
                },
                "local_1c": {
                    "1": "pin2_bit_mask",
                    "2": "uart_pin2_mask"
                },
                "local_20": {
                    "1": "uart_pin_bit_mask",
                    "2": "pin_bit_mask",
                    "3": "pin_mask",
                    "4": "uart_pin1_mask",
                    "5": "uart_pin_mask"
                },
                "param_1": {
                    "1": "pins",
                    "2": "peripheral_config",
                    "6": "uart_config",
                    "7": "uart_pins",
                    "9": "pin_config"
                },
                "param_1[0x12]": {
                    "1": "uart_pointer_array2"
                },
                "param_1[0x13]": {
                    "1": "uart_pointer_array3"
                },
                "param_1[0x14]": {
                    "1": "uart_pointer_array4"
                },
                "param_1[0x15]": {
                    "1": "uart_pointer_array5"
                },
                "param_1[1]": {
                    "1": "uart_pointer_array1"
                },
                "param_1[6]": {
                    "1": "uart_pointer_array6"
                },
                "param_1[7]": {
                    "1": "uart_pointer_array7"
                },
                "param_1[8]": {
                    "1": "uart_pointer_array8"
                },
                "uVar3": {
                    "1": "uart_pins_value1",
                    "2": "uart_config",
                    "3": "uart_peripheral1",
                    "4": "uart_pin1_config"
                },
                "uVar4": {
                    "1": "uart2_mode",
                    "2": "uart_pin_config",
                    "3": "uart_peripheral2",
                    "4": "uart_pin2_config"
                }
            },
            "called": [
                "FUN_080073ae",
                "FUN_080098d8",
                "FUN_0800674e",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "calling": [
                "FUN_080084b0",
                "FUN_08008c44"
            ],
            "code": "\n\n\nvoid configure_uart_pins_08008078(int *pin_config)\n\n{\n  int uart_pin1;\n  int uart_pin2;\n  undefined4 uart_pin1_config;\n  uint uart_pin2_config;\n  uint uart_pin_mask;\n  uint uart_pin2_mask;\n  uint uart_baud_rate;\n  undefined4 local_variable;\n  \n  if (pin_config != (int *)0x0) {\n    uart_pin1 = FUN_08007320((int)*(char *)(pin_config + 0x16),&DAT_0800a864);\n    uart_pin2 = FUN_08007320((int)*(char *)((int)pin_config + 0x59),&DAT_0800a81c);\n    if ((uart_pin2 == 0) || (uart_pin1 == 0)) {\n      FUN_080098d8(\"ERROR: at least one UART pin has no peripheral\\n\",uart_pin2);\n    }\n    else {\n      uart_pin1 = FUN_080073ae(uart_pin1);\n      *pin_config = uart_pin1;\n      if (uart_pin1 == 0) {\n        FUN_080098d8(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uart_pin1 == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(pin_config + 0x11) = 0;\n          *(undefined *)((int)pin_config + 0x5a) = 0x25;\n        }\n        else if (uart_pin1 == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(pin_config + 0x11) = 1;\n          *(undefined *)((int)pin_config + 0x5a) = 0x26;\n        }\n        else if (uart_pin1 == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(pin_config + 0x11) = 2;\n          *(undefined *)((int)pin_config + 0x5a) = 0x27;\n        }\n        uart_pin1_config = FUN_08006bb8((uint)((int)*(char *)((int)pin_config + 0x59) << 0x18) >> 0x1c);\n        uart_pin2_config = FUN_08007376((int)*(char *)((int)pin_config + 0x59),&DAT_0800a81c);\n        uart_pin_mask = 1 << (*(byte *)((int)pin_config + 0x59) & 0xf) & 0xffff;\n        uart_pin2_mask = (uart_pin2_config >> 3 & 1) << 4 | uart_pin2_config & 7;\n        uart_baud_rate = (uart_pin2_config << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((uart_pin2_config << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        local_variable = 3;\n        FUN_080040e8(uart_pin1_config,&uart_pin_mask);\n        uart_pin1_config = FUN_08006bb8((uint)((int)*(char *)(pin_config + 0x16) << 0x18) >> 0x1c);\n        uart_pin2_config = FUN_08007376((int)*(char *)(pin_config + 0x16),&DAT_0800a864);\n        uart_pin_mask = 1 << (*(byte *)(pin_config + 0x16) & 0xf) & 0xffff;\n        uart_pin2_mask = (uart_pin2_config >> 3 & 1) << 4 | uart_pin2_config & 7;\n        uart_baud_rate = (uart_pin2_config << 0x1a) >> 0x1e;\n        FUN_080040e8(uart_pin1_config,&uart_pin_mask);\n        (&DAT_200006c0)[*(byte *)(pin_config + 0x11)] = pin_config + 1;\n        uart_pointer_array1 = *pin_config;\n        pin_config[2] = uart_pointer_array2;\n        pin_config[3] = uart_pointer_array3;\n        pin_config[4] = uart_pointer_array4;\n        pin_config[5] = uart_pointer_array5;\n        uart_pointer_array6 = 0xc;\n        uart_pointer_array7 = 0;\n        uart_pointer_array8 = 0;\n        FUN_0800674e(pin_config + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "configure_uart_pins_08008078",
            "entrypoint": "0x08008078",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008078": "configure_uart_pins_08008078",
                "iVar1": "uart_pin1",
                "iVar2": "uart_pin2",
                "local_14": "local_variable",
                "local_18": "uart_baud_rate",
                "local_1c": "uart_pin2_mask",
                "local_20": "uart_pin_mask",
                "param_1": "pin_config",
                "param_1[0x12]": "uart_pointer_array2",
                "param_1[0x13]": "uart_pointer_array3",
                "param_1[0x14]": "uart_pointer_array4",
                "param_1[0x15]": "uart_pointer_array5",
                "param_1[1]": "uart_pointer_array1",
                "param_1[6]": "uart_pointer_array6",
                "param_1[7]": "uart_pointer_array7",
                "param_1[8]": "uart_pointer_array8",
                "uVar3": "uart_pin1_config",
                "uVar4": "uart_pin2_config"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080084b0": {
            "additional_data": {
                "&DAT_0800a81c": {
                    "1": "data_address2"
                },
                "&DAT_0800a864": {
                    "1": "data_address1",
                    "2": "data_pointer"
                },
                "&DAT_2000001c": {
                    "1": "pointer"
                },
                "DAT_0800a81c": {
                    "1": "data2"
                },
                "DAT_0800a864": {
                    "1": "initial_array"
                },
                "DAT_2000001c": {
                    "1": "pointer",
                    "2": "data_to_print"
                },
                "DAT_20000064": {
                    "1": "limit"
                },
                "DAT_20000068": {
                    "1": "flag2"
                },
                "DAT_2000006c": {
                    "1": "value4"
                },
                "DAT_20000070": {
                    "1": "initialized_data4"
                },
                "DAT_20000074": {
                    "1": "var2",
                    "2": "constant"
                },
                "DAT_20000075": {
                    "1": "result",
                    "2": "processed_data"
                },
                "FUN_08007320": {
                    "1": "get_num_entries",
                    "2": "get_initial_value",
                    "4": "get_data"
                },
                "FUN_0800734a": {
                    "1": "calculate_checksum",
                    "8": "process_data"
                },
                "FUN_08008078": {
                    "1": "set_default_value",
                    "2": "initialize_pointer",
                    "7": "print_data"
                },
                "FUN_080084b0": {
                    "1": "initialize_game_data",
                    "29": "initialize_data"
                },
                "iVar1": {
                    "1": "data_result",
                    "2": "result1",
                    "21": "result"
                },
                "uVar2": {
                    "1": "another_result",
                    "2": "value",
                    "3": "result2",
                    "8": "data",
                    "9": "second_result"
                }
            },
            "called": [
                "FUN_08008078",
                "FUN_0800734a",
                "FUN_08007320"
            ],
            "calling": [
                "FUN_08008500"
            ],
            "code": "\nvoid initialize_data_080084b0(void)\n\n{\n  int result;\n  undefined4 second_result;\n  \n  result = FUN_08007320(2,&DAT_0800a864);\n  if (result != 0) {\n    second_result = FUN_08007320(2,&DAT_0800a864);\n    DAT_20000075 = FUN_0800734a(second_result,&DAT_0800a81c);\n    DAT_20000074 = 2;\n    DAT_20000064 = 0x2580;\n    DAT_20000070 = 0;\n    DAT_20000068 = 0;\n    DAT_2000006c = 0;\n    FUN_08008078(&DAT_2000001c);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_080084b0",
            "entrypoint": "0x080084b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080084b0": "initialize_data_080084b0",
                "iVar1": "result",
                "uVar2": "second_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008500": {
            "additional_data": {
                "&DAT_0800a864": {
                    "1": "data_1",
                    "3": "constant_data",
                    "4": "data_array"
                },
                "&DAT_200006c0": {
                    "1": "dynamic_array",
                    "2": "array_data",
                    "4": "data_array"
                },
                "DAT_0800a864": {
                    "1": "some_data"
                },
                "DAT_20000060": {
                    "1": "limit",
                    "2": "data_value"
                },
                "DAT_200006c0": {
                    "1": "value_array",
                    "2": "data_array"
                },
                "FUN_08003760": {
                    "1": "get_elapsed_time",
                    "3": "get_initial_value",
                    "4": "get_current_time"
                },
                "FUN_080067ac": {
                    "1": "perform_sub_operation",
                    "2": "perform_operation",
                    "4": "check_condition"
                },
                "FUN_08007320": {
                    "1": "check_validity",
                    "2": "find_value",
                    "4": "check_value"
                },
                "FUN_080084b0": {
                    "1": "handle_data_size",
                    "4": "perform_action"
                },
                "FUN_08008500": {
                    "1": "execute_reversed_operation",
                    "2": "check_and_process_data",
                    "3": "perform_operation"
                },
                "iVar1": {
                    "1": "current_result",
                    "10": "result1",
                    "2": "return_value1",
                    "7": "initial_value"
                },
                "iVar2": {
                    "1": "current_execution_result",
                    "10": "result2",
                    "2": "return_value2",
                    "3": "result_value",
                    "4": "result"
                },
                "param_1": {
                    "1": "param_1",
                    "3": "param1",
                    "4": "input_param"
                },
                "param_2": {
                    "1": "input_param",
                    "2": "value",
                    "4": "arg2",
                    "5": "input_value"
                },
                "param_3": {
                    "1": "operation_param_1",
                    "2": "param3"
                },
                "param_4": {
                    "1": "operation_param_2",
                    "2": "param4"
                },
                "uVar3": {
                    "1": "loop_index",
                    "2": "iteration_count",
                    "6": "counter",
                    "8": "index",
                    "9": "loop_counter"
                }
            },
            "called": [
                "FUN_080084b0",
                "FUN_080067ac",
                "FUN_08007320",
                "FUN_08003760"
            ],
            "calling": [
                "FUN_0800885c"
            ],
            "code": "\nuint perform_operation_08008500(undefined4 input_value,uint input_value)\n\n{\n  int result1;\n  int result2;\n  uint loop_counter;\n  \n  result1 = FUN_08003760();\n  result2 = FUN_08007320(2,&DAT_0800a864);\n  if (result2 == 0) {\n    return 0;\n  }\n  for (loop_counter = 0;\n      (loop_counter < 5 &&\n      (((&DAT_200006c0)[loop_counter] == 0 ||\n       (result2 = FUN_08007320(2,&DAT_0800a864), *(int *)(&DAT_200006c0)[loop_counter] != result2))));\n      loop_counter = loop_counter + 1 & 0xff) {\n  }\n  if (4 < loop_counter) {\n    if ((4 < DAT_20000060) && (FUN_080084b0(), 4 < DAT_20000060)) {\n      return 0;\n    }\n    loop_counter = (uint)DAT_20000060;\n  }\n  do {\n    result2 = FUN_080067ac((&DAT_200006c0)[loop_counter],input_value,input_value & 0xffff,1000);\n    if (result2 == 0) {\n      return input_value;\n    }\n    result2 = FUN_08003760();\n  } while ((uint)(result2 - result1) < 1000);\n  return 0;\n}\n\n",
            "current_name": "perform_operation_08008500",
            "entrypoint": "0x08008500",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008500": "perform_operation_08008500",
                "iVar1": "result1",
                "iVar2": "result2",
                "param_1": "input_value",
                "param_2": "input_value",
                "uVar3": "loop_counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080085b8": {
            "additional_data": {
                "FUN_08006b1c": {
                    "1": "calculate_checksum",
                    "4": "get_byte_value"
                },
                "FUN_080085b8": {
                    "1": "is_bit_pattern_matching",
                    "11": "is_flag_set",
                    "2": "is_condition_met",
                    "3": "check_flag"
                },
                "byte": {
                    "2": "byte_value"
                },
                "param_1": {
                    "1": "feature_index",
                    "12": "input_value",
                    "5": "flag_value",
                    "7": "flag"
                },
                "uVar1": {
                    "1": "encoded_value",
                    "22": "result",
                    "3": "function_result"
                }
            },
            "called": [
                "FUN_08006b1c"
            ],
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "code": "\nbool is_flag_set_080085b8(int input_value)\n\n{\n  uint result;\n  \n  result = FUN_08006b1c((&DAT_200006c0)[*(input_byte *)(input_value + 0x44)]);\n  return (result & 0x22) == 0x22;\n}\n\n",
            "current_name": "is_flag_set_080085b8",
            "entrypoint": "0x080085b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080085b8": "is_flag_set_080085b8",
                "byte": "input_byte",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080085dc": {
            "additional_data": {
                "&DAT_200006c0": {
                    "1": "flag_array"
                },
                "(uVar1 & 0x21) == 0x21": {
                    "1": "is_flag_valid"
                },
                "*(byte *)(param_1 + 0x44)": {
                    "1": "flag"
                },
                "DAT_200006c0": {
                    "1": "lookup_table"
                },
                "FUN_08006b1c": {
                    "1": "calculate_flag",
                    "2": "get_flag_byte",
                    "3": "get_byte_value",
                    "4": "get_flag_value"
                },
                "FUN_080085dc": {
                    "1": "is_desirable_condition_met",
                    "2": "check_condition",
                    "5": "check_flag_condition",
                    "6": "is_flag_set"
                },
                "byte": {
                    "1": "byte_value"
                },
                "param_1": {
                    "1": "parameter",
                    "2": "input_parameter",
                    "5": "flag",
                    "8": "input_value",
                    "9": "flag_value"
                },
                "uVar1": {
                    "1": "flag_value",
                    "21": "result"
                }
            },
            "called": [
                "FUN_08006b1c"
            ],
            "calling": [],
            "code": "\nbool is_flag_set_080085dc(int flag_value)\n\n{\n  uint result;\n  \n  result = FUN_08006b1c((&DAT_200006c0)[*(byte_value *)(flag_value + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "current_name": "is_flag_set_080085dc",
            "entrypoint": "0x080085dc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080085dc": "is_flag_set_080085dc",
                "byte": "byte_value",
                "param_1": "flag_value",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008600": {
            "additional_data": {
                "&DAT_200006c0": {
                    "1": "array"
                },
                "(&DAT_200006c0)[*(byte *)(param_1 + 0x44)]": {
                    "1": "data_array"
                },
                "(*param_2)": {
                    "1": "output_value"
                },
                "*(byte *)(param_1 + 0x44)": {
                    "1": "byte_value",
                    "2": "index"
                },
                "*(undefined *)(param_1 + 0x45)": {
                    "1": "byte_value"
                },
                "*param_2": {
                    "1": "output_value"
                },
                "1": {
                    "1": "input_size"
                },
                "DAT_200006c0": {
                    "1": "some_data"
                },
                "FUN_080068d6": {
                    "1": "perform_operation",
                    "23": "process_data"
                },
                "FUN_080085b8": {
                    "1": "check_binary_validity",
                    "2": "check_if_zero",
                    "3": "check_success",
                    "8": "check_condition"
                },
                "FUN_08008600": {
                    "1": "copy_data_and_call_function",
                    "4": "extract_value_and_process",
                    "5": "extract_and_process_data",
                    "8": "extract_data"
                },
                "byte": {
                    "1": "value"
                },
                "iVar1": {
                    "1": "return_value",
                    "26": "result"
                },
                "param_1": {
                    "1": "value_ptr",
                    "2": "data_address",
                    "3": "input_pointer",
                    "4": "data_ptr",
                    "5": "input_value"
                },
                "param_1 + 0x45": {
                    "1": "input_addr"
                },
                "param_2": {
                    "1": "data_offset",
                    "2": "output_buffer",
                    "4": "extracted_data",
                    "5": "output_ptr"
                },
                "param_3": {
                    "1": "value1",
                    "11": "param_3",
                    "3": "size",
                    "7": "param3"
                },
                "param_4": {
                    "1": "arg2",
                    "15": "param_4",
                    "8": "param4"
                }
            },
            "called": [
                "FUN_080085b8",
                "FUN_080068d6"
            ],
            "calling": [
                "FUN_08008b66"
            ],
            "code": "\nundefined4 extract_data_08008600(int input_value,undefined *output_ptr,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  \n  if (input_value == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_080085b8();\n  if (result == 0) {\n    *output_ptr = *(undefined *)(input_value + 0x45);\n    FUN_080068d6((&DAT_200006c0)[*(value *)(input_value + 0x44)],input_value + 0x45,1,&DAT_200006c0,param_4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "extract_data_08008600",
            "entrypoint": "0x08008600",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008600": "extract_data_08008600",
                "byte": "value",
                "iVar1": "result",
                "param_1": "input_value",
                "param_2": "output_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800863c": {
            "additional_data": {
                "&DAT_20000670": {
                    "1": "data_list",
                    "2": "data_array1"
                },
                "&DAT_20000670 + uVar2 * 4": {
                    "1": "data_value_pointer"
                },
                "&DAT_20000684": {
                    "1": "source_array",
                    "2": "data_array2"
                },
                "&DAT_20000684 + uVar2 * 4": {
                    "1": "data_pointer_value"
                },
                "(*&DAT_200006c0)[*(byte *)(param_1 + 0x44)]": {
                    "1": "reversed_data"
                },
                "(*DAT_20000670)[byte_val * 4]": {
                    "1": "ptr_to_value1_array[byte_val]"
                },
                "(*DAT_20000684)[byte_val * 4]": {
                    "1": "ptr_to_data_ptr_array[byte_val]"
                },
                "*(byte *)(param_1 + 0x44)": {
                    "1": "byte_val",
                    "2": "data_byte"
                },
                "*(char *)(param_1 + 0x5a)": {
                    "1": "character_value",
                    "2": "char_value"
                },
                "*(int *)(&DAT_20000684 + uVar2 * 4)": {
                    "1": "data_ptr_arr"
                },
                "*(undefined4 *)(&DAT_20000670 + uVar2 * 4)": {
                    "1": "data_arr"
                },
                "FUB_080085b8": {
                    "1": "check_condition"
                },
                "FUD_080085b8": {
                    "1": "check_input"
                },
                "FUN_08003f30": {
                    "1": "perform_operation",
                    "2": "update_value",
                    "3": "process_data"
                },
                "FUN_08003f94": {
                    "1": "cleanup",
                    "2": "cleanup_data"
                },
                "FUN_080068d6": {
                    "1": "perform_operation",
                    "2": "update_data",
                    "3": "process_data"
                },
                "FUN_080085b8": {
                    "1": "check_validity",
                    "3": "check_data"
                },
                "FUN_0800863c": {
                    "1": "update_data_entry",
                    "21": "update_data",
                    "5": "process_data"
                },
                "byteValue": {
                    "1": "byte_val"
                },
                "iVar1": {
                    "1": "check_result",
                    "28": "result"
                },
                "param_1": {
                    "1": "input_param",
                    "2": "param",
                    "3": "input_data",
                    "4": "data_ptr",
                    "7": "data_pointer",
                    "9": "data"
                },
                "param_1 + 0x44": {
                    "1": "data_value"
                },
                "param_1 + 0x45": {
                    "1": "data_offset"
                },
                "param_1 + 0x5a": {
                    "1": "char_value"
                },
                "param_2": {
                    "1": "value_1",
                    "11": "value",
                    "16": "new_value",
                    "2": "value1"
                },
                "param_3": {
                    "1": "value_2",
                    "2": "value2",
                    "3": "param3",
                    "7": "unused"
                },
                "param_4": {
                    "1": "config",
                    "2": "unused",
                    "4": "param4"
                },
                "uVar2": {
                    "1": "data_index",
                    "22": "index",
                    "3": "byte_val",
                    "5": "byte_value"
                }
            },
            "called": [
                "FUN_080085b8",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_080068d6"
            ],
            "calling": [
                "FUN_08008c44"
            ],
            "code": "\nvoid update_data_0800863c(int data,undefined4 new_value,undefined4 unused,undefined4 param)\n\n{\n  int result;\n  uint index;\n  \n  if (data != 0) {\n    result = FUN_080085b8();\n    if (result == 0) {\n      index = (uint)*(byte *)(data + 0x44);\n      *(undefined4 *)(&DAT_20000670 + index * 4) = new_value;\n      *(int *)(&DAT_20000684 + index * 4) = data;\n      FUN_08003f30((int)*(char *)(data + 0x5a),0,1,index,param);\n      FUN_08003f94((int)*(char *)(data + 0x5a));\n      FUN_080068d6((&DAT_200006c0)[*(byte *)(data + 0x44)],data + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_0800863c",
            "entrypoint": "0x0800863c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800863c": "update_data_0800863c",
                "iVar1": "result",
                "param_1": "data",
                "param_2": "new_value",
                "param_3": "unused",
                "param_4": "param",
                "uVar2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008694": {
            "additional_data": {
                "&DAT_20000698": {
                    "1": "data_address"
                },
                "&DAT_200006ac": {
                    "1": "pointer_address"
                },
                "(&DAT_200006c0)[*(byte *)(dataPointer + 0x44)]": {
                    "1": "operation"
                },
                "(*(char *)(param_1 + 0x44))": {
                    "1": "index_byte"
                },
                "(*(char *)(param_1 + 0x5a))": {
                    "1": "index_char"
                },
                "(int *)(dataPointer + 100)": {
                    "1": "int_value1"
                },
                "(int)*(char *)(dataPointer + 0x5a)": {
                    "1": "character_value"
                },
                "(uint)*(ushort *)(dataPointer + 0x6a)": {
                    "1": "int_value2"
                },
                "*(byte *)(param_1 + 0x44)": {
                    "1": "offset_byte"
                },
                "*(char *)(param_1 + 0x5a)": {
                    "1": "index_char"
                },
                "*(int *)(&DAT_200006ac + (uint)bVar1 * 4)": {
                    "1": "flag_data"
                },
                "*(undefined4 *)(&DAT_20000698 + (uint)bVar1 * 4)": {
                    "1": "flag_values"
                },
                "*(ushort *)(param_1 + 0x6a)": {
                    "1": "index_short"
                },
                "DAT_20000698": {
                    "1": "array_address1"
                },
                "DAT_200006ac": {
                    "1": "array_address2"
                },
                "DAT_200006c0": {
                    "1": "function_pointer_array"
                },
                "FUN_08003f30": {
                    "1": "set_data",
                    "2": "process_data",
                    "3": "initialize_data",
                    "4": "set_flag"
                },
                "FUN_08003f94": {
                    "1": "finalize_processing",
                    "2": "print_data",
                    "6": "process_data"
                },
                "FUN_0800688e": {
                    "1": "update_values",
                    "2": "reverse_data",
                    "3": "execute_operation"
                },
                "FUN_0800688e((&DAT_200006c0)[*(byte *)(param_1 + 0x44)])": {
                    "1": "update_value((pointer_array)[offset_byte])"
                },
                "FUN_08008694": {
                    "1": "update_param",
                    "2": "update_data_and_call_functions",
                    "24": "update_data"
                },
                "bVar1": {
                    "2": "byte_val",
                    "21": "byte_value",
                    "8": "index"
                },
                "param_1": {
                    "1": "data_addr",
                    "10": "data_pointer",
                    "2": "input_param",
                    "3": "data_address",
                    "8": "data_ptr"
                },
                "param_2": {
                    "1": "value1",
                    "2": "value",
                    "27": "new_value"
                },
                "param_3": {
                    "1": "value2"
                }
            },
            "called": [
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_0800688e"
            ],
            "calling": [],
            "code": "\nvoid update_data_08008694(int data_pointer,undefined4 new_value)\n\n{\n  byte byte_value;\n  \n  if (data_pointer != 0) {\n    byte_value = *(byte *)(data_pointer + 0x44);\n    *(undefined4 *)(&DAT_20000698 + (uint)byte_value * 4) = new_value;\n    *(int *)(&DAT_200006ac + (uint)byte_value * 4) = data_pointer;\n    FUN_08003f30((int)*(char *)(data_pointer + 0x5a),0,2);\n    FUN_08003f94((int)*(char *)(data_pointer + 0x5a));\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(data_pointer + 0x44)],\n                 *(int *)(data_pointer + 100) + (uint)*(ushort *)(data_pointer + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_08008694",
            "entrypoint": "0x08008694",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008694": "update_data_08008694",
                "bVar1": "byte_value",
                "param_1": "data_pointer",
                "param_2": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080086e8": {
            "additional_data": {
                "FUN_080086e8": {
                    "1": "find_number_index",
                    "10": "find_index",
                    "12": "find_value_index",
                    "2": "find_index_of_value",
                    "3": "find_matching_index"
                },
                "param_1": {
                    "1": "data",
                    "20": "value",
                    "3": "number",
                    "4": "input_value"
                },
                "uVar1": {
                    "1": "result",
                    "2": "matching_index",
                    "28": "index"
                }
            },
            "called": [],
            "calling": [
                "FUN_08008730",
                "FUN_0800870c"
            ],
            "code": "\nuint find_value_index_080086e8(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (value == (&DAT_200006c0)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "current_name": "find_value_index_080086e8",
            "entrypoint": "0x080086e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080086e8": "find_value_index_080086e8",
                "param_1": "value",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800870c": {
            "additional_data": {
                "*(code **)(&DAT_20000670 + uVar1 * 4)": {
                    "1": "action_pointer"
                },
                "*(undefined4 *)(&DAT_20000684 + uVar1 * 4)": {
                    "1": "data_pointer"
                },
                "FUN_080086e8": {
                    "1": "get_random_value",
                    "10": "get_function_index",
                    "2": "get_command_index",
                    "5": "get_random_number"
                },
                "FUN_0800870c": {
                    "1": "execute_specific_function",
                    "10": "execute_function",
                    "2": "execute_selected_function",
                    "3": "execute_function_based_on_value"
                },
                "param_1": {
                    "1": "input_param"
                },
                "uVar1": {
                    "1": "random_num",
                    "2": "result",
                    "3": "random_number",
                    "9": "function_index"
                }
            },
            "called": [
                "FUN_080086e8"
            ],
            "calling": [
                "FUN_0800694c"
            ],
            "code": "\nvoid execute_function_0800870c(void)\n\n{\n  uint function_index;\n  \n  function_index = FUN_080086e8();\n  if (function_index < 5) {\n    (**(code **)(&DAT_20000670 + function_index * 4))(*(undefined4 *)(&DAT_20000684 + function_index * 4));\n  }\n  return;\n}\n\n",
            "current_name": "execute_function_0800870c",
            "entrypoint": "0x0800870c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800870c": "execute_function_0800870c",
                "uVar1": "function_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008730": {
            "additional_data": {
                "*param_1": {
                    "1": "pointer_param_1"
                },
                "DAT_20000698": {
                    "1": "function_pointers_1"
                },
                "DAT_200006ac": {
                    "1": "data_addresses_1"
                },
                "DAT_200006c0": {
                    "1": "data_addresses_2"
                },
                "FUN_0800688e": {
                    "1": "execute_operation",
                    "3": "execute_sub_function",
                    "5": "perform_operation",
                    "9": "perform_action"
                },
                "FUN_080086e8": {
                    "1": "get_result",
                    "6": "get_random_value",
                    "7": "get_random_index",
                    "8": "get_random_number"
                },
                "FUN_08008730": {
                    "1": "update_data",
                    "4": "process_data",
                    "8": "execute_function"
                },
                "iVar2": {
                    "1": "operation_result",
                    "16": "result",
                    "3": "return_value",
                    "7": "action_result"
                },
                "iVar3": {
                    "1": "selected_pointer",
                    "2": "function_pointer",
                    "3": "data_address",
                    "5": "data",
                    "6": "data_pointer"
                },
                "param_1": {
                    "1": "param"
                },
                "param_2": {
                    "1": "data_offset"
                },
                "param_3": {
                    "1": "param_3",
                    "2": "flag"
                },
                "uVar1": {
                    "1": "selected_index",
                    "11": "random_index",
                    "3": "result",
                    "6": "random_number"
                }
            },
            "called": [
                "FUN_080086e8",
                "FUN_0800688e"
            ],
            "calling": [
                "FUN_08006932"
            ],
            "code": "\nvoid execute_function_08008730(void)\n\n{\n  uint random_index;\n  int result;\n  int data_pointer;\n  \n  random_index = FUN_080086e8();\n  data_pointer = *(int *)(&DAT_200006ac + random_index * 4);\n  if ((random_index < 5) && (result = (**(code **)(&DAT_20000698 + random_index * 4))(data_pointer), result != -1)) {\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(data_pointer + 0x44)],\n                 *(int *)(data_pointer + 100) + (uint)*(ushort *)(data_pointer + 0x6a),1);\n  }\n  return;\n}\n\n",
            "current_name": "execute_function_08008730",
            "entrypoint": "0x08008730",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008730": "execute_function_08008730",
                "iVar2": "result",
                "iVar3": "data_pointer",
                "uVar1": "random_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800877c": {
            "called": [],
            "calling": [
                "FUN_080069ec"
            ],
            "code": "\nvoid FUNC_0800877c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800877c",
            "entrypoint": "0x0800877c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800877c": "FUNC_0800877c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08008804": {
            "additional_data": {
                "&DAT_200006d4": {
                    "1": "current_memory"
                },
                "&DAT_20000a3c": {
                    "1": "start_address"
                },
                "&stack0x00000000": {
                    "1": "stack_pointer"
                },
                "DAT_200006d4": {
                    "1": "current_stack_pointer",
                    "2": "current_address",
                    "3": "current_pointer",
                    "7": "current_memory"
                },
                "DAT_20000a38": {
                    "16": "error_code",
                    "4": "error_flag"
                },
                "DAT_20000a3c": {
                    "1": "stack_limit",
                    "3": "initial_memory"
                },
                "FUN_08008804": {
                    "1": "reserve_stack_memory",
                    "30": "allocate_memory"
                },
                "param_1": {
                    "1": "size_bytes",
                    "27": "size"
                },
                "puVar1": {
                    "1": "ptr",
                    "28": "allocated_memory"
                },
                "stack0x00000000": {
                    "1": "maximum_stack_location",
                    "2": "stack_base",
                    "3": "stack_end"
                }
            },
            "called": [],
            "calling": [
                "FUN_08009918"
            ],
            "code": "\nundefined * allocate_memory_08008804(int size)\n\n{\n  undefined *allocated_memory;\n  \n  if (DAT_200006d4 == (undefined *)0x0) {\n    DAT_200006d4 = &DAT_20000a3c;\n  }\n  allocated_memory = DAT_200006d4;\n  if (DAT_200006d4 + size <= end_of_memory) {\n    DAT_200006d4 = DAT_200006d4 + size;\n    return allocated_memory;\n  }\n  DAT_20000a38 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "current_name": "allocate_memory_08008804",
            "entrypoint": "0x08008804",
            "imported": false,
            "improved": true,
            "renaming": {
                "&stack0x00000000": "end_of_memory",
                "FUN_08008804": "allocate_memory_08008804",
                "param_1": "size",
                "puVar1": "allocated_memory",
                "stack0x00000000": "stack_end"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008840": {
            "additional_data": {
                "": {
                    "1": ""
                },
                "0xffffffff": {
                    "2": "error_value"
                },
                "<no parameter>": {
                    "1": ""
                },
                "<no variable>": {
                    "1": ""
                },
                "<original_variable_name_1>": {
                    "1": "error_code"
                },
                "FUN_08008840": {
                    "1": "get_constant_value",
                    "10": "get_error_code",
                    "2": "initialize_error_code",
                    "3": "get_return_value",
                    "5": "initialize_return_value",
                    "8": "get_default_value"
                },
                "new_variable_name_1": {
                    "1": "initialized_return_value"
                },
                "original_variable_name_1": {
                    "1": "return_value"
                },
                "return type": {
                    "1": "int"
                },
                "undefined4": {
                    "1": "return_value",
                    "3": "unsigned_int",
                    "5": "uint32_t"
                },
                "undefined4_1": {
                    "1": "default_value"
                },
                "unsigned int": {
                    "1": "return_value"
                }
            },
            "called": [],
            "calling": [],
            "code": "\nuint32_t get_error_code_08008840(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "current_name": "get_error_code_08008840",
            "entrypoint": "0x08008840",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008840": "get_error_code_08008840",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008846": {
            "additional_data": {
                "*(undefined4 *)(arg2 + 4)": {
                    "1": "memory_segment_size"
                },
                "*(undefined4 *)(param_2 + 4)": {
                    "1": "memory_address",
                    "2": "memory_value"
                },
                "0x2000": {
                    "1": "flag_value"
                },
                "<unmodified_variable>": {
                    "1": "<unmodified_variable>"
                },
                "FUN_08008846": {
                    "1": "set_memory_address",
                    "13": "initialize_memory",
                    "2": "set_memory_protection",
                    "4": "set_memory_page_size"
                },
                "param_1": {
                    "1": "ptr",
                    "2": "value",
                    "3": "arg1",
                    "4": "param",
                    "6": "param1",
                    "7": "result"
                },
                "param_2": {
                    "1": "output_buffer",
                    "10": "memory_address",
                    "2": "ptr",
                    "3": "buffer",
                    "5": "address"
                },
                "param_2 + 4": {
                    "1": "buffer_size"
                },
                "param_2+4": {
                    "1": "param2_plus4"
                }
            },
            "called": [],
            "calling": [
                "FUN_0800a0ec"
            ],
            "code": "\nundefined4 initialize_memory_08008846(undefined4 result,int memory_address)\n\n{\n  *(undefined4 *)(memory_address + 4) = 0x2000;\n  return 0;\n}\n\n",
            "current_name": "initialize_memory_08008846",
            "entrypoint": "0x08008846",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008846": "initialize_memory_08008846",
                "param_1": "result",
                "param_2": "memory_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008850": {
            "additional_data": {
                "(none)": {
                    "1": "(none)"
                },
                "1": {
                    "1": "true"
                },
                "<original_variable_name_1>": {
                    "1": "<new_variable_name_1>"
                },
                "DAT_": {
                    "1": ""
                },
                "FUN_08008850": {
                    "1": "get_constant_value",
                    "2": "get_status",
                    "4": "get_return_value",
                    "5": "get_result"
                },
                "PTR_": {
                    "1": ""
                },
                "return": {
                    "1": "return_value",
                    "2": "result"
                },
                "undefined4": {
                    "1": "bool",
                    "2": "uint32_t",
                    "5": "int"
                }
            },
            "called": [],
            "calling": [
                "FUN_0800a110"
            ],
            "code": "\nint get_result_08008850(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "get_result_08008850",
            "entrypoint": "0x08008850",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008850": "get_result_08008850",
                "return": "result",
                "undefined4": "int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008854": {
            "additional_data": {
                "<original_variable_name_1>": {
                    "1": "<new_variable_name_1>"
                },
                "<original_variable_name_2>": {
                    "1": "<new_variable_name_2>"
                },
                "<original_variable_name_n>": {
                    "1": "<new_variable_name_n>"
                },
                "FUN_08008854": {
                    "1": "initialize_function",
                    "15": "initialize",
                    "2": "initialize_value",
                    "7": "get_default_value"
                },
                "PTR_08009888": {
                    "1": "data_pointer"
                },
                "PTR_output": {
                    "1": "output_ptr"
                },
                "Return": {
                    "1": "result"
                },
                "original_function_name": {
                    "1": "more_descriptive_function_name"
                },
                "original_parameter_name_1": {
                    "1": "new_parameter_name_1"
                },
                "original_variable_name_1": {
                    "1": "new_variable_name_1"
                },
                "return": {
                    "2": "result"
                },
                "undefined4": {
                    "1": "status",
                    "10": "void",
                    "2": "int"
                }
            },
            "called": [],
            "calling": [
                "FUN_0800a130"
            ],
            "code": "\nvoid initialize_08008854(void)\n\n{\n  result 0;\n}\n\n",
            "current_name": "initialize_08008854",
            "entrypoint": "0x08008854",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008854": "initialize_08008854",
                "return": "result",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008858": {
            "additional_data": {
                "<original_variable_name_1>": {
                    "1": "<new_variable_name_1>"
                },
                "<original_variable_name_2>": {
                    "1": "<new_variable_name_2>"
                },
                "<original_variable_name_n>": {
                    "1": "<new_variable_name_n>"
                },
                "DAT_": {
                    "1": ""
                },
                "FUN_08008858": {
                    "1": "initialize_value",
                    "16": "initialize",
                    "2": "get_zero_value",
                    "3": "initialize_application"
                },
                "PTR_": {
                    "1": ""
                },
                "RET_00000000": {
                    "1": "success_code"
                },
                "return": {
                    "1": "result"
                },
                "undefVar": {
                    "1": "result"
                },
                "undefined4": {
                    "1": "status",
                    "3": "int",
                    "8": "void"
                }
            },
            "called": [],
            "calling": [
                "FUN_0800a168"
            ],
            "code": "\nvoid initialize_08008858(void)\n\n{\n  result 0;\n}\n\n",
            "current_name": "initialize_08008858",
            "entrypoint": "0x08008858",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008858": "initialize_08008858",
                "return": "result",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800885c": {
            "additional_data": {
                "FUN_08008500": {
                    "1": "execute_operation",
                    "3": "perform_operation",
                    "8": "process_data"
                },
                "FUN_0800885c": {
                    "1": "execute_operation",
                    "17": "execute_function",
                    "2": "initialize_function",
                    "4": "initialize"
                },
                "param_1": {
                    "1": "input_param",
                    "11": "arg1",
                    "2": "unused",
                    "4": "param_1",
                    "5": "unused_param"
                },
                "param_2": {
                    "1": "input_2",
                    "10": "arg2",
                    "2": "input_1",
                    "5": "input_param"
                },
                "param_3": {
                    "1": "output_param",
                    "11": "arg3",
                    "2": "input_2"
                },
                "param_4": {
                    "1": "param_value3",
                    "11": "arg4",
                    "2": "unused",
                    "3": "unused_param"
                }
            },
            "called": [
                "FUN_08008500"
            ],
            "calling": [
                "FUN_0800a042"
            ],
            "code": "\nvoid execute_function_0800885c(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08008500(arg2,arg3,arg3,arg4,arg4);\n  return;\n}\n\n",
            "current_name": "execute_function_0800885c",
            "entrypoint": "0x0800885c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800885c": "execute_function_0800885c",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008868": {
            "additional_data": {
                "": {
                    "1": ""
                },
                "<original_function_name_1>": {
                    "1": "<more_descriptive_function_name_1>"
                },
                "<original_parameter_name_1>": {
                    "1": "<new_parameter_name_1>"
                },
                "<original_parameter_name_2>": {
                    "1": "<new_parameter_name_2>"
                },
                "<original_variable_name_1>": {
                    "2": "<new_variable_name_1>"
                },
                "<original_variable_name_2>": {
                    "2": "<new_variable_name_2>"
                },
                "<original_variable_name_n>": {
                    "1": "<new_variable_name_n>"
                },
                "DAT_": {
                    "1": "unchanged"
                },
                "DAT_0014": {
                    "1": "data1"
                },
                "DAT_08008868": {
                    "1": "<unchanged>"
                },
                "DAT_98765432": {
                    "1": "unchanged"
                },
                "DAT_true": {
                    "1": "dat_true"
                },
                "FUN_08008868": {
                    "1": "do_nothing_loop",
                    "2": "run_infinite_loop",
                    "27": "infinite_loop"
                },
                "PTR_": {
                    "1": "unchanged"
                },
                "PTR_0012": {
                    "1": "pointer1"
                },
                "PTR_08008868": {
                    "1": "<unchanged>"
                },
                "PTR_12345678": {
                    "1": "unchanged"
                },
                "block_with_infinite_loop": {
                    "1": "infinite_loop"
                },
                "do": {
                    "1": "infinite_loop",
                    "2": "do"
                },
                "i": {
                    "1": "index"
                },
                "original_function_name": {
                    "1": "more_descriptive_function_name"
                },
                "original_variable_name_1": {
                    "1": "unused_variable1"
                },
                "original_variable_name_2": {
                    "1": "unused_variable2"
                },
                "ptr_warning": {
                    "1": "ptr_warning"
                },
                "temp": {
                    "1": "temporary"
                },
                "true": {
                    "1": "infinite_loop",
                    "2": "true"
                },
                "void": {
                    "1": ""
                },
                "while": {
                    "1": ""
                }
            },
            "called": [
                "FUN_08008868"
            ],
            "calling": [
                "FUN_08008868",
                "FUN_08009b5c"
            ],
            "code": "\nvoindexd infinite_loop_08008868(voindexd)\n\n{\n  do {\n                    /* WARNING: Do nothindexng block windexth indexnfindexnindexte loop */\n  } whindexle( true );\n}\n\n",
            "current_name": "infinite_loop_08008868",
            "entrypoint": "0x08008868",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008868": "infinite_loop_08008868",
                "i": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800886c": {
            "additional_data": {
                "": {
                    "1": ""
                },
                "DAT_20000a38": {
                    "1": "value_to_initialize",
                    "12": "data_value",
                    "2": "data_size",
                    "6": "initial_value"
                },
                "FUN_0800886c": {
                    "1": "set_default_value",
                    "18": "initialize_data",
                    "5": "initialize_value"
                },
                "return": {
                    "2": "status"
                },
                "return value": {
                    "1": "success"
                }
            },
            "called": [],
            "calling": [
                "FUN_08009fe8"
            ],
            "code": "\nundefined4 initialize_data_0800886c(void)\n\n{\n  DAT_20000a38 = 0x16;\n  status 0xffffffff;\n}\n\n",
            "current_name": "initialize_data_0800886c",
            "entrypoint": "0x0800886c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800886c": "initialize_data_0800886c",
                "return": "status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800887c": {
            "additional_data": {
                "1": {
                    "1": "success"
                },
                "<original_variable_name_1>": {
                    "3": "<new_variable_name_1>"
                },
                "<original_variable_name_2>": {
                    "2": "<new_variable_name_2>"
                },
                "<original_variable_name_n>": {
                    "1": "<new_variable_name_n>"
                },
                "DAT_": {
                    "1": "unchanged"
                },
                "DAT_08050100": {
                    "1": "constant"
                },
                "DAT_08050104": {
                    "1": "result"
                },
                "FUN_0800887c": {
                    "1": "initialize_return_value",
                    "2": "initialize_program",
                    "3": "initialize_flag",
                    "4": "initialize",
                    "6": "get_return_value"
                },
                "PTR_": {
                    "1": "unchanged"
                },
                "PTR_PARAM_1": {
                    "1": "input_buffer"
                },
                "PTR_PARAM_2": {
                    "1": "output_buffer"
                },
                "retVal": {
                    "1": "result"
                },
                "return": {
                    "4": "result"
                },
                "return value": {
                    "1": "success"
                },
                "undefined4": {
                    "1": "return_value",
                    "2": "bool",
                    "3": "void",
                    "4": "int",
                    "5": "uint32_t"
                }
            },
            "called": [],
            "calling": [
                "thunk_FUN_0800887c"
            ],
            "code": "\nuint32_t get_return_value_0800887c(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "get_return_value_0800887c",
            "entrypoint": "0x0800887c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800887c": "get_return_value_0800887c",
                "return": "result",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008880": {
            "additional_data": {
                "DAT_20000088": {
                    "2": "shift_amount"
                },
                "FUN_08006d80": {
                    "1": "shift_bits"
                },
                "FUN_08008880": {
                    "1": "extract_and_shift",
                    "2": "get_adjusted_value",
                    "3": "get_modified_value",
                    "4": "decode_value",
                    "5": "get_shifted_value"
                },
                "bVar1": {
                    "1": "is_value_in_range",
                    "11": "is_less_than_threshold",
                    "2": "is_less_than_3c",
                    "4": "is_less_than",
                    "5": "is_less_than_0x3c"
                },
                "cVar2": {
                    "1": "retrieved_value",
                    "2": "modified_char",
                    "3": "result_char",
                    "4": "result",
                    "6": "decoded_char"
                },
                "param_1": {
                    "1": "original_value",
                    "2": "input",
                    "20": "input_value",
                    "7": "value"
                },
                "uVar3": {
                    "1": "shifted_val",
                    "11": "result",
                    "2": "modified_value",
                    "5": "output_value",
                    "6": "shifted_value"
                }
            },
            "called": [
                "FUN_08006d80"
            ],
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "code": "\nuint get_shifted_value_08008880(uint input_value)\n\n{\n  bool is_less_than_threshold;\n  char decoded_char;\n  uint result;\n  \n  if (input_value < 0xe) {\n    if (input_value + 0x2e < 0x3c) {\n      is_less_than_threshold = true;\n    }\n    else {\n      is_less_than_threshold = false;\n    }\n  }\n  else {\n    is_less_than_threshold = input_value < 0x3c;\n  }\n  if (is_less_than_threshold) {\n    if (input_value < 0xe) {\n      input_value = input_value + 0x2e;\n    }\n    decoded_char = (&DAT_0800a908)[input_value];\n  }\n  else {\n    decoded_char = -1;\n  }\n  if (decoded_char == -1) {\n    result = 0;\n  }\n  else {\n    result = FUN_08006d80();\n    if (DAT_20000088 != 0xc) {\n      if (DAT_20000088 < 0xc) {\n        return result >> (0xc - DAT_20000088 & 0xff);\n      }\n      return result << (DAT_20000088 - 0xc & 0xff);\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "get_shifted_value_08008880",
            "entrypoint": "0x08008880",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008880": "get_shifted_value_08008880",
                "bVar1": "is_less_than_threshold",
                "cVar2": "decoded_char",
                "param_1": "input_value",
                "uVar3": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080088e0": {
            "additional_data": {
                "&DAT_0800a6cc": {
                    "1": "array2"
                },
                "0x3e418": {
                    "1": "constant2"
                },
                "0xff": {
                    "1": "constant3"
                },
                "DAT_0800a908": {
                    "1": "array1"
                },
                "DAT_2000008c": {
                    "1": "flag_value",
                    "2": "constant"
                },
                "DAT_200006d8": {
                    "1": "constant2"
                },
                "FUN_08006b28": {
                    "1": "process_case2",
                    "5": "check_condition"
                },
                "FUN_08006b3e": {
                    "1": "update_data",
                    "2": "perform_operation"
                },
                "FUN_08007118": {
                    "1": "apply_modification",
                    "2": "handle_case3",
                    "3": "perform_operation"
                },
                "FUN_0800738a": {
                    "1": "get_data",
                    "2": "find_char_index",
                    "3": "get_result"
                },
                "FUN_080088e0": {
                    "1": "decode_and_handle_param",
                    "2": "process_param",
                    "23": "process_data"
                },
                "FUN_08008990": {
                    "1": "update_data",
                    "2": "handle_small_value",
                    "3": "set_flag",
                    "5": "handle_case1"
                },
                "FUN_08008a24": {
                    "1": "handle_value",
                    "2": "handle_large_value",
                    "5": "handle_case2"
                },
                "iVar1": {
                    "1": "result_one",
                    "13": "result",
                    "17": "result1"
                },
                "iVar2": {
                    "1": "data_index_value",
                    "3": "char_index",
                    "4": "lookup_index",
                    "7": "result2",
                    "8": "index"
                },
                "param_1": {
                    "1": "input_value1",
                    "2": "input_param",
                    "3": "input_value",
                    "4": "index",
                    "5": "input1",
                    "6": "data_index"
                },
                "param_2": {
                    "1": "value2",
                    "2": "data",
                    "3": "shift_amount",
                    "4": "input_value",
                    "5": "input2",
                    "6": "value"
                },
                "uint param_1": {
                    "1": "input1"
                },
                "uint param_2": {
                    "1": "input2"
                }
            },
            "called": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_08007118",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "code": "\nvoid process_data_080088e0(uint data_index,uint value)\n\n{\n  int result1;\n  int index;\n  \n  if (data_index < 0x3c) {\n    index = (int)(char)(&DAT_0800a908)[data_index];\n  }\n  else {\n    index = -1;\n  }\n  if (index != -1) {\n    result1 = FUN_0800738a(index,&DAT_0800a6cc);\n    if (result1 == 0) {\n      FUN_08008990(data_index,1);\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          value = value << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          value = value >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      if (value < 0x80) {\n        FUN_08008a24(data_index,0);\n      }\n      else {\n        FUN_08008a24(data_index,1);\n      }\n    }\n    else {\n      result1 = FUN_08006b28(index,&DAT_200006d8);\n      if (result1 == 0) {\n        FUN_08006b3e(index,&DAT_200006d8);\n      }\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          value = value << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          value = value >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      FUN_08007118(index,0x3e418,0xff,value,result1 == 0);\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_data_080088e0",
            "entrypoint": "0x080088e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080088e0": "process_data_080088e0",
                "iVar1": "result1",
                "iVar2": "index",
                "param_1": "data_index",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008990": {
            "additional_data": {
                "FUN_08006b28": {
                    "1": "get_step_result",
                    "2": "perform_operation",
                    "3": "reverse_data"
                },
                "FUN_08006b3e": {
                    "1": "execute_sub_function6",
                    "2": "process_data5"
                },
                "FUN_08006b5c": {
                    "1": "update_data",
                    "2": "do_something"
                },
                "FUN_080071e4": {
                    "1": "cleanup",
                    "2": "process_data2"
                },
                "FUN_08007258": {
                    "1": "execute_operation",
                    "2": "process_data3",
                    "3": "set_mode"
                },
                "FUN_0800738a": {
                    "1": "check_status",
                    "2": "check_data",
                    "5": "check_condition"
                },
                "FUN_08008990": {
                    "1": "execute_process",
                    "16": "process_data",
                    "2": "execute_task",
                    "4": "execute_operation",
                    "5": "execute_function"
                },
                "iVar1": {
                    "1": "status",
                    "26": "result",
                    "3": "result1"
                },
                "iVar3": {
                    "1": "array_index",
                    "11": "index"
                },
                "param_1": {
                    "1": "operation_code",
                    "11": "index",
                    "3": "input_value",
                    "4": "input_index"
                },
                "param_2": {
                    "1": "execution_mode",
                    "2": "execution_type",
                    "21": "mode",
                    "4": "option"
                },
                "param_3": {
                    "1": "param_a",
                    "13": "param3",
                    "2": "param_3",
                    "4": "param"
                },
                "param_4": {
                    "1": "arg2",
                    "14": "data",
                    "2": "input_data",
                    "6": "param4"
                },
                "puVar2": {
                    "1": "data_pointer2",
                    "2": "data_pointer",
                    "3": "ptr",
                    "4": "array",
                    "5": "data_ptr"
                }
            },
            "called": [
                "FUN_08006b5c",
                "FUN_080071e4",
                "FUN_08007258",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "calling": [
                "FUN_08003002",
                "FUN_080088e0",
                "FUN_080025ac",
                "FUN_080005f8"
            ],
            "code": "\nvoid process_data_08008990(uint index,undefined4 mode,undefined4 param3,undefined1 *data)\n\n{\n  int result;\n  undefined1 *data_ptr;\n  int value;\n  \n  if (index < 0x3c) {\n    value = (int)(char)(&DAT_0800a908)[index];\n    data_ptr = &DAT_0800a908;\n  }\n  else {\n    value = -1;\n    data_ptr = data;\n  }\n  if (value != -1) {\n    result = FUN_08006b28(value,&DAT_200006d8,param3,data_ptr,data);\n    if (result != 0) {\n      result = FUN_0800738a(value,&DAT_0800a6cc);\n      if (result != 0) {\n        FUN_080071e4(value);\n      }\n      FUN_08006b5c(value,&DAT_200006d8);\n    }\n    switch(mode) {\n    case 0:\n      FUN_08007258(value,0);\n      break;\n    case 1:\n      FUN_08007258(value,1,0);\n      break;\n    case 2:\n      FUN_08007258(value,0,1);\n      break;\n    case 3:\n      FUN_08007258(value,0,2);\n    }\n    FUN_08006b3e(value,&DAT_200006ec);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08008990",
            "entrypoint": "0x08008990",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008990": "process_data_08008990",
                "iVar1": "result",
                "iVar3": "value",
                "param_1": "index",
                "param_2": "mode",
                "param_3": "param3",
                "param_4": "data",
                "puVar2": "data_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008a24": {
            "additional_data": {
                "FUN_08006b28": {
                    "1": "calculate_result"
                },
                "FUN_08006b7c": {
                    "1": "get_shifted_data",
                    "2": "calculate_shifted_value"
                },
                "FUN_080072d8": {
                    "1": "apply_result",
                    "3": "update_data"
                },
                "FUN_08008a24": {
                    "1": "extract_and_process_data",
                    "24": "process_data"
                },
                "iVar1": {
                    "28": "result",
                    "3": "return_value"
                },
                "param_1": {
                    "1": "value",
                    "15": "index",
                    "2": "data_index",
                    "9": "input_index"
                },
                "param_2": {
                    "1": "param",
                    "13": "param2",
                    "2": "param_2",
                    "8": "value1"
                },
                "param_3": {
                    "1": "flag2",
                    "13": "param3",
                    "2": "param_3",
                    "8": "value2"
                },
                "param_4": {
                    "1": "buffer",
                    "19": "data",
                    "2": "data_buffer",
                    "4": "data_array"
                },
                "puVar3": {
                    "1": "char_array",
                    "2": "ptr",
                    "3": "array_ptr",
                    "4": "data_array",
                    "5": "data_ptr"
                },
                "uVar2": {
                    "1": "processed_value",
                    "2": "shifted_data",
                    "20": "shifted_value"
                },
                "uVar4": {
                    "1": "char_index",
                    "11": "value",
                    "2": "data_value",
                    "3": "char_value"
                }
            },
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072d8"
            ],
            "calling": [
                "FUN_08002fca",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "code": "\nvoid process_data_08008a24(uint index,undefined4 param2,undefined4 param3,undefined1 *data)\n\n{\n  int result;\n  undefined4 shifted_value;\n  undefined1 *data_ptr;\n  uint value;\n  \n  if (index < 0x3c) {\n    value = (uint)(char)(&DAT_0800a908)[index];\n    data_ptr = &DAT_0800a908;\n  }\n  else {\n    value = 0xffffffff;\n    data_ptr = data;\n  }\n  if ((value != 0xffffffff) &&\n     (result = FUN_08006b28(value,&DAT_200006ec,param3,data_ptr,data), result != 0)) {\n    shifted_value = FUN_08006b7c((value << 0x18) >> 0x1c);\n    FUN_080072d8(shifted_value,1 << (value & 0xf) & 0xffff,param2);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08008a24",
            "entrypoint": "0x08008a24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008a24": "process_data_08008a24",
                "iVar1": "result",
                "param_1": "index",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "data",
                "puVar3": "data_ptr",
                "uVar2": "shifted_value",
                "uVar4": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008a6c": {
            "additional_data": {
                "&DAT_0800a908": {
                    "1": "data"
                },
                "FUN_08006b28": {
                    "1": "check_index"
                },
                "FUN_08006b7c": {
                    "1": "shift_bits",
                    "2": "calculate_shifted_value"
                },
                "FUN_080072f0": {
                    "1": "apply_mask",
                    "2": "apply_bitwise_operation"
                },
                "FUN_08008a6c": {
                    "1": "parse_character",
                    "2": "check_validity",
                    "3": "check_character_validity",
                    "9": "check_character"
                },
                "cVar1": {
                    "1": "is_available",
                    "13": "result",
                    "15": "is_valid"
                },
                "iVar2": {
                    "1": "lookup_success",
                    "13": "result",
                    "2": "comparison_result",
                    "5": "check_result"
                },
                "param_1": {
                    "1": "param",
                    "2": "input_char",
                    "3": "input_value",
                    "7": "value",
                    "9": "character"
                },
                "uVar3": {
                    "1": "modified_char",
                    "2": "masked_value",
                    "24": "shifted_value"
                },
                "uVar4": {
                    "1": "char_index",
                    "2": "result",
                    "4": "index",
                    "6": "lookup_value"
                }
            },
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072f0"
            ],
            "calling": [
                "FUN_08000ef8"
            ],
            "code": "\nchar check_character_08008a6c(uint character)\n\n{\n  char is_valid;\n  int result;\n  undefined4 shifted_value;\n  uint lookup_value;\n  \n  if (character < 0x3c) {\n    lookup_value = (uint)(char)(&DAT_0800a908)[character];\n  }\n  else {\n    lookup_value = 0xffffffff;\n  }\n  if (lookup_value == 0xffffffff) {\n    is_valid = '\\0';\n  }\n  else {\n    result = FUN_08006b28(lookup_value,&DAT_200006ec);\n    if (result == 0) {\n      is_valid = '\\0';\n    }\n    else {\n      shifted_value = FUN_08006b7c((lookup_value << 0x18) >> 0x1c);\n      is_valid = FUN_080072f0(shifted_value,1 << (lookup_value & 0xf) & 0xffff);\n    }\n  }\n  if (is_valid != '\\0') {\n    is_valid = '\\x01';\n  }\n  return is_valid;\n}\n\n",
            "current_name": "check_character_08008a6c",
            "entrypoint": "0x08008a6c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008a6c": "check_character_08008a6c",
                "cVar1": "is_valid",
                "iVar2": "result",
                "param_1": "character",
                "uVar3": "shifted_value",
                "uVar4": "lookup_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008abc": {
            "additional_data": {
                "FUN_0800723c": {
                    "1": "execute_startup_tasks",
                    "5": "execute_initialization",
                    "8": "perform_initialization"
                },
                "FUN_08008abc": {
                    "1": "initialize_and_call_subfunction",
                    "10": "execute_initialization",
                    "13": "initialize_system",
                    "2": "initialize_application"
                }
            },
            "called": [
                "FUN_0800723c"
            ],
            "calling": [
                "FUN_080022f8"
            ],
            "code": "\nvoid initialize_system_08008abc(void)\n\n{\n  FUN_0800723c();\n  return;\n}\n\n",
            "current_name": "initialize_system_08008abc",
            "entrypoint": "0x08008abc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008abc": "initialize_system_08008abc"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008ac4": {
            "called": [],
            "calling": [
                "FUN_08003002",
                "FUN_08002fca"
            ],
            "code": "\nvoid FUNC_08008ac4(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08008ac4",
            "entrypoint": "0x08008ac4",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08008ac4": "FUNC_08008ac4"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08008afa": {
            "additional_data": {
                "& 0x3f": {
                    "1": "bitwise_and_mask"
                },
                "*((short *)(param_1 + 0x134) + 0x40)": {
                    "1": "first_half_checksum"
                },
                "*(short *)(param_1 + 0x134)": {
                    "1": "first_short_value",
                    "2": "value1",
                    "9": "first_value"
                },
                "*(short *)(param_1 + 0x136)": {
                    "1": "offset_value_2",
                    "2": "value2",
                    "9": "second_value"
                },
                "*PTR_0805d134": {
                    "1": "value1_ptr"
                },
                "*PTR_0805d136": {
                    "1": "value2_ptr"
                },
                "0x134": {
                    "1": "offset_one",
                    "2": "offset1",
                    "3": "first_offset"
                },
                "0x136": {
                    "1": "offset_two",
                    "2": "offset_2",
                    "3": "second_offset"
                },
                "0x3f": {
                    "1": "checksum_mask"
                },
                "0x40": {
                    "1": "base_value",
                    "2": "offset"
                },
                "DAT_08008b01": {
                    "1": "constant_value"
                },
                "FUN_08008afa": {
                    "1": "calculate_hash",
                    "12": "calculate_checksum",
                    "2": "calculate_updated_value",
                    "3": "calculate_result",
                    "6": "calculate_offset"
                },
                "PTR_08008afa": {
                    "1": "ptr_offset1"
                },
                "PTR_08008afe": {
                    "1": "ptr_offset2"
                },
                "param_1": {
                    "1": "memory_address",
                    "11": "input_value",
                    "2": "offset",
                    "3": "data_offset",
                    "4": "base_address",
                    "6": "address"
                },
                "param_1 + 0x134": {
                    "1": "address_offset_a"
                },
                "param_1 + 0x136": {
                    "1": "address_offset_b"
                },
                "param_2": {
                    "1": "size"
                },
                "ptr1": {
                    "1": "shifted_value_1"
                },
                "ptr2": {
                    "1": "shifted_value_2"
                }
            },
            "called": [],
            "calling": [
                "FUN_08008bf4"
            ],
            "code": "\nushort calculate_checksum_08008afa(int input_value)\n\n{\n  return (*(short *)(input_value + 0x134) + 0x40) - *(short *)(input_value + 0x136) & 0x3f;\n}\n\n",
            "current_name": "calculate_checksum_08008afa",
            "entrypoint": "0x08008afa",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008afa": "calculate_checksum_08008afa",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008b66": {
            "additional_data": {
                "FUN_08008b66": {
                    "1": "update_data_and_index",
                    "24": "update_data",
                    "3": "update_buffer"
                },
                "iVar1": {
                    "30": "result"
                },
                "local_9": {
                    "1": "value",
                    "2": "new_data",
                    "26": "new_value"
                },
                "param_1": {
                    "1": "buffer",
                    "10": "data",
                    "2": "buffer_address",
                    "3": "input_data",
                    "4": "data_ptr",
                    "5": "data_pointer"
                },
                "uVar2": {
                    "1": "current_value",
                    "18": "new_index",
                    "2": "next_index",
                    "5": "updated_index"
                }
            },
            "called": [
                "FUN_08008600"
            ],
            "calling": [],
            "code": "\nvoid update_data_08008b66(int data)\n\n{\n  int result;\n  ushort new_index;\n  undefined new_value;\n  \n  result = FUN_08008600(data,&new_value);\n  if ((result == 0) &&\n     (new_index = *(short *)(data + 0x60) + 1U & 0x3f, new_index != *(ushort *)(data + 0x62))) {\n    *(undefined *)(*(int *)(data + 0x5c) + (uint)*(ushort *)(data + 0x60)) = new_value;\n    *(ushort *)(data + 0x60) = new_index;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_08008b66",
            "entrypoint": "0x08008b66",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008b66": "update_data_08008b66",
                "iVar1": "result",
                "local_9": "new_value",
                "param_1": "data",
                "uVar2": "new_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008bf4": {
            "called": [
                "FUN_08008afa"
            ],
            "calling": [
                "FUN_08008f1c"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08008bfa) */\n/* WARNING: Removing unreachable block (ram,0x08008c0c) */\n/* WARNING: Removing unreachable block (ram,0x08008c02) */\n/* WARNING: Removing unreachable block (ram,0x08008c14) */\n\nvoid FUNC_08008bf4(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08008bf4",
            "entrypoint": "0x08008bf4",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08008bf4": "FUNC_08008bf4"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08008c20": {
            "additional_data": {
                "*(int *)(param_1 + 0x130)": {
                    "1": "data_address",
                    "2": "data_ptr1"
                },
                "*(int *)(param_1 + 0x138)": {
                    "1": "address_variable_4",
                    "2": "data_ptr4"
                },
                "*(undefined2 *)(param_1 + 0x134)": {
                    "1": "second_pointer",
                    "2": "data_ptr2"
                },
                "*(undefined2 *)(param_1 + 0x136)": {
                    "1": "address_variable_3",
                    "2": "data_ptr3"
                },
                "*(undefined2 *)(param_1 + 0x13c)": {
                    "1": "value_c",
                    "2": "data_ptr5"
                },
                "*(undefined2 *)(param_1 + 0x13e)": {
                    "1": "address_variable_6",
                    "2": "data_ptr6"
                },
                "0x11": {
                    "1": "initial_value_param1",
                    "2": "value1"
                },
                "0x130": {
                    "1": "offset_a",
                    "5": "offset1"
                },
                "0x134": {
                    "1": "offset_param2",
                    "4": "offset2"
                },
                "0x136": {
                    "1": "value_b",
                    "4": "offset3"
                },
                "0x138": {
                    "1": "offset_param4",
                    "4": "offset4"
                },
                "0x13c": {
                    "1": "value_c",
                    "4": "offset5"
                },
                "0x13e": {
                    "1": "value4",
                    "4": "offset6"
                },
                "0x51": {
                    "1": "initial_value_param4",
                    "2": "constant2"
                },
                "<original_variable_name_1>": {
                    "1": "address_offset"
                },
                "<original_variable_name_2>": {
                    "1": "value1"
                },
                "<original_variable_name_3>": {
                    "1": "value2"
                },
                "<original_variable_name_4>": {
                    "1": "address_offset2"
                },
                "<original_variable_name_5>": {
                    "1": "value3"
                },
                "<unchanged_variable_name>": {
                    "1": "<unchanged_variable_name>"
                },
                "FUN_08008c20": {
                    "1": "initialize_memory",
                    "14": "initialize_data",
                    "2": "initialize_struct",
                    "3": "set_initial_values",
                    "6": "initialize_parameters"
                },
                "baseAddress": {
                    "1": "base_address"
                },
                "param_1": {
                    "1": "memory_address",
                    "15": "base_address",
                    "2": "data_offset",
                    "4": "data_address"
                },
                "param_1 + 0x11": {
                    "1": "data_structure.initial_offset",
                    "2": "value1"
                },
                "param_1 + 0x130": {
                    "1": "parameter_a",
                    "2": "value1_address"
                },
                "param_1 + 0x134": {
                    "1": "struct_pointer->value2",
                    "2": "value2_address"
                },
                "param_1 + 0x136": {
                    "1": "data.variable2",
                    "2": "value3_address"
                },
                "param_1 + 0x138": {
                    "1": "address_of_parameter4",
                    "2": "value4_address"
                },
                "param_1 + 0x13c": {
                    "1": "parameter_e",
                    "2": "value5_address"
                },
                "param_1 + 0x13e": {
                    "1": "ptr_to_value4",
                    "2": "value6_address"
                },
                "param_1 + 0x51": {
                    "1": "data_structure.final_offset"
                },
                "param_2": {
                    "1": "new_parameter2"
                },
                "param_3": {
                    "1": "new_parameter3"
                },
                "param_4": {
                    "1": "new_parameter4"
                },
                "param_5": {
                    "1": "new_parameter5"
                },
                "var1": {
                    "1": "start_offset"
                },
                "var2": {
                    "1": "null_value1"
                },
                "var3": {
                    "1": "null_value2"
                },
                "var4": {
                    "1": "pointer_offset"
                },
                "var5": {
                    "1": "null_value3"
                },
                "var6": {
                    "1": "null_value4"
                },
                "var_1": {
                    "1": "offset1"
                },
                "var_2": {
                    "1": "offset2"
                },
                "var_3": {
                    "1": "offset3"
                },
                "var_4": {
                    "1": "offset4"
                },
                "var_5": {
                    "1": "offset5"
                }
            },
            "called": [],
            "calling": [
                "FUN_08008d30"
            ],
            "code": "\nvoid initialize_data_08008c20(int base_address)\n\n{\n  *(int *)(base_address + 0x130) = base_address + 0x11;\n  *(undefined2 *)(base_address + 0x134) = 0;\n  *(undefined2 *)(base_address + 0x136) = 0;\n  *(int *)(base_address + 0x138) = base_address + 0x51;\n  *(undefined2 *)(base_address + 0x13c) = 0;\n  *(undefined2 *)(base_address + 0x13e) = 0;\n  return;\n}\n\n",
            "current_name": "initialize_data_08008c20",
            "entrypoint": "0x08008c20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008c20": "initialize_data_08008c20",
                "param_1": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008c44": {
            "additional_data": {
                "FUN_08008078": {
                    "1": "configure_port",
                    "2": "initialize_serial_port",
                    "3": "initialize_buffer"
                },
                "FUN_0800863c": {
                    "1": "set_serial_mode",
                    "2": "log_error_message"
                },
                "FUN_08008c44": {
                    "1": "set_serial_options",
                    "3": "initialize_serial",
                    "4": "initialize_serial_communication",
                    "5": "initialize_hardware_serial",
                    "8": "initialize_serial_port"
                },
                "FUN_080090cc": {
                    "1": "print_error",
                    "2": "check_file_path"
                },
                "UNRECOVERED_JUMPTABLE": {
                    "1": "jumptable",
                    "14": "jump_table",
                    "2": "function_ptr",
                    "3": "jump_table_address"
                },
                "bVar1": {
                    "1": "bit_mask",
                    "2": "serial_config_bits",
                    "5": "config_bits",
                    "7": "config_mask"
                },
                "extraout_r1": {
                    "1": "bit_mask",
                    "2": "extra_output",
                    "4": "error_code"
                },
                "iVar2": {
                    "1": "config_index",
                    "14": "config_value",
                    "2": "config_option"
                },
                "param_1": {
                    "1": "serial_device",
                    "3": "serial_object",
                    "5": "port_address",
                    "6": "serial_port_address",
                    "9": "serial_port"
                },
                "param_2": {
                    "1": "config_param",
                    "28": "baud_rate"
                },
                "param_3": {
                    "1": "serial_settings",
                    "10": "serial_config",
                    "2": "configuration",
                    "5": "config_byte",
                    "6": "config"
                },
                "uRam0000012d": {
                    "1": "ram_value"
                }
            },
            "called": [
                "FUN_08008078",
                "FUN_080090cc",
                "FUN_0800863c"
            ],
            "calling": [
                "FUN_08003048"
            ],
            "code": "\nvoid initialize_serial_port_08008c44(int serial_port,undefined4 baud_rate,byte serial_config)\n\n{\n  uint error_code;\n  byte config_mask;\n  int config_value;\n  code *jump_table;\n  \n  *(undefined4 *)(serial_port + 0x11c) = baud_rate;\n  *(byte *)(serial_port + 0x140) = serial_config;\n  config_mask = serial_config & 7;\n  if (config_mask == 4) {\n    config_value = 7;\n  }\n  else if (config_mask == 6) {\n    config_value = 8;\n  }\n  else if (config_mask == 2) {\n    config_value = 6;\n  }\n  else {\n    config_value = 0;\n  }\n  if ((serial_config & 0x30) == 0x30) {\n    *(undefined4 *)(serial_port + 0x128) = 0x600;\n    config_value = config_value + 1;\n  }\n  else if ((serial_config & 0x20) == 0) {\n    *(undefined4 *)(serial_port + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serial_port + 0x128) = 0x400;\n    config_value = config_value + 1;\n  }\n  if ((serial_config & 8) == 0) {\n    *(undefined4 *)(serial_port + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serial_port + 0x124) = 0x2000;\n  }\n  if (config_value == 8) {\n    *(undefined4 *)(serial_port + 0x120) = 0;\n  }\n  else if (config_value == 9) {\n    *(undefined4 *)(serial_port + 0x120) = 0x1000;\n  }\n  else {\n    config_value = 0;\n  }\n  if (config_value != 0) {\n    FUN_08008078(serial_port + 0xd4);\n    FUN_0800863c(serial_port + 0xd4,0x8008b67);\n    return;\n  }\n  jump_table = (code *)0x8008cee;\n  FUN_080090cc(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  if (error_code < 0x3c) {\n    ram_value = (&DAT_0800a908)[error_code];\n  }\n  else {\n    ram_value = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)(0,error_code,&stack0x00000148);\n  return;\n}\n\n",
            "current_name": "initialize_serial_port_08008c44",
            "entrypoint": "0x08008c44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008c44": "initialize_serial_port_08008c44",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "bVar1": "config_mask",
                "extraout_r1": "error_code",
                "iVar2": "config_value",
                "param_1": "serial_port",
                "param_2": "baud_rate",
                "param_3": "serial_config",
                "uRam0000012d": "ram_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008d00": {
            "additional_data": {
                "FUN_08008d00": {
                    "1": "set_value_in_memory",
                    "2": "update_parameter_value",
                    "5": "set_byte_value"
                },
                "UNRECOVERED_JUMPTABLE": {
                    "12": "jump_table",
                    "2": "jump_table_function"
                },
                "param_1": {
                    "1": "buffer_address",
                    "2": "memory_location",
                    "8": "memory_address"
                },
                "param_2": {
                    "1": "status",
                    "10": "index",
                    "2": "byte_value",
                    "4": "value_index",
                    "9": "value"
                },
                "uVar1": {
                    "1": "flag_value",
                    "2": "result",
                    "3": "new_value",
                    "4": "byte_value",
                    "6": "value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08008d30"
            ],
            "code": "\nvoid set_byte_value_08008d00(int memory_address,uint index)\n\n{\n  undefined value;\n  code *jump_table;\n  \n  if (index < 0x3c) {\n    value = (&DAT_0800a908)[index];\n  }\n  else {\n    value = 0xff;\n  }\n  *(undefined *)(memory_address + 0x12d) = value;\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "set_byte_value_08008d00",
            "entrypoint": "0x08008d00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008d00": "set_byte_value_08008d00",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "param_1": "memory_address",
                "param_2": "index",
                "uVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008d18": {
            "additional_data": {
                "FUN_08008d18": {
                    "1": "set_byte_based_on_index",
                    "6": "set_memory_value",
                    "8": "set_byte_value",
                    "9": "set_byte_at_offset"
                },
                "param_1": {
                    "1": "memory_location",
                    "14": "base_address",
                    "6": "memory_address",
                    "8": "address"
                },
                "param_2": {
                    "1": "source_index",
                    "22": "index",
                    "8": "offset"
                },
                "uVar1": {
                    "1": "data_byte",
                    "18": "value",
                    "2": "new_value",
                    "6": "byte_value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08008d30"
            ],
            "code": "\nvoid set_byte_at_offset_08008d18(int base_address,uint index)\n\n{\n  undefined value;\n  \n  if (index < 0x3c) {\n    value = (&DAT_0800a908)[index];\n  }\n  else {\n    value = 0xff;\n  }\n  *(undefined *)(base_address + 300) = value;\n  return;\n}\n\n",
            "current_name": "set_byte_at_offset_08008d18",
            "entrypoint": "0x08008d18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008d18": "set_byte_at_offset_08008d18",
                "param_1": "base_address",
                "param_2": "index",
                "uVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008d30": {
            "additional_data": {
                "*(undefined *)((int)param_1 + 0x12d)": {
                    "1": "flag_value"
                },
                "*(undefined *)(param_1 + 0x4b)": {
                    "1": "param_value"
                },
                "FUN_0800734a": {
                    "1": "get_result",
                    "3": "get_byte",
                    "4": "get_byte_value",
                    "6": "get_character",
                    "8": "get_value"
                },
                "FUN_08008c20": {
                    "1": "update_data",
                    "2": "finalize_initialization",
                    "3": "finalize_parameters",
                    "4": "finalize_params",
                    "6": "process_data"
                },
                "FUN_08008d00": {
                    "1": "update_values",
                    "3": "perform_action2",
                    "4": "do_something",
                    "7": "process_data"
                },
                "FUN_08008d18": {
                    "1": "perform_action_b",
                    "11": "set_flag",
                    "3": "perform_action1"
                },
                "FUN_08008d30": {
                    "1": "setup_function",
                    "10": "initialize_data",
                    "3": "initialize_function",
                    "6": "initialize_params",
                    "9": "initialize_parameters"
                },
                "param_1": {
                    "1": "output",
                    "2": "param_array",
                    "3": "params",
                    "6": "data",
                    "9": "parameters"
                },
                "param_2": {
                    "1": "param_value1",
                    "10": "value1",
                    "2": "param",
                    "9": "value"
                },
                "param_3": {
                    "1": "param_a",
                    "10": "value2",
                    "2": "param",
                    "3": "param3"
                },
                "param_4": {
                    "1": "value2",
                    "10": "value3",
                    "2": "arg",
                    "3": "value"
                },
                "uVar1": {
                    "1": "byte",
                    "13": "result",
                    "2": "byte_value",
                    "3": "character"
                }
            },
            "called": [
                "FUN_08008d18",
                "FUN_08008d00",
                "FUN_08008c20",
                "FUN_0800734a"
            ],
            "calling": [
                "FUN_08008d8c"
            ],
            "code": "\nundefined4 *\ninitialize_data_08008d30(undefined4 *parameters,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  undefined result;\n  \n  parameters[1] = 0;\n  parameters[2] = 1000;\n  *parameters = &PTR_LAB_08008ba4_1_0800aab8;\n  if (parameters == (undefined4 *)&DAT_20000700) {\n    FUN_08008d00(&DAT_20000700,0,value2,&DAT_20000700,value3);\n    FUN_08008d18(&DAT_20000700,1);\n  }\n  else {\n    result = FUN_0800734a(value1,&DAT_0800a81c);\n    *(undefined *)((int)parameters + 0x12d) = result;\n    result = FUN_0800734a(value1,&DAT_0800a864);\n    *(undefined *)(parameters + 0x4b) = result;\n  }\n  FUN_08008c20(parameters);\n  return parameters;\n}\n\n",
            "current_name": "initialize_data_08008d30",
            "entrypoint": "0x08008d30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008d30": "initialize_data_08008d30",
                "param_1": "parameters",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008d8c": {
            "additional_data": {
                "*param_1": {
                    "1": "data_pointer"
                },
                "DAT_20000700": {
                    "1": "data_array"
                },
                "FUN_08008d30": {
                    "1": "execute_operation",
                    "2": "initialize_data",
                    "3": "call_sub_function",
                    "9": "process_data"
                },
                "FUN_08008d8c": {
                    "1": "check_and_call_subfunction",
                    "2": "check_params",
                    "3": "process_parameters",
                    "8": "check_and_call_function"
                },
                "PTR_40004400": {
                    "1": "pointer"
                },
                "param_1": {
                    "1": "param_value_1",
                    "3": "condition",
                    "4": "value1",
                    "5": "flag",
                    "9": "status"
                },
                "param_2": {
                    "1": "condition_2",
                    "17": "value",
                    "3": "value2"
                },
                "param_3": {
                    "1": "buffer",
                    "11": "arg1",
                    "2": "value3",
                    "3": "data_1"
                },
                "param_4": {
                    "1": "param_four",
                    "11": "arg2",
                    "2": "argument_2",
                    "3": "value4"
                }
            },
            "called": [
                "FUN_08008d30"
            ],
            "calling": [],
            "code": "\nvoid check_and_call_function_08008d8c(int status,int value,undefined4 arg1,undefined4 arg2)\n\n{\n  if (status != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_08008d30(&DAT_20000700,0x40004400,arg1,0xffff,arg2);\n  }\n  return;\n}\n\n",
            "current_name": "check_and_call_function_08008d8c",
            "entrypoint": "0x08008d8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008d8c": "check_and_call_function_08008d8c",
                "param_1": "status",
                "param_2": "value",
                "param_3": "arg1",
                "param_4": "arg2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008df8": {
            "additional_data": {
                "FUN_08008df8": {
                    "1": "initialize_function",
                    "2": "set_data",
                    "24": "initialize_data"
                },
                "param_1": {
                    "1": "result",
                    "10": "data_pointer",
                    "2": "param_array",
                    "5": "data_ptr"
                },
                "param_2": {
                    "1": "value2",
                    "22": "value1",
                    "3": "param2",
                    "4": "value_1"
                },
                "param_3": {
                    "1": "value3",
                    "22": "value2",
                    "3": "param3",
                    "4": "value_2"
                },
                "param_4": {
                    "1": "value4",
                    "22": "value3",
                    "3": "param4",
                    "4": "value_3"
                },
                "param_5": {
                    "1": "parameter5",
                    "22": "value4",
                    "3": "param5",
                    "4": "value_4"
                }
            },
            "called": [],
            "calling": [
                "FUN_08008e14"
            ],
            "code": "\nvoid initialize_data_08008df8(undefined4 *data_pointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *data_pointer = &DAT_0800ab0c;\n  *(undefined *)(data_pointer + 1) = value1;\n  *(undefined *)((int)data_pointer + 5) = value2;\n  *(undefined *)((int)data_pointer + 6) = value3;\n  *(undefined *)((int)data_pointer + 7) = value4;\n  return;\n}\n\n",
            "current_name": "initialize_data_08008df8",
            "entrypoint": "0x08008df8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008df8": "initialize_data_08008df8",
                "param_1": "data_pointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008e14": {
            "additional_data": {
                "FUN_08008df8": {
                    "1": "process_data"
                },
                "FUN_08008e14": {
                    "1": "handle_params",
                    "2": "check_params_and_call_function",
                    "3": "check_parameters",
                    "6": "check_params",
                    "7": "process_parameters"
                },
                "param_1": {
                    "1": "case_code",
                    "12": "value1",
                    "2": "input1",
                    "3": "first_param"
                },
                "param_2": {
                    "1": "flag2",
                    "12": "value2",
                    "2": "input_2",
                    "3": "second_param"
                }
            },
            "called": [
                "FUN_08008df8"
            ],
            "calling": [],
            "code": "\nvoid process_parameters_08008e14(int value1,int value2)\n\n{\n  if ((value1 == 1) && (value2 == 0xffff)) {\n    FUN_08008df8(&DAT_20000844,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "process_parameters_08008e14",
            "entrypoint": "0x08008e14",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008e14": "process_parameters_08008e14",
                "param_1": "value1",
                "param_2": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008ef4": {
            "additional_data": {
                "FUN_08008ef4": {
                    "1": "calculate_range",
                    "2": "calculate_difference",
                    "3": "calculate_interpolation_value",
                    "4": "calculate_linear_interpolation",
                    "5": "calculate_interpolation",
                    "9": "calculate_new_value"
                },
                "endResult": {
                    "1": "end_result"
                },
                "endValue": {
                    "1": "end_value"
                },
                "param_1": {
                    "1": "previous_value",
                    "10": "start_value",
                    "2": "value1",
                    "3": "start_value_1"
                },
                "param_1 - param_2": {
                    "1": "start_value_difference"
                },
                "param_2": {
                    "1": "original_value_2",
                    "2": "value2",
                    "3": "value_2"
                },
                "param_3": {
                    "1": "original_value_3",
                    "2": "end_range",
                    "3": "value_3",
                    "4": "end_value"
                },
                "param_3 - param_2": {
                    "1": "x3_minus_x2"
                },
                "param_4": {
                    "1": "old_value4",
                    "2": "start_value",
                    "6": "start_result"
                },
                "param_5": {
                    "1": "original_value_5",
                    "2": "end_value",
                    "6": "end_result"
                },
                "param_5 - param_4": {
                    "1": "result_difference"
                },
                "result": {
                    "1": "calculated_value"
                },
                "return": {
                    "1": "result"
                },
                "startResult": {
                    "1": "start_result"
                },
                "startValue1": {
                    "1": "start_value1"
                },
                "startValue2": {
                    "1": "start_value2"
                }
            },
            "called": [],
            "calling": [
                "FUN_080026b0"
            ],
            "code": "\nint calculate_new_value_08008ef4(int start_value,int x2,int end_value,int start_result,int end_result)\n\n{\n  result (uint)((end_result - start_result) * (start_value - x2)) / (uint)(end_value - x2) + start_result;\n}\n\n",
            "current_name": "calculate_new_value_08008ef4",
            "entrypoint": "0x08008ef4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008ef4": "calculate_new_value_08008ef4",
                "param_1": "start_value",
                "param_2": "x2",
                "param_3": "end_value",
                "param_4": "start_result",
                "param_5": "end_result",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008f0c": {
            "called": [],
            "calling": [
                "FUN_08008f1c"
            ],
            "code": "\nvoid FUNC_08008f0c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08008f0c",
            "entrypoint": "0x08008f0c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08008f0c": "FUNC_08008f0c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08008f0e": {
            "additional_data": {
                "DAT_": {
                    "1": "<unchanged>"
                },
                "FUN_080036a2": {
                    "1": "verify_connection",
                    "2": "perform_additional_tasks",
                    "5": "perform_action",
                    "7": "perform_task"
                },
                "FUN_08003f0c": {
                    "1": "execute_function_2",
                    "2": "set_system_mode",
                    "6": "set_mode",
                    "8": "set_configuration"
                },
                "FUN_08008f0e": {
                    "1": "initialize_program",
                    "16": "initialize_system",
                    "3": "initialize_components",
                    "4": "execute_initialization"
                },
                "PTR_": {
                    "1": "<unchanged>"
                },
                "param_1": {
                    "1": "configuration",
                    "2": "config_param",
                    "4": "mode"
                }
            },
            "called": [
                "FUN_080036a2",
                "FUN_08003f0c"
            ],
            "calling": [
                "FUN_08009148"
            ],
            "code": "\nvoid initialize_system_08008f0e(void)\n\n{\n  FUN_08003f0c(3);\n  FUN_080036a2();\n  return;\n}\n\n",
            "current_name": "initialize_system_08008f0e",
            "entrypoint": "0x08008f0e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008f0e": "initialize_system_08008f0e"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008f1c": {
            "additional_data": {
                "FUNC_08008bf4": {
                    "1": "execute_system_commands",
                    "2": "cleanup_resources",
                    "3": "perform_action",
                    "5": "cleanup",
                    "6": "process_data"
                },
                "FUNC_08008f0c": {
                    "1": "initialize_components",
                    "14": "initialize",
                    "2": "initialize_resources",
                    "8": "initialize_system"
                },
                "FUN_08001b48": {
                    "1": "perform_task_c",
                    "2": "cleanup",
                    "3": "perform_initialization",
                    "5": "setup_environment"
                },
                "FUN_080022f8": {
                    "1": "perform_task_a",
                    "2": "process_data",
                    "3": "perform_operation",
                    "5": "perform_task",
                    "6": "perform_action"
                },
                "FUN_08008f0c": {
                    "1": "initialize_data"
                },
                "FUN_08008f1c": {
                    "1": "execute_continuous_operations",
                    "2": "execute_functions_in_loop",
                    "3": "execute_loop",
                    "4": "execute_infinite_loop",
                    "7": "run_infinite_loop"
                }
            },
            "called": [
                "FUN_080022f8",
                "FUN_08008f0c",
                "FUN_08008bf4",
                "FUN_08001b48"
            ],
            "calling": [
                "entry"
            ],
            "code": "\nvoid run_infinite_loop_08008f1c(void)\n\n{\n  FUNC_08008f0c();\n  FUN_08001b48();\n  do {\n    FUN_080022f8();\n    FUNC_08008bf4();\n  } while( true );\n}\n\n",
            "current_name": "run_infinite_loop_08008f1c",
            "entrypoint": "0x08008f1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008f1c": "run_infinite_loop_08008f1c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008f3c": {
            "additional_data": {
                "FUN_08008f3c": {
                    "1": "count_binary_bits",
                    "2": "count_bits_set",
                    "20": "count_set_bits",
                    "8": "count_bits"
                },
                "cVar1": {
                    "1": "bits_set",
                    "2": "count",
                    "27": "bit_count"
                },
                "param_1": {
                    "1": "input",
                    "11": "number",
                    "15": "num",
                    "2": "input_number"
                }
            },
            "called": [],
            "calling": [
                "FUN_08009094"
            ],
            "code": "\nchar count_set_bits_08008f3c(uint num)\n\n{\n  char bit_count;\n  \n  bit_count = '\\0';\n  for (; num != 1; num = num >> 1) {\n    bit_count = bit_count + '\\x01';\n  }\n  return bit_count;\n}\n\n",
            "current_name": "count_set_bits_08008f3c",
            "entrypoint": "0x08008f3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008f3c": "count_set_bits_08008f3c",
                "cVar1": "bit_count",
                "param_1": "num"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008f78": {
            "additional_data": {
                "&LAB_08008f50_1": {
                    "1": "destination"
                },
                "FUN_08008f78": {
                    "1": "initialize_config",
                    "11": "initialize_parameters",
                    "14": "initialize_data",
                    "2": "initialize_settings"
                },
                "FUN_080090c2": {
                    "1": "function_call",
                    "2": "perform_initialization",
                    "3": "call_sub_function",
                    "4": "perform_operation"
                },
                "LAB_08008f50_1": {
                    "1": "label1"
                },
                "flagParameter": {
                    "1": "flag"
                },
                "inputParameter": {
                    "1": "param"
                },
                "param_1": {
                    "1": "check_condition",
                    "2": "param1",
                    "4": "status",
                    "6": "flag",
                    "7": "condition"
                },
                "param_2": {
                    "1": "parameter_flag",
                    "17": "value",
                    "2": "param2",
                    "3": "input_value"
                },
                "param_3": {
                    "1": "param_3",
                    "2": "unused_parameter",
                    "3": "param3",
                    "5": "unused_param",
                    "7": "unused_param1"
                },
                "param_4": {
                    "1": "input_param",
                    "2": "unused_param4",
                    "3": "unused2",
                    "4": "param_4",
                    "7": "unused_param2"
                },
                "subFunction": {
                    "1": "initialize_values"
                }
            },
            "called": [
                "FUN_080090c2"
            ],
            "calling": [],
            "code": "\nvoid initialize_data_08008f78(int condition,int value,undefined4 unused_param1,undefined4 unused_param2)\n\n{\n  if (condition != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_2000084c = 6;\n    DAT_20000858 = 0;\n    DAT_20000860 = 7;\n    DAT_2000086c = 0;\n    DAT_20000874 = 8;\n    DAT_20000880 = 0;\n    DAT_20000888 = 9;\n    DAT_20000894 = 0;\n    DAT_2000089c = 10;\n    DAT_200008a8 = 0;\n    DAT_200008b0 = 0x17;\n    DAT_200008bc = 0;\n    DAT_200008c4 = 0x17;\n    DAT_200008d0 = 0;\n    DAT_200008d8 = 0x17;\n    DAT_200008e4 = 0;\n    DAT_200008ec = 0x17;\n    DAT_200008f8 = 0;\n    DAT_20000900 = 0x17;\n    DAT_2000090c = 0;\n    DAT_20000914 = 0x28;\n    DAT_20000920 = 0;\n    DAT_20000928 = 0x28;\n    DAT_20000934 = 0;\n    DAT_2000093c = 0x28;\n    DAT_20000948 = 0;\n    DAT_20000950 = 0x28;\n    DAT_2000095c = 0;\n    DAT_20000964 = 0x28;\n    DAT_20000970 = 0;\n    DAT_20000978 = 0x28;\n    DAT_20000984 = 0;\n    FUN_080090c2(0,destination,&DAT_20000000,&DAT_2000084c,unused_param2);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_08008f78",
            "entrypoint": "0x08008f78",
            "imported": false,
            "improved": true,
            "renaming": {
                "&LAB_08008f50_1": "destination",
                "FUN_08008f78": "initialize_data_08008f78",
                "LAB_08008f50_1": "label1",
                "param_1": "condition",
                "param_2": "value",
                "param_3": "unused_param1",
                "param_4": "unused_param2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009084": {
            "additional_data": {
                "&DAT_20000858": {
                    "1": "data_array"
                },
                "DAT_20000858": {
                    "1": "data_array"
                },
                "FUN_08008f3c": {
                    "1": "calculate_index",
                    "3": "get_index"
                },
                "FUN_08009084": {
                    "1": "execute_operation",
                    "13": "execute_function",
                    "2": "execute_logic",
                    "4": "process_data"
                },
                "FUN_0800a18c": {
                    "1": "initialize_environment",
                    "2": "do_something",
                    "4": "perform_initialization",
                    "5": "initialize_data"
                },
                "F_UN08009084": {
                    "1": "process_data"
                },
                "PTR_": {
                    "1": "unchanged"
                },
                "iVar1": {
                    "1": "result_var1",
                    "2": "result_index",
                    "25": "index"
                },
                "param_1": {
                    "1": "param",
                    "2": "input_value",
                    "3": "function_pointer",
                    "4": "input_param"
                }
            },
            "called": [
                "FUN_0800a18c"
            ],
            "calling": [
                "FUN_08009094"
            ],
            "code": "\nvoid execute_function_08009084(int data)\n\n{\n  int index;\n  \n  if (*(int *)(data + 8) != 0) {\n    (**(code **)(data + 0xc))();\n    return;\n  }\n  FUN_0800a18c();\n  index = FUN_08008f3c();\n  if ((&DAT_20000858)[index * 5] != 0) {\n    execute_function_08009084();\n  }\n  return;\n}\n\n",
            "current_name": "execute_function_08009084",
            "entrypoint": "0x08009084",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009084": "execute_function_08009084",
                "iVar1": "index",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009094": {
            "additional_data": {
                "&DAT_20000858": {
                    "1": "array"
                },
                "FUN_08008f3c": {
                    "1": "get_index_of_non_zero_value",
                    "2": "get_param_value",
                    "3": "get_function_index",
                    "4": "get_return_value",
                    "7": "get_array_index"
                },
                "FUN_08009084": {
                    "1": "execute_operation",
                    "14": "execute_function",
                    "2": "execute_action",
                    "5": "perform_action"
                },
                "FUN_08009094": {
                    "1": "check_and_execute_if_valid",
                    "11": "check_and_execute_function",
                    "2": "check_and_execute",
                    "3": "check_and_invoke_function",
                    "9": "check_and_call_function"
                },
                "iVar1": {
                    "1": "data_type_index",
                    "2": "return_value",
                    "3": "index",
                    "8": "result"
                },
                "param_1": {
                    "1": "index",
                    "2": "input"
                }
            },
            "called": [
                "FUN_08008f3c",
                "FUN_08009084"
            ],
            "calling": [
                "FUN_080042f0"
            ],
            "code": "\nvoid check_and_execute_function_08009094(void)\n\n{\n  int result;\n  \n  result = FUN_08008f3c();\n  if ((&DAT_20000858)[result * 5] != 0) {\n    FUN_08009084();\n  }\n  return;\n}\n\n",
            "current_name": "check_and_execute_function_08009094",
            "entrypoint": "0x08009094",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009094": "check_and_execute_function_08009094",
                "iVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080090c2": {
            "additional_data": {
                "FUN_080090c2": {
                    "1": "execute_param1_before_param2",
                    "19": "execute_function",
                    "2": "call_sub_function"
                },
                "FUN_08009108": {
                    "1": "reverse_data",
                    "2": "calculate_value",
                    "3": "perform_operation",
                    "5": "process_data",
                    "6": "calculate_result"
                },
                "param_1": {
                    "1": "value2",
                    "2": "argument1",
                    "3": "input_param",
                    "6": "param1",
                    "8": "arg1"
                },
                "param_2": {
                    "1": "second_param",
                    "2": "output_parameter",
                    "3": "output_param",
                    "6": "param2",
                    "8": "arg2"
                }
            },
            "called": [
                "FUN_08009108"
            ],
            "calling": [
                "FUN_08008f78"
            ],
            "code": "\nvoid execute_function_080090c2(undefined4 arg1,undefined4 arg2)\n\n{\n  FUN_08009108(arg2,arg1);\n  return;\n}\n\n",
            "current_name": "execute_function_080090c2",
            "entrypoint": "0x080090c2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080090c2": "execute_function_080090c2",
                "param_1": "arg1",
                "param_2": "arg2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080090cc": {
            "additional_data": {
                "FUN_080090cc": {
                    "1": "check_assertion_failed",
                    "13": "assertion_failed",
                    "2": "check_assertion",
                    "3": "process_assertion",
                    "4": "assertion_failed_message"
                },
                "FUN_08009124": {
                    "1": "print_assertion_failed_message",
                    "5": "print_error_message"
                },
                "FUN_08009b5c": {
                    "1": "get_return_value",
                    "5": "get_current_time"
                },
                "param_1": {
                    "1": "assertion_name",
                    "14": "file",
                    "2": "message",
                    "4": "assertion",
                    "9": "file_name"
                },
                "param_2": {
                    "1": "file_path",
                    "11": "line_number",
                    "12": "line",
                    "2": "file_name",
                    "4": "file"
                },
                "param_3": {
                    "1": "failed_assertion",
                    "2": "condition",
                    "4": "assertion",
                    "7": "assertion_message",
                    "9": "message"
                },
                "param_4": {
                    "1": "additional_info",
                    "15": "function",
                    "2": "assertion_message",
                    "3": "line_number",
                    "8": "function_name"
                },
                "pcVar2": {
                    "1": "delta",
                    "2": "prefix",
                    "3": "delimiter",
                    "4": "additional_message",
                    "7": "additional_info"
                },
                "uVar1": {
                    "1": "assert_msg_ptr",
                    "2": "assertion_ptr"
                },
                "uVar3": {
                    "21": "result",
                    "8": "return_value"
                },
                "uVar4": {
                    "1": "message_ptr",
                    "2": "function_ptr"
                }
            },
            "called": [
                "FUN_08009b5c",
                "FUN_08009124"
            ],
            "calling": [
                "FUN_08008c44"
            ],
            "code": "\nvoid assertion_failed_080090cc(undefined4 file,undefined4 line,char *message,undefined4 function)\n\n{\n  undefined4 assertion;\n  char *additional_info;\n  undefined8 result;\n  undefined4 assertion_message_copy;\n  \n  assertion = *(undefined4 *)(DAT_20000090 + 0xc);\n  assertion_message_copy = function;\n  if (message == (char *)0x0) goto LAB_080090f0;\n  additional_info = \", function: \";\n  do {\n    FUN_08009124(assertion,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,file,line\n                 ,additional_info,message,assertion_message_copy);\n    result = FUN_08009b5c();\n    line = (undefined4)((ulonglong)result >> 0x20);\n    assertion = (undefined4)result;\nLAB_080090f0:\n    message = \"\";\n    additional_info = message;\n  } while( true );\n}\n\n",
            "current_name": "assertion_failed_080090cc",
            "entrypoint": "0x080090cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080090cc": "assertion_failed_080090cc",
                "param_1": "file",
                "param_2": "line",
                "param_3": "message",
                "param_4": "function",
                "pcVar2": "additional_info",
                "uVar1": "assertion",
                "uVar3": "result",
                "uVar4": "assertion_message_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009108": {
            "additional_data": {
                "FUN_08009108": {
                    "1": "left_shift_param2_by32_bits",
                    "2": "left_shift_64_bits",
                    "4": "shift_left64_bits"
                },
                "param_1": {
                    "1": "numeric_data",
                    "2": "input1",
                    "3": "input",
                    "4": "param"
                },
                "param_2": {
                    "1": "input_param",
                    "11": "value",
                    "2": "input_value",
                    "3": "param2"
                },
                "param_3": {
                    "1": "new_value"
                },
                "param_4": {
                    "1": "mask"
                },
                "ulonglong": {
                    "1": "expanded_value",
                    "2": "unsigned_long_long"
                }
            },
            "called": [],
            "calling": [
                "FUN_080090c2"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009110) */\n\nlonglong left_shift_by32_bits_08009108(undefined4 param,uint value)\n\n{\n  return (unsigned_long_long)value << 0x20;\n}\n\n",
            "current_name": "left_shift_by32_bits_08009108",
            "entrypoint": "0x08009108",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009108": "left_shift_by32_bits_08009108",
                "param_1": "param",
                "param_2": "value",
                "ulonglong": "unsigned_long_long"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009124": {
            "additional_data": {
                "FUN_08009124": {
                    "1": "extract_params_and_call",
                    "10": "process_data",
                    "2": "extract_and_process_data"
                },
                "FUN_0800937c": {
                    "1": "subfunction"
                },
                "param_1": {
                    "1": "first_param",
                    "2": "input_param_1",
                    "8": "input_param1",
                    "9": "input1"
                },
                "param_2": {
                    "1": "data_pointer2",
                    "2": "input_param_2",
                    "8": "input_param2",
                    "9": "input2"
                },
                "param_3": {
                    "1": "input_val3",
                    "2": "buffer",
                    "3": "param3",
                    "4": "output_param1",
                    "5": "output1"
                },
                "param_4": {
                    "1": "data_param_4",
                    "2": "output_param",
                    "3": "param4",
                    "4": "output_param2",
                    "5": "output2"
                },
                "uStack_4": {
                    "1": "stack_var2",
                    "2": "temp_var2"
                },
                "uStack_8": {
                    "1": "stack_param_1",
                    "2": "output1_copy"
                }
            },
            "called": [
                "FUN_0800937c"
            ],
            "calling": [
                "FUN_080090cc"
            ],
            "code": "\nvoid process_data_08009124(undefined4 input1,undefined4 input2,undefined4 output1,undefined4 output2)\n\n{\n  undefined4 buffer;\n  undefined4 output;\n  \n  buffer = output1;\n  output = output2;\n  FUN_0800937c(DAT_20000090,input1,input2,&buffer,input1,&buffer);\n  return;\n}\n\n",
            "current_name": "process_data_08009124",
            "entrypoint": "0x08009124",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009124": "process_data_08009124",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "output1",
                "param_4": "output2",
                "uStack_4": "output",
                "uStack_8": "buffer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009148": {
            "additional_data": {
                "DAT_0800abe4": {
                    "1": "function_pointers"
                },
                "FUNC_0800a424": {
                    "1": "perform_initialization",
                    "2": "perform_cleanup"
                },
                "FUN_08008f0e": {
                    "1": "perform_operation",
                    "2": "reverse_data"
                },
                "FUN_08009148": {
                    "1": "process_functions",
                    "17": "execute_functions",
                    "3": "execute_all_functions",
                    "5": "execute_sub_functions"
                },
                "iVar1": {
                    "20": "index",
                    "7": "counter"
                }
            },
            "called": [
                "FUN_0800a424",
                "FUN_08008f0e"
            ],
            "calling": [
                "entry"
            ],
            "code": "\nvoid execute_functions_08009148(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  FUNC_0800a424();\n  for (index = 0; index != 0xc; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  return;\n}\n\n",
            "current_name": "execute_functions_08009148",
            "entrypoint": "0x08009148",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009148": "execute_functions_08009148",
                "iVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009190": {
            "additional_data": {
                "FUN_08009190": {
                    "1": "execute_data_processing",
                    "18": "initialize_data",
                    "2": "execute_function",
                    "3": "initialize_function"
                },
                "FUN_08009270": {
                    "1": "perform_operation",
                    "20": "process_data",
                    "4": "execute_sub_function"
                },
                "param_1": {
                    "1": "input_param",
                    "19": "data",
                    "2": "input",
                    "3": "param"
                },
                "param_2": {
                    "1": "sub_func_param",
                    "3": "count",
                    "5": "size",
                    "8": "length"
                }
            },
            "called": [
                "FUN_08009270"
            ],
            "calling": [
                "FUN_08002e44"
            ],
            "code": "\nvoid initialize_data_08009190(undefined4 data)\n\n{\n  FUN_08009270(DAT_20000090,data);\n  return;\n}\n\n",
            "current_name": "initialize_data_08009190",
            "entrypoint": "0x08009190",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009190": "initialize_data_08009190",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080091a0": {
            "additional_data": {
                "FUN_080091a0": {
                    "1": "extract_and_process_data",
                    "17": "initialize_data",
                    "2": "initialize_function",
                    "6": "execute_function"
                },
                "FUN_080091d8": {
                    "1": "perform_operation",
                    "13": "copy_data",
                    "2": "process_data",
                    "3": "call_sub_function"
                },
                "int param_2": {
                    "1": "size"
                },
                "param_1": {
                    "1": "param",
                    "15": "data",
                    "2": "data_ptr"
                },
                "param_2": {
                    "1": "length",
                    "3": "size"
                },
                "param_3": {
                    "1": "src",
                    "2": "param3"
                },
                "param_4": {
                    "1": "value2",
                    "2": "length"
                },
                "undefined4 *param_1": {
                    "1": "data_array"
                },
                "undefined4 param_1": {
                    "1": "data"
                },
                "undefined4 param_3": {
                    "1": "source"
                },
                "undefined4 param_4": {
                    "1": "param_4"
                }
            },
            "called": [
                "FUN_080091d8"
            ],
            "calling": [
                "FUN_08002e44"
            ],
            "code": "\nvoid initialize_data_080091a0(undefined4 data)\n\n{\n  FUN_080091d8(DAT_20000090,data);\n  return;\n}\n\n",
            "current_name": "initialize_data_080091a0",
            "entrypoint": "0x080091a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080091a0": "initialize_data_080091a0",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080091b0": {
            "additional_data": {
                "FUN_080091b0": {
                    "1": "copy_destination_to_source",
                    "11": "copy_data",
                    "2": "copy_and_shift",
                    "3": "copy_memory",
                    "4": "copy_array"
                },
                "param_1": {
                    "1": "dest_start",
                    "2": "destination_index",
                    "3": "buffer_start_index",
                    "6": "start_index"
                },
                "param_2": {
                    "1": "src_offset",
                    "2": "data_source",
                    "5": "source",
                    "6": "source_data",
                    "7": "source_array"
                },
                "param_3": {
                    "1": "num_elements",
                    "3": "size",
                    "6": "length",
                    "8": "data_length"
                },
                "puVar1": {
                    "1": "ptr_end_buffer",
                    "2": "destination_pointer",
                    "3": "destination_end",
                    "5": "dest_end",
                    "7": "source_end"
                },
                "puVar2": {
                    "1": "dst_index",
                    "2": "dest_end",
                    "4": "destination_end"
                }
            },
            "called": [],
            "calling": [
                "FUN_080027f0",
                "FUN_08009908"
            ],
            "code": "\nvoid copy_data_080091b0(int start_index,undefined *source_array,int data_length)\n\n{\n  undefined *source_end;\n  undefined *destination_end;\n  \n  destination_end = (undefined *)(start_index + -1);\n  source_end = source_array + data_length;\n  for (; source_array != source_end; source_array = source_array + 1) {\n    destination_end = destination_end + 1;\n    *destination_end = *source_array;\n  }\n  return;\n}\n\n",
            "current_name": "copy_data_080091b0",
            "entrypoint": "0x080091b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080091b0": "copy_data_080091b0",
                "param_1": "start_index",
                "param_2": "source_array",
                "param_3": "data_length",
                "puVar1": "source_end",
                "puVar2": "destination_end"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080091c6": {
            "additional_data": {
                "FUN_080091c6": {
                    "1": "fill_memory_with_value",
                    "13": "fill_memory",
                    "2": "fill_with_value",
                    "3": "fill_memory_with_byte",
                    "5": "memset"
                },
                "param_1": {
                    "1": "memory_ptr",
                    "10": "destination",
                    "12": "memory",
                    "3": "array"
                },
                "param_2": {
                    "1": "byte_value",
                    "2": "initial_value",
                    "24": "value",
                    "3": "byte"
                },
                "param_3": {
                    "1": "block_size",
                    "11": "length",
                    "16": "size",
                    "2": "count"
                },
                "puVar1": {
                    "1": "end_position",
                    "10": "end_address",
                    "2": "end_pointer"
                }
            },
            "called": [],
            "calling": [
                "FUN_08002a58",
                "FUN_08009cdc",
                "FUN_08002968",
                "FUN_08007118",
                "FUN_08009db0",
                "FUN_08009d24",
                "FUN_08006d80"
            ],
            "code": "\nvoid fill_memory_080091c6(undefined *memory,undefined value,int size)\n\n{\n  undefined *end_address;\n  \n  end_address = memory + size;\n  for (; memory != end_address; memory = memory + 1) {\n    *memory = value;\n  }\n  return;\n}\n\n",
            "current_name": "fill_memory_080091c6",
            "entrypoint": "0x080091c6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080091c6": "fill_memory_080091c6",
                "param_1": "memory",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "end_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080091d8": {
            "additional_data": {
                "DAT_2000098c": {
                    "1": "ppi_var"
                },
                "FUNC_08009f48": {
                    "1": "perform_initialization"
                },
                "FUNC_08009f4a": {
                    "1": "finalize_function"
                },
                "FUN_080091d8": {
                    "1": "update_data",
                    "2": "rearrange_data",
                    "8": "process_data"
                },
                "extraout_r1": {
                    "1": "extra_output_pointer",
                    "11": "extra_output",
                    "2": "temp"
                },
                "param_1": {
                    "1": "param_list_ptr",
                    "2": "output_buffer",
                    "4": "output_array",
                    "6": "output",
                    "7": "result"
                },
                "param_2": {
                    "1": "input_number",
                    "12": "size",
                    "2": "input_length",
                    "3": "array_size",
                    "8": "input_size"
                },
                "param_3": {
                    "1": "input_value1",
                    "11": "param3",
                    "2": "param1",
                    "3": "arg3",
                    "8": "param_3"
                },
                "param_4": {
                    "1": "arg2",
                    "11": "param4",
                    "2": "param2",
                    "3": "arg4",
                    "8": "param_4"
                },
                "piVar3": {
                    "1": "temp_ptr_3",
                    "2": "temp3",
                    "3": "temp_pointer",
                    "4": "temp",
                    "5": "temp_var"
                },
                "ppiVar1": {
                    "1": "pointer_variable1",
                    "2": "temp1",
                    "3": "temp_var1",
                    "6": "temp_ptr1"
                },
                "ppiVar2": {
                    "1": "temp3",
                    "2": "temp2",
                    "3": "temp_var2",
                    "6": "temp_ptr2"
                },
                "ppiVar4": {
                    "1": "temp_ptr_4",
                    "2": "temp4",
                    "3": "temp_var4",
                    "4": "temp_ptr3"
                },
                "ppiVar5": {
                    "1": "entry",
                    "2": "temp_var5",
                    "4": "temp_ptr4"
                }
            },
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48"
            ],
            "calling": [
                "FUN_08009b5c",
                "FUN_08009908",
                "FUN_080091a0",
                "FUN_08009a80"
            ],
            "code": "\nvoid process_data_080091d8(undefined4 *result,int size,undefined4 param3,undefined4 param4)\n\n{\n  int **extra_output;\n  int **temp_ptr1;\n  int **temp_ptr2;\n  int *temp_var;\n  int **temp_ptr3;\n  int **temp_ptr4;\n  \n  if (size == 0) {\n    return;\n  }\n  temp_ptr4 = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    temp_ptr4 = (int **)((int)temp_ptr4 + *(int *)(size + -4));\n  }\n  FUNC_08009f48();\n  temp_ptr2 = (int **)&DAT_2000098c;\n  if (DAT_2000098c == (int **)0x0) {\n    temp_ptr4[1] = (int *)0x0;\n    temp_ptr1 = extra_output;\n    DAT_2000098c = temp_ptr4;\n  }\n  else {\n    temp_ptr2 = DAT_2000098c;\n    if (temp_ptr4 < DAT_2000098c) {\n      temp_ptr1 = (int **)*temp_ptr4;\n      temp_ptr2 = (int **)((int)temp_ptr4 + (int)temp_ptr1);\n      if (DAT_2000098c == temp_ptr2) {\n        temp_var = *DAT_2000098c;\n        DAT_2000098c = (int **)DAT_2000098c[1];\n        temp_ptr2 = (int **)((int)temp_var + (int)temp_ptr1);\n        *temp_ptr4 = (int *)temp_ptr2;\n      }\n      temp_ptr4[1] = (int *)DAT_2000098c;\n      DAT_2000098c = temp_ptr4;\n    }\n    else {\n      do {\n        temp_ptr3 = temp_ptr2;\n        temp_ptr2 = (int **)temp_ptr3[1];\n        if (temp_ptr2 == (int **)0x0) break;\n      } while (temp_ptr2 <= temp_ptr4);\n      temp_ptr1 = (int **)*temp_ptr3;\n      if ((int **)((int)temp_ptr3 + (int)temp_ptr1) == temp_ptr4) {\n        temp_ptr1 = (int **)((int)temp_ptr1 + (int)*temp_ptr4);\n        *temp_ptr3 = (int *)temp_ptr1;\n        if (temp_ptr2 == (int **)((int)temp_ptr3 + (int)temp_ptr1)) {\n          temp_var = *temp_ptr2;\n          temp_ptr2 = (int **)temp_ptr2[1];\n          temp_ptr1 = (int **)((int)temp_ptr1 + (int)temp_var);\n          *temp_ptr3 = (int *)temp_ptr1;\n          temp_ptr3[1] = (int *)temp_ptr2;\n        }\n      }\n      else if (temp_ptr4 < (int **)((int)temp_ptr3 + (int)temp_ptr1)) {\n        *result = 0xc;\n      }\n      else {\n        temp_ptr1 = (int **)((int)temp_ptr4 + (int)*temp_ptr4);\n        if (temp_ptr2 == temp_ptr1) {\n          temp_var = *temp_ptr2;\n          temp_ptr2 = (int **)temp_ptr2[1];\n          temp_ptr1 = (int **)((int)temp_var + (int)*temp_ptr4);\n          *temp_ptr4 = (int *)temp_ptr1;\n        }\n        temp_ptr4[1] = (int *)temp_ptr2;\n        temp_ptr3[1] = (int *)temp_ptr4;\n      }\n    }\n  }\n  FUNC_08009f4a(result,temp_ptr1,temp_ptr2,param4);\n  return;\n}\n\n",
            "current_name": "process_data_080091d8",
            "entrypoint": "0x080091d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080091d8": "process_data_080091d8",
                "extraout_r1": "extra_output",
                "param_1": "result",
                "param_2": "size",
                "param_3": "param3",
                "param_4": "param4",
                "piVar3": "temp_var",
                "ppiVar1": "temp_ptr1",
                "ppiVar2": "temp_ptr2",
                "ppiVar4": "temp_ptr3",
                "ppiVar5": "temp_ptr4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009270": {
            "additional_data": {
                "*param_1": {
                    "1": "error_code"
                },
                "DAT_2000098c": {
                    "1": "memory_pool",
                    "7": "first_block"
                },
                "DAT_20000990": {
                    "1": "initialized_memory",
                    "11": "initialized"
                },
                "FUNC_08009918": {
                    "1": "allocate_new_block"
                },
                "FUNC_08009f48": {
                    "1": "initialize_pool",
                    "10": "initialize_memory"
                },
                "FUNC_08009f4a": {
                    "1": "cleanup_pool",
                    "2": "cleanup"
                },
                "FUN_08009270": {
                    "1": "resize_array",
                    "15": "allocate_memory",
                    "9": "allocate_memory_block"
                },
                "FUN_08009918": {
                    "1": "initialize_param_1",
                    "2": "allocate_additional_memory",
                    "5": "find_free_block"
                },
                "FunkyFunction": {
                    "1": "reverse_allocate_memory"
                },
                "iVar2": {
                    "1": "temp_var",
                    "3": "remaining_size",
                    "4": "block_size",
                    "7": "difference"
                },
                "param_1": {
                    "1": "block_ptr",
                    "2": "output_buffer",
                    "3": "buffer",
                    "4": "result",
                    "5": "output_ptr"
                },
                "param_2": {
                    "1": "required_size",
                    "2": "block_size",
                    "22": "size",
                    "3": "requested_size"
                },
                "puVar1": {
                    "1": "chunk_ptr",
                    "2": "current_chunk",
                    "22": "current_block"
                },
                "puVar3": {
                    "1": "current_block_next",
                    "10": "next_block",
                    "9": "previous_block"
                },
                "puVar5": {
                    "1": "previous_chunk_ptr",
                    "10": "previous_block",
                    "2": "previous"
                },
                "uVar4": {
                    "1": "chunk_diff",
                    "2": "block_size_diff",
                    "3": "block_difference",
                    "5": "block_diff",
                    "7": "difference"
                },
                "uVar6": {
                    "1": "aligned_address",
                    "3": "new_block_size",
                    "8": "aligned_size",
                    "9": "allocated_size"
                }
            },
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48",
                "FUN_08009918"
            ],
            "calling": [
                "FUN_08009908",
                "FUN_08009eac",
                "FUN_08009190",
                "FUN_08009d24"
            ],
            "code": "\nuint allocate_memory_08009270(undefined4 *output_ptr,uint size)\n\n{\n  uint *current_block;\n  int offset;\n  uint *next_block;\n  uint difference;\n  uint *previous_block;\n  uint allocated_size;\n  \n  allocated_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < size)) {\n    *output_ptr = 0xc;\n  }\n  else {\n    FUNC_08009f48();\n    current_block = DAT_2000098c;\n    previous_block = DAT_2000098c;\n    while (next_block = current_block, next_block != (uint *)0x0) {\n      difference = *next_block - allocated_size;\n      if (-1 < (int)difference) {\n        if (difference < 0xc) {\n          if (previous_block == next_block) {\n            current_block = (uint *)previous_block[1];\n            DAT_2000098c = current_block;\n          }\n          else {\n            current_block = (uint *)next_block[1];\n          }\n          if (previous_block != next_block) {\n            previous_block[1] = (uint)current_block;\n            previous_block = next_block;\n          }\n        }\n        else {\n          *next_block = difference;\n          *(uint *)((int)next_block + difference) = allocated_size;\n          previous_block = (uint *)((int)next_block + difference);\n        }\n        goto LAB_080092d4;\n      }\n      previous_block = next_block;\n      current_block = (uint *)next_block[1];\n    }\n    if (DAT_20000990 == 0) {\n      DAT_20000990 = FUN_08009918(output_ptr);\n    }\n    current_block = (uint *)FUN_08009918(output_ptr,allocated_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((previous_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == previous_block ||\n        (offset = FUN_08009918(output_ptr,(int)previous_block - (int)current_block), offset != -1)))) {\n      *previous_block = allocated_size;\nLAB_080092d4:\n      FUNC_08009f4a(output_ptr);\n      allocated_size = (int)previous_block + 0xbU & 0xfffffff8;\n      offset = allocated_size - (int)(previous_block + 1);\n      if (offset != 0) {\n        *(int *)((int)previous_block + offset) = -offset;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *output_ptr = 0xc;\n    FUNC_08009f4a(output_ptr);\n  }\n  return 0;\n}\n\n",
            "current_name": "allocate_memory_08009270",
            "entrypoint": "0x08009270",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009270": "allocate_memory_08009270",
                "iVar2": "offset",
                "param_1": "output_ptr",
                "param_2": "size",
                "puVar1": "current_block",
                "puVar3": "next_block",
                "puVar5": "previous_block",
                "uVar4": "difference",
                "uVar6": "allocated_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800932c": {
            "additional_data": {
                "FUN_0800932c": {
                    "1": "decode_and_store_byte",
                    "15": "process_input",
                    "2": "decode_and_update",
                    "3": "process_byte"
                },
                "FUN_08009a80": {
                    "1": "function2",
                    "2": "check_condition",
                    "3": "process_data",
                    "4": "perform_operation"
                },
                "FUN_08009c7c": {
                    "1": "perform_operation",
                    "3": "check_condition"
                },
                "FUN_08009d50": {
                    "1": "cleanup",
                    "9": "handle_error"
                },
                "PTR_FUN_08009a80": {
                    "1": "process_data"
                },
                "PTR_FUN_08009c7c": {
                    "1": "validate_array"
                },
                "PTR_FUN_08009d50": {
                    "1": "cleanup"
                },
                "iVar1": {
                    "1": "index_variable_1",
                    "2": "temp_var_1",
                    "4": "index",
                    "5": "temp_var",
                    "9": "temp_var1"
                },
                "param_1": {
                    "1": "input_pointer",
                    "2": "input_ptr",
                    "4": "input_data",
                    "5": "input_param"
                },
                "param_2": {
                    "1": "byte_param",
                    "13": "byte_value",
                    "2": "byte_to_process",
                    "3": "byte_val",
                    "5": "input_byte"
                },
                "param_3": {
                    "1": "output_buffer",
                    "2": "input_array",
                    "3": "byte_ptr_ptr",
                    "4": "input_data"
                },
                "pbVar2": {
                    "1": "pointer1",
                    "2": "buffer_end",
                    "3": "ptr1",
                    "7": "temp_var2"
                },
                "pbVar3": {
                    "1": "decoded_data",
                    "2": "temp_var_3",
                    "3": "ptr2",
                    "7": "temp_var3"
                },
                "uVar4": {
                    "1": "output_value",
                    "19": "result",
                    "8": "return_value"
                }
            },
            "called": [
                "FUN_08009c7c",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "calling": [
                "FUN_08009358"
            ],
            "code": "\nuint process_input_0800932c(int input_param,byte byte_value,byte **input_data)\n\n{\n  int temp_var1;\n  byte *temp_var2;\n  byte *temp_var3;\n  uint result;\n  \n  temp_var2 = input_data[2] + -1;\n  input_data[2] = temp_var2;\n  if ((-1 < (int)temp_var2) ||\n     (((int)input_data[6] <= (int)temp_var2 && (temp_var2 = (byte *)(uint)byte_value, temp_var2 != (byte *)0xa))))\n  {\n    temp_var2 = *input_data;\n    *input_data = temp_var2 + 1;\n    *temp_var2 = byte_value;\n    return (uint)byte_value;\n  }\n  if ((input_param != 0) && (*(int *)(input_param + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (input_data == (byte **)&DAT_0800aba4) {\n    input_data = *(byte ***)(input_param + 4);\n  }\n  else if (input_data == (byte **)&DAT_0800abc4) {\n    input_data = *(byte ***)(input_param + 8);\n  }\n  else if (input_data == (byte **)&DAT_0800ab84) {\n    input_data = *(byte ***)(input_param + 0xc);\n  }\n  input_data[2] = input_data[6];\n  temp_var3 = (byte *)(uint)*(ushort *)(input_data + 3);\n  temp_var1 = (int)temp_var3 << 0x1c;\n  if (((temp_var1 < 0) && (temp_var3 = input_data[4], temp_var3 != (byte *)0x0)) ||\n     (temp_var1 = FUN_08009a80(input_param,input_data,temp_var1,temp_var3,temp_var2), temp_var1 == 0)) {\n    result = (uint)byte_value;\n    temp_var1 = (int)*input_data - (int)input_data[4];\n    if ((temp_var1 < (int)input_data[5]) || (temp_var1 = FUN_08009c7c(input_param,input_data), temp_var1 == 0)) {\n      input_data[2] = input_data[2] + -1;\n      temp_var2 = *input_data;\n      *input_data = temp_var2 + 1;\n      *temp_var2 = byte_value;\n      if ((byte *)(temp_var1 + 1) != input_data[5]) {\n        if (-1 < (int)((uint)*(ushort *)(input_data + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      temp_var1 = FUN_08009c7c(input_param,input_data);\n      if (temp_var1 == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "process_input_0800932c",
            "entrypoint": "0x0800932c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800932c": "process_input_0800932c",
                "iVar1": "temp_var1",
                "param_1": "input_param",
                "param_2": "byte_value",
                "param_3": "input_data",
                "pbVar2": "temp_var2",
                "pbVar3": "temp_var3",
                "uVar4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009358": {
            "additional_data": {
                "FUN_0800932c": {
                    "2": "process_byte"
                },
                "FUN_08009358": {
                    "1": "reverse_and_increment",
                    "20": "process_data",
                    "6": "process_bytes"
                },
                "F_u_n_0_8_0_0_9_3_5_8": {
                    "1": "reverse_and_count_bytes"
                },
                "iVar1": {
                    "1": "index",
                    "28": "result"
                },
                "iVar3": {
                    "1": "index",
                    "15": "current_index",
                    "2": "count",
                    "4": "current_length"
                },
                "param_1": {
                    "1": "param_a",
                    "2": "value1",
                    "4": "input_1",
                    "5": "input_param"
                },
                "param_2": {
                    "1": "value_2",
                    "2": "value2",
                    "3": "output_param",
                    "4": "input_2",
                    "5": "arg2"
                },
                "param_3": {
                    "1": "buffer",
                    "5": "data_array",
                    "6": "byte_array",
                    "9": "data_ptr"
                },
                "param_4": {
                    "1": "array_size",
                    "10": "array_length",
                    "3": "data_size",
                    "4": "size",
                    "5": "data_length",
                    "7": "length"
                },
                "puVar2": {
                    "1": "end",
                    "14": "end_ptr",
                    "2": "end_pointer",
                    "5": "end_of_data"
                }
            },
            "called": [
                "FUN_0800932c"
            ],
            "calling": [
                "FUN_0800937c"
            ],
            "code": "\nint process_data_08009358(undefined4 input1,undefined4 input2,undefined *data_ptr,int array_length)\n\n{\n  int result;\n  undefined *end_ptr;\n  int current_index;\n  \n  end_ptr = data_ptr + array_length;\n  current_index = array_length;\n  do {\n    if (data_ptr == end_ptr) {\n      return 0;\n    }\n    result = FUN_0800932c(input1,*data_ptr,input2,array_length,current_index);\n    array_length = result + 1;\n    data_ptr = data_ptr + 1;\n  } while (array_length != 0);\n  return result;\n}\n\n",
            "current_name": "process_data_08009358",
            "entrypoint": "0x08009358",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009358": "process_data_08009358",
                "iVar1": "result",
                "iVar3": "current_index",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "data_ptr",
                "param_4": "array_length",
                "puVar2": "end_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800937c": {
            "additional_data": {
                "FUN_08009358": {
                    "1": "process_substring"
                },
                "FUN_0800937c": {
                    "1": "decode_and_process_data",
                    "2": "extract_binary_data",
                    "7": "process_data"
                },
                "FUN_08009698": {
                    "1": "perform_conversion"
                },
                "FUN_08009a80": {
                    "1": "validate_parameters"
                },
                "FUN_08009d50": {
                    "1": "handle_null_pointer"
                },
                "FUn_08009f2c": {
                    "1": "find_character_index"
                },
                "bVar3": {
                    "1": "bool_flag",
                    "2": "is_valid",
                    "3": "is_true",
                    "4": "found_digit"
                },
                "iVar1": {
                    "1": "conversion_result",
                    "25": "result",
                    "4": "return_value"
                },
                "iVar2": {
                    "1": "temp_var"
                },
                "iVar6": {
                    "1": "temp_variable2",
                    "10": "temp_var",
                    "2": "integer_var",
                    "3": "temp_variable",
                    "4": "temp_var2"
                },
                "local_30": {
                    "1": "constant3"
                },
                "local_45": {
                    "1": "char_var2",
                    "2": "prefix"
                },
                "local_6e": {
                    "1": "temp_var6",
                    "2": "local_undefined2",
                    "3": "flag2",
                    "6": "plus_flag"
                },
                "local_6f": {
                    "1": "temp_variable",
                    "2": "local_undefined1",
                    "3": "flag1",
                    "6": "space_flag"
                },
                "local_70": {
                    "1": "local_var6",
                    "2": "option",
                    "3": "format_specifier",
                    "4": "current_char",
                    "5": "conversion_specifier"
                },
                "local_74": {
                    "1": "local_var6",
                    "2": "total_output_size",
                    "3": "total_size",
                    "7": "total_length"
                },
                "local_7c": {
                    "1": "temp_variable",
                    "2": "local_var4",
                    "9": "width"
                },
                "local_80": {
                    "1": "local_variable_4",
                    "2": "temp_variable"
                },
                "local_84": {
                    "1": "negative_value",
                    "10": "precision",
                    "2": "width"
                },
                "local_88": {
                    "1": "conversion_flags",
                    "17": "flags",
                    "2": "local_var1"
                },
                "local_8c": {
                    "1": "output_data_ptr",
                    "2": "output_pointer",
                    "5": "output_ptr"
                },
                "param_1": {
                    "1": "input_pointer",
                    "2": "format_string",
                    "4": "input1",
                    "5": "input_param",
                    "6": "input_data"
                },
                "param_2": {
                    "1": "param_addr",
                    "2": "format_specifier",
                    "3": "format_string",
                    "4": "input2"
                },
                "param_3": {
                    "1": "output_buffer",
                    "2": "input_string",
                    "4": "byte_array"
                },
                "param_4": {
                    "1": "counter_ptr",
                    "2": "output_param",
                    "3": "output_size"
                },
                "pbVar4": {
                    "1": "byte_pointer2",
                    "2": "byte_pointer_var1",
                    "3": "byte_ptr1",
                    "4": "current_byte",
                    "6": "byte_ptr",
                    "7": "current_char"
                },
                "pbVar5": {
                    "1": "byte_ptr_temp",
                    "2": "byte_pointer_var2",
                    "5": "byte_ptr2",
                    "6": "next_char"
                },
                "piVar2": {
                    "1": "local_var",
                    "2": "temp_ptr",
                    "3": "temp_pointer",
                    "4": "ptr_var",
                    "6": "ptr"
                },
                "unaff_r9": {
                    "1": "arg_size",
                    "2": "unaffected_r9",
                    "3": "temp_var",
                    "5": "unaff_r9"
                }
            },
            "called": [
                "FUN_08009f2c",
                "FUN_08009358",
                "FUN_08009698",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "calling": [
                "FUN_080098d8",
                "FUN_08009124"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009550) */\n\nint process_data_0800937c(int input_data,undefined4 *input2,byte *byte_array,int *output_size)\n\n{\n  int result;\n  int *ptr;\n  bool is_numeric;\n  byte *current_char;\n  byte *next_char;\n  int unaff_r9;\n  int temp_var;\n  int *output_ptr;\n  uint flags;\n  int precision;\n  undefined4 temp_value;\n  int width;\n  int total_length;\n  byte conversion_specifier;\n  undefined space_flag;\n  undefined plus_flag;\n  undefined sign_flag;\n  undefined4 temp_value_2;\n  \n  output_ptr = output_size;\n  if ((input_data != 0) && (*(int *)(input_data + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (input2 == &DAT_0800aba4) {\n    input2 = *(undefined4 **)(input_data + 4);\n  }\n  else if (input2 == (undefined4 *)&DAT_0800abc4) {\n    input2 = *(undefined4 **)(input_data + 8);\n  }\n  else if (input2 == (undefined4 *)&DAT_0800ab84) {\n    input2 = *(undefined4 **)(input_data + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(input2 + 3) << 0x1c)) || (input2[4] == 0)) &&\n     (temp_var = FUN_08009a80(input_data,input2), temp_var != 0)) {\n    return -1;\n  }\n  total_length = 0;\n  space_flag = 0x20;\n  plus_flag = 0x30;\n  current_char = byte_array;\nLAB_080093be:\n  next_char = current_char;\n  if (*next_char != 0) goto LAB_08009474;\n  goto LAB_080093c8;\nLAB_08009474:\n  current_char = next_char + 1;\n  if (*next_char != 0x25) goto LAB_080093be;\nLAB_080093c8:\n  temp_var = (int)next_char - (int)byte_array;\n  if (temp_var != 0) {\n    result = FUN_08009358(input_data,input2,byte_array,temp_var);\n    if (result == -1) {\nLAB_08009568:\n      if ((int)((uint)*(ushort *)(input2 + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_length;\n    }\n    total_length = total_length + temp_var;\n  }\n  if (*next_char == 0) goto LAB_08009568;\n  flags = 0;\n  width = 0;\n  precision = -1;\n  temp_value = 0;\n  sign_flag = 0;\n  temp_value_2 = 0;\n  current_char = next_char + 1;\n  while( true ) {\n    temp_var = FUN_08009f2c(\"#-0+ \",*current_char);\n    byte_array = current_char + 1;\n    if (temp_var == 0) break;\n    flags = 1 << (temp_var + 0xf7ff54b0U & 0xff) | flags;\n    current_char = byte_array;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    sign_flag = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    sign_flag = 0x2b;\n  }\n  if (*current_char == 0x2a) {\n    ptr = output_ptr + 1;\n    temp_var = *output_ptr;\n    output_ptr = ptr;\n    if (temp_var < 0) {\n      width = -temp_var;\n      flags = flags | 2;\n      goto LAB_080094a6;\n    }\n  }\n  else {\n    is_numeric = false;\n    temp_var = width;\n    byte_array = current_char;\n    while( true ) {\n      if (9 < *byte_array - 0x30) break;\n      temp_var = temp_var * 10 + (*byte_array - 0x30);\n      is_numeric = true;\n      byte_array = byte_array + 1;\n    }\n    if (!is_numeric) goto LAB_080094a6;\n  }\n  width = temp_var;\nLAB_080094a6:\n  if (*byte_array == 0x2e) {\n    if (byte_array[1] == 0x2a) {\n      byte_array = byte_array + 2;\n      ptr = output_ptr + 1;\n      precision = *output_ptr;\n      output_ptr = ptr;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      is_numeric = false;\n      temp_var = 0;\n      precision = 0;\n      while( true ) {\n        byte_array = byte_array + 1;\n        if (9 < *byte_array - 0x30) break;\n        temp_var = temp_var * 10 + (*byte_array - 0x30);\n        is_numeric = true;\n      }\n      if (is_numeric) {\n        precision = temp_var;\n      }\n    }\n  }\n  temp_var = FUN_08009f2c(&DAT_0800ab56,*byte_array,3);\n  if (temp_var != 0) {\n    byte_array = byte_array + 1;\n    flags = flags | 0x40 << (temp_var + 0xf7ff54aaU & 0xff);\n  }\n  conversion_specifier = *byte_array;\n  byte_array = byte_array + 1;\n  temp_var = FUN_08009f2c(\"efgEFG\",conversion_specifier,6);\n  if (temp_var == 0) {\n    unaff_r9 = FUN_08009698(input_data,&flags,input2,0x8009359,&output_ptr);\n    if (unaff_r9 == -1) goto LAB_08009568;\n  }\n  else {\n    output_ptr = (int *)(((int)output_ptr + 7U & 0xfffffff8) + 8);\n  }\n  total_length = total_length + unaff_r9;\n  current_char = byte_array;\n  goto LAB_080093be;\n}\n\n",
            "current_name": "process_data_0800937c",
            "entrypoint": "0x0800937c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800937c": "process_data_0800937c",
                "bVar3": "is_numeric",
                "iVar1": "result",
                "iVar2": "temp_var",
                "iVar6": "temp_var",
                "local_30": "temp_value_2",
                "local_45": "sign_flag",
                "local_6e": "plus_flag",
                "local_6f": "space_flag",
                "local_70": "conversion_specifier",
                "local_74": "total_length",
                "local_7c": "width",
                "local_80": "temp_value",
                "local_84": "precision",
                "local_88": "flags",
                "local_8c": "output_ptr",
                "param_1": "input_data",
                "param_2": "input2",
                "param_3": "byte_array",
                "param_4": "output_size",
                "pbVar4": "current_char",
                "pbVar5": "next_char",
                "piVar2": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080095a8": {
            "additional_data": {
                "FUN_080095a8": {
                    "1": "extract_and_process_data",
                    "11": "process_data",
                    "2": "decode_data"
                },
                "bVar5": {
                    "1": "has_special_char",
                    "3": "is_condition_true",
                    "4": "is_zero",
                    "5": "is_condition_met"
                },
                "byteValue": {
                    "1": "flag"
                },
                "byte_temp": {
                    "1": "temp_byte"
                },
                "iVar1": {
                    "1": "loop_index",
                    "16": "index",
                    "2": "loop_index1",
                    "3": "i"
                },
                "iVar2": {
                    "1": "callback_return_value",
                    "16": "result",
                    "2": "loop_index2",
                    "7": "callback_result"
                },
                "param_1": {
                    "1": "input1",
                    "2": "param1",
                    "3": "input_data",
                    "4": "input_value",
                    "6": "input_param",
                    "7": "data"
                },
                "param_2": {
                    "1": "metadata",
                    "2": "info_array",
                    "3": "input_array",
                    "5": "data",
                    "6": "data_array"
                },
                "param_3": {
                    "1": "output_1",
                    "2": "decoded_length",
                    "3": "result",
                    "4": "output",
                    "8": "output_size"
                },
                "param_4": {
                    "1": "offset",
                    "3": "extra_param",
                    "4": "param4",
                    "6": "param",
                    "7": "param_4"
                },
                "param_5": {
                    "1": "code_fn",
                    "12": "callback",
                    "6": "callback_func",
                    "7": "callback_function"
                },
                "uVar3": {
                    "1": "length_diff",
                    "2": "max_output_size",
                    "4": "max_length",
                    "8": "max_value",
                    "9": "max_size"
                },
                "uVar4": {
                    "1": "u_var4",
                    "10": "offset",
                    "2": "temp_size",
                    "4": "counter"
                },
                "uVar5": {
                    "1": "byte_value"
                }
            },
            "called": [],
            "calling": [
                "FUN_08009698"
            ],
            "code": "\nundefined4\nprocess_data_080095a8(undefined4 data,uint *data_array,uint *output_size,undefined4 param_4,code *callback)\n\n{\n  int index;\n  int result;\n  uint max_size;\n  uint offset;\n  bool condition;\n  \n  max_size = data_array[4];\n  if ((int)data_array[4] < (int)data_array[2]) {\n    max_size = data_array[2];\n  }\n  *output_size = max_size;\n  if (*(char *)((int)data_array + 0x43) != '\\0') {\n    *output_size = max_size + 1;\n  }\n  if ((int)(*data_array << 0x1a) < 0) {\n    *output_size = *output_size + 2;\n  }\n  if ((*data_array & 6) == 0) {\n    for (index = 0; index < (int)(data_array[3] - *output_size); index = index + 1) {\n      result = (*callback)(data,param_4,(int)data_array + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_size = (uint)*(byte *)((int)data_array + 0x43);\n  if (max_size != 0) {\n    max_size = 1;\n  }\n  offset = max_size;\n  if ((int)(*data_array << 0x1a) < 0) {\n    *(undefined *)((int)data_array + max_size + 0x43) = 0x30;\n    offset = max_size + 2;\n    *(undefined *)((int)data_array + max_size + 0x44) = *(undefined *)((int)data_array + 0x45);\n  }\n  index = (*callback)(data,param_4,(int)data_array + 0x43,offset);\n  if (index != -1) {\n    max_size = data_array[3];\n    condition = (*data_array & 6) != 4;\n    if (condition) {\n      max_size = 0;\n    }\n    offset = 0;\n    if (!condition) {\n      max_size = max_size - *output_size;\n    }\n    if (!condition) {\n      max_size = max_size & ~((int)max_size >> 0x1f);\n    }\n    if ((int)data_array[4] < (int)data_array[2]) {\n      max_size = max_size + (data_array[2] - data_array[4]);\n    }\n    while( true ) {\n      if (max_size == offset) {\n        return 0;\n      }\n      index = (*callback)(data,param_4,(int)data_array + 0x1a,1);\n      if (index == -1) break;\n      offset = offset + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "process_data_080095a8",
            "entrypoint": "0x080095a8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080095a8": "process_data_080095a8",
                "bVar5": "condition",
                "iVar1": "index",
                "iVar2": "result",
                "param_1": "data",
                "param_2": "data_array",
                "param_3": "output_size",
                "param_5": "callback",
                "uVar3": "max_size",
                "uVar4": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009698": {
            "additional_data": {
                "FUN_080095a8": {
                    "1": "execute_and_get_result"
                },
                "FUN_08009698": {
                    "1": "decompile_and_improve",
                    "2": "decode_and_execute",
                    "5": "decode_and_process_data"
                },
                "FUN_08009f2c": {
                    "1": "convert_to_string"
                },
                "bVar1": {
                    "1": "value_char",
                    "18": "byte_value",
                    "3": "first_byte",
                    "5": "byte_val"
                },
                "fpcVar11": {
                    "1": "character_pointer_2"
                },
                "iVar2": {
                    "1": "int_var",
                    "10": "index",
                    "5": "result"
                },
                "iVar4": {
                    "1": "sub_func_ret_val",
                    "2": "result"
                },
                "local_24": {
                    "1": "local_variables_1",
                    "14": "local_array",
                    "2": "output_length",
                    "3": "local_arr"
                },
                "local_24[2]": {
                    "1": "local_array"
                },
                "param_1": {
                    "1": "input1",
                    "2": "param",
                    "4": "param1",
                    "5": "input_param"
                },
                "param_2": {
                    "1": "arg2",
                    "2": "input_data",
                    "3": "input",
                    "4": "data",
                    "7": "input_array"
                },
                "param_3": {
                    "1": "size_param",
                    "10": "param_3",
                    "2": "param",
                    "7": "param3"
                },
                "param_4": {
                    "1": "arg4",
                    "2": "output_function",
                    "3": "callback",
                    "6": "callback_function"
                },
                "param_5": {
                    "1": "ptr_data",
                    "2": "output_array_ptr",
                    "3": "output_param",
                    "4": "output_array"
                },
                "pcVar11": {
                    "1": "char_var1",
                    "2": "char_pointer_2",
                    "3": "char_ptr"
                },
                "pcVar12": {
                    "1": "char_var2",
                    "2": "character_pointer_3",
                    "3": "char_ptr"
                },
                "pcVar5": {
                    "1": "hexadecimals",
                    "2": "char_array",
                    "3": "hex_characters",
                    "4": "char_ptr",
                    "5": "hex_digits"
                },
                "ppcVar8": {
                    "1": "ptr_to_ptr_hex_chars",
                    "2": "char_ptr_ptr"
                },
                "ppuVar7": {
                    "1": "double_pointer"
                },
                "puVar3": {
                    "1": "ptr_var1",
                    "10": "ptr",
                    "2": "ptr_var",
                    "3": "ptr_value"
                },
                "uVar10": {
                    "1": "value_2",
                    "2": "temp",
                    "3": "length",
                    "7": "temp_value"
                },
                "uVar6": {
                    "1": "uint_val",
                    "2": "temp_var",
                    "3": "uint_value",
                    "8": "base"
                },
                "uVar9": {
                    "1": "unsigned_integer_2",
                    "10": "value",
                    "2": "uint_var2",
                    "5": "result"
                }
            },
            "called": [
                "FUN_08009f2c",
                "FUN_080095a8"
            ],
            "calling": [
                "FUN_0800937c"
            ],
            "code": "\nuint decode_and_process_data_08009698(undefined4 input_param,uint *input_array,undefined4 param_3,code *callback_function,uint **output_array)\n\n{\n  byte byte_value;\n  int index;\n  uint *ptr;\n  int loop_var;\n  char *hex_digits;\n  uint base;\n  uint **ptrptr;\n  char **char_ptr_ptr;\n  uint value;\n  uint temp_value;\n  char *char_ptr;\n  char *char_ptr;\n  uint local_array [2];\n  \n  byte_value = *(byte *)(input_array + 6);\n  char_ptr = (char *)((int)input_array + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_08009852;\n          if (byte_value != 0x58) goto LAB_080096c8;\n          *(undefined *)((int)input_array + 0x45) = 0x58;\n          hex_digits = \"0123456789ABCDEF\";\nLAB_080097e2:\n          base = *input_array;\n          ptr = *output_array;\n          *output_array = ptr + 1;\n          if (((base & 0x80) == 0) && ((int)(base << 0x19) < 0)) {\n            value = (uint)*(ushort *)ptr;\n          }\n          else {\n            value = *ptr;\n          }\n          if ((int)(base << 0x1f) < 0) {\n            *input_array = base | 0x20;\n          }\n          if (value == 0) {\n            *input_array = *input_array & 0xffffffdf;\n          }\n          base = 0x10;\nLAB_08009778:\n          *(undefined *)((int)input_array + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_080096c8;\n          value = *input_array;\n          ptr = *output_array;\n          if ((value & 0x80) == 0) {\n            *output_array = ptr + 1;\n            if ((value & 0x40) == 0) goto LAB_080096e8;\n            value = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *output_array = ptr + 1;\nLAB_080096e8:\n            value = *ptr;\n          }\n          if ((int)value < 0) {\n            value = -value;\n            *(undefined *)((int)input_array + 0x43) = 0x2d;\n          }\n          hex_digits = \"0123456789ABCDEF\";\n          base = 10;\n        }\n        temp_value = input_array[1];\n        input_array[2] = temp_value;\n        char_ptr = char_ptr;\n        if ((int)temp_value < 0) {\n          if (value != 0) goto LAB_08009816;\nLAB_080098c4:\n          *(char *)((int)input_array + 0x42) = *hex_digits;\n          char_ptr = (char *)((int)input_array + 0x42);\n        }\n        else {\n          *input_array = *input_array & 0xfffffffb;\n          if (value == 0) {\n            if (temp_value != 0) goto LAB_080098c4;\n          }\n          else {\nLAB_08009816:\n            do {\n              temp_value = value / base;\n              char_ptr = char_ptr + -1;\n              *char_ptr = hex_digits[value - base * temp_value];\n              value = temp_value;\n            } while (temp_value != 0);\n          }\n        }\n        if (((base == 8) && ((int)(*input_array << 0x1f) < 0)) && ((int)input_array[1] <= (int)input_array[4]))\n        {\n          char_ptr[-1] = '0';\n          char_ptr = char_ptr + -1;\n        }\n        input_array[4] = (int)char_ptr - (int)char_ptr;\n        char_ptr = char_ptr;\n        goto LAB_080097be;\n      }\n      ptr = *output_array;\n      *output_array = ptr + 1;\n      *(char *)((int)input_array + 0x42) = (char)*ptr;\nLAB_08009728:\n      char_ptr = (char *)((int)input_array + 0x42);\n      value = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_0800974e:\n            value = *input_array;\n            ptr = *output_array;\n            if ((value & 0x80) == 0) {\n              *output_array = ptr + 1;\n              if ((value & 0x40) == 0) goto LAB_0800975c;\n              value = (uint)*(ushort *)ptr;\n            }\n            else {\n              *output_array = ptr + 1;\nLAB_0800975c:\n              value = *ptr;\n            }\n            if (byte_value == 0x6f) {\n              base = 8;\n            }\n            else {\n              base = 10;\n            }\n            hex_digits = \"0123456789ABCDEF\";\n            goto LAB_08009778;\n          }\n          if (byte_value == 0x70) {\n            *input_array = *input_array | 0x20;\nLAB_0800970e:\n            hex_digits = \"0123456789abcdef\";\n            *(undefined *)((int)input_array + 0x45) = 0x78;\n            goto LAB_080097e2;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_0800974e;\n          if (byte_value == 0x78) goto LAB_0800970e;\n        }\nLAB_080096c8:\n        *(byte *)((int)input_array + 0x42) = byte_value;\n        goto LAB_08009728;\n      }\n      char_ptr_ptr = (char **)*output_array;\n      *output_array = (uint *)(char_ptr_ptr + 1);\n      char_ptr = *char_ptr_ptr;\n      index = FUN_08009f2c(char_ptr,0,input_array[1]);\n      if (index != 0) {\n        input_array[1] = index - (int)char_ptr;\n      }\n      value = input_array[1];\n    }\n    input_array[4] = value;\n    *(undefined *)((int)input_array + 0x43) = 0;\n    goto LAB_080097be;\n  }\n  value = *input_array;\n  ptrptr = (uint **)*output_array;\n  base = input_array[5];\n  if ((value & 0x80) == 0) {\n    *output_array = (uint *)(ptrptr + 1);\n    ptr = *ptrptr;\n    if ((value & 0x40) == 0) goto LAB_0800983e;\n    *(short *)ptr = (short)base;\n  }\n  else {\n    *output_array = (uint *)(ptrptr + 1);\n    ptr = *ptrptr;\nLAB_0800983e:\n    *ptr = base;\n  }\nLAB_08009852:\n  input_array[4] = 0;\nLAB_080097be:\n  index = FUN_080095a8(input_param,input_array,local_array,param_3,callback_function);\n  if ((index == -1) || (index = (*callback_function)(input_param,param_3,char_ptr,input_array[4]), index == -1)) {\nLAB_080097d2:\n    value = 0xffffffff;\n  }\n  else {\n    if ((int)(*input_array << 0x1e) < 0) {\n      for (index = 0; index < (int)(input_array[3] - local_array[0]); index = index + 1) {\n        loop_var = (*callback_function)(input_param,param_3,(int)input_array + 0x19,1);\n        if (loop_var == -1) goto LAB_080097d2;\n      }\n    }\n    value = input_array[3];\n    if ((int)input_array[3] < (int)local_array[0]) {\n      value = local_array[0];\n    }\n  }\n  return value;\n}\n\n",
            "current_name": "decode_and_process_data_08009698",
            "entrypoint": "0x08009698",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009698": "decode_and_process_data_08009698",
                "bVar1": "byte_value",
                "iVar2": "index",
                "iVar4": "loop_var",
                "local_24": "local_array",
                "param_1": "input_param",
                "param_2": "input_array",
                "param_4": "callback_function",
                "param_5": "output_array",
                "pcVar11": "char_ptr",
                "pcVar12": "char_ptr",
                "pcVar5": "hex_digits",
                "ppcVar8": "char_ptr_ptr",
                "ppuVar7": "ptrptr",
                "puVar3": "ptr",
                "uVar10": "temp_value",
                "uVar6": "base",
                "uVar9": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080098d8": {
            "additional_data": {
                "FUN_0800937c": {
                    "1": "process_subfunc1",
                    "2": "process_data"
                },
                "FUN_080098d8": {
                    "1": "initialize_variables",
                    "2": "process_function",
                    "3": "execute_function",
                    "4": "process_data",
                    "7": "initialize_function"
                },
                "FUN_08009d50": {
                    "1": "process_subfunc2",
                    "2": "cleanup_data"
                },
                "iVar1": {
                    "1": "data_offset",
                    "2": "data_pointer",
                    "3": "var1",
                    "4": "data",
                    "5": "data_ptr",
                    "7": "data_address"
                },
                "param_1": {
                    "1": "subfunc2_param_1",
                    "2": "input_param_1",
                    "5": "input1",
                    "6": "input_param",
                    "7": "input_param1"
                },
                "param_2": {
                    "1": "param_2",
                    "2": "input_param_2",
                    "5": "arg2",
                    "7": "input_param2"
                },
                "param_3": {
                    "1": "param_3",
                    "2": "input_param_3",
                    "5": "third_param",
                    "7": "input_param3"
                },
                "param_4": {
                    "1": "subfunc1_param_4",
                    "2": "input_param_4",
                    "5": "input4",
                    "7": "input_param4"
                },
                "uStack_4": {
                    "1": "temp3",
                    "2": "param4_copy"
                },
                "uStack_8": {
                    "1": "local_variable_4",
                    "2": "stack_var2"
                },
                "uStack_c": {
                    "1": "temp1",
                    "2": "param2_copy"
                },
                "uVar2": {
                    "1": "variable2",
                    "2": "input1_copy",
                    "3": "input_var"
                }
            },
            "called": [
                "FUN_0800937c",
                "FUN_08009d50"
            ],
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08007544",
                "FUN_08007594",
                "FUN_080075dc"
            ],
            "code": "\nvoid initialize_function_080098d8(undefined4 input_param1,undefined4 input_param2,undefined4 input_param3,undefined4 input_param4)\n\n{\n  int data_address;\n  undefined4 var2;\n  undefined4 stack_var1;\n  undefined4 stack_var2;\n  undefined4 stack_var3;\n  \n  data_address = DAT_20000090;\n  var2 = input_param1;\n  stack_var1 = input_param2;\n  stack_var2 = input_param3;\n  stack_var3 = input_param4;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  FUN_0800937c(data_address,*(undefined4 *)(data_address + 8),input_param1,&stack_var1,var2,&stack_var1);\n  return;\n}\n\n",
            "current_name": "initialize_function_080098d8",
            "entrypoint": "0x080098d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080098d8": "initialize_function_080098d8",
                "iVar1": "data_address",
                "param_1": "input_param1",
                "param_2": "input_param2",
                "param_3": "input_param3",
                "param_4": "input_param4",
                "uStack_4": "stack_var3",
                "uStack_8": "stack_var2",
                "uStack_c": "stack_var1",
                "uVar2": "var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009908": {
            "additional_data": {
                "FUN_080091b0": {
                    "1": "execute_function_3",
                    "2": "update_result",
                    "4": "process_data"
                },
                "FUN_080091d8": {
                    "1": "print_error",
                    "4": "initialize_data"
                },
                "FUN_08009270": {
                    "1": "perform_operation"
                },
                "FUN_08009908": {
                    "1": "perform_operation",
                    "3": "calculate_result",
                    "4": "extract_data",
                    "6": "process_data"
                },
                "FUN_0800a154": {
                    "1": "execute_function_2",
                    "3": "calculate_result"
                },
                "iVar2": {
                    "1": "new_size",
                    "13": "result",
                    "2": "result_value",
                    "3": "output",
                    "5": "output_value",
                    "6": "return_value"
                },
                "param_1": {
                    "1": "first_param",
                    "17": "input_value",
                    "2": "input1",
                    "3": "data_size",
                    "4": "input_param"
                },
                "param_2": {
                    "1": "compare_value",
                    "12": "size",
                    "2": "limit"
                },
                "uVar1": {
                    "1": "data_var",
                    "2": "data_pointer",
                    "5": "constant",
                    "6": "constant_value",
                    "9": "data"
                },
                "uVar3": {
                    "1": "current_value",
                    "12": "result",
                    "2": "comparison_result",
                    "4": "temp"
                }
            },
            "called": [
                "FUN_080091d8",
                "FUN_0800a154",
                "FUN_080091b0",
                "FUN_08009270"
            ],
            "calling": [
                "FUN_080027f0",
                "FUN_08002acc",
                "FUN_0800288c"
            ],
            "code": "\nint process_data_08009908(int input_value,uint size)\n\n{\n  undefined4 data;\n  int result;\n  uint result;\n  \n  data = DAT_20000090;\n  if (input_value != 0) {\n    if (size == 0) {\n      FUN_080091d8();\n      result = 0;\n    }\n    else {\n      result = FUN_0800a154();\n      result = input_value;\n      if ((result < size) && (result = FUN_08009270(data,size), result != 0)) {\n        FUN_080091b0(result,input_value,size);\n        FUN_080091d8(data,input_value);\n      }\n    }\n    return result;\n  }\n  result = FUN_08009270(DAT_20000090,size,size,&DAT_20000090);\n  return result;\n}\n\n",
            "current_name": "process_data_08009908",
            "entrypoint": "0x08009908",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009908": "process_data_08009908",
                "iVar2": "result",
                "param_1": "input_value",
                "param_2": "size",
                "uVar1": "data",
                "uVar3": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009918": {
            "additional_data": {
                "DAT_20000a38": {
                    "1": "data_value"
                },
                "FNV_20000a38": {
                    "1": "result"
                },
                "FUN_08008804": {
                    "1": "retrieve_value"
                },
                "FUN_08009918": {
                    "1": "update_param_with_result",
                    "2": "check_and_update_param",
                    "4": "extract_and_assign_value"
                },
                "iVar1": {
                    "1": "result_code",
                    "16": "result",
                    "2": "status",
                    "7": "return_value"
                },
                "param_1": {
                    "1": "updated_param",
                    "10": "result",
                    "2": "result_pointer",
                    "9": "output"
                },
                "param_2": {
                    "1": "input_array",
                    "14": "input",
                    "2": "input_data",
                    "6": "input_param"
                }
            },
            "called": [
                "FUN_08008804"
            ],
            "calling": [
                "FUN_08009270"
            ],
            "code": "\nvoid extract_data_08009918(int *result,undefined4 input)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008804(input);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "current_name": "extract_data_08009918",
            "entrypoint": "0x08009918",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009918": "extract_data_08009918",
                "iVar1": "result",
                "param_1": "result",
                "param_2": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009938": {
            "additional_data": {
                "FUN_08009938": {
                    "1": "find_character_in_string",
                    "2": "find_first_occurrence",
                    "21": "find_character",
                    "3": "find_char"
                },
                "param_1": {
                    "1": "input_string",
                    "26": "string",
                    "4": "str"
                },
                "param_2": {
                    "1": "target_character",
                    "24": "character",
                    "6": "target_char"
                },
                "pcVar1": {
                    "2": "current_position",
                    "21": "current_char",
                    "8": "current_character"
                }
            },
            "called": [],
            "calling": [
                "FUN_0800997e"
            ],
            "code": "\nchar * find_character_08009938(char *string,char character)\n\n{\n  char *current_char;\n  \n  do {\n    current_char = string;\n    if (*current_char == '\\0') {\n      if (character != '\\0') {\n        current_char = (char *)0x0;\n      }\n      return current_char;\n    }\n    string = current_char + 1;\n  } while (character != *current_char);\n  return current_char;\n}\n\n",
            "current_name": "find_character_08009938",
            "entrypoint": "0x08009938",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009938": "find_character_08009938",
                "param_1": "string",
                "param_2": "character",
                "pcVar1": "current_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009954": {
            "additional_data": {
                "FUN_08009954": {
                    "1": "copy_string_with_size_check",
                    "14": "copy_string",
                    "2": "copy_string_with_null_terminator",
                    "3": "copy_string_with_limit",
                    "5": "copy_string_with_terminator"
                },
                "cVar1": {
                    "25": "current_char",
                    "5": "current_character"
                },
                "iVar2": {
                    "1": "remaining_characters",
                    "22": "remaining_length",
                    "5": "remaining_size"
                },
                "param_1": {
                    "1": "dest",
                    "25": "destination",
                    "3": "source"
                },
                "param_2": {
                    "1": "src",
                    "25": "source",
                    "3": "destination"
                },
                "param_3": {
                    "1": "max_size",
                    "20": "length",
                    "3": "limit",
                    "4": "size"
                },
                "pcVar3": {
                    "1": "destination_pointer",
                    "16": "dest_ptr",
                    "3": "current_destination"
                }
            },
            "called": [],
            "calling": [
                "FUN_08002e44"
            ],
            "code": "\nvoid copy_string_08009954(char *destination,char *source,int length)\n\n{\n  char current_char;\n  int remaining_length;\n  char *dest_ptr;\n  \n  do {\n    dest_ptr = destination;\n    remaining_length = length;\n    if (remaining_length == 0) {\n      return;\n    }\n    current_char = *source;\n    destination = dest_ptr + 1;\n    *dest_ptr = current_char;\n    source = source + 1;\n    length = remaining_length + -1;\n  } while (current_char != '\\0');\n  for (; destination != dest_ptr + remaining_length; destination = destination + 1) {\n    *destination = '\\0';\n  }\n  return;\n}\n\n",
            "current_name": "copy_string_08009954",
            "entrypoint": "0x08009954",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009954": "copy_string_08009954",
                "cVar1": "current_char",
                "iVar2": "remaining_length",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "length",
                "pcVar3": "dest_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800997e": {
            "additional_data": {
                "FUN_08009938": {
                    "1": "occurrence_check"
                },
                "FUN_0800997e": {
                    "1": "find_last_positive_index",
                    "11": "find_last_index",
                    "13": "find_last_occurrence",
                    "2": "find_last_occurrence_index"
                },
                "iVar1": {
                    "1": "match_index",
                    "2": "last_occurrence",
                    "3": "result",
                    "4": "last_index",
                    "5": "index",
                    "8": "current_index"
                },
                "iVar2": {
                    "1": "previous_match_index",
                    "12": "last_index",
                    "2": "previous_occurrence",
                    "3": "previous_index",
                    "6": "last_occurrence"
                },
                "param_1": {
                    "1": "source_string",
                    "11": "array",
                    "4": "input_string",
                    "7": "string",
                    "8": "str"
                },
                "param_2": {
                    "1": "target",
                    "2": "search_character",
                    "3": "target_char",
                    "5": "length",
                    "8": "character"
                },
                "param_3": {
                    "1": "unknown_param_1",
                    "18": "param_3",
                    "2": "unused_param_1",
                    "3": "param3"
                },
                "param_4": {
                    "1": "extra_param_2",
                    "18": "param_4",
                    "2": "unused_param_2",
                    "3": "param4"
                }
            },
            "called": [
                "FUN_08009938"
            ],
            "calling": [
                "FUN_08002e44"
            ],
            "code": "\nint find_last_occurrence_0800997e(int array,int character,undefined4 param_3,undefined4 param_4)\n\n{\n  int current_index;\n  int last_index;\n  \n  if (character != 0) {\n    last_index = 0;\n    while (current_index = FUN_08009938(array,character,param_3,array,param_4), current_index != 0) {\n      array = current_index + 1;\n      last_index = current_index;\n    }\n    return last_index;\n  }\n  last_index = FUN_08009938();\n  return last_index;\n}\n\n",
            "current_name": "find_last_occurrence_0800997e",
            "entrypoint": "0x0800997e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800997e": "find_last_occurrence_0800997e",
                "iVar1": "current_index",
                "iVar2": "last_index",
                "param_1": "array",
                "param_2": "character"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080099a4": {
            "additional_data": {
                "'\\0'": {
                    "1": "null_terminator"
                },
                "*param_1": {
                    "1": "first_char1"
                },
                "*param_2": {
                    "1": "first_char2"
                },
                "FUN_080099a4": {
                    "1": "find_first_common_substring",
                    "19": "find_substring",
                    "2": "find_first_occurrence",
                    "3": "find_first_substring"
                },
                "param_1": {
                    "1": "current_char",
                    "13": "string1",
                    "2": "input_string",
                    "4": "str1",
                    "7": "string_1"
                },
                "param_2": {
                    "1": "sub_string",
                    "13": "string2",
                    "4": "str2",
                    "7": "string_2"
                },
                "pcVar1": {
                    "1": "current_str1",
                    "11": "current_char1",
                    "3": "current_char_str1",
                    "4": "current_char_1",
                    "8": "current_char"
                },
                "pcVar2": {
                    "1": "compare_ptr",
                    "12": "current_char2",
                    "2": "prev_char",
                    "3": "current_char_str2",
                    "5": "current_char_2"
                },
                "pcVar2 + 1": {
                    "1": "next_char1_temp"
                },
                "pcVar3": {
                    "1": "current_char2_ptr",
                    "2": "compare_char",
                    "3": "current_char2_temp"
                },
                "pcVar3 + 1": {
                    "1": "next_char2_temp"
                }
            },
            "called": [],
            "calling": [
                "FUN_08002e44"
            ],
            "code": "\nchar * find_substring_080099a4(char *string1,char *string2)\n\n{\n  char *current_char1;\n  char *current_char2;\n  char *current_char2_temp;\n  \n  if (*string1 == '\\0') {\n    if (*string2 != '\\0') {\n      string1 = (char *)0x0;\n    }\n    return string1;\n  }\n  do {\n    current_char1 = string1;\n    if (*current_char1 == '\\0') {\n      return (char *)0x0;\n    }\n    current_char2_temp = string2 + -1;\n    current_char2 = current_char1 + -1;\n    do {\n      current_char2_temp = current_char2_temp + 1;\n      if (*current_char2_temp == '\\0') {\n        return current_char1;\n      }\n      current_char2 = current_char2 + 1;\n      string1 = current_char1 + 1;\n    } while (*current_char2 == *current_char2_temp);\n  } while( true );\n}\n\n",
            "current_name": "find_substring_080099a4",
            "entrypoint": "0x080099a4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080099a4": "find_substring_080099a4",
                "param_1": "string1",
                "param_2": "string2",
                "pcVar1": "current_char1",
                "pcVar2": "current_char2",
                "pcVar3": "current_char2_temp"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009a80": {
            "additional_data": {
                "&DAT_0800ab84": {
                    "1": "magic_value3",
                    "4": "constant3"
                },
                "&DAT_0800aba4": {
                    "1": "constant_a",
                    "4": "constant1"
                },
                "&DAT_0800abc4": {
                    "1": "magic_value2",
                    "4": "constant2"
                },
                "(int)(short)uVar3 & 0x80": {
                    "1": "value6"
                },
                "(int)(uVar2 << 0x1b)": {
                    "1": "shifted_flags2"
                },
                "(int)(uVar2 << 0x1c)": {
                    "1": "shifted_flags1"
                },
                "(int)(uVar2 << 0x1d)": {
                    "1": "shifted_flags3"
                },
                "(uint)uVar3 << 0x1e": {
                    "1": "shifted_flags4"
                },
                "(undefined4 *)&DAT_0800ab84": {
                    "1": "constant_c"
                },
                "(undefined4 *)&DAT_0800abc4": {
                    "1": "constant_b"
                },
                "(undefined4 *)param_2[0xd]": {
                    "1": "ptr_to_d"
                },
                "(undefined4 *)param_2[0xd] != (undefined4 *)0x0": {
                    "1": "ptr_to_d_not_zero"
                },
                "*(undefined4 **)(iVar1 + 0xc)": {
                    "1": "ptr3"
                },
                "*(undefined4 **)(iVar1 + 4)": {
                    "1": "ptr1"
                },
                "*(undefined4 **)(iVar1 + 8)": {
                    "1": "ptr2"
                },
                "*(ushort *)(param_2 + 3)": {
                    "1": "value2"
                },
                "*(ushort *)(param_2 + 3) & 0x280": {
                    "1": "data_flags_and_condition"
                },
                "*(ushort *)(param_2 + 3) & 0xffdb": {
                    "1": "data_flags_and_mask"
                },
                "*(ushort *)(param_2 + 3) & 1": {
                    "1": "value5"
                },
                "*(ushort *)(param_2 + 3) | 0x40": {
                    "1": "value7"
                },
                "*param_1": {
                    "1": "output_param"
                },
                "*param_2": {
                    "1": "input_param"
                },
                "-1": {
                    "1": "negative_one"
                },
                "0xffffffff": {
                    "1": "-1"
                },
                "DAT_20000090": {
                    "1": "current_index"
                },
                "FUND_08009d50": {
                    "1": "cleanup_data"
                },
                "FUN_080091d8": {
                    "1": "handle_case",
                    "4": "handle_error"
                },
                "FUN_08009a80": {
                    "1": "reverse_extracted_data",
                    "11": "process_data",
                    "2": "extract_data",
                    "5": "update_data"
                },
                "FUN_08009d50": {
                    "1": "cleanup",
                    "2": "cleanup_function",
                    "5": "cleanup_data"
                },
                "FUN_08009eac": {
                    "1": "perform_operation",
                    "3": "process_data"
                },
                "iVar1": {
                    "1": "global_data_ptr",
                    "3": "data_pointer",
                    "5": "data_offset",
                    "6": "data_address",
                    "8": "data_ptr"
                },
                "param_1": {
                    "1": "output_1",
                    "2": "output_data",
                    "3": "result",
                    "6": "output_param",
                    "7": "output"
                },
                "param_2": {
                    "1": "input1",
                    "2": "input_data",
                    "3": "input_ptr",
                    "4": "data",
                    "6": "input_param"
                },
                "param_2 + 0x11": {
                    "1": "ptr_to_d_plus17"
                },
                "param_2 == &DAT_0800aba4": {
                    "1": "is_type_a"
                },
                "param_2 == (undefined4 *)&DAT_0800ab84": {
                    "1": "is_type_c"
                },
                "param_2 == (undefined4 *)&DAT_0800abc4": {
                    "1": "is_type_b"
                },
                "param_2[0xd]": {
                    "1": "variable1"
                },
                "param_2[1]": {
                    "1": "variable2"
                },
                "param_2[2]": {
                    "1": "variable6"
                },
                "param_2[4]": {
                    "1": "next_data"
                },
                "param_2[4] == 0": {
                    "1": "value3"
                },
                "param_2[5]": {
                    "1": "variable5"
                },
                "param_2[6]": {
                    "1": "input_sub6"
                },
                "uVar2": {
                    "1": "var2",
                    "18": "result",
                    "3": "temp_var",
                    "6": "value"
                },
                "uVar3": {
                    "1": "value2",
                    "14": "flags",
                    "2": "ushort_var",
                    "3": "flag",
                    "5": "value"
                }
            },
            "called": [
                "FUN_080091d8",
                "FUN_08009eac",
                "FUN_08009d50"
            ],
            "calling": [
                "FUN_0800937c",
                "FUN_0800932c"
            ],
            "code": "\nuint process_data_08009a80(undefined4 *output,undefined4 *input)\n\n{\n  int data_ptr;\n  uint result;\n  ushort flags;\n  \n  data_ptr = DAT_20000090;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  if (input == &DAT_0800aba4) {\n    input = *(undefined4 **)(data_ptr + 4);\n  }\n  else if (input == (undefined4 *)&DAT_0800abc4) {\n    input = *(undefined4 **)(data_ptr + 8);\n  }\n  else if (input == (undefined4 *)&DAT_0800ab84) {\n    input = *(undefined4 **)(data_ptr + 0xc);\n  }\n  flags = *(ushort *)(input + 3);\n  result = (uint)flags;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output = 9;\n      goto LAB_08009ab0;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)variable1 != (undefined4 *)0x0) {\n        if ((undefined4 *)variable1 != input + 0x11) {\n          FUN_080091d8(output);\n        }\n        variable1 = 0;\n      }\n      *(ushort *)(input + 3) = *(ushort *)(input + 3) & 0xffdb;\n      variable2 = 0;\n      *input = variable4;\n    }\n    *(ushort *)(input + 3) = *(ushort *)(input + 3) | 8;\n  }\n  if ((variable4 == 0) && ((*(ushort *)(input + 3) & 0x280) != 0x200)) {\n    FUN_08009eac(output,input);\n  }\n  flags = *(ushort *)(input + 3);\n  result = flags & 1;\n  if ((flags & 1) == 0) {\n    if (-1 < (int)((uint)flags << 0x1e)) {\n      result = variable5;\n    }\n    variable6 = result;\n  }\n  else {\n    variable6 = 0;\n    variable7 = -variable5;\n  }\n  if (variable4 == 0) {\n    flags = *(ushort *)(input + 3);\n    result = (int)(short)flags & 0x80;\n    if (result != 0) {\nLAB_08009ab0:\n      *(ushort *)(input + 3) = flags | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "process_data_08009a80",
            "entrypoint": "0x08009a80",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009a80": "process_data_08009a80",
                "iVar1": "data_ptr",
                "param_1": "output",
                "param_2": "input",
                "param_2[0xd]": "variable1",
                "param_2[1]": "variable2",
                "param_2[2]": "variable6",
                "param_2[4]": "variable4",
                "param_2[5]": "variable5",
                "param_2[6]": "variable7",
                "uVar2": "result",
                "uVar3": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009b5c": {
            "additional_data": {
                "FUN_08008868": {
                    "1": "initialize_variable",
                    "2": "initialize_data",
                    "4": "allocate_memory"
                },
                "FUN_080091d8": {
                    "1": "cleanup_buffer",
                    "2": "cleanup",
                    "3": "cleanup_function",
                    "4": "cleanup_memory",
                    "6": "cleanup_data"
                },
                "FUN_08009b5c": {
                    "1": "process_function",
                    "13": "process_data",
                    "2": "process_binary_function"
                },
                "FUN_08009fe8": {
                    "1": "perform_operation",
                    "2": "set_parameters",
                    "4": "initialize_data",
                    "6": "initialize"
                },
                "UNRECOVERED_JUMPTABLE_00": {
                    "1": "code_var_table",
                    "3": "unrecovered_jump_table",
                    "4": "jump_table_function",
                    "7": "jump_table"
                },
                "bVar11": {
                    "1": "is_flag_true",
                    "2": "condition",
                    "3": "bool_var"
                },
                "iVar11": {
                    "1": "temp4"
                },
                "iVar2": {
                    "1": "offset",
                    "2": "variable2"
                },
                "iVar4": {
                    "1": "int_var_4"
                },
                "iVar7": {
                    "1": "variable2",
                    "2": "int_var7"
                },
                "iVar9": {
                    "1": "temp_value3",
                    "2": "temp_var",
                    "3": "loop_counter"
                },
                "param_1": {
                    "1": "count"
                },
                "pcVar8": {
                    "1": "code_var",
                    "3": "callback_function",
                    "4": "function_ptr",
                    "6": "function_pointer"
                },
                "piVar3": {
                    "1": "ptr_array1",
                    "2": "pointer3",
                    "3": "data_array",
                    "4": "pointer_var3"
                },
                "piVar4": {
                    "1": "ptr_param_array",
                    "2": "temp_pointer",
                    "3": "pointer3"
                },
                "puVar1": {
                    "1": "input_data",
                    "2": "value_pointer",
                    "4": "data_pointer",
                    "5": "pointer1"
                },
                "uVar10": {
                    "1": "temp_value2",
                    "2": "value3",
                    "3": "temp_value"
                },
                "uVar12": {
                    "1": "unknown_value12",
                    "3": "result",
                    "4": "return_value"
                },
                "uVar5": {
                    "1": "unsigned_variable5",
                    "2": "value1",
                    "3": "value",
                    "4": "ushort_var"
                },
                "uVar6": {
                    "1": "value_2",
                    "2": "value2"
                }
            },
            "called": [
                "FUN_080091d8",
                "FUN_08008868",
                "FUN_08009fe8"
            ],
            "calling": [
                "FUN_080090cc",
                "FUN_0800a18c"
            ],
            "code": "\nvoid process_data_08009b5c(void)\n\n{\n  uint *pointer1;\n  int int_var2;\n  int *pointer_var3;\n  int *pointer3;\n  uint ushort_var;\n  ushort flag;\n  int int_var7;\n  code *function_pointer;\n  int loop_counter;\n  uint temp_value;\n  code *jump_table;\n  bool flag;\n  undefined8 return_value;\n  \n  FUN_08009fe8(6);\n  jump_table = (code *)0x8009b6b;\n  return_value = FUN_08008868(1);\n  pointer_var3 = (int *)((ulonglong)return_value >> 0x20);\n  pointer1 = (uint *)return_value;\n  flag = *(ushort *)(pointer_var3 + 3);\n  ushort_var = (uint)flag;\n  if ((int)(ushort_var << 0x1c) < 0) {\n    int_var2 = pointer_var3[4];\n    if (int_var2 != 0) {\n      int_var7 = ushort_var << 0x1e;\n      flag = int_var7 != 0;\n      if (flag) {\n        int_var7 = 0;\n      }\n      loop_counter = *pointer_var3;\n      if (!flag) {\n        int_var7 = pointer_var3[5];\n      }\n      *pointer_var3 = int_var2;\n      pointer_var3[2] = int_var7;\n      for (loop_counter = loop_counter - int_var2; 0 < loop_counter; loop_counter = loop_counter - int_var7) {\n        int_var7 = (*(code *)pointer_var3[10])(pointer1,pointer_var3[8],int_var2,loop_counter);\n        if (int_var7 < 1) {\n          flag = *(ushort *)(pointer_var3 + 3);\n          goto LAB_08009c62;\n        }\n        int_var2 = int_var2 + int_var7;\n      }\n    }\n  }\n  else if (((0 < pointer_var3[1]) || (0 < pointer_var3[0x10])) &&\n          (function_pointer = (code *)pointer_var3[0xb], function_pointer != (code *)0x0)) {\n    temp_value = *pointer1;\n    *pointer1 = 0;\n    if ((flag & 0x1000) == 0) {\n      int_var2 = (*function_pointer)(pointer1,pointer_var3[8],ushort_var & 0x1000,1);\n      if ((int_var2 == -1) && (ushort_var = *pointer1, ushort_var != 0)) {\n        if ((ushort_var != 0x1d) && (ushort_var != 0x16)) {\n          *(ushort *)(pointer_var3 + 3) = *(ushort *)(pointer_var3 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jump_table)();\n          return;\n        }\n        *pointer1 = temp_value;\n        goto LAB_08009b86;\n      }\n    }\n    else {\n      int_var2 = pointer_var3[0x15];\n    }\n    if (((int)((uint)*(ushort *)(pointer_var3 + 3) << 0x1d) < 0) &&\n       (int_var2 = int_var2 - pointer_var3[1], pointer_var3[0xd] != 0)) {\n      int_var2 = int_var2 - pointer_var3[0x10];\n    }\n    int_var2 = (*(code *)pointer_var3[0xb])(pointer1,pointer_var3[8],int_var2,0);\n    flag = *(ushort *)(pointer_var3 + 3);\n    if ((int_var2 == -1) &&\n       ((0x1d < *pointer1 || (-1 < (int)((0x20400001U >> (*pointer1 & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n      *(ushort *)(pointer_var3 + 3) = flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table)(0xffffffff);\n      return;\n    }\n    pointer_var3[1] = 0;\n    *pointer_var3 = pointer_var3[4];\n    if (((int)((uint)flag << 0x13) < 0) && ((int_var2 != -1 || (*pointer1 == 0)))) {\n      pointer_var3[0x15] = int_var2;\n    }\n    pointer3 = (int *)pointer_var3[0xd];\n    *pointer1 = temp_value;\n    if (pointer3 != (int *)0x0) {\n      if (pointer3 != pointer_var3 + 0x11) {\n        FUN_080091d8(pointer1);\n      }\n      pointer_var3[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table)();\n      return;\n    }\n  }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)(0);\n  return;\n}\n\n",
            "current_name": "process_data_08009b5c",
            "entrypoint": "0x08009b5c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009b5c": "process_data_08009b5c",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar11": "flag",
                "iVar2": "int_var2",
                "iVar4": "int_var_4",
                "iVar7": "int_var7",
                "iVar9": "loop_counter",
                "pcVar8": "function_pointer",
                "piVar3": "pointer_var3",
                "piVar4": "pointer3",
                "puVar1": "pointer1",
                "uVar10": "temp_value",
                "uVar12": "return_value",
                "uVar5": "ushort_var",
                "uVar6": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009c7c": {
            "additional_data": {
                "FUN_08009c7c": {
                    "6": "process_data"
                },
                "FUN_08009d50": {
                    "1": "initialize_critical_section"
                },
                "UNRECOVERED_JUMPTABLE_00": {
                    "1": "jumptable",
                    "13": "jump_table",
                    "2": "jump_table_function"
                },
                "bVar10": {
                    "1": "flag_var",
                    "2": "b_var10",
                    "3": "is_true"
                },
                "iVar2": {
                    "1": "current_value",
                    "2": "var2",
                    "3": "count",
                    "5": "temp_var1",
                    "7": "var1"
                },
                "iVar6": {
                    "1": "variable2",
                    "2": "var4",
                    "3": "temp_var2",
                    "4": "var5"
                },
                "iVar8": {
                    "1": "loop_var1",
                    "2": "temp_var",
                    "4": "temp_var3",
                    "5": "var8"
                },
                "param_1": {
                    "1": "ptr_array",
                    "10": "param_array",
                    "2": "array_param",
                    "4": "pointer_array"
                },
                "param_2": {
                    "1": "info",
                    "2": "integer_array",
                    "4": "int_array",
                    "7": "param_pointer"
                },
                "pcVar7": {
                    "1": "function",
                    "18": "function_pointer",
                    "2": "func_ptr",
                    "6": "function_ptr"
                },
                "piVar3": {
                    "1": "pointer_to_var3",
                    "2": "temp_var2",
                    "3": "pointer",
                    "4": "var2",
                    "5": "pointer_var"
                },
                "uVar1": {
                    "11": "result",
                    "20": "return_value"
                },
                "uVar10": {
                    "1": "boolean",
                    "2": "bool_variable",
                    "4": "var10",
                    "6": "bool_var"
                },
                "uVar11": {
                    "1": "temp_flag"
                },
                "uVar4": {
                    "1": "temp_var1",
                    "2": "var2",
                    "4": "var3",
                    "5": "ushort_var"
                },
                "uVar5": {
                    "1": "ushort_var",
                    "2": "u_var5",
                    "4": "var4"
                },
                "uVar9": {
                    "1": "temp4",
                    "2": "uint_val",
                    "3": "temp_var4",
                    "5": "var9"
                },
                "unaff_r4": {
                    "1": "unaff_var4",
                    "2": "var1",
                    "3": "unaffected_register4",
                    "4": "unaff_r4"
                },
                "unaff_r5": {
                    "1": "unaff_param_2",
                    "2": "register5",
                    "3": "var7",
                    "4": "unaff_r5"
                }
            },
            "called": [
                "FUN_08009d50"
            ],
            "calling": [
                "FUN_0800932c"
            ],
            "code": "\nundefined4 process_data_08009c7c(uint *param_array,int *param_pointer)\n\n{\n  undefined4 return_value;\n  int var1;\n  int *pointer_var;\n  uint ushort_var;\n  ushort var4;\n  int var5;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  code *function_pointer;\n  int var8;\n  uint var9;\n  code *jump_table;\n  bool is_true;\n  \n  if (param_pointer[4] != 0) {\n    if ((param_array != (uint *)0x0) && (param_array[6] == 0)) {\n      FUN_08009d50();\n    }\n    if (param_pointer == &DAT_0800aba4) {\n      param_pointer = (int *)param_array[1];\n    }\n    else if (param_pointer == (int *)&DAT_0800abc4) {\n      param_pointer = (int *)param_array[2];\n    }\n    else if (param_pointer == (int *)&DAT_0800ab84) {\n      param_pointer = (int *)param_array[3];\n    }\n    if (*(short *)(param_pointer + 3) != 0) {\n      var4 = *(ushort *)(param_pointer + 3);\n      ushort_var = (uint)var4;\n      if ((int)(ushort_var << 0x1c) < 0) {\n        var1 = param_pointer[4];\n        if (var1 != 0) {\n          var5 = ushort_var << 0x1e;\n          is_true = var5 != 0;\n          if (is_true) {\n            var5 = 0;\n          }\n          var8 = *param_pointer;\n          if (!is_true) {\n            var5 = param_pointer[5];\n          }\n          *param_pointer = var1;\n          param_pointer[2] = var5;\n          for (var8 = var8 - var1; 0 < var8; var8 = var8 - var5) {\n            var5 = (*(code *)param_pointer[10])(param_array,param_pointer[8],var1,var8,unaff_r4,unaff_r5);\n            if (var5 < 1) {\n              var4 = *(ushort *)(param_pointer + 3);\n              goto LAB_08009c62;\n            }\n            var1 = var1 + var5;\n          }\n        }\n      }\n      else if (((0 < param_pointer[1]) || (0 < param_pointer[0x10])) &&\n              (function_pointer = (code *)param_pointer[0xb], function_pointer != (code *)0x0)) {\n        var9 = *param_array;\n        *param_array = 0;\n        if ((var4 & 0x1000) == 0) {\n          var1 = (*function_pointer)(param_array,param_pointer[8],ushort_var & 0x1000,1);\n          if ((var1 == -1) && (ushort_var = *param_array, ushort_var != 0)) {\n            if ((ushort_var != 0x1d) && (ushort_var != 0x16)) {\n              *(ushort *)(param_pointer + 3) = *(ushort *)(param_pointer + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              return_value = (*jump_table)();\n              return return_value;\n            }\n            *param_array = var9;\n            goto LAB_08009b86;\n          }\n        }\n        else {\n          var1 = param_pointer[0x15];\n        }\n        if (((int)((uint)*(ushort *)(param_pointer + 3) << 0x1d) < 0) &&\n           (var1 = var1 - param_pointer[1], param_pointer[0xd] != 0)) {\n          var1 = var1 - param_pointer[0x10];\n        }\n        var1 = (*(code *)param_pointer[0xb])(param_array,param_pointer[8],var1,0);\n        var4 = *(ushort *)(param_pointer + 3);\n        if ((var1 == -1) &&\n           ((0x1d < *param_array || (-1 < (int)((0x20400001U >> (*param_array & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n          *(ushort *)(param_pointer + 3) = var4 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          return_value = (*jump_table)(0xffffffff);\n          return return_value;\n        }\n        param_pointer[1] = 0;\n        *param_pointer = param_pointer[4];\n        if (((int)((uint)var4 << 0x13) < 0) && ((var1 != -1 || (*param_array == 0)))) {\n          param_pointer[0x15] = var1;\n        }\n        pointer_var = (int *)param_pointer[0xd];\n        *param_array = var9;\n        if (pointer_var != (int *)0x0) {\n          if (pointer_var != param_pointer + 0x11) {\n            FUN_080091d8(param_array);\n          }\n          param_pointer[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          return_value = (*jump_table)();\n          return return_value;\n        }\n      }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      return_value = (*jump_table)(0);\n      return return_value;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_08009c7c",
            "entrypoint": "0x08009c7c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009c7c": "process_data_08009c7c",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar10": "is_true",
                "iVar2": "var1",
                "iVar6": "var5",
                "iVar8": "var8",
                "param_1": "param_array",
                "param_2": "param_pointer",
                "pcVar7": "function_pointer",
                "piVar3": "pointer_var",
                "uVar1": "return_value",
                "uVar4": "ushort_var",
                "uVar5": "var4",
                "uVar9": "var9"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009cdc": {
            "additional_data": {
                "&LAB_0800a09e_1": {
                    "1": "label_pointer"
                },
                "FUN_080091c6": {
                    "1": "set_null",
                    "2": "set_memory",
                    "3": "fill_array",
                    "8": "initialize_array",
                    "9": "initialize_memory"
                },
                "FUN_08009cdc": {
                    "1": "initialize_structure",
                    "2": "initialize_data_struct",
                    "4": "initialize_data_structure",
                    "5": "initialize_function",
                    "6": "initialize_parameters",
                    "7": "initialize_data"
                },
                "LAB_0800a09e_1": {
                    "1": "label"
                },
                "param_1": {
                    "1": "output",
                    "2": "memory_array",
                    "5": "memory",
                    "9": "array"
                },
                "param_1[0x19]": {
                    "1": "data[25]"
                },
                "param_1[0xb]": {
                    "1": "data[11]"
                },
                "param_1[0xc]": {
                    "1": "data[12]"
                },
                "param_1[10]": {
                    "1": "data[10]"
                },
                "param_1[1]": {
                    "1": "data[1]"
                },
                "param_1[2]": {
                    "1": "data[2]"
                },
                "param_1[4]": {
                    "1": "data[4]"
                },
                "param_1[5]": {
                    "1": "data[5]"
                },
                "param_1[6]": {
                    "1": "data[6]"
                },
                "param_1[8]": {
                    "1": "data[8]"
                },
                "param_1[9]": {
                    "1": "data[9]"
                },
                "param_2": {
                    "1": "input_value1",
                    "10": "value",
                    "2": "init_value",
                    "3": "value1",
                    "8": "initial_value"
                },
                "param_3": {
                    "1": "array_size",
                    "11": "length",
                    "13": "size",
                    "3": "value2"
                }
            },
            "called": [
                "FUN_080091c6"
            ],
            "calling": [
                "FUN_08009d50"
            ],
            "code": "\nvoid initialize_data_08009cdc(undefined4 *array,undefined2 value,undefined2 size)\n\n{\n  *array = 0;\n  data[1] = 0;\n  data[2] = 0;\n  *(undefined2 *)(array + 3) = value;\n  data[25] = 0;\n  *(undefined2 *)((int)array + 0xe) = size;\n  data[4] = 0;\n  data[5] = 0;\n  data[6] = 0;\n  FUN_080091c6(array + 0x17,0,8);\n  data[8] = array;\n  data[9] = 0x800a021;\n  data[10] = 0x800a043;\n  data[11] = 0x800a07b;\n  data[12] = label_pointer;\n  return;\n}\n\n",
            "current_name": "initialize_data_08009cdc",
            "entrypoint": "0x08009cdc",
            "imported": false,
            "improved": true,
            "renaming": {
                "&LAB_0800a09e_1": "label_pointer",
                "FUN_08009cdc": "initialize_data_08009cdc",
                "LAB_0800a09e_1": "label",
                "param_1": "array",
                "param_1[0x19]": "data[25]",
                "param_1[0xb]": "data[11]",
                "param_1[0xc]": "data[12]",
                "param_1[10]": "data[10]",
                "param_1[1]": "data[1]",
                "param_1[2]": "data[2]",
                "param_1[4]": "data[4]",
                "param_1[5]": "data[5]",
                "param_1[6]": "data[6]",
                "param_1[8]": "data[8]",
                "param_1[9]": "data[9]",
                "param_2": "value",
                "param_3": "size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009d24": {
            "additional_data": {
                "FUN_080091c6": {
                    "1": "initialize_elements",
                    "8": "initialize_memory"
                },
                "FUN_08009270": {
                    "1": "allocate_memory_block",
                    "13": "allocate_memory"
                },
                "FUN_08009d24": {
                    "1": "allocate_memory_and_initialize",
                    "21": "initialize_data_structure",
                    "4": "initialize_array"
                },
                "iVar2": {
                    "1": "last_index",
                    "2": "index",
                    "25": "offset"
                },
                "param_1": {
                    "1": "input_param",
                    "2": "data_structure_pointer",
                    "3": "input_data",
                    "6": "data"
                },
                "param_2": {
                    "1": "block_size",
                    "2": "array_size",
                    "20": "size",
                    "3": "num_elements"
                },
                "param_3": {
                    "1": "size"
                },
                "puVar1": {
                    "1": "memory_block_ptr",
                    "2": "new_structure",
                    "3": "result"
                },
                "puVar1[0]": {
                    "1": "pointer_to_data[0]"
                },
                "puVar1[1]": {
                    "1": "pointer_to_data[1]"
                },
                "puVar1[2]": {
                    "1": "pointer_to_data[2]"
                }
            },
            "called": [
                "FUN_080091c6",
                "FUN_08009270"
            ],
            "calling": [
                "FUN_08009db0"
            ],
            "code": "\nundefined4 * initialize_data_structure_08009d24(undefined4 data,int size)\n\n{\n  undefined4 *new_array;\n  int offset;\n  \n  offset = (size + -1) * 0x68;\n  new_array = (undefined4 *)FUN_08009270(data,offset + 0x74);\n  if (new_array != (undefined4 *)0x0) {\n    *new_array = 0;\n    pointer_to_data[1] = size;\n    pointer_to_data[2] = new_array + 3;\n    FUN_080091c6(new_array + 3,0,offset + 0x68);\n  }\n  return new_array;\n}\n\n",
            "current_name": "initialize_data_structure_08009d24",
            "entrypoint": "0x08009d24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009d24": "initialize_data_structure_08009d24",
                "iVar2": "offset",
                "param_1": "data",
                "param_2": "size",
                "puVar1": "new_array",
                "puVar1[1]": "pointer_to_data[1]",
                "puVar1[2]": "pointer_to_data[2]"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009d50": {
            "additional_data": {
                "*param_1": {
                    "1": "params"
                },
                "DAT_20000094": {
                    "1": "data_var"
                },
                "FUN_08009cbd": {
                    "1": "set_data"
                },
                "FUN_08009cdc": {
                    "1": "set_function_data",
                    "2": "set_default_value",
                    "3": "set_data",
                    "4": "set_param_values",
                    "5": "set_values"
                },
                "FUN_08009d50": {
                    "1": "initialize_data_structure",
                    "17": "initialize_data",
                    "3": "initialize_function",
                    "7": "initialize_parameters"
                },
                "FUN_08009db0": {
                    "1": "initialize_variable",
                    "16": "allocate_memory",
                    "2": "get_return_value"
                },
                "param_1": {
                    "1": "function_params",
                    "2": "data_ptr",
                    "3": "data_pointer",
                    "7": "parameters",
                    "8": "data"
                },
                "param_2": {
                    "1": "index",
                    "2": "size",
                    "4": "value1",
                    "5": "value"
                },
                "param_3": {
                    "1": "var_3",
                    "4": "value2",
                    "5": "index"
                },
                "param_4": {
                    "1": "var_4",
                    "2": "value3"
                },
                "puVar2": {
                    "1": "pointer_to_dat_20000094",
                    "10": "temp_ptr",
                    "12": "pointer",
                    "3": "temp_pointer"
                },
                "uVar1": {
                    "1": "result1",
                    "23": "result",
                    "7": "return_value"
                }
            },
            "called": [
                "FUN_08009cdc",
                "FUN_08009db0"
            ],
            "calling": [
                "FUN_08009c7c",
                "FUN_080098d8",
                "FUN_0800937c",
                "FUN_0800932c",
                "FUN_08009db0",
                "FUN_08009a80"
            ],
            "code": "\nvoid initialize_data_08009d50(undefined4 *data)\n\n{\n  undefined4 result;\n  undefined4 *pointer;\n  \n  if (data[6] == 0) {\n    data[0x12] = 0;\n    data[0x13] = 0;\n    data[0x14] = 0;\n    pointer = &DAT_20000094;\n    data[10] = &LAB_08009cd0_1;\n    if (data == &DAT_20000094) {\n      pointer = (undefined4 *)0x1;\n    }\n    if (data == &DAT_20000094) {\n      data[6] = pointer;\n    }\n    result = FUN_08009db0();\n    data[1] = result;\n    result = FUN_08009db0(data);\n    data[2] = result;\n    result = FUN_08009db0(data);\n    data[3] = result;\n    FUN_08009cdc(data[1],4,0);\n    FUN_08009cdc(data[2],9,1);\n    FUN_08009cdc(data[3],0x12,2);\n    data[6] = 1;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_08009d50",
            "entrypoint": "0x08009d50",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009d50": "initialize_data_08009d50",
                "param_1": "data",
                "puVar2": "pointer",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009db0": {
            "additional_data": {
                "&DAT_20000094": {
                    "1": "data_address"
                },
                "*(undefined2 *)(piVar2 + 3)": {
                    "1": "pointer_2_data_3_value"
                },
                "*piVar2": {
                    "1": "data_variable_2"
                },
                "*ppiVar3": {
                    "1": "next_pointer"
                },
                "DAT_20000094": {
                    "1": "data_94",
                    "2": "data"
                },
                "DAT_200000ac": {
                    "1": "initialized_flag",
                    "2": "data_initialized",
                    "3": "data_flag"
                },
                "DAT_200000dc": {
                    "1": "array_data",
                    "2": "data_pointer"
                },
                "FUN_080091c6": {
                    "1": "set_defaults",
                    "2": "set_values"
                },
                "FUN_08009d24": {
                    "1": "allocate_block",
                    "12": "allocate_memory"
                },
                "FUN_08009d50": {
                    "1": "initialize_variable",
                    "10": "initialize_data",
                    "2": "initialize_global_data"
                },
                "FUN_08009db0": {
                    "1": "resolve_conflict",
                    "2": "find_valid_pointer",
                    "3": "process_data"
                },
                "param_1": {
                    "1": "function_result",
                    "2": "output_pointer",
                    "3": "error_code",
                    "6": "result"
                },
                "param_2": {
                    "1": "size_param",
                    "2": "input1",
                    "3": "arg2",
                    "5": "param_2",
                    "8": "param2"
                },
                "param_3": {
                    "1": "value2",
                    "2": "input2",
                    "3": "arg2",
                    "4": "arg3",
                    "6": "param_3",
                    "8": "param3"
                },
                "param_4": {
                    "1": "param",
                    "2": "input3",
                    "3": "arg3",
                    "4": "arg4",
                    "6": "param_4",
                    "9": "param4"
                },
                "piVar1": {
                    "1": "current_value_1",
                    "3": "current_block",
                    "4": "current_pointer"
                },
                "piVar2": {
                    "1": "sub_block",
                    "2": "current_pointer2"
                },
                "piVar2 + 0x17": {
                    "1": "first_pointer"
                },
                "piVar2 + 0xe": {
                    "1": "data_pointer_1"
                },
                "piVar2 + 3": {
                    "1": "current_element_value"
                },
                "piVar2[0x12]": {
                    "1": "eleventh_value"
                },
                "piVar2[0x13]": {
                    "1": "twelfth_value"
                },
                "piVar2[0x19]": {
                    "1": "data_variable_1"
                },
                "piVar2[0xd]": {
                    "1": "data_variable_8"
                },
                "piVar2[0xe]": {
                    "1": "data_variable_9"
                },
                "piVar2[1]": {
                    "1": "data_variable_4"
                },
                "piVar2[2]": {
                    "1": "pointer_2_data_2"
                },
                "piVar2[3]": {
                    "1": "third_value"
                },
                "piVar2[4]": {
                    "1": "pointer_2_data_4"
                },
                "piVar2[5]": {
                    "1": "pointer_2_data_5"
                },
                "piVar2[6]": {
                    "1": "data_variable_7"
                },
                "ppiVar3": {
                    "1": "double_pointer",
                    "2": "data_list"
                }
            },
            "called": [
                "FUN_080091c6",
                "FUN_08009d24",
                "FUN_08009d50"
            ],
            "calling": [
                "FUN_08009d50"
            ],
            "code": "\nint * find_initialized_pointer_08009db0(undefined4 *result,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *current_pointer;\n  int *inner_pointer;\n  int **data_list;\n  \n  if (DAT_200000ac == 0) {\n    FUN_08009d50(&DAT_20000094);\n  }\n  data_list = (int **)&DAT_200000dc;\n  do {\n    inner_pointer = data_list[2];\n    current_pointer = data_list[1];\n    while (current_pointer = (int *)((int)current_pointer + -1), -1 < (int)current_pointer) {\n      if (*(short *)(inner_pointer + 3) == 0) {\n        *(undefined2 *)((int)inner_pointer + 0xe) = 0xffff;\n        element_count = 0;\n        *(undefined2 *)(inner_pointer + 3) = 1;\n        *inner_pointer = 0;\n        pointer_2_data_2 = 0;\n        pointer_2_data_1 = 0;\n        pointer_2_data_4 = 0;\n        pointer_2_data_5 = 0;\n        pointer_2_data_6 = 0;\n        FUN_080091c6(inner_pointer + 0x17,0,8,1,param4);\n        pointer_2_data_d = 0;\n        pointer_2_data_e = 0;\n        pointer_2_data_12 = 0;\n        pointer_2_data_13 = 0;\n        return inner_pointer;\n      }\n      inner_pointer = inner_pointer + 0x1a;\n    }\n    if (*data_list == (int *)0x0) {\n      current_pointer = (int *)FUN_08009d24(result,4);\n      *data_list = current_pointer;\n      if (current_pointer == (int *)0x0) {\n        *result = 0xc;\n        return (int *)0x0;\n      }\n    }\n    data_list = (int **)*data_list;\n  } while( true );\n}\n\n",
            "current_name": "find_initialized_pointer_08009db0",
            "entrypoint": "0x08009db0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009db0": "find_initialized_pointer_08009db0",
                "param_1": "result",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "current_pointer",
                "piVar2": "inner_pointer",
                "piVar2[0x12]": "pointer_2_data_12",
                "piVar2[0x13]": "pointer_2_data_13",
                "piVar2[0x19]": "element_count",
                "piVar2[0xd]": "pointer_2_data_d",
                "piVar2[0xe]": "pointer_2_data_e",
                "piVar2[1]": "pointer_2_data_1",
                "piVar2[2]": "pointer_2_data_2",
                "piVar2[4]": "pointer_2_data_4",
                "piVar2[5]": "pointer_2_data_5",
                "piVar2[6]": "pointer_2_data_6",
                "ppiVar3": "data_list"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009e64": {
            "additional_data": {
                "FUN_08009e64": {
                    "1": "check_flags",
                    "2": "calculate_permissions",
                    "6": "check_permissions",
                    "7": "check_file_permissions"
                },
                "auStack_4c": {
                    "1": "temporary_buffer",
                    "2": "aux_stack",
                    "3": "temp_stack",
                    "4": "buffer",
                    "6": "temp_buffer"
                },
                "iVar1": {
                    "1": "result_code",
                    "17": "result",
                    "3": "return_value",
                    "6": "status"
                },
                "local_48": {
                    "1": "header_value",
                    "2": "file_attributes",
                    "3": "file_permissions",
                    "4": "flags",
                    "5": "local_value"
                },
                "param_1": {
                    "1": "input_pointer",
                    "2": "base_address",
                    "3": "input_data",
                    "4": "file_path",
                    "6": "param1"
                },
                "param_2": {
                    "1": "arg2",
                    "2": "header_offset",
                    "3": "offset",
                    "4": "file_info",
                    "5": "file_header",
                    "6": "param2"
                },
                "param_3": {
                    "1": "permissions",
                    "2": "permission_status",
                    "3": "output_param",
                    "5": "result"
                },
                "param_4": {
                    "1": "file_type_ptr",
                    "2": "is_executable",
                    "3": "output_result",
                    "6": "result"
                },
                "uVar2": {
                    "1": "final_permission",
                    "5": "permission_flag",
                    "7": "permission"
                }
            },
            "called": [
                "FUN_0800a0ec"
            ],
            "calling": [
                "FUN_08009eac"
            ],
            "code": "\nundefined4 check_file_permissions_08009e64(undefined4 param1,int param2,undefined4 *result,uint *result)\n\n{\n  int result;\n  undefined4 permission;\n  undefined temp_buffer [4];\n  uint local_value;\n  \n  if ((*(short *)(param2 + 0xe) < 0) ||\n     (result = FUN_0800a0ec(param1,(int)*(short *)(param2 + 0xe),temp_buffer), result < 0)) {\n    *result = 0;\n    if ((int)((uint)*(ushort *)(param2 + 0xc) << 0x18) < 0) {\n      permission = 0x40;\n      goto LAB_08009ea4;\n    }\n  }\n  else {\n    *result = (uint)((local_value & 0xf000) == 0x2000);\n  }\n  permission = 0x400;\nLAB_08009ea4:\n  *result = permission;\n  return 0;\n}\n\n",
            "current_name": "check_file_permissions_08009e64",
            "entrypoint": "0x08009e64",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009e64": "check_file_permissions_08009e64",
                "auStack_4c": "temp_buffer",
                "iVar1": "result",
                "local_48": "local_value",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "result",
                "param_4": "result",
                "uVar2": "permission"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009eac": {
            "additional_data": {
                "FUN_08009270": {
                    "1": "check_validity"
                },
                "FUN_08009e64": {
                    "1": "process_data"
                },
                "FUN_08009eac": {
                    "1": "update_parameters",
                    "12": "process_data",
                    "5": "process_function"
                },
                "FUN_0800a110": {
                    "1": "handle_error"
                },
                "iVar2": {
                    "1": "result_2",
                    "2": "result",
                    "5": "status",
                    "7": "return_value"
                },
                "local_14": {
                    "1": "local_value_2",
                    "2": "local_array",
                    "3": "temp_var2",
                    "4": "local_param2"
                },
                "local_18": {
                    "1": "temp_param_1",
                    "2": "local_data",
                    "3": "temp_var1",
                    "4": "local_param1",
                    "5": "local_value1"
                },
                "param_1": {
                    "1": "data_offset",
                    "2": "data_size",
                    "3": "input_data",
                    "5": "input_param",
                    "9": "input_value"
                },
                "param_2": {
                    "1": "arg2",
                    "2": "param_array",
                    "3": "output_data",
                    "4": "data",
                    "5": "input_array"
                },
                "uVar1": {
                    "1": "result_1",
                    "18": "result",
                    "2": "result_var1",
                    "5": "result1"
                }
            },
            "called": [
                "FUN_08009270",
                "FUN_0800a110",
                "FUN_08009e64"
            ],
            "calling": [
                "FUN_08009a80"
            ],
            "code": "\nvoid process_data_08009eac(int input_value,int *input_array)\n\n{\n  ushort result;\n  int return_value;\n  int local_value1;\n  int *local_param2;\n  \n  if (-1 < (int)((uint)*(ushort *)(input_array + 3) << 0x1e)) {\n    local_value1 = input_value;\n    local_param2 = input_array;\n    result = FUN_08009e64(input_value,input_array,&local_value1,&local_param2);\n    return_value = FUN_08009270(input_value,local_value1);\n    if (return_value != 0) {\n      *(undefined **)(input_value + 0x28) = &LAB_08009cd0_1;\n      *input_array = return_value;\n      *(ushort *)(input_array + 3) = *(ushort *)(input_array + 3) | 0x80;\n      input_array[4] = return_value;\n      input_array[5] = local_value1;\n      if ((local_param2 != (int *)0x0) &&\n         (return_value = FUN_0800a110(input_value,(int)*(short *)((int)input_array + 0xe)), return_value != 0)) {\n        *(ushort *)(input_array + 3) = *(ushort *)(input_array + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(input_array + 3) = result | *(ushort *)(input_array + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(input_array + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(input_array + 3) = *(ushort *)(input_array + 3) & 0xfffc | 2;\n  }\n  *input_array = (int)input_array + 0x47;\n  input_array[4] = (int)input_array + 0x47;\n  input_array[5] = 1;\n  return;\n}\n\n",
            "current_name": "process_data_08009eac",
            "entrypoint": "0x08009eac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009eac": "process_data_08009eac",
                "iVar2": "return_value",
                "local_14": "local_param2",
                "local_18": "local_value1",
                "param_1": "input_value",
                "param_2": "input_array",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009f2c": {
            "additional_data": {
                "FUN_08009f2c": {
                    "1": "find_char_sequence",
                    "19": "find_character",
                    "2": "find_char",
                    "6": "find_first_occurrence"
                },
                "param_1": {
                    "1": "search_string",
                    "2": "input_string",
                    "24": "string",
                    "4": "str"
                },
                "param_2": {
                    "1": "character_to_find",
                    "17": "character",
                    "3": "target",
                    "4": "target_char",
                    "5": "target_character"
                },
                "param_3": {
                    "22": "length",
                    "9": "string_length"
                },
                "pcVar1": {
                    "1": "current_char_ptr",
                    "11": "current_char",
                    "2": "current_position",
                    "4": "current",
                    "5": "current_character"
                },
                "pcVar2": {
                    "1": "found_char_ptr",
                    "11": "next_char",
                    "2": "next_position",
                    "4": "next",
                    "5": "next_character"
                }
            },
            "called": [],
            "calling": [
                "FUN_0800937c",
                "FUN_08009698"
            ],
            "code": "\nchar * find_character_08009f2c(char *string,char character,int length)\n\n{\n  char *current_char;\n  char *next_char;\n  \n  current_char = string;\n  do {\n    next_char = current_char;\n    if (next_char == string + length) {\n      return (char *)0x0;\n    }\n    current_char = next_char + 1;\n  } while (*next_char != character);\n  return next_char;\n}\n\n",
            "current_name": "find_character_08009f2c",
            "entrypoint": "0x08009f2c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009f2c": "find_character_08009f2c",
                "param_1": "string",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "current_char",
                "pcVar2": "next_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009f48": {
            "called": [],
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "code": "\nvoid FUNC_08009f48(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08009f48",
            "entrypoint": "0x08009f48",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08009f48": "FUNC_08009f48"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08009f4a": {
            "called": [],
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "code": "\nvoid FUNC_08009f4a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08009f4a",
            "entrypoint": "0x08009f4a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08009f4a": "FUNC_08009f4a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08009fe8": {
            "additional_data": {
                "DAT_20000090": {
                    "1": "operation_list"
                },
                "DAT_20000a38": {
                    "1": "error_code"
                },
                "FUN_0800886c": {
                    "1": "execute_func_with_params",
                    "3": "perform_operation"
                },
                "FUN_08009fe8": {
                    "1": "extract_function",
                    "12": "execute_function",
                    "2": "process_param",
                    "3": "execute_operation"
                },
                "iVar3": {
                    "1": "entry",
                    "3": "index",
                    "4": "temp_var",
                    "5": "value"
                },
                "in_lr": {
                    "1": "register_value",
                    "4": "return_address",
                    "5": "link_register"
                },
                "param_1": {
                    "1": "input_parameter",
                    "2": "input_param",
                    "3": "operation_index",
                    "5": "input",
                    "7": "index"
                },
                "pcVar4": {
                    "1": "callback_ptr",
                    "11": "function_ptr",
                    "2": "callback_function",
                    "3": "function_pointer",
                    "5": "function"
                },
                "piVar1": {
                    "1": "command_array",
                    "2": "result",
                    "3": "function_list",
                    "4": "function_array",
                    "6": "data_ptr"
                },
                "puVar5": {
                    "1": "data_array_ptr",
                    "2": "function_pointer",
                    "3": "data_ptr_ptr"
                },
                "thunk_FUN_0800887c": {
                    "1": "get_thunk_result",
                    "2": "get_initial_value"
                },
                "uVar2": {
                    "1": "return_value",
                    "23": "result",
                    "7": "thunk_result"
                },
                "unaff_r4": {
                    "1": "parameter_1"
                },
                "unaff_r5": {
                    "1": "parameter_2"
                }
            },
            "called": [
                "thunk_FUN_0800887c",
                "FUN_0800886c"
            ],
            "calling": [
                "FUN_08009b5c"
            ],
            "code": "\nint execute_function_08009fe8(uint index)\n\n{\n  int *data_ptr;\n  undefined4 result;\n  int value;\n  code *function_ptr;\n  undefined4 arg4;\n  undefined4 arg5;\n  undefined4 link_register;\n  undefined4 *function_array_ptr;\n  \n  data_ptr = DAT_20000090;\n  function_array_ptr = &DAT_20000090;\n  if (0x1f < index) {\n    *DAT_20000090 = 0x16;\n    return -1;\n  }\n  value = DAT_20000090[0x11];\n  if ((value != 0) && (function_ptr = *(code **)(value + index * 4), function_ptr != (code *)0x0)) {\n    if (function_ptr != (code *)0x1) {\n      if (function_ptr == (code *)0xffffffff) {\n        *DAT_20000090 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(value + index * 4) = 0;\n      (*function_ptr)(index);\n    }\n    return 0;\n  }\n  result = thunk_FUN_0800887c(DAT_20000090);\n  DAT_20000a38 = 0;\n  value = FUN_0800886c(result,index,index,0,function_array_ptr,arg4,arg5,link_register);\n  if ((value == -1) && (DAT_20000a38 != 0)) {\n    *data_ptr = DAT_20000a38;\n  }\n  return value;\n}\n\n",
            "current_name": "execute_function_08009fe8",
            "entrypoint": "0x08009fe8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009fe8": "execute_function_08009fe8",
                "iVar3": "value",
                "in_lr": "link_register",
                "param_1": "index",
                "pcVar4": "function_ptr",
                "piVar1": "data_ptr",
                "puVar5": "function_array_ptr",
                "uVar2": "result",
                "unaff_r4": "arg4",
                "unaff_r5": "arg5"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a020": {
            "additional_data": {
                "FUN_0800a020": {
                    "1": "update_parameter_value",
                    "15": "update_value",
                    "3": "update_value_based_on_condition",
                    "4": "update_values",
                    "5": "update_data"
                },
                "FUN_0800a168": {
                    "1": "retrieve_value_from_data_pointer"
                },
                "bVar3": {
                    "2": "is_positive_result",
                    "29": "is_positive"
                },
                "iVar1": {
                    "1": "return_value",
                    "29": "result"
                },
                "param_1": {
                    "1": "input_param",
                    "2": "param",
                    "5": "data",
                    "8": "input_array"
                },
                "param_2": {
                    "1": "arg2",
                    "11": "offset",
                    "2": "struct_address",
                    "6": "base_address"
                },
                "uVar2": {
                    "1": "adjusted_value",
                    "11": "new_value",
                    "16": "updated_value",
                    "2": "new_data"
                }
            },
            "called": [
                "FUN_0800a168"
            ],
            "calling": [],
            "code": "\nvoid update_value_0800a020(undefined4 input_array,int offset)\n\n{\n  int result;\n  uint updated_value;\n  bool is_positive;\n  \n  result = FUN_0800a168(input_array,(int)*(short *)(offset + 0xe));\n  is_positive = -1 < result;\n  if (is_positive) {\n    updated_value = *(int *)(offset + 0x54) + result;\n  }\n  else {\n    updated_value = *(ushort *)(offset + 0xc) & 0xffffefff;\n  }\n  if (is_positive) {\n    *(uint *)(offset + 0x54) = updated_value;\n  }\n  if (!is_positive) {\n    *(short *)(offset + 0xc) = (short)updated_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_value_0800a020",
            "entrypoint": "0x0800a020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a020": "update_value_0800a020",
                "bVar3": "is_positive",
                "iVar1": "result",
                "param_1": "input_array",
                "param_2": "offset",
                "uVar2": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a042": {
            "additional_data": {
                "*(short *)(param_2 + 0xe)": {
                    "1": "index"
                },
                "*(ushort *)(param_2 + 0xc)": {
                    "1": "value",
                    "2": "value1"
                },
                "*(ushort *)(param_2 + 0xe)": {
                    "1": "value2"
                },
                "DAT_20000a38": {
                    "1": "result"
                },
                "FUN_0800885c": {
                    "1": "calculate_value"
                },
                "FUN_0800a042": {
                    "1": "update_data_and_call_subfunctions",
                    "17": "process_data",
                    "2": "update_data"
                },
                "FUN_0800a130": {
                    "1": "perform_operation",
                    "2": "process_data_helper",
                    "3": "process_data"
                },
                "iVar1": {
                    "1": "sub_function_result",
                    "18": "result",
                    "8": "return_value"
                },
                "in_lr": {
                    "1": "param_7",
                    "2": "unused3",
                    "4": "unused_var3"
                },
                "param_1": {
                    "1": "result_array",
                    "16": "output_array",
                    "2": "output",
                    "3": "result"
                },
                "param_2": {
                    "1": "input_data",
                    "13": "input_array",
                    "2": "input_ptr",
                    "3": "data"
                },
                "param_3": {
                    "1": "param",
                    "14": "param_a",
                    "3": "param_3",
                    "8": "param1"
                },
                "param_4": {
                    "1": "value2",
                    "14": "param_b",
                    "3": "param_4",
                    "8": "param2"
                },
                "unaff_r4": {
                    "1": "temp_ptr1",
                    "2": "unused1",
                    "5": "unused_var1"
                },
                "unaff_r5": {
                    "1": "constant2",
                    "2": "unused2",
                    "5": "unused_var2",
                    "6": "unused_param2"
                }
            },
            "called": [
                "FUN_0800885c",
                "FUN_0800a130"
            ],
            "calling": [],
            "code": "\nvoid process_data_0800a042(int *output_array,int input_array,undefined4 param_a,undefined4 param_b)\n\n{\n  int result;\n  undefined4 unused_param1;\n  undefined4 unused_param2;\n  undefined4 unused_param3;\n  \n  if ((int)((uint)*(ushort *)(input_array + 0xc) << 0x17) < 0) {\n    FUN_0800a130(output_array,(int)*(short *)(input_array + 0xe),0,2);\n  }\n  *(ushort *)(input_array + 0xc) = *(ushort *)(input_array + 0xc) & 0xefff;\n  DAT_20000a38 = 0;\n  result = FUN_0800885c((int)*(short *)(input_array + 0xe),param_a,param_b,param_b,param_b,unused_param1,\n                       unused_param2,unused_param3);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *output_array = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "current_name": "process_data_0800a042",
            "entrypoint": "0x0800a042",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a042": "process_data_0800a042",
                "iVar1": "result",
                "in_lr": "unused_param3",
                "param_1": "output_array",
                "param_2": "input_array",
                "param_3": "param_a",
                "param_4": "param_b",
                "unaff_r4": "unused_param1",
                "unaff_r5": "unused_param2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a07a": {
            "additional_data": {
                "FUN_0800a07a": {
                    "1": "process_function",
                    "12": "update_status",
                    "2": "process_data",
                    "3": "update_parameter_value",
                    "4": "update_flag"
                },
                "FUn_0800a130": {
                    "1": "find_value"
                },
                "bVar3": {
                    "1": "is_return_value_minus_one",
                    "2": "is_result_minus_one",
                    "20": "is_error",
                    "3": "is_negative"
                },
                "iVar1": {
                    "1": "return_value",
                    "30": "result"
                },
                "param_1": {
                    "1": "input_pointer",
                    "2": "status_ptr",
                    "3": "param_ptr",
                    "6": "param1",
                    "7": "status"
                },
                "param_2": {
                    "1": "param_addr",
                    "10": "data",
                    "2": "data_pointer",
                    "3": "data_ptr",
                    "6": "param2"
                },
                "uVar2": {
                    "1": "flags",
                    "16": "updated_value",
                    "2": "updated_flag",
                    "3": "modified_flag",
                    "5": "modified_value"
                }
            },
            "called": [
                "FUN_0800a130"
            ],
            "calling": [],
            "code": "\nvoid update_status_0800a07a(undefined4 status,int data)\n\n{\n  int result;\n  ushort updated_value;\n  bool is_error;\n  \n  result = FUN_0800a130(status,(int)*(short *)(data + 0xe));\n  is_error = result == -1;\n  if (is_error) {\n    updated_value = *(ushort *)(data + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(data + 0x54) = result;\n    updated_value = *(ushort *)(data + 0xc) | 0x1000;\n  }\n  if (is_error) {\n    *(ushort *)(data + 0xc) = updated_value;\n  }\n  if (!is_error) {\n    *(ushort *)(data + 0xc) = updated_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_status_0800a07a",
            "entrypoint": "0x0800a07a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a07a": "update_status_0800a07a",
                "bVar3": "is_error",
                "iVar1": "result",
                "param_1": "status",
                "param_2": "data",
                "uVar2": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a0ec": {
            "additional_data": {
                "DAT_20000a38": {
                    "1": "data_value",
                    "2": "updated_value"
                },
                "FUN_08008846": {
                    "1": "perform_operation"
                },
                "FUN_0800a0ec": {
                    "1": "update_param_if_return_value_negative",
                    "2": "update_parameter_value",
                    "3": "process_function"
                },
                "iVar1": {
                    "1": "call_result",
                    "10": "return_value",
                    "16": "result",
                    "2": "function_result"
                },
                "param_1": {
                    "1": "parameter",
                    "2": "result_pointer",
                    "3": "result_ptr",
                    "4": "output",
                    "8": "result"
                },
                "param_2": {
                    "1": "input_param_1",
                    "3": "input_value1",
                    "6": "input_param1",
                    "9": "input1"
                },
                "param_3": {
                    "1": "input_param_2",
                    "3": "value2",
                    "5": "input_2",
                    "6": "input_param2",
                    "9": "input2"
                },
                "param_4": {
                    "1": "input_2",
                    "3": "input_value3",
                    "5": "input_3",
                    "6": "input_param3",
                    "9": "input3"
                }
            },
            "called": [
                "FUN_08008846"
            ],
            "calling": [
                "FUN_08009e64"
            ],
            "code": "\nvoid process_function_0800a0ec(int *result,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008846(input1,input2,input2,0,input3);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "current_name": "process_function_0800a0ec",
            "entrypoint": "0x0800a0ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a0ec": "process_function_0800a0ec",
                "iVar1": "result",
                "param_1": "result",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a110": {
            "additional_data": {
                "DAT_20000a38": {
                    "1": "saved_value"
                },
                "FUN_0800a110": {
                    "1": "reverse_and_store_value",
                    "2": "process_data",
                    "3": "update_param_value",
                    "4": "extract_data"
                },
                "iVar1": {
                    "1": "error_status",
                    "18": "result",
                    "4": "function_result",
                    "6": "return_value"
                },
                "param_1": {
                    "1": "value_ptr",
                    "3": "result_ptr",
                    "4": "output",
                    "6": "result"
                },
                "param_2": {
                    "1": "value",
                    "13": "input_value",
                    "4": "input_data",
                    "6": "input",
                    "7": "input_param"
                }
            },
            "called": [
                "FUN_08008850"
            ],
            "calling": [
                "FUN_08009eac"
            ],
            "code": "\nvoid extract_data_0800a110(int *result,undefined4 input_value)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008850(input_value);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "current_name": "extract_data_0800a110",
            "entrypoint": "0x0800a110",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a110": "extract_data_0800a110",
                "iVar1": "result",
                "param_1": "result",
                "param_2": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a130": {
            "additional_data": {
                "DAT_20000a38": {
                    "1": "stored_value",
                    "2": "temp_value"
                },
                "FUN_08008854": {
                    "1": "get_error_code"
                },
                "FUN_0800a130": {
                    "1": "reverse_and_copy_data",
                    "2": "update_parameter_value",
                    "4": "extract_and_assign_value",
                    "5": "update_param_if_error"
                },
                "iVar1": {
                    "1": "status",
                    "15": "result",
                    "2": "function_result",
                    "6": "return_value"
                },
                "param_1": {
                    "1": "result_pointer",
                    "2": "output_variable",
                    "5": "output_value",
                    "6": "output",
                    "7": "result"
                },
                "param_2": {
                    "1": "param_2",
                    "2": "input_arg1",
                    "3": "input_1",
                    "6": "input1",
                    "7": "arg1"
                },
                "param_3": {
                    "1": "value2",
                    "2": "input_param_2",
                    "3": "input_2",
                    "6": "input2",
                    "7": "arg2"
                },
                "param_4": {
                    "1": "input4",
                    "2": "input_param_3",
                    "3": "input_3",
                    "6": "input3",
                    "7": "arg3"
                }
            },
            "called": [
                "FUN_08008854"
            ],
            "calling": [
                "FUN_0800a07a",
                "FUN_0800a042"
            ],
            "code": "\nvoid update_param_if_error_0800a130(int *result,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008854(arg1,arg2,arg3,arg3,arg3);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "current_name": "update_param_if_error_0800a130",
            "entrypoint": "0x0800a130",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a130": "update_param_if_error_0800a130",
                "iVar1": "result",
                "param_1": "result",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a154": {
            "additional_data": {
                "*(int *)(param_2 + -4)": {
                    "1": "prev_value"
                },
                "*(int *)(param_2 + iVar1)": {
                    "2": "next_value"
                },
                "FUN_0800a154": {
                    "1": "calculate_sum_with_offset",
                    "16": "calculate_sum",
                    "2": "calculate_updated_value",
                    "3": "calculate_modified_value",
                    "5": "calculate_result"
                },
                "array + arrayLengthMinusFour": {
                    "1": "last_element"
                },
                "arrayLengthMinusFour + lastElement": {
                    "1": "updated_sum"
                },
                "iVar1": {
                    "1": "total",
                    "11": "sum",
                    "2": "offset",
                    "3": "modified_value",
                    "4": "result"
                },
                "param_1": {
                    "1": "input_param",
                    "2": "input1",
                    "3": "param",
                    "7": "result"
                },
                "param_2": {
                    "1": "array_param",
                    "2": "input_value",
                    "3": "array_address",
                    "5": "input",
                    "7": "array"
                },
                "param_2 + -4": {
                    "1": "array_length_minus_four"
                }
            },
            "called": [],
            "calling": [
                "FUN_08009908"
            ],
            "code": "\nint calculate_sum_0800a154(undefined4 input,int array)\n\n{\n  int sum;\n  \n  sum = *(int *)(array + -4) + -4;\n  if (*(int *)(array + -4) < 0) {\n    sum = sum + *(int *)(array + sum);\n  }\n  return sum;\n}\n\n",
            "current_name": "calculate_sum_0800a154",
            "entrypoint": "0x0800a154",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a154": "calculate_sum_0800a154",
                "iVar1": "sum",
                "param_1": "input",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a168": {
            "additional_data": {
                "DAT_20000a38": {
                    "1": "extracted_data"
                },
                "FUN_0800a168": {
                    "1": "extract_and_assign_data",
                    "2": "extract_data",
                    "4": "update_param_if_error",
                    "5": "extract_error_code"
                },
                "iVar1": {
                    "1": "status",
                    "2": "function_result",
                    "8": "result"
                },
                "param_1": {
                    "1": "out_param",
                    "13": "result",
                    "2": "result_pointer",
                    "3": "output_value"
                },
                "param_2": {
                    "1": "input_value1",
                    "10": "arg1",
                    "3": "value1",
                    "5": "input1",
                    "7": "input_1"
                },
                "param_3": {
                    "1": "input_value2",
                    "10": "arg2",
                    "3": "value2",
                    "5": "input2",
                    "7": "input_2"
                },
                "param_4": {
                    "1": "input_value3",
                    "10": "arg3",
                    "3": "value3",
                    "5": "input3",
                    "7": "input_3"
                }
            },
            "called": [
                "FUN_08008858"
            ],
            "calling": [
                "FUN_0800a020"
            ],
            "code": "\nvoid extract_error_code_0800a168(int *result,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008858(arg1,arg2,arg3,arg3,arg3);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "current_name": "extract_error_code_0800a168",
            "entrypoint": "0x0800a168",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a168": "extract_error_code_0800a168",
                "iVar1": "result",
                "param_1": "result",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a18c": {
            "additional_data": {
                "DAT_20000994": {
                    "1": "variable_l"
                },
                "DAT_20000998": {
                    "1": "variable_k"
                },
                "DAT_2000099c": {
                    "1": "variable_j"
                },
                "DAT_200009a0": {
                    "1": "variable_i"
                },
                "DAT_200009a4": {
                    "1": "variable_h"
                },
                "DAT_200009a8": {
                    "1": "variable_g"
                },
                "DAT_200009ac": {
                    "1": "variable_f"
                },
                "DAT_200009b0": {
                    "1": "variable_e"
                },
                "DAT_200009b4": {
                    "1": "variable_d"
                },
                "DAT_200009b8": {
                    "1": "variable_c"
                },
                "DAT_200009bc": {
                    "1": "variable_b"
                },
                "DAT_200009c0": {
                    "1": "variable_a"
                },
                "FUN_08009b5c": {
                    "1": "perform_preprocessing",
                    "2": "call_sub_function",
                    "4": "perform_initialization"
                },
                "FUN_0800a18c": {
                    "1": "update_settings",
                    "7": "initialize_data",
                    "8": "initialize_variables"
                },
                "UNRECOVERED_JUMPTABLE": {
                    "1": "next_function",
                    "2": "jumptable",
                    "6": "jump_table"
                }
            },
            "called": [
                "FUN_08009b5c"
            ],
            "calling": [
                "FUN_08009084"
            ],
            "code": "\nvoid initialize_variables_0800a18c(void)\n\n{\n  code *jump_table;\n  \n  jump_table = initialize_variables_0800a18c;\n  FUN_08009b5c();\n  if (-1 < DAT_200009c0 << 0x1f) {\n    DAT_200009c0 = 1;\n  }\n  if (-1 < DAT_200009bc << 0x1f) {\n    DAT_200009bc = 1;\n  }\n  if (-1 < DAT_200009b8 << 0x1f) {\n    DAT_200009b8 = 1;\n  }\n  if (-1 < DAT_200009b4 << 0x1f) {\n    DAT_200009b4 = 1;\n  }\n  if (-1 < DAT_200009b0 << 0x1f) {\n    DAT_200009b0 = 1;\n  }\n  if (-1 < DAT_200009ac << 0x1f) {\n    DAT_200009ac = 1;\n  }\n  if (-1 < DAT_200009a8 << 0x1f) {\n    DAT_200009a8 = 1;\n  }\n  if (-1 < DAT_200009a4 << 0x1f) {\n    DAT_200009a4 = 1;\n  }\n  if (-1 < DAT_200009a0 << 0x1f) {\n    DAT_200009a0 = 1;\n  }\n  if (-1 < DAT_2000099c << 0x1f) {\n    DAT_2000099c = 1;\n  }\n  if (-1 < DAT_20000998 << 0x1f) {\n    DAT_20000998 = 1;\n  }\n  if (-1 < DAT_20000994 << 0x1f) {\n    DAT_20000994 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x0800a224. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "initialize_variables_0800a18c",
            "entrypoint": "0x0800a18c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a18c": "initialize_variables_0800a18c",
                "UNRECOVERED_JUMPTABLE": "jump_table"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a424": {
            "called": [],
            "calling": [
                "FUN_08009148",
                "FUN_0800010c"
            ],
            "code": "\nvoid FUNC_0800a424(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800a424",
            "entrypoint": "0x0800a424",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800a424": "FUNC_0800a424"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800a430": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_0800a430(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800a430",
            "entrypoint": "0x0800a430",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800a430": "FUNC_0800a430"
            },
            "skipped": true,
            "tags": []
        },
        "entry": {
            "called": [
                "FUN_080073ec",
                "FUN_08009148",
                "FUN_08008f1c"
            ],
            "calling": [],
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_200000f4; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800ac18);\n  }\n  for (puVar2 = &DAT_200000f4; puVar2 < &DAT_20000a3c; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_080073ec();\n  FUN_08009148();\n  UNRECOVERED_JUMPTABLE = (code *)0x800368a;\n  FUN_08008f1c();\n                    /* WARNING: Could not recover jumptable at 0x0800368a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "current_name": "entry",
            "entrypoint": "0x08003658",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "thunk_FUN_0800887c": {
            "additional_data": {
                "FUN_0800887c": {
                    "1": "get_status_internal",
                    "2": "calculate_value",
                    "3": "calculate_return_value",
                    "6": "calculate_result"
                },
                "thunk_FUN_0800887c": {
                    "1": "initialize_program",
                    "3": "calculate_result",
                    "4": "get_one",
                    "5": "get_status",
                    "7": "get_result"
                },
                "undefined4": {
                    "1": "uint32_t"
                }
            },
            "called": [
                "FUN_0800887c"
            ],
            "calling": [
                "FUN_08009fe8"
            ],
            "code": "\nuint32_t get_result_thunk_0800887c(void)\n\n{\n  return 1;\n}\n\n",
            "current_name": "get_result_thunk_0800887c",
            "entrypoint": "0x0800a01c",
            "imported": false,
            "improved": true,
            "renaming": {
                "thunk_FUN_0800887c": "get_result_thunk_0800887c",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000188",
            "FUN_0800018c",
            "FUN_08000214",
            "FUN_0800021a",
            "FUN_08000488",
            "FUN_080004d4",
            "FUN_08000500",
            "FUN_08000588",
            "FUN_080005e0",
            "FUN_080005f8",
            "FUN_08000a64",
            "FUN_08000aec",
            "FUN_08000be8",
            "FUN_08000ef8",
            "FUN_08001b48",
            "FUN_08001bf8",
            "FUN_08001c08",
            "FUN_08001c18",
            "FUN_08001cd0",
            "FUN_080022f8",
            "FUN_08002400",
            "FUN_0800242c",
            "FUN_08002578",
            "FUN_08002580",
            "FUN_080025ac",
            "FUN_08002634",
            "FUN_08002644",
            "FUN_0800267c",
            "FUN_080026b0",
            "FUN_080026f8",
            "FUN_0800270c",
            "FUN_08002720",
            "FUN_080027f0",
            "FUN_0800288c",
            "FUN_0800291c",
            "FUN_08002948",
            "FUN_08002968",
            "FUN_08002a1c",
            "FUN_08002a26",
            "FUN_08002a30",
            "FUN_08002a58",
            "FUN_08002ac0",
            "FUN_08002acc",
            "FUN_08002b68",
            "FUN_08002c00",
            "FUN_08002c14",
            "FUN_08002c1e",
            "FUN_08002c2c",
            "FUN_08002ce0",
            "FUN_08002dbc",
            "FUN_08002ddc",
            "FUN_08002df6",
            "FUN_08002e26",
            "FUN_08002e44",
            "FUN_08002ec4",
            "FUN_08002ed2",
            "FUN_08002ef2",
            "FUN_08002efe",
            "FUN_08002f0a",
            "FUN_08002f14",
            "FUN_08002f1e",
            "FUN_08002f2c",
            "FUN_08002f84",
            "FUN_08002f94",
            "FUN_08002fa0",
            "FUN_08002fa8",
            "FUN_08002fba",
            "FUN_08002fc2",
            "FUN_08002fca",
            "FUN_08003002",
            "FUN_08003048",
            "FUN_0800307a",
            "FUN_08003106",
            "FUN_0800314e",
            "FUN_08003154",
            "FUN_08003158",
            "FUN_0800319e",
            "FUN_080031ce",
            "FUN_0800322c",
            "FUN_0800325a",
            "FUN_080032a2",
            "FUN_080032bc",
            "FUN_08003306",
            "FUN_08003346",
            "FUN_08003350",
            "FUN_08003366",
            "FUN_08003370",
            "FUN_08003376",
            "FUN_080033a8",
            "FUN_080033cc",
            "FUN_0800344a",
            "FUN_08003474",
            "FUN_080035b8",
            "FUN_080036a2",
            "FUN_080036ac",
            "FUN_080036d8",
            "FUN_08003724",
            "FUN_08003748",
            "FUN_08003760",
            "FUN_0800376c",
            "FUN_080038dc",
            "FUN_080038e4",
            "FUN_08003a1c",
            "FUN_08003a20",
            "FUN_08003aa0",
            "FUN_08003b8c",
            "FUN_08003bd8",
            "FUN_08003ce8",
            "FUN_08003de4",
            "FUN_08003e20",
            "FUN_08003f0c",
            "FUN_08003f30",
            "FUN_08003f94",
            "FUN_08003fb0",
            "FUN_08003fd8",
            "FUN_08004004",
            "FUN_08004024",
            "FUN_08004046",
            "FUN_08004050",
            "FUN_080040e8",
            "FUN_080042d4",
            "FUN_080042e2",
            "FUN_080042f0",
            "FUN_0800430c",
            "FUN_08004396",
            "FUN_080043a2",
            "FUN_0800457c",
            "FUN_0800459c",
            "FUN_080045c0",
            "FUN_08004728",
            "FUN_080047f4",
            "FUN_080048c8",
            "FUN_08004954",
            "FUN_080049e0",
            "FUN_08004a24",
            "FUN_08004a76",
            "FUN_08004ac2",
            "FUN_08004aec",
            "FUN_08004b82",
            "FUN_08004ccc",
            "FUN_08004d6c",
            "FUN_08004e3c",
            "FUN_08004f3c",
            "FUN_08005084",
            "FUN_08005188",
            "FUN_080052f0",
            "FUN_0800542a",
            "FUN_08005430",
            "FUN_08005434",
            "FUN_08005460",
            "FUN_08005840",
            "FUN_080058ac",
            "FUN_080058d2",
            "FUN_08005a1c",
            "FUN_08005a28",
            "FUN_08005a48",
            "FUN_08005a68",
            "FUN_08005aa4",
            "FUN_08005bb8",
            "FUN_08005cb4",
            "FUN_08005cec",
            "FUN_08005d48",
            "FUN_08005dac",
            "FUN_08005df4",
            "FUN_08005e2e",
            "FUN_08005e6e",
            "FUN_08005fe8",
            "FUN_08006060",
            "FUN_08006092",
            "FUN_080060c4",
            "FUN_08006128",
            "FUN_08006186",
            "FUN_08006262",
            "FUN_08006280",
            "FUN_080062f4",
            "FUN_08006390",
            "FUN_080063c0",
            "FUN_08006420",
            "FUN_0800643c",
            "FUN_08006460",
            "FUN_080064b0",
            "FUN_080064cc",
            "FUN_08006538",
            "FUN_080066e8",
            "FUN_0800674e",
            "FUN_080067ac",
            "FUN_0800688e",
            "FUN_080068d6",
            "FUN_08006932",
            "FUN_0800694c",
            "FUN_080069ec",
            "FUN_08006b1c",
            "FUN_08006b28",
            "FUN_08006b3e",
            "FUN_08006b5c",
            "FUN_08006b7c",
            "FUN_08006bb8",
            "FUN_08006c60",
            "FUN_08006c7c",
            "FUN_08006ca8",
            "FUN_08006d24",
            "FUN_08006d80",
            "FUN_08006e68",
            "FUN_08007110",
            "FUN_08007118",
            "FUN_080071e4",
            "FUN_0800723c",
            "FUN_08007246",
            "FUN_08007258",
            "FUN_080072d8",
            "FUN_080072f0",
            "FUN_080072fa",
            "FUN_08007306",
            "FUN_08007320",
            "FUN_08007332",
            "FUN_0800734a",
            "FUN_0800735a",
            "FUN_08007376",
            "FUN_0800738a",
            "FUN_080073ae",
            "FUN_080073c0",
            "FUN_080073e8",
            "FUN_080073ec",
            "FUN_08007438",
            "FUN_080074e0",
            "FUN_08007544",
            "FUN_08007594",
            "FUN_080075dc",
            "FUN_08007648",
            "FUN_080076e0",
            "FUN_08007708",
            "FUN_08007710",
            "FUN_08007718",
            "FUN_0800771c",
            "FUN_08007736",
            "FUN_08007744",
            "FUN_0800774a",
            "FUN_08007750",
            "FUN_080077b0",
            "FUN_08007e74",
            "FUN_08007ede",
            "FUN_08007f0e",
            "FUN_08007f78",
            "FUN_08007f7c",
            "FUN_08007f8e",
            "FUN_08007fa0",
            "FUN_08007ff0",
            "FUN_08008020",
            "FUN_08008078",
            "FUN_080084b0",
            "FUN_08008500",
            "FUN_080085b8",
            "FUN_080085dc",
            "FUN_08008600",
            "FUN_0800863c",
            "FUN_08008694",
            "FUN_080086e8",
            "FUN_0800870c",
            "FUN_08008730",
            "FUN_08008804",
            "FUN_08008840",
            "FUN_08008846",
            "FUN_08008850",
            "FUN_08008854",
            "FUN_08008858",
            "FUN_0800885c",
            "FUN_08008868",
            "FUN_0800886c",
            "FUN_0800887c",
            "FUN_08008880",
            "FUN_080088e0",
            "FUN_08008990",
            "FUN_08008a24",
            "FUN_08008a6c",
            "FUN_08008abc",
            "FUN_08008afa",
            "FUN_08008b66",
            "FUN_08008c20",
            "FUN_08008c44",
            "FUN_08008d00",
            "FUN_08008d18",
            "FUN_08008d30",
            "FUN_08008d8c",
            "FUN_08008df8",
            "FUN_08008e14",
            "FUN_08008ef4",
            "FUN_08008f0e",
            "FUN_08008f1c",
            "FUN_08008f3c",
            "FUN_08008f78",
            "FUN_08009084",
            "FUN_08009094",
            "FUN_080090c2",
            "FUN_080090cc",
            "FUN_08009108",
            "FUN_08009124",
            "FUN_08009148",
            "FUN_08009190",
            "FUN_080091a0",
            "FUN_080091b0",
            "FUN_080091c6",
            "FUN_080091d8",
            "FUN_08009270",
            "FUN_0800932c",
            "FUN_08009358",
            "FUN_0800937c",
            "FUN_080095a8",
            "FUN_08009698",
            "FUN_080098d8",
            "FUN_08009908",
            "FUN_08009918",
            "FUN_08009938",
            "FUN_08009954",
            "FUN_0800997e",
            "FUN_080099a4",
            "FUN_08009a80",
            "FUN_08009b5c",
            "FUN_08009c7c",
            "FUN_08009cdc",
            "FUN_08009d24",
            "FUN_08009d50",
            "FUN_08009db0",
            "FUN_08009e64",
            "FUN_08009eac",
            "FUN_08009f2c",
            "FUN_08009fe8",
            "thunk_FUN_0800887c",
            "FUN_0800a020",
            "FUN_0800a042",
            "FUN_0800a07a",
            "FUN_0800a0ec",
            "FUN_0800a110",
            "FUN_0800a130",
            "FUN_0800a154",
            "FUN_0800a168",
            "FUN_0800a18c"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 1152651
}