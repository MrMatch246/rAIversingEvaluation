{
  "functions": {
    "_DT_INIT": {
      "entrypoint": "0x00102000",
      "current_name": "_DT_INIT",
      "code": "\nvoid _DT_INIT(void)\n\n{\n  __gmon_start__();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "__gmon_start__"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00102020": {
      "entrypoint": "0x00102020",
      "current_name": "FUN_00102020",
      "code": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)(undefined *)0x0)();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "cplus_demangle_name_to_style": {
      "entrypoint": "0x00102030",
      "current_name": "cplus_demangle_name_to_style",
      "code": "\nvoid cplus_demangle_name_to_style(void)\n\n{\n  cplus_demangle_name_to_style();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "cplus_demangle_name_to_style"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "free": {
      "entrypoint": "0x00102040",
      "current_name": "free",
      "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001047d0",
        "FUN_00105110",
        "FUN_00103b5d",
        "FUN_00103729",
        "FUN_00104670",
        "FUN_00104d5b",
        "FUN_00103ca0",
        "FUN_0010268b",
        "FUN_00103238",
        "FUN_001055f0"
      ],
      "called": [
        "free"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "putchar": {
      "entrypoint": "0x00102050",
      "current_name": "putchar",
      "code": "\n\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d putchar(__c);\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001064b0",
        "FUN_001035a2"
      ],
      "called": [
        "putchar"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "reconcat": {
      "entrypoint": "0x00102060",
      "current_name": "reconcat",
      "code": "\nvoid reconcat(void)\n\n{\n  reconcat();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001047d0"
      ],
      "called": [
        "reconcat"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "abort": {
      "entrypoint": "0x00102070",
      "current_name": "abort",
      "code": "\n\n\nvoid abort(void)\n\n{\n                    \n  abort();\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00102fd2"
      ],
      "called": [
        "abort"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "__errno_location": {
      "entrypoint": "0x00102080",
      "current_name": "__errno_location",
      "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 \u003d __errno_location();\n  return piVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00103729",
        "FUN_001043d0"
      ],
      "called": [
        "__errno_location"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bfd_plugin_set_plugin": {
      "entrypoint": "0x00102090",
      "current_name": "bfd_plugin_set_plugin",
      "code": "\nvoid bfd_plugin_set_plugin(void)\n\n{\n  bfd_plugin_set_plugin();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "bfd_plugin_set_plugin"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "ferror": {
      "entrypoint": "0x001020a0",
      "current_name": "ferror",
      "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d ferror(__stream);\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "ferror"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "qsort": {
      "entrypoint": "0x001020b0",
      "current_name": "qsort",
      "code": "\n\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n  qsort(__base,__nmemb,__size,__compar);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00104d5b"
      ],
      "called": [
        "qsort"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "isatty": {
      "entrypoint": "0x001020c0",
      "current_name": "isatty",
      "code": "\n\n\nint isatty(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d isatty(__fd);\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_0010268b"
      ],
      "called": [
        "isatty"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bfd_set_default_target": {
      "entrypoint": "0x001020d0",
      "current_name": "bfd_set_default_target",
      "code": "\nvoid bfd_set_default_target(void)\n\n{\n  bfd_set_default_target();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "bfd_set_default_target"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "fread": {
      "entrypoint": "0x001020e0",
      "current_name": "fread",
      "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 \u003d fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "fread"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bfd_is_undefined_symclass": {
      "entrypoint": "0x001020f0",
      "current_name": "bfd_is_undefined_symclass",
      "code": "\nvoid bfd_is_undefined_symclass(void)\n\n{\n  bfd_is_undefined_symclass();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001053c0",
        "FUN_001064b0",
        "FUN_00103729"
      ],
      "called": [
        "bfd_is_undefined_symclass"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "cplus_demangle_set_style": {
      "entrypoint": "0x00102100",
      "current_name": "cplus_demangle_set_style",
      "code": "\nvoid cplus_demangle_set_style(void)\n\n{\n  cplus_demangle_set_style();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "cplus_demangle_set_style"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "textdomain": {
      "entrypoint": "0x00102110",
      "current_name": "textdomain",
      "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "textdomain"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bfd_openr": {
      "entrypoint": "0x00102120",
      "current_name": "bfd_openr",
      "code": "\nvoid bfd_openr(void)\n\n{\n  bfd_openr();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001043d0"
      ],
      "called": [
        "bfd_openr"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "fclose": {
      "entrypoint": "0x00102130",
      "current_name": "fclose",
      "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d fclose(__stream);\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "fclose"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bindtextdomain": {
      "entrypoint": "0x00102140",
      "current_name": "bindtextdomain",
      "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "bindtextdomain"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "dcgettext": {
      "entrypoint": "0x00102150",
      "current_name": "dcgettext",
      "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001053c0",
        "FUN_0010370a",
        "FUN_00104370",
        "FUN_00103729",
        "FUN_00102f19",
        "FUN_00103a78",
        "FUN_001055f0",
        "FUN_00103abf",
        "FUN_00102450",
        "FUN_00103b5d",
        "FUN_001048e0",
        "FUN_00104d5b",
        "FUN_00103ca0",
        "FUN_001043d0",
        "FUN_0010249f"
      ],
      "called": [
        "dcgettext"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "strlen": {
      "entrypoint": "0x00102160",
      "current_name": "strlen",
      "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 \u003d strlen(__s);\n  return sVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00103ca0",
        "FUN_0010268b",
        "FUN_00102fd2",
        "FUN_001055f0"
      ],
      "called": [
        "strlen"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "getopt_long": {
      "entrypoint": "0x00102170",
      "current_name": "getopt_long",
      "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "getopt_long"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "strchr": {
      "entrypoint": "0x00102180",
      "current_name": "strchr",
      "code": "\n\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 \u003d strchr(__s,__c);\n  return pcVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00102739"
      ],
      "called": [
        "strchr"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "printf": {
      "entrypoint": "0x00102190",
      "current_name": "printf",
      "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d printf(__format);\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001047d0",
        "FUN_001053c0",
        "FUN_0010351b",
        "FUN_00105110",
        "FUN_001064b0",
        "FUN_00103729",
        "FUN_00103463",
        "FUN_00103573",
        "FUN_00102f19",
        "FUN_001036a7",
        "FUN_001036e0",
        "FUN_001055f0",
        "FUN_00103abf",
        "FUN_001054d0",
        "FUN_00103b2b",
        "FUN_001043d0",
        "FUN_00102f7b",
        "FUN_00102670",
        "FUN_001035a2",
        "FUN_00102739",
        "FUN_001062d0"
      ],
      "called": [
        "printf"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "xrealloc": {
      "entrypoint": "0x001021a0",
      "current_name": "xrealloc",
      "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00104d5b",
        "FUN_001055f0"
      ],
      "called": [
        "xrealloc"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "concat": {
      "entrypoint": "0x001021b0",
      "current_name": "concat",
      "code": "\nvoid concat(void)\n\n{\n  concat();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00104670",
        "FUN_001025f5"
      ],
      "called": [
        "concat"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bfd_target_list": {
      "entrypoint": "0x001021c0",
      "current_name": "bfd_target_list",
      "code": "\nvoid bfd_target_list(void)\n\n{\n  bfd_target_list();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00103ca0"
      ],
      "called": [
        "bfd_target_list"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bfd_get_error": {
      "entrypoint": "0x001021d0",
      "current_name": "bfd_get_error",
      "code": "\nvoid bfd_get_error(void)\n\n{\n  bfd_get_error();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00106540",
        "FUN_001048e0",
        "FUN_001043d0",
        "FUN_001055f0"
      ],
      "called": [
        "bfd_get_error"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "xmalloc": {
      "entrypoint": "0x001021e0",
      "current_name": "xmalloc",
      "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00105110",
        "FUN_00104d5b",
        "FUN_0010268b",
        "FUN_00103238",
        "FUN_00103c00",
        "FUN_001055f0"
      ],
      "called": [
        "xmalloc"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "xmalloc_set_program_name": {
      "entrypoint": "0x001021f0",
      "current_name": "xmalloc_set_program_name",
      "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "xmalloc_set_program_name"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "xstrdup": {
      "entrypoint": "0x00102200",
      "current_name": "xstrdup",
      "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "xstrdup"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "fputc": {
      "entrypoint": "0x00102210",
      "current_name": "fputc",
      "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d fputc(__c,__stream);\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00103b5d",
        "FUN_00103ca0"
      ],
      "called": [
        "fputc"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bfd_get_arch_size": {
      "entrypoint": "0x00102220",
      "current_name": "bfd_get_arch_size",
      "code": "\nvoid bfd_get_arch_size(void)\n\n{\n  bfd_get_arch_size();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00104670"
      ],
      "called": [
        "bfd_get_arch_size"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bfd_init": {
      "entrypoint": "0x00102230",
      "current_name": "bfd_init",
      "code": "\nvoid bfd_init(void)\n\n{\n  bfd_init();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "bfd_init"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "strcmp": {
      "entrypoint": "0x00102240",
      "current_name": "strcmp",
      "code": "\n\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d strcmp(__s1,__s2);\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00104670",
        "FUN_00104d5b",
        "FUN_00103463",
        "FUN_001055f0"
      ],
      "called": [
        "strcmp"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "putc": {
      "entrypoint": "0x00102250",
      "current_name": "putc",
      "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d putc(__c,__stream);\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001063a0",
        "FUN_00103463"
      ],
      "called": [
        "putc"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "fprintf": {
      "entrypoint": "0x00102260",
      "current_name": "fprintf",
      "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d fprintf(__stream,__format);\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00102450",
        "FUN_00103b5d",
        "FUN_00106540",
        "FUN_001063a0",
        "FUN_00103ca0",
        "FUN_001055f0"
      ],
      "called": [
        "fprintf"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "ftell": {
      "entrypoint": "0x00102270",
      "current_name": "ftell",
      "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 \u003d ftell(__stream);\n  return lVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "ftell"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "stat": {
      "entrypoint": "0x00102280",
      "current_name": "stat",
      "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d stat(__file,__buf);\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001043d0",
        "FUN_001055f0"
      ],
      "called": [
        "stat"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "memcpy": {
      "entrypoint": "0x00102290",
      "current_name": "memcpy",
      "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 \u003d memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "memcpy"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bfd_plugin_set_program_name": {
      "entrypoint": "0x001022a0",
      "current_name": "bfd_plugin_set_program_name",
      "code": "\nvoid bfd_plugin_set_program_name(void)\n\n{\n  bfd_plugin_set_program_name();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "bfd_plugin_set_program_name"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "fflush": {
      "entrypoint": "0x001022b0",
      "current_name": "fflush",
      "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d fflush(__stream);\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00106540",
        "FUN_00103b5d",
        "FUN_001063a0"
      ],
      "called": [
        "fflush"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "strcoll": {
      "entrypoint": "0x001022c0",
      "current_name": "strcoll",
      "code": "\n\n\nint strcoll(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d strcoll(__s1,__s2);\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00104fa0"
      ],
      "called": [
        "strcoll"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "fseek": {
      "entrypoint": "0x001022d0",
      "current_name": "fseek",
      "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "fseek"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "asprintf": {
      "entrypoint": "0x001022e0",
      "current_name": "asprintf",
      "code": "\n\n\nint asprintf(char **__ptr,char *__fmt,...)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d asprintf(__ptr,__fmt);\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00103729"
      ],
      "called": [
        "asprintf"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "setlocale": {
      "entrypoint": "0x001022f0",
      "current_name": "setlocale",
      "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 \u003d setlocale(__category,__locale);\n  return pcVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "setlocale"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bfd_set_error_program_name": {
      "entrypoint": "0x00102300",
      "current_name": "bfd_set_error_program_name",
      "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "bfd_set_error_program_name"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "memmove": {
      "entrypoint": "0x00102310",
      "current_name": "memmove",
      "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 \u003d memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "memmove"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bfd_demangle": {
      "entrypoint": "0x00102320",
      "current_name": "bfd_demangle",
      "code": "\nvoid bfd_demangle(void)\n\n{\n  bfd_demangle();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00102739"
      ],
      "called": [
        "bfd_demangle"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "xstrerror": {
      "entrypoint": "0x00102330",
      "current_name": "xstrerror",
      "code": "\nvoid xstrerror(void)\n\n{\n  xstrerror();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00103729"
      ],
      "called": [
        "xstrerror"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "fopen": {
      "entrypoint": "0x00102340",
      "current_name": "fopen",
      "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 \u003d fopen(__filename,__modes);\n  return pFVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "fopen"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "xexit": {
      "entrypoint": "0x00102350",
      "current_name": "xexit",
      "code": "\nvoid xexit(void)\n\n{\n  xexit();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00106300",
        "FUN_00106530",
        "FUN_001055f0"
      ],
      "called": [
        "xexit"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bfd_close": {
      "entrypoint": "0x00102360",
      "current_name": "bfd_close",
      "code": "\nvoid bfd_close(void)\n\n{\n  bfd_close();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001043d0"
      ],
      "called": [
        "bfd_close"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "vfprintf": {
      "entrypoint": "0x00102370",
      "current_name": "vfprintf",
      "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001063a0"
      ],
      "called": [
        "vfprintf"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bfd_check_format_matches": {
      "entrypoint": "0x00102380",
      "current_name": "bfd_check_format_matches",
      "code": "\nvoid bfd_check_format_matches(void)\n\n{\n  bfd_check_format_matches();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001043d0"
      ],
      "called": [
        "bfd_check_format_matches"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bfd_errmsg": {
      "entrypoint": "0x00102390",
      "current_name": "bfd_errmsg",
      "code": "\nvoid bfd_errmsg(void)\n\n{\n  bfd_errmsg();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00106540",
        "FUN_001055f0"
      ],
      "called": [
        "bfd_errmsg"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bfd_canonicalize_reloc": {
      "entrypoint": "0x001023a0",
      "current_name": "bfd_canonicalize_reloc",
      "code": "\nvoid bfd_canonicalize_reloc(void)\n\n{\n  bfd_canonicalize_reloc();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00103c00"
      ],
      "called": [
        "bfd_canonicalize_reloc"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "sprintf": {
      "entrypoint": "0x001023b0",
      "current_name": "sprintf",
      "code": "\n\n\nint sprintf(char *__s,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d sprintf(__s,__format);\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_0010268b"
      ],
      "called": [
        "sprintf"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "exit": {
      "entrypoint": "0x001023c0",
      "current_name": "exit",
      "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00103ca0",
        "FUN_001055f0"
      ],
      "called": [
        "exit"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bfd_check_format": {
      "entrypoint": "0x001023d0",
      "current_name": "bfd_check_format",
      "code": "\nvoid bfd_check_format(void)\n\n{\n  bfd_check_format();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001043d0"
      ],
      "called": [
        "bfd_check_format"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bfd_openr_next_archived_file": {
      "entrypoint": "0x001023e0",
      "current_name": "bfd_openr_next_archived_file",
      "code": "\nvoid bfd_openr_next_archived_file(void)\n\n{\n  bfd_openr_next_archived_file();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001043d0"
      ],
      "called": [
        "bfd_openr_next_archived_file"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bfd_get_reloc_upper_bound": {
      "entrypoint": "0x001023f0",
      "current_name": "bfd_get_reloc_upper_bound",
      "code": "\nvoid bfd_get_reloc_upper_bound(void)\n\n{\n  bfd_get_reloc_upper_bound();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00103c00"
      ],
      "called": [
        "bfd_get_reloc_upper_bound"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bfd_map_over_sections": {
      "entrypoint": "0x00102400",
      "current_name": "bfd_map_over_sections",
      "code": "\nvoid bfd_map_over_sections(void)\n\n{\n  bfd_map_over_sections();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00103238"
      ],
      "called": [
        "bfd_map_over_sections"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "strerror": {
      "entrypoint": "0x00102410",
      "current_name": "strerror",
      "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 \u003d strerror(__errnum);\n  return pcVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001043d0"
      ],
      "called": [
        "strerror"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "strstr": {
      "entrypoint": "0x00102420",
      "current_name": "strstr",
      "code": "\n\n\nchar * strstr(char *__haystack,char *__needle)\n\n{\n  char *pcVar1;\n  \n  pcVar1 \u003d strstr(__haystack,__needle);\n  return pcVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00104670",
        "FUN_00102fd2"
      ],
      "called": [
        "strstr"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "bfd_get_next_mapent": {
      "entrypoint": "0x00102430",
      "current_name": "bfd_get_next_mapent",
      "code": "\nvoid bfd_get_next_mapent(void)\n\n{\n  bfd_get_next_mapent();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001043d0"
      ],
      "called": [
        "bfd_get_next_mapent"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "__cxa_finalize": {
      "entrypoint": "0x00102440",
      "current_name": "__cxa_finalize",
      "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "_FINI_0"
      ],
      "called": [
        "__cxa_finalize"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00102450": {
      "entrypoint": "0x00102450",
      "current_name": "FUN_00102450",
      "code": "\nvoid FUN_00102450(void)\n\n{\n  long lVar1;\n  char *pcVar2;\n  long *__ptr;\n  FILE *unaff_RBX;\n  long *plVar3;\n  int in_stack_00000008;\n  \n  pcVar2 \u003d (char *)dcgettext(0,\"Supported targets:\",5);\n  fprintf(unaff_RBX,pcVar2);\n  __ptr \u003d (long *)bfd_target_list();\n  plVar3 \u003d __ptr;\n  while( true ) {\n    lVar1 \u003d *plVar3;\n    plVar3 \u003d plVar3 + 1;\n    if (lVar1 \u003d\u003d 0) break;\n    fprintf(unaff_RBX,\" %s\");\n  }\n  fputc(10,unaff_RBX);\n  free(__ptr);\n  if (in_stack_00000008 \u003d\u003d 0) {\n    pcVar2 \u003d (char *)dcgettext(0,\"Report bugs to %s.\\n\",5);\n    fprintf(unaff_RBX,pcVar2,\"\u003chttps://sourceware.org/bugzilla/\u003e\");\n  }\n                    \n  exit(in_stack_00000008);\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00103ca0"
      ],
      "called": [
        "dcgettext",
        "fprintf"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "caseD_4a": {
      "entrypoint": "0x00102475",
      "current_name": "caseD_4a",
      "code": "\nvoid switchD_00104393::caseD_4a(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00104397(param_1,param_2,3);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00104370"
      ],
      "called": [
        "FUN_00104397"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0010249f": {
      "entrypoint": "0x0010249f",
      "current_name": "FUN_0010249f",
      "code": "\nundefined8 FUN_0010249f(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 \u003d dcgettext(0,\"Warning: \\\u0027%s\\\u0027 is not an ordinary file\",5);\n  FUN_00106400(uVar1);\n  return 0;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001043d0"
      ],
      "called": [
        "FUN_00106400",
        "dcgettext"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_001025f5": {
      "entrypoint": "0x001025f5",
      "current_name": "FUN_001025f5",
      "code": "\nvoid FUN_001025f5(undefined8 param_1,undefined8 param_2)\n\n{\n  DAT_0010b7a0 \u003d concat(\u0026DAT_001071d7,param_2,\u0026DAT_001071ca,0);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00104670"
      ],
      "called": [
        "concat"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00102670": {
      "entrypoint": "0x00102670",
      "current_name": "FUN_00102670",
      "code": "\n\n\nvoid FUN_00102670(undefined8 param_1)\n\n{\n  if (_DAT_0010b7c4 !\u003d 0) {\n    printf(\"\\n%s:\\n\",param_1);\n    return;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001043d0"
      ],
      "called": [
        "printf"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0010268b": {
      "entrypoint": "0x0010268b",
      "current_name": "FUN_0010268b",
      "code": "\n\n\nvoid FUN_0010268b(void)\n\n{\n  undefined8 *puVar1;\n  byte bVar2;\n  byte bVar3;\n  int iVar4;\n  size_t sVar5;\n  undefined8 *puVar6;\n  char *pcVar7;\n  ulong uVar8;\n  undefined8 uVar9;\n  undefined *puVar10;\n  undefined8 *puVar11;\n  long unaff_RBP;\n  undefined8 *puVar12;\n  undefined *unaff_R12;\n  undefined8 *unaff_R13;\n  long lVar13;\n  uint uVar14;\n  char *unaff_R14;\n  long unaff_R15;\n  byte bVar15;\n  char *__s;\n  undefined8 in_stack_00000038;\n  \n  bVar15 \u003d 0;\n  puVar12 \u003d unaff_R13;\n  if (DAT_0010b7e0 !\u003d 0) {\n    do {\n      bVar2 \u003d *(byte *)puVar12;\n      if (bVar2 \u003d\u003d 0) goto LAB_0010485e;\n    } while ((((\u0026_sch_istable)[(ulong)bVar2 * 2] \u0026 2) \u003d\u003d 0) \u0026\u0026\n            (puVar12 \u003d (undefined8 *)((long)puVar12 + 1), bVar2 \u003c 0xc0));\n    sVar5 \u003d strlen((char *)unaff_R13);\n    puVar12 \u003d DAT_0010b790;\n    puVar11 \u003d unaff_R13;\n    if (_DAT_0010b798 \u003c sVar5 * 9) {\n      free(DAT_0010b790);\n      sVar5 \u003d strlen((char *)unaff_R13);\n      _DAT_0010b798 \u003d sVar5 * 9;\n      DAT_0010b790 \u003d (undefined8 *)xmalloc(_DAT_0010b798 + 1);\n      puVar12 \u003d DAT_0010b790;\n    }\n    while( true ) {\n      unaff_R13 \u003d DAT_0010b790;\n      bVar2 \u003d *(byte *)puVar11;\n      puVar1 \u003d (undefined8 *)((long)puVar11 + 1);\n      if (bVar2 \u003d\u003d 0) break;\n      if (((\u0026_sch_istable)[(ulong)bVar2 * 2] \u0026 2) \u003d\u003d 0) {\n        if ((bVar2 \u003c 0xc0) || (DAT_0010b7e0 \u003d\u003d 0)) {\n          *(byte *)puVar12 \u003d bVar2;\n          puVar12 \u003d (undefined8 *)((long)puVar12 + 1);\n          puVar11 \u003d puVar1;\n        }\n        else {\n          bVar3 \u003d *(byte *)((long)puVar11 + 1);\n          if ((bVar3 \u0026 0xc0) \u003d\u003d 0x80) {\n            puVar6 \u003d puVar12;\n            if ((bVar2 \u0026 0x20) \u003d\u003d 0) {\n              switch(DAT_0010b7e0) {\n              case 1:\n                uVar14 \u003d 2;\n                goto LAB_00102a62;\n              case 3:\n              case 5:\n                lVar13 \u003d 2;\n                goto LAB_00102917;\n              case 4:\n                iVar4 \u003d isatty(1);\n                if (iVar4 \u003d\u003d 0) {\n                  bVar3 \u003d *(byte *)((long)puVar11 + 1);\n                }\n                else {\n                  *(undefined *)(puVar12 + 1) \u003d 0;\n                  *puVar12 \u003d 0x6d37343b31335b1b;\n                  bVar3 \u003d *(byte *)((long)puVar11 + 1);\n                  puVar6 \u003d puVar12 + 1;\n                }\n              case 2:\n                uVar14 \u003d 2;\n                sprintf((char *)puVar6,\"\\\\u%02x%02x\",(ulong)((int)(uint)*(byte *)puVar11 \u003e\u003e 2 \u0026 7),\n                        (ulong)((*(byte *)puVar11 \u0026 3) \u003c\u003c 6 | bVar3 \u0026 0x3f));\n                puVar6 \u003d (undefined8 *)((long)puVar6 + 6);\n                goto LAB_00102a27;\n              default:\n                uVar14 \u003d 2;\n              }\n            }\n            else {\n              bVar3 \u003d *(byte *)((long)puVar11 + 2);\n              if ((bVar3 \u0026 0xc0) !\u003d 0x80) goto LAB_0010285d;\n              if ((bVar2 \u0026 0x10) \u003d\u003d 0) {\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uVar14 \u003d 3;\nLAB_00102a62:\n                  for (uVar8 \u003d (ulong)uVar14; uVar8 !\u003d 0; uVar8 \u003d uVar8 - 1) {\n                    *(undefined *)puVar6 \u003d *(undefined *)puVar11;\n                    puVar11 \u003d (undefined8 *)((long)puVar11 + (ulong)bVar15 * -2 + 1);\n                    puVar6 \u003d (undefined8 *)((long)puVar6 + (ulong)bVar15 * -2 + 1);\n                  }\n                  break;\n                case 3:\n                case 5:\n                  lVar13 \u003d 3;\nLAB_00102917:\n                  uVar9 \u003d 0x7b;\n                  if (DAT_0010b7e0 \u003d\u003d 3) {\n                    uVar9 \u003d 0x3c;\n                  }\n                  sprintf((char *)puVar12,\"%c\",uVar9);\n                  *(undefined *)((long)puVar12 + 3) \u003d 0;\n                  puVar6 \u003d (undefined8 *)(lVar13 + (long)puVar11);\n                  *(undefined2 *)((long)puVar12 + 1) \u003d 0x7830;\n                  pcVar7 \u003d (char *)((long)puVar12 + 3);\n                  do {\n                    __s \u003d pcVar7;\n                    bVar2 \u003d *(byte *)puVar11;\n                    puVar11 \u003d (undefined8 *)((long)puVar11 + 1);\n                    sprintf(__s,\"%02x\",(ulong)bVar2);\n                    pcVar7 \u003d __s + 2;\n                  } while (puVar11 !\u003d puVar6);\n                  uVar9 \u003d 0x7d;\n                  if (DAT_0010b7e0 \u003d\u003d 3) {\n                    uVar9 \u003d 0x3e;\n                  }\n                  uVar14 \u003d (uint)lVar13;\n                  sprintf(__s + 2,\"%c\",uVar9);\n                  puVar6 \u003d (undefined8 *)(__s + 3);\n                  break;\n                case 4:\n                  iVar4 \u003d isatty(1);\n                  if (iVar4 \u003d\u003d 0) {\n                    bVar3 \u003d *(byte *)((long)puVar11 + 2);\n                  }\n                  else {\n                    *(undefined *)(puVar12 + 1) \u003d 0;\n                    *puVar12 \u003d 0x6d37343b31335b1b;\n                    bVar3 \u003d *(byte *)((long)puVar11 + 2);\n                    puVar6 \u003d puVar12 + 1;\n                  }\n                case 2:\n                  uVar14 \u003d 3;\n                  sprintf((char *)puVar6,\"\\\\u%02x%02x\",\n                          (ulong)((uint)(((ulong)*(byte *)puVar11 \u0026 0xf) \u003c\u003c 4) |\n                                 (int)(uint)*(byte *)((long)puVar11 + 1) \u003e\u003e 2 \u0026 0xfU),\n                          (ulong)((*(byte *)((long)puVar11 + 1) \u0026 3) \u003c\u003c 6 | bVar3 \u0026 0x3f));\n                  puVar6 \u003d (undefined8 *)((long)puVar6 + 6);\nLAB_00102a27:\n                  if ((DAT_0010b7e0 \u003d\u003d 4) \u0026\u0026 (iVar4 \u003d isatty(1), iVar4 !\u003d 0)) {\n                    *(undefined4 *)puVar6 \u003d 0x6d305b1b;\n                    puVar6 \u003d (undefined8 *)((long)puVar6 + 4);\n                    *(undefined *)puVar6 \u003d 0;\n                  }\n                  break;\n                default:\n                  uVar14 \u003d 3;\n                }\n              }\n              else {\n                if ((*(byte *)((long)puVar11 + 3) \u0026 0xc0) !\u003d 0x80) goto LAB_0010285d;\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uVar14 \u003d 4;\n                  goto LAB_00102a62;\n                case 3:\n                case 5:\n                  lVar13 \u003d 4;\n                  goto LAB_00102917;\n                case 4:\n                  iVar4 \u003d isatty(1);\n                  if (iVar4 !\u003d 0) {\n                    *(undefined *)(puVar12 + 1) \u003d 0;\n                    *puVar12 \u003d 0x6d37343b31335b1b;\n                    puVar6 \u003d puVar12 + 1;\n                  }\n                case 2:\n                  uVar14 \u003d 4;\n                  iVar4 \u003d sprintf((char *)puVar6,\"\\\\u%02x%02x%02x\",\n                                  (ulong)((*(byte *)puVar11 \u0026 7) \u003c\u003c 6 |\n                                         (int)(uint)*(byte *)((long)puVar11 + 1) \u003e\u003e 2 \u0026 0xfU),\n                                  (ulong)((*(byte *)((long)puVar11 + 1) \u0026 3) \u003c\u003c 6 |\n                                         (int)(uint)*(byte *)((long)puVar11 + 2) \u003e\u003e 2 \u0026 0xfU));\n                  puVar6 \u003d (undefined8 *)((long)puVar6 + (long)iVar4);\n                  goto LAB_00102a27;\n                default:\n                  uVar14 \u003d 4;\n                }\n              }\n            }\n            uVar8 \u003d (ulong)(uint)((int)puVar6 - (int)puVar12);\n          }\n          else {\nLAB_0010285d:\n            *(byte *)puVar12 \u003d bVar2;\n            uVar14 \u003d 1;\n            uVar8 \u003d 1;\n          }\n          puVar12 \u003d (undefined8 *)((long)puVar12 + uVar8);\n          puVar11 \u003d (undefined8 *)((long)puVar1 + (ulong)(uVar14 - 1));\n        }\n      }\n      else {\n        *(undefined *)puVar12 \u003d 0x5e;\n        *(byte *)((long)puVar12 + 1) \u003d bVar2 + 0x40;\n        puVar12 \u003d (undefined8 *)((long)puVar12 + 2);\n        puVar11 \u003d puVar1;\n      }\n    }\n    *(undefined *)puVar12 \u003d 0;\n  }\nLAB_0010485e:\n  puVar12 \u003d (undefined8 *)0x0;\n  if ((((unaff_RBP !\u003d 0) \u0026\u0026 (*(long *)(unaff_RBP + 0x10) !\u003d 0)) \u0026\u0026 (DAT_0010b234 !\u003d 0)) \u0026\u0026\n     ((pcVar7 \u003d (char *)(**(code **)(*(long *)(unaff_R15 + 8) + 0x220))\n                                  (unaff_R15,*(long *)(unaff_RBP + 0x10),0,\n                                   (long)\u0026stack0x00000038 + 7), pcVar7 !\u003d (char *)0x0 \u0026\u0026\n      (*pcVar7 !\u003d \u0027\\0\u0027)))) {\n    puVar10 \u003d \u0026DAT_001071e0;\n    if ((in_stack_00000038._7_1_ \u003d\u003d \u0027\\0\u0027) \u0026\u0026\n       (*(long *)(*(long *)(unaff_RBP + 0x10) + 0x20) !\u003d 0x10c2a8)) {\n      puVar10 \u003d \u0026DAT_001071df;\n    }\n    puVar12 \u003d (undefined8 *)reconcat(0,unaff_R13,puVar10,pcVar7,0);\n    unaff_R13 \u003d puVar12;\n  }\n  printf(unaff_R14,unaff_R13);\n  if (unaff_R12 !\u003d (undefined *)0x0) {\n    *unaff_R12 \u003d 0x40;\n  }\n  free(puVar12);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00102739"
      ],
      "called": [
        "FUN_001047d0",
        "sprintf",
        "xmalloc",
        "isatty",
        "strlen",
        "free"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00102739": {
      "entrypoint": "0x00102739",
      "current_name": "FUN_00102739",
      "code": "\n\n\nvoid FUN_00102739(void)\n\n{\n  undefined8 *puVar1;\n  byte bVar2;\n  byte bVar3;\n  int iVar4;\n  size_t sVar5;\n  char *pcVar6;\n  undefined8 *puVar7;\n  char *pcVar8;\n  undefined8 *__ptr;\n  ulong uVar9;\n  undefined8 uVar10;\n  undefined *puVar11;\n  long unaff_RBP;\n  undefined8 *puVar12;\n  undefined8 *unaff_R13;\n  long lVar13;\n  uint uVar14;\n  char *unaff_R14;\n  long unaff_R15;\n  byte bVar15;\n  char *__s;\n  undefined8 in_stack_00000038;\n  \n  bVar15 \u003d 0;\n  puVar12 \u003d unaff_R13;\n  if (*(int *)(*(long *)(unaff_R15 + 8) + 8) !\u003d 5) {\n    if (DAT_0010b814 !\u003d 0) {\n      pcVar6 \u003d (char *)0x0;\n      goto LAB_0010482b;\n    }\n    pcVar6 \u003d (char *)0x0;\n    if (DAT_0010b7e0 \u003d\u003d 0) {\nLAB_00104794:\n      __ptr \u003d (undefined8 *)0x0;\n    }\n    else {\n      __ptr \u003d (undefined8 *)0x0;\n      if (unaff_R13 !\u003d (undefined8 *)0x0) goto LAB_0010269d;\n      __ptr \u003d (undefined8 *)0x0;\n      unaff_R13 \u003d (undefined8 *)0x1073a6;\n    }\n    goto joined_r0x00104799;\n  }\n  pcVar6 \u003d strchr((char *)unaff_R13,0x40);\n  if (pcVar6 \u003d\u003d (char *)0x0) {\n    if (DAT_0010b814 !\u003d 0) goto LAB_0010482b;\n    if (DAT_0010b7e0 \u003d\u003d 0) {\n      if (unaff_RBP \u003d\u003d 0) {\n        __ptr \u003d (undefined8 *)0x0;\n        printf(unaff_R14);\n      }\n      else {\n        if (*(long *)(unaff_RBP + 0x10) !\u003d 0) {\n          FUN_001047d0();\n          return;\n        }\n        __ptr \u003d (undefined8 *)0x0;\n        printf(unaff_R14);\n      }\n      goto LAB_001047ba;\n    }\nLAB_00102698:\n    puVar12 \u003d unaff_R13;\n    __ptr \u003d (undefined8 *)0x0;\nLAB_0010269d:\n    do {\n      bVar2 \u003d *(byte *)puVar12;\n      if (bVar2 \u003d\u003d 0) goto joined_r0x00104799;\n    } while ((((\u0026_sch_istable)[(ulong)bVar2 * 2] \u0026 2) \u003d\u003d 0) \u0026\u0026\n            (puVar12 \u003d (undefined8 *)((long)puVar12 + 1), bVar2 \u003c 0xc0));\n    sVar5 \u003d strlen((char *)unaff_R13);\n    puVar12 \u003d DAT_0010b790;\n    if (_DAT_0010b798 \u003c sVar5 * 9) {\n      free(DAT_0010b790);\n      sVar5 \u003d strlen((char *)unaff_R13);\n      _DAT_0010b798 \u003d sVar5 * 9;\n      DAT_0010b790 \u003d (undefined8 *)xmalloc(_DAT_0010b798 + 1);\n      puVar12 \u003d DAT_0010b790;\n    }\n    while( true ) {\n      puVar7 \u003d DAT_0010b790;\n      bVar2 \u003d *(byte *)unaff_R13;\n      puVar1 \u003d (undefined8 *)((long)unaff_R13 + 1);\n      if (bVar2 \u003d\u003d 0) break;\n      if (((\u0026_sch_istable)[(ulong)bVar2 * 2] \u0026 2) \u003d\u003d 0) {\n        if ((bVar2 \u003c 0xc0) || (DAT_0010b7e0 \u003d\u003d 0)) {\n          *(byte *)puVar12 \u003d bVar2;\n          puVar12 \u003d (undefined8 *)((long)puVar12 + 1);\n          unaff_R13 \u003d puVar1;\n        }\n        else {\n          bVar3 \u003d *(byte *)((long)unaff_R13 + 1);\n          if ((bVar3 \u0026 0xc0) \u003d\u003d 0x80) {\n            puVar7 \u003d puVar12;\n            if ((bVar2 \u0026 0x20) \u003d\u003d 0) {\n              switch(DAT_0010b7e0) {\n              case 1:\n                uVar14 \u003d 2;\n                goto LAB_00102a62;\n              case 3:\n              case 5:\n                lVar13 \u003d 2;\n                goto LAB_00102917;\n              case 4:\n                iVar4 \u003d isatty(1);\n                if (iVar4 \u003d\u003d 0) {\n                  bVar3 \u003d *(byte *)((long)unaff_R13 + 1);\n                }\n                else {\n                  *(undefined *)(puVar12 + 1) \u003d 0;\n                  *puVar12 \u003d 0x6d37343b31335b1b;\n                  bVar3 \u003d *(byte *)((long)unaff_R13 + 1);\n                  puVar7 \u003d puVar12 + 1;\n                }\n              case 2:\n                uVar14 \u003d 2;\n                sprintf((char *)puVar7,\"\\\\u%02x%02x\",(ulong)((int)(uint)*(byte *)unaff_R13 \u003e\u003e 2 \u0026 7)\n                        ,(ulong)((*(byte *)unaff_R13 \u0026 3) \u003c\u003c 6 | bVar3 \u0026 0x3f));\n                puVar7 \u003d (undefined8 *)((long)puVar7 + 6);\n                goto LAB_00102a27;\n              default:\n                uVar14 \u003d 2;\n              }\n            }\n            else {\n              bVar3 \u003d *(byte *)((long)unaff_R13 + 2);\n              if ((bVar3 \u0026 0xc0) !\u003d 0x80) goto LAB_0010285d;\n              if ((bVar2 \u0026 0x10) \u003d\u003d 0) {\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uVar14 \u003d 3;\nLAB_00102a62:\n                  for (uVar9 \u003d (ulong)uVar14; uVar9 !\u003d 0; uVar9 \u003d uVar9 - 1) {\n                    *(undefined *)puVar7 \u003d *(undefined *)unaff_R13;\n                    unaff_R13 \u003d (undefined8 *)((long)unaff_R13 + (ulong)bVar15 * -2 + 1);\n                    puVar7 \u003d (undefined8 *)((long)puVar7 + (ulong)bVar15 * -2 + 1);\n                  }\n                  break;\n                case 3:\n                case 5:\n                  lVar13 \u003d 3;\nLAB_00102917:\n                  uVar10 \u003d 0x7b;\n                  if (DAT_0010b7e0 \u003d\u003d 3) {\n                    uVar10 \u003d 0x3c;\n                  }\n                  sprintf((char *)puVar12,\"%c\",uVar10);\n                  *(undefined *)((long)puVar12 + 3) \u003d 0;\n                  puVar7 \u003d (undefined8 *)(lVar13 + (long)unaff_R13);\n                  *(undefined2 *)((long)puVar12 + 1) \u003d 0x7830;\n                  pcVar8 \u003d (char *)((long)puVar12 + 3);\n                  do {\n                    __s \u003d pcVar8;\n                    bVar2 \u003d *(byte *)unaff_R13;\n                    unaff_R13 \u003d (undefined8 *)((long)unaff_R13 + 1);\n                    sprintf(__s,\"%02x\",(ulong)bVar2);\n                    pcVar8 \u003d __s + 2;\n                  } while (unaff_R13 !\u003d puVar7);\n                  uVar10 \u003d 0x7d;\n                  if (DAT_0010b7e0 \u003d\u003d 3) {\n                    uVar10 \u003d 0x3e;\n                  }\n                  uVar14 \u003d (uint)lVar13;\n                  sprintf(__s + 2,\"%c\",uVar10);\n                  puVar7 \u003d (undefined8 *)(__s + 3);\n                  break;\n                case 4:\n                  iVar4 \u003d isatty(1);\n                  if (iVar4 \u003d\u003d 0) {\n                    bVar3 \u003d *(byte *)((long)unaff_R13 + 2);\n                  }\n                  else {\n                    *(undefined *)(puVar12 + 1) \u003d 0;\n                    *puVar12 \u003d 0x6d37343b31335b1b;\n                    bVar3 \u003d *(byte *)((long)unaff_R13 + 2);\n                    puVar7 \u003d puVar12 + 1;\n                  }\n                case 2:\n                  uVar14 \u003d 3;\n                  sprintf((char *)puVar7,\"\\\\u%02x%02x\",\n                          (ulong)((uint)(((ulong)*(byte *)unaff_R13 \u0026 0xf) \u003c\u003c 4) |\n                                 (int)(uint)*(byte *)((long)unaff_R13 + 1) \u003e\u003e 2 \u0026 0xfU),\n                          (ulong)((*(byte *)((long)unaff_R13 + 1) \u0026 3) \u003c\u003c 6 | bVar3 \u0026 0x3f));\n                  puVar7 \u003d (undefined8 *)((long)puVar7 + 6);\nLAB_00102a27:\n                  if ((DAT_0010b7e0 \u003d\u003d 4) \u0026\u0026 (iVar4 \u003d isatty(1), iVar4 !\u003d 0)) {\n                    *(undefined4 *)puVar7 \u003d 0x6d305b1b;\n                    puVar7 \u003d (undefined8 *)((long)puVar7 + 4);\n                    *(undefined *)puVar7 \u003d 0;\n                  }\n                  break;\n                default:\n                  uVar14 \u003d 3;\n                }\n              }\n              else {\n                if ((*(byte *)((long)unaff_R13 + 3) \u0026 0xc0) !\u003d 0x80) goto LAB_0010285d;\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uVar14 \u003d 4;\n                  goto LAB_00102a62;\n                case 3:\n                case 5:\n                  lVar13 \u003d 4;\n                  goto LAB_00102917;\n                case 4:\n                  iVar4 \u003d isatty(1);\n                  if (iVar4 !\u003d 0) {\n                    *(undefined *)(puVar12 + 1) \u003d 0;\n                    *puVar12 \u003d 0x6d37343b31335b1b;\n                    puVar7 \u003d puVar12 + 1;\n                  }\n                case 2:\n                  uVar14 \u003d 4;\n                  iVar4 \u003d sprintf((char *)puVar7,\"\\\\u%02x%02x%02x\",\n                                  (ulong)((*(byte *)unaff_R13 \u0026 7) \u003c\u003c 6 |\n                                         (int)(uint)*(byte *)((long)unaff_R13 + 1) \u003e\u003e 2 \u0026 0xfU),\n                                  (ulong)((*(byte *)((long)unaff_R13 + 1) \u0026 3) \u003c\u003c 6 |\n                                         (int)(uint)*(byte *)((long)unaff_R13 + 2) \u003e\u003e 2 \u0026 0xfU));\n                  puVar7 \u003d (undefined8 *)((long)puVar7 + (long)iVar4);\n                  goto LAB_00102a27;\n                default:\n                  uVar14 \u003d 4;\n                }\n              }\n            }\n            uVar9 \u003d (ulong)(uint)((int)puVar7 - (int)puVar12);\n          }\n          else {\nLAB_0010285d:\n            *(byte *)puVar12 \u003d bVar2;\n            uVar14 \u003d 1;\n            uVar9 \u003d 1;\n          }\n          puVar12 \u003d (undefined8 *)((long)puVar12 + uVar9);\n          unaff_R13 \u003d (undefined8 *)((long)puVar1 + (ulong)(uVar14 - 1));\n        }\n      }\n      else {\n        *(undefined *)puVar12 \u003d 0x5e;\n        *(byte *)((long)puVar12 + 1) \u003d bVar2 + 0x40;\n        puVar12 \u003d (undefined8 *)((long)puVar12 + 2);\n        unaff_R13 \u003d puVar1;\n      }\n    }\n    *(undefined *)puVar12 \u003d 0;\n    unaff_R13 \u003d puVar7;\n  }\n  else {\n    *pcVar6 \u003d \u0027\\0\u0027;\n    if (DAT_0010b814 \u003d\u003d 0) {\n      if (DAT_0010b7e0 \u003d\u003d 0) goto LAB_00104794;\n      __ptr \u003d (undefined8 *)0x0;\n      goto LAB_0010269d;\n    }\nLAB_0010482b:\n    if ((*(char *)unaff_R13 \u003d\u003d \u0027\\0\u0027) ||\n       (puVar12 \u003d (undefined8 *)bfd_demangle(), puVar12 \u003d\u003d (undefined8 *)0x0)) {\n      if (DAT_0010b7e0 !\u003d 0) goto LAB_00102698;\n      __ptr \u003d (undefined8 *)0x0;\n    }\n    else {\n      unaff_R13 \u003d puVar12;\n      __ptr \u003d puVar12;\n      if (DAT_0010b7e0 !\u003d 0) goto LAB_0010269d;\n    }\n  }\njoined_r0x00104799:\n  if ((((unaff_RBP !\u003d 0) \u0026\u0026 (*(long *)(unaff_RBP + 0x10) !\u003d 0)) \u0026\u0026 (DAT_0010b234 !\u003d 0)) \u0026\u0026\n     ((pcVar8 \u003d (char *)(**(code **)(*(long *)(unaff_R15 + 8) + 0x220))\n                                  (unaff_R15,*(long *)(unaff_RBP + 0x10),0,\n                                   (long)\u0026stack0x00000038 + 7), pcVar8 !\u003d (char *)0x0 \u0026\u0026\n      (*pcVar8 !\u003d \u0027\\0\u0027)))) {\n    puVar11 \u003d \u0026DAT_001071e0;\n    if ((in_stack_00000038._7_1_ \u003d\u003d \u0027\\0\u0027) \u0026\u0026\n       (*(long *)(*(long *)(unaff_RBP + 0x10) + 0x20) !\u003d 0x10c2a8)) {\n      puVar11 \u003d \u0026DAT_001071df;\n    }\n    __ptr \u003d (undefined8 *)reconcat(__ptr,unaff_R13,puVar11,pcVar8,0);\n    unaff_R13 \u003d __ptr;\n  }\n  printf(unaff_R14,unaff_R13);\n  if (pcVar6 !\u003d (char *)0x0) {\n    *pcVar6 \u003d \u0027@\u0027;\n  }\nLAB_001047ba:\n  free(__ptr);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00104740"
      ],
      "called": [
        "FUN_001047d0",
        "strchr",
        "printf",
        "FUN_0010268b",
        "bfd_demangle"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00102c19": {
      "entrypoint": "0x00102c19",
      "current_name": "FUN_00102c19",
      "code": "\n\n\nvoid FUN_00102c19(void)\n\n{\n  char *pcVar1;\n  code *pcVar2;\n  char cVar3;\n  int iVar4;\n  uint uVar5;\n  undefined8 uVar6;\n  long lVar7;\n  undefined8 *puVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  undefined8 *unaff_RBX;\n  undefined8 *__ptr;\n  undefined8 *unaff_RBP;\n  undefined8 *puVar11;\n  undefined8 *puVar12;\n  undefined8 *in_R8;\n  undefined8 *puVar13;\n  undefined8 *in_R9;\n  undefined8 *puVar14;\n  undefined8 *unaff_R12;\n  undefined8 *puVar15;\n  undefined8 *unaff_R13;\n  undefined8 *unaff_R14;\n  undefined8 *unaff_R15;\n  bool bVar16;\n  byte bVar17;\n  ulong unaff_retaddr;\n  ulong uVar18;\n  undefined8 in_stack_00000008;\n  undefined8 *in_stack_00000010;\n  undefined8 *in_stack_00000018;\n  undefined8 in_stack_00000038;\n  void *in_stack_00000040;\n  undefined8 *in_stack_00000048;\n  \n  bVar17 \u003d 0;\n  if (_DAT_0010b760 \u003d\u003d 0) goto LAB_001049c3;\nLAB_00104a7b:\n  do {\n    if (unaff_RBX !\u003d unaff_R13) {\n      if (unaff_R14 \u003d\u003d (undefined8 *)0x8) {\n        *unaff_RBX \u003d *unaff_R13;\n        FUN_001049c0();\n        return;\n      }\n      for (; unaff_R14 !\u003d (undefined8 *)0x0; unaff_R14 \u003d (undefined8 *)((long)unaff_R14 + -1)) {\n        *(undefined *)unaff_RBX \u003d *(undefined *)unaff_R13;\n        unaff_R13 \u003d (undefined8 *)((long)unaff_R13 + (ulong)bVar17 * -2 + 1);\n        unaff_RBX \u003d (undefined8 *)((long)unaff_RBX + (ulong)bVar17 * -2 + 1);\n      }\n      FUN_001049c0();\n      return;\n    }\n    unaff_RBX \u003d (undefined8 *)((long)unaff_RBX + (long)unaff_R14);\nLAB_001049c3:\n    do {\n      do {\n        unaff_R13 \u003d (undefined8 *)((long)unaff_R13 + (long)unaff_R14);\n        puVar15 \u003d unaff_R12;\n        puVar12 \u003d unaff_RBP;\n        if (unaff_R12 \u003c\u003d unaff_R13) goto LAB_00104b15;\nLAB_001049cf:\n        puVar8 \u003d (undefined8 *)\n                 (**(code **)(unaff_RBP[1] + 0x270))\n                           (unaff_RBP,unaff_retaddr \u0026 0xffffffff,unaff_R13,unaff_R15);\n        puVar11 \u003d unaff_RBP;\n        puVar12 \u003d unaff_R13;\n        puVar15 \u003d unaff_R15;\n        if (puVar8 \u003d\u003d (undefined8 *)0x0) goto LAB_00102eb0;\n        pcVar1 \u003d (char *)puVar8[1];\n        if (((pcVar1 \u003d\u003d (char *)0x0) || (*pcVar1 !\u003d \u0027_\u0027)) || (pcVar1[1] !\u003d \u0027_\u0027)) {\nLAB_00104a03:\n          if (DAT_0010b7e8 \u003d\u003d 0) goto LAB_00104a11;\nLAB_00104ae2:\n          uVar5 \u003d (uint)(puVar8[4] \u003d\u003d 0x10c2a8);\nLAB_00104af9:\n          if (uVar5 !\u003d 0) goto LAB_00104a2d;\n          unaff_R13 \u003d (undefined8 *)((long)unaff_R13 + (long)unaff_R14);\n          puVar15 \u003d unaff_R12;\n          puVar12 \u003d unaff_RBP;\n          if (unaff_R12 \u003c\u003d unaff_R13) {\nLAB_00104b15:\n            unaff_RBX \u003d (undefined8 *)((long)unaff_RBX - (long)in_stack_00000018);\n            if (unaff_R14 \u003d\u003d (undefined8 *)0x8) {\n              lVar9 \u003d puVar12[1];\n              puVar11 \u003d (undefined8 *)((long)unaff_RBX + 7);\n              if (-1 \u003c (long)unaff_RBX) {\n                puVar11 \u003d unaff_RBX;\n              }\n              in_R8 \u003d (undefined8 *)(ulong)DAT_0010b800;\n              pcVar2 \u003d *(code **)(lVar9 + 0x208);\n              puVar11 \u003d (undefined8 *)((long)puVar11 \u003e\u003e 3);\n            }\n            else {\n              puVar11 \u003d (undefined8 *)((long)unaff_RBX / (long)unaff_R14);\n              lVar9 \u003d puVar12[1];\n              pcVar2 \u003d *(code **)(lVar9 + 0x208);\n            }\n            unaff_RBP \u003d puVar12;\n            if (DAT_0010b800 \u003d\u003d 0) {\n              DAT_0010b778 \u003d DAT_0010b80c !\u003d 0;\n              DAT_0010b780 \u003d puVar12;\n              DAT_0010b770 \u003d (undefined8 *)(*pcVar2)(puVar12);\n              DAT_0010b768 \u003d (undefined8 *)(**(code **)(puVar12[1] + 0x208))(puVar12);\n              unaff_RBX \u003d in_stack_00000048;\n              if ((DAT_0010b770 \u003d\u003d (undefined8 *)0x0) || (DAT_0010b768 \u003d\u003d (undefined8 *)0x0)) {\n                FUN_00106530(*puVar12);\n                __ptr \u003d unaff_R15;\n                goto LAB_00102d8e;\n              }\n              unaff_R12 \u003d (undefined8 *)(ulong)in_stack_00000038._4_4_;\n              if (DAT_0010b7f8 !\u003d 0) {\n                uVar18 \u003d (ulong)(DAT_0010b80c !\u003d 0);\n                qsort(in_stack_00000048,(size_t)puVar11,(size_t)unaff_R12,FUN_00102fd2);\n                puVar15 \u003d (undefined8 *)xmalloc((long)puVar11 \u003c\u003c 4);\n                puVar13 \u003d DAT_0010b770;\n                unaff_RBP \u003d DAT_0010b768;\n                unaff_R14 \u003d (undefined8 *)((long)puVar11 * (long)unaff_R12 + (long)unaff_RBX);\n                puVar8 \u003d DAT_0010b770;\n                in_R9 \u003d DAT_0010b768;\n                if (unaff_R14 \u003c\u003d unaff_RBX) goto LAB_00102ec2;\n                puVar11 \u003d (undefined8 *)\n                          (**(code **)(puVar12[1] + 0x270))(puVar12,uVar18 \u0026 0xffffffff,unaff_RBX);\n                __ptr \u003d unaff_RBX;\n                in_R8 \u003d unaff_R12;\n                in_stack_00000010 \u003d puVar15;\n                if (puVar11 \u003d\u003d (undefined8 *)0x0) goto LAB_00102eb9;\n                goto LAB_00104e35;\n              }\n              qsort(in_stack_00000048,(size_t)puVar11,(size_t)unaff_R12,\n                    (__compar_fn_t)(\u0026PTR_FUN_0010acc0)[(long)DAT_0010b7f4 + (long)DAT_0010b7fc * 2])\n              ;\n              lVar9 \u003d puVar12[1];\n            }\n            __ptr \u003d (undefined8 *)0x0;\n            do {\n              puVar12 \u003d in_stack_00000048;\n              puVar8 \u003d (undefined8 *)(ulong)DAT_0010b7f8;\n              unaff_R14 \u003d (undefined8 *)(ulong)(DAT_0010b80c !\u003d 0);\n              if (DAT_0010b7f8 !\u003d 0) {\n                puVar15 \u003d (undefined8 *)(**(code **)(lVar9 + 0x208))(unaff_RBP);\n                if (puVar15 \u003d\u003d (undefined8 *)0x0) goto LAB_00102ed2;\n                unaff_RBX \u003d __ptr + (long)puVar11 * 2;\n                puVar11 \u003d __ptr;\n                do {\n                  if (unaff_RBX \u003c\u003d puVar11) {\nLAB_00104c75:\n                    if (in_stack_00000040 \u003d\u003d (void *)0x0) {\n                      free(in_stack_00000048);\n                      free(__ptr);\n                      return;\n                    }\n                    free(in_stack_00000040);\n                    free(in_stack_00000048);\n                    free(__ptr);\n                    return;\n                  }\n                  puVar8 \u003d puVar15;\n                  lVar9 \u003d (**(code **)(unaff_RBP[1] + 0x270))(unaff_RBP,unaff_R14,*puVar11);\n                  if (lVar9 \u003d\u003d 0) {\n                    FUN_00106530(*unaff_RBP,0);\nLAB_00102ed2:\n                    puVar12 \u003d (undefined8 *)*unaff_RBP;\n                    FUN_00106530();\n                    puVar13 \u003d in_R8;\n                    puVar14 \u003d in_R9;\n                    goto LAB_00102edb;\n                  }\n                  puVar12 \u003d puVar11 + 1;\n                  puVar11 \u003d puVar11 + 2;\n                  FUN_00105110(unaff_RBP,lVar9,*puVar12,in_stack_00000008);\n                } while( true );\n              }\n              unaff_R12 \u003d (undefined8 *)(ulong)in_stack_00000038._4_4_;\n              unaff_R15 \u003d (undefined8 *)(**(code **)(lVar9 + 0x208))(unaff_RBP);\n              if (unaff_R15 \u003d\u003d (undefined8 *)0x0) {\n                FUN_00106530(*unaff_RBP);\n                puVar12 \u003d unaff_R12;\n                if (DAT_0010b80c \u003d\u003d 0) {\n                  lVar9 \u003d (**(code **)(unaff_RBP[1] + 0x350))(unaff_RBP);\n                  puVar11 \u003d in_stack_00000048;\n                  puVar15 \u003d unaff_R12;\n                  if (lVar9 \u003c 1) {\n                    puVar8 \u003d (undefined8 *)0x0;\n                    unaff_RBX \u003d (undefined8 *)0x0;\n                  }\n                  else {\nLAB_00102d8e:\n                    unaff_RBX \u003d (undefined8 *)xmalloc();\n                    puVar8 \u003d (undefined8 *)(**(code **)(unaff_RBP[1] + 0x358))(unaff_RBP,unaff_RBX);\n                    puVar12 \u003d puVar15;\n                    if ((long)puVar8 \u003c 0) {\n                      puVar12 \u003d (undefined8 *)*unaff_RBP;\n                      puVar11 \u003d (undefined8 *)FUN_00106530(puVar12,puVar15);\n                      goto LAB_00102dbe;\n                    }\n                  }\n                }\n                else {\n                  puVar8 \u003d unaff_R12;\n                  unaff_RBX \u003d in_stack_00000048;\n                  puVar11 \u003d (undefined8 *)0x0;\n                  puVar15 \u003d (undefined8 *)0x0;\n                }\n                in_R9 \u003d \u0026stack0x00000040;\n                in_R8 \u003d unaff_RBX;\n                lVar9 \u003d (**(code **)(unaff_RBP[1] + 0x360))(unaff_RBP,puVar15,puVar11,puVar8);\n                unaff_R12 \u003d puVar12;\n                if (0 \u003c lVar9) {\n                  unaff_R12 \u003d (undefined8 *)((long)puVar12 + lVar9);\n                  in_stack_00000048 \u003d (undefined8 *)xrealloc(in_stack_00000048);\n                  lVar7 \u003d 0;\n                  do {\n                    in_stack_00000048[(long)((long)puVar12 + lVar7)] \u003d\n                         (void *)(lVar7 * 0x30 + (long)in_stack_00000040);\n                    lVar7 \u003d lVar7 + 1;\n                  } while (lVar9 !\u003d lVar7);\n                  in_stack_00000048[(long)((long)puVar12 + lVar9)] \u003d 0;\n                }\n                if ((DAT_0010b80c \u003d\u003d 0) \u0026\u0026 (unaff_RBX !\u003d (undefined8 *)0x0)) {\n                  free(unaff_RBX);\n                }\n                if ((*(byte *)((long)unaff_RBP + 0x4a) \u0026 0x10) !\u003d 0) {\n                  unaff_RBX \u003d (undefined8 *)*unaff_RBP;\n                  DAT_0010b230 \u003d \u0027\\0\u0027;\n                  uVar6 \u003d dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n                  FUN_00106400(uVar6);\n                }\n                unaff_R14 \u003d (undefined8 *)(ulong)in_stack_00000038._4_4_;\n                bVar16 \u003d DAT_0010b80c !\u003d 0;\n                puVar11 \u003d (undefined8 *)(ulong)bVar16;\n                puVar8 \u003d in_stack_00000048;\n                in_stack_00000018 \u003d in_stack_00000048;\n                unaff_R15 \u003d (undefined8 *)(**(code **)(unaff_RBP[1] + 0x208))(unaff_RBP);\n                if (unaff_R15 !\u003d (undefined8 *)0x0) goto code_r0x00104992;\n              }\n              else {\n                puVar11 \u003d (undefined8 *)((long)puVar11 * (long)unaff_R12 + (long)puVar12);\n                unaff_RBX \u003d puVar12;\n                while( true ) {\n                  if (puVar11 \u003c\u003d unaff_RBX) goto LAB_00104c75;\n                  puVar8 \u003d unaff_R15;\n                  lVar9 \u003d (**(code **)(unaff_RBP[1] + 0x270))(unaff_RBP,unaff_R14,unaff_RBX);\n                  if (lVar9 \u003d\u003d 0) break;\n                  unaff_RBX \u003d (undefined8 *)((long)unaff_RBX + (long)unaff_R12);\n                  FUN_00105110(unaff_RBP,lVar9,0,in_stack_00000008);\n                }\n                FUN_00106530(*unaff_RBP,0);\n              }\n              FUN_00106530(*unaff_RBP);\n              puVar12 \u003d unaff_RBP;\n              puVar15 \u003d unaff_R15;\nLAB_00102eb0:\n              FUN_00106530(*puVar11);\nLAB_00102eb9:\n              FUN_00106530(*puVar12);\nLAB_00102ec2:\n              puVar11 \u003d (undefined8 *)0x0;\n              __ptr \u003d unaff_RBX;\n              in_R8 \u003d unaff_R12;\n              puVar13 \u003d puVar8;\n              unaff_RBP \u003d in_R9;\n              in_stack_00000010 \u003d puVar15;\nLAB_00104e35:\n              while (in_R9 \u003d puVar13, __ptr \u003c unaff_R14) {\n                unaff_RBX \u003d (undefined8 *)((long)__ptr + (long)in_R8);\n                if (unaff_RBX \u003c unaff_R14) {\n                  puVar8 \u003d unaff_RBP;\n                  puVar13 \u003d in_R8;\n                  puVar14 \u003d in_R9;\n                  puVar10 \u003d (undefined8 *)(**(code **)(puVar12[1] + 0x270))();\n                  if (puVar10 \u003d\u003d (undefined8 *)0x0) {\nLAB_00102edb:\n                    in_R9 \u003d puVar14;\n                    in_R8 \u003d puVar13;\n                    puVar12 \u003d (undefined8 *)*puVar12;\n                    puVar10 \u003d (undefined8 *)FUN_00106530();\n                  }\n                  else {\n                    puVar8 \u003d (undefined8 *)puVar11[4];\n                    if ((*(uint *)(puVar11 + 3) \u0026 0x200100) \u003d\u003d 0) goto LAB_00104e95;\n                  }\n                  lVar9 \u003d puVar11[2];\nLAB_00102ee7:\n                  if (puVar8 \u003d\u003d (undefined8 *)puVar10[4]) {\n                    lVar9 \u003d puVar10[2] - lVar9;\n                    puVar13 \u003d unaff_RBP;\n                    puVar14 \u003d __ptr;\n                    goto LAB_00104ea7;\n                  }\nLAB_00102dc4:\n                  lVar9 \u003d puVar8[8] - lVar9;\n                  puVar13 \u003d unaff_RBP;\n                  puVar14 \u003d __ptr;\n                }\n                else {\n                  puVar8 \u003d (undefined8 *)puVar11[4];\n                  if ((*(uint *)(puVar11 + 3) \u0026 0x200100) !\u003d 0) {\nLAB_00102dbe:\n                    lVar9 \u003d puVar11[2];\n                    puVar10 \u003d (undefined8 *)0x0;\n                    goto LAB_00102dc4;\n                  }\n                  puVar10 \u003d (undefined8 *)0x0;\nLAB_00104e95:\n                  puVar13 \u003d unaff_RBP;\n                  puVar14 \u003d __ptr;\n                  if (*(int *)(puVar12[1] + 8) \u003d\u003d 5) {\n                    lVar9 \u003d puVar11[7];\n                  }\n                  else {\n                    lVar9 \u003d puVar11[2];\n                    if ((*(byte *)((long)puVar8 + 0x25) \u0026 0x10) \u003d\u003d 0) {\n                      if (unaff_RBX \u003c unaff_R14) goto LAB_00102ee7;\n                      goto LAB_00102dc4;\n                    }\n                  }\n                }\nLAB_00104ea7:\n                puVar11 \u003d puVar10;\n                __ptr \u003d unaff_RBX;\n                unaff_RBP \u003d in_R9;\n                if (lVar9 !\u003d 0) {\n                  *puVar15 \u003d puVar14;\n                  puVar15[1] \u003d lVar9;\n                  puVar15 \u003d puVar15 + 2;\n                }\n              }\n              puVar11 \u003d (undefined8 *)((long)puVar15 - (long)in_stack_00000010 \u003e\u003e 4);\n              qsort(in_stack_00000010,(size_t)puVar11,0x10,FUN_00103533);\n              lVar9 \u003d puVar12[1];\n              unaff_RBX \u003d __ptr;\n              unaff_RBP \u003d puVar12;\n              __ptr \u003d in_stack_00000010;\n            } while( true );\n          }\n          goto LAB_001049cf;\n        }\n        iVar4 \u003d strcmp(pcVar1 + (pcVar1[2] \u003d\u003d \u0027_\u0027),\"__gnu_lto_slim\");\n        in_stack_00000010 \u003d puVar8;\n        if (iVar4 \u003d\u003d 0) {\n          if (DAT_0010b230 !\u003d \u0027\\0\u0027) {\n            in_stack_00000010 \u003d (undefined8 *)*unaff_RBP;\n            DAT_0010b230 \u003d \u0027\\0\u0027;\n            uVar6 \u003d dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n            FUN_00106400(uVar6,in_stack_00000010);\n          }\n          goto LAB_00104a03;\n        }\n        if (DAT_0010b7e8 !\u003d 0) goto LAB_00104ae2;\nLAB_00104a11:\n        if (DAT_0010b808 \u003d\u003d 0) {\n          if (DAT_0010b7d8 \u003d\u003d 0) goto LAB_00104a2d;\n          uVar5 \u003d (*(uint *)(puVar8 + 3) \u003e\u003e 7 ^ 1) \u0026 1;\n          goto LAB_00104af9;\n        }\n        if ((((*(uint *)(puVar8 + 3) \u0026 0x800082) \u003d\u003d 0) \u0026\u0026 (puVar8[4] !\u003d 0x10c2a8)) \u0026\u0026\n           ((*(byte *)(puVar8[4] + 0x25) \u0026 0x10) \u003d\u003d 0)) goto LAB_001049c3;\nLAB_00104a2d:\n        if (DAT_0010b81c !\u003d 0) {\n          if (DAT_0010b7f8 \u003d\u003d 0) goto LAB_00104a53;\nFUN_00104d5b:\n          if ((puVar8[4] !\u003d 0x10c2a8) \u0026\u0026 (puVar8[4] !\u003d 0x10c3c0)) goto LAB_00104cba;\n          goto LAB_001049c3;\n        }\n      } while ((*(byte *)(puVar8 + 3) \u0026 4) !\u003d 0);\n      if (DAT_0010b7f8 !\u003d 0) goto FUN_00104d5b;\nLAB_00104a53:\n      in_R9 \u003d (undefined8 *)(ulong)DAT_0010b7e4;\n      if (DAT_0010b7e4 \u003d\u003d 0) {\n        cVar3 \u003d (**(code **)(unaff_RBP[1] + 0x230))(unaff_RBP);\n        if (cVar3 !\u003d \u0027\\0\u0027) {\n          FUN_00102c19();\n          return;\n        }\n        goto LAB_00104a7b;\n      }\n    } while (puVar8[4] \u003d\u003d 0x10c2a8);\nLAB_00104cba:\n    cVar3 \u003d (**(code **)(unaff_RBP[1] + 0x230))(unaff_RBP);\n    if (cVar3 !\u003d \u0027\\0\u0027) {\n      FUN_00102c19();\n      return;\n    }\n  } while( true );\ncode_r0x00104992:\n  puVar15 \u003d (undefined8 *)((long)unaff_R12 * (long)unaff_R14);\n  unaff_R12 \u003d (undefined8 *)((long)in_stack_00000018 + (long)puVar15);\n  unaff_RBX \u003d in_stack_00000018;\n  puVar12 \u003d unaff_RBP;\n  if (in_stack_00000018 \u003c unaff_R12) goto code_r0x001049aa;\n  goto LAB_00104b15;\ncode_r0x001049aa:\n  unaff_retaddr \u003d (ulong)bVar16;\n  unaff_R13 \u003d in_stack_00000018;\n  goto LAB_001049cf;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00104d5b"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00102f19": {
      "entrypoint": "0x00102f19",
      "current_name": "FUN_00102f19",
      "code": "\nvoid FUN_00102f19(undefined8 param_1)\n\n{\n  char *pcVar1;\n  \n  pcVar1 \u003d \"\\n\\nUndefined symbols from %s:\\n\\n\";\n  if (DAT_0010b7e8 \u003d\u003d 0) {\n    pcVar1 \u003d \"\\n\\nSymbols from %s:\\n\\n\";\n  }\n  pcVar1 \u003d (char *)dcgettext(0,pcVar1,5);\n  printf(pcVar1,param_1);\n  pcVar1 \u003d \"Name                  Value   Class        Type         Size     Line  Section\\n\\n\";\n  if (DAT_0010b7a8 !\u003d 0x20) {\n    pcVar1 \u003d \n    \"Name                  Value           Class        Type         Size             Line  Section\\n\\n\"\n    ;\n  }\n  pcVar1 \u003d (char *)dcgettext(0,pcVar1,5);\n  printf(pcVar1);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "dcgettext",
        "printf"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00102f7b": {
      "entrypoint": "0x00102f7b",
      "current_name": "FUN_00102f7b",
      "code": "\n\n\nvoid FUN_00102f7b(undefined8 param_1)\n\n{\n  if ((_DAT_0010b7c4 !\u003d 0) \u0026\u0026 (DAT_0010b818 \u003d\u003d 0)) {\n    printf(\"%s:\\n\",param_1);\n    return;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "printf"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00102f9f": {
      "entrypoint": "0x00102f9f",
      "current_name": "FUN_00102f9f",
      "code": "\nundefined  [16] FUN_00102f9f(void)\n\n{\n  undefined auVar1 [16];\n  undefined8 unaff_retaddr;\n  \n  FUN_00106530(*DAT_0010b780);\n  auVar1._8_8_ \u003d unaff_retaddr;\n  auVar1._0_8_ \u003d 0xffffffff;\n  return auVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00104fa0"
      ],
      "called": [
        "FUN_00106530"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00102fc3": {
      "entrypoint": "0x00102fc3",
      "current_name": "FUN_00102fc3",
      "code": "\nulong FUN_00102fc3(undefined8 param_1,undefined8 param_2)\n\n{\n  char cVar1;\n  ulong uVar2;\n  char *__s;\n  char *__s_00;\n  uint uVar3;\n  long lVar4;\n  long lVar5;\n  size_t sVar6;\n  size_t sVar7;\n  char *pcVar8;\n  char *pcVar9;\n  ulong uVar10;\n  ulong uVar11;\n  ulong uVar12;\n  undefined8 uVar13;\n  long unaff_R13;\n  bool bVar14;\n  \n  uVar13 \u003d *DAT_0010b780;\n  FUN_00106530();\n  lVar4 \u003d (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,uVar13,DAT_0010b770);\n  lVar5 \u003d (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,param_2,DAT_0010b768);\n  if ((lVar4 \u003d\u003d 0) || (unaff_R13 \u003d lVar5, lVar5 \u003d\u003d 0)) {\n    lVar5 \u003d FUN_00106530(*DAT_0010b780);\n  }\n  if ((*(long *)(lVar4 + 0x20) \u003d\u003d 0x10c2a8) || (*(long *)(lVar5 + 0x20) \u003d\u003d 0x10c2a8)) {\n                    \n    abort();\n  }\n  uVar10 \u003d *(ulong *)(*(long *)(lVar4 + 0x20) + 0x30);\n  uVar2 \u003d *(ulong *)(*(long *)(lVar5 + 0x20) + 0x30);\n  uVar12 \u003d *(long *)(lVar4 + 0x10) + uVar10;\n  uVar11 \u003d *(long *)(unaff_R13 + 0x10) + uVar2;\n  bVar14 \u003d uVar12 \u003c uVar11;\n  if ((uVar12 !\u003d uVar11) || (bVar14 \u003d uVar10 \u003c uVar2, uVar10 !\u003d uVar2)) {\n    return (ulong)(-(uint)bVar14 | 1);\n  }\n  __s \u003d *(char **)(lVar4 + 8);\n  __s_00 \u003d *(char **)(unaff_R13 + 8);\n  sVar6 \u003d strlen(__s);\n  sVar7 \u003d strlen(__s_00);\n  pcVar8 \u003d strstr(__s,\"gnu_compiled\");\n  if (pcVar8 \u003d\u003d (char *)0x0) {\n    pcVar9 \u003d strstr(__s,\"gcc2_compiled\");\n    pcVar8 \u003d strstr(__s_00,\"gnu_compiled\");\n    if ((pcVar8 \u003d\u003d (char *)0x0) \u0026\u0026 (pcVar8 \u003d strstr(__s_00,\"gcc2_compiled\"), pcVar8 \u003d\u003d (char *)0x0))\n    goto joined_r0x00103157;\n    if (pcVar9 \u003d\u003d (char *)0x0) {\n      return 1;\n    }\n  }\n  else {\n    pcVar8 \u003d strstr(__s_00,\"gnu_compiled\");\n    if (pcVar8 \u003d\u003d (char *)0x0) {\n      pcVar9 \u003d strstr(__s_00,\"gcc2_compiled\");\njoined_r0x00103157:\n      if (pcVar9 !\u003d (char *)0x0) {\n        return 0xffffffff;\n      }\n    }\n  }\n  uVar3 \u003d *(uint *)(unaff_R13 + 0x18) \u0026 0x4000;\n  if ((*(byte *)(lVar4 + 0x19) \u0026 0x40) \u003d\u003d 0) {\n    if ((sVar6 \u003c 3) || (__s[sVar6 - 2] !\u003d \u0027.\u0027)) {\n      if (uVar3 !\u003d 0) {\n        return 1;\n      }\n      if ((sVar7 \u003c 3) || (__s_00[sVar7 - 2] !\u003d \u0027.\u0027)) goto LAB_00103202;\n      bVar14 \u003d false;\n      goto LAB_001031e7;\n    }\n    cVar1 \u003d __s[sVar6 - 1];\n    bVar14 \u003d cVar1 \u003d\u003d \u0027o\u0027 || cVar1 \u003d\u003d \u0027a\u0027;\n    if (uVar3 \u003d\u003d 0) {\n      if ((sVar7 \u003c 3) || (__s_00[sVar7 - 2] !\u003d \u0027.\u0027)) {\n        if (cVar1 \u003d\u003d \u0027o\u0027 || cVar1 \u003d\u003d \u0027a\u0027) {\n          return 0xffffffff;\n        }\n        goto LAB_00103202;\n      }\n      goto LAB_001031e7;\n    }\n  }\n  else {\n    if (uVar3 !\u003d 0) goto LAB_00103202;\n    if (sVar7 \u003c 3) {\n      return 0xffffffff;\n    }\n    if (__s_00[sVar7 - 2] !\u003d \u0027.\u0027) {\n      return 0xffffffff;\n    }\n    bVar14 \u003d true;\nLAB_001031e7:\n    if ((__s_00[sVar7 - 1] !\u003d \u0027o\u0027) \u0026\u0026 (__s_00[sVar7 - 1] !\u003d \u0027a\u0027)) {\n      if (bVar14) {\n        return 0xffffffff;\n      }\n      goto LAB_00103202;\n    }\n  }\n  if (!bVar14) {\n    return 1;\n  }\nLAB_00103202:\n  uVar10 \u003d FUN_00104fa0(uVar13,param_2);\n  return uVar10;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00105050"
      ],
      "called": [
        "FUN_00106530"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00102fd2": {
      "entrypoint": "0x00102fd2",
      "current_name": "FUN_00102fd2",
      "code": "\nulong FUN_00102fd2(undefined8 param_1,undefined8 param_2)\n\n{\n  char cVar1;\n  ulong uVar2;\n  char *__s;\n  char *__s_00;\n  uint uVar3;\n  long lVar4;\n  long lVar5;\n  size_t sVar6;\n  size_t sVar7;\n  char *pcVar8;\n  char *pcVar9;\n  ulong uVar10;\n  ulong uVar11;\n  ulong uVar12;\n  long unaff_R13;\n  bool bVar13;\n  \n  lVar4 \u003d (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,param_1,DAT_0010b770);\n  lVar5 \u003d (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,param_2,DAT_0010b768);\n  if ((lVar4 \u003d\u003d 0) || (unaff_R13 \u003d lVar5, lVar5 \u003d\u003d 0)) {\n    lVar5 \u003d FUN_00106530(*DAT_0010b780);\n  }\n  if ((*(long *)(lVar4 + 0x20) \u003d\u003d 0x10c2a8) || (*(long *)(lVar5 + 0x20) \u003d\u003d 0x10c2a8)) {\n                    \n    abort();\n  }\n  uVar10 \u003d *(ulong *)(*(long *)(lVar4 + 0x20) + 0x30);\n  uVar2 \u003d *(ulong *)(*(long *)(lVar5 + 0x20) + 0x30);\n  uVar12 \u003d *(long *)(lVar4 + 0x10) + uVar10;\n  uVar11 \u003d *(long *)(unaff_R13 + 0x10) + uVar2;\n  bVar13 \u003d uVar12 \u003c uVar11;\n  if ((uVar12 !\u003d uVar11) || (bVar13 \u003d uVar10 \u003c uVar2, uVar10 !\u003d uVar2)) {\n    return (ulong)(-(uint)bVar13 | 1);\n  }\n  __s \u003d *(char **)(lVar4 + 8);\n  __s_00 \u003d *(char **)(unaff_R13 + 8);\n  sVar6 \u003d strlen(__s);\n  sVar7 \u003d strlen(__s_00);\n  pcVar8 \u003d strstr(__s,\"gnu_compiled\");\n  if (pcVar8 \u003d\u003d (char *)0x0) {\n    pcVar9 \u003d strstr(__s,\"gcc2_compiled\");\n    pcVar8 \u003d strstr(__s_00,\"gnu_compiled\");\n    if ((pcVar8 \u003d\u003d (char *)0x0) \u0026\u0026 (pcVar8 \u003d strstr(__s_00,\"gcc2_compiled\"), pcVar8 \u003d\u003d (char *)0x0))\n    goto joined_r0x00103157;\n    if (pcVar9 \u003d\u003d (char *)0x0) {\n      return 1;\n    }\n  }\n  else {\n    pcVar8 \u003d strstr(__s_00,\"gnu_compiled\");\n    if (pcVar8 \u003d\u003d (char *)0x0) {\n      pcVar9 \u003d strstr(__s_00,\"gcc2_compiled\");\njoined_r0x00103157:\n      if (pcVar9 !\u003d (char *)0x0) {\n        return 0xffffffff;\n      }\n    }\n  }\n  uVar3 \u003d *(uint *)(unaff_R13 + 0x18) \u0026 0x4000;\n  if ((*(byte *)(lVar4 + 0x19) \u0026 0x40) \u003d\u003d 0) {\n    if ((sVar6 \u003c 3) || (__s[sVar6 - 2] !\u003d \u0027.\u0027)) {\n      if (uVar3 !\u003d 0) {\n        return 1;\n      }\n      if ((sVar7 \u003c 3) || (__s_00[sVar7 - 2] !\u003d \u0027.\u0027)) goto LAB_00103202;\n      bVar13 \u003d false;\n      goto LAB_001031e7;\n    }\n    cVar1 \u003d __s[sVar6 - 1];\n    bVar13 \u003d cVar1 \u003d\u003d \u0027o\u0027 || cVar1 \u003d\u003d \u0027a\u0027;\n    if (uVar3 \u003d\u003d 0) {\n      if ((sVar7 \u003c 3) || (__s_00[sVar7 - 2] !\u003d \u0027.\u0027)) {\n        if (cVar1 \u003d\u003d \u0027o\u0027 || cVar1 \u003d\u003d \u0027a\u0027) {\n          return 0xffffffff;\n        }\n        goto LAB_00103202;\n      }\n      goto LAB_001031e7;\n    }\n  }\n  else {\n    if (uVar3 !\u003d 0) goto LAB_00103202;\n    if (sVar7 \u003c 3) {\n      return 0xffffffff;\n    }\n    if (__s_00[sVar7 - 2] !\u003d \u0027.\u0027) {\n      return 0xffffffff;\n    }\n    bVar13 \u003d true;\nLAB_001031e7:\n    if ((__s_00[sVar7 - 1] !\u003d \u0027o\u0027) \u0026\u0026 (__s_00[sVar7 - 1] !\u003d \u0027a\u0027)) {\n      if (bVar13) {\n        return 0xffffffff;\n      }\n      goto LAB_00103202;\n    }\n  }\n  if (!bVar13) {\n    return 1;\n  }\nLAB_00103202:\n  uVar10 \u003d FUN_00104fa0(param_1,param_2);\n  return uVar10;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00104d5b"
      ],
      "called": [
        "abort",
        "FUN_00106530",
        "strstr",
        "strlen",
        "FUN_00104fa0"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103238": {
      "entrypoint": "0x00103238",
      "current_name": "FUN_00103238",
      "code": "\n\n\nvoid FUN_00103238(void)\n\n{\n  long *plVar1;\n  void *__ptr;\n  char *__s1;\n  long lVar2;\n  char cVar3;\n  int iVar4;\n  long unaff_RBX;\n  void *pvVar5;\n  uint uVar6;\n  long unaff_R13;\n  long lVar7;\n  ulong param_10;\n  void *param_12;\n  \n  pvVar5 \u003d DAT_0010b750;\n  if (_DAT_0010b7b0 \u003d\u003d unaff_R13) {\n    if (DAT_0010b750 !\u003d (void *)0x0) goto LAB_00103296;\n  }\n  else {\n    uVar6 \u003d 0;\n    if (DAT_0010b750 !\u003d (void *)0x0) {\n      for (; uVar6 \u003c DAT_0010b748; uVar6 \u003d uVar6 + 1) {\n        __ptr \u003d *(void **)((long)pvVar5 + (ulong)uVar6 * 8);\n        if (__ptr !\u003d (void *)0x0) {\n          free(__ptr);\n        }\n      }\n      free(DAT_0010b740);\n      free(pvVar5);\n      free(DAT_0010b738);\n      DAT_0010b740 \u003d (void *)0x0;\n      DAT_0010b750 \u003d (void *)0x0;\n      DAT_0010b738 \u003d (void *)0x0;\n    }\n  }\n  DAT_0010b748 \u003d *(uint *)(unaff_R13 + 0xa0);\n  DAT_0010b740 \u003d (void *)xmalloc((ulong)DAT_0010b748 * 8);\n  DAT_0010b750 \u003d (void *)xmalloc((ulong)DAT_0010b748 \u003c\u003c 3);\n  DAT_0010b738 \u003d (void *)xmalloc((ulong)DAT_0010b748 \u003c\u003c 3);\n  param_12 \u003d DAT_0010b740;\n  bfd_map_over_sections();\n  _DAT_0010b7b0 \u003d unaff_R13;\nLAB_00103296:\n  __s1 \u003d *(char **)(unaff_RBX + 8);\n  uVar6 \u003d 0;\n  do {\n    if (DAT_0010b748 \u003c\u003d uVar6) {\n      putc(10,_stdout);\n      return;\n    }\n    pvVar5 \u003d DAT_0010b738;\n    for (lVar7 \u003d 0; plVar1 \u003d (long *)((long)pvVar5 + (ulong)uVar6 * 8),\n        *plVar1 !\u003d lVar7 \u0026\u0026 lVar7 \u003c\u003d *plVar1; lVar7 \u003d lVar7 + 1) {\n      plVar1 \u003d **(long ***)(*(long *)((long)DAT_0010b750 + (ulong)uVar6 * 8) + lVar7 * 8);\n      if ((((plVar1 !\u003d (long *)0x0) \u0026\u0026\n           (lVar2 \u003d *plVar1, *(long *)(lVar2 + 0x20) \u003d\u003d *(long *)(unaff_RBX + 0x20))) \u0026\u0026\n          (*(long *)(lVar2 + 0x10) \u003d\u003d *(long *)(unaff_RBX + 0x10))) \u0026\u0026\n         (((iVar4 \u003d strcmp(__s1,*(char **)(lVar2 + 8)), iVar4 \u003d\u003d 0 \u0026\u0026\n           (cVar3 \u003d (**(code **)(*(long *)(unaff_R13 + 8) + 0x240))(), pvVar5 \u003d DAT_0010b738,\n           cVar3 !\u003d \u0027\\0\u0027)) \u0026\u0026 (param_12 !\u003d (void *)0x0)))) {\n        printf(\"\\t%s:%u\",param_12,param_10 \u003e\u003e 0x20);\n        uVar6 \u003d DAT_0010b748;\n        break;\n      }\n    }\n    uVar6 \u003d uVar6 + 1;\n  } while( true );\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00105110"
      ],
      "called": [
        "xmalloc",
        "bfd_map_over_sections",
        "free",
        "FUN_00103c00"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103463": {
      "entrypoint": "0x00103463",
      "current_name": "FUN_00103463",
      "code": "\n\n\nvoid FUN_00103463(void)\n\n{\n  long *plVar1;\n  long lVar2;\n  char cVar3;\n  int iVar4;\n  long lVar5;\n  char *unaff_R12;\n  undefined8 *unaff_R13;\n  long lVar6;\n  long unaff_R15;\n  undefined8 param_8;\n  ulong param_10;\n  long in_stack_00000050;\n  \n  FUN_00106530(*unaff_R13);\n  do {\n    param_8._4_4_ \u003d param_8._4_4_ + 1;\n    if (DAT_0010b748 \u003c\u003d param_8._4_4_) {\n      putc(10,_stdout);\n      return;\n    }\n    lVar5 \u003d DAT_0010b738;\n    for (lVar6 \u003d 0; plVar1 \u003d (long *)(lVar5 + (ulong)param_8._4_4_ * 8),\n        *plVar1 !\u003d lVar6 \u0026\u0026 lVar6 \u003c\u003d *plVar1; lVar6 \u003d lVar6 + 1) {\n      plVar1 \u003d **(long ***)(*(long *)(DAT_0010b750 + (ulong)param_8._4_4_ * 8) + lVar6 * 8);\n      if ((((plVar1 !\u003d (long *)0x0) \u0026\u0026\n           (lVar2 \u003d *plVar1, *(long *)(lVar2 + 0x20) \u003d\u003d *(long *)(unaff_R15 + 0x20))) \u0026\u0026\n          (*(long *)(lVar2 + 0x10) \u003d\u003d *(long *)(unaff_R15 + 0x10))) \u0026\u0026\n         (((iVar4 \u003d strcmp(unaff_R12,*(char **)(lVar2 + 8)), iVar4 \u003d\u003d 0 \u0026\u0026\n           (cVar3 \u003d (**(code **)(unaff_R13[1] + 0x240))(), lVar5 \u003d DAT_0010b738, cVar3 !\u003d \u0027\\0\u0027)) \u0026\u0026\n          (in_stack_00000050 !\u003d 0)))) {\n        printf(\"\\t%s:%u\",in_stack_00000050,param_10 \u003e\u003e 0x20);\n        param_8._4_4_ \u003d DAT_0010b748;\n        break;\n      }\n    }\n  } while( true );\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00105110"
      ],
      "called": [
        "putc",
        "strcmp",
        "printf",
        "FUN_00106530"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0010351b": {
      "entrypoint": "0x0010351b",
      "current_name": "FUN_0010351b",
      "code": "\nvoid FUN_0010351b(void)\n\n{\n  if (DAT_0010b818 \u003d\u003d 0) {\n    printf(\"\\n%s:\\n\");\n    return;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001043d0"
      ],
      "called": [
        "printf"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103533": {
      "entrypoint": "0x00103533",
      "current_name": "FUN_00103533",
      "code": "\nulong FUN_00103533(undefined8 *param_1,undefined8 *param_2)\n\n{\n  ulong uVar1;\n  \n  if ((ulong)param_1[1] \u003c (ulong)param_2[1]) {\n    return (ulong)(-(uint)(DAT_0010b7f4 \u003d\u003d 0) | 1);\n  }\n  if ((ulong)param_2[1] \u003c (ulong)param_1[1]) {\n    return (ulong)((-(uint)(DAT_0010b7f4 \u003d\u003d 0) \u0026 2) - 1);\n  }\n                    /* WARNING: Could not recover jumptable at 0x00103571. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  uVar1 \u003d (*(code *)(\u0026PTR_FUN_0010acc0)[DAT_0010b7f4])(*param_1,*param_2);\n  return uVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00104d5b"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103573": {
      "entrypoint": "0x00103573",
      "current_name": "FUN_00103573",
      "code": "\nvoid FUN_00103573(undefined8 *param_1,undefined8 *param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  if (param_1 !\u003d (undefined8 *)0x0) {\n    printf(\"%s:\",*param_1);\n  }\n  printf(\"%s:\",*param_2,param_4);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001053b0"
      ],
      "called": [
        "printf"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_001035a2": {
      "entrypoint": "0x001035a2",
      "current_name": "FUN_001035a2",
      "code": "\nvoid FUN_001035a2(void)\n\n{\n  long *unaff_RBX;\n  long lVar1;\n  \n  if (unaff_RBX[2] \u003d\u003d 0) {\n    lVar1 \u003d unaff_RBX[1];\n  }\n  else {\n    lVar1 \u003d *(long *)(unaff_RBX[2] + 0x38);\n  }\n  if (lVar1 !\u003d 0) {\n    putchar(0x20);\n    if (unaff_RBX[2] \u003d\u003d 0) {\n      lVar1 \u003d unaff_RBX[1];\n    }\n    else {\n      lVar1 \u003d *(long *)(unaff_RBX[2] + 0x38);\n    }\n    FUN_001054d0(lVar1);\n  }\n  printf(\" %c\",(ulong)(uint)(int)*(char *)(*unaff_RBX + 8));\n  if (*(char *)(*unaff_RBX + 8) !\u003d \u0027-\u0027) {\n    FUN_00104740(\u0026DAT_0010712c);\n    return;\n  }\n  putchar(0x20);\n  printf(\u0026DAT_0010b238,(ulong)(uint)(int)*(char *)(*unaff_RBX + 0x19));\n  putchar(0x20);\n  printf(\u0026DAT_0010b23d,(ulong)(uint)(int)*(short *)(*unaff_RBX + 0x1a));\n  printf(\" %5s\",*(undefined8 *)(*unaff_RBX + 0x20));\n  FUN_00104740(\u0026DAT_0010712c);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001053c0"
      ],
      "called": [
        "putchar",
        "printf",
        "FUN_001054d0",
        "FUN_00104740"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_001036a7": {
      "entrypoint": "0x001036a7",
      "current_name": "FUN_001036a7",
      "code": "\nvoid FUN_001036a7(undefined8 *param_1,undefined8 *param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  if (DAT_0010b818 !\u003d 0) {\n    if (param_1 !\u003d (undefined8 *)0x0) {\n      printf(\"%s:\",*param_1);\n    }\n    printf(\"%s:\",*param_2,param_4);\n    return;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "printf"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_001036e0": {
      "entrypoint": "0x001036e0",
      "current_name": "FUN_001036e0",
      "code": "\nvoid FUN_001036e0(undefined8 *param_1,undefined8 *param_2)\n\n{\n  if (param_1 !\u003d (undefined8 *)0x0) {\n    printf(\"%s[%s]: \",*param_1);\n    return;\n  }\n  printf(\"%s: \",*param_2);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001064a0"
      ],
      "called": [
        "printf"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0010370a": {
      "entrypoint": "0x0010370a",
      "current_name": "FUN_0010370a",
      "code": "\nvoid FUN_0010370a(void)\n\n{\n  char cVar1;\n  ushort uVar2;\n  int iVar3;\n  long *plVar4;\n  int *piVar5;\n  undefined8 uVar6;\n  long lVar7;\n  ulong unaff_RBX;\n  byte bVar8;\n  ulong uVar9;\n  char *pcVar10;\n  \n  plVar4 \u003d (long *)dcgettext(0,\"Print width has not been initialized (%d)\",5);\n  uVar9 \u003d unaff_RBX \u0026 0xffffffff;\n  FUN_00106300(plVar4,uVar9);\n  FUN_00104740(\"%-20s|\",plVar4,0,uVar9);\n  cVar1 \u003d bfd_is_undefined_symclass((int)*(char *)(*plVar4 + 8));\n  if (cVar1 \u003d\u003d \u0027\\0\u0027) {\n    FUN_001054d0(*(undefined8 *)*plVar4);\n  }\n  else if (DAT_0010b7a8 \u003d\u003d 0x20) {\n    printf(\"        \");\n  }\n  else {\n    printf(\"                \");\n  }\n  printf(\"|   %c  |\",(ulong)(uint)(int)*(char *)(*plVar4 + 8));\n  if (*(char *)(*plVar4 + 8) \u003d\u003d \u0027-\u0027) {\n    printf(\"%18s|  \",*(undefined8 *)(*plVar4 + 0x20));\n    printf(\u0026DAT_0010b23d,(ulong)(uint)(int)*(short *)(*plVar4 + 0x1a));\n    goto LAB_00103a54;\n  }\n  if (plVar4[2] \u003d\u003d 0) {\n    if (plVar4[3] !\u003d 0) {\n      lVar7 \u003d *(long *)(plVar4[3] + 0x30);\n      cVar1 \u003d *(char *)(lVar7 + 0x28);\n      if (cVar1 \u003d\u003d \u0027g\u0027) goto LAB_00103983;\n      if (cVar1 \u003d\u003d \u0027h\u0027) {\n        pcVar10 \u003d \"Line\";\n      }\n      else if (cVar1 \u003d\u003d \u0027d\u0027) {\n        pcVar10 \u003d \"Block\";\n      }\n      else if (*(ushort *)(lVar7 + 0x26) \u003d\u003d 0) {\n        pcVar10 \u003d \"None\";\n      }\n      else {\n        uVar2 \u003d *(ushort *)(lVar7 + 0x26) \u003e\u003e 4 \u0026 3;\n        if (uVar2 \u003d\u003d 2) {\n          pcVar10 \u003d \"Function\";\n        }\n        else if (uVar2 \u003d\u003d 3) {\n          pcVar10 \u003d \"Array\";\n        }\n        else {\n          if (uVar2 !\u003d 1) {\n            free(DAT_0010b730);\n            uVar2 \u003d *(ushort *)(lVar7 + 0x26);\n            bVar8 \u003d *(byte *)(lVar7 + 0x28);\n            pcVar10 \u003d (char *)dcgettext(0,\"\u003cunknown\u003e: %d/%d\",5);\n            iVar3 \u003d asprintf(\u0026DAT_0010b730,pcVar10,(ulong)bVar8,(ulong)uVar2);\n            pcVar10 \u003d DAT_0010b730;\n            goto joined_r0x00103964;\n          }\n          pcVar10 \u003d \"Pointer\";\n        }\n      }\n      goto LAB_001039c0;\n    }\n    printf(\"                  |\");\n  }\n  else {\n    bVar8 \u003d *(byte *)(plVar4[2] + 0x48) \u0026 0xf;\n    switch(bVar8) {\n    case 0:\n      pcVar10 \u003d \"NOTYPE\";\n      break;\n    case 1:\n      pcVar10 \u003d \"OBJECT\";\n      break;\n    case 2:\n      pcVar10 \u003d \"FUNC\";\n      break;\n    case 3:\n      pcVar10 \u003d \"SECTION\";\n      break;\n    case 4:\n      pcVar10 \u003d \"FILE\";\n      break;\n    case 5:\n      pcVar10 \u003d \"COMMON\";\n      break;\n    case 6:\n      pcVar10 \u003d \"TLS\";\n      break;\n    default:\n      free(DAT_0010b728);\n      pcVar10 \u003d \"\u003cprocessor specific\u003e: %d\";\n      if ((2 \u003c bVar8 - 0xd) \u0026\u0026 (pcVar10 \u003d \"\u003cOS specific\u003e: %d\", 2 \u003c bVar8 - 10)) {\n        pcVar10 \u003d \"\u003cunknown\u003e: %d\";\n      }\n      pcVar10 \u003d (char *)dcgettext(0,pcVar10,5);\n      iVar3 \u003d asprintf(\u0026DAT_0010b728,pcVar10,(ulong)bVar8);\n      pcVar10 \u003d DAT_0010b728;\njoined_r0x00103964:\n      if (iVar3 \u003c 0) {\n        piVar5 \u003d __errno_location();\n        uVar6 \u003d xstrerror(*piVar5);\n        FUN_00106300(\u0026DAT_0010712d,uVar6);\nLAB_00103983:\n        pcVar10 \u003d \"File\";\n      }\n    }\nLAB_001039c0:\n    printf(\"%18s|\",pcVar10);\n  }\n  if (plVar4[2] \u003d\u003d 0) {\n    if (plVar4[1] !\u003d 0) goto LAB_001039fb;\nLAB_00103a02:\n    if (DAT_0010b7a8 \u003d\u003d 0x20) {\n      printf(\"        \");\n    }\n    else {\n      printf(\"                \");\n    }\n  }\n  else {\n    if (*(long *)(plVar4[2] + 0x38) \u003d\u003d 0) goto LAB_00103a02;\nLAB_001039fb:\n    FUN_001054d0();\n  }\n  lVar7 \u003d plVar4[2];\n  if ((lVar7 !\u003d 0) || (lVar7 \u003d plVar4[3], lVar7 !\u003d 0)) {\n    printf(\"|     |%s\",**(undefined8 **)(lVar7 + 0x20));\n    return;\n  }\nLAB_00103a54:\n  printf(\"|     |\");\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001054d0"
      ],
      "called": [
        "FUN_00106300",
        "dcgettext"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103729": {
      "entrypoint": "0x00103729",
      "current_name": "FUN_00103729",
      "code": "\nvoid FUN_00103729(long *param_1,undefined8 param_2)\n\n{\n  char cVar1;\n  ushort uVar2;\n  int iVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  long lVar6;\n  byte bVar7;\n  char *pcVar8;\n  \n  FUN_00104740(\"%-20s|\",param_1,0,param_2);\n  cVar1 \u003d bfd_is_undefined_symclass((int)*(char *)(*param_1 + 8));\n  if (cVar1 \u003d\u003d \u0027\\0\u0027) {\n    FUN_001054d0(*(undefined8 *)*param_1);\n  }\n  else if (DAT_0010b7a8 \u003d\u003d 0x20) {\n    printf(\"        \");\n  }\n  else {\n    printf(\"                \");\n  }\n  printf(\"|   %c  |\",(ulong)(uint)(int)*(char *)(*param_1 + 8));\n  if (*(char *)(*param_1 + 8) \u003d\u003d \u0027-\u0027) {\n    printf(\"%18s|  \",*(undefined8 *)(*param_1 + 0x20));\n    printf(\u0026DAT_0010b23d,(ulong)(uint)(int)*(short *)(*param_1 + 0x1a));\n    goto LAB_00103a54;\n  }\n  if (param_1[2] \u003d\u003d 0) {\n    if (param_1[3] !\u003d 0) {\n      lVar6 \u003d *(long *)(param_1[3] + 0x30);\n      cVar1 \u003d *(char *)(lVar6 + 0x28);\n      if (cVar1 \u003d\u003d \u0027g\u0027) goto LAB_00103983;\n      if (cVar1 \u003d\u003d \u0027h\u0027) {\n        pcVar8 \u003d \"Line\";\n      }\n      else if (cVar1 \u003d\u003d \u0027d\u0027) {\n        pcVar8 \u003d \"Block\";\n      }\n      else if (*(ushort *)(lVar6 + 0x26) \u003d\u003d 0) {\n        pcVar8 \u003d \"None\";\n      }\n      else {\n        uVar2 \u003d *(ushort *)(lVar6 + 0x26) \u003e\u003e 4 \u0026 3;\n        if (uVar2 \u003d\u003d 2) {\n          pcVar8 \u003d \"Function\";\n        }\n        else if (uVar2 \u003d\u003d 3) {\n          pcVar8 \u003d \"Array\";\n        }\n        else {\n          if (uVar2 !\u003d 1) {\n            free(DAT_0010b730);\n            uVar2 \u003d *(ushort *)(lVar6 + 0x26);\n            bVar7 \u003d *(byte *)(lVar6 + 0x28);\n            pcVar8 \u003d (char *)dcgettext(0,\"\u003cunknown\u003e: %d/%d\",5);\n            iVar3 \u003d asprintf(\u0026DAT_0010b730,pcVar8,(ulong)bVar7,(ulong)uVar2);\n            pcVar8 \u003d DAT_0010b730;\n            goto joined_r0x00103964;\n          }\n          pcVar8 \u003d \"Pointer\";\n        }\n      }\n      goto LAB_001039c0;\n    }\n    printf(\"                  |\");\n  }\n  else {\n    bVar7 \u003d *(byte *)(param_1[2] + 0x48) \u0026 0xf;\n    switch(bVar7) {\n    case 0:\n      pcVar8 \u003d \"NOTYPE\";\n      break;\n    case 1:\n      pcVar8 \u003d \"OBJECT\";\n      break;\n    case 2:\n      pcVar8 \u003d \"FUNC\";\n      break;\n    case 3:\n      pcVar8 \u003d \"SECTION\";\n      break;\n    case 4:\n      pcVar8 \u003d \"FILE\";\n      break;\n    case 5:\n      pcVar8 \u003d \"COMMON\";\n      break;\n    case 6:\n      pcVar8 \u003d \"TLS\";\n      break;\n    default:\n      free(DAT_0010b728);\n      pcVar8 \u003d \"\u003cprocessor specific\u003e: %d\";\n      if ((2 \u003c bVar7 - 0xd) \u0026\u0026 (pcVar8 \u003d \"\u003cOS specific\u003e: %d\", 2 \u003c bVar7 - 10)) {\n        pcVar8 \u003d \"\u003cunknown\u003e: %d\";\n      }\n      pcVar8 \u003d (char *)dcgettext(0,pcVar8,5);\n      iVar3 \u003d asprintf(\u0026DAT_0010b728,pcVar8,(ulong)bVar7);\n      pcVar8 \u003d DAT_0010b728;\njoined_r0x00103964:\n      if (iVar3 \u003c 0) {\n        piVar4 \u003d __errno_location();\n        uVar5 \u003d xstrerror(*piVar4);\n        FUN_00106300(\u0026DAT_0010712d,uVar5);\nLAB_00103983:\n        pcVar8 \u003d \"File\";\n      }\n    }\nLAB_001039c0:\n    printf(\"%18s|\",pcVar8);\n  }\n  if (param_1[2] \u003d\u003d 0) {\n    if (param_1[1] !\u003d 0) goto LAB_001039fb;\nLAB_00103a02:\n    if (DAT_0010b7a8 \u003d\u003d 0x20) {\n      printf(\"        \");\n    }\n    else {\n      printf(\"                \");\n    }\n  }\n  else {\n    if (*(long *)(param_1[2] + 0x38) \u003d\u003d 0) goto LAB_00103a02;\nLAB_001039fb:\n    FUN_001054d0();\n  }\n  lVar6 \u003d param_1[2];\n  if ((lVar6 !\u003d 0) || (lVar6 \u003d param_1[3], lVar6 !\u003d 0)) {\n    printf(\"|     |%s\",**(undefined8 **)(lVar6 + 0x20));\n    return;\n  }\nLAB_00103a54:\n  printf(\"|     |\");\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "asprintf",
        "FUN_00106300",
        "__errno_location",
        "dcgettext",
        "printf",
        "FUN_001054d0",
        "bfd_is_undefined_symclass",
        "free",
        "FUN_00104740",
        "xstrerror"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103a66": {
      "entrypoint": "0x00103a66",
      "current_name": "FUN_00103a66",
      "code": "\nvoid FUN_00103a66(void)\n\n{\n  long unaff_RBX;\n  \n  if (*(long *)(unaff_RBX + 8) !\u003d 0) {\n    FUN_0010651a();\n    return;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001064b0"
      ],
      "called": [
        "FUN_0010651a"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103a78": {
      "entrypoint": "0x00103a78",
      "current_name": "FUN_00103a78",
      "code": "\n\n\nvoid FUN_00103a78(void)\n\n{\n  undefined8 uVar1;\n  long unaff_RBX;\n  undefined8 unaff_retaddr;\n  \n  uVar1 \u003d dcgettext(0,\"cause of error unknown\",5);\n  fflush(_stdout);\n  if (unaff_RBX !\u003d 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",DAT_0010b820);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",DAT_0010b820,uVar1,unaff_retaddr);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00106540"
      ],
      "called": [
        "dcgettext"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103ab9": {
      "entrypoint": "0x00103ab9",
      "current_name": "FUN_00103ab9",
      "code": "\nvoid FUN_00103ab9(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103aba": {
      "entrypoint": "0x00103aba",
      "current_name": "FUN_00103aba",
      "code": "\nvoid FUN_00103aba(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103abb": {
      "entrypoint": "0x00103abb",
      "current_name": "FUN_00103abb",
      "code": "\nvoid FUN_00103abb(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103abc": {
      "entrypoint": "0x00103abc",
      "current_name": "FUN_00103abc",
      "code": "\nvoid FUN_00103abc(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103abd": {
      "entrypoint": "0x00103abd",
      "current_name": "FUN_00103abd",
      "code": "\nvoid FUN_00103abd(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103abe": {
      "entrypoint": "0x00103abe",
      "current_name": "FUN_00103abe",
      "code": "\nvoid FUN_00103abe(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103abf": {
      "entrypoint": "0x00103abf",
      "current_name": "FUN_00103abf",
      "code": "\nvoid FUN_00103abf(undefined8 param_1,undefined8 param_2)\n\n{\n  char *pcVar1;\n  \n  pcVar1 \u003d \"\\n\\nUndefined symbols from %s[%s]:\\n\\n\";\n  if (DAT_0010b7e8 \u003d\u003d 0) {\n    pcVar1 \u003d \"\\n\\nSymbols from %s[%s]:\\n\\n\";\n  }\n  pcVar1 \u003d (char *)dcgettext(0,pcVar1,5);\n  printf(pcVar1,param_1,param_2);\n  pcVar1 \u003d \"Name                  Value   Class        Type         Size     Line  Section\\n\\n\";\n  if (DAT_0010b7a8 !\u003d 0x20) {\n    pcVar1 \u003d \n    \"Name                  Value           Class        Type         Size             Line  Section\\n\\n\"\n    ;\n  }\n  pcVar1 \u003d (char *)dcgettext(0,pcVar1,5);\n  printf(pcVar1);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "dcgettext",
        "printf"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103b2b": {
      "entrypoint": "0x00103b2b",
      "current_name": "FUN_00103b2b",
      "code": "\nvoid FUN_00103b2b(undefined8 param_1,undefined8 param_2)\n\n{\n  if (DAT_0010b818 \u003d\u003d 0) {\n    printf(\"%s[%s]:\\n\",param_1,param_2);\n    return;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "printf"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103b49": {
      "entrypoint": "0x00103b49",
      "current_name": "FUN_00103b49",
      "code": "\nvoid FUN_00103b49(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00104740(\u0026DAT_0010712d,param_1,0,param_2);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "FUN_00104740"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103b5d": {
      "entrypoint": "0x00103b5d",
      "current_name": "FUN_00103b5d",
      "code": "\n\n\nvoid FUN_00103b5d(long *param_1)\n\n{\n  undefined8 uVar1;\n  char *__format;\n  long *plVar2;\n  \n  fflush(_stdout);\n  uVar1 \u003d DAT_0010b820;\n  __format \u003d (char *)dcgettext(0,\"%s: Matching formats:\",5);\n  fprintf(_stderr,__format,uVar1);\n  for (plVar2 \u003d param_1; *plVar2 !\u003d 0; plVar2 \u003d plVar2 + 1) {\n    fprintf(_stderr,\" %s\");\n  }\n  free(param_1);\n  fputc(10,_stderr);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001043d0"
      ],
      "called": [
        "dcgettext",
        "fprintf",
        "fflush",
        "fputc",
        "free"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103bec": {
      "entrypoint": "0x00103bec",
      "current_name": "FUN_00103bec",
      "code": "\nundefined  [16] FUN_00103bec(void)\n\n{\n  int iVar1;\n  undefined8 in_RAX;\n  undefined auVar2 [16];\n  \n  iVar1 \u003d FUN_00105050();\n  auVar2._0_4_ \u003d -iVar1;\n  auVar2._4_4_ \u003d 0;\n  auVar2._8_8_ \u003d in_RAX;\n  return auVar2;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "FUN_00105050"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103bf6": {
      "entrypoint": "0x00103bf6",
      "current_name": "FUN_00103bf6",
      "code": "\nundefined  [16] FUN_00103bf6(void)\n\n{\n  int iVar1;\n  undefined8 in_RAX;\n  undefined auVar2 [16];\n  \n  iVar1 \u003d FUN_00104fa0();\n  auVar2._0_4_ \u003d -iVar1;\n  auVar2._4_4_ \u003d 0;\n  auVar2._8_8_ \u003d in_RAX;\n  return auVar2;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "FUN_00104fa0"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103c00": {
      "entrypoint": "0x00103c00",
      "current_name": "FUN_00103c00",
      "code": "\nundefined8\nFUN_00103c00(undefined8 *param_1,long param_2,undefined (*param_3) [16],undefined8 param_4,\n            undefined8 param_5)\n\n{\n  undefined8 *puVar1;\n  undefined auVar2 [16];\n  long lVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  \n  **(long **)*param_3 \u003d param_2;\n  if ((*(byte *)(param_2 + 0x24) \u0026 4) \u003d\u003d 0) {\n    **(undefined8 **)(*param_3 + 8) \u003d 0;\n    **(undefined8 **)param_3[1] \u003d 0;\n  }\n  else {\n    lVar3 \u003d bfd_get_reloc_upper_bound();\n    if (-1 \u003c lVar3) {\n      puVar1 \u003d *(undefined8 **)(*param_3 + 8);\n      uVar4 \u003d xmalloc(lVar3);\n      uVar5 \u003d *(undefined8 *)(param_3[1] + 8);\n      *puVar1 \u003d uVar4;\n      puVar1 \u003d *(undefined8 **)param_3[1];\n      uVar5 \u003d bfd_canonicalize_reloc(param_1,param_2,**(undefined8 **)(*param_3 + 8),uVar5);\n      *puVar1 \u003d uVar5;\n      if (-1 \u003c **(long **)param_3[1]) goto LAB_00103c7c;\n    }\n    FUN_00106530(*param_1);\n  }\nLAB_00103c7c:\n  lVar3 \u003d *(long *)(*param_3 + 8) + 8;\n  *(long *)param_3[1] \u003d *(long *)param_3[1] + 8;\n  auVar2._8_4_ \u003d (int)lVar3;\n  auVar2._0_8_ \u003d *(long *)*param_3 + 8;\n  auVar2._12_4_ \u003d (int)((ulong)lVar3 \u003e\u003e 0x20);\n  *param_3 \u003d auVar2;\n  return param_5;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00103238"
      ],
      "called": [
        "xmalloc",
        "FUN_00106530",
        "bfd_get_reloc_upper_bound",
        "bfd_canonicalize_reloc"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00103ca0": {
      "entrypoint": "0x00103ca0",
      "current_name": "FUN_00103ca0",
      "code": "\nvoid FUN_00103ca0(FILE *param_1,int param_2)\n\n{\n  long lVar1;\n  int iVar2;\n  int iVar3;\n  char *pcVar4;\n  long lVar5;\n  size_t sVar6;\n  long *__ptr;\n  long *plVar7;\n  char **ppcVar8;\n  char *pcVar9;\n  uint local_3c;\n  \n  lVar1 \u003d DAT_0010b820;\n  pcVar4 \u003d (char *)dcgettext(0,\"Usage: %s [option(s)] [file(s)]\\n\",5);\n  fprintf(param_1,pcVar4,lVar1);\n  pcVar4 \u003d (char *)dcgettext(0,\" List symbols in [file(s)] (a.out by default).\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\" The options are:\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"  -a, --debug-syms       Display debugger-only symbols\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\n                             \"  -A, --print-file-name  Print name of the input file before every symbol\\n\"\n                             ,5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"  -B                     Same as --format\u003dbsd\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"  -C, --demangle[\u003dSTYLE] Decode mangled/processed symbol names\\n\",5)\n  ;\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"                           STYLE can be \",5);\n  if (*pcVar4 \u003d\u003d \u0027 \u0027) {\n    lVar1 \u003d 1;\n    do {\n      lVar5 \u003d lVar1;\n      lVar1 \u003d lVar5 + 1;\n    } while (pcVar4[lVar5] \u003d\u003d \u0027 \u0027);\n    local_3c \u003d (uint)lVar5;\n  }\n  else {\n    local_3c \u003d 0;\n  }\n  iVar2 \u003d fprintf(param_1,\"%s\",pcVar4);\n  pcVar9 \u003d \"\";\n  for (ppcVar8 \u003d (char **)\u0026libiberty_demanglers; *ppcVar8 !\u003d (char *)0x0; ppcVar8 \u003d ppcVar8 + 3) {\n    sVar6 \u003d strlen(*ppcVar8);\n    if (0x4a \u003c (long)iVar2 + sVar6) {\n      fprintf(param_1,\"%.1s\\n\",pcVar9);\n      pcVar9 \u003d \"\";\n      iVar2 \u003d fprintf(param_1,\"%.*s\",(ulong)local_3c,pcVar4);\n    }\n    iVar3 \u003d fprintf(param_1,\"%s\\\"%s\\\"\",pcVar9,*ppcVar8);\n    iVar2 \u003d iVar2 + iVar3;\n    pcVar9 \u003d \", \";\n  }\n  fputc(10,param_1);\n  pcVar4 \u003d (char *)dcgettext(0,\"      --no-demangle      Do not demangle low-level symbol names\\n\",5\n                            );\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\n                             \"      --recurse-limit    Enable a demangling recursion limit.  (default)\\n\"\n                             ,5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"      --no-recurse-limit Disable a demangling recursion limit.\\n\",5)\n  ;\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\n                             \"  -D, --dynamic          Display dynamic symbols instead of normal symbols\\n\"\n                             ,5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"  -e                     (ignored)\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\n                             \"  -f, --format\u003dFORMAT    Use the output format FORMAT.  FORMAT can be `bsd\\\u0027,\\n                           `sysv\\\u0027, `posix\\\u0027 or \\\u0027just-symbols\\\u0027.\\n                           The default is `bsd\\\u0027\\n\"\n                             ,5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"  -g, --extern-only      Display only external symbols\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\n                             \"    --ifunc-chars\u003dCHARS  Characters to use when displaying ifunc symbols\\n\"\n                             ,5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"  -j, --just-symbols     Same as --format\u003djust-symbols\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\n                             \"  -l, --line-numbers     Use debugging information to find a filename and\\n                           line number for each symbol\\n\"\n                             ,5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"  -n, --numeric-sort     Sort symbols numerically by address\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"  -o                     Same as -A\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"  -p, --no-sort          Do not sort the symbols\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"  -P, --portability      Same as --format\u003dposix\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"  -r, --reverse-sort     Reverse the sense of the sort\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"      --plugin NAME      Load the specified plugin\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"  -S, --print-size       Print size of defined symbols\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\n                             \"  -s, --print-armap      Include index for symbols from archive members\\n\"\n                             ,5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"      --quiet            Suppress \\\"no symbols\\\" diagnostic\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"      --size-sort        Sort symbols by size\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"      --special-syms     Include special symbols in the output\\n\",5)\n  ;\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"      --synthetic        Display synthetic symbols as well\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"  -t, --radix\u003dRADIX      Use RADIX for printing symbol values\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\n                             \"      --target\u003dBFDNAME   Specify the target object format as BFDNAME\\n\"\n                             ,5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"  -u, --undefined-only   Display only undefined symbols\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"  -U, --defined-only     Display only defined symbols\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\n                             \"      --unicode\u003d{default|show|invalid|hex|escape|highlight}\\n                         Specify how to treat UTF-8 encoded unicode characters\\n\"\n                             ,5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"  -W, --no-weak          Ignore weak symbols\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\n                             \"      --with-symbol-versions  Display version strings after symbol names\\n\"\n                             ,5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"  -X 32_64               (ignored)\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"  @FILE                  Read options from FILE\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"  -h, --help             Display this information\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 \u003d (char *)dcgettext(0,\"  -V, --version          Display this program\\\u0027s version number\\n\",5\n                            );\n  fprintf(param_1,pcVar4);\n  lVar1 \u003d DAT_0010b820;\n  if (DAT_0010b820 \u003d\u003d 0) {\n    pcVar4 \u003d (char *)dcgettext(0,\"Supported targets:\",5);\n    fprintf(param_1,pcVar4);\n  }\n  else {\n    pcVar4 \u003d (char *)dcgettext(0,\"%s: supported targets:\",5);\n    fprintf(param_1,pcVar4,lVar1);\n  }\n  __ptr \u003d (long *)bfd_target_list();\n  plVar7 \u003d __ptr;\n  while( true ) {\n    lVar1 \u003d *plVar7;\n    plVar7 \u003d plVar7 + 1;\n    if (lVar1 \u003d\u003d 0) break;\n    fprintf(param_1,\" %s\");\n  }\n  fputc(10,param_1);\n  free(__ptr);\n  if (param_2 \u003d\u003d 0) {\n    pcVar4 \u003d (char *)dcgettext(0,\"Report bugs to %s.\\n\",5);\n    fprintf(param_1,pcVar4,\"\u003chttps://sourceware.org/bugzilla/\u003e\");\n  }\n                    \n  exit(param_2);\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "FUN_00102450",
        "dcgettext",
        "fprintf",
        "fseek",
        "fputc",
        "exit",
        "bfd_target_list",
        "strlen",
        "free"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00104370": {
      "entrypoint": "0x00104370",
      "current_name": "FUN_00104370",
      "code": "\nundefined ** FUN_00104370(undefined *param_1,undefined8 param_2)\n\n{\n  undefined8 uVar1;\n  undefined **ppuVar2;\n  \n  switch(*param_1) {\n  case 0x42:\n  case 0x62:\n    DAT_0010b7c0 \u003d 0;\n    PTR_PTR_FUN_0010b260 \u003d (undefined *)\u0026PTR_FUN_0010ace0;\n    return \u0026PTR_FUN_0010ace0;\n  default:\n    uVar1 \u003d dcgettext(0,\"%s: invalid output format\",5);\n    FUN_00106300(uVar1,param_1);\n    uVar1 \u003d dcgettext(0,\"Warning: \\\u0027%s\\\u0027 is not an ordinary file\",5);\n    FUN_00106400(uVar1);\n    return (undefined **)0x0;\n  case 0x4a:\n  case 0x6a:\n    ppuVar2 \u003d (undefined **)FUN_00104397(param_1,param_2,3);\n    return ppuVar2;\n  case 0x50:\n  case 0x70:\n    ppuVar2 \u003d (undefined **)FUN_00104397(param_1,param_2,2);\n    return ppuVar2;\n  case 0x53:\n  case 0x73:\n    ppuVar2 \u003d (undefined **)FUN_00104397(param_1,param_2,1);\n    return ppuVar2;\n  }\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "FUN_00106300",
        "dcgettext",
        "FUN_00104397",
        "caseD_4a"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00104397": {
      "entrypoint": "0x00104397",
      "current_name": "FUN_00104397",
      "code": "\nvoid FUN_00104397(undefined8 param_1,undefined8 param_2,int param_3)\n\n{\n  DAT_0010b7c0 \u003d param_3;\n  PTR_PTR_FUN_0010b260 \u003d (undefined *)(\u0026PTR_FUN_0010ace0 + (long)param_3 * 5);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00104370",
        "caseD_4a"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_001043d0": {
      "entrypoint": "0x001043d0",
      "current_name": "FUN_001043d0",
      "code": "\n\n\nundefined4 FUN_001043d0(char *param_1)\n\n{\n  char cVar1;\n  int iVar2;\n  undefined4 uVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  undefined8 *puVar6;\n  long lVar7;\n  char *pcVar8;\n  undefined8 *puVar9;\n  undefined8 *puVar10;\n  stat local_c8;\n  \n  if (param_1 !\u003d (char *)0x0) {\n    iVar2 \u003d stat(param_1,\u0026local_c8);\n    if (iVar2 \u003c 0) {\nLAB_00102522:\n      piVar4 \u003d __errno_location();\n      if (*piVar4 \u003d\u003d 2) {\n        uVar5 \u003d dcgettext(0,\"\\\u0027%s\\\u0027: No such file\",5);\n        FUN_00106400(uVar5,param_1);\n      }\n      else {\n        pcVar8 \u003d strerror(*piVar4);\n        uVar5 \u003d dcgettext(0,\"Warning: could not locate \\\u0027%s\\\u0027.  reason: %s\",5);\n        FUN_00106400(uVar5,param_1,pcVar8);\n      }\n    }\n    else if ((local_c8.st_mode \u0026 0xf000) \u003d\u003d 0x4000) {\n      uVar5 \u003d dcgettext(0,\"Warning: \\\u0027%s\\\u0027 is a directory\",5);\n      FUN_00106400(uVar5,param_1);\n    }\n    else if ((local_c8.st_mode \u0026 0xf000) \u003d\u003d 0x8000) {\n      if (local_c8.st_size \u003c 0) {\n        uVar5 \u003d dcgettext(0,\"Warning: \\\u0027%s\\\u0027 has negative size, probably it is too large\",5);\n        FUN_00106400(uVar5,param_1);\n      }\n      else if (local_c8.st_size !\u003d 0) {\n        if (DAT_0010b7d0 \u003d\u003d 0) {\n          puVar6 \u003d (undefined8 *)bfd_openr(param_1,\"plugin\");\n        }\n        else {\n          puVar6 \u003d (undefined8 *)bfd_openr(param_1);\n        }\n        if (puVar6 !\u003d (undefined8 *)0x0) {\n          if (DAT_0010b804 !\u003d 0) {\n            *(uint *)((long)puVar6 + 0x44) \u003d *(uint *)((long)puVar6 + 0x44) | 0x8000;\n          }\n          cVar1 \u003d bfd_check_format(puVar6,2);\n          if (cVar1 \u003d\u003d \u0027\\0\u0027) {\n            uVar3 \u003d bfd_check_format_matches(puVar6,1,\u0026local_c8);\n            if ((char)uVar3 \u003d\u003d \u0027\\0\u0027) goto LAB_001025ac;\n            FUN_00104670(puVar6);\n            (**(code **)PTR_PTR_FUN_0010b260)(param_1);\n            FUN_001048e0(puVar6,0);\n          }\n          else {\n            (**(code **)(PTR_PTR_FUN_0010b260 + 8))(*puVar6);\n            if ((_DAT_0010b7f0 !\u003d 0) \u0026\u0026\n               (lVar7 \u003d bfd_get_next_mapent(puVar6,0xffffffffffffffff,\u0026local_c8), lVar7 !\u003d -1)) {\n              pcVar8 \u003d (char *)dcgettext(0,\"\\nArchive index:\\n\",5);\n              printf(pcVar8);\n              do {\n                puVar9 \u003d (undefined8 *)(**(code **)(puVar6[1] + 0x1e0))(puVar6,lVar7);\n                if (puVar9 \u003d\u003d (undefined8 *)0x0) goto LAB_00102516;\n                if (*(long *)local_c8.st_dev !\u003d 0) {\n                  FUN_00104740(\u0026DAT_0010712d,0,*(long *)local_c8.st_dev,puVar6);\n                  printf(\" in %s\\n\",*puVar9);\n                }\n                lVar7 \u003d bfd_get_next_mapent(puVar6,lVar7,\u0026local_c8);\n              } while (lVar7 !\u003d -1);\n            }\n            puVar9 \u003d (undefined8 *)0x0;\n            do {\n              do {\n                puVar10 \u003d puVar9;\n                puVar9 \u003d (undefined8 *)bfd_openr_next_archived_file(puVar6,puVar10);\n                if (puVar9 \u003d\u003d (undefined8 *)0x0) {\n                  iVar2 \u003d bfd_get_error();\n                  if (iVar2 !\u003d 9) {\n                    FUN_00106530(*puVar6);\nLAB_00102516:\n                    FUN_00106530(\"bfd_get_elt_at_index\");\n                    goto LAB_00102522;\n                  }\n                  if (puVar10 !\u003d (undefined8 *)0x0) {\n                    bfd_close(puVar10);\n                    _DAT_0010b7b8 \u003d 0;\n                    _DAT_0010b7b0 \u003d 0;\n                  }\n                  goto LAB_001044b4;\n                }\n                cVar1 \u003d bfd_check_format_matches(puVar9,1,\u0026local_c8);\n                if (cVar1 \u003d\u003d \u0027\\0\u0027) {\n                  FUN_00106540(*puVar9);\n                  iVar2 \u003d bfd_get_error();\n                  if (iVar2 \u003d\u003d 0xd) {\n                    FUN_00103b5d(local_c8.st_dev);\n                  }\n                }\n                else {\n                  FUN_00104670(puVar9);\n                  (**(code **)(PTR_PTR_FUN_0010b260 + 0x10))(*puVar6,*puVar9);\n                  FUN_001048e0(puVar9,puVar6);\n                }\n              } while (puVar10 \u003d\u003d (undefined8 *)0x0);\n              bfd_close(puVar10);\n              _DAT_0010b7b8 \u003d 0;\n              _DAT_0010b7b0 \u003d 0;\n            } while (puVar10 !\u003d puVar9);\n          }\nLAB_001044b4:\n          uVar3 \u003d 1;\n          while (cVar1 \u003d bfd_close(puVar6), cVar1 \u003d\u003d \u0027\\0\u0027) {\n            FUN_00106530(param_1);\nLAB_001025ac:\n            FUN_00106540(param_1);\n            iVar2 \u003d bfd_get_error();\n            if (iVar2 \u003d\u003d 0xd) {\n              FUN_00103b5d(local_c8.st_dev);\n            }\n          }\n          _DAT_0010b7b0 \u003d 0;\n          _DAT_0010b7b8 \u003d 0;\n          return uVar3;\n        }\n        FUN_00106540(param_1);\n      }\n    }\n    else {\n      uVar5 \u003d dcgettext(0,\"Warning: \\\u0027%s\\\u0027 is not an ordinary file\",5);\n      FUN_00106400(uVar5,param_1);\n    }\n  }\n  return 0;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001055f0"
      ],
      "called": [
        "FUN_0010351b",
        "bfd_get_error",
        "__errno_location",
        "bfd_openr_next_archived_file",
        "dcgettext",
        "bfd_check_format",
        "FUN_00104670",
        "bfd_get_next_mapent",
        "FUN_00103b5d",
        "FUN_00106400",
        "FUN_00106540",
        "FUN_001048e0",
        "FUN_00106530",
        "printf",
        "bfd_close",
        "stat",
        "bfd_openr",
        "FUN_00104740",
        "FUN_00102670",
        "strerror",
        "bfd_check_format_matches",
        "FUN_001062d0",
        "FUN_0010249f"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00104670": {
      "entrypoint": "0x00104670",
      "current_name": "FUN_00104670",
      "code": "\nvoid FUN_00104670(long param_1)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined *puVar3;\n  char *pcVar4;\n  \n  DAT_0010b7a8 \u003d bfd_get_arch_size();\n  if (DAT_0010b7a8 \u003d\u003d -1) {\n    pcVar4 \u003d **(char ***)(param_1 + 8);\n    pcVar2 \u003d strstr(pcVar4,\"64\");\n    iVar1 \u003d 0x40;\n    if (pcVar2 \u003d\u003d (char *)0x0) {\n      iVar1 \u003d strcmp(pcVar4,\"mmo\");\n      iVar1 \u003d (-(uint)(iVar1 \u003d\u003d 0) \u0026 0x20) + 0x20;\n    }\n    DAT_0010b7a8 \u003d iVar1;\n    free(DAT_0010b7a0);\n  }\n  else {\n    free(DAT_0010b7a0);\n  }\n  if (DAT_0010b7c0 - 2U \u003c 2) {\n    pcVar4 \u003d \"\";\n  }\n  else if (DAT_0010b7a8 \u003d\u003d 0x20) {\n    pcVar4 \u003d \"08\";\n  }\n  else {\n    pcVar4 \u003d \"016\";\n  }\n  puVar3 \u003d \u0026DAT_001071d0;\n  if (DAT_0010b244 !\u003d 0x10) {\n    if (DAT_0010b244 \u003c 0x11) {\n      if (DAT_0010b244 \u003d\u003d 8) {\n        puVar3 \u003d \u0026DAT_001071ca;\n      }\n      else {\n        if (DAT_0010b244 !\u003d 10) {\n          DAT_0010b7a0 \u003d (void *)concat(\u0026DAT_001071d7,pcVar4,0,0);\n          return;\n        }\n        puVar3 \u003d \u0026DAT_001071cd;\n      }\n    }\n    else {\n      puVar3 \u003d (undefined *)0x0;\n    }\n  }\n  DAT_0010b7a0 \u003d (void *)concat(\u0026DAT_001071d7,pcVar4,puVar3,0);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001043d0"
      ],
      "called": [
        "FUN_001025f5",
        "strcmp",
        "bfd_get_arch_size",
        "strstr",
        "free",
        "concat"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00104740": {
      "entrypoint": "0x00104740",
      "current_name": "FUN_00104740",
      "code": "\n\n\nvoid FUN_00104740(char *param_1,long *param_2,undefined8 *param_3,long param_4)\n\n{\n  undefined8 *puVar1;\n  byte bVar2;\n  byte bVar3;\n  int iVar4;\n  size_t sVar5;\n  char *pcVar6;\n  undefined8 *puVar7;\n  char *pcVar8;\n  undefined8 *__ptr;\n  ulong uVar9;\n  undefined8 uVar10;\n  undefined *puVar11;\n  undefined8 *puVar12;\n  char *__s;\n  undefined8 *__s_00;\n  long lVar13;\n  uint uVar14;\n  byte bVar15;\n  char acStack_39 [9];\n  \n  bVar15 \u003d 0;\n  if (param_3 \u003d\u003d (undefined8 *)0x0) {\n    param_3 \u003d *(undefined8 **)(*param_2 + 0x10);\n    if (DAT_0010b234 \u003d\u003d 0) {\n      FUN_00102739();\n      return;\n    }\nLAB_00104775:\n    puVar12 \u003d param_3;\n    if (DAT_0010b814 \u003d\u003d 0) {\n      pcVar6 \u003d (char *)0x0;\n      if (DAT_0010b7e0 \u003d\u003d 0) {\nLAB_00104794:\n        puVar12 \u003d param_3;\n        __ptr \u003d (undefined8 *)0x0;\n      }\n      else {\n        __ptr \u003d (undefined8 *)0x0;\n        if (param_3 !\u003d (undefined8 *)0x0) goto LAB_0010269d;\n        puVar12 \u003d (undefined8 *)0x1073a6;\n      }\n    }\n    else {\n      pcVar6 \u003d (char *)0x0;\nLAB_0010482b:\n      if ((*(char *)puVar12 \u003d\u003d \u0027\\0\u0027) ||\n         (param_3 \u003d (undefined8 *)bfd_demangle(param_4,puVar12,DAT_0010b248),\n         param_3 \u003d\u003d (undefined8 *)0x0)) {\n        param_3 \u003d puVar12;\n        if (DAT_0010b7e0 !\u003d 0) goto LAB_00102698;\n        __ptr \u003d (undefined8 *)0x0;\n      }\n      else {\n        puVar12 \u003d param_3;\n        __ptr \u003d param_3;\n        if (DAT_0010b7e0 !\u003d 0) goto LAB_0010269d;\n      }\n    }\n  }\n  else {\n    puVar12 \u003d param_3;\n    if (DAT_0010b234 \u003d\u003d 0) {\n      if (*(int *)(*(long *)(param_4 + 8) + 8) !\u003d 5) goto LAB_00104775;\n      pcVar6 \u003d strchr((char *)param_3,0x40);\n      if (pcVar6 \u003d\u003d (char *)0x0) {\n        if (DAT_0010b814 \u003d\u003d 0) {\n          if (DAT_0010b7e0 \u003d\u003d 0) {\n            if (param_2 \u003d\u003d (long *)0x0) {\n              __ptr \u003d (undefined8 *)0x0;\n              printf(param_1,param_3);\n            }\n            else {\n              if (param_2[2] !\u003d 0) {\n                FUN_001047d0();\n                return;\n              }\n              __ptr \u003d (undefined8 *)0x0;\n              printf(param_1,param_3);\n            }\n            goto LAB_001047ba;\n          }\n          goto LAB_00102698;\n        }\n      }\n      else {\n        *pcVar6 \u003d \u0027\\0\u0027;\n        if (DAT_0010b814 \u003d\u003d 0) {\n          if (DAT_0010b7e0 \u003d\u003d 0) goto LAB_00104794;\n          __ptr \u003d (undefined8 *)0x0;\n          goto LAB_0010269d;\n        }\n      }\n      goto LAB_0010482b;\n    }\n    pcVar6 \u003d (char *)0x0;\n    if (DAT_0010b814 !\u003d 0) goto LAB_0010482b;\n    if (DAT_0010b7e0 \u003d\u003d 0) goto LAB_00104794;\nLAB_00102698:\n    puVar12 \u003d param_3;\n    __ptr \u003d (undefined8 *)0x0;\nLAB_0010269d:\n    do {\n      bVar2 \u003d *(byte *)param_3;\n      param_3 \u003d (undefined8 *)((long)param_3 + 1);\n      if (bVar2 \u003d\u003d 0) goto joined_r0x00104864;\n    } while ((((\u0026_sch_istable)[(ulong)bVar2 * 2] \u0026 2) \u003d\u003d 0) \u0026\u0026 (bVar2 \u003c 0xc0));\n    sVar5 \u003d strlen((char *)puVar12);\n    __s_00 \u003d DAT_0010b790;\n    if (_DAT_0010b798 \u003c sVar5 * 9) {\n      free(DAT_0010b790);\n      sVar5 \u003d strlen((char *)puVar12);\n      _DAT_0010b798 \u003d sVar5 * 9;\n      DAT_0010b790 \u003d (undefined8 *)xmalloc(_DAT_0010b798 + 1);\n      __s_00 \u003d DAT_0010b790;\n    }\n    while( true ) {\n      puVar7 \u003d DAT_0010b790;\n      bVar2 \u003d *(byte *)puVar12;\n      puVar1 \u003d (undefined8 *)((long)puVar12 + 1);\n      if (bVar2 \u003d\u003d 0) break;\n      if (((\u0026_sch_istable)[(ulong)bVar2 * 2] \u0026 2) \u003d\u003d 0) {\n        if ((bVar2 \u003c 0xc0) || (DAT_0010b7e0 \u003d\u003d 0)) {\n          *(byte *)__s_00 \u003d bVar2;\n          __s_00 \u003d (undefined8 *)((long)__s_00 + 1);\n          puVar12 \u003d puVar1;\n        }\n        else {\n          bVar3 \u003d *(byte *)((long)puVar12 + 1);\n          if ((bVar3 \u0026 0xc0) \u003d\u003d 0x80) {\n            puVar7 \u003d __s_00;\n            if ((bVar2 \u0026 0x20) \u003d\u003d 0) {\n              switch(DAT_0010b7e0) {\n              case 1:\n                uVar14 \u003d 2;\n                goto LAB_00102a62;\n              case 3:\n              case 5:\n                lVar13 \u003d 2;\n                goto LAB_00102917;\n              case 4:\n                iVar4 \u003d isatty(1);\n                if (iVar4 \u003d\u003d 0) {\n                  bVar3 \u003d *(byte *)((long)puVar12 + 1);\n                }\n                else {\n                  *(undefined *)(__s_00 + 1) \u003d 0;\n                  *__s_00 \u003d 0x6d37343b31335b1b;\n                  bVar3 \u003d *(byte *)((long)puVar12 + 1);\n                  puVar7 \u003d __s_00 + 1;\n                }\n              case 2:\n                uVar14 \u003d 2;\n                sprintf((char *)puVar7,\"\\\\u%02x%02x\",(ulong)((int)(uint)*(byte *)puVar12 \u003e\u003e 2 \u0026 7),\n                        (ulong)((*(byte *)puVar12 \u0026 3) \u003c\u003c 6 | bVar3 \u0026 0x3f));\n                puVar7 \u003d (undefined8 *)((long)puVar7 + 6);\n                goto LAB_00102a27;\n              default:\n                uVar14 \u003d 2;\n              }\n            }\n            else {\n              bVar3 \u003d *(byte *)((long)puVar12 + 2);\n              if ((bVar3 \u0026 0xc0) !\u003d 0x80) goto LAB_0010285d;\n              if ((bVar2 \u0026 0x10) \u003d\u003d 0) {\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uVar14 \u003d 3;\nLAB_00102a62:\n                  for (uVar9 \u003d (ulong)uVar14; uVar9 !\u003d 0; uVar9 \u003d uVar9 - 1) {\n                    *(undefined *)puVar7 \u003d *(undefined *)puVar12;\n                    puVar12 \u003d (undefined8 *)((long)puVar12 + (ulong)bVar15 * -2 + 1);\n                    puVar7 \u003d (undefined8 *)((long)puVar7 + (ulong)bVar15 * -2 + 1);\n                  }\n                  break;\n                case 3:\n                case 5:\n                  lVar13 \u003d 3;\nLAB_00102917:\n                  uVar10 \u003d 0x7b;\n                  if (DAT_0010b7e0 \u003d\u003d 3) {\n                    uVar10 \u003d 0x3c;\n                  }\n                  sprintf((char *)__s_00,\"%c\",uVar10);\n                  *(undefined *)((long)__s_00 + 3) \u003d 0;\n                  puVar7 \u003d (undefined8 *)(lVar13 + (long)puVar12);\n                  *(undefined2 *)((long)__s_00 + 1) \u003d 0x7830;\n                  pcVar8 \u003d (char *)((long)__s_00 + 3);\n                  do {\n                    __s \u003d pcVar8;\n                    bVar2 \u003d *(byte *)puVar12;\n                    puVar12 \u003d (undefined8 *)((long)puVar12 + 1);\n                    sprintf(__s,\"%02x\",(ulong)bVar2);\n                    pcVar8 \u003d __s + 2;\n                  } while (puVar12 !\u003d puVar7);\n                  uVar10 \u003d 0x7d;\n                  if (DAT_0010b7e0 \u003d\u003d 3) {\n                    uVar10 \u003d 0x3e;\n                  }\n                  uVar14 \u003d (uint)lVar13;\n                  sprintf(__s + 2,\"%c\",uVar10);\n                  puVar7 \u003d (undefined8 *)(__s + 3);\n                  break;\n                case 4:\n                  iVar4 \u003d isatty(1);\n                  if (iVar4 \u003d\u003d 0) {\n                    bVar3 \u003d *(byte *)((long)puVar12 + 2);\n                  }\n                  else {\n                    *(undefined *)(__s_00 + 1) \u003d 0;\n                    *__s_00 \u003d 0x6d37343b31335b1b;\n                    bVar3 \u003d *(byte *)((long)puVar12 + 2);\n                    puVar7 \u003d __s_00 + 1;\n                  }\n                case 2:\n                  uVar14 \u003d 3;\n                  sprintf((char *)puVar7,\"\\\\u%02x%02x\",\n                          (ulong)((uint)(((ulong)*(byte *)puVar12 \u0026 0xf) \u003c\u003c 4) |\n                                 (int)(uint)*(byte *)((long)puVar12 + 1) \u003e\u003e 2 \u0026 0xfU),\n                          (ulong)((*(byte *)((long)puVar12 + 1) \u0026 3) \u003c\u003c 6 | bVar3 \u0026 0x3f));\n                  puVar7 \u003d (undefined8 *)((long)puVar7 + 6);\nLAB_00102a27:\n                  if ((DAT_0010b7e0 \u003d\u003d 4) \u0026\u0026 (iVar4 \u003d isatty(1), iVar4 !\u003d 0)) {\n                    *(undefined4 *)puVar7 \u003d 0x6d305b1b;\n                    puVar7 \u003d (undefined8 *)((long)puVar7 + 4);\n                    *(undefined *)puVar7 \u003d 0;\n                  }\n                  break;\n                default:\n                  uVar14 \u003d 3;\n                }\n              }\n              else {\n                bVar3 \u003d *(byte *)((long)puVar12 + 3);\n                if ((bVar3 \u0026 0xc0) !\u003d 0x80) goto LAB_0010285d;\n                switch(DAT_0010b7e0) {\n                case 1:\n                  uVar14 \u003d 4;\n                  goto LAB_00102a62;\n                case 3:\n                case 5:\n                  lVar13 \u003d 4;\n                  goto LAB_00102917;\n                case 4:\n                  iVar4 \u003d isatty(1);\n                  if (iVar4 \u003d\u003d 0) {\n                    bVar3 \u003d *(byte *)((long)puVar12 + 3);\n                  }\n                  else {\n                    *(undefined *)(__s_00 + 1) \u003d 0;\n                    *__s_00 \u003d 0x6d37343b31335b1b;\n                    bVar3 \u003d *(byte *)((long)puVar12 + 3);\n                    puVar7 \u003d __s_00 + 1;\n                  }\n                case 2:\n                  uVar14 \u003d 4;\n                  iVar4 \u003d sprintf((char *)puVar7,\"\\\\u%02x%02x%02x\",\n                                  (ulong)((*(byte *)puVar12 \u0026 7) \u003c\u003c 6 |\n                                         (int)(uint)*(byte *)((long)puVar12 + 1) \u003e\u003e 2 \u0026 0xfU),\n                                  (ulong)((*(byte *)((long)puVar12 + 1) \u0026 3) \u003c\u003c 6 |\n                                         (int)(uint)*(byte *)((long)puVar12 + 2) \u003e\u003e 2 \u0026 0xfU),\n                                  (ulong)((*(byte *)((long)puVar12 + 2) \u0026 3) \u003c\u003c 6 | bVar3 \u0026 0x3f));\n                  puVar7 \u003d (undefined8 *)((long)puVar7 + (long)iVar4);\n                  goto LAB_00102a27;\n                default:\n                  uVar14 \u003d 4;\n                }\n              }\n            }\n            uVar9 \u003d (ulong)(uint)((int)puVar7 - (int)__s_00);\n          }\n          else {\nLAB_0010285d:\n            *(byte *)__s_00 \u003d bVar2;\n            uVar14 \u003d 1;\n            uVar9 \u003d 1;\n          }\n          __s_00 \u003d (undefined8 *)((long)__s_00 + uVar9);\n          puVar12 \u003d (undefined8 *)((long)puVar1 + (ulong)(uVar14 - 1));\n        }\n      }\n      else {\n        *(undefined *)__s_00 \u003d 0x5e;\n        *(byte *)((long)__s_00 + 1) \u003d bVar2 + 0x40;\n        __s_00 \u003d (undefined8 *)((long)__s_00 + 2);\n        puVar12 \u003d puVar1;\n      }\n    }\n    *(undefined *)__s_00 \u003d 0;\n    puVar12 \u003d puVar7;\n  }\njoined_r0x00104864:\n  if ((((param_2 !\u003d (long *)0x0) \u0026\u0026 (param_2[2] !\u003d 0)) \u0026\u0026 (DAT_0010b234 !\u003d 0)) \u0026\u0026\n     ((pcVar8 \u003d (char *)(**(code **)(*(long *)(param_4 + 8) + 0x220))\n                                  (param_4,param_2[2],0,acStack_39), pcVar8 !\u003d (char *)0x0 \u0026\u0026\n      (*pcVar8 !\u003d \u0027\\0\u0027)))) {\n    puVar11 \u003d \u0026DAT_001071e0;\n    if ((acStack_39[0] \u003d\u003d \u0027\\0\u0027) \u0026\u0026 (*(long *)(param_2[2] + 0x20) !\u003d 0x10c2a8)) {\n      puVar11 \u003d \u0026DAT_001071df;\n    }\n    __ptr \u003d (undefined8 *)reconcat(__ptr,puVar12,puVar11,pcVar8,0);\n    puVar12 \u003d __ptr;\n  }\n  printf(param_1,puVar12);\n  if (pcVar6 !\u003d (char *)0x0) {\n    *pcVar6 \u003d \u0027@\u0027;\n  }\nLAB_001047ba:\n  free(__ptr);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001064b0",
        "FUN_00103729",
        "FUN_00103b49",
        "FUN_001043d0",
        "FUN_001035a2"
      ],
      "called": [
        "FUN_00102739"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_001047d0": {
      "entrypoint": "0x001047d0",
      "current_name": "FUN_001047d0",
      "code": "\nvoid FUN_001047d0(void)\n\n{\n  char *pcVar1;\n  void *unaff_RBX;\n  undefined *unaff_R12;\n  void *unaff_R13;\n  char *unaff_R14;\n  long unaff_R15;\n  \n  if (((DAT_0010b234 !\u003d 0) \u0026\u0026\n      (pcVar1 \u003d (char *)(**(code **)(*(long *)(unaff_R15 + 8) + 0x220))(), pcVar1 !\u003d (char *)0x0))\n     \u0026\u0026 (*pcVar1 !\u003d \u0027\\0\u0027)) {\n    unaff_RBX \u003d (void *)reconcat();\n    unaff_R13 \u003d unaff_RBX;\n  }\n  printf(unaff_R14,unaff_R13);\n  if (unaff_R12 !\u003d (undefined *)0x0) {\n    *unaff_R12 \u003d 0x40;\n  }\n  free(unaff_RBX);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_0010268b",
        "FUN_00102739"
      ],
      "called": [
        "printf",
        "reconcat",
        "free"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_001048e0": {
      "entrypoint": "0x001048e0",
      "current_name": "FUN_001048e0",
      "code": "\n\n\nvoid FUN_001048e0(ulong **param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 ulong **param_5,ulong **param_6)\n\n{\n  byte bVar1;\n  code *pcVar2;\n  char cVar3;\n  int iVar4;\n  uint uVar5;\n  undefined8 uVar6;\n  long lVar7;\n  ulong **ppuVar8;\n  ulong **ppuVar9;\n  long lVar10;\n  ulong *puVar11;\n  ulong **unaff_RBX;\n  ulong **ppuVar12;\n  ulong **ppuVar13;\n  ulong **unaff_RBP;\n  ulong **ppuVar14;\n  ulong **ppuVar15;\n  ulong **ppuVar16;\n  ulong **ppuVar17;\n  ulong **ppuVar18;\n  ulong **unaff_R14;\n  ulong **unaff_R15;\n  bool bVar19;\n  byte bVar20;\n  ulong **ppuStack_78;\n  uint local_4c;\n  ulong *local_48;\n  ulong **local_40 [2];\n  \n  bVar20 \u003d 0;\n  local_48 \u003d (ulong *)0x0;\n  if ((DAT_0010b80c !\u003d 0) || ((*(byte *)((long)param_1 + 0x44) \u0026 0x10) !\u003d 0)) {\n    ppuVar9 \u003d (ulong **)\u0026local_4c;\n    ppuVar8 \u003d (ulong **)(*(code *)param_1[1][0x4d])(param_1,DAT_0010b80c !\u003d 0,local_40);\n    if ((long)ppuVar8 \u003c 0) {\n      if ((DAT_0010b80c !\u003d 0) \u0026\u0026 (iVar4 \u003d bfd_get_error(), iVar4 \u003d\u003d 7)) {\n        if (_DAT_0010b810 !\u003d 0) {\n          return;\n        }\n        puVar11 \u003d *param_1;\n        uVar6 \u003d dcgettext(0,\"%s: no symbols\",5);\n        FUN_00106400(uVar6,puVar11);\n        return;\n      }\n      FUN_00106530(*param_1);\n      goto LAB_00102e9e;\n    }\n    if (ppuVar8 !\u003d (ulong **)0x0) {\n      if (DAT_0010b788 !\u003d 0) {\n        if (local_4c \u003d\u003d 8) goto LAB_00102d06;\n        goto LAB_00102cc2;\n      }\n      bVar1 \u003d *(byte *)((long)param_1 + 0x4a);\n      ppuVar13 \u003d param_1;\n      do {\n        if ((bVar1 \u0026 0x10) !\u003d 0) {\n          unaff_RBX \u003d (ulong **)*ppuVar13;\n          DAT_0010b230 \u003d \u0027\\0\u0027;\n          uVar6 \u003d dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n          FUN_00106400(uVar6);\n        }\n        ppuVar14 \u003d local_40[0];\n        unaff_R14 \u003d (ulong **)(ulong)local_4c;\n        bVar19 \u003d DAT_0010b80c !\u003d 0;\n        ppuVar9 \u003d local_40[0];\n        unaff_R15 \u003d (ulong **)(*(code *)ppuVar13[1][0x41])(ppuVar13);\n        ppuVar12 \u003d unaff_RBX;\n        unaff_RBP \u003d (ulong **)(ulong)bVar19;\n        param_1 \u003d ppuVar13;\n        if (unaff_R15 \u003d\u003d (ulong **)0x0) goto LAB_00102ea7;\n        ppuVar17 \u003d (ulong **)((long)ppuVar8 * (long)unaff_R14);\n        ppuVar8 \u003d (ulong **)((long)ppuVar14 + (long)ppuVar17);\n        param_1 \u003d ppuVar14;\n        ppuVar12 \u003d ppuVar14;\njoined_r0x001049a4:\n        if (param_1 \u003c ppuVar8) {\n          do {\n            ppuVar9 \u003d (ulong **)(*(code *)ppuVar13[1][0x4e])(ppuVar13,bVar19,param_1,unaff_R15);\n            ppuVar17 \u003d unaff_R15;\n            if (ppuVar9 \u003d\u003d (ulong **)0x0) goto LAB_00102eb0;\n            puVar11 \u003d ppuVar9[1];\n            ppuVar17 \u003d ppuVar8;\n            if (((puVar11 \u003d\u003d (ulong *)0x0) || (*(char *)puVar11 !\u003d \u0027_\u0027)) ||\n               (*(char *)((long)puVar11 + 1) !\u003d \u0027_\u0027)) {\nLAB_00104a03:\n              if (DAT_0010b7e8 \u003d\u003d 0) goto LAB_00104a11;\nLAB_00104ae2:\n              uVar5 \u003d (uint)(ppuVar9[4] \u003d\u003d (ulong *)0x10c2a8);\nLAB_00104af9:\n              if (uVar5 \u003d\u003d 0) goto code_r0x00104b01;\nLAB_00104a2d:\n              if (DAT_0010b81c \u003d\u003d 0) {\n                if ((*(byte *)(ppuVar9 + 3) \u0026 4) \u003d\u003d 0) {\n                  if (DAT_0010b7f8 !\u003d 0) goto FUN_00104d5b;\nLAB_00104a53:\n                  param_6 \u003d (ulong **)(ulong)DAT_0010b7e4;\n                  if (DAT_0010b7e4 \u003d\u003d 0) {\n                    cVar3 \u003d (*(code *)ppuVar13[1][0x46])(ppuVar13,ppuVar9);\n                    if (cVar3 !\u003d \u0027\\0\u0027) {\n                      FUN_00102c19();\n                      return;\n                    }\n                    goto LAB_00104a7b;\n                  }\n                  if (ppuVar9[4] !\u003d (ulong *)0x10c2a8) goto LAB_00104cba;\n                }\n              }\n              else {\n                if (DAT_0010b7f8 \u003d\u003d 0) goto LAB_00104a53;\nFUN_00104d5b:\n                if ((ppuVar9[4] \u003d\u003d (ulong *)0x10c2a8) || (ppuVar9[4] \u003d\u003d (ulong *)0x10c3c0))\n                goto LAB_001049c3;\nLAB_00104cba:\n                cVar3 \u003d (*(code *)ppuVar13[1][0x46])(ppuVar13,ppuVar9);\n                if (cVar3 !\u003d \u0027\\0\u0027) {\n                  FUN_00102c19();\n                  return;\n                }\nLAB_00104a7b:\n                if (ppuVar12 !\u003d param_1) {\n                  if (unaff_R14 \u003d\u003d (ulong **)0x8) {\n                    *ppuVar12 \u003d *param_1;\n                    FUN_001049c0();\n                    return;\n                  }\n                  for (; unaff_R14 !\u003d (ulong **)0x0; unaff_R14 \u003d (ulong **)((long)unaff_R14 + -1)) {\n                    *(undefined *)ppuVar12 \u003d *(undefined *)param_1;\n                    param_1 \u003d (ulong **)((long)param_1 + (ulong)bVar20 * -2 + 1);\n                    ppuVar12 \u003d (ulong **)((long)ppuVar12 + (ulong)bVar20 * -2 + 1);\n                  }\n                  FUN_001049c0();\n                  return;\n                }\n                ppuVar12 \u003d (ulong **)((long)ppuVar12 + (long)unaff_R14);\n              }\n            }\n            else {\n              iVar4 \u003d strcmp((char *)((long)puVar11 + (ulong)(*(char *)((long)puVar11 + 2) \u003d\u003d \u0027_\u0027)),\n                             \"__gnu_lto_slim\");\n              ppuStack_78 \u003d ppuVar9;\n              if (iVar4 \u003d\u003d 0) {\n                if (DAT_0010b230 !\u003d \u0027\\0\u0027) {\n                  ppuStack_78 \u003d (ulong **)*ppuVar13;\n                  DAT_0010b230 \u003d \u0027\\0\u0027;\n                  uVar6 \u003d dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n                  FUN_00106400(uVar6,ppuStack_78);\n                }\n                goto LAB_00104a03;\n              }\n              if (DAT_0010b7e8 !\u003d 0) goto LAB_00104ae2;\nLAB_00104a11:\n              if (DAT_0010b808 \u003d\u003d 0) {\n                if (DAT_0010b7d8 !\u003d 0) {\n                  uVar5 \u003d (*(uint *)(ppuVar9 + 3) \u003e\u003e 7 ^ 1) \u0026 1;\n                  goto LAB_00104af9;\n                }\n                goto LAB_00104a2d;\n              }\n              if ((((*(uint *)(ppuVar9 + 3) \u0026 0x800082) !\u003d 0) || (ppuVar9[4] \u003d\u003d (ulong *)0x10c2a8))\n                 || ((*(byte *)((long)ppuVar9[4] + 0x25) \u0026 0x10) !\u003d 0)) goto LAB_00104a2d;\n            }\nLAB_001049c3:\n            param_1 \u003d (ulong **)((long)param_1 + (long)unaff_R14);\n            if (ppuVar8 \u003c\u003d param_1) break;\n          } while( true );\n        }\n        ppuVar12 \u003d (ulong **)((long)ppuVar12 - (long)ppuVar14);\n        if (unaff_R14 \u003d\u003d (ulong **)0x8) {\n          puVar11 \u003d ppuVar13[1];\n          ppuVar14 \u003d (ulong **)((long)ppuVar12 + 7);\n          if (-1 \u003c (long)ppuVar12) {\n            ppuVar14 \u003d ppuVar12;\n          }\n          param_5 \u003d (ulong **)(ulong)DAT_0010b800;\n          pcVar2 \u003d (code *)puVar11[0x41];\n          ppuVar14 \u003d (ulong **)((long)ppuVar14 \u003e\u003e 3);\n        }\n        else {\n          ppuVar14 \u003d (ulong **)((long)ppuVar12 / (long)unaff_R14);\n          puVar11 \u003d ppuVar13[1];\n          pcVar2 \u003d (code *)puVar11[0x41];\n        }\n        if (DAT_0010b800 !\u003d 0) goto LAB_00104be2;\n        DAT_0010b778 \u003d DAT_0010b80c !\u003d 0;\n        DAT_0010b780 \u003d ppuVar13;\n        DAT_0010b770 \u003d (ulong **)(*pcVar2)(ppuVar13);\n        DAT_0010b768 \u003d (ulong **)(*(code *)ppuVar13[1][0x41])(ppuVar13);\n        ppuVar12 \u003d local_40[0];\n        if ((DAT_0010b770 !\u003d (ulong **)0x0) \u0026\u0026 (DAT_0010b768 !\u003d (ulong **)0x0)) {\n          ppuVar8 \u003d (ulong **)(ulong)local_4c;\n          if (DAT_0010b7f8 !\u003d 0) {\n            bVar19 \u003d DAT_0010b80c !\u003d 0;\n            qsort(local_40[0],(size_t)ppuVar14,(size_t)ppuVar8,FUN_00102fd2);\n            ppuVar17 \u003d (ulong **)xmalloc((long)ppuVar14 \u003c\u003c 4);\n            ppuVar18 \u003d DAT_0010b770;\n            param_1 \u003d DAT_0010b768;\n            unaff_R14 \u003d (ulong **)((long)ppuVar14 * (long)ppuVar8 + (long)ppuVar12);\n            ppuVar9 \u003d DAT_0010b770;\n            if (unaff_R14 \u003c\u003d ppuVar12) goto LAB_00102ec2;\n            param_6 \u003d DAT_0010b768;\n            ppuVar14 \u003d (ulong **)(*(code *)ppuVar13[1][0x4e])(ppuVar13,bVar19,ppuVar12);\n            param_5 \u003d ppuVar8;\n            ppuStack_78 \u003d ppuVar17;\n            if (ppuVar14 \u003d\u003d (ulong **)0x0) goto LAB_00102eb9;\n            goto LAB_00104e35;\n          }\n          qsort(local_40[0],(size_t)ppuVar14,(size_t)ppuVar8,\n                (__compar_fn_t)(\u0026PTR_FUN_0010acc0)[(long)DAT_0010b7f4 + (long)DAT_0010b7fc * 2]);\n          puVar11 \u003d ppuVar13[1];\nLAB_00104be2:\n          param_1 \u003d ppuVar13;\n          ppuVar18 \u003d (ulong **)0x0;\n          goto LAB_00104be5;\n        }\n        FUN_00106530(*ppuVar13);\n        param_1 \u003d ppuVar13;\n        ppuVar12 \u003d unaff_R15;\n        while( true ) {\n          unaff_RBX \u003d (ulong **)xmalloc();\n          ppuVar8 \u003d (ulong **)(*(code *)param_1[1][0x6b])(param_1,unaff_RBX);\n          ppuVar9 \u003d ppuVar17;\n          if (-1 \u003c (long)ppuVar8) break;\n          ppuVar13 \u003d (ulong **)*param_1;\n          ppuVar14 \u003d (ulong **)FUN_00106530(ppuVar13,ppuVar17);\nLAB_00102dbe:\n          puVar11 \u003d ppuVar14[2];\n          ppuVar9 \u003d (ulong **)0x0;\nLAB_00102dc4:\n          puVar11 \u003d (ulong *)((long)ppuVar8[8] - (long)puVar11);\n          ppuVar18 \u003d param_1;\n          ppuVar15 \u003d ppuVar12;\nLAB_00104ea7:\n          ppuVar14 \u003d ppuVar9;\n          ppuVar12 \u003d unaff_RBX;\n          param_1 \u003d param_6;\n          if (puVar11 !\u003d (ulong *)0x0) {\n            *ppuVar17 \u003d (ulong *)ppuVar15;\n            ppuVar17[1] \u003d puVar11;\n            ppuVar17 \u003d ppuVar17 + 2;\n          }\nLAB_00104e35:\n          param_6 \u003d ppuVar18;\n          if (ppuVar12 \u003c unaff_R14) goto code_r0x00104e3e;\n          ppuVar14 \u003d (ulong **)((long)ppuVar17 - (long)ppuStack_78 \u003e\u003e 4);\n          qsort(ppuStack_78,(size_t)ppuVar14,0x10,FUN_00103533);\n          puVar11 \u003d ppuVar13[1];\n          param_1 \u003d ppuVar13;\n          ppuVar18 \u003d ppuStack_78;\nLAB_00104be5:\n          unaff_RBX \u003d local_40[0];\n          ppuVar8 \u003d (ulong **)(ulong)DAT_0010b7f8;\n          unaff_R14 \u003d (ulong **)(ulong)(DAT_0010b80c !\u003d 0);\n          if (DAT_0010b7f8 !\u003d 0) {\n            ppuVar17 \u003d (ulong **)(*(code *)puVar11[0x41])(param_1);\n            if (ppuVar17 \u003d\u003d (ulong **)0x0) goto LAB_00102ed2;\n            ppuVar12 \u003d ppuVar18 + (long)ppuVar14 * 2;\n            ppuVar14 \u003d ppuVar18;\n            goto LAB_00104ee9;\n          }\n          ppuVar8 \u003d (ulong **)(ulong)local_4c;\n          unaff_R15 \u003d (ulong **)(*(code *)puVar11[0x41])(param_1);\n          if (unaff_R15 !\u003d (ulong **)0x0) {\n            unaff_RBP \u003d (ulong **)((long)ppuVar14 * (long)ppuVar8 + (long)unaff_RBX);\n            if (unaff_RBX \u003c unaff_RBP) goto LAB_00104c38;\n            goto LAB_00104c75;\n          }\n          FUN_00106530(*param_1);\n          unaff_R15 \u003d ppuVar18;\nLAB_00102d06:\n          ppuVar9 \u003d ppuVar8;\n          if (DAT_0010b80c !\u003d 0) {\n            unaff_RBX \u003d local_40[0];\n            ppuVar14 \u003d (ulong **)0x0;\n            ppuVar17 \u003d (ulong **)0x0;\n            break;\n          }\n          lVar10 \u003d (*(code *)param_1[1][0x6a])(param_1);\n          ppuVar14 \u003d local_40[0];\n          ppuVar17 \u003d ppuVar8;\n          ppuVar12 \u003d unaff_R15;\n          if (lVar10 \u003c 1) {\n            ppuVar8 \u003d (ulong **)0x0;\n            unaff_RBX \u003d (ulong **)0x0;\n            break;\n          }\n        }\n        param_6 \u003d \u0026local_48;\n        param_5 \u003d unaff_RBX;\n        lVar10 \u003d (*(code *)param_1[1][0x6c])(param_1,ppuVar17,ppuVar14,ppuVar8);\n        ppuVar8 \u003d ppuVar9;\n        if (0 \u003c lVar10) {\n          ppuVar8 \u003d (ulong **)((long)ppuVar9 + lVar10);\n          local_40[0] \u003d (ulong **)xrealloc(local_40[0]);\n          lVar7 \u003d 0;\n          do {\n            local_40[0][(long)ppuVar9 + lVar7] \u003d local_48 + lVar7 * 6;\n            lVar7 \u003d lVar7 + 1;\n          } while (lVar10 !\u003d lVar7);\n          local_40[0][(long)ppuVar9 + lVar10] \u003d (ulong *)0x0;\n        }\n        if ((DAT_0010b80c \u003d\u003d 0) \u0026\u0026 (unaff_RBX !\u003d (ulong **)0x0)) {\n          free(unaff_RBX);\n        }\nLAB_00102cc2:\n        bVar1 \u003d *(byte *)((long)param_1 + 0x4a);\n        ppuVar13 \u003d param_1;\n      } while( true );\n    }\n  }\n  if (_DAT_0010b810 \u003d\u003d 0) {\n    puVar11 \u003d *param_1;\n    uVar6 \u003d dcgettext(0,\"%s: no symbols\",5);\n    FUN_00106400(uVar6,puVar11);\n  }\n  return;\ncode_r0x00104b01:\n  param_1 \u003d (ulong **)((long)param_1 + (long)unaff_R14);\n  goto joined_r0x001049a4;\ncode_r0x00104e3e:\n  unaff_RBX \u003d (ulong **)((long)ppuVar12 + (long)param_5);\n  if (unaff_R14 \u003c\u003d unaff_RBX) {\n    ppuVar8 \u003d (ulong **)ppuVar14[4];\n    if ((*(uint *)(ppuVar14 + 3) \u0026 0x200100) !\u003d 0) goto LAB_00102dbe;\n    ppuVar9 \u003d (ulong **)0x0;\nLAB_00104e95:\n    ppuVar18 \u003d param_1;\n    ppuVar15 \u003d ppuVar12;\n    if (*(int *)(ppuVar13[1] + 1) \u003d\u003d 5) {\n      puVar11 \u003d ppuVar14[7];\n      goto LAB_00104ea7;\n    }\n    puVar11 \u003d ppuVar14[2];\n    if ((*(byte *)((long)ppuVar8 + 0x25) \u0026 0x10) !\u003d 0) goto LAB_00104ea7;\n    if (unaff_R14 \u003c\u003d unaff_RBX) goto LAB_00102dc4;\n    goto LAB_00102ee7;\n  }\n  ppuVar8 \u003d param_1;\n  ppuVar15 \u003d param_5;\n  ppuVar16 \u003d param_6;\n  ppuVar9 \u003d (ulong **)(*(code *)ppuVar13[1][0x4e])();\n  ppuVar18 \u003d ppuVar12;\n  if (ppuVar9 \u003d\u003d (ulong **)0x0) goto LAB_00102edb;\n  ppuVar8 \u003d (ulong **)ppuVar14[4];\n  if ((*(uint *)(ppuVar14 + 3) \u0026 0x200100) \u003d\u003d 0) goto LAB_00104e95;\n  goto LAB_00102ee3;\nLAB_00104ee9:\n  if (ppuVar12 \u003c\u003d ppuVar14) {\nLAB_00104c75:\n    if (local_48 \u003d\u003d (ulong *)0x0) {\n      free(local_40[0]);\n      free(ppuVar18);\n      return;\n    }\n    free(local_48);\n    free(local_40[0]);\n    free(ppuVar18);\n    return;\n  }\n  ppuVar8 \u003d ppuVar17;\n  lVar10 \u003d (*(code *)param_1[1][0x4e])(param_1,unaff_R14,*ppuVar14);\n  if (lVar10 \u003d\u003d 0) goto LAB_00102ec9;\n  ppuVar8 \u003d ppuVar14 + 1;\n  ppuVar14 \u003d ppuVar14 + 2;\n  FUN_00105110(param_1,lVar10,*ppuVar8,param_2);\n  goto LAB_00104ee9;\nLAB_00102ec9:\n  FUN_00106530(*param_1,0);\nLAB_00102ed2:\n  ppuVar13 \u003d (ulong **)*param_1;\n  FUN_00106530();\n  unaff_RBX \u003d ppuVar12;\n  ppuVar15 \u003d param_5;\n  ppuVar16 \u003d param_6;\nLAB_00102edb:\n  param_6 \u003d ppuVar16;\n  param_5 \u003d ppuVar15;\n  ppuVar13 \u003d (ulong **)*ppuVar13;\n  ppuVar9 \u003d (ulong **)FUN_00106530();\n  ppuVar12 \u003d ppuVar18;\nLAB_00102ee3:\n  puVar11 \u003d ppuVar14[2];\nLAB_00102ee7:\n  if (ppuVar8 !\u003d (ulong **)ppuVar9[4]) goto LAB_00102dc4;\n  puVar11 \u003d (ulong *)((long)ppuVar9[2] - (long)puVar11);\n  ppuVar18 \u003d param_1;\n  ppuVar15 \u003d ppuVar12;\n  goto LAB_00104ea7;\nLAB_00104c38:\n  while (ppuVar9 \u003d unaff_R15, lVar10 \u003d (*(code *)param_1[1][0x4e])(param_1,unaff_R14,unaff_RBX),\n        lVar10 !\u003d 0) {\n    unaff_RBX \u003d (ulong **)((long)unaff_RBX + (long)ppuVar8);\n    FUN_00105110(param_1,lVar10,0,param_2);\n    if (unaff_RBP \u003c\u003d unaff_RBX) goto LAB_00104c75;\n  }\nLAB_00102e9e:\n  FUN_00106530(*param_1);\n  ppuVar12 \u003d unaff_RBX;\nLAB_00102ea7:\n  ppuVar13 \u003d unaff_RBP;\n  FUN_00106530(*param_1);\n  ppuVar17 \u003d unaff_R15;\nLAB_00102eb0:\n  FUN_00106530(*ppuVar13);\n  ppuVar13 \u003d param_1;\nLAB_00102eb9:\n  FUN_00106530(*ppuVar13);\n  param_1 \u003d param_6;\nLAB_00102ec2:\n  ppuVar14 \u003d (ulong **)0x0;\n  param_5 \u003d ppuVar8;\n  ppuVar18 \u003d ppuVar9;\n  ppuStack_78 \u003d ppuVar17;\n  goto LAB_00104e35;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001043d0"
      ],
      "called": [
        "bfd_get_error",
        "FUN_00106400",
        "dcgettext",
        "FUN_00106530"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_001049c0": {
      "entrypoint": "0x001049c0",
      "current_name": "FUN_001049c0",
      "code": "\nvoid FUN_001049c0(void)\n\n{\n  char *pcVar1;\n  code *pcVar2;\n  char cVar3;\n  int iVar4;\n  uint uVar5;\n  undefined8 uVar6;\n  long lVar7;\n  undefined8 *puVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  undefined8 *unaff_RBX;\n  undefined8 *__ptr;\n  undefined8 *unaff_RBP;\n  undefined8 *puVar11;\n  undefined8 *puVar12;\n  undefined8 *in_R8;\n  undefined8 *puVar13;\n  undefined8 *in_R9;\n  undefined8 *puVar14;\n  undefined8 *puVar15;\n  undefined8 *unaff_R12;\n  undefined8 *unaff_R13;\n  undefined8 *unaff_R14;\n  undefined8 *unaff_R15;\n  bool bVar16;\n  byte bVar17;\n  ulong unaff_retaddr;\n  ulong uVar18;\n  undefined8 in_stack_00000008;\n  undefined8 *in_stack_00000010;\n  undefined8 *in_stack_00000018;\n  undefined8 in_stack_00000038;\n  void *in_stack_00000040;\n  undefined8 *in_stack_00000048;\n  \n  bVar17 \u003d 0;\n  do {\n    unaff_RBX \u003d (undefined8 *)((long)unaff_RBX + (long)unaff_R14);\nLAB_001049c3:\n    do {\n      do {\n        unaff_R13 \u003d (undefined8 *)((long)unaff_R13 + (long)unaff_R14);\n        puVar15 \u003d unaff_R12;\n        puVar12 \u003d unaff_RBP;\n        if (unaff_R12 \u003c\u003d unaff_R13) goto LAB_00104b15;\nLAB_001049cf:\n        puVar8 \u003d (undefined8 *)\n                 (**(code **)(unaff_RBP[1] + 0x270))\n                           (unaff_RBP,unaff_retaddr \u0026 0xffffffff,unaff_R13,unaff_R15);\n        puVar11 \u003d unaff_RBP;\n        puVar12 \u003d unaff_R13;\n        puVar15 \u003d unaff_R15;\n        if (puVar8 \u003d\u003d (undefined8 *)0x0) goto LAB_00102eb0;\n        pcVar1 \u003d (char *)puVar8[1];\n        if (((pcVar1 \u003d\u003d (char *)0x0) || (*pcVar1 !\u003d \u0027_\u0027)) || (pcVar1[1] !\u003d \u0027_\u0027)) {\nLAB_00104a03:\n          if (DAT_0010b7e8 \u003d\u003d 0) goto LAB_00104a11;\nLAB_00104ae2:\n          uVar5 \u003d (uint)(puVar8[4] \u003d\u003d 0x10c2a8);\nLAB_00104af9:\n          if (uVar5 !\u003d 0) goto LAB_00104a2d;\n          unaff_R13 \u003d (undefined8 *)((long)unaff_R13 + (long)unaff_R14);\n          puVar15 \u003d unaff_R12;\n          puVar12 \u003d unaff_RBP;\n          if (unaff_R12 \u003c\u003d unaff_R13) {\nLAB_00104b15:\n            unaff_RBX \u003d (undefined8 *)((long)unaff_RBX - (long)in_stack_00000018);\n            if (unaff_R14 \u003d\u003d (undefined8 *)0x8) {\n              lVar9 \u003d puVar12[1];\n              puVar11 \u003d (undefined8 *)((long)unaff_RBX + 7);\n              if (-1 \u003c (long)unaff_RBX) {\n                puVar11 \u003d unaff_RBX;\n              }\n              in_R8 \u003d (undefined8 *)(ulong)DAT_0010b800;\n              pcVar2 \u003d *(code **)(lVar9 + 0x208);\n              puVar11 \u003d (undefined8 *)((long)puVar11 \u003e\u003e 3);\n            }\n            else {\n              puVar11 \u003d (undefined8 *)((long)unaff_RBX / (long)unaff_R14);\n              lVar9 \u003d puVar12[1];\n              pcVar2 \u003d *(code **)(lVar9 + 0x208);\n            }\n            unaff_RBP \u003d puVar12;\n            if (DAT_0010b800 \u003d\u003d 0) {\n              DAT_0010b778 \u003d DAT_0010b80c !\u003d 0;\n              DAT_0010b780 \u003d puVar12;\n              DAT_0010b770 \u003d (undefined8 *)(*pcVar2)(puVar12);\n              DAT_0010b768 \u003d (undefined8 *)(**(code **)(puVar12[1] + 0x208))(puVar12);\n              unaff_RBX \u003d in_stack_00000048;\n              if ((DAT_0010b770 \u003d\u003d (undefined8 *)0x0) || (DAT_0010b768 \u003d\u003d (undefined8 *)0x0)) {\n                FUN_00106530(*puVar12);\n                __ptr \u003d unaff_R15;\n                goto LAB_00102d8e;\n              }\n              unaff_R12 \u003d (undefined8 *)(ulong)in_stack_00000038._4_4_;\n              if (DAT_0010b7f8 !\u003d 0) {\n                uVar18 \u003d (ulong)(DAT_0010b80c !\u003d 0);\n                qsort(in_stack_00000048,(size_t)puVar11,(size_t)unaff_R12,FUN_00102fd2);\n                puVar15 \u003d (undefined8 *)xmalloc((long)puVar11 \u003c\u003c 4);\n                puVar13 \u003d DAT_0010b770;\n                unaff_RBP \u003d DAT_0010b768;\n                unaff_R14 \u003d (undefined8 *)((long)puVar11 * (long)unaff_R12 + (long)unaff_RBX);\n                puVar8 \u003d DAT_0010b770;\n                in_R9 \u003d DAT_0010b768;\n                if (unaff_R14 \u003c\u003d unaff_RBX) goto LAB_00102ec2;\n                puVar11 \u003d (undefined8 *)\n                          (**(code **)(puVar12[1] + 0x270))(puVar12,uVar18 \u0026 0xffffffff,unaff_RBX);\n                __ptr \u003d unaff_RBX;\n                in_R8 \u003d unaff_R12;\n                in_stack_00000010 \u003d puVar15;\n                if (puVar11 \u003d\u003d (undefined8 *)0x0) goto LAB_00102eb9;\n                goto LAB_00104e35;\n              }\n              qsort(in_stack_00000048,(size_t)puVar11,(size_t)unaff_R12,\n                    (__compar_fn_t)(\u0026PTR_FUN_0010acc0)[(long)DAT_0010b7f4 + (long)DAT_0010b7fc * 2])\n              ;\n              lVar9 \u003d puVar12[1];\n            }\n            __ptr \u003d (undefined8 *)0x0;\n            do {\n              puVar12 \u003d in_stack_00000048;\n              puVar8 \u003d (undefined8 *)(ulong)DAT_0010b7f8;\n              unaff_R14 \u003d (undefined8 *)(ulong)(DAT_0010b80c !\u003d 0);\n              if (DAT_0010b7f8 !\u003d 0) {\n                puVar15 \u003d (undefined8 *)(**(code **)(lVar9 + 0x208))(unaff_RBP);\n                if (puVar15 \u003d\u003d (undefined8 *)0x0) goto LAB_00102ed2;\n                unaff_RBX \u003d __ptr + (long)puVar11 * 2;\n                puVar11 \u003d __ptr;\n                do {\n                  if (unaff_RBX \u003c\u003d puVar11) {\nLAB_00104c75:\n                    if (in_stack_00000040 \u003d\u003d (void *)0x0) {\n                      free(in_stack_00000048);\n                      free(__ptr);\n                      return;\n                    }\n                    free(in_stack_00000040);\n                    free(in_stack_00000048);\n                    free(__ptr);\n                    return;\n                  }\n                  puVar8 \u003d puVar15;\n                  lVar9 \u003d (**(code **)(unaff_RBP[1] + 0x270))(unaff_RBP,unaff_R14,*puVar11);\n                  if (lVar9 \u003d\u003d 0) {\n                    FUN_00106530(*unaff_RBP,0);\nLAB_00102ed2:\n                    puVar12 \u003d (undefined8 *)*unaff_RBP;\n                    FUN_00106530();\n                    puVar13 \u003d in_R8;\n                    puVar14 \u003d in_R9;\n                    goto LAB_00102edb;\n                  }\n                  puVar12 \u003d puVar11 + 1;\n                  puVar11 \u003d puVar11 + 2;\n                  FUN_00105110(unaff_RBP,lVar9,*puVar12,in_stack_00000008);\n                } while( true );\n              }\n              unaff_R12 \u003d (undefined8 *)(ulong)in_stack_00000038._4_4_;\n              unaff_R15 \u003d (undefined8 *)(**(code **)(lVar9 + 0x208))(unaff_RBP);\n              if (unaff_R15 \u003d\u003d (undefined8 *)0x0) {\n                FUN_00106530(*unaff_RBP);\n                puVar12 \u003d unaff_R12;\n                if (DAT_0010b80c \u003d\u003d 0) {\n                  lVar9 \u003d (**(code **)(unaff_RBP[1] + 0x350))(unaff_RBP);\n                  puVar11 \u003d in_stack_00000048;\n                  puVar15 \u003d unaff_R12;\n                  if (lVar9 \u003c 1) {\n                    puVar8 \u003d (undefined8 *)0x0;\n                    unaff_RBX \u003d (undefined8 *)0x0;\n                  }\n                  else {\nLAB_00102d8e:\n                    unaff_RBX \u003d (undefined8 *)xmalloc();\n                    puVar8 \u003d (undefined8 *)(**(code **)(unaff_RBP[1] + 0x358))(unaff_RBP,unaff_RBX);\n                    puVar12 \u003d puVar15;\n                    if ((long)puVar8 \u003c 0) {\n                      puVar12 \u003d (undefined8 *)*unaff_RBP;\n                      puVar11 \u003d (undefined8 *)FUN_00106530(puVar12,puVar15);\n                      goto LAB_00102dbe;\n                    }\n                  }\n                }\n                else {\n                  puVar8 \u003d unaff_R12;\n                  unaff_RBX \u003d in_stack_00000048;\n                  puVar11 \u003d (undefined8 *)0x0;\n                  puVar15 \u003d (undefined8 *)0x0;\n                }\n                in_R9 \u003d \u0026stack0x00000040;\n                in_R8 \u003d unaff_RBX;\n                lVar9 \u003d (**(code **)(unaff_RBP[1] + 0x360))(unaff_RBP,puVar15,puVar11,puVar8);\n                unaff_R12 \u003d puVar12;\n                if (0 \u003c lVar9) {\n                  unaff_R12 \u003d (undefined8 *)((long)puVar12 + lVar9);\n                  in_stack_00000048 \u003d (undefined8 *)xrealloc(in_stack_00000048);\n                  lVar7 \u003d 0;\n                  do {\n                    in_stack_00000048[(long)((long)puVar12 + lVar7)] \u003d\n                         (void *)(lVar7 * 0x30 + (long)in_stack_00000040);\n                    lVar7 \u003d lVar7 + 1;\n                  } while (lVar9 !\u003d lVar7);\n                  in_stack_00000048[(long)((long)puVar12 + lVar9)] \u003d 0;\n                }\n                if ((DAT_0010b80c \u003d\u003d 0) \u0026\u0026 (unaff_RBX !\u003d (undefined8 *)0x0)) {\n                  free(unaff_RBX);\n                }\n                if ((*(byte *)((long)unaff_RBP + 0x4a) \u0026 0x10) !\u003d 0) {\n                  unaff_RBX \u003d (undefined8 *)*unaff_RBP;\n                  DAT_0010b230 \u003d \u0027\\0\u0027;\n                  uVar6 \u003d dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n                  FUN_00106400(uVar6);\n                }\n                unaff_R14 \u003d (undefined8 *)(ulong)in_stack_00000038._4_4_;\n                bVar16 \u003d DAT_0010b80c !\u003d 0;\n                puVar11 \u003d (undefined8 *)(ulong)bVar16;\n                puVar8 \u003d in_stack_00000048;\n                in_stack_00000018 \u003d in_stack_00000048;\n                unaff_R15 \u003d (undefined8 *)(**(code **)(unaff_RBP[1] + 0x208))(unaff_RBP);\n                if (unaff_R15 !\u003d (undefined8 *)0x0) goto code_r0x00104992;\n              }\n              else {\n                puVar11 \u003d (undefined8 *)((long)puVar11 * (long)unaff_R12 + (long)puVar12);\n                unaff_RBX \u003d puVar12;\n                while( true ) {\n                  if (puVar11 \u003c\u003d unaff_RBX) goto LAB_00104c75;\n                  puVar8 \u003d unaff_R15;\n                  lVar9 \u003d (**(code **)(unaff_RBP[1] + 0x270))(unaff_RBP,unaff_R14,unaff_RBX);\n                  if (lVar9 \u003d\u003d 0) break;\n                  unaff_RBX \u003d (undefined8 *)((long)unaff_RBX + (long)unaff_R12);\n                  FUN_00105110(unaff_RBP,lVar9,0,in_stack_00000008);\n                }\n                FUN_00106530(*unaff_RBP,0);\n              }\n              FUN_00106530(*unaff_RBP);\n              puVar12 \u003d unaff_RBP;\n              puVar15 \u003d unaff_R15;\nLAB_00102eb0:\n              FUN_00106530(*puVar11);\nLAB_00102eb9:\n              FUN_00106530(*puVar12);\nLAB_00102ec2:\n              puVar11 \u003d (undefined8 *)0x0;\n              __ptr \u003d unaff_RBX;\n              in_R8 \u003d unaff_R12;\n              puVar13 \u003d puVar8;\n              unaff_RBP \u003d in_R9;\n              in_stack_00000010 \u003d puVar15;\nLAB_00104e35:\n              while (in_R9 \u003d puVar13, __ptr \u003c unaff_R14) {\n                unaff_RBX \u003d (undefined8 *)((long)__ptr + (long)in_R8);\n                if (unaff_RBX \u003c unaff_R14) {\n                  puVar8 \u003d unaff_RBP;\n                  puVar13 \u003d in_R8;\n                  puVar14 \u003d in_R9;\n                  puVar10 \u003d (undefined8 *)(**(code **)(puVar12[1] + 0x270))();\n                  if (puVar10 \u003d\u003d (undefined8 *)0x0) {\nLAB_00102edb:\n                    in_R9 \u003d puVar14;\n                    in_R8 \u003d puVar13;\n                    puVar12 \u003d (undefined8 *)*puVar12;\n                    puVar10 \u003d (undefined8 *)FUN_00106530();\n                  }\n                  else {\n                    puVar8 \u003d (undefined8 *)puVar11[4];\n                    if ((*(uint *)(puVar11 + 3) \u0026 0x200100) \u003d\u003d 0) goto LAB_00104e95;\n                  }\n                  lVar9 \u003d puVar11[2];\nLAB_00102ee7:\n                  if (puVar8 \u003d\u003d (undefined8 *)puVar10[4]) {\n                    lVar9 \u003d puVar10[2] - lVar9;\n                    puVar13 \u003d unaff_RBP;\n                    puVar14 \u003d __ptr;\n                    goto LAB_00104ea7;\n                  }\nLAB_00102dc4:\n                  lVar9 \u003d puVar8[8] - lVar9;\n                  puVar13 \u003d unaff_RBP;\n                  puVar14 \u003d __ptr;\n                }\n                else {\n                  puVar8 \u003d (undefined8 *)puVar11[4];\n                  if ((*(uint *)(puVar11 + 3) \u0026 0x200100) !\u003d 0) {\nLAB_00102dbe:\n                    lVar9 \u003d puVar11[2];\n                    puVar10 \u003d (undefined8 *)0x0;\n                    goto LAB_00102dc4;\n                  }\n                  puVar10 \u003d (undefined8 *)0x0;\nLAB_00104e95:\n                  puVar13 \u003d unaff_RBP;\n                  puVar14 \u003d __ptr;\n                  if (*(int *)(puVar12[1] + 8) \u003d\u003d 5) {\n                    lVar9 \u003d puVar11[7];\n                  }\n                  else {\n                    lVar9 \u003d puVar11[2];\n                    if ((*(byte *)((long)puVar8 + 0x25) \u0026 0x10) \u003d\u003d 0) {\n                      if (unaff_RBX \u003c unaff_R14) goto LAB_00102ee7;\n                      goto LAB_00102dc4;\n                    }\n                  }\n                }\nLAB_00104ea7:\n                puVar11 \u003d puVar10;\n                __ptr \u003d unaff_RBX;\n                unaff_RBP \u003d in_R9;\n                if (lVar9 !\u003d 0) {\n                  *puVar15 \u003d puVar14;\n                  puVar15[1] \u003d lVar9;\n                  puVar15 \u003d puVar15 + 2;\n                }\n              }\n              puVar11 \u003d (undefined8 *)((long)puVar15 - (long)in_stack_00000010 \u003e\u003e 4);\n              qsort(in_stack_00000010,(size_t)puVar11,0x10,FUN_00103533);\n              lVar9 \u003d puVar12[1];\n              unaff_RBX \u003d __ptr;\n              unaff_RBP \u003d puVar12;\n              __ptr \u003d in_stack_00000010;\n            } while( true );\n          }\n          goto LAB_001049cf;\n        }\n        iVar4 \u003d strcmp(pcVar1 + (pcVar1[2] \u003d\u003d \u0027_\u0027),\"__gnu_lto_slim\");\n        in_stack_00000010 \u003d puVar8;\n        if (iVar4 \u003d\u003d 0) {\n          if (DAT_0010b230 !\u003d \u0027\\0\u0027) {\n            in_stack_00000010 \u003d (undefined8 *)*unaff_RBP;\n            DAT_0010b230 \u003d \u0027\\0\u0027;\n            uVar6 \u003d dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n            FUN_00106400(uVar6,in_stack_00000010);\n          }\n          goto LAB_00104a03;\n        }\n        if (DAT_0010b7e8 !\u003d 0) goto LAB_00104ae2;\nLAB_00104a11:\n        if (DAT_0010b808 \u003d\u003d 0) {\n          if (DAT_0010b7d8 \u003d\u003d 0) goto LAB_00104a2d;\n          uVar5 \u003d (*(uint *)(puVar8 + 3) \u003e\u003e 7 ^ 1) \u0026 1;\n          goto LAB_00104af9;\n        }\n        if ((((*(uint *)(puVar8 + 3) \u0026 0x800082) \u003d\u003d 0) \u0026\u0026 (puVar8[4] !\u003d 0x10c2a8)) \u0026\u0026\n           ((*(byte *)(puVar8[4] + 0x25) \u0026 0x10) \u003d\u003d 0)) goto LAB_001049c3;\nLAB_00104a2d:\n        if (DAT_0010b81c !\u003d 0) {\n          if (DAT_0010b7f8 \u003d\u003d 0) goto LAB_00104a53;\nFUN_00104d5b:\n          if ((puVar8[4] !\u003d 0x10c2a8) \u0026\u0026 (puVar8[4] !\u003d 0x10c3c0)) goto LAB_00104cba;\n          goto LAB_001049c3;\n        }\n      } while ((*(byte *)(puVar8 + 3) \u0026 4) !\u003d 0);\n      if (DAT_0010b7f8 !\u003d 0) goto FUN_00104d5b;\nLAB_00104a53:\n      in_R9 \u003d (undefined8 *)(ulong)DAT_0010b7e4;\n      if (DAT_0010b7e4 \u003d\u003d 0) {\n        cVar3 \u003d (**(code **)(unaff_RBP[1] + 0x230))(unaff_RBP);\n        if (cVar3 !\u003d \u0027\\0\u0027) {\n          FUN_00102c19();\n          return;\n        }\n        goto LAB_00104a7b;\n      }\n    } while (puVar8[4] \u003d\u003d 0x10c2a8);\nLAB_00104cba:\n    cVar3 \u003d (**(code **)(unaff_RBP[1] + 0x230))(unaff_RBP);\n    if (cVar3 !\u003d \u0027\\0\u0027) {\n      FUN_00102c19();\n      return;\n    }\nLAB_00104a7b:\n    if (unaff_RBX !\u003d unaff_R13) {\n      if (unaff_R14 \u003d\u003d (undefined8 *)0x8) {\n        *unaff_RBX \u003d *unaff_R13;\n        FUN_001049c0();\n        return;\n      }\n      for (; unaff_R14 !\u003d (undefined8 *)0x0; unaff_R14 \u003d (undefined8 *)((long)unaff_R14 + -1)) {\n        *(undefined *)unaff_RBX \u003d *(undefined *)unaff_R13;\n        unaff_R13 \u003d (undefined8 *)((long)unaff_R13 + (ulong)bVar17 * -2 + 1);\n        unaff_RBX \u003d (undefined8 *)((long)unaff_RBX + (ulong)bVar17 * -2 + 1);\n      }\n      FUN_001049c0();\n      return;\n    }\n  } while( true );\ncode_r0x00104992:\n  puVar15 \u003d (undefined8 *)((long)unaff_R12 * (long)unaff_R14);\n  unaff_R12 \u003d (undefined8 *)((long)in_stack_00000018 + (long)puVar15);\n  unaff_RBX \u003d in_stack_00000018;\n  puVar12 \u003d unaff_RBP;\n  if (in_stack_00000018 \u003c unaff_R12) goto code_r0x001049aa;\n  goto LAB_00104b15;\ncode_r0x001049aa:\n  unaff_retaddr \u003d (ulong)bVar16;\n  unaff_R13 \u003d in_stack_00000018;\n  goto LAB_001049cf;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00104d5b"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00104d5b": {
      "entrypoint": "0x00104d5b",
      "current_name": "FUN_00104d5b",
      "code": "\nvoid FUN_00104d5b(void)\n\n{\n  char *pcVar1;\n  code *pcVar2;\n  char cVar3;\n  int iVar4;\n  uint uVar5;\n  undefined8 uVar6;\n  undefined8 *puVar7;\n  long lVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  undefined8 *in_RCX;\n  undefined8 *unaff_RBX;\n  undefined8 *__ptr;\n  undefined8 *puVar11;\n  undefined8 *unaff_RBP;\n  undefined8 *puVar12;\n  undefined8 *in_R8;\n  undefined8 *puVar13;\n  undefined8 *in_R9;\n  undefined8 *puVar14;\n  undefined8 *puVar15;\n  undefined8 *unaff_R12;\n  undefined8 *unaff_R13;\n  undefined8 *unaff_R14;\n  undefined8 *unaff_R15;\n  bool bVar16;\n  byte bVar17;\n  ulong unaff_retaddr;\n  ulong uVar18;\n  undefined8 param_7;\n  undefined8 *param_8;\n  undefined8 *param_9;\n  undefined8 in_stack_00000038;\n  void *param_13;\n  undefined8 *param_14;\n  \n  bVar17 \u003d 0;\n  do {\n    if ((in_RCX[4] !\u003d 0x10c2a8) \u0026\u0026 (in_RCX[4] !\u003d 0x10c3c0)) goto LAB_00104cba;\nLAB_001049c3:\n    do {\n      unaff_R13 \u003d (undefined8 *)((long)unaff_R13 + (long)unaff_R14);\n      puVar15 \u003d unaff_R12;\n      puVar12 \u003d unaff_RBP;\n      if (unaff_R12 \u003c\u003d unaff_R13) goto LAB_00104b15;\nLAB_001049cf:\n      in_RCX \u003d (undefined8 *)\n               (**(code **)(unaff_RBP[1] + 0x270))\n                         (unaff_RBP,unaff_retaddr \u0026 0xffffffff,unaff_R13,unaff_R15);\n      puVar11 \u003d unaff_RBP;\n      puVar12 \u003d unaff_R13;\n      puVar15 \u003d unaff_R15;\n      if (in_RCX \u003d\u003d (undefined8 *)0x0) goto LAB_00102eb0;\n      pcVar1 \u003d (char *)in_RCX[1];\n      if (((pcVar1 \u003d\u003d (char *)0x0) || (*pcVar1 !\u003d \u0027_\u0027)) || (pcVar1[1] !\u003d \u0027_\u0027)) {\nLAB_00104a03:\n        if (DAT_0010b7e8 \u003d\u003d 0) goto LAB_00104a11;\nLAB_00104ae2:\n        uVar5 \u003d (uint)(in_RCX[4] \u003d\u003d 0x10c2a8);\nLAB_00104af9:\n        if (uVar5 !\u003d 0) goto LAB_00104a2d;\n        unaff_R13 \u003d (undefined8 *)((long)unaff_R13 + (long)unaff_R14);\n        puVar15 \u003d unaff_R12;\n        puVar12 \u003d unaff_RBP;\n        if (unaff_R12 \u003c\u003d unaff_R13) {\nLAB_00104b15:\n          unaff_RBX \u003d (undefined8 *)((long)unaff_RBX - (long)param_9);\n          if (unaff_R14 \u003d\u003d (undefined8 *)0x8) {\n            lVar9 \u003d puVar12[1];\n            puVar11 \u003d (undefined8 *)((long)unaff_RBX + 7);\n            if (-1 \u003c (long)unaff_RBX) {\n              puVar11 \u003d unaff_RBX;\n            }\n            in_R8 \u003d (undefined8 *)(ulong)DAT_0010b800;\n            pcVar2 \u003d *(code **)(lVar9 + 0x208);\n            puVar11 \u003d (undefined8 *)((long)puVar11 \u003e\u003e 3);\n          }\n          else {\n            puVar11 \u003d (undefined8 *)((long)unaff_RBX / (long)unaff_R14);\n            lVar9 \u003d puVar12[1];\n            pcVar2 \u003d *(code **)(lVar9 + 0x208);\n          }\n          unaff_RBP \u003d puVar12;\n          if (DAT_0010b800 \u003d\u003d 0) {\n            DAT_0010b778 \u003d DAT_0010b80c !\u003d 0;\n            DAT_0010b780 \u003d puVar12;\n            DAT_0010b770 \u003d (undefined8 *)(*pcVar2)(puVar12);\n            DAT_0010b768 \u003d (undefined8 *)(**(code **)(puVar12[1] + 0x208))(puVar12);\n            unaff_RBX \u003d param_14;\n            if ((DAT_0010b770 \u003d\u003d (undefined8 *)0x0) || (DAT_0010b768 \u003d\u003d (undefined8 *)0x0)) {\n              FUN_00106530(*puVar12);\n              __ptr \u003d unaff_R15;\n              goto LAB_00102d8e;\n            }\n            unaff_R12 \u003d (undefined8 *)(ulong)in_stack_00000038._4_4_;\n            if (DAT_0010b7f8 !\u003d 0) {\n              uVar18 \u003d (ulong)(DAT_0010b80c !\u003d 0);\n              qsort(param_14,(size_t)puVar11,(size_t)unaff_R12,FUN_00102fd2);\n              puVar15 \u003d (undefined8 *)xmalloc((long)puVar11 \u003c\u003c 4);\n              puVar13 \u003d DAT_0010b770;\n              unaff_RBP \u003d DAT_0010b768;\n              unaff_R14 \u003d (undefined8 *)((long)puVar11 * (long)unaff_R12 + (long)unaff_RBX);\n              in_RCX \u003d DAT_0010b770;\n              in_R9 \u003d DAT_0010b768;\n              if (unaff_R14 \u003c\u003d unaff_RBX) goto LAB_00102ec2;\n              puVar11 \u003d (undefined8 *)\n                        (**(code **)(puVar12[1] + 0x270))(puVar12,uVar18 \u0026 0xffffffff,unaff_RBX);\n              __ptr \u003d unaff_RBX;\n              in_R8 \u003d unaff_R12;\n              param_8 \u003d puVar15;\n              if (puVar11 \u003d\u003d (undefined8 *)0x0) goto LAB_00102eb9;\n              goto LAB_00104e35;\n            }\n            qsort(param_14,(size_t)puVar11,(size_t)unaff_R12,\n                  (__compar_fn_t)(\u0026PTR_FUN_0010acc0)[(long)DAT_0010b7f4 + (long)DAT_0010b7fc * 2]);\n            lVar9 \u003d puVar12[1];\n          }\n          __ptr \u003d (undefined8 *)0x0;\n          do {\n            puVar12 \u003d param_14;\n            puVar7 \u003d (undefined8 *)(ulong)DAT_0010b7f8;\n            unaff_R14 \u003d (undefined8 *)(ulong)(DAT_0010b80c !\u003d 0);\n            if (DAT_0010b7f8 !\u003d 0) {\n              puVar15 \u003d (undefined8 *)(**(code **)(lVar9 + 0x208))(unaff_RBP);\n              if (puVar15 \u003d\u003d (undefined8 *)0x0) goto LAB_00102ed2;\n              unaff_RBX \u003d __ptr + (long)puVar11 * 2;\n              puVar11 \u003d __ptr;\n              do {\n                if (unaff_RBX \u003c\u003d puVar11) {\nLAB_00104c75:\n                  if (param_13 !\u003d (void *)0x0) {\n                    free(param_13);\n                    free(param_14);\n                    free(__ptr);\n                    return;\n                  }\n                  free(param_14);\n                  free(__ptr);\n                  return;\n                }\n                puVar7 \u003d puVar15;\n                lVar9 \u003d (**(code **)(unaff_RBP[1] + 0x270))(unaff_RBP,unaff_R14,*puVar11);\n                if (lVar9 \u003d\u003d 0) {\n                  FUN_00106530(*unaff_RBP,0);\nLAB_00102ed2:\n                  puVar12 \u003d (undefined8 *)*unaff_RBP;\n                  FUN_00106530();\n                  puVar13 \u003d in_R8;\n                  puVar14 \u003d in_R9;\n                  goto LAB_00102edb;\n                }\n                puVar12 \u003d puVar11 + 1;\n                puVar11 \u003d puVar11 + 2;\n                FUN_00105110(unaff_RBP,lVar9,*puVar12,param_7);\n              } while( true );\n            }\n            unaff_R12 \u003d (undefined8 *)(ulong)in_stack_00000038._4_4_;\n            unaff_R15 \u003d (undefined8 *)(**(code **)(lVar9 + 0x208))(unaff_RBP);\n            if (unaff_R15 \u003d\u003d (undefined8 *)0x0) {\n              FUN_00106530(*unaff_RBP);\n              puVar12 \u003d unaff_R12;\n              if (DAT_0010b80c \u003d\u003d 0) {\n                lVar9 \u003d (**(code **)(unaff_RBP[1] + 0x350))(unaff_RBP);\n                puVar11 \u003d param_14;\n                puVar15 \u003d unaff_R12;\n                if (lVar9 \u003c 1) {\n                  puVar7 \u003d (undefined8 *)0x0;\n                  unaff_RBX \u003d (undefined8 *)0x0;\n                }\n                else {\nLAB_00102d8e:\n                  unaff_RBX \u003d (undefined8 *)xmalloc();\n                  puVar7 \u003d (undefined8 *)(**(code **)(unaff_RBP[1] + 0x358))(unaff_RBP,unaff_RBX);\n                  puVar12 \u003d puVar15;\n                  if ((long)puVar7 \u003c 0) {\n                    puVar12 \u003d (undefined8 *)*unaff_RBP;\n                    puVar11 \u003d (undefined8 *)FUN_00106530(puVar12,puVar15);\n                    goto LAB_00102dbe;\n                  }\n                }\n              }\n              else {\n                puVar7 \u003d unaff_R12;\n                unaff_RBX \u003d param_14;\n                puVar11 \u003d (undefined8 *)0x0;\n                puVar15 \u003d (undefined8 *)0x0;\n              }\n              in_R9 \u003d \u0026stack0x00000040;\n              in_R8 \u003d unaff_RBX;\n              lVar9 \u003d (**(code **)(unaff_RBP[1] + 0x360))(unaff_RBP,puVar15,puVar11,puVar7);\n              unaff_R12 \u003d puVar12;\n              if (0 \u003c lVar9) {\n                unaff_R12 \u003d (undefined8 *)((long)puVar12 + lVar9);\n                param_14 \u003d (undefined8 *)xrealloc(param_14);\n                lVar8 \u003d 0;\n                do {\n                  param_14[(long)puVar12 + lVar8] \u003d (void *)(lVar8 * 0x30 + (long)param_13);\n                  lVar8 \u003d lVar8 + 1;\n                } while (lVar9 !\u003d lVar8);\n                param_14[(long)puVar12 + lVar9] \u003d 0;\n              }\n              if ((DAT_0010b80c \u003d\u003d 0) \u0026\u0026 (unaff_RBX !\u003d (undefined8 *)0x0)) {\n                free(unaff_RBX);\n              }\n              if ((*(byte *)((long)unaff_RBP + 0x4a) \u0026 0x10) !\u003d 0) {\n                unaff_RBX \u003d (undefined8 *)*unaff_RBP;\n                DAT_0010b230 \u003d \u0027\\0\u0027;\n                uVar6 \u003d dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n                FUN_00106400(uVar6);\n              }\n              unaff_R14 \u003d (undefined8 *)(ulong)in_stack_00000038._4_4_;\n              bVar16 \u003d DAT_0010b80c !\u003d 0;\n              puVar11 \u003d (undefined8 *)(ulong)bVar16;\n              in_RCX \u003d param_14;\n              param_9 \u003d param_14;\n              unaff_R15 \u003d (undefined8 *)(**(code **)(unaff_RBP[1] + 0x208))(unaff_RBP);\n              if (unaff_R15 !\u003d (undefined8 *)0x0) goto code_r0x00104992;\n            }\n            else {\n              puVar11 \u003d (undefined8 *)((long)puVar11 * (long)unaff_R12 + (long)puVar12);\n              unaff_RBX \u003d puVar12;\n              while( true ) {\n                if (puVar11 \u003c\u003d unaff_RBX) goto LAB_00104c75;\n                in_RCX \u003d unaff_R15;\n                lVar9 \u003d (**(code **)(unaff_RBP[1] + 0x270))(unaff_RBP,unaff_R14,unaff_RBX);\n                if (lVar9 \u003d\u003d 0) break;\n                unaff_RBX \u003d (undefined8 *)((long)unaff_RBX + (long)unaff_R12);\n                FUN_00105110(unaff_RBP,lVar9,0,param_7);\n              }\n              FUN_00106530(*unaff_RBP,0);\n            }\n            FUN_00106530(*unaff_RBP);\n            puVar12 \u003d unaff_RBP;\n            puVar15 \u003d unaff_R15;\nLAB_00102eb0:\n            FUN_00106530(*puVar11);\nLAB_00102eb9:\n            FUN_00106530(*puVar12);\nLAB_00102ec2:\n            puVar11 \u003d (undefined8 *)0x0;\n            __ptr \u003d unaff_RBX;\n            in_R8 \u003d unaff_R12;\n            puVar13 \u003d in_RCX;\n            unaff_RBP \u003d in_R9;\n            param_8 \u003d puVar15;\nLAB_00104e35:\n            while (in_R9 \u003d puVar13, __ptr \u003c unaff_R14) {\n              unaff_RBX \u003d (undefined8 *)((long)__ptr + (long)in_R8);\n              if (unaff_RBX \u003c unaff_R14) {\n                puVar7 \u003d unaff_RBP;\n                puVar13 \u003d in_R8;\n                puVar14 \u003d in_R9;\n                puVar10 \u003d (undefined8 *)(**(code **)(puVar12[1] + 0x270))();\n                if (puVar10 \u003d\u003d (undefined8 *)0x0) {\nLAB_00102edb:\n                  in_R9 \u003d puVar14;\n                  in_R8 \u003d puVar13;\n                  puVar12 \u003d (undefined8 *)*puVar12;\n                  puVar10 \u003d (undefined8 *)FUN_00106530();\n                }\n                else {\n                  puVar7 \u003d (undefined8 *)puVar11[4];\n                  if ((*(uint *)(puVar11 + 3) \u0026 0x200100) \u003d\u003d 0) goto LAB_00104e95;\n                }\n                lVar9 \u003d puVar11[2];\nLAB_00102ee7:\n                if (puVar7 \u003d\u003d (undefined8 *)puVar10[4]) {\n                  lVar9 \u003d puVar10[2] - lVar9;\n                  puVar13 \u003d unaff_RBP;\n                  puVar14 \u003d __ptr;\n                  goto LAB_00104ea7;\n                }\nLAB_00102dc4:\n                lVar9 \u003d puVar7[8] - lVar9;\n                puVar13 \u003d unaff_RBP;\n                puVar14 \u003d __ptr;\n              }\n              else {\n                puVar7 \u003d (undefined8 *)puVar11[4];\n                if ((*(uint *)(puVar11 + 3) \u0026 0x200100) !\u003d 0) {\nLAB_00102dbe:\n                  lVar9 \u003d puVar11[2];\n                  puVar10 \u003d (undefined8 *)0x0;\n                  goto LAB_00102dc4;\n                }\n                puVar10 \u003d (undefined8 *)0x0;\nLAB_00104e95:\n                puVar13 \u003d unaff_RBP;\n                puVar14 \u003d __ptr;\n                if (*(int *)(puVar12[1] + 8) \u003d\u003d 5) {\n                  lVar9 \u003d puVar11[7];\n                }\n                else {\n                  lVar9 \u003d puVar11[2];\n                  if ((*(byte *)((long)puVar7 + 0x25) \u0026 0x10) \u003d\u003d 0) {\n                    if (unaff_RBX \u003c unaff_R14) goto LAB_00102ee7;\n                    goto LAB_00102dc4;\n                  }\n                }\n              }\nLAB_00104ea7:\n              puVar11 \u003d puVar10;\n              __ptr \u003d unaff_RBX;\n              unaff_RBP \u003d in_R9;\n              if (lVar9 !\u003d 0) {\n                *puVar15 \u003d puVar14;\n                puVar15[1] \u003d lVar9;\n                puVar15 \u003d puVar15 + 2;\n              }\n            }\n            puVar11 \u003d (undefined8 *)((long)puVar15 - (long)param_8 \u003e\u003e 4);\n            qsort(param_8,(size_t)puVar11,0x10,FUN_00103533);\n            lVar9 \u003d puVar12[1];\n            unaff_RBX \u003d __ptr;\n            unaff_RBP \u003d puVar12;\n            __ptr \u003d param_8;\n          } while( true );\n        }\n        goto LAB_001049cf;\n      }\n      iVar4 \u003d strcmp(pcVar1 + (pcVar1[2] \u003d\u003d \u0027_\u0027),\"__gnu_lto_slim\");\n      param_8 \u003d in_RCX;\n      if (iVar4 \u003d\u003d 0) {\n        if (DAT_0010b230 !\u003d \u0027\\0\u0027) {\n          param_8 \u003d (undefined8 *)*unaff_RBP;\n          DAT_0010b230 \u003d \u0027\\0\u0027;\n          uVar6 \u003d dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n          FUN_00106400(uVar6,param_8);\n        }\n        goto LAB_00104a03;\n      }\n      if (DAT_0010b7e8 !\u003d 0) goto LAB_00104ae2;\nLAB_00104a11:\n      if (DAT_0010b808 \u003d\u003d 0) {\n        if (DAT_0010b7d8 \u003d\u003d 0) goto LAB_00104a2d;\n        uVar5 \u003d (*(uint *)(in_RCX + 3) \u003e\u003e 7 ^ 1) \u0026 1;\n        goto LAB_00104af9;\n      }\n      if ((((*(uint *)(in_RCX + 3) \u0026 0x800082) \u003d\u003d 0) \u0026\u0026 (in_RCX[4] !\u003d 0x10c2a8)) \u0026\u0026\n         ((*(byte *)(in_RCX[4] + 0x25) \u0026 0x10) \u003d\u003d 0)) goto LAB_001049c3;\nLAB_00104a2d:\n    } while ((DAT_0010b81c \u003d\u003d 0) \u0026\u0026 ((*(byte *)(in_RCX + 3) \u0026 4) !\u003d 0));\n  } while (DAT_0010b7f8 !\u003d 0);\n  in_R9 \u003d (undefined8 *)(ulong)DAT_0010b7e4;\n  if (DAT_0010b7e4 \u003d\u003d 0) {\n    cVar3 \u003d (**(code **)(unaff_RBP[1] + 0x230))(unaff_RBP);\n    if (cVar3 !\u003d \u0027\\0\u0027) {\n      FUN_00102c19();\n      return;\n    }\n  }\n  else {\n    if (in_RCX[4] \u003d\u003d 0x10c2a8) goto LAB_001049c3;\nLAB_00104cba:\n    cVar3 \u003d (**(code **)(unaff_RBP[1] + 0x230))(unaff_RBP);\n    if (cVar3 !\u003d \u0027\\0\u0027) {\n      FUN_00102c19();\n      return;\n    }\n  }\n  if (unaff_RBX !\u003d unaff_R13) {\n    if (unaff_R14 !\u003d (undefined8 *)0x8) {\n      for (; unaff_R14 !\u003d (undefined8 *)0x0; unaff_R14 \u003d (undefined8 *)((long)unaff_R14 + -1)) {\n        *(undefined *)unaff_RBX \u003d *(undefined *)unaff_R13;\n        unaff_R13 \u003d (undefined8 *)((long)unaff_R13 + (ulong)bVar17 * -2 + 1);\n        unaff_RBX \u003d (undefined8 *)((long)unaff_RBX + (ulong)bVar17 * -2 + 1);\n      }\n      FUN_001049c0();\n      return;\n    }\n    *unaff_RBX \u003d *unaff_R13;\n    FUN_001049c0();\n    return;\n  }\n  unaff_RBX \u003d (undefined8 *)((long)unaff_RBX + (long)unaff_R14);\n  goto LAB_001049c3;\ncode_r0x00104992:\n  puVar15 \u003d (undefined8 *)((long)unaff_R12 * (long)unaff_R14);\n  unaff_R12 \u003d (undefined8 *)((long)param_9 + (long)puVar15);\n  unaff_RBX \u003d param_9;\n  puVar12 \u003d unaff_RBP;\n  if (param_9 \u003c unaff_R12) goto code_r0x001049aa;\n  goto LAB_00104b15;\ncode_r0x001049aa:\n  unaff_retaddr \u003d (ulong)bVar16;\n  unaff_R13 \u003d param_9;\n  goto LAB_001049cf;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00104d5b"
      ],
      "called": [
        "FUN_00105110",
        "dcgettext",
        "qsort",
        "xmalloc",
        "FUN_00103533",
        "free",
        "FUN_001049c0",
        "FUN_00106400",
        "FUN_00102c19",
        "FUN_00104d5b",
        "strcmp",
        "FUN_00106530",
        "FUN_00102fd2",
        "xrealloc"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00104fa0": {
      "entrypoint": "0x00104fa0",
      "current_name": "FUN_00104fa0",
      "code": "\nuint FUN_00104fa0(undefined8 param_1,undefined8 param_2)\n\n{\n  char *__s2;\n  char *__s1;\n  uint uVar1;\n  long lVar2;\n  long lVar3;\n  \n  lVar2 \u003d (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,param_1,DAT_0010b770);\n  lVar3 \u003d (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,param_2,DAT_0010b768);\n  if ((lVar2 \u003d\u003d 0) || (lVar3 \u003d\u003d 0)) {\n    FUN_00106530(*DAT_0010b780);\n  }\n  else {\n    __s2 \u003d *(char **)(lVar3 + 8);\n    __s1 \u003d *(char **)(lVar2 + 8);\n    if (__s2 \u003d\u003d (char *)0x0) {\n      return (uint)(__s1 !\u003d (char *)0x0);\n    }\n    if (__s1 !\u003d (char *)0x0) {\n      if (*__s2 \u003d\u003d \u0027\\0\u0027) {\n        return (uint)(*__s1 !\u003d \u0027\\0\u0027);\n      }\n      if (*__s1 \u003d\u003d \u0027\\0\u0027) {\n        return 0xffffffff;\n      }\n      uVar1 \u003d strcoll(__s1,__s2);\n      return uVar1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00103bf6",
        "FUN_00105050",
        "FUN_00102fd2"
      ],
      "called": [
        "FUN_00102f9f",
        "strcoll"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00105050": {
      "entrypoint": "0x00105050",
      "current_name": "FUN_00105050",
      "code": "\nulong FUN_00105050(undefined8 param_1,undefined8 param_2)\n\n{\n  char cVar1;\n  ulong uVar2;\n  char *__s;\n  char *__s_00;\n  long lVar3;\n  uint uVar4;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  char *pcVar8;\n  long lVar9;\n  long lVar10;\n  ulong uVar11;\n  ulong uVar12;\n  ulong uVar13;\n  ulong uVar14;\n  undefined8 uVar15;\n  long unaff_R13;\n  bool bVar16;\n  \n  lVar9 \u003d (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,param_1,DAT_0010b770);\n  uVar11 \u003d (ulong)DAT_0010b778;\n  lVar10 \u003d (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,uVar11,param_2,DAT_0010b768);\n  if ((lVar9 !\u003d 0) \u0026\u0026 (lVar10 !\u003d 0)) {\n    lVar3 \u003d *(long *)(lVar10 + 0x20);\n    if (*(long *)(lVar9 + 0x20) \u003d\u003d 0x10c2a8) {\n      uVar11 \u003d 0xffffffff;\n      if (lVar3 \u003d\u003d 0x10c2a8) {\nLAB_001050fa:\n        uVar11 \u003d FUN_00104fa0(param_1,param_2);\n        return uVar11;\n      }\n    }\n    else if (lVar3 \u003d\u003d 0x10c2a8) {\n      uVar11 \u003d 1;\n    }\n    else {\n      uVar13 \u003d *(long *)(lVar9 + 0x10) + *(long *)(*(long *)(lVar9 + 0x20) + 0x30);\n      uVar11 \u003d *(long *)(lVar10 + 0x10) + *(long *)(lVar3 + 0x30);\n      if (uVar13 \u003d\u003d uVar11) goto LAB_001050fa;\n      uVar11 \u003d (ulong)(-(uint)(uVar13 \u003c uVar11) | 1);\n    }\n    return uVar11;\n  }\n  uVar15 \u003d *DAT_0010b780;\n  FUN_00106530();\n  lVar9 \u003d (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,uVar15,DAT_0010b770);\n  lVar10 \u003d (**(code **)(DAT_0010b780[1] + 0x270))(DAT_0010b780,DAT_0010b778,uVar11,DAT_0010b768);\n  if ((lVar9 \u003d\u003d 0) || (unaff_R13 \u003d lVar10, lVar10 \u003d\u003d 0)) {\n    lVar10 \u003d FUN_00106530(*DAT_0010b780);\n  }\n  if ((*(long *)(lVar9 + 0x20) \u003d\u003d 0x10c2a8) || (*(long *)(lVar10 + 0x20) \u003d\u003d 0x10c2a8)) {\n                    \n    abort();\n  }\n  uVar13 \u003d *(ulong *)(*(long *)(lVar9 + 0x20) + 0x30);\n  uVar2 \u003d *(ulong *)(*(long *)(lVar10 + 0x20) + 0x30);\n  uVar14 \u003d *(long *)(lVar9 + 0x10) + uVar13;\n  uVar12 \u003d *(long *)(unaff_R13 + 0x10) + uVar2;\n  bVar16 \u003d uVar14 \u003c uVar12;\n  if ((uVar14 !\u003d uVar12) || (bVar16 \u003d uVar13 \u003c uVar2, uVar13 !\u003d uVar2)) {\n    return (ulong)(-(uint)bVar16 | 1);\n  }\n  __s \u003d *(char **)(lVar9 + 8);\n  __s_00 \u003d *(char **)(unaff_R13 + 8);\n  sVar5 \u003d strlen(__s);\n  sVar6 \u003d strlen(__s_00);\n  pcVar7 \u003d strstr(__s,\"gnu_compiled\");\n  if (pcVar7 \u003d\u003d (char *)0x0) {\n    pcVar8 \u003d strstr(__s,\"gcc2_compiled\");\n    pcVar7 \u003d strstr(__s_00,\"gnu_compiled\");\n    if ((pcVar7 \u003d\u003d (char *)0x0) \u0026\u0026 (pcVar7 \u003d strstr(__s_00,\"gcc2_compiled\"), pcVar7 \u003d\u003d (char *)0x0))\n    goto joined_r0x00103157;\n    if (pcVar8 \u003d\u003d (char *)0x0) {\n      return 1;\n    }\n  }\n  else {\n    pcVar7 \u003d strstr(__s_00,\"gnu_compiled\");\n    if (pcVar7 \u003d\u003d (char *)0x0) {\n      pcVar8 \u003d strstr(__s_00,\"gcc2_compiled\");\njoined_r0x00103157:\n      if (pcVar8 !\u003d (char *)0x0) {\n        return 0xffffffff;\n      }\n    }\n  }\n  uVar4 \u003d *(uint *)(unaff_R13 + 0x18) \u0026 0x4000;\n  if ((*(byte *)(lVar9 + 0x19) \u0026 0x40) \u003d\u003d 0) {\n    if ((sVar5 \u003c 3) || (__s[sVar5 - 2] !\u003d \u0027.\u0027)) {\n      if (uVar4 !\u003d 0) {\n        return 1;\n      }\n      if ((sVar6 \u003c 3) || (__s_00[sVar6 - 2] !\u003d \u0027.\u0027)) goto LAB_00103202;\n      bVar16 \u003d false;\n      goto LAB_001031e7;\n    }\n    cVar1 \u003d __s[sVar5 - 1];\n    bVar16 \u003d cVar1 \u003d\u003d \u0027o\u0027 || cVar1 \u003d\u003d \u0027a\u0027;\n    if (uVar4 \u003d\u003d 0) {\n      if ((sVar6 \u003c 3) || (__s_00[sVar6 - 2] !\u003d \u0027.\u0027)) {\n        if (cVar1 \u003d\u003d \u0027o\u0027 || cVar1 \u003d\u003d \u0027a\u0027) {\n          return 0xffffffff;\n        }\n        goto LAB_00103202;\n      }\n      goto LAB_001031e7;\n    }\n  }\n  else {\n    if (uVar4 !\u003d 0) goto LAB_00103202;\n    if (sVar6 \u003c 3) {\n      return 0xffffffff;\n    }\n    if (__s_00[sVar6 - 2] !\u003d \u0027.\u0027) {\n      return 0xffffffff;\n    }\n    bVar16 \u003d true;\nLAB_001031e7:\n    if ((__s_00[sVar6 - 1] !\u003d \u0027o\u0027) \u0026\u0026 (__s_00[sVar6 - 1] !\u003d \u0027a\u0027)) {\n      if (bVar16) {\n        return 0xffffffff;\n      }\n      goto LAB_00103202;\n    }\n  }\n  if (!bVar16) {\n    return 1;\n  }\nLAB_00103202:\n  uVar11 \u003d FUN_00104fa0(uVar15,uVar11);\n  return uVar11;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00103bec"
      ],
      "called": [
        "FUN_00102fc3",
        "FUN_00104fa0"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00105110": {
      "entrypoint": "0x00105110",
      "current_name": "FUN_00105110",
      "code": "\n\n\nvoid FUN_00105110(undefined8 *param_1,long *param_2,undefined8 param_3,undefined8 *param_4)\n\n{\n  void *__ptr;\n  char *__s1;\n  long **pplVar1;\n  long *plVar2;\n  long lVar3;\n  undefined8 *puVar4;\n  char cVar5;\n  int iVar6;\n  void *pvVar7;\n  long lVar8;\n  uint uVar9;\n  long lVar10;\n  uint local_b4;\n  undefined local_b0 [8];\n  undefined *local_a8;\n  undefined8 local_a0;\n  long *local_98;\n  long *local_90;\n  void *local_88;\n  void *pvStack_80;\n  void *pvStack_78;\n  void *pvStack_70;\n  undefined local_68 [8];\n  char local_60;\n  \n  if (*(code **)(PTR_PTR_FUN_0010b260 + 0x18) \u003d\u003d FUN_001053b0) {\n    if (DAT_0010b818 !\u003d 0) {\n      if (param_4 !\u003d (undefined8 *)0x0) {\n        printf(\"%s:\",*param_4);\n      }\n      printf(\"%s:\",*param_1);\n    }\n  }\n  else {\n    (**(code **)(PTR_PTR_FUN_0010b260 + 0x18))(param_4,param_1);\n  }\n  local_a8 \u003d local_68;\n  (**(code **)(param_1[1] + 0x218))(param_1,param_2,local_a8);\n  uVar9 \u003d *(uint *)(param_2 + 3);\n  cVar5 \u003d local_60;\n  if (((((local_60 \u003d\u003d \u0027i\u0027) \u0026\u0026 ((uVar9 \u0026 0x400000) !\u003d 0)) \u0026\u0026 (DAT_0010b7c8 !\u003d (char *)0x0)) \u0026\u0026\n      ((*DAT_0010b7c8 !\u003d \u0027\\0\u0027 \u0026\u0026 (cVar5 \u003d *DAT_0010b7c8, (uVar9 \u0026 2) \u003d\u003d 0)))) \u0026\u0026\n     (cVar5 \u003d local_60, DAT_0010b7c8[1] !\u003d \u0027\\0\u0027)) {\n    cVar5 \u003d DAT_0010b7c8[1];\n  }\n  local_60 \u003d cVar5;\n  local_a0 \u003d param_3;\n  if ((uVar9 \u0026 0x200100) !\u003d 0) goto LAB_00103330;\n  lVar8 \u003d *param_2;\n  iVar6 \u003d *(int *)(*(long *)(lVar8 + 8) + 8);\n  if (((uVar9 \u0026 0x200000) \u003d\u003d 0) \u0026\u0026 (iVar6 \u003d\u003d 5)) {\n    local_98 \u003d param_2;\n    if (*(long *)(lVar8 + 0x110) \u003d\u003d 0) {\n      local_98 \u003d (long *)0x0;\n    }\n  }\n  else {\n    local_98 \u003d (long *)0x0;\n    if (((iVar6 - 2U \u0026 0xfffffffd) \u003d\u003d 0) \u0026\u0026 (local_90 \u003d param_2, *(long *)(lVar8 + 0x110) !\u003d 0))\n    goto LAB_001051bf;\n  }\n  local_90 \u003d (long *)0x0;\nLAB_001051bf:\n  (**(code **)(PTR_PTR_FUN_0010b260 + 0x20))(\u0026local_a8,param_1);\n  do {\n    if (DAT_0010b804 \u003d\u003d 0) {\nLAB_001051e6:\n      putc(10,_stdout);\n      return;\n    }\n    if (_DAT_0010b7b8 \u003d\u003d param_1) {\n      puVar4 \u003d _DAT_0010b7b8;\n      if (DAT_0010b758 \u003d\u003d (void *)0x0) goto LAB_00105359;\nLAB_00105288:\n      _DAT_0010b7b8 \u003d puVar4;\n      pvVar7 \u003d DAT_0010b750;\n      if (param_2[4] \u003d\u003d 0x10c2a8) {\n        if (_DAT_0010b7b0 \u003d\u003d param_1) {\n          if (DAT_0010b750 \u003d\u003d (void *)0x0) goto LAB_001033d1;\n        }\n        else {\n          uVar9 \u003d 0;\n          if (DAT_0010b750 !\u003d (void *)0x0) {\n            for (; uVar9 \u003c DAT_0010b748; uVar9 \u003d uVar9 + 1) {\n              __ptr \u003d *(void **)((long)pvVar7 + (ulong)uVar9 * 8);\n              if (__ptr !\u003d (void *)0x0) {\n                free(__ptr);\n              }\n            }\n            free(DAT_0010b740);\n            free(pvVar7);\n            free(DAT_0010b738);\n            DAT_0010b740 \u003d (void *)0x0;\n            DAT_0010b750 \u003d (void *)0x0;\n            DAT_0010b738 \u003d (void *)0x0;\n          }\nLAB_001033d1:\n          DAT_0010b748 \u003d *(uint *)(param_1 + 0x14);\n          DAT_0010b740 \u003d (void *)xmalloc((ulong)DAT_0010b748 * 8);\n          DAT_0010b750 \u003d (void *)xmalloc((ulong)DAT_0010b748 \u003c\u003c 3);\n          DAT_0010b738 \u003d (void *)xmalloc((ulong)DAT_0010b748 \u003c\u003c 3);\n          pvStack_70 \u003d DAT_0010b758;\n          local_88 \u003d DAT_0010b740;\n          pvStack_80 \u003d DAT_0010b750;\n          pvStack_78 \u003d DAT_0010b738;\n          bfd_map_over_sections(param_1,FUN_00103c00,\u0026local_88);\n          _DAT_0010b7b0 \u003d param_1;\n        }\n        __s1 \u003d (char *)param_2[1];\n        for (uVar9 \u003d 0; uVar9 \u003c DAT_0010b748; uVar9 \u003d uVar9 + 1) {\n          lVar8 \u003d (ulong)uVar9 * 8;\n          pvVar7 \u003d DAT_0010b738;\n          for (lVar10 \u003d 0;\n              *(long *)((long)pvVar7 + lVar8) !\u003d lVar10 \u0026\u0026 lVar10 \u003c\u003d *(long *)((long)pvVar7 + lVar8)\n              ; lVar10 \u003d lVar10 + 1) {\n            pplVar1 \u003d *(long ***)(*(long *)((long)DAT_0010b750 + lVar8) + lVar10 * 8);\n            plVar2 \u003d *pplVar1;\n            if ((((plVar2 !\u003d (long *)0x0) \u0026\u0026\n                 (lVar3 \u003d *plVar2, *(long *)(lVar3 + 0x20) \u003d\u003d param_2[4])) \u0026\u0026\n                (*(long *)(lVar3 + 0x10) \u003d\u003d param_2[2])) \u0026\u0026\n               (((iVar6 \u003d strcmp(__s1,*(char **)(lVar3 + 8)), iVar6 \u003d\u003d 0 \u0026\u0026\n                 (cVar5 \u003d (**(code **)(param_1[1] + 0x240))\n                                    (param_1,DAT_0010b758,\n                                     *(undefined8 *)((long)DAT_0010b740 + lVar8),pplVar1[1],\n                                     \u0026local_88,local_b0,\u0026local_b4,0), pvVar7 \u003d DAT_0010b738,\n                 cVar5 !\u003d \u0027\\0\u0027)) \u0026\u0026 (local_88 !\u003d (void *)0x0)))) {\n              printf(\"\\t%s:%u\",local_88,(ulong)local_b4);\n              uVar9 \u003d DAT_0010b748;\n              break;\n            }\n          }\n        }\n      }\n      else if (*(undefined8 **)(param_2[4] + 0xe0) \u003d\u003d param_1) {\n        cVar5 \u003d (**(code **)(param_1[1] + 0x250))(param_1,DAT_0010b758,param_2,\u0026local_88,\u0026local_b4);\n        if (((cVar5 !\u003d \u0027\\0\u0027) ||\n            (cVar5 \u003d (**(code **)(param_1[1] + 0x240))\n                               (param_1,DAT_0010b758,param_2[4],param_2[2],\u0026local_88,local_b0,\n                                \u0026local_b4,0), cVar5 !\u003d \u0027\\0\u0027)) \u0026\u0026\n           ((local_88 !\u003d (void *)0x0 \u0026\u0026 (local_b4 !\u003d 0)))) {\n          printf(\"\\t%s:%u\");\n        }\n      }\n      goto LAB_001051e6;\n    }\n    if (DAT_0010b758 !\u003d (void *)0x0) {\n      free(DAT_0010b758);\n      DAT_0010b758 \u003d (void *)0x0;\n    }\nLAB_00105359:\n    lVar8 \u003d (**(code **)(param_1[1] + 0x1f8))(param_1);\n    if (lVar8 \u003c 0) {\n      FUN_00103463(lVar8);\n      return;\n    }\n    DAT_0010b758 \u003d (void *)xmalloc();\n    lVar8 \u003d (**(code **)(param_1[1] + 0x200))(param_1,DAT_0010b758);\n    puVar4 \u003d param_1;\n    if (-1 \u003c lVar8) goto LAB_00105288;\n    FUN_00106530(*param_1);\nLAB_00103330:\n    local_98 \u003d (long *)0x0;\n    local_90 \u003d (long *)0x0;\n    (**(code **)(PTR_PTR_FUN_0010b260 + 0x20))(\u0026local_a8,param_1);\n  } while( true );\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00104d5b"
      ],
      "called": [
        "FUN_001053c0",
        "xmalloc",
        "printf",
        "FUN_00103463",
        "FUN_00106530",
        "FUN_00103238",
        "FUN_001053b0",
        "free"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_001053b0": {
      "entrypoint": "0x001053b0",
      "current_name": "FUN_001053b0",
      "code": "\nvoid FUN_001053b0(undefined8 *param_1,undefined8 *param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  if (DAT_0010b818 \u003d\u003d 0) {\n    return;\n  }\n  if (param_1 !\u003d (undefined8 *)0x0) {\n    printf(\"%s:\",*param_1);\n  }\n  printf(\"%s:\",*param_2,param_4);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00105110"
      ],
      "called": [
        "FUN_00103573"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_001053c0": {
      "entrypoint": "0x001053c0",
      "current_name": "FUN_001053c0",
      "code": "\nvoid FUN_001053c0(long *param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  char cVar2;\n  undefined8 uVar3;\n  long lVar4;\n  \n  cVar2 \u003d bfd_is_undefined_symclass((int)*(char *)(*param_1 + 8));\n  iVar1 \u003d DAT_0010b7a8;\n  if (cVar2 \u003d\u003d \u0027\\0\u0027) {\n    if (DAT_0010b7f8 \u003d\u003d 0) {\n      if ((DAT_0010b7a8 - 0x20U \u0026 0xffffffdf) !\u003d 0) {\nLAB_00103603:\n        uVar3 \u003d dcgettext(0,\"Print width has not been initialized (%d)\",5);\n        FUN_00106300(uVar3,iVar1);\n        goto LAB_00103623;\n      }\n      uVar3 \u003d *(undefined8 *)*param_1;\n    }\n    else {\n      if (DAT_0010b7ec \u003d\u003d 0) {\n        if (param_1[2] \u003d\u003d 0) {\n          lVar4 \u003d param_1[1];\n        }\n        else {\n          lVar4 \u003d *(long *)(param_1[2] + 0x38);\n        }\n        FUN_001054d0(lVar4);\n        if (DAT_0010b7ec !\u003d 0) {\n          FUN_001035a2();\n          return;\n        }\n        goto LAB_00105423;\n      }\n      uVar3 \u003d *(undefined8 *)*param_1;\n      if ((DAT_0010b7a8 - 0x20U \u0026 0xffffffdf) !\u003d 0) goto LAB_00103603;\n    }\n    printf(DAT_0010b7a0,uVar3);\n    if (DAT_0010b7ec !\u003d 0) {\n      FUN_001035a2();\n      return;\n    }\n  }\n  else if (DAT_0010b7a8 \u003d\u003d 0x40) {\n    printf(\"        \");\n    printf(\"        \");\n  }\n  else {\n    printf(\"        \");\n  }\nLAB_00105423:\n  printf(\" %c\",(ulong)(uint)(int)*(char *)(*param_1 + 8));\n  if (*(char *)(*param_1 + 8) !\u003d \u0027-\u0027) {\n    FUN_00104740(\u0026DAT_0010712c,param_1,0,param_2);\n    return;\n  }\nLAB_00103623:\n  putchar(0x20);\n  printf(\u0026DAT_0010b238,(ulong)(uint)(int)*(char *)(*param_1 + 0x19));\n  putchar(0x20);\n  printf(\u0026DAT_0010b23d,(ulong)(uint)(int)*(short *)(*param_1 + 0x1a));\n  printf(\" %5s\",*(undefined8 *)(*param_1 + 0x20));\n  FUN_00104740(\u0026DAT_0010712c,param_1,0,param_2);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00105110"
      ],
      "called": [
        "FUN_00106300",
        "dcgettext",
        "printf",
        "FUN_001054d0",
        "bfd_is_undefined_symclass",
        "FUN_001035a2"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_001054d0": {
      "entrypoint": "0x001054d0",
      "current_name": "FUN_001054d0",
      "code": "\nvoid FUN_001054d0(undefined8 param_1)\n\n{\n  char cVar1;\n  ushort uVar2;\n  int iVar3;\n  long *plVar4;\n  int *piVar5;\n  undefined8 uVar6;\n  long lVar7;\n  ulong uVar8;\n  byte bVar9;\n  ulong uVar10;\n  char *pcVar11;\n  undefined8 in_R8;\n  undefined8 in_R9;\n  \n  uVar8 \u003d (ulong)DAT_0010b7a8;\n  if ((DAT_0010b7a8 - 0x20 \u0026 0xffffffdf) \u003d\u003d 0) {\n    printf(DAT_0010b7a0,param_1);\n    return;\n  }\n  plVar4 \u003d (long *)dcgettext(0,\"Print width has not been initialized (%d)\",5);\n  uVar10 \u003d uVar8;\n  FUN_00106300(plVar4,uVar8);\n  FUN_00104740(\"%-20s|\",plVar4,0,uVar10,in_R8,in_R9,uVar8);\n  cVar1 \u003d bfd_is_undefined_symclass((int)*(char *)(*plVar4 + 8));\n  if (cVar1 \u003d\u003d \u0027\\0\u0027) {\n    FUN_001054d0(*(undefined8 *)*plVar4);\n  }\n  else if (DAT_0010b7a8 \u003d\u003d 0x20) {\n    printf(\"        \");\n  }\n  else {\n    printf(\"                \");\n  }\n  printf(\"|   %c  |\",(ulong)(uint)(int)*(char *)(*plVar4 + 8));\n  if (*(char *)(*plVar4 + 8) \u003d\u003d \u0027-\u0027) {\n    printf(\"%18s|  \",*(undefined8 *)(*plVar4 + 0x20));\n    printf(\u0026DAT_0010b23d,(ulong)(uint)(int)*(short *)(*plVar4 + 0x1a));\n    goto LAB_00103a54;\n  }\n  if (plVar4[2] \u003d\u003d 0) {\n    if (plVar4[3] !\u003d 0) {\n      lVar7 \u003d *(long *)(plVar4[3] + 0x30);\n      cVar1 \u003d *(char *)(lVar7 + 0x28);\n      if (cVar1 \u003d\u003d \u0027g\u0027) goto LAB_00103983;\n      if (cVar1 \u003d\u003d \u0027h\u0027) {\n        pcVar11 \u003d \"Line\";\n      }\n      else if (cVar1 \u003d\u003d \u0027d\u0027) {\n        pcVar11 \u003d \"Block\";\n      }\n      else if (*(ushort *)(lVar7 + 0x26) \u003d\u003d 0) {\n        pcVar11 \u003d \"None\";\n      }\n      else {\n        uVar2 \u003d *(ushort *)(lVar7 + 0x26) \u003e\u003e 4 \u0026 3;\n        if (uVar2 \u003d\u003d 2) {\n          pcVar11 \u003d \"Function\";\n        }\n        else if (uVar2 \u003d\u003d 3) {\n          pcVar11 \u003d \"Array\";\n        }\n        else {\n          if (uVar2 !\u003d 1) {\n            free(DAT_0010b730);\n            uVar2 \u003d *(ushort *)(lVar7 + 0x26);\n            bVar9 \u003d *(byte *)(lVar7 + 0x28);\n            pcVar11 \u003d (char *)dcgettext(0,\"\u003cunknown\u003e: %d/%d\",5);\n            iVar3 \u003d asprintf(\u0026DAT_0010b730,pcVar11,(ulong)bVar9,(ulong)uVar2);\n            pcVar11 \u003d DAT_0010b730;\n            goto joined_r0x00103964;\n          }\n          pcVar11 \u003d \"Pointer\";\n        }\n      }\n      goto LAB_001039c0;\n    }\n    printf(\"                  |\");\n  }\n  else {\n    bVar9 \u003d *(byte *)(plVar4[2] + 0x48) \u0026 0xf;\n    switch(bVar9) {\n    case 0:\n      pcVar11 \u003d \"NOTYPE\";\n      break;\n    case 1:\n      pcVar11 \u003d \"OBJECT\";\n      break;\n    case 2:\n      pcVar11 \u003d \"FUNC\";\n      break;\n    case 3:\n      pcVar11 \u003d \"SECTION\";\n      break;\n    case 4:\n      pcVar11 \u003d \"FILE\";\n      break;\n    case 5:\n      pcVar11 \u003d \"COMMON\";\n      break;\n    case 6:\n      pcVar11 \u003d \"TLS\";\n      break;\n    default:\n      free(DAT_0010b728);\n      pcVar11 \u003d \"\u003cprocessor specific\u003e: %d\";\n      if ((2 \u003c bVar9 - 0xd) \u0026\u0026 (pcVar11 \u003d \"\u003cOS specific\u003e: %d\", 2 \u003c bVar9 - 10)) {\n        pcVar11 \u003d \"\u003cunknown\u003e: %d\";\n      }\n      pcVar11 \u003d (char *)dcgettext(0,pcVar11,5);\n      iVar3 \u003d asprintf(\u0026DAT_0010b728,pcVar11,(ulong)bVar9);\n      pcVar11 \u003d DAT_0010b728;\njoined_r0x00103964:\n      if (iVar3 \u003c 0) {\n        piVar5 \u003d __errno_location();\n        uVar6 \u003d xstrerror(*piVar5);\n        FUN_00106300(\u0026DAT_0010712d,uVar6);\nLAB_00103983:\n        pcVar11 \u003d \"File\";\n      }\n    }\nLAB_001039c0:\n    printf(\"%18s|\",pcVar11);\n  }\n  if (plVar4[2] \u003d\u003d 0) {\n    if (plVar4[1] !\u003d 0) goto LAB_001039fb;\nLAB_00103a02:\n    if (DAT_0010b7a8 \u003d\u003d 0x20) {\n      printf(\"        \");\n    }\n    else {\n      printf(\"                \");\n    }\n  }\n  else {\n    if (*(long *)(plVar4[2] + 0x38) \u003d\u003d 0) goto LAB_00103a02;\nLAB_001039fb:\n    FUN_001054d0();\n  }\n  lVar7 \u003d plVar4[2];\n  if ((lVar7 !\u003d 0) || (lVar7 \u003d plVar4[3], lVar7 !\u003d 0)) {\n    printf(\"|     |%s\",**(undefined8 **)(lVar7 + 0x20));\n    return;\n  }\nLAB_00103a54:\n  printf(\"|     |\");\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001053c0",
        "FUN_001064b0",
        "FUN_00103729",
        "FUN_0010651a",
        "FUN_001035a2"
      ],
      "called": [
        "FUN_0010370a",
        "printf"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "entry": {
      "entrypoint": "0x00105500",
      "current_name": "entry",
      "code": "\nvoid processEntry entry(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined auStack_8 [8];\n  \n  __libc_start_main(FUN_001055f0,param_2,\u0026stack0x00000008,0,0,param_1,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "__libc_start_main",
        "FUN_001055f0"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00105530": {
      "entrypoint": "0x00105530",
      "current_name": "FUN_00105530",
      "code": "\n/* WARNING: Removing unreachable block (ram,0x00105543) */\n/* WARNING: Removing unreachable block (ram,0x0010554f) */\n\nvoid FUN_00105530(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "_FINI_0"
      ],
      "called": [
        "_ITM_deregisterTMCloneTable"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00105560": {
      "entrypoint": "0x00105560",
      "current_name": "FUN_00105560",
      "code": "\n/* WARNING: Removing unreachable block (ram,0x00105584) */\n/* WARNING: Removing unreachable block (ram,0x00105590) */\n\nvoid FUN_00105560(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "_INIT_0"
      ],
      "called": [
        "_ITM_registerTMCloneTable"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "_FINI_0": {
      "entrypoint": "0x001055a0",
      "current_name": "_FINI_0",
      "code": "\nvoid _FINI_0(void)\n\n{\n  if (DAT_0010b720 !\u003d \u0027\\0\u0027) {\n    return;\n  }\n  __cxa_finalize(PTR_LOOP_0010b228);\n  FUN_00105530();\n  DAT_0010b720 \u003d 1;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "FUN_00105530",
        "__cxa_finalize"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "_INIT_0": {
      "entrypoint": "0x001055e0",
      "current_name": "_INIT_0",
      "code": "\nvoid _INIT_0(void)\n\n{\n  FUN_00105560();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "FUN_00105560"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_001055f0": {
      "entrypoint": "0x001055f0",
      "current_name": "FUN_001055f0",
      "code": "\n\n\nundefined ** FUN_001055f0(int param_1,long *param_2)\n\n{\n  byte *pbVar1;\n  byte bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  char cVar6;\n  byte bVar7;\n  char cVar8;\n  char cVar9;\n  int iVar10;\n  uint uVar11;\n  int iVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  FILE *__stream;\n  byte *__s;\n  int *piVar15;\n  size_t sVar16;\n  byte *__ptr;\n  long *__src;\n  long lVar17;\n  long *plVar18;\n  long *plVar19;\n  undefined8 uVar20;\n  undefined8 uVar21;\n  char *pcVar22;\n  byte *pbVar23;\n  undefined **unaff_RBP;\n  long lVar24;\n  byte *pbVar25;\n  char *pcVar26;\n  int *unaff_R12;\n  int *piVar27;\n  int local_110;\n  int local_10c;\n  size_t local_108;\n  stat local_c8;\n  \n  setlocale(5,\"\");\n  setlocale(0,\"\");\n  pcVar22 \u003d \"binutils\";\n  setlocale(3,\"\");\n  bindtextdomain(\"binutils\",\"/usr/share/locale\");\n  textdomain(\"binutils\");\n  DAT_0010b820 \u003d *param_2;\n  xmalloc_set_program_name();\n  bfd_set_error_program_name(DAT_0010b820);\n  bfd_plugin_set_program_name(DAT_0010b820);\n  plVar18 \u003d param_2;\n  if (1 \u003c param_1) {\n    local_10c \u003d 2000;\n    unaff_R12 \u003d (int *)0x1;\n    local_110 \u003d 0;\n    do {\n      iVar12 \u003d (int)unaff_R12;\n      unaff_RBP \u003d (undefined **)(long)iVar12;\n      piVar27 \u003d (int *)((long)unaff_RBP * 8);\n      if (*(char *)plVar18[(long)unaff_RBP] !\u003d \u0027@\u0027) goto LAB_00105a70;\n      local_10c \u003d local_10c + -1;\n      if (local_10c \u003d\u003d 0) {\n        lVar24 \u003d *plVar18;\n        pcVar26 \u003d \"%s: error: too many @-files encountered\\n\";\n        goto LAB_00105f1d;\n      }\n      pcVar22 \u003d (char *)plVar18[(long)unaff_RBP] + 1;\n      iVar10 \u003d stat(pcVar22,\u0026local_c8);\n      if (iVar10 \u003c 0) {\nLAB_00105a70:\n        if (param_1 \u003c\u003d iVar12 + 1) break;\nLAB_00105a7a:\n        uVar11 \u003d iVar12 + 1;\n        local_110 \u003d iVar12;\n      }\n      else {\n        if ((local_c8.st_mode \u0026 0xf000) \u003d\u003d 0x4000) goto LAB_00105f13;\n        __stream \u003d fopen(pcVar22,\"r\");\n        if (__stream \u003d\u003d (FILE *)0x0) goto LAB_00105a70;\n        iVar10 \u003d fseek(__stream,0,2);\n        if (((iVar10 \u003d\u003d -1) ||\n            (pcVar22 \u003d (char *)ftell(__stream), (int *)pcVar22 \u003d\u003d (int *)0xffffffffffffffff)) ||\n           (iVar10 \u003d fseek(__stream,0,0), iVar10 \u003d\u003d -1)) {\nLAB_00105ad0:\n          fclose(__stream);\n          if (iVar12 + 1 \u003c param_1) goto LAB_00105a7a;\n          break;\n        }\n        __s \u003d (byte *)xmalloc((char *)((long)pcVar22 + 1));\n        piVar15 \u003d (int *)fread(__s,1,(size_t)pcVar22,__stream);\n        if (((int *)pcVar22 !\u003d piVar15) \u0026\u0026 (iVar10 \u003d ferror(__stream), iVar10 !\u003d 0)) {\n          free(__s);\n          goto LAB_00105ad0;\n        }\n        __s[(long)piVar15] \u003d 0;\n        bVar7 \u003d *__s;\n        pbVar23 \u003d __s;\n        if (bVar7 !\u003d 0) {\nLAB_001057d0:\n          if (((\u0026_sch_istable)[(ulong)bVar7 * 2] \u0026 0x40) !\u003d 0) goto LAB_001057c0;\n          sVar16 \u003d strlen((char *)__s);\n          __ptr \u003d (byte *)xmalloc(sVar16 + 1);\n          iVar10 \u003d 0;\n          bVar5 \u003d false;\n          bVar3 \u003d false;\n          lVar24 \u003d 0;\n          __src \u003d (long *)0x0;\n          bVar4 \u003d false;\n          pbVar23 \u003d __s;\n          do {\n            while (((\u0026_sch_istable)[(ulong)*pbVar23 * 2] \u0026 0x40) !\u003d 0) {\n              pbVar23 \u003d pbVar23 + 1;\n            }\n            if ((iVar10 \u003d\u003d 0) || (plVar19 \u003d __src + lVar24, iVar10 + -1 \u003c\u003d (int)lVar24)) {\n              if (__src \u003d\u003d (long *)0x0) {\n                iVar10 \u003d 8;\n                __src \u003d (long *)xmalloc(0x40);\n                plVar19 \u003d __src + lVar24;\n                *plVar19 \u003d 0;\n              }\n              else {\n                iVar10 \u003d iVar10 * 2;\n                __src \u003d (long *)xrealloc(__src,(long)iVar10 \u003c\u003c 3);\n                plVar19 \u003d __src + lVar24;\n                *plVar19 \u003d 0;\n              }\n            }\n            bVar7 \u003d *pbVar23;\n            pbVar25 \u003d __ptr;\n            while (bVar7 !\u003d 0) {\n              while( true ) {\n                if ((((\u0026_sch_istable)[(ulong)bVar7 * 2] \u0026 0x40) !\u003d 0) \u0026\u0026\n                   (!(bool)(bVar5 | bVar4 | bVar3))) {\n                  bVar4 \u003d false;\n                  bVar5 \u003d false;\n                  bVar3 \u003d false;\n                  goto LAB_001058e0;\n                }\n                if (!bVar4) break;\n                pbVar23 \u003d pbVar23 + 1;\n                *pbVar25 \u003d bVar7;\n                pbVar25 \u003d pbVar25 + 1;\n                bVar4 \u003d false;\n                bVar7 \u003d *pbVar23;\n                if (bVar7 \u003d\u003d 0) goto LAB_001058e0;\n              }\n              if (bVar7 \u003d\u003d 0x5c) {\n                bVar4 \u003d true;\n              }\n              else if (bVar3) {\n                if (bVar7 \u003d\u003d 0x27) {\n                  bVar3 \u003d false;\n                }\n                else {\nLAB_00105a55:\n                  *pbVar25 \u003d bVar7;\n                  pbVar25 \u003d pbVar25 + 1;\n                }\n              }\n              else if (bVar5) {\n                if (bVar7 !\u003d 0x22) goto LAB_00105a55;\n                bVar5 \u003d false;\n              }\n              else if (bVar7 \u003d\u003d 0x27) {\n                bVar3 \u003d true;\n              }\n              else {\n                if (bVar7 !\u003d 0x22) goto LAB_00105a55;\n                bVar5 \u003d true;\n              }\n              pbVar1 \u003d pbVar23 + 1;\n              pbVar23 \u003d pbVar23 + 1;\n              bVar7 \u003d *pbVar1;\n            }\nLAB_001058e0:\n            *pbVar25 \u003d 0;\n            lVar17 \u003d xstrdup(__ptr);\n            *plVar19 \u003d lVar17;\n            __src[lVar24 + 1] \u003d 0;\n            bVar7 \u003d *pbVar23;\n            bVar2 \u003d (\u0026_sch_istable)[(ulong)bVar7 * 2];\n            while ((bVar2 \u0026 0x40) !\u003d 0) {\n              bVar7 \u003d pbVar23[1];\n              pbVar23 \u003d pbVar23 + 1;\n              bVar2 \u003d (\u0026_sch_istable)[(ulong)bVar7 * 2];\n            }\n            lVar24 \u003d lVar24 + 1;\n          } while (bVar7 !\u003d 0);\n          free(__ptr);\n          plVar19 \u003d plVar18;\n          if (param_2 \u003d\u003d plVar18) goto LAB_00105c79;\n          goto LAB_0010597d;\n        }\nLAB_00105c5c:\n        __src \u003d (long *)xmalloc(8);\n        *__src \u003d 0;\n        if (param_2 \u003d\u003d plVar18) {\nLAB_00105c79:\n          if (*plVar18 \u003d\u003d 0) {\n            iVar10 \u003d 0;\n          }\n          else {\n            lVar24 \u003d 1;\n            do {\n              iVar10 \u003d (int)lVar24;\n              plVar19 \u003d plVar18 + lVar24;\n              lVar24 \u003d lVar24 + 1;\n            } while (*plVar19 !\u003d 0);\n          }\n          lVar17 \u003d 0;\n          plVar19 \u003d (long *)xmalloc((long)(iVar10 + 1) \u003c\u003c 3);\n          lVar24 \u003d *plVar18;\n          while (lVar24 !\u003d 0) {\n            uVar20 \u003d xstrdup();\n            *(undefined8 *)((long)plVar19 + lVar17) \u003d uVar20;\n            lVar17 \u003d lVar17 + 8;\n            lVar24 \u003d *(long *)((long)plVar18 + lVar17);\n          }\n          *(undefined8 *)((long)plVar19 + lVar17) \u003d 0;\nLAB_0010597d:\n          plVar18 \u003d plVar19;\n          if (*__src \u003d\u003d 0) goto LAB_00105d50;\n          pcVar22 \u003d (char *)0x0;\n          do {\n            pcVar22 \u003d (char *)((long)pcVar22 + 1);\n          } while (__src[(long)pcVar22] !\u003d 0);\n          local_108 \u003d (long)pcVar22 * 8;\n        }\n        else {\nLAB_00105d50:\n          pcVar22 \u003d (char *)0x0;\n          local_108 \u003d 0;\n        }\n        free((void *)plVar18[(long)unaff_RBP]);\n        plVar18 \u003d (long *)xrealloc(plVar18,(long)((long)pcVar22 + (long)param_1 + 1) * 8);\n        iVar10 \u003d param_1 + -1 + (int)pcVar22;\n        memmove(plVar18 + (long)(undefined **)((long)unaff_RBP + (long)pcVar22),\n                plVar18 + 1 + (long)unaff_RBP,(long)(param_1 - iVar12) \u003c\u003c 3);\n        memcpy(plVar18 + (long)unaff_RBP,__src,local_108);\n        free(__src);\n        free(__s);\n        fclose(__stream);\n        uVar11 \u003d local_110 + 1;\n        unaff_RBP \u003d (undefined **)((long)unaff_RBP + (long)pcVar22);\n        unaff_R12 \u003d piVar27;\n        param_1 \u003d iVar10;\n        if (iVar10 \u003c\u003d (int)uVar11) break;\n      }\n      unaff_R12 \u003d (int *)(ulong)uVar11;\n    } while( true );\n  }\n  iVar12 \u003d bfd_init();\n  pcVar26 \u003d \"fatal error: libbfd ABI mismatch\";\n  if (iVar12 !\u003d 0x118) goto LAB_00106085;\n  unaff_RBP \u003d \u0026PTR_s_debug_syms_0010b280;\n  cVar8 \u003d bfd_set_default_target(\"x86_64-pc-linux-gnu\",\"fatal error: libbfd ABI mismatch\",5);\n  pcVar22 \u003d \"aABCDef:gHhjJlnopPrSst:uU:vVvWX:\";\n  unaff_R12 \u003d (int *)\"x86_64-pc-linux-gnu\";\n  cVar9 \u003d DAT_0010b23b;\n  cVar6 \u003d DAT_0010b240;\n  uVar14 \u003d DAT_0010b244;\n  if (cVar8 !\u003d \u0027\\0\u0027) {\nswitchD_00105c5a_caseD_0:\n    DAT_0010b244 \u003d uVar14;\n    DAT_0010b240 \u003d cVar6;\n    DAT_0010b23b \u003d cVar9;\n    uVar13 \u003d getopt_long(param_1,plVar18,pcVar22);\n    piVar27 \u003d _optarg;\n    piVar15 \u003d (int *)pcVar22;\n    cVar9 \u003d DAT_0010b23b;\n    cVar6 \u003d DAT_0010b240;\n    uVar14 \u003d DAT_0010b244;\n    switch(uVar13) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n    case 0x12:\n    case 0x13:\n    case 0x14:\n    case 0x15:\n    case 0x16:\n    case 0x17:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n    case 0x28:\n    case 0x29:\n    case 0x2a:\n    case 0x2b:\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x40:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x51:\n    case 0x52:\n    case 0x54:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n    case 0x5f:\n    case 0x60:\n    case 0x62:\n    case 99:\n    case 100:\n    case 0x69:\n    case 0x6b:\n    case 0x6d:\n    case 0x71:\n    case 0x77:\n    case 0x78:\n    case 0x79:\n    case 0x7a:\n    case 0x7b:\n    case 0x7c:\n    case 0x7d:\n    case 0x7e:\n    case 0x7f:\n    case 0x80:\n    case 0x81:\n    case 0x82:\n    case 0x83:\n    case 0x84:\n    case 0x85:\n    case 0x86:\n    case 0x87:\n    case 0x88:\n    case 0x89:\n    case 0x8a:\n    case 0x8b:\n    case 0x8c:\n    case 0x8d:\n    case 0x8e:\n    case 0x8f:\n    case 0x90:\n    case 0x91:\n    case 0x92:\n    case 0x93:\n    case 0x94:\n    case 0x95:\n    case 0x96:\n    case 0x97:\n    case 0x98:\n    case 0x99:\n    case 0x9a:\n    case 0x9b:\n    case 0x9c:\n    case 0x9d:\n    case 0x9e:\n    case 0x9f:\n    case 0xa0:\n    case 0xa1:\n    case 0xa2:\n    case 0xa3:\n    case 0xa4:\n    case 0xa5:\n    case 0xa6:\n    case 0xa7:\n    case 0xa8:\n    case 0xa9:\n    case 0xaa:\n    case 0xab:\n    case 0xac:\n    case 0xad:\n    case 0xae:\n    case 0xaf:\n    case 0xb0:\n    case 0xb1:\n    case 0xb2:\n    case 0xb3:\n    case 0xb4:\n    case 0xb5:\n    case 0xb6:\n    case 0xb7:\n    case 0xb8:\n    case 0xb9:\n    case 0xba:\n    case 0xbb:\n    case 0xbc:\n    case 0xbd:\n    case 0xbe:\n    case 0xbf:\n    case 0xc0:\n    case 0xc1:\n    case 0xc2:\n    case 0xc3:\n    case 0xc4:\n    case 0xc5:\n    case 0xc6:\n    case 199:\n      FUN_00103ca0(_stderr,1);\n      piVar27 \u003d unaff_R12;\nLAB_001061d5:\n      iVar12 \u003d strcmp((char *)piVar27,\"l\");\n      if (iVar12 \u003d\u003d 0) goto LAB_001061a3;\n      iVar12 \u003d strcmp((char *)piVar27,\"escape\");\n      unaff_R12 \u003d piVar27;\n      if ((iVar12 \u003d\u003d 0) || (iVar12 \u003d strcmp((char *)piVar27,\"e\"), iVar12 \u003d\u003d 0)) {\n        DAT_0010b7e0 \u003d 2;\n        cVar9 \u003d DAT_0010b23b;\n        cVar6 \u003d DAT_0010b240;\n        uVar14 \u003d DAT_0010b244;\n        goto switchD_00105c5a_caseD_0;\n      }\n      iVar12 \u003d strcmp((char *)piVar27,\"invalid\");\n      if ((iVar12 \u003d\u003d 0) || (iVar12 \u003d strcmp((char *)piVar27,\"i\"), iVar12 \u003d\u003d 0)) {\n        DAT_0010b7e0 \u003d 5;\n        cVar9 \u003d DAT_0010b23b;\n        cVar6 \u003d DAT_0010b240;\n        uVar14 \u003d DAT_0010b244;\n        goto switchD_00105c5a_caseD_0;\n      }\n      iVar12 \u003d strcmp((char *)piVar27,\"hex\");\n      if ((iVar12 \u003d\u003d 0) || (iVar12 \u003d strcmp((char *)piVar27,\"x\"), iVar12 \u003d\u003d 0)) {\n        DAT_0010b7e0 \u003d 3;\n        cVar9 \u003d DAT_0010b23b;\n        cVar6 \u003d DAT_0010b240;\n        uVar14 \u003d DAT_0010b244;\n        goto switchD_00105c5a_caseD_0;\n      }\n      iVar12 \u003d strcmp((char *)piVar27,\"highlight\");\n      if ((iVar12 \u003d\u003d 0) || (iVar12 \u003d strcmp((char *)piVar27,\"h\"), iVar12 \u003d\u003d 0)) {\n        DAT_0010b7e0 \u003d 4;\n        cVar9 \u003d DAT_0010b23b;\n        cVar6 \u003d DAT_0010b240;\n        uVar14 \u003d DAT_0010b244;\n        goto switchD_00105c5a_caseD_0;\n      }\n      pcVar26 \u003d \"invalid argument to -U/--unicode: %s\";\n      break;\n    case 0x41:\n    case 0x6f:\n      DAT_0010b818 \u003d 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x42:\n      FUN_00104370(\u0026DAT_00107033);\n      cVar9 \u003d DAT_0010b23b;\n      cVar6 \u003d DAT_0010b240;\n      uVar14 \u003d DAT_0010b244;\n      goto switchD_00105c5a_caseD_0;\n    case 0x43:\n      goto switchD_00105c5a_caseD_43;\n    case 0x44:\n      DAT_0010b80c \u003d 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x48:\n    case 0x68:\n      FUN_00103ca0(_stdout,0);\nswitchD_00105c5a_caseD_43:\n      unaff_R12 \u003d (int *)\u0026optarg;\n      DAT_0010b814 \u003d 1;\n      cVar9 \u003d DAT_0010b23b;\n      cVar6 \u003d DAT_0010b240;\n      uVar14 \u003d DAT_0010b244;\n      if (_optarg !\u003d (int *)0x0) {\n        iVar12 \u003d cplus_demangle_name_to_style();\n        piVar15 \u003d _optarg;\n        if (iVar12 \u003d\u003d 0) {\n          uVar20 \u003d dcgettext(0,\"unknown demangling style `%s\\\u0027\",5);\n          FUN_00106300(uVar20,piVar15);\nswitchD_00105c5a_caseD_cc:\n          DAT_0010b248 \u003d DAT_0010b248 | 0x40000;\n          pcVar22 \u003d (char *)piVar15;\n          cVar9 \u003d DAT_0010b23b;\n          cVar6 \u003d DAT_0010b240;\n          uVar14 \u003d DAT_0010b244;\n        }\n        else {\n          cplus_demangle_set_style();\n          cVar9 \u003d DAT_0010b23b;\n          cVar6 \u003d DAT_0010b240;\n          uVar14 \u003d DAT_0010b244;\n        }\n      }\n      goto switchD_00105c5a_caseD_0;\n    case 0x50:\n      FUN_00104370(\"posix\");\n      cVar9 \u003d DAT_0010b23b;\n      cVar6 \u003d DAT_0010b240;\n      uVar14 \u003d DAT_0010b244;\n      goto switchD_00105c5a_caseD_0;\n    case 0x53:\n      DAT_0010b7ec \u003d 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x55:\n      DAT_0010b7e4 \u003d 1;\n      DAT_0010b7e8 \u003d 0;\n      goto switchD_00105c5a_caseD_0;\n    case 0x56:\n      goto switchD_00105c5a_caseD_56;\n    case 0x57:\n      DAT_0010b7d8 \u003d 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x58:\n      iVar12 \u003d strcmp((char *)_optarg,\"32_64\");\n      cVar9 \u003d DAT_0010b23b;\n      cVar6 \u003d DAT_0010b240;\n      uVar14 \u003d DAT_0010b244;\n      if (iVar12 !\u003d 0) {\n        pcVar26 \u003d \"Only -X 32_64 is supported\";\nLAB_00106085:\n        uVar20 \u003d dcgettext(0,pcVar26,5);\n        FUN_00106300(uVar20);\nswitchD_00105c5a_caseD_56:\n        DAT_0010b7dc \u003d 1;\n        cVar9 \u003d DAT_0010b23b;\n        cVar6 \u003d DAT_0010b240;\n        uVar14 \u003d DAT_0010b244;\n      }\n      goto switchD_00105c5a_caseD_0;\n    case 0x61:\n      DAT_0010b81c \u003d 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x66:\n      FUN_00104370(_optarg);\n      cVar9 \u003d DAT_0010b23b;\n      cVar6 \u003d DAT_0010b240;\n      uVar14 \u003d DAT_0010b244;\n      goto switchD_00105c5a_caseD_0;\n    case 0x67:\n      DAT_0010b808 \u003d 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x6a:\n      FUN_00104370(\"just-symbols\");\n      cVar9 \u003d DAT_0010b23b;\n      cVar6 \u003d DAT_0010b240;\n      uVar14 \u003d DAT_0010b244;\n      goto switchD_00105c5a_caseD_0;\n    case 0x6c:\n      DAT_0010b804 \u003d 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x6e:\n    case 0x76:\n      DAT_0010b7fc \u003d 1;\n      DAT_0010b800 \u003d 0;\n      DAT_0010b7f8 \u003d 0;\n      goto switchD_00105c5a_caseD_0;\n    case 0x70:\n      DAT_0010b800 \u003d 1;\n      DAT_0010b7fc \u003d 0;\n      DAT_0010b7f8 \u003d 0;\n      goto switchD_00105c5a_caseD_0;\n    case 0x72:\n      DAT_0010b7f4 \u003d 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x73:\n      _DAT_0010b7f0 \u003d 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x74:\n      cVar9 \u003d *(char *)_optarg;\n      unaff_R12 \u003d piVar27;\n      cVar6 \u003d cVar9;\n      uVar14 \u003d 10;\n      if (cVar9 \u003d\u003d \u0027d\u0027) goto switchD_00105c5a_caseD_0;\n      if (\u0027c\u0027 \u003c cVar9) {\n        if (cVar9 \u003d\u003d \u0027o\u0027) {\n          uVar14 \u003d 8;\n          goto switchD_00105c5a_caseD_0;\n        }\n        if (cVar9 \u003d\u003d \u0027x\u0027) {\n          uVar14 \u003d 0x10;\n          goto switchD_00105c5a_caseD_0;\n        }\n      }\n      pcVar26 \u003d \"%s: invalid radix\";\n      break;\n    case 0x75:\n      DAT_0010b7e8 \u003d 1;\n      DAT_0010b7e4 \u003d 0;\n      goto switchD_00105c5a_caseD_0;\n    case 200:\n      DAT_0010b7d0 \u003d _optarg;\n      goto switchD_00105c5a_caseD_0;\n    case 0xc9:\n      bfd_plugin_set_plugin(_optarg);\n      cVar9 \u003d DAT_0010b23b;\n      cVar6 \u003d DAT_0010b240;\n      uVar14 \u003d DAT_0010b244;\n      goto switchD_00105c5a_caseD_0;\n    case 0xca:\n      DAT_0010b7f8 \u003d 1;\n      DAT_0010b800 \u003d 0;\n      DAT_0010b7fc \u003d 0;\n      goto switchD_00105c5a_caseD_0;\n    case 0xcb:\n      DAT_0010b248 \u003d DAT_0010b248 \u0026 0xfffbffff;\n      goto switchD_00105c5a_caseD_0;\n    case 0xcc:\n      goto switchD_00105c5a_caseD_cc;\n    case 0xcd:\n      DAT_0010b7c8 \u003d _optarg;\n      goto switchD_00105c5a_caseD_0;\n    case 0xce:\n      iVar12 \u003d strcmp((char *)_optarg,\"default\");\n      if ((iVar12 \u003d\u003d 0) || (iVar12 \u003d strcmp((char *)piVar27,\"d\"), iVar12 \u003d\u003d 0)) {\n        DAT_0010b7e0 \u003d 0;\n        unaff_R12 \u003d piVar27;\n        cVar9 \u003d DAT_0010b23b;\n        cVar6 \u003d DAT_0010b240;\n        uVar14 \u003d DAT_0010b244;\n      }\n      else {\n        iVar12 \u003d strcmp((char *)piVar27,\"locale\");\n        if (iVar12 !\u003d 0) goto LAB_001061d5;\nLAB_001061a3:\n        DAT_0010b7e0 \u003d 1;\n        unaff_R12 \u003d piVar27;\n        cVar9 \u003d DAT_0010b23b;\n        cVar6 \u003d DAT_0010b240;\n        uVar14 \u003d DAT_0010b244;\n      }\n      goto switchD_00105c5a_caseD_0;\n    case 0xcf:\n      goto switchD_00105c5a_caseD_cf;\n    default:\n      goto code_r0x00105b40;\n    }\n    uVar20 \u003d dcgettext(0,pcVar26,5);\n    FUN_00106300(uVar20,piVar27);\nLAB_00105f13:\n    lVar24 \u003d *plVar18;\n    pcVar26 \u003d \"%s: error: @-file refers to a directory\\n\";\nLAB_00105f1d:\n    fprintf(_stderr,pcVar26,lVar24);\n    xexit(1);\n    goto LAB_00105f38;\n  }\n  uVar14 \u003d bfd_get_error();\n  uVar20 \u003d bfd_errmsg(uVar14);\n  uVar21 \u003d dcgettext(0,\"can\\\u0027t set BFD default target to `%s\\\u0027: %s\",5);\n  FUN_00106300(uVar21,\"x86_64-pc-linux-gnu\",uVar20);\n  goto LAB_0010613c;\nLAB_001057c0:\n  bVar7 \u003d pbVar23[1];\n  pbVar23 \u003d pbVar23 + 1;\n  if (bVar7 \u003d\u003d 0) goto LAB_00105c5c;\n  goto LAB_001057d0;\nswitchD_00105c5a_caseD_cf:\n  _DAT_0010b810 \u003d 1;\n  goto switchD_00105c5a_caseD_0;\ncode_r0x00105b40:\n  unaff_RBP \u003d (undefined **)(ulong)DAT_0010b7dc;\n  if (DAT_0010b7dc !\u003d 0) {\n    printf(\"GNU %s %s\\n\",\u0026DAT_001070c6,\"(GNU Binutils for Debian) 2.40\");\n    pcVar22 \u003d (char *)dcgettext(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n    printf(pcVar22);\n    pcVar22 \u003d (char *)dcgettext(0,\n                                \"This program is free software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                                ,5);\n    printf(pcVar22);\n                    \n    exit(0);\n  }\n  if ((DAT_0010b7f8 !\u003d 0) \u0026\u0026 (DAT_0010b7e8 !\u003d 0)) {\n    uVar20 \u003d dcgettext(0,\"Using the --size-sort and --undefined-only options together\",5);\n    FUN_00106400(uVar20);\n    uVar20 \u003d dcgettext(0,\"will produce no output, since undefined symbols have no size.\",5);\n    FUN_00106400(uVar20);\n    return unaff_RBP;\n  }\n  pcVar22 \u003d \u0026optind;\n  if (_optind !\u003d param_1) {\n    if (1 \u003c param_1 - _optind) {\nLAB_00105f38:\n      _DAT_0010b7c4 \u003d 1;\n    }\n    while( true ) {\n      iVar12 \u003d *(int *)pcVar22;\n      if (param_1 \u003c\u003d iVar12) break;\n      lVar24 \u003d plVar18[iVar12];\n      *(int *)pcVar22 \u003d iVar12 + 1;\n      cVar9 \u003d FUN_001043d0(lVar24);\n      if (cVar9 !\u003d \u0027\\0\u0027) {\n        iVar12 \u003d *(int *)pcVar22;\n        if (param_1 \u003c\u003d iVar12) break;\n        lVar24 \u003d plVar18[iVar12];\n        *(int *)pcVar22 \u003d iVar12 + 1;\n        cVar9 \u003d FUN_001043d0(lVar24);\n        if (cVar9 !\u003d \u0027\\0\u0027) {\n          iVar12 \u003d *(int *)pcVar22;\n          while( true ) {\n            if (param_1 \u003c\u003d iVar12) goto LAB_00105bdd;\n            lVar24 \u003d plVar18[iVar12];\n            *(int *)pcVar22 \u003d iVar12 + 1;\n            cVar9 \u003d FUN_001043d0(lVar24);\n            if (cVar9 \u003d\u003d \u0027\\0\u0027) break;\n            iVar12 \u003d *(int *)pcVar22;\n          }\n        }\n      }\n      unaff_RBP \u003d (undefined **)(ulong)((int)unaff_RBP + 1);\n    }\nLAB_00105bdd:\n                    \n    exit((int)unaff_RBP);\n  }\nLAB_0010613c:\n  uVar11 \u003d FUN_001043d0(\"a.out\");\n  return (undefined **)(ulong)((uVar11 ^ 1) \u0026 0xff);\n}\n\n",
      "renaming": {},
      "calling": [
        "entry"
      ],
      "called": [
        "FUN_00104370",
        "bfd_set_error_program_name",
        "dcgettext",
        "fprintf",
        "memmove",
        "bfd_errmsg",
        "exit",
        "xmalloc_set_program_name",
        "free",
        "FUN_00106300",
        "xstrdup",
        "cplus_demangle_set_style",
        "setlocale",
        "bfd_set_default_target",
        "printf",
        "fclose",
        "bindtextdomain",
        "stat",
        "getopt_long",
        "bfd_get_error",
        "xmalloc",
        "memcpy",
        "fread",
        "bfd_init",
        "ftell",
        "cplus_demangle_name_to_style",
        "bfd_plugin_set_program_name",
        "strlen",
        "bfd_plugin_set_plugin",
        "ferror",
        "textdomain",
        "fopen",
        "FUN_00106400",
        "xexit",
        "strcmp",
        "fseek",
        "FUN_00103ca0",
        "FUN_001043d0",
        "xrealloc"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_001062d0": {
      "entrypoint": "0x001062d0",
      "current_name": "FUN_001062d0",
      "code": "\n\n\nvoid FUN_001062d0(undefined8 param_1)\n\n{\n  if ((_DAT_0010b7c4 !\u003d 0) \u0026\u0026 (DAT_0010b818 \u003d\u003d 0)) {\n    printf(\"\\n%s:\\n\",param_1);\n    return;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001043d0"
      ],
      "called": [
        "printf"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00106300": {
      "entrypoint": "0x00106300",
      "current_name": "FUN_00106300",
      "code": "\n\n\nvoid FUN_00106300(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined8 param_9,undefined8 param_10,undefined8 param_11,undefined8 param_12,\n                 undefined8 param_13,undefined8 param_14)\n\n{\n  char in_AL;\n  undefined4 *__arg;\n  char *__format;\n  undefined4 local_d8;\n  undefined4 local_d4;\n  undefined *local_d0;\n  undefined *local_c8;\n  undefined local_b8 [8];\n  undefined8 local_b0;\n  undefined8 local_a8;\n  undefined8 local_a0;\n  undefined8 local_98;\n  undefined8 local_90;\n  undefined4 local_88;\n  undefined4 local_78;\n  undefined4 local_68;\n  undefined4 local_58;\n  undefined4 local_48;\n  undefined4 local_38;\n  undefined4 local_28;\n  undefined4 local_18;\n  \n  __arg \u003d \u0026local_d8;\n  if (in_AL !\u003d \u0027\\0\u0027) {\n    local_88 \u003d param_1;\n    local_78 \u003d param_2;\n    local_68 \u003d param_3;\n    local_58 \u003d param_4;\n    local_48 \u003d param_5;\n    local_38 \u003d param_6;\n    local_28 \u003d param_7;\n    local_18 \u003d param_8;\n  }\n  local_d0 \u003d \u0026stack0x00000008;\n  local_d8 \u003d 8;\n  local_c8 \u003d local_b8;\n  local_d4 \u003d 0x30;\n  local_b0 \u003d param_10;\n  local_a8 \u003d param_11;\n  local_a0 \u003d param_12;\n  local_98 \u003d param_13;\n  local_90 \u003d param_14;\n  FUN_001063a0();\n  __format \u003d (char *)0x1;\n  xexit();\n  fflush(_stdout);\n  fprintf(_stderr,\"%s: \",DAT_0010b820);\n  vfprintf(_stderr,__format,__arg);\n  putc(10,_stderr);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001053c0",
        "FUN_0010370a",
        "FUN_00104370",
        "FUN_00103729",
        "FUN_001055f0"
      ],
      "called": [
        "xexit",
        "FUN_001063a0"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_001063a0": {
      "entrypoint": "0x001063a0",
      "current_name": "FUN_001063a0",
      "code": "\n\n\nvoid FUN_001063a0(char *param_1,__gnuc_va_list param_2)\n\n{\n  fflush(_stdout);\n  fprintf(_stderr,\"%s: \",DAT_0010b820);\n  vfprintf(_stderr,param_1,param_2);\n  putc(10,_stderr);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00106300",
        "FUN_00106400"
      ],
      "called": [
        "putc",
        "fprintf",
        "fflush",
        "vfprintf"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00106400": {
      "entrypoint": "0x00106400",
      "current_name": "FUN_00106400",
      "code": "\nvoid FUN_00106400(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined8 param_9,undefined8 param_10,undefined8 param_11,undefined8 param_12,\n                 undefined8 param_13,undefined8 param_14)\n\n{\n  char in_AL;\n  undefined4 local_d8;\n  undefined4 local_d4;\n  undefined *local_d0;\n  undefined *local_c8;\n  undefined local_b8 [8];\n  undefined8 local_b0;\n  undefined8 local_a8;\n  undefined8 local_a0;\n  undefined8 local_98;\n  undefined8 local_90;\n  undefined4 local_88;\n  undefined4 local_78;\n  undefined4 local_68;\n  undefined4 local_58;\n  undefined4 local_48;\n  undefined4 local_38;\n  undefined4 local_28;\n  undefined4 local_18;\n  \n  if (in_AL !\u003d \u0027\\0\u0027) {\n    local_88 \u003d param_1;\n    local_78 \u003d param_2;\n    local_68 \u003d param_3;\n    local_58 \u003d param_4;\n    local_48 \u003d param_5;\n    local_38 \u003d param_6;\n    local_28 \u003d param_7;\n    local_18 \u003d param_8;\n  }\n  local_d0 \u003d \u0026stack0x00000008;\n  local_d8 \u003d 8;\n  local_c8 \u003d local_b8;\n  local_d4 \u003d 0x30;\n  local_b0 \u003d param_10;\n  local_a8 \u003d param_11;\n  local_a0 \u003d param_12;\n  local_98 \u003d param_13;\n  local_90 \u003d param_14;\n  FUN_001063a0(param_9,\u0026local_d8);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_001048e0",
        "FUN_00104d5b",
        "FUN_001043d0",
        "FUN_0010249f",
        "FUN_001055f0"
      ],
      "called": [
        "FUN_001063a0"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_001064a0": {
      "entrypoint": "0x001064a0",
      "current_name": "FUN_001064a0",
      "code": "\nvoid FUN_001064a0(undefined8 *param_1,undefined8 *param_2)\n\n{\n  if (DAT_0010b818 \u003d\u003d 0) {\n    return;\n  }\n  if (param_1 !\u003d (undefined8 *)0x0) {\n    printf(\"%s[%s]: \",*param_1);\n    return;\n  }\n  printf(\"%s: \",*param_2);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "FUN_001036e0"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_001064b0": {
      "entrypoint": "0x001064b0",
      "current_name": "FUN_001064b0",
      "code": "\nvoid FUN_001064b0(long *param_1,undefined8 param_2)\n\n{\n  char cVar1;\n  \n  FUN_00104740(\u0026DAT_00107363,param_1,0,param_2);\n  printf(\"%c \",(ulong)(uint)(int)*(char *)(*param_1 + 8));\n  cVar1 \u003d bfd_is_undefined_symclass((int)*(char *)(*param_1 + 8));\n  if (cVar1 !\u003d \u0027\\0\u0027) {\n    printf(\"        \");\n    return;\n  }\n  FUN_001054d0(*(undefined8 *)*param_1);\n  putchar(0x20);\n  if (param_1[2] \u003d\u003d 0) {\n    if (param_1[1] !\u003d 0) {\n      FUN_0010651a();\n      return;\n    }\n  }\n  else if (*(long *)(param_1[2] + 0x38) !\u003d 0) {\n    FUN_001054d0();\n    return;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "FUN_00103a66",
        "putchar",
        "FUN_0010651a",
        "printf",
        "FUN_001054d0",
        "bfd_is_undefined_symclass",
        "FUN_00104740"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0010651a": {
      "entrypoint": "0x0010651a",
      "current_name": "FUN_0010651a",
      "code": "\nvoid FUN_0010651a(void)\n\n{\n  FUN_001054d0();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00103a66",
        "FUN_001064b0"
      ],
      "called": [
        "FUN_001054d0"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00106530": {
      "entrypoint": "0x00106530",
      "current_name": "FUN_00106530",
      "code": "\n\n\nvoid FUN_00106530(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  long lVar3;\n  undefined8 in_R10;\n  \n  FUN_00106540();\n  lVar3 \u003d 1;\n  xexit();\n  iVar1 \u003d bfd_get_error();\n  if (iVar1 \u003d\u003d 0) {\n    uVar2 \u003d dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    uVar2 \u003d bfd_errmsg(iVar1);\n  }\n  fflush(_stdout);\n  if (lVar3 !\u003d 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",DAT_0010b820,lVar3,uVar2,in_R10);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",DAT_0010b820,uVar2,in_R10);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00105110",
        "FUN_001048e0",
        "FUN_00104d5b",
        "FUN_00103463",
        "FUN_00102fc3",
        "FUN_00102f9f",
        "FUN_001043d0",
        "FUN_00102fd2",
        "FUN_00103c00"
      ],
      "called": [
        "FUN_00106540",
        "xexit"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_00106540": {
      "entrypoint": "0x00106540",
      "current_name": "FUN_00106540",
      "code": "\n\n\nvoid FUN_00106540(long param_1)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  undefined8 in_R10;\n  \n  iVar1 \u003d bfd_get_error();\n  if (iVar1 \u003d\u003d 0) {\n    uVar2 \u003d dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    uVar2 \u003d bfd_errmsg(iVar1);\n  }\n  fflush(_stdout);\n  if (param_1 !\u003d 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",DAT_0010b820,param_1,uVar2,in_R10);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",DAT_0010b820,uVar2,in_R10);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "FUN_00106530",
        "FUN_001043d0"
      ],
      "called": [
        "bfd_get_error",
        "fprintf",
        "fflush",
        "bfd_errmsg",
        "FUN_00103a78"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "_DT_FINI": {
      "entrypoint": "0x001065a0",
      "current_name": "_DT_FINI",
      "code": "\nvoid _DT_FINI(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    }
  },
  "layers": [],
  "locked_functions": [],
  "used_tokens": 0
}