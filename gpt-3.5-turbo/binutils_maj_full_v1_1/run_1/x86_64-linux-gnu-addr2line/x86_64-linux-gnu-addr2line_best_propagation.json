{
    "functions": {
        "FUN_00102000": {
            "additional_data": {
                "": {
                    "1": "_gmon_start_",
                    "2": ""
                },
                "<original_variable_name>": {
                    "1": "<new_variable_name>"
                },
                "DAT_XXXXX": {
                    "1": "dat_variable"
                },
                "DAT_XXXXXX": {
                    "1": "unchanged_dat_variable"
                },
                "FUN_00102000": {
                    "1": "initialize_global_monitor",
                    "13": "initialize_program",
                    "2": "initialize_monitor",
                    "4": "initialize",
                    "8": "initialize_monitoring"
                },
                "PTR_XXXXX": {
                    "1": "ptr_variable"
                },
                "PTR_XXXXXX": {
                    "1": "unchanged_ptr_variable"
                },
                "__gmon_start__": {
                    "1": "start_monitor",
                    "2": "initialize_profiler",
                    "4": "start_performance_monitoring",
                    "5": "start_monitoring"
                }
            },
            "called": [
                "FUN_00107148"
            ],
            "calling": [],
            "code": "\nvoid initialize_program_00102000(void)\n\n{\n  start_monitoring();\n  return;\n}\n\n",
            "current_name": "initialize_program_00102000",
            "entrypoint": "0x00102000",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102000": "initialize_program_00102000",
                "__gmon_start__": "start_monitoring"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102020": {
            "additional_data": {
                "*(code *)(undefined *)0x0": {
                    "1": "jump_target"
                },
                "FUN_00102020": {
                    "1": "execute_function_from_pointer",
                    "16": "execute_indirect_jump",
                    "2": "execute_function_at_address",
                    "4": "execute_function",
                    "7": "execute_indirect_call"
                },
                "PTR_FUN_00102020": {
                    "1": "indirect_jump_ptr"
                },
                "PTR_UNDEFINED": {
                    "1": "function_address"
                },
                "code": {
                    "1": "jump_function",
                    "3": "function_pointer"
                },
                "undefined": {
                    "1": "function_ptr",
                    "2": "function_pointer",
                    "4": "target_address"
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_indirect_jump_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(function_pointer *)(target_address *)0x0)();\n  return;\n}\n\n",
            "current_name": "execute_indirect_jump_00102020",
            "entrypoint": "0x00102020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102020": "execute_indirect_jump_00102020",
                "code": "function_pointer",
                "undefined": "target_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102030": {
            "called": [
                "FUN_00107000"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid cplus_demangle_name_to_style(void)\n\n{\n  cplus_demangle_name_to_style();\n  return;\n}\n\n",
            "current_name": "FUN_00102030",
            "entrypoint": "0x00102030",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102040": {
            "called": [
                "FUN_00107008"
            ],
            "calling": [
                "FUN_001027b0",
                "FUN_001023e1"
            ],
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n",
            "current_name": "FUN_00102040",
            "entrypoint": "0x00102040",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102050": {
            "called": [
                "FUN_00107010"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_scan_vma(void)\n\n{\n  bfd_scan_vma();\n  return;\n}\n\n",
            "current_name": "FUN_00102050",
            "entrypoint": "0x00102050",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102060": {
            "called": [
                "FUN_00107018"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = putchar(__c);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102060",
            "entrypoint": "0x00102060",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102070": {
            "called": [
                "FUN_00107028"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  return piVar1;\n}\n\n",
            "current_name": "FUN_00102070",
            "entrypoint": "0x00102070",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102080": {
            "called": [
                "FUN_00107040"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nint puts(char *__s)\n\n{\n  int iVar1;\n  \n  iVar1 = puts(__s);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102080",
            "entrypoint": "0x00102080",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102090": {
            "called": [
                "FUN_00107048"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102090",
            "entrypoint": "0x00102090",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020a0": {
            "called": [
                "FUN_00107050"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_set_default_target(void)\n\n{\n  bfd_set_default_target();\n  return;\n}\n\n",
            "current_name": "FUN_001020a0",
            "entrypoint": "0x001020a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020b0": {
            "called": [
                "FUN_00107058"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_001020b0",
            "entrypoint": "0x001020b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020c0": {
            "called": [
                "FUN_00107068"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid cplus_demangle_set_style(void)\n\n{\n  cplus_demangle_set_style();\n  return;\n}\n\n",
            "current_name": "FUN_001020c0",
            "entrypoint": "0x001020c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020d0": {
            "called": [
                "FUN_00107070"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n",
            "current_name": "FUN_001020d0",
            "entrypoint": "0x001020d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020e0": {
            "called": [
                "FUN_00107078"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_openr(void)\n\n{\n  bfd_openr();\n  return;\n}\n\n",
            "current_name": "FUN_001020e0",
            "entrypoint": "0x001020e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020f0": {
            "called": [
                "FUN_00107080"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001020f0",
            "entrypoint": "0x001020f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102100": {
            "called": [
                "FUN_00107090"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n",
            "current_name": "FUN_00102100",
            "entrypoint": "0x00102100",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102110": {
            "called": [
                "FUN_00107098"
            ],
            "calling": [
                "FUN_001023a0",
                "FUN_001027b0",
                "FUN_001023e1"
            ],
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n",
            "current_name": "FUN_00102110",
            "entrypoint": "0x00102110",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102120": {
            "called": [
                "FUN_001070a0"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_00102120",
            "entrypoint": "0x00102120",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102130": {
            "called": [
                "FUN_001070a8"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n",
            "current_name": "FUN_00102130",
            "entrypoint": "0x00102130",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102140": {
            "called": [
                "FUN_001070b0"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strchr(__s,__c);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_00102140",
            "entrypoint": "0x00102140",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102150": {
            "called": [
                "FUN_001070b8"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102150",
            "entrypoint": "0x00102150",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102160": {
            "called": [
                "FUN_001070c0"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n",
            "current_name": "FUN_00102160",
            "entrypoint": "0x00102160",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102170": {
            "called": [
                "FUN_001070c8"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strrchr(__s,__c);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_00102170",
            "entrypoint": "0x00102170",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102180": {
            "called": [
                "FUN_001070d8"
            ],
            "calling": [
                "FUN_001023e1"
            ],
            "code": "\nvoid bfd_target_list(void)\n\n{\n  bfd_target_list();\n  return;\n}\n\n",
            "current_name": "FUN_00102180",
            "entrypoint": "0x00102180",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102190": {
            "called": [
                "FUN_001070e0"
            ],
            "calling": [
                "FUN_001027b0",
                "FUN_00103c70"
            ],
            "code": "\nvoid bfd_get_error(void)\n\n{\n  bfd_get_error();\n  return;\n}\n\n",
            "current_name": "FUN_00102190",
            "entrypoint": "0x00102190",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021a0": {
            "called": [
                "FUN_001070e8"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n",
            "current_name": "FUN_001021a0",
            "entrypoint": "0x001021a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021b0": {
            "called": [
                "FUN_001070f0"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n",
            "current_name": "FUN_001021b0",
            "entrypoint": "0x001021b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021c0": {
            "called": [
                "FUN_001070f8"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n",
            "current_name": "FUN_001021c0",
            "entrypoint": "0x001021c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021d0": {
            "called": [
                "FUN_00107100"
            ],
            "calling": [
                "FUN_001027b0",
                "FUN_001023e1"
            ],
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001021d0",
            "entrypoint": "0x001021d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021e0": {
            "called": [
                "FUN_00107108"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_get_section_by_name(void)\n\n{\n  bfd_get_section_by_name();\n  return;\n}\n\n",
            "current_name": "FUN_001021e0",
            "entrypoint": "0x001021e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021f0": {
            "called": [
                "FUN_00107110"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nchar * fgets(char *__s,int __n,FILE *__stream)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = fgets(__s,__n,__stream);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_001021f0",
            "entrypoint": "0x001021f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102200": {
            "called": [
                "FUN_00107118"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_init(void)\n\n{\n  bfd_init();\n  return;\n}\n\n",
            "current_name": "FUN_00102200",
            "entrypoint": "0x00102200",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102210": {
            "called": [
                "FUN_00107120"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcmp(__s1,__s2);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102210",
            "entrypoint": "0x00102210",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102220": {
            "called": [
                "FUN_00107128"
            ],
            "calling": [
                "FUN_001025c0"
            ],
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102220",
            "entrypoint": "0x00102220",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102230": {
            "called": [
                "FUN_00107138"
            ],
            "calling": [
                "FUN_001025c0",
                "FUN_001023a0",
                "FUN_001027b0",
                "FUN_001023e1"
            ],
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102230",
            "entrypoint": "0x00102230",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102240": {
            "called": [
                "FUN_00107140"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n",
            "current_name": "FUN_00102240",
            "entrypoint": "0x00102240",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102250": {
            "called": [
                "FUN_00107150"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102250",
            "entrypoint": "0x00102250",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102260": {
            "called": [
                "FUN_00107158"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_00102260",
            "entrypoint": "0x00102260",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102270": {
            "called": [
                "FUN_00107160"
            ],
            "calling": [
                "FUN_001025c0",
                "FUN_001023a0",
                "FUN_001027b0"
            ],
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102270",
            "entrypoint": "0x00102270",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102280": {
            "called": [
                "FUN_00107168"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102280",
            "entrypoint": "0x00102280",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102290": {
            "called": [
                "FUN_00107170"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = setlocale(__category,__locale);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_00102290",
            "entrypoint": "0x00102290",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022a0": {
            "called": [
                "FUN_00107178"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n",
            "current_name": "FUN_001022a0",
            "entrypoint": "0x001022a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022b0": {
            "called": [
                "FUN_00107180"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_001022b0",
            "entrypoint": "0x001022b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022c0": {
            "called": [
                "FUN_00107188"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_demangle(void)\n\n{\n  bfd_demangle();\n  return;\n}\n\n",
            "current_name": "FUN_001022c0",
            "entrypoint": "0x001022c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022d0": {
            "called": [
                "FUN_00107190"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n",
            "current_name": "FUN_001022d0",
            "entrypoint": "0x001022d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022e0": {
            "called": [
                "FUN_00107198"
            ],
            "calling": [
                "FUN_001027b0",
                "FUN_00103bd0"
            ],
            "code": "\nvoid xexit(void)\n\n{\n  xexit();\n  return;\n}\n\n",
            "current_name": "FUN_001022e0",
            "entrypoint": "0x001022e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022f0": {
            "called": [
                "FUN_001071a0"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_close(void)\n\n{\n  bfd_close();\n  return;\n}\n\n",
            "current_name": "FUN_001022f0",
            "entrypoint": "0x001022f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102300": {
            "called": [
                "FUN_001071a8"
            ],
            "calling": [
                "FUN_001025c0"
            ],
            "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 = vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102300",
            "entrypoint": "0x00102300",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102310": {
            "called": [
                "FUN_001071b0"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_check_format_matches(void)\n\n{\n  bfd_check_format_matches();\n  return;\n}\n\n",
            "current_name": "FUN_00102310",
            "entrypoint": "0x00102310",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102320": {
            "called": [
                "FUN_001071b8"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nulong strtoul(char *__nptr,char **__endptr,int __base)\n\n{\n  ulong uVar1;\n  \n  uVar1 = strtoul(__nptr,__endptr,__base);\n  return uVar1;\n}\n\n",
            "current_name": "FUN_00102320",
            "entrypoint": "0x00102320",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102330": {
            "called": [
                "FUN_001071c0"
            ],
            "calling": [
                "FUN_001027b0",
                "FUN_00103c70"
            ],
            "code": "\nvoid bfd_errmsg(void)\n\n{\n  bfd_errmsg();\n  return;\n}\n\n",
            "current_name": "FUN_00102330",
            "entrypoint": "0x00102330",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102340": {
            "called": [
                "FUN_001071c8"
            ],
            "calling": [
                "FUN_001027b0",
                "FUN_001023e1"
            ],
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n",
            "current_name": "FUN_00102340",
            "entrypoint": "0x00102340",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102350": {
            "called": [
                "FUN_001071d0"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_check_format(void)\n\n{\n  bfd_check_format();\n  return;\n}\n\n",
            "current_name": "FUN_00102350",
            "entrypoint": "0x00102350",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102360": {
            "called": [
                "FUN_001071e0"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_fprintf_vma(void)\n\n{\n  bfd_fprintf_vma();\n  return;\n}\n\n",
            "current_name": "FUN_00102360",
            "entrypoint": "0x00102360",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102370": {
            "called": [
                "FUN_001071f0"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid bfd_map_over_sections(void)\n\n{\n  bfd_map_over_sections();\n  return;\n}\n\n",
            "current_name": "FUN_00102370",
            "entrypoint": "0x00102370",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102380": {
            "called": [
                "FUN_001071f8"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strerror(__errnum);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_00102380",
            "entrypoint": "0x00102380",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102390": {
            "called": [
                "FUN_00107208"
            ],
            "calling": [
                "FUN_00102760"
            ],
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n",
            "current_name": "FUN_00102390",
            "entrypoint": "0x00102390",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001023a0": {
            "additional_data": {
                "FUN_001023a0": {
                    "1": "handle_error",
                    "24": "print_error_message",
                    "5": "print_error"
                },
                "uVar1": {
                    "1": "error_description",
                    "2": "error_string",
                    "24": "error_message"
                },
                "unaff_RBX": {
                    "1": "error_type",
                    "16": "error_code",
                    "3": "error_cause",
                    "9": "error_flag"
                },
                "unaff_retaddr": {
                    "31": "return_address"
                }
            },
            "called": [
                "FUN_00102270",
                "FUN_00102110",
                "FUN_00102230"
            ],
            "calling": [
                "FUN_00103c70"
            ],
            "code": "\n\n\nvoid print_error_message_001023a0(void)\n\n{\n  undefined8 error_message;\n  long error_code;\n  undefined8 return_address;\n  \n  error_message = dcgettext(0,\"cause of error unknown\",5);\n  fflush(_stdout);\n  if (error_code != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",DAT_00106438);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",DAT_00106438,error_message,return_address);\n  return;\n}\n\n",
            "current_name": "print_error_message_001023a0",
            "entrypoint": "0x001023a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001023a0": "print_error_message_001023a0",
                "uVar1": "error_message",
                "unaff_RBX": "error_code",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001023e1": {
            "additional_data": {
                "FUN_001023e1": {
                    "1": "display_usage",
                    "17": "print_usage",
                    "2": "print_usage_and_exit",
                    "5": "print_usage_info"
                },
                "__ptr": {
                    "2": "target_list_ptr",
                    "29": "target_list"
                },
                "bfd_target_list": {
                    "1": "get_target_list"
                },
                "dcgettext": {
                    "1": "get_translated_string",
                    "2": "get_message"
                },
                "exit": {
                    "1": "exit",
                    "2": "exit_program",
                    "4": "terminate_program"
                },
                "fprintf": {
                    "1": "print_message",
                    "3": "write_formatted"
                },
                "fputc": {
                    "1": "write_char",
                    "2": "put_character",
                    "6": "write_character"
                },
                "free": {
                    "2": "deallocate_memory",
                    "6": "release_memory"
                },
                "lVar1": {
                    "1": "supported_target",
                    "2": "language_id",
                    "3": "version",
                    "4": "supported_targets",
                    "7": "target_name"
                },
                "param_1": {
                    "1": "output_stream",
                    "18": "output_file",
                    "4": "file_pointer",
                    "8": "file"
                },
                "param_2": {
                    "2": "error_code",
                    "26": "exit_code",
                    "3": "exit_status"
                },
                "pcVar2": {
                    "1": "localized_text",
                    "2": "translation",
                    "20": "message",
                    "5": "text"
                },
                "plVar3": {
                    "1": "target_list_item",
                    "2": "target_pointer",
                    "4": "target_ptr",
                    "5": "target",
                    "6": "ptr",
                    "9": "current_target"
                },
                "stderr": {
                    "1": "standard_error"
                }
            },
            "called": [
                "FUN_00102340",
                "FUN_00102110",
                "FUN_00102040",
                "FUN_001021d0",
                "FUN_00102230",
                "FUN_00102180"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid print_usage_001023e1(FILE *output_file,int exit_code)\n\n{\n  long target_name;\n  char *message;\n  long *target_list;\n  long *current_target;\n  \n  target_name = DAT_00106438;\n  message = (char *)get_message(0,\"Usage: %s [option(s)] [addr(s)]\\n\",5);\n  write_formatted(output_file,message,target_name);\n  message = (char *)get_message(0,\" Convert addresses into line number/file name pairs.\\n\",5);\n  write_formatted(output_file,message);\n  message = (char *)get_message(0,\n                             \" If no addresses are specified on the command line, they will be read from stdin\\n\"\n                             ,5);\n  write_formatted(output_file,message);\n  message = (char *)get_message(0,\n                             \" The options are:\\n  @<file>                Read options from <file>\\n  -a --addresses         Show addresses\\n  -b --target=<bfdname>  Set the binary file format\\n  -e --exe=<executable>  Set the input file name (default is a.out)\\n  -i --inlines           Unwind inlined functions\\n  -j --section=<name>    Read section-relative offsets instead of addresses\\n  -p --pretty-print      Make the output easier to read for humans\\n  -s --basenames         Strip directory names\\n  -f --functions         Show function names\\n  -C --demangle[=style]  Demangle function names\\n  -R --recurse-limit     Enable a limit on recursion whilst demangling.  [Default]\\n  -r --no-recurse-limit  Disable a limit on recursion whilst demangling\\n  -h --help              Display this information\\n  -v --version           Display the program\\'s version\\n\\n\"\n                             ,5);\n  write_formatted(output_file,message);\n  target_name = DAT_00106438;\n  if (DAT_00106438 == 0) {\n    message = (char *)get_message(0,\"Supported targets:\",5);\n    write_formatted(output_file,message);\n  }\n  else {\n    message = (char *)get_message(0,\"%s: supported targets:\",5);\n    write_formatted(output_file,message,target_name);\n  }\n  target_list = (long *)get_target_list();\n  current_target = target_list;\n  while( true ) {\n    target_name = *current_target;\n    current_target = current_target + 1;\n    if (target_name == 0) break;\n    write_formatted(output_file,\" %s\");\n  }\n  write_character(10,output_file);\n  release_memory(target_list);\n  if (exit_code == 0) {\n    message = (char *)get_message(0,\"Report bugs to %s\\n\",5);\n    write_formatted(output_file,message,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  terminate_program(exit_code);\n}\n\n",
            "current_name": "print_usage_001023e1",
            "entrypoint": "0x001023e1",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001023e1": "print_usage_001023e1",
                "__ptr": "target_list",
                "bfd_target_list": "get_target_list",
                "dcgettext": "get_message",
                "exit": "terminate_program",
                "fprintf": "write_formatted",
                "fputc": "write_character",
                "free": "release_memory",
                "lVar1": "target_name",
                "param_1": "output_file",
                "param_2": "exit_code",
                "pcVar2": "message",
                "plVar3": "current_target"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102540": {
            "additional_data": {
                "&DAT_001063f0": {
                    "1": "data4",
                    "2": "buffer4"
                },
                "&DAT_001063f4": {
                    "1": "pointer1",
                    "2": "buffer3"
                },
                "&DAT_001063f8": {
                    "1": "data1"
                },
                "&DAT_00106400": {
                    "1": "output2",
                    "2": "buffer2"
                },
                "&DAT_00106408": {
                    "1": "flag"
                },
                "(*(byte *)(param_2 + 0x24) & 1)": {
                    "1": "is_flag_set"
                },
                "(byte *)(param_2 + 0x24)": {
                    "1": "byte_pointer"
                },
                "(code **)(*(long *)(param_1 + 8) + 0x240)": {
                    "1": "callback_function"
                },
                "(long *)(param_2 + 0x40)": {
                    "1": "data_pointer"
                },
                "*(byte *)(param_2 + 0x24)": {
                    "1": "mask",
                    "4": "byte_value"
                },
                "*(byte *)(param_2 + 0x24) & 1": {
                    "1": "check_flag"
                },
                "*(code **)(*(long *)(param_1 + 8) + 0x240)": {
                    "1": "function_ptr"
                },
                "*(long *)(param_1 + 8)": {
                    "3": "function_pointer"
                },
                "*(long *)(param_2 + 0x40)": {
                    "1": "data_offset"
                },
                "*(long *)(param_2 + 0x40) + uVar1": {
                    "1": "data_end_address"
                },
                "*(ulong *)(param_2 + 0x30)": {
                    "1": "start_address"
                },
                "**(code **)(*(long *)(param_1 + 8) + 0x240)": {
                    "1": "callback_function"
                },
                "0x24": {
                    "1": "flag_offset"
                },
                "0x240": {
                    "1": "function_offset"
                },
                "0x30": {
                    "1": "length_offset"
                },
                "0x40": {
                    "1": "size_offset"
                },
                "8": {
                    "1": "function_pointer_offset"
                },
                "DAT_001063f0": {
                    "1": "data4",
                    "2": "var4"
                },
                "DAT_001063f4": {
                    "1": "variable3",
                    "2": "output3"
                },
                "DAT_001063f8": {
                    "1": "data1",
                    "2": "var1",
                    "3": "output1"
                },
                "DAT_00106400": {
                    "1": "buffer2",
                    "2": "output2"
                },
                "DAT_00106408": {
                    "1": "is_first_execution",
                    "14": "flag"
                },
                "DAT_00106410": {
                    "1": "end_offset",
                    "2": "end_address",
                    "3": "limit"
                },
                "DAT_00106410 - uVar1": {
                    "1": "remaining_data"
                },
                "DAT_00106418": {
                    "1": "config",
                    "2": "param",
                    "4": "extra_data"
                },
                "FUN_00102540": {
                    "1": "reverse_check_and_update_data",
                    "13": "process_data",
                    "5": "execute_function",
                    "6": "check_and_update_data"
                },
                "PTR_001063f0": {
                    "1": "result4_ptr"
                },
                "PTR_001063f4": {
                    "1": "result3_ptr"
                },
                "PTR_001063f8": {
                    "1": "result1_ptr"
                },
                "PTR_001064": {
                    "1": "function_ptr"
                },
                "PTR_00106400": {
                    "1": "result2_ptr"
                },
                "PTR_00106420": {
                    "1": "function_ptr"
                },
                "codePointer": {
                    "1": "function_pointer"
                },
                "param_1": {
                    "1": "data_buffer",
                    "2": "input1",
                    "4": "input_data"
                },
                "param_1 + 8": {
                    "1": "data_offset_pointer"
                },
                "param_2": {
                    "1": "buffer_pointer",
                    "2": "input2",
                    "3": "data_param",
                    "4": "buffer"
                },
                "param_2+0x24": {
                    "1": "data2_flag"
                },
                "param_2+Var1": {
                    "1": "data2+_offset"
                },
                "uVar1": {
                    "1": "temp_value",
                    "2": "data_length",
                    "3": "buffer_size",
                    "5": "offset",
                    "6": "data_offset"
                }
            },
            "called": [],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid process_data_00102540(long data_pointer,long buffer)\n\n{\n  ulong data_offset;\n  \n  if ((DAT_00106408 == '\\0') && ((*(byte *)(buffer + 0x24) & 1) != 0)) {\n    data_offset = *(ulong *)(buffer + 0x30);\n    if ((data_offset <= DAT_00106410) && (DAT_00106410 < *(long *)(buffer + 0x40) + data_offset)) {\n      DAT_00106408 = (**(code **)(*(long *)(data_pointer + 8) + 0x240))\n                               (data_pointer,DAT_00106418,buffer,DAT_00106410 - data_offset,&DAT_001063f8,\n                                &DAT_00106400,&DAT_001063f4,&DAT_001063f0);\n      return;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_data_00102540",
            "entrypoint": "0x00102540",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102540": "process_data_00102540",
                "param_1": "data_pointer",
                "param_2": "buffer",
                "uVar1": "data_offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001025c0": {
            "additional_data": {
                "DAT_00106438": {
                    "1": "program_name"
                },
                "FUN_001025c0": {
                    "1": "print_formatted_error_message",
                    "30": "print_error_message"
                },
                "__gnuc_va_list": {
                    "1": "va_list",
                    "3": "arguments"
                },
                "__gnuc_va_list param_2": {
                    "1": "var_args"
                },
                "_stderr": {
                    "1": "error_stream",
                    "20": "standard_error"
                },
                "_stdout": {
                    "1": "standard_output_stream",
                    "20": "standard_output"
                },
                "fflush": {
                    "1": "clear_output_buffer",
                    "2": "flush_output"
                },
                "fprintf": {
                    "1": "format_error_message",
                    "2": "format_print"
                },
                "param_1": {
                    "14": "error_message",
                    "15": "message",
                    "2": "format_string"
                },
                "param_10": {
                    "1": "utility"
                },
                "param_11": {
                    "1": "stdout_stream"
                },
                "param_2": {
                    "1": "variable_arguments",
                    "15": "args",
                    "2": "format_args",
                    "5": "arguments"
                },
                "param_3": {
                    "1": "error_stream"
                },
                "param_4": {
                    "1": "new_line"
                },
                "param_5": {
                    "1": "data_pointer"
                },
                "param_6": {
                    "1": "format_specifier"
                },
                "param_7": {
                    "1": "error_message"
                },
                "param_8": {
                    "1": "string_pointer"
                },
                "param_9": {
                    "1": "variable_list"
                },
                "putc": {
                    "1": "print_new_line",
                    "4": "put_character",
                    "5": "write_character"
                },
                "putc(10,_stderr)": {
                    "1": "print_new_line"
                },
                "stderr": {
                    "1": "standard_error"
                },
                "stdout": {
                    "1": "standard_output"
                },
                "vfprintf": {
                    "1": "format_v_print"
                }
            },
            "called": [
                "FUN_00102270",
                "FUN_00102300",
                "FUN_00102230",
                "FUN_00102220"
            ],
            "calling": [
                "FUN_00102620",
                "FUN_00103bd0"
            ],
            "code": "\n\n\nvoid print_error_message_001025c0(char *message,arguments args)\n\n{\n  flush_output(standard_output);\n  format_print(standard_error,\"%s: \",DAT_00106438);\n  format_v_print(standard_error,message,args);\n  print_new_line;\n  return;\n}\n\n",
            "current_name": "print_error_message_001025c0",
            "entrypoint": "0x001025c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001025c0": "print_error_message_001025c0",
                "__gnuc_va_list": "arguments",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "fflush": "flush_output",
                "fprintf": "format_print",
                "param_1": "message",
                "param_2": "args",
                "putc": "write_character",
                "putc(10,_stderr)": "print_new_line",
                "stderr": "standard_error",
                "stdout": "standard_output",
                "vfprintf": "format_v_print"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102620": {
            "additional_data": {
                "FUN_001025c0": {
                    "1": "process_variadic"
                },
                "FUN_00102620": {
                    "1": "report_and_print",
                    "17": "report_data",
                    "2": "report_and_process_data"
                },
                "in_AL": {
                    "1": "condition_check",
                    "12": "flag",
                    "3": "condition",
                    "4": "input_flag"
                },
                "local_18": {
                    "1": "report_param_8_copy",
                    "2": "param8",
                    "4": "arg8_copy"
                },
                "local_28": {
                    "1": "value7",
                    "2": "input7_copy",
                    "4": "arg7_copy"
                },
                "local_38": {
                    "1": "data6_copy",
                    "2": "param6",
                    "4": "arg6_copy"
                },
                "local_48": {
                    "1": "fifth_local",
                    "2": "input5_copy",
                    "4": "arg5_copy"
                },
                "local_58": {
                    "1": "data4_copy",
                    "2": "input4_copy",
                    "4": "arg4_copy"
                },
                "local_68": {
                    "1": "func_param_3",
                    "2": "input3_copy",
                    "4": "arg3_copy"
                },
                "local_78": {
                    "1": "input2",
                    "2": "input2_copy",
                    "4": "arg2_copy"
                },
                "local_88": {
                    "1": "input1",
                    "2": "input1_copy",
                    "4": "arg1_copy"
                },
                "local_90": {
                    "1": "param_e2",
                    "2": "param_14_copy",
                    "3": "param_14",
                    "6": "param14"
                },
                "local_98": {
                    "1": "param_13_mod",
                    "2": "param_13_copy",
                    "3": "param_13",
                    "6": "param13"
                },
                "local_a0": {
                    "1": "param_c2",
                    "2": "var3_copy",
                    "3": "param_12",
                    "6": "param12"
                },
                "local_a8": {
                    "1": "param_b2",
                    "2": "param11_copy",
                    "3": "param_11",
                    "6": "param11"
                },
                "local_b0": {
                    "1": "temp1",
                    "2": "param10_copy",
                    "3": "param_10",
                    "6": "param10"
                },
                "local_b8": {
                    "1": "buffer_array",
                    "2": "temp_array",
                    "3": "temp_buffer",
                    "5": "local_buffer",
                    "6": "local_array"
                },
                "local_c8": {
                    "1": "local_pointer",
                    "14": "local_buffer",
                    "4": "local_array"
                },
                "local_d0": {
                    "1": "local_array_1",
                    "2": "buffer_ptr",
                    "3": "stack_pointer",
                    "8": "buffer"
                },
                "local_d4": {
                    "1": "local_bytes",
                    "2": "count"
                },
                "local_d8": {
                    "1": "size1",
                    "11": "size",
                    "2": "local_size",
                    "3": "array_size",
                    "4": "stack_size"
                },
                "param_1": {
                    "1": "first_param",
                    "2": "input_1",
                    "5": "report_param1",
                    "6": "input1"
                },
                "param_10": {
                    "1": "func_param_10",
                    "2": "arg10",
                    "4": "report_param10",
                    "5": "param_10"
                },
                "param_11": {
                    "1": "param_b",
                    "2": "arg11",
                    "4": "report_param11",
                    "5": "param_11"
                },
                "param_12": {
                    "1": "report_param_12",
                    "2": "arg12",
                    "4": "report_param12",
                    "5": "param12"
                },
                "param_13": {
                    "1": "data13",
                    "2": "var4",
                    "4": "report_param13",
                    "5": "param13"
                },
                "param_14": {
                    "1": "extract_param_14",
                    "2": "arg14",
                    "4": "report_param14",
                    "5": "param14"
                },
                "param_2": {
                    "1": "func_param_2",
                    "2": "data2",
                    "5": "report_param2",
                    "6": "input2"
                },
                "param_3": {
                    "1": "func_param_3",
                    "2": "input_3",
                    "5": "report_param3",
                    "6": "input3"
                },
                "param_4": {
                    "1": "local_param_4",
                    "2": "data4",
                    "5": "report_param4",
                    "6": "input4"
                },
                "param_5": {
                    "1": "value5",
                    "2": "input_5",
                    "5": "report_param5",
                    "6": "arg5"
                },
                "param_6": {
                    "1": "input_param_6",
                    "2": "data6",
                    "5": "report_param6",
                    "6": "arg6"
                },
                "param_7": {
                    "1": "value7",
                    "2": "data7",
                    "5": "report_param7",
                    "6": "input7"
                },
                "param_8": {
                    "1": "local_param_8",
                    "2": "input_8",
                    "5": "report_param8",
                    "6": "input8"
                },
                "param_9": {
                    "1": "report_param_9",
                    "2": "data_ptr",
                    "5": "report_param9",
                    "7": "data"
                }
            },
            "called": [
                "FUN_001025c0"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\nvoid report_data_00102620(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4,\n                 undefined4 arg5,undefined4 arg6,undefined4 arg7,undefined4 arg8,\n                 undefined8 data,undefined8 arg10,undefined8 arg11,undefined8 arg12,\n                 undefined8 arg13,undefined8 arg14)\n\n{\n  char flag;\n  undefined4 size;\n  undefined4 length;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined local_array [8];\n  undefined8 param10;\n  undefined8 param11;\n  undefined8 param12;\n  undefined8 param13;\n  undefined8 param14;\n  undefined4 arg1_copy;\n  undefined4 arg2_copy;\n  undefined4 arg3_copy;\n  undefined4 arg4_copy;\n  undefined4 arg5_copy;\n  undefined4 arg6_copy;\n  undefined4 arg7_copy;\n  undefined4 arg8_copy;\n  \n  if (flag != '\\0') {\n    arg1_copy = arg1;\n    arg2_copy = arg2;\n    arg3_copy = arg3;\n    arg4_copy = arg4;\n    arg5_copy = arg5;\n    arg6_copy = arg6;\n    arg7_copy = arg7;\n    arg8_copy = arg8;\n  }\n  buffer = &stack0x00000008;\n  size = 8;\n  local_buffer = local_array;\n  length = 0x30;\n  param10 = arg10;\n  param11 = arg11;\n  param12 = arg12;\n  param13 = arg13;\n  param14 = arg14;\n  report(data,&size);\n  return;\n}\n\n",
            "current_name": "report_data_00102620",
            "entrypoint": "0x00102620",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102620": "report_data_00102620",
                "in_AL": "flag",
                "local_18": "arg8_copy",
                "local_28": "arg7_copy",
                "local_38": "arg6_copy",
                "local_48": "arg5_copy",
                "local_58": "arg4_copy",
                "local_68": "arg3_copy",
                "local_78": "arg2_copy",
                "local_88": "arg1_copy",
                "local_90": "param14",
                "local_98": "param13",
                "local_a0": "param12",
                "local_a8": "param11",
                "local_b0": "param10",
                "local_b8": "local_array",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "length",
                "local_d8": "size",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "param_5": "arg5",
                "param_6": "arg6",
                "param_7": "arg7",
                "param_8": "arg8",
                "param_9": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001026c0": {
            "additional_data": {
                "FUN_001026c0": {
                    "1": "execute_main_function",
                    "2": "start_main_process",
                    "4": "process_entry"
                },
                "FUN_001027b0": {
                    "1": "read_and_process_file",
                    "2": "process_file"
                },
                "__libc_start_main": {
                    "1": "libc_start_main"
                },
                "auStack_8": {
                    "1": "stack_array",
                    "2": "stack",
                    "4": "stack_frame"
                },
                "main": {
                    "1": "entry_point"
                },
                "param_1": {
                    "1": "file_handler",
                    "11": "argc",
                    "2": "param1",
                    "4": "param_1",
                    "5": "arg1"
                },
                "param_2": {
                    "1": "param_b",
                    "12": "argv",
                    "2": "param2",
                    "4": "param_2",
                    "5": "arg2"
                },
                "processEntry": {
                    "1": "start_main",
                    "10": "start_main_loop"
                }
            },
            "called": [
                "FUN_00107020",
                "FUN_001027b0"
            ],
            "calling": [],
            "code": "\nvoid start_main_loop process_entry_001026c0(undefined8 argc,undefined8 argv)\n\n{\n  undefined stack_frame [8];\n  \n  libc_start_main(entry_point,argv,&stack0x00000008,0,0,argc,stack_frame);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "process_entry_001026c0",
            "entrypoint": "0x001026c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001026c0": "process_entry_001026c0",
                "__libc_start_main": "libc_start_main",
                "auStack_8": "stack_frame",
                "main": "entry_point",
                "param_1": "argc",
                "param_2": "argv",
                "processEntry": "start_main_loop"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001026f0": {
            "called": [
                "FUN_00107030"
            ],
            "calling": [
                "FUN_00102760"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00102703) */\n/* WARNING: Removing unreachable block (ram,0x0010270f) */\n\nvoid FUNC_001026f0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_001026f0",
            "entrypoint": "0x001026f0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_001026f0": "FUNC_001026f0"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00102720": {
            "called": [
                "FUN_001071d8"
            ],
            "calling": [
                "FUN_001027a0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00102744) */\n/* WARNING: Removing unreachable block (ram,0x00102750) */\n\nvoid FUNC_00102720(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00102720",
            "entrypoint": "0x00102720",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00102720": "FUNC_00102720"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00102760": {
            "additional_data": {
                "FUNC_001026f0": {
                    "1": "execute_initialization",
                    "10": "cleanup_resources",
                    "7": "cleanup",
                    "9": "perform_cleanup"
                },
                "FUN_00102760": {
                    "1": "initialize_if_needed",
                    "11": "initialize_program",
                    "2": "initialize_data",
                    "5": "initialize_application"
                }
            },
            "called": [
                "FUN_00102390",
                "FUN_001026f0"
            ],
            "calling": [],
            "code": "\nvoid initialize_00102760(void)\n\n{\n  if (DAT_001063e0 != '\\0') {\n    return;\n  }\n  __cxa_finalize(PTR_LOOP_001061c8);\n  deregister_tm_clones();\n  DAT_001063e0 = 1;\n  return;\n}\n\n",
            "current_name": "initialize_00102760",
            "entrypoint": "0x00102760",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102760": "initialize_00102760"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001027a0": {
            "called": [
                "FUN_00102720"
            ],
            "calling": [],
            "code": "\nvoid register_tm_clones(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n",
            "current_name": "FUN_001027a0",
            "entrypoint": "0x001027a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001027b0": {
            "additional_data": {
                "(the next few lines after reading the file) != NULL)": {
                    "1": "read_successfuly"
                },
                "D10106410": {
                    "1": "address"
                },
                "DAT_001061d0": {
                    "1": "demangle_style"
                },
                "DAT_001063e8": {
                    "1": "data_var"
                },
                "DAT_00106410": {
                    "1": "address"
                },
                "DAT_00106418": {
                    "1": "data_ptr"
                },
                "DAT_00106420": {
                    "1": "data_size"
                },
                "DAT_00106428": {
                    "1": "char_ptr_array"
                },
                "DAT_00106435": {
                    "1": "bool_var4"
                },
                "DAT_00106438": {
                    "1": "long_ptr1"
                },
                "DAT_D:010610f8 = updated_pointer_to_copy_of_buffer": {
                    "1": "updated_pointer_to_copy_of_buffer"
                },
                "FILE *__stream": {
                    "1": "file_stream"
                },
                "FILE *pFVar19": {
                    "1": "file_pointer1"
                },
                "FILE *pFVar27": {
                    "1": "file_pointer2"
                },
                "FILE *param_2": {
                    "1": "file_pointer"
                },
                "FUN_001027b0": {
                    "1": "decode_binary_function",
                    "2": "analyze_file",
                    "3": "process_file"
                },
                "PTR_s_addresses_001061e0": {
                    "1": "s_addresses"
                },
                "__ptr": {
                    "1": "byte_pointer17",
                    "2": "byte_ptr_3",
                    "3": "byte_ptr",
                    "4": "ptr_byte3"
                },
                "__s": {
                    "1": "byte_pointer16",
                    "2": "buffer",
                    "3": "byte_pointer2",
                    "4": "ptr_byte2"
                },
                "__s -> ppuVar24": {
                    "1": "found_string"
                },
                "__s = __ptr": {
                    "1": "copy_of_buffer"
                },
                "__s_00": {
                    "1": "byte_ptr4",
                    "2": "stat_pointer2",
                    "3": "stat_ptr2"
                },
                "__stream": {
                    "1": "file_ptr1",
                    "3": "stream_file",
                    "8": "stream",
                    "9": "file_stream"
                },
                "_stderr": {
                    "1": "stderr"
                },
                "_stdout": {
                    "1": "stdout"
                },
                "bVar10": {
                    "1": "byte_value2",
                    "10": "byte_var2",
                    "2": "byte_val2",
                    "7": "byte_var10"
                },
                "bVar3": {
                    "1": "byte_value",
                    "2": "byte_val",
                    "7": "byte_var3",
                    "9": "byte_var"
                },
                "bVar6": {
                    "1": "bool_variable6",
                    "13": "bool_var1",
                    "2": "bool_val1",
                    "6": "bool_var6"
                },
                "bVar7": {
                    "1": "bool_variable7",
                    "13": "bool_var2",
                    "2": "bool_var_2",
                    "6": "bool_var7"
                },
                "bVar8": {
                    "1": "var_bool3",
                    "13": "bool_var3",
                    "2": "bool_val3",
                    "6": "bool_var8"
                },
                "bool bVar6": {
                    "1": "bool_variable1"
                },
                "bool bVar7": {
                    "1": "bool_variable2"
                },
                "bool bVar8": {
                    "1": "bool_variable3"
                },
                "byte *__ptr": {
                    "1": "byte_pointer2"
                },
                "byte *__s": {
                    "1": "byte_string"
                },
                "byte *pbVar1": {
                    "1": "byte_pointer1"
                },
                "byte *pbVar29": {
                    "1": "byte_pointer3"
                },
                "byte *pbVar31": {
                    "1": "byte_pointer4"
                },
                "byte bVar10": {
                    "1": "byte_variable2"
                },
                "byte bVar3": {
                    "1": "byte_variable"
                },
                "cVar11": {
                    "1": "char1",
                    "2": "char_val",
                    "4": "char_var1",
                    "6": "char_var11",
                    "8": "char_var"
                },
                "char *": {
                    "1": "error_message"
                },
                "char *pcVar28": {
                    "1": "char_pointer1"
                },
                "char *pcVar32": {
                    "1": "char_pointer3"
                },
                "char *unaff_RBP": {
                    "1": "char_pointer2"
                },
                "char cVar11": {
                    "1": "char_variable"
                },
                "iVar12": {
                    "1": "var_int1",
                    "2": "int_val",
                    "5": "int_var",
                    "6": "int_var12",
                    "7": "int_var1"
                },
                "iVar14": {
                    "1": "int_variable14",
                    "11": "int_var2",
                    "2": "int_var_2",
                    "6": "int_var14"
                },
                "iVar34": {
                    "1": "int_val3",
                    "11": "int_var3",
                    "2": "int_var_3",
                    "4": "int_var34"
                },
                "iVar36": {
                    "1": "var_int4",
                    "11": "int_var4",
                    "2": "int_var_4",
                    "5": "int_var36"
                },
                "ifndef __GNUC__": {
                    "1": "bfd_init_failed"
                },
                "int *piVar23": {
                    "1": "int_pointer1"
                },
                "int iVar12": {
                    "1": "int_variable1"
                },
                "int iVar14": {
                    "1": "int_variable2"
                },
                "int iVar34": {
                    "1": "int_variable3"
                },
                "int iVar36": {
                    "1": "int_variable4"
                },
                "lVar20": {
                    "1": "index",
                    "10": "long_var2",
                    "2": "long_var_2",
                    "3": "long_var6",
                    "5": "long_var20"
                },
                "lVar20 = (ppuVar16 - malloced_chunks)": {
                    "1": "number_of_malloced_chunks"
                },
                "lVar26": {
                    "1": "long_pointer1"
                },
                "lVar30": {
                    "1": "var_long3",
                    "10": "long_var3",
                    "2": "long_var_3",
                    "4": "long_var30"
                },
                "lVar5": {
                    "1": "long_variable5",
                    "2": "long_var_1",
                    "3": "long_var1",
                    "7": "long_var5",
                    "8": "long_var"
                },
                "line": {
                    "1": "line_buffer"
                },
                "local_118": {
                    "1": "local_var4",
                    "2": "local_long",
                    "8": "long_var4"
                },
                "local_120": {
                    "1": "size_t_value",
                    "2": "size_t_var_2",
                    "3": "size_t_var",
                    "4": "local_size"
                },
                "local_140": {
                    "1": "arg_files",
                    "2": "undefined_ptr_ptr_6",
                    "3": "undefined_ptr6"
                },
                "local_140 = unaff_R12": {
                    "1": "copy_of_unaff_r12"
                },
                "local_148": {
                    "1": "undefined_pointer5",
                    "2": "ptr_ptr_void5",
                    "3": "undefined_ptr5"
                },
                "local_c8": {
                    "1": "stat_info",
                    "2": "stat_var_1",
                    "3": "stat_var1"
                },
                "local_d0": {
                    "1": "long_var_d0",
                    "2": "long_ptr_2",
                    "4": "long_ptr2"
                },
                "long *local_d0": {
                    "1": "local_long_pointer"
                },
                "long *plVar26": {
                    "1": "long_pointer1"
                },
                "long lVar20": {
                    "1": "long_variable2"
                },
                "long lVar30": {
                    "1": "long_variable3"
                },
                "long lVar5": {
                    "1": "long_variable1"
                },
                "long local_118": {
                    "1": "local_long_variable1"
                },
                "np_value = bfd_nonfatal(*(long **)pFVar27)": {
                    "1": "bfd_error"
                },
                "pFVar19": {
                    "1": "file_ptr3",
                    "2": "file_ptr_1",
                    "4": "file_pointer"
                },
                "pFVar27": {
                    "1": "file2",
                    "2": "file_pointer3",
                    "4": "file_pointer2"
                },
                "param_1": {
                    "1": "num_args",
                    "12": "argc",
                    "2": "file_size",
                    "8": "param1"
                },
                "param_1_01": {
                    "1": "argc_01"
                },
                "param_2": {
                    "1": "file_pointer",
                    "10": "argv",
                    "3": "file",
                    "5": "file_ptr",
                    "7": "param2"
                },
                "param_2->_flags": {
                    "1": "flags"
                },
                "param_2.param_1": {
                    "1": "file"
                },
                "param_2.param_2": {
                    "1": "mode"
                },
                "param_2_02": {
                    "1": "argv_02"
                },
                "pbVar1": {
                    "1": "p_byte",
                    "2": "byte_ptr_1",
                    "3": "ptr1",
                    "4": "byte_ptr1"
                },
                "pbVar29": {
                    "1": "current_char",
                    "2": "byte_pointer5",
                    "3": "byte_ptr29"
                },
                "pbVar31": {
                    "1": "ptr_1",
                    "2": "byte_ptr4",
                    "3": "ptr_byte6"
                },
                "pcVar28": {
                    "1": "char_ptr_var",
                    "2": "str",
                    "3": "char_pointer"
                },
                "pcVar32": {
                    "1": "str_var2",
                    "2": "char_pointer3",
                    "3": "str2",
                    "5": "char_ptr3"
                },
                "pfVar27": {
                    "1": "file_pointer4"
                },
                "piVar23": {
                    "1": "ptr5",
                    "2": "int_pointer1",
                    "3": "ptr_int1",
                    "4": "int_ptr"
                },
                "plVar26": {
                    "1": "pointer_var2",
                    "2": "long_ptr1",
                    "3": "long_ptr26",
                    "5": "long_ptr"
                },
                "ppuVar16": {
                    "1": "ptr_ptr_void1",
                    "2": "undefined_ptr_ptr16"
                },
                "ppuVar16 -> local_148 + local_118": {
                    "1": "current_malloced_string"
                },
                "ppuVar16 = (ppuVar16+local_118)": {
                    "1": "reallocated_chunk"
                },
                "ppuVar24": {
                    "1": "ptr_ptr2",
                    "2": "undefined_pointer",
                    "3": "undefined_ptr2"
                },
                "ppuVar24 = (ppuVar24+local_118)": {
                    "1": "reallocated_chunk"
                },
                "ppuVar33": {
                    "1": "undefined_pointer",
                    "2": "ptr_ptr_void3",
                    "3": "undefined_ptr3"
                },
                "ppuVar33 = (ppuVar33 - local_140)": {
                    "1": "updated_pointer_to_copy_of_buffer"
                },
                "ppuVar33 = ppuVar16": {
                    "1": "pointer_to_copy_of_buffer"
                },
                "ppuVar33 = ppuVar24": {
                    "1": "pointer_to_found_string"
                },
                "ppvVar16": {
                    "1": "double_pointers_array"
                },
                "ppvar24": {
                    "1": "temp_pointer"
                },
                "psVar21": {
                    "1": "ptr_stat",
                    "2": "stat_ptr_1",
                    "3": "stat_ptr"
                },
                "psVar35": {
                    "1": "stat_ptr_2",
                    "2": "stat_pointer3",
                    "3": "stat_ptr3",
                    "4": "ptr_stat2"
                },
                "puVar18": {
                    "1": "undefined_pointer",
                    "2": "undefined_ptr18",
                    "3": "ptr_void2"
                },
                "puVar2": {
                    "1": "flags",
                    "2": "uint_ptr_1",
                    "3": "uint_ptr2",
                    "4": "ptr2"
                },
                "pvVar9": {
                    "1": "ptr_var",
                    "2": "void_ptr9",
                    "3": "void_pointer"
                },
                "sVar17": {
                    "1": "var_size_t1",
                    "2": "size_var",
                    "4": "size"
                },
                "size_t": {
                    "1": "length"
                },
                "size_t local_120": {
                    "1": "local_size_variable"
                },
                "size_t sVar17": {
                    "1": "size_variable"
                },
                "stat *__s_00": {
                    "1": "stat_pointer2"
                },
                "stat *psVar21": {
                    "1": "stat_pointer1"
                },
                "stat *psVar35": {
                    "1": "stat_pointer3"
                },
                "stat local_c8": {
                    "1": "local_stat1"
                },
                "strcmp(ppuVar16, __s)": {
                    "1": "string_compare_result"
                },
                "strings": {
                    "1": "file_strings"
                },
                "uVar13": {
                    "1": "uint1",
                    "2": "uint_val",
                    "6": "uint_var1",
                    "7": "uint_var"
                },
                "uVar15": {
                    "1": "opt_value",
                    "11": "uint_var2",
                    "2": "uint_var_2",
                    "5": "uint_var15"
                },
                "uVar22": {
                    "1": "undefined_var2",
                    "2": "uint_var3",
                    "3": "undefined8_var"
                },
                "uVar25": {
                    "1": "ulong_val2",
                    "2": "ulong_var1",
                    "4": "ulong_var25",
                    "7": "ulong_var2"
                },
                "uVar37": {
                    "1": "uint_value4",
                    "2": "uint_var2",
                    "5": "uint_var37",
                    "9": "uint_var3"
                },
                "uVar4": {
                    "1": "var_u_short1",
                    "2": "ushort_var1",
                    "7": "ushort_var4",
                    "9": "ushort_var"
                },
                "uint *puVar2": {
                    "1": "uint_pointer"
                },
                "uint uVar13": {
                    "1": "uint_variable1"
                },
                "uint uVar37": {
                    "1": "uint_variable2"
                },
                "ulong uVar25": {
                    "1": "ulong_variable1"
                },
                "unaff_R12": {
                    "1": "undefined_pointer5",
                    "2": "undefined_pointer",
                    "3": "undefined_ptr4"
                },
                "unaff_RBP": {
                    "1": "char_pointer3",
                    "2": "char_ptr_2",
                    "3": "char_pointer2",
                    "4": "char_ptr",
                    "5": "char_ptr2"
                },
                "undefined **local_140": {
                    "1": "local_undefined_pointer2"
                },
                "undefined **local_148": {
                    "1": "local_undefined_pointer1"
                },
                "undefined **ppuVar16": {
                    "1": "undefined_pointer1"
                },
                "undefined **ppuVar24": {
                    "1": "undefined_pointer2"
                },
                "undefined **ppuVar33": {
                    "1": "undefined_pointer3"
                },
                "undefined **unaff_R12": {
                    "1": "undefined_pointer4"
                },
                "undefined *puVar18": {
                    "1": "undefined_variable2"
                },
                "undefined4 uVar15": {
                    "1": "undefined_variable1"
                },
                "undefined8 uVar22": {
                    "1": "undefined_variable3"
                },
                "ushort uVar4": {
                    "1": "ushort_variable"
                },
                "void *pvVar9": {
                    "1": "void_pointer"
                }
            },
            "called": [
                "FUN_00102030",
                "FUN_00102540",
                "FUN_00102170",
                "FUN_001022b0",
                "FUN_00102110",
                "FUN_001021c0",
                "FUN_00103bd0",
                "FUN_00102290",
                "FUN_001021e0",
                "FUN_00102150",
                "FUN_001021b0",
                "FUN_00102280",
                "FUN_00102250",
                "FUN_00102320",
                "FUN_00102060",
                "FUN_001021f0",
                "FUN_001022f0",
                "FUN_00102120",
                "FUN_00102210",
                "FUN_00102620",
                "FUN_00102140",
                "FUN_001020f0",
                "FUN_001020c0",
                "FUN_001021a0",
                "FUN_00102080",
                "FUN_00102100",
                "FUN_00102240",
                "FUN_00102370",
                "FUN_00102310",
                "FUN_001020d0",
                "FUN_001022d0",
                "FUN_001021d0",
                "FUN_00103c70",
                "FUN_00102130",
                "FUN_00102360",
                "FUN_001023e1",
                "FUN_00102070",
                "FUN_001022a0",
                "FUN_00102380",
                "FUN_00102260",
                "FUN_00102090",
                "FUN_001022e0",
                "FUN_00102350",
                "FUN_00102330",
                "FUN_001020b0",
                "FUN_001022c0",
                "FUN_00102270",
                "FUN_00102040",
                "FUN_001020a0",
                "FUN_00102340",
                "FUN_00102160",
                "FUN_00102190",
                "FUN_00102230",
                "FUN_00102200",
                "FUN_00102050",
                "FUN_001020e0"
            ],
            "calling": [
                "FUN_001026c0"
            ],
            "code": "\n/* WARNING: Type propagation algorithm not settling */\n\n\nundefined8 process_file_001027b0(uint argc,FILE *argv)\n\n{\n  byte *ptr_byte1;\n  uint *ptr2;\n  byte byte_var;\n  ushort ushort_var;\n  long long_var;\n  bool bool_var1;\n  bool bool_var2;\n  bool bool_var3;\n  void *ptr_void;\n  byte byte_var2;\n  char char_var;\n  int int_var1;\n  uint uint_var;\n  int int_var2;\n  undefined4 uint_var2;\n  FILE *file_stream;\n  byte *ptr_byte2;\n  undefined **undefined_ptr_ptr_1;\n  length size;\n  byte *ptr_byte3;\n  undefined *undefined_ptr;\n  FILE *file_pointer;\n  long long_var2;\n  stat *ptr_stat1;\n  undefined8 ulong_var;\n  int *int_ptr;\n  undefined **undefined_ptr2;\n  stat *ptr_byte4;\n  ulong ulong_var2;\n  long *long_ptr;\n  FILE *file_ptr2;\n  char *char_pointer;\n  byte *ptr_byte5;\n  char *char_ptr2;\n  long long_var3;\n  byte *ptr_byte6;\n  char *char_ptr3;\n  undefined **undefined_ptr3;\n  int int_var3;\n  undefined **undefined_ptr4;\n  stat *ptr_stat2;\n  int int_var4;\n  uint uint_var3;\n  undefined **undefined_ptr5;\n  undefined **undefined_ptr6;\n  length local_size;\n  long long_var4;\n  long *long_ptr2;\n  stat stat_var1;\n  \n  file_ptr2 = (FILE *)(ulong)argc;\n  setlocale(5,\"\");\n  char_pointer = \"binutils\";\n  setlocale(0,\"\");\n  bindtextdomain(\"binutils\",\"/usr/share/locale\");\n  textdomain(\"binutils\");\n  DAT_00106438 = *(long **)argv;\n  xmalloc_set_program_name();\n  bfd_set_error_program_name(DAT_00106438);\n  file_pointer = argv;\n  file_stream = argv;\n  if (1 < (int)argc) {\n    int_var2 = 2000;\n    undefined_ptr4 = (undefined **)0x1;\n    undefined_ptr6 = (undefined **)0x0;\n    do {\n      int_var3 = (int)undefined_ptr4;\n      char_ptr2 = (char *)(long)int_var3;\n      undefined_ptr5 = (undefined **)((long)char_ptr2 * 8);\n      int_var4 = (int)file_ptr2;\n      if (**(char **)(&file_pointer->_flags + (long)char_ptr2 * 2) == '@') {\n        int_var2 = int_var2 + -1;\n        if (int_var2 == 0) {\n          long_ptr = *(long **)file_pointer;\n          char_pointer = \"%s: error: too many @-files encountered\\n\";\n          goto LAB_00103239;\n        }\n        char_pointer = *(char **)(&file_pointer->_flags + (long)char_ptr2 * 2) + 1;\n        int_var1 = stat(char_pointer,&stat_var1);\n        if (int_var1 < 0) goto LAB_00102c30;\n        if ((stat_var1.st_mode & 0xf000) == 0x4000) {\n          do {\n            long_ptr = *(long **)file_pointer;\n            char_pointer = \"%s: error: @-file refers to a directory\\n\";\nLAB_00103239:\n            fprintf(stderr,char_pointer,long_ptr);\n            xexit(1);\n          } while( true );\n        }\n        file_stream = fopen(char_pointer,\"r\");\n        if (file_stream == (FILE *)0x0) goto LAB_00102c30;\n        int_var1 = fseek(file_stream,0,2);\n        if (((int_var1 == -1) ||\n            (char_pointer = (char *)ftell(file_stream),\n            (undefined **)char_pointer == (undefined **)0xffffffffffffffff)) ||\n           (int_var1 = fseek(file_stream,0,0), int_var1 == -1)) {\nLAB_00102c90:\n          fclose(file_stream);\n          if (int_var3 + 1 < int_var4) goto LAB_00102c3a;\n          break;\n        }\n        ptr_byte2 = (byte *)xmalloc((long)char_pointer + 1);\n        undefined_ptr_ptr_1 = (undefined **)fread(ptr_byte2,1,(length)char_pointer,file_stream);\n        if (((undefined **)char_pointer != undefined_ptr_ptr_1) && (int_var1 = ferror(file_stream), int_var1 != 0)) {\n          free(ptr_byte2);\n          goto LAB_00102c90;\n        }\n        ptr_byte2[(long)undefined_ptr_ptr_1] = 0;\n        byte_var2 = *ptr_byte2;\n        ptr_byte5 = ptr_byte2;\n        if (byte_var2 != 0) {\nLAB_00102980:\n          if (((&_sch_istable)[(ulong)byte_var2 * 2] & 0x40) != 0) goto LAB_00102970;\n          size = strlen((char *)ptr_byte2);\n          ptr_byte3 = (byte *)xmalloc(size + 1);\n          undefined_ptr_ptr_1 = (undefined **)0x0;\n          int_var1 = 0;\n          bool_var1 = false;\n          bool_var2 = false;\n          bool_var3 = false;\n          long_var4 = 0;\n          ptr_byte5 = ptr_byte2;\n          do {\n            while (((&_sch_istable)[(ulong)*ptr_byte5 * 2] & 0x40) != 0) {\n              ptr_byte5 = ptr_byte5 + 1;\n            }\n            if ((int_var1 == 0) || (undefined_ptr2 = undefined_ptr_ptr_1 + long_var4, int_var1 + -1 <= (int)long_var4)) {\n              if (undefined_ptr_ptr_1 == (undefined **)0x0) {\n                undefined_ptr_ptr_1 = (undefined **)xmalloc(0x40);\n                int_var1 = 8;\n                undefined_ptr2 = undefined_ptr_ptr_1 + long_var4;\n                *undefined_ptr2 = (undefined *)0x0;\n              }\n              else {\n                int_var1 = int_var1 * 2;\n                undefined_ptr_ptr_1 = (undefined **)xrealloc(undefined_ptr_ptr_1,(long)int_var1 << 3);\n                undefined_ptr2 = undefined_ptr_ptr_1 + long_var4;\n                *undefined_ptr2 = (undefined *)0x0;\n              }\n            }\n            byte_var2 = *ptr_byte5;\n            ptr_byte6 = ptr_byte3;\n            while (byte_var2 != 0) {\n              while( true ) {\n                if ((((&_sch_istable)[(ulong)byte_var2 * 2] & 0x40) != 0) &&\n                   (!(bool)(bool_var3 | bool_var2 | bool_var1))) {\n                  bool_var3 = false;\n                  bool_var1 = false;\n                  bool_var2 = false;\n                  goto LAB_00102a9e;\n                }\n                if (!bool_var3) break;\n                ptr_byte5 = ptr_byte5 + 1;\n                *ptr_byte6 = byte_var2;\n                ptr_byte6 = ptr_byte6 + 1;\n                bool_var3 = false;\n                byte_var2 = *ptr_byte5;\n                if (byte_var2 == 0) goto LAB_00102a9e;\n              }\n              if (byte_var2 == 0x5c) {\n                bool_var3 = true;\n              }\n              else if (bool_var2) {\n                if (byte_var2 == 0x27) {\n                  bool_var2 = false;\n                }\n                else {\nLAB_00102c0d:\n                  *ptr_byte6 = byte_var2;\n                  ptr_byte6 = ptr_byte6 + 1;\n                }\n              }\n              else if (bool_var1) {\n                if (byte_var2 != 0x22) goto LAB_00102c0d;\n                bool_var1 = false;\n              }\n              else if (byte_var2 == 0x27) {\n                bool_var2 = true;\n              }\n              else {\n                if (byte_var2 != 0x22) goto LAB_00102c0d;\n                bool_var1 = true;\n              }\n              ptr_byte1 = ptr_byte5 + 1;\n              ptr_byte5 = ptr_byte5 + 1;\n              byte_var2 = *ptr_byte1;\n            }\nLAB_00102a9e:\n            *ptr_byte6 = 0;\n            undefined_ptr = (undefined *)xstrdup(ptr_byte3);\n            *undefined_ptr2 = undefined_ptr;\n            undefined_ptr_ptr_1[long_var4 + 1] = (undefined *)0x0;\n            byte_var2 = *ptr_byte5;\n            byte_var = (&_sch_istable)[(ulong)byte_var2 * 2];\n            while ((byte_var & 0x40) != 0) {\n              byte_var2 = ptr_byte5[1];\n              ptr_byte5 = ptr_byte5 + 1;\n              byte_var = (&_sch_istable)[(ulong)byte_var2 * 2];\n            }\n            long_var4 = long_var4 + 1;\n          } while (byte_var2 != 0);\n          free(ptr_byte3);\n          file_ptr2 = file_pointer;\n          if (argv == file_pointer) goto LAB_001030d9;\n          goto LAB_00102b38;\n        }\nLAB_001030bb:\n        undefined_ptr_ptr_1 = (undefined **)xmalloc(8);\n        *undefined_ptr_ptr_1 = (undefined *)0x0;\n        if (argv == file_pointer) {\nLAB_001030d9:\n          if (*(long **)file_pointer == (long *)0x0) {\n            int_var1 = 0;\n          }\n          else {\n            long_var2 = 1;\n            do {\n              int_var1 = (int)long_var2;\n              long_var3 = long_var2 * 2;\n              long_var2 = long_var2 + 1;\n            } while (*(long *)(&file_pointer->_flags + long_var3) != 0);\n          }\n          file_ptr2 = (FILE *)xmalloc((long)(int_var1 + 1) << 3);\n          long_ptr = *(long **)file_pointer;\n          long_var2 = 0;\n          while (long_ptr != (long *)0x0) {\n            ulong_var = xstrdup();\n            *(undefined8 *)((long)&file_ptr2->_flags + long_var2) = ulong_var;\n            long_ptr = *(long **)(file_pointer->_shortbuf + long_var2 + -0x7b);\n            long_var2 = long_var2 + 8;\n          }\n          *(undefined8 *)((long)&file_ptr2->_flags + long_var2) = 0;\nLAB_00102b38:\n          file_pointer = file_ptr2;\n          if (*undefined_ptr_ptr_1 == (undefined *)0x0) goto LAB_0010318e;\n          char_pointer = (char *)0x0;\n          do {\n            char_pointer = (char *)((long)char_pointer + 1);\n          } while (undefined_ptr_ptr_1[(long)char_pointer] != (undefined *)0x0);\n          local_size = (long)char_pointer * 8;\n        }\n        else {\nLAB_0010318e:\n          char_pointer = (char *)0x0;\n          local_size = 0;\n        }\n        free(*(void **)(&file_pointer->_flags + (long)char_ptr2 * 2));\n        file_pointer = (FILE *)xrealloc(file_pointer,((long)char_pointer + (long)int_var4 + 1) * 8);\n        uint_var3 = int_var4 + -1 + (int)char_pointer;\n        file_ptr2 = (FILE *)(ulong)uint_var3;\n        memmove(&file_pointer->_flags + (long)(FILE **)((long)char_ptr2 + (long)char_pointer) * 2,\n                &file_pointer->_IO_read_ptr + (long)char_ptr2,(long)(int_var4 - int_var3) << 3);\n        memcpy(&file_pointer->_flags + (long)char_ptr2 * 2,undefined_ptr_ptr_1,local_size);\n        free(undefined_ptr_ptr_1);\n        free(ptr_byte2);\n        fclose(file_stream);\n        uint_var = (int)undefined_ptr6 + 1;\n        char_ptr2 = (char *)(FILE **)((long)char_ptr2 + (long)char_pointer);\n        undefined_ptr4 = undefined_ptr5;\n        undefined_ptr5 = undefined_ptr_ptr_1;\n        if ((int)uint_var3 <= (int)uint_var) break;\n      }\n      else {\nLAB_00102c30:\n        if (int_var4 <= int_var3 + 1) break;\nLAB_00102c3a:\n        uint_var = int_var3 + 1;\n        undefined_ptr6 = undefined_ptr4;\n      }\n      undefined_ptr4 = (undefined **)(ulong)uint_var;\n    } while( true );\n  }\n  int_var2 = bfd_init();\n  if (int_var2 != 0x118) {\n    ulong_var = dcgettext(0,\"fatal error: libbfd ABI mismatch\",5);\n    fatal(ulong_var);\n    goto switchD_00102d16_caseD_43;\n  }\n  char_pointer = \"x86_64-pc-linux-gnu\";\n  char_var = bfd_set_default_target();\n  if (char_var == '\\0') {\n    uint_var2 = bfd_get_error();\n    char_ptr2 = (char *)bfd_errmsg(uint_var2);\n    ulong_var = dcgettext(0,\"can\\'t set BFD default target to `%s\\': %s\",5);\n    fatal(ulong_var,\"x86_64-pc-linux-gnu\",char_ptr2);\n    goto switchD_00102d16_caseD_61;\n  }\n  undefined_ptr4 = &PTR_s_addresses_001061e0;\n  undefined_ptr6 = (undefined **)0x0;\n  char_ptr2 = \"ab:Ce:rRsfHhij:pVv\";\n  undefined_ptr5 = (undefined **)0x0;\n  char_pointer = (char *)(undefined **)0x0;\nswitchD_00102d16_caseD_0:\n  do {\n    uint_var2 = getopt_long(file_ptr2,file_pointer,char_ptr2,undefined_ptr4,0);\n    switch(uint_var2) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n    case 0x12:\n    case 0x13:\n    case 0x14:\n    case 0x15:\n    case 0x16:\n    case 0x17:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n    case 0x28:\n    case 0x29:\n    case 0x2a:\n    case 0x2b:\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x44:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x50:\n    case 0x51:\n    case 0x53:\n    case 0x54:\n    case 0x55:\n    case 0x57:\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n    case 0x5f:\n    case 0x60:\n    case 99:\n    case 100:\n    case 0x67:\n    case 0x6b:\n    case 0x6c:\n    case 0x6d:\n    case 0x6e:\n    case 0x6f:\n    case 0x71:\n    case 0x74:\n    case 0x75:\n      usage(stderr,1);\n    case 0x6a:\n      undefined_ptr5 = _optarg;\n      break;\n    case 0x43:\nswitchD_00102d16_caseD_43:\n      file_stream = (FILE *)&optarg;\n      DAT_00106434 = '\\x01';\n      if (_optarg != (undefined **)0x0) {\n        int_var2 = cplus_demangle_name_to_style();\n        if (int_var2 == 0) goto LAB_0010339f;\n        cplus_demangle_set_style();\n      }\n      break;\n    case 0x48:\n    case 0x68:\n      usage(stdout,0);\nLAB_0010339f:\n      char_pointer = *(char **)file_stream;\n      char_ptr3 = \"unknown demangling style `%s\\'\";\nLAB_001033ae:\n      ulong_var = dcgettext(0,char_ptr3,5);\n      fatal(ulong_var,char_pointer);\nswitchD_00102d16_caseD_72:\n      DAT_001061d0 = DAT_001061d0 | 0x40000;\n      break;\n    case 0x52:\n      DAT_001061d0 = DAT_001061d0 & 0xfffbffff;\n      break;\n    case 0x56:\n    case 0x76:\n      printf(\"GNU %s %s\\n\",\"addr2line_buffer\",\"(GNU Binutils for Debian) 2.40\");\n      char_pointer = (char *)dcgettext(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n      printf(char_pointer);\n      char_pointer = (char *)dcgettext(0,\n                                  \"This program is free software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                                  ,5);\n      printf(char_pointer);\n                    \n      exit(0);\n    case 0x61:\nswitchD_00102d16_caseD_61:\n      DAT_00106435 = '\\x01';\n      break;\n    case 0x62:\n      undefined_ptr6 = _optarg;\n      break;\n    case 0x65:\n      char_pointer = (char *)_optarg;\n      break;\n    case 0x66:\n      DAT_00106432 = '\\x01';\n      break;\n    case 0x69:\n      DAT_00106430 = '\\x01';\n      break;\n    case 0x70:\n      DAT_00106431 = '\\x01';\n      break;\n    case 0x72:\n      goto switchD_00102d16_caseD_72;\n    case 0x73:\n      goto switchD_00102d16_caseD_73;\n    default:\n      DAT_00106428 = (char **)(&file_pointer->_flags + (long)_optind * 2);\n      DAT_00106420 = (int)file_ptr2 - _optind;\n      if ((undefined **)char_pointer == (undefined **)0x0) {\n        char_pointer = \"a.out\";\n      }\n      int_var2 = stat(char_pointer,&stat_var1);\n      if (int_var2 < 0) {\n        int_ptr = __errno_location();\n        char_ptr3 = \"\\'%s\\': No such file\";\n        if (*int_ptr != 2) {\n          char_ptr3 = strerror(*int_ptr);\n          ulong_var = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n          non_fatal(ulong_var,char_pointer,char_ptr3);\n          return 1;\n        }\nLAB_001039cd:\n        ulong_var = dcgettext(0,char_ptr3,5);\n        non_fatal(ulong_var,char_pointer);\n        return 1;\n      }\n      if ((stat_var1.st_mode & 0xf000) == 0x4000) {\n        char_ptr3 = \"Warning: \\'%s\\' is a directory\";\n        goto LAB_001039cd;\n      }\n      char_ptr3 = \"Warning: \\'%s\\' is not an ordinary file\";\n      if ((stat_var1.st_mode & 0xf000) != 0x8000) goto LAB_001039cd;\n      char_ptr3 = \"Warning: \\'%s\\' has negative size, probably it is too large\";\n      if (stat_var1.st_size < 0) goto LAB_001039cd;\n      if (stat_var1.st_size == 0) {\n        return 1;\n      }\n      file_pointer = (FILE *)bfd_openr(char_pointer,undefined_ptr6);\n      if (file_pointer == (FILE *)0x0) {\n        bfd_nonfatal(char_pointer);\n        xexit(1);\n        goto LAB_00103a85;\n      }\n      ptr2 = (uint *)((long)&file_pointer->_IO_buf_end + 4);\n      *ptr2 = *ptr2 | 0x8000;\n      char_var = bfd_check_format(file_pointer,2);\n      if (char_var != '\\0') {\n        char_ptr3 = \"%s: cannot get addresses from archive\";\n        goto LAB_001033ae;\n      }\n      char_var = bfd_check_format_matches(file_pointer,1,&long_ptr2);\n      if (char_var == '\\0') {\n        bfd_nonfatal(*(long **)file_pointer);\n        int_var2 = bfd_get_error();\n        if (int_var2 == 0xd) {\n          file_pointer = (FILE *)0x1040e1;\n          fflush(stdout);\n          long_ptr = DAT_00106438;\n          char_pointer = (char *)dcgettext(0,\"%s: Matching formats:\",5);\n          fprintf(stderr,char_pointer,long_ptr);\n          for (long_ptr = long_ptr2; *long_ptr != 0; long_ptr = long_ptr + 1) {\n            fprintf(stderr,\" %s\");\n          }\n          free(long_ptr2);\n          fputc(10,stderr);\n        }\n        goto LAB_00103801;\n      }\n      undefined_ptr_ptr_1 = undefined_ptr5;\n      if ((undefined_ptr5 != (undefined **)0x0) &&\n         (undefined_ptr_ptr_1 = (undefined **)bfd_get_section_by_name(file_pointer), undefined_ptr_ptr_1 == (undefined **)0x0))\n      {\n        ulong_var = dcgettext(0,\"%s: cannot find section %s\",5);\n        fatal(ulong_var,char_pointer,undefined_ptr5);\n        goto LAB_0010399c;\n      }\n      undefined_ptr5 = undefined_ptr_ptr_1;\n      if ((*(byte *)((long)&file_pointer->_IO_buf_end + 4) & 0x10) == 0) goto LAB_00102ecd;\n      long_var2 = (**(code **)(file_pointer->_IO_read_ptr + 0x1f8))(file_pointer);\n      if (long_var2 == 0) {\n        long_var2 = (**(code **)(file_pointer->_IO_read_ptr + 0x350))(file_pointer);\n        if (-1 < long_var2) {\n          DAT_00106418 = (void *)xmalloc(long_var2);\n          DAT_001063e8 = (**(code **)(file_pointer->_IO_read_ptr + 0x358))(file_pointer);\n          if (-1 < DAT_001063e8) goto LAB_00102ebf;\n        }\n      }\n      else if (-1 < long_var2) {\n        DAT_00106418 = (void *)xmalloc(long_var2);\n        DAT_001063e8 = (**(code **)(file_pointer->_IO_read_ptr + 0x200))(file_pointer);\n        if (-1 < DAT_001063e8) {\n          if (DAT_001063e8 == 0) goto LAB_0010380b;\n          goto LAB_00102ebf;\n        }\n      }\n      bfd_nonfatal(*(long **)file_pointer);\nLAB_00103801:\n      xexit(1);\nLAB_0010380b:\n      long_var2 = (**(code **)(file_pointer->_IO_read_ptr + 0x350))(file_pointer);\n      if (0 < long_var2) {\n        free(DAT_00106418);\n        DAT_00106418 = (void *)xmalloc(long_var2);\n        DAT_001063e8 = (**(code **)(file_pointer->_IO_read_ptr + 0x358))(file_pointer);\n      }\nLAB_00102ebf:\n      if (DAT_001063e8 < 1) {\n        free(DAT_00106418);\n        DAT_00106418 = (void *)0x0;\n      }\nLAB_00102ecd:\n      undefined_ptr4 = (undefined **)(ulong)DAT_00106420;\n      file_stream = (FILE *)&DAT_0010400a;\n      if (DAT_00106420 == 0) goto LAB_00103065;\nLAB_00102ee7:\n      if ((int)DAT_00106420 < 1) {\nLAB_0010308a:\n        free(DAT_00106418);\n        DAT_00106418 = (void *)0x0;\n        bfd_close(file_pointer);\n        return 0;\n      }\n      DAT_00106420 = DAT_00106420 - 1;\n      ptr_stat1 = (stat *)*DAT_00106428;\n      DAT_00106428 = DAT_00106428 + 1;\n      do {\n        byte_var2 = *(byte *)&ptr_stat1->st_dev;\n        ulong_var2 = (ulong)byte_var2;\n        ushort_var = *(ushort *)(&_sch_istable + ulong_var2 * 2);\n        ptr_byte4 = ptr_stat1;\n        while ((ushort_var & 0x40) != 0) {\n          byte_var2 = *(byte *)((long)&ptr_byte4->st_dev + 1);\n          ulong_var2 = (ulong)byte_var2;\n          ptr_byte4 = (stat *)((long)&ptr_byte4->st_dev + 1);\n          ushort_var = *(ushort *)(&_sch_istable + ulong_var2 * 2);\n        }\n        if ((((ushort_var & 4) == 0) && (byte_var2 != 0)) &&\n           ((ptr_stat2 = ptr_byte4, 5 < (byte)((&_sch_toupper)[ulong_var2] + 0xbf) ||\n            (char_pointer = strchr((char *)ptr_byte4,0x2b), char_pointer != (char *)0x0)))) {\n          while( true ) {\n            byte_var2 = *(byte *)&ptr_stat2->st_dev;\n            ptr_stat1 = ptr_stat2;\n            if (((byte_var2 == 0) || ((*(ushort *)(&_sch_istable + (ulong)byte_var2 * 2) & 0x40) != 0)) ||\n               (byte_var2 == 0x2b)) break;\n            ptr_stat2 = (stat *)((long)&ptr_stat2->st_dev + 1);\n          }\n          while (((&_sch_istable)[(ulong)*(byte *)&ptr_stat1->st_dev * 2] & 0x40) != 0) {\n            ptr_stat1 = (stat *)((long)&ptr_stat1->st_dev + 1);\n          }\n          ulong_var2 = 0;\n          if (*(byte *)&ptr_stat1->st_dev == 0x2b) {\n            ulong_var2 = strtoul((char *)((long)&ptr_stat1->st_dev + 1),(char **)0x0,0);\n          }\n          ptr_void = DAT_00106418;\n          long_var2 = DAT_001063e8;\n          *(undefined *)&ptr_stat2->st_dev = 0;\n          for (long_var3 = 0; long_var3 < long_var2; long_var3 = long_var3 + 1) {\n            long_var = *(long *)((long)ptr_void + long_var3 * 8);\n            int_var2 = strcmp(*(char **)(long_var + 8),(char *)ptr_byte4);\n            if (int_var2 == 0) {\n              undefined_ptr4 = (undefined **)((ulong)undefined_ptr4 & 0xffffffff);\n              DAT_00106410 = (undefined *)\n                             (ulong_var2 + *(long *)(long_var + 0x10) +\n                             *(long *)(*(long *)(long_var + 0x20) + 0x30));\n              goto LAB_00102f4b;\n            }\n          }\n          undefined_ptr4 = (undefined **)((ulong)undefined_ptr4 & 0xffffffff);\n          for (long_var2 = 0; long_var2 < DAT_001063e8; long_var2 = long_var2 + 1) {\n            char_pointer = (char *)bfd_demangle(file_pointer,*(undefined8 *)\n                                                    (*(long *)((long)DAT_00106418 + long_var2 * 8) + 8)\n                                           ,DAT_001061d0);\n            if ((char_pointer != (char *)0x0) && (int_var2 = strcmp(char_pointer,(char *)ptr_byte4), int_var2 == 0))\n            {\n              free(char_pointer);\n              long_var2 = *(long *)((long)DAT_00106418 + long_var2 * 8);\n              DAT_00106410 = (undefined *)\n                             (*(long *)(long_var2 + 0x10) + ulong_var2 +\n                             *(long *)(*(long *)(long_var2 + 0x20) + 0x30));\n              goto LAB_00102f4b;\n            }\n            free(char_pointer);\n          }\n          DAT_00106410 = (undefined *)0x0;\n        }\n        else {\n          DAT_00106410 = (undefined *)bfd_scan_vma(ptr_stat1,0,0x10);\n        }\nLAB_00102f4b:\n        if (*(int *)(file_pointer->_IO_read_ptr + 8) == 5) {\n          long_var2 = *(long *)(file_pointer->_IO_read_ptr + 0x380);\n          ulong_var2 = 1L << (*(char *)(*(long *)(long_var2 + 0x340) + 10) - 1U & 0x3f);\n          DAT_00106410 = (undefined *)((ulong)DAT_00106410 & ulong_var2 * 2 - 1);\n          if ((*(byte *)(long_var2 + 0x3f1) & 1) != 0) {\n            DAT_00106410 = (undefined *)(((ulong)DAT_00106410 ^ ulong_var2) - ulong_var2);\n          }\n        }\n        if (DAT_00106435 != '\\0') {\n          printf(\"0x\");\n          bfd_fprintf_vma(file_pointer,stdout,DAT_00106410);\n          if (DAT_00106431 == '\\0') {\n            putchar(10);\n          }\n          else {\n            printf(\": \");\n          }\n        }\n        char_ptr2 = &stdout;\n        DAT_00106408 = '\\0';\n        if (undefined_ptr5 == (undefined **)0x0) {\n          bfd_map_over_sections(file_pointer,find_address_in_section,0);\nLAB_00102fcf:\n          if (DAT_00106408 != '\\0') {\n            do {\n              if (DAT_00106432 != '\\0') {\n                undefined_ptr_ptr_1 = DAT_00106400;\n                if (DAT_00106400 == (undefined **)0x0) {\nLAB_00103a4a:\n                  undefined_ptr2 = (undefined **)&DAT_0010400a;\n                }\n                else {\n                  if (*(char *)DAT_00106400 == '\\0') {\n                    undefined_ptr_ptr_1 = (undefined **)0x0;\n                    goto LAB_00103a4a;\n                  }\n                  char_pointer = (char *)DAT_00106400;\n                  file_ptr2 = file_pointer;\n                  if (DAT_00106434 == '\\0') {\nLAB_001031f4:\n                    undefined_ptr_ptr_1 = (undefined **)0x0;\n                    undefined_ptr2 = (undefined **)char_pointer;\n                    file_pointer = file_ptr2;\n                  }\n                  else {\nLAB_0010399c:\n                    undefined_ptr_ptr_1 = (undefined **)bfd_demangle(file_ptr2,char_pointer,DAT_001061d0);\n                    undefined_ptr2 = undefined_ptr_ptr_1;\n                    file_pointer = file_ptr2;\n                    if (undefined_ptr_ptr_1 == (undefined **)0x0) goto LAB_001031f4;\n                  }\n                }\n                printf(\"%s\",undefined_ptr2);\n                if (DAT_00106431 == '\\0') {\n                  putchar(10);\n                }\n                else {\n                  char_pointer = (char *)dcgettext(0,&DAT_001040f1,5);\n                  printf(char_pointer);\n                }\n                free(undefined_ptr_ptr_1);\n              }\n              file_ptr2 = DAT_001063f8;\n              if (DAT_00106433 == '\\0') {\n                if (DAT_001063f8 == (FILE *)0x0) {\n                  file_ptr2 = file_stream;\n                }\n              }\n              else if (DAT_001063f8 == (FILE *)0x0) {\n                file_ptr2 = (FILE *)&DAT_0010400a;\n              }\n              else {\n                char_pointer = strrchr((char *)DAT_001063f8,0x2f);\n                if (char_pointer != (char *)0x0) {\n                  file_ptr2 = (FILE *)(char_pointer + 1);\n                  DAT_001063f8 = file_ptr2;\n                }\n              }\n              printf(\"%s:\",file_ptr2);\n              file_ptr2 = file_pointer;\n              if (DAT_001063f4 == 0) {\nLAB_00103a85:\n                puts(\"?\");\n                file_pointer = file_ptr2;\n              }\n              else if (DAT_001063f0 == 0) {\n                printf(\"%u\\n\");\n              }\n              else {\n                printf(\"%u (discriminator %u)\\n\");\n              }\n              if (DAT_00106430 == '\\0') {\nLAB_0010304c:\n                DAT_00106408 = '\\0';\n                goto LAB_00103053;\n              }\n              DAT_00106408 = (**(code **)(file_pointer->_IO_read_ptr + 600))\n                                       (file_pointer,&DAT_001063f8,&DAT_00106400,&DAT_001063f4);\n              undefined_ptr_ptr_1 = DAT_00106400;\n              if (DAT_00106408 == '\\0') goto LAB_00103053;\n              while (DAT_00106400 = undefined_ptr_ptr_1, DAT_00106431 == '\\0') {\n                if (DAT_00106432 != '\\0') {\n                  undefined_ptr2 = undefined_ptr_ptr_1;\n                  if (undefined_ptr_ptr_1 == (undefined **)0x0) {\nLAB_00103b7b:\n                    undefined_ptr3 = (undefined **)&DAT_0010400a;\n                  }\n                  else {\n                    if (*(char *)undefined_ptr_ptr_1 == '\\0') {\n                      undefined_ptr2 = (undefined **)0x0;\n                      goto LAB_00103b7b;\n                    }\n                    if ((DAT_00106434 == '\\0') ||\n                       (undefined_ptr2 = (undefined **)bfd_demangle(file_pointer,undefined_ptr_ptr_1,DAT_001061d0),\n                       undefined_ptr3 = undefined_ptr2, undefined_ptr2 == (undefined **)0x0)) {\n                      undefined_ptr2 = (undefined **)0x0;\n                      undefined_ptr3 = undefined_ptr_ptr_1;\n                    }\n                  }\n                  printf(\"%s\",undefined_ptr3);\n                  if (DAT_00106431 == '\\0') {\n                    putchar(10);\n                  }\n                  else {\n                    char_pointer = (char *)dcgettext(0,&DAT_001040f1,5);\n                    printf(char_pointer);\n                  }\n                  free(undefined_ptr2);\n                }\n                file_ptr2 = DAT_001063f8;\n                if (DAT_00106433 == '\\0') {\n                  if (DAT_001063f8 == (FILE *)0x0) {\n                    file_ptr2 = (FILE *)&DAT_0010400a;\n                  }\n                }\n                else if (DAT_001063f8 == (FILE *)0x0) {\n                  file_ptr2 = (FILE *)&DAT_0010400a;\n                }\n                else {\n                  char_pointer = strrchr((char *)DAT_001063f8,0x2f);\n                  if (char_pointer != (char *)0x0) {\n                    file_ptr2 = (FILE *)(char_pointer + 1);\n                    DAT_001063f8 = file_ptr2;\n                  }\n                }\n                printf(\"%s:\",file_ptr2);\n                if (DAT_001063f4 == 0) {\n                  puts(\"?\");\n                }\n                else if (DAT_001063f0 == 0) {\n                  printf(\"%u\\n\");\n                }\n                else {\n                  printf(\"%u (discriminator %u)\\n\");\n                }\n                if (DAT_00106430 == '\\0') goto LAB_0010304c;\n                DAT_00106408 = (**(code **)(file_pointer->_IO_read_ptr + 600))\n                                         (file_pointer,&DAT_001063f8,&DAT_00106400,&DAT_001063f4);\n                undefined_ptr_ptr_1 = DAT_00106400;\n                if (DAT_00106408 == '\\0') {\n                  DAT_00106408 = '\\0';\n                  goto LAB_00103053;\n                }\n              }\n              char_pointer = (char *)dcgettext(0,\" (inline_bufferd by) \",5);\n              printf(char_pointer);\n            } while( true );\n          }\n        }\n        else if (((*(byte *)((long)undefined_ptr5 + 0x24) & 1) != 0) && (DAT_00106410 < undefined_ptr5[8])) {\n          DAT_00106408 = (**(code **)(file_pointer->_IO_read_ptr + 0x240))\n                                   (file_pointer,DAT_00106418,undefined_ptr5,DAT_00106410,&DAT_001063f8,\n                                    &DAT_00106400,&DAT_001063f4,&DAT_001063f0);\n          goto LAB_00102fcf;\n        }\n        if (DAT_00106432 != '\\0') {\n          if (DAT_00106431 == '\\0') {\n            puts(\"??\");\n          }\n          else {\n            printf(\"?? \");\n          }\n        }\n        puts(\"??:0\");\nLAB_00103053:\n        fflush(*(FILE **)char_ptr2);\n        if ((int)undefined_ptr4 != 0) goto LAB_00102ee7;\nLAB_00103065:\n        char_pointer = fgets((char *)&stat_var1,100,_stdin);\n        ptr_stat1 = &stat_var1;\n        if (char_pointer == (char *)0x0) goto LAB_0010308a;\n      } while( true );\n    }\n  } while( true );\nLAB_00102970:\n  byte_var2 = ptr_byte5[1];\n  ptr_byte5 = ptr_byte5 + 1;\n  if (byte_var2 == 0) goto LAB_001030bb;\n  goto LAB_00102980;\nswitchD_00102d16_caseD_73:\n  DAT_00106433 = '\\x01';\n  goto switchD_00102d16_caseD_0;\n}\n\n",
            "current_name": "process_file_001027b0",
            "entrypoint": "0x001027b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001027b0": "process_file_001027b0",
                "__ptr": "ptr_byte3",
                "__s": "ptr_byte2",
                "__s_00": "ptr_byte4",
                "__stream": "file_stream",
                "_stderr": "stderr",
                "_stdout": "stdout",
                "bVar10": "byte_var2",
                "bVar3": "byte_var",
                "bVar6": "bool_var1",
                "bVar7": "bool_var2",
                "bVar8": "bool_var3",
                "cVar11": "char_var",
                "iVar12": "int_var1",
                "iVar14": "int_var2",
                "iVar34": "int_var3",
                "iVar36": "int_var4",
                "lVar20": "long_var2",
                "lVar26": "long_pointer1",
                "lVar30": "long_var3",
                "lVar5": "long_var",
                "line": "line_buffer",
                "local_118": "long_var4",
                "local_120": "local_size",
                "local_140": "undefined_ptr6",
                "local_148": "undefined_ptr5",
                "local_c8": "stat_var1",
                "local_d0": "long_ptr2",
                "pFVar19": "file_pointer",
                "pFVar27": "file_ptr2",
                "param_1": "argc",
                "param_2": "argv",
                "pbVar1": "ptr_byte1",
                "pbVar29": "ptr_byte5",
                "pbVar31": "ptr_byte6",
                "pcVar28": "char_pointer",
                "pcVar32": "char_ptr3",
                "piVar23": "int_ptr",
                "plVar26": "long_ptr",
                "ppuVar16": "undefined_ptr_ptr_1",
                "ppuVar24": "undefined_ptr2",
                "ppuVar33": "undefined_ptr3",
                "psVar21": "ptr_stat1",
                "psVar35": "ptr_stat2",
                "puVar18": "undefined_ptr",
                "puVar2": "ptr2",
                "pvVar9": "ptr_void",
                "sVar17": "size",
                "size_t": "length",
                "uVar13": "uint_var",
                "uVar15": "uint_var2",
                "uVar22": "ulong_var",
                "uVar25": "ulong_var2",
                "uVar37": "uint_var3",
                "uVar4": "ushort_var",
                "unaff_R12": "undefined_ptr4",
                "unaff_RBP": "char_ptr2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103bd0": {
            "additional_data": {
                "FUN_00103bd0": {
                    "1": "report_and_exit_with_error",
                    "15": "report_and_exit",
                    "6": "report_error"
                },
                "F_UN00103bd0": {
                    "1": "report_and_exit"
                },
                "iVar1": {
                    "1": "bfd_error_code",
                    "10": "error",
                    "4": "error_code",
                    "5": "bfd_error"
                },
                "in_AL": {
                    "1": "condition_check",
                    "17": "flag",
                    "2": "condition_flag"
                },
                "in_R10": {
                    "1": "additional_information",
                    "10": "additional_info",
                    "2": "message",
                    "4": "param_r10"
                },
                "lVar3": {
                    "1": "error_occurred",
                    "2": "return_value",
                    "3": "is_error",
                    "4": "error_flag",
                    "6": "exit_status"
                },
                "local_18": {
                    "1": "error_param8",
                    "2": "error_code8_copy"
                },
                "local_28": {
                    "1": "local_error_code7",
                    "2": "local_param7"
                },
                "local_38": {
                    "1": "param_6_copy",
                    "2": "local_38"
                },
                "local_48": {
                    "1": "input_param5_copy",
                    "2": "local_48"
                },
                "local_58": {
                    "1": "input_4",
                    "2": "local_input_4"
                },
                "local_68": {
                    "1": "local_error_code_3",
                    "2": "local_variable_68"
                },
                "local_78": {
                    "1": "local_error_code_2",
                    "2": "local_78"
                },
                "local_88": {
                    "1": "input_param1_copy",
                    "2": "local_param_1"
                },
                "local_90": {
                    "1": "local_buffer5",
                    "2": "param14",
                    "4": "local_param14",
                    "6": "param14_copy"
                },
                "local_98": {
                    "1": "local_var_6",
                    "2": "param_13_copy",
                    "4": "local_param13",
                    "6": "param13_copy"
                },
                "local_a0": {
                    "1": "local_var4",
                    "2": "param12",
                    "3": "local_variable_a0",
                    "4": "local_param12",
                    "6": "param12_copy"
                },
                "local_a8": {
                    "1": "local_buffer2",
                    "2": "param_11",
                    "3": "local_variable_a8",
                    "4": "local_param11",
                    "6": "param11_copy"
                },
                "local_b0": {
                    "1": "param1",
                    "2": "param_10",
                    "3": "local_variable_b0",
                    "4": "local_param10",
                    "6": "param10_copy"
                },
                "local_b8": {
                    "1": "buffer",
                    "2": "temp_buffer",
                    "4": "local_array",
                    "5": "local_buffer"
                },
                "local_c8": {
                    "1": "local_buffer_2",
                    "15": "local_buffer",
                    "3": "local_variable_c8",
                    "6": "buffer"
                },
                "local_d0": {
                    "1": "data",
                    "10": "buffer",
                    "2": "stack_pointer",
                    "3": "buffer_pointer",
                    "5": "buffer_ptr"
                },
                "local_d4": {
                    "1": "buffer_length",
                    "2": "limit",
                    "3": "length"
                },
                "local_d8": {
                    "1": "num_args",
                    "10": "size",
                    "2": "local_variable_d8",
                    "9": "buffer_size"
                },
                "param_1": {
                    "1": "report_param1",
                    "12": "error_code",
                    "2": "argument1",
                    "3": "input_1"
                },
                "param_10": {
                    "1": "input_param10",
                    "16": "param10",
                    "6": "param_10"
                },
                "param_11": {
                    "1": "ptr_3",
                    "16": "param11",
                    "6": "param_11"
                },
                "param_12": {
                    "1": "error_param3",
                    "16": "param12",
                    "6": "param_12"
                },
                "param_13": {
                    "1": "input_param13",
                    "16": "param13",
                    "6": "param_13"
                },
                "param_14": {
                    "1": "input_param_14",
                    "16": "param14",
                    "6": "param_14"
                },
                "param_2": {
                    "1": "report_param2",
                    "2": "argument2",
                    "3": "error_code2",
                    "4": "param_2",
                    "8": "param2"
                },
                "param_3": {
                    "1": "input_param3",
                    "2": "argument3",
                    "3": "input_3",
                    "8": "param3"
                },
                "param_4": {
                    "1": "error_param4",
                    "2": "argument4",
                    "3": "input_4",
                    "4": "param_4",
                    "8": "param4"
                },
                "param_5": {
                    "1": "arg5",
                    "2": "argument5",
                    "3": "input_5",
                    "8": "param5"
                },
                "param_6": {
                    "1": "input_param6",
                    "2": "argument6",
                    "3": "error_code6",
                    "4": "param_6",
                    "8": "param6"
                },
                "param_7": {
                    "1": "report_param7",
                    "2": "argument7",
                    "3": "input_7",
                    "4": "param_7",
                    "8": "param7"
                },
                "param_8": {
                    "1": "error_param8",
                    "2": "argument8",
                    "3": "input_8",
                    "4": "param_8",
                    "8": "param8"
                },
                "param_9": {
                    "1": "input_param_9",
                    "2": "param_9",
                    "3": "message",
                    "7": "error_message",
                    "8": "param9"
                },
                "uVar2": {
                    "1": "error_details",
                    "16": "error_message",
                    "8": "error_msg"
                }
            },
            "called": [
                "FUN_001025c0",
                "FUN_001022e0"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nvoid report_and_exit_00103bd0(undefined4 error_code,undefined4 param2,undefined4 param3,undefined4 param4,\n                 undefined4 param5,undefined4 param6,undefined4 param7,undefined4 param8,\n                 undefined8 param9,undefined8 param10,undefined8 param11,undefined8 param12,\n                 undefined8 param13,undefined8 param14)\n\n{\n  char flag;\n  int error;\n  undefined8 error_message;\n  long exit_status;\n  undefined8 additional_info;\n  undefined4 size;\n  undefined4 length;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined local_buffer [8];\n  undefined8 param10_copy;\n  undefined8 param11_copy;\n  undefined8 param12_copy;\n  undefined8 param13_copy;\n  undefined8 param14_copy;\n  undefined4 local_variable_88;\n  undefined4 local_variable_78;\n  undefined4 local_variable_68;\n  undefined4 local_variable_58;\n  undefined4 local_variable_48;\n  undefined4 local_variable_38;\n  undefined4 local_variable_28;\n  undefined4 local_variable_18;\n  \n  if (flag != '\\0') {\n    local_variable_88 = error_code;\n    local_variable_78 = param2;\n    local_variable_68 = param3;\n    local_variable_58 = param4;\n    local_variable_48 = param5;\n    local_variable_38 = param6;\n    local_variable_28 = param7;\n    local_variable_18 = param8;\n  }\n  buffer = &stack0x00000008;\n  size = 8;\n  local_buffer = local_buffer;\n  length = 0x30;\n  param10_copy = param10;\n  param11_copy = param11;\n  param12_copy = param12;\n  param13_copy = param13;\n  param14_copy = param14;\n  report(param9,&size);\n  exit_status = 1;\n  xexit();\n  error = bfd_get_error();\n  if (error == 0) {\n    error_message = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    error_message = bfd_errmsg(error);\n  }\n  fflush(_stdout);\n  if (exit_status != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",DAT_00106438,exit_status,error_message,additional_info);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",DAT_00106438,error_message,additional_info);\n  return;\n}\n\n",
            "current_name": "report_and_exit_00103bd0",
            "entrypoint": "0x00103bd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103bd0": "report_and_exit_00103bd0",
                "iVar1": "error",
                "in_AL": "flag",
                "in_R10": "additional_info",
                "lVar3": "exit_status",
                "local_18": "local_variable_18",
                "local_28": "local_variable_28",
                "local_38": "local_variable_38",
                "local_48": "local_variable_48",
                "local_58": "local_variable_58",
                "local_68": "local_variable_68",
                "local_78": "local_variable_78",
                "local_88": "local_variable_88",
                "local_90": "param14_copy",
                "local_98": "param13_copy",
                "local_a0": "param12_copy",
                "local_a8": "param11_copy",
                "local_b0": "param10_copy",
                "local_b8": "local_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "length",
                "local_d8": "size",
                "param_1": "error_code",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13",
                "param_14": "param14",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103c70": {
            "additional_data": {
                "DAT_00106438": {
                    "3": "program_name"
                },
                "FUN_001023a0": {
                    "1": "initialize"
                },
                "FUN_00103c70": {
                    "18": "print_error_message",
                    "2": "print_bfd_error_message",
                    "9": "print_error"
                },
                "_stderr": {
                    "1": "stderr",
                    "2": "standard_error"
                },
                "_stdout": {
                    "1": "stdout",
                    "2": "standard_output"
                },
                "fprintf": {
                    "1": "format_print"
                },
                "iVar1": {
                    "1": "error_check",
                    "17": "error",
                    "5": "error_code",
                    "7": "error_status"
                },
                "in_R10": {
                    "1": "unknown_argument",
                    "2": "unknown_cause",
                    "4": "additional_info"
                },
                "param_1": {
                    "1": "error_description",
                    "12": "error_message",
                    "2": "file_name",
                    "5": "error_type"
                },
                "uVar2": {
                    "1": "error_description",
                    "16": "error_message",
                    "3": "error_message_text",
                    "6": "error_string"
                }
            },
            "called": [
                "FUN_00102330",
                "FUN_001023a0",
                "FUN_00102190"
            ],
            "calling": [
                "FUN_001027b0"
            ],
            "code": "\n\n\nvoid print_error_message_00103c70(long error_message)\n\n{\n  int error;\n  undefined8 error_message;\n  undefined8 additional_info;\n  \n  error = bfd_get_error();\n  if (error == 0) {\n    error_message = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    error_message = bfd_errmsg(error);\n  }\n  fflush(standard_output);\n  if (error_message != 0) {\n    format_print(standard_error,\"%s: %s: %s\\n\",DAT_00106438,error_message,error_message,additional_info);\n    return;\n  }\n  format_print(standard_error,\"%s: %s\\n\",DAT_00106438,error_message,additional_info);\n  return;\n}\n\n",
            "current_name": "print_error_message_00103c70",
            "entrypoint": "0x00103c70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103c70": "print_error_message_00103c70",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "fprintf": "format_print",
                "iVar1": "error",
                "in_R10": "additional_info",
                "param_1": "error_message",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103cd0": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00103cd0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103cd0",
            "entrypoint": "0x00103cd0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103cd0": "FUNC_00103cd0"
            },
            "skipped": true,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_00102000",
            "FUN_00102020",
            "FUN_001023a0",
            "FUN_001023e1",
            "FUN_00102540",
            "FUN_001025c0",
            "FUN_00102620",
            "FUN_001026c0",
            "FUN_00102760",
            "FUN_001027b0",
            "FUN_00103bd0",
            "FUN_00103c70"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 78691
}