{
    "functions": {
        "FUN_001030e0": {
            "renaming": {
                "FUN_001030e0": "initialize_completed_flag_001030e0",
                "completed_0": "isCompleted",
                "__dso_handle": "dynamicSharedObjectHandle",
                "deregister_tm_clones": "deregisterTMClones"
            },
            "code": "\nvoid initializeCompletedFlag_001030e0(void)\n\n{\n  if (isCompleted != '\\0') {\n    return;\n  }\n  __cxa_finalize(dynamicSharedObjectHandle);\n  deregisterTMClones();\n  isCompleted = 1;\n  return;\n}\n\n",
            "called": [
                "__cxa_finalize",
                "deregister_tm_clones"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001030e0",
            "calling": [],
            "imported": false,
            "current_name": "initialize_completed_flag_001030e0"
        },
        "FUN_00103d20": {
            "renaming": {
                "FUN_00103d20": "print_error_message_00103d20",
                "param_1": "errorMessage",
                "iVar1": "error",
                "uVar2": "errorMessageString",
                "_stdout": "standardOutput",
                "_stderr": "standardError",
                "program_name": "programName"
            },
            "code": "\n\n\nvoid printErrorMessage_00103d20(long errorMessage)\n\n{\n  int error;\n  undefined8 errorMessageString;\n  undefined8 in_R10;\n  \n  error = bfd_get_error();\n  if (error == 0) {\n    errorMessageString = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    errorMessageString = bfd_errmsg(error);\n  }\n  fflush(standardOutput);\n  if (errorMessage != 0) {\n    fprintf(standardError,\"%s: %s: %s\\n\",programName,errorMessage,errorMessageString,in_R10);\n    return;\n  }\n  fprintf(standardError,\"%s: %s\\n\",programName,errorMessageString,in_R10);\n  return;\n}\n\n",
            "called": [
                "bfd_get_error",
                "bfd_nonfatal.cold",
                "bfd_errmsg"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00103d20",
            "calling": [
                "display_bfd.cold",
                "FUN_001023b6",
                "print_sizes"
            ],
            "imported": false,
            "current_name": "print_error_message_00103d20"
        },
        "FUN_001021b0": {
            "renaming": {},
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n",
            "called": [
                "fputc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001021b0",
            "calling": [
                "usage",
                "list_matching_formats"
            ],
            "imported": false,
            "current_name": "FUN_001021b0"
        },
        "FUN_001022d0": {
            "renaming": {},
            "code": "\nvoid bfd_errmsg(void)\n\n{\n  bfd_errmsg();\n  return;\n}\n\n",
            "called": [
                "bfd_errmsg"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001022d0",
            "calling": [
                "main",
                "bfd_nonfatal"
            ],
            "imported": false,
            "current_name": "FUN_001022d0"
        },
        "FUN_001080f8": {
            "renaming": {},
            "code": "\n\n\n\nint putc(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putc@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001080f8",
            "calling": [
                "putc"
            ],
            "imported": false,
            "current_name": "FUN_001080f8"
        },
        "FUN_00102190": {
            "renaming": {},
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n",
            "called": [
                "xmalloc_set_program_name"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102190",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102190"
        },
        "FUN_00102070": {
            "renaming": {},
            "code": "\n\n\nint puts(char *__s)\n\n{\n  int iVar1;\n  \n  iVar1 = puts(__s);\n  return iVar1;\n}\n\n",
            "called": [
                "puts"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102070",
            "calling": [
                "display_bfd.cold",
                "print_sizes"
            ],
            "imported": false,
            "current_name": "FUN_00102070"
        },
        "FUN_00108050": {
            "renaming": {},
            "code": "\n\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fread@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108050",
            "calling": [
                "fread"
            ],
            "imported": false,
            "current_name": "FUN_00108050"
        },
        "FUN_00102110": {
            "renaming": {},
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n",
            "called": [
                "getopt_long"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102110",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102110"
        },
        "FUN_00102230": {
            "renaming": {},
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n",
            "called": [
                "fflush"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102230",
            "calling": [
                "bfd_nonfatal.cold",
                "list_matching_formats",
                "report"
            ],
            "imported": false,
            "current_name": "FUN_00102230"
        },
        "FUN_00103040": {
            "renaming": {
                "FUN_00103040": "process_entry_00103040",
                "param_1": "entryPoint",
                "param_2": "argc",
                "auStack_8": "auxStack"
            },
            "code": "\nvoid processEntry_00103040 processEntry_00103040(undefined8 entryPoint,undefined8 argc)\n\n{\n  undefined auxStack [8];\n  \n  __libc_start_main(main,argc,&stack0x00000008,0,0,entryPoint,auxStack);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "called": [
                "main",
                "__libc_start_main"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00103040",
            "calling": [],
            "imported": false,
            "current_name": "process_entry_00103040"
        },
        "FUN_00108058": {
            "renaming": {},
            "code": "\n\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* textdomain@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108058",
            "calling": [
                "textdomain"
            ],
            "imported": false,
            "current_name": "FUN_00108058"
        },
        "FUN_00102350": {
            "renaming": {},
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n",
            "called": [
                "__cxa_finalize"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102350",
            "calling": [
                "__do_global_dtors_aux"
            ],
            "imported": false,
            "current_name": "FUN_00102350"
        },
        "FUN_001081a0": {
            "renaming": {},
            "code": "\n\n\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001081a0",
            "calling": [
                "exit"
            ],
            "imported": false,
            "current_name": "FUN_001081a0"
        },
        "FUN_001081a8": {
            "renaming": {},
            "code": "\n\n\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fwrite@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001081a8",
            "calling": [
                "fwrite"
            ],
            "imported": false,
            "current_name": "FUN_001081a8"
        },
        "FUN_001020a0": {
            "renaming": {},
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n",
            "called": [
                "fread"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001020a0",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_001020a0"
        },
        "FUN_001021c0": {
            "renaming": {},
            "code": "\nvoid bfd_init(void)\n\n{\n  bfd_init();\n  return;\n}\n\n",
            "called": [
                "bfd_init"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001021c0",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_001021c0"
        },
        "FUN_001022e0": {
            "renaming": {},
            "code": "\n\n\nint sprintf(char *__s,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = sprintf(__s,__format);\n  return iVar1;\n}\n\n",
            "called": [
                "sprintf"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001022e0",
            "calling": [
                "rprint_number",
                "rprint_number.cold",
                "size_number"
            ],
            "imported": false,
            "current_name": "FUN_001022e0"
        },
        "FUN_00102080": {
            "renaming": {},
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n",
            "called": [
                "ferror"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102080",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102080"
        },
        "FUN_0010274a": {
            "renaming": {
                "FUN_0010274a": "FUNC_0010274a"
            },
            "code": "\nvoid FUNC_0010274a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0010274a",
            "calling": [
                "sysv_internal_printer"
            ],
            "imported": false,
            "current_name": "FUNC_0010274a"
        },
        "FUN_0010274b": {
            "renaming": {
                "FUN_0010274b": "print_error_message_0010274b",
                "uVar1": "errorString",
                "unaff_RBX": "errorFlag",
                "unaff_retaddr": "returnAddress"
            },
            "code": "\n\n\nvoid printErrorMessage_0010274b(void)\n\n{\n  undefined8 errorString;\n  long errorFlag;\n  undefined8 returnAddress;\n  \n  errorString = dcgettext(0,\"cause of error unknown\",5);\n  fflush(_stdout);\n  if (errorFlag != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",program_name);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",program_name,errorString,returnAddress);\n  return;\n}\n\n",
            "called": [
                "dcgettext",
                "fprintf",
                "fflush"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010274b",
            "calling": [
                "bfd_nonfatal"
            ],
            "imported": false,
            "current_name": "print_error_message_0010274b"
        },
        "FUN_00108180": {
            "renaming": {},
            "code": "\n\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* vfprintf@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108180",
            "calling": [
                "vfprintf"
            ],
            "imported": false,
            "current_name": "FUN_00108180"
        },
        "FUN_00102000": {
            "renaming": {
                "FUN_00102000": "initialize_performance_monitoring_00102000",
                "ctx": "context",
                "iVar1": "monitoringStarted"
            },
            "code": "\nint initializePerformanceMonitoring_00102000(EVP_PKEY_CTX *context)\n\n{\n  int monitoringStarted;\n  \n  monitoringStarted = __gmon_start__();\n  return monitoringStarted;\n}\n\n",
            "called": [
                "__gmon_start__"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102000",
            "calling": [],
            "imported": false,
            "current_name": "initialize_performance_monitoring_00102000"
        },
        "FUN_00102120": {
            "renaming": {},
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n",
            "called": [
                "printf"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102120",
            "calling": [
                "display_bfd.cold",
                "rprint_number",
                "rprint_number.cold",
                "main",
                "print_sizes",
                "print_sizes.cold",
                "sysv_one_line"
            ],
            "imported": false,
            "current_name": "FUN_00102120"
        },
        "FUN_00103cc0": {
            "renaming": {
                "FUN_00103cc0": "update_total_and_print_line_00103cc0",
                "param_2": "data",
                "svi_total": "total",
                "sysv_one_line": "printLine"
            },
            "code": "\nvoid updateTotalAndPrintLine_00103cc0(undefined8 param_1,undefined8 *data)\n\n{\n  if ((((*(uint *)((long)data + 0x24) != 0) && (data != (undefined8 *)0x108370)) &&\n      ((*(uint *)((long)data + 0x24) & 0x1000) == 0)) && (data != (undefined8 *)0x108258)) {\n    total = total + data[8];\n    printLine(*data,data[8],data[6]);\n    return;\n  }\n  return;\n}\n\n",
            "called": [
                "sysv_internal_printer.cold",
                "sysv_one_line"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00103cc0",
            "calling": [
                "print_sizes"
            ],
            "imported": false,
            "current_name": "update_total_and_print_line_00103cc0"
        },
        "FUN_00102240": {
            "renaming": {},
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n",
            "called": [
                "fseek"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102240",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102240"
        },
        "FUN_00108068": {
            "renaming": {},
            "code": "\n\n\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fclose@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108068",
            "calling": [
                "fclose"
            ],
            "imported": false,
            "current_name": "FUN_00108068"
        },
        "FUN_00102360": {
            "renaming": {
                "FUN_00102360": "handle_file_error_00102360",
                "piVar1": "errnoPtr",
                "uVar2": "errorMessage",
                "return_code": "errorCode"
            },
            "code": "\nvoid handleFileError_00102360(void)\n\n{\n  int *errnoPtr;\n  undefined8 errorMessage;\n  \n  errnoPtr = __errno_location();\n  if (*errnoPtr == 2) {\n    errorMessage = dcgettext(0,\"\\'%s\\': No such file\",5);\n    non_fatal(errorMessage);\n  }\n  else {\n    strerror(*errnoPtr);\n    errorMessage = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n    non_fatal(errorMessage);\n  }\n  errorCode = 1;\n  return;\n}\n\n",
            "called": [
                "dcgettext",
                "non_fatal",
                "__errno_location",
                "strerror"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102360",
            "calling": [
                "display_file"
            ],
            "imported": false,
            "current_name": "handle_file_error_00102360"
        },
        "FUN_00102a90": {
            "renaming": {
                "FUN_00102a90": "print_section_info_00102a90",
                "param_1": "param_array",
                "lVar1": "section_ptr",
                "extraout_RDX": "extra_param",
                "lVar2": "total_size",
                "extraout_RDX_00": "extra_param1",
                "extraout_RDX_01": "extra_param2",
                "uVar3": "extra_output_param",
                "__ptr": "section_data",
                "iVar4": "counter",
                "cVar5": "is_common",
                "pvVar6": "ptr_variable",
                "pcVar7": "format_string",
                "iVar8": "format_width",
                "lVar9": "size",
                "bVar10": "loop_condition",
                "bVar11": "is_first_file",
                "puVar12": "message_string"
            },
            "code": "\n\n\nvoid printSectionInfo_00102a90(char **param_array)\n\n{\n  long section_ptr;\n  undefined8 extra_param;\n  long total_size;\n  long extra_param1;\n  undefined8 extra_param2;\n  undefined8 extra_output_param;\n  void *section_data;\n  int counter;\n  char is_common;\n  void *ptr_variable;\n  char *format_string;\n  int format_width;\n  long size;\n  bool loop_condition;\n  bool is_first_file;\n  undefined *message_string;\n  \n  if ((show_common == 0) || (common_size = 0, (*(uint *)((long)param_array + 0x44) & 0x52) != 0x10))\n  goto LAB_00102aa8;\n  size = (**(code **)(param_array[1] + 0x1f8))();\n  if (size < 0) {\n    bfd_nonfatal(*param_array);\n    xexit(1);\nLAB_001026b4:\n    section_data = (void *)xmalloc();\n  }\n  else {\n    section_data = (void *)0x0;\n    if (size != 0) goto LAB_001026b4;\n  }\n  ptr_variable = section_data;\n  size = (**(code **)(param_array[1] + 0x200))(param_array);\n  is_common = (char)ptr_variable;\n  if (size < 0) {\n    bfd_nonfatal(*param_array);\n    xexit(1);\n    total_size = extra_param1;\n  }\n  else {\n    is_common = '\\0';\n    total_size = common_size;\n    while (loop_condition = size != 0, size = size + -1, loop_condition) {\n      section_ptr = *(long *)((long)section_data + size * 8);\n      if (((*(byte *)(*(long *)(section_ptr + 0x20) + 0x25) & 0x10) != 0) &&\n         ((*(byte *)(section_ptr + 0x19) & 1) == 0)) {\n        total_size = total_size + *(long *)(section_ptr + 0x10);\n        is_common = '\\x01';\n      }\n    }\n  }\n  if (is_common != '\\0') {\n    common_size = total_size;\n  }\n  free(section_data);\nLAB_00102aa8:\n  if (selected_output_format == 1) {\n    svi_total = 0;\n    svi_maxvma = 0;\n    svi_namelen = 0;\n    bfd_map_over_sections(param_array,sysv_internal_sizer,0);\n    if (show_common != 0) {\n      if ((int)svi_namelen < 5) {\n        svi_namelen = 5;\n      }\n      svi_total = svi_total + common_size;\n    }\n    svi_vmalen = size_number(svi_maxvma);\n    if (svi_vmalen < 4) {\n      svi_vmalen = 4;\n    }\n    svi_sizelen = size_number();\n    if (svi_sizelen < 4) {\n      svi_sizelen = 4;\n    }\n    svi_total = 0;\n    printf(\"%s  \",*param_array);\n    extra_output_param = extra_param2;\n    if ((undefined8 *)param_array[0x1d] != (undefined8 *)0x0) {\n      printf(\" (ex %s)\",*(undefined8 *)param_array[0x1d]);\n      extra_output_param = extra_param;\n    }\n    message_string = &DAT_001040fc;\n    printf(\":\\n%-*s   %*s   %*s\\n\",(ulong)svi_namelen,\"section\",(ulong)svi_sizelen,&DAT_00104067,\n           (ulong)svi_vmalen,&DAT_001040fc,extra_output_param);\n    bfd_map_over_sections(param_array,sysv_internal_printer,0);\n    if (show_common != 0) {\n      svi_total = svi_total + common_size;\n      sysv_one_line(\"*COM*\",common_size,0,message_string);\n    }\n    printf(\"%-*s   \",(ulong)svi_namelen,\"Total\");\n    rprint_number(svi_sizelen,svi_total);\n    puts(\"\\n\");\n    return;\n  }\n  format_width = (-(uint)(selected_output_format == 0) & 0xfffffffd) + 10;\n  loop_condition = selected_output_format == 0;\n  bsssize = 0;\n  datasize = 0;\n  textsize = 0;\n  bfd_map_over_sections(param_array,berkeley_or_gnu_sum,0);\n  bsssize = bsssize + common_size;\n  counter = files_seen_0 + 1;\n  is_first_file = files_seen_0 == 0;\n  files_seen_0 = counter;\n  if (is_first_file) {\n    if (selected_output_format == 0) {\n      format_string = \"   text\\t   data\\t    bss\\t    dec\\t    hex\\tfilename\";\n      if (radix == 1) {\n        format_string = \"   text\\t   data\\t    bss\\t    oct\\t    hex\\tfilename\";\n      }\n      puts(format_string);\n    }\n    else {\n      puts(\"      text       data        bss      total filename\");\n    }\n  }\n  size = textsize + datasize + bsssize;\n  if (show_totals != 0) {\n    total_textsize = total_textsize + textsize;\n    total_datasize = total_datasize + datasize;\n    total_bsssize = total_bsssize + bsssize;\n  }\n  counter = (int)(char)((-loop_condition & 0xe9U) + 0x20);\n  rprint_number(format_width);\n  putc(counter,_stdout);\n  rprint_number(format_width,datasize);\n  putc(counter,_stdout);\n  rprint_number(format_width,bsssize);\n  putc(counter,_stdout);\n  if (selected_output_format == 0) {\n    format_string = \"%7lu\\t%7lx\";\n    if (radix == 1) {\n      format_string = \"%7lo\\t%7lx\";\n    }\n    printf(format_string,size,size);\n  }\n  else {\n    rprint_number(format_width,size);\n  }\n  putc(counter,_stdout);\n  fputs(*param_array,_stdout);\n  if ((undefined8 *)param_array[0x1d] == (undefined8 *)0x0) {\n    return;\n  }\n  printf(\" (ex %s)\",*(undefined8 *)param_array[0x1d]);\n  return;\n}\n\n",
            "called": [
                "putc",
                "sysv_internal_printer",
                "puts",
                "xmalloc",
                "printf",
                "sysv_internal_sizer",
                "berkeley_or_gnu_sum",
                "rprint_number",
                "fputs",
                "free",
                "print_sizes.cold",
                "size_number",
                "xexit",
                "bfd_map_over_sections",
                "sysv_one_line",
                "bfd_nonfatal"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102a90",
            "calling": [
                "display_bfd.cold",
                "display_bfd"
            ],
            "imported": false,
            "current_name": "print_section_info_00102a90"
        },
        "FUN_00108108": {
            "renaming": {},
            "code": "\n\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fprintf@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108108",
            "calling": [
                "fprintf"
            ],
            "imported": false,
            "current_name": "FUN_00108108"
        },
        "FUN_0010259c": {
            "renaming": {
                "FUN_0010259c": "print_ex_string_0010259c",
                "in_RAX": "inputString"
            },
            "code": "\nvoid printExString_0010259c(void)\n\n{\n  undefined8 *inputString;\n  \n  printf(\" (ex %s)\",*inputString);\n  return;\n}\n\n",
            "called": [
                "printf"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010259c",
            "calling": [
                "print_sizes"
            ],
            "imported": false,
            "current_name": "print_ex_string_0010259c"
        },
        "FUN_001022f0": {
            "renaming": {},
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n",
            "called": [
                "exit"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001022f0",
            "calling": [
                "usage",
                "main"
            ],
            "imported": false,
            "current_name": "FUN_001022f0"
        },
        "FUN_00102e90": {
            "renaming": {
                "FUN_00102e90": "print_formatted_value_00102e90",
                "param_1": "width",
                "param_2": "value",
                "__format": "format",
                "acStack_48": "formattedValue"
            },
            "code": "\nvoid printFormattedValue_00102e90(ulong width,undefined8 value)\n\n{\n  char *format;\n  char formattedValue [56];\n  \n  if (radix == 0) {\n    sprintf(formattedValue,\"%lu\",value);\n    printf(\"%*s\",width & 0xffffffff,formattedValue);\n  }\n  else {\n    format = \"0x%lx\";\n    if (radix == 1) {\n      format = \"0%lo\";\n    }\n    sprintf(formattedValue,format,value);\n    printf(\"%*s\",width & 0xffffffff,formattedValue);\n  }\n  return;\n}\n\n",
            "called": [
                "sprintf",
                "rprint_number.cold",
                "printf"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102e90",
            "calling": [
                "main",
                "print_sizes",
                "sysv_one_line"
            ],
            "imported": false,
            "current_name": "print_formatted_value_00102e90"
        },
        "FUN_001020b0": {
            "renaming": {},
            "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n",
            "called": [
                "textdomain"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001020b0",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_001020b0"
        },
        "FUN_001021d0": {
            "renaming": {},
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n",
            "called": [
                "putc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001021d0",
            "calling": [
                "main",
                "print_sizes",
                "report"
            ],
            "imported": false,
            "current_name": "FUN_001021d0"
        },
        "FUN_00102d70": {
            "renaming": {
                "FUN_00102d70": "update_size_based_on_flags_00102d70",
                "param_1": "param1",
                "param_2": "param2",
                "uVar1": "flag",
                "lVar2": "size"
            },
            "code": "\nvoid updateSizeBasedOnFlags_00102d70(undefined8 param1,long param2)\n\n{\n  uint flag;\n  long size;\n  \n  flag = *(uint *)(param2 + 0x24);\n  if ((flag & 1) != 0) {\n    size = *(long *)(param2 + 0x40);\n    if (((flag & 0x10) != 0) || ((selected_output_format == 0 && ((flag & 8) != 0)))) {\n      textsize = textsize + size;\n      return;\n    }\n    if ((flag & 0x100) != 0) {\n      datasize = datasize + size;\n      return;\n    }\n    bsssize = bsssize + size;\n  }\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102d70",
            "calling": [
                "print_sizes"
            ],
            "imported": false,
            "current_name": "update_size_based_on_flags_00102d70"
        },
        "FUN_00108110": {
            "renaming": {},
            "code": "\n\n\n\nlong ftell(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ftell@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108110",
            "calling": [
                "ftell"
            ],
            "imported": false,
            "current_name": "FUN_00108110"
        },
        "FUN_00108198": {
            "renaming": {},
            "code": "\n\n\n\nint sprintf(char *__s,char *__format,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* sprintf@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108198",
            "calling": [
                "sprintf"
            ],
            "imported": false,
            "current_name": "FUN_00108198"
        },
        "FUN_00102090": {
            "renaming": {},
            "code": "\nvoid bfd_set_default_target(void)\n\n{\n  bfd_set_default_target();\n  return;\n}\n\n",
            "called": [
                "bfd_set_default_target"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102090",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102090"
        },
        "FUN_001026f6": {
            "renaming": {
                "FUN_001026f6": "print_formatted_value_001026f6",
                "in_EAX": "value",
                "__format": "formatString"
            },
            "code": "\nvoid printFormattedValue_001026f6(void)\n\n{\n  int value;\n  char *formatString;\n  \n  formatString = \"0x%lx\";\n  if (value == 1) {\n    formatString = \"0%lo\";\n  }\n  sprintf(&stack0x00000000,formatString);\n  strlen(&stack0x00000000);\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001026f6",
            "calling": [
                "size_number"
            ],
            "imported": false,
            "current_name": "print_formatted_value_001026f6"
        },
        "FUN_001026ea": {
            "renaming": {
                "FUN_001026ea": "initialize_max_vma_001026ea",
                "in_RAX": "vmaValue",
                "unaff_retaddr": "returnAddress"
            },
            "code": "\nundefined8 initializeMaxVMA_001026ea(void)\n\n{\n  undefined8 vmaValue;\n  undefined8 returnAddress;\n  \n  svi_maxvma = vmaValue;\n  return returnAddress;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001026ea",
            "calling": [
                "sysv_internal_sizer"
            ],
            "imported": false,
            "current_name": "initialize_max_vma_001026ea"
        },
        "FUN_00102fe0": {
            "renaming": {
                "FUN_00102fe0": "print_function_details_00102fe0",
                "param_1": "file_name",
                "param_2": "file_size",
                "param_3": "file_vm",
                "svi_namelen": "name_length",
                "svi_sizelen": "size_length",
                "svi_vmalen": "vm_length"
            },
            "code": "\nvoid print_function_details_00102fe0(undefined8 file_name,undefined8 file_size,undefined8 file_vm)\n\n{\n  printf(\"%-*s   \",(ulong)name_length,file_name);\n  rprint_number(size_length,file_size);\n  printf(\"   \");\n  rprint_number(vm_length,file_vm);\n  putchar(10);\n  return;\n}\n\n",
            "called": [
                "rprint_number",
                "printf",
                "putchar"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102fe0",
            "calling": [
                "sysv_internal_printer",
                "print_sizes"
            ],
            "imported": false,
            "current_name": "print_function_details_00102fe0"
        },
        "FUN_00102130": {
            "renaming": {},
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n",
            "called": [
                "xrealloc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102130",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102130"
        },
        "FUN_00102250": {
            "renaming": {},
            "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = setlocale(__category,__locale);\n  return pcVar1;\n}\n\n",
            "called": [
                "setlocale"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102250",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102250"
        },
        "FUN_00108078": {
            "renaming": {},
            "code": "\n\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* bindtextdomain@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108078",
            "calling": [
                "bindtextdomain"
            ],
            "imported": false,
            "current_name": "FUN_00108078"
        },
        "FUN_00108080": {
            "renaming": {},
            "code": "\n\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* dcgettext@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108080",
            "calling": [
                "dcgettext"
            ],
            "imported": false,
            "current_name": "FUN_00108080"
        },
        "FUN_001080a8": {
            "renaming": {},
            "code": "\n\n\n\nint fputs(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fputs@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001080a8",
            "calling": [
                "fputs"
            ],
            "imported": false,
            "current_name": "FUN_001080a8"
        },
        "FUN_00102f40": {
            "renaming": {
                "FUN_00102f40": "report_data_00102f40",
                "param_1": "result_1",
                "param_2": "result_2",
                "param_3": "result_3",
                "param_4": "result_4",
                "param_5": "result_5",
                "param_6": "result_6",
                "param_7": "result_7",
                "param_8": "result_8",
                "param_9": "data",
                "param_10": "value_1",
                "param_11": "value_2",
                "param_12": "value_3",
                "param_13": "value_4",
                "param_14": "value_5",
                "in_AL": "condition",
                "local_d8": "length",
                "local_d4": "size",
                "local_d0": "stack_ptr",
                "local_c8": "temp_buffer",
                "local_b8": "uninitialized_buffer",
                "local_b0": "value_1_copy",
                "local_a8": "value_2_copy",
                "local_a0": "value_3_copy",
                "local_98": "value_4_copy",
                "local_90": "value_5_copy",
                "local_88": "result_1_copy",
                "local_78": "result_2_copy",
                "local_68": "result_3_copy",
                "local_58": "result_4_copy",
                "local_48": "result_5_copy",
                "local_38": "result_6_copy",
                "local_28": "result_7_copy",
                "local_18": "result_8_copy"
            },
            "code": "\nvoid reportData_00102f40(undefined4 result_1,undefined4 result_2,undefined4 result_3,undefined4 result_4,\n                 undefined4 result_5,undefined4 result_6,undefined4 result_7,undefined4 result_8,\n                 undefined8 data,undefined8 value_1,undefined8 value_2,undefined8 value_3,\n                 undefined8 value_4,undefined8 value_5)\n\n{\n  char condition;\n  undefined4 length;\n  undefined4 size;\n  undefined *stack_ptr;\n  undefined *temp_buffer;\n  undefined uninitialized_buffer [8];\n  undefined8 value_1_copy;\n  undefined8 value_2_copy;\n  undefined8 value_3_copy;\n  undefined8 value_4_copy;\n  undefined8 value_5_copy;\n  undefined4 result_1_copy;\n  undefined4 result_2_copy;\n  undefined4 result_3_copy;\n  undefined4 result_4_copy;\n  undefined4 result_5_copy;\n  undefined4 result_6_copy;\n  undefined4 result_7_copy;\n  undefined4 result_8_copy;\n  \n  if (condition != '\\0') {\n    result_1_copy = result_1;\n    result_2_copy = result_2;\n    result_3_copy = result_3;\n    result_4_copy = result_4;\n    result_5_copy = result_5;\n    result_6_copy = result_6;\n    result_7_copy = result_7;\n    result_8_copy = result_8;\n  }\n  stack_ptr = &stack0x00000008;\n  length = 8;\n  temp_buffer = uninitialized_buffer;\n  size = 0x30;\n  value_1_copy = value_1;\n  value_2_copy = value_2;\n  value_3_copy = value_3;\n  value_4_copy = value_4;\n  value_5_copy = value_5;\n  report(data,&length);\n  return;\n}\n\n",
            "called": [
                "report"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102f40",
            "calling": [
                "main",
                "display_file.cold",
                "display_file"
            ],
            "imported": false,
            "current_name": "report_data_00102f40"
        },
        "FUN_001021e0": {
            "renaming": {},
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n",
            "called": [
                "fprintf"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001021e0",
            "calling": [
                "usage",
                "bfd_nonfatal.cold",
                "list_matching_formats",
                "main",
                "report"
            ],
            "imported": false,
            "current_name": "FUN_001021e0"
        },
        "FUN_001020c0": {
            "renaming": {},
            "code": "\nvoid bfd_openr(void)\n\n{\n  bfd_openr();\n  return;\n}\n\n",
            "called": [
                "bfd_openr"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001020c0",
            "calling": [
                "display_file"
            ],
            "imported": false,
            "current_name": "FUN_001020c0"
        },
        "FUN_00103070": {
            "renaming": {
                "FUN_00103070": "FUNC_00103070"
            },
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00103083) */\n/* WARNING: Removing unreachable block (ram,0x0010308f) */\n\nvoid FUNC_00103070(void)\n\n{\n  return;\n}\n\n",
            "called": [
                "_ITM_deregisterTMCloneTable"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x00103070",
            "calling": [
                "__do_global_dtors_aux"
            ],
            "imported": false,
            "current_name": "FUNC_00103070"
        },
        "FUN_00108000": {
            "renaming": {},
            "code": "\n\n\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* free@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108000",
            "calling": [
                "free"
            ],
            "imported": false,
            "current_name": "FUN_00108000"
        },
        "FUN_00108088": {
            "renaming": {},
            "code": "\n\n\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strlen@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108088",
            "calling": [
                "strlen"
            ],
            "imported": false,
            "current_name": "FUN_00108088"
        },
        "FUN_00108120": {
            "renaming": {},
            "code": "\n\n\n\nint stat(char *__file,stat *__buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* stat@GLIBC_2.33 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108120",
            "calling": [
                "stat"
            ],
            "imported": false,
            "current_name": "FUN_00108120"
        },
        "FUN_00108008": {
            "renaming": {},
            "code": "\n\n\n\nint putchar(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putchar@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108008",
            "calling": [
                "putchar"
            ],
            "imported": false,
            "current_name": "FUN_00108008"
        },
        "FUN_00108128": {
            "renaming": {},
            "code": "\n\n\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strtol@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108128",
            "calling": [
                "strtol"
            ],
            "imported": false,
            "current_name": "FUN_00108128"
        },
        "FUN_00102db0": {
            "renaming": {
                "FUN_00102db0": "report_and_exit_00102db0",
                "param_1": "firstParam",
                "param_2": "secondParam",
                "param_3": "thirdParam",
                "param_4": "fourthParam",
                "param_5": "fifthParam",
                "param_6": "sixthParam",
                "param_7": "seventhParam",
                "param_8": "eighthParam",
                "param_9": "paramA",
                "param_10": "paramB",
                "param_11": "paramC",
                "param_12": "paramD",
                "param_13": "paramE",
                "param_14": "paramF",
                "in_AL": "inputFlag",
                "__format": "formatString",
                "uVar1": "result",
                "acStack_110": "outputString",
                "local_d8": "bufferSize",
                "local_d4": "arraySize",
                "local_d0": "buffer",
                "local_c8": "localBuffer",
                "local_b8": "temporaryBuffer",
                "local_b0": "tempB0",
                "local_a8": "tempA8",
                "local_a0": "tempA0",
                "local_98": "temp98",
                "local_90": "temp90",
                "local_88": "temp88",
                "local_78": "temp78",
                "local_68": "temp68",
                "local_58": "temp58",
                "local_48": "temp48",
                "local_38": "temp38",
                "local_28": "temp28",
                "local_18": "temp18",
                "radix": "numberBase"
            },
            "code": "\nvoid reportAndExit_00102db0(undefined4 firstParam,undefined4 secondParam,undefined4 thirdParam,undefined4 fourthParam,\n                 undefined4 fifthParam,undefined4 sixthParam,undefined4 seventhParam,undefined4 eighthParam,\n                 undefined8 paramA,undefined8 paramB,undefined8 paramC,undefined8 paramD,\n                 undefined8 paramE,undefined8 paramF)\n\n{\n  char inputFlag;\n  char *formatString;\n  undefined8 result;\n  char outputString [48];\n  undefined4 bufferSize;\n  undefined4 arraySize;\n  undefined *buffer;\n  undefined *localBuffer;\n  undefined temporaryBuffer [8];\n  undefined8 tempB0;\n  undefined8 tempA8;\n  undefined8 tempA0;\n  undefined8 temp98;\n  undefined8 temp90;\n  undefined4 temp88;\n  undefined4 temp78;\n  undefined4 temp68;\n  undefined4 temp58;\n  undefined4 temp48;\n  undefined4 temp38;\n  undefined4 temp28;\n  undefined4 temp18;\n  \n  if (inputFlag != '\\0') {\n    temp88 = firstParam;\n    temp78 = secondParam;\n    temp68 = thirdParam;\n    temp58 = fourthParam;\n    temp48 = fifthParam;\n    temp38 = sixthParam;\n    temp28 = seventhParam;\n    temp18 = eighthParam;\n  }\n  buffer = &stack0x00000008;\n  bufferSize = 8;\n  localBuffer = temporaryBuffer;\n  arraySize = 0x30;\n  tempB0 = paramB;\n  tempA8 = paramC;\n  tempA0 = paramD;\n  temp98 = paramE;\n  temp90 = paramF;\n  report(paramA,&bufferSize);\n  result = 1;\n  xexit(1);\n  if (numberBase == 0) {\n    formatString = \"%lu\";\n  }\n  else {\n    formatString = \"0x%lx\";\n    if (numberBase == 1) {\n      formatString = \"0%lo\";\n    }\n  }\n  sprintf(outputString,formatString,result);\n  strlen(outputString);\n  return;\n}\n\n",
            "called": [
                "xexit",
                "report"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102db0",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "report_and_exit_00102db0"
        },
        "FUN_00102260": {
            "renaming": {},
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n",
            "called": [
                "bfd_set_error_program_name"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102260",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102260"
        },
        "FUN_00102020": {
            "renaming": {
                "FUN_00102020": "execute_function_00102020"
            },
            "code": "\nvoid executeFunction_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)(undefined *)0x0)();\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102020",
            "calling": [],
            "imported": false,
            "current_name": "execute_function_00102020"
        },
        "FUN_00102140": {
            "renaming": {},
            "code": "\n\n\nint fputs(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputs(__s,__stream);\n  return iVar1;\n}\n\n",
            "called": [
                "fputs"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102140",
            "calling": [
                "print_sizes"
            ],
            "imported": false,
            "current_name": "FUN_00102140"
        },
        "FUN_001081d0": {
            "renaming": {},
            "code": "\n\n\n\nchar * strerror(int __errnum)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strerror@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001081d0",
            "calling": [
                "strerror"
            ],
            "imported": false,
            "current_name": "FUN_001081d0"
        },
        "FUN_00102300": {
            "renaming": {},
            "code": "\n\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fwrite(__ptr,__size,__n,__s);\n  return sVar1;\n}\n\n",
            "called": [
                "fwrite"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102300",
            "calling": [
                "display_bfd.cold",
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102300"
        },
        "FUN_00108090": {
            "renaming": {},
            "code": "\n\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getopt_long@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108090",
            "calling": [
                "getopt_long"
            ],
            "imported": false,
            "current_name": "FUN_00108090"
        },
        "FUN_001024d2": {
            "renaming": {
                "FUN_001024d2": "check_and_print_file_info_001024d2",
                "unaff_RBX": "paramPtr",
                "param_7": "formatParam",
                "iVar2": "error",
                "cVar1": "matchingFormat",
                "lVar3": "failingCommand"
            },
            "code": "\n\n\nvoid checkAndPrintFileInfo_001024d2(void)\n\n{\n  char matchingFormat;\n  int error;\n  long failingCommand;\n  undefined8 *paramPtr;\n  undefined8 formatParam;\n  \n  error = bfd_get_error();\n  if (error == 0xd) {\n    bfd_nonfatal(*paramPtr);\n    list_matching_formats(formatParam);\n    return_code = 3;\n  }\n  else {\n    matchingFormat = bfd_check_format_matches();\n    if (matchingFormat == '\\0') {\n      bfd_nonfatal(*paramPtr);\n      error = bfd_get_error();\n      if (error == 0xd) {\n        list_matching_formats(formatParam);\n      }\n      return_code = 3;\n    }\n    else {\n      print_sizes();\n      fwrite(\" (core file\",1,0xb,_stdout);\n      failingCommand = bfd_core_file_failing_command();\n      if (failingCommand != 0) {\n        printf(\" invoked as %s\",failingCommand);\n      }\n      puts(\")\\n\");\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "fwrite",
                "bfd_get_error",
                "list_matching_formats",
                "puts",
                "print_sizes",
                "printf",
                "bfd_check_format_matches",
                "bfd_nonfatal",
                "bfd_core_file_failing_command"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001024d2",
            "calling": [
                "display_bfd"
            ],
            "imported": false,
            "current_name": "check_and_print_file_info_001024d2"
        },
        "FUN_001020d0": {
            "renaming": {},
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n",
            "called": [
                "fclose"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001020d0",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_001020d0"
        },
        "FUN_001021f0": {
            "renaming": {},
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n",
            "called": [
                "ftell"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001021f0",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_001021f0"
        },
        "FUN_001030a0": {
            "renaming": {
                "FUN_001030a0": "FUNC_001030a0"
            },
            "code": "\n/* WARNING: Removing unreachable block (ram,0x001030c4) */\n/* WARNING: Removing unreachable block (ram,0x001030d0) */\n\nvoid FUNC_001030a0(void)\n\n{\n  return;\n}\n\n",
            "called": [
                "_ITM_registerTMCloneTable"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x001030a0",
            "calling": [
                "frame_dummy"
            ],
            "imported": false,
            "current_name": "FUNC_001030a0"
        },
        "FUN_001023b6": {
            "renaming": {
                "FUN_001023b6": "process_archived_files_001023b6",
                "unaff_RBX": "archive_files",
                "lVar3": "current_file_ptr",
                "lVar4": "previous_file_ptr",
                "iVar2": "bfd_error_code",
                "cVar1": "close_success"
            },
            "code": "\nvoid process_archived_files_001023b6(void)\n\n{\n  char close_success;\n  int bfd_error_code;\n  long current_file_ptr;\n  undefined8 *archive_files;\n  long previous_file_ptr;\n  \n  current_file_ptr = 0;\n  do {\n    previous_file_ptr = current_file_ptr;\n    bfd_set_error(0);\n    current_file_ptr = bfd_openr_next_archived_file();\n    if (current_file_ptr == 0) {\n      bfd_error_code = bfd_get_error();\n      if (bfd_error_code != 9) {\n        bfd_nonfatal(*archive_files);\n        return_code = 2;\n      }\n      if (previous_file_ptr != 0) {\n        bfd_close(previous_file_ptr);\n      }\n      break;\n    }\n    display_bfd();\n  } while ((previous_file_ptr == 0) || (bfd_close(), previous_file_ptr != current_file_ptr));\n  close_success = bfd_close();\n  if (close_success == '\\0') {\n    bfd_nonfatal();\n    return_code = 1;\n  }\n  return;\n}\n\n",
            "called": [
                "bfd_openr_next_archived_file",
                "bfd_get_error",
                "bfd_set_error",
                "bfd_close",
                "display_bfd",
                "bfd_nonfatal"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001023b6",
            "calling": [
                "display_file"
            ],
            "imported": false,
            "current_name": "process_archived_files_001023b6"
        },
        "FUN_00108010": {
            "renaming": {},
            "code": "\n\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@GLIBC_2.34 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108010",
            "calling": [
                "_start"
            ],
            "imported": false,
            "current_name": "FUN_00108010"
        },
        "FUN_00108098": {
            "renaming": {},
            "code": "\n\n\n\nint printf(char *__format,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* printf@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108098",
            "calling": [
                "printf"
            ],
            "imported": false,
            "current_name": "FUN_00108098"
        },
        "FUN_00108130": {
            "renaming": {},
            "code": "\n\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcpy@GLIBC_2.14 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108130",
            "calling": [
                "memcpy"
            ],
            "imported": false,
            "current_name": "FUN_00108130"
        },
        "FUN_0010281b": {
            "renaming": {
                "FUN_0010281b": "print_section_sizes_0010281b",
                "param_1": "outputFile",
                "param_2": "exitCode",
                "lVar1": "programName",
                "pcVar2": "translation",
                "__ptr": "targetList",
                "plVar3": "ptr",
                "fprintf": "printToOutput",
                "dcgettext": "getTranslation",
                "program_name": "programName",
                "bfd_target_list": "getTargetList",
                "fputc": "writeCharacter",
                "free": "freeMemory",
                "exit": "exitProgram"
            },
            "code": "\nvoid printSectionSizes_0010281b(FILE *outputFile,int exitCode)\n\n{\n  long programName;\n  char *translation;\n  long *targetList;\n  long *ptr;\n  \n  programName = programName;\n  translation = (char *)getTranslation(0,\"Usage: %s [option(s)] [file(s)]\\n\",5);\n  printToOutput(outputFile,translation,programName);\n  translation = (char *)getTranslation(0,\" Displays the sizes of sections inside binary files\\n\",5);\n  printToOutput(outputFile,translation);\n  translation = (char *)getTranslation(0,\" If no input file(s) are specified, a.out is assumed\\n\",5);\n  printToOutput(outputFile,translation);\n  translation = (char *)getTranslation(0,\n                             \" The options are:\\n  -A|-B|-G  --format={sysv|berkeley|gnu}  Select output style (default is %s)\\n  -o|-d|-x  --radix={8|10|16}         Display numbers in octal, decimal or hex\\n  -t        --totals                  Display the total sizes (Berkeley only)\\n  -f                                  Ignored.\\n            --common                  Display total size for *COM* syms\\n            --target=<bfdname>        Set the binary file format\\n            @<file>                   Read options from <file>\\n  -h|-H|-?  --help                    Display this information\\n  -v|-V     --version                 Display the program\\'s version\\n\\n\"\n                             ,5);\n  printToOutput(outputFile,translation,\"berkeley\");\n  programName = programName;\n  if (programName == 0) {\n    translation = (char *)getTranslation(0,\"Supported targets:\",5);\n    printToOutput(outputFile,translation);\n  }\n  else {\n    translation = (char *)getTranslation(0,\"%s: supported targets:\",5);\n    printToOutput(outputFile,translation,programName);\n  }\n  targetList = (long *)getTargetList();\n  ptr = targetList;\n  while( true ) {\n    programName = *ptr;\n    ptr = ptr + 1;\n    if (programName == 0) break;\n    printToOutput(outputFile,\" %s\");\n  }\n  writeCharacter(10,outputFile);\n  freeMemory(targetList);\n  if (exitCode == 0) {\n    translation = (char *)getTranslation(0,\"Report bugs to %s\\n\",5);\n    printToOutput(outputFile,translation,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  exitProgram(exitCode);\n}\n\n",
            "called": [
                "exit",
                "dcgettext",
                "free",
                "fputc",
                "fprintf",
                "bfd_target_list"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010281b",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "print_section_sizes_0010281b"
        },
        "FUN_00102ee0": {
            "renaming": {
                "FUN_00102ee0": "print_error_message_00102ee0",
                "param_1": "message",
                "param_2": "args",
                "_stdout": "standard_output",
                "_stderr": "standard_error",
                "program_name": "name",
                "fprintf": "print_formatted",
                "putc": "put_character"
            },
            "code": "\n\n\nvoid print_error_message_00102ee0(char *message,__gnuc_va_list args)\n\n{\n  fflush(standard_output);\n  print_formatted(standard_error,\"%s: \",name);\n  vprint_formatted(standard_error,message,args);\n  put_character(10,standard_error);\n  return;\n}\n\n",
            "called": [
                "putc",
                "fprintf",
                "vfprintf",
                "fflush"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102ee0",
            "calling": [
                "non_fatal",
                "fatal"
            ],
            "imported": false,
            "current_name": "print_error_message_00102ee0"
        },
        "FUN_00108018": {
            "renaming": {},
            "code": "\n\n\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __errno_location@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108018",
            "calling": [
                "__errno_location"
            ],
            "imported": false,
            "current_name": "FUN_00108018"
        },
        "FUN_00102310": {
            "renaming": {},
            "code": "\nvoid bfd_check_format(void)\n\n{\n  bfd_check_format();\n  return;\n}\n\n",
            "called": [
                "bfd_check_format"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102310",
            "calling": [
                "display_file",
                "display_bfd"
            ],
            "imported": false,
            "current_name": "FUN_00102310"
        },
        "FUN_00108138": {
            "renaming": {},
            "code": "\n\n\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fflush@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108138",
            "calling": [
                "fflush"
            ],
            "imported": false,
            "current_name": "FUN_00108138"
        },
        "FUN_00102150": {
            "renaming": {},
            "code": "\nvoid bfd_target_list(void)\n\n{\n  bfd_target_list();\n  return;\n}\n\n",
            "called": [
                "bfd_target_list"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102150",
            "calling": [
                "usage"
            ],
            "imported": false,
            "current_name": "FUN_00102150"
        },
        "FUN_00102270": {
            "renaming": {},
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "called": [
                "memmove"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102270",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102270"
        },
        "FUN_00103120": {
            "renaming": {},
            "code": "\nvoid register_tm_clones(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n",
            "called": [
                "register_tm_clones"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00103120",
            "calling": [],
            "imported": false,
            "current_name": "FUN_00103120"
        },
        "FUN_00102030": {
            "renaming": {},
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n",
            "called": [
                "free"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102030",
            "calling": [
                "usage",
                "list_matching_formats",
                "main",
                "print_sizes"
            ],
            "imported": false,
            "current_name": "FUN_00102030"
        },
        "FUN_001081e0": {
            "renaming": {},
            "code": "\n\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001081e0",
            "calling": [
                "__cxa_finalize"
            ],
            "imported": false,
            "current_name": "FUN_001081e0"
        },
        "FUN_00102710": {
            "renaming": {
                "FUN_00102710": "print_formatted_value_00102710",
                "in_EAX": "inputValue",
                "unaff_EBX": "formatWidth",
                "__format": "formatString"
            },
            "code": "\nvoid printFormattedValue_00102710(void)\n\n{\n  int inputValue;\n  uint formatWidth;\n  char *formatString;\n  \n  formatString = \"0x%lx\";\n  if (inputValue == 1) {\n    formatString = \"0%lo\";\n  }\n  sprintf(&stack0x00000000,formatString);\n  printf(\"%*s\",(ulong)formatWidth);\n  return;\n}\n\n",
            "called": [
                "sprintf",
                "printf"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102710",
            "calling": [
                "rprint_number"
            ],
            "imported": false,
            "current_name": "print_formatted_value_00102710"
        },
        "FUN_0010278c": {
            "renaming": {
                "FUN_0010278c": "print_matching_formats_0010278c",
                "param_1": "formats",
                "uVar1": "programName",
                "__format": "formatString",
                "plVar2": "formatPtr"
            },
            "code": "\n\n\nvoid printMatchingFormats_0010278c(long *formats)\n\n{\n  undefined8 programName;\n  char *formatString;\n  long *formatPtr;\n  \n  fflush(_stdout);\n  programName = program_name;\n  formatString = (char *)dcgettext(0,\"%s: Matching formats:\",5);\n  fprintf(_stderr,formatString,programName);\n  for (formatPtr = formats; *formatPtr != 0; formatPtr = formatPtr + 1) {\n    fprintf(_stderr,\" %s\");\n  }\n  free(formats);\n  fputc(10,_stderr);\n  return;\n}\n\n",
            "called": [
                "dcgettext",
                "free",
                "fputc",
                "fprintf",
                "fflush"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010278c",
            "calling": [
                "display_bfd.cold"
            ],
            "imported": false,
            "current_name": "print_matching_formats_0010278c"
        },
        "FUN_001022a0": {
            "renaming": {},
            "code": "\nvoid bfd_close(void)\n\n{\n  bfd_close();\n  return;\n}\n\n",
            "called": [
                "bfd_close"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001022a0",
            "calling": [
                "FUN_001023b6"
            ],
            "imported": false,
            "current_name": "FUN_001022a0"
        },
        "FUN_00103c50": {
            "renaming": {
                "FUN_00103c50": "process_binary_data_00103c50",
                "param_2": "binaryData",
                "pcVar1": "pointerValue",
                "sVar2": "length",
                "svi_namelen": "maxNameLength",
                "svi_total": "totalSize",
                "svi_maxvma": "maxVMA"
            },
            "code": "\n/* WARNING: Type propagation algorithm not settling */\n\nundefined8 processBinaryData_00103c50(undefined8 param_1,char **binaryData,undefined8 param_3,undefined8 param_4)\n\n{\n  char *pointerValue;\n  undefined8 in_RAX;\n  size_t length;\n  \n  if (*(uint *)((long)binaryData + 0x24) != 0) {\n    if (((binaryData != (char **)0x108370) && ((*(uint *)((long)binaryData + 0x24) & 0x1000) == 0)) &&\n       (binaryData != (char **)0x108258)) {\n      pointerValue = binaryData[8];\n      length = strlen(*binaryData);\n      if (maxNameLength < (int)length) {\n        maxNameLength = (int)length;\n      }\n      totalSize = totalSize + (long)pointerValue;\n      if (maxVMA < binaryData[6]) {\n        maxVMA = binaryData[6];\n      }\n    }\n    return param_4;\n  }\n  return in_RAX;\n}\n\n",
            "called": [
                "sysv_internal_sizer.cold",
                "strlen"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00103c50",
            "calling": [
                "print_sizes"
            ],
            "imported": false,
            "current_name": "process_binary_data_00103c50"
        },
        "FUN_001020e0": {
            "renaming": {},
            "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n",
            "called": [
                "bindtextdomain"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001020e0",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_001020e0"
        },
        "FUN_00102a40": {
            "renaming": {
                "FUN_00102a40": "verify_and_print_formats_00102a40",
                "param_1": "format",
                "cVar1": "is_valid",
                "iVar2": "error_code",
                "lVar3": "failing_command",
                "local_20": "matching_formats"
            },
            "code": "\n\n\nvoid verify_and_print_formats_00102a40(undefined8 *format)\n\n{\n  char is_valid;\n  int error_code;\n  long failing_command;\n  undefined8 matching_formats [2];\n  \n  is_valid = bfd_check_format(format,2);\n  if (is_valid == '\\0') {\n    is_valid = bfd_check_format_matches(format,1,matching_formats);\n    if (is_valid == '\\0') {\n      error_code = bfd_get_error();\n      if (error_code == 0xd) {\n        bfd_nonfatal(*format);\n        list_matching_formats(matching_formats[0]);\n        return_code = 3;\n      }\n      else {\n        is_valid = bfd_check_format_matches(format,3,matching_formats);\n        if (is_valid == '\\0') {\n          bfd_nonfatal(*format);\n          error_code = bfd_get_error();\n          if (error_code == 0xd) {\n            list_matching_formats(matching_formats[0]);\n          }\n          return_code = 3;\n        }\n        else {\n          print_sizes(format);\n          fwrite(\" (core file\",1,0xb,_stdout);\n          failing_command = bfd_core_file_failing_command(format);\n          if (failing_command != 0) {\n            printf(\" invoked as %s\",failing_command);\n          }\n          puts(\")\\n\");\n        }\n      }\n    }\n    else {\n      print_sizes(format);\n      putchar(10);\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "display_bfd.cold",
                "bfd_check_format",
                "print_sizes",
                "bfd_check_format_matches",
                "putchar"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102a40",
            "calling": [
                "FUN_001023b6",
                "display_file"
            ],
            "imported": false,
            "current_name": "verify_and_print_formats_00102a40"
        },
        "FUN_00102280": {
            "renaming": {},
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n",
            "called": [
                "fopen"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102280",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102280"
        },
        "FUN_00102200": {
            "renaming": {},
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n",
            "called": [
                "stat"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102200",
            "calling": [
                "main",
                "display_file"
            ],
            "imported": false,
            "current_name": "FUN_00102200"
        },
        "FUN_00102320": {
            "renaming": {},
            "code": "\nvoid bfd_openr_next_archived_file(void)\n\n{\n  bfd_openr_next_archived_file();\n  return;\n}\n\n",
            "called": [
                "bfd_openr_next_archived_file"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102320",
            "calling": [
                "FUN_001023b6"
            ],
            "imported": false,
            "current_name": "FUN_00102320"
        },
        "FUN_00108148": {
            "renaming": {},
            "code": "\n\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fseek@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108148",
            "calling": [
                "fseek"
            ],
            "imported": false,
            "current_name": "FUN_00108148"
        },
        "FUN_00102040": {
            "renaming": {},
            "code": "\n\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = putchar(__c);\n  return iVar1;\n}\n\n",
            "called": [
                "putchar"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102040",
            "calling": [
                "display_bfd",
                "sysv_one_line"
            ],
            "imported": false,
            "current_name": "FUN_00102040"
        },
        "FUN_00102160": {
            "renaming": {},
            "code": "\nvoid bfd_get_error(void)\n\n{\n  bfd_get_error();\n  return;\n}\n\n",
            "called": [
                "bfd_get_error"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102160",
            "calling": [
                "display_bfd.cold",
                "FUN_001023b6",
                "main",
                "bfd_nonfatal"
            ],
            "imported": false,
            "current_name": "FUN_00102160"
        },
        "FUN_00103130": {
            "renaming": {
                "FUN_00103130": "reverse_binary_function_00103130",
                "param_1": "inputSize",
                "param_2": "binaryPaths",
                "pbVar1": "bytePtr1",
                "bVar2": "byteVar2",
                "bVar3": "boolVar1",
                "bVar4": "boolVar2",
                "pcVar5": "charPtr1",
                "bVar6": "byteVar3",
                "cVar7": "charVar1",
                "iVar8": "indexVar1",
                "uVar9": "returnVar",
                "__stream": "filePtr",
                "__s": "bytePtr2",
                "pcVar10": "charPtr2",
                "sVar11": "sizeVar",
                "__ptr": "bytePtr3",
                "__src": "longPtr1",
                "lVar12": "longVar1",
                "plVar13": "longPtr2",
                "plVar14": "longPtr3",
                "uVar15": "ulongVar1",
                "uVar16": "ulongVar2",
                "pcVar17": "charPtr3",
                "pbVar18": "bytePtr4",
                "unaff_RBP": "undefined1Ptr1",
                "lVar19": "longVar2",
                "pbVar20": "bytePtr5",
                "iVar21": "indexVar2",
                "iVar22": "indexVar3",
                "bVar23": "boolVar3",
                "local_110": "localVar1",
                "local_10c": "localVar2",
                "local_108": "localVar3",
                "local_c8": "statStruct"
            },
            "code": "\n\n\nundefined4 reverseBinaryFunction_00103130(int inputSize,long *binaryPaths)\n\n{\n  byte *bytePtr1;\n  byte byteVar2;\n  bool boolVar1;\n  bool boolVar2;\n  char *charPtr1;\n  byte byteVar3;\n  char charVar1;\n  int indexVar1;\n  undefined4 returnVar;\n  FILE *filePtr;\n  byte *bytePtr2;\n  char *charPtr2;\n  size_t sizeVar;\n  byte *bytePtr3;\n  long *longPtr1;\n  long longVar1;\n  long *longPtr2;\n  long *longPtr3;\n  ulong ulongVar1;\n  undefined8 ulongVar2;\n  char *charPtr3;\n  byte *bytePtr4;\n  undefined1 *undefined1Ptr1;\n  long longVar2;\n  byte *bytePtr5;\n  int indexVar2;\n  int indexVar3;\n  bool boolVar3;\n  int localVar1;\n  int localVar2;\n  size_t localVar3;\n  stat statStruct;\n  \n  setlocale(5,\"\");\n  charPtr3 = \"binutils\";\n  setlocale(0,\"\");\n  bindtextdomain(\"binutils\",\"/usr/share/locale\");\n  textdomain(\"binutils\");\n  program_name = *binaryPaths;\n  xmalloc_set_program_name();\n  bfd_set_error_program_name(program_name);\n  longPtr2 = binaryPaths;\n  if (1 < inputSize) {\n    localVar2 = 2000;\n    localVar1 = 0;\n    indexVar1 = 1;\n    do {\n      while( true ) {\n        indexVar3 = indexVar1;\n        undefined1Ptr1 = (undefined1 *)(long)indexVar3;\n        if (*(char *)longPtr2[(long)undefined1Ptr1] == '@') break;\nLAB_001035a0:\n        if (inputSize <= indexVar3 + 1) goto LAB_00103612;\nLAB_001035aa:\n        indexVar1 = indexVar3 + 1;\n        localVar1 = indexVar3;\n      }\n      localVar2 = localVar2 + -1;\n      if (localVar2 == 0) goto LAB_001039c5;\n      charPtr3 = (char *)longPtr2[(long)undefined1Ptr1] + 1;\n      indexVar1 = stat(charPtr3,&statStruct);\n      if (indexVar1 < 0) goto LAB_001035a0;\n      if ((statStruct.st_mode & 0xf000) == 0x4000) {\n        longVar2 = *longPtr2;\n        charPtr3 = \"%s: error: @-file refers to a directory\\n\";\n        do {\n          fprintf(_stderr,charPtr3,longVar2);\n          xexit(1);\nLAB_001039c5:\n          longVar2 = *longPtr2;\n          charPtr3 = \"%s: error: too many @-files encountered\\n\";\n        } while( true );\n      }\n      filePtr = fopen(charPtr3,\"r\");\n      if (filePtr == (FILE *)0x0) goto LAB_001035a0;\n      indexVar1 = fseek(filePtr,0,2);\n      if (((indexVar1 == -1) ||\n          (charPtr3 = (char *)ftell(filePtr), charPtr3 == (char *)0xffffffffffffffff)) ||\n         (indexVar1 = fseek(filePtr,0,0), indexVar1 == -1)) {\nLAB_00103600:\n        fclose(filePtr);\n        if (indexVar3 + 1 < inputSize) goto LAB_001035aa;\n        break;\n      }\n      bytePtr2 = (byte *)xmalloc(charPtr3 + 1);\n      charPtr2 = (char *)fread(bytePtr2,1,(size_t)charPtr3,filePtr);\n      if ((charPtr3 != charPtr2) && (indexVar1 = ferror(filePtr), indexVar1 != 0)) {\n        free(bytePtr2);\n        goto LAB_00103600;\n      }\n      bytePtr2[(long)charPtr2] = 0;\n      byteVar3 = *bytePtr2;\n      bytePtr4 = bytePtr2;\n      if (byteVar3 != 0) {\nLAB_00103300:\n        if (((&_sch_istable)[(ulong)byteVar3 * 2] & 0x40) != 0) goto LAB_001032f0;\n        sizeVar = strlen((char *)bytePtr2);\n        bytePtr3 = (byte *)xmalloc(sizeVar + 1);\n        indexVar1 = 0;\n        boolVar3 = false;\n        boolVar2 = false;\n        longVar2 = 0;\n        longPtr1 = (long *)0x0;\n        boolVar1 = false;\n        bytePtr4 = bytePtr2;\n        do {\n          while (((&_sch_istable)[(ulong)*bytePtr4 * 2] & 0x40) != 0) {\n            bytePtr4 = bytePtr4 + 1;\n          }\n          if ((indexVar1 == 0) || (longPtr3 = longPtr1 + longVar2, indexVar1 + -1 <= (int)longVar2)) {\n            if (longPtr1 == (long *)0x0) {\n              indexVar1 = 8;\n              longPtr1 = (long *)xmalloc(0x40);\n              longPtr3 = longPtr1 + longVar2;\n              *longPtr3 = 0;\n            }\n            else {\n              indexVar1 = indexVar1 * 2;\n              longPtr1 = (long *)xrealloc(longPtr1,(long)indexVar1 << 3);\n              longPtr3 = longPtr1 + longVar2;\n              *longPtr3 = 0;\n            }\n          }\n          byteVar3 = *bytePtr4;\n          bytePtr5 = bytePtr3;\n          while (byteVar3 != 0) {\n            while( true ) {\n              if ((((&_sch_istable)[(ulong)byteVar3 * 2] & 0x40) != 0) &&\n                 (!(bool)(boolVar2 | boolVar1 | boolVar3))) {\n                boolVar1 = false;\n                boolVar3 = false;\n                boolVar2 = false;\n                goto LAB_00103410;\n              }\n              if (!boolVar1) break;\n              bytePtr4 = bytePtr4 + 1;\n              *bytePtr5 = byteVar3;\n              bytePtr5 = bytePtr5 + 1;\n              boolVar1 = false;\n              byteVar3 = *bytePtr4;\n              if (byteVar3 == 0) goto LAB_00103410;\n            }\n            if (byteVar3 == 0x5c) {\n              boolVar1 = true;\n            }\n            else if (boolVar2) {\n              if (byteVar3 == 0x27) {\n                boolVar2 = false;\n              }\n              else {\nLAB_00103585:\n                *bytePtr5 = byteVar3;\n                bytePtr5 = bytePtr5 + 1;\n              }\n            }\n            else if (boolVar3) {\n              if (byteVar3 != 0x22) goto LAB_00103585;\n              boolVar3 = false;\n            }\n            else if (byteVar3 == 0x27) {\n              boolVar2 = true;\n            }\n            else {\n              if (byteVar3 != 0x22) goto LAB_00103585;\n              boolVar3 = true;\n            }\n            bytePtr1 = bytePtr4 + 1;\n            bytePtr4 = bytePtr4 + 1;\n            byteVar3 = *bytePtr1;\n          }\nLAB_00103410:\n          *bytePtr5 = 0;\n          longVar1 = xstrdup(bytePtr3);\n          *longPtr3 = longVar1;\n          longPtr1[longVar2 + 1] = 0;\n          byteVar3 = *bytePtr4;\n          byteVar2 = (&_sch_istable)[(ulong)byteVar3 * 2];\n          while ((byteVar2 & 0x40) != 0) {\n            byteVar3 = bytePtr4[1];\n            bytePtr4 = bytePtr4 + 1;\n            byteVar2 = (&_sch_istable)[(ulong)byteVar3 * 2];\n          }\n          longVar2 = longVar2 + 1;\n        } while (byteVar3 != 0);\n        free(bytePtr3);\n        longPtr3 = longPtr2;\n        if (binaryPaths == longPtr2) goto LAB_0010372c;\n        goto LAB_001034ad;\n      }\nLAB_0010370f:\n      longPtr1 = (long *)xmalloc();\n      *longPtr1 = 0;\n      if (binaryPaths == longPtr2) {\nLAB_0010372c:\n        if (*longPtr2 == 0) {\n          indexVar1 = 0;\n        }\n        else {\n          longVar2 = 1;\n          do {\n            indexVar1 = (int)longVar2;\n            longPtr3 = longPtr2 + longVar2;\n            longVar2 = longVar2 + 1;\n          } while (*longPtr3 != 0);\n        }\n        longVar1 = 0;\n        longPtr3 = (long *)xmalloc((long)(indexVar1 + 1) << 3);\n        longVar2 = *longPtr2;\n        while (longVar2 != 0) {\n          ulongVar2 = xstrdup();\n          *(undefined8 *)((long)longPtr3 + longVar1) = ulongVar2;\n          longVar1 = longVar1 + 8;\n          longVar2 = *(long *)((long)longPtr2 + longVar1);\n        }\n        *(undefined8 *)((long)longPtr3 + longVar1) = 0;\nLAB_001034ad:\n        longPtr2 = longPtr3;\n        if (*longPtr1 == 0) goto LAB_001038cc;\n        charPtr3 = (char *)0x0;\n        do {\n          charPtr3 = charPtr3 + 1;\n        } while (longPtr1[(long)charPtr3] != 0);\n        localVar3 = (long)charPtr3 * 8;\n      }\n      else {\nLAB_001038cc:\n        charPtr3 = (char *)0x0;\n        localVar3 = 0;\n      }\n      free((void *)longPtr2[(long)undefined1Ptr1]);\n      longPtr2 = (long *)xrealloc(longPtr2,(long)(charPtr3 + (long)inputSize + 1) * 8);\n      indexVar2 = inputSize + -1 + (int)charPtr3;\n      memmove(longPtr2 + (long)(undefined1Ptr1 + (long)charPtr3),longPtr2 + (long)(undefined1Ptr1 + 1),\n              (long)(inputSize - indexVar3) << 3);\n      memcpy(longPtr2 + (long)undefined1Ptr1,longPtr1,localVar3);\n      free(longPtr1);\n      free(bytePtr2);\n      fclose(filePtr);\n      undefined1Ptr1 = undefined1Ptr1 + (long)charPtr3;\n      indexVar1 = localVar1 + 1;\n      inputSize = indexVar2;\n    } while (localVar1 + 1 < indexVar2);\n  }\nLAB_00103612:\n  indexVar1 = bfd_init();\n  if (indexVar1 != 0x118) goto LAB_001039f8;\n  charPtr2 = \"x86_64-pc-linux-gnu\";\n  undefined1Ptr1 = long_options;\n  charPtr3 = \"ABGHhVvdfotx\";\n  charVar1 = bfd_set_default_target(\"x86_64-pc-linux-gnu\");\n  if (charVar1 == '\\0') {\n    returnVar = bfd_get_error();\n    charPtr3 = (char *)bfd_errmsg(returnVar);\n    ulongVar2 = dcgettext(0,\"can\\'t set BFD default target to `%s\\': %s\",5);\n    ulongVar1 = fatal(ulongVar2,\"x86_64-pc-linux-gnu\",charPtr3);\n    goto LAB_00103b74;\n  }\n  do {\n    while (indexVar1 = getopt_long(inputSize,longPtr2,charPtr3,undefined1Ptr1,0), indexVar1 != -1) {\n      charPtr1 = charPtr2;\n      if (indexVar1 < 0x79) {\n        if (indexVar1 < 0x3f) {\nswitchD_001037fd_caseD_40:\n          indexVar1 = getopt_long(inputSize,longPtr2,charPtr3,undefined1Ptr1,0);\n          if (indexVar1 == -1) break;\n          if (0x78 < indexVar1) goto LAB_00103937;\n          if (0x3e < indexVar1) {\n            switch(indexVar1) {\n            case 0x3f:\n            case 0x48:\n            case 0x68:\n              goto switchD_001037fd_caseD_3f;\n            case 0x41:\n              goto switchD_001037fd_caseD_41;\n            case 0x42:\n              goto switchD_001037fd_caseD_42;\n            case 0x47:\n              goto switchD_001037fd_caseD_47;\n            case 0x56:\n            case 0x76:\n              goto switchD_001037fd_caseD_56;\n            case 100:\n              goto switchD_001037fd_caseD_64;\n            case 0x6f:\n              goto switchD_001037fd_caseD_6f;\n            case 0x74:\n              goto switchD_001037fd_caseD_74;\n            case 0x78:\n              goto switchD_001037fd_caseD_78;\n            }\n          }\n          do {\n            do {\n              while( true ) {\n                indexVar1 = getopt_long(inputSize,longPtr2,charPtr3,undefined1Ptr1,0);\n                if (indexVar1 == -1) goto LAB_00103664;\n                if (0x78 < indexVar1) break;\n                if (0x3e < indexVar1) {\n                  switch(indexVar1) {\n                  case 0x3f:\n                  case 0x48:\n                  case 0x68:\n                    goto switchD_001037fd_caseD_3f;\n                  case 0x41:\n                    goto switchD_001037fd_caseD_41;\n                  case 0x42:\n                    goto switchD_001037fd_caseD_42;\n                  case 0x47:\n                    goto switchD_001037fd_caseD_47;\n                  case 0x56:\n                  case 0x76:\n                    goto switchD_001037fd_caseD_56;\n                  case 100:\n                    goto switchD_001037fd_caseD_64;\n                  case 0x6f:\n                    goto switchD_001037fd_caseD_6f;\n                  case 0x74:\n                    goto switchD_001037fd_caseD_74;\n                  case 0x78:\n                    goto switchD_001037fd_caseD_78;\n                  }\n                }\n              }\nLAB_00103937:\n              if (indexVar1 == 0xca) goto LAB_001039d1;\n            } while (0xca < indexVar1);\n            if (indexVar1 == 200) goto LAB_00103869;\n          } while (indexVar1 != 0xc9);\n          goto LAB_00103a15;\n        }\n        switch(indexVar1) {\n        case 0x3f:\n        case 0x48:\n        case 0x68:\n          goto switchD_001037fd_caseD_3f;\n        default:\n          goto switchD_001037fd_caseD_40;\n        case 0x41:\n          goto switchD_001037fd_caseD_41;\n        case 0x42:\nswitchD_001037fd_caseD_42:\n          selected_output_format = 0;\n          break;\n        case 0x47:\nswitchD_001037fd_caseD_47:\n          selected_output_format = 2;\n          break;\n        case 0x56:\n        case 0x76:\nswitchD_001037fd_caseD_56:\n          show_version = 1;\n          break;\n        case 100:\n          goto switchD_001037fd_caseD_64;\n        case 0x6f:\n          goto switchD_001037fd_caseD_6f;\n        case 0x74:\nswitchD_001037fd_caseD_74:\n          show_totals = 1;\n          break;\n        case 0x78:\n          goto switchD_001037fd_caseD_78;\n        }\n      }\n      else if (indexVar1 == 0xca) {\nLAB_001039d1:\n        target = _optarg;\n      }\n      else {\n        if (0xca < indexVar1) goto switchD_001037fd_caseD_40;\n        if (indexVar1 != 200) {\n          if (indexVar1 != 0xc9) goto switchD_001037fd_caseD_40;\n          goto LAB_00103a15;\n        }\nLAB_00103869:\n        charPtr2 = _optarg;\n        if (0x31 < (byte)(*_optarg + 0xbeU)) goto LAB_00103bc8;\n        ulongVar1 = 1L << (*_optarg + 0xbeU & 0x3f);\n        if ((ulongVar1 & 0x2000000020) != 0) goto switchD_001037fd_caseD_47;\n        if ((ulongVar1 & 0x2000000020000) == 0) {\nLAB_00103b74:\n          if ((ulongVar1 & 0x100000001) == 0) goto LAB_00103bc8;\n          goto switchD_001037fd_caseD_42;\n        }\nswitchD_001037fd_caseD_41:\n        selected_output_format = 1;\n      }\n    }\nLAB_00103664:\n    if (show_version != 0) {\n      printf(\"GNU %s %s\\n\",&DAT_00104067,\"(GNU Binutils for Debian) 2.40\");\n      charPtr3 = (char *)dcgettext(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n      printf(charPtr3);\n      charPtr3 = (char *)dcgettext(0,\n                                  \"This program is free software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                                  ,5);\n      printf(charPtr3);\n                    \n      exit(0);\n    }\n    if (show_help == 0) {\n      indexVar1 = _optind - inputSize;\n      if (_optind == inputSize) {\n        display_file(\"a.out\");\n      }\n      else {\n        while (longVar2 = (long)_optind, SBORROW4(_optind,inputSize) != indexVar1 < 0) {\n          _optind = _optind + 1;\n          display_file(longPtr2[longVar2]);\n          indexVar1 = _optind - inputSize;\n        }\n      }\n      if ((show_totals != 0) && ((selected_output_format & 0xfffffffd) == 0)) {\n        longVar2 = total_datasize + total_textsize + total_bsssize;\n        indexVar1 = (-(uint)(selected_output_format == 0) & 0xfffffffd) + 10;\n        boolVar3 = selected_output_format == 0;\n        rprint_number(indexVar1);\n        indexVar3 = (int)(char)((-boolVar3 & 0xe9U) + 0x20);\n        putc(indexVar3,_stdout);\n        rprint_number(indexVar1,total_datasize);\n        putc(indexVar3,_stdout);\n        rprint_number(indexVar1,total_bsssize);\n        putc(indexVar3,_stdout);\n        if (selected_output_format == 0) {\n          charPtr3 = \"%7lu\\t%7lx\";\n          if (radix == 1) {\n            charPtr3 = \"%7lo\\t%7lx\";\n          }\n          printf(charPtr3,longVar2,longVar2);\n        }\n        else {\n          rprint_number(indexVar1,longVar2);\n        }\n        putc(indexVar3,_stdout);\n        fwrite(\"(TOTALS)\\n\",1,9,_stdout);\n      }\n      return return_code;\n    }\n    usage(_stdout,0);\nLAB_001039f8:\n    ulongVar2 = dcgettext(0,\"fatal error: libbfd ABI mismatch\",5);\n    fatal(ulongVar2);\nLAB_00103a15:\n    longVar2 = strtol(_optarg,(char **)0x0,10);\n    charPtr2 = _optarg;\n    indexVar1 = (int)longVar2;\n    charPtr1 = &optarg;\n    if (indexVar1 == 10) {\nswitchD_001037fd_caseD_64:\n      charPtr2 = charPtr1;\n      radix = 0;\n    }\n    else if (indexVar1 == 0x10) {\nswitchD_001037fd_caseD_78:\n      charPtr2 = charPtr1;\n      radix = 2;\n    }\n    else {\n      if (indexVar1 != 8) {\n        ulongVar2 = dcgettext(0,\"Invalid radix: %s\\n\",5);\n        charPtr3 = &optarg;\n        do {\n          non_fatal(ulongVar2,charPtr2);\n          charPtr2 = charPtr3;\nswitchD_001037fd_caseD_3f:\n          usage(_stderr,1);\nLAB_00103bc8:\n          ulongVar2 = dcgettext(0,\"invalid argument to --format: %s\",5);\n          charPtr3 = charPtr2;\n        } while( true );\n      }\nswitchD_001037fd_caseD_6f:\n      charPtr2 = charPtr1;\n      radix = 1;\n    }\n  } while( true );\nLAB_001032f0:\n  byteVar3 = bytePtr4[1];\n  bytePtr4 = bytePtr4 + 1;\n  if (byteVar3 == 0) goto LAB_0010370f;\n  goto LAB_00103300;\n}\n\n",
            "called": [
                "stat",
                "putc",
                "bfd_set_error_program_name",
                "xmalloc_set_program_name",
                "fopen",
                "ferror",
                "xmalloc",
                "display_file",
                "fseek",
                "bindtextdomain",
                "fwrite",
                "bfd_get_error",
                "dcgettext",
                "free",
                "fatal",
                "xexit",
                "bfd_set_default_target",
                "fprintf",
                "strtol",
                "bfd_init",
                "fclose",
                "memmove",
                "non_fatal",
                "xrealloc",
                "strlen",
                "textdomain",
                "printf",
                "exit",
                "usage",
                "rprint_number",
                "bfd_errmsg",
                "ftell",
                "memcpy",
                "setlocale",
                "xstrdup",
                "fread",
                "getopt_long"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00103130",
            "calling": [
                "_start"
            ],
            "imported": false,
            "current_name": "reverse_binary_function_00103130"
        },
        "FUN_001020f0": {
            "renaming": {},
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n",
            "called": [
                "dcgettext"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001020f0",
            "calling": [
                "usage",
                "bfd_nonfatal.cold",
                "list_matching_formats",
                "main",
                "display_file.cold",
                "display_file"
            ],
            "imported": false,
            "current_name": "FUN_001020f0"
        },
        "FUN_001022b0": {
            "renaming": {},
            "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 = vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n",
            "called": [
                "vfprintf"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001022b0",
            "calling": [
                "report"
            ],
            "imported": false,
            "current_name": "FUN_001022b0"
        },
        "FUN_00102e50": {
            "renaming": {
                "FUN_00102e50": "format_and_print_number_00102e50",
                "param_1": "number",
                "__format": "format",
                "acStack_38": "formattedNumber"
            },
            "code": "\nvoid formatAndPrintNumber_00102e50(undefined8 number)\n\n{\n  char *format;\n  char formattedNumber [48];\n  \n  if (radix == 0) {\n    format = \"%lu\";\n  }\n  else {\n    format = \"0x%lx\";\n    if (radix == 1) {\n      format = \"0%lo\";\n    }\n  }\n  sprintf(formattedNumber,format,number);\n  strlen(formattedNumber);\n  return;\n}\n\n",
            "called": [
                "sprintf",
                "strlen",
                "size_number.cold"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102e50",
            "calling": [
                "print_sizes"
            ],
            "imported": false,
            "current_name": "format_and_print_number_00102e50"
        },
        "FUN_00103d80": {
            "renaming": {
                "FUN_00103d80": "FUNC_00103d80"
            },
            "code": "\nvoid FUNC_00103d80(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x00103d80",
            "calling": [],
            "imported": false,
            "current_name": "FUNC_00103d80"
        },
        "FUN_00102170": {
            "renaming": {},
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n",
            "called": [
                "xmalloc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102170",
            "calling": [
                "main",
                "print_sizes"
            ],
            "imported": false,
            "current_name": "FUN_00102170"
        },
        "FUN_00102290": {
            "renaming": {},
            "code": "\nvoid xexit(void)\n\n{\n  xexit();\n  return;\n}\n\n",
            "called": [
                "xexit"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102290",
            "calling": [
                "main",
                "print_sizes",
                "fatal"
            ],
            "imported": false,
            "current_name": "FUN_00102290"
        },
        "FUN_00108150": {
            "renaming": {},
            "code": "\n\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* setlocale@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108150",
            "calling": [
                "setlocale"
            ],
            "imported": false,
            "current_name": "FUN_00108150"
        },
        "FUN_00102330": {
            "renaming": {},
            "code": "\nvoid bfd_map_over_sections(void)\n\n{\n  bfd_map_over_sections();\n  return;\n}\n\n",
            "called": [
                "bfd_map_over_sections"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102330",
            "calling": [
                "print_sizes"
            ],
            "imported": false,
            "current_name": "FUN_00102330"
        },
        "FUN_00102210": {
            "renaming": {},
            "code": "\n\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n  long lVar1;\n  \n  lVar1 = strtol(__nptr,__endptr,__base);\n  return lVar1;\n}\n\n",
            "called": [
                "strtol"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102210",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102210"
        },
        "FUN_00108038": {
            "renaming": {},
            "code": "\n\n\n\nint puts(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* puts@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108038",
            "calling": [
                "puts"
            ],
            "imported": false,
            "current_name": "FUN_00108038"
        },
        "FUN_00102050": {
            "renaming": {},
            "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  return piVar1;\n}\n\n",
            "called": [
                "__errno_location"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102050",
            "calling": [
                "display_file.cold"
            ],
            "imported": false,
            "current_name": "FUN_00102050"
        },
        "FUN_001021a0": {
            "renaming": {},
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n",
            "called": [
                "xstrdup"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001021a0",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_001021a0"
        },
        "FUN_001022c0": {
            "renaming": {},
            "code": "\nvoid bfd_check_format_matches(void)\n\n{\n  bfd_check_format_matches();\n  return;\n}\n\n",
            "called": [
                "bfd_check_format_matches"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001022c0",
            "calling": [
                "display_bfd.cold",
                "display_bfd"
            ],
            "imported": false,
            "current_name": "FUN_001022c0"
        },
        "FUN_001080e8": {
            "renaming": {},
            "code": "\n\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fputc@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001080e8",
            "calling": [
                "fputc"
            ],
            "imported": false,
            "current_name": "FUN_001080e8"
        },
        "FUN_00102060": {
            "renaming": {},
            "code": "\nvoid bfd_core_file_failing_command(void)\n\n{\n  bfd_core_file_failing_command();\n  return;\n}\n\n",
            "called": [
                "bfd_core_file_failing_command"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102060",
            "calling": [
                "display_bfd.cold"
            ],
            "imported": false,
            "current_name": "FUN_00102060"
        },
        "FUN_00102180": {
            "renaming": {},
            "code": "\nvoid bfd_set_error(void)\n\n{\n  bfd_set_error();\n  return;\n}\n\n",
            "called": [
                "bfd_set_error"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102180",
            "calling": [
                "FUN_001023b6"
            ],
            "imported": false,
            "current_name": "FUN_00102180"
        },
        "FUN_00108040": {
            "renaming": {},
            "code": "\n\n\n\nint ferror(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ferror@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108040",
            "calling": [
                "ferror"
            ],
            "imported": false,
            "current_name": "FUN_00108040"
        },
        "FUN_00108160": {
            "renaming": {},
            "code": "\n\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memmove@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108160",
            "calling": [
                "memmove"
            ],
            "imported": false,
            "current_name": "FUN_00108160"
        },
        "FUN_00102220": {
            "renaming": {},
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "called": [
                "memcpy"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102220",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102220"
        },
        "FUN_00102340": {
            "renaming": {},
            "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strerror(__errnum);\n  return pcVar1;\n}\n\n",
            "called": [
                "strerror"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102340",
            "calling": [
                "display_file.cold"
            ],
            "imported": false,
            "current_name": "FUN_00102340"
        },
        "FUN_00102100": {
            "renaming": {},
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n",
            "called": [
                "strlen"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102100",
            "calling": [
                "main",
                "size_number",
                "sysv_internal_sizer"
            ],
            "imported": false,
            "current_name": "FUN_00102100"
        },
        "FUN_00102980": {
            "renaming": {
                "FUN_00102980": "check_file_00102980",
                "param_1": "file_path",
                "cVar1": "format_check_result",
                "iVar2": "stat_result",
                "piVar3": "error_number",
                "uVar4": "error_message",
                "pcVar5": "error_reason",
                "lVar6": "bfd_handle",
                "sStack_b8": "file_stats"
            },
            "code": "\nvoid check_file_00102980(char *file_path)\n\n{\n  char format_check_result;\n  int stat_result;\n  int *error_number;\n  undefined8 error_message;\n  char *error_reason;\n  long bfd_handle;\n  stat file_stats;\n  \n  if (file_path != (char *)0x0) {\n    stat_result = stat(file_path,&file_stats);\n    if (stat_result < 0) {\n      error_number = __errno_location();\n      if (*error_number == 2) {\n        error_message = dcgettext(0,\"\\'%s\\': No such file\",5);\n        non_fatal(error_message,file_path);\n      }\n      else {\n        error_reason = strerror(*error_number);\n        error_message = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n        non_fatal(error_message,file_path,error_reason);\n      }\n    }\n    else if ((file_stats.st_mode & 0xf000) == 0x4000) {\n      error_message = dcgettext(0,\"Warning: \\'%s\\' is a directory\",5);\n      non_fatal(error_message,file_path);\n    }\n    else if ((file_stats.st_mode & 0xf000) == 0x8000) {\n      if (file_stats.st_size < 0) {\n        error_message = dcgettext(0,\"Warning: \\'%s\\' has negative size, probably it is too large\",5);\n        non_fatal(error_message,file_path);\n      }\n      else if (file_stats.st_size != 0) {\n        bfd_handle = bfd_openr(file_path,target);\n        if (bfd_handle != 0) {\n          format_check_result = bfd_check_format(bfd_handle,2);\n          if (format_check_result != '\\0') {\n            process_archived_files_001023b6();\n            return;\n          }\n          display_bfd(bfd_handle);\n          format_check_result = bfd_close(bfd_handle);\n          if (format_check_result != '\\0') {\n            return;\n          }\n        }\n        bfd_nonfatal(file_path);\n        return_code = 1;\n        return;\n      }\n    }\n    else {\n      error_message = dcgettext(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n      non_fatal(error_message,file_path);\n    }\n  }\n  return_code = 1;\n  return;\n}\n\n",
            "called": [
                "dcgettext",
                "stat",
                "FUN_001023b6",
                "bfd_check_format",
                "non_fatal",
                "display_file.cold",
                "display_bfd",
                "bfd_openr"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102980",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "check_file_00102980"
        },
        "FUN_00108168": {
            "renaming": {},
            "code": "\n\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fopen@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00108168",
            "calling": [
                "fopen"
            ],
            "imported": false,
            "current_name": "FUN_00108168"
        }
    },
    "used_tokens": 19758,
    "layers": [
        [
            "FUN_001030e0",
            "FUN_00103d20",
            "FUN_00103040",
            "FUN_0010274b",
            "FUN_00102000",
            "FUN_00103cc0",
            "FUN_00102360",
            "FUN_00102a90",
            "FUN_0010259c",
            "FUN_00102e90",
            "FUN_00102d70",
            "FUN_001026f6",
            "FUN_001026ea",
            "FUN_00102fe0",
            "FUN_00102f40",
            "FUN_00102db0",
            "FUN_00102020",
            "FUN_001024d2",
            "FUN_001023b6",
            "FUN_0010281b",
            "FUN_00102ee0",
            "FUN_00102710",
            "FUN_0010278c",
            "FUN_00103c50",
            "FUN_00102a40",
            "FUN_00103130",
            "FUN_00102e50"
        ],
        [
            "FUN_00102980"
        ]
    ],
    "locked_functions": []
}