{
    "functions": {
        "FUN_0010e0e8": {
            "renaming": {},
            "code": "\n\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcpy@GLIBC_2.14 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e0e8",
            "calling": [
                "memcpy"
            ],
            "imported": false,
            "current_name": "FUN_0010e0e8"
        },
        "FUN_001021b0": {
            "renaming": {},
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n",
            "called": [
                "bfd_set_error_program_name"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001021b0",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_001021b0"
        },
        "FUN_0010e0e0": {
            "renaming": {},
            "code": "\n\n\n\nint stat(char *__file,stat *__buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* stat@GLIBC_2.33 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e0e0",
            "calling": [
                "stat"
            ],
            "imported": false,
            "current_name": "FUN_0010e0e0"
        },
        "FUN_0010225e": {
            "renaming": {
                "FUN_0010225e": "print_usage_0010225e",
                "param_1": "outputFile",
                "param_2": "errorCode",
                "__format": "bugReportFormat",
                "puVar1": "demanglerPointer",
                "program_name": "programName",
                "_libiberty_demanglers": "demanglersList",
                "dcgettext": "getBugReportMessage"
            },
            "code": "\n\n\nvoid printUsage_0010225e(FILE *outputFile,int errorCode)\n\n{\n  char *bugReportFormat;\n  undefined8 *demanglerPointer;\n  \n  fprintf(outputFile,\"Usage: %s [options] [mangled names]\\n\",programName);\n  fprintf(outputFile,\"Options are:\\n  [-_|--strip-underscore]     Ignore first leading underscore%s\\n\",\n          \"\");\n  fprintf(outputFile,\"  [-n|--no-strip-underscore]  Do not ignore a leading underscore%s\\n\",\n          \" (default)\");\n  fwrite(\"  [-p|--no-params]            Do not display function arguments\\n  [-i|--no-verbose]           Do not show implementation details (if any)\\n  [-R|--recurse-limit]        Enable a limit on recursion whilst demangling.  [Default]\\n  ]-r|--no-recurse-limit]     Disable a limit on recursion whilst demangling\\n  [-t|--types]                Also attempt to demangle type encodings\\n  [-s|--format \"\n         ,1,0x184,outputFile);\n  fprintf(outputFile,\"{%s\",demanglersList);\n  demanglerPointer = (undefined8 *)&libiberty_demanglers;\n  while (*(int *)(demanglerPointer + 4) != 0) {\n    fprintf(outputFile,\",%s\",demanglerPointer[3]);\n    demanglerPointer = demanglerPointer + 3;\n  }\n  fputc(0x7d,outputFile);\n  fwrite(&DAT_001035e8,1,2,outputFile);\n  fwrite(\"  [@<file>]                   Read extra options from <file>\\n  [-h|--help]                 Display this information\\n  [-v|--version]              Show the version information\\nDemangled names are displayed to stdout.\\nIf a name cannot be demangled it is just echoed to stdout.\\nIf no names are provided on the command line, stdin is read.\\n\"\n         ,1,0x150,outputFile);\n  if (errorCode == 0) {\n    bugReportFormat = (char *)getBugReportMessage(0,\"Report bugs to %s.\\n\",5);\n    fprintf(outputFile,bugReportFormat,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  exit(errorCode);\n}\n\n",
            "called": [
                "memmove",
                "exit",
                "fputc",
                "fwrite",
                "fprintf",
                "bfd_set_error_program_name",
                "dcgettext",
                "exit"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010225e",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "print_usage_0010225e"
        },
        "FUN_001020d0": {
            "renaming": {},
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n",
            "called": [
                "printf"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001020d0",
            "calling": [
                "main",
                "demangle_it"
            ],
            "imported": false,
            "current_name": "FUN_001020d0"
        },
        "FUN_001021f0": {
            "renaming": {},
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n",
            "called": [
                "exit"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001021f0",
            "calling": [
                "usage",
                "main"
            ],
            "imported": false,
            "current_name": "FUN_001021f0"
        },
        "FUN_0010e118": {
            "renaming": {},
            "code": "\n\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memmove@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e118",
            "calling": [
                "usage",
                "memmove"
            ],
            "imported": false,
            "current_name": "FUN_0010e118"
        },
        "FUN_00102190": {
            "renaming": {},
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n",
            "called": [
                "fseek"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102190",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102190"
        },
        "FUN_0010e158": {
            "renaming": {},
            "code": "\n\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e158",
            "calling": [
                "__cxa_finalize"
            ],
            "imported": false,
            "current_name": "FUN_0010e158"
        },
        "FUN_00102070": {
            "renaming": {},
            "code": "\nvoid cplus_demangle_set_style(void)\n\n{\n  cplus_demangle_set_style();\n  return;\n}\n\n",
            "called": [
                "cplus_demangle_set_style"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102070",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102070"
        },
        "FUN_0010e038": {
            "renaming": {},
            "code": "\n\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fread@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e038",
            "calling": [
                "fread"
            ],
            "imported": false,
            "current_name": "FUN_0010e038"
        },
        "FUN_0010e078": {
            "renaming": {},
            "code": "\n\n\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strchr@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e078",
            "calling": [
                "strchr"
            ],
            "imported": false,
            "current_name": "FUN_0010e078"
        },
        "FUN_00102110": {
            "renaming": {},
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n",
            "called": [
                "xstrdup"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102110",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102110"
        },
        "FUN_00102230": {
            "renaming": {
                "FUN_00102230": "print_demangled_name_00102230",
                "param_1": "offset",
                "in_AL": "character",
                "__ptr": "demangledName",
                "unaff_RBX": "name",
                "flags": "demangleFlags"
            },
            "code": "\n\n\nvoid printDemangledName_00102230(ulong offset)\n\n{\n  byte character;\n  void *demangledName;\n  char *name;\n  \n  if (name[character] == '_') {\n    offset = (ulong)((int)offset + 1);\n  }\n  demangledName = (void *)cplus_demangle(name + offset,demangleFlags);\n  if (demangledName != (void *)0x0) {\n    if (*name == '.') {\n      putc(0x2e,_stdout);\n    }\n    printf(\"%s\",demangledName);\n    free(demangledName);\n    return;\n  }\n  printf(\"%s\");\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102230",
            "calling": [
                "demangle_it"
            ],
            "imported": false,
            "current_name": "print_demangled_name_00102230"
        },
        "FUN_00102430": {
            "renaming": {
                "FUN_00102430": "FUNC_00102430"
            },
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00102443) */\n/* WARNING: Removing unreachable block (ram,0x0010244f) */\n\nvoid FUNC_00102430(void)\n\n{\n  return;\n}\n\n",
            "called": [
                "_ITM_deregisterTMCloneTable"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x00102430",
            "calling": [
                "__do_global_dtors_aux"
            ],
            "imported": false,
            "current_name": "FUNC_00102430"
        },
        "FUN_0010e030": {
            "renaming": {},
            "code": "\n\n\n\nint ferror(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ferror@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e030",
            "calling": [
                "ferror"
            ],
            "imported": false,
            "current_name": "FUN_0010e030"
        },
        "FUN_00102150": {
            "renaming": {},
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n",
            "called": [
                "ftell"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102150",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102150"
        },
        "FUN_00102030": {
            "renaming": {},
            "code": "\nvoid cplus_demangle_name_to_style(void)\n\n{\n  cplus_demangle_name_to_style();\n  return;\n}\n\n",
            "called": [
                "cplus_demangle_name_to_style"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102030",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102030"
        },
        "FUN_0010e070": {
            "renaming": {},
            "code": "\n\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getopt_long@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e070",
            "calling": [
                "getopt_long"
            ],
            "imported": false,
            "current_name": "FUN_0010e070"
        },
        "FUN_0010e0b0": {
            "renaming": {},
            "code": "\n\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fputc@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e0b0",
            "calling": [
                "fputc"
            ],
            "imported": false,
            "current_name": "FUN_0010e0b0"
        },
        "FUN_0010e0f0": {
            "renaming": {},
            "code": "\n\n\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fflush@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e0f0",
            "calling": [
                "fflush"
            ],
            "imported": false,
            "current_name": "FUN_0010e0f0"
        },
        "FUN_001020a0": {
            "renaming": {},
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n",
            "called": [
                "strlen"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001020a0",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_001020a0"
        },
        "FUN_001024e0": {
            "renaming": {},
            "code": "\nvoid register_tm_clones(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n",
            "called": [
                "register_tm_clones"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001024e0",
            "calling": [],
            "imported": false,
            "current_name": "FUN_001024e0"
        },
        "FUN_001020e0": {
            "renaming": {},
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n",
            "called": [
                "xrealloc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001020e0",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_001020e0"
        },
        "FUN_001021c0": {
            "renaming": {},
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "called": [
                "memmove"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001021c0",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_001021c0"
        },
        "FUN_0010e008": {
            "renaming": {},
            "code": "\n\n\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* free@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e008",
            "calling": [
                "free"
            ],
            "imported": false,
            "current_name": "FUN_0010e008"
        },
        "FUN_00102080": {
            "renaming": {},
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n",
            "called": [
                "fclose"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102080",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102080"
        },
        "FUN_001024a0": {
            "renaming": {
                "FUN_001024a0": "finalize_and_deregister_001024a0",
                "completed_0": "isCompleted",
                "__dso_handle": "dsoHandle"
            },
            "code": "\nvoid finalizeAndDeregister_001024a0(void)\n\n{\n  if (isCompleted != '\\0') {\n    return;\n  }\n  __cxa_finalize(dsoHandle);\n  deregister_tm_clones();\n  isCompleted = 1;\n  return;\n}\n\n",
            "called": [
                "deregister_tm_clones",
                "__cxa_finalize"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001024a0",
            "calling": [],
            "imported": false,
            "current_name": "finalize_and_deregister_001024a0"
        },
        "FUN_0010e120": {
            "renaming": {},
            "code": "\n\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fopen@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e120",
            "calling": [
                "fopen"
            ],
            "imported": false,
            "current_name": "FUN_0010e120"
        },
        "FUN_00102000": {
            "renaming": {
                "FUN_00102000": "start_monitoring_00102000",
                "ctx": "context",
                "iVar1": "result"
            },
            "code": "\nint start_monitoring_00102000(EVP_PKEY_CTX *context)\n\n{\n  int result;\n  \n  result = __gmon_start__();\n  return result;\n}\n\n",
            "called": [
                "__gmon_start__"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102000",
            "calling": [],
            "imported": false,
            "current_name": "start_monitoring_00102000"
        },
        "FUN_00102120": {
            "renaming": {},
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n",
            "called": [
                "fputc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102120",
            "calling": [
                "usage"
            ],
            "imported": false,
            "current_name": "FUN_00102120"
        },
        "FUN_00102200": {
            "renaming": {},
            "code": "\n\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fwrite(__ptr,__size,__n,__s);\n  return sVar1;\n}\n\n",
            "called": [
                "fwrite"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102200",
            "calling": [
                "usage",
                "fatal.constprop.0"
            ],
            "imported": false,
            "current_name": "FUN_00102200"
        },
        "FUN_00102040": {
            "renaming": {},
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n",
            "called": [
                "free"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102040",
            "calling": [
                "main",
                "demangle_it"
            ],
            "imported": false,
            "current_name": "FUN_00102040"
        },
        "FUN_00102160": {
            "renaming": {},
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n",
            "called": [
                "stat"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102160",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102160"
        },
        "FUN_0010e080": {
            "renaming": {},
            "code": "\n\n\n\nint printf(char *__format,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* printf@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e080",
            "calling": [
                "printf"
            ],
            "imported": false,
            "current_name": "FUN_0010e080"
        },
        "FUN_001020f0": {
            "renaming": {},
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n",
            "called": [
                "xmalloc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001020f0",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_001020f0"
        },
        "FUN_0010e0c8": {
            "renaming": {},
            "code": "\n\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fprintf@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e0c8",
            "calling": [
                "fprintf"
            ],
            "imported": false,
            "current_name": "FUN_0010e0c8"
        },
        "FUN_00102400": {
            "renaming": {
                "FUN_00102400": "start_main_process_00102400",
                "auStack_8": "stackBuffer"
            },
            "code": "\nvoid processEntry startMainProcess_00102400(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined stackBuffer [8];\n  \n  __libc_start_main(main,param_2,&stack0x00000008,0,0,param_1,stackBuffer);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "called": [
                "main",
                "__libc_start_main"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102400",
            "calling": [],
            "imported": false,
            "current_name": "start_main_process_00102400"
        },
        "FUN_0010e138": {
            "renaming": {},
            "code": "\n\n\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fwrite@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e138",
            "calling": [
                "fwrite"
            ],
            "imported": false,
            "current_name": "FUN_0010e138"
        },
        "FUN_001020b0": {
            "renaming": {},
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n",
            "called": [
                "getopt_long"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001020b0",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_001020b0"
        },
        "FUN_001024f0": {
            "renaming": {
                "FUN_001024f0": "demangle_symbols_001024f0",
                "param_1": "argc",
                "param_2": "argv",
                "pbVar1": "ptr1",
                "bVar2": "var2",
                "bVar3": "var3",
                "bVar4": "var4",
                "bVar5": "var5",
                "bVar6": "var6",
                "iVar7": "var7",
                "uVar8": "var8",
                "iVar9": "var9",
                "__stream": "fileStream",
                "__n": "size",
                "__s": "buffer",
                "sVar10": "readSize",
                "__ptr": "outputPtr",
                "lVar11": "tempVar",
                "plVar12": "paramPtr",
                "lVar13": "tempVar2",
                "uVar14": "var14",
                "pcVar15": "var15",
                "pbVar16": "ptr2",
                "lVar17": "tempVar3",
                "puVar18": "varPtr",
                "lVar19": "tempVar4",
                "pbVar20": "ptr3",
                "local_110": "var16",
                "local_10c": "var17",
                "local_108": "var18",
                "local_100": "var19",
                "local_c8": "fileStat",
                "program_name": "progName",
                "xmalloc_set_program_name": "setProgName",
                "bfd_set_error_program_name": "setErrorProgName",
                "fclose": "closeFile",
                "fopen": "openFile",
                "fseek": "seekFile",
                "ftell": "filePosition",
                "fread": "readFile",
                "fprintf": "printFormatted",
                "xexit": "customExit",
                "xstrdup": "duplicateString",
                "xmalloc": "allocateMemory",
                "xrealloc": "reallocateMemory",
                "memmove": "moveMemory",
                "memcpy": "copyMemory",
                "getopt_long": "getLongOption",
                "usage": "showUsage",
                "strip_underscore": "stripUnderscore",
                "flags": "varFlags",
                "_optarg": "optionArgument",
                "_stderr": "errorStream",
                "_stdout": "outStream",
                "stdout": "standardOut",
                "_stdin": "standardIn",
                "getc": "getCharacter",
                "putc": "putCharacter",
                "mbuffer_0": "buffer0",
                "dcgettext": "customGetText",
                "printf": "printFormatted",
                "exit": "terminate",
                "_current_demangling_style": "currentDemanglingStyle",
                "cplus_demangle_name_to_style": "demangleStyleName",
                "cplus_demangle_set_style": "setDemangleStyle",
                "strchr": "findCharacter",
                "fatal_constprop_0": "fatalError"
            },
            "code": "\n\n\nundefined8 demangleSymbols_001024f0(int argc,long *argv)\n\n{\n  byte *ptr1;\n  byte var2;\n  bool var3;\n  bool var4;\n  bool var5;\n  byte var6;\n  int var7;\n  uint var8;\n  int var9;\n  FILE *fileStream;\n  size_t size;\n  byte *buffer;\n  size_t readSize;\n  byte *outputPtr;\n  long tempVar;\n  long *paramPtr;\n  long *bufferrc;\n  long *ptempVar2;\n  undefined8 var14;\n  char *var15;\n  byte *ptr2;\n  long tempVar3;\n  undefined1 *varPtr;\n  long tempVar4;\n  byte *ptr3;\n  ulong unaff_R13;\n  int var16;\n  int var17;\n  size_t var18;\n  long var19;\n  stat fileStat;\n  \n  progName = *argv;\n  setProgName();\n  setErrorProgName(progName);\n  paramPtr = argv;\n  if (1 < argc) {\n    var17 = 2000;\n    unaff_R13 = 1;\n    var16 = 0;\n    do {\n      var9 = (int)unaff_R13;\n      tempVar3 = (long)var9;\n      if (*(char *)paramPtr[tempVar3] == '@') {\n        var17 = var17 + -1;\n        if (var17 == 0) goto LAB_00102bdd;\n        var15 = (char *)paramPtr[tempVar3] + 1;\n        var7 = stat(var15,&fileStat);\n        if (var7 < 0) goto LAB_00102900;\n        if ((fileStat.st_mode & 0xf000) == 0x4000) {\n          tempVar3 = *paramPtr;\n          var15 = \"%s: error: @-file refers to a directory\\n\";\n          do {\n            printFormatted(errorStream,var15,tempVar3);\n            customExit(1);\nLAB_00102bdd:\n            tempVar3 = *paramPtr;\n            var15 = \"%s: error: too many @-files encountered\\n\";\n          } while( true );\n        }\n        fileStream = openFile(var15,\"r\");\n        if (fileStream == (FILE *)0x0) goto LAB_00102900;\n        var7 = seekFile(fileStream,0,2);\n        if (((var7 == -1) || (size = filePosition(fileStream), size == 0xffffffffffffffff)) ||\n           (var7 = seekFile(fileStream,0,0), var7 == -1)) {\nLAB_001029a0:\n          closeFile(fileStream);\n          if (var9 + 1 < argc) goto LAB_0010290d;\n          break;\n        }\n        buffer = (byte *)allocateMemory(size + 1);\n        readSize = readFile(buffer,1,size,fileStream);\n        if ((size != readSize) && (var7 = ferror(fileStream), var7 != 0)) {\n          free(buffer);\n          goto LAB_001029a0;\n        }\n        buffer[readSize] = 0;\n        var6 = *buffer;\n        ptr2 = buffer;\n        if (var6 != 0) {\nLAB_00102680:\n          if (((&_sch_istable)[(ulong)var6 * 2] & 0x40) != 0) goto LAB_00102670;\n          strlen((char *)buffer);\n          outputPtr = (byte *)allocateMemory();\n          bufferrc = (long *)0x0;\n          var7 = 0;\n          var3 = false;\n          var5 = false;\n          var4 = false;\n          var19 = 0;\n          ptr2 = buffer;\n          do {\n            while (((&_sch_istable)[(ulong)*ptr2 * 2] & 0x40) != 0) {\n              ptr2 = ptr2 + 1;\n            }\n            if ((var7 == 0) || (var7 + -1 <= (int)var19)) {\n              if (bufferrc == (long *)0x0) {\n                var7 = 8;\n                bufferrc = (long *)allocateMemory(0x40);\n              }\n              else {\n                var7 = var7 * 2;\n                bufferrc = (long *)reallocateMemory(bufferrc,(long)var7 << 3);\n              }\n              ptempVar2 = bufferrc + var19;\n              *ptempVar2 = 0;\n            }\n            else {\n              ptempVar2 = bufferrc + var19;\n            }\n            var6 = *ptr2;\n            ptr3 = outputPtr;\n            while (var6 != 0) {\n              while( true ) {\n                if ((((&_sch_istable)[(ulong)var6 * 2] & 0x40) != 0) &&\n                   (!(bool)(var5 | var4 | var3))) {\n                  var4 = false;\n                  var3 = false;\n                  var5 = false;\n                  goto LAB_0010276f;\n                }\n                if (!var4) break;\n                ptr2 = ptr2 + 1;\n                *ptr3 = var6;\n                ptr3 = ptr3 + 1;\n                var4 = false;\n                var6 = *ptr2;\n                if (var6 == 0) goto LAB_0010276f;\n              }\n              if (var6 == 0x5c) {\n                var4 = true;\n              }\n              else if (var5) {\n                if (var6 == 0x27) {\n                  var5 = false;\n                }\n                else {\nLAB_001028e1:\n                  *ptr3 = var6;\n                  ptr3 = ptr3 + 1;\n                }\n              }\n              else if (var3) {\n                if (var6 != 0x22) goto LAB_001028e1;\n                var3 = false;\n              }\n              else if (var6 == 0x27) {\n                var5 = true;\n              }\n              else {\n                if (var6 != 0x22) goto LAB_001028e1;\n                var3 = true;\n              }\n              ptr1 = ptr2 + 1;\n              ptr2 = ptr2 + 1;\n              var6 = *ptr1;\n            }\nLAB_0010276f:\n            *ptr3 = 0;\n            tempVar = duplicateString(outputPtr);\n            *ptempVar2 = tempVar;\n            bufferrc[var19 + 1] = 0;\n            var6 = *ptr2;\n            var2 = (&_sch_istable)[(ulong)var6 * 2];\n            while ((var2 & 0x40) != 0) {\n              var6 = ptr2[1];\n              ptr2 = ptr2 + 1;\n              var2 = (&_sch_istable)[(ulong)var6 * 2];\n            }\n            var19 = var19 + 1;\n          } while (var6 != 0);\n          free(outputPtr);\n          ptempVar2 = paramPtr;\n          if (argv == paramPtr) goto LAB_00102adb;\n          goto LAB_00102807;\n        }\nLAB_00102abe:\n        bufferrc = (long *)allocateMemory(8);\n        *bufferrc = 0;\n        if (argv == paramPtr) {\nLAB_00102adb:\n          if (*paramPtr == 0) {\n            var7 = 0;\n          }\n          else {\n            tempVar = 1;\n            do {\n              var7 = (int)tempVar;\n              ptempVar2 = paramPtr + tempVar;\n              tempVar = tempVar + 1;\n            } while (*ptempVar2 != 0);\n          }\n          tempVar4 = 0;\n          ptempVar2 = (long *)allocateMemory((long)(var7 + 1) << 3);\n          tempVar = *paramPtr;\n          while (tempVar != 0) {\n            var14 = duplicateString();\n            *(undefined8 *)((long)ptempVar2 + tempVar4) = var14;\n            tempVar4 = tempVar4 + 8;\n            tempVar = *(long *)((long)paramPtr + tempVar4);\n          }\n          *(undefined8 *)((long)ptempVar2 + tempVar4) = 0;\nLAB_00102807:\n          paramPtr = ptempVar2;\n          if (*bufferrc == 0) goto LAB_00102ba3;\n          tempVar = 0;\n          do {\n            tempVar = tempVar + 1;\n          } while (bufferrc[tempVar] != 0);\n          var18 = tempVar * 8;\n        }\n        else {\nLAB_00102ba3:\n          tempVar = 0;\n          var18 = 0;\n        }\n        free((void *)paramPtr[tempVar3]);\n        paramPtr = (long *)reallocateMemory(paramPtr,(tempVar + 1 + (long)argc) * 8);\n        var7 = argc + -1 + (int)tempVar;\n        moveMemory(paramPtr + tempVar3 + tempVar,paramPtr + tempVar3 + 1,(long)(argc - var9) << 3);\n        copyMemory(paramPtr + tempVar3,bufferrc,var18);\n        free(bufferrc);\n        free(buffer);\n        closeFile(fileStream);\n        var8 = var16 + 1;\n        unaff_R13 = tempVar3 * 8;\n        argc = var7;\n        if (var7 <= (int)var8) break;\n      }\n      else {\nLAB_00102900:\n        if (argc <= var9 + 1) break;\nLAB_0010290d:\n        var8 = var9 + 1;\n        var16 = var9;\n      }\n      unaff_R13 = (ulong)var8;\n    } while( true );\n  }\n  varPtr = long_options;\n  while (var9 = getLongOption(argc,paramPtr,\"_hinprRs:tv\",long_options,0), var9 != -1) {\n    switch(var9) {\n    case 0x3f:\nswitchD_001029f9_caseD_3f:\n      showUsage(errorStream,1);\n    case 0x5f:\nswitchD_001029f9_caseD_5f:\n      stripUnderscore = 1;\n      break;\n    default:\n      do {\n        var9 = getLongOption(argc,paramPtr,\"_hinprRs:tv\",long_options,0);\n        if (var9 == -1) goto LAB_00102a6c;\n        switch(var9) {\n        case 0x3f:\n          goto switchD_001029f9_caseD_3f;\n        case 0x52:\n          goto switchD_001029f9_caseD_52;\n        case 0x5f:\n          goto switchD_001029f9_caseD_5f;\n        case 0x68:\n          goto switchD_001029f9_caseD_68;\n        case 0x69:\n          goto switchD_001029f9_caseD_69;\n        case 0x6e:\n          goto switchD_001029f9_caseD_6e;\n        case 0x70:\n          goto switchD_001029f9_caseD_70;\n        case 0x72:\n          goto switchD_001029f9_caseD_72;\n        case 0x73:\n          goto switchD_001029f9_caseD_73;\n        case 0x74:\n          goto switchD_001029f9_caseD_74;\n        case 0x76:\n          goto switchD_001029f9_caseD_76;\n        }\n      } while( true );\n    case 0x52:\nswitchD_001029f9_caseD_52:\n      varFlags = varFlags & 0xfffbffff;\n      break;\n    case 0x68:\nswitchD_001029f9_caseD_68:\n      showUsage(outStream,0);\n    case 0x74:\nswitchD_001029f9_caseD_74:\n      varFlags = varFlags | 0x10;\n      break;\n    case 0x69:\nswitchD_001029f9_caseD_69:\n      varFlags = varFlags & 0xfffffff7;\n      break;\n    case 0x6e:\nswitchD_001029f9_caseD_6e:\n      stripUnderscore = 0;\n      break;\n    case 0x70:\nswitchD_001029f9_caseD_70:\n      varFlags = varFlags & 0xfffffffe;\n      break;\n    case 0x72:\nswitchD_001029f9_caseD_72:\n      varFlags = varFlags | 0x40000;\n      break;\n    case 0x73:\nswitchD_001029f9_caseD_73:\n      var9 = demangleStyleName(optionArgument);\n      if (var9 == 0) {\n        printFormatted(errorStream,\"%s: unknown demangling style `%s\\'\\n\",progName,optionArgument);\n        return 1;\n      }\n      setDemangleStyle(var9);\n      break;\n    case 0x76:\nswitchD_001029f9_caseD_76:\n      printFormatted(\"GNU %s %s\\n\",\"c++filt\",\"(GNU Binutils for Debian) 2.40\");\n      var15 = (char *)customGetText(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n      printFormatted(var15);\n      var15 = (char *)customGetText(0,\n                                  \"This program is free software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                                  ,5);\n      printFormatted(var15);\n                    \n      terminate(0);\n    }\n  }\nLAB_00102a6c:\n  if (_optind < argc) {\n    do {\n      demangle_it(paramPtr[_optind]);\n      putCharacter(10,outStream);\n      _optind = _optind + 1;\n    } while (_optind < argc);\n  }\n  else {\n    if (currentDemanglingStyle == 0x8000) {\nLAB_00102c76:\n      varPtr = &standardOut;\n      do {\n        unaff_R13 = 0;\n        var8 = getCharacter(standardIn);\n        while( true ) {\n          paramPtr = (long *)(unaff_R13 & 0xffffffff);\n          if (var8 == 0xffffffff) goto LAB_00102d0d;\n          if ((((&_sch_istable)[(ulong)(var8 & 0xff) * 2] & 0x8c) == 0) &&\n             (var15 = findCharacter(\"_$.\",var8), var15 == (char *)0x0)) {\n            if ((int)paramPtr != 0) goto LAB_00102d6f;\n            goto LAB_00102d47;\n          }\n          if (unaff_R13 == 0x7ffe) break;\n          (&buffer0)[unaff_R13] = (char)var8;\n          unaff_R13 = unaff_R13 + 1;\n          var8 = getCharacter(standardIn);\n        }\n        paramPtr = (long *)0x7ffe;\nLAB_00102d6f:\n        *(undefined *)(paramPtr + 0x20a28) = 0;\n        demangle_it(&buffer0);\nLAB_00102d47:\n        putCharacter(var8,outStream);\n        if (var8 == 10) {\n          fflush(outStream);\n        }\n      } while( true );\n    }\n    if (currentDemanglingStyle < 0x8001) {\n      if (((currentDemanglingStyle == 0x100) || (currentDemanglingStyle == 0x4000)) ||\n         (currentDemanglingStyle == 4)) goto LAB_00102c76;\n    }\n    else if ((currentDemanglingStyle - 0x10000U & 0xfffeffff) == 0) goto LAB_00102c76;\n    fatalError(\"Internal error: no symbol alphabet for current style\");\nLAB_00102d0d:\n    if ((int)unaff_R13 != 0) {\n      *(undefined *)(paramPtr + 0x20a28) = 0;\n      demangle_it();\n    }\n    fflush(*(FILE **)varPtr);\n  }\n  return 0;\nLAB_00102670:\n  var6 = ptr2[1];\n  ptr2 = ptr2 + 1;\n  if (var6 == 0) goto LAB_00102abe;\n  goto LAB_00102680;\n}\n\n",
            "called": [
                "memcpy",
                "bfd_set_error_program_name",
                "fseek",
                "ftell",
                "fatal.constprop.0",
                "dcgettext",
                "usage",
                "xexit",
                "demangle_it",
                "stat",
                "putc",
                "exit",
                "fopen",
                "getc",
                "fprintf",
                "xrealloc",
                "memmove",
                "cplus_demangle_set_style",
                "strchr",
                "strlen",
                "fclose",
                "fread",
                "getopt_long",
                "xstrdup",
                "printf",
                "xmalloc",
                "ferror",
                "cplus_demangle_name_to_style",
                "free",
                "fflush",
                "xmalloc_set_program_name"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001024f0",
            "calling": [
                "_start"
            ],
            "imported": false,
            "current_name": "demangle_symbols_001024f0"
        },
        "FUN_001021d0": {
            "renaming": {},
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n",
            "called": [
                "fopen"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001021d0",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_001021d0"
        },
        "FUN_00102090": {
            "renaming": {},
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n",
            "called": [
                "dcgettext"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102090",
            "calling": [
                "usage",
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102090"
        },
        "FUN_00102170": {
            "renaming": {},
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "called": [
                "memcpy"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102170",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102170"
        },
        "FUN_0010e130": {
            "renaming": {},
            "code": "\n\n\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e130",
            "calling": [
                "exit",
                "usage"
            ],
            "imported": false,
            "current_name": "FUN_0010e130"
        },
        "FUN_0010e010": {
            "renaming": {},
            "code": "\n\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@GLIBC_2.34 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e010",
            "calling": [
                "_start"
            ],
            "imported": false,
            "current_name": "FUN_0010e010"
        },
        "FUN_0010e050": {
            "renaming": {},
            "code": "\n\n\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fclose@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e050",
            "calling": [
                "fclose"
            ],
            "imported": false,
            "current_name": "FUN_0010e050"
        },
        "FUN_00102210": {
            "renaming": {},
            "code": "\n\n\nint getc(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = getc(__stream);\n  return iVar1;\n}\n\n",
            "called": [
                "getc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102210",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102210"
        },
        "FUN_0010e0b8": {
            "renaming": {},
            "code": "\n\n\n\nint putc(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putc@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e0b8",
            "calling": [
                "putc"
            ],
            "imported": false,
            "current_name": "FUN_0010e0b8"
        },
        "FUN_00102050": {
            "renaming": {},
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n",
            "called": [
                "ferror"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102050",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102050"
        },
        "FUN_00102130": {
            "renaming": {},
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n",
            "called": [
                "putc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102130",
            "calling": [
                "main",
                "demangle_it",
                "fatal.constprop.0"
            ],
            "imported": false,
            "current_name": "FUN_00102130"
        },
        "FUN_001021a0": {
            "renaming": {},
            "code": "\nvoid cplus_demangle(void)\n\n{\n  cplus_demangle();\n  return;\n}\n\n",
            "called": [
                "cplus_demangle"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001021a0",
            "calling": [
                "demangle_it"
            ],
            "imported": false,
            "current_name": "FUN_001021a0"
        },
        "FUN_0010e0d0": {
            "renaming": {},
            "code": "\n\n\n\nlong ftell(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ftell@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e0d0",
            "calling": [
                "ftell"
            ],
            "imported": false,
            "current_name": "FUN_0010e0d0"
        },
        "FUN_001021e0": {
            "renaming": {},
            "code": "\nvoid xexit(void)\n\n{\n  xexit();\n  return;\n}\n\n",
            "called": [
                "xexit"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001021e0",
            "calling": [
                "main",
                "fatal.constprop.0"
            ],
            "imported": false,
            "current_name": "FUN_001021e0"
        },
        "FUN_001020c0": {
            "renaming": {},
            "code": "\n\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strchr(__s,__c);\n  return pcVar1;\n}\n\n",
            "called": [
                "strchr"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x001020c0",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_001020c0"
        },
        "FUN_0010e068": {
            "renaming": {},
            "code": "\n\n\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strlen@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e068",
            "calling": [
                "strlen"
            ],
            "imported": false,
            "current_name": "FUN_0010e068"
        },
        "FUN_00102060": {
            "renaming": {},
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n",
            "called": [
                "fread"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102060",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102060"
        },
        "FUN_00102180": {
            "renaming": {},
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n",
            "called": [
                "fflush"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102180",
            "calling": [
                "main",
                "fatal.constprop.0"
            ],
            "imported": false,
            "current_name": "FUN_00102180"
        },
        "FUN_0010e148": {
            "renaming": {},
            "code": "\n\n\n\nint getc(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getc@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e148",
            "calling": [
                "getc"
            ],
            "imported": false,
            "current_name": "FUN_0010e148"
        },
        "FUN_00102e20": {
            "renaming": {
                "FUN_00102e20": "handle_internal_error_00102e20",
                "_stdout": "outStream",
                "_stderr": "errStream",
                "program_name": "programName"
            },
            "code": "\n\n\nvoid handleInternalError_00102e20(void)\n\n{\n  fflush(outStream);\n  fprintf(errStream,\"%s: \",programName);\n  fwrite(\"Internal error: no symbol alphabet for current style\",1,0x34,errStream);\n  putc(10,errStream);\n  xexit(1);\n  return;\n}\n\n",
            "called": [
                "putc",
                "xexit",
                "fwrite",
                "fprintf",
                "fflush"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102e20",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "handle_internal_error_00102e20"
        },
        "FUN_00102f00": {
            "renaming": {
                "FUN_00102f00": "FUNC_00102f00"
            },
            "code": "\nvoid FUNC_00102f00(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x00102f00",
            "calling": [],
            "imported": false,
            "current_name": "FUNC_00102f00"
        },
        "FUN_0010e100": {
            "renaming": {},
            "code": "\n\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fseek@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e100",
            "calling": [
                "fseek"
            ],
            "imported": false,
            "current_name": "FUN_0010e100"
        },
        "FUN_00102220": {
            "renaming": {},
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n",
            "called": [
                "__cxa_finalize"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102220",
            "calling": [
                "__do_global_dtors_aux"
            ],
            "imported": false,
            "current_name": "FUN_00102220"
        },
        "FUN_0010e060": {
            "renaming": {},
            "code": "\n\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* dcgettext@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0010e060",
            "calling": [
                "dcgettext"
            ],
            "imported": false,
            "current_name": "FUN_0010e060"
        },
        "FUN_00102100": {
            "renaming": {},
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n",
            "called": [
                "xmalloc_set_program_name"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102100",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "FUN_00102100"
        },
        "FUN_00102380": {
            "renaming": {
                "FUN_00102380": "print_demangled_name_00102380",
                "param_1": "inputString",
                "param_2": "unusedParam1",
                "param_3": "unusedParam2",
                "param_4": "unusedParam3",
                "uVar1": "startsWithDotOrDollar",
                "__ptr": "demangledName",
                "uVar2": "offset",
                "strip_underscore": "shouldStripUnderscore"
            },
            "code": "\n\n\nvoid printDemangledName_00102380(char *inputString,undefined8 unusedParam1,undefined8 unusedParam2,undefined8 unusedParam3)\n\n{\n  uint startsWithDotOrDollar;\n  void *demangledName;\n  ulong offset;\n  \n  startsWithDotOrDollar = (uint)(*inputString == '.' || *inputString == '$');\n  offset = (ulong)startsWithDotOrDollar;\n  if ((shouldStripUnderscore != 0) && (inputString[startsWithDotOrDollar] == '_')) {\n    offset = (ulong)(startsWithDotOrDollar + 1);\n  }\n  demangledName = (void *)cplus_demangle(inputString + offset,flags);\n  if (demangledName != (void *)0x0) {\n    if (*inputString == '.') {\n      putc(0x2e,_stdout);\n    }\n    printf(\"%s\",demangledName);\n    free(demangledName);\n    return;\n  }\n  printf(\"%s\",inputString,unusedParam3);\n  return;\n}\n\n",
            "called": [
                "putc",
                "demangle_it.cold",
                "printf",
                "cplus_demangle",
                "free"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102380",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "print_demangled_name_00102380"
        },
        "FUN_00102020": {
            "renaming": {
                "FUN_00102020": "execute_indirect_jump_00102020"
            },
            "code": "\nvoid executeIndirectJump_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)(undefined *)0x0)();\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102020",
            "calling": [],
            "imported": false,
            "current_name": "execute_indirect_jump_00102020"
        },
        "FUN_00102460": {
            "renaming": {
                "FUN_00102460": "FUNC_00102460"
            },
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00102484) */\n/* WARNING: Removing unreachable block (ram,0x00102490) */\n\nvoid FUNC_00102460(void)\n\n{\n  return;\n}\n\n",
            "called": [
                "_ITM_registerTMCloneTable"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x00102460",
            "calling": [
                "frame_dummy"
            ],
            "imported": false,
            "current_name": "FUNC_00102460"
        },
        "FUN_00102140": {
            "renaming": {},
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n",
            "called": [
                "fprintf"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x00102140",
            "calling": [
                "usage",
                "main",
                "fatal.constprop.0"
            ],
            "imported": false,
            "current_name": "FUN_00102140"
        }
    },
    "used_tokens": 7950,
    "layers": [
        [
            "FUN_0010225e",
            "FUN_00102230",
            "FUN_001024a0",
            "FUN_00102000",
            "FUN_00102400",
            "FUN_001024f0",
            "FUN_00102e20",
            "FUN_00102380",
            "FUN_00102020"
        ]
    ],
    "locked_functions": []
}