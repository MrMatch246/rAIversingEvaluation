{
    "functions": {
        "FUN_001070a0": {
            "renaming": {}, 
            "code": "\n\n\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strlen@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001070a0", 
            "calling": [
                "strlen"
            ], 
            "imported": false, 
            "current_name": "FUN_001070a0"
        }, 
        "FUN_00102620": {
            "renaming": {}, 
            "code": "\nvoid FUN_00102620(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined8 param_9,undefined8 param_10,undefined8 param_11,undefined8 param_12,\n                 undefined8 param_13,undefined8 param_14)\n\n{\n  char in_AL;\n  undefined4 local_d8;\n  undefined4 local_d4;\n  undefined *local_d0;\n  undefined *local_c8;\n  undefined local_b8 [8];\n  undefined8 local_b0;\n  undefined8 local_a8;\n  undefined8 local_a0;\n  undefined8 local_98;\n  undefined8 local_90;\n  undefined4 local_88;\n  undefined4 local_78;\n  undefined4 local_68;\n  undefined4 local_58;\n  undefined4 local_48;\n  undefined4 local_38;\n  undefined4 local_28;\n  undefined4 local_18;\n  \n  if (in_AL != '\\0') {\n    local_88 = param_1;\n    local_78 = param_2;\n    local_68 = param_3;\n    local_58 = param_4;\n    local_48 = param_5;\n    local_38 = param_6;\n    local_28 = param_7;\n    local_18 = param_8;\n  }\n  local_d0 = &stack0x00000008;\n  local_d8 = 8;\n  local_c8 = local_b8;\n  local_d4 = 0x30;\n  local_b0 = param_10;\n  local_a8 = param_11;\n  local_a0 = param_12;\n  local_98 = param_13;\n  local_90 = param_14;\n  report(param_9,&local_d8);\n  return;\n}\n\n", 
            "called": [
                "report"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102620", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102620"
        }, 
        "FUN_001070a8": {
            "renaming": {}, 
            "code": "\n\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getopt_long@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001070a8", 
            "calling": [
                "getopt_long"
            ], 
            "imported": false, 
            "current_name": "FUN_001070a8"
        }, 
        "FUN_001021b0": {
            "renaming": {}, 
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n", 
            "called": [
                "xmalloc_set_program_name"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001021b0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001021b0"
        }, 
        "FUN_001071c8": {
            "renaming": {}, 
            "code": "\n\n\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001071c8", 
            "calling": [
                "exit"
            ], 
            "imported": false, 
            "current_name": "FUN_001071c8"
        }, 
        "FUN_001022d0": {
            "renaming": {}, 
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n", 
            "called": [
                "fopen"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001022d0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001022d0"
        }, 
        "FUN_00102190": {
            "renaming": {}, 
            "code": "\nvoid bfd_get_error(void)\n\n{\n  bfd_get_error();\n  return;\n}\n\n", 
            "called": [
                "bfd_get_error"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102190", 
            "calling": [
                "bfd_nonfatal", 
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102190"
        }, 
        "FUN_00107120": {
            "renaming": {}, 
            "code": "\n\n\n\nint strcmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strcmp@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107120", 
            "calling": [
                "strcmp"
            ], 
            "imported": false, 
            "current_name": "FUN_00107120"
        }, 
        "FUN_00102070": {
            "renaming": {}, 
            "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  return piVar1;\n}\n\n", 
            "called": [
                "__errno_location"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102070", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102070"
        }, 
        "FUN_00107080": {
            "renaming": {}, 
            "code": "\n\n\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fclose@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107080", 
            "calling": [
                "fclose"
            ], 
            "imported": false, 
            "current_name": "FUN_00107080"
        }, 
        "FUN_00102110": {
            "renaming": {}, 
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n", 
            "called": [
                "dcgettext"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102110", 
            "calling": [
                "usage", 
                "main", 
                "bfd_nonfatal.cold"
            ], 
            "imported": false, 
            "current_name": "FUN_00102110"
        }, 
        "FUN_00107128": {
            "renaming": {}, 
            "code": "\n\n\n\nint putc(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putc@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107128", 
            "calling": [
                "putc"
            ], 
            "imported": false, 
            "current_name": "FUN_00107128"
        }, 
        "FUN_00102230": {
            "renaming": {}, 
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n", 
            "called": [
                "fprintf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102230", 
            "calling": [
                "usage", 
                "main", 
                "bfd_nonfatal.cold", 
                "report"
            ], 
            "imported": false, 
            "current_name": "FUN_00102230"
        }, 
        "FUN_00102350": {
            "renaming": {}, 
            "code": "\nvoid bfd_check_format(void)\n\n{\n  bfd_check_format();\n  return;\n}\n\n", 
            "called": [
                "bfd_check_format"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102350", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102350"
        }, 
        "FUN_001070b0": {
            "renaming": {}, 
            "code": "\n\n\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strchr@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001070b0", 
            "calling": [
                "strchr"
            ], 
            "imported": false, 
            "current_name": "FUN_001070b0"
        }, 
        "FUN_00107008": {
            "renaming": {}, 
            "code": "\n\n\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* free@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107008", 
            "calling": [
                "free"
            ], 
            "imported": false, 
            "current_name": "FUN_00107008"
        }, 
        "FUN_00107090": {
            "renaming": {}, 
            "code": "\n\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* bindtextdomain@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107090", 
            "calling": [
                "bindtextdomain"
            ], 
            "imported": false, 
            "current_name": "FUN_00107090"
        }, 
        "FUN_001020a0": {
            "renaming": {}, 
            "code": "\nvoid bfd_set_default_target(void)\n\n{\n  bfd_set_default_target();\n  return;\n}\n\n", 
            "called": [
                "bfd_set_default_target"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001020a0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001020a0"
        }, 
        "FUN_001070b8": {
            "renaming": {}, 
            "code": "\n\n\n\nint printf(char *__format,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* printf@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001070b8", 
            "calling": [
                "printf"
            ], 
            "imported": false, 
            "current_name": "FUN_001070b8"
        }, 
        "FUN_001025c0": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_001025c0(char *param_1,__gnuc_va_list param_2)\n\n{\n  fflush(_stdout);\n  fprintf(_stderr,\"%s: \",program_name);\n  vfprintf(_stderr,param_1,param_2);\n  putc(10,_stderr);\n  return;\n}\n\n", 
            "called": [
                "fprintf", 
                "putc", 
                "vfprintf", 
                "fflush"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001025c0", 
            "calling": [
                "non_fatal", 
                "fatal"
            ], 
            "imported": false, 
            "current_name": "FUN_001025c0"
        }, 
        "FUN_001021c0": {
            "renaming": {}, 
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n", 
            "called": [
                "xstrdup"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001021c0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001021c0"
        }, 
        "FUN_001022e0": {
            "renaming": {}, 
            "code": "\nvoid xexit(void)\n\n{\n  xexit();\n  return;\n}\n\n", 
            "called": [
                "xexit"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001022e0", 
            "calling": [
                "fatal", 
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001022e0"
        }, 
        "FUN_00102080": {
            "renaming": {}, 
            "code": "\n\n\nint puts(char *__s)\n\n{\n  int iVar1;\n  \n  iVar1 = puts(__s);\n  return iVar1;\n}\n\n", 
            "called": [
                "puts"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102080", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102080"
        }, 
        "FUN_00107098": {
            "renaming": {}, 
            "code": "\n\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* dcgettext@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107098", 
            "calling": [
                "dcgettext"
            ], 
            "imported": false, 
            "current_name": "FUN_00107098"
        }, 
        "FUN_00102000": {
            "renaming": {}, 
            "code": "\nint FUN_00102000(EVP_PKEY_CTX *ctx)\n\n{\n  int iVar1;\n  \n  iVar1 = __gmon_start__();\n  return iVar1;\n}\n\n", 
            "called": [
                "__gmon_start__"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102000", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00102000"
        }, 
        "FUN_00107018": {
            "renaming": {}, 
            "code": "\n\n\n\nint putchar(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putchar@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107018", 
            "calling": [
                "putchar"
            ], 
            "imported": false, 
            "current_name": "FUN_00107018"
        }, 
        "FUN_00102120": {
            "renaming": {}, 
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n", 
            "called": [
                "strlen"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102120", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102120"
        }, 
        "FUN_00107138": {
            "renaming": {}, 
            "code": "\n\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fprintf@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107138", 
            "calling": [
                "fprintf"
            ], 
            "imported": false, 
            "current_name": "FUN_00107138"
        }, 
        "FUN_00102760": {
            "renaming": {}, 
            "code": "\nvoid FUN_00102760(void)\n\n{\n  if (completed_0 != '\\0') {\n    return;\n  }\n  __cxa_finalize(__dso_handle);\n  deregister_tm_clones();\n  completed_0 = 1;\n  return;\n}\n\n", 
            "called": [
                "__cxa_finalize", 
                "deregister_tm_clones"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102760", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00102760"
        }, 
        "FUN_00102240": {
            "renaming": {}, 
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n", 
            "called": [
                "ftell"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102240", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102240"
        }, 
        "FUN_00102360": {
            "renaming": {}, 
            "code": "\nvoid bfd_fprintf_vma(void)\n\n{\n  bfd_fprintf_vma();\n  return;\n}\n\n", 
            "called": [
                "bfd_fprintf_vma"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102360", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102360"
        }, 
        "FUN_001026f0": {
            "renaming": {}, 
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00102703) */\n/* WARNING: Removing unreachable block (ram,0x0010270f) */\n\nvoid FUN_001026f0(void)\n\n{\n  return;\n}\n\n", 
            "called": [
                "_ITM_deregisterTMCloneTable"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001026f0", 
            "calling": [
                "__do_global_dtors_aux"
            ], 
            "imported": false, 
            "current_name": "FUN_001026f0"
        }, 
        "FUN_001070c8": {
            "renaming": {}, 
            "code": "\n\n\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strrchr@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001070c8", 
            "calling": [
                "strrchr"
            ], 
            "imported": false, 
            "current_name": "FUN_001070c8"
        }, 
        "FUN_001022f0": {
            "renaming": {}, 
            "code": "\nvoid bfd_close(void)\n\n{\n  bfd_close();\n  return;\n}\n\n", 
            "called": [
                "bfd_close"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001022f0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001022f0"
        }, 
        "FUN_001020b0": {
            "renaming": {}, 
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n", 
            "called": [
                "fread"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001020b0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001020b0"
        }, 
        "FUN_001021d0": {
            "renaming": {}, 
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n", 
            "called": [
                "fputc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001021d0", 
            "calling": [
                "usage", 
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001021d0"
        }, 
        "FUN_00102090": {
            "renaming": {}, 
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n", 
            "called": [
                "ferror"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102090", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102090"
        }, 
        "FUN_00107020": {
            "renaming": {}, 
            "code": "\n\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@GLIBC_2.34 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107020", 
            "calling": [
                "_start"
            ], 
            "imported": false, 
            "current_name": "FUN_00107020"
        }, 
        "FUN_00107140": {
            "renaming": {}, 
            "code": "\n\n\n\nlong ftell(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ftell@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107140", 
            "calling": [
                "ftell"
            ], 
            "imported": false, 
            "current_name": "FUN_00107140"
        }, 
        "FUN_00107028": {
            "renaming": {}, 
            "code": "\n\n\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __errno_location@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107028", 
            "calling": [
                "__errno_location"
            ], 
            "imported": false, 
            "current_name": "FUN_00107028"
        }, 
        "FUN_00102370": {
            "renaming": {}, 
            "code": "\nvoid bfd_map_over_sections(void)\n\n{\n  bfd_map_over_sections();\n  return;\n}\n\n", 
            "called": [
                "bfd_map_over_sections"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102370", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102370"
        }, 
        "FUN_00103cd0": {
            "renaming": {}, 
            "code": "\nvoid FUN_00103cd0(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103cd0", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00103cd0"
        }, 
        "FUN_00102130": {
            "renaming": {}, 
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n", 
            "called": [
                "getopt_long"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102130", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102130"
        }, 
        "FUN_00102250": {
            "renaming": {}, 
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n", 
            "called": [
                "stat"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102250", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102250"
        }, 
        "FUN_001023a0": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_001023a0(void)\n\n{\n  undefined8 uVar1;\n  long unaff_RBX;\n  undefined8 unaff_retaddr;\n  \n  uVar1 = dcgettext(0,\"cause of error unknown\",5);\n  fflush(_stdout);\n  if (unaff_RBX != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",program_name);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",program_name,uVar1,unaff_retaddr);\n  return;\n}\n\n", 
            "called": [
                "fprintf", 
                "dcgettext", 
                "fflush"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001023a0", 
            "calling": [
                "bfd_nonfatal"
            ], 
            "imported": false, 
            "current_name": "FUN_001023a0"
        }, 
        "FUN_001021e0": {
            "renaming": {}, 
            "code": "\nvoid bfd_get_section_by_name(void)\n\n{\n  bfd_get_section_by_name();\n  return;\n}\n\n", 
            "called": [
                "bfd_get_section_by_name"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001021e0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001021e0"
        }, 
        "FUN_001071f8": {
            "renaming": {}, 
            "code": "\n\n\n\nchar * strerror(int __errnum)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strerror@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001071f8", 
            "calling": [
                "strerror"
            ], 
            "imported": false, 
            "current_name": "FUN_001071f8"
        }, 
        "FUN_001020c0": {
            "renaming": {}, 
            "code": "\nvoid cplus_demangle_set_style(void)\n\n{\n  cplus_demangle_set_style();\n  return;\n}\n\n", 
            "called": [
                "cplus_demangle_set_style"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001020c0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001020c0"
        }, 
        "FUN_00107150": {
            "renaming": {}, 
            "code": "\n\n\n\nint stat(char *__file,stat *__buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* stat@GLIBC_2.33 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107150", 
            "calling": [
                "stat"
            ], 
            "imported": false, 
            "current_name": "FUN_00107150"
        }, 
        "FUN_001027a0": {
            "renaming": {}, 
            "code": "\nvoid register_tm_clones(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
            "called": [
                "register_tm_clones"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001027a0", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_001027a0"
        }, 
        "FUN_00102540": {
            "renaming": {}, 
            "code": "\nvoid FUN_00102540(long param_1,long param_2)\n\n{\n  ulong uVar1;\n  \n  if ((found == '\\0') && ((*(byte *)(param_2 + 0x24) & 1) != 0)) {\n    uVar1 = *(ulong *)(param_2 + 0x30);\n    if ((uVar1 <= pc) && (pc < *(long *)(param_2 + 0x40) + uVar1)) {\n      found = (**(code **)(*(long *)(param_1 + 8) + 0x240))\n                        (param_1,syms,param_2,pc - uVar1,&filename,&functionname,&line,\n                         &discriminator);\n      return;\n    }\n  }\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102540", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102540"
        }, 
        "FUN_00107158": {
            "renaming": {}, 
            "code": "\n\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcpy@GLIBC_2.14 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107158", 
            "calling": [
                "memcpy"
            ], 
            "imported": false, 
            "current_name": "FUN_00107158"
        }, 
        "FUN_00102260": {
            "renaming": {}, 
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n", 
            "called": [
                "memcpy"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102260", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102260"
        }, 
        "FUN_00102380": {
            "renaming": {}, 
            "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strerror(__errnum);\n  return pcVar1;\n}\n\n", 
            "called": [
                "strerror"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102380", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102380"
        }, 
        "FUN_00102020": {
            "renaming": {}, 
            "code": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)(undefined *)0x0)();\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102020", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00102020"
        }, 
        "FUN_00102140": {
            "renaming": {}, 
            "code": "\n\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strchr(__s,__c);\n  return pcVar1;\n}\n\n", 
            "called": [
                "strchr"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102140", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102140"
        }, 
        "FUN_00102300": {
            "renaming": {}, 
            "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 = vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n", 
            "called": [
                "vfprintf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102300", 
            "calling": [
                "report"
            ], 
            "imported": false, 
            "current_name": "FUN_00102300"
        }, 
        "FUN_001020d0": {
            "renaming": {}, 
            "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n", 
            "called": [
                "textdomain"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001020d0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001020d0"
        }, 
        "FUN_001021f0": {
            "renaming": {}, 
            "code": "\n\n\nchar * fgets(char *__s,int __n,FILE *__stream)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = fgets(__s,__n,__stream);\n  return pcVar1;\n}\n\n", 
            "called": [
                "fgets"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001021f0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001021f0"
        }, 
        "FUN_00102390": {
            "renaming": {}, 
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n", 
            "called": [
                "__cxa_finalize"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102390", 
            "calling": [
                "__do_global_dtors_aux"
            ], 
            "imported": false, 
            "current_name": "FUN_00102390"
        }, 
        "FUN_00107040": {
            "renaming": {}, 
            "code": "\n\n\n\nint puts(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* puts@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107040", 
            "calling": [
                "puts"
            ], 
            "imported": false, 
            "current_name": "FUN_00107040"
        }, 
        "FUN_00107160": {
            "renaming": {}, 
            "code": "\n\n\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fflush@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107160", 
            "calling": [
                "fflush"
            ], 
            "imported": false, 
            "current_name": "FUN_00107160"
        }, 
        "FUN_001027b0": {
            "renaming": {}, 
            "code": "\n/* WARNING: Type propagation algorithm not settling */\n\n\nundefined8 FUN_001027b0(uint param_1,FILE *param_2)\n\n{\n  byte *pbVar1;\n  uint *puVar2;\n  byte bVar3;\n  ushort uVar4;\n  long lVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  void *pvVar9;\n  byte bVar10;\n  char cVar11;\n  int iVar12;\n  uint uVar13;\n  int iVar14;\n  undefined4 uVar15;\n  FILE *__stream;\n  byte *__s;\n  long *plVar16;\n  size_t sVar17;\n  byte *__ptr;\n  long lVar18;\n  FILE *pFVar19;\n  stat *psVar20;\n  undefined8 uVar21;\n  int *piVar22;\n  long *plVar23;\n  stat *__s_00;\n  ulong uVar24;\n  FILE *pFVar25;\n  char *pcVar26;\n  byte *pbVar27;\n  char *unaff_RBP;\n  long lVar28;\n  byte *pbVar29;\n  char *pcVar30;\n  long *plVar31;\n  int iVar32;\n  undefined1 *unaff_R12;\n  stat *psVar33;\n  int iVar34;\n  uint uVar35;\n  long *local_148;\n  long *local_140;\n  size_t local_120;\n  long local_118;\n  long *local_d0;\n  stat local_c8;\n  \n  pFVar25 = (FILE *)(ulong)param_1;\n  setlocale(5,\"\");\n  pcVar26 = \"binutils\";\n  setlocale(0,\"\");\n  bindtextdomain(\"binutils\",\"/usr/share/locale\");\n  textdomain(\"binutils\");\n  program_name = *(long **)param_2;\n  xmalloc_set_program_name();\n  bfd_set_error_program_name(program_name);\n  pFVar19 = param_2;\n  __stream = param_2;\n  if (1 < (int)param_1) {\n    iVar14 = 2000;\n    unaff_R12 = (undefined1 *)0x1;\n    local_140 = (long *)0x0;\n    do {\n      iVar32 = (int)unaff_R12;\n      unaff_RBP = (char *)(long)iVar32;\n      local_148 = (long *)((long)unaff_RBP * 8);\n      iVar34 = (int)pFVar25;\n      if (**(char **)(&pFVar19->_flags + (long)unaff_RBP * 2) == '@') {\n        iVar14 = iVar14 + -1;\n        if (iVar14 == 0) {\n          plVar16 = *(long **)pFVar19;\n          pcVar26 = \"%s: error: too many @-files encountered\\n\";\n          goto LAB_00103239;\n        }\n        pcVar26 = *(char **)(&pFVar19->_flags + (long)unaff_RBP * 2) + 1;\n        iVar12 = stat(pcVar26,&local_c8);\n        if (iVar12 < 0) goto LAB_00102c30;\n        if ((local_c8.st_mode & 0xf000) == 0x4000) {\n          do {\n            plVar16 = *(long **)pFVar19;\n            pcVar26 = \"%s: error: @-file refers to a directory\\n\";\nLAB_00103239:\n            fprintf(_stderr,pcVar26,plVar16);\n            xexit(1);\n          } while( true );\n        }\n        __stream = fopen(pcVar26,\"r\");\n        if (__stream == (FILE *)0x0) goto LAB_00102c30;\n        iVar12 = fseek(__stream,0,2);\n        if (((iVar12 == -1) ||\n            (pcVar26 = (char *)ftell(__stream), (long *)pcVar26 == (long *)0xffffffffffffffff)) ||\n           (iVar12 = fseek(__stream,0,0), iVar12 == -1)) {\nLAB_00102c90:\n          fclose(__stream);\n          if (iVar32 + 1 < iVar34) goto LAB_00102c3a;\n          break;\n        }\n        __s = (byte *)xmalloc((long)pcVar26 + 1);\n        plVar16 = (long *)fread(__s,1,(size_t)pcVar26,__stream);\n        if (((long *)pcVar26 != plVar16) && (iVar12 = ferror(__stream), iVar12 != 0)) {\n          free(__s);\n          goto LAB_00102c90;\n        }\n        __s[(long)plVar16] = 0;\n        bVar10 = *__s;\n        pbVar27 = __s;\n        if (bVar10 != 0) {\nLAB_00102980:\n          if (((&_sch_istable)[(ulong)bVar10 * 2] & 0x40) != 0) goto LAB_00102970;\n          sVar17 = strlen((char *)__s);\n          __ptr = (byte *)xmalloc(sVar17 + 1);\n          plVar16 = (long *)0x0;\n          iVar12 = 0;\n          bVar6 = false;\n          bVar7 = false;\n          bVar8 = false;\n          local_118 = 0;\n          pbVar27 = __s;\n          do {\n            while (((&_sch_istable)[(ulong)*pbVar27 * 2] & 0x40) != 0) {\n              pbVar27 = pbVar27 + 1;\n            }\n            if ((iVar12 == 0) || (plVar23 = plVar16 + local_118, iVar12 + -1 <= (int)local_118)) {\n              if (plVar16 == (long *)0x0) {\n                plVar16 = (long *)xmalloc(0x40);\n                iVar12 = 8;\n                plVar23 = plVar16 + local_118;\n                *plVar23 = 0;\n              }\n              else {\n                iVar12 = iVar12 * 2;\n                plVar16 = (long *)xrealloc(plVar16,(long)iVar12 << 3);\n                plVar23 = plVar16 + local_118;\n                *plVar23 = 0;\n              }\n            }\n            bVar10 = *pbVar27;\n            pbVar29 = __ptr;\n            while (bVar10 != 0) {\n              while( true ) {\n                if ((((&_sch_istable)[(ulong)bVar10 * 2] & 0x40) != 0) &&\n                   (!(bool)(bVar8 | bVar7 | bVar6))) {\n                  bVar8 = false;\n                  bVar6 = false;\n                  bVar7 = false;\n                  goto LAB_00102a9e;\n                }\n                if (!bVar8) break;\n                pbVar27 = pbVar27 + 1;\n                *pbVar29 = bVar10;\n                pbVar29 = pbVar29 + 1;\n                bVar8 = false;\n                bVar10 = *pbVar27;\n                if (bVar10 == 0) goto LAB_00102a9e;\n              }\n              if (bVar10 == 0x5c) {\n                bVar8 = true;\n              }\n              else if (bVar7) {\n                if (bVar10 == 0x27) {\n                  bVar7 = false;\n                }\n                else {\nLAB_00102c0d:\n                  *pbVar29 = bVar10;\n                  pbVar29 = pbVar29 + 1;\n                }\n              }\n              else if (bVar6) {\n                if (bVar10 != 0x22) goto LAB_00102c0d;\n                bVar6 = false;\n              }\n              else if (bVar10 == 0x27) {\n                bVar7 = true;\n              }\n              else {\n                if (bVar10 != 0x22) goto LAB_00102c0d;\n                bVar6 = true;\n              }\n              pbVar1 = pbVar27 + 1;\n              pbVar27 = pbVar27 + 1;\n              bVar10 = *pbVar1;\n            }\nLAB_00102a9e:\n            *pbVar29 = 0;\n            lVar18 = xstrdup(__ptr);\n            *plVar23 = lVar18;\n            plVar16[local_118 + 1] = 0;\n            bVar10 = *pbVar27;\n            bVar3 = (&_sch_istable)[(ulong)bVar10 * 2];\n            while ((bVar3 & 0x40) != 0) {\n              bVar10 = pbVar27[1];\n              pbVar27 = pbVar27 + 1;\n              bVar3 = (&_sch_istable)[(ulong)bVar10 * 2];\n            }\n            local_118 = local_118 + 1;\n          } while (bVar10 != 0);\n          free(__ptr);\n          pFVar25 = pFVar19;\n          if (param_2 == pFVar19) goto LAB_001030d9;\n          goto LAB_00102b38;\n        }\nLAB_001030bb:\n        plVar16 = (long *)xmalloc(8);\n        *plVar16 = 0;\n        if (param_2 == pFVar19) {\nLAB_001030d9:\n          if (*(long **)pFVar19 == (long *)0x0) {\n            iVar12 = 0;\n          }\n          else {\n            lVar18 = 1;\n            do {\n              iVar12 = (int)lVar18;\n              lVar28 = lVar18 * 2;\n              lVar18 = lVar18 + 1;\n            } while (*(long *)(&pFVar19->_flags + lVar28) != 0);\n          }\n          pFVar25 = (FILE *)xmalloc((long)(iVar12 + 1) << 3);\n          plVar23 = *(long **)pFVar19;\n          lVar18 = 0;\n          while (plVar23 != (long *)0x0) {\n            uVar21 = xstrdup();\n            *(undefined8 *)((long)&pFVar25->_flags + lVar18) = uVar21;\n            plVar23 = *(long **)(pFVar19->_shortbuf + lVar18 + -0x7b);\n            lVar18 = lVar18 + 8;\n          }\n          *(undefined8 *)((long)&pFVar25->_flags + lVar18) = 0;\nLAB_00102b38:\n          pFVar19 = pFVar25;\n          if (*plVar16 == 0) goto LAB_0010318e;\n          pcVar26 = (char *)0x0;\n          do {\n            pcVar26 = (char *)((long)pcVar26 + 1);\n          } while (plVar16[(long)pcVar26] != 0);\n          local_120 = (long)pcVar26 * 8;\n        }\n        else {\nLAB_0010318e:\n          pcVar26 = (char *)0x0;\n          local_120 = 0;\n        }\n        free(*(void **)(&pFVar19->_flags + (long)unaff_RBP * 2));\n        pFVar19 = (FILE *)xrealloc(pFVar19,((long)pcVar26 + (long)iVar34 + 1) * 8);\n        uVar35 = iVar34 + -1 + (int)pcVar26;\n        pFVar25 = (FILE *)(ulong)uVar35;\n        memmove(&pFVar19->_flags + (long)(FILE **)((long)unaff_RBP + (long)pcVar26) * 2,\n                &pFVar19->_IO_read_ptr + (long)unaff_RBP,(long)(iVar34 - iVar32) << 3);\n        memcpy(&pFVar19->_flags + (long)unaff_RBP * 2,plVar16,local_120);\n        free(plVar16);\n        free(__s);\n        fclose(__stream);\n        uVar13 = (int)local_140 + 1;\n        unaff_RBP = (char *)(FILE **)((long)unaff_RBP + (long)pcVar26);\n        unaff_R12 = (undefined1 *)local_148;\n        local_148 = plVar16;\n        if ((int)uVar35 <= (int)uVar13) break;\n      }\n      else {\nLAB_00102c30:\n        if (iVar34 <= iVar32 + 1) break;\nLAB_00102c3a:\n        uVar13 = iVar32 + 1;\n        local_140 = (long *)unaff_R12;\n      }\n      unaff_R12 = (undefined1 *)(ulong)uVar13;\n    } while( true );\n  }\n  iVar14 = bfd_init();\n  if (iVar14 != 0x118) {\n    uVar21 = dcgettext(0,\"fatal error: libbfd ABI mismatch\",5);\n    fatal(uVar21);\n    goto switchD_00102d16_caseD_43;\n  }\n  pcVar26 = \"x86_64-pc-linux-gnu\";\n  cVar11 = bfd_set_default_target();\n  if (cVar11 == '\\0') {\n    uVar15 = bfd_get_error();\n    unaff_RBP = (char *)bfd_errmsg(uVar15);\n    uVar21 = dcgettext(0,\"can\\'t set BFD default target to `%s\\': %s\",5);\n    fatal(uVar21,\"x86_64-pc-linux-gnu\",unaff_RBP);\n    goto switchD_00102d16_caseD_61;\n  }\n  unaff_R12 = long_options;\n  local_140 = (long *)0x0;\n  unaff_RBP = \"ab:Ce:rRsfHhij:pVv\";\n  local_148 = (long *)0x0;\n  pcVar26 = (char *)(long *)0x0;\nswitchD_00102d16_caseD_0:\n  do {\n    uVar15 = getopt_long(pFVar25,pFVar19,unaff_RBP,unaff_R12,0);\n    switch(uVar15) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n    case 0x12:\n    case 0x13:\n    case 0x14:\n    case 0x15:\n    case 0x16:\n    case 0x17:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n    case 0x28:\n    case 0x29:\n    case 0x2a:\n    case 0x2b:\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x44:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x50:\n    case 0x51:\n    case 0x53:\n    case 0x54:\n    case 0x55:\n    case 0x57:\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n    case 0x5f:\n    case 0x60:\n    case 99:\n    case 100:\n    case 0x67:\n    case 0x6b:\n    case 0x6c:\n    case 0x6d:\n    case 0x6e:\n    case 0x6f:\n    case 0x71:\n    case 0x74:\n    case 0x75:\n      usage(_stderr,1);\n    case 0x6a:\n      local_148 = _optarg;\n      break;\n    case 0x43:\nswitchD_00102d16_caseD_43:\n      __stream = (FILE *)&optarg;\n      do_demangle = '\\x01';\n      if (_optarg != (long *)0x0) {\n        iVar14 = cplus_demangle_name_to_style();\n        if (iVar14 == 0) goto LAB_0010339f;\n        cplus_demangle_set_style();\n      }\n      break;\n    case 0x48:\n    case 0x68:\n      usage(_stdout,0);\nLAB_0010339f:\n      pcVar26 = *(char **)__stream;\n      pcVar30 = \"unknown demangling style `%s\\'\";\nLAB_001033ae:\n      uVar21 = dcgettext(0,pcVar30,5);\n      fatal(uVar21,pcVar26);\nswitchD_00102d16_caseD_72:\n      demangle_flags = demangle_flags | 0x40000;\n      break;\n    case 0x52:\n      demangle_flags = demangle_flags & 0xfffbffff;\n      break;\n    case 0x56:\n    case 0x76:\n      printf(\"GNU %s %s\\n\",\"addr2line\",\"(GNU Binutils for Debian) 2.40\");\n      pcVar26 = (char *)dcgettext(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n      printf(pcVar26);\n      pcVar26 = (char *)dcgettext(0,\n                                  \"This program is free software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                                  ,5);\n      printf(pcVar26);\n                    \n      exit(0);\n    case 0x61:\nswitchD_00102d16_caseD_61:\n      with_addresses = '\\x01';\n      break;\n    case 0x62:\n      local_140 = _optarg;\n      break;\n    case 0x65:\n      pcVar26 = (char *)_optarg;\n      break;\n    case 0x66:\n      with_functions = '\\x01';\n      break;\n    case 0x69:\n      unwind_inlines = '\\x01';\n      break;\n    case 0x70:\n      pretty_print = '\\x01';\n      break;\n    case 0x72:\n      goto switchD_00102d16_caseD_72;\n    case 0x73:\n      goto switchD_00102d16_caseD_73;\n    default:\n      addr = (char **)(&pFVar19->_flags + (long)_optind * 2);\n      naddr = (int)pFVar25 - _optind;\n      if ((long *)pcVar26 == (long *)0x0) {\n        pcVar26 = \"a.out\";\n      }\n      iVar14 = stat(pcVar26,&local_c8);\n      if (iVar14 < 0) {\n        piVar22 = __errno_location();\n        pcVar30 = \"\\'%s\\': No such file\";\n        if (*piVar22 != 2) {\n          pcVar30 = strerror(*piVar22);\n          uVar21 = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n          non_fatal(uVar21,pcVar26,pcVar30);\n          return 1;\n        }\nLAB_001039cd:\n        uVar21 = dcgettext(0,pcVar30,5);\n        non_fatal(uVar21,pcVar26);\n        return 1;\n      }\n      if ((local_c8.st_mode & 0xf000) == 0x4000) {\n        pcVar30 = \"Warning: \\'%s\\' is a directory\";\n        goto LAB_001039cd;\n      }\n      pcVar30 = \"Warning: \\'%s\\' is not an ordinary file\";\n      if ((local_c8.st_mode & 0xf000) != 0x8000) goto LAB_001039cd;\n      pcVar30 = \"Warning: \\'%s\\' has negative size, probably it is too large\";\n      if (local_c8.st_size < 0) goto LAB_001039cd;\n      if (local_c8.st_size == 0) {\n        return 1;\n      }\n      pFVar19 = (FILE *)bfd_openr(pcVar26,local_140);\n      if (pFVar19 == (FILE *)0x0) {\n        bfd_nonfatal(pcVar26);\n        xexit(1);\n        goto LAB_00103a85;\n      }\n      puVar2 = (uint *)((long)&pFVar19->_IO_buf_end + 4);\n      *puVar2 = *puVar2 | 0x8000;\n      cVar11 = bfd_check_format(pFVar19,2);\n      if (cVar11 != '\\0') {\n        pcVar30 = \"%s: cannot get addresses from archive\";\n        goto LAB_001033ae;\n      }\n      cVar11 = bfd_check_format_matches(pFVar19,1,&local_d0);\n      if (cVar11 == '\\0') {\n        bfd_nonfatal(*(long **)pFVar19);\n        iVar14 = bfd_get_error();\n        if (iVar14 == 0xd) {\n          pFVar19 = (FILE *)0x1040e1;\n          fflush(_stdout);\n          plVar16 = program_name;\n          pcVar26 = (char *)dcgettext(0,\"%s: Matching formats:\",5);\n          fprintf(_stderr,pcVar26,plVar16);\n          for (plVar16 = local_d0; *plVar16 != 0; plVar16 = plVar16 + 1) {\n            fprintf(_stderr,\" %s\");\n          }\n          free(local_d0);\n          fputc(10,_stderr);\n        }\n        goto LAB_00103801;\n      }\n      plVar16 = local_148;\n      if ((local_148 != (long *)0x0) &&\n         (plVar16 = (long *)bfd_get_section_by_name(pFVar19), plVar16 == (long *)0x0)) {\n        uVar21 = dcgettext(0,\"%s: cannot find section %s\",5);\n        fatal(uVar21,pcVar26,local_148);\n        goto LAB_0010399c;\n      }\n      local_148 = plVar16;\n      if ((*(byte *)((long)&pFVar19->_IO_buf_end + 4) & 0x10) == 0) goto LAB_00102ecd;\n      lVar18 = (**(code **)(pFVar19->_IO_read_ptr + 0x1f8))(pFVar19);\n      if (lVar18 == 0) {\n        lVar18 = (**(code **)(pFVar19->_IO_read_ptr + 0x350))(pFVar19);\n        if (-1 < lVar18) {\n          syms = (void *)xmalloc(lVar18);\n          symcount = (**(code **)(pFVar19->_IO_read_ptr + 0x358))(pFVar19);\n          if (-1 < symcount) goto LAB_00102ebf;\n        }\n      }\n      else if (-1 < lVar18) {\n        syms = (void *)xmalloc(lVar18);\n        symcount = (**(code **)(pFVar19->_IO_read_ptr + 0x200))(pFVar19);\n        if (-1 < symcount) {\n          if (symcount == 0) goto LAB_0010380b;\n          goto LAB_00102ebf;\n        }\n      }\n      bfd_nonfatal(*(long **)pFVar19);\nLAB_00103801:\n      xexit(1);\nLAB_0010380b:\n      lVar18 = (**(code **)(pFVar19->_IO_read_ptr + 0x350))(pFVar19);\n      if (0 < lVar18) {\n        free(syms);\n        syms = (void *)xmalloc(lVar18);\n        symcount = (**(code **)(pFVar19->_IO_read_ptr + 0x358))(pFVar19);\n      }\nLAB_00102ebf:\n      if (symcount < 1) {\n        free(syms);\n        syms = (void *)0x0;\n      }\nLAB_00102ecd:\n      unaff_R12 = (undefined1 *)(ulong)naddr;\n      __stream = (FILE *)&DAT_0010400a;\n      if (naddr == 0) goto LAB_00103065;\nLAB_00102ee7:\n      if ((int)naddr < 1) {\nLAB_0010308a:\n        free(syms);\n        syms = (void *)0x0;\n        bfd_close(pFVar19);\n        return 0;\n      }\n      naddr = naddr - 1;\n      psVar20 = (stat *)*addr;\n      addr = addr + 1;\n      do {\n        bVar10 = *(byte *)&psVar20->st_dev;\n        uVar24 = (ulong)bVar10;\n        uVar4 = *(ushort *)(&_sch_istable + uVar24 * 2);\n        __s_00 = psVar20;\n        while ((uVar4 & 0x40) != 0) {\n          bVar10 = *(byte *)((long)&__s_00->st_dev + 1);\n          uVar24 = (ulong)bVar10;\n          __s_00 = (stat *)((long)&__s_00->st_dev + 1);\n          uVar4 = *(ushort *)(&_sch_istable + uVar24 * 2);\n        }\n        if ((((uVar4 & 4) == 0) && (bVar10 != 0)) &&\n           ((psVar33 = __s_00, 5 < (byte)((&_sch_toupper)[uVar24] + 0xbf) ||\n            (pcVar26 = strchr((char *)__s_00,0x2b), pcVar26 != (char *)0x0)))) {\n          while( true ) {\n            bVar10 = *(byte *)&psVar33->st_dev;\n            psVar20 = psVar33;\n            if (((bVar10 == 0) || ((*(ushort *)(&_sch_istable + (ulong)bVar10 * 2) & 0x40) != 0)) ||\n               (bVar10 == 0x2b)) break;\n            psVar33 = (stat *)((long)&psVar33->st_dev + 1);\n          }\n          while (((&_sch_istable)[(ulong)*(byte *)&psVar20->st_dev * 2] & 0x40) != 0) {\n            psVar20 = (stat *)((long)&psVar20->st_dev + 1);\n          }\n          uVar24 = 0;\n          if (*(byte *)&psVar20->st_dev == 0x2b) {\n            uVar24 = strtoul((char *)((long)&psVar20->st_dev + 1),(char **)0x0,0);\n          }\n          pvVar9 = syms;\n          lVar18 = symcount;\n          *(undefined *)&psVar33->st_dev = 0;\n          for (lVar28 = 0; lVar28 < lVar18; lVar28 = lVar28 + 1) {\n            lVar5 = *(long *)((long)pvVar9 + lVar28 * 8);\n            iVar14 = strcmp(*(char **)(lVar5 + 8),(char *)__s_00);\n            if (iVar14 == 0) {\n              unaff_R12 = (undefined1 *)((ulong)unaff_R12 & 0xffffffff);\n              pc = uVar24 + *(long *)(lVar5 + 0x10) + *(long *)(*(long *)(lVar5 + 0x20) + 0x30);\n              goto LAB_00102f4b;\n            }\n          }\n          unaff_R12 = (undefined1 *)((ulong)unaff_R12 & 0xffffffff);\n          for (lVar18 = 0; lVar18 < symcount; lVar18 = lVar18 + 1) {\n            pcVar26 = (char *)bfd_demangle(pFVar19,*(undefined8 *)\n                                                    (*(long *)((long)syms + lVar18 * 8) + 8),\n                                           demangle_flags);\n            if ((pcVar26 != (char *)0x0) && (iVar14 = strcmp(pcVar26,(char *)__s_00), iVar14 == 0))\n            {\n              free(pcVar26);\n              lVar18 = *(long *)((long)syms + lVar18 * 8);\n              pc = *(long *)(lVar18 + 0x10) + uVar24 + *(long *)(*(long *)(lVar18 + 0x20) + 0x30);\n              goto LAB_00102f4b;\n            }\n            free(pcVar26);\n          }\n          pc = 0;\n        }\n        else {\n          pc = bfd_scan_vma(psVar20,0,0x10);\n        }\nLAB_00102f4b:\n        if (*(int *)(pFVar19->_IO_read_ptr + 8) == 5) {\n          lVar18 = *(long *)(pFVar19->_IO_read_ptr + 0x380);\n          uVar24 = 1L << (*(char *)(*(long *)(lVar18 + 0x340) + 10) - 1U & 0x3f);\n          pc = pc & uVar24 * 2 - 1;\n          if ((*(byte *)(lVar18 + 0x3f1) & 1) != 0) {\n            pc = (pc ^ uVar24) - uVar24;\n          }\n        }\n        if (with_addresses != '\\0') {\n          printf(\"0x\");\n          bfd_fprintf_vma(pFVar19,_stdout,pc);\n          if (pretty_print == '\\0') {\n            putchar(10);\n          }\n          else {\n            printf(\": \");\n          }\n        }\n        unaff_RBP = &stdout;\n        found = '\\0';\n        if (local_148 == (long *)0x0) {\n          bfd_map_over_sections(pFVar19,find_address_in_section,0);\nLAB_00102fcf:\n          if (found != '\\0') {\n            do {\n              if (with_functions != '\\0') {\n                plVar16 = functionname;\n                if (functionname == (long *)0x0) {\nLAB_00103a4a:\n                  plVar23 = (long *)&DAT_0010400a;\n                }\n                else {\n                  if (*(char *)functionname == '\\0') {\n                    plVar16 = (long *)0x0;\n                    goto LAB_00103a4a;\n                  }\n                  pcVar26 = (char *)functionname;\n                  pFVar25 = pFVar19;\n                  if (do_demangle == '\\0') {\nLAB_001031f4:\n                    plVar16 = (long *)0x0;\n                    plVar23 = (long *)pcVar26;\n                    pFVar19 = pFVar25;\n                  }\n                  else {\nLAB_0010399c:\n                    plVar16 = (long *)bfd_demangle(pFVar25,pcVar26,demangle_flags);\n                    plVar23 = plVar16;\n                    pFVar19 = pFVar25;\n                    if (plVar16 == (long *)0x0) goto LAB_001031f4;\n                  }\n                }\n                printf(\"%s\",plVar23);\n                if (pretty_print == '\\0') {\n                  putchar(10);\n                }\n                else {\n                  pcVar26 = (char *)dcgettext(0,&DAT_001040f1,5);\n                  printf(pcVar26);\n                }\n                free(plVar16);\n              }\n              pFVar25 = filename;\n              if (base_names == '\\0') {\n                if (filename == (FILE *)0x0) {\n                  pFVar25 = __stream;\n                }\n              }\n              else if (filename == (FILE *)0x0) {\n                pFVar25 = (FILE *)&DAT_0010400a;\n              }\n              else {\n                pcVar26 = strrchr((char *)filename,0x2f);\n                if (pcVar26 != (char *)0x0) {\n                  pFVar25 = (FILE *)(pcVar26 + 1);\n                  filename = pFVar25;\n                }\n              }\n              printf(\"%s:\",pFVar25);\n              pFVar25 = pFVar19;\n              if (line == 0) {\nLAB_00103a85:\n                puts(\"?\");\n                pFVar19 = pFVar25;\n              }\n              else if (discriminator == 0) {\n                printf(\"%u\\n\");\n              }\n              else {\n                printf(\"%u (discriminator %u)\\n\");\n              }\n              if (unwind_inlines == '\\0') {\nLAB_0010304c:\n                found = '\\0';\n                goto LAB_00103053;\n              }\n              found = (**(code **)(pFVar19->_IO_read_ptr + 600))\n                                (pFVar19,&filename,&functionname,&line);\n              plVar16 = functionname;\n              if (found == '\\0') goto LAB_00103053;\n              while (functionname = plVar16, pretty_print == '\\0') {\n                if (with_functions != '\\0') {\n                  plVar23 = plVar16;\n                  if (plVar16 == (long *)0x0) {\nLAB_00103b7b:\n                    plVar31 = (long *)&DAT_0010400a;\n                  }\n                  else {\n                    if (*(char *)plVar16 == '\\0') {\n                      plVar23 = (long *)0x0;\n                      goto LAB_00103b7b;\n                    }\n                    if ((do_demangle == '\\0') ||\n                       (plVar23 = (long *)bfd_demangle(pFVar19,plVar16,demangle_flags),\n                       plVar31 = plVar23, plVar23 == (long *)0x0)) {\n                      plVar23 = (long *)0x0;\n                      plVar31 = plVar16;\n                    }\n                  }\n                  printf(\"%s\",plVar31);\n                  if (pretty_print == '\\0') {\n                    putchar(10);\n                  }\n                  else {\n                    pcVar26 = (char *)dcgettext(0,&DAT_001040f1,5);\n                    printf(pcVar26);\n                  }\n                  free(plVar23);\n                }\n                pFVar25 = filename;\n                if (base_names == '\\0') {\n                  if (filename == (FILE *)0x0) {\n                    pFVar25 = (FILE *)&DAT_0010400a;\n                  }\n                }\n                else if (filename == (FILE *)0x0) {\n                  pFVar25 = (FILE *)&DAT_0010400a;\n                }\n                else {\n                  pcVar26 = strrchr((char *)filename,0x2f);\n                  if (pcVar26 != (char *)0x0) {\n                    pFVar25 = (FILE *)(pcVar26 + 1);\n                    filename = pFVar25;\n                  }\n                }\n                printf(\"%s:\",pFVar25);\n                if (line == 0) {\n                  puts(\"?\");\n                }\n                else if (discriminator == 0) {\n                  printf(\"%u\\n\");\n                }\n                else {\n                  printf(\"%u (discriminator %u)\\n\");\n                }\n                if (unwind_inlines == '\\0') goto LAB_0010304c;\n                found = (**(code **)(pFVar19->_IO_read_ptr + 600))\n                                  (pFVar19,&filename,&functionname,&line);\n                plVar16 = functionname;\n                if (found == '\\0') {\n                  found = '\\0';\n                  goto LAB_00103053;\n                }\n              }\n              pcVar26 = (char *)dcgettext(0,\" (inlined by) \",5);\n              printf(pcVar26);\n            } while( true );\n          }\n        }\n        else if (((*(byte *)((long)local_148 + 0x24) & 1) != 0) && (pc < (ulong)local_148[8])) {\n          found = (**(code **)(pFVar19->_IO_read_ptr + 0x240))\n                            (pFVar19,syms,local_148,pc,&filename,&functionname,&line,&discriminator)\n          ;\n          goto LAB_00102fcf;\n        }\n        if (with_functions != '\\0') {\n          if (pretty_print == '\\0') {\n            puts(\"??\");\n          }\n          else {\n            printf(\"?? \");\n          }\n        }\n        puts(\"??:0\");\nLAB_00103053:\n        fflush(*(FILE **)unaff_RBP);\n        if ((int)unaff_R12 != 0) goto LAB_00102ee7;\nLAB_00103065:\n        pcVar26 = fgets((char *)&local_c8,100,_stdin);\n        psVar20 = &local_c8;\n        if (pcVar26 == (char *)0x0) goto LAB_0010308a;\n      } while( true );\n    }\n  } while( true );\nLAB_00102970:\n  bVar10 = pbVar27[1];\n  pbVar27 = pbVar27 + 1;\n  if (bVar10 == 0) goto LAB_001030bb;\n  goto LAB_00102980;\nswitchD_00102d16_caseD_73:\n  base_names = '\\x01';\n  goto switchD_00102d16_caseD_0;\n}\n\n", 
            "called": [
                "xstrdup", 
                "non_fatal", 
                "bfd_check_format_matches", 
                "fputc", 
                "bfd_check_format", 
                "stat", 
                "fgets", 
                "bindtextdomain", 
                "fread", 
                "find_address_in_section", 
                "bfd_openr", 
                "strtoul", 
                "fatal", 
                "xmalloc", 
                "free", 
                "fprintf", 
                "strchr", 
                "__errno_location", 
                "fclose", 
                "exit", 
                "setlocale", 
                "xexit", 
                "fopen", 
                "bfd_get_section_by_name", 
                "bfd_init", 
                "bfd_demangle", 
                "usage", 
                "strlen", 
                "ftell", 
                "strrchr", 
                "bfd_errmsg", 
                "getopt_long", 
                "strerror", 
                "fseek", 
                "bfd_map_over_sections", 
                "memcpy", 
                "ferror", 
                "cplus_demangle_set_style", 
                "textdomain", 
                "dcgettext", 
                "bfd_set_default_target", 
                "strcmp", 
                "bfd_nonfatal", 
                "xmalloc_set_program_name", 
                "bfd_fprintf_vma", 
                "cplus_demangle_name_to_style", 
                "bfd_set_error_program_name", 
                "fflush", 
                "memmove", 
                "putchar", 
                "bfd_scan_vma", 
                "xrealloc", 
                "printf", 
                "puts", 
                "bfd_get_error", 
                "bfd_close"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001027b0", 
            "calling": [
                "_start"
            ], 
            "imported": false, 
            "current_name": "FUN_001027b0"
        }, 
        "FUN_00102310": {
            "renaming": {}, 
            "code": "\nvoid bfd_check_format_matches(void)\n\n{\n  bfd_check_format_matches();\n  return;\n}\n\n", 
            "called": [
                "bfd_check_format_matches"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102310", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102310"
        }, 
        "FUN_00107048": {
            "renaming": {}, 
            "code": "\n\n\n\nint ferror(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ferror@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107048", 
            "calling": [
                "ferror"
            ], 
            "imported": false, 
            "current_name": "FUN_00107048"
        }, 
        "FUN_00102150": {
            "renaming": {}, 
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n", 
            "called": [
                "printf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102150", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102150"
        }, 
        "FUN_00103bd0": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_00103bd0(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined8 param_9,undefined8 param_10,undefined8 param_11,undefined8 param_12,\n                 undefined8 param_13,undefined8 param_14)\n\n{\n  char in_AL;\n  int iVar1;\n  undefined8 uVar2;\n  long lVar3;\n  undefined8 in_R10;\n  undefined4 local_d8;\n  undefined4 local_d4;\n  undefined *local_d0;\n  undefined *local_c8;\n  undefined local_b8 [8];\n  undefined8 local_b0;\n  undefined8 local_a8;\n  undefined8 local_a0;\n  undefined8 local_98;\n  undefined8 local_90;\n  undefined4 local_88;\n  undefined4 local_78;\n  undefined4 local_68;\n  undefined4 local_58;\n  undefined4 local_48;\n  undefined4 local_38;\n  undefined4 local_28;\n  undefined4 local_18;\n  \n  if (in_AL != '\\0') {\n    local_88 = param_1;\n    local_78 = param_2;\n    local_68 = param_3;\n    local_58 = param_4;\n    local_48 = param_5;\n    local_38 = param_6;\n    local_28 = param_7;\n    local_18 = param_8;\n  }\n  local_d0 = &stack0x00000008;\n  local_d8 = 8;\n  local_c8 = local_b8;\n  local_d4 = 0x30;\n  local_b0 = param_10;\n  local_a8 = param_11;\n  local_a0 = param_12;\n  local_98 = param_13;\n  local_90 = param_14;\n  report(param_9,&local_d8);\n  lVar3 = 1;\n  xexit();\n  iVar1 = bfd_get_error();\n  if (iVar1 == 0) {\n    uVar2 = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    uVar2 = bfd_errmsg(iVar1);\n  }\n  fflush(_stdout);\n  if (lVar3 != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",program_name,lVar3,uVar2,in_R10);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",program_name,uVar2,in_R10);\n  return;\n}\n\n", 
            "called": [
                "xexit", 
                "report"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103bd0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00103bd0"
        }, 
        "FUN_00107168": {
            "renaming": {}, 
            "code": "\n\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fseek@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107168", 
            "calling": [
                "fseek"
            ], 
            "imported": false, 
            "current_name": "FUN_00107168"
        }, 
        "FUN_00102270": {
            "renaming": {}, 
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n", 
            "called": [
                "fflush"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102270", 
            "calling": [
                "main", 
                "bfd_nonfatal.cold", 
                "report"
            ], 
            "imported": false, 
            "current_name": "FUN_00102270"
        }, 
        "FUN_00102030": {
            "renaming": {}, 
            "code": "\nvoid cplus_demangle_name_to_style(void)\n\n{\n  cplus_demangle_name_to_style();\n  return;\n}\n\n", 
            "called": [
                "cplus_demangle_name_to_style"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102030", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102030"
        }, 
        "FUN_00107208": {
            "renaming": {}, 
            "code": "\n\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107208", 
            "calling": [
                "__cxa_finalize"
            ], 
            "imported": false, 
            "current_name": "FUN_00107208"
        }, 
        "FUN_001022a0": {
            "renaming": {}, 
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n", 
            "called": [
                "bfd_set_error_program_name"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001022a0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001022a0"
        }, 
        "FUN_001020e0": {
            "renaming": {}, 
            "code": "\nvoid bfd_openr(void)\n\n{\n  bfd_openr();\n  return;\n}\n\n", 
            "called": [
                "bfd_openr"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001020e0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001020e0"
        }, 
        "FUN_00102280": {
            "renaming": {}, 
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n", 
            "called": [
                "fseek"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102280", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102280"
        }, 
        "FUN_00107170": {
            "renaming": {}, 
            "code": "\n\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* setlocale@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107170", 
            "calling": [
                "setlocale"
            ], 
            "imported": false, 
            "current_name": "FUN_00107170"
        }, 
        "FUN_00102200": {
            "renaming": {}, 
            "code": "\nvoid bfd_init(void)\n\n{\n  bfd_init();\n  return;\n}\n\n", 
            "called": [
                "bfd_init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102200", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102200"
        }, 
        "FUN_00102320": {
            "renaming": {}, 
            "code": "\n\n\nulong strtoul(char *__nptr,char **__endptr,int __base)\n\n{\n  ulong uVar1;\n  \n  uVar1 = strtoul(__nptr,__endptr,__base);\n  return uVar1;\n}\n\n", 
            "called": [
                "strtoul"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102320", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102320"
        }, 
        "FUN_00102040": {
            "renaming": {}, 
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n", 
            "called": [
                "free"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102040", 
            "calling": [
                "usage", 
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102040"
        }, 
        "FUN_00107058": {
            "renaming": {}, 
            "code": "\n\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fread@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107058", 
            "calling": [
                "fread"
            ], 
            "imported": false, 
            "current_name": "FUN_00107058"
        }, 
        "FUN_00102160": {
            "renaming": {}, 
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n", 
            "called": [
                "xrealloc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102160", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102160"
        }, 
        "FUN_001020f0": {
            "renaming": {}, 
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n", 
            "called": [
                "fclose"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001020f0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001020f0"
        }, 
        "FUN_00102720": {
            "renaming": {}, 
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00102744) */\n/* WARNING: Removing unreachable block (ram,0x00102750) */\n\nvoid FUN_00102720(void)\n\n{\n  return;\n}\n\n", 
            "called": [
                "_ITM_registerTMCloneTable"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102720", 
            "calling": [
                "frame_dummy"
            ], 
            "imported": false, 
            "current_name": "FUN_00102720"
        }, 
        "FUN_001022b0": {
            "renaming": {}, 
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n", 
            "called": [
                "memmove"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001022b0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001022b0"
        }, 
        "FUN_00102170": {
            "renaming": {}, 
            "code": "\n\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strrchr(__s,__c);\n  return pcVar1;\n}\n\n", 
            "called": [
                "strrchr"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102170", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102170"
        }, 
        "FUN_00102290": {
            "renaming": {}, 
            "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = setlocale(__category,__locale);\n  return pcVar1;\n}\n\n", 
            "called": [
                "setlocale"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102290", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102290"
        }, 
        "FUN_00107180": {
            "renaming": {}, 
            "code": "\n\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memmove@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107180", 
            "calling": [
                "memmove"
            ], 
            "imported": false, 
            "current_name": "FUN_00107180"
        }, 
        "FUN_001071a8": {
            "renaming": {}, 
            "code": "\n\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* vfprintf@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001071a8", 
            "calling": [
                "vfprintf"
            ], 
            "imported": false, 
            "current_name": "FUN_001071a8"
        }, 
        "FUN_00102330": {
            "renaming": {}, 
            "code": "\nvoid bfd_errmsg(void)\n\n{\n  bfd_errmsg();\n  return;\n}\n\n", 
            "called": [
                "bfd_errmsg"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102330", 
            "calling": [
                "bfd_nonfatal", 
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102330"
        }, 
        "FUN_00102210": {
            "renaming": {}, 
            "code": "\n\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcmp(__s1,__s2);\n  return iVar1;\n}\n\n", 
            "called": [
                "strcmp"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102210", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102210"
        }, 
        "FUN_00102050": {
            "renaming": {}, 
            "code": "\nvoid bfd_scan_vma(void)\n\n{\n  bfd_scan_vma();\n  return;\n}\n\n", 
            "called": [
                "bfd_scan_vma"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102050", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102050"
        }, 
        "FUN_00107100": {
            "renaming": {}, 
            "code": "\n\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fputc@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107100", 
            "calling": [
                "fputc"
            ], 
            "imported": false, 
            "current_name": "FUN_00107100"
        }, 
        "FUN_001021a0": {
            "renaming": {}, 
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n", 
            "called": [
                "xmalloc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001021a0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001021a0"
        }, 
        "FUN_001071b8": {
            "renaming": {}, 
            "code": "\n\n\n\nulong strtoul(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strtoul@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001071b8", 
            "calling": [
                "strtoul"
            ], 
            "imported": false, 
            "current_name": "FUN_001071b8"
        }, 
        "FUN_001022c0": {
            "renaming": {}, 
            "code": "\nvoid bfd_demangle(void)\n\n{\n  bfd_demangle();\n  return;\n}\n\n", 
            "called": [
                "bfd_demangle"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001022c0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001022c0"
        }, 
        "FUN_001023e1": {
            "renaming": {}, 
            "code": "\nvoid FUN_001023e1(FILE *param_1,int param_2)\n\n{\n  long lVar1;\n  char *pcVar2;\n  long *__ptr;\n  long *plVar3;\n  \n  lVar1 = program_name;\n  pcVar2 = (char *)dcgettext(0,\"Usage: %s [option(s)] [addr(s)]\\n\",5);\n  fprintf(param_1,pcVar2,lVar1);\n  pcVar2 = (char *)dcgettext(0,\" Convert addresses into line number/file name pairs.\\n\",5);\n  fprintf(param_1,pcVar2);\n  pcVar2 = (char *)dcgettext(0,\n                             \" If no addresses are specified on the command line, they will be read from stdin\\n\"\n                             ,5);\n  fprintf(param_1,pcVar2);\n  pcVar2 = (char *)dcgettext(0,\n                             \" The options are:\\n  @<file>                Read options from <file>\\n  -a --addresses         Show addresses\\n  -b --target=<bfdname>  Set the binary file format\\n  -e --exe=<executable>  Set the input file name (default is a.out)\\n  -i --inlines           Unwind inlined functions\\n  -j --section=<name>    Read section-relative offsets instead of addresses\\n  -p --pretty-print      Make the output easier to read for humans\\n  -s --basenames         Strip directory names\\n  -f --functions         Show function names\\n  -C --demangle[=style]  Demangle function names\\n  -R --recurse-limit     Enable a limit on recursion whilst demangling.  [Default]\\n  -r --no-recurse-limit  Disable a limit on recursion whilst demangling\\n  -h --help              Display this information\\n  -v --version           Display the program\\'s version\\n\\n\"\n                             ,5);\n  fprintf(param_1,pcVar2);\n  lVar1 = program_name;\n  if (program_name == 0) {\n    pcVar2 = (char *)dcgettext(0,\"Supported targets:\",5);\n    fprintf(param_1,pcVar2);\n  }\n  else {\n    pcVar2 = (char *)dcgettext(0,\"%s: supported targets:\",5);\n    fprintf(param_1,pcVar2,lVar1);\n  }\n  __ptr = (long *)bfd_target_list();\n  plVar3 = __ptr;\n  while( true ) {\n    lVar1 = *plVar3;\n    plVar3 = plVar3 + 1;\n    if (lVar1 == 0) break;\n    fprintf(param_1,\" %s\");\n  }\n  fputc(10,param_1);\n  free(__ptr);\n  if (param_2 == 0) {\n    pcVar2 = (char *)dcgettext(0,\"Report bugs to %s\\n\",5);\n    fprintf(param_1,pcVar2,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  exit(param_2);\n}\n\n", 
            "called": [
                "fprintf", 
                "dcgettext", 
                "bfd_target_list", 
                "fputc", 
                "exit", 
                "free"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001023e1", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001023e1"
        }, 
        "FUN_00103c70": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_00103c70(long param_1)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  undefined8 in_R10;\n  \n  iVar1 = bfd_get_error();\n  if (iVar1 == 0) {\n    uVar2 = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    uVar2 = bfd_errmsg(iVar1);\n  }\n  fflush(_stdout);\n  if (param_1 != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",program_name,param_1,uVar2,in_R10);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",program_name,uVar2,in_R10);\n  return;\n}\n\n", 
            "called": [
                "bfd_nonfatal.cold", 
                "bfd_get_error", 
                "bfd_errmsg"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103c70", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00103c70"
        }, 
        "FUN_00102060": {
            "renaming": {}, 
            "code": "\n\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = putchar(__c);\n  return iVar1;\n}\n\n", 
            "called": [
                "putchar"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102060", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102060"
        }, 
        "FUN_00102180": {
            "renaming": {}, 
            "code": "\nvoid bfd_target_list(void)\n\n{\n  bfd_target_list();\n  return;\n}\n\n", 
            "called": [
                "bfd_target_list"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102180", 
            "calling": [
                "usage"
            ], 
            "imported": false, 
            "current_name": "FUN_00102180"
        }, 
        "FUN_001026c0": {
            "renaming": {}, 
            "code": "\nvoid processEntry FUN_001026c0(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined auStack_8 [8];\n  \n  __libc_start_main(main,param_2,&stack0x00000008,0,0,param_1,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [
                "__libc_start_main", 
                "main"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001026c0", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_001026c0"
        }, 
        "FUN_00107070": {
            "renaming": {}, 
            "code": "\n\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* textdomain@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107070", 
            "calling": [
                "textdomain"
            ], 
            "imported": false, 
            "current_name": "FUN_00107070"
        }, 
        "FUN_00107190": {
            "renaming": {}, 
            "code": "\n\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fopen@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107190", 
            "calling": [
                "fopen"
            ], 
            "imported": false, 
            "current_name": "FUN_00107190"
        }, 
        "FUN_00102220": {
            "renaming": {}, 
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n", 
            "called": [
                "putc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102220", 
            "calling": [
                "report"
            ], 
            "imported": false, 
            "current_name": "FUN_00102220"
        }, 
        "FUN_00102340": {
            "renaming": {}, 
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n", 
            "called": [
                "exit"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102340", 
            "calling": [
                "usage", 
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102340"
        }, 
        "FUN_00102100": {
            "renaming": {}, 
            "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n", 
            "called": [
                "bindtextdomain"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102100", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102100"
        }, 
        "FUN_00107110": {
            "renaming": {}, 
            "code": "\n\n\n\nchar * fgets(char *__s,int __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fgets@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00107110", 
            "calling": [
                "fgets"
            ], 
            "imported": false, 
            "current_name": "FUN_00107110"
        }
    }, 
    "locked_functions": [], 
    "used_tokens": 0, 
    "layers": []
}