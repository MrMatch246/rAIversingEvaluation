{
    "functions": {
        "putc": {
            "renaming": {}, 
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n", 
            "called": [
                "putc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001021d0", 
            "calling": [
                "FUN_00102b11", 
                "FUN_00103240", 
                "FUN_0010293a", 
                "FUN_001038b0", 
                "FUN_0010259a"
            ], 
            "imported": false, 
            "current_name": "putc"
        }, 
        "fflush": {
            "renaming": {}, 
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n", 
            "called": [
                "fflush"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102220", 
            "calling": [
                "FUN_001038b0", 
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "fflush"
        }, 
        "FUN_00103910": {
            "renaming": {}, 
            "code": "\nvoid FUN_00103910(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined8 param_9,undefined8 param_10,undefined8 param_11,undefined8 param_12,\n                 undefined8 param_13,undefined8 param_14)\n\n{\n  char in_AL;\n  undefined4 local_d8;\n  undefined4 local_d4;\n  undefined *local_d0;\n  undefined *local_c8;\n  undefined local_b8 [8];\n  undefined8 local_b0;\n  undefined8 local_a8;\n  undefined8 local_a0;\n  undefined8 local_98;\n  undefined8 local_90;\n  undefined4 local_88;\n  undefined4 local_78;\n  undefined4 local_68;\n  undefined4 local_58;\n  undefined4 local_48;\n  undefined4 local_38;\n  undefined4 local_28;\n  undefined4 local_18;\n  \n  if (in_AL != '\\0') {\n    local_88 = param_1;\n    local_78 = param_2;\n    local_68 = param_3;\n    local_58 = param_4;\n    local_48 = param_5;\n    local_38 = param_6;\n    local_28 = param_7;\n    local_18 = param_8;\n  }\n  local_d0 = &stack0x00000008;\n  local_d8 = 8;\n  local_c8 = local_b8;\n  local_d4 = 0x30;\n  local_b0 = param_10;\n  local_a8 = param_11;\n  local_a0 = param_12;\n  local_98 = param_13;\n  local_90 = param_14;\n  FUN_001038b0(param_9,&local_d8);\n  return;\n}\n\n", 
            "called": [
                "FUN_001038b0"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103910", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "FUN_00103910"
        }, 
        "bfd_close": {
            "renaming": {}, 
            "code": "\nvoid bfd_close(void)\n\n{\n  bfd_close();\n  return;\n}\n\n", 
            "called": [
                "bfd_close"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102290", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "bfd_close"
        }, 
        "_FINI_0": {
            "renaming": {}, 
            "code": "\nvoid _FINI_0(void)\n\n{\n  if (DAT_00108340 != '\\0') {\n    return;\n  }\n  __cxa_finalize(PTR_LOOP_00108188);\n  FUN_001039e0();\n  DAT_00108340 = 1;\n  return;\n}\n\n", 
            "called": [
                "FUN_001039e0", 
                "__cxa_finalize"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00103a50", 
            "calling": [], 
            "imported": false, 
            "current_name": "_FINI_0"
        }, 
        "FUN_00103510": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_00103510(void)\n\n{\n  ulong uVar1;\n  uint uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  char *unaff_R14;\n  undefined8 unaff_R15;\n  bool bVar5;\n  undefined8 in_stack_00000010;\n  undefined8 in_stack_00000038;\n  \ncode_r0x00103510:\n  uVar4 = 2;\njoined_r0x0010341b:\n  do {\n    if (DAT_00108371 != '\\0') {\n      printf(\"%s: \",in_stack_00000010);\n    }\n    if (DAT_00108372 == '\\0') {\n      unaff_R14[uVar4] = '\\0';\n      fputs(unaff_R14,_stdout);\n    }\n    else {\n      FUN_0010286f(unaff_R15);\n      unaff_R14[uVar4] = '\\0';\n      fputs(unaff_R14,_stdout);\n    }\n    while (uVar4 = FUN_00103520(), uVar4 != 0xffffffffffffffff) {\n      if (0xff < uVar4) {\nLAB_0010348e:\n        FUN_00103810();\n        break;\n      }\n      if (uVar4 == 9) {\nLAB_00102438:\n        putc((int)uVar4,_stdout);\n      }\n      else {\n        if ((*(ushort *)(&_sch_istable + uVar4 * 2) & 0x10) == 0) {\n          if (((DAT_00108360 != 'S') || ((long)uVar4 < 0x80)) &&\n             ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar4 * 2) & 0x40) == 0))))\n          goto LAB_0010348e;\n          goto LAB_00102438;\n        }\n        putc((int)uVar4,_stdout);\n      }\n    }\n    if (DAT_00108358 == (char *)0x0) {\n      putc(10,_stdout);\n    }\n    else {\n      fputs(DAT_00108358,_stdout);\n    }\n    while (uVar4 = (ulong)DAT_00108374, unaff_R15 = in_stack_00000038, DAT_00108374 != 0) {\n      uVar4 = FUN_00103520();\n      uVar2 = DAT_00108374;\n      if (uVar4 == 0xffffffffffffffff) goto LAB_001034be;\n      if (uVar4 < 0x100) {\n        if (uVar4 == 9) {\nLAB_001023f5:\n          *unaff_R14 = (char)uVar4;\n          if (uVar2 < 2) {\n            FUN_001034fa();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&_sch_istable + uVar4 * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)uVar4 < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar4 * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto LAB_001023f5;\n          }\n          *unaff_R14 = (char)uVar4;\n          if (uVar2 < 2) {\n            uVar4 = 1;\n            break;\n          }\n        }\n        uVar4 = FUN_00103520();\n        uVar2 = DAT_00108374;\n        if (uVar4 == 0xffffffffffffffff) goto LAB_001034be;\n        if (0xff < uVar4) goto code_r0x001034d5;\n        if (uVar4 == 9) {\nLAB_001023bb:\n          unaff_R14[1] = (char)uVar4;\n          if (uVar2 < 3) {\n            FUN_00103510();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&_sch_istable + uVar4 * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)uVar4 < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar4 * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto LAB_001023bb;\n          }\n          unaff_R14[1] = (char)uVar4;\n          if (uVar2 < 3) goto code_r0x00103510;\n        }\n        uVar4 = FUN_00103520();\n        uVar2 = DAT_00108374;\n        if (uVar4 == 0xffffffffffffffff) {\nLAB_001034be:\n          free(unaff_R14);\n          return;\n        }\n        if (0xff < uVar4) goto code_r0x001034d5;\n        if (uVar4 == 9) {\nLAB_00102381:\n          unaff_R14[2] = (char)uVar4;\n        }\n        else {\n          if ((*(ushort *)(&_sch_istable + uVar4 * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)uVar4 < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar4 * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto LAB_00102381;\n          }\n          unaff_R14[2] = (char)uVar4;\n        }\n        if (3 < uVar2) {\n          uVar3 = 3;\n          do {\n            uVar1 = FUN_00103520();\n            if (uVar1 == 0xffffffffffffffff) goto LAB_001034be;\n            if (0xff < uVar1) goto code_r0x001034d5;\n            if (((uVar1 != 9) && ((*(ushort *)(&_sch_istable + uVar1 * 2) & 0x10) == 0)) &&\n               ((DAT_00108360 != 'S' || ((long)uVar1 < 0x80)))) {\n              if (DAT_00108373 == '\\0') goto code_r0x001034d5;\n              if ((*(ushort *)(&_sch_istable + uVar1 * 2) & 0x40) == 0) {\n                FUN_001034d5();\n                return;\n              }\n            }\n            uVar2 = (int)uVar3 + 1;\n            uVar4 = (ulong)uVar2;\n            bVar5 = DAT_00108374 <= uVar2;\n            unaff_R14[uVar3] = (char)uVar1;\n            uVar3 = uVar4;\n            if (bVar5) goto joined_r0x0010341b;\n          } while( true );\n        }\n        uVar4 = 3;\n        break;\n      }\ncode_r0x001034d5:\n      FUN_00103810();\n    }\n  } while( true );\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103510", 
            "calling": [
                "FUN_0010259a"
            ], 
            "imported": false, 
            "current_name": "FUN_00103510"
        }, 
        "FUN_00102b11": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_00102b11(undefined8 param_1,long param_2,undefined8 param_3,long param_4,uint param_5,\n                 long param_6)\n\n{\n  undefined uVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  ulong uVar6;\n  undefined uVar7;\n  undefined uVar8;\n  uint uVar9;\n  undefined uVar10;\n  ulong local_80;\n  uint local_4c [3];\n  uint local_40;\n  byte local_3c;\n  byte local_3b;\n  byte local_3a;\n  byte local_39;\n  \n  uVar9 = 0;\n  local_40 = 0;\n  local_80 = 0;\n  uVar6 = 0;\n  local_4c[0] = param_5;\n  uVar2 = 0;\n  while (uVar5 = (uint)uVar6, uVar9 < DAT_00108374) {\n    uVar2 = FUN_0010290e(param_3,param_4,local_4c,&local_40);\n    if (uVar2 == 0xffffffff) break;\n    if (uVar2 < 0x100) {\n      uVar10 = (undefined)uVar2;\n      if (uVar2 == 9) {\n        if (uVar9 == 0) {\n          local_80 = (ulong)(local_40 - 1);\n        }\nLAB_00102c09:\n        uVar9 = uVar9 + 1;\n        *(undefined *)(param_6 + uVar6) = uVar10;\n        uVar6 = (ulong)(uVar5 + 1);\n      }\n      else {\n        if ((*(ushort *)(&_sch_istable + (long)(int)uVar2 * 2) & 0x10) == 0) {\n          if ((DAT_00108360 != 'S') || ((int)uVar2 < 0x80)) {\n            if ((DAT_00108373 == '\\0') ||\n               ((*(ushort *)(&_sch_istable + (long)(int)uVar2 * 2) & 0x40) == 0)) goto LAB_00102b96;\n            goto LAB_00102bf3;\n          }\n          if (uVar9 == 0) {\n            local_80 = (ulong)(local_40 - 1);\n          }\n        }\n        else {\nLAB_00102bf3:\n          if (uVar9 == 0) {\n            local_80 = (ulong)(local_40 - 1);\n          }\n          if ((int)uVar2 < 0x7f) goto LAB_00102c09;\n        }\n        if ((int)uVar2 < 0xc0) goto LAB_00102b96;\n        uVar3 = FUN_0010290e(param_3,param_4,local_4c,&local_40);\n        if (uVar3 == 0xffffffff) {\nLAB_00102dee:\n          uVar2 = 0xffffffff;\n          break;\n        }\n        uVar7 = (undefined)uVar3;\n        if ((uVar3 & 0xc0) == 0x80) {\n          if ((uVar2 & 0x20) == 0) {\n            if (DAT_00108350 == 5) goto LAB_00102c67;\n            uVar9 = uVar9 + 1;\n            *(undefined *)(param_6 + uVar6) = uVar10;\n            *(undefined *)(param_6 + (ulong)(uVar5 + 1)) = uVar7;\n            uVar6 = (ulong)(uVar5 + 2);\n            uVar2 = uVar3;\n          }\n          else {\n            uVar3 = FUN_0010290e(param_3,param_4,local_4c,&local_40);\n            if (uVar3 == 0xffffffff) goto LAB_00102dee;\n            uVar8 = (undefined)uVar3;\n            if ((uVar3 & 0xc0) == 0x80) {\n              if ((uVar2 & 0x10) == 0) {\n                if (DAT_00108350 == 5) goto LAB_00102ce5;\n                uVar9 = uVar9 + 1;\n                *(undefined *)(param_6 + uVar6) = uVar10;\n                uVar6 = (ulong)(uVar5 + 3);\n                *(undefined *)(param_6 + (ulong)(uVar5 + 1)) = uVar7;\n                *(undefined *)(param_6 + (ulong)(uVar5 + 2)) = uVar8;\n                uVar2 = uVar3;\n              }\n              else {\n                uVar2 = FUN_0010290e(param_3,param_4,local_4c,&local_40);\n                if (uVar2 == 0xffffffff) goto LAB_00102dee;\n                uVar1 = (undefined)uVar2;\n                if ((uVar2 & 0xc0) == 0x80) {\n                  if (DAT_00108350 == 5) {\n                    *(undefined *)(param_4 + (ulong)local_4c[0]) = uVar1;\n                    *(undefined *)(param_4 + (ulong)(local_4c[0] + 1)) = uVar7;\n                    *(undefined *)(param_4 + (ulong)(local_4c[0] + 2)) = uVar8;\n                    goto LAB_00102db9;\n                  }\n                  uVar9 = uVar9 + 1;\n                  *(undefined *)(param_6 + uVar6) = uVar10;\n                  *(undefined *)(param_6 + (ulong)(uVar5 + 1)) = uVar7;\n                  uVar6 = (ulong)(uVar5 + 4);\n                  *(undefined *)(param_6 + (ulong)(uVar5 + 2)) = uVar8;\n                  *(undefined *)(param_6 + (ulong)(uVar5 + 3)) = uVar1;\n                }\n                else {\n                  *(undefined *)(param_4 + (ulong)local_4c[0]) = uVar1;\n                  *(undefined *)(param_4 + (ulong)(local_4c[0] + 1)) = uVar8;\n                  *(undefined *)(param_4 + (ulong)(local_4c[0] + 2)) = uVar7;\nLAB_00102db9:\n                  local_4c[0] = local_4c[0] + 3;\n                  uVar6 = 0;\n                  uVar9 = 0;\n                }\n              }\n            }\n            else {\nLAB_00102ce5:\n              uVar6 = 0;\n              uVar9 = 0;\n              *(undefined *)(param_4 + (ulong)local_4c[0]) = uVar8;\n              *(undefined *)(param_4 + (ulong)(local_4c[0] + 1)) = uVar7;\n              local_4c[0] = local_4c[0] + 2;\n              uVar2 = uVar3;\n            }\n          }\n        }\n        else {\nLAB_00102c67:\n          uVar9 = 0;\n          *(undefined *)(param_4 + (ulong)local_4c[0]) = uVar7;\n          uVar6 = 0;\n          local_4c[0] = local_4c[0] + 1;\n          uVar2 = uVar3;\n        }\n      }\n    }\n    else {\nLAB_00102b96:\n      uVar9 = 0;\n      uVar6 = 0;\n    }\n  }\n  if (uVar9 < DAT_00108374) {\n    if (uVar2 != 0xffffffff) {\nLAB_0010308d:\n      FUN_00102b11(param_1,(ulong)local_40 + param_2,param_3,param_4,local_4c[0],param_6);\n    }\n  }\n  else {\n    uVar2 = 0;\n    FUN_00103890(param_1,local_80 + param_2);\n    while (uVar2 < uVar5) {\n      uVar6 = (ulong)uVar2;\n      if (*(byte *)(uVar6 + param_6) < 0x7f) {\n        uVar2 = uVar2 + 1;\n        putc((uint)*(byte *)(uVar6 + param_6),_stdout);\n      }\n      else {\n        iVar4 = FUN_0010293a();\n        uVar2 = uVar2 + iVar4;\n      }\n    }\n    while( true ) {\n      uVar2 = FUN_0010290e(param_3,param_4,local_4c,&local_40);\n      if (uVar2 == 0xffffffff) break;\n      if (0xff < uVar2) {\nLAB_00103049:\n        if (DAT_00108358 == (char *)0x0) {\n          putc(10,_stdout);\n        }\n        else {\n          fputs(DAT_00108358,_stdout);\n        }\n        goto LAB_0010308d;\n      }\n      if (uVar2 == 9) {\nLAB_00102ed4:\n        putc(uVar2,_stdout);\n      }\n      else {\n        if ((*(ushort *)(&_sch_istable + (long)(int)uVar2 * 2) & 0x10) == 0) {\n          if ((DAT_00108360 != 'S') || ((int)uVar2 < 0x80)) {\n            if ((DAT_00108373 == '\\0') ||\n               ((*(ushort *)(&_sch_istable + (long)(int)uVar2 * 2) & 0x40) == 0)) goto LAB_00103049;\n            goto LAB_00102ecf;\n          }\n        }\n        else {\nLAB_00102ecf:\n          if ((int)uVar2 < 0x7f) goto LAB_00102ed4;\n        }\n        if ((int)uVar2 < 0xc0) goto LAB_00103049;\n        local_3c = (byte)uVar2;\n        iVar4 = FUN_0010290e(param_3,param_4,local_4c,&local_40);\n        if (iVar4 == -1) break;\n        local_3b = (byte)iVar4;\n        if ((local_3b & 0xc0) != 0x80) {\nLAB_00102f32:\n          uVar6 = (ulong)local_4c[0];\n          local_4c[0] = local_4c[0] + 1;\n          *(byte *)(param_4 + uVar6) = local_3b;\njoined_r0x00102f51:\n          if (DAT_00108358 == (char *)0x0) {\n            putc(10,_stdout);\n          }\n          else {\n            fputs(DAT_00108358,_stdout);\n          }\n          goto LAB_0010308d;\n        }\n        if ((local_3c & 0x20) == 0) {\n          if (DAT_00108350 != 5) goto LAB_0010300e;\n          goto LAB_00102f32;\n        }\n        iVar4 = FUN_0010290e(param_3,param_4,local_4c,&local_40);\n        if (iVar4 == -1) break;\n        local_3a = (byte)iVar4;\n        if ((local_3a & 0xc0) != 0x80) {\nLAB_00102f94:\n          *(byte *)(param_4 + (ulong)local_4c[0]) = local_3a;\n          uVar2 = local_4c[0] + 1;\n          local_4c[0] = local_4c[0] + 2;\nLAB_00102ff2:\n          *(byte *)(param_4 + (ulong)uVar2) = local_3b;\n          goto joined_r0x00102f51;\n        }\n        if ((local_3c & 0x10) != 0) {\n          iVar4 = FUN_0010290e(param_3,param_4,local_4c,&local_40);\n          if (iVar4 != -1) {\n            local_39 = (byte)iVar4;\n            if (((local_39 & 0xc0) == 0x80) && (DAT_00108350 != 5)) goto LAB_0010300e;\n            *(byte *)(param_4 + (ulong)local_4c[0]) = local_39;\n            *(byte *)(param_4 + (ulong)(local_4c[0] + 1)) = local_3a;\n            uVar2 = local_4c[0] + 2;\n            local_4c[0] = local_4c[0] + 3;\n            goto LAB_00102ff2;\n          }\n          break;\n        }\n        if (DAT_00108350 == 5) goto LAB_00102f94;\nLAB_0010300e:\n        FUN_0010293a(&local_3c);\n      }\n    }\n    if (DAT_00108358 == (char *)0x0) {\n      putc(10,_stdout);\n    }\n    else {\n      fputs(DAT_00108358,_stdout);\n    }\n  }\n  return;\n}\n\n", 
            "called": [
                "FUN_0010290e", 
                "FUN_00102b11", 
                "fputs", 
                "FUN_0010293a", 
                "FUN_00103890", 
                "putc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102b11", 
            "calling": [
                "FUN_00102b11", 
                "FUN_00103240"
            ], 
            "imported": false, 
            "current_name": "FUN_00102b11"
        }, 
        "isatty": {
            "renaming": {}, 
            "code": "\n\n\nint isatty(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = isatty(__fd);\n  return iVar1;\n}\n\n", 
            "called": [
                "isatty"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102070", 
            "calling": [
                "FUN_0010293a"
            ], 
            "imported": false, 
            "current_name": "isatty"
        }, 
        "fseek": {
            "renaming": {}, 
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n", 
            "called": [
                "fseek"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102230", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "fseek"
        }, 
        "_INIT_0": {
            "renaming": {}, 
            "code": "\nvoid _INIT_0(void)\n\n{\n  FUN_00103a10();\n  return;\n}\n\n", 
            "called": [
                "FUN_00103a10"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00103a90", 
            "calling": [], 
            "imported": false, 
            "current_name": "_INIT_0"
        }, 
        "strlen": {
            "renaming": {}, 
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n", 
            "called": [
                "strlen"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102100", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "strlen"
        }, 
        "FUN_0010293a": {
            "renaming": {}, 
            "code": "\n\n\nuint FUN_0010293a(byte *param_1)\n\n{\n  byte bVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  uint uVar5;\n  byte *pbVar6;\n  \n  uVar4 = 2;\n  bVar1 = *param_1 & 0x30;\n  if ((bVar1 != 0x10) && (uVar4 = 3, bVar1 != 0x20)) {\n    uVar4 = (-(uint)(bVar1 == 0) & 0xfffffffe) + 4;\n  }\n  if (DAT_00108350 == 3) {\n    pbVar6 = param_1 + uVar4;\n    putc(0x3c,_stdout);\n    printf(\"0x\");\n    do {\n      bVar1 = *param_1;\n      param_1 = param_1 + 1;\n      printf(\"%02x\",(ulong)bVar1);\n    } while (pbVar6 != param_1);\n    putc(0x3e,_stdout);\n    return uVar4;\n  }\n  if (DAT_00108350 < 4) {\n    if (DAT_00108350 == 1) {\n      printf(\"%.1s\",param_1);\n      return uVar4;\n    }\n    if (DAT_00108350 == 2) {\nLAB_001029cd:\n      uVar2 = (uint)param_1[1];\n      uVar5 = (uint)*param_1;\n      if (uVar4 == 3) {\n        printf(\"\\\\u%02x%02x\",(ulong)((uVar5 & 0xf) << 4 | (int)uVar2 >> 2 & 0xfU),\n               (ulong)((uVar2 & 3) << 6 | param_1[2] & 0x3f));\n      }\n      else if (uVar4 == 4) {\n        printf(\"\\\\u%02x%02x%02x\",(ulong)((uVar5 & 7) << 6 | (int)uVar2 >> 2 & 0xfU),\n               (ulong)((uVar2 & 3) << 6 | (int)(uint)param_1[2] >> 2 & 0xfU),\n               (ulong)((param_1[2] & 3) << 6 | param_1[3] & 0x3f));\n      }\n      else {\n        printf(\"\\\\u%02x%02x\",(ulong)((int)(uint)*param_1 >> 2 & 7),\n               (ulong)((uVar5 & 3) << 6 | param_1[1] & 0x3f));\n      }\n      if (DAT_00108350 != 4) {\n        return uVar4;\n      }\n      iVar3 = isatty(1);\n      if (iVar3 == 0) {\n        return uVar4;\n      }\n      printf(\"\\x1b[0m\");\n      return uVar4;\n    }\n  }\n  else if (DAT_00108350 == 4) {\n    iVar3 = isatty(1);\n    if (iVar3 != 0) {\n      printf(\"\\x1b[31;47m\");\n    }\n    goto LAB_001029cd;\n  }\n  fwrite(\"ICE: unexpected unicode display type\\n\",1,0x25,_stderr);\n  return uVar4;\n}\n\n", 
            "called": [
                "printf", 
                "isatty", 
                "fwrite", 
                "putc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x0010293a", 
            "calling": [
                "FUN_00102b11", 
                "FUN_00103240"
            ], 
            "imported": false, 
            "current_name": "FUN_0010293a"
        }, 
        "xmalloc": {
            "renaming": {}, 
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n", 
            "called": [
                "xmalloc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102170", 
            "calling": [
                "FUN_00103240", 
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "xmalloc"
        }, 
        "vfprintf": {
            "renaming": {}, 
            "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 = vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n", 
            "called": [
                "vfprintf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001022b0", 
            "calling": [
                "FUN_001038b0"
            ], 
            "imported": false, 
            "current_name": "vfprintf"
        }, 
        "__errno_location": {
            "renaming": {}, 
            "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  return piVar1;\n}\n\n", 
            "called": [
                "__errno_location"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102050", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "__errno_location"
        }, 
        "bfd_set_default_target": {
            "renaming": {}, 
            "code": "\nvoid bfd_set_default_target(void)\n\n{\n  bfd_set_default_target();\n  return;\n}\n\n", 
            "called": [
                "bfd_set_default_target"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102080", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "bfd_set_default_target"
        }, 
        "bfd_get_error": {
            "renaming": {}, 
            "code": "\nvoid bfd_get_error(void)\n\n{\n  bfd_get_error();\n  return;\n}\n\n", 
            "called": [
                "bfd_get_error"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102160", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "bfd_get_error"
        }, 
        "FUN_00103520": {
            "renaming": {}, 
            "code": "\nulong FUN_00103520(_IO_FILE *param_1,long *param_2,int *param_3,byte **param_4)\n\n{\n  byte bVar1;\n  byte *pbVar2;\n  uint uVar3;\n  ulong uVar4;\n  ulong uVar5;\n  int iVar6;\n  int iVar7;\n  \n  iVar7 = DAT_0010834c;\n  if (DAT_0010834c < 1) {\n    uVar5 = 0;\n    if (DAT_00108360 == 'L') {\n      uVar5 = FUN_00102771();\n      return uVar5;\n    }\n    goto LAB_0010361f;\n  }\n  if (param_1 == (_IO_FILE *)0x0) {\n    uVar5 = 0;\n    iVar6 = 0;\n    do {\n      if (*param_3 == 0) {\n        return 0xffffffffffffffff;\n      }\n      iVar6 = iVar6 + 1;\n      *param_3 = *param_3 + -1;\n      pbVar2 = *param_4;\n      *param_4 = pbVar2 + 1;\n      bVar1 = *pbVar2;\n      *param_2 = *param_2 + 1;\n      uVar5 = uVar5 << 8 | (ulong)bVar1;\n    } while (iVar6 != iVar7);\n  }\n  else if (*param_3 == 0) {\n    pbVar2 = (byte *)param_1->_IO_read_ptr;\n    if (param_1->_IO_read_end <= pbVar2) {\n      uVar3 = __uflow(param_1);\n      uVar5 = (ulong)(uVar3 & 0xff);\n      if (uVar3 == 0xffffffff) {\n        return 0xffffffffffffffff;\n      }\n      goto LAB_001036aa;\n    }\n    param_1->_IO_read_ptr = (char *)(pbVar2 + 1);\n    uVar5 = (ulong)*pbVar2;\n    *param_2 = *param_2 + 1;\n    iVar6 = 0;\n    if (iVar7 == 1) goto LAB_00103610;\nLAB_00103574:\n    pbVar2 = (byte *)param_1->_IO_read_ptr;\n    if (pbVar2 < param_1->_IO_read_end) {\n      param_1->_IO_read_ptr = (char *)(pbVar2 + 1);\n      bVar1 = *pbVar2;\n      *param_2 = *param_2 + 1;\n      uVar5 = uVar5 << 8 | (ulong)bVar1;\n      if (DAT_0010834c < 3) goto LAB_00103610;\nLAB_001035a1:\n      pbVar2 = (byte *)param_1->_IO_read_ptr;\n      if (pbVar2 < param_1->_IO_read_end) {\n        param_1->_IO_read_ptr = (char *)(pbVar2 + 1);\n        bVar1 = *pbVar2;\n        *param_2 = *param_2 + 1;\n        uVar5 = uVar5 << 8 | (ulong)bVar1;\n        if (DAT_0010834c < 4) goto LAB_00103610;\n      }\n      else {\n        uVar3 = __uflow(param_1);\n        if (uVar3 == 0xffffffff) {\n          return 0xffffffffffffffff;\n        }\n        uVar4 = (ulong)(uVar3 & 0xff);\nLAB_00103717:\n        *param_2 = *param_2 + 1;\n        uVar5 = uVar5 << 8 | uVar4;\n        if (DAT_0010834c < 4) goto LAB_00103610;\n        iVar6 = *param_3;\n      }\n      iVar7 = 3;\n      while( true ) {\n        if (iVar6 == 0) {\n          while (pbVar2 = (byte *)param_1->_IO_read_ptr, pbVar2 < param_1->_IO_read_end) {\n            iVar7 = iVar7 + 1;\n            param_1->_IO_read_ptr = (char *)(pbVar2 + 1);\n            bVar1 = *pbVar2;\n            *param_2 = *param_2 + 1;\n            uVar5 = uVar5 << 8 | (ulong)bVar1;\n            if (DAT_0010834c <= iVar7) goto LAB_00103610;\n          }\n          uVar3 = __uflow(param_1);\n          if (uVar3 == 0xffffffff) {\n            return 0xffffffffffffffff;\n          }\n          uVar4 = (ulong)(uVar3 & 0xff);\n        }\n        else {\n          pbVar2 = *param_4;\n          *param_3 = iVar6 + -1;\n          *param_4 = pbVar2 + 1;\n          uVar4 = (ulong)*pbVar2;\n        }\n        *param_2 = *param_2 + 1;\n        iVar7 = iVar7 + 1;\n        uVar5 = uVar5 << 8 | uVar4;\n        if (DAT_0010834c <= iVar7) break;\n        iVar6 = *param_3;\n      }\n    }\n    else {\n      uVar3 = __uflow(param_1);\n      if (uVar3 == 0xffffffff) {\n        return 0xffffffffffffffff;\n      }\n      uVar4 = (ulong)(uVar3 & 0xff);\nLAB_001036dd:\n      *param_2 = *param_2 + 1;\n      uVar5 = uVar5 << 8 | uVar4;\n      if (2 < DAT_0010834c) {\n        iVar6 = *param_3;\n        if (iVar6 == 0) goto LAB_001035a1;\n        pbVar2 = *param_4;\n        *param_3 = iVar6 + -1;\n        *param_4 = pbVar2 + 1;\n        uVar4 = (ulong)*pbVar2;\n        goto LAB_00103717;\n      }\n    }\n  }\n  else {\n    pbVar2 = *param_4;\n    *param_3 = *param_3 + -1;\n    *param_4 = pbVar2 + 1;\n    uVar5 = (ulong)*pbVar2;\nLAB_001036aa:\n    *param_2 = *param_2 + 1;\n    if (1 < DAT_0010834c) {\n      iVar6 = *param_3;\n      if (iVar6 == 0) goto LAB_00103574;\n      pbVar2 = *param_4;\n      *param_3 = iVar6 + -1;\n      *param_4 = pbVar2 + 1;\n      uVar4 = (ulong)*pbVar2;\n      goto LAB_001036dd;\n    }\n  }\nLAB_00103610:\n  if (DAT_00108360 == 'L') {\n    uVar5 = FUN_00102771();\n    return uVar5;\n  }\nLAB_0010361f:\n  if (DAT_00108360 == 'l') {\n    uVar5 = uVar5 >> 8 & 0xff | (uVar5 & 0xff) << 8;\n  }\n  return uVar5;\n}\n\n", 
            "called": [
                "__uflow", 
                "FUN_00102771"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103520", 
            "calling": [
                "FUN_0010259a"
            ], 
            "imported": false, 
            "current_name": "FUN_00103520"
        }, 
        "xrealloc": {
            "renaming": {}, 
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n", 
            "called": [
                "xrealloc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102130", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "xrealloc"
        }, 
        "xmalloc_set_program_name": {
            "renaming": {}, 
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n", 
            "called": [
                "xmalloc_set_program_name"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102180", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "xmalloc_set_program_name"
        }, 
        "FUN_00103240": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_00103240(long param_1,long param_2,long param_3,int param_4,byte *param_5)\n\n{\n  byte *pbVar1;\n  byte bVar2;\n  char cVar3;\n  long lVar4;\n  uint uVar5;\n  int iVar6;\n  void *__ptr;\n  char *__s;\n  ulong uVar7;\n  ulong uVar8;\n  uint uVar9;\n  ulong uVar10;\n  uint uVar11;\n  bool bVar12;\n  long local_80;\n  byte *local_60;\n  int local_54;\n  long local_50 [2];\n  undefined local_3d [13];\n  \n  local_60 = param_5;\n  local_54 = param_4;\n  local_50[0] = param_3;\n  if (DAT_00108350 == 0) {\n    __s = (char *)xmalloc(DAT_00108374 + 1);\n    do {\n      while (lVar4 = local_50[0], uVar8 = (ulong)DAT_00108374, DAT_00108374 == 0) {\njoined_r0x001034ef:\n        if (DAT_00108371 != '\\0') {\n          printf(\"%s: \",param_1);\n        }\n        if (DAT_00108372 == '\\0') {\n          __s[uVar8] = '\\0';\n          fputs(__s,_stdout);\n        }\n        else {\n          FUN_0010286f(lVar4);\n          __s[uVar8] = '\\0';\n          fputs(__s,_stdout);\n        }\n        while (uVar8 = FUN_00103520(param_2,local_50,&local_54,&local_60),\n              uVar8 != 0xffffffffffffffff) {\n          if (0xff < uVar8) {\nLAB_0010348e:\n            FUN_00103810(uVar8,local_50,&local_54,&local_60);\n            break;\n          }\n          if (uVar8 == 9) {\nLAB_00102438:\n            putc((int)uVar8,_stdout);\n          }\n          else {\n            if ((*(ushort *)(&_sch_istable + uVar8 * 2) & 0x10) == 0) {\n              if (((DAT_00108360 != 'S') || ((long)uVar8 < 0x80)) &&\n                 ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar8 * 2) & 0x40) == 0))))\n              goto LAB_0010348e;\n              goto LAB_00102438;\n            }\n            putc((int)uVar8,_stdout);\n          }\n        }\n        if (DAT_00108358 == (char *)0x0) {\n          putc(10,_stdout);\n        }\n        else {\n          fputs(DAT_00108358,_stdout);\n        }\n      }\n      uVar7 = FUN_00103520(param_2,local_50,&local_54,&local_60);\n      uVar9 = DAT_00108374;\n      if (uVar7 == 0xffffffffffffffff) goto LAB_001034be;\n      if (uVar7 < 0x100) {\n        if (uVar7 == 9) {\nLAB_001023f5:\n          *__s = (char)uVar7;\n          if (uVar9 < 2) {\n            FUN_001034fa();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&_sch_istable + uVar7 * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)uVar7 < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar7 * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto LAB_001023f5;\n          }\n          *__s = (char)uVar7;\n          if (uVar9 < 2) {\n            uVar8 = 1;\n            goto joined_r0x001034ef;\n          }\n        }\n        uVar7 = FUN_00103520(param_2,local_50,&local_54,&local_60);\n        uVar9 = DAT_00108374;\n        if (uVar7 == 0xffffffffffffffff) goto LAB_001034be;\n        if (uVar7 < 0x100) {\n          if (uVar7 == 9) {\nLAB_001023bb:\n            __s[1] = (char)uVar7;\n            if (uVar9 < 3) {\n              FUN_00103510();\n              return;\n            }\n          }\n          else {\n            if ((*(ushort *)(&_sch_istable + uVar7 * 2) & 0x10) == 0) {\n              if (((DAT_00108360 != 'S') || ((long)uVar7 < 0x80)) &&\n                 ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar7 * 2) & 0x40) == 0))))\n              goto code_r0x001034d5;\n              goto LAB_001023bb;\n            }\n            __s[1] = (char)uVar7;\n            if (uVar9 < 3) {\n              uVar8 = 2;\n              goto joined_r0x001034ef;\n            }\n          }\n          uVar7 = FUN_00103520(param_2,local_50,&local_54,&local_60);\n          uVar9 = DAT_00108374;\n          if (uVar7 == 0xffffffffffffffff) {\nLAB_001034be:\n            free(__s);\n            return;\n          }\n          if (uVar7 < 0x100) {\n            if (uVar7 == 9) {\nLAB_00102381:\n              __s[2] = (char)uVar7;\n            }\n            else {\n              if ((*(ushort *)(&_sch_istable + uVar7 * 2) & 0x10) == 0) {\n                if (((DAT_00108360 != 'S') || ((long)uVar7 < 0x80)) &&\n                   ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar7 * 2) & 0x40) == 0))\n                   )) goto code_r0x001034d5;\n                goto LAB_00102381;\n              }\n              __s[2] = (char)uVar7;\n            }\n            if (uVar9 < 4) {\n              uVar8 = 3;\n            }\n            else {\n              uVar10 = 3;\n              do {\n                uVar7 = FUN_00103520(param_2,local_50,&local_54,&local_60);\n                if (uVar7 == 0xffffffffffffffff) goto LAB_001034be;\n                if (0xff < uVar7) goto code_r0x001034d5;\n                if (((uVar7 != 9) && ((*(ushort *)(&_sch_istable + uVar7 * 2) & 0x10) == 0)) &&\n                   ((DAT_00108360 != 'S' || ((long)uVar7 < 0x80)))) {\n                  if (DAT_00108373 == '\\0') goto code_r0x001034d5;\n                  if ((*(ushort *)(&_sch_istable + uVar7 * 2) & 0x40) == 0) {\n                    FUN_001034d5();\n                    return;\n                  }\n                }\n                uVar9 = (int)uVar10 + 1;\n                uVar8 = (ulong)uVar9;\n                bVar12 = uVar9 < DAT_00108374;\n                __s[uVar10] = (char)uVar7;\n                uVar10 = uVar8;\n              } while (bVar12);\n            }\n            goto joined_r0x001034ef;\n          }\n        }\n      }\ncode_r0x001034d5:\n      FUN_00103810(uVar7,local_50,&local_54,&local_60);\n    } while( true );\n  }\n  if (param_5 != (byte *)0x0) {\n    uVar8 = (ulong)param_4;\n    local_80 = param_3;\n    if (param_1 != 0) {\nLAB_0010249c:\n      uVar9 = DAT_00108374;\n      cVar3 = DAT_00108373;\n      iVar6 = DAT_00108350;\n      if (((DAT_00108350 != 0) && (DAT_00108360 == 'S')) && (DAT_0010834c == 1)) {\n        if (uVar8 != 0) {\n          uVar7 = 0;\n          uVar11 = 0;\n          uVar10 = 0;\n          do {\n            while( true ) {\n              bVar2 = param_5[uVar10];\n              if (bVar2 != 9) break;\nLAB_0010252e:\n              uVar5 = 1;\nLAB_00102533:\n              if (uVar11 == 0) {\n                uVar7 = uVar10;\n              }\n              uVar11 = uVar11 + 1;\n              if (uVar9 <= uVar11) goto LAB_001026a9;\n              uVar10 = uVar10 + uVar5;\n              if (uVar8 <= uVar10) goto LAB_00102551;\n            }\n            if ((*(ushort *)(&_sch_istable + (long)(int)(uint)bVar2 * 2) & 0x10) != 0) {\n              if (0x7e < bVar2) goto LAB_0010264e;\n              goto LAB_0010252e;\n            }\n            if (0x7f < bVar2) {\nLAB_0010264e:\n              if ((bVar2 < 0xc0) ||\n                 (uVar5 = FUN_001028b2(param_5 + uVar10,uVar8 - uVar10), uVar5 == 0))\n              goto LAB_0010269a;\n              if (iVar6 == 5) goto LAB_00102688;\n              goto LAB_00102533;\n            }\n            if (((cVar3 != '\\0') &&\n                ((*(ushort *)(&_sch_istable + (long)(int)(uint)bVar2 * 2) & 0x40) != 0)) &&\n               (bVar2 != 0x7f)) goto LAB_0010252e;\nLAB_0010269a:\n            uVar5 = 1;\nLAB_00102688:\n            uVar10 = uVar10 + uVar5;\n            if (uVar8 <= uVar10) goto LAB_001026a1;\n            uVar11 = 0;\n          } while( true );\n        }\n        goto LAB_00102551;\n      }\n    }\n    fwrite(\"ICE: bad arguments to print_unicode_buffer\\n\",1,0x2b,_stderr);\n  }\n  if (param_2 != 0) {\n    if (param_1 != 0) {\nLAB_0010255f:\n      lVar4 = local_50[0];\n      if (((DAT_00108350 != 0) && (DAT_00108360 == 'S')) && (DAT_0010834c == 1)) {\n        __ptr = (void *)xmalloc(DAT_00108374 * 4 + 1);\n        FUN_00102b11(param_1,lVar4,param_2,local_3d,0,__ptr);\n        free(__ptr);\n        return;\n      }\n    }\n    fwrite(\"ICE: bad arguments to print_unicode_stream\\n\",1,0x2b,_stderr);\n  }\n  return;\nLAB_001026a1:\n  if (uVar9 != 0) {\nLAB_00102551:\n    if (param_2 == 0) {\n      return;\n    }\n    goto LAB_0010255f;\n  }\nLAB_001026a9:\n  FUN_00103890(param_1,local_80 + uVar7);\n  for (; pbVar1 = param_5 + uVar7, uVar7 < uVar8; uVar7 = uVar7 + uVar9) {\n    bVar2 = *pbVar1;\n    if (bVar2 == 9) {\nLAB_00102708:\n      putc((uint)bVar2,_stdout);\n      uVar9 = 1;\n    }\n    else {\n      if ((*(ushort *)(&_sch_istable + (long)(int)(uint)bVar2 * 2) & 0x10) == 0) {\n        if ((DAT_00108360 != 'S') || (bVar2 < 0x80)) {\n          if ((DAT_00108373 != '\\0') &&\n             ((*(ushort *)(&_sch_istable + (long)(int)(uint)bVar2 * 2) & 0x40) != 0))\n          goto LAB_00102703;\n          break;\n        }\n      }\n      else {\nLAB_00102703:\n        if (bVar2 < 0x7f) goto LAB_00102708;\n      }\n      iVar6 = FUN_001028b2(pbVar1,uVar8 - uVar7);\n      if ((iVar6 == 0) || (DAT_00108350 == 5)) break;\n      uVar9 = FUN_0010293a(pbVar1);\n    }\n  }\n  if (DAT_00108358 == (char *)0x0) {\n    putc(10,_stdout);\n  }\n  else {\n    fputs(DAT_00108358,_stdout);\n  }\n  local_80 = local_80 + uVar7;\n  uVar8 = uVar8 - uVar7;\n  param_5 = pbVar1;\n  goto LAB_0010249c;\n}\n\n", 
            "called": [
                "FUN_00102b11", 
                "FUN_001028b2", 
                "fputs", 
                "xmalloc", 
                "FUN_0010293a", 
                "FUN_00103890", 
                "fwrite", 
                "free", 
                "putc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103240", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "FUN_00103240"
        }, 
        "strcmp": {
            "renaming": {}, 
            "code": "\n\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcmp(__s1,__s2);\n  return iVar1;\n}\n\n", 
            "called": [
                "strcmp"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001021c0", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "strcmp"
        }, 
        "__cxa_finalize": {
            "renaming": {}, 
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n", 
            "called": [
                "__cxa_finalize"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102320", 
            "calling": [
                "_FINI_0"
            ], 
            "imported": false, 
            "current_name": "__cxa_finalize"
        }, 
        "FUN_00104a60": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_00104a60(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined8 param_9,undefined8 param_10,undefined8 param_11,undefined8 param_12,\n                 undefined8 param_13,undefined8 param_14)\n\n{\n  char in_AL;\n  undefined4 local_d8;\n  undefined4 local_d4;\n  undefined *local_d0;\n  undefined *local_c8;\n  undefined local_b8 [8];\n  undefined8 local_b0;\n  undefined8 local_a8;\n  undefined8 local_a0;\n  undefined8 local_98;\n  undefined8 local_90;\n  undefined4 local_88;\n  undefined4 local_78;\n  undefined4 local_68;\n  undefined4 local_58;\n  undefined4 local_48;\n  undefined4 local_38;\n  undefined4 local_28;\n  undefined4 local_18;\n  \n  if (in_AL != '\\0') {\n    local_88 = param_1;\n    local_78 = param_2;\n    local_68 = param_3;\n    local_58 = param_4;\n    local_48 = param_5;\n    local_38 = param_6;\n    local_28 = param_7;\n    local_18 = param_8;\n  }\n  local_d0 = &stack0x00000008;\n  local_d8 = 8;\n  local_c8 = local_b8;\n  local_d4 = 0x30;\n  local_b0 = param_10;\n  local_a8 = param_11;\n  local_a0 = param_12;\n  local_98 = param_13;\n  local_90 = param_14;\n  FUN_001038b0(param_9,&local_d8);\n  xexit(1);\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
            "called": [
                "FUN_001038b0", 
                "xexit"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00104a60", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "FUN_00104a60"
        }, 
        "bfd_malloc_and_get_section": {
            "renaming": {}, 
            "code": "\nvoid bfd_malloc_and_get_section(void)\n\n{\n  bfd_malloc_and_get_section();\n  return;\n}\n\n", 
            "called": [
                "bfd_malloc_and_get_section"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001020b0", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "bfd_malloc_and_get_section"
        }, 
        "_DT_FINI": {
            "renaming": {}, 
            "code": "\nvoid _DT_FINI(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00104af4", 
            "calling": [], 
            "imported": false, 
            "current_name": "_DT_FINI"
        }, 
        "FUN_00103a10": {
            "renaming": {}, 
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00103a34) */\n/* WARNING: Removing unreachable block (ram,0x00103a40) */\n\nvoid FUN_00103a10(void)\n\n{\n  return;\n}\n\n", 
            "called": [
                "_ITM_registerTMCloneTable"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103a10", 
            "calling": [
                "_INIT_0"
            ], 
            "imported": false, 
            "current_name": "FUN_00103a10"
        }, 
        "textdomain": {
            "renaming": {}, 
            "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n", 
            "called": [
                "textdomain"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001020a0", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "textdomain"
        }, 
        "fread": {
            "renaming": {}, 
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n", 
            "called": [
                "fread"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102090", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "fread"
        }, 
        "bfd_init": {
            "renaming": {}, 
            "code": "\nvoid bfd_init(void)\n\n{\n  bfd_init();\n  return;\n}\n\n", 
            "called": [
                "bfd_init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001021b0", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "bfd_init"
        }, 
        "strerror": {
            "renaming": {}, 
            "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strerror(__errnum);\n  return pcVar1;\n}\n\n", 
            "called": [
                "strerror"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102310", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "strerror"
        }, 
        "FUN_0010282b": {
            "renaming": {}, 
            "code": "\nvoid FUN_0010282b(void)\n\n{\n  undefined4 *in_RAX;\n  undefined8 *in_RCX;\n  undefined8 unaff_RBX;\n  \n  DAT_00108348 = (undefined)((ulong)unaff_RBX >> 8);\n  DAT_0010834a = (undefined)((ulong)unaff_RBX >> 0x18);\n  DAT_00108349 = (undefined)((ulong)unaff_RBX >> 0x10);\n  *in_RAX = 3;\n  *in_RCX = &DAT_00108348;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x0010282b", 
            "calling": [
                "FUN_00103810"
            ], 
            "imported": false, 
            "current_name": "FUN_0010282b"
        }, 
        "FUN_0010286f": {
            "renaming": {}, 
            "code": "\nvoid FUN_0010286f(undefined8 param_1)\n\n{\n  if (DAT_00108354 == 10) {\n    printf(\"%7ld \",param_1);\n    return;\n  }\n  if (DAT_00108354 != 0x10) {\n    if (DAT_00108354 == 8) {\n      printf(\"%7lo \",param_1);\n      return;\n    }\n    return;\n  }\n  printf(\"%7lx \",param_1);\n  return;\n}\n\n", 
            "called": [
                "printf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x0010286f", 
            "calling": [
                "FUN_00102853", 
                "FUN_0010259a"
            ], 
            "imported": false, 
            "current_name": "FUN_0010286f"
        }, 
        "ferror": {
            "renaming": {}, 
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n", 
            "called": [
                "ferror"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102060", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "ferror"
        }, 
        "exit": {
            "renaming": {}, 
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n", 
            "called": [
                "exit"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001022e0", 
            "calling": [
                "FUN_001030c0", 
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "exit"
        }, 
        "entry": {
            "renaming": {}, 
            "code": "\nvoid processEntry entry(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined auStack_8 [8];\n  \n  __libc_start_main(FUN_00103aa0,param_2,&stack0x00000008,0,0,param_1,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [
                "__libc_start_main", 
                "FUN_00103aa0"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001039b0", 
            "calling": [], 
            "imported": false, 
            "current_name": "entry"
        }, 
        "bfd_check_format": {
            "renaming": {}, 
            "code": "\nvoid bfd_check_format(void)\n\n{\n  bfd_check_format();\n  return;\n}\n\n", 
            "called": [
                "bfd_check_format"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102300", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "bfd_check_format"
        }, 
        "memmove": {
            "renaming": {}, 
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n", 
            "called": [
                "memmove"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102260", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "memmove"
        }, 
        "FUN_001038b0": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_001038b0(char *param_1,__gnuc_va_list param_2)\n\n{\n  fflush(_stdout);\n  fprintf(_stderr,\"%s: \",DAT_00108378);\n  vfprintf(_stderr,param_1,param_2);\n  putc(10,_stderr);\n  return;\n}\n\n", 
            "called": [
                "vfprintf", 
                "fprintf", 
                "fflush", 
                "putc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001038b0", 
            "calling": [
                "FUN_00104a60", 
                "FUN_00103910"
            ], 
            "imported": false, 
            "current_name": "FUN_001038b0"
        }, 
        "FUN_0010290e": {
            "renaming": {}, 
            "code": "\nuint FUN_0010290e(_IO_FILE *param_1,long param_2,uint *param_3,int *param_4)\n\n{\n  byte *pbVar1;\n  uint uVar2;\n  \n  if (*param_3 != 0) {\n    uVar2 = *param_3 - 1;\n    *param_3 = uVar2;\n    return (uint)*(byte *)(param_2 + (ulong)uVar2);\n  }\n  *param_4 = *param_4 + 1;\n  pbVar1 = (byte *)param_1->_IO_read_ptr;\n  if (param_1->_IO_read_end <= pbVar1) {\n    uVar2 = __uflow(param_1);\n    return uVar2;\n  }\n  param_1->_IO_read_ptr = (char *)(pbVar1 + 1);\n  return (uint)*pbVar1;\n}\n\n", 
            "called": [
                "__uflow"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x0010290e", 
            "calling": [
                "FUN_00102b11"
            ], 
            "imported": false, 
            "current_name": "FUN_0010290e"
        }, 
        "FUN_00103890": {
            "renaming": {}, 
            "code": "\nvoid FUN_00103890(undefined8 param_1,undefined8 param_2)\n\n{\n  if (DAT_00108371 != '\\0') {\n    printf(\"%s: \",param_1);\n  }\n  if (DAT_00108372 == '\\0') {\n    return;\n  }\n  FUN_0010286f(param_2);\n  return;\n}\n\n", 
            "called": [
                "FUN_00102853"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103890", 
            "calling": [
                "FUN_00102b11", 
                "FUN_00103240"
            ], 
            "imported": false, 
            "current_name": "FUN_00103890"
        }, 
        "setlocale": {
            "renaming": {}, 
            "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = setlocale(__category,__locale);\n  return pcVar1;\n}\n\n", 
            "called": [
                "setlocale"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102240", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "setlocale"
        }, 
        "bindtextdomain": {
            "renaming": {}, 
            "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n", 
            "called": [
                "bindtextdomain"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001020e0", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "bindtextdomain"
        }, 
        "ftell": {
            "renaming": {}, 
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n", 
            "called": [
                "ftell"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001021f0", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "ftell"
        }, 
        "FUN_00103810": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_00103810(undefined8 param_1,long *param_2,int *param_3,long *param_4)\n\n{\n  int iVar1;\n  long lVar2;\n  int iVar3;\n  \n  lVar2 = (long)DAT_0010834c;\n  if (DAT_0010834c < 2) {\n    return;\n  }\n  iVar3 = DAT_0010834c + -1;\n  *param_2 = *param_2 - (long)iVar3;\n  iVar1 = *param_3;\n  if (iVar1 == 0) {\n    if (DAT_00108360 != 'l') {\n      if (DAT_00108360 < 'm') {\n        if (DAT_00108360 == 'b') {\n          DAT_00108348 = (undefined)param_1;\n          *param_3 = 1;\n        }\n        else if (DAT_00108360 < 'c') {\n          if (DAT_00108360 == 'B') {\n            _DAT_00108349 = (ushort)param_1 << 8 | (ushort)param_1 >> 8;\n            DAT_00108348 = (undefined)((ulong)param_1 >> 0x10);\n            *param_3 = 3;\n          }\n          else if (DAT_00108360 == 'L') {\n            FUN_0010282b();\n            return;\n          }\n        }\n      }\n      *param_4 = (long)&DAT_00108348;\n      return;\n    }\n    DAT_00108348 = (undefined)((ulong)param_1 >> 8);\n    *param_3 = 1;\n    *param_4 = (long)&DAT_00108348;\n  }\n  else {\n    *param_4 = *param_4 + (1 - lVar2);\n    *param_3 = iVar3 + iVar1;\n  }\n  return;\n}\n\n", 
            "called": [
                "FUN_001027e2", 
                "FUN_0010282b"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103810", 
            "calling": [
                "FUN_001034d5", 
                "FUN_0010259a"
            ], 
            "imported": false, 
            "current_name": "FUN_00103810"
        }, 
        "dcgettext": {
            "renaming": {}, 
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n", 
            "called": [
                "dcgettext"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001020f0", 
            "calling": [
                "FUN_001030c0", 
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "dcgettext"
        }, 
        "bfd_set_error_program_name": {
            "renaming": {}, 
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n", 
            "called": [
                "bfd_set_error_program_name"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102250", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "bfd_set_error_program_name"
        }, 
        "fputc": {
            "renaming": {}, 
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n", 
            "called": [
                "fputc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001021a0", 
            "calling": [
                "FUN_001030c0"
            ], 
            "imported": false, 
            "current_name": "fputc"
        }, 
        "_DT_INIT": {
            "renaming": {}, 
            "code": "\nvoid _DT_INIT(void)\n\n{\n  __gmon_start__();\n  return;\n}\n\n", 
            "called": [
                "__gmon_start__"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102000", 
            "calling": [], 
            "imported": false, 
            "current_name": "_DT_INIT"
        }, 
        "FUN_001030c0": {
            "renaming": {}, 
            "code": "\nvoid FUN_001030c0(FILE *param_1,int param_2)\n\n{\n  long lVar1;\n  char *pcVar2;\n  long *__ptr;\n  long *plVar3;\n  \n  lVar1 = DAT_00108378;\n  pcVar2 = (char *)dcgettext(0,\"Usage: %s [option(s)] [file(s)]\\n\",5);\n  fprintf(param_1,pcVar2,lVar1);\n  pcVar2 = (char *)dcgettext(0,\" Display printable strings in [file(s)] (stdin by default)\\n\",5);\n  fprintf(param_1,pcVar2);\n  pcVar2 = (char *)dcgettext(0,\" The options are:\\n\",5);\n  fprintf(param_1,pcVar2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"  -a - --all                Scan the entire file, not just the data section [default]\\n  -d --data                 Only scan the data sections in the file\\n\"\n                             ,5);\n  fprintf(param_1,pcVar2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"  -f --print-file-name      Print the name of the file before each string\\n  -n <number>               Locate & print any sequence of at least <number>\\n    --bytes=<number>         displayable characters.  (The default is 4).\\n  -t --radix={o,d,x}        Print the location of the string in base 8, 10 or 16\\n  -w --include-all-whitespace Include all whitespace as valid string characters\\n  -o                        An alias for --radix=o\\n  -T --target=<BFDNAME>     Specify the binary file format\\n  -e --encoding={s,S,b,l,B,L} Select character size and endianness:\\n                            s = 7-bit, S = 8-bit, {b,l} = 16-bit, {B,L} = 32-bit\\n  --unicode={default|show|invalid|hex|escape|highlight}\\n  -U {d|s|i|x|e|h}          Specify how to treat UTF-8 encoded unicode characters\\n  -s --output-separator=<string> String used to separate strings in output.\\n  @<file>                   Read options from <file>\\n  -h --help                 Display this information\\n  -v -V --version           Print the program\\'s version number\\n\"\n                             ,5);\n  fprintf(param_1,pcVar2);\n  lVar1 = DAT_00108378;\n  if (DAT_00108378 == 0) {\n    pcVar2 = (char *)dcgettext(0,\"Supported targets:\",5);\n    fprintf(param_1,pcVar2);\n  }\n  else {\n    pcVar2 = (char *)dcgettext(0,\"%s: supported targets:\",5);\n    fprintf(param_1,pcVar2,lVar1);\n  }\n  __ptr = (long *)bfd_target_list();\n  plVar3 = __ptr;\n  while( true ) {\n    lVar1 = *plVar3;\n    plVar3 = plVar3 + 1;\n    if (lVar1 == 0) break;\n    fprintf(param_1,\" %s\");\n  }\n  fputc(10,param_1);\n  free(__ptr);\n  if (param_2 == 0) {\n    pcVar2 = (char *)dcgettext(0,\"Report bugs to %s\\n\",5);\n    fprintf(param_1,pcVar2,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  exit(param_2);\n}\n\n", 
            "called": [
                "exit", 
                "dcgettext", 
                "bfd_target_list", 
                "fprintf", 
                "fputc", 
                "free"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001030c0", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "FUN_001030c0"
        }, 
        "bfd_openr": {
            "renaming": {}, 
            "code": "\nvoid bfd_openr(void)\n\n{\n  bfd_openr();\n  return;\n}\n\n", 
            "called": [
                "bfd_openr"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001020c0", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "bfd_openr"
        }, 
        "printf": {
            "renaming": {}, 
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n", 
            "called": [
                "printf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102120", 
            "calling": [
                "FUN_00102853", 
                "FUN_0010286f", 
                "FUN_0010293a", 
                "FUN_0010259a", 
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "printf"
        }, 
        "FUN_0010259a": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_0010259a(void)\n\n{\n  uint uVar1;\n  ulong uVar2;\n  ulong in_R8;\n  char *unaff_R14;\n  undefined8 unaff_R15;\n  bool bVar3;\n  uint param_7;\n  undefined8 param_8;\n  undefined8 param_11;\n  \n  do {\n    param_7 = (uint)in_R8;\n    printf(\"%s: \",param_8);\n    in_R8 = (ulong)param_7;\n    do {\n      if (DAT_00108372 == '\\0') {\n        unaff_R14[in_R8] = '\\0';\n        fputs(unaff_R14,_stdout);\n      }\n      else {\n        param_7 = (uint)in_R8;\n        FUN_0010286f(unaff_R15);\n        unaff_R14[param_7] = '\\0';\n        fputs(unaff_R14,_stdout);\n      }\n      while (uVar2 = FUN_00103520(), uVar2 != 0xffffffffffffffff) {\n        if (0xff < uVar2) {\nLAB_0010348e:\n          FUN_00103810();\n          break;\n        }\n        if (uVar2 == 9) {\nLAB_00102438:\n          putc((int)uVar2,_stdout);\n        }\n        else {\n          if ((*(ushort *)(&_sch_istable + uVar2 * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)uVar2 < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar2 * 2) & 0x40) == 0))))\n            goto LAB_0010348e;\n            goto LAB_00102438;\n          }\n          putc((int)uVar2,_stdout);\n        }\n      }\n      if (DAT_00108358 == (char *)0x0) {\n        putc(10,_stdout);\n      }\n      else {\n        fputs(DAT_00108358,_stdout);\n      }\n      while (in_R8 = (ulong)DAT_00108374, DAT_00108374 != 0) {\n        uVar2 = FUN_00103520();\n        uVar1 = DAT_00108374;\n        if (uVar2 == 0xffffffffffffffff) goto LAB_001034be;\n        if (uVar2 < 0x100) {\n          if (uVar2 == 9) {\nLAB_001023f5:\n            *unaff_R14 = (char)uVar2;\n            if (uVar1 < 2) {\n              FUN_001034fa();\n              return;\n            }\n          }\n          else {\n            if ((*(ushort *)(&_sch_istable + uVar2 * 2) & 0x10) == 0) {\n              if (((DAT_00108360 != 'S') || ((long)uVar2 < 0x80)) &&\n                 ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar2 * 2) & 0x40) == 0))))\n              goto code_r0x001034d5;\n              goto LAB_001023f5;\n            }\n            *unaff_R14 = (char)uVar2;\n            if (uVar1 < 2) {\n              in_R8 = 1;\n              break;\n            }\n          }\n          uVar2 = FUN_00103520();\n          uVar1 = DAT_00108374;\n          if (uVar2 == 0xffffffffffffffff) goto LAB_001034be;\n          if (0xff < uVar2) goto code_r0x001034d5;\n          if (uVar2 == 9) {\nLAB_001023bb:\n            unaff_R14[1] = (char)uVar2;\n            if (uVar1 < 3) {\n              FUN_00103510();\n              return;\n            }\n          }\n          else {\n            if ((*(ushort *)(&_sch_istable + uVar2 * 2) & 0x10) == 0) {\n              if (((DAT_00108360 != 'S') || ((long)uVar2 < 0x80)) &&\n                 ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar2 * 2) & 0x40) == 0))))\n              goto code_r0x001034d5;\n              goto LAB_001023bb;\n            }\n            unaff_R14[1] = (char)uVar2;\n            if (uVar1 < 3) {\n              in_R8 = 2;\n              break;\n            }\n          }\n          uVar2 = FUN_00103520();\n          uVar1 = DAT_00108374;\n          if (uVar2 == 0xffffffffffffffff) {\nLAB_001034be:\n            free(unaff_R14);\n            return;\n          }\n          if (0xff < uVar2) goto code_r0x001034d5;\n          if (uVar2 == 9) {\nLAB_00102381:\n            unaff_R14[2] = (char)uVar2;\n          }\n          else {\n            if ((*(ushort *)(&_sch_istable + uVar2 * 2) & 0x10) == 0) {\n              if (((DAT_00108360 != 'S') || ((long)uVar2 < 0x80)) &&\n                 ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar2 * 2) & 0x40) == 0))))\n              goto code_r0x001034d5;\n              goto LAB_00102381;\n            }\n            unaff_R14[2] = (char)uVar2;\n          }\n          if (3 < uVar1) {\n            in_R8 = 3;\n            do {\n              param_7 = (uint)in_R8;\n              uVar2 = FUN_00103520();\n              if (uVar2 == 0xffffffffffffffff) goto LAB_001034be;\n              if (0xff < uVar2) goto code_r0x001034d5;\n              if (((uVar2 != 9) && ((*(ushort *)(&_sch_istable + uVar2 * 2) & 0x10) == 0)) &&\n                 ((DAT_00108360 != 'S' || ((long)uVar2 < 0x80)))) {\n                if (DAT_00108373 == '\\0') goto code_r0x001034d5;\n                if ((*(ushort *)(&_sch_istable + uVar2 * 2) & 0x40) == 0) {\n                  FUN_001034d5();\n                  return;\n                }\n              }\n              in_R8 = (ulong)(param_7 + 1);\n              bVar3 = DAT_00108374 <= param_7 + 1;\n              unaff_R14[param_7] = (char)uVar2;\n              if (bVar3) goto joined_r0x0010341b;\n            } while( true );\n          }\n          in_R8 = 3;\n          break;\n        }\ncode_r0x001034d5:\n        FUN_00103810();\n      }\njoined_r0x0010341b:\n      unaff_R15 = param_11;\n    } while (DAT_00108371 == '\\0');\n  } while( true );\n}\n\n", 
            "called": [
                "FUN_001034d5", 
                "fputs", 
                "FUN_0010286f", 
                "FUN_00103810", 
                "FUN_001034fa", 
                "printf", 
                "FUN_00102330", 
                "FUN_00103510", 
                "FUN_00103520", 
                "FUN_0010259a", 
                "free", 
                "putc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x0010259a", 
            "calling": [
                "FUN_0010259a"
            ], 
            "imported": false, 
            "current_name": "FUN_0010259a"
        }, 
        "FUN_001028b2": {
            "renaming": {}, 
            "code": "\nlong FUN_001028b2(byte *param_1,long param_2)\n\n{\n  byte bVar1;\n  long lVar2;\n  \n  bVar1 = *param_1;\n  if ((0xbf < bVar1) && (param_2 != 1)) {\n    lVar2 = 0;\n    if ((param_1[1] & 0xc0) == 0x80) {\n      if ((bVar1 & 0x20) == 0) {\n        return 2;\n      }\n      if ((param_2 != 2) && ((param_1[2] & 0xc0) == 0x80)) {\n        if ((bVar1 & 0x10) == 0) {\n          lVar2 = 3;\n        }\n        else {\n          lVar2 = 0;\n          if (param_2 != 3) {\n            return (ulong)((param_1[3] & 0xc0) == 0x80) << 2;\n          }\n        }\n      }\n    }\n    return lVar2;\n  }\n  return 0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001028b2", 
            "calling": [
                "FUN_00103240"
            ], 
            "imported": false, 
            "current_name": "FUN_001028b2"
        }, 
        "FUN_001039e0": {
            "renaming": {}, 
            "code": "\n/* WARNING: Removing unreachable block (ram,0x001039f3) */\n/* WARNING: Removing unreachable block (ram,0x001039ff) */\n\nvoid FUN_001039e0(void)\n\n{\n  return;\n}\n\n", 
            "called": [
                "_ITM_deregisterTMCloneTable"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001039e0", 
            "calling": [
                "_FINI_0"
            ], 
            "imported": false, 
            "current_name": "FUN_001039e0"
        }, 
        "strtoul": {
            "renaming": {}, 
            "code": "\n\n\nulong strtoul(char *__nptr,char **__endptr,int __base)\n\n{\n  ulong uVar1;\n  \n  uVar1 = strtoul(__nptr,__endptr,__base);\n  return uVar1;\n}\n\n", 
            "called": [
                "strtoul"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001022c0", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "strtoul"
        }, 
        "FUN_00102330": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_00102330(ulong param_1)\n\n{\n  uint uVar1;\n  ushort in_AX;\n  ulong uVar2;\n  ulong uVar3;\n  uint in_R8D;\n  char *unaff_R14;\n  undefined8 unaff_R15;\n  bool bVar4;\n  undefined8 in_stack_00000010;\n  undefined8 in_stack_00000038;\n  \ncode_r0x00102330:\n  if ((DAT_00108360 != 'S') || ((long)param_1 < 0x80)) {\n    if (DAT_00108373 == '\\0') goto code_r0x001034d5;\n    if ((in_AX & 0x40) == 0) {\n      FUN_001034d5();\n      return;\n    }\n  }\nLAB_00103400:\n  uVar2 = (ulong)in_R8D;\n  in_R8D = in_R8D + 1;\n  uVar3 = (ulong)in_R8D;\n  bVar4 = in_R8D < DAT_00108374;\n  unaff_R14[uVar2] = (char)param_1;\n  if (bVar4) goto LAB_001033b3;\n  do {\n    if (DAT_00108371 != '\\0') {\n      printf(\"%s: \",in_stack_00000010);\n    }\n    if (DAT_00108372 == '\\0') {\n      unaff_R14[uVar3] = '\\0';\n      fputs(unaff_R14,_stdout);\n    }\n    else {\n      FUN_0010286f(unaff_R15);\n      unaff_R14[uVar3] = '\\0';\n      fputs(unaff_R14,_stdout);\n    }\n    while (uVar3 = FUN_00103520(), uVar3 != 0xffffffffffffffff) {\n      if (0xff < uVar3) {\nLAB_0010348e:\n        FUN_00103810();\n        break;\n      }\n      if (uVar3 == 9) {\nLAB_00102438:\n        putc((int)uVar3,_stdout);\n      }\n      else {\n        if ((*(ushort *)(&_sch_istable + uVar3 * 2) & 0x10) == 0) {\n          if (((DAT_00108360 != 'S') || ((long)uVar3 < 0x80)) &&\n             ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar3 * 2) & 0x40) == 0))))\n          goto LAB_0010348e;\n          goto LAB_00102438;\n        }\n        putc((int)uVar3,_stdout);\n      }\n    }\n    if (DAT_00108358 == (char *)0x0) {\n      putc(10,_stdout);\n    }\n    else {\n      fputs(DAT_00108358,_stdout);\n    }\n    while (uVar3 = (ulong)DAT_00108374, unaff_R15 = in_stack_00000038, DAT_00108374 != 0) {\n      uVar3 = FUN_00103520();\n      uVar1 = DAT_00108374;\n      if (uVar3 == 0xffffffffffffffff) goto LAB_001034be;\n      if (uVar3 < 0x100) {\n        if (uVar3 == 9) {\nLAB_001023f5:\n          *unaff_R14 = (char)uVar3;\n          if (uVar1 < 2) {\n            FUN_001034fa();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&_sch_istable + uVar3 * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)uVar3 < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar3 * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto LAB_001023f5;\n          }\n          *unaff_R14 = (char)uVar3;\n          if (uVar1 < 2) {\n            uVar3 = 1;\n            break;\n          }\n        }\n        uVar3 = FUN_00103520();\n        uVar1 = DAT_00108374;\n        if (uVar3 == 0xffffffffffffffff) goto LAB_001034be;\n        if (0xff < uVar3) goto code_r0x001034d5;\n        if (uVar3 == 9) {\nLAB_001023bb:\n          unaff_R14[1] = (char)uVar3;\n          if (uVar1 < 3) {\n            FUN_00103510();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&_sch_istable + uVar3 * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)uVar3 < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar3 * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto LAB_001023bb;\n          }\n          unaff_R14[1] = (char)uVar3;\n          if (uVar1 < 3) {\n            uVar3 = 2;\n            break;\n          }\n        }\n        uVar3 = FUN_00103520();\n        uVar1 = DAT_00108374;\n        if (uVar3 == 0xffffffffffffffff) goto LAB_001034be;\n        if (0xff < uVar3) goto code_r0x001034d5;\n        if (uVar3 == 9) {\nLAB_00102381:\n          unaff_R14[2] = (char)uVar3;\n        }\n        else {\n          if ((*(ushort *)(&_sch_istable + uVar3 * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)uVar3 < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar3 * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto LAB_00102381;\n          }\n          unaff_R14[2] = (char)uVar3;\n        }\n        if (uVar1 < 4) {\n          uVar3 = 3;\n          break;\n        }\n        in_R8D = 3;\nLAB_001033b3:\n        param_1 = FUN_00103520();\n        if (param_1 == 0xffffffffffffffff) {\nLAB_001034be:\n          free(unaff_R14);\n          return;\n        }\n        if (param_1 < 0x100) {\n          if ((param_1 == 9) ||\n             (in_AX = *(ushort *)(&_sch_istable + param_1 * 2), (in_AX & 0x10) != 0))\n          goto LAB_00103400;\n          goto code_r0x00102330;\n        }\n      }\ncode_r0x001034d5:\n      FUN_00103810();\n    }\n  } while( true );\n}\n\n", 
            "called": [
                "FUN_001034d5"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102330", 
            "calling": [
                "FUN_0010259a"
            ], 
            "imported": false, 
            "current_name": "FUN_00102330"
        }, 
        "bfd_target_list": {
            "renaming": {}, 
            "code": "\nvoid bfd_target_list(void)\n\n{\n  bfd_target_list();\n  return;\n}\n\n", 
            "called": [
                "bfd_target_list"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102150", 
            "calling": [
                "FUN_001030c0"
            ], 
            "imported": false, 
            "current_name": "bfd_target_list"
        }, 
        "FUN_00102771": {
            "renaming": {}, 
            "code": "\nulong FUN_00102771(void)\n\n{\n  ulong unaff_RBX;\n  \n  return unaff_RBX >> 0x18 & 0xff |\n         (unaff_RBX & 0xff) << 0x18 | (ulong)((uint)(unaff_RBX << 8) & 0xff0000) |\n         (ulong)((uint)(unaff_RBX >> 8) & 0xff00);\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102771", 
            "calling": [
                "FUN_00103520"
            ], 
            "imported": false, 
            "current_name": "FUN_00102771"
        }, 
        "free": {
            "renaming": {}, 
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n", 
            "called": [
                "free"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102040", 
            "calling": [
                "FUN_001030c0", 
                "FUN_00103240", 
                "FUN_0010259a", 
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "free"
        }, 
        "xexit": {
            "renaming": {}, 
            "code": "\nvoid xexit(void)\n\n{\n  xexit();\n  return;\n}\n\n", 
            "called": [
                "xexit"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102280", 
            "calling": [
                "FUN_00104a60", 
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "xexit"
        }, 
        "FUN_001034fa": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_001034fa(void)\n\n{\n  ulong uVar1;\n  uint uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  char *unaff_R14;\n  undefined8 unaff_R15;\n  bool bVar5;\n  undefined8 in_stack_00000010;\n  undefined8 in_stack_00000038;\n  \ncode_r0x001034fa:\n  uVar4 = 1;\njoined_r0x0010341b:\n  do {\n    if (DAT_00108371 != '\\0') {\n      printf(\"%s: \",in_stack_00000010);\n    }\n    if (DAT_00108372 == '\\0') {\n      unaff_R14[uVar4] = '\\0';\n      fputs(unaff_R14,_stdout);\n    }\n    else {\n      FUN_0010286f(unaff_R15);\n      unaff_R14[uVar4] = '\\0';\n      fputs(unaff_R14,_stdout);\n    }\n    while (uVar4 = FUN_00103520(), uVar4 != 0xffffffffffffffff) {\n      if (0xff < uVar4) {\nLAB_0010348e:\n        FUN_00103810();\n        break;\n      }\n      if (uVar4 == 9) {\nLAB_00102438:\n        putc((int)uVar4,_stdout);\n      }\n      else {\n        if ((*(ushort *)(&_sch_istable + uVar4 * 2) & 0x10) == 0) {\n          if (((DAT_00108360 != 'S') || ((long)uVar4 < 0x80)) &&\n             ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar4 * 2) & 0x40) == 0))))\n          goto LAB_0010348e;\n          goto LAB_00102438;\n        }\n        putc((int)uVar4,_stdout);\n      }\n    }\n    if (DAT_00108358 == (char *)0x0) {\n      putc(10,_stdout);\n    }\n    else {\n      fputs(DAT_00108358,_stdout);\n    }\n    while (uVar4 = (ulong)DAT_00108374, unaff_R15 = in_stack_00000038, DAT_00108374 != 0) {\n      uVar4 = FUN_00103520();\n      uVar2 = DAT_00108374;\n      if (uVar4 == 0xffffffffffffffff) goto LAB_001034be;\n      if (uVar4 < 0x100) {\n        if (uVar4 == 9) {\nLAB_001023f5:\n          *unaff_R14 = (char)uVar4;\n          if (uVar2 < 2) {\n            FUN_001034fa();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&_sch_istable + uVar4 * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)uVar4 < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar4 * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto LAB_001023f5;\n          }\n          *unaff_R14 = (char)uVar4;\n          if (uVar2 < 2) goto code_r0x001034fa;\n        }\n        uVar4 = FUN_00103520();\n        uVar2 = DAT_00108374;\n        if (uVar4 == 0xffffffffffffffff) goto LAB_001034be;\n        if (0xff < uVar4) goto code_r0x001034d5;\n        if (uVar4 == 9) {\nLAB_001023bb:\n          unaff_R14[1] = (char)uVar4;\n          if (uVar2 < 3) {\n            FUN_00103510();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&_sch_istable + uVar4 * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)uVar4 < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar4 * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto LAB_001023bb;\n          }\n          unaff_R14[1] = (char)uVar4;\n          if (uVar2 < 3) {\n            uVar4 = 2;\n            break;\n          }\n        }\n        uVar4 = FUN_00103520();\n        uVar2 = DAT_00108374;\n        if (uVar4 == 0xffffffffffffffff) {\nLAB_001034be:\n          free(unaff_R14);\n          return;\n        }\n        if (0xff < uVar4) goto code_r0x001034d5;\n        if (uVar4 == 9) {\nLAB_00102381:\n          unaff_R14[2] = (char)uVar4;\n        }\n        else {\n          if ((*(ushort *)(&_sch_istable + uVar4 * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)uVar4 < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar4 * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto LAB_00102381;\n          }\n          unaff_R14[2] = (char)uVar4;\n        }\n        if (3 < uVar2) {\n          uVar3 = 3;\n          do {\n            uVar1 = FUN_00103520();\n            if (uVar1 == 0xffffffffffffffff) goto LAB_001034be;\n            if (0xff < uVar1) goto code_r0x001034d5;\n            if (((uVar1 != 9) && ((*(ushort *)(&_sch_istable + uVar1 * 2) & 0x10) == 0)) &&\n               ((DAT_00108360 != 'S' || ((long)uVar1 < 0x80)))) {\n              if (DAT_00108373 == '\\0') goto code_r0x001034d5;\n              if ((*(ushort *)(&_sch_istable + uVar1 * 2) & 0x40) == 0) {\n                FUN_001034d5();\n                return;\n              }\n            }\n            uVar2 = (int)uVar3 + 1;\n            uVar4 = (ulong)uVar2;\n            bVar5 = DAT_00108374 <= uVar2;\n            unaff_R14[uVar3] = (char)uVar1;\n            uVar3 = uVar4;\n            if (bVar5) goto joined_r0x0010341b;\n          } while( true );\n        }\n        uVar4 = 3;\n        break;\n      }\ncode_r0x001034d5:\n      FUN_00103810();\n    }\n  } while( true );\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001034fa", 
            "calling": [
                "FUN_0010259a"
            ], 
            "imported": false, 
            "current_name": "FUN_001034fa"
        }, 
        "fopen": {
            "renaming": {}, 
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n", 
            "called": [
                "fopen"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102270", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "fopen"
        }, 
        "stat": {
            "renaming": {}, 
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n", 
            "called": [
                "stat"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102200", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "stat"
        }, 
        "getopt_long": {
            "renaming": {}, 
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n", 
            "called": [
                "getopt_long"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102110", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "getopt_long"
        }, 
        "fclose": {
            "renaming": {}, 
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n", 
            "called": [
                "fclose"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001020d0", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "fclose"
        }, 
        "FUN_00102853": {
            "renaming": {}, 
            "code": "\nvoid FUN_00102853(undefined8 param_1)\n\n{\n  printf(\"%s: \",param_1);\n  if (DAT_00108372 == '\\0') {\n    return;\n  }\n  FUN_0010286f();\n  return;\n}\n\n", 
            "called": [
                "FUN_0010286f", 
                "printf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102853", 
            "calling": [
                "FUN_00103890"
            ], 
            "imported": false, 
            "current_name": "FUN_00102853"
        }, 
        "xstrdup": {
            "renaming": {}, 
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n", 
            "called": [
                "xstrdup"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102190", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "xstrdup"
        }, 
        "bfd_errmsg": {
            "renaming": {}, 
            "code": "\nvoid bfd_errmsg(void)\n\n{\n  bfd_errmsg();\n  return;\n}\n\n", 
            "called": [
                "bfd_errmsg"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001022d0", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "bfd_errmsg"
        }, 
        "fwrite": {
            "renaming": {}, 
            "code": "\n\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fwrite(__ptr,__size,__n,__s);\n  return sVar1;\n}\n\n", 
            "called": [
                "fwrite"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001022f0", 
            "calling": [
                "FUN_00103240", 
                "FUN_0010293a"
            ], 
            "imported": false, 
            "current_name": "fwrite"
        }, 
        "fprintf": {
            "renaming": {}, 
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n", 
            "called": [
                "fprintf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001021e0", 
            "calling": [
                "FUN_001030c0", 
                "FUN_001038b0", 
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "fprintf"
        }, 
        "__uflow": {
            "renaming": {}, 
            "code": "\n\n\nint __uflow(_IO_FILE *param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = __uflow(param_1);\n  return iVar1;\n}\n\n", 
            "called": [
                "__uflow"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102030", 
            "calling": [
                "FUN_0010290e", 
                "FUN_00103520"
            ], 
            "imported": false, 
            "current_name": "__uflow"
        }, 
        "FUN_001027e2": {
            "renaming": {}, 
            "code": "\nvoid FUN_001027e2(int param_1,int param_2,long param_3,long *param_4)\n\n{\n  int *in_RAX;\n  \n  *param_4 = *param_4 + (1 - param_3);\n  *in_RAX = param_1 + param_2;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001027e2", 
            "calling": [
                "FUN_00103810"
            ], 
            "imported": false, 
            "current_name": "FUN_001027e2"
        }, 
        "FUN_001034d5": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_001034d5(void)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  uint uVar3;\n  ulong uVar4;\n  char *unaff_R14;\n  bool bVar5;\n  undefined8 in_stack_00000010;\n  undefined8 in_stack_00000038;\n  \ncode_r0x001034d5:\n  FUN_00103810();\n  do {\n    uVar1 = (ulong)DAT_00108374;\n    if (DAT_00108374 != 0) {\n      uVar1 = FUN_00103520();\n      uVar3 = DAT_00108374;\n      if (uVar1 == 0xffffffffffffffff) goto LAB_001034be;\n      if (0xff < uVar1) goto code_r0x001034d5;\n      if (uVar1 == 9) {\nLAB_001023f5:\n        *unaff_R14 = (char)uVar1;\n        if (uVar3 < 2) {\n          FUN_001034fa();\n          return;\n        }\n      }\n      else {\n        if ((*(ushort *)(&_sch_istable + uVar1 * 2) & 0x10) == 0) {\n          if (((DAT_00108360 == 'S') && (0x7f < (long)uVar1)) ||\n             ((DAT_00108373 != '\\0' && ((*(ushort *)(&_sch_istable + uVar1 * 2) & 0x40) != 0))))\n          goto LAB_001023f5;\n          goto code_r0x001034d5;\n        }\n        *unaff_R14 = (char)uVar1;\n        if (uVar3 < 2) {\n          uVar1 = 1;\n          goto joined_r0x001034ef;\n        }\n      }\n      uVar1 = FUN_00103520();\n      uVar3 = DAT_00108374;\n      if (uVar1 == 0xffffffffffffffff) goto LAB_001034be;\n      if (0xff < uVar1) goto code_r0x001034d5;\n      if (uVar1 == 9) {\nLAB_001023bb:\n        unaff_R14[1] = (char)uVar1;\n        if (uVar3 < 3) {\n          FUN_00103510();\n          return;\n        }\n      }\n      else {\n        if ((*(ushort *)(&_sch_istable + uVar1 * 2) & 0x10) == 0) {\n          if (((DAT_00108360 == 'S') && (0x7f < (long)uVar1)) ||\n             ((DAT_00108373 != '\\0' && ((*(ushort *)(&_sch_istable + uVar1 * 2) & 0x40) != 0))))\n          goto LAB_001023bb;\n          goto code_r0x001034d5;\n        }\n        unaff_R14[1] = (char)uVar1;\n        if (uVar3 < 3) {\n          uVar1 = 2;\n          goto joined_r0x001034ef;\n        }\n      }\n      uVar1 = FUN_00103520();\n      uVar3 = DAT_00108374;\n      if (uVar1 == 0xffffffffffffffff) {\nLAB_001034be:\n        free(unaff_R14);\n        return;\n      }\n      if (0xff < uVar1) goto code_r0x001034d5;\n      if (uVar1 == 9) {\nLAB_00102381:\n        unaff_R14[2] = (char)uVar1;\n      }\n      else {\n        if ((*(ushort *)(&_sch_istable + uVar1 * 2) & 0x10) == 0) {\n          if (((DAT_00108360 == 'S') && (0x7f < (long)uVar1)) ||\n             ((DAT_00108373 != '\\0' && ((*(ushort *)(&_sch_istable + uVar1 * 2) & 0x40) != 0))))\n          goto LAB_00102381;\n          goto code_r0x001034d5;\n        }\n        unaff_R14[2] = (char)uVar1;\n      }\n      if (uVar3 < 4) {\n        uVar1 = 3;\n      }\n      else {\n        uVar4 = 3;\n        do {\n          uVar2 = FUN_00103520();\n          if (uVar2 == 0xffffffffffffffff) goto LAB_001034be;\n          if (0xff < uVar2) goto code_r0x001034d5;\n          if (((uVar2 != 9) && ((*(ushort *)(&_sch_istable + uVar2 * 2) & 0x10) == 0)) &&\n             ((DAT_00108360 != 'S' || ((long)uVar2 < 0x80)))) {\n            if (DAT_00108373 == '\\0') goto code_r0x001034d5;\n            if ((*(ushort *)(&_sch_istable + uVar2 * 2) & 0x40) == 0) {\n              FUN_001034d5();\n              return;\n            }\n          }\n          uVar3 = (int)uVar4 + 1;\n          uVar1 = (ulong)uVar3;\n          bVar5 = uVar3 < DAT_00108374;\n          unaff_R14[uVar4] = (char)uVar2;\n          uVar4 = uVar1;\n        } while (bVar5);\n      }\n    }\njoined_r0x001034ef:\n    if (DAT_00108371 != '\\0') {\n      printf(\"%s: \",in_stack_00000010);\n    }\n    if (DAT_00108372 == '\\0') {\n      unaff_R14[uVar1] = '\\0';\n      fputs(unaff_R14,_stdout);\n    }\n    else {\n      FUN_0010286f(in_stack_00000038);\n      unaff_R14[uVar1] = '\\0';\n      fputs(unaff_R14,_stdout);\n    }\n    while (uVar1 = FUN_00103520(), uVar1 != 0xffffffffffffffff) {\n      if (0xff < uVar1) {\nLAB_0010348e:\n        FUN_00103810();\n        break;\n      }\n      if (uVar1 == 9) {\nLAB_00102438:\n        putc((int)uVar1,_stdout);\n      }\n      else {\n        if ((*(ushort *)(&_sch_istable + uVar1 * 2) & 0x10) == 0) {\n          if (((DAT_00108360 != 'S') || ((long)uVar1 < 0x80)) &&\n             ((DAT_00108373 == '\\0' || ((*(ushort *)(&_sch_istable + uVar1 * 2) & 0x40) == 0))))\n          goto LAB_0010348e;\n          goto LAB_00102438;\n        }\n        putc((int)uVar1,_stdout);\n      }\n    }\n    if (DAT_00108358 == (char *)0x0) {\n      putc(10,_stdout);\n    }\n    else {\n      fputs(DAT_00108358,_stdout);\n    }\n  } while( true );\n}\n\n", 
            "called": [
                "FUN_00103810"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001034d5", 
            "calling": [
                "FUN_00102330", 
                "FUN_0010259a"
            ], 
            "imported": false, 
            "current_name": "FUN_001034d5"
        }, 
        "memcpy": {
            "renaming": {}, 
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n", 
            "called": [
                "memcpy"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102210", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "memcpy"
        }, 
        "fputs": {
            "renaming": {}, 
            "code": "\n\n\nint fputs(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputs(__s,__stream);\n  return iVar1;\n}\n\n", 
            "called": [
                "fputs"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102140", 
            "calling": [
                "FUN_00102b11", 
                "FUN_00103240", 
                "FUN_0010259a"
            ], 
            "imported": false, 
            "current_name": "fputs"
        }, 
        "FUN_00103aa0": {
            "renaming": {}, 
            "code": "\n\n\n\nFILE * FUN_00103aa0(int param_1,long *param_2)\n\n{\n  byte *pbVar1;\n  byte bVar2;\n  byte bVar3;\n  char cVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  undefined4 uVar8;\n  FILE *__stream;\n  size_t sVar9;\n  size_t sVar10;\n  byte *__ptr;\n  long lVar11;\n  long *plVar12;\n  ulong uVar13;\n  long *__src;\n  undefined8 uVar14;\n  FILE *__stream_00;\n  int *piVar15;\n  long *plVar16;\n  undefined8 uVar17;\n  long *plVar18;\n  byte *pbVar19;\n  char *pcVar20;\n  undefined **ppuVar21;\n  long lVar22;\n  byte *pbVar23;\n  char *pcVar24;\n  bool bVar25;\n  long *unaff_R12;\n  undefined8 *puVar26;\n  bool bVar27;\n  bool bVar28;\n  long *local_140;\n  undefined8 local_138;\n  undefined8 local_128;\n  ulong local_120;\n  size_t local_118;\n  long local_110;\n  char *local_d8;\n  void *local_d0;\n  stat local_c8;\n  \n  setlocale(6,\"\");\n  bindtextdomain(\"binutils\",\"/usr/share/locale\");\n  textdomain(\"binutils\");\n  DAT_00108378 = *param_2;\n  xmalloc_set_program_name();\n  bfd_set_error_program_name(DAT_00108378);\n  plVar16 = param_2;\n  if (param_1 < 2) goto LAB_00103fa6;\n  local_120 = 2000;\n  unaff_R12 = (long *)0x1;\n  local_138 = (long *)0x0;\n  plVar12 = param_2;\n  do {\n    iVar7 = (int)unaff_R12;\n    ppuVar21 = (undefined **)(long)iVar7;\n    local_140 = (long *)((long)ppuVar21 * 8);\n    plVar16 = plVar12;\n    if (*(char *)plVar12[(long)ppuVar21] == '@') {\n      uVar6 = (int)local_120 - 1;\n      local_120 = (ulong)uVar6;\n      if (uVar6 == 0) {\n        lVar11 = *plVar12;\n        pcVar20 = \"%s: error: too many @-files encountered\\n\";\n        goto LAB_001044b1;\n      }\n      pcVar20 = (char *)plVar12[(long)ppuVar21] + 1;\n      iVar5 = stat(pcVar20,&local_c8);\n      if (-1 < iVar5) {\n        if ((local_c8.st_mode & 0xf000) == 0x4000) {\n          do {\n            lVar11 = *plVar12;\n            pcVar20 = \"%s: error: @-file refers to a directory\\n\";\nLAB_001044b1:\n            fprintf(_stderr,pcVar20,lVar11);\n            xexit(1);\n          } while( true );\n        }\n        __stream = fopen(pcVar20,\"r\");\n        if (__stream != (FILE *)0x0) {\n          iVar5 = fseek(__stream,0,2);\n          if (((iVar5 != -1) && (sVar9 = ftell(__stream), sVar9 != 0xffffffffffffffff)) &&\n             (iVar5 = fseek(__stream,0,0), iVar5 != -1)) {\n            local_128 = (byte *)xmalloc(sVar9 + 1);\n            sVar10 = fread(local_128,1,sVar9,__stream);\n            if ((sVar9 == sVar10) || (iVar5 = ferror(__stream), iVar5 == 0)) {\n              local_128[sVar10] = 0;\n              bVar3 = *local_128;\n              pbVar19 = local_128;\n              while( true ) {\n                if (bVar3 == 0) goto LAB_001040fd;\n                if (((&_sch_istable)[(ulong)bVar3 * 2] & 0x40) == 0) break;\n                bVar3 = pbVar19[1];\n                pbVar19 = pbVar19 + 1;\n              }\n              sVar9 = strlen((char *)local_128);\n              __ptr = (byte *)xmalloc(sVar9 + 1);\n              __src = (long *)0x0;\n              iVar5 = 0;\n              local_110 = 0;\n              bVar25 = false;\n              bVar28 = false;\n              bVar27 = false;\n              pbVar19 = local_128;\n              do {\n                while (((&_sch_istable)[(ulong)*pbVar19 * 2] & 0x40) != 0) {\n                  pbVar19 = pbVar19 + 1;\n                }\n                if ((iVar5 == 0) || (iVar5 + -1 <= (int)local_110)) {\n                  if (__src == (long *)0x0) {\n                    iVar5 = 8;\n                    __src = (long *)xmalloc(0x40);\n                    plVar18 = __src + local_110;\n                    *plVar18 = 0;\n                  }\n                  else {\n                    iVar5 = iVar5 * 2;\n                    __src = (long *)xrealloc(__src,(long)iVar5 << 3);\n                    plVar18 = __src + local_110;\n                    *plVar18 = 0;\n                  }\n                }\n                else {\n                  plVar18 = __src + local_110;\n                }\n                bVar3 = *pbVar19;\n                pbVar23 = __ptr;\n                while (bVar3 != 0) {\n                  while( true ) {\n                    if ((((&_sch_istable)[(ulong)bVar3 * 2] & 0x40) != 0) &&\n                       (!(bool)(bVar28 | bVar27 | bVar25))) {\n                      bVar27 = false;\n                      bVar25 = false;\n                      bVar28 = false;\n                      goto LAB_00103d4f;\n                    }\n                    if (!bVar27) break;\n                    pbVar19 = pbVar19 + 1;\n                    *pbVar23 = bVar3;\n                    pbVar23 = pbVar23 + 1;\n                    bVar27 = false;\n                    bVar3 = *pbVar19;\n                    if (bVar3 == 0) goto LAB_00103d4f;\n                  }\n                  if (bVar3 == 0x5c) {\n                    bVar27 = true;\n                  }\n                  else if (bVar28) {\n                    if (bVar3 == 0x27) {\n                      bVar28 = false;\n                    }\n                    else {\nLAB_00103ec8:\n                      *pbVar23 = bVar3;\n                      pbVar23 = pbVar23 + 1;\n                    }\n                  }\n                  else if (bVar25) {\n                    if (bVar3 != 0x22) goto LAB_00103ec8;\n                    bVar25 = false;\n                  }\n                  else if (bVar3 == 0x27) {\n                    bVar28 = true;\n                  }\n                  else {\n                    if (bVar3 != 0x22) goto LAB_00103ec8;\n                    bVar25 = true;\n                  }\n                  pbVar1 = pbVar19 + 1;\n                  pbVar19 = pbVar19 + 1;\n                  bVar3 = *pbVar1;\n                }\nLAB_00103d4f:\n                *pbVar23 = 0;\n                lVar11 = xstrdup(__ptr);\n                *plVar18 = lVar11;\n                __src[local_110 + 1] = 0;\n                bVar3 = *pbVar19;\n                bVar2 = (&_sch_istable)[(ulong)bVar3 * 2];\n                while ((bVar2 & 0x40) != 0) {\n                  bVar3 = pbVar19[1];\n                  pbVar19 = pbVar19 + 1;\n                  bVar2 = (&_sch_istable)[(ulong)bVar3 * 2];\n                }\n                local_110 = local_110 + 1;\n                if (bVar3 == 0) {\n                  free(__ptr);\n                  if (plVar12 == param_2) goto LAB_0010411e;\n                  goto LAB_00103dea;\n                }\n              } while( true );\n            }\n            free(local_128);\n          }\n          fclose(__stream);\n        }\n      }\n    }\n    if (param_1 <= iVar7 + 1) {\nLAB_00103fa6:\n      DAT_00108373 = 0;\n      __stream = (FILE *)0x0;\n      DAT_00108372 = 0;\n      ppuVar21 = &PTR_DAT_001081a0;\n      DAT_00108374 = 4;\n      DAT_00108371 = 0;\n      DAT_00108370 = '\\0';\n      DAT_00108368 = (long *)0x0;\n      DAT_00108360 = 's';\n      DAT_00108358 = (long *)0x0;\n      pcVar20 = \"adfhHn:wot:e:T:s:U:Vv0123456789\";\nLAB_00103ff6:\n      while( true ) {\n        iVar7 = (int)unaff_R12;\n        iVar5 = getopt_long(param_1,plVar16,pcVar20);\n        if (iVar5 == -1) break;\n        plVar12 = (long *)pcVar20;\n        switch(iVar5) {\n        case 0x3f:\n          goto switchD_00104029_caseD_3f;\n        case 0x48:\n        case 0x68:\nswitchD_00104029_caseD_48:\n          FUN_001030c0(_stdout,0);\n          goto LAB_001044f5;\n        case 0x54:\nswitchD_00104201_caseD_54:\n          unaff_R12 = (long *)&optarg;\n          DAT_00108368 = _optarg;\n          break;\n        case 0x55:\nswitchD_00104201_caseD_55:\n          unaff_R12 = _optarg;\n          iVar7 = strcmp((char *)_optarg,\"default\");\n          if ((iVar7 == 0) || (iVar7 = strcmp((char *)unaff_R12,\"d\"), iVar7 == 0)) {\n            DAT_00108350 = 0;\n          }\n          else {\n            iVar7 = strcmp((char *)unaff_R12,\"locale\");\n            if ((iVar7 == 0) || (iVar7 = strcmp((char *)unaff_R12,\"l\"), iVar7 == 0)) {\n              DAT_00108350 = 1;\n            }\n            else {\n              iVar7 = strcmp((char *)unaff_R12,\"escape\");\n              if ((iVar7 == 0) || (iVar7 = strcmp((char *)unaff_R12,\"e\"), iVar7 == 0)) {\n                DAT_00108350 = 2;\n              }\n              else {\n                iVar7 = strcmp((char *)unaff_R12,\"invalid\");\n                if ((iVar7 == 0) || (iVar7 = strcmp((char *)unaff_R12,\"i\"), iVar7 == 0)) {\n                  DAT_00108350 = 5;\n                }\n                else {\n                  iVar7 = strcmp((char *)unaff_R12,\"hex\");\n                  if ((iVar7 == 0) || (iVar7 = strcmp((char *)unaff_R12,\"x\"), iVar7 == 0)) {\n                    DAT_00108350 = 3;\n                  }\n                  else {\n                    iVar7 = strcmp((char *)unaff_R12,\"highlight\");\n                    if ((iVar7 != 0) && (iVar7 = strcmp((char *)unaff_R12,\"h\"), iVar7 != 0)) {\n                      uVar14 = dcgettext(0,\"invalid argument to -U/--unicode: %s\",5);\n                      FUN_00104a60(uVar14);\n                      FUN_001038b0();\n                      xexit(1);\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                      halt_baddata();\n                    }\n                    DAT_00108350 = 4;\n                  }\n                }\n              }\n            }\n          }\n          break;\n        case 0x56:\n        case 0x76:\nswitchD_00104029_caseD_56:\n          printf(\"GNU %s %s\\n\",\"strings\",\"(GNU Binutils for Debian) 2.40\");\n          pcVar20 = (char *)dcgettext(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n          printf(pcVar20);\n          pcVar20 = (char *)dcgettext(0,\n                                      \"This program is free software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                                      ,5);\n          printf(pcVar20);\n                    \n          exit(0);\n        case 0x61:\n          goto switchD_00104029_caseD_61;\n        case 100:\nswitchD_00104029_caseD_64:\n          DAT_00108370 = '\\x01';\n          break;\n        case 0x65:\n          unaff_R12 = (long *)&optarg;\n          iVar7 = 0x109108;\n          if (*(char *)((long)_optarg + 1) != '\\0') goto switchD_00104029_caseD_3f;\n          DAT_00108360 = *(char *)_optarg;\n          iVar5 = getopt_long(param_1,plVar16,pcVar20);\n          if (iVar5 == -1) goto LAB_0010407f;\n          switch(iVar5) {\n          case 0x3f:\n            goto switchD_00104029_caseD_3f;\n          case 0x48:\n          case 0x68:\n            goto switchD_00104029_caseD_48;\n          case 0x54:\n            goto switchD_00104201_caseD_54;\n          case 0x55:\n            goto switchD_00104201_caseD_55;\n          case 0x56:\n          case 0x76:\n            goto switchD_00104029_caseD_56;\n          case 0x61:\n            goto switchD_00104029_caseD_61;\n          case 100:\n            goto switchD_00104029_caseD_64;\n          case 0x65:\nswitchD_00104201_caseD_65:\n            if (*(char *)((long)_optarg + 1) != '\\0') goto switchD_00104029_caseD_3f;\n            DAT_00108360 = *(char *)_optarg;\n            iVar5 = getopt_long(param_1,plVar16,pcVar20);\n            if (iVar5 == -1) goto LAB_0010407f;\n            switch(iVar5) {\n            case 0x3f:\n              goto switchD_00104029_caseD_3f;\n            default:\n              break;\n            case 0x48:\n            case 0x68:\n              goto switchD_00104029_caseD_48;\n            case 0x54:\n              goto switchD_00104201_caseD_54;\n            case 0x55:\n              goto switchD_00104201_caseD_55;\n            case 0x56:\n            case 0x76:\n              goto switchD_00104029_caseD_56;\n            case 0x61:\n              goto switchD_00104029_caseD_61;\n            case 100:\n              goto switchD_00104029_caseD_64;\n            case 0x65:\n              goto switchD_00104201_caseD_65;\n            case 0x66:\n              goto switchD_00104029_caseD_66;\n            case 0x6e:\n              goto switchD_00104201_caseD_6e;\n            case 0x6f:\n              goto switchD_00104029_caseD_6f;\n            case 0x73:\n              goto switchD_00104201_caseD_73;\n            case 0x74:\n              goto switchD_00104201_caseD_74;\n            case 0x77:\n              goto switchD_00104029_caseD_77;\n            }\n          case 0x66:\n            goto switchD_00104029_caseD_66;\n          case 0x6e:\n            goto switchD_00104201_caseD_6e;\n          case 0x6f:\n            goto switchD_00104029_caseD_6f;\n          case 0x73:\n            goto switchD_00104201_caseD_73;\n          case 0x74:\n            goto switchD_00104201_caseD_74;\n          case 0x77:\n            goto switchD_00104029_caseD_77;\n          }\n        default:\n          __stream = (FILE *)(ulong)_optind;\n          break;\n        case 0x66:\nswitchD_00104029_caseD_66:\n          DAT_00108371 = 1;\n          break;\n        case 0x6e:\nswitchD_00104201_caseD_6e:\n          unaff_R12 = (long *)&optarg;\n          uVar13 = strtoul((char *)_optarg,&local_d8,0);\n          DAT_00108374 = (int)uVar13;\n          if ((local_d8 != (char *)0x0) && (plVar12 = _optarg, *local_d8 != '\\0')) {\nLAB_001042e6:\n            uVar14 = dcgettext(0,\"invalid integer argument %s\",5);\n            FUN_00104a60(uVar14,plVar12);\n            goto switchD_00104201_caseD_73;\n          }\n          break;\n        case 0x6f:\nswitchD_00104029_caseD_6f:\n          DAT_00108372 = 1;\n          DAT_00108354 = 8;\n          break;\n        case 0x73:\nswitchD_00104201_caseD_73:\n          unaff_R12 = (long *)&optarg;\n          DAT_00108358 = _optarg;\n          pcVar20 = (char *)plVar12;\n          break;\n        case 0x74:\nswitchD_00104201_caseD_74:\n          unaff_R12 = (long *)&optarg;\n          iVar7 = 0x109108;\n          DAT_00108372 = 1;\n          if (*(char *)((long)_optarg + 1) != '\\0') goto switchD_00104029_caseD_3f;\n          cVar4 = *(char *)_optarg;\n          if (cVar4 == 'o') {\n            DAT_00108354 = 8;\n          }\n          else if (cVar4 == 'x') {\n            DAT_00108354 = 0x10;\n          }\n          else {\n            if (cVar4 != 'd') goto switchD_00104029_caseD_3f;\n            DAT_00108354 = 10;\n          }\n          break;\n        case 0x77:\n          goto switchD_00104029_caseD_77;\n        }\n      }\nLAB_0010407f:\n      if (DAT_00108350 != 0) {\n        DAT_00108360 = 'S';\n      }\n      if ((int)__stream != 0) {\nLAB_001044f5:\n        pcVar20 = (char *)(plVar16 + (long)(int)__stream + -1);\n        uVar13 = strtoul((char *)(*(long *)pcVar20 + 1),&local_d8,0);\n        DAT_00108374 = (int)uVar13;\n        if ((local_d8 != (char *)0x0) && (*local_d8 != '\\0')) {\n          plVar12 = (long *)(*(long *)pcVar20 + 1);\n          goto LAB_001042e6;\n        }\n      }\n      iVar7 = (int)unaff_R12;\n      if (DAT_00108374 == 0) {\n        uVar14 = dcgettext(0,\"invalid minimum string length %d\",5);\n        FUN_00104a60(uVar14,0);\nswitchD_00104029_caseD_61:\n        DAT_00108370 = '\\0';\n        goto LAB_00103ff6;\n      }\n      if (0x31 < (byte)(DAT_00108360 + 0xbeU)) goto switchD_00104029_caseD_3f;\n      uVar13 = 1L << (DAT_00108360 + 0xbeU & 0x3f);\n      if ((uVar13 & 0x2000000020000) == 0) {\n        if ((uVar13 & 0x401) == 0) {\n          if ((uVar13 & 0x40100000000) == 0) goto switchD_00104029_caseD_3f;\n          DAT_0010834c = 2;\n        }\n        else {\n          DAT_0010834c = 4;\n        }\n      }\n      else {\n        DAT_0010834c = 1;\n      }\n      iVar7 = bfd_init();\n      if (iVar7 == 0x118) {\n        pcVar20 = \"x86_64-pc-linux-gnu\";\n        uVar6 = bfd_set_default_target(\"x86_64-pc-linux-gnu\");\n        if ((char)uVar6 != '\\0') {\n          ppuVar21 = (undefined **)&optind;\n          if (param_1 <= (int)_optind) {\n            DAT_00108370 = 0;\n            FUN_00103240(\"{standard input}\",_stdin,0,0,0);\n            return (FILE *)0x0;\n          }\n          uVar13 = 0;\n          __stream = (FILE *)0x0;\n          plVar12 = (long *)(ulong)uVar6;\n          uVar6 = _optind;\n          local_140 = plVar16;\n          goto LAB_001043b8;\n        }\n        uVar8 = bfd_get_error();\n        ppuVar21 = (undefined **)bfd_errmsg(uVar8);\n        uVar14 = dcgettext(0,\"can\\'t set BFD default target to `%s\\': %s\",5);\n        FUN_00104a60(uVar14,\"x86_64-pc-linux-gnu\",ppuVar21);\n      }\n      uVar14 = dcgettext(0,\"fatal error: libbfd ABI mismatch\",5);\n      FUN_00104a60(uVar14);\n      plVar12 = plVar16;\nLAB_0010462b:\n      pcVar24 = \"Warning: \\'%s\\' is a directory\";\nLAB_00104637:\n      uVar14 = dcgettext(0,pcVar24,5);\n      FUN_00103910(uVar14,pcVar20);\n      uVar6 = 0;\n      do {\n        while( true ) {\n          uVar13 = (ulong)plVar12 & 0xffffffff;\n          __stream = (FILE *)(ulong)((uint)__stream | (uVar6 ^ 1) & 0xff);\n          while( true ) {\n            iVar7 = (int)uVar13;\n            uVar6 = *(uint *)ppuVar21 + 1;\n            *(uint *)ppuVar21 = uVar6;\n            if (param_1 <= (int)uVar6) {\n              plVar16 = plVar12;\n              if ((char)uVar13 != '\\0') {\n                return __stream;\n              }\n              goto switchD_00104029_caseD_3f;\n            }\nLAB_001043b8:\n            pcVar20 = (char *)local_140[(int)uVar6];\n            iVar7 = strcmp(pcVar20,\"-\");\n            if (iVar7 != 0) break;\n            DAT_00108370 = '\\0';\n          }\n          iVar7 = stat(pcVar20,&local_c8);\n          if (iVar7 < 0) break;\n          if ((local_c8.st_mode & 0xf000) == 0x4000) goto LAB_0010462b;\n          if ((DAT_00108370 == '\\0') ||\n             (plVar16 = (long *)bfd_openr(pcVar20,DAT_00108368), plVar16 == (long *)0x0)) {\nLAB_00104416:\n            __stream_00 = fopen(pcVar20,\"r\");\n            if (__stream_00 != (FILE *)0x0) {\n              FUN_00103240(pcVar20,__stream_00,0,0,0);\n              iVar7 = fclose(__stream_00);\n              if (iVar7 != -1) goto LAB_00104454;\n            }\n            fprintf(_stderr,\"%s: \",DAT_00108378);\n            perror(pcVar20);\n            uVar6 = 0;\n          }\n          else {\n            cVar4 = bfd_check_format(plVar16,1);\n            if (cVar4 == '\\0') {\n              bfd_close();\n              local_138 = plVar16;\n              goto LAB_00104416;\n            }\n            puVar26 = (undefined8 *)plVar16[0x12];\n            local_138 = (long *)((ulong)plVar16 & 0xffffffffffffff00);\n            local_128 = (byte *)CONCAT44(local_128._4_4_,param_1);\n            for (; puVar26 != (undefined8 *)0x0; puVar26 = (undefined8 *)puVar26[1]) {\n              cVar4 = (char)local_138;\n              if (((*(uint *)((long)puVar26 + 0x24) & 0x103) == 0x103) &&\n                 (local_120 = puVar26[8], local_120 != 0)) {\n                cVar4 = bfd_malloc_and_get_section(plVar16,puVar26,&local_d0);\n                if (cVar4 == '\\0') {\n                  uVar8 = bfd_get_error();\n                  local_120 = bfd_errmsg(uVar8);\n                  uVar14 = *puVar26;\n                  uVar17 = dcgettext(0,\"%s: Reading section %s failed: %s\",5);\n                  FUN_00103910(uVar17,pcVar20,uVar14);\n                  cVar4 = (char)local_138;\n                }\n                else {\n                  FUN_00103240(pcVar20,0,puVar26[0x10],local_120,local_d0);\n                  free(local_d0);\n                }\n              }\n              local_138 = (long *)CONCAT71(local_138._1_7_,cVar4);\n            }\n            plVar12 = (long *)((ulong)plVar12 & 0xff);\n            cVar4 = bfd_close(plVar16);\n            if (cVar4 == '\\0') {\n              iVar7 = bfd_get_error();\n              if (iVar7 == 0) {\n                uVar14 = dcgettext(0,\"cause of error unknown\",5);\n                fflush(_stdout);\n              }\n              else {\n                uVar14 = bfd_errmsg();\n                fflush(_stdout);\n              }\n              fprintf(_stderr,\"%s: %s: %s\\n\",DAT_00108378,pcVar20,uVar14);\n              goto LAB_00104416;\n            }\n            bVar28 = (char)local_138 == '\\0';\n            if (bVar28) goto LAB_00104416;\nLAB_00104454:\n            uVar6 = (uint)plVar12;\n          }\n        }\n        piVar15 = __errno_location();\n        pcVar24 = \"\\'%s\\': No such file\";\n        if (*piVar15 == 2) goto LAB_00104637;\n        pcVar24 = strerror(*piVar15);\n        uVar14 = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n        FUN_00103910(uVar14,pcVar20,pcVar24);\n        uVar6 = 0;\n      } while( true );\n    }\n    uVar6 = iVar7 + 1;\n    local_138 = unaff_R12;\nLAB_00103eac:\n    unaff_R12 = (long *)(ulong)uVar6;\n  } while( true );\nswitchD_00104029_caseD_77:\n  DAT_00108373 = 1;\n  goto LAB_00103ff6;\nswitchD_00104029_caseD_3f:\n  FUN_001030c0(_stderr);\nLAB_001040fd:\n  __src = (long *)xmalloc(8);\n  *__src = 0;\n  if (plVar16 == param_2) {\nLAB_0010411e:\n    if (*plVar16 == 0) {\n      iVar5 = 0;\n    }\n    else {\n      lVar11 = 1;\n      do {\n        iVar5 = (int)lVar11;\n        plVar12 = plVar16 + lVar11;\n        lVar11 = lVar11 + 1;\n      } while (*plVar12 != 0);\n    }\n    lVar22 = 0;\n    plVar12 = (long *)xmalloc((long)(iVar5 + 1) << 3);\n    lVar11 = *plVar16;\n    while (lVar11 != 0) {\n      uVar14 = xstrdup();\n      *(undefined8 *)((long)plVar12 + lVar22) = uVar14;\n      lVar22 = lVar22 + 8;\n      lVar11 = *(long *)((long)plVar16 + lVar22);\n    }\n    *(undefined8 *)((long)plVar12 + lVar22) = 0;\nLAB_00103dea:\n    plVar16 = plVar12;\n    if (*__src != 0) {\n      lVar11 = 0;\n      do {\n        lVar11 = lVar11 + 1;\n      } while (__src[lVar11] != 0);\n      local_118 = lVar11 * 8;\n      iVar5 = param_1;\n      goto LAB_00103e18;\n    }\n  }\n  lVar11 = 0;\n  local_118 = 0;\n  iVar5 = param_1;\nLAB_00103e18:\n  free((void *)plVar16[(long)ppuVar21]);\n  plVar12 = (long *)xrealloc(plVar16,(lVar11 + 1 + (long)iVar5) * 8);\n  param_1 = iVar5 + -1 + (int)lVar11;\n  memmove(plVar12 + (long)((long)ppuVar21 + lVar11),(void *)((long)(plVar12 + 1) + (long)local_140),\n          (long)(iVar5 - iVar7) << 3);\n  memcpy((void *)((long)plVar12 + (long)local_140),__src,local_118);\n  free(__src);\n  free(local_128);\n  fclose(__stream);\n  uVar6 = (int)local_138 + 1;\n  unaff_R12 = local_140;\n  plVar16 = plVar12;\n  local_140 = __src;\n  if ((int)uVar6 < param_1) goto LAB_00103eac;\n  goto LAB_00103fa6;\n}\n\n", 
            "called": [
                "getopt_long", 
                "xstrdup", 
                "bfd_openr", 
                "bfd_errmsg", 
                "FUN_001030c0", 
                "FUN_00103240", 
                "xmalloc", 
                "bfd_malloc_and_get_section", 
                "xrealloc", 
                "bindtextdomain", 
                "fseek", 
                "fclose", 
                "free", 
                "fflush", 
                "strtoul", 
                "__errno_location", 
                "xmalloc_set_program_name", 
                "dcgettext", 
                "bfd_get_error", 
                "fopen", 
                "FUN_00104a60", 
                "strerror", 
                "setlocale", 
                "textdomain", 
                "memcpy", 
                "xexit", 
                "perror", 
                "exit", 
                "bfd_check_format", 
                "ferror", 
                "ftell", 
                "FUN_00103910", 
                "bfd_init", 
                "strcmp", 
                "stat", 
                "fprintf", 
                "printf", 
                "bfd_set_default_target", 
                "fread", 
                "memmove", 
                "bfd_set_error_program_name", 
                "bfd_close", 
                "strlen"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103aa0", 
            "calling": [
                "entry"
            ], 
            "imported": false, 
            "current_name": "FUN_00103aa0"
        }, 
        "perror": {
            "renaming": {}, 
            "code": "\n\n\nvoid perror(char *__s)\n\n{\n  perror(__s);\n  return;\n}\n\n", 
            "called": [
                "perror"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001022a0", 
            "calling": [
                "FUN_00103aa0"
            ], 
            "imported": false, 
            "current_name": "perror"
        }, 
        "FUN_00102020": {
            "renaming": {}, 
            "code": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)(undefined *)0x0)();\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102020", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00102020"
        }
    }, 
    "locked_functions": [], 
    "used_tokens": 0, 
    "layers": []
}