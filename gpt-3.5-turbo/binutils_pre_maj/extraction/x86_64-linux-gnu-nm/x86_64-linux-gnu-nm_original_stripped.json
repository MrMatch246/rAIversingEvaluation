{
    "functions": {
        "FUN_0010c1a0": {
            "renaming": {}, 
            "code": "\n\n\n\nint asprintf(char **__ptr,char *__fmt,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* asprintf@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c1a0", 
            "calling": [
                "asprintf"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c1a0"
        }, 
        "FUN_001055a0": {
            "renaming": {}, 
            "code": "\nvoid FUN_001055a0(void)\n\n{\n  if (completed_0 != '\\0') {\n    return;\n  }\n  __cxa_finalize(__dso_handle);\n  deregister_tm_clones();\n  completed_0 = 1;\n  return;\n}\n\n", 
            "called": [
                "__cxa_finalize", 
                "deregister_tm_clones"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001055a0", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_001055a0"
        }, 
        "FUN_001021b0": {
            "renaming": {}, 
            "code": "\nvoid concat(void)\n\n{\n  concat();\n  return;\n}\n\n", 
            "called": [
                "concat"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001021b0", 
            "calling": [
                "set_print_width.cold", 
                "set_print_width"
            ], 
            "imported": false, 
            "current_name": "FUN_001021b0"
        }, 
        "FUN_00103c00": {
            "renaming": {}, 
            "code": "\nundefined8\nFUN_00103c00(undefined8 *param_1,long param_2,undefined (*param_3) [16],undefined8 param_4,\n            undefined8 param_5)\n\n{\n  undefined8 *puVar1;\n  undefined auVar2 [16];\n  long lVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  \n  **(long **)*param_3 = param_2;\n  if ((*(byte *)(param_2 + 0x24) & 4) == 0) {\n    **(undefined8 **)(*param_3 + 8) = 0;\n    **(undefined8 **)param_3[1] = 0;\n  }\n  else {\n    lVar3 = bfd_get_reloc_upper_bound();\n    if (-1 < lVar3) {\n      puVar1 = *(undefined8 **)(*param_3 + 8);\n      uVar4 = xmalloc(lVar3);\n      uVar5 = *(undefined8 *)(param_3[1] + 8);\n      *puVar1 = uVar4;\n      puVar1 = *(undefined8 **)param_3[1];\n      uVar5 = bfd_canonicalize_reloc(param_1,param_2,**(undefined8 **)(*param_3 + 8),uVar5);\n      *puVar1 = uVar5;\n      if (-1 < **(long **)param_3[1]) goto LAB_00103c7c;\n    }\n    bfd_fatal(*param_1);\n  }\nLAB_00103c7c:\n  lVar3 = *(long *)(*param_3 + 8) + 8;\n  *(long *)param_3[1] = *(long *)param_3[1] + 8;\n  auVar2._8_4_ = (int)lVar3;\n  auVar2._0_8_ = *(long *)*param_3 + 8;\n  auVar2._12_4_ = (int)((ulong)lVar3 >> 0x20);\n  *param_3 = auVar2;\n  return param_5;\n}\n\n", 
            "called": [
                "xmalloc", 
                "bfd_get_reloc_upper_bound", 
                "bfd_fatal", 
                "bfd_canonicalize_reloc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103c00", 
            "calling": [
                "print_symbol.cold"
            ], 
            "imported": false, 
            "current_name": "FUN_00103c00"
        }, 
        "FUN_001022d0": {
            "renaming": {}, 
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n", 
            "called": [
                "fseek"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001022d0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001022d0"
        }, 
        "FUN_001023f0": {
            "renaming": {}, 
            "code": "\nvoid bfd_get_reloc_upper_bound(void)\n\n{\n  bfd_get_reloc_upper_bound();\n  return;\n}\n\n", 
            "called": [
                "bfd_get_reloc_upper_bound"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001023f0", 
            "calling": [
                "get_relocs"
            ], 
            "imported": false, 
            "current_name": "FUN_001023f0"
        }, 
        "FUN_00102190": {
            "renaming": {}, 
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n", 
            "called": [
                "printf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102190", 
            "calling": [
                "print_archive_filename_bsd", 
                "FUN_00103463", 
                "print_archive_member_sysv", 
                "print_symbol_info_bsd", 
                "print_archive_member_bsd", 
                "print_object_filename_sysv", 
                "FUN_00102739", 
                "main", 
                "print_symbol_info_bsd.cold", 
                "print_symbol", 
                "print_symbol_filename_sysv", 
                "print_object_filename_posix", 
                "print_symbol_filename_posix.cold", 
                "print_symbol_info_sysv", 
                "print_symbol_info_posix", 
                "print_symbol_filename_bsd.cold", 
                "print_object_filename_bsd", 
                "print_value.constprop.0", 
                "print_archive_member_posix", 
                "display_file", 
                "FUN_001047d0"
            ], 
            "imported": false, 
            "current_name": "FUN_00102190"
        }, 
        "FUN_0010370a": {
            "renaming": {}, 
            "code": "\nvoid FUN_0010370a(void)\n\n{\n  char cVar1;\n  ushort uVar2;\n  int iVar3;\n  long *plVar4;\n  int *piVar5;\n  undefined8 uVar6;\n  long lVar7;\n  ulong unaff_RBX;\n  byte bVar8;\n  ulong uVar9;\n  char *pcVar10;\n  \n  plVar4 = (long *)dcgettext(0,\"Print width has not been initialized (%d)\",5);\n  uVar9 = unaff_RBX & 0xffffffff;\n  fatal(plVar4,uVar9);\n  print_symname(\"%-20s|\",plVar4,0,uVar9);\n  cVar1 = bfd_is_undefined_symclass((int)*(char *)(*plVar4 + 8));\n  if (cVar1 == '\\0') {\n    print_value_constprop_0(*(undefined8 *)*plVar4);\n  }\n  else if (print_width == 0x20) {\n    printf(\"        \");\n  }\n  else {\n    printf(\"                \");\n  }\n  printf(\"|   %c  |\",(ulong)(uint)(int)*(char *)(*plVar4 + 8));\n  if (*(char *)(*plVar4 + 8) == '-') {\n    printf(\"%18s|  \",*(undefined8 *)(*plVar4 + 0x20));\n    printf((char *)&desc_format,(ulong)(uint)(int)*(short *)(*plVar4 + 0x1a));\n    goto LAB_00103a54;\n  }\n  if (plVar4[2] == 0) {\n    if (plVar4[3] != 0) {\n      lVar7 = *(long *)(plVar4[3] + 0x30);\n      cVar1 = *(char *)(lVar7 + 0x28);\n      if (cVar1 == 'g') goto LAB_00103983;\n      if (cVar1 == 'h') {\n        pcVar10 = \"Line\";\n      }\n      else if (cVar1 == 'd') {\n        pcVar10 = \"Block\";\n      }\n      else if (*(ushort *)(lVar7 + 0x26) == 0) {\n        pcVar10 = \"None\";\n      }\n      else {\n        uVar2 = *(ushort *)(lVar7 + 0x26) >> 4 & 3;\n        if (uVar2 == 2) {\n          pcVar10 = \"Function\";\n        }\n        else if (uVar2 == 3) {\n          pcVar10 = \"Array\";\n        }\n        else {\n          if (uVar2 != 1) {\n            free(bufp_6);\n            uVar2 = *(ushort *)(lVar7 + 0x26);\n            bVar8 = *(byte *)(lVar7 + 0x28);\n            pcVar10 = (char *)dcgettext(0,\"<unknown>: %d/%d\",5);\n            iVar3 = asprintf(&bufp_6,pcVar10,(ulong)bVar8,(ulong)uVar2);\n            pcVar10 = bufp_6;\n            goto joined_r0x00103964;\n          }\n          pcVar10 = \"Pointer\";\n        }\n      }\n      goto LAB_001039c0;\n    }\n    printf(\"                  |\");\n  }\n  else {\n    bVar8 = *(byte *)(plVar4[2] + 0x48) & 0xf;\n    switch(bVar8) {\n    case 0:\n      pcVar10 = \"NOTYPE\";\n      break;\n    case 1:\n      pcVar10 = \"OBJECT\";\n      break;\n    case 2:\n      pcVar10 = \"FUNC\";\n      break;\n    case 3:\n      pcVar10 = \"SECTION\";\n      break;\n    case 4:\n      pcVar10 = \"FILE\";\n      break;\n    case 5:\n      pcVar10 = \"COMMON\";\n      break;\n    case 6:\n      pcVar10 = \"TLS\";\n      break;\n    default:\n      free(bufp_7);\n      pcVar10 = \"<processor specific>: %d\";\n      if ((2 < bVar8 - 0xd) && (pcVar10 = \"<OS specific>: %d\", 2 < bVar8 - 10)) {\n        pcVar10 = \"<unknown>: %d\";\n      }\n      pcVar10 = (char *)dcgettext(0,pcVar10,5);\n      iVar3 = asprintf(&bufp_7,pcVar10,(ulong)bVar8);\n      pcVar10 = bufp_7;\njoined_r0x00103964:\n      if (iVar3 < 0) {\n        piVar5 = __errno_location();\n        uVar6 = xstrerror(*piVar5);\n        fatal(&DAT_0010712d,uVar6);\nLAB_00103983:\n        pcVar10 = \"File\";\n      }\n    }\nLAB_001039c0:\n    printf(\"%18s|\",pcVar10);\n  }\n  if (plVar4[2] == 0) {\n    if (plVar4[1] != 0) goto LAB_001039fb;\nLAB_00103a02:\n    if (print_width == 0x20) {\n      printf(\"        \");\n    }\n    else {\n      printf(\"                \");\n    }\n  }\n  else {\n    if (*(long *)(plVar4[2] + 0x38) == 0) goto LAB_00103a02;\nLAB_001039fb:\n    print_value_constprop_0();\n  }\n  lVar7 = plVar4[2];\n  if ((lVar7 != 0) || (lVar7 = plVar4[3], lVar7 != 0)) {\n    printf(\"|     |%s\",**(undefined8 **)(lVar7 + 0x20));\n    return;\n  }\nLAB_00103a54:\n  printf(\"|     |\");\n  return;\n}\n\n", 
            "called": [
                "fatal", 
                "dcgettext"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x0010370a", 
            "calling": [
                "print_value.constprop.0"
            ], 
            "imported": false, 
            "current_name": "FUN_0010370a"
        }, 
        "FUN_00104370": {
            "renaming": {}, 
            "code": "\nundefined ** FUN_00104370(undefined *param_1,undefined8 param_2)\n\n{\n  undefined8 uVar1;\n  undefined **ppuVar2;\n  \n  switch(*param_1) {\n  case 0x42:\n  case 0x62:\n    print_format = 0;\n    format = (undefined *)&formats;\n    return &formats;\n  default:\n    uVar1 = dcgettext(0,\"%s: invalid output format\",5);\n    fatal(uVar1,param_1);\n    uVar1 = dcgettext(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n    non_fatal(uVar1);\n    return (undefined **)0x0;\n  case 0x4a:\n  case 0x6a:\n    ppuVar2 = (undefined **)FUN_00104397(param_1,param_2,3);\n    return ppuVar2;\n  case 0x50:\n  case 0x70:\n    ppuVar2 = (undefined **)FUN_00104397(param_1,param_2,2);\n    return ppuVar2;\n  case 0x53:\n  case 0x73:\n    ppuVar2 = (undefined **)FUN_00104397(param_1,param_2,1);\n    return ppuVar2;\n  }\n}\n\n", 
            "called": [
                "FUN_00104397", 
                "fatal", 
                "set_output_format.cold", 
                "dcgettext"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00104370", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00104370"
        }, 
        "FUN_00102070": {
            "renaming": {}, 
            "code": "\n\n\nvoid abort(void)\n\n{\n                    \n  abort();\n}\n\n", 
            "called": [
                "abort"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102070", 
            "calling": [
                "size_forward1"
            ], 
            "imported": false, 
            "current_name": "FUN_00102070"
        }, 
        "FUN_0010c058": {
            "renaming": {}, 
            "code": "\n\n\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* qsort@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c058", 
            "calling": [
                "qsort"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c058"
        }, 
        "FUN_0010c178": {
            "renaming": {}, 
            "code": "\n\n\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fflush@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c178", 
            "calling": [
                "fflush"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c178"
        }, 
        "FUN_0010c210": {
            "renaming": {}, 
            "code": "\n\n\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c210", 
            "calling": [
                "exit"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c210"
        }, 
        "FUN_00102110": {
            "renaming": {}, 
            "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n", 
            "called": [
                "textdomain"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102110", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102110"
        }, 
        "FUN_00102230": {
            "renaming": {}, 
            "code": "\nvoid bfd_init(void)\n\n{\n  bfd_init();\n  return;\n}\n\n", 
            "called": [
                "bfd_init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102230", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102230"
        }, 
        "FUN_00105500": {
            "renaming": {}, 
            "code": "\nvoid processEntry FUN_00105500(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined auStack_8 [8];\n  \n  __libc_start_main(main,param_2,&stack0x00000008,0,0,param_1,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [
                "__libc_start_main", 
                "main"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00105500", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00105500"
        }, 
        "FUN_00102475": {
            "renaming": {}, 
            "code": "\nvoid FUN_00102475(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00104397(param_1,param_2,3);\n  return;\n}\n\n", 
            "called": [
                "FUN_00104397"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102475", 
            "calling": [
                "set_output_format"
            ], 
            "imported": false, 
            "current_name": "FUN_00102475"
        }, 
        "FUN_00103b5d": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_00103b5d(long *param_1)\n\n{\n  undefined8 uVar1;\n  char *__format;\n  long *plVar2;\n  \n  fflush(_stdout);\n  uVar1 = program_name;\n  __format = (char *)dcgettext(0,\"%s: Matching formats:\",5);\n  fprintf(_stderr,__format,uVar1);\n  for (plVar2 = param_1; *plVar2 != 0; plVar2 = plVar2 + 1) {\n    fprintf(_stderr,\" %s\");\n  }\n  free(param_1);\n  fputc(10,_stderr);\n  return;\n}\n\n", 
            "called": [
                "fputc", 
                "free", 
                "fflush", 
                "fprintf", 
                "dcgettext"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103b5d", 
            "calling": [
                "display_file"
            ], 
            "imported": false, 
            "current_name": "FUN_00103b5d"
        }, 
        "FUN_0010c050": {
            "renaming": {}, 
            "code": "\n\n\n\nint ferror(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ferror@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c050", 
            "calling": [
                "ferror"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c050"
        }, 
        "FUN_001036a7": {
            "renaming": {}, 
            "code": "\nvoid FUN_001036a7(undefined8 *param_1,undefined8 *param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  if (filename_per_symbol != 0) {\n    if (param_1 != (undefined8 *)0x0) {\n      printf(\"%s:\",*param_1);\n    }\n    printf(\"%s:\",*param_2,param_4);\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "printf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001036a7", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_001036a7"
        }, 
        "FUN_00102350": {
            "renaming": {}, 
            "code": "\nvoid xexit(void)\n\n{\n  xexit();\n  return;\n}\n\n", 
            "called": [
                "xexit"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102350", 
            "calling": [
                "fatal", 
                "bfd_fatal", 
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102350"
        }, 
        "FUN_00102f19": {
            "renaming": {}, 
            "code": "\nvoid FUN_00102f19(undefined8 param_1)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = \"\\n\\nUndefined symbols from %s:\\n\\n\";\n  if (undefined_only == 0) {\n    pcVar1 = \"\\n\\nSymbols from %s:\\n\\n\";\n  }\n  pcVar1 = (char *)dcgettext(0,pcVar1,5);\n  printf(pcVar1,param_1);\n  pcVar1 = \"Name                  Value   Class        Type         Size     Line  Section\\n\\n\";\n  if (print_width != 0x20) {\n    pcVar1 = \n    \"Name                  Value           Class        Type         Size             Line  Section\\n\\n\"\n    ;\n  }\n  pcVar1 = (char *)dcgettext(0,pcVar1,5);\n  printf(pcVar1);\n  return;\n}\n\n", 
            "called": [
                "printf", 
                "dcgettext"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102f19", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00102f19"
        }, 
        "FUN_00102fc3": {
            "renaming": {}, 
            "code": "\nulong FUN_00102fc3(undefined8 param_1,undefined8 param_2)\n\n{\n  char cVar1;\n  ulong uVar2;\n  char *__s;\n  char *__s_00;\n  uint uVar3;\n  long lVar4;\n  long lVar5;\n  size_t sVar6;\n  size_t sVar7;\n  char *pcVar8;\n  char *pcVar9;\n  ulong uVar10;\n  ulong uVar11;\n  ulong uVar12;\n  undefined8 uVar13;\n  long unaff_R13;\n  bool bVar14;\n  \n  uVar13 = *sort_bfd;\n  bfd_fatal();\n  lVar4 = (**(code **)(sort_bfd[1] + 0x270))(sort_bfd,sort_dynamic,uVar13,sort_x);\n  lVar5 = (**(code **)(sort_bfd[1] + 0x270))(sort_bfd,sort_dynamic,param_2,sort_y);\n  if ((lVar4 == 0) || (unaff_R13 = lVar5, lVar5 == 0)) {\n    lVar5 = bfd_fatal(*sort_bfd);\n  }\n  if ((*(long *)(lVar4 + 0x20) == 0x10c2a8) || (*(long *)(lVar5 + 0x20) == 0x10c2a8)) {\n                    \n    abort();\n  }\n  uVar10 = *(ulong *)(*(long *)(lVar4 + 0x20) + 0x30);\n  uVar2 = *(ulong *)(*(long *)(lVar5 + 0x20) + 0x30);\n  uVar12 = *(long *)(lVar4 + 0x10) + uVar10;\n  uVar11 = *(long *)(unaff_R13 + 0x10) + uVar2;\n  bVar14 = uVar12 < uVar11;\n  if ((uVar12 != uVar11) || (bVar14 = uVar10 < uVar2, uVar10 != uVar2)) {\n    return (ulong)(-(uint)bVar14 | 1);\n  }\n  __s = *(char **)(lVar4 + 8);\n  __s_00 = *(char **)(unaff_R13 + 8);\n  sVar6 = strlen(__s);\n  sVar7 = strlen(__s_00);\n  pcVar8 = strstr(__s,\"gnu_compiled\");\n  if (pcVar8 == (char *)0x0) {\n    pcVar9 = strstr(__s,\"gcc2_compiled\");\n    pcVar8 = strstr(__s_00,\"gnu_compiled\");\n    if ((pcVar8 == (char *)0x0) && (pcVar8 = strstr(__s_00,\"gcc2_compiled\"), pcVar8 == (char *)0x0))\n    goto joined_r0x00103157;\n    if (pcVar9 == (char *)0x0) {\n      return 1;\n    }\n  }\n  else {\n    pcVar8 = strstr(__s_00,\"gnu_compiled\");\n    if (pcVar8 == (char *)0x0) {\n      pcVar9 = strstr(__s_00,\"gcc2_compiled\");\njoined_r0x00103157:\n      if (pcVar9 != (char *)0x0) {\n        return 0xffffffff;\n      }\n    }\n  }\n  uVar3 = *(uint *)(unaff_R13 + 0x18) & 0x4000;\n  if ((*(byte *)(lVar4 + 0x19) & 0x40) == 0) {\n    if ((sVar6 < 3) || (__s[sVar6 - 2] != '.')) {\n      if (uVar3 != 0) {\n        return 1;\n      }\n      if ((sVar7 < 3) || (__s_00[sVar7 - 2] != '.')) goto LAB_00103202;\n      bVar14 = false;\n      goto LAB_001031e7;\n    }\n    cVar1 = __s[sVar6 - 1];\n    bVar14 = cVar1 == 'o' || cVar1 == 'a';\n    if (uVar3 == 0) {\n      if ((sVar7 < 3) || (__s_00[sVar7 - 2] != '.')) {\n        if (cVar1 == 'o' || cVar1 == 'a') {\n          return 0xffffffff;\n        }\n        goto LAB_00103202;\n      }\n      goto LAB_001031e7;\n    }\n  }\n  else {\n    if (uVar3 != 0) goto LAB_00103202;\n    if (sVar7 < 3) {\n      return 0xffffffff;\n    }\n    if (__s_00[sVar7 - 2] != '.') {\n      return 0xffffffff;\n    }\n    bVar14 = true;\nLAB_001031e7:\n    if ((__s_00[sVar7 - 1] != 'o') && (__s_00[sVar7 - 1] != 'a')) {\n      if (bVar14) {\n        return 0xffffffff;\n      }\n      goto LAB_00103202;\n    }\n  }\n  if (!bVar14) {\n    return 1;\n  }\nLAB_00103202:\n  uVar10 = non_numeric_forward(uVar13,param_2);\n  return uVar10;\n}\n\n", 
            "called": [
                "bfd_fatal"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102fc3", 
            "calling": [
                "numeric_forward"
            ], 
            "imported": false, 
            "current_name": "FUN_00102fc3"
        }, 
        "FUN_001020a0": {
            "renaming": {}, 
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n", 
            "called": [
                "ferror"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001020a0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001020a0"
        }, 
        "FUN_001021c0": {
            "renaming": {}, 
            "code": "\nvoid bfd_target_list(void)\n\n{\n  bfd_target_list();\n  return;\n}\n\n", 
            "called": [
                "bfd_target_list"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001021c0", 
            "calling": [
                "usage"
            ], 
            "imported": false, 
            "current_name": "FUN_001021c0"
        }, 
        "FUN_001022e0": {
            "renaming": {}, 
            "code": "\n\n\nint asprintf(char **__ptr,char *__fmt,...)\n\n{\n  int iVar1;\n  \n  iVar1 = asprintf(__ptr,__fmt);\n  return iVar1;\n}\n\n", 
            "called": [
                "asprintf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001022e0", 
            "calling": [
                "print_symbol_info_sysv"
            ], 
            "imported": false, 
            "current_name": "FUN_001022e0"
        }, 
        "FUN_00103729": {
            "renaming": {}, 
            "code": "\nvoid FUN_00103729(long *param_1,undefined8 param_2)\n\n{\n  char cVar1;\n  ushort uVar2;\n  int iVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  long lVar6;\n  byte bVar7;\n  char *pcVar8;\n  \n  print_symname(\"%-20s|\",param_1,0,param_2);\n  cVar1 = bfd_is_undefined_symclass((int)*(char *)(*param_1 + 8));\n  if (cVar1 == '\\0') {\n    print_value_constprop_0(*(undefined8 *)*param_1);\n  }\n  else if (print_width == 0x20) {\n    printf(\"        \");\n  }\n  else {\n    printf(\"                \");\n  }\n  printf(\"|   %c  |\",(ulong)(uint)(int)*(char *)(*param_1 + 8));\n  if (*(char *)(*param_1 + 8) == '-') {\n    printf(\"%18s|  \",*(undefined8 *)(*param_1 + 0x20));\n    printf((char *)&desc_format,(ulong)(uint)(int)*(short *)(*param_1 + 0x1a));\n    goto LAB_00103a54;\n  }\n  if (param_1[2] == 0) {\n    if (param_1[3] != 0) {\n      lVar6 = *(long *)(param_1[3] + 0x30);\n      cVar1 = *(char *)(lVar6 + 0x28);\n      if (cVar1 == 'g') goto LAB_00103983;\n      if (cVar1 == 'h') {\n        pcVar8 = \"Line\";\n      }\n      else if (cVar1 == 'd') {\n        pcVar8 = \"Block\";\n      }\n      else if (*(ushort *)(lVar6 + 0x26) == 0) {\n        pcVar8 = \"None\";\n      }\n      else {\n        uVar2 = *(ushort *)(lVar6 + 0x26) >> 4 & 3;\n        if (uVar2 == 2) {\n          pcVar8 = \"Function\";\n        }\n        else if (uVar2 == 3) {\n          pcVar8 = \"Array\";\n        }\n        else {\n          if (uVar2 != 1) {\n            free(bufp_6);\n            uVar2 = *(ushort *)(lVar6 + 0x26);\n            bVar7 = *(byte *)(lVar6 + 0x28);\n            pcVar8 = (char *)dcgettext(0,\"<unknown>: %d/%d\",5);\n            iVar3 = asprintf(&bufp_6,pcVar8,(ulong)bVar7,(ulong)uVar2);\n            pcVar8 = bufp_6;\n            goto joined_r0x00103964;\n          }\n          pcVar8 = \"Pointer\";\n        }\n      }\n      goto LAB_001039c0;\n    }\n    printf(\"                  |\");\n  }\n  else {\n    bVar7 = *(byte *)(param_1[2] + 0x48) & 0xf;\n    switch(bVar7) {\n    case 0:\n      pcVar8 = \"NOTYPE\";\n      break;\n    case 1:\n      pcVar8 = \"OBJECT\";\n      break;\n    case 2:\n      pcVar8 = \"FUNC\";\n      break;\n    case 3:\n      pcVar8 = \"SECTION\";\n      break;\n    case 4:\n      pcVar8 = \"FILE\";\n      break;\n    case 5:\n      pcVar8 = \"COMMON\";\n      break;\n    case 6:\n      pcVar8 = \"TLS\";\n      break;\n    default:\n      free(bufp_7);\n      pcVar8 = \"<processor specific>: %d\";\n      if ((2 < bVar7 - 0xd) && (pcVar8 = \"<OS specific>: %d\", 2 < bVar7 - 10)) {\n        pcVar8 = \"<unknown>: %d\";\n      }\n      pcVar8 = (char *)dcgettext(0,pcVar8,5);\n      iVar3 = asprintf(&bufp_7,pcVar8,(ulong)bVar7);\n      pcVar8 = bufp_7;\njoined_r0x00103964:\n      if (iVar3 < 0) {\n        piVar4 = __errno_location();\n        uVar5 = xstrerror(*piVar4);\n        fatal(&DAT_0010712d,uVar5);\nLAB_00103983:\n        pcVar8 = \"File\";\n      }\n    }\nLAB_001039c0:\n    printf(\"%18s|\",pcVar8);\n  }\n  if (param_1[2] == 0) {\n    if (param_1[1] != 0) goto LAB_001039fb;\nLAB_00103a02:\n    if (print_width == 0x20) {\n      printf(\"        \");\n    }\n    else {\n      printf(\"                \");\n    }\n  }\n  else {\n    if (*(long *)(param_1[2] + 0x38) == 0) goto LAB_00103a02;\nLAB_001039fb:\n    print_value_constprop_0();\n  }\n  lVar6 = param_1[2];\n  if ((lVar6 != 0) || (lVar6 = param_1[3], lVar6 != 0)) {\n    printf(\"|     |%s\",**(undefined8 **)(lVar6 + 0x20));\n    return;\n  }\nLAB_00103a54:\n  printf(\"|     |\");\n  return;\n}\n\n", 
            "called": [
                "bfd_is_undefined_symclass", 
                "fatal", 
                "asprintf", 
                "free", 
                "xstrerror", 
                "printf", 
                "print_value.constprop.0", 
                "__errno_location", 
                "print_symname", 
                "dcgettext"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103729", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00103729"
        }, 
        "FUN_00102080": {
            "renaming": {}, 
            "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  return piVar1;\n}\n\n", 
            "called": [
                "__errno_location"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102080", 
            "calling": [
                "display_file", 
                "print_symbol_info_sysv"
            ], 
            "imported": false, 
            "current_name": "FUN_00102080"
        }, 
        "FUN_0010c188": {
            "renaming": {}, 
            "code": "\n\n\n\nint strcoll(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strcoll@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c188", 
            "calling": [
                "strcoll"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c188"
        }, 
        "FUN_00102000": {
            "renaming": {}, 
            "code": "\nint FUN_00102000(EVP_PKEY_CTX *ctx)\n\n{\n  int iVar1;\n  \n  iVar1 = __gmon_start__();\n  return iVar1;\n}\n\n", 
            "called": [
                "__gmon_start__"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102000", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00102000"
        }, 
        "FUN_00103573": {
            "renaming": {}, 
            "code": "\nvoid FUN_00103573(undefined8 *param_1,undefined8 *param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  if (param_1 != (undefined8 *)0x0) {\n    printf(\"%s:\",*param_1);\n  }\n  printf(\"%s:\",*param_2,param_4);\n  return;\n}\n\n", 
            "called": [
                "printf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103573", 
            "calling": [
                "print_symbol_filename_bsd"
            ], 
            "imported": false, 
            "current_name": "FUN_00103573"
        }, 
        "FUN_00102120": {
            "renaming": {}, 
            "code": "\nvoid bfd_openr(void)\n\n{\n  bfd_openr();\n  return;\n}\n\n", 
            "called": [
                "bfd_openr"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102120", 
            "calling": [
                "display_file"
            ], 
            "imported": false, 
            "current_name": "FUN_00102120"
        }, 
        "FUN_00105110": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_00105110(undefined8 *param_1,long *param_2,undefined8 param_3,undefined8 *param_4)\n\n{\n  void *__ptr;\n  char *__s1;\n  long **pplVar1;\n  long *plVar2;\n  long lVar3;\n  undefined8 *puVar4;\n  char cVar5;\n  int iVar6;\n  void *pvVar7;\n  long lVar8;\n  uint uVar9;\n  long lVar10;\n  uint local_b4;\n  undefined local_b0 [8];\n  undefined *local_a8;\n  undefined8 local_a0;\n  long *local_98;\n  long *local_90;\n  void *local_88;\n  void *pvStack_80;\n  void *pvStack_78;\n  void *pvStack_70;\n  undefined local_68 [8];\n  char local_60;\n  \n  if (*(code **)(format + 0x18) == print_symbol_filename_bsd) {\n    if (filename_per_symbol != 0) {\n      if (param_4 != (undefined8 *)0x0) {\n        printf(\"%s:\",*param_4);\n      }\n      printf(\"%s:\",*param_1);\n    }\n  }\n  else {\n    (**(code **)(format + 0x18))(param_4,param_1);\n  }\n  local_a8 = local_68;\n  (**(code **)(param_1[1] + 0x218))(param_1,param_2,local_a8);\n  uVar9 = *(uint *)(param_2 + 3);\n  cVar5 = local_60;\n  if (((((local_60 == 'i') && ((uVar9 & 0x400000) != 0)) && (ifunc_type_chars != (char *)0x0)) &&\n      ((*ifunc_type_chars != '\\0' && (cVar5 = *ifunc_type_chars, (uVar9 & 2) == 0)))) &&\n     (cVar5 = local_60, ifunc_type_chars[1] != '\\0')) {\n    cVar5 = ifunc_type_chars[1];\n  }\n  local_60 = cVar5;\n  local_a0 = param_3;\n  if ((uVar9 & 0x200100) != 0) goto LAB_00103330;\n  lVar8 = *param_2;\n  iVar6 = *(int *)(*(long *)(lVar8 + 8) + 8);\n  if (((uVar9 & 0x200000) == 0) && (iVar6 == 5)) {\n    local_98 = param_2;\n    if (*(long *)(lVar8 + 0x110) == 0) {\n      local_98 = (long *)0x0;\n    }\n  }\n  else {\n    local_98 = (long *)0x0;\n    if (((iVar6 - 2U & 0xfffffffd) == 0) && (local_90 = param_2, *(long *)(lVar8 + 0x110) != 0))\n    goto LAB_001051bf;\n  }\n  local_90 = (long *)0x0;\nLAB_001051bf:\n  (**(code **)(format + 0x20))(&local_a8,param_1);\n  do {\n    if (line_numbers == 0) {\nLAB_001051e6:\n      putc(10,_stdout);\n      return;\n    }\n    if (lineno_cache_bfd == param_1) {\n      puVar4 = lineno_cache_bfd;\n      if (syms_5 == (void *)0x0) goto LAB_00105359;\nLAB_00105288:\n      lineno_cache_bfd = puVar4;\n      pvVar7 = relocs_3;\n      if (param_2[4] == 0x10c2a8) {\n        if (lineno_cache_rel_bfd == param_1) {\n          if (relocs_3 == (void *)0x0) goto LAB_001033d1;\n        }\n        else {\n          uVar9 = 0;\n          if (relocs_3 != (void *)0x0) {\n            for (; uVar9 < seccount_2; uVar9 = uVar9 + 1) {\n              __ptr = *(void **)((long)pvVar7 + (ulong)uVar9 * 8);\n              if (__ptr != (void *)0x0) {\n                free(__ptr);\n              }\n            }\n            free(secs_1);\n            free(pvVar7);\n            free(relcount_0);\n            secs_1 = (void *)0x0;\n            relocs_3 = (void *)0x0;\n            relcount_0 = (void *)0x0;\n          }\nLAB_001033d1:\n          seccount_2 = *(uint *)(param_1 + 0x14);\n          secs_1 = (void *)xmalloc((ulong)seccount_2 * 8);\n          relocs_3 = (void *)xmalloc((ulong)seccount_2 << 3);\n          relcount_0 = (void *)xmalloc((ulong)seccount_2 << 3);\n          pvStack_70 = syms_5;\n          local_88 = secs_1;\n          pvStack_80 = relocs_3;\n          pvStack_78 = relcount_0;\n          bfd_map_over_sections(param_1,get_relocs,&local_88);\n          lineno_cache_rel_bfd = param_1;\n        }\n        __s1 = (char *)param_2[1];\n        for (uVar9 = 0; uVar9 < seccount_2; uVar9 = uVar9 + 1) {\n          lVar8 = (ulong)uVar9 * 8;\n          pvVar7 = relcount_0;\n          for (lVar10 = 0;\n              *(long *)((long)pvVar7 + lVar8) != lVar10 && lVar10 <= *(long *)((long)pvVar7 + lVar8)\n              ; lVar10 = lVar10 + 1) {\n            pplVar1 = *(long ***)(*(long *)((long)relocs_3 + lVar8) + lVar10 * 8);\n            plVar2 = *pplVar1;\n            if ((((plVar2 != (long *)0x0) &&\n                 (lVar3 = *plVar2, *(long *)(lVar3 + 0x20) == param_2[4])) &&\n                (*(long *)(lVar3 + 0x10) == param_2[2])) &&\n               (((iVar6 = strcmp(__s1,*(char **)(lVar3 + 8)), iVar6 == 0 &&\n                 (cVar5 = (**(code **)(param_1[1] + 0x240))\n                                    (param_1,syms_5,*(undefined8 *)((long)secs_1 + lVar8),pplVar1[1]\n                                     ,&local_88,local_b0,&local_b4,0), pvVar7 = relcount_0,\n                 cVar5 != '\\0')) && (local_88 != (void *)0x0)))) {\n              printf(\"\\t%s:%u\",local_88,(ulong)local_b4);\n              uVar9 = seccount_2;\n              break;\n            }\n          }\n        }\n      }\n      else if (*(undefined8 **)(param_2[4] + 0xe0) == param_1) {\n        cVar5 = (**(code **)(param_1[1] + 0x250))(param_1,syms_5,param_2,&local_88,&local_b4);\n        if (((cVar5 != '\\0') ||\n            (cVar5 = (**(code **)(param_1[1] + 0x240))\n                               (param_1,syms_5,param_2[4],param_2[2],&local_88,local_b0,&local_b4,0)\n            , cVar5 != '\\0')) && ((local_88 != (void *)0x0 && (local_b4 != 0)))) {\n          printf(\"\\t%s:%u\");\n        }\n      }\n      goto LAB_001051e6;\n    }\n    if (syms_5 != (void *)0x0) {\n      free(syms_5);\n      syms_5 = (void *)0x0;\n    }\nLAB_00105359:\n    lVar8 = (**(code **)(param_1[1] + 0x1f8))(param_1);\n    if (lVar8 < 0) {\n      FUN_00103463(lVar8);\n      return;\n    }\n    syms_5 = (void *)xmalloc();\n    lVar8 = (**(code **)(param_1[1] + 0x200))(param_1,syms_5);\n    puVar4 = param_1;\n    if (-1 < lVar8) goto LAB_00105288;\n    bfd_fatal(*param_1);\nLAB_00103330:\n    local_98 = (long *)0x0;\n    local_90 = (long *)0x0;\n    (**(code **)(format + 0x20))(&local_a8,param_1);\n  } while( true );\n}\n\n", 
            "called": [
                "FUN_00103463", 
                "print_symbol_info_bsd", 
                "free", 
                "xmalloc", 
                "printf", 
                "bfd_fatal", 
                "print_symbol_filename_bsd", 
                "print_symbol.cold"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00105110", 
            "calling": [
                "FUN_00104d5b"
            ], 
            "imported": false, 
            "current_name": "FUN_00105110"
        }, 
        "FUN_0010c060": {
            "renaming": {}, 
            "code": "\n\n\n\nint isatty(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* isatty@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c060", 
            "calling": [
                "isatty"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c060"
        }, 
        "FUN_00102240": {
            "renaming": {}, 
            "code": "\n\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcmp(__s1,__s2);\n  return iVar1;\n}\n\n", 
            "called": [
                "strcmp"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102240", 
            "calling": [
                "FUN_00103463", 
                "set_print_width", 
                "FUN_00104d5b", 
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102240"
        }, 
        "FUN_00102360": {
            "renaming": {}, 
            "code": "\nvoid bfd_close(void)\n\n{\n  bfd_close();\n  return;\n}\n\n", 
            "called": [
                "bfd_close"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102360", 
            "calling": [
                "display_file"
            ], 
            "imported": false, 
            "current_name": "FUN_00102360"
        }, 
        "FUN_0010c1a8": {
            "renaming": {}, 
            "code": "\n\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* setlocale@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c1a8", 
            "calling": [
                "setlocale"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c1a8"
        }, 
        "FUN_00102fd2": {
            "renaming": {}, 
            "code": "\nulong FUN_00102fd2(undefined8 param_1,undefined8 param_2)\n\n{\n  char cVar1;\n  ulong uVar2;\n  char *__s;\n  char *__s_00;\n  uint uVar3;\n  long lVar4;\n  long lVar5;\n  size_t sVar6;\n  size_t sVar7;\n  char *pcVar8;\n  char *pcVar9;\n  ulong uVar10;\n  ulong uVar11;\n  ulong uVar12;\n  long unaff_R13;\n  bool bVar13;\n  \n  lVar4 = (**(code **)(sort_bfd[1] + 0x270))(sort_bfd,sort_dynamic,param_1,sort_x);\n  lVar5 = (**(code **)(sort_bfd[1] + 0x270))(sort_bfd,sort_dynamic,param_2,sort_y);\n  if ((lVar4 == 0) || (unaff_R13 = lVar5, lVar5 == 0)) {\n    lVar5 = bfd_fatal(*sort_bfd);\n  }\n  if ((*(long *)(lVar4 + 0x20) == 0x10c2a8) || (*(long *)(lVar5 + 0x20) == 0x10c2a8)) {\n                    \n    abort();\n  }\n  uVar10 = *(ulong *)(*(long *)(lVar4 + 0x20) + 0x30);\n  uVar2 = *(ulong *)(*(long *)(lVar5 + 0x20) + 0x30);\n  uVar12 = *(long *)(lVar4 + 0x10) + uVar10;\n  uVar11 = *(long *)(unaff_R13 + 0x10) + uVar2;\n  bVar13 = uVar12 < uVar11;\n  if ((uVar12 != uVar11) || (bVar13 = uVar10 < uVar2, uVar10 != uVar2)) {\n    return (ulong)(-(uint)bVar13 | 1);\n  }\n  __s = *(char **)(lVar4 + 8);\n  __s_00 = *(char **)(unaff_R13 + 8);\n  sVar6 = strlen(__s);\n  sVar7 = strlen(__s_00);\n  pcVar8 = strstr(__s,\"gnu_compiled\");\n  if (pcVar8 == (char *)0x0) {\n    pcVar9 = strstr(__s,\"gcc2_compiled\");\n    pcVar8 = strstr(__s_00,\"gnu_compiled\");\n    if ((pcVar8 == (char *)0x0) && (pcVar8 = strstr(__s_00,\"gcc2_compiled\"), pcVar8 == (char *)0x0))\n    goto joined_r0x00103157;\n    if (pcVar9 == (char *)0x0) {\n      return 1;\n    }\n  }\n  else {\n    pcVar8 = strstr(__s_00,\"gnu_compiled\");\n    if (pcVar8 == (char *)0x0) {\n      pcVar9 = strstr(__s_00,\"gcc2_compiled\");\njoined_r0x00103157:\n      if (pcVar9 != (char *)0x0) {\n        return 0xffffffff;\n      }\n    }\n  }\n  uVar3 = *(uint *)(unaff_R13 + 0x18) & 0x4000;\n  if ((*(byte *)(lVar4 + 0x19) & 0x40) == 0) {\n    if ((sVar6 < 3) || (__s[sVar6 - 2] != '.')) {\n      if (uVar3 != 0) {\n        return 1;\n      }\n      if ((sVar7 < 3) || (__s_00[sVar7 - 2] != '.')) goto LAB_00103202;\n      bVar13 = false;\n      goto LAB_001031e7;\n    }\n    cVar1 = __s[sVar6 - 1];\n    bVar13 = cVar1 == 'o' || cVar1 == 'a';\n    if (uVar3 == 0) {\n      if ((sVar7 < 3) || (__s_00[sVar7 - 2] != '.')) {\n        if (cVar1 == 'o' || cVar1 == 'a') {\n          return 0xffffffff;\n        }\n        goto LAB_00103202;\n      }\n      goto LAB_001031e7;\n    }\n  }\n  else {\n    if (uVar3 != 0) goto LAB_00103202;\n    if (sVar7 < 3) {\n      return 0xffffffff;\n    }\n    if (__s_00[sVar7 - 2] != '.') {\n      return 0xffffffff;\n    }\n    bVar13 = true;\nLAB_001031e7:\n    if ((__s_00[sVar7 - 1] != 'o') && (__s_00[sVar7 - 1] != 'a')) {\n      if (bVar13) {\n        return 0xffffffff;\n      }\n      goto LAB_00103202;\n    }\n  }\n  if (!bVar13) {\n    return 1;\n  }\nLAB_00103202:\n  uVar10 = non_numeric_forward(param_1,param_2);\n  return uVar10;\n}\n\n", 
            "called": [
                "non_numeric_forward", 
                "abort", 
                "bfd_fatal", 
                "strlen", 
                "strstr"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102fd2", 
            "calling": [
                "FUN_00104d5b"
            ], 
            "imported": false, 
            "current_name": "FUN_00102fd2"
        }, 
        "FUN_00102400": {
            "renaming": {}, 
            "code": "\nvoid bfd_map_over_sections(void)\n\n{\n  bfd_map_over_sections();\n  return;\n}\n\n", 
            "called": [
                "bfd_map_over_sections"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102400", 
            "calling": [
                "print_symbol.cold"
            ], 
            "imported": false, 
            "current_name": "FUN_00102400"
        }, 
        "FUN_00102f9f": {
            "renaming": {}, 
            "code": "\nundefined  [16] FUN_00102f9f(void)\n\n{\n  undefined auVar1 [16];\n  undefined8 unaff_retaddr;\n  \n  bfd_fatal(*sort_bfd);\n  auVar1._8_8_ = unaff_retaddr;\n  auVar1._0_8_ = 0xffffffff;\n  return auVar1;\n}\n\n", 
            "called": [
                "bfd_fatal"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102f9f", 
            "calling": [
                "non_numeric_forward"
            ], 
            "imported": false, 
            "current_name": "FUN_00102f9f"
        }, 
        "FUN_00103a66": {
            "renaming": {}, 
            "code": "\nvoid FUN_00103a66(void)\n\n{\n  long unaff_RBX;\n  \n  if (*(long *)(unaff_RBX + 8) != 0) {\n    FUN_0010651a();\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "FUN_0010651a"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103a66", 
            "calling": [
                "print_symbol_info_posix"
            ], 
            "imported": false, 
            "current_name": "FUN_00103a66"
        }, 
        "FUN_001022f0": {
            "renaming": {}, 
            "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = setlocale(__category,__locale);\n  return pcVar1;\n}\n\n", 
            "called": [
                "setlocale"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001022f0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001022f0"
        }, 
        "FUN_001020b0": {
            "renaming": {}, 
            "code": "\n\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n  qsort(__base,__nmemb,__size,__compar);\n  return;\n}\n\n", 
            "called": [
                "qsort"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001020b0", 
            "calling": [
                "FUN_00104d5b"
            ], 
            "imported": false, 
            "current_name": "FUN_001020b0"
        }, 
        "FUN_001021d0": {
            "renaming": {}, 
            "code": "\nvoid bfd_get_error(void)\n\n{\n  bfd_get_error();\n  return;\n}\n\n", 
            "called": [
                "bfd_get_error"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001021d0", 
            "calling": [
                "display_rel_file", 
                "main", 
                "bfd_nonfatal", 
                "display_file"
            ], 
            "imported": false, 
            "current_name": "FUN_001021d0"
        }, 
        "FUN_0010c118": {
            "renaming": {}, 
            "code": "\n\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fputc@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c118", 
            "calling": [
                "fputc"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c118"
        }, 
        "FUN_00102090": {
            "renaming": {}, 
            "code": "\nvoid bfd_plugin_set_plugin(void)\n\n{\n  bfd_plugin_set_plugin();\n  return;\n}\n\n", 
            "called": [
                "bfd_plugin_set_plugin"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102090", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102090"
        }, 
        "FUN_001035a2": {
            "renaming": {}, 
            "code": "\nvoid FUN_001035a2(void)\n\n{\n  long *unaff_RBX;\n  long lVar1;\n  \n  if (unaff_RBX[2] == 0) {\n    lVar1 = unaff_RBX[1];\n  }\n  else {\n    lVar1 = *(long *)(unaff_RBX[2] + 0x38);\n  }\n  if (lVar1 != 0) {\n    putchar(0x20);\n    if (unaff_RBX[2] == 0) {\n      lVar1 = unaff_RBX[1];\n    }\n    else {\n      lVar1 = *(long *)(unaff_RBX[2] + 0x38);\n    }\n    print_value_constprop_0(lVar1);\n  }\n  printf(\" %c\",(ulong)(uint)(int)*(char *)(*unaff_RBX + 8));\n  if (*(char *)(*unaff_RBX + 8) != '-') {\n    print_symname(&DAT_0010712c);\n    return;\n  }\n  putchar(0x20);\n  printf((char *)&other_format,(ulong)(uint)(int)*(char *)(*unaff_RBX + 0x19));\n  putchar(0x20);\n  printf((char *)&desc_format,(ulong)(uint)(int)*(short *)(*unaff_RBX + 0x1a));\n  printf(\" %5s\",*(undefined8 *)(*unaff_RBX + 0x20));\n  print_symname(&DAT_0010712c);\n  return;\n}\n\n", 
            "called": [
                "putchar", 
                "printf", 
                "print_value.constprop.0", 
                "print_symname"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001035a2", 
            "calling": [
                "print_symbol_info_bsd"
            ], 
            "imported": false, 
            "current_name": "FUN_001035a2"
        }, 
        "FUN_0010c198": {
            "renaming": {}, 
            "code": "\n\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fseek@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c198", 
            "calling": [
                "fseek", 
                "usage"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c198"
        }, 
        "FUN_00103463": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_00103463(void)\n\n{\n  long *plVar1;\n  long lVar2;\n  char cVar3;\n  int iVar4;\n  long lVar5;\n  char *unaff_R12;\n  undefined8 *unaff_R13;\n  long lVar6;\n  long unaff_R15;\n  undefined8 param_8;\n  ulong param_10;\n  long in_stack_00000050;\n  \n  bfd_fatal(*unaff_R13);\n  do {\n    param_8._4_4_ = param_8._4_4_ + 1;\n    if (seccount_2 <= param_8._4_4_) {\n      putc(10,_stdout);\n      return;\n    }\n    lVar5 = relcount_0;\n    for (lVar6 = 0; plVar1 = (long *)(lVar5 + (ulong)param_8._4_4_ * 8),\n        *plVar1 != lVar6 && lVar6 <= *plVar1; lVar6 = lVar6 + 1) {\n      plVar1 = **(long ***)(*(long *)(relocs_3 + (ulong)param_8._4_4_ * 8) + lVar6 * 8);\n      if ((((plVar1 != (long *)0x0) &&\n           (lVar2 = *plVar1, *(long *)(lVar2 + 0x20) == *(long *)(unaff_R15 + 0x20))) &&\n          (*(long *)(lVar2 + 0x10) == *(long *)(unaff_R15 + 0x10))) &&\n         (((iVar4 = strcmp(unaff_R12,*(char **)(lVar2 + 8)), iVar4 == 0 &&\n           (cVar3 = (**(code **)(unaff_R13[1] + 0x240))(), lVar5 = relcount_0, cVar3 != '\\0')) &&\n          (in_stack_00000050 != 0)))) {\n        printf(\"\\t%s:%u\",in_stack_00000050,param_10 >> 0x20);\n        param_8._4_4_ = seccount_2;\n        break;\n      }\n    }\n  } while( true );\n}\n\n", 
            "called": [
                "printf", 
                "bfd_fatal", 
                "strcmp", 
                "putc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103463", 
            "calling": [
                "print_symbol"
            ], 
            "imported": false, 
            "current_name": "FUN_00103463"
        }, 
        "FUN_0010c1b8": {
            "renaming": {}, 
            "code": "\n\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memmove@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c1b8", 
            "calling": [
                "memmove"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c1b8"
        }, 
        "FUN_00104397": {
            "renaming": {}, 
            "code": "\nvoid FUN_00104397(undefined8 param_1,undefined8 param_2,int param_3)\n\n{\n  print_format = param_3;\n  format = (undefined *)(&formats + (long)param_3 * 5);\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00104397", 
            "calling": [
                "set_output_format", 
                "set_output_format.cold"
            ], 
            "imported": false, 
            "current_name": "FUN_00104397"
        }, 
        "FUN_00102370": {
            "renaming": {}, 
            "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 = vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n", 
            "called": [
                "vfprintf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102370", 
            "calling": [
                "report"
            ], 
            "imported": false, 
            "current_name": "FUN_00102370"
        }, 
        "FUN_00104670": {
            "renaming": {}, 
            "code": "\nvoid FUN_00104670(long param_1)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined *puVar3;\n  char *pcVar4;\n  \n  print_width = bfd_get_arch_size();\n  if (print_width == -1) {\n    pcVar4 = **(char ***)(param_1 + 8);\n    pcVar2 = strstr(pcVar4,\"64\");\n    iVar1 = 0x40;\n    if (pcVar2 == (char *)0x0) {\n      iVar1 = strcmp(pcVar4,\"mmo\");\n      iVar1 = (-(uint)(iVar1 == 0) & 0x20) + 0x20;\n    }\n    print_width = iVar1;\n    free(print_format_string);\n  }\n  else {\n    free(print_format_string);\n  }\n  if (print_format - 2U < 2) {\n    pcVar4 = \"\";\n  }\n  else if (print_width == 0x20) {\n    pcVar4 = \"08\";\n  }\n  else {\n    pcVar4 = \"016\";\n  }\n  puVar3 = &DAT_001071d0;\n  if (print_radix != 0x10) {\n    if (print_radix < 0x11) {\n      if (print_radix == 8) {\n        puVar3 = &DAT_001071ca;\n      }\n      else {\n        if (print_radix != 10) {\n          print_format_string = (void *)concat(&DAT_001071d7,pcVar4,0,0);\n          return;\n        }\n        puVar3 = &DAT_001071cd;\n      }\n    }\n    else {\n      puVar3 = (undefined *)0x0;\n    }\n  }\n  print_format_string = (void *)concat(&DAT_001071d7,pcVar4,puVar3,0);\n  return;\n}\n\n", 
            "called": [
                "set_print_width.cold", 
                "free", 
                "bfd_get_arch_size", 
                "strcmp", 
                "concat", 
                "strstr"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00104670", 
            "calling": [
                "display_file"
            ], 
            "imported": false, 
            "current_name": "FUN_00104670"
        }, 
        "FUN_00102130": {
            "renaming": {}, 
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n", 
            "called": [
                "fclose"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102130", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102130"
        }, 
        "FUN_0010c070": {
            "renaming": {}, 
            "code": "\n\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fread@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c070", 
            "calling": [
                "fread"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c070"
        }, 
        "FUN_00102250": {
            "renaming": {}, 
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n", 
            "called": [
                "putc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102250", 
            "calling": [
                "FUN_00103463", 
                "report"
            ], 
            "imported": false, 
            "current_name": "FUN_00102250"
        }, 
        "FUN_0010c0b0": {
            "renaming": {}, 
            "code": "\n\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* dcgettext@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c0b0", 
            "calling": [
                "dcgettext"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c0b0"
        }, 
        "FUN_0010c1d0": {
            "renaming": {}, 
            "code": "\n\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fopen@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c1d0", 
            "calling": [
                "fopen"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c1d0"
        }, 
        "FUN_00102410": {
            "renaming": {}, 
            "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strerror(__errnum);\n  return pcVar1;\n}\n\n", 
            "called": [
                "strerror"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102410", 
            "calling": [
                "display_file"
            ], 
            "imported": false, 
            "current_name": "FUN_00102410"
        }, 
        "FUN_00103a78": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_00103a78(void)\n\n{\n  undefined8 uVar1;\n  long unaff_RBX;\n  undefined8 unaff_retaddr;\n  \n  uVar1 = dcgettext(0,\"cause of error unknown\",5);\n  fflush(_stdout);\n  if (unaff_RBX != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",program_name);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",program_name,uVar1,unaff_retaddr);\n  return;\n}\n\n", 
            "called": [
                "dcgettext"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103a78", 
            "calling": [
                "bfd_nonfatal"
            ], 
            "imported": false, 
            "current_name": "FUN_00103a78"
        }, 
        "FUN_001048e0": {
            "renaming": {}, 
            "code": "\nvoid FUN_001048e0(ulong **param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 ulong **param_5,ulong **param_6)\n\n{\n  byte bVar1;\n  code *pcVar2;\n  char cVar3;\n  int iVar4;\n  uint uVar5;\n  undefined8 uVar6;\n  long lVar7;\n  ulong **ppuVar8;\n  ulong **ppuVar9;\n  long lVar10;\n  ulong *puVar11;\n  ulong **unaff_RBX;\n  ulong **ppuVar12;\n  ulong **ppuVar13;\n  ulong **unaff_RBP;\n  ulong **ppuVar14;\n  ulong **ppuVar15;\n  ulong **ppuVar16;\n  ulong **ppuVar17;\n  ulong **ppuVar18;\n  ulong **unaff_R14;\n  ulong **unaff_R15;\n  bool bVar19;\n  byte bVar20;\n  ulong **ppuStack_78;\n  uint local_4c;\n  ulong *local_48;\n  ulong **local_40 [2];\n  \n  bVar20 = 0;\n  local_48 = (ulong *)0x0;\n  if ((dynamic != 0) || ((*(byte *)((long)param_1 + 0x44) & 0x10) != 0)) {\n    ppuVar9 = (ulong **)&local_4c;\n    ppuVar8 = (ulong **)(*(code *)param_1[1][0x4d])(param_1,dynamic != 0,local_40);\n    if ((long)ppuVar8 < 0) {\n      if ((dynamic != 0) && (iVar4 = bfd_get_error(), iVar4 == 7)) {\n        if (quiet != 0) {\n          return;\n        }\n        puVar11 = *param_1;\n        uVar6 = dcgettext(0,\"%s: no symbols\",5);\n        non_fatal(uVar6,puVar11);\n        return;\n      }\n      bfd_fatal(*param_1);\n      goto LAB_00102e9e;\n    }\n    if (ppuVar8 != (ulong **)0x0) {\n      if (show_synthetic != 0) {\n        if (local_4c == 8) goto LAB_00102d06;\n        goto LAB_00102cc2;\n      }\n      bVar1 = *(byte *)((long)param_1 + 0x4a);\n      ppuVar13 = param_1;\n      do {\n        if ((bVar1 & 0x10) != 0) {\n          unaff_RBX = (ulong **)*ppuVar13;\n          report_plugin_err = '\\0';\n          uVar6 = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n          non_fatal(uVar6);\n        }\n        ppuVar14 = local_40[0];\n        unaff_R14 = (ulong **)(ulong)local_4c;\n        bVar19 = dynamic != 0;\n        ppuVar9 = local_40[0];\n        unaff_R15 = (ulong **)(*(code *)ppuVar13[1][0x41])(ppuVar13);\n        ppuVar12 = unaff_RBX;\n        unaff_RBP = (ulong **)(ulong)bVar19;\n        param_1 = ppuVar13;\n        if (unaff_R15 == (ulong **)0x0) goto LAB_00102ea7;\n        ppuVar17 = (ulong **)((long)ppuVar8 * (long)unaff_R14);\n        ppuVar8 = (ulong **)((long)ppuVar14 + (long)ppuVar17);\n        param_1 = ppuVar14;\n        ppuVar12 = ppuVar14;\njoined_r0x001049a4:\n        if (param_1 < ppuVar8) {\n          do {\n            ppuVar9 = (ulong **)(*(code *)ppuVar13[1][0x4e])(ppuVar13,bVar19,param_1,unaff_R15);\n            ppuVar17 = unaff_R15;\n            if (ppuVar9 == (ulong **)0x0) goto LAB_00102eb0;\n            puVar11 = ppuVar9[1];\n            ppuVar17 = ppuVar8;\n            if (((puVar11 == (ulong *)0x0) || (*(char *)puVar11 != '_')) ||\n               (*(char *)((long)puVar11 + 1) != '_')) {\nLAB_00104a03:\n              if (undefined_only == 0) goto LAB_00104a11;\nLAB_00104ae2:\n              uVar5 = (uint)(ppuVar9[4] == (ulong *)0x10c2a8);\nLAB_00104af9:\n              if (uVar5 == 0) goto code_r0x00104b01;\nLAB_00104a2d:\n              if (print_debug_syms == 0) {\n                if ((*(byte *)(ppuVar9 + 3) & 4) == 0) {\n                  if (sort_by_size != 0) goto FUN_00104d5b;\nLAB_00104a53:\n                  param_6 = (ulong **)(ulong)defined_only;\n                  if (defined_only == 0) {\n                    cVar3 = (*(code *)ppuVar13[1][0x46])(ppuVar13,ppuVar9);\n                    if (cVar3 != '\\0') {\n                      display_rel_file_cold();\n                      return;\n                    }\n                    goto LAB_00104a7b;\n                  }\n                  if (ppuVar9[4] != (ulong *)0x10c2a8) goto LAB_00104cba;\n                }\n              }\n              else {\n                if (sort_by_size == 0) goto LAB_00104a53;\nFUN_00104d5b:\n                if ((ppuVar9[4] == (ulong *)0x10c2a8) || (ppuVar9[4] == (ulong *)0x10c3c0))\n                goto LAB_001049c3;\nLAB_00104cba:\n                cVar3 = (*(code *)ppuVar13[1][0x46])(ppuVar13,ppuVar9);\n                if (cVar3 != '\\0') {\n                  display_rel_file_cold();\n                  return;\n                }\nLAB_00104a7b:\n                if (ppuVar12 != param_1) {\n                  if (unaff_R14 == (ulong **)0x8) {\n                    *ppuVar12 = *param_1;\n                    FUN_001049c0();\n                    return;\n                  }\n                  for (; unaff_R14 != (ulong **)0x0; unaff_R14 = (ulong **)((long)unaff_R14 + -1)) {\n                    *(undefined *)ppuVar12 = *(undefined *)param_1;\n                    param_1 = (ulong **)((long)param_1 + (ulong)bVar20 * -2 + 1);\n                    ppuVar12 = (ulong **)((long)ppuVar12 + (ulong)bVar20 * -2 + 1);\n                  }\n                  FUN_001049c0();\n                  return;\n                }\n                ppuVar12 = (ulong **)((long)ppuVar12 + (long)unaff_R14);\n              }\n            }\n            else {\n              iVar4 = strcmp((char *)((long)puVar11 + (ulong)(*(char *)((long)puVar11 + 2) == '_')),\n                             \"__gnu_lto_slim\");\n              ppuStack_78 = ppuVar9;\n              if (iVar4 == 0) {\n                if (report_plugin_err != '\\0') {\n                  ppuStack_78 = (ulong **)*ppuVar13;\n                  report_plugin_err = '\\0';\n                  uVar6 = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n                  non_fatal(uVar6,ppuStack_78);\n                }\n                goto LAB_00104a03;\n              }\n              if (undefined_only != 0) goto LAB_00104ae2;\nLAB_00104a11:\n              if (external_only == 0) {\n                if (non_weak != 0) {\n                  uVar5 = (*(uint *)(ppuVar9 + 3) >> 7 ^ 1) & 1;\n                  goto LAB_00104af9;\n                }\n                goto LAB_00104a2d;\n              }\n              if ((((*(uint *)(ppuVar9 + 3) & 0x800082) != 0) || (ppuVar9[4] == (ulong *)0x10c2a8))\n                 || ((*(byte *)((long)ppuVar9[4] + 0x25) & 0x10) != 0)) goto LAB_00104a2d;\n            }\nLAB_001049c3:\n            param_1 = (ulong **)((long)param_1 + (long)unaff_R14);\n            if (ppuVar8 <= param_1) break;\n          } while( true );\n        }\n        ppuVar12 = (ulong **)((long)ppuVar12 - (long)ppuVar14);\n        if (unaff_R14 == (ulong **)0x8) {\n          puVar11 = ppuVar13[1];\n          ppuVar14 = (ulong **)((long)ppuVar12 + 7);\n          if (-1 < (long)ppuVar12) {\n            ppuVar14 = ppuVar12;\n          }\n          param_5 = (ulong **)(ulong)no_sort;\n          pcVar2 = (code *)puVar11[0x41];\n          ppuVar14 = (ulong **)((long)ppuVar14 >> 3);\n        }\n        else {\n          ppuVar14 = (ulong **)((long)ppuVar12 / (long)unaff_R14);\n          puVar11 = ppuVar13[1];\n          pcVar2 = (code *)puVar11[0x41];\n        }\n        if (no_sort != 0) goto LAB_00104be2;\n        sort_dynamic = dynamic != 0;\n        sort_bfd = ppuVar13;\n        sort_x = (ulong **)(*pcVar2)(ppuVar13);\n        sort_y = (ulong **)(*(code *)ppuVar13[1][0x41])(ppuVar13);\n        ppuVar12 = local_40[0];\n        if ((sort_x != (ulong **)0x0) && (sort_y != (ulong **)0x0)) {\n          ppuVar8 = (ulong **)(ulong)local_4c;\n          if (sort_by_size != 0) {\n            bVar19 = dynamic != 0;\n            qsort(local_40[0],(size_t)ppuVar14,(size_t)ppuVar8,size_forward1);\n            ppuVar17 = (ulong **)xmalloc((long)ppuVar14 << 4);\n            ppuVar18 = sort_x;\n            param_1 = sort_y;\n            unaff_R14 = (ulong **)((long)ppuVar14 * (long)ppuVar8 + (long)ppuVar12);\n            ppuVar9 = sort_x;\n            if (unaff_R14 <= ppuVar12) goto LAB_00102ec2;\n            param_6 = sort_y;\n            ppuVar14 = (ulong **)(*(code *)ppuVar13[1][0x4e])(ppuVar13,bVar19,ppuVar12);\n            param_5 = ppuVar8;\n            ppuStack_78 = ppuVar17;\n            if (ppuVar14 == (ulong **)0x0) goto LAB_00102eb9;\n            goto LAB_00104e35;\n          }\n          qsort(local_40[0],(size_t)ppuVar14,(size_t)ppuVar8,\n                *(__compar_fn_t *)(sorters + ((long)reverse_sort + (long)sort_numerically * 2) * 8))\n          ;\n          puVar11 = ppuVar13[1];\nLAB_00104be2:\n          param_1 = ppuVar13;\n          ppuVar18 = (ulong **)0x0;\n          goto LAB_00104be5;\n        }\n        bfd_fatal(*ppuVar13);\n        param_1 = ppuVar13;\n        ppuVar12 = unaff_R15;\n        while( true ) {\n          unaff_RBX = (ulong **)xmalloc();\n          ppuVar8 = (ulong **)(*(code *)param_1[1][0x6b])(param_1,unaff_RBX);\n          ppuVar9 = ppuVar17;\n          if (-1 < (long)ppuVar8) break;\n          ppuVar13 = (ulong **)*param_1;\n          ppuVar14 = (ulong **)bfd_fatal(ppuVar13,ppuVar17);\nLAB_00102dbe:\n          puVar11 = ppuVar14[2];\n          ppuVar9 = (ulong **)0x0;\nLAB_00102dc4:\n          puVar11 = (ulong *)((long)ppuVar8[8] - (long)puVar11);\n          ppuVar18 = param_1;\n          ppuVar15 = ppuVar12;\nLAB_00104ea7:\n          ppuVar14 = ppuVar9;\n          ppuVar12 = unaff_RBX;\n          param_1 = param_6;\n          if (puVar11 != (ulong *)0x0) {\n            *ppuVar17 = (ulong *)ppuVar15;\n            ppuVar17[1] = puVar11;\n            ppuVar17 = ppuVar17 + 2;\n          }\nLAB_00104e35:\n          param_6 = ppuVar18;\n          if (ppuVar12 < unaff_R14) goto code_r0x00104e3e;\n          ppuVar14 = (ulong **)((long)ppuVar17 - (long)ppuStack_78 >> 4);\n          qsort(ppuStack_78,(size_t)ppuVar14,0x10,size_forward2);\n          puVar11 = ppuVar13[1];\n          param_1 = ppuVar13;\n          ppuVar18 = ppuStack_78;\nLAB_00104be5:\n          unaff_RBX = local_40[0];\n          ppuVar8 = (ulong **)(ulong)sort_by_size;\n          unaff_R14 = (ulong **)(ulong)(dynamic != 0);\n          if (sort_by_size != 0) {\n            ppuVar17 = (ulong **)(*(code *)puVar11[0x41])(param_1);\n            if (ppuVar17 == (ulong **)0x0) goto LAB_00102ed2;\n            ppuVar12 = ppuVar18 + (long)ppuVar14 * 2;\n            ppuVar14 = ppuVar18;\n            goto LAB_00104ee9;\n          }\n          ppuVar8 = (ulong **)(ulong)local_4c;\n          unaff_R15 = (ulong **)(*(code *)puVar11[0x41])(param_1);\n          if (unaff_R15 != (ulong **)0x0) {\n            unaff_RBP = (ulong **)((long)ppuVar14 * (long)ppuVar8 + (long)unaff_RBX);\n            if (unaff_RBX < unaff_RBP) goto LAB_00104c38;\n            goto LAB_00104c75;\n          }\n          bfd_fatal(*param_1);\n          unaff_R15 = ppuVar18;\nLAB_00102d06:\n          ppuVar9 = ppuVar8;\n          if (dynamic != 0) {\n            unaff_RBX = local_40[0];\n            ppuVar14 = (ulong **)0x0;\n            ppuVar17 = (ulong **)0x0;\n            break;\n          }\n          lVar10 = (*(code *)param_1[1][0x6a])(param_1);\n          ppuVar14 = local_40[0];\n          ppuVar17 = ppuVar8;\n          ppuVar12 = unaff_R15;\n          if (lVar10 < 1) {\n            ppuVar8 = (ulong **)0x0;\n            unaff_RBX = (ulong **)0x0;\n            break;\n          }\n        }\n        param_6 = &local_48;\n        param_5 = unaff_RBX;\n        lVar10 = (*(code *)param_1[1][0x6c])(param_1,ppuVar17,ppuVar14,ppuVar8);\n        ppuVar8 = ppuVar9;\n        if (0 < lVar10) {\n          ppuVar8 = (ulong **)((long)ppuVar9 + lVar10);\n          local_40[0] = (ulong **)xrealloc(local_40[0]);\n          lVar7 = 0;\n          do {\n            local_40[0][(long)ppuVar9 + lVar7] = local_48 + lVar7 * 6;\n            lVar7 = lVar7 + 1;\n          } while (lVar10 != lVar7);\n          local_40[0][(long)ppuVar9 + lVar10] = (ulong *)0x0;\n        }\n        if ((dynamic == 0) && (unaff_RBX != (ulong **)0x0)) {\n          free(unaff_RBX);\n        }\nLAB_00102cc2:\n        bVar1 = *(byte *)((long)param_1 + 0x4a);\n        ppuVar13 = param_1;\n      } while( true );\n    }\n  }\n  if (quiet == 0) {\n    puVar11 = *param_1;\n    uVar6 = dcgettext(0,\"%s: no symbols\",5);\n    non_fatal(uVar6,puVar11);\n  }\n  return;\ncode_r0x00104b01:\n  param_1 = (ulong **)((long)param_1 + (long)unaff_R14);\n  goto joined_r0x001049a4;\ncode_r0x00104e3e:\n  unaff_RBX = (ulong **)((long)ppuVar12 + (long)param_5);\n  if (unaff_R14 <= unaff_RBX) {\n    ppuVar8 = (ulong **)ppuVar14[4];\n    if ((*(uint *)(ppuVar14 + 3) & 0x200100) != 0) goto LAB_00102dbe;\n    ppuVar9 = (ulong **)0x0;\nLAB_00104e95:\n    ppuVar18 = param_1;\n    ppuVar15 = ppuVar12;\n    if (*(int *)(ppuVar13[1] + 1) == 5) {\n      puVar11 = ppuVar14[7];\n      goto LAB_00104ea7;\n    }\n    puVar11 = ppuVar14[2];\n    if ((*(byte *)((long)ppuVar8 + 0x25) & 0x10) != 0) goto LAB_00104ea7;\n    if (unaff_R14 <= unaff_RBX) goto LAB_00102dc4;\n    goto LAB_00102ee7;\n  }\n  ppuVar8 = param_1;\n  ppuVar15 = param_5;\n  ppuVar16 = param_6;\n  ppuVar9 = (ulong **)(*(code *)ppuVar13[1][0x4e])();\n  ppuVar18 = ppuVar12;\n  if (ppuVar9 == (ulong **)0x0) goto LAB_00102edb;\n  ppuVar8 = (ulong **)ppuVar14[4];\n  if ((*(uint *)(ppuVar14 + 3) & 0x200100) == 0) goto LAB_00104e95;\n  goto LAB_00102ee3;\nLAB_00104ee9:\n  if (ppuVar12 <= ppuVar14) {\nLAB_00104c75:\n    if (local_48 == (ulong *)0x0) {\n      free(local_40[0]);\n      free(ppuVar18);\n      return;\n    }\n    free(local_48);\n    free(local_40[0]);\n    free(ppuVar18);\n    return;\n  }\n  ppuVar8 = ppuVar17;\n  lVar10 = (*(code *)param_1[1][0x4e])(param_1,unaff_R14,*ppuVar14);\n  if (lVar10 == 0) goto LAB_00102ec9;\n  ppuVar8 = ppuVar14 + 1;\n  ppuVar14 = ppuVar14 + 2;\n  print_symbol(param_1,lVar10,*ppuVar8,param_2);\n  goto LAB_00104ee9;\nLAB_00102ec9:\n  bfd_fatal(*param_1,0);\nLAB_00102ed2:\n  ppuVar13 = (ulong **)*param_1;\n  bfd_fatal();\n  unaff_RBX = ppuVar12;\n  ppuVar15 = param_5;\n  ppuVar16 = param_6;\nLAB_00102edb:\n  param_6 = ppuVar16;\n  param_5 = ppuVar15;\n  ppuVar13 = (ulong **)*ppuVar13;\n  ppuVar9 = (ulong **)bfd_fatal();\n  ppuVar12 = ppuVar18;\nLAB_00102ee3:\n  puVar11 = ppuVar14[2];\nLAB_00102ee7:\n  if (ppuVar8 != (ulong **)ppuVar9[4]) goto LAB_00102dc4;\n  puVar11 = (ulong *)((long)ppuVar9[2] - (long)puVar11);\n  ppuVar18 = param_1;\n  ppuVar15 = ppuVar12;\n  goto LAB_00104ea7;\nLAB_00104c38:\n  while (ppuVar9 = unaff_R15, lVar10 = (*(code *)param_1[1][0x4e])(param_1,unaff_R14,unaff_RBX),\n        lVar10 != 0) {\n    unaff_RBX = (ulong **)((long)unaff_RBX + (long)ppuVar8);\n    print_symbol(param_1,lVar10,0,param_2);\n    if (unaff_RBP <= unaff_RBX) goto LAB_00104c75;\n  }\nLAB_00102e9e:\n  bfd_fatal(*param_1);\n  ppuVar12 = unaff_RBX;\nLAB_00102ea7:\n  ppuVar13 = unaff_RBP;\n  bfd_fatal(*param_1);\n  ppuVar17 = unaff_R15;\nLAB_00102eb0:\n  bfd_fatal(*ppuVar13);\n  ppuVar13 = param_1;\nLAB_00102eb9:\n  bfd_fatal(*ppuVar13);\n  param_1 = param_6;\nLAB_00102ec2:\n  ppuVar14 = (ulong **)0x0;\n  param_5 = ppuVar8;\n  ppuVar18 = ppuVar9;\n  ppuStack_78 = ppuVar17;\n  goto LAB_00104e35;\n}\n\n", 
            "called": [
                "non_fatal", 
                "bfd_fatal", 
                "bfd_get_error", 
                "dcgettext"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001048e0", 
            "calling": [
                "display_file"
            ], 
            "imported": false, 
            "current_name": "FUN_001048e0"
        }, 
        "FUN_0010c248": {
            "renaming": {}, 
            "code": "\n\n\n\nchar * strstr(char *__haystack,char *__needle)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strstr@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c248", 
            "calling": [
                "strstr"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c248"
        }, 
        "FUN_001023a0": {
            "renaming": {}, 
            "code": "\nvoid bfd_canonicalize_reloc(void)\n\n{\n  bfd_canonicalize_reloc();\n  return;\n}\n\n", 
            "called": [
                "bfd_canonicalize_reloc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001023a0", 
            "calling": [
                "get_relocs"
            ], 
            "imported": false, 
            "current_name": "FUN_001023a0"
        }, 
        "FUN_001065a0": {
            "renaming": {}, 
            "code": "\nvoid FUN_001065a0(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001065a0", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_001065a0"
        }, 
        "FUN_001021e0": {
            "renaming": {}, 
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n", 
            "called": [
                "xmalloc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001021e0", 
            "calling": [
                "get_relocs", 
                "FUN_00104d5b", 
                "main", 
                "print_symbol.cold", 
                "print_symbol", 
                "print_symname.cold"
            ], 
            "imported": false, 
            "current_name": "FUN_001021e0"
        }, 
        "FUN_001020c0": {
            "renaming": {}, 
            "code": "\n\n\nint isatty(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = isatty(__fd);\n  return iVar1;\n}\n\n", 
            "called": [
                "isatty"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001020c0", 
            "calling": [
                "print_symname.cold"
            ], 
            "imported": false, 
            "current_name": "FUN_001020c0"
        }, 
        "FUN_0010c008": {
            "renaming": {}, 
            "code": "\n\n\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* free@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c008", 
            "calling": [
                "free"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c008"
        }, 
        "FUN_0010c240": {
            "renaming": {}, 
            "code": "\n\n\n\nchar * strerror(int __errnum)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strerror@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c240", 
            "calling": [
                "strerror"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c240"
        }, 
        "FUN_0010c088": {
            "renaming": {}, 
            "code": "\n\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* textdomain@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c088", 
            "calling": [
                "textdomain"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c088"
        }, 
        "FUN_0010c0a8": {
            "renaming": {}, 
            "code": "\n\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* bindtextdomain@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c0a8", 
            "calling": [
                "bindtextdomain"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c0a8"
        }, 
        "FUN_00102420": {
            "renaming": {}, 
            "code": "\n\n\nchar * strstr(char *__haystack,char *__needle)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strstr(__haystack,__needle);\n  return pcVar1;\n}\n\n", 
            "called": [
                "strstr"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102420", 
            "calling": [
                "set_print_width", 
                "size_forward1"
            ], 
            "imported": false, 
            "current_name": "FUN_00102420"
        }, 
        "FUN_00105530": {
            "renaming": {}, 
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00105543) */\n/* WARNING: Removing unreachable block (ram,0x0010554f) */\n\nvoid FUN_00105530(void)\n\n{\n  return;\n}\n\n", 
            "called": [
                "_ITM_deregisterTMCloneTable"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00105530", 
            "calling": [
                "__do_global_dtors_aux"
            ], 
            "imported": false, 
            "current_name": "FUN_00105530"
        }, 
        "FUN_00102260": {
            "renaming": {}, 
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n", 
            "called": [
                "fprintf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102260", 
            "calling": [
                "list_matching_formats", 
                "usage.cold", 
                "main", 
                "bfd_nonfatal", 
                "usage", 
                "report"
            ], 
            "imported": false, 
            "current_name": "FUN_00102260"
        }, 
        "FUN_00102380": {
            "renaming": {}, 
            "code": "\nvoid bfd_check_format_matches(void)\n\n{\n  bfd_check_format_matches();\n  return;\n}\n\n", 
            "called": [
                "bfd_check_format_matches"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102380", 
            "calling": [
                "display_file"
            ], 
            "imported": false, 
            "current_name": "FUN_00102380"
        }, 
        "FUN_00102020": {
            "renaming": {}, 
            "code": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)(undefined *)0x0)();\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102020", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00102020"
        }, 
        "FUN_00102140": {
            "renaming": {}, 
            "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n", 
            "called": [
                "bindtextdomain"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102140", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102140"
        }, 
        "FUN_001062d0": {
            "renaming": {}, 
            "code": "\nvoid FUN_001062d0(undefined8 param_1)\n\n{\n  if ((filename_per_file != 0) && (filename_per_symbol == 0)) {\n    printf(\"\\n%s:\\n\",param_1);\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "printf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001062d0", 
            "calling": [
                "display_file"
            ], 
            "imported": false, 
            "current_name": "FUN_001062d0"
        }, 
        "FUN_0010c0c0": {
            "renaming": {}, 
            "code": "\n\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getopt_long@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c0c0", 
            "calling": [
                "getopt_long"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c0c0"
        }, 
        "FUN_00102300": {
            "renaming": {}, 
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n", 
            "called": [
                "bfd_set_error_program_name"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102300", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102300"
        }, 
        "FUN_00103238": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_00103238(void)\n\n{\n  long *plVar1;\n  void *__ptr;\n  char *__s1;\n  long lVar2;\n  char cVar3;\n  int iVar4;\n  long unaff_RBX;\n  void *pvVar5;\n  uint uVar6;\n  long unaff_R13;\n  long lVar7;\n  ulong param_10;\n  void *param_12;\n  \n  pvVar5 = relocs_3;\n  if (lineno_cache_rel_bfd == unaff_R13) {\n    if (relocs_3 != (void *)0x0) goto LAB_00103296;\n  }\n  else {\n    uVar6 = 0;\n    if (relocs_3 != (void *)0x0) {\n      for (; uVar6 < seccount_2; uVar6 = uVar6 + 1) {\n        __ptr = *(void **)((long)pvVar5 + (ulong)uVar6 * 8);\n        if (__ptr != (void *)0x0) {\n          free(__ptr);\n        }\n      }\n      free(secs_1);\n      free(pvVar5);\n      free(relcount_0);\n      secs_1 = (void *)0x0;\n      relocs_3 = (void *)0x0;\n      relcount_0 = (void *)0x0;\n    }\n  }\n  seccount_2 = *(uint *)(unaff_R13 + 0xa0);\n  secs_1 = (void *)xmalloc((ulong)seccount_2 * 8);\n  relocs_3 = (void *)xmalloc((ulong)seccount_2 << 3);\n  relcount_0 = (void *)xmalloc((ulong)seccount_2 << 3);\n  param_12 = secs_1;\n  bfd_map_over_sections();\n  lineno_cache_rel_bfd = unaff_R13;\nLAB_00103296:\n  __s1 = *(char **)(unaff_RBX + 8);\n  uVar6 = 0;\n  do {\n    if (seccount_2 <= uVar6) {\n      putc(10,_stdout);\n      return;\n    }\n    pvVar5 = relcount_0;\n    for (lVar7 = 0; plVar1 = (long *)((long)pvVar5 + (ulong)uVar6 * 8),\n        *plVar1 != lVar7 && lVar7 <= *plVar1; lVar7 = lVar7 + 1) {\n      plVar1 = **(long ***)(*(long *)((long)relocs_3 + (ulong)uVar6 * 8) + lVar7 * 8);\n      if ((((plVar1 != (long *)0x0) &&\n           (lVar2 = *plVar1, *(long *)(lVar2 + 0x20) == *(long *)(unaff_RBX + 0x20))) &&\n          (*(long *)(lVar2 + 0x10) == *(long *)(unaff_RBX + 0x10))) &&\n         (((iVar4 = strcmp(__s1,*(char **)(lVar2 + 8)), iVar4 == 0 &&\n           (cVar3 = (**(code **)(*(long *)(unaff_R13 + 8) + 0x240))(), pvVar5 = relcount_0,\n           cVar3 != '\\0')) && (param_12 != (void *)0x0)))) {\n        printf(\"\\t%s:%u\",param_12,param_10 >> 0x20);\n        uVar6 = seccount_2;\n        break;\n      }\n    }\n    uVar6 = uVar6 + 1;\n  } while( true );\n}\n\n", 
            "called": [
                "free", 
                "get_relocs", 
                "xmalloc", 
                "bfd_map_over_sections"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103238", 
            "calling": [
                "print_symbol"
            ], 
            "imported": false, 
            "current_name": "FUN_00103238"
        }, 
        "FUN_001036e0": {
            "renaming": {}, 
            "code": "\nvoid FUN_001036e0(undefined8 *param_1,undefined8 *param_2)\n\n{\n  if (param_1 != (undefined8 *)0x0) {\n    printf(\"%s[%s]: \",*param_1);\n    return;\n  }\n  printf(\"%s: \",*param_2);\n  return;\n}\n\n", 
            "called": [
                "printf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001036e0", 
            "calling": [
                "print_symbol_filename_posix"
            ], 
            "imported": false, 
            "current_name": "FUN_001036e0"
        }, 
        "FUN_001047d0": {
            "renaming": {}, 
            "code": "\nvoid FUN_001047d0(void)\n\n{\n  char *pcVar1;\n  void *unaff_RBX;\n  undefined *unaff_R12;\n  void *unaff_R13;\n  char *unaff_R14;\n  long unaff_R15;\n  \n  if (((with_symbol_versions != 0) &&\n      (pcVar1 = (char *)(**(code **)(*(long *)(unaff_R15 + 8) + 0x220))(), pcVar1 != (char *)0x0))\n     && (*pcVar1 != '\\0')) {\n    unaff_RBX = (void *)reconcat();\n    unaff_R13 = unaff_RBX;\n  }\n  printf(unaff_R14,unaff_R13);\n  if (unaff_R12 != (undefined *)0x0) {\n    *unaff_R12 = 0x40;\n  }\n  free(unaff_RBX);\n  return;\n}\n\n", 
            "called": [
                "free", 
                "printf", 
                "reconcat"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001047d0", 
            "calling": [
                "FUN_00102739", 
                "print_symname.cold"
            ], 
            "imported": false, 
            "current_name": "FUN_001047d0"
        }, 
        "FUN_0010c138": {
            "renaming": {}, 
            "code": "\n\n\n\nint putc(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putc@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c138", 
            "calling": [
                "putc"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c138"
        }, 
        "FUN_001023b0": {
            "renaming": {}, 
            "code": "\n\n\nint sprintf(char *__s,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = sprintf(__s,__format);\n  return iVar1;\n}\n\n", 
            "called": [
                "sprintf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001023b0", 
            "calling": [
                "print_symname.cold"
            ], 
            "imported": false, 
            "current_name": "FUN_001023b0"
        }, 
        "FUN_0010249f": {
            "renaming": {}, 
            "code": "\nundefined8 FUN_0010249f(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n  non_fatal(uVar1);\n  return 0;\n}\n\n", 
            "called": [
                "non_fatal", 
                "dcgettext"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x0010249f", 
            "calling": [
                "display_file"
            ], 
            "imported": false, 
            "current_name": "FUN_0010249f"
        }, 
        "FUN_001020d0": {
            "renaming": {}, 
            "code": "\nvoid bfd_set_default_target(void)\n\n{\n  bfd_set_default_target();\n  return;\n}\n\n", 
            "called": [
                "bfd_set_default_target"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001020d0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001020d0"
        }, 
        "FUN_001043d0": {
            "renaming": {}, 
            "code": "\nundefined4 FUN_001043d0(char *param_1)\n\n{\n  char cVar1;\n  int iVar2;\n  undefined4 uVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  undefined8 *puVar6;\n  long lVar7;\n  char *pcVar8;\n  undefined8 *puVar9;\n  undefined8 *puVar10;\n  stat local_c8;\n  \n  if (param_1 != (char *)0x0) {\n    iVar2 = stat(param_1,&local_c8);\n    if (iVar2 < 0) {\nLAB_00102522:\n      piVar4 = __errno_location();\n      if (*piVar4 == 2) {\n        uVar5 = dcgettext(0,\"\\'%s\\': No such file\",5);\n        non_fatal(uVar5,param_1);\n      }\n      else {\n        pcVar8 = strerror(*piVar4);\n        uVar5 = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n        non_fatal(uVar5,param_1,pcVar8);\n      }\n    }\n    else if ((local_c8.st_mode & 0xf000) == 0x4000) {\n      uVar5 = dcgettext(0,\"Warning: \\'%s\\' is a directory\",5);\n      non_fatal(uVar5,param_1);\n    }\n    else if ((local_c8.st_mode & 0xf000) == 0x8000) {\n      if (local_c8.st_size < 0) {\n        uVar5 = dcgettext(0,\"Warning: \\'%s\\' has negative size, probably it is too large\",5);\n        non_fatal(uVar5,param_1);\n      }\n      else if (local_c8.st_size != 0) {\n        if (target == 0) {\n          puVar6 = (undefined8 *)bfd_openr(param_1,\"plugin\");\n        }\n        else {\n          puVar6 = (undefined8 *)bfd_openr(param_1);\n        }\n        if (puVar6 != (undefined8 *)0x0) {\n          if (line_numbers != 0) {\n            *(uint *)((long)puVar6 + 0x44) = *(uint *)((long)puVar6 + 0x44) | 0x8000;\n          }\n          cVar1 = bfd_check_format(puVar6,2);\n          if (cVar1 == '\\0') {\n            uVar3 = bfd_check_format_matches(puVar6,1,&local_c8);\n            if ((char)uVar3 == '\\0') goto LAB_001025ac;\n            set_print_width(puVar6);\n            (**(code **)format)(param_1);\n            display_rel_file(puVar6,0);\n          }\n          else {\n            (**(code **)(format + 8))(*puVar6);\n            if ((print_armap != 0) &&\n               (lVar7 = bfd_get_next_mapent(puVar6,0xffffffffffffffff,&local_c8), lVar7 != -1)) {\n              pcVar8 = (char *)dcgettext(0,\"\\nArchive index:\\n\",5);\n              printf(pcVar8);\n              do {\n                puVar9 = (undefined8 *)(**(code **)(puVar6[1] + 0x1e0))(puVar6,lVar7);\n                if (puVar9 == (undefined8 *)0x0) goto LAB_00102516;\n                if (*(long *)local_c8.st_dev != 0) {\n                  print_symname(&DAT_0010712d,0,*(long *)local_c8.st_dev,puVar6);\n                  printf(\" in %s\\n\",*puVar9);\n                }\n                lVar7 = bfd_get_next_mapent(puVar6,lVar7,&local_c8);\n              } while (lVar7 != -1);\n            }\n            puVar9 = (undefined8 *)0x0;\n            do {\n              do {\n                puVar10 = puVar9;\n                puVar9 = (undefined8 *)bfd_openr_next_archived_file(puVar6,puVar10);\n                if (puVar9 == (undefined8 *)0x0) {\n                  iVar2 = bfd_get_error();\n                  if (iVar2 != 9) {\n                    bfd_fatal(*puVar6);\nLAB_00102516:\n                    bfd_fatal(\"bfd_get_elt_at_index\");\n                    goto LAB_00102522;\n                  }\n                  if (puVar10 != (undefined8 *)0x0) {\n                    bfd_close(puVar10);\n                    lineno_cache_bfd = 0;\n                    lineno_cache_rel_bfd = 0;\n                  }\n                  goto LAB_001044b4;\n                }\n                cVar1 = bfd_check_format_matches(puVar9,1,&local_c8);\n                if (cVar1 == '\\0') {\n                  bfd_nonfatal(*puVar9);\n                  iVar2 = bfd_get_error();\n                  if (iVar2 == 0xd) {\n                    list_matching_formats(local_c8.st_dev);\n                  }\n                }\n                else {\n                  set_print_width(puVar9);\n                  (**(code **)(format + 0x10))(*puVar6,*puVar9);\n                  display_rel_file(puVar9,puVar6);\n                }\n              } while (puVar10 == (undefined8 *)0x0);\n              bfd_close(puVar10);\n              lineno_cache_bfd = 0;\n              lineno_cache_rel_bfd = 0;\n            } while (puVar10 != puVar9);\n          }\nLAB_001044b4:\n          uVar3 = 1;\n          while (cVar1 = bfd_close(puVar6), cVar1 == '\\0') {\n            bfd_fatal(param_1);\nLAB_001025ac:\n            bfd_nonfatal(param_1);\n            iVar2 = bfd_get_error();\n            if (iVar2 == 0xd) {\n              list_matching_formats(local_c8.st_dev);\n            }\n          }\n          lineno_cache_rel_bfd = 0;\n          lineno_cache_bfd = 0;\n          return uVar3;\n        }\n        bfd_nonfatal(param_1);\n      }\n    }\n    else {\n      uVar5 = dcgettext(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n      non_fatal(uVar5,param_1);\n    }\n  }\n  return 0;\n}\n\n", 
            "called": [
                "print_archive_filename_bsd", 
                "strerror", 
                "non_fatal", 
                "set_print_width", 
                "print_archive_member_bsd", 
                "display_file.cold", 
                "list_matching_formats", 
                "printf", 
                "bfd_nonfatal", 
                "bfd_openr_next_archived_file", 
                "bfd_check_format", 
                "stat", 
                "print_symname", 
                "bfd_openr", 
                "print_object_filename_bsd", 
                "bfd_check_format_matches", 
                "bfd_get_next_mapent", 
                "bfd_get_error", 
                "bfd_fatal", 
                "display_rel_file", 
                "bfd_close", 
                "__errno_location", 
                "dcgettext"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001043d0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001043d0"
        }, 
        "FUN_001055e0": {
            "renaming": {}, 
            "code": "\nvoid register_tm_clones(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
            "called": [
                "register_tm_clones"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001055e0", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_001055e0"
        }, 
        "FUN_001021f0": {
            "renaming": {}, 
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n", 
            "called": [
                "xmalloc_set_program_name"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001021f0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001021f0"
        }, 
        "FUN_0010c010": {
            "renaming": {}, 
            "code": "\n\n\n\nint putchar(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putchar@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c010", 
            "calling": [
                "putchar"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c010"
        }, 
        "FUN_0010c098": {
            "renaming": {}, 
            "code": "\n\n\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fclose@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c098", 
            "calling": [
                "fclose"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c098"
        }, 
        "FUN_0010c130": {
            "renaming": {}, 
            "code": "\n\n\n\nint strcmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strcmp@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c130", 
            "calling": [
                "strcmp"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c130"
        }, 
        "FUN_00102390": {
            "renaming": {}, 
            "code": "\nvoid bfd_errmsg(void)\n\n{\n  bfd_errmsg();\n  return;\n}\n\n", 
            "called": [
                "bfd_errmsg"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102390", 
            "calling": [
                "main", 
                "bfd_nonfatal"
            ], 
            "imported": false, 
            "current_name": "FUN_00102390"
        }, 
        "FUN_001025f5": {
            "renaming": {}, 
            "code": "\nvoid FUN_001025f5(undefined8 param_1,undefined8 param_2)\n\n{\n  print_format_string = concat(&DAT_001071d7,param_2,&DAT_001071ca,0);\n  return;\n}\n\n", 
            "called": [
                "concat"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001025f5", 
            "calling": [
                "set_print_width"
            ], 
            "imported": false, 
            "current_name": "FUN_001025f5"
        }, 
        "FUN_00102670": {
            "renaming": {}, 
            "code": "\nvoid FUN_00102670(undefined8 param_1)\n\n{\n  if (filename_per_file != 0) {\n    printf(\"\\n%s:\\n\",param_1);\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "printf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102670", 
            "calling": [
                "display_file"
            ], 
            "imported": false, 
            "current_name": "FUN_00102670"
        }, 
        "FUN_0010c0b8": {
            "renaming": {}, 
            "code": "\n\n\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strlen@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c0b8", 
            "calling": [
                "strlen"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c0b8"
        }, 
        "FUN_00102310": {
            "renaming": {}, 
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n", 
            "called": [
                "memmove"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102310", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102310"
        }, 
        "FUN_00102430": {
            "renaming": {}, 
            "code": "\nvoid bfd_get_next_mapent(void)\n\n{\n  bfd_get_next_mapent();\n  return;\n}\n\n", 
            "called": [
                "bfd_get_next_mapent"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102430", 
            "calling": [
                "display_file"
            ], 
            "imported": false, 
            "current_name": "FUN_00102430"
        }, 
        "FUN_00102150": {
            "renaming": {}, 
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n", 
            "called": [
                "dcgettext"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102150", 
            "calling": [
                "print_value.constprop.0.cold", 
                "print_archive_member_sysv", 
                "print_symbol_info_bsd", 
                "display_file.cold", 
                "list_matching_formats", 
                "usage.cold", 
                "FUN_00104d5b", 
                "print_object_filename_sysv", 
                "main", 
                "set_output_format", 
                "bfd_nonfatal.cold", 
                "print_symbol_info_sysv", 
                "display_rel_file", 
                "display_file", 
                "usage"
            ], 
            "imported": false, 
            "current_name": "FUN_00102150"
        }, 
        "FUN_00102270": {
            "renaming": {}, 
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n", 
            "called": [
                "ftell"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102270", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102270"
        }, 
        "FUN_00102030": {
            "renaming": {}, 
            "code": "\nvoid cplus_demangle_name_to_style(void)\n\n{\n  cplus_demangle_name_to_style();\n  return;\n}\n\n", 
            "called": [
                "cplus_demangle_name_to_style"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102030", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102030"
        }, 
        "FUN_00103ab9": {
            "renaming": {}, 
            "code": "\nvoid FUN_00103ab9(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103ab9", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00103ab9"
        }, 
        "FUN_0010c0d0": {
            "renaming": {}, 
            "code": "\n\n\n\nint printf(char *__format,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* printf@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c0d0", 
            "calling": [
                "printf"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c0d0"
        }, 
        "FUN_00104fa0": {
            "renaming": {}, 
            "code": "\nuint FUN_00104fa0(undefined8 param_1,undefined8 param_2)\n\n{\n  char *__s2;\n  char *__s1;\n  uint uVar1;\n  long lVar2;\n  long lVar3;\n  \n  lVar2 = (**(code **)(sort_bfd[1] + 0x270))(sort_bfd,sort_dynamic,param_1,sort_x);\n  lVar3 = (**(code **)(sort_bfd[1] + 0x270))(sort_bfd,sort_dynamic,param_2,sort_y);\n  if ((lVar2 == 0) || (lVar3 == 0)) {\n    bfd_fatal(*sort_bfd);\n  }\n  else {\n    __s2 = *(char **)(lVar3 + 8);\n    __s1 = *(char **)(lVar2 + 8);\n    if (__s2 == (char *)0x0) {\n      return (uint)(__s1 != (char *)0x0);\n    }\n    if (__s1 != (char *)0x0) {\n      if (*__s2 == '\\0') {\n        return (uint)(*__s1 != '\\0');\n      }\n      if (*__s1 == '\\0') {\n        return 0xffffffff;\n      }\n      uVar1 = strcoll(__s1,__s2);\n      return uVar1;\n    }\n  }\n  return 0xffffffff;\n}\n\n", 
            "called": [
                "non_numeric_forward.cold", 
                "strcoll"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00104fa0", 
            "calling": [
                "numeric_forward", 
                "size_forward1", 
                "non_numeric_reverse"
            ], 
            "imported": false, 
            "current_name": "FUN_00104fa0"
        }, 
        "FUN_001023c0": {
            "renaming": {}, 
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n", 
            "called": [
                "exit"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001023c0", 
            "calling": [
                "main", 
                "usage"
            ], 
            "imported": false, 
            "current_name": "FUN_001023c0"
        }, 
        "FUN_0010c028": {
            "renaming": {}, 
            "code": "\n\n\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* abort@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c028", 
            "calling": [
                "abort"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c028"
        }, 
        "FUN_001064a0": {
            "renaming": {}, 
            "code": "\nvoid FUN_001064a0(undefined8 *param_1,undefined8 *param_2)\n\n{\n  if (filename_per_symbol == 0) {\n    return;\n  }\n  if (param_1 != (undefined8 *)0x0) {\n    printf(\"%s[%s]: \",*param_1);\n    return;\n  }\n  printf(\"%s: \",*param_2);\n  return;\n}\n\n", 
            "called": [
                "print_symbol_filename_posix.cold"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001064a0", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_001064a0"
        }, 
        "FUN_0010c148": {
            "renaming": {}, 
            "code": "\n\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fprintf@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c148", 
            "calling": [
                "fprintf"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c148"
        }, 
        "FUN_001022a0": {
            "renaming": {}, 
            "code": "\nvoid bfd_plugin_set_program_name(void)\n\n{\n  bfd_plugin_set_program_name();\n  return;\n}\n\n", 
            "called": [
                "bfd_plugin_set_program_name"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001022a0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001022a0"
        }, 
        "FUN_001054d0": {
            "renaming": {}, 
            "code": "\nvoid FUN_001054d0(undefined8 param_1)\n\n{\n  char cVar1;\n  ushort uVar2;\n  int iVar3;\n  long *plVar4;\n  int *piVar5;\n  undefined8 uVar6;\n  long lVar7;\n  ulong uVar8;\n  byte bVar9;\n  ulong uVar10;\n  char *pcVar11;\n  undefined8 in_R8;\n  undefined8 in_R9;\n  \n  uVar8 = (ulong)print_width;\n  if ((print_width - 0x20 & 0xffffffdf) == 0) {\n    printf(print_format_string,param_1);\n    return;\n  }\n  plVar4 = (long *)dcgettext(0,\"Print width has not been initialized (%d)\",5);\n  uVar10 = uVar8;\n  fatal(plVar4,uVar8);\n  print_symname(\"%-20s|\",plVar4,0,uVar10,in_R8,in_R9,uVar8);\n  cVar1 = bfd_is_undefined_symclass((int)*(char *)(*plVar4 + 8));\n  if (cVar1 == '\\0') {\n    FUN_001054d0(*(undefined8 *)*plVar4);\n  }\n  else if (print_width == 0x20) {\n    printf(\"        \");\n  }\n  else {\n    printf(\"                \");\n  }\n  printf(\"|   %c  |\",(ulong)(uint)(int)*(char *)(*plVar4 + 8));\n  if (*(char *)(*plVar4 + 8) == '-') {\n    printf(\"%18s|  \",*(undefined8 *)(*plVar4 + 0x20));\n    printf((char *)&desc_format,(ulong)(uint)(int)*(short *)(*plVar4 + 0x1a));\n    goto LAB_00103a54;\n  }\n  if (plVar4[2] == 0) {\n    if (plVar4[3] != 0) {\n      lVar7 = *(long *)(plVar4[3] + 0x30);\n      cVar1 = *(char *)(lVar7 + 0x28);\n      if (cVar1 == 'g') goto LAB_00103983;\n      if (cVar1 == 'h') {\n        pcVar11 = \"Line\";\n      }\n      else if (cVar1 == 'd') {\n        pcVar11 = \"Block\";\n      }\n      else if (*(ushort *)(lVar7 + 0x26) == 0) {\n        pcVar11 = \"None\";\n      }\n      else {\n        uVar2 = *(ushort *)(lVar7 + 0x26) >> 4 & 3;\n        if (uVar2 == 2) {\n          pcVar11 = \"Function\";\n        }\n        else if (uVar2 == 3) {\n          pcVar11 = \"Array\";\n        }\n        else {\n          if (uVar2 != 1) {\n            free(bufp_6);\n            uVar2 = *(ushort *)(lVar7 + 0x26);\n            bVar9 = *(byte *)(lVar7 + 0x28);\n            pcVar11 = (char *)dcgettext(0,\"<unknown>: %d/%d\",5);\n            iVar3 = asprintf(&bufp_6,pcVar11,(ulong)bVar9,(ulong)uVar2);\n            pcVar11 = bufp_6;\n            goto joined_r0x00103964;\n          }\n          pcVar11 = \"Pointer\";\n        }\n      }\n      goto LAB_001039c0;\n    }\n    printf(\"                  |\");\n  }\n  else {\n    bVar9 = *(byte *)(plVar4[2] + 0x48) & 0xf;\n    switch(bVar9) {\n    case 0:\n      pcVar11 = \"NOTYPE\";\n      break;\n    case 1:\n      pcVar11 = \"OBJECT\";\n      break;\n    case 2:\n      pcVar11 = \"FUNC\";\n      break;\n    case 3:\n      pcVar11 = \"SECTION\";\n      break;\n    case 4:\n      pcVar11 = \"FILE\";\n      break;\n    case 5:\n      pcVar11 = \"COMMON\";\n      break;\n    case 6:\n      pcVar11 = \"TLS\";\n      break;\n    default:\n      free(bufp_7);\n      pcVar11 = \"<processor specific>: %d\";\n      if ((2 < bVar9 - 0xd) && (pcVar11 = \"<OS specific>: %d\", 2 < bVar9 - 10)) {\n        pcVar11 = \"<unknown>: %d\";\n      }\n      pcVar11 = (char *)dcgettext(0,pcVar11,5);\n      iVar3 = asprintf(&bufp_7,pcVar11,(ulong)bVar9);\n      pcVar11 = bufp_7;\njoined_r0x00103964:\n      if (iVar3 < 0) {\n        piVar5 = __errno_location();\n        uVar6 = xstrerror(*piVar5);\n        fatal(&DAT_0010712d,uVar6);\nLAB_00103983:\n        pcVar11 = \"File\";\n      }\n    }\nLAB_001039c0:\n    printf(\"%18s|\",pcVar11);\n  }\n  if (plVar4[2] == 0) {\n    if (plVar4[1] != 0) goto LAB_001039fb;\nLAB_00103a02:\n    if (print_width == 0x20) {\n      printf(\"        \");\n    }\n    else {\n      printf(\"                \");\n    }\n  }\n  else {\n    if (*(long *)(plVar4[2] + 0x38) == 0) goto LAB_00103a02;\nLAB_001039fb:\n    FUN_001054d0();\n  }\n  lVar7 = plVar4[2];\n  if ((lVar7 != 0) || (lVar7 = plVar4[3], lVar7 != 0)) {\n    printf(\"|     |%s\",**(undefined8 **)(lVar7 + 0x20));\n    return;\n  }\nLAB_00103a54:\n  printf(\"|     |\");\n  return;\n}\n\n", 
            "called": [
                "print_value.constprop.0.cold", 
                "printf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001054d0", 
            "calling": [
                "FUN_0010651a", 
                "print_symbol_info_bsd", 
                "print_symbol_info_bsd.cold", 
                "print_symbol_info_sysv", 
                "print_symbol_info_posix"
            ], 
            "imported": false, 
            "current_name": "FUN_001054d0"
        }, 
        "FUN_001020e0": {
            "renaming": {}, 
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n", 
            "called": [
                "fread"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001020e0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001020e0"
        }, 
        "FUN_001053b0": {
            "renaming": {}, 
            "code": "\nvoid FUN_001053b0(undefined8 *param_1,undefined8 *param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  if (filename_per_symbol == 0) {\n    return;\n  }\n  if (param_1 != (undefined8 *)0x0) {\n    printf(\"%s:\",*param_1);\n  }\n  printf(\"%s:\",*param_2,param_4);\n  return;\n}\n\n", 
            "called": [
                "print_symbol_filename_bsd.cold"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001053b0", 
            "calling": [
                "print_symbol"
            ], 
            "imported": false, 
            "current_name": "FUN_001053b0"
        }, 
        "FUN_001055f0": {
            "renaming": {}, 
            "code": "\n\n\nundefined1 * FUN_001055f0(int param_1,long *param_2)\n\n{\n  byte *pbVar1;\n  byte bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  char cVar6;\n  byte bVar7;\n  char cVar8;\n  char cVar9;\n  int iVar10;\n  uint uVar11;\n  int iVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  FILE *__stream;\n  byte *__s;\n  int *piVar15;\n  size_t sVar16;\n  byte *__ptr;\n  long *__src;\n  long lVar17;\n  long *plVar18;\n  long *plVar19;\n  undefined8 uVar20;\n  undefined8 uVar21;\n  char *pcVar22;\n  byte *pbVar23;\n  undefined1 *unaff_RBP;\n  long lVar24;\n  byte *pbVar25;\n  char *pcVar26;\n  int *unaff_R12;\n  int *piVar27;\n  int local_110;\n  int local_10c;\n  size_t local_108;\n  stat local_c8;\n  \n  setlocale(5,\"\");\n  setlocale(0,\"\");\n  pcVar22 = \"binutils\";\n  setlocale(3,\"\");\n  bindtextdomain(\"binutils\",\"/usr/share/locale\");\n  textdomain(\"binutils\");\n  program_name = *param_2;\n  xmalloc_set_program_name();\n  bfd_set_error_program_name(program_name);\n  bfd_plugin_set_program_name(program_name);\n  plVar18 = param_2;\n  if (1 < param_1) {\n    local_10c = 2000;\n    unaff_R12 = (int *)0x1;\n    local_110 = 0;\n    do {\n      iVar12 = (int)unaff_R12;\n      unaff_RBP = (undefined1 *)(long)iVar12;\n      piVar27 = (int *)((long)unaff_RBP * 8);\n      if (*(char *)plVar18[(long)unaff_RBP] != '@') goto LAB_00105a70;\n      local_10c = local_10c + -1;\n      if (local_10c == 0) {\n        lVar24 = *plVar18;\n        pcVar26 = \"%s: error: too many @-files encountered\\n\";\n        goto LAB_00105f1d;\n      }\n      pcVar22 = (char *)plVar18[(long)unaff_RBP] + 1;\n      iVar10 = stat(pcVar22,&local_c8);\n      if (iVar10 < 0) {\nLAB_00105a70:\n        if (param_1 <= iVar12 + 1) break;\nLAB_00105a7a:\n        uVar11 = iVar12 + 1;\n        local_110 = iVar12;\n      }\n      else {\n        if ((local_c8.st_mode & 0xf000) == 0x4000) goto LAB_00105f13;\n        __stream = fopen(pcVar22,\"r\");\n        if (__stream == (FILE *)0x0) goto LAB_00105a70;\n        iVar10 = fseek(__stream,0,2);\n        if (((iVar10 == -1) ||\n            (pcVar22 = (char *)ftell(__stream), (int *)pcVar22 == (int *)0xffffffffffffffff)) ||\n           (iVar10 = fseek(__stream,0,0), iVar10 == -1)) {\nLAB_00105ad0:\n          fclose(__stream);\n          if (iVar12 + 1 < param_1) goto LAB_00105a7a;\n          break;\n        }\n        __s = (byte *)xmalloc((char *)((long)pcVar22 + 1));\n        piVar15 = (int *)fread(__s,1,(size_t)pcVar22,__stream);\n        if (((int *)pcVar22 != piVar15) && (iVar10 = ferror(__stream), iVar10 != 0)) {\n          free(__s);\n          goto LAB_00105ad0;\n        }\n        __s[(long)piVar15] = 0;\n        bVar7 = *__s;\n        pbVar23 = __s;\n        if (bVar7 != 0) {\nLAB_001057d0:\n          if (((&_sch_istable)[(ulong)bVar7 * 2] & 0x40) != 0) goto LAB_001057c0;\n          sVar16 = strlen((char *)__s);\n          __ptr = (byte *)xmalloc(sVar16 + 1);\n          iVar10 = 0;\n          bVar5 = false;\n          bVar3 = false;\n          lVar24 = 0;\n          __src = (long *)0x0;\n          bVar4 = false;\n          pbVar23 = __s;\n          do {\n            while (((&_sch_istable)[(ulong)*pbVar23 * 2] & 0x40) != 0) {\n              pbVar23 = pbVar23 + 1;\n            }\n            if ((iVar10 == 0) || (plVar19 = __src + lVar24, iVar10 + -1 <= (int)lVar24)) {\n              if (__src == (long *)0x0) {\n                iVar10 = 8;\n                __src = (long *)xmalloc(0x40);\n                plVar19 = __src + lVar24;\n                *plVar19 = 0;\n              }\n              else {\n                iVar10 = iVar10 * 2;\n                __src = (long *)xrealloc(__src,(long)iVar10 << 3);\n                plVar19 = __src + lVar24;\n                *plVar19 = 0;\n              }\n            }\n            bVar7 = *pbVar23;\n            pbVar25 = __ptr;\n            while (bVar7 != 0) {\n              while( true ) {\n                if ((((&_sch_istable)[(ulong)bVar7 * 2] & 0x40) != 0) &&\n                   (!(bool)(bVar5 | bVar4 | bVar3))) {\n                  bVar4 = false;\n                  bVar5 = false;\n                  bVar3 = false;\n                  goto LAB_001058e0;\n                }\n                if (!bVar4) break;\n                pbVar23 = pbVar23 + 1;\n                *pbVar25 = bVar7;\n                pbVar25 = pbVar25 + 1;\n                bVar4 = false;\n                bVar7 = *pbVar23;\n                if (bVar7 == 0) goto LAB_001058e0;\n              }\n              if (bVar7 == 0x5c) {\n                bVar4 = true;\n              }\n              else if (bVar3) {\n                if (bVar7 == 0x27) {\n                  bVar3 = false;\n                }\n                else {\nLAB_00105a55:\n                  *pbVar25 = bVar7;\n                  pbVar25 = pbVar25 + 1;\n                }\n              }\n              else if (bVar5) {\n                if (bVar7 != 0x22) goto LAB_00105a55;\n                bVar5 = false;\n              }\n              else if (bVar7 == 0x27) {\n                bVar3 = true;\n              }\n              else {\n                if (bVar7 != 0x22) goto LAB_00105a55;\n                bVar5 = true;\n              }\n              pbVar1 = pbVar23 + 1;\n              pbVar23 = pbVar23 + 1;\n              bVar7 = *pbVar1;\n            }\nLAB_001058e0:\n            *pbVar25 = 0;\n            lVar17 = xstrdup(__ptr);\n            *plVar19 = lVar17;\n            __src[lVar24 + 1] = 0;\n            bVar7 = *pbVar23;\n            bVar2 = (&_sch_istable)[(ulong)bVar7 * 2];\n            while ((bVar2 & 0x40) != 0) {\n              bVar7 = pbVar23[1];\n              pbVar23 = pbVar23 + 1;\n              bVar2 = (&_sch_istable)[(ulong)bVar7 * 2];\n            }\n            lVar24 = lVar24 + 1;\n          } while (bVar7 != 0);\n          free(__ptr);\n          plVar19 = plVar18;\n          if (param_2 == plVar18) goto LAB_00105c79;\n          goto LAB_0010597d;\n        }\nLAB_00105c5c:\n        __src = (long *)xmalloc(8);\n        *__src = 0;\n        if (param_2 == plVar18) {\nLAB_00105c79:\n          if (*plVar18 == 0) {\n            iVar10 = 0;\n          }\n          else {\n            lVar24 = 1;\n            do {\n              iVar10 = (int)lVar24;\n              plVar19 = plVar18 + lVar24;\n              lVar24 = lVar24 + 1;\n            } while (*plVar19 != 0);\n          }\n          lVar17 = 0;\n          plVar19 = (long *)xmalloc((long)(iVar10 + 1) << 3);\n          lVar24 = *plVar18;\n          while (lVar24 != 0) {\n            uVar20 = xstrdup();\n            *(undefined8 *)((long)plVar19 + lVar17) = uVar20;\n            lVar17 = lVar17 + 8;\n            lVar24 = *(long *)((long)plVar18 + lVar17);\n          }\n          *(undefined8 *)((long)plVar19 + lVar17) = 0;\nLAB_0010597d:\n          plVar18 = plVar19;\n          if (*__src == 0) goto LAB_00105d50;\n          pcVar22 = (char *)0x0;\n          do {\n            pcVar22 = (char *)((long)pcVar22 + 1);\n          } while (__src[(long)pcVar22] != 0);\n          local_108 = (long)pcVar22 * 8;\n        }\n        else {\nLAB_00105d50:\n          pcVar22 = (char *)0x0;\n          local_108 = 0;\n        }\n        free((void *)plVar18[(long)unaff_RBP]);\n        plVar18 = (long *)xrealloc(plVar18,(long)((long)pcVar22 + (long)param_1 + 1) * 8);\n        iVar10 = param_1 + -1 + (int)pcVar22;\n        memmove(plVar18 + (long)(unaff_RBP + (long)pcVar22),plVar18 + 1 + (long)unaff_RBP,\n                (long)(param_1 - iVar12) << 3);\n        memcpy(plVar18 + (long)unaff_RBP,__src,local_108);\n        free(__src);\n        free(__s);\n        fclose(__stream);\n        uVar11 = local_110 + 1;\n        unaff_RBP = unaff_RBP + (long)pcVar22;\n        unaff_R12 = piVar27;\n        param_1 = iVar10;\n        if (iVar10 <= (int)uVar11) break;\n      }\n      unaff_R12 = (int *)(ulong)uVar11;\n    } while( true );\n  }\n  iVar12 = bfd_init();\n  pcVar26 = \"fatal error: libbfd ABI mismatch\";\n  if (iVar12 != 0x118) goto LAB_00106085;\n  unaff_RBP = long_options;\n  cVar8 = bfd_set_default_target(\"x86_64-pc-linux-gnu\",\"fatal error: libbfd ABI mismatch\",5);\n  pcVar22 = \"aABCDef:gHhjJlnopPrSst:uU:vVvWX:\";\n  unaff_R12 = (int *)\"x86_64-pc-linux-gnu\";\n  cVar9 = other_format._3_1_;\n  cVar6 = desc_format._3_1_;\n  uVar14 = print_radix;\n  if (cVar8 != '\\0') {\nswitchD_00105c5a_caseD_0:\n    print_radix = uVar14;\n    desc_format._3_1_ = cVar6;\n    other_format._3_1_ = cVar9;\n    uVar13 = getopt_long(param_1,plVar18,pcVar22);\n    piVar27 = _optarg;\n    piVar15 = (int *)pcVar22;\n    cVar9 = other_format._3_1_;\n    cVar6 = desc_format._3_1_;\n    uVar14 = print_radix;\n    switch(uVar13) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n    case 0x12:\n    case 0x13:\n    case 0x14:\n    case 0x15:\n    case 0x16:\n    case 0x17:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n    case 0x28:\n    case 0x29:\n    case 0x2a:\n    case 0x2b:\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x40:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x51:\n    case 0x52:\n    case 0x54:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n    case 0x5f:\n    case 0x60:\n    case 0x62:\n    case 99:\n    case 100:\n    case 0x69:\n    case 0x6b:\n    case 0x6d:\n    case 0x71:\n    case 0x77:\n    case 0x78:\n    case 0x79:\n    case 0x7a:\n    case 0x7b:\n    case 0x7c:\n    case 0x7d:\n    case 0x7e:\n    case 0x7f:\n    case 0x80:\n    case 0x81:\n    case 0x82:\n    case 0x83:\n    case 0x84:\n    case 0x85:\n    case 0x86:\n    case 0x87:\n    case 0x88:\n    case 0x89:\n    case 0x8a:\n    case 0x8b:\n    case 0x8c:\n    case 0x8d:\n    case 0x8e:\n    case 0x8f:\n    case 0x90:\n    case 0x91:\n    case 0x92:\n    case 0x93:\n    case 0x94:\n    case 0x95:\n    case 0x96:\n    case 0x97:\n    case 0x98:\n    case 0x99:\n    case 0x9a:\n    case 0x9b:\n    case 0x9c:\n    case 0x9d:\n    case 0x9e:\n    case 0x9f:\n    case 0xa0:\n    case 0xa1:\n    case 0xa2:\n    case 0xa3:\n    case 0xa4:\n    case 0xa5:\n    case 0xa6:\n    case 0xa7:\n    case 0xa8:\n    case 0xa9:\n    case 0xaa:\n    case 0xab:\n    case 0xac:\n    case 0xad:\n    case 0xae:\n    case 0xaf:\n    case 0xb0:\n    case 0xb1:\n    case 0xb2:\n    case 0xb3:\n    case 0xb4:\n    case 0xb5:\n    case 0xb6:\n    case 0xb7:\n    case 0xb8:\n    case 0xb9:\n    case 0xba:\n    case 0xbb:\n    case 0xbc:\n    case 0xbd:\n    case 0xbe:\n    case 0xbf:\n    case 0xc0:\n    case 0xc1:\n    case 0xc2:\n    case 0xc3:\n    case 0xc4:\n    case 0xc5:\n    case 0xc6:\n    case 199:\n      usage(_stderr,1);\n      piVar27 = unaff_R12;\nLAB_001061d5:\n      iVar12 = strcmp((char *)piVar27,\"l\");\n      if (iVar12 == 0) goto LAB_001061a3;\n      iVar12 = strcmp((char *)piVar27,\"escape\");\n      unaff_R12 = piVar27;\n      if ((iVar12 == 0) || (iVar12 = strcmp((char *)piVar27,\"e\"), iVar12 == 0)) {\n        unicode_display = 2;\n        cVar9 = other_format._3_1_;\n        cVar6 = desc_format._3_1_;\n        uVar14 = print_radix;\n        goto switchD_00105c5a_caseD_0;\n      }\n      iVar12 = strcmp((char *)piVar27,\"invalid\");\n      if ((iVar12 == 0) || (iVar12 = strcmp((char *)piVar27,\"i\"), iVar12 == 0)) {\n        unicode_display = 5;\n        cVar9 = other_format._3_1_;\n        cVar6 = desc_format._3_1_;\n        uVar14 = print_radix;\n        goto switchD_00105c5a_caseD_0;\n      }\n      iVar12 = strcmp((char *)piVar27,\"hex\");\n      if ((iVar12 == 0) || (iVar12 = strcmp((char *)piVar27,\"x\"), iVar12 == 0)) {\n        unicode_display = 3;\n        cVar9 = other_format._3_1_;\n        cVar6 = desc_format._3_1_;\n        uVar14 = print_radix;\n        goto switchD_00105c5a_caseD_0;\n      }\n      iVar12 = strcmp((char *)piVar27,\"highlight\");\n      if ((iVar12 == 0) || (iVar12 = strcmp((char *)piVar27,\"h\"), iVar12 == 0)) {\n        unicode_display = 4;\n        cVar9 = other_format._3_1_;\n        cVar6 = desc_format._3_1_;\n        uVar14 = print_radix;\n        goto switchD_00105c5a_caseD_0;\n      }\n      pcVar26 = \"invalid argument to -U/--unicode: %s\";\n      break;\n    case 0x41:\n    case 0x6f:\n      filename_per_symbol = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x42:\n      set_output_format(&DAT_00107033);\n      cVar9 = other_format._3_1_;\n      cVar6 = desc_format._3_1_;\n      uVar14 = print_radix;\n      goto switchD_00105c5a_caseD_0;\n    case 0x43:\n      goto switchD_00105c5a_caseD_43;\n    case 0x44:\n      dynamic = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x48:\n    case 0x68:\n      usage(_stdout,0);\nswitchD_00105c5a_caseD_43:\n      unaff_R12 = (int *)&optarg;\n      do_demangle = 1;\n      cVar9 = other_format._3_1_;\n      cVar6 = desc_format._3_1_;\n      uVar14 = print_radix;\n      if (_optarg != (int *)0x0) {\n        iVar12 = cplus_demangle_name_to_style();\n        piVar15 = _optarg;\n        if (iVar12 == 0) {\n          uVar20 = dcgettext(0,\"unknown demangling style `%s\\'\",5);\n          fatal(uVar20,piVar15);\nswitchD_00105c5a_caseD_cc:\n          demangle_flags = demangle_flags | 0x40000;\n          pcVar22 = (char *)piVar15;\n          cVar9 = other_format._3_1_;\n          cVar6 = desc_format._3_1_;\n          uVar14 = print_radix;\n        }\n        else {\n          cplus_demangle_set_style();\n          cVar9 = other_format._3_1_;\n          cVar6 = desc_format._3_1_;\n          uVar14 = print_radix;\n        }\n      }\n      goto switchD_00105c5a_caseD_0;\n    case 0x50:\n      set_output_format(\"posix\");\n      cVar9 = other_format._3_1_;\n      cVar6 = desc_format._3_1_;\n      uVar14 = print_radix;\n      goto switchD_00105c5a_caseD_0;\n    case 0x53:\n      print_size = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x55:\n      defined_only = 1;\n      undefined_only = 0;\n      goto switchD_00105c5a_caseD_0;\n    case 0x56:\n      goto switchD_00105c5a_caseD_56;\n    case 0x57:\n      non_weak = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x58:\n      iVar12 = strcmp((char *)_optarg,\"32_64\");\n      cVar9 = other_format._3_1_;\n      cVar6 = desc_format._3_1_;\n      uVar14 = print_radix;\n      if (iVar12 != 0) {\n        pcVar26 = \"Only -X 32_64 is supported\";\nLAB_00106085:\n        uVar20 = dcgettext(0,pcVar26,5);\n        fatal(uVar20);\nswitchD_00105c5a_caseD_56:\n        show_version = 1;\n        cVar9 = other_format._3_1_;\n        cVar6 = desc_format._3_1_;\n        uVar14 = print_radix;\n      }\n      goto switchD_00105c5a_caseD_0;\n    case 0x61:\n      print_debug_syms = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x66:\n      set_output_format(_optarg);\n      cVar9 = other_format._3_1_;\n      cVar6 = desc_format._3_1_;\n      uVar14 = print_radix;\n      goto switchD_00105c5a_caseD_0;\n    case 0x67:\n      external_only = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x6a:\n      set_output_format(\"just-symbols\");\n      cVar9 = other_format._3_1_;\n      cVar6 = desc_format._3_1_;\n      uVar14 = print_radix;\n      goto switchD_00105c5a_caseD_0;\n    case 0x6c:\n      line_numbers = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x6e:\n    case 0x76:\n      sort_numerically = 1;\n      no_sort = 0;\n      sort_by_size = 0;\n      goto switchD_00105c5a_caseD_0;\n    case 0x70:\n      no_sort = 1;\n      sort_numerically = 0;\n      sort_by_size = 0;\n      goto switchD_00105c5a_caseD_0;\n    case 0x72:\n      reverse_sort = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x73:\n      print_armap = 1;\n      goto switchD_00105c5a_caseD_0;\n    case 0x74:\n      cVar9 = *(char *)_optarg;\n      unaff_R12 = piVar27;\n      cVar6 = cVar9;\n      uVar14 = 10;\n      if (cVar9 == 'd') goto switchD_00105c5a_caseD_0;\n      if ('c' < cVar9) {\n        if (cVar9 == 'o') {\n          uVar14 = 8;\n          goto switchD_00105c5a_caseD_0;\n        }\n        if (cVar9 == 'x') {\n          uVar14 = 0x10;\n          goto switchD_00105c5a_caseD_0;\n        }\n      }\n      pcVar26 = \"%s: invalid radix\";\n      break;\n    case 0x75:\n      undefined_only = 1;\n      defined_only = 0;\n      goto switchD_00105c5a_caseD_0;\n    case 200:\n      target = _optarg;\n      goto switchD_00105c5a_caseD_0;\n    case 0xc9:\n      bfd_plugin_set_plugin(_optarg);\n      cVar9 = other_format._3_1_;\n      cVar6 = desc_format._3_1_;\n      uVar14 = print_radix;\n      goto switchD_00105c5a_caseD_0;\n    case 0xca:\n      sort_by_size = 1;\n      no_sort = 0;\n      sort_numerically = 0;\n      goto switchD_00105c5a_caseD_0;\n    case 0xcb:\n      demangle_flags = demangle_flags & 0xfffbffff;\n      goto switchD_00105c5a_caseD_0;\n    case 0xcc:\n      goto switchD_00105c5a_caseD_cc;\n    case 0xcd:\n      ifunc_type_chars = _optarg;\n      goto switchD_00105c5a_caseD_0;\n    case 0xce:\n      iVar12 = strcmp((char *)_optarg,\"default\");\n      if ((iVar12 == 0) || (iVar12 = strcmp((char *)piVar27,\"d\"), iVar12 == 0)) {\n        unicode_display = 0;\n        unaff_R12 = piVar27;\n        cVar9 = other_format._3_1_;\n        cVar6 = desc_format._3_1_;\n        uVar14 = print_radix;\n      }\n      else {\n        iVar12 = strcmp((char *)piVar27,\"locale\");\n        if (iVar12 != 0) goto LAB_001061d5;\nLAB_001061a3:\n        unicode_display = 1;\n        unaff_R12 = piVar27;\n        cVar9 = other_format._3_1_;\n        cVar6 = desc_format._3_1_;\n        uVar14 = print_radix;\n      }\n      goto switchD_00105c5a_caseD_0;\n    case 0xcf:\n      goto switchD_00105c5a_caseD_cf;\n    default:\n      goto code_r0x00105b40;\n    }\n    uVar20 = dcgettext(0,pcVar26,5);\n    fatal(uVar20,piVar27);\nLAB_00105f13:\n    lVar24 = *plVar18;\n    pcVar26 = \"%s: error: @-file refers to a directory\\n\";\nLAB_00105f1d:\n    fprintf(_stderr,pcVar26,lVar24);\n    xexit(1);\n    goto LAB_00105f38;\n  }\n  uVar14 = bfd_get_error();\n  uVar20 = bfd_errmsg(uVar14);\n  uVar21 = dcgettext(0,\"can\\'t set BFD default target to `%s\\': %s\",5);\n  fatal(uVar21,\"x86_64-pc-linux-gnu\",uVar20);\n  goto LAB_0010613c;\nLAB_001057c0:\n  bVar7 = pbVar23[1];\n  pbVar23 = pbVar23 + 1;\n  if (bVar7 == 0) goto LAB_00105c5c;\n  goto LAB_001057d0;\nswitchD_00105c5a_caseD_cf:\n  quiet = 1;\n  goto switchD_00105c5a_caseD_0;\ncode_r0x00105b40:\n  unaff_RBP = (undefined1 *)(ulong)show_version;\n  if (show_version != 0) {\n    printf(\"GNU %s %s\\n\",&DAT_001070c6,\"(GNU Binutils for Debian) 2.40\");\n    pcVar22 = (char *)dcgettext(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n    printf(pcVar22);\n    pcVar22 = (char *)dcgettext(0,\n                                \"This program is free software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                                ,5);\n    printf(pcVar22);\n                    \n    exit(0);\n  }\n  if ((sort_by_size != 0) && (undefined_only != 0)) {\n    uVar20 = dcgettext(0,\"Using the --size-sort and --undefined-only options together\",5);\n    non_fatal(uVar20);\n    uVar20 = dcgettext(0,\"will produce no output, since undefined symbols have no size.\",5);\n    non_fatal(uVar20);\n    return unaff_RBP;\n  }\n  pcVar22 = &optind;\n  if (_optind != param_1) {\n    if (1 < param_1 - _optind) {\nLAB_00105f38:\n      filename_per_file = 1;\n    }\n    while( true ) {\n      iVar12 = *(int *)pcVar22;\n      if (param_1 <= iVar12) break;\n      lVar24 = plVar18[iVar12];\n      *(int *)pcVar22 = iVar12 + 1;\n      cVar9 = display_file(lVar24);\n      if (cVar9 != '\\0') {\n        iVar12 = *(int *)pcVar22;\n        if (param_1 <= iVar12) break;\n        lVar24 = plVar18[iVar12];\n        *(int *)pcVar22 = iVar12 + 1;\n        cVar9 = display_file(lVar24);\n        if (cVar9 != '\\0') {\n          iVar12 = *(int *)pcVar22;\n          while( true ) {\n            if (param_1 <= iVar12) goto LAB_00105bdd;\n            lVar24 = plVar18[iVar12];\n            *(int *)pcVar22 = iVar12 + 1;\n            cVar9 = display_file(lVar24);\n            if (cVar9 == '\\0') break;\n            iVar12 = *(int *)pcVar22;\n          }\n        }\n      }\n      unaff_RBP = (undefined1 *)(ulong)((int)unaff_RBP + 1);\n    }\nLAB_00105bdd:\n                    \n    exit((int)unaff_RBP);\n  }\nLAB_0010613c:\n  uVar11 = display_file(\"a.out\");\n  return (undefined1 *)(ulong)((uVar11 ^ 1) & 0xff);\n}\n\n", 
            "called": [
                "xexit", 
                "textdomain", 
                "fseek", 
                "bfd_init", 
                "getopt_long", 
                "bfd_plugin_set_plugin", 
                "xmalloc_set_program_name", 
                "bfd_plugin_set_program_name", 
                "set_output_format", 
                "cplus_demangle_set_style", 
                "ferror", 
                "strlen", 
                "stat", 
                "fatal", 
                "fclose", 
                "xstrdup", 
                "setlocale", 
                "xrealloc", 
                "exit", 
                "bfd_errmsg", 
                "bfd_get_error", 
                "fopen", 
                "ftell", 
                "display_file", 
                "usage", 
                "dcgettext", 
                "free", 
                "non_fatal", 
                "xmalloc", 
                "printf", 
                "bindtextdomain", 
                "memcpy", 
                "fprintf", 
                "bfd_set_error_program_name", 
                "bfd_set_default_target", 
                "fread", 
                "memmove", 
                "strcmp", 
                "cplus_demangle_name_to_style"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001055f0", 
            "calling": [
                "_start"
            ], 
            "imported": false, 
            "current_name": "FUN_001055f0"
        }, 
        "FUN_0010c020": {
            "renaming": {}, 
            "code": "\n\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@GLIBC_2.34 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c020", 
            "calling": [
                "_start"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c020"
        }, 
        "FUN_00102280": {
            "renaming": {}, 
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n", 
            "called": [
                "stat"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102280", 
            "calling": [
                "main", 
                "display_file"
            ], 
            "imported": false, 
            "current_name": "FUN_00102280"
        }, 
        "FUN_0010c260": {
            "renaming": {}, 
            "code": "\n\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c260", 
            "calling": [
                "__cxa_finalize"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c260"
        }, 
        "FUN_0010351b": {
            "renaming": {}, 
            "code": "\nvoid FUN_0010351b(void)\n\n{\n  if (filename_per_symbol == 0) {\n    printf(\"\\n%s:\\n\");\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "printf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x0010351b", 
            "calling": [
                "display_file"
            ], 
            "imported": false, 
            "current_name": "FUN_0010351b"
        }, 
        "FUN_00102440": {
            "renaming": {}, 
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n", 
            "called": [
                "__cxa_finalize"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102440", 
            "calling": [
                "__do_global_dtors_aux"
            ], 
            "imported": false, 
            "current_name": "FUN_00102440"
        }, 
        "FUN_00103b2b": {
            "renaming": {}, 
            "code": "\nvoid FUN_00103b2b(undefined8 param_1,undefined8 param_2)\n\n{\n  if (filename_per_symbol == 0) {\n    printf(\"%s[%s]:\\n\",param_1,param_2);\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "printf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103b2b", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00103b2b"
        }, 
        "FUN_00104740": {
            "renaming": {}, 
            "code": "\nvoid FUN_00104740(char *param_1,long *param_2,undefined8 *param_3,long param_4)\n\n{\n  undefined8 *puVar1;\n  byte bVar2;\n  byte bVar3;\n  int iVar4;\n  size_t sVar5;\n  char *pcVar6;\n  undefined8 *puVar7;\n  char *pcVar8;\n  undefined8 *__ptr;\n  ulong uVar9;\n  undefined8 uVar10;\n  undefined *puVar11;\n  undefined8 *puVar12;\n  char *__s;\n  undefined8 *__s_00;\n  long lVar13;\n  uint uVar14;\n  byte bVar15;\n  char acStack_39 [9];\n  \n  bVar15 = 0;\n  if (param_3 == (undefined8 *)0x0) {\n    param_3 = *(undefined8 **)(*param_2 + 0x10);\n    if (with_symbol_versions == 0) {\n      FUN_00102739();\n      return;\n    }\nLAB_00104775:\n    puVar12 = param_3;\n    if (do_demangle == 0) {\n      pcVar6 = (char *)0x0;\n      if (unicode_display == 0) {\nLAB_00104794:\n        puVar12 = param_3;\n        __ptr = (undefined8 *)0x0;\n      }\n      else {\n        __ptr = (undefined8 *)0x0;\n        if (param_3 != (undefined8 *)0x0) goto LAB_0010269d;\n        puVar12 = (undefined8 *)0x1073a6;\n      }\n    }\n    else {\n      pcVar6 = (char *)0x0;\nLAB_0010482b:\n      if ((*(char *)puVar12 == '\\0') ||\n         (param_3 = (undefined8 *)bfd_demangle(param_4,puVar12,demangle_flags),\n         param_3 == (undefined8 *)0x0)) {\n        param_3 = puVar12;\n        if (unicode_display != 0) goto LAB_00102698;\n        __ptr = (undefined8 *)0x0;\n      }\n      else {\n        puVar12 = param_3;\n        __ptr = param_3;\n        if (unicode_display != 0) goto LAB_0010269d;\n      }\n    }\n  }\n  else {\n    puVar12 = param_3;\n    if (with_symbol_versions == 0) {\n      if (*(int *)(*(long *)(param_4 + 8) + 8) != 5) goto LAB_00104775;\n      pcVar6 = strchr((char *)param_3,0x40);\n      if (pcVar6 == (char *)0x0) {\n        if (do_demangle == 0) {\n          if (unicode_display == 0) {\n            if (param_2 == (long *)0x0) {\n              __ptr = (undefined8 *)0x0;\n              printf(param_1,param_3);\n            }\n            else {\n              if (param_2[2] != 0) {\n                FUN_001047d0();\n                return;\n              }\n              __ptr = (undefined8 *)0x0;\n              printf(param_1,param_3);\n            }\n            goto LAB_001047ba;\n          }\n          goto LAB_00102698;\n        }\n      }\n      else {\n        *pcVar6 = '\\0';\n        if (do_demangle == 0) {\n          if (unicode_display == 0) goto LAB_00104794;\n          __ptr = (undefined8 *)0x0;\n          goto LAB_0010269d;\n        }\n      }\n      goto LAB_0010482b;\n    }\n    pcVar6 = (char *)0x0;\n    if (do_demangle != 0) goto LAB_0010482b;\n    if (unicode_display == 0) goto LAB_00104794;\nLAB_00102698:\n    puVar12 = param_3;\n    __ptr = (undefined8 *)0x0;\nLAB_0010269d:\n    do {\n      bVar2 = *(byte *)param_3;\n      param_3 = (undefined8 *)((long)param_3 + 1);\n      if (bVar2 == 0) goto joined_r0x00104864;\n    } while ((((&_sch_istable)[(ulong)bVar2 * 2] & 2) == 0) && (bVar2 < 0xc0));\n    sVar5 = strlen((char *)puVar12);\n    __s_00 = buffer_8;\n    if (buffer_len_9 < sVar5 * 9) {\n      free(buffer_8);\n      sVar5 = strlen((char *)puVar12);\n      buffer_len_9 = sVar5 * 9;\n      buffer_8 = (undefined8 *)xmalloc(buffer_len_9 + 1);\n      __s_00 = buffer_8;\n    }\n    while( true ) {\n      puVar7 = buffer_8;\n      bVar2 = *(byte *)puVar12;\n      puVar1 = (undefined8 *)((long)puVar12 + 1);\n      if (bVar2 == 0) break;\n      if (((&_sch_istable)[(ulong)bVar2 * 2] & 2) == 0) {\n        if ((bVar2 < 0xc0) || (unicode_display == 0)) {\n          *(byte *)__s_00 = bVar2;\n          __s_00 = (undefined8 *)((long)__s_00 + 1);\n          puVar12 = puVar1;\n        }\n        else {\n          bVar3 = *(byte *)((long)puVar12 + 1);\n          if ((bVar3 & 0xc0) == 0x80) {\n            puVar7 = __s_00;\n            if ((bVar2 & 0x20) == 0) {\n              switch(unicode_display) {\n              case 1:\n                uVar14 = 2;\n                goto LAB_00102a62;\n              case 3:\n              case 5:\n                lVar13 = 2;\n                goto LAB_00102917;\n              case 4:\n                iVar4 = isatty(1);\n                if (iVar4 == 0) {\n                  bVar3 = *(byte *)((long)puVar12 + 1);\n                }\n                else {\n                  *(undefined *)(__s_00 + 1) = 0;\n                  *__s_00 = 0x6d37343b31335b1b;\n                  bVar3 = *(byte *)((long)puVar12 + 1);\n                  puVar7 = __s_00 + 1;\n                }\n              case 2:\n                uVar14 = 2;\n                sprintf((char *)puVar7,\"\\\\u%02x%02x\",(ulong)((int)(uint)*(byte *)puVar12 >> 2 & 7),\n                        (ulong)((*(byte *)puVar12 & 3) << 6 | bVar3 & 0x3f));\n                puVar7 = (undefined8 *)((long)puVar7 + 6);\n                goto LAB_00102a27;\n              default:\n                uVar14 = 2;\n              }\n            }\n            else {\n              bVar3 = *(byte *)((long)puVar12 + 2);\n              if ((bVar3 & 0xc0) != 0x80) goto LAB_0010285d;\n              if ((bVar2 & 0x10) == 0) {\n                switch(unicode_display) {\n                case 1:\n                  uVar14 = 3;\nLAB_00102a62:\n                  for (uVar9 = (ulong)uVar14; uVar9 != 0; uVar9 = uVar9 - 1) {\n                    *(undefined *)puVar7 = *(undefined *)puVar12;\n                    puVar12 = (undefined8 *)((long)puVar12 + (ulong)bVar15 * -2 + 1);\n                    puVar7 = (undefined8 *)((long)puVar7 + (ulong)bVar15 * -2 + 1);\n                  }\n                  break;\n                case 3:\n                case 5:\n                  lVar13 = 3;\nLAB_00102917:\n                  uVar10 = 0x7b;\n                  if (unicode_display == 3) {\n                    uVar10 = 0x3c;\n                  }\n                  sprintf((char *)__s_00,\"%c\",uVar10);\n                  *(undefined *)((long)__s_00 + 3) = 0;\n                  puVar7 = (undefined8 *)(lVar13 + (long)puVar12);\n                  *(undefined2 *)((long)__s_00 + 1) = 0x7830;\n                  pcVar8 = (char *)((long)__s_00 + 3);\n                  do {\n                    __s = pcVar8;\n                    bVar2 = *(byte *)puVar12;\n                    puVar12 = (undefined8 *)((long)puVar12 + 1);\n                    sprintf(__s,\"%02x\",(ulong)bVar2);\n                    pcVar8 = __s + 2;\n                  } while (puVar12 != puVar7);\n                  uVar10 = 0x7d;\n                  if (unicode_display == 3) {\n                    uVar10 = 0x3e;\n                  }\n                  uVar14 = (uint)lVar13;\n                  sprintf(__s + 2,\"%c\",uVar10);\n                  puVar7 = (undefined8 *)(__s + 3);\n                  break;\n                case 4:\n                  iVar4 = isatty(1);\n                  if (iVar4 == 0) {\n                    bVar3 = *(byte *)((long)puVar12 + 2);\n                  }\n                  else {\n                    *(undefined *)(__s_00 + 1) = 0;\n                    *__s_00 = 0x6d37343b31335b1b;\n                    bVar3 = *(byte *)((long)puVar12 + 2);\n                    puVar7 = __s_00 + 1;\n                  }\n                case 2:\n                  uVar14 = 3;\n                  sprintf((char *)puVar7,\"\\\\u%02x%02x\",\n                          (ulong)((uint)(((ulong)*(byte *)puVar12 & 0xf) << 4) |\n                                 (int)(uint)*(byte *)((long)puVar12 + 1) >> 2 & 0xfU),\n                          (ulong)((*(byte *)((long)puVar12 + 1) & 3) << 6 | bVar3 & 0x3f));\n                  puVar7 = (undefined8 *)((long)puVar7 + 6);\nLAB_00102a27:\n                  if ((unicode_display == 4) && (iVar4 = isatty(1), iVar4 != 0)) {\n                    *(undefined4 *)puVar7 = 0x6d305b1b;\n                    puVar7 = (undefined8 *)((long)puVar7 + 4);\n                    *(undefined *)puVar7 = 0;\n                  }\n                  break;\n                default:\n                  uVar14 = 3;\n                }\n              }\n              else {\n                bVar3 = *(byte *)((long)puVar12 + 3);\n                if ((bVar3 & 0xc0) != 0x80) goto LAB_0010285d;\n                switch(unicode_display) {\n                case 1:\n                  uVar14 = 4;\n                  goto LAB_00102a62;\n                case 3:\n                case 5:\n                  lVar13 = 4;\n                  goto LAB_00102917;\n                case 4:\n                  iVar4 = isatty(1);\n                  if (iVar4 == 0) {\n                    bVar3 = *(byte *)((long)puVar12 + 3);\n                  }\n                  else {\n                    *(undefined *)(__s_00 + 1) = 0;\n                    *__s_00 = 0x6d37343b31335b1b;\n                    bVar3 = *(byte *)((long)puVar12 + 3);\n                    puVar7 = __s_00 + 1;\n                  }\n                case 2:\n                  uVar14 = 4;\n                  iVar4 = sprintf((char *)puVar7,\"\\\\u%02x%02x%02x\",\n                                  (ulong)((*(byte *)puVar12 & 7) << 6 |\n                                         (int)(uint)*(byte *)((long)puVar12 + 1) >> 2 & 0xfU),\n                                  (ulong)((*(byte *)((long)puVar12 + 1) & 3) << 6 |\n                                         (int)(uint)*(byte *)((long)puVar12 + 2) >> 2 & 0xfU),\n                                  (ulong)((*(byte *)((long)puVar12 + 2) & 3) << 6 | bVar3 & 0x3f));\n                  puVar7 = (undefined8 *)((long)puVar7 + (long)iVar4);\n                  goto LAB_00102a27;\n                default:\n                  uVar14 = 4;\n                }\n              }\n            }\n            uVar9 = (ulong)(uint)((int)puVar7 - (int)__s_00);\n          }\n          else {\nLAB_0010285d:\n            *(byte *)__s_00 = bVar2;\n            uVar14 = 1;\n            uVar9 = 1;\n          }\n          __s_00 = (undefined8 *)((long)__s_00 + uVar9);\n          puVar12 = (undefined8 *)((long)puVar1 + (ulong)(uVar14 - 1));\n        }\n      }\n      else {\n        *(undefined *)__s_00 = 0x5e;\n        *(byte *)((long)__s_00 + 1) = bVar2 + 0x40;\n        __s_00 = (undefined8 *)((long)__s_00 + 2);\n        puVar12 = puVar1;\n      }\n    }\n    *(undefined *)__s_00 = 0;\n    puVar12 = puVar7;\n  }\njoined_r0x00104864:\n  if ((((param_2 != (long *)0x0) && (param_2[2] != 0)) && (with_symbol_versions != 0)) &&\n     ((pcVar8 = (char *)(**(code **)(*(long *)(param_4 + 8) + 0x220))\n                                  (param_4,param_2[2],0,acStack_39), pcVar8 != (char *)0x0 &&\n      (*pcVar8 != '\\0')))) {\n    puVar11 = &DAT_001071e0;\n    if ((acStack_39[0] == '\\0') && (*(long *)(param_2[2] + 0x20) != 0x10c2a8)) {\n      puVar11 = &DAT_001071df;\n    }\n    __ptr = (undefined8 *)reconcat(__ptr,puVar12,puVar11,pcVar8,0);\n    puVar12 = __ptr;\n  }\n  printf(param_1,puVar12);\n  if (pcVar6 != (char *)0x0) {\n    *pcVar6 = '@';\n  }\nLAB_001047ba:\n  free(__ptr);\n  return;\n}\n\n", 
            "called": [
                "FUN_00102739"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00104740", 
            "calling": [
                "just_print_symbol_name", 
                "print_symbol_info_bsd.cold", 
                "display_file", 
                "print_symbol_info_sysv", 
                "print_symbol_info_posix"
            ], 
            "imported": false, 
            "current_name": "FUN_00104740"
        }, 
        "FUN_00102200": {
            "renaming": {}, 
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n", 
            "called": [
                "xstrdup"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102200", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102200"
        }, 
        "FUN_0010c0c8": {
            "renaming": {}, 
            "code": "\n\n\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strchr@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c0c8", 
            "calling": [
                "strchr"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c0c8"
        }, 
        "FUN_00102320": {
            "renaming": {}, 
            "code": "\nvoid bfd_demangle(void)\n\n{\n  bfd_demangle();\n  return;\n}\n\n", 
            "called": [
                "bfd_demangle"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102320", 
            "calling": [
                "FUN_00102739"
            ], 
            "imported": false, 
            "current_name": "FUN_00102320"
        }, 
        "FUN_00106400": {
            "renaming": {}, 
            "code": "\nvoid FUN_00106400(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined8 param_9,undefined8 param_10,undefined8 param_11,undefined8 param_12,\n                 undefined8 param_13,undefined8 param_14)\n\n{\n  char in_AL;\n  undefined4 local_d8;\n  undefined4 local_d4;\n  undefined *local_d0;\n  undefined *local_c8;\n  undefined local_b8 [8];\n  undefined8 local_b0;\n  undefined8 local_a8;\n  undefined8 local_a0;\n  undefined8 local_98;\n  undefined8 local_90;\n  undefined4 local_88;\n  undefined4 local_78;\n  undefined4 local_68;\n  undefined4 local_58;\n  undefined4 local_48;\n  undefined4 local_38;\n  undefined4 local_28;\n  undefined4 local_18;\n  \n  if (in_AL != '\\0') {\n    local_88 = param_1;\n    local_78 = param_2;\n    local_68 = param_3;\n    local_58 = param_4;\n    local_48 = param_5;\n    local_38 = param_6;\n    local_28 = param_7;\n    local_18 = param_8;\n  }\n  local_d0 = &stack0x00000008;\n  local_d8 = 8;\n  local_c8 = local_b8;\n  local_d4 = 0x30;\n  local_b0 = param_10;\n  local_a8 = param_11;\n  local_a0 = param_12;\n  local_98 = param_13;\n  local_90 = param_14;\n  report(param_9,&local_d8);\n  return;\n}\n\n", 
            "called": [
                "report"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00106400", 
            "calling": [
                "display_file.cold", 
                "display_rel_file", 
                "FUN_00104d5b", 
                "main", 
                "display_file"
            ], 
            "imported": false, 
            "current_name": "FUN_00106400"
        }, 
        "FUN_0010c1e8": {
            "renaming": {}, 
            "code": "\n\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* vfprintf@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c1e8", 
            "calling": [
                "vfprintf"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c1e8"
        }, 
        "FUN_00102040": {
            "renaming": {}, 
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n", 
            "called": [
                "free"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102040", 
            "calling": [
                "set_print_width", 
                "list_matching_formats", 
                "FUN_00104d5b", 
                "main", 
                "print_symbol.cold", 
                "print_symbol", 
                "usage", 
                "FUN_001047d0", 
                "print_symname.cold", 
                "print_symbol_info_sysv"
            ], 
            "imported": false, 
            "current_name": "FUN_00102040"
        }, 
        "FUN_00102160": {
            "renaming": {}, 
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n", 
            "called": [
                "strlen"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102160", 
            "calling": [
                "size_forward1", 
                "main", 
                "usage", 
                "print_symname.cold"
            ], 
            "imported": false, 
            "current_name": "FUN_00102160"
        }, 
        "FUN_001020f0": {
            "renaming": {}, 
            "code": "\nvoid bfd_is_undefined_symclass(void)\n\n{\n  bfd_is_undefined_symclass();\n  return;\n}\n\n", 
            "called": [
                "bfd_is_undefined_symclass"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001020f0", 
            "calling": [
                "print_symbol_info_bsd", 
                "print_symbol_info_sysv", 
                "print_symbol_info_posix"
            ], 
            "imported": false, 
            "current_name": "FUN_001020f0"
        }, 
        "FUN_00103533": {
            "renaming": {}, 
            "code": "\nulong FUN_00103533(undefined8 *param_1,undefined8 *param_2)\n\n{\n  ulong uVar1;\n  \n  if ((ulong)param_1[1] < (ulong)param_2[1]) {\n    return (ulong)(-(uint)(reverse_sort == 0) | 1);\n  }\n  if ((ulong)param_2[1] < (ulong)param_1[1]) {\n    return (ulong)((-(uint)(reverse_sort == 0) & 2) - 1);\n  }\n                    /* WARNING: Could not recover jumptable at 0x00103571. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  uVar1 = (**(code **)(sorters + (long)reverse_sort * 8))(*param_1,*param_2);\n  return uVar1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103533", 
            "calling": [
                "FUN_00104d5b"
            ], 
            "imported": false, 
            "current_name": "FUN_00103533"
        }, 
        "FUN_001022b0": {
            "renaming": {}, 
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n", 
            "called": [
                "fflush"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001022b0", 
            "calling": [
                "list_matching_formats", 
                "bfd_nonfatal", 
                "report"
            ], 
            "imported": false, 
            "current_name": "FUN_001022b0"
        }, 
        "FUN_00103abc": {
            "renaming": {}, 
            "code": "\nvoid FUN_00103abc(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103abc", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00103abc"
        }, 
        "FUN_0010651a": {
            "renaming": {}, 
            "code": "\nvoid FUN_0010651a(void)\n\n{\n  print_value_constprop_0();\n  return;\n}\n\n", 
            "called": [
                "print_value.constprop.0"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x0010651a", 
            "calling": [
                "print_symbol_info_posix.cold", 
                "print_symbol_info_posix"
            ], 
            "imported": false, 
            "current_name": "FUN_0010651a"
        }, 
        "FUN_001023d0": {
            "renaming": {}, 
            "code": "\nvoid bfd_check_format(void)\n\n{\n  bfd_check_format();\n  return;\n}\n\n", 
            "called": [
                "bfd_check_format"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001023d0", 
            "calling": [
                "display_file"
            ], 
            "imported": false, 
            "current_name": "FUN_001023d0"
        }, 
        "FUN_00103abd": {
            "renaming": {}, 
            "code": "\nvoid FUN_00103abd(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103abd", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00103abd"
        }, 
        "FUN_00103aba": {
            "renaming": {}, 
            "code": "\nvoid FUN_00103aba(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103aba", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00103aba"
        }, 
        "FUN_00103abb": {
            "renaming": {}, 
            "code": "\nvoid FUN_00103abb(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103abb", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00103abb"
        }, 
        "FUN_001053c0": {
            "renaming": {}, 
            "code": "\nvoid FUN_001053c0(long *param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  char cVar2;\n  undefined8 uVar3;\n  long lVar4;\n  \n  cVar2 = bfd_is_undefined_symclass((int)*(char *)(*param_1 + 8));\n  iVar1 = print_width;\n  if (cVar2 == '\\0') {\n    if (sort_by_size == 0) {\n      if ((print_width - 0x20U & 0xffffffdf) != 0) {\nLAB_00103603:\n        uVar3 = dcgettext(0,\"Print width has not been initialized (%d)\",5);\n        fatal(uVar3,iVar1);\n        goto LAB_00103623;\n      }\n      uVar3 = *(undefined8 *)*param_1;\n    }\n    else {\n      if (print_size == 0) {\n        if (param_1[2] == 0) {\n          lVar4 = param_1[1];\n        }\n        else {\n          lVar4 = *(long *)(param_1[2] + 0x38);\n        }\n        print_value_constprop_0(lVar4);\n        if (print_size != 0) {\n          print_symbol_info_bsd_cold();\n          return;\n        }\n        goto LAB_00105423;\n      }\n      uVar3 = *(undefined8 *)*param_1;\n      if ((print_width - 0x20U & 0xffffffdf) != 0) goto LAB_00103603;\n    }\n    printf(print_format_string,uVar3);\n    if (print_size != 0) {\n      print_symbol_info_bsd_cold();\n      return;\n    }\n  }\n  else if (print_width == 0x40) {\n    printf(\"        \");\n    printf(\"        \");\n  }\n  else {\n    printf(\"        \");\n  }\nLAB_00105423:\n  printf(\" %c\",(ulong)(uint)(int)*(char *)(*param_1 + 8));\n  if (*(char *)(*param_1 + 8) != '-') {\n    print_symname(&DAT_0010712c,param_1,0,param_2);\n    return;\n  }\nLAB_00103623:\n  putchar(0x20);\n  printf((char *)&other_format,(ulong)(uint)(int)*(char *)(*param_1 + 0x19));\n  putchar(0x20);\n  printf((char *)&desc_format,(ulong)(uint)(int)*(short *)(*param_1 + 0x1a));\n  printf(\" %5s\",*(undefined8 *)(*param_1 + 0x20));\n  print_symname(&DAT_0010712c,param_1,0,param_2);\n  return;\n}\n\n", 
            "called": [
                "fatal", 
                "bfd_is_undefined_symclass", 
                "printf", 
                "print_value.constprop.0", 
                "print_symbol_info_bsd.cold", 
                "dcgettext"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001053c0", 
            "calling": [
                "print_symbol"
            ], 
            "imported": false, 
            "current_name": "FUN_001053c0"
        }, 
        "FUN_001064b0": {
            "renaming": {}, 
            "code": "\nvoid FUN_001064b0(long *param_1,undefined8 param_2)\n\n{\n  char cVar1;\n  \n  print_symname(&DAT_00107363,param_1,0,param_2);\n  printf(\"%c \",(ulong)(uint)(int)*(char *)(*param_1 + 8));\n  cVar1 = bfd_is_undefined_symclass((int)*(char *)(*param_1 + 8));\n  if (cVar1 != '\\0') {\n    printf(\"        \");\n    return;\n  }\n  print_value_constprop_0(*(undefined8 *)*param_1);\n  putchar(0x20);\n  if (param_1[2] == 0) {\n    if (param_1[1] != 0) {\n      FUN_0010651a();\n      return;\n    }\n  }\n  else if (*(long *)(param_1[2] + 0x38) != 0) {\n    print_value_constprop_0();\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "bfd_is_undefined_symclass", 
                "FUN_0010651a", 
                "putchar", 
                "printf", 
                "print_value.constprop.0", 
                "print_symbol_info_posix.cold", 
                "print_symname"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001064b0", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_001064b0"
        }, 
        "FUN_00102170": {
            "renaming": {}, 
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n", 
            "called": [
                "getopt_long"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102170", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102170"
        }, 
        "FUN_0010c030": {
            "renaming": {}, 
            "code": "\n\n\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __errno_location@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c030", 
            "calling": [
                "__errno_location"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c030"
        }, 
        "FUN_00102290": {
            "renaming": {}, 
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n", 
            "called": [
                "memcpy"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102290", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102290"
        }, 
        "FUN_0010c150": {
            "renaming": {}, 
            "code": "\n\n\n\nlong ftell(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ftell@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c150", 
            "calling": [
                "ftell"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c150"
        }, 
        "FUN_00103b49": {
            "renaming": {}, 
            "code": "\nvoid FUN_00103b49(undefined8 param_1,undefined8 param_2)\n\n{\n  print_symname(&DAT_0010712d,param_1,0,param_2);\n  return;\n}\n\n", 
            "called": [
                "print_symname"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103b49", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00103b49"
        }, 
        "FUN_00103abe": {
            "renaming": {}, 
            "code": "\nvoid FUN_00103abe(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103abe", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00103abe"
        }, 
        "FUN_00103abf": {
            "renaming": {}, 
            "code": "\nvoid FUN_00103abf(undefined8 param_1,undefined8 param_2)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = \"\\n\\nUndefined symbols from %s[%s]:\\n\\n\";\n  if (undefined_only == 0) {\n    pcVar1 = \"\\n\\nSymbols from %s[%s]:\\n\\n\";\n  }\n  pcVar1 = (char *)dcgettext(0,pcVar1,5);\n  printf(pcVar1,param_1,param_2);\n  pcVar1 = \"Name                  Value   Class        Type         Size     Line  Section\\n\\n\";\n  if (print_width != 0x20) {\n    pcVar1 = \n    \"Name                  Value           Class        Type         Size             Line  Section\\n\\n\"\n    ;\n  }\n  pcVar1 = (char *)dcgettext(0,pcVar1,5);\n  printf(pcVar1);\n  return;\n}\n\n", 
            "called": [
                "printf", 
                "dcgettext"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103abf", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00103abf"
        }, 
        "FUN_00102330": {
            "renaming": {}, 
            "code": "\nvoid xstrerror(void)\n\n{\n  xstrerror();\n  return;\n}\n\n", 
            "called": [
                "xstrerror"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102330", 
            "calling": [
                "print_symbol_info_sysv"
            ], 
            "imported": false, 
            "current_name": "FUN_00102330"
        }, 
        "FUN_00103bf6": {
            "renaming": {}, 
            "code": "\nundefined  [16] FUN_00103bf6(void)\n\n{\n  int iVar1;\n  undefined8 in_RAX;\n  undefined auVar2 [16];\n  \n  iVar1 = non_numeric_forward();\n  auVar2._0_4_ = -iVar1;\n  auVar2._4_4_ = 0;\n  auVar2._8_8_ = in_RAX;\n  return auVar2;\n}\n\n", 
            "called": [
                "non_numeric_forward"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103bf6", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00103bf6"
        }, 
        "FUN_00102450": {
            "renaming": {}, 
            "code": "\nvoid FUN_00102450(void)\n\n{\n  long lVar1;\n  char *pcVar2;\n  long *__ptr;\n  FILE *unaff_RBX;\n  long *plVar3;\n  int in_stack_00000008;\n  \n  pcVar2 = (char *)dcgettext(0,\"Supported targets:\",5);\n  fprintf(unaff_RBX,pcVar2);\n  __ptr = (long *)bfd_target_list();\n  plVar3 = __ptr;\n  while( true ) {\n    lVar1 = *plVar3;\n    plVar3 = plVar3 + 1;\n    if (lVar1 == 0) break;\n    fprintf(unaff_RBX,\" %s\");\n  }\n  fputc(10,unaff_RBX);\n  free(__ptr);\n  if (in_stack_00000008 == 0) {\n    pcVar2 = (char *)dcgettext(0,\"Report bugs to %s.\\n\",5);\n    fprintf(unaff_RBX,pcVar2,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  exit(in_stack_00000008);\n}\n\n", 
            "called": [
                "fprintf", 
                "dcgettext"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102450", 
            "calling": [
                "usage"
            ], 
            "imported": false, 
            "current_name": "FUN_00102450"
        }, 
        "FUN_00102210": {
            "renaming": {}, 
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n", 
            "called": [
                "fputc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102210", 
            "calling": [
                "list_matching_formats", 
                "usage"
            ], 
            "imported": false, 
            "current_name": "FUN_00102210"
        }, 
        "FUN_00102050": {
            "renaming": {}, 
            "code": "\n\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = putchar(__c);\n  return iVar1;\n}\n\n", 
            "called": [
                "putchar"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102050", 
            "calling": [
                "print_symbol_info_bsd.cold", 
                "print_symbol_info_posix"
            ], 
            "imported": false, 
            "current_name": "FUN_00102050"
        }, 
        "FUN_00102c19": {
            "renaming": {}, 
            "code": "\nvoid FUN_00102c19(void)\n\n{\n  char *pcVar1;\n  code *pcVar2;\n  char cVar3;\n  int iVar4;\n  uint uVar5;\n  undefined8 uVar6;\n  long lVar7;\n  undefined8 *puVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  undefined8 *unaff_RBX;\n  undefined8 *__ptr;\n  undefined8 *unaff_RBP;\n  undefined8 *puVar11;\n  undefined8 *puVar12;\n  undefined8 *in_R8;\n  undefined8 *puVar13;\n  undefined8 *in_R9;\n  undefined8 *puVar14;\n  undefined8 *unaff_R12;\n  undefined8 *puVar15;\n  undefined8 *unaff_R13;\n  undefined8 *unaff_R14;\n  undefined8 *unaff_R15;\n  bool bVar16;\n  byte bVar17;\n  ulong unaff_retaddr;\n  ulong uVar18;\n  undefined8 in_stack_00000008;\n  undefined8 *in_stack_00000010;\n  undefined8 *in_stack_00000018;\n  undefined8 in_stack_00000038;\n  void *in_stack_00000040;\n  undefined8 *in_stack_00000048;\n  \n  bVar17 = 0;\n  if (allow_special_symbols == 0) goto LAB_001049c3;\nLAB_00104a7b:\n  do {\n    if (unaff_RBX != unaff_R13) {\n      if (unaff_R14 == (undefined8 *)0x8) {\n        *unaff_RBX = *unaff_R13;\n        FUN_001049c0();\n        return;\n      }\n      for (; unaff_R14 != (undefined8 *)0x0; unaff_R14 = (undefined8 *)((long)unaff_R14 + -1)) {\n        *(undefined *)unaff_RBX = *(undefined *)unaff_R13;\n        unaff_R13 = (undefined8 *)((long)unaff_R13 + (ulong)bVar17 * -2 + 1);\n        unaff_RBX = (undefined8 *)((long)unaff_RBX + (ulong)bVar17 * -2 + 1);\n      }\n      FUN_001049c0();\n      return;\n    }\n    unaff_RBX = (undefined8 *)((long)unaff_RBX + (long)unaff_R14);\nLAB_001049c3:\n    do {\n      do {\n        unaff_R13 = (undefined8 *)((long)unaff_R13 + (long)unaff_R14);\n        puVar15 = unaff_R12;\n        puVar12 = unaff_RBP;\n        if (unaff_R12 <= unaff_R13) goto LAB_00104b15;\nLAB_001049cf:\n        puVar8 = (undefined8 *)\n                 (**(code **)(unaff_RBP[1] + 0x270))\n                           (unaff_RBP,unaff_retaddr & 0xffffffff,unaff_R13,unaff_R15);\n        puVar11 = unaff_RBP;\n        puVar12 = unaff_R13;\n        puVar15 = unaff_R15;\n        if (puVar8 == (undefined8 *)0x0) goto LAB_00102eb0;\n        pcVar1 = (char *)puVar8[1];\n        if (((pcVar1 == (char *)0x0) || (*pcVar1 != '_')) || (pcVar1[1] != '_')) {\nLAB_00104a03:\n          if (undefined_only == 0) goto LAB_00104a11;\nLAB_00104ae2:\n          uVar5 = (uint)(puVar8[4] == 0x10c2a8);\nLAB_00104af9:\n          if (uVar5 != 0) goto LAB_00104a2d;\n          unaff_R13 = (undefined8 *)((long)unaff_R13 + (long)unaff_R14);\n          puVar15 = unaff_R12;\n          puVar12 = unaff_RBP;\n          if (unaff_R12 <= unaff_R13) {\nLAB_00104b15:\n            unaff_RBX = (undefined8 *)((long)unaff_RBX - (long)in_stack_00000018);\n            if (unaff_R14 == (undefined8 *)0x8) {\n              lVar9 = puVar12[1];\n              puVar11 = (undefined8 *)((long)unaff_RBX + 7);\n              if (-1 < (long)unaff_RBX) {\n                puVar11 = unaff_RBX;\n              }\n              in_R8 = (undefined8 *)(ulong)no_sort;\n              pcVar2 = *(code **)(lVar9 + 0x208);\n              puVar11 = (undefined8 *)((long)puVar11 >> 3);\n            }\n            else {\n              puVar11 = (undefined8 *)((long)unaff_RBX / (long)unaff_R14);\n              lVar9 = puVar12[1];\n              pcVar2 = *(code **)(lVar9 + 0x208);\n            }\n            unaff_RBP = puVar12;\n            if (no_sort == 0) {\n              sort_dynamic = dynamic != 0;\n              sort_bfd = puVar12;\n              sort_x = (undefined8 *)(*pcVar2)(puVar12);\n              sort_y = (undefined8 *)(**(code **)(puVar12[1] + 0x208))(puVar12);\n              unaff_RBX = in_stack_00000048;\n              if ((sort_x == (undefined8 *)0x0) || (sort_y == (undefined8 *)0x0)) {\n                bfd_fatal(*puVar12);\n                __ptr = unaff_R15;\n                goto LAB_00102d8e;\n              }\n              unaff_R12 = (undefined8 *)(ulong)in_stack_00000038._4_4_;\n              if (sort_by_size != 0) {\n                uVar18 = (ulong)(dynamic != 0);\n                qsort(in_stack_00000048,(size_t)puVar11,(size_t)unaff_R12,size_forward1);\n                puVar15 = (undefined8 *)xmalloc((long)puVar11 << 4);\n                puVar13 = sort_x;\n                unaff_RBP = sort_y;\n                unaff_R14 = (undefined8 *)((long)puVar11 * (long)unaff_R12 + (long)unaff_RBX);\n                puVar8 = sort_x;\n                in_R9 = sort_y;\n                if (unaff_R14 <= unaff_RBX) goto LAB_00102ec2;\n                puVar11 = (undefined8 *)\n                          (**(code **)(puVar12[1] + 0x270))(puVar12,uVar18 & 0xffffffff,unaff_RBX);\n                __ptr = unaff_RBX;\n                in_R8 = unaff_R12;\n                in_stack_00000010 = puVar15;\n                if (puVar11 == (undefined8 *)0x0) goto LAB_00102eb9;\n                goto LAB_00104e35;\n              }\n              qsort(in_stack_00000048,(size_t)puVar11,(size_t)unaff_R12,\n                    *(__compar_fn_t *)\n                     (sorters + ((long)reverse_sort + (long)sort_numerically * 2) * 8));\n              lVar9 = puVar12[1];\n            }\n            __ptr = (undefined8 *)0x0;\n            do {\n              puVar12 = in_stack_00000048;\n              puVar8 = (undefined8 *)(ulong)sort_by_size;\n              unaff_R14 = (undefined8 *)(ulong)(dynamic != 0);\n              if (sort_by_size != 0) {\n                puVar15 = (undefined8 *)(**(code **)(lVar9 + 0x208))(unaff_RBP);\n                if (puVar15 == (undefined8 *)0x0) goto LAB_00102ed2;\n                unaff_RBX = __ptr + (long)puVar11 * 2;\n                puVar11 = __ptr;\n                do {\n                  if (unaff_RBX <= puVar11) {\nLAB_00104c75:\n                    if (in_stack_00000040 == (void *)0x0) {\n                      free(in_stack_00000048);\n                      free(__ptr);\n                      return;\n                    }\n                    free(in_stack_00000040);\n                    free(in_stack_00000048);\n                    free(__ptr);\n                    return;\n                  }\n                  puVar8 = puVar15;\n                  lVar9 = (**(code **)(unaff_RBP[1] + 0x270))(unaff_RBP,unaff_R14,*puVar11);\n                  if (lVar9 == 0) {\n                    bfd_fatal(*unaff_RBP,0);\nLAB_00102ed2:\n                    puVar12 = (undefined8 *)*unaff_RBP;\n                    bfd_fatal();\n                    puVar13 = in_R8;\n                    puVar14 = in_R9;\n                    goto LAB_00102edb;\n                  }\n                  puVar12 = puVar11 + 1;\n                  puVar11 = puVar11 + 2;\n                  print_symbol(unaff_RBP,lVar9,*puVar12,in_stack_00000008);\n                } while( true );\n              }\n              unaff_R12 = (undefined8 *)(ulong)in_stack_00000038._4_4_;\n              unaff_R15 = (undefined8 *)(**(code **)(lVar9 + 0x208))(unaff_RBP);\n              if (unaff_R15 == (undefined8 *)0x0) {\n                bfd_fatal(*unaff_RBP);\n                puVar12 = unaff_R12;\n                if (dynamic == 0) {\n                  lVar9 = (**(code **)(unaff_RBP[1] + 0x350))(unaff_RBP);\n                  puVar11 = in_stack_00000048;\n                  puVar15 = unaff_R12;\n                  if (lVar9 < 1) {\n                    puVar8 = (undefined8 *)0x0;\n                    unaff_RBX = (undefined8 *)0x0;\n                  }\n                  else {\nLAB_00102d8e:\n                    unaff_RBX = (undefined8 *)xmalloc();\n                    puVar8 = (undefined8 *)(**(code **)(unaff_RBP[1] + 0x358))(unaff_RBP,unaff_RBX);\n                    puVar12 = puVar15;\n                    if ((long)puVar8 < 0) {\n                      puVar12 = (undefined8 *)*unaff_RBP;\n                      puVar11 = (undefined8 *)bfd_fatal(puVar12,puVar15);\n                      goto LAB_00102dbe;\n                    }\n                  }\n                }\n                else {\n                  puVar8 = unaff_R12;\n                  unaff_RBX = in_stack_00000048;\n                  puVar11 = (undefined8 *)0x0;\n                  puVar15 = (undefined8 *)0x0;\n                }\n                in_R9 = &stack0x00000040;\n                in_R8 = unaff_RBX;\n                lVar9 = (**(code **)(unaff_RBP[1] + 0x360))(unaff_RBP,puVar15,puVar11,puVar8);\n                unaff_R12 = puVar12;\n                if (0 < lVar9) {\n                  unaff_R12 = (undefined8 *)((long)puVar12 + lVar9);\n                  in_stack_00000048 = (undefined8 *)xrealloc(in_stack_00000048);\n                  lVar7 = 0;\n                  do {\n                    in_stack_00000048[(long)((long)puVar12 + lVar7)] =\n                         (void *)(lVar7 * 0x30 + (long)in_stack_00000040);\n                    lVar7 = lVar7 + 1;\n                  } while (lVar9 != lVar7);\n                  in_stack_00000048[(long)((long)puVar12 + lVar9)] = 0;\n                }\n                if ((dynamic == 0) && (unaff_RBX != (undefined8 *)0x0)) {\n                  free(unaff_RBX);\n                }\n                if ((*(byte *)((long)unaff_RBP + 0x4a) & 0x10) != 0) {\n                  unaff_RBX = (undefined8 *)*unaff_RBP;\n                  report_plugin_err = '\\0';\n                  uVar6 = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n                  non_fatal(uVar6);\n                }\n                unaff_R14 = (undefined8 *)(ulong)in_stack_00000038._4_4_;\n                bVar16 = dynamic != 0;\n                puVar11 = (undefined8 *)(ulong)bVar16;\n                puVar8 = in_stack_00000048;\n                in_stack_00000018 = in_stack_00000048;\n                unaff_R15 = (undefined8 *)(**(code **)(unaff_RBP[1] + 0x208))(unaff_RBP);\n                if (unaff_R15 != (undefined8 *)0x0) goto code_r0x00104992;\n              }\n              else {\n                puVar11 = (undefined8 *)((long)puVar11 * (long)unaff_R12 + (long)puVar12);\n                unaff_RBX = puVar12;\n                while( true ) {\n                  if (puVar11 <= unaff_RBX) goto LAB_00104c75;\n                  puVar8 = unaff_R15;\n                  lVar9 = (**(code **)(unaff_RBP[1] + 0x270))(unaff_RBP,unaff_R14,unaff_RBX);\n                  if (lVar9 == 0) break;\n                  unaff_RBX = (undefined8 *)((long)unaff_RBX + (long)unaff_R12);\n                  print_symbol(unaff_RBP,lVar9,0,in_stack_00000008);\n                }\n                bfd_fatal(*unaff_RBP,0);\n              }\n              bfd_fatal(*unaff_RBP);\n              puVar12 = unaff_RBP;\n              puVar15 = unaff_R15;\nLAB_00102eb0:\n              bfd_fatal(*puVar11);\nLAB_00102eb9:\n              bfd_fatal(*puVar12);\nLAB_00102ec2:\n              puVar11 = (undefined8 *)0x0;\n              __ptr = unaff_RBX;\n              in_R8 = unaff_R12;\n              puVar13 = puVar8;\n              unaff_RBP = in_R9;\n              in_stack_00000010 = puVar15;\nLAB_00104e35:\n              while (in_R9 = puVar13, __ptr < unaff_R14) {\n                unaff_RBX = (undefined8 *)((long)__ptr + (long)in_R8);\n                if (unaff_RBX < unaff_R14) {\n                  puVar8 = unaff_RBP;\n                  puVar13 = in_R8;\n                  puVar14 = in_R9;\n                  puVar10 = (undefined8 *)(**(code **)(puVar12[1] + 0x270))();\n                  if (puVar10 == (undefined8 *)0x0) {\nLAB_00102edb:\n                    in_R9 = puVar14;\n                    in_R8 = puVar13;\n                    puVar12 = (undefined8 *)*puVar12;\n                    puVar10 = (undefined8 *)bfd_fatal();\n                  }\n                  else {\n                    puVar8 = (undefined8 *)puVar11[4];\n                    if ((*(uint *)(puVar11 + 3) & 0x200100) == 0) goto LAB_00104e95;\n                  }\n                  lVar9 = puVar11[2];\nLAB_00102ee7:\n                  if (puVar8 == (undefined8 *)puVar10[4]) {\n                    lVar9 = puVar10[2] - lVar9;\n                    puVar13 = unaff_RBP;\n                    puVar14 = __ptr;\n                    goto LAB_00104ea7;\n                  }\nLAB_00102dc4:\n                  lVar9 = puVar8[8] - lVar9;\n                  puVar13 = unaff_RBP;\n                  puVar14 = __ptr;\n                }\n                else {\n                  puVar8 = (undefined8 *)puVar11[4];\n                  if ((*(uint *)(puVar11 + 3) & 0x200100) != 0) {\nLAB_00102dbe:\n                    lVar9 = puVar11[2];\n                    puVar10 = (undefined8 *)0x0;\n                    goto LAB_00102dc4;\n                  }\n                  puVar10 = (undefined8 *)0x0;\nLAB_00104e95:\n                  puVar13 = unaff_RBP;\n                  puVar14 = __ptr;\n                  if (*(int *)(puVar12[1] + 8) == 5) {\n                    lVar9 = puVar11[7];\n                  }\n                  else {\n                    lVar9 = puVar11[2];\n                    if ((*(byte *)((long)puVar8 + 0x25) & 0x10) == 0) {\n                      if (unaff_RBX < unaff_R14) goto LAB_00102ee7;\n                      goto LAB_00102dc4;\n                    }\n                  }\n                }\nLAB_00104ea7:\n                puVar11 = puVar10;\n                __ptr = unaff_RBX;\n                unaff_RBP = in_R9;\n                if (lVar9 != 0) {\n                  *puVar15 = puVar14;\n                  puVar15[1] = lVar9;\n                  puVar15 = puVar15 + 2;\n                }\n              }\n              puVar11 = (undefined8 *)((long)puVar15 - (long)in_stack_00000010 >> 4);\n              qsort(in_stack_00000010,(size_t)puVar11,0x10,size_forward2);\n              lVar9 = puVar12[1];\n              unaff_RBX = __ptr;\n              unaff_RBP = puVar12;\n              __ptr = in_stack_00000010;\n            } while( true );\n          }\n          goto LAB_001049cf;\n        }\n        iVar4 = strcmp(pcVar1 + (pcVar1[2] == '_'),\"__gnu_lto_slim\");\n        in_stack_00000010 = puVar8;\n        if (iVar4 == 0) {\n          if (report_plugin_err != '\\0') {\n            in_stack_00000010 = (undefined8 *)*unaff_RBP;\n            report_plugin_err = '\\0';\n            uVar6 = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n            non_fatal(uVar6,in_stack_00000010);\n          }\n          goto LAB_00104a03;\n        }\n        if (undefined_only != 0) goto LAB_00104ae2;\nLAB_00104a11:\n        if (external_only == 0) {\n          if (non_weak == 0) goto LAB_00104a2d;\n          uVar5 = (*(uint *)(puVar8 + 3) >> 7 ^ 1) & 1;\n          goto LAB_00104af9;\n        }\n        if ((((*(uint *)(puVar8 + 3) & 0x800082) == 0) && (puVar8[4] != 0x10c2a8)) &&\n           ((*(byte *)(puVar8[4] + 0x25) & 0x10) == 0)) goto LAB_001049c3;\nLAB_00104a2d:\n        if (print_debug_syms != 0) {\n          if (sort_by_size == 0) goto LAB_00104a53;\nFUN_00104d5b:\n          if ((puVar8[4] != 0x10c2a8) && (puVar8[4] != 0x10c3c0)) goto LAB_00104cba;\n          goto LAB_001049c3;\n        }\n      } while ((*(byte *)(puVar8 + 3) & 4) != 0);\n      if (sort_by_size != 0) goto FUN_00104d5b;\nLAB_00104a53:\n      in_R9 = (undefined8 *)(ulong)defined_only;\n      if (defined_only == 0) {\n        cVar3 = (**(code **)(unaff_RBP[1] + 0x230))(unaff_RBP);\n        if (cVar3 != '\\0') {\n          FUN_00102c19();\n          return;\n        }\n        goto LAB_00104a7b;\n      }\n    } while (puVar8[4] == 0x10c2a8);\nLAB_00104cba:\n    cVar3 = (**(code **)(unaff_RBP[1] + 0x230))(unaff_RBP);\n    if (cVar3 != '\\0') {\n      FUN_00102c19();\n      return;\n    }\n  } while( true );\ncode_r0x00104992:\n  puVar15 = (undefined8 *)((long)unaff_R12 * (long)unaff_R14);\n  unaff_R12 = (undefined8 *)((long)in_stack_00000018 + (long)puVar15);\n  unaff_RBX = in_stack_00000018;\n  puVar12 = unaff_RBP;\n  if (in_stack_00000018 < unaff_R12) goto code_r0x001049aa;\n  goto LAB_00104b15;\ncode_r0x001049aa:\n  unaff_retaddr = (ulong)bVar16;\n  unaff_R13 = in_stack_00000018;\n  goto LAB_001049cf;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102c19", 
            "calling": [
                "FUN_00104d5b"
            ], 
            "imported": false, 
            "current_name": "FUN_00102c19"
        }, 
        "FUN_00106530": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_00106530(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  long lVar3;\n  undefined8 in_R10;\n  \n  bfd_nonfatal();\n  lVar3 = 1;\n  xexit();\n  iVar1 = bfd_get_error();\n  if (iVar1 == 0) {\n    uVar2 = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    uVar2 = bfd_errmsg(iVar1);\n  }\n  fflush(_stdout);\n  if (lVar3 != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",program_name,lVar3,uVar2,in_R10);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",program_name,uVar2,in_R10);\n  return;\n}\n\n", 
            "called": [
                "xexit", 
                "bfd_nonfatal"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00106530", 
            "calling": [
                "FUN_00103463", 
                "non_numeric_forward.cold", 
                "get_relocs", 
                "size_forward1", 
                "display_rel_file", 
                "FUN_00104d5b", 
                "print_symbol", 
                "display_file", 
                "numeric_forward.cold"
            ], 
            "imported": false, 
            "current_name": "FUN_00106530"
        }, 
        "FUN_00105560": {
            "renaming": {}, 
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00105584) */\n/* WARNING: Removing unreachable block (ram,0x00105590) */\n\nvoid FUN_00105560(void)\n\n{\n  return;\n}\n\n", 
            "called": [
                "_ITM_registerTMCloneTable"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00105560", 
            "calling": [
                "frame_dummy"
            ], 
            "imported": false, 
            "current_name": "FUN_00105560"
        }, 
        "FUN_0010268b": {
            "renaming": {}, 
            "code": "\nvoid FUN_0010268b(void)\n\n{\n  undefined8 *puVar1;\n  byte bVar2;\n  byte bVar3;\n  int iVar4;\n  size_t sVar5;\n  undefined8 *puVar6;\n  char *pcVar7;\n  ulong uVar8;\n  undefined8 uVar9;\n  undefined *puVar10;\n  undefined8 *puVar11;\n  long unaff_RBP;\n  undefined8 *puVar12;\n  undefined *unaff_R12;\n  undefined8 *unaff_R13;\n  long lVar13;\n  uint uVar14;\n  char *unaff_R14;\n  long unaff_R15;\n  byte bVar15;\n  char *__s;\n  undefined8 in_stack_00000038;\n  \n  bVar15 = 0;\n  puVar12 = unaff_R13;\n  if (unicode_display != 0) {\n    do {\n      bVar2 = *(byte *)puVar12;\n      if (bVar2 == 0) goto LAB_0010485e;\n    } while ((((&_sch_istable)[(ulong)bVar2 * 2] & 2) == 0) &&\n            (puVar12 = (undefined8 *)((long)puVar12 + 1), bVar2 < 0xc0));\n    sVar5 = strlen((char *)unaff_R13);\n    puVar12 = buffer_8;\n    puVar11 = unaff_R13;\n    if (buffer_len_9 < sVar5 * 9) {\n      free(buffer_8);\n      sVar5 = strlen((char *)unaff_R13);\n      buffer_len_9 = sVar5 * 9;\n      buffer_8 = (undefined8 *)xmalloc(buffer_len_9 + 1);\n      puVar12 = buffer_8;\n    }\n    while( true ) {\n      unaff_R13 = buffer_8;\n      bVar2 = *(byte *)puVar11;\n      puVar1 = (undefined8 *)((long)puVar11 + 1);\n      if (bVar2 == 0) break;\n      if (((&_sch_istable)[(ulong)bVar2 * 2] & 2) == 0) {\n        if ((bVar2 < 0xc0) || (unicode_display == 0)) {\n          *(byte *)puVar12 = bVar2;\n          puVar12 = (undefined8 *)((long)puVar12 + 1);\n          puVar11 = puVar1;\n        }\n        else {\n          bVar3 = *(byte *)((long)puVar11 + 1);\n          if ((bVar3 & 0xc0) == 0x80) {\n            puVar6 = puVar12;\n            if ((bVar2 & 0x20) == 0) {\n              switch(unicode_display) {\n              case 1:\n                uVar14 = 2;\n                goto LAB_00102a62;\n              case 3:\n              case 5:\n                lVar13 = 2;\n                goto LAB_00102917;\n              case 4:\n                iVar4 = isatty(1);\n                if (iVar4 == 0) {\n                  bVar3 = *(byte *)((long)puVar11 + 1);\n                }\n                else {\n                  *(undefined *)(puVar12 + 1) = 0;\n                  *puVar12 = 0x6d37343b31335b1b;\n                  bVar3 = *(byte *)((long)puVar11 + 1);\n                  puVar6 = puVar12 + 1;\n                }\n              case 2:\n                uVar14 = 2;\n                sprintf((char *)puVar6,\"\\\\u%02x%02x\",(ulong)((int)(uint)*(byte *)puVar11 >> 2 & 7),\n                        (ulong)((*(byte *)puVar11 & 3) << 6 | bVar3 & 0x3f));\n                puVar6 = (undefined8 *)((long)puVar6 + 6);\n                goto LAB_00102a27;\n              default:\n                uVar14 = 2;\n              }\n            }\n            else {\n              bVar3 = *(byte *)((long)puVar11 + 2);\n              if ((bVar3 & 0xc0) != 0x80) goto LAB_0010285d;\n              if ((bVar2 & 0x10) == 0) {\n                switch(unicode_display) {\n                case 1:\n                  uVar14 = 3;\nLAB_00102a62:\n                  for (uVar8 = (ulong)uVar14; uVar8 != 0; uVar8 = uVar8 - 1) {\n                    *(undefined *)puVar6 = *(undefined *)puVar11;\n                    puVar11 = (undefined8 *)((long)puVar11 + (ulong)bVar15 * -2 + 1);\n                    puVar6 = (undefined8 *)((long)puVar6 + (ulong)bVar15 * -2 + 1);\n                  }\n                  break;\n                case 3:\n                case 5:\n                  lVar13 = 3;\nLAB_00102917:\n                  uVar9 = 0x7b;\n                  if (unicode_display == 3) {\n                    uVar9 = 0x3c;\n                  }\n                  sprintf((char *)puVar12,\"%c\",uVar9);\n                  *(undefined *)((long)puVar12 + 3) = 0;\n                  puVar6 = (undefined8 *)(lVar13 + (long)puVar11);\n                  *(undefined2 *)((long)puVar12 + 1) = 0x7830;\n                  pcVar7 = (char *)((long)puVar12 + 3);\n                  do {\n                    __s = pcVar7;\n                    bVar2 = *(byte *)puVar11;\n                    puVar11 = (undefined8 *)((long)puVar11 + 1);\n                    sprintf(__s,\"%02x\",(ulong)bVar2);\n                    pcVar7 = __s + 2;\n                  } while (puVar11 != puVar6);\n                  uVar9 = 0x7d;\n                  if (unicode_display == 3) {\n                    uVar9 = 0x3e;\n                  }\n                  uVar14 = (uint)lVar13;\n                  sprintf(__s + 2,\"%c\",uVar9);\n                  puVar6 = (undefined8 *)(__s + 3);\n                  break;\n                case 4:\n                  iVar4 = isatty(1);\n                  if (iVar4 == 0) {\n                    bVar3 = *(byte *)((long)puVar11 + 2);\n                  }\n                  else {\n                    *(undefined *)(puVar12 + 1) = 0;\n                    *puVar12 = 0x6d37343b31335b1b;\n                    bVar3 = *(byte *)((long)puVar11 + 2);\n                    puVar6 = puVar12 + 1;\n                  }\n                case 2:\n                  uVar14 = 3;\n                  sprintf((char *)puVar6,\"\\\\u%02x%02x\",\n                          (ulong)((uint)(((ulong)*(byte *)puVar11 & 0xf) << 4) |\n                                 (int)(uint)*(byte *)((long)puVar11 + 1) >> 2 & 0xfU),\n                          (ulong)((*(byte *)((long)puVar11 + 1) & 3) << 6 | bVar3 & 0x3f));\n                  puVar6 = (undefined8 *)((long)puVar6 + 6);\nLAB_00102a27:\n                  if ((unicode_display == 4) && (iVar4 = isatty(1), iVar4 != 0)) {\n                    *(undefined4 *)puVar6 = 0x6d305b1b;\n                    puVar6 = (undefined8 *)((long)puVar6 + 4);\n                    *(undefined *)puVar6 = 0;\n                  }\n                  break;\n                default:\n                  uVar14 = 3;\n                }\n              }\n              else {\n                if ((*(byte *)((long)puVar11 + 3) & 0xc0) != 0x80) goto LAB_0010285d;\n                switch(unicode_display) {\n                case 1:\n                  uVar14 = 4;\n                  goto LAB_00102a62;\n                case 3:\n                case 5:\n                  lVar13 = 4;\n                  goto LAB_00102917;\n                case 4:\n                  iVar4 = isatty(1);\n                  if (iVar4 != 0) {\n                    *(undefined *)(puVar12 + 1) = 0;\n                    *puVar12 = 0x6d37343b31335b1b;\n                    puVar6 = puVar12 + 1;\n                  }\n                case 2:\n                  uVar14 = 4;\n                  iVar4 = sprintf((char *)puVar6,\"\\\\u%02x%02x%02x\",\n                                  (ulong)((*(byte *)puVar11 & 7) << 6 |\n                                         (int)(uint)*(byte *)((long)puVar11 + 1) >> 2 & 0xfU),\n                                  (ulong)((*(byte *)((long)puVar11 + 1) & 3) << 6 |\n                                         (int)(uint)*(byte *)((long)puVar11 + 2) >> 2 & 0xfU));\n                  puVar6 = (undefined8 *)((long)puVar6 + (long)iVar4);\n                  goto LAB_00102a27;\n                default:\n                  uVar14 = 4;\n                }\n              }\n            }\n            uVar8 = (ulong)(uint)((int)puVar6 - (int)puVar12);\n          }\n          else {\nLAB_0010285d:\n            *(byte *)puVar12 = bVar2;\n            uVar14 = 1;\n            uVar8 = 1;\n          }\n          puVar12 = (undefined8 *)((long)puVar12 + uVar8);\n          puVar11 = (undefined8 *)((long)puVar1 + (ulong)(uVar14 - 1));\n        }\n      }\n      else {\n        *(undefined *)puVar12 = 0x5e;\n        *(byte *)((long)puVar12 + 1) = bVar2 + 0x40;\n        puVar12 = (undefined8 *)((long)puVar12 + 2);\n        puVar11 = puVar1;\n      }\n    }\n    *(undefined *)puVar12 = 0;\n  }\nLAB_0010485e:\n  puVar12 = (undefined8 *)0x0;\n  if ((((unaff_RBP != 0) && (*(long *)(unaff_RBP + 0x10) != 0)) && (with_symbol_versions != 0)) &&\n     ((pcVar7 = (char *)(**(code **)(*(long *)(unaff_R15 + 8) + 0x220))\n                                  (unaff_R15,*(long *)(unaff_RBP + 0x10),0,\n                                   (long)&stack0x00000038 + 7), pcVar7 != (char *)0x0 &&\n      (*pcVar7 != '\\0')))) {\n    puVar10 = &DAT_001071e0;\n    if ((in_stack_00000038._7_1_ == '\\0') &&\n       (*(long *)(*(long *)(unaff_RBP + 0x10) + 0x20) != 0x10c2a8)) {\n      puVar10 = &DAT_001071df;\n    }\n    puVar12 = (undefined8 *)reconcat(0,unaff_R13,puVar10,pcVar7,0);\n    unaff_R13 = puVar12;\n  }\n  printf(unaff_R14,unaff_R13);\n  if (unaff_R12 != (undefined *)0x0) {\n    *unaff_R12 = 0x40;\n  }\n  free(puVar12);\n  return;\n}\n\n", 
            "called": [
                "free", 
                "xmalloc", 
                "isatty", 
                "sprintf", 
                "strlen", 
                "FUN_001047d0"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x0010268b", 
            "calling": [
                "FUN_00102739"
            ], 
            "imported": false, 
            "current_name": "FUN_0010268b"
        }, 
        "FUN_001021a0": {
            "renaming": {}, 
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n", 
            "called": [
                "xrealloc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001021a0", 
            "calling": [
                "FUN_00104d5b", 
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_001021a0"
        }, 
        "FUN_001022c0": {
            "renaming": {}, 
            "code": "\n\n\nint strcoll(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcoll(__s1,__s2);\n  return iVar1;\n}\n\n", 
            "called": [
                "strcoll"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001022c0", 
            "calling": [
                "non_numeric_forward"
            ], 
            "imported": false, 
            "current_name": "FUN_001022c0"
        }, 
        "FUN_00103bec": {
            "renaming": {}, 
            "code": "\nundefined  [16] FUN_00103bec(void)\n\n{\n  int iVar1;\n  undefined8 in_RAX;\n  undefined auVar2 [16];\n  \n  iVar1 = numeric_forward();\n  auVar2._0_4_ = -iVar1;\n  auVar2._4_4_ = 0;\n  auVar2._8_8_ = in_RAX;\n  return auVar2;\n}\n\n", 
            "called": [
                "numeric_forward"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103bec", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00103bec"
        }, 
        "FUN_001063a0": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_001063a0(char *param_1,__gnuc_va_list param_2)\n\n{\n  fflush(_stdout);\n  fprintf(_stderr,\"%s: \",program_name);\n  vfprintf(_stderr,param_1,param_2);\n  putc(10,_stderr);\n  return;\n}\n\n", 
            "called": [
                "vfprintf", 
                "fflush", 
                "fprintf", 
                "putc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001063a0", 
            "calling": [
                "fatal", 
                "non_fatal"
            ], 
            "imported": false, 
            "current_name": "FUN_001063a0"
        }, 
        "FUN_0010c208": {
            "renaming": {}, 
            "code": "\n\n\n\nint sprintf(char *__s,char *__format,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* sprintf@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c208", 
            "calling": [
                "sprintf"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c208"
        }, 
        "FUN_001023e0": {
            "renaming": {}, 
            "code": "\nvoid bfd_openr_next_archived_file(void)\n\n{\n  bfd_openr_next_archived_file();\n  return;\n}\n\n", 
            "called": [
                "bfd_openr_next_archived_file"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x001023e0", 
            "calling": [
                "display_file"
            ], 
            "imported": false, 
            "current_name": "FUN_001023e0"
        }, 
        "FUN_00102739": {
            "renaming": {}, 
            "code": "\nvoid FUN_00102739(void)\n\n{\n  undefined8 *puVar1;\n  byte bVar2;\n  byte bVar3;\n  int iVar4;\n  size_t sVar5;\n  char *pcVar6;\n  undefined8 *puVar7;\n  char *pcVar8;\n  undefined8 *__ptr;\n  ulong uVar9;\n  undefined8 uVar10;\n  undefined *puVar11;\n  long unaff_RBP;\n  undefined8 *puVar12;\n  undefined8 *unaff_R13;\n  long lVar13;\n  uint uVar14;\n  char *unaff_R14;\n  long unaff_R15;\n  byte bVar15;\n  char *__s;\n  undefined8 in_stack_00000038;\n  \n  bVar15 = 0;\n  puVar12 = unaff_R13;\n  if (*(int *)(*(long *)(unaff_R15 + 8) + 8) != 5) {\n    if (do_demangle != 0) {\n      pcVar6 = (char *)0x0;\n      goto LAB_0010482b;\n    }\n    pcVar6 = (char *)0x0;\n    if (unicode_display == 0) {\nLAB_00104794:\n      __ptr = (undefined8 *)0x0;\n    }\n    else {\n      __ptr = (undefined8 *)0x0;\n      if (unaff_R13 != (undefined8 *)0x0) goto LAB_0010269d;\n      __ptr = (undefined8 *)0x0;\n      unaff_R13 = (undefined8 *)0x1073a6;\n    }\n    goto joined_r0x00104799;\n  }\n  pcVar6 = strchr((char *)unaff_R13,0x40);\n  if (pcVar6 == (char *)0x0) {\n    if (do_demangle != 0) goto LAB_0010482b;\n    if (unicode_display == 0) {\n      if (unaff_RBP == 0) {\n        __ptr = (undefined8 *)0x0;\n        printf(unaff_R14);\n      }\n      else {\n        if (*(long *)(unaff_RBP + 0x10) != 0) {\n          FUN_001047d0();\n          return;\n        }\n        __ptr = (undefined8 *)0x0;\n        printf(unaff_R14);\n      }\n      goto LAB_001047ba;\n    }\nLAB_00102698:\n    puVar12 = unaff_R13;\n    __ptr = (undefined8 *)0x0;\nLAB_0010269d:\n    do {\n      bVar2 = *(byte *)puVar12;\n      if (bVar2 == 0) goto joined_r0x00104799;\n    } while ((((&_sch_istable)[(ulong)bVar2 * 2] & 2) == 0) &&\n            (puVar12 = (undefined8 *)((long)puVar12 + 1), bVar2 < 0xc0));\n    sVar5 = strlen((char *)unaff_R13);\n    puVar12 = buffer_8;\n    if (buffer_len_9 < sVar5 * 9) {\n      free(buffer_8);\n      sVar5 = strlen((char *)unaff_R13);\n      buffer_len_9 = sVar5 * 9;\n      buffer_8 = (undefined8 *)xmalloc(buffer_len_9 + 1);\n      puVar12 = buffer_8;\n    }\n    while( true ) {\n      puVar7 = buffer_8;\n      bVar2 = *(byte *)unaff_R13;\n      puVar1 = (undefined8 *)((long)unaff_R13 + 1);\n      if (bVar2 == 0) break;\n      if (((&_sch_istable)[(ulong)bVar2 * 2] & 2) == 0) {\n        if ((bVar2 < 0xc0) || (unicode_display == 0)) {\n          *(byte *)puVar12 = bVar2;\n          puVar12 = (undefined8 *)((long)puVar12 + 1);\n          unaff_R13 = puVar1;\n        }\n        else {\n          bVar3 = *(byte *)((long)unaff_R13 + 1);\n          if ((bVar3 & 0xc0) == 0x80) {\n            puVar7 = puVar12;\n            if ((bVar2 & 0x20) == 0) {\n              switch(unicode_display) {\n              case 1:\n                uVar14 = 2;\n                goto LAB_00102a62;\n              case 3:\n              case 5:\n                lVar13 = 2;\n                goto LAB_00102917;\n              case 4:\n                iVar4 = isatty(1);\n                if (iVar4 == 0) {\n                  bVar3 = *(byte *)((long)unaff_R13 + 1);\n                }\n                else {\n                  *(undefined *)(puVar12 + 1) = 0;\n                  *puVar12 = 0x6d37343b31335b1b;\n                  bVar3 = *(byte *)((long)unaff_R13 + 1);\n                  puVar7 = puVar12 + 1;\n                }\n              case 2:\n                uVar14 = 2;\n                sprintf((char *)puVar7,\"\\\\u%02x%02x\",(ulong)((int)(uint)*(byte *)unaff_R13 >> 2 & 7)\n                        ,(ulong)((*(byte *)unaff_R13 & 3) << 6 | bVar3 & 0x3f));\n                puVar7 = (undefined8 *)((long)puVar7 + 6);\n                goto LAB_00102a27;\n              default:\n                uVar14 = 2;\n              }\n            }\n            else {\n              bVar3 = *(byte *)((long)unaff_R13 + 2);\n              if ((bVar3 & 0xc0) != 0x80) goto LAB_0010285d;\n              if ((bVar2 & 0x10) == 0) {\n                switch(unicode_display) {\n                case 1:\n                  uVar14 = 3;\nLAB_00102a62:\n                  for (uVar9 = (ulong)uVar14; uVar9 != 0; uVar9 = uVar9 - 1) {\n                    *(undefined *)puVar7 = *(undefined *)unaff_R13;\n                    unaff_R13 = (undefined8 *)((long)unaff_R13 + (ulong)bVar15 * -2 + 1);\n                    puVar7 = (undefined8 *)((long)puVar7 + (ulong)bVar15 * -2 + 1);\n                  }\n                  break;\n                case 3:\n                case 5:\n                  lVar13 = 3;\nLAB_00102917:\n                  uVar10 = 0x7b;\n                  if (unicode_display == 3) {\n                    uVar10 = 0x3c;\n                  }\n                  sprintf((char *)puVar12,\"%c\",uVar10);\n                  *(undefined *)((long)puVar12 + 3) = 0;\n                  puVar7 = (undefined8 *)(lVar13 + (long)unaff_R13);\n                  *(undefined2 *)((long)puVar12 + 1) = 0x7830;\n                  pcVar8 = (char *)((long)puVar12 + 3);\n                  do {\n                    __s = pcVar8;\n                    bVar2 = *(byte *)unaff_R13;\n                    unaff_R13 = (undefined8 *)((long)unaff_R13 + 1);\n                    sprintf(__s,\"%02x\",(ulong)bVar2);\n                    pcVar8 = __s + 2;\n                  } while (unaff_R13 != puVar7);\n                  uVar10 = 0x7d;\n                  if (unicode_display == 3) {\n                    uVar10 = 0x3e;\n                  }\n                  uVar14 = (uint)lVar13;\n                  sprintf(__s + 2,\"%c\",uVar10);\n                  puVar7 = (undefined8 *)(__s + 3);\n                  break;\n                case 4:\n                  iVar4 = isatty(1);\n                  if (iVar4 == 0) {\n                    bVar3 = *(byte *)((long)unaff_R13 + 2);\n                  }\n                  else {\n                    *(undefined *)(puVar12 + 1) = 0;\n                    *puVar12 = 0x6d37343b31335b1b;\n                    bVar3 = *(byte *)((long)unaff_R13 + 2);\n                    puVar7 = puVar12 + 1;\n                  }\n                case 2:\n                  uVar14 = 3;\n                  sprintf((char *)puVar7,\"\\\\u%02x%02x\",\n                          (ulong)((uint)(((ulong)*(byte *)unaff_R13 & 0xf) << 4) |\n                                 (int)(uint)*(byte *)((long)unaff_R13 + 1) >> 2 & 0xfU),\n                          (ulong)((*(byte *)((long)unaff_R13 + 1) & 3) << 6 | bVar3 & 0x3f));\n                  puVar7 = (undefined8 *)((long)puVar7 + 6);\nLAB_00102a27:\n                  if ((unicode_display == 4) && (iVar4 = isatty(1), iVar4 != 0)) {\n                    *(undefined4 *)puVar7 = 0x6d305b1b;\n                    puVar7 = (undefined8 *)((long)puVar7 + 4);\n                    *(undefined *)puVar7 = 0;\n                  }\n                  break;\n                default:\n                  uVar14 = 3;\n                }\n              }\n              else {\n                if ((*(byte *)((long)unaff_R13 + 3) & 0xc0) != 0x80) goto LAB_0010285d;\n                switch(unicode_display) {\n                case 1:\n                  uVar14 = 4;\n                  goto LAB_00102a62;\n                case 3:\n                case 5:\n                  lVar13 = 4;\n                  goto LAB_00102917;\n                case 4:\n                  iVar4 = isatty(1);\n                  if (iVar4 != 0) {\n                    *(undefined *)(puVar12 + 1) = 0;\n                    *puVar12 = 0x6d37343b31335b1b;\n                    puVar7 = puVar12 + 1;\n                  }\n                case 2:\n                  uVar14 = 4;\n                  iVar4 = sprintf((char *)puVar7,\"\\\\u%02x%02x%02x\",\n                                  (ulong)((*(byte *)unaff_R13 & 7) << 6 |\n                                         (int)(uint)*(byte *)((long)unaff_R13 + 1) >> 2 & 0xfU),\n                                  (ulong)((*(byte *)((long)unaff_R13 + 1) & 3) << 6 |\n                                         (int)(uint)*(byte *)((long)unaff_R13 + 2) >> 2 & 0xfU));\n                  puVar7 = (undefined8 *)((long)puVar7 + (long)iVar4);\n                  goto LAB_00102a27;\n                default:\n                  uVar14 = 4;\n                }\n              }\n            }\n            uVar9 = (ulong)(uint)((int)puVar7 - (int)puVar12);\n          }\n          else {\nLAB_0010285d:\n            *(byte *)puVar12 = bVar2;\n            uVar14 = 1;\n            uVar9 = 1;\n          }\n          puVar12 = (undefined8 *)((long)puVar12 + uVar9);\n          unaff_R13 = (undefined8 *)((long)puVar1 + (ulong)(uVar14 - 1));\n        }\n      }\n      else {\n        *(undefined *)puVar12 = 0x5e;\n        *(byte *)((long)puVar12 + 1) = bVar2 + 0x40;\n        puVar12 = (undefined8 *)((long)puVar12 + 2);\n        unaff_R13 = puVar1;\n      }\n    }\n    *(undefined *)puVar12 = 0;\n    unaff_R13 = puVar7;\n  }\n  else {\n    *pcVar6 = '\\0';\n    if (do_demangle == 0) {\n      if (unicode_display == 0) goto LAB_00104794;\n      __ptr = (undefined8 *)0x0;\n      goto LAB_0010269d;\n    }\nLAB_0010482b:\n    if ((*(char *)unaff_R13 == '\\0') ||\n       (puVar12 = (undefined8 *)bfd_demangle(), puVar12 == (undefined8 *)0x0)) {\n      if (unicode_display != 0) goto LAB_00102698;\n      __ptr = (undefined8 *)0x0;\n    }\n    else {\n      unaff_R13 = puVar12;\n      __ptr = puVar12;\n      if (unicode_display != 0) goto LAB_0010269d;\n    }\n  }\njoined_r0x00104799:\n  if ((((unaff_RBP != 0) && (*(long *)(unaff_RBP + 0x10) != 0)) && (with_symbol_versions != 0)) &&\n     ((pcVar8 = (char *)(**(code **)(*(long *)(unaff_R15 + 8) + 0x220))\n                                  (unaff_R15,*(long *)(unaff_RBP + 0x10),0,\n                                   (long)&stack0x00000038 + 7), pcVar8 != (char *)0x0 &&\n      (*pcVar8 != '\\0')))) {\n    puVar11 = &DAT_001071e0;\n    if ((in_stack_00000038._7_1_ == '\\0') &&\n       (*(long *)(*(long *)(unaff_RBP + 0x10) + 0x20) != 0x10c2a8)) {\n      puVar11 = &DAT_001071df;\n    }\n    __ptr = (undefined8 *)reconcat(__ptr,unaff_R13,puVar11,pcVar8,0);\n    unaff_R13 = __ptr;\n  }\n  printf(unaff_R14,unaff_R13);\n  if (pcVar6 != (char *)0x0) {\n    *pcVar6 = '@';\n  }\nLAB_001047ba:\n  free(__ptr);\n  return;\n}\n\n", 
            "called": [
                "bfd_demangle", 
                "strchr", 
                "printf", 
                "FUN_001047d0", 
                "print_symname.cold"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102739", 
            "calling": [
                "print_symname"
            ], 
            "imported": false, 
            "current_name": "FUN_00102739"
        }, 
        "FUN_00102060": {
            "renaming": {}, 
            "code": "\nvoid reconcat(void)\n\n{\n  reconcat();\n  return;\n}\n\n", 
            "called": [
                "reconcat"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102060", 
            "calling": [
                "FUN_001047d0"
            ], 
            "imported": false, 
            "current_name": "FUN_00102060"
        }, 
        "FUN_00102180": {
            "renaming": {}, 
            "code": "\n\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strchr(__s,__c);\n  return pcVar1;\n}\n\n", 
            "called": [
                "strchr"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102180", 
            "calling": [
                "FUN_00102739"
            ], 
            "imported": false, 
            "current_name": "FUN_00102180"
        }, 
        "FUN_00105050": {
            "renaming": {}, 
            "code": "\nulong FUN_00105050(undefined8 param_1,undefined8 param_2)\n\n{\n  char cVar1;\n  ulong uVar2;\n  char *__s;\n  char *__s_00;\n  long lVar3;\n  uint uVar4;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  char *pcVar8;\n  long lVar9;\n  long lVar10;\n  ulong uVar11;\n  ulong uVar12;\n  ulong uVar13;\n  ulong uVar14;\n  undefined8 uVar15;\n  long unaff_R13;\n  bool bVar16;\n  \n  lVar9 = (**(code **)(sort_bfd[1] + 0x270))(sort_bfd,sort_dynamic,param_1,sort_x);\n  uVar11 = (ulong)sort_dynamic;\n  lVar10 = (**(code **)(sort_bfd[1] + 0x270))(sort_bfd,uVar11,param_2,sort_y);\n  if ((lVar9 != 0) && (lVar10 != 0)) {\n    lVar3 = *(long *)(lVar10 + 0x20);\n    if (*(long *)(lVar9 + 0x20) == 0x10c2a8) {\n      uVar11 = 0xffffffff;\n      if (lVar3 == 0x10c2a8) {\nLAB_001050fa:\n        uVar11 = non_numeric_forward(param_1,param_2);\n        return uVar11;\n      }\n    }\n    else if (lVar3 == 0x10c2a8) {\n      uVar11 = 1;\n    }\n    else {\n      uVar13 = *(long *)(lVar9 + 0x10) + *(long *)(*(long *)(lVar9 + 0x20) + 0x30);\n      uVar11 = *(long *)(lVar10 + 0x10) + *(long *)(lVar3 + 0x30);\n      if (uVar13 == uVar11) goto LAB_001050fa;\n      uVar11 = (ulong)(-(uint)(uVar13 < uVar11) | 1);\n    }\n    return uVar11;\n  }\n  uVar15 = *sort_bfd;\n  bfd_fatal();\n  lVar9 = (**(code **)(sort_bfd[1] + 0x270))(sort_bfd,sort_dynamic,uVar15,sort_x);\n  lVar10 = (**(code **)(sort_bfd[1] + 0x270))(sort_bfd,sort_dynamic,uVar11,sort_y);\n  if ((lVar9 == 0) || (unaff_R13 = lVar10, lVar10 == 0)) {\n    lVar10 = bfd_fatal(*sort_bfd);\n  }\n  if ((*(long *)(lVar9 + 0x20) == 0x10c2a8) || (*(long *)(lVar10 + 0x20) == 0x10c2a8)) {\n                    \n    abort();\n  }\n  uVar13 = *(ulong *)(*(long *)(lVar9 + 0x20) + 0x30);\n  uVar2 = *(ulong *)(*(long *)(lVar10 + 0x20) + 0x30);\n  uVar14 = *(long *)(lVar9 + 0x10) + uVar13;\n  uVar12 = *(long *)(unaff_R13 + 0x10) + uVar2;\n  bVar16 = uVar14 < uVar12;\n  if ((uVar14 != uVar12) || (bVar16 = uVar13 < uVar2, uVar13 != uVar2)) {\n    return (ulong)(-(uint)bVar16 | 1);\n  }\n  __s = *(char **)(lVar9 + 8);\n  __s_00 = *(char **)(unaff_R13 + 8);\n  sVar5 = strlen(__s);\n  sVar6 = strlen(__s_00);\n  pcVar7 = strstr(__s,\"gnu_compiled\");\n  if (pcVar7 == (char *)0x0) {\n    pcVar8 = strstr(__s,\"gcc2_compiled\");\n    pcVar7 = strstr(__s_00,\"gnu_compiled\");\n    if ((pcVar7 == (char *)0x0) && (pcVar7 = strstr(__s_00,\"gcc2_compiled\"), pcVar7 == (char *)0x0))\n    goto joined_r0x00103157;\n    if (pcVar8 == (char *)0x0) {\n      return 1;\n    }\n  }\n  else {\n    pcVar7 = strstr(__s_00,\"gnu_compiled\");\n    if (pcVar7 == (char *)0x0) {\n      pcVar8 = strstr(__s_00,\"gcc2_compiled\");\njoined_r0x00103157:\n      if (pcVar8 != (char *)0x0) {\n        return 0xffffffff;\n      }\n    }\n  }\n  uVar4 = *(uint *)(unaff_R13 + 0x18) & 0x4000;\n  if ((*(byte *)(lVar9 + 0x19) & 0x40) == 0) {\n    if ((sVar5 < 3) || (__s[sVar5 - 2] != '.')) {\n      if (uVar4 != 0) {\n        return 1;\n      }\n      if ((sVar6 < 3) || (__s_00[sVar6 - 2] != '.')) goto LAB_00103202;\n      bVar16 = false;\n      goto LAB_001031e7;\n    }\n    cVar1 = __s[sVar5 - 1];\n    bVar16 = cVar1 == 'o' || cVar1 == 'a';\n    if (uVar4 == 0) {\n      if ((sVar6 < 3) || (__s_00[sVar6 - 2] != '.')) {\n        if (cVar1 == 'o' || cVar1 == 'a') {\n          return 0xffffffff;\n        }\n        goto LAB_00103202;\n      }\n      goto LAB_001031e7;\n    }\n  }\n  else {\n    if (uVar4 != 0) goto LAB_00103202;\n    if (sVar6 < 3) {\n      return 0xffffffff;\n    }\n    if (__s_00[sVar6 - 2] != '.') {\n      return 0xffffffff;\n    }\n    bVar16 = true;\nLAB_001031e7:\n    if ((__s_00[sVar6 - 1] != 'o') && (__s_00[sVar6 - 1] != 'a')) {\n      if (bVar16) {\n        return 0xffffffff;\n      }\n      goto LAB_00103202;\n    }\n  }\n  if (!bVar16) {\n    return 1;\n  }\nLAB_00103202:\n  uVar11 = non_numeric_forward(uVar15,uVar11);\n  return uVar11;\n}\n\n", 
            "called": [
                "non_numeric_forward", 
                "numeric_forward.cold"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00105050", 
            "calling": [
                "numeric_reverse"
            ], 
            "imported": false, 
            "current_name": "FUN_00105050"
        }, 
        "FUN_0010c168": {
            "renaming": {}, 
            "code": "\n\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcpy@GLIBC_2.14 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c168", 
            "calling": [
                "memcpy"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c168"
        }, 
        "FUN_001049c0": {
            "renaming": {}, 
            "code": "\nvoid FUN_001049c0(void)\n\n{\n  char *pcVar1;\n  code *pcVar2;\n  char cVar3;\n  int iVar4;\n  uint uVar5;\n  undefined8 uVar6;\n  long lVar7;\n  undefined8 *puVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  undefined8 *unaff_RBX;\n  undefined8 *__ptr;\n  undefined8 *unaff_RBP;\n  undefined8 *puVar11;\n  undefined8 *puVar12;\n  undefined8 *in_R8;\n  undefined8 *puVar13;\n  undefined8 *in_R9;\n  undefined8 *puVar14;\n  undefined8 *puVar15;\n  undefined8 *unaff_R12;\n  undefined8 *unaff_R13;\n  undefined8 *unaff_R14;\n  undefined8 *unaff_R15;\n  bool bVar16;\n  byte bVar17;\n  ulong unaff_retaddr;\n  ulong uVar18;\n  undefined8 in_stack_00000008;\n  undefined8 *in_stack_00000010;\n  undefined8 *in_stack_00000018;\n  undefined8 in_stack_00000038;\n  void *in_stack_00000040;\n  undefined8 *in_stack_00000048;\n  \n  bVar17 = 0;\n  do {\n    unaff_RBX = (undefined8 *)((long)unaff_RBX + (long)unaff_R14);\nLAB_001049c3:\n    do {\n      do {\n        unaff_R13 = (undefined8 *)((long)unaff_R13 + (long)unaff_R14);\n        puVar15 = unaff_R12;\n        puVar12 = unaff_RBP;\n        if (unaff_R12 <= unaff_R13) goto LAB_00104b15;\nLAB_001049cf:\n        puVar8 = (undefined8 *)\n                 (**(code **)(unaff_RBP[1] + 0x270))\n                           (unaff_RBP,unaff_retaddr & 0xffffffff,unaff_R13,unaff_R15);\n        puVar11 = unaff_RBP;\n        puVar12 = unaff_R13;\n        puVar15 = unaff_R15;\n        if (puVar8 == (undefined8 *)0x0) goto LAB_00102eb0;\n        pcVar1 = (char *)puVar8[1];\n        if (((pcVar1 == (char *)0x0) || (*pcVar1 != '_')) || (pcVar1[1] != '_')) {\nLAB_00104a03:\n          if (undefined_only == 0) goto LAB_00104a11;\nLAB_00104ae2:\n          uVar5 = (uint)(puVar8[4] == 0x10c2a8);\nLAB_00104af9:\n          if (uVar5 != 0) goto LAB_00104a2d;\n          unaff_R13 = (undefined8 *)((long)unaff_R13 + (long)unaff_R14);\n          puVar15 = unaff_R12;\n          puVar12 = unaff_RBP;\n          if (unaff_R12 <= unaff_R13) {\nLAB_00104b15:\n            unaff_RBX = (undefined8 *)((long)unaff_RBX - (long)in_stack_00000018);\n            if (unaff_R14 == (undefined8 *)0x8) {\n              lVar9 = puVar12[1];\n              puVar11 = (undefined8 *)((long)unaff_RBX + 7);\n              if (-1 < (long)unaff_RBX) {\n                puVar11 = unaff_RBX;\n              }\n              in_R8 = (undefined8 *)(ulong)no_sort;\n              pcVar2 = *(code **)(lVar9 + 0x208);\n              puVar11 = (undefined8 *)((long)puVar11 >> 3);\n            }\n            else {\n              puVar11 = (undefined8 *)((long)unaff_RBX / (long)unaff_R14);\n              lVar9 = puVar12[1];\n              pcVar2 = *(code **)(lVar9 + 0x208);\n            }\n            unaff_RBP = puVar12;\n            if (no_sort == 0) {\n              sort_dynamic = dynamic != 0;\n              sort_bfd = puVar12;\n              sort_x = (undefined8 *)(*pcVar2)(puVar12);\n              sort_y = (undefined8 *)(**(code **)(puVar12[1] + 0x208))(puVar12);\n              unaff_RBX = in_stack_00000048;\n              if ((sort_x == (undefined8 *)0x0) || (sort_y == (undefined8 *)0x0)) {\n                bfd_fatal(*puVar12);\n                __ptr = unaff_R15;\n                goto LAB_00102d8e;\n              }\n              unaff_R12 = (undefined8 *)(ulong)in_stack_00000038._4_4_;\n              if (sort_by_size != 0) {\n                uVar18 = (ulong)(dynamic != 0);\n                qsort(in_stack_00000048,(size_t)puVar11,(size_t)unaff_R12,size_forward1);\n                puVar15 = (undefined8 *)xmalloc((long)puVar11 << 4);\n                puVar13 = sort_x;\n                unaff_RBP = sort_y;\n                unaff_R14 = (undefined8 *)((long)puVar11 * (long)unaff_R12 + (long)unaff_RBX);\n                puVar8 = sort_x;\n                in_R9 = sort_y;\n                if (unaff_R14 <= unaff_RBX) goto LAB_00102ec2;\n                puVar11 = (undefined8 *)\n                          (**(code **)(puVar12[1] + 0x270))(puVar12,uVar18 & 0xffffffff,unaff_RBX);\n                __ptr = unaff_RBX;\n                in_R8 = unaff_R12;\n                in_stack_00000010 = puVar15;\n                if (puVar11 == (undefined8 *)0x0) goto LAB_00102eb9;\n                goto LAB_00104e35;\n              }\n              qsort(in_stack_00000048,(size_t)puVar11,(size_t)unaff_R12,\n                    *(__compar_fn_t *)\n                     (sorters + ((long)reverse_sort + (long)sort_numerically * 2) * 8));\n              lVar9 = puVar12[1];\n            }\n            __ptr = (undefined8 *)0x0;\n            do {\n              puVar12 = in_stack_00000048;\n              puVar8 = (undefined8 *)(ulong)sort_by_size;\n              unaff_R14 = (undefined8 *)(ulong)(dynamic != 0);\n              if (sort_by_size != 0) {\n                puVar15 = (undefined8 *)(**(code **)(lVar9 + 0x208))(unaff_RBP);\n                if (puVar15 == (undefined8 *)0x0) goto LAB_00102ed2;\n                unaff_RBX = __ptr + (long)puVar11 * 2;\n                puVar11 = __ptr;\n                do {\n                  if (unaff_RBX <= puVar11) {\nLAB_00104c75:\n                    if (in_stack_00000040 == (void *)0x0) {\n                      free(in_stack_00000048);\n                      free(__ptr);\n                      return;\n                    }\n                    free(in_stack_00000040);\n                    free(in_stack_00000048);\n                    free(__ptr);\n                    return;\n                  }\n                  puVar8 = puVar15;\n                  lVar9 = (**(code **)(unaff_RBP[1] + 0x270))(unaff_RBP,unaff_R14,*puVar11);\n                  if (lVar9 == 0) {\n                    bfd_fatal(*unaff_RBP,0);\nLAB_00102ed2:\n                    puVar12 = (undefined8 *)*unaff_RBP;\n                    bfd_fatal();\n                    puVar13 = in_R8;\n                    puVar14 = in_R9;\n                    goto LAB_00102edb;\n                  }\n                  puVar12 = puVar11 + 1;\n                  puVar11 = puVar11 + 2;\n                  print_symbol(unaff_RBP,lVar9,*puVar12,in_stack_00000008);\n                } while( true );\n              }\n              unaff_R12 = (undefined8 *)(ulong)in_stack_00000038._4_4_;\n              unaff_R15 = (undefined8 *)(**(code **)(lVar9 + 0x208))(unaff_RBP);\n              if (unaff_R15 == (undefined8 *)0x0) {\n                bfd_fatal(*unaff_RBP);\n                puVar12 = unaff_R12;\n                if (dynamic == 0) {\n                  lVar9 = (**(code **)(unaff_RBP[1] + 0x350))(unaff_RBP);\n                  puVar11 = in_stack_00000048;\n                  puVar15 = unaff_R12;\n                  if (lVar9 < 1) {\n                    puVar8 = (undefined8 *)0x0;\n                    unaff_RBX = (undefined8 *)0x0;\n                  }\n                  else {\nLAB_00102d8e:\n                    unaff_RBX = (undefined8 *)xmalloc();\n                    puVar8 = (undefined8 *)(**(code **)(unaff_RBP[1] + 0x358))(unaff_RBP,unaff_RBX);\n                    puVar12 = puVar15;\n                    if ((long)puVar8 < 0) {\n                      puVar12 = (undefined8 *)*unaff_RBP;\n                      puVar11 = (undefined8 *)bfd_fatal(puVar12,puVar15);\n                      goto LAB_00102dbe;\n                    }\n                  }\n                }\n                else {\n                  puVar8 = unaff_R12;\n                  unaff_RBX = in_stack_00000048;\n                  puVar11 = (undefined8 *)0x0;\n                  puVar15 = (undefined8 *)0x0;\n                }\n                in_R9 = &stack0x00000040;\n                in_R8 = unaff_RBX;\n                lVar9 = (**(code **)(unaff_RBP[1] + 0x360))(unaff_RBP,puVar15,puVar11,puVar8);\n                unaff_R12 = puVar12;\n                if (0 < lVar9) {\n                  unaff_R12 = (undefined8 *)((long)puVar12 + lVar9);\n                  in_stack_00000048 = (undefined8 *)xrealloc(in_stack_00000048);\n                  lVar7 = 0;\n                  do {\n                    in_stack_00000048[(long)((long)puVar12 + lVar7)] =\n                         (void *)(lVar7 * 0x30 + (long)in_stack_00000040);\n                    lVar7 = lVar7 + 1;\n                  } while (lVar9 != lVar7);\n                  in_stack_00000048[(long)((long)puVar12 + lVar9)] = 0;\n                }\n                if ((dynamic == 0) && (unaff_RBX != (undefined8 *)0x0)) {\n                  free(unaff_RBX);\n                }\n                if ((*(byte *)((long)unaff_RBP + 0x4a) & 0x10) != 0) {\n                  unaff_RBX = (undefined8 *)*unaff_RBP;\n                  report_plugin_err = '\\0';\n                  uVar6 = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n                  non_fatal(uVar6);\n                }\n                unaff_R14 = (undefined8 *)(ulong)in_stack_00000038._4_4_;\n                bVar16 = dynamic != 0;\n                puVar11 = (undefined8 *)(ulong)bVar16;\n                puVar8 = in_stack_00000048;\n                in_stack_00000018 = in_stack_00000048;\n                unaff_R15 = (undefined8 *)(**(code **)(unaff_RBP[1] + 0x208))(unaff_RBP);\n                if (unaff_R15 != (undefined8 *)0x0) goto code_r0x00104992;\n              }\n              else {\n                puVar11 = (undefined8 *)((long)puVar11 * (long)unaff_R12 + (long)puVar12);\n                unaff_RBX = puVar12;\n                while( true ) {\n                  if (puVar11 <= unaff_RBX) goto LAB_00104c75;\n                  puVar8 = unaff_R15;\n                  lVar9 = (**(code **)(unaff_RBP[1] + 0x270))(unaff_RBP,unaff_R14,unaff_RBX);\n                  if (lVar9 == 0) break;\n                  unaff_RBX = (undefined8 *)((long)unaff_RBX + (long)unaff_R12);\n                  print_symbol(unaff_RBP,lVar9,0,in_stack_00000008);\n                }\n                bfd_fatal(*unaff_RBP,0);\n              }\n              bfd_fatal(*unaff_RBP);\n              puVar12 = unaff_RBP;\n              puVar15 = unaff_R15;\nLAB_00102eb0:\n              bfd_fatal(*puVar11);\nLAB_00102eb9:\n              bfd_fatal(*puVar12);\nLAB_00102ec2:\n              puVar11 = (undefined8 *)0x0;\n              __ptr = unaff_RBX;\n              in_R8 = unaff_R12;\n              puVar13 = puVar8;\n              unaff_RBP = in_R9;\n              in_stack_00000010 = puVar15;\nLAB_00104e35:\n              while (in_R9 = puVar13, __ptr < unaff_R14) {\n                unaff_RBX = (undefined8 *)((long)__ptr + (long)in_R8);\n                if (unaff_RBX < unaff_R14) {\n                  puVar8 = unaff_RBP;\n                  puVar13 = in_R8;\n                  puVar14 = in_R9;\n                  puVar10 = (undefined8 *)(**(code **)(puVar12[1] + 0x270))();\n                  if (puVar10 == (undefined8 *)0x0) {\nLAB_00102edb:\n                    in_R9 = puVar14;\n                    in_R8 = puVar13;\n                    puVar12 = (undefined8 *)*puVar12;\n                    puVar10 = (undefined8 *)bfd_fatal();\n                  }\n                  else {\n                    puVar8 = (undefined8 *)puVar11[4];\n                    if ((*(uint *)(puVar11 + 3) & 0x200100) == 0) goto LAB_00104e95;\n                  }\n                  lVar9 = puVar11[2];\nLAB_00102ee7:\n                  if (puVar8 == (undefined8 *)puVar10[4]) {\n                    lVar9 = puVar10[2] - lVar9;\n                    puVar13 = unaff_RBP;\n                    puVar14 = __ptr;\n                    goto LAB_00104ea7;\n                  }\nLAB_00102dc4:\n                  lVar9 = puVar8[8] - lVar9;\n                  puVar13 = unaff_RBP;\n                  puVar14 = __ptr;\n                }\n                else {\n                  puVar8 = (undefined8 *)puVar11[4];\n                  if ((*(uint *)(puVar11 + 3) & 0x200100) != 0) {\nLAB_00102dbe:\n                    lVar9 = puVar11[2];\n                    puVar10 = (undefined8 *)0x0;\n                    goto LAB_00102dc4;\n                  }\n                  puVar10 = (undefined8 *)0x0;\nLAB_00104e95:\n                  puVar13 = unaff_RBP;\n                  puVar14 = __ptr;\n                  if (*(int *)(puVar12[1] + 8) == 5) {\n                    lVar9 = puVar11[7];\n                  }\n                  else {\n                    lVar9 = puVar11[2];\n                    if ((*(byte *)((long)puVar8 + 0x25) & 0x10) == 0) {\n                      if (unaff_RBX < unaff_R14) goto LAB_00102ee7;\n                      goto LAB_00102dc4;\n                    }\n                  }\n                }\nLAB_00104ea7:\n                puVar11 = puVar10;\n                __ptr = unaff_RBX;\n                unaff_RBP = in_R9;\n                if (lVar9 != 0) {\n                  *puVar15 = puVar14;\n                  puVar15[1] = lVar9;\n                  puVar15 = puVar15 + 2;\n                }\n              }\n              puVar11 = (undefined8 *)((long)puVar15 - (long)in_stack_00000010 >> 4);\n              qsort(in_stack_00000010,(size_t)puVar11,0x10,size_forward2);\n              lVar9 = puVar12[1];\n              unaff_RBX = __ptr;\n              unaff_RBP = puVar12;\n              __ptr = in_stack_00000010;\n            } while( true );\n          }\n          goto LAB_001049cf;\n        }\n        iVar4 = strcmp(pcVar1 + (pcVar1[2] == '_'),\"__gnu_lto_slim\");\n        in_stack_00000010 = puVar8;\n        if (iVar4 == 0) {\n          if (report_plugin_err != '\\0') {\n            in_stack_00000010 = (undefined8 *)*unaff_RBP;\n            report_plugin_err = '\\0';\n            uVar6 = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n            non_fatal(uVar6,in_stack_00000010);\n          }\n          goto LAB_00104a03;\n        }\n        if (undefined_only != 0) goto LAB_00104ae2;\nLAB_00104a11:\n        if (external_only == 0) {\n          if (non_weak == 0) goto LAB_00104a2d;\n          uVar5 = (*(uint *)(puVar8 + 3) >> 7 ^ 1) & 1;\n          goto LAB_00104af9;\n        }\n        if ((((*(uint *)(puVar8 + 3) & 0x800082) == 0) && (puVar8[4] != 0x10c2a8)) &&\n           ((*(byte *)(puVar8[4] + 0x25) & 0x10) == 0)) goto LAB_001049c3;\nLAB_00104a2d:\n        if (print_debug_syms != 0) {\n          if (sort_by_size == 0) goto LAB_00104a53;\nFUN_00104d5b:\n          if ((puVar8[4] != 0x10c2a8) && (puVar8[4] != 0x10c3c0)) goto LAB_00104cba;\n          goto LAB_001049c3;\n        }\n      } while ((*(byte *)(puVar8 + 3) & 4) != 0);\n      if (sort_by_size != 0) goto FUN_00104d5b;\nLAB_00104a53:\n      in_R9 = (undefined8 *)(ulong)defined_only;\n      if (defined_only == 0) {\n        cVar3 = (**(code **)(unaff_RBP[1] + 0x230))(unaff_RBP);\n        if (cVar3 != '\\0') {\n          display_rel_file_cold();\n          return;\n        }\n        goto LAB_00104a7b;\n      }\n    } while (puVar8[4] == 0x10c2a8);\nLAB_00104cba:\n    cVar3 = (**(code **)(unaff_RBP[1] + 0x230))(unaff_RBP);\n    if (cVar3 != '\\0') {\n      display_rel_file_cold();\n      return;\n    }\nLAB_00104a7b:\n    if (unaff_RBX != unaff_R13) {\n      if (unaff_R14 == (undefined8 *)0x8) {\n        *unaff_RBX = *unaff_R13;\n        FUN_001049c0();\n        return;\n      }\n      for (; unaff_R14 != (undefined8 *)0x0; unaff_R14 = (undefined8 *)((long)unaff_R14 + -1)) {\n        *(undefined *)unaff_RBX = *(undefined *)unaff_R13;\n        unaff_R13 = (undefined8 *)((long)unaff_R13 + (ulong)bVar17 * -2 + 1);\n        unaff_RBX = (undefined8 *)((long)unaff_RBX + (ulong)bVar17 * -2 + 1);\n      }\n      FUN_001049c0();\n      return;\n    }\n  } while( true );\ncode_r0x00104992:\n  puVar15 = (undefined8 *)((long)unaff_R12 * (long)unaff_R14);\n  unaff_R12 = (undefined8 *)((long)in_stack_00000018 + (long)puVar15);\n  unaff_RBX = in_stack_00000018;\n  puVar12 = unaff_RBP;\n  if (in_stack_00000018 < unaff_R12) goto code_r0x001049aa;\n  goto LAB_00104b15;\ncode_r0x001049aa:\n  unaff_retaddr = (ulong)bVar16;\n  unaff_R13 = in_stack_00000018;\n  goto LAB_001049cf;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x001049c0", 
            "calling": [
                "FUN_00104d5b"
            ], 
            "imported": false, 
            "current_name": "FUN_001049c0"
        }, 
        "FUN_00102220": {
            "renaming": {}, 
            "code": "\nvoid bfd_get_arch_size(void)\n\n{\n  bfd_get_arch_size();\n  return;\n}\n\n", 
            "called": [
                "bfd_get_arch_size"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102220", 
            "calling": [
                "set_print_width"
            ], 
            "imported": false, 
            "current_name": "FUN_00102220"
        }, 
        "FUN_00103ca0": {
            "renaming": {}, 
            "code": "\nvoid FUN_00103ca0(FILE *param_1,int param_2)\n\n{\n  long lVar1;\n  int iVar2;\n  int iVar3;\n  char *pcVar4;\n  long lVar5;\n  size_t sVar6;\n  long *__ptr;\n  long *plVar7;\n  char **ppcVar8;\n  char *pcVar9;\n  uint local_3c;\n  \n  lVar1 = program_name;\n  pcVar4 = (char *)dcgettext(0,\"Usage: %s [option(s)] [file(s)]\\n\",5);\n  fprintf(param_1,pcVar4,lVar1);\n  pcVar4 = (char *)dcgettext(0,\" List symbols in [file(s)] (a.out by default).\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\" The options are:\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"  -a, --debug-syms       Display debugger-only symbols\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -A, --print-file-name  Print name of the input file before every symbol\\n\"\n                             ,5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"  -B                     Same as --format=bsd\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"  -C, --demangle[=STYLE] Decode mangled/processed symbol names\\n\",5)\n  ;\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"                           STYLE can be \",5);\n  if (*pcVar4 == ' ') {\n    lVar1 = 1;\n    do {\n      lVar5 = lVar1;\n      lVar1 = lVar5 + 1;\n    } while (pcVar4[lVar5] == ' ');\n    local_3c = (uint)lVar5;\n  }\n  else {\n    local_3c = 0;\n  }\n  iVar2 = fprintf(param_1,\"%s\",pcVar4);\n  pcVar9 = \"\";\n  for (ppcVar8 = (char **)&libiberty_demanglers; *ppcVar8 != (char *)0x0; ppcVar8 = ppcVar8 + 3) {\n    sVar6 = strlen(*ppcVar8);\n    if (0x4a < (long)iVar2 + sVar6) {\n      fprintf(param_1,\"%.1s\\n\",pcVar9);\n      pcVar9 = \"\";\n      iVar2 = fprintf(param_1,\"%.*s\",(ulong)local_3c,pcVar4);\n    }\n    iVar3 = fprintf(param_1,\"%s\\\"%s\\\"\",pcVar9,*ppcVar8);\n    iVar2 = iVar2 + iVar3;\n    pcVar9 = \", \";\n  }\n  fputc(10,param_1);\n  pcVar4 = (char *)dcgettext(0,\"      --no-demangle      Do not demangle low-level symbol names\\n\",5\n                            );\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --recurse-limit    Enable a demangling recursion limit.  (default)\\n\"\n                             ,5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"      --no-recurse-limit Disable a demangling recursion limit.\\n\",5)\n  ;\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -D, --dynamic          Display dynamic symbols instead of normal symbols\\n\"\n                             ,5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"  -e                     (ignored)\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -f, --format=FORMAT    Use the output format FORMAT.  FORMAT can be `bsd\\',\\n                           `sysv\\', `posix\\' or \\'just-symbols\\'.\\n                           The default is `bsd\\'\\n\"\n                             ,5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"  -g, --extern-only      Display only external symbols\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\n                             \"    --ifunc-chars=CHARS  Characters to use when displaying ifunc symbols\\n\"\n                             ,5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"  -j, --just-symbols     Same as --format=just-symbols\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -l, --line-numbers     Use debugging information to find a filename and\\n                           line number for each symbol\\n\"\n                             ,5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"  -n, --numeric-sort     Sort symbols numerically by address\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"  -o                     Same as -A\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"  -p, --no-sort          Do not sort the symbols\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"  -P, --portability      Same as --format=posix\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"  -r, --reverse-sort     Reverse the sense of the sort\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"      --plugin NAME      Load the specified plugin\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"  -S, --print-size       Print size of defined symbols\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -s, --print-armap      Include index for symbols from archive members\\n\"\n                             ,5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"      --quiet            Suppress \\\"no symbols\\\" diagnostic\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"      --size-sort        Sort symbols by size\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"      --special-syms     Include special symbols in the output\\n\",5)\n  ;\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"      --synthetic        Display synthetic symbols as well\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"  -t, --radix=RADIX      Use RADIX for printing symbol values\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --target=BFDNAME   Specify the target object format as BFDNAME\\n\"\n                             ,5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"  -u, --undefined-only   Display only undefined symbols\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"  -U, --defined-only     Display only defined symbols\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --unicode={default|show|invalid|hex|escape|highlight}\\n                         Specify how to treat UTF-8 encoded unicode characters\\n\"\n                             ,5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"  -W, --no-weak          Ignore weak symbols\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --with-symbol-versions  Display version strings after symbol names\\n\"\n                             ,5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"  -X 32_64               (ignored)\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"  @FILE                  Read options from FILE\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"  -h, --help             Display this information\\n\",5);\n  fprintf(param_1,pcVar4);\n  pcVar4 = (char *)dcgettext(0,\"  -V, --version          Display this program\\'s version number\\n\",5\n                            );\n  fprintf(param_1,pcVar4);\n  lVar1 = program_name;\n  if (program_name == 0) {\n    pcVar4 = (char *)dcgettext(0,\"Supported targets:\",5);\n    fprintf(param_1,pcVar4);\n  }\n  else {\n    pcVar4 = (char *)dcgettext(0,\"%s: supported targets:\",5);\n    fprintf(param_1,pcVar4,lVar1);\n  }\n  __ptr = (long *)bfd_target_list();\n  plVar7 = __ptr;\n  while( true ) {\n    lVar1 = *plVar7;\n    plVar7 = plVar7 + 1;\n    if (lVar1 == 0) break;\n    fprintf(param_1,\" %s\");\n  }\n  fputc(10,param_1);\n  free(__ptr);\n  if (param_2 == 0) {\n    pcVar4 = (char *)dcgettext(0,\"Report bugs to %s.\\n\",5);\n    fprintf(param_1,pcVar4,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  exit(param_2);\n}\n\n", 
            "called": [
                "free", 
                "fputc", 
                "exit", 
                "bfd_target_list", 
                "fseek", 
                "usage.cold", 
                "fprintf", 
                "strlen", 
                "dcgettext"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00103ca0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00103ca0"
        }, 
        "FUN_00102340": {
            "renaming": {}, 
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n", 
            "called": [
                "fopen"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102340", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102340"
        }, 
        "FUN_00104d5b": {
            "renaming": {}, 
            "code": "\nvoid FUN_00104d5b(void)\n\n{\n  char *pcVar1;\n  code *pcVar2;\n  char cVar3;\n  int iVar4;\n  uint uVar5;\n  undefined8 uVar6;\n  undefined8 *puVar7;\n  long lVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  undefined8 *in_RCX;\n  undefined8 *unaff_RBX;\n  undefined8 *__ptr;\n  undefined8 *puVar11;\n  undefined8 *unaff_RBP;\n  undefined8 *puVar12;\n  undefined8 *in_R8;\n  undefined8 *puVar13;\n  undefined8 *in_R9;\n  undefined8 *puVar14;\n  undefined8 *puVar15;\n  undefined8 *unaff_R12;\n  undefined8 *unaff_R13;\n  undefined8 *unaff_R14;\n  undefined8 *unaff_R15;\n  bool bVar16;\n  byte bVar17;\n  ulong unaff_retaddr;\n  ulong uVar18;\n  undefined8 param_7;\n  undefined8 *param_8;\n  undefined8 *param_9;\n  undefined8 in_stack_00000038;\n  void *param_13;\n  undefined8 *param_14;\n  \n  bVar17 = 0;\n  do {\n    if ((in_RCX[4] != 0x10c2a8) && (in_RCX[4] != 0x10c3c0)) goto LAB_00104cba;\nLAB_001049c3:\n    do {\n      unaff_R13 = (undefined8 *)((long)unaff_R13 + (long)unaff_R14);\n      puVar15 = unaff_R12;\n      puVar12 = unaff_RBP;\n      if (unaff_R12 <= unaff_R13) goto LAB_00104b15;\nLAB_001049cf:\n      in_RCX = (undefined8 *)\n               (**(code **)(unaff_RBP[1] + 0x270))\n                         (unaff_RBP,unaff_retaddr & 0xffffffff,unaff_R13,unaff_R15);\n      puVar11 = unaff_RBP;\n      puVar12 = unaff_R13;\n      puVar15 = unaff_R15;\n      if (in_RCX == (undefined8 *)0x0) goto LAB_00102eb0;\n      pcVar1 = (char *)in_RCX[1];\n      if (((pcVar1 == (char *)0x0) || (*pcVar1 != '_')) || (pcVar1[1] != '_')) {\nLAB_00104a03:\n        if (undefined_only == 0) goto LAB_00104a11;\nLAB_00104ae2:\n        uVar5 = (uint)(in_RCX[4] == 0x10c2a8);\nLAB_00104af9:\n        if (uVar5 != 0) goto LAB_00104a2d;\n        unaff_R13 = (undefined8 *)((long)unaff_R13 + (long)unaff_R14);\n        puVar15 = unaff_R12;\n        puVar12 = unaff_RBP;\n        if (unaff_R12 <= unaff_R13) {\nLAB_00104b15:\n          unaff_RBX = (undefined8 *)((long)unaff_RBX - (long)param_9);\n          if (unaff_R14 == (undefined8 *)0x8) {\n            lVar9 = puVar12[1];\n            puVar11 = (undefined8 *)((long)unaff_RBX + 7);\n            if (-1 < (long)unaff_RBX) {\n              puVar11 = unaff_RBX;\n            }\n            in_R8 = (undefined8 *)(ulong)no_sort;\n            pcVar2 = *(code **)(lVar9 + 0x208);\n            puVar11 = (undefined8 *)((long)puVar11 >> 3);\n          }\n          else {\n            puVar11 = (undefined8 *)((long)unaff_RBX / (long)unaff_R14);\n            lVar9 = puVar12[1];\n            pcVar2 = *(code **)(lVar9 + 0x208);\n          }\n          unaff_RBP = puVar12;\n          if (no_sort == 0) {\n            sort_dynamic = dynamic != 0;\n            sort_bfd = puVar12;\n            sort_x = (undefined8 *)(*pcVar2)(puVar12);\n            sort_y = (undefined8 *)(**(code **)(puVar12[1] + 0x208))(puVar12);\n            unaff_RBX = param_14;\n            if ((sort_x == (undefined8 *)0x0) || (sort_y == (undefined8 *)0x0)) {\n              bfd_fatal(*puVar12);\n              __ptr = unaff_R15;\n              goto LAB_00102d8e;\n            }\n            unaff_R12 = (undefined8 *)(ulong)in_stack_00000038._4_4_;\n            if (sort_by_size != 0) {\n              uVar18 = (ulong)(dynamic != 0);\n              qsort(param_14,(size_t)puVar11,(size_t)unaff_R12,size_forward1);\n              puVar15 = (undefined8 *)xmalloc((long)puVar11 << 4);\n              puVar13 = sort_x;\n              unaff_RBP = sort_y;\n              unaff_R14 = (undefined8 *)((long)puVar11 * (long)unaff_R12 + (long)unaff_RBX);\n              in_RCX = sort_x;\n              in_R9 = sort_y;\n              if (unaff_R14 <= unaff_RBX) goto LAB_00102ec2;\n              puVar11 = (undefined8 *)\n                        (**(code **)(puVar12[1] + 0x270))(puVar12,uVar18 & 0xffffffff,unaff_RBX);\n              __ptr = unaff_RBX;\n              in_R8 = unaff_R12;\n              param_8 = puVar15;\n              if (puVar11 == (undefined8 *)0x0) goto LAB_00102eb9;\n              goto LAB_00104e35;\n            }\n            qsort(param_14,(size_t)puVar11,(size_t)unaff_R12,\n                  *(__compar_fn_t *)\n                   (sorters + ((long)reverse_sort + (long)sort_numerically * 2) * 8));\n            lVar9 = puVar12[1];\n          }\n          __ptr = (undefined8 *)0x0;\n          do {\n            puVar12 = param_14;\n            puVar7 = (undefined8 *)(ulong)sort_by_size;\n            unaff_R14 = (undefined8 *)(ulong)(dynamic != 0);\n            if (sort_by_size != 0) {\n              puVar15 = (undefined8 *)(**(code **)(lVar9 + 0x208))(unaff_RBP);\n              if (puVar15 == (undefined8 *)0x0) goto LAB_00102ed2;\n              unaff_RBX = __ptr + (long)puVar11 * 2;\n              puVar11 = __ptr;\n              do {\n                if (unaff_RBX <= puVar11) {\nLAB_00104c75:\n                  if (param_13 != (void *)0x0) {\n                    free(param_13);\n                    free(param_14);\n                    free(__ptr);\n                    return;\n                  }\n                  free(param_14);\n                  free(__ptr);\n                  return;\n                }\n                puVar7 = puVar15;\n                lVar9 = (**(code **)(unaff_RBP[1] + 0x270))(unaff_RBP,unaff_R14,*puVar11);\n                if (lVar9 == 0) {\n                  bfd_fatal(*unaff_RBP,0);\nLAB_00102ed2:\n                  puVar12 = (undefined8 *)*unaff_RBP;\n                  bfd_fatal();\n                  puVar13 = in_R8;\n                  puVar14 = in_R9;\n                  goto LAB_00102edb;\n                }\n                puVar12 = puVar11 + 1;\n                puVar11 = puVar11 + 2;\n                print_symbol(unaff_RBP,lVar9,*puVar12,param_7);\n              } while( true );\n            }\n            unaff_R12 = (undefined8 *)(ulong)in_stack_00000038._4_4_;\n            unaff_R15 = (undefined8 *)(**(code **)(lVar9 + 0x208))(unaff_RBP);\n            if (unaff_R15 == (undefined8 *)0x0) {\n              bfd_fatal(*unaff_RBP);\n              puVar12 = unaff_R12;\n              if (dynamic == 0) {\n                lVar9 = (**(code **)(unaff_RBP[1] + 0x350))(unaff_RBP);\n                puVar11 = param_14;\n                puVar15 = unaff_R12;\n                if (lVar9 < 1) {\n                  puVar7 = (undefined8 *)0x0;\n                  unaff_RBX = (undefined8 *)0x0;\n                }\n                else {\nLAB_00102d8e:\n                  unaff_RBX = (undefined8 *)xmalloc();\n                  puVar7 = (undefined8 *)(**(code **)(unaff_RBP[1] + 0x358))(unaff_RBP,unaff_RBX);\n                  puVar12 = puVar15;\n                  if ((long)puVar7 < 0) {\n                    puVar12 = (undefined8 *)*unaff_RBP;\n                    puVar11 = (undefined8 *)bfd_fatal(puVar12,puVar15);\n                    goto LAB_00102dbe;\n                  }\n                }\n              }\n              else {\n                puVar7 = unaff_R12;\n                unaff_RBX = param_14;\n                puVar11 = (undefined8 *)0x0;\n                puVar15 = (undefined8 *)0x0;\n              }\n              in_R9 = &stack0x00000040;\n              in_R8 = unaff_RBX;\n              lVar9 = (**(code **)(unaff_RBP[1] + 0x360))(unaff_RBP,puVar15,puVar11,puVar7);\n              unaff_R12 = puVar12;\n              if (0 < lVar9) {\n                unaff_R12 = (undefined8 *)((long)puVar12 + lVar9);\n                param_14 = (undefined8 *)xrealloc(param_14);\n                lVar8 = 0;\n                do {\n                  param_14[(long)puVar12 + lVar8] = (void *)(lVar8 * 0x30 + (long)param_13);\n                  lVar8 = lVar8 + 1;\n                } while (lVar9 != lVar8);\n                param_14[(long)puVar12 + lVar9] = 0;\n              }\n              if ((dynamic == 0) && (unaff_RBX != (undefined8 *)0x0)) {\n                free(unaff_RBX);\n              }\n              if ((*(byte *)((long)unaff_RBP + 0x4a) & 0x10) != 0) {\n                unaff_RBX = (undefined8 *)*unaff_RBP;\n                report_plugin_err = '\\0';\n                uVar6 = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n                non_fatal(uVar6);\n              }\n              unaff_R14 = (undefined8 *)(ulong)in_stack_00000038._4_4_;\n              bVar16 = dynamic != 0;\n              puVar11 = (undefined8 *)(ulong)bVar16;\n              in_RCX = param_14;\n              param_9 = param_14;\n              unaff_R15 = (undefined8 *)(**(code **)(unaff_RBP[1] + 0x208))(unaff_RBP);\n              if (unaff_R15 != (undefined8 *)0x0) goto code_r0x00104992;\n            }\n            else {\n              puVar11 = (undefined8 *)((long)puVar11 * (long)unaff_R12 + (long)puVar12);\n              unaff_RBX = puVar12;\n              while( true ) {\n                if (puVar11 <= unaff_RBX) goto LAB_00104c75;\n                in_RCX = unaff_R15;\n                lVar9 = (**(code **)(unaff_RBP[1] + 0x270))(unaff_RBP,unaff_R14,unaff_RBX);\n                if (lVar9 == 0) break;\n                unaff_RBX = (undefined8 *)((long)unaff_RBX + (long)unaff_R12);\n                print_symbol(unaff_RBP,lVar9,0,param_7);\n              }\n              bfd_fatal(*unaff_RBP,0);\n            }\n            bfd_fatal(*unaff_RBP);\n            puVar12 = unaff_RBP;\n            puVar15 = unaff_R15;\nLAB_00102eb0:\n            bfd_fatal(*puVar11);\nLAB_00102eb9:\n            bfd_fatal(*puVar12);\nLAB_00102ec2:\n            puVar11 = (undefined8 *)0x0;\n            __ptr = unaff_RBX;\n            in_R8 = unaff_R12;\n            puVar13 = in_RCX;\n            unaff_RBP = in_R9;\n            param_8 = puVar15;\nLAB_00104e35:\n            while (in_R9 = puVar13, __ptr < unaff_R14) {\n              unaff_RBX = (undefined8 *)((long)__ptr + (long)in_R8);\n              if (unaff_RBX < unaff_R14) {\n                puVar7 = unaff_RBP;\n                puVar13 = in_R8;\n                puVar14 = in_R9;\n                puVar10 = (undefined8 *)(**(code **)(puVar12[1] + 0x270))();\n                if (puVar10 == (undefined8 *)0x0) {\nLAB_00102edb:\n                  in_R9 = puVar14;\n                  in_R8 = puVar13;\n                  puVar12 = (undefined8 *)*puVar12;\n                  puVar10 = (undefined8 *)bfd_fatal();\n                }\n                else {\n                  puVar7 = (undefined8 *)puVar11[4];\n                  if ((*(uint *)(puVar11 + 3) & 0x200100) == 0) goto LAB_00104e95;\n                }\n                lVar9 = puVar11[2];\nLAB_00102ee7:\n                if (puVar7 == (undefined8 *)puVar10[4]) {\n                  lVar9 = puVar10[2] - lVar9;\n                  puVar13 = unaff_RBP;\n                  puVar14 = __ptr;\n                  goto LAB_00104ea7;\n                }\nLAB_00102dc4:\n                lVar9 = puVar7[8] - lVar9;\n                puVar13 = unaff_RBP;\n                puVar14 = __ptr;\n              }\n              else {\n                puVar7 = (undefined8 *)puVar11[4];\n                if ((*(uint *)(puVar11 + 3) & 0x200100) != 0) {\nLAB_00102dbe:\n                  lVar9 = puVar11[2];\n                  puVar10 = (undefined8 *)0x0;\n                  goto LAB_00102dc4;\n                }\n                puVar10 = (undefined8 *)0x0;\nLAB_00104e95:\n                puVar13 = unaff_RBP;\n                puVar14 = __ptr;\n                if (*(int *)(puVar12[1] + 8) == 5) {\n                  lVar9 = puVar11[7];\n                }\n                else {\n                  lVar9 = puVar11[2];\n                  if ((*(byte *)((long)puVar7 + 0x25) & 0x10) == 0) {\n                    if (unaff_RBX < unaff_R14) goto LAB_00102ee7;\n                    goto LAB_00102dc4;\n                  }\n                }\n              }\nLAB_00104ea7:\n              puVar11 = puVar10;\n              __ptr = unaff_RBX;\n              unaff_RBP = in_R9;\n              if (lVar9 != 0) {\n                *puVar15 = puVar14;\n                puVar15[1] = lVar9;\n                puVar15 = puVar15 + 2;\n              }\n            }\n            puVar11 = (undefined8 *)((long)puVar15 - (long)param_8 >> 4);\n            qsort(param_8,(size_t)puVar11,0x10,size_forward2);\n            lVar9 = puVar12[1];\n            unaff_RBX = __ptr;\n            unaff_RBP = puVar12;\n            __ptr = param_8;\n          } while( true );\n        }\n        goto LAB_001049cf;\n      }\n      iVar4 = strcmp(pcVar1 + (pcVar1[2] == '_'),\"__gnu_lto_slim\");\n      param_8 = in_RCX;\n      if (iVar4 == 0) {\n        if (report_plugin_err != '\\0') {\n          param_8 = (undefined8 *)*unaff_RBP;\n          report_plugin_err = '\\0';\n          uVar6 = dcgettext(0,\"%s: plugin needed to handle lto object\",5);\n          non_fatal(uVar6,param_8);\n        }\n        goto LAB_00104a03;\n      }\n      if (undefined_only != 0) goto LAB_00104ae2;\nLAB_00104a11:\n      if (external_only == 0) {\n        if (non_weak == 0) goto LAB_00104a2d;\n        uVar5 = (*(uint *)(in_RCX + 3) >> 7 ^ 1) & 1;\n        goto LAB_00104af9;\n      }\n      if ((((*(uint *)(in_RCX + 3) & 0x800082) == 0) && (in_RCX[4] != 0x10c2a8)) &&\n         ((*(byte *)(in_RCX[4] + 0x25) & 0x10) == 0)) goto LAB_001049c3;\nLAB_00104a2d:\n    } while ((print_debug_syms == 0) && ((*(byte *)(in_RCX + 3) & 4) != 0));\n  } while (sort_by_size != 0);\n  in_R9 = (undefined8 *)(ulong)defined_only;\n  if (defined_only == 0) {\n    cVar3 = (**(code **)(unaff_RBP[1] + 0x230))(unaff_RBP);\n    if (cVar3 != '\\0') {\n      display_rel_file_cold();\n      return;\n    }\n  }\n  else {\n    if (in_RCX[4] == 0x10c2a8) goto LAB_001049c3;\nLAB_00104cba:\n    cVar3 = (**(code **)(unaff_RBP[1] + 0x230))(unaff_RBP);\n    if (cVar3 != '\\0') {\n      display_rel_file_cold();\n      return;\n    }\n  }\n  if (unaff_RBX != unaff_R13) {\n    if (unaff_R14 != (undefined8 *)0x8) {\n      for (; unaff_R14 != (undefined8 *)0x0; unaff_R14 = (undefined8 *)((long)unaff_R14 + -1)) {\n        *(undefined *)unaff_RBX = *(undefined *)unaff_R13;\n        unaff_R13 = (undefined8 *)((long)unaff_R13 + (ulong)bVar17 * -2 + 1);\n        unaff_RBX = (undefined8 *)((long)unaff_RBX + (ulong)bVar17 * -2 + 1);\n      }\n      FUN_001049c0();\n      return;\n    }\n    *unaff_RBX = *unaff_R13;\n    FUN_001049c0();\n    return;\n  }\n  unaff_RBX = (undefined8 *)((long)unaff_RBX + (long)unaff_R14);\n  goto LAB_001049c3;\ncode_r0x00104992:\n  puVar15 = (undefined8 *)((long)unaff_R12 * (long)unaff_R14);\n  unaff_R12 = (undefined8 *)((long)param_9 + (long)puVar15);\n  unaff_RBX = param_9;\n  puVar12 = unaff_RBP;\n  if (param_9 < unaff_R12) goto code_r0x001049aa;\n  goto LAB_00104b15;\ncode_r0x001049aa:\n  unaff_retaddr = (ulong)bVar16;\n  unaff_R13 = param_9;\n  goto LAB_001049cf;\n}\n\n", 
            "called": [
                "qsort", 
                "free", 
                "non_fatal", 
                "xmalloc", 
                "FUN_00104d5b", 
                "print_symbol", 
                "size_forward2", 
                "xrealloc", 
                "bfd_fatal", 
                "size_forward1", 
                "FUN_001049c0", 
                "display_rel_file.cold", 
                "strcmp", 
                "dcgettext"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00104d5b", 
            "calling": [
                "FUN_00104d5b"
            ], 
            "imported": false, 
            "current_name": "FUN_00104d5b"
        }, 
        "FUN_00106300": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_00106300(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined8 param_9,undefined8 param_10,undefined8 param_11,undefined8 param_12,\n                 undefined8 param_13,undefined8 param_14)\n\n{\n  char in_AL;\n  undefined4 *__arg;\n  char *__format;\n  undefined4 local_d8;\n  undefined4 local_d4;\n  undefined *local_d0;\n  undefined *local_c8;\n  undefined local_b8 [8];\n  undefined8 local_b0;\n  undefined8 local_a8;\n  undefined8 local_a0;\n  undefined8 local_98;\n  undefined8 local_90;\n  undefined4 local_88;\n  undefined4 local_78;\n  undefined4 local_68;\n  undefined4 local_58;\n  undefined4 local_48;\n  undefined4 local_38;\n  undefined4 local_28;\n  undefined4 local_18;\n  \n  __arg = &local_d8;\n  if (in_AL != '\\0') {\n    local_88 = param_1;\n    local_78 = param_2;\n    local_68 = param_3;\n    local_58 = param_4;\n    local_48 = param_5;\n    local_38 = param_6;\n    local_28 = param_7;\n    local_18 = param_8;\n  }\n  local_d0 = &stack0x00000008;\n  local_d8 = 8;\n  local_c8 = local_b8;\n  local_d4 = 0x30;\n  local_b0 = param_10;\n  local_a8 = param_11;\n  local_a0 = param_12;\n  local_98 = param_13;\n  local_90 = param_14;\n  report();\n  __format = (char *)0x1;\n  xexit();\n  fflush(_stdout);\n  fprintf(_stderr,\"%s: \",program_name);\n  vfprintf(_stderr,__format,__arg);\n  putc(10,_stderr);\n  return;\n}\n\n", 
            "called": [
                "xexit", 
                "report"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00106300", 
            "calling": [
                "print_value.constprop.0.cold", 
                "print_symbol_info_bsd", 
                "main", 
                "set_output_format", 
                "print_symbol_info_sysv"
            ], 
            "imported": false, 
            "current_name": "FUN_00106300"
        }, 
        "FUN_00102100": {
            "renaming": {}, 
            "code": "\nvoid cplus_demangle_set_style(void)\n\n{\n  cplus_demangle_set_style();\n  return;\n}\n\n", 
            "called": [
                "cplus_demangle_set_style"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00102100", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "FUN_00102100"
        }, 
        "FUN_00102f7b": {
            "renaming": {}, 
            "code": "\nvoid FUN_00102f7b(undefined8 param_1)\n\n{\n  if ((filename_per_file != 0) && (filename_per_symbol == 0)) {\n    printf(\"%s:\\n\",param_1);\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "printf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00102f7b", 
            "calling": [], 
            "imported": false, 
            "current_name": "FUN_00102f7b"
        }, 
        "FUN_00106540": {
            "renaming": {}, 
            "code": "\n\n\nvoid FUN_00106540(long param_1)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  undefined8 in_R10;\n  \n  iVar1 = bfd_get_error();\n  if (iVar1 == 0) {\n    uVar2 = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    uVar2 = bfd_errmsg(iVar1);\n  }\n  fflush(_stdout);\n  if (param_1 != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",program_name,param_1,uVar2,in_R10);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",program_name,uVar2,in_R10);\n  return;\n}\n\n", 
            "called": [
                "bfd_errmsg", 
                "fflush", 
                "bfd_get_error", 
                "fprintf", 
                "bfd_nonfatal.cold"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x00106540", 
            "calling": [
                "bfd_fatal", 
                "display_file"
            ], 
            "imported": false, 
            "current_name": "FUN_00106540"
        }, 
        "FUN_0010c160": {
            "renaming": {}, 
            "code": "\n\n\n\nint stat(char *__file,stat *__buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* stat@GLIBC_2.33 */\n  halt_baddata();\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0010c160", 
            "calling": [
                "stat"
            ], 
            "imported": false, 
            "current_name": "FUN_0010c160"
        }
    }, 
    "locked_functions": [], 
    "used_tokens": 0, 
    "layers": []
}