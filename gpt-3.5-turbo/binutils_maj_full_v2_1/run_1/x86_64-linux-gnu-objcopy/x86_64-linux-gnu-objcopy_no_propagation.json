{
    "functions": {
        "FUN_00104020": {
            "additional_data": {
                "FUN_00104020": {
                    "call_indirect_jump": 2,
                    "execute_function": 5,
                    "execute_function_at_address": 1,
                    "execute_indirect_call": 4,
                    "execute_indirect_function": 1,
                    "execute_indirect_jump": 15,
                    "initialize_indirect_jump": 1
                },
                "PTR_00104020": {
                    "function_pointer": 2,
                    "jump_function_pointer": 1,
                    "jump_target_function": 1
                },
                "PTR_4096a0": {
                    "jump_function_pointer": 1
                },
                "PTR_UNDEFINED": {
                    "ptr_undefined": 1
                },
                "PTR_undefined": {
                    "function_pointer": 1
                },
                "_": {
                    "entry_point": 1
                },
                "code": {
                    "function_pointer": 2,
                    "function_ptr": 1,
                    "jump_function": 1
                },
                "undefined": {
                    "code_ptr": 1,
                    "func_ptr": 1,
                    "function_address": 1,
                    "function_pointer": 3,
                    "jump_address": 1,
                    "ptr_to_function": 1,
                    "target_address": 3
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_indirect_jump_00104020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(function_pointer *)(target_address *)0x0)();\n  return;\n}\n\n",
            "current_name": "execute_indirect_jump_00104020",
            "entrypoint": "0x00104020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104020": "execute_indirect_jump_00104020",
                "_": "entry_point",
                "code": "function_pointer",
                "undefined": "target_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104920": {
            "additional_data": {
                "FUN_00104920": {
                    "check_and_print_number": 1,
                    "check_bad_number": 3,
                    "check_number_validity": 1,
                    "display_error_message": 1,
                    "parse_error_message": 1,
                    "print_bad_number_error": 2,
                    "print_bad_number_error_message": 3,
                    "print_error_message": 7,
                    "validate_and_print_number": 1,
                    "validate_bad_number": 2,
                    "validate_input": 4,
                    "validate_input_and_print_error_message": 1,
                    "validate_number": 4
                },
                "FUN_00119dd0": {
                    "print_translated_message": 1
                },
                "dcgettext": {
                    "get_error_message": 2,
                    "get_locale_message": 1,
                    "get_localized_message": 1,
                    "get_translated_message": 4,
                    "get_translated_string": 1,
                    "get_translated_text": 1,
                    "retrieve_localized_message": 1,
                    "translate_error_message": 1,
                    "translate_message": 2
                },
                "param_1": {
                    "arg1": 2,
                    "name": 1,
                    "param1": 2,
                    "unused_param_1": 1
                },
                "param_2": {
                    "arg2": 2,
                    "number": 1,
                    "param2": 2,
                    "unused_param_2": 1
                },
                "param_3": {
                    "arg3": 2,
                    "param3": 2,
                    "placeholder1": 1,
                    "unused_param_3": 1
                },
                "param_4": {
                    "arg4": 2,
                    "param4": 2,
                    "placeholder2": 1,
                    "unused_param_4": 1
                },
                "uVar1": {
                    "error_code": 1,
                    "error_message": 25,
                    "error_msg": 1,
                    "error_string": 3
                }
            },
            "called": [
                "FUN_00119dd0",
                "dcgettext"
            ],
            "calling": [
                "FUN_00119940"
            ],
            "code": "\nvoid print_bad_number_error_message_00104920(void)\n\n{\n  undefined8 error_message;\n  \n  error_message = dcgettext(0,\"%s: bad number: %s\",5);\n                    \n  FUN_00119dd0(error_message);\n}\n\n",
            "current_name": "print_bad_number_error_message_00104920",
            "entrypoint": "0x00104920",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104920": "print_bad_number_error_message_00104920",
                "dcgettext": "get_translated_message",
                "uVar1": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104943": {
            "additional_data": {
                "FUN_00104943": {
                    "extract_and_print_data": 1,
                    "extract_binary_info": 1,
                    "print_arch_mach_details": 1,
                    "print_arch_mach_info": 4,
                    "print_binary_architectures": 1,
                    "print_reverse": 1,
                    "print_reverse_architecture_info": 1,
                    "print_reverse_architecture_mach": 1,
                    "print_reverse_strings": 1,
                    "print_reverse_strings_by_arch_mach": 1,
                    "process_data": 1,
                    "reverse_and_print_architecture": 2,
                    "reverse_and_print_architecture_info": 2,
                    "reverse_and_print_data": 1
                },
                "_stdout": {
                    "output_stream": 2,
                    "standard_output": 2
                },
                "bUnknown": {
                    "is_unknown": 1
                },
                "bfd_printable_arch_mach": {
                    "get_printable_arch_mach": 1
                },
                "fputs": {
                    "print_string": 1
                },
                "iVar1": {
                    "array_size": 1,
                    "converted_int": 3,
                    "converted_integer": 4,
                    "converted_value": 2,
                    "default_length": 1,
                    "default_num": 1,
                    "default_number": 1,
                    "default_value": 3,
                    "input_number": 2,
                    "input_value": 1,
                    "int_value": 5,
                    "max_length": 1,
                    "parsed_input": 1,
                    "parsed_int_as_int": 1,
                    "value_as_int": 1
                },
                "iVar2": {
                    "arch_comparison_result": 1,
                    "cmp_result": 1,
                    "compare_result": 2,
                    "comparison_result": 11,
                    "current_arch_index": 1,
                    "loop_index2": 1,
                    "str_cmp_result": 1,
                    "strcmp_result": 3,
                    "string_comparison_result": 2,
                    "temp_var": 1
                },
                "iVar7": {
                    "arch_index": 11,
                    "arch_mach_counter": 2,
                    "arch_mach_index": 6,
                    "arch_mach_iter": 1,
                    "arch_mach_iterator": 1,
                    "arch_machine": 1,
                    "arch_num": 1,
                    "arch_number": 1,
                    "architecture_counter": 1,
                    "counter": 2,
                    "i": 1,
                    "loop_counter": 1,
                    "loop_var": 1
                },
                "iVar9": {
                    "current_index": 2,
                    "current_num": 1,
                    "current_param": 1,
                    "current_value": 1,
                    "end": 1,
                    "end_index": 1,
                    "index": 1,
                    "inner_loop_index": 1,
                    "inner_loop_var": 1,
                    "limit": 1,
                    "loop_counter": 1,
                    "loop_counter1": 1,
                    "max_iterations": 1,
                    "max_value": 2,
                    "outer_index": 1,
                    "outer_iterator": 1,
                    "outer_loop_index": 3,
                    "outer_loop_var": 1,
                    "param7": 2,
                    "param_7_copy": 1,
                    "param_7_value": 1,
                    "start_index": 1,
                    "string_index": 1,
                    "string_iter": 1,
                    "temp_var2": 1,
                    "upper_limit": 1
                },
                "in_RAX": {
                    "input": 1,
                    "input_str": 2,
                    "input_string": 25,
                    "str": 1,
                    "str_number": 1,
                    "str_to_long": 1
                },
                "lVar2": {
                    "string_index": 1
                },
                "lVar3": {
                    "converted_index": 1,
                    "converted_long": 1,
                    "converted_num": 1,
                    "converted_number": 5,
                    "converted_value": 6,
                    "current_index": 1,
                    "current_iteration": 1,
                    "index1": 1,
                    "inner_loop_number": 1,
                    "long_value": 3,
                    "loop_index": 3,
                    "loop_var": 1,
                    "loop_var1": 1,
                    "num": 1,
                    "num_str": 1,
                    "number": 1,
                    "parsed_int": 1,
                    "temporary_index": 1
                },
                "lVar8": {
                    "architecture_index": 1,
                    "current_index": 1,
                    "current_index_long": 1,
                    "index2": 1,
                    "inner_loop_var": 1,
                    "j": 1,
                    "line_index": 1,
                    "loop_counter": 1,
                    "loop_index": 3,
                    "loop_var2": 2,
                    "outer_iterator_value": 1,
                    "outer_loop_index": 1,
                    "outer_loop_number": 1,
                    "param_index": 2,
                    "parameter_index": 1,
                    "start": 2,
                    "start_index": 2,
                    "start_loop_index": 1,
                    "string_counter": 1,
                    "temp_var3": 1
                },
                "param_11": {
                    "arch_mach": 2,
                    "arch_mach_details": 1,
                    "arch_mach_function": 1,
                    "arch_mach_list": 1,
                    "arch_mach_size": 1,
                    "arch_mach_str": 1,
                    "arch_printable": 1,
                    "architecture": 4,
                    "architecture_string": 1,
                    "bfd_print_arch_mach": 1,
                    "binary_architectures": 1,
                    "function_data": 1,
                    "function_table": 1,
                    "library_info": 1,
                    "max_string_length": 1,
                    "output_array": 1,
                    "param11": 4,
                    "param_11_value": 1,
                    "param_struct": 2,
                    "printable_arch_mach_string": 1,
                    "string_array": 3
                },
                "param_13": {
                    "architecture_strings": 1,
                    "array_of_strings": 2,
                    "array_pointer": 1,
                    "binary_info_array": 1,
                    "data": 1,
                    "data_array": 4,
                    "data_block": 1,
                    "data_pointer": 4,
                    "data_struct": 1,
                    "data_structure": 1,
                    "file_data": 1,
                    "info_array": 1,
                    "param13": 4,
                    "param_13_value": 1,
                    "param_array": 1,
                    "param_data": 1,
                    "string_array": 2,
                    "string_array_base_address": 1,
                    "string_list": 1,
                    "string_table": 1
                },
                "param_7": {
                    "array_size": 1,
                    "counter": 1,
                    "current_index": 1,
                    "current_value": 1,
                    "inner_iterator": 1,
                    "inner_loop_index": 1,
                    "limit": 1,
                    "loop_counter2": 1,
                    "max_index": 1,
                    "max_loop_index": 1,
                    "max_loop_iterations": 1,
                    "max_param": 2,
                    "max_strings": 2,
                    "max_strings_to_print": 1,
                    "num_architectures": 1,
                    "outer_loop_var": 1,
                    "param7": 3,
                    "start_idx": 1,
                    "start_index": 4,
                    "total_count": 1
                },
                "pcVar5": {
                    "arch_mach": 5,
                    "arch_mach_str": 2,
                    "arch_mach_string": 5,
                    "arch_name": 2,
                    "arch_string": 5,
                    "architecture_string": 1,
                    "current_string": 3,
                    "printable_arch_mach": 2,
                    "printable_string": 3,
                    "string": 1
                },
                "printf": {
                    "print_formatted_string": 1
                },
                "putc": {
                    "print_character": 1
                },
                "sVar4": {
                    "current_string_length": 3,
                    "length": 5,
                    "size_of_string": 1,
                    "str_length": 2,
                    "string_length": 16,
                    "string_size": 2
                },
                "strcmp": {
                    "compare_strings": 1
                },
                "strlen": {
                    "get_string_length": 1
                },
                "strtol": {
                    "convert_string_to_long": 1
                },
                "uStack000000000000000c": {
                    "base_indentation": 1,
                    "format_width": 1,
                    "indentation": 10,
                    "indentation_level": 4,
                    "initial_array_size": 1,
                    "line_width": 1,
                    "loop_count": 1,
                    "max_architectures": 1,
                    "num_spaces": 1,
                    "output_width": 1,
                    "padding": 1,
                    "param_c": 1,
                    "stack_var2": 2,
                    "start_position": 1,
                    "tab_size": 1,
                    "unaff_r15_d": 1,
                    "unaff_r15_d_value": 1
                },
                "uVar10": {
                    "char_index": 1,
                    "count": 1,
                    "iteration_count": 1,
                    "length_counter": 1,
                    "loop_counter": 5,
                    "loop_iterator": 1,
                    "loop_length": 2,
                    "loop_var": 2,
                    "remaining_length": 1,
                    "str_length": 1,
                    "string_length": 8,
                    "string_length_counter": 1,
                    "temp_length": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "u_var_subtracted": 1
                },
                "uVar11": {
                    "adjusted_index": 1,
                    "arch_count": 1,
                    "arch_index": 4,
                    "arch_index_minus_two": 1,
                    "arch_index_offset": 2,
                    "arch_mach_adjustment": 1,
                    "arch_mach_counter": 1,
                    "arch_mach_index": 4,
                    "arch_mach_offset": 3,
                    "arch_mach_value": 1,
                    "arch_offset": 3,
                    "arch_var": 1,
                    "architecture_offset": 1,
                    "index_difference": 1,
                    "inner_index": 1,
                    "inner_loop_index": 1,
                    "loop_index_offset": 1,
                    "temp_var1": 1,
                    "temp_var2": 1
                },
                "uVar6": {
                    "arch_mach": 3,
                    "arch_mach_print": 1,
                    "arch_mach_printable": 1,
                    "arch_mach_string": 1,
                    "arch_string": 2,
                    "arch_string_printable": 1,
                    "printable_arch": 2,
                    "printable_arch_mach": 13,
                    "printable_arch_mach_result": 1,
                    "printable_architecture": 1
                },
                "unaff_R15D": {
                    "arch_count": 1,
                    "count": 1,
                    "end_position": 1,
                    "line_width": 1,
                    "max_arch_index": 1,
                    "reserved_register": 1,
                    "return_value": 1,
                    "stack_value": 2,
                    "stack_var": 2,
                    "temp_var": 1,
                    "total_architectures": 1,
                    "total_strings": 1,
                    "unaff_r15_d": 1
                }
            },
            "called": [
                "strlen",
                "putc",
                "bfd_printable_arch_mach",
                "strtol",
                "strcmp",
                "printf",
                "fputs"
            ],
            "calling": [
                "FUN_001199d0"
            ],
            "code": "\n\n\nvoid reverse_and_print_architecture_info_00104943(void)\n\n{\n  int int_value;\n  int comparison_result;\n  char *input_string;\n  long converted_value;\n  size_t string_length;\n  char *arch_mach;\n  undefined8 printable_arch_mach;\n  int arch_index;\n  long loop_index;\n  int outer_loop_index;\n  uint stack_value;\n  ulong string_length;\n  uint arch_mach_index;\n  int start_index;\n  uint indentation;\n  undefined8 param11;\n  long param13;\n  \n  converted_value = strtol(input_string,(char **)0x0,10);\n  int_value = (int)converted_value;\n  outer_loop_index = start_index;\n  indentation = stack_value;\n  if (int_value == 0) {\n    int_value = 0x50;\n  }\n  do {\n    start_index = outer_loop_index;\n    if (param11._4_4_ <= start_index) {\n      return;\n    }\n    loop_index = (long)start_index;\n    arch_index = (int_value - indentation) + -1;\n    converted_value = loop_index;\n    do {\n      outer_loop_index = (int)converted_value;\n      if (param11._4_4_ <= outer_loop_index) break;\n      string_length = strlen(*(char **)(param13 + converted_value * 0x60));\n      converted_value = converted_value + 1;\n      arch_index = (arch_index - (int)string_length) + -1;\n    } while (-1 < arch_index);\n    printf(\"\\n%*s\",(ulong)(indentation + 1),&DAT_0011b4a1);\n    for (converted_value = loop_index * 0x60; ((ulong)(uint)(outer_loop_index - start_index) + loop_index) * 0x60 - converted_value != 0;\n        converted_value = converted_value + 0x60) {\n      printf(\"%s \",*(undefined8 *)(param13 + converted_value));\n    }\n    arch_index = 2;\n    putc(10,output_stream);\n    do {\n      arch_mach = (char *)bfd_printable_arch_mach(arch_index,0);\n      comparison_result = strcmp(arch_mach,\"UNKNOWN!\");\n      if (comparison_result != 0) {\n        printable_arch_mach = bfd_printable_arch_mach(arch_index,0);\n        printf(\"%*s \",(ulong)indentation,printable_arch_mach);\n        arch_mach_index = arch_index - 2;\n        converted_value = loop_index * 0x60;\n        comparison_result = start_index;\n        while (outer_loop_index != comparison_result) {\n          arch_mach = *(char **)(param13 + converted_value);\n          if (*(char *)((long)(char **)(param13 + converted_value) + (ulong)arch_mach_index + 8) == '\\0') {\n            string_length = strlen(arch_mach);\n            for (string_length = string_length & 0xffffffff; (int)string_length != 0; string_length = (ulong)((int)string_length - 1)) {\n              putc(0x2d,output_stream);\n            }\n          }\n          else {\n            fputs(arch_mach,output_stream);\n          }\n          comparison_result = comparison_result + 1;\n          if (outer_loop_index != comparison_result) {\n            putc(0x20,output_stream);\n          }\n          converted_value = converted_value + 0x60;\n        }\n        putc(10,output_stream);\n      }\n      arch_index = arch_index + 1;\n    } while (arch_index != 0x57);\n  } while( true );\n}\n\n",
            "current_name": "reverse_and_print_architecture_info_00104943",
            "entrypoint": "0x00104943",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104943": "reverse_and_print_architecture_info_00104943",
                "_stdout": "output_stream",
                "bfd_printable_arch_mach": "get_printable_arch_mach",
                "fputs": "print_string",
                "iVar1": "int_value",
                "iVar2": "comparison_result",
                "iVar7": "arch_index",
                "iVar9": "outer_loop_index",
                "in_RAX": "input_string",
                "lVar3": "converted_value",
                "lVar8": "loop_index",
                "param_11": "param11",
                "param_13": "param13",
                "param_7": "start_index",
                "pcVar5": "arch_mach",
                "printf": "print_formatted_string",
                "putc": "print_character",
                "sVar4": "string_length",
                "strcmp": "compare_strings",
                "strlen": "get_string_length",
                "strtol": "convert_string_to_long",
                "uStack000000000000000c": "indentation",
                "uVar10": "string_length",
                "uVar11": "arch_mach_index",
                "uVar6": "printable_arch_mach",
                "unaff_R15D": "stack_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104966": {
            "additional_data": {
                "FUN_00104966": {
                    "file_locating_warning": 1,
                    "file_locator_warning": 1,
                    "file_not_found_error": 1,
                    "file_not_found_exception": 1,
                    "find_file": 1,
                    "get_file_location_warning": 1,
                    "handle_error": 4,
                    "handle_file_error": 14,
                    "handle_file_not_found_error": 5,
                    "locate_file_or_print_error": 1
                },
                "FUN_00119ed0": {
                    "print_error": 1,
                    "print_error_message": 7
                },
                "__errno_location": {
                    "get_errno_location": 7,
                    "get_errno_ptr": 2,
                    "get_error_code_location": 1,
                    "get_error_location": 3,
                    "get_error_number": 3,
                    "get_error_number_address": 1,
                    "get_error_number_ptr": 1
                },
                "__errnum": {
                    "error_code": 1
                },
                "dcgettext": {
                    "get_error_message": 8,
                    "get_localized_error_message": 1,
                    "get_localized_message": 2,
                    "get_localized_string": 1,
                    "translate": 1
                },
                "piVar1": {
                    "errno_location_ptr": 1,
                    "errno_pointer": 2,
                    "errno_ptr": 18,
                    "error_code": 1,
                    "error_code_ptr": 1,
                    "error_location": 2,
                    "error_number": 1,
                    "error_number_ptr": 1,
                    "error_ptr": 3
                },
                "strerror": {
                    "get_error_description": 3,
                    "get_error_message": 3,
                    "get_error_msg": 1,
                    "get_error_string": 11,
                    "get_str_error": 1
                },
                "uVar2": {
                    "err_msg": 1,
                    "error_message": 28,
                    "error_msg": 1,
                    "message": 1
                }
            },
            "called": [
                "dcgettext",
                "FUN_00119ed0",
                "__errno_location",
                "strerror"
            ],
            "calling": [
                "FUN_00113f50"
            ],
            "code": "\nundefined8 handle_file_not_found_error_00104966(void)\n\n{\n  int *errno_ptr;\n  undefined8 error_message;\n  \n  errno_ptr = __errno_location();\n  if (*errno_ptr == 2) {\n    error_message = dcgettext(0,\"\\'%s\\': No such file\",5);\n    FUN_00119ed0(error_message);\n  }\n  else {\n    strerror(*errno_ptr);\n    error_message = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n    FUN_00119ed0(error_message);\n  }\n  return 0xffffffffffffffff;\n}\n\n",
            "current_name": "handle_file_not_found_error_00104966",
            "entrypoint": "0x00104966",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104966": "handle_file_not_found_error_00104966",
                "__errno_location": "get_errno_location",
                "dcgettext": "get_error_message",
                "piVar1": "errno_ptr",
                "strerror": "get_error_string",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104a35": {
            "additional_data": {
                "FUN_00104a35": {
                    "print_supported_targets": 31
                },
                "__c": {
                    "character": 1
                },
                "__ptr": {
                    "allocated_memory": 1,
                    "ptr": 1,
                    "target_list": 28,
                    "target_list_ptr": 1
                },
                "__stream": {
                    "file": 1
                },
                "bfd_target_list": {
                    "get_listof_targets": 1
                },
                "dcgettext": {
                    "get_internationalized_text": 1,
                    "get_translated_string": 1
                },
                "fprintf": {
                    "write_formatted_output": 2
                },
                "fputc": {
                    "write_character": 2
                },
                "lVar1": {
                    "current_target": 5,
                    "current_target_item": 1,
                    "current_target_value": 5,
                    "current_value": 2,
                    "target": 3,
                    "target_address": 1,
                    "target_entry": 1,
                    "target_id": 4,
                    "target_name": 3,
                    "target_pointer": 1,
                    "target_ptr": 1,
                    "target_value": 3
                },
                "param_1": {
                    "target": 25,
                    "target_code": 1,
                    "target_identifier": 1,
                    "target_name": 4
                },
                "param_2": {
                    "file": 3,
                    "output": 2,
                    "output_file": 26
                },
                "pcVar2": {
                    "display_text": 1,
                    "gettext": 1,
                    "localized_text": 1,
                    "message": 21,
                    "msg": 1,
                    "prompt": 1,
                    "target_message": 1,
                    "target_prompt": 1,
                    "target_str": 1,
                    "target_string": 2
                },
                "plVar3": {
                    "current_target": 16,
                    "list_iterator": 1,
                    "list_pointer": 1,
                    "ptr": 4,
                    "target_list": 1,
                    "target_pointer": 3,
                    "target_ptr": 4,
                    "target_ptr_list": 1
                }
            },
            "called": [
                "bfd_target_list",
                "dcgettext",
                "fputc",
                "free",
                "fprintf"
            ],
            "calling": [
                "FUN_00108a2a",
                "FUN_00108916"
            ],
            "code": "\nvoid print_supported_targets_00104a35(long target,FILE *output_file)\n\n{\n  long current_target_value;\n  char *message;\n  long *target_list;\n  long *current_target;\n  \n  if (target == 0) {\n    message = (char *)dcgettext(0,\"Supported targets:\",5);\n    fprintf(output_file,message);\n  }\n  else {\n    message = (char *)dcgettext(0,\"%s: supported targets:\",5);\n    fprintf(output_file,message,target);\n  }\n  target_list = (long *)bfd_target_list();\n  current_target = target_list;\n  while( true ) {\n    current_target_value = *current_target;\n    current_target = current_target + 1;\n    if (current_target_value == 0) break;\n    fprintf(output_file,\" %s\");\n  }\n  fputc(10,output_file);\n  free(target_list);\n  return;\n}\n\n",
            "current_name": "print_supported_targets_00104a35",
            "entrypoint": "0x00104a35",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104a35": "print_supported_targets_00104a35",
                "__ptr": "target_list",
                "bfd_target_list": "get_listof_targets",
                "dcgettext": "get_internationalized_text",
                "fprintf": "write_formatted_output",
                "fputc": "write_character",
                "lVar1": "current_target_value",
                "param_1": "target",
                "param_2": "output_file",
                "pcVar2": "message",
                "plVar3": "current_target"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104ad6": {
            "additional_data": {
                "FUN_00104ad6": {
                    "find_section_flag": 1,
                    "find_section_flags": 1,
                    "parse_flag_options": 1,
                    "parse_flags": 2,
                    "parse_section_flags": 23,
                    "section_flags_checker": 1
                },
                "FUN_00119dd0": {
                    "display_supported_flags": 1,
                    "print_supported_flags": 1
                },
                "FUN_00119ed0": {
                    "print_error": 2
                },
                "Fun_00119ed0": {
                    "display_error": 1
                },
                "PTR_FUN_00119dd0": {
                    "print_error_message": 1
                },
                "__s": {
                    "current_flag": 2,
                    "current_section_flag": 1,
                    "current_string": 1,
                    "current_token": 1,
                    "flag_str": 1,
                    "flag_string": 2,
                    "input_string": 1,
                    "remaining_text": 1,
                    "section": 8,
                    "section_flag": 3,
                    "section_flags": 2,
                    "section_list": 1,
                    "section_name": 3,
                    "section_string": 3,
                    "supported_flags": 1
                },
                "auVar6": {
                    "result": 16,
                    "result_flags": 1,
                    "result_flags_array": 1,
                    "return_flag": 1,
                    "return_val": 2,
                    "return_value": 6
                },
                "dcgettext": {
                    "get_translated_text": 1,
                    "translate_message": 1,
                    "translate_string": 1
                },
                "iVar1": {
                    "cmp_result": 2,
                    "comparison_result": 26,
                    "result": 3
                },
                "iVar5": {
                    "current_section_length": 1,
                    "delimiter_index": 1,
                    "flag_index": 4,
                    "flag_length_int": 1,
                    "length": 1,
                    "remaining_string_len": 1,
                    "remaining_string_length": 1,
                    "section_flag_length": 2,
                    "section_index": 2,
                    "section_length": 1,
                    "section_length_int": 1,
                    "section_name_index": 1,
                    "section_name_length": 2,
                    "section_size": 1,
                    "str_length": 2,
                    "string_length": 3,
                    "string_size": 1,
                    "substring_length": 1,
                    "token_len": 1
                },
                "pcVar3": {
                    "comma": 1,
                    "comma_index": 1,
                    "comma_location": 1,
                    "comma_pos": 6,
                    "comma_position": 11,
                    "comma_ptr": 1,
                    "delimiter": 2,
                    "delimiter_position": 2,
                    "delimiter_ptr": 2,
                    "flag_end": 1,
                    "next_comma": 3
                },
                "sVar4": {
                    "flag_len": 1,
                    "flag_length": 8,
                    "input_length": 1,
                    "length": 4,
                    "section_flag_length": 1,
                    "section_length": 8,
                    "section_name_length": 2,
                    "section_string_length": 1,
                    "string_length": 2,
                    "sub_str_length": 1,
                    "text_length": 1,
                    "token_length": 1
                },
                "strchr": {
                    "find_character": 2,
                    "find_character_index": 1
                },
                "strlen": {
                    "calculate_string_length": 1,
                    "get_section_length": 1,
                    "get_string_length": 1
                },
                "strncasecmp": {
                    "compare_strings": 2,
                    "compare_strings_case_insensitive": 1
                },
                "strncpy": {
                    "copy_string": 3
                },
                "uVar2": {
                    "error_message": 10,
                    "error_msg": 1,
                    "error_string": 2
                },
                "unaff_R14D": {
                    "flag_value": 1,
                    "flags": 11,
                    "section_flag": 1,
                    "section_flags": 17,
                    "section_flags_result": 1
                },
                "unaff_R15": {
                    "command": 1,
                    "current_flag": 2,
                    "default_section": 1,
                    "flag": 1,
                    "flag_start": 1,
                    "flag_string": 1,
                    "flag_to_check": 1,
                    "flag_to_compare": 2,
                    "section": 1,
                    "section_flag": 6,
                    "section_name": 7,
                    "section_string": 1,
                    "supported_flags": 4,
                    "supported_list": 1
                },
                "unaff_RBP": {
                    "current_char": 1,
                    "current_flag": 2,
                    "current_pos": 1,
                    "current_position": 1,
                    "current_section": 1,
                    "current_string": 1,
                    "current_token": 1,
                    "delimiter": 3,
                    "flag": 1,
                    "flag_ptr": 1,
                    "next_comma": 1,
                    "next_flag": 1,
                    "next_position": 1,
                    "next_section": 5,
                    "remaining_flags": 1,
                    "remaining_section": 1,
                    "remaining_string": 3,
                    "section": 1,
                    "section_flag": 2,
                    "string": 1,
                    "token": 1
                },
                "unaff_retaddr": {
                    "return_address": 26,
                    "return_value": 1
                },
                "xmalloc": {
                    "allocate_memory": 3
                }
            },
            "called": [
                "FUN_00119dd0",
                "strlen",
                "strncpy",
                "dcgettext",
                "FUN_00119ed0",
                "xmalloc",
                "FUN_00104ad6",
                "strncasecmp",
                "strchr"
            ],
            "calling": [
                "FUN_00104ad6"
            ],
            "code": "\nundefined  [16] parse_section_flags_00104ad6(void)\n\n{\n  int comparison_result;\n  undefined8 error_message;\n  char *comma_position;\n  char *next_section;\n  char *section;\n  size_t flag_length;\n  int flag_index;\n  uint section_flags;\n  char *section_name;\n  undefined result [16];\n  undefined8 return_address;\n  \n  do {\n    section_flags = section_flags | 0x2000;\n    section = next_section;\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            while( true ) {\n              if (section == (char *)0x0) {\n                result._4_4_ = 0;\n                result._0_4_ = section_flags;\n                result._8_8_ = return_address;\n                return result;\n              }\n              comma_position = strchr(section,0x2c);\n              if (comma_position == (char *)0x0) {\n                flag_length = strlen(section);\n                flag_index = (int)flag_length;\n                next_section = (char *)0x0;\n              }\n              else {\n                next_section = comma_position + 1;\n                flag_index = (int)comma_position - (int)section;\n              }\n              flag_length = (size_t)flag_index;\n              comparison_result = strncasecmp(section_name,section,flag_length);\n              if (comparison_result != 0) break;\n              section_flags = section_flags | 1;\n              section = next_section;\n            }\n            comparison_result = strncasecmp(\"load\",section,flag_length);\n            if (comparison_result != 0) break;\n            section_flags = section_flags | 2;\n            section = next_section;\n          }\n          comparison_result = strncasecmp(\"noload\",section,flag_length);\n          if (comparison_result != 0) break;\n          section_flags = section_flags | 0x200;\n          section = next_section;\n        }\n        comparison_result = strncasecmp(\"readonly\",section,flag_length);\n        if (comparison_result != 0) break;\n        section_flags = section_flags | 8;\n        section = next_section;\n      }\n      comparison_result = strncasecmp(\"debug\",section,flag_length);\n      if (comparison_result == 0) break;\n      comparison_result = strncasecmp(\"code\",section,flag_length);\n      if (comparison_result == 0) {\n        section_flags = section_flags | 0x10;\n        section = next_section;\n      }\n      else {\n        comparison_result = strncasecmp(\"data\",section,flag_length);\n        if (comparison_result == 0) {\n          section_flags = section_flags | 0x20;\n          section = next_section;\n        }\n        else {\n          comparison_result = strncasecmp(\"rom\",section,flag_length);\n          if (comparison_result == 0) {\n            section_flags = section_flags | 0x40;\n            section = next_section;\n          }\n          else {\n            comparison_result = strncasecmp(\"exclude\",section,flag_length);\n            if (comparison_result == 0) {\n              section_flags = section_flags | 0x8000;\n              section = next_section;\n            }\n            else {\n              comparison_result = strncasecmp(\"share\",section,flag_length);\n              if (comparison_result == 0) {\n                section_flags = section_flags | 0x8000000;\n                section = next_section;\n              }\n              else {\n                comparison_result = strncasecmp(\"contents\",section,flag_length);\n                if (comparison_result == 0) {\n                  section_flags = section_flags | 0x100;\n                  section = next_section;\n                }\n                else {\n                  comparison_result = strncasecmp(\"merge\",section,flag_length);\n                  if (comparison_result == 0) {\n                    section_flags = section_flags | 0x800000;\n                    section = next_section;\n                  }\n                  else {\n                    comparison_result = strncasecmp(\"strings\",section,flag_length);\n                    if (comparison_result != 0) {\n                      comma_position = (char *)xmalloc((long)(flag_index + 1));\n                      strncpy(comma_position,section,flag_length);\n                      comma_position[flag_length] = '\\0';\n                      error_message = dcgettext(0,\"unrecognized section flag `%s\\'\",5);\n                      FUN_00119ed0(error_message,comma_position);\n                      error_message = dcgettext(0,\"supported flags: %s\",5);\n                    \n                      FUN_00119dd0(error_message,\n                                   \"alloc, load, noload, readonly, debug, code, data, rom, exclude, share, contents, merge, strings\"\n                                  );\n                    }\n                    section_flags = section_flags | 0x1000000;\n                    section = next_section;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  } while( true );\n}\n\n",
            "current_name": "parse_section_flags_00104ad6",
            "entrypoint": "0x00104ad6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104ad6": "parse_section_flags_00104ad6",
                "__s": "section",
                "auVar6": "result",
                "dcgettext": "translate_message",
                "iVar1": "comparison_result",
                "iVar5": "flag_index",
                "pcVar3": "comma_position",
                "sVar4": "flag_length",
                "strchr": "find_character",
                "strlen": "get_section_length",
                "strncasecmp": "compare_strings",
                "strncpy": "copy_string",
                "uVar2": "error_message",
                "unaff_R14D": "section_flags",
                "unaff_R15": "section_name",
                "unaff_RBP": "next_section",
                "unaff_retaddr": "return_address",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104bba": {
            "additional_data": {
                "FUN_00104bba": {
                    "check_and_handle_errors": 1,
                    "check_and_set_attributes": 2,
                    "check_and_set_error_flags": 2,
                    "check_and_set_flags": 8,
                    "check_and_set_memory_attributes": 1,
                    "check_and_set_permissions": 1,
                    "check_and_set_values": 1,
                    "check_error_and_set_flags": 1,
                    "check_error_and_update_flags": 1,
                    "validate_and_set_flags": 5,
                    "validate_and_set_permissions": 1,
                    "validate_eax": 1,
                    "validate_flags": 2,
                    "validate_memory_access": 1,
                    "validate_memory_operations": 1,
                    "validate_memory_permissions": 2
                },
                "in_EAX": {
                    "access_flags": 1,
                    "attribute_flags": 1,
                    "eax": 1,
                    "eax_flag": 3,
                    "eax_flags": 1,
                    "eax_value": 5,
                    "error_flags": 1,
                    "flag": 1,
                    "flags": 14,
                    "input_flags": 1,
                    "permissions": 2
                },
                "uVar1": {
                    "error_message": 20,
                    "error_string": 2
                },
                "unaff_EBP": {
                    "context": 2,
                    "ebp": 2,
                    "ebp_flag": 2,
                    "ebp_flags": 1,
                    "ebp_value": 8,
                    "flag_mask": 1,
                    "flags": 2,
                    "memory_attributes": 1,
                    "memory_prot_flags": 1,
                    "other_flags": 2,
                    "permissions": 1,
                    "register": 1,
                    "register_ebp": 1,
                    "register_value": 1,
                    "registers": 1,
                    "status": 1,
                    "status_flags": 2,
                    "target_flags": 1
                },
                "unaff_R14": {
                    "address": 2,
                    "base_address": 3,
                    "buffer": 2,
                    "buffer_address": 1,
                    "data": 1,
                    "data_address": 2,
                    "memory_address": 3,
                    "memory_pointer": 1,
                    "offset": 1,
                    "r14": 2,
                    "r14_offset": 2,
                    "r14_value": 6,
                    "register_r14": 2,
                    "result": 1,
                    "result_address": 1,
                    "var": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00114190"
            ],
            "code": "\nvoid check_error_and_set_flags_00104bba(void)\n\n{\n  uint flags;\n  undefined8 error_message;\n  uint ebp_value;\n  long r14_value;\n  \n  if ((flags & 2) != 0) {\n    error_message = dcgettext(0,\"error: %s both copied and removed\",5);\n                    \n    FUN_00119dd0(error_message);\n  }\n  if ((((flags & 8) == 0) || ((ebp_value & 0x10) == 0)) && ((ebp_value & 0x18) != 0x18)) {\n    if ((((flags & 0x20) == 0) || ((ebp_value & 0x40) == 0)) && ((ebp_value & 0x60) != 0x60)) {\n      *(uint *)(r14_value + 0x14) = flags | ebp_value;\n      return;\n    }\n    error_message = dcgettext(0,\"error: %s both sets and alters LMA\",5);\n                    \n    FUN_00119dd0(error_message);\n  }\n  error_message = dcgettext(0,\"error: %s both sets and alters VMA\",5);\n                    \n  FUN_00119dd0(error_message);\n}\n\n",
            "current_name": "check_error_and_set_flags_00104bba",
            "entrypoint": "0x00104bba",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104bba": "check_error_and_set_flags_00104bba",
                "in_EAX": "flags",
                "uVar1": "error_message",
                "unaff_EBP": "ebp_value",
                "unaff_R14": "r14_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104c36": {
            "additional_data": {
                "FUN_00104c36": {
                    "parse_and_print_lines": 1,
                    "parse_input_lines": 1,
                    "parse_lines": 3,
                    "parse_text": 1,
                    "process_lines": 25
                },
                "LAB_00104c3f": {
                    "handle_spaces": 1
                },
                "LAB_00114599": {
                    "handle_null_char": 1
                },
                "LAB_001145e6": {
                    "handle_tabs_or_spaces": 1
                },
                "LAB_00114676": {
                    "handle_newline": 1
                },
                "bVar4": {
                    "current_byte": 4,
                    "next_byte": 1,
                    "next_char": 10,
                    "next_char2": 1,
                    "next_char_value": 1,
                    "next_character": 4,
                    "next_next_char": 1,
                    "temp_byte": 2,
                    "temp_byte3": 1
                },
                "in_CL": {
                    "current_char": 21,
                    "current_char_value": 1,
                    "current_character": 8
                },
                "in_stack_00000008": {
                    "arg1": 1,
                    "error_message": 2,
                    "file_name": 2,
                    "filename": 6,
                    "format_string": 8,
                    "line_number": 1,
                    "message": 3,
                    "message_format": 2,
                    "msg_arg1": 1,
                    "msg_format": 1,
                    "rubbish_message": 1,
                    "stack_arg1": 1,
                    "stack_val8": 1,
                    "stack_variable1": 1
                },
                "in_stack_00000010": {
                    "arg2": 1,
                    "msg_arg2": 1,
                    "result": 8,
                    "result_ptr": 3,
                    "return_address": 8,
                    "return_address_ptr": 1,
                    "return_value": 4,
                    "return_value_pointer": 1,
                    "return_var": 1,
                    "stack_arg2": 1,
                    "stack_val10": 1,
                    "stack_variable2": 1
                },
                "pbVar1": {
                    "pb_var1": 2
                },
                "pbVar2": {
                    "line_char": 1,
                    "pb_var2": 2,
                    "slot": 1,
                    "slot_end": 1,
                    "temp_byte": 1
                },
                "pbVar3": {
                    "current_byte": 1,
                    "current_char": 1,
                    "current_position": 1,
                    "current_ptr": 1,
                    "inner_loop_pointer": 1,
                    "line_ptr2": 1,
                    "line_start_pointer": 1,
                    "next_byte": 1,
                    "next_char": 7,
                    "next_character": 2,
                    "next_line": 1,
                    "next_line_start": 1,
                    "next_position": 1,
                    "pb_var3": 1,
                    "position2": 1,
                    "ptr_pb_var3": 1,
                    "rubbish_start": 1,
                    "temp_byte2": 1,
                    "temp_pointer": 2,
                    "temp_pos": 1,
                    "temp_ptr": 2
                },
                "pbVar4": {
                    "current_char2": 1,
                    "pb_var4": 1,
                    "temp_byte": 1,
                    "temp_char": 1
                },
                "pbVar5": {
                    "current_byte": 1,
                    "current_byte_2": 1,
                    "current_char": 1,
                    "current_character": 1,
                    "current_character_pointer": 1,
                    "current_line": 5,
                    "current_pos": 1,
                    "current_position": 3,
                    "current_ptr": 2,
                    "line_buffer": 1,
                    "line_end": 2,
                    "line_pointer": 1,
                    "line_ptr": 4,
                    "next_position": 1,
                    "ptr": 1,
                    "ptr_current_line": 1,
                    "scan_ptr": 1,
                    "temp_byte_pointer": 1,
                    "temp_ptr": 1
                },
                "ppbVar2": {
                    "hash_table_slot": 3,
                    "htab_slot": 1,
                    "line_pointer": 1,
                    "ppb_var2": 1,
                    "ptr_ppb_var2": 1,
                    "slot": 7,
                    "slot_pointer": 6,
                    "slot_ptr": 7,
                    "table_entry": 1
                },
                "uVar1": {
                    "err_msg": 1,
                    "error_message": 7,
                    "error_msg": 2,
                    "error_text": 1,
                    "localized_message": 1,
                    "message": 1,
                    "msg_var1": 1,
                    "msgid": 1,
                    "translated_message": 1,
                    "translated_string": 1,
                    "translation": 1,
                    "translation_pointer": 1,
                    "u_var1": 1
                },
                "unaff_EBP": {
                    "ebp": 1,
                    "ebp_val": 1,
                    "line_count": 11,
                    "line_counter": 5,
                    "line_index": 2,
                    "line_num": 2,
                    "line_number": 9
                },
                "unaff_R13": {
                    "callback": 1,
                    "callback_function": 2,
                    "file_descriptor": 1,
                    "file_name": 4,
                    "file_path": 1,
                    "file_pointer": 1,
                    "file_ptr": 1,
                    "ignored_value": 1,
                    "locale": 1,
                    "message": 1,
                    "msg": 1,
                    "msg_ptr": 1,
                    "r13_val": 1,
                    "result": 1,
                    "return_address": 2,
                    "return_ptr": 1,
                    "return_value": 1,
                    "source_filename": 1,
                    "stack_pointer": 1,
                    "stack_value": 1,
                    "unaff_r13": 1
                },
                "unaff_R14": {
                    "buffer_end": 1,
                    "current_char": 1,
                    "current_char_ptr": 1,
                    "current_line": 5,
                    "current_position": 2,
                    "current_ptr": 1,
                    "end_of_file": 1,
                    "end_of_line": 1,
                    "line_end": 5,
                    "line_marker": 1,
                    "line_next": 1,
                    "line_ptr3": 1,
                    "line_start": 3,
                    "next_line_ptr": 1,
                    "previous_line": 1,
                    "previous_position": 1,
                    "ptr_r14": 1,
                    "r14_val": 1,
                    "temp_buffer": 1,
                    "temp_pointer2": 1
                },
                "unaff_R15": {
                    "buffer_ptr": 1,
                    "current_line_2": 1,
                    "current_line_ptr": 1,
                    "current_line_start": 1,
                    "current_position": 1,
                    "line_begin": 1,
                    "line_buffer": 2,
                    "line_end": 3,
                    "line_ptr": 3,
                    "line_start": 7,
                    "next_line": 4,
                    "next_position": 1,
                    "ptr_r15": 1,
                    "r15_val": 1,
                    "start_of_line": 1,
                    "temp_pointer3": 1,
                    "text_ptr2": 1
                },
                "unaff_RBL": {
                    "line_end": 1
                },
                "unaff_RBX": {
                    "current_line": 6,
                    "input_buffer": 1,
                    "line": 2,
                    "line_buffer": 3,
                    "line_pointer": 2,
                    "line_ptr": 8,
                    "line_start": 3,
                    "position2": 1,
                    "previous_line": 1,
                    "ptr_rbx": 1,
                    "rbx_copy": 1,
                    "temp_pointer1": 1,
                    "text_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00104cc1"
            ],
            "code": "\nvoid process_lines_00104c36(void)\n\n{\n  undefined8 error_message;\n  byte **slot_ptr;\n  byte *next_char;\n  byte current_char;\n  byte next_char;\n  byte *line_ptr;\n  int line_count;\n  byte *current_line;\n  undefined8 file_name;\n  byte *current_line;\n  byte *line_start;\n  undefined8 format_string;\n  undefined8 *result;\n  \n  do {\n    current_line = line_start;\n    if (current_char == 9) goto handle_spaces;\n    do {\n      if ((current_char == 10) || (current_char == 0xd)) goto handle_newline;\n      if (current_char == 0) goto handle_null_char;\n      current_char = current_line[1];\n      current_line = current_line + 1;\n    } while ((current_char != 0x20) && (current_char != 9));\n    if ((char)current_char < '\\x0e') {\nhandle_newline:\n      if ((-0x2402L >> (current_char & 0x3f) & 1U) != 0) goto handle_tabs_or_spaces;\n    }\n    else {\nhandle_tabs_or_spaces:\n      next_char = current_line[1];\n      if ((((((next_char == 9) || (next_char == 0x20)) &&\n            ((next_char = current_line[2], next_char == 9 || (next_char == 0x20)))) &&\n           ((next_char = current_line[3], next_char == 9 || (next_char == 0x20)))) &&\n          ((next_char = current_line[4], next_char == 9 || (next_char == 0x20)))) &&\n         ((next_char = current_line[5], next_char == 9 || (next_char == 0x20)))) {\n        next_char = current_line[6];\n        next_char = current_line + 6;\n        if ((next_char == 9) || (next_char == 0x20)) {\n          do {\n            do {\n              next_char = next_char[1];\n              next_char = next_char + 1;\n            } while (next_char == 0x20);\n          } while (next_char == 9);\n        }\n      }\n      if ((0xd < next_char) || ((-0x2402L >> (next_char & 0x3f) & 1U) != 0)) {\n        error_message = dcgettext(0,\"%s:%d: Ignoring rubbish found on this line\",5);\n        FUN_00119ed0(error_message,format_string,line_count);\n      }\n    }\nhandle_null_char:\n    *current_line = 0;\n    if (line_start < current_line) {\n      slot_ptr = (byte **)htab_find_slot();\n      *slot_ptr = line_start;\n    }\n    line_count = line_count + 1;\n    current_line = line_ptr;\n    if (current_line[1] == 0) {\n      *result = file_name;\n      return;\n    }\n    for (; next_char = *current_line, current_line = current_line, next_char != 10; current_line = current_line + 1) {\n      if ((char)next_char < '\\v') {\n        if (next_char == 0) {\n          next_char = current_line + 1;\n          goto LAB_00114553;\n        }\n      }\n      else {\n        if (next_char == 0xd) {\n          *current_line = 0;\n          next_char = current_line + 1;\n          if (current_line[1] == 10) {\n            next_char = current_line + 2;\n            current_line = current_line + 1;\n          }\n          goto LAB_00114553;\n        }\n        if (next_char == 0x23) {\n          FUN_00104d1c();\n          return;\n        }\n      }\n    }\n    *current_line = 0;\n    if (current_line[1] == 0xd) {\n      current_line = current_line + 1;\n      next_char = current_line + 2;\n    }\n    else {\n      next_char = current_line + 1;\n    }\nLAB_00114553:\n    current_char = *line_ptr;\n    line_start = line_ptr;\n    while (line_ptr = next_char, current_char == 0x20) {\nhandle_spaces:\n      current_line = line_start + 1;\n      line_start = line_start + 1;\n      next_char = line_ptr;\n      current_char = *current_line;\n    }\n  } while( true );\n}\n\n",
            "current_name": "process_lines_00104c36",
            "entrypoint": "0x00104c36",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104c36": "process_lines_00104c36",
                "LAB_00104c3f": "handle_spaces",
                "LAB_00114599": "handle_null_char",
                "LAB_001145e6": "handle_tabs_or_spaces",
                "LAB_00114676": "handle_newline",
                "bVar4": "next_char",
                "in_CL": "current_char",
                "in_stack_00000008": "format_string",
                "in_stack_00000010": "result",
                "pbVar2": "pb_var2",
                "pbVar3": "next_char",
                "pbVar5": "current_line",
                "ppbVar2": "slot_ptr",
                "uVar1": "error_message",
                "unaff_EBP": "line_count",
                "unaff_R13": "file_name",
                "unaff_R14": "current_line",
                "unaff_R15": "line_start",
                "unaff_RBX": "line_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104cc1": {
            "additional_data": {
                "F1": {
                    "process_lines": 1
                },
                "F2": {
                    "handle_comment": 1
                },
                "F3": {
                    "translation_lookup": 1
                },
                "F4": {
                    "find_slot_in_hashtable": 1
                },
                "F5": {
                    "log_error_message": 1
                },
                "FUN_00104c36": {
                    "initialize": 2,
                    "initialize_variables": 3
                },
                "FUN_00104cc1": {
                    "parse_and_ignore_garbage": 1,
                    "parse_and_ignore_rubbish": 3,
                    "parse_and_store_lines": 2,
                    "parse_config_file": 2,
                    "parse_file": 2,
                    "parse_file_lines": 1,
                    "parse_lines": 9,
                    "process_file": 1,
                    "process_file_data": 1,
                    "process_lines": 8
                },
                "FUN_00104d1c": {
                    "handle_comment": 6,
                    "handle_comment_line": 1,
                    "handle_hash_tag": 1,
                    "print_debug_info": 1,
                    "print_error_message": 1,
                    "print_error_msg": 1,
                    "process_comment": 2,
                    "process_special_char": 1
                },
                "FUN_00119ed0": {
                    "log_error_message": 2,
                    "log_warning": 1,
                    "print_error_message": 11,
                    "print_message": 1
                },
                "HTAB_find_slot": {
                    "find_slot": 1
                },
                "bVar4": {
                    "current_byte": 5,
                    "current_char": 9,
                    "current_char_val": 1,
                    "current_char_value": 1,
                    "next_char": 7,
                    "temp_char": 1
                },
                "dcgettext": {
                    "get_error_message": 7,
                    "get_locale_string": 1,
                    "get_localized_error_message": 1,
                    "get_localized_message": 1,
                    "get_localized_string": 1,
                    "get_message": 1,
                    "get_text": 1,
                    "get_translated_string": 1,
                    "translate_error_message": 1,
                    "translate_message": 1
                },
                "htab_find_Slot": {
                    "find_hash_table_slot": 1
                },
                "htab_find_slot": {
                    "find_empty_slot": 1,
                    "find_empty_slot_in_hash_table": 1,
                    "find_hash_slot": 3,
                    "find_hash_table_slot": 1,
                    "find_slot": 2,
                    "find_slot_in_hash_table": 2,
                    "find_slot_in_hashtable": 2,
                    "find_slot_in_table": 1
                },
                "in_R10": {
                    "current_char": 2,
                    "current_char_pointer": 1,
                    "current_line": 2,
                    "current_position": 2,
                    "iter_ptr": 1,
                    "line": 6,
                    "line_buffer": 2,
                    "line_end": 2,
                    "line_pointer": 1,
                    "line_ptr": 5,
                    "line_start": 1,
                    "next_char": 1
                },
                "param_1": {
                    "domain": 1,
                    "message": 1
                },
                "param_2": {
                    "format": 1,
                    "message_id": 1
                },
                "param_3": {
                    "msg_id_len": 1,
                    "value1": 1
                },
                "param_4": {
                    "translation": 1,
                    "value2": 1
                },
                "param_7": {
                    "error_format_string": 1,
                    "error_message": 1,
                    "file_name": 1,
                    "format_string": 3,
                    "ignore_msg": 1,
                    "ignore_warning_format": 1,
                    "line_ignored": 1,
                    "line_no": 1,
                    "line_number": 9,
                    "message": 1,
                    "msg_context": 1,
                    "param": 1,
                    "param1": 1,
                    "param_2": 1,
                    "param_4": 1,
                    "param_6": 1,
                    "parameter7": 1
                },
                "param_8": {
                    "error_container_ptr": 1,
                    "error_message": 2,
                    "error_ptr": 1,
                    "error_string_ptr": 1,
                    "ignore_warning_ptr": 1,
                    "log_ptr": 1,
                    "output": 4,
                    "output_param": 3,
                    "output_result": 1,
                    "param2": 1,
                    "param_3": 1,
                    "param_5": 1,
                    "param_7": 1,
                    "parameter8": 1,
                    "result": 5,
                    "result_ptr": 1,
                    "return_value": 1
                },
                "param_9": {
                    "current_char": 4,
                    "current_line": 4,
                    "ignored_line": 1,
                    "initial_line": 1,
                    "input_line": 2,
                    "input_param": 2,
                    "line": 9,
                    "line_text": 1,
                    "param3": 1,
                    "param_8": 1,
                    "parameter9": 1
                },
                "pbVar3": {
                    "ch": 1,
                    "char_ptr": 2,
                    "curr_char": 1,
                    "current_byte": 3,
                    "current_char": 12,
                    "current_char_pointer": 1,
                    "current_char_ptr": 2,
                    "current_character": 1,
                    "line_ptr": 1
                },
                "pbVar5": {
                    "byte_pointer": 1,
                    "current_line": 1,
                    "current_text": 1,
                    "end_of_line": 2,
                    "end_ptr": 1,
                    "line": 1,
                    "line_end": 2,
                    "line_ptr": 1,
                    "line_start": 3,
                    "line_start_copy": 1,
                    "line_start_ptr": 1,
                    "next_char": 2,
                    "next_line": 1,
                    "next_line_ptr": 2,
                    "orig_line_ptr": 1,
                    "start_of_comment": 1,
                    "start_of_field": 1,
                    "start_of_line": 1
                },
                "ppbVar2": {
                    "hash_slot": 2,
                    "hash_table_entry": 1,
                    "hash_table_slot": 3,
                    "htab_slot": 2,
                    "slot": 8,
                    "slot_in_table": 1,
                    "slot_ptr": 5
                },
                "uVar1": {
                    "err_msg_ptr": 1,
                    "error_message": 8,
                    "error_message_format": 1,
                    "error_msg": 4,
                    "error_string": 3,
                    "ignore_rubbish_format": 1,
                    "localized_error_string": 1,
                    "translated_message": 1,
                    "translated_text": 1
                },
                "unaff_EBP": {
                    "char_count": 1,
                    "comment_character_count": 1,
                    "count": 1,
                    "counter": 1,
                    "ebp_register": 1,
                    "line_count": 7,
                    "line_counter": 2,
                    "line_index": 4,
                    "line_num": 1,
                    "line_number": 7
                },
                "unaff_R13": {
                    "default_value": 1,
                    "error_message": 3,
                    "error_message_template": 1,
                    "file_name": 1,
                    "file_path": 2,
                    "ignore_value": 1,
                    "ignoring_string": 1,
                    "line_counter": 1,
                    "log": 1,
                    "msg": 1,
                    "output_value": 1,
                    "param_1": 2,
                    "param_3": 1,
                    "parsing_data": 1,
                    "r13_register": 1,
                    "r13_value": 1,
                    "result": 1,
                    "ret_value": 1,
                    "rubbish_message": 1,
                    "translated_message": 1,
                    "translation": 1
                },
                "unaff_R14": {
                    "curr_char": 1,
                    "current_char_ptr": 1,
                    "current_line": 4,
                    "current_line_ptr": 1,
                    "empty_line_ptr": 1,
                    "end_of_line": 3,
                    "end_of_line_2": 1,
                    "line_break": 1,
                    "line_buffer": 1,
                    "line_end": 3,
                    "line_end_ptr": 1,
                    "line_ptr2": 1,
                    "line_start": 1,
                    "orig_line_start": 1,
                    "param_2": 1,
                    "param_4": 1,
                    "prev_char": 1,
                    "r14_register": 1,
                    "temp_line_pointer": 1,
                    "unaff_r14": 1
                },
                "unaff_R15": {
                    "bound_ptr": 1,
                    "hash_value": 1,
                    "last_line": 3,
                    "last_line_end": 1,
                    "last_line_ptr": 1,
                    "line_end": 2,
                    "line_ptr3": 1,
                    "line_start": 2,
                    "next_char": 1,
                    "next_line": 1,
                    "param_3": 1,
                    "param_5": 1,
                    "prev_char": 1,
                    "prev_line_ptr": 1,
                    "previous_char": 1,
                    "previous_line": 1,
                    "r15_register": 1,
                    "start_of_line": 3,
                    "start_of_line_2": 1,
                    "start_of_line_ptr": 1,
                    "unaff_r15": 1
                },
                "unaff_RBX": {
                    "current_char": 2,
                    "current_line": 8,
                    "current_line_ptr": 1,
                    "line_end": 1,
                    "line_ptr": 4,
                    "line_start": 4,
                    "next_line": 2,
                    "rbx_register": 1,
                    "start_of_line": 2,
                    "start_ptr": 1
                }
            },
            "called": [
                "FUN_00104cc1",
                "FUN_00104d1c",
                "dcgettext",
                "htab_find_slot",
                "FUN_00119ed0",
                "FUN_00104c36"
            ],
            "calling": [
                "FUN_00104cc1"
            ],
            "code": "\nvoid parse_and_store_lines_00104cc1(void)\n\n{\n  undefined8 error_message;\n  byte **slot;\n  byte *current_char;\n  byte current_char;\n  byte *current_line;\n  byte *line_start;\n  int line_count;\n  byte *line;\n  undefined8 error_message;\n  byte *current_line;\n  byte *last_line;\n  undefined8 line_number;\n  undefined8 *result;\n  byte *line;\n  \ncode_r0x00104cc1:\n  line = line;\n  error_message = dcgettext(0,\"%s:%d: Ignoring rubbish found on this line\",5);\n  FUN_00119ed0(error_message,line_number,line_count);\n  line_start = current_line;\n  line = line;\nLAB_00114599:\n  do {\n    *line = 0;\n    if (last_line < line) {\n      slot = (byte **)htab_find_slot();\n      *slot = last_line;\n    }\n    line_count = line_count + 1;\n    current_char = line_start;\n    if (current_line[1] == 0) {\n      *result = error_message;\n      return;\n    }\n    for (; current_char = *current_char, current_line = current_char, current_char != 10; current_char = current_char + 1) {\n      if ((char)current_char < '\\v') {\n        if (current_char == 0) {\n          current_line = current_char + 1;\n          goto LAB_00114553;\n        }\n      }\n      else {\n        if (current_char == 0xd) {\n          *current_char = 0;\n          current_line = current_char + 1;\n          if (current_char[1] == 10) {\n            current_line = current_char + 2;\n            current_line = current_char + 1;\n          }\n          goto LAB_00114553;\n        }\n        if (current_char == 0x23) {\n          FUN_00104d1c();\n          return;\n        }\n      }\n    }\n    *current_char = 0;\n    if (current_char[1] == 0xd) {\n      current_line = current_char + 1;\n      current_line = current_char + 2;\n    }\n    else {\n      current_line = current_char + 1;\n    }\nLAB_00114553:\n    current_char = *line_start;\n    last_line = line_start;\n    while ((current_char == 0x20 || (line = last_line, current_char == 9))) {\n      line_start = last_line + 1;\n      last_line = last_line + 1;\n      current_char = *line_start;\n    }\n    do {\n      line_start = current_line;\n      if ((current_char == 10) || (current_char == 0xd)) goto LAB_00114676;\n      if (current_char == 0) goto LAB_00114599;\n      current_char = line[1];\n      line = line + 1;\n    } while ((current_char != 0x20) && (current_char != 9));\n    if ((char)current_char < '\\x0e') {\nLAB_00114676:\n      if ((-0x2402L >> (current_char & 0x3f) & 1U) == 0) goto LAB_00114599;\n    }\n    current_char = line[1];\n    if ((((((current_char == 9) || (current_char == 0x20)) && ((current_char = line[2], current_char == 9 || (current_char == 0x20)))\n          ) && ((current_char = line[3], current_char == 9 || (current_char == 0x20)))) &&\n        ((current_char = line[4], current_char == 9 || (current_char == 0x20)))) &&\n       ((current_char = line[5], current_char == 9 || (current_char == 0x20)))) {\n      current_char = line[6];\n      current_char = line + 6;\n      if ((current_char == 9) || (current_char == 0x20)) {\n        do {\n          do {\n            current_char = current_char[1];\n            current_char = current_char + 1;\n          } while (current_char == 0x20);\n        } while (current_char == 9);\n      }\n    }\n    if ((0xd < current_char) || ((-0x2402L >> (current_char & 0x3f) & 1U) != 0)) goto code_r0x00104cc1;\n  } while( true );\n}\n\n",
            "current_name": "parse_and_store_lines_00104cc1",
            "entrypoint": "0x00104cc1",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104cc1": "parse_and_store_lines_00104cc1",
                "bVar4": "current_char",
                "dcgettext": "get_error_message",
                "htab_find_slot": "find_hash_slot",
                "in_R10": "line",
                "param_7": "line_number",
                "param_8": "result",
                "param_9": "line",
                "pbVar3": "current_char",
                "pbVar5": "line_start",
                "ppbVar2": "slot",
                "uVar1": "error_message",
                "unaff_EBP": "line_count",
                "unaff_R13": "error_message",
                "unaff_R14": "current_line",
                "unaff_R15": "last_line",
                "unaff_RBX": "current_line"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104d1c": {
            "additional_data": {
                "FUN_00104d1c": {
                    "parse_and_ignore_rubbish": 2,
                    "parse_and_process_lines": 1,
                    "parse_input": 2,
                    "parse_input_lines": 2,
                    "parse_lines": 7,
                    "process_data": 1,
                    "process_input": 1,
                    "process_input_lines": 2,
                    "process_lines": 11,
                    "process_text_lines": 1
                },
                "F_00104d1c": {
                    "process_lines": 1
                },
                "bVar4": {
                    "ch": 2,
                    "curr_byte": 1,
                    "current_byte": 3,
                    "current_char": 13,
                    "current_char_byte": 2,
                    "current_char_copy": 1,
                    "current_char_value": 1,
                    "current_character": 1,
                    "next_char": 2
                },
                "in_stack_00000008": {
                    "dcgettext_arg1": 1,
                    "error_message": 5,
                    "error_msg": 2,
                    "error_string": 1,
                    "file_name": 4,
                    "filename": 5,
                    "format": 1,
                    "format_string": 5,
                    "line_buffer": 1,
                    "line_number": 1,
                    "message": 3,
                    "msg": 1,
                    "printf_format_string": 1
                },
                "in_stack_00000010": {
                    "callback_arg": 2,
                    "callback_ptr": 1,
                    "error": 1,
                    "original_func_ptr": 1,
                    "previous_line": 1,
                    "result": 1,
                    "result_ptr": 1,
                    "return_addr": 1,
                    "return_address": 19,
                    "return_pointer": 3
                },
                "pbVar2": {
                    "current_char_pointer": 1,
                    "next_char_ptr": 1
                },
                "pbVar3": {
                    "after_spaces": 1,
                    "after_whitespace_char": 1,
                    "curr_char": 1,
                    "current_char": 2,
                    "current_position": 1,
                    "current_token": 1,
                    "next_char": 1,
                    "next_char_ptr": 1,
                    "next_character": 1,
                    "ptr": 3,
                    "ptr_to_ignore_rubbish": 1,
                    "ptr_to_rubbish": 1,
                    "rubbish": 1,
                    "rubbish_ptr": 1,
                    "temp_char": 1,
                    "temp_ptr": 1,
                    "token_ptr": 1,
                    "trailing_spaces_start": 1,
                    "trimmed_char_ptr": 1,
                    "trimmed_line": 1,
                    "whitespace_ptr": 1,
                    "word_ptr": 1,
                    "word_start": 1
                },
                "pbVar5": {
                    "next_char": 3,
                    "next_line": 9,
                    "next_line_buffer": 1,
                    "next_line_ptr": 8,
                    "next_line_start": 4
                },
                "pbVar6": {
                    "current_char": 1,
                    "current_char2": 1,
                    "current_char_pointer": 1,
                    "current_char_ptr": 2,
                    "current_character_ptr": 1,
                    "current_line": 1,
                    "current_line_ptr": 5,
                    "line_ptr": 1,
                    "line_trailing_spaces": 1,
                    "next_byte": 1,
                    "next_char": 1,
                    "next_line_char": 1,
                    "next_token": 1,
                    "next_token_ptr": 1,
                    "prev_char": 1,
                    "ptr2": 1,
                    "temp_char_pointer": 1,
                    "temp_char_ptr": 1,
                    "word_end": 1,
                    "word_start": 1
                },
                "pbVar7": {
                    "after_newline_char": 1,
                    "current_char_next_line": 1,
                    "current_char_ptr": 1,
                    "current_line": 1,
                    "current_line_char": 1,
                    "end_of_line": 1,
                    "end_ptr": 1,
                    "line_end": 2,
                    "new_line_ptr": 1,
                    "next_byte": 1,
                    "next_char": 5,
                    "next_char2": 1,
                    "next_char_ptr": 2,
                    "next_line": 1,
                    "next_line_character": 1,
                    "next_line_end": 1,
                    "possible_line_end_ptr": 1,
                    "prev_char": 2,
                    "temp_char_ptr2": 1
                },
                "ppbVar2": {
                    "found_slot": 1,
                    "hash_slot": 2,
                    "hash_table_entry": 3,
                    "hash_table_slot": 4,
                    "result_ptr": 1,
                    "slot": 7,
                    "slot_pointer": 1,
                    "slot_ptr": 7
                },
                "uVar1": {
                    "error_message": 9,
                    "error_msg": 3,
                    "error_string": 5,
                    "error_text": 1,
                    "message": 2,
                    "warning_message": 1
                },
                "unaff_EBP": {
                    "count": 2,
                    "counter": 2,
                    "line_count": 12,
                    "line_counter": 6,
                    "line_index": 2,
                    "line_number": 5,
                    "stack_pointer": 2
                },
                "unaff_R13": {
                    "callback": 5,
                    "callback_fn": 1,
                    "callback_function": 2,
                    "ctx": 1,
                    "dcgettext_ptr": 1,
                    "error_message": 4,
                    "error_msg": 1,
                    "file": 1,
                    "file_descriptor": 1,
                    "file_handle": 1,
                    "file_name": 2,
                    "file_path": 2,
                    "filename": 5,
                    "line_buffer": 1,
                    "message": 1,
                    "msg": 1,
                    "original_func": 1
                },
                "unaff_R14": {
                    "curr_line": 1,
                    "current_char": 1,
                    "current_line": 14,
                    "line": 1,
                    "line_buf_ptr": 1,
                    "line_buffer": 1,
                    "line_ptr": 5,
                    "line_start": 5,
                    "line_start_ptr": 2
                },
                "unaff_R15": {
                    "current": 1,
                    "current_char": 11,
                    "current_line_ptr": 1,
                    "line_buffer_start": 1,
                    "line_current": 1,
                    "line_end": 2,
                    "line_pointer": 1,
                    "line_ptr": 6,
                    "line_start": 5,
                    "next_line": 1,
                    "prev_line_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00104cc1"
            ],
            "code": "\nvoid process_input_lines_00104d1c(void)\n\n{\n  undefined8 error_message;\n  byte **slot_ptr;\n  byte *ptr;\n  byte current_char;\n  byte *next_line;\n  int line_count;\n  byte *current_line_ptr;\n  undefined8 callback;\n  byte *next_char;\n  byte *current_line;\n  byte *current_char;\n  undefined8 format_string;\n  undefined8 *return_address;\n  \n  *current_line = 0;\nLAB_00114520:\n  current_line = current_line + 1;\n  do {\n    current_char = *current_line;\n    next_char = current_line;\n    if (current_char == 10) {\n      *current_line = 0;\n      if (current_line[1] == 0xd) {\n        next_char = current_line + 1;\n        next_line = current_line + 2;\n      }\n      else {\n        next_line = current_line + 1;\n      }\n    }\n    else if ((char)current_char < '\\v') {\n      if (current_char != 0) goto LAB_00114520;\n      next_line = current_line + 1;\n    }\n    else {\n      if (current_char != 0xd) break;\n      *current_line = 0;\n      next_line = current_line + 1;\n      if (current_line[1] == 10) {\n        next_line = current_line + 2;\n        next_char = current_line + 1;\n      }\n    }\n    current_char = *current_char;\n    while ((current_char == 0x20 || (current_line_ptr = current_char, current_char == 9))) {\n      current_line_ptr = current_char + 1;\n      current_char = current_char + 1;\n      current_char = *current_line_ptr;\n    }\n    do {\n      if ((current_char == 10) || (current_char == 0xd)) goto LAB_00114676;\n      if (current_char == 0) goto LAB_00114599;\n      current_char = current_line_ptr[1];\n      current_line_ptr = current_line_ptr + 1;\n    } while ((current_char != 0x20) && (current_char != 9));\n    if ((char)current_char < '\\x0e') {\nLAB_00114676:\n      if ((-0x2402L >> (current_char & 0x3f) & 1U) != 0) goto LAB_001145e6;\n    }\n    else {\nLAB_001145e6:\n      current_char = current_line_ptr[1];\n      if ((((((current_char == 9) || (current_char == 0x20)) &&\n            ((current_char = current_line_ptr[2], current_char == 9 || (current_char == 0x20)))) &&\n           ((current_char = current_line_ptr[3], current_char == 9 || (current_char == 0x20)))) &&\n          ((current_char = current_line_ptr[4], current_char == 9 || (current_char == 0x20)))) &&\n         ((current_char = current_line_ptr[5], current_char == 9 || (current_char == 0x20)))) {\n        current_char = current_line_ptr[6];\n        ptr = current_line_ptr + 6;\n        if ((current_char == 9) || (current_char == 0x20)) {\n          do {\n            do {\n              current_char = ptr[1];\n              ptr = ptr + 1;\n            } while (current_char == 0x20);\n          } while (current_char == 9);\n        }\n      }\n      if ((0xd < current_char) || ((-0x2402L >> (current_char & 0x3f) & 1U) != 0)) {\n        error_message = dcgettext(0,\"%s:%d: Ignoring rubbish found on this line\",5);\n        FUN_00119ed0(error_message,format_string,line_count);\n      }\n    }\nLAB_00114599:\n    *current_line_ptr = 0;\n    if (current_char < current_line_ptr) {\n      slot_ptr = (byte **)htab_find_slot();\n      *slot_ptr = current_char;\n    }\n    line_count = line_count + 1;\n    current_line = next_line;\n    current_char = next_line;\n    if (next_char[1] == 0) {\n      *return_address = callback;\n      return;\n    }\n  } while( true );\n  if (current_char == 0x23) {\n    process_input_lines_00104d1c();\n    return;\n  }\n  goto LAB_00114520;\n}\n\n",
            "current_name": "process_input_lines_00104d1c",
            "entrypoint": "0x00104d1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104d1c": "process_input_lines_00104d1c",
                "bVar4": "current_char",
                "in_stack_00000008": "format_string",
                "in_stack_00000010": "return_address",
                "pbVar2": "next_char_ptr",
                "pbVar3": "ptr",
                "pbVar5": "next_line",
                "pbVar6": "current_line_ptr",
                "pbVar7": "next_char",
                "ppbVar2": "slot_ptr",
                "uVar1": "error_message",
                "unaff_EBP": "line_count",
                "unaff_R13": "callback",
                "unaff_R14": "current_line",
                "unaff_R15": "current_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104d25": {
            "additional_data": {
                "FUN_00104d25": {
                    "initialize_and_call_functions": 1,
                    "initialize_and_execute": 1,
                    "initialize_application": 11,
                    "initialize_data": 5,
                    "initialize_flags": 1,
                    "initialize_function": 2,
                    "initialize_program": 10
                },
                "FUN_001126c0": {
                    "call_function_with_params": 1,
                    "do_something": 1,
                    "execute_operation": 2,
                    "execute_process": 1,
                    "execute_sub_function": 6,
                    "execute_sub_function2": 1,
                    "initialize_component": 1,
                    "invoke_subfunction": 1,
                    "perform_action": 2,
                    "perform_action_a": 1,
                    "perform_initial_setup": 1,
                    "perform_initialization": 3,
                    "perform_operation": 4,
                    "perform_task": 1,
                    "process_data": 1,
                    "send_data": 1,
                    "set_configuration": 1,
                    "set_zero_parameters": 1,
                    "sub_function1": 1
                },
                "FUN_00114b84": {
                    "clean_up_application": 1,
                    "clean_up_resources": 1,
                    "cleanup": 4,
                    "cleanup_application": 1,
                    "cleanup_data": 1,
                    "cleanup_resources": 1,
                    "do_something": 1,
                    "execute_additional_steps": 1,
                    "execute_post_initialization": 2,
                    "execute_sub_function1": 1,
                    "finalize_processing": 1,
                    "finalize_program": 1,
                    "perform_action_b": 1,
                    "perform_cleanup": 11,
                    "perform_finalization": 1,
                    "process_data": 1,
                    "sub_function2": 1
                },
                "param_7": {
                    "arg": 2,
                    "context": 2,
                    "data": 1,
                    "file_path": 1,
                    "initialization_parameter": 1,
                    "input_param": 1,
                    "input_value": 1,
                    "optional_argument": 1,
                    "options": 1,
                    "param": 9,
                    "status_flag": 1,
                    "unknown_parameter": 1,
                    "unused_param": 5,
                    "unused_parameter": 1,
                    "user_input": 1
                }
            },
            "called": [
                "FUN_00114b84",
                "FUN_001126c0"
            ],
            "calling": [
                "FUN_00114690"
            ],
            "code": "\nvoid initialize_application_00104d25(void)\n\n{\n  undefined8 param;\n  \n  DAT_00127a20 = 1;\n  FUN_001126c0(0,param,0,0);\n  FUN_00114b84();\n  return;\n}\n\n",
            "current_name": "initialize_application_00104d25",
            "entrypoint": "0x00104d25",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104d25": "initialize_application_00104d25",
                "param_7": "param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104ea2": {
            "additional_data": {
                "DAT_001279cb": {
                    "check_archived_file": 1,
                    "is_archived": 1
                },
                "DAT_00127a20": {
                    "archive_exit_status": 1
                },
                "FUNC_00114e50": {
                    "is_archive_member_readable": 1
                },
                "FUN_00104ea2": {
                    "copy_archive_file": 1,
                    "copy_archive_files": 2,
                    "copy_archive_member": 1,
                    "copy_files_from_archive": 3,
                    "decompile_and_improve": 1,
                    "extract_and_copy_archive": 8,
                    "extract_and_copy_archived_files": 3,
                    "extract_and_copy_files_from_archive": 1,
                    "extract_and_copy_files_from_binary": 1,
                    "extract_and_save_archived_files": 1,
                    "extract_archive": 1,
                    "extract_archive_contents": 1,
                    "process_binary_file": 1
                },
                "FUN_0011a350": {
                    "handle_internal_stat_error": 1
                },
                "STR_COLON_cannot_create_tempdir_for_archive_copying_error_colon": {
                    "error_msg3": 1
                },
                "STR_COLON_illegal_pathname_found_in_archive_member": {
                    "error_msg1": 1
                },
                "STR_COLON_internal_stat_error_on": {
                    "error_msg2": 1
                },
                "STR_COPY_from_UNKNOWN_to_UNKNOWN": {
                    "copy_msg": 1
                },
                "STR_INTERNAL_ERROR_INVALID_STACK_PTR": {
                    "internal_error_msg": 1
                },
                "STR_UNABLE_to_recognise_the_format_of_file": {
                    "unknown_format_msg": 1
                },
                "STR_copy_from_s_s_to_s_s": {
                    "copy_from_to_msg": 1
                },
                "STR_illegal_pathname_found_in_archive_member_s": {
                    "illegal_pathname_msg": 1
                },
                "STR_stat_returns_negative_size_for": {
                    "negative_size_msg": 1
                },
                "STR_unable_to_recognize_the_format_of_file": {
                    "unrecognized_format_msg": 1
                },
                "__buf": {
                    "buffer": 1
                },
                "__errnum": {
                    "error_number": 1
                },
                "__file": {
                    "file": 1
                },
                "__format": {
                    "format": 1
                },
                "__mode": {
                    "mode": 1
                },
                "__name": {
                    "name": 1
                },
                "__ptr": {
                    "pointer": 1
                },
                "bVar17": {
                    "bit_flag": 1,
                    "boolean": 1,
                    "boolean_flag": 1,
                    "byte_flag": 1,
                    "byte_value": 1,
                    "byte_var": 2,
                    "byte_variable": 1,
                    "count": 1,
                    "counter": 1,
                    "flag": 2,
                    "is_directory": 1,
                    "is_negative": 1,
                    "is_negative_size": 1,
                    "is_zero": 1,
                    "offset": 2,
                    "temp_flag": 1,
                    "temporary": 1,
                    "unaligned_flag": 1
                },
                "cVar1": {
                    "char_code": 1,
                    "char_val": 1,
                    "character": 1,
                    "condition": 1,
                    "is_success": 1,
                    "result": 13,
                    "result_flag": 1,
                    "return_value": 1,
                    "status": 6,
                    "success": 1
                },
                "cVar17": {
                    "close_result": 1
                },
                "iVar2": {
                    "arch": 3,
                    "arch_type": 8,
                    "architecture": 4,
                    "int_val": 1,
                    "result": 4,
                    "return_value": 3,
                    "status": 2
                },
                "in_stack_00000030": {
                    "check_format": 1,
                    "close_all_flag": 1,
                    "copy_format": 1,
                    "copy_unknown_files": 1,
                    "flag": 1,
                    "format_error_flag": 1,
                    "format_flags": 1,
                    "unknown_flag": 2,
                    "unknown_format_flag": 2,
                    "var_name": 1
                },
                "lVar12": {
                    "bytes_left": 1,
                    "bytes_remaining": 1,
                    "counter": 1,
                    "file_pointer": 1,
                    "file_size": 7,
                    "filesize": 1,
                    "long_val": 1,
                    "remaining_bytes": 1,
                    "remaining_file_size": 2,
                    "remaining_size": 10,
                    "temp_dir_path_length": 1
                },
                "lVar12_2": {
                    "seek_result": 1
                },
                "lVar14": {
                    "buffer_size": 1,
                    "bytes_read_or_written": 1,
                    "bytes_to_copy": 1,
                    "bytes_to_read": 1,
                    "bytes_to_read_or_write": 1,
                    "bytes_to_write": 7,
                    "bytes_written": 5,
                    "chunk_size": 1,
                    "copy_size": 1,
                    "read_buffer_size": 1,
                    "write_bytes": 2
                },
                "lVar14_2": {
                    "buffer_size": 1
                },
                "lVar5": {
                    "bytes_copied": 1,
                    "bytes_read": 15,
                    "bytes_read_or_written": 2,
                    "bytes_written": 2,
                    "long_var": 1,
                    "read_bytes": 2,
                    "read_result": 2
                },
                "param_1": {
                    "param_1": 1
                },
                "param_10": {
                    "archive_file_descriptor": 1,
                    "archive_file_name": 1,
                    "archive_file_path": 4,
                    "archive_path_bfd": 1,
                    "archived_file": 1,
                    "archived_file_path": 1,
                    "extract_path": 1,
                    "file_name": 1,
                    "file_path": 1,
                    "file_to_extract": 1,
                    "format": 4,
                    "format_file": 1,
                    "format_path": 1,
                    "input_file_path": 1,
                    "output_file": 1,
                    "source_archive": 1,
                    "target_file_path": 1,
                    "temp_archive_path": 1,
                    "temp_dir": 1,
                    "temp_directory_copy": 1,
                    "temp_file": 1,
                    "temp_file_path": 1,
                    "temp_filename": 1
                },
                "param_11": {
                    "archive_file_format": 1,
                    "archive_file_path": 1,
                    "archive_mode": 1,
                    "create_file_mode": 1,
                    "create_flag": 1,
                    "file_flags": 1,
                    "file_mode": 4,
                    "mode": 6,
                    "open_mode": 3,
                    "temp_file": 1,
                    "temp_file_mode": 1,
                    "temp_file_name": 1,
                    "temp_file_template": 1,
                    "temp_filename": 1,
                    "write_mode": 6
                },
                "param_18": {
                    "chmod_mode": 1,
                    "chmod_value": 1,
                    "copy_file_mode": 1,
                    "file_mode": 2,
                    "file_permission": 5,
                    "file_permissions": 4,
                    "mode_value": 1,
                    "permission": 9,
                    "permissions": 2
                },
                "param_19": {
                    "archive_size": 4,
                    "expected_size": 2,
                    "file_offset": 1,
                    "file_size": 10,
                    "file_size_limit": 3,
                    "input_size": 1,
                    "max_file_size": 1,
                    "size": 1,
                    "total_file_size": 4
                },
                "param_2": {
                    "param_2": 1
                },
                "param_3": {
                    "param_3": 2
                },
                "param_4": {
                    "param_4": 2
                },
                "param_7": {
                    "archive_file_name": 2,
                    "archive_member_path_ptr": 1,
                    "archive_name": 1,
                    "archive_path": 1,
                    "archive_path_copy": 1,
                    "file_path": 1,
                    "input_file": 1,
                    "input_file_name": 1,
                    "input_filename": 1,
                    "original_archive_file_path": 1,
                    "original_file_name": 1,
                    "output_file_path": 2,
                    "output_file_path_list": 1,
                    "source_file": 3,
                    "source_file_name": 1,
                    "source_file_names": 1,
                    "source_file_path": 3,
                    "source_files": 1,
                    "source_path": 2,
                    "temp_dir_path": 2
                },
                "param_8": {
                    "archive_handler_addr": 1,
                    "bytes_read": 2,
                    "current_size_ptr": 1,
                    "destination_path": 1,
                    "file_descriptor_list": 1,
                    "file_size": 3,
                    "file_size_pointer": 1,
                    "file_size_ptr": 1,
                    "file_statuses": 1,
                    "output_file_descriptor": 1,
                    "size": 1,
                    "source_file_size": 2,
                    "source_file_sizes": 1,
                    "temp_dir_path": 1,
                    "temp_dir_pointer": 1,
                    "temp_dir_ptr": 1,
                    "temp_dir_size": 1,
                    "temp_file_descriptor": 1,
                    "temp_file_descriptor_ptr": 1,
                    "temp_file_path": 1,
                    "temp_file_pointer": 1,
                    "temp_file_sizes": 1,
                    "temp_files_array": 1,
                    "temp_paths": 1,
                    "temp_size": 1
                },
                "param_9": {
                    "archive_path": 1,
                    "base_temp_dir": 1,
                    "destination_dir": 1,
                    "temp_dir": 8,
                    "temp_dir_name": 3,
                    "temp_dir_path": 8,
                    "temp_dir_path_for_copying": 1,
                    "temp_directory": 3,
                    "temp_directory_name": 1,
                    "temp_directory_path": 2,
                    "tempdir": 1
                },
                "pcVar10": {
                    "archive_member": 1,
                    "current_file": 4,
                    "current_file_path": 1,
                    "error_description": 1,
                    "error_message": 8,
                    "error_msg": 2,
                    "error_string": 1,
                    "file_name": 4,
                    "file_path": 2,
                    "member_path": 1,
                    "source_file_path": 1,
                    "temp_file_name": 1
                },
                "pcVar13": {
                    "bfd_close": 1,
                    "bfd_close_func": 1,
                    "bfd_close_function": 1,
                    "close_func": 2,
                    "close_function": 8,
                    "function_ptr": 1
                },
                "pcVar15": {
                    "char_pointer": 1,
                    "current_char": 2,
                    "current_file_entry": 1,
                    "current_path": 2,
                    "directory_name": 1,
                    "nested_counter": 1,
                    "next_path_segment": 1,
                    "p_path": 1,
                    "path": 2,
                    "path_component": 1,
                    "path_delimiter": 1,
                    "path_name": 2,
                    "ptr_var": 1,
                    "slash_pos": 1,
                    "sub_file_path": 1,
                    "sub_path": 1,
                    "subdir": 1,
                    "temp_path": 2
                },
                "pcVar7": {
                    "char_ptr": 1,
                    "current_char": 5,
                    "current_char_2": 1,
                    "current_character": 3,
                    "current_directory": 1,
                    "current_file": 1,
                    "current_file_name": 1,
                    "current_path": 2,
                    "file_name": 1,
                    "file_path": 3,
                    "filename": 1,
                    "member_path": 1,
                    "nested_counter_ptr": 1,
                    "p_temp_path": 1,
                    "path": 1,
                    "path_pos": 1,
                    "pathname": 1,
                    "ptr_var": 1,
                    "tmp_var": 1
                },
                "piVar5": {
                    "errno_location": 1
                },
                "piVar9": {
                    "err_no": 1,
                    "errno": 1,
                    "errno_loc": 2,
                    "errno_location": 4,
                    "errno_location_pointer": 1,
                    "errno_ptr": 1,
                    "error_num_ptr": 2,
                    "error_number": 5
                },
                "ppcVar10": {
                    "member": 1,
                    "source_file_path": 1
                },
                "ppcVar13": {
                    "bfd_close_function": 1,
                    "close_func": 1,
                    "close_function": 1,
                    "copy_error": 1
                },
                "ppcVar15": {
                    "current_path": 1
                },
                "ppcVar3": {
                    "arch_files": 1,
                    "arch_name": 1,
                    "archive_file": 1,
                    "archive_file_info": 1,
                    "archived_file": 9,
                    "archived_file_descriptor": 1,
                    "archived_file_handle": 1,
                    "archived_files": 1,
                    "current_file": 1,
                    "file_archived": 1,
                    "file_arr": 1,
                    "file_ptr": 1,
                    "read_file_handle": 1,
                    "reroute_ptr": 1,
                    "stat_buf_ptr": 1,
                    "stat_function_ptr": 1,
                    "temp_directory_entries": 1,
                    "unaff_r15_file": 1
                },
                "ppcVar6": {
                    "archive": 2,
                    "archive_file": 4,
                    "archive_file_descriptor": 1,
                    "archive_file_pointer": 1,
                    "archive_handle": 2,
                    "archived_file_handle": 1,
                    "bfd": 1,
                    "bfd_handle": 4,
                    "bfd_output_file": 1,
                    "current_file": 1,
                    "current_file_info": 1,
                    "file": 1,
                    "file_pointer_arr": 1,
                    "file_ptr": 1,
                    "output_file": 2,
                    "ptr_to_archive_handler": 1,
                    "temp_file": 2,
                    "temp_file_handle": 1,
                    "write_file_handle": 1,
                    "write_result": 1
                },
                "psVar16": {
                    "destination_file_info": 1,
                    "file_info": 1,
                    "file_stat": 2,
                    "file_stat_buf_ptr": 1,
                    "file_stat_pointer": 1,
                    "file_stats": 3,
                    "file_stats_pointer": 1,
                    "ptr_to_stat_buffer": 1,
                    "s": 1,
                    "stat_buf": 1,
                    "stat_buffer": 4,
                    "stat_buffer_i": 1,
                    "stat_pointer": 1,
                    "stat_ptr": 2,
                    "temp_file_stats": 1,
                    "temp_stat": 1
                },
                "puVar8": {
                    "file_id": 1,
                    "malloced_temp_file_linked_list": 1,
                    "temp_dir": 3,
                    "temp_dir_buffer": 1,
                    "temp_dir_data": 1,
                    "temp_dir_info": 6,
                    "temp_file": 1,
                    "temp_file_info": 4,
                    "temp_path_ptr": 1,
                    "temp_struct": 1
                },
                "pvVar4": {
                    "buffer": 18,
                    "buffer_data": 1,
                    "pointer_var": 1,
                    "read_buffer": 1
                },
                "stat": {
                    "file_stats": 1
                },
                "uVar11": {
                    "error_message": 7,
                    "error_msg": 1,
                    "error_string": 1,
                    "format_message": 1,
                    "localized_error_message": 1,
                    "localized_text": 1,
                    "message": 1,
                    "temp_string": 1,
                    "translated_error_message": 1,
                    "translated_message": 1,
                    "translated_string": 1,
                    "var_name": 1
                },
                "unaff_EBX": {
                    "ebx_val": 1,
                    "error_code": 4,
                    "error_flag": 1,
                    "internal_stat_error": 3,
                    "internal_stat_error_flag": 1,
                    "is_stat_error": 2,
                    "stat_error": 5,
                    "stat_error_flag": 1,
                    "stat_failed": 1,
                    "stat_result": 5
                },
                "unaff_R12": {
                    "archive_file_dir": 1,
                    "archive_file_path": 2,
                    "archive_path": 7,
                    "destination_dir": 1,
                    "extract_dir": 1,
                    "filepath": 1,
                    "source_file": 1,
                    "sub_file_path": 1,
                    "target_directory": 1,
                    "temp_dir": 4,
                    "temp_dir_path": 3,
                    "temp_dir_path_with_prefix": 1,
                    "temp_directory_path": 1,
                    "temp_file_path": 2,
                    "tempdir_path": 1,
                    "working_directory": 1
                },
                "unaff_R13": {
                    "arch_handle": 1,
                    "copy_data": 1,
                    "temp_dir": 1,
                    "temp_dir_info": 2,
                    "temp_dir_info_list": 1,
                    "temp_directories": 2,
                    "temp_dirs": 2,
                    "temp_file": 1,
                    "temp_file_data": 3,
                    "temp_file_info": 4,
                    "temp_file_list": 2,
                    "temp_file_paths": 1,
                    "temp_files": 1,
                    "temp_files_linked_list": 1,
                    "temporary_file_data": 1
                },
                "unaff_R15": {
                    "archive": 4,
                    "archive_file": 1,
                    "archive_file_data": 1,
                    "archive_file_list": 1,
                    "archive_files": 3,
                    "archive_handler": 1,
                    "archived_file_info": 1,
                    "archived_files": 6,
                    "current_archive_file": 1,
                    "file_info": 1,
                    "file_list": 2,
                    "file_paths": 1,
                    "file_pointer": 1,
                    "input_file": 1,
                    "ptr_to_archive_handler_ptr": 1,
                    "read_file_handle_list": 1
                },
                "unaff_RBP": {
                    "archived_file_stat": 1,
                    "file_info": 1,
                    "file_stat": 5,
                    "file_stat_buf": 1,
                    "file_stats": 5,
                    "file_status": 3,
                    "stat_buffer": 8
                },
                "unaff_retaddr": {
                    "return_addr": 1,
                    "return_address": 24
                },
                "xVar11": {
                    "localized_error_message": 1
                }
            },
            "called": [
                "FUN_00104ea2",
                "unlink",
                "stat",
                "free",
                "bfd_bread",
                "chmod",
                "bfd_get_arch",
                "bfd_bwrite",
                "FUN_0011a0e0",
                "concat",
                "FUN_00114b84",
                "bfd_close_all_done",
                "FUN_00119ed0",
                "FUN_0011a110",
                "bfd_openw",
                "strerror",
                "printf",
                "dcgettext",
                "bfd_openr",
                "FUN_001052a2",
                "bfd_openr_next_archived_file",
                "FUN_001125fa",
                "FUN_001126c0",
                "bfd_close_all_done",
                "FUN_0011a350",
                "bfd_check_format",
                "bfd_close",
                "bfd_close",
                "FUN_00114e50",
                "xstrdup",
                "rmdir",
                "bfd_seek",
                "__errno_location",
                "xmalloc"
            ],
            "calling": [
                "FUN_00104ea2"
            ],
            "code": "\nvoid extract_and_copy_files_from_archive_00104ea2(void)\n\n{\n  char result;\n  int arch_type;\n  char **archived_file;\n  void *buffer;\n  long bytes_read;\n  char **archive_file;\n  char *current_char;\n  undefined8 *temp_dir_info;\n  int *error_number;\n  char *error_message;\n  undefined8 error_message;\n  long remaining_size;\n  code *close_function;\n  long bytes_to_write;\n  int stat_result;\n  file_stats *stat_buffer;\n  char *current_char;\n  file_stats *stat_buffer;\n  char *archive_path;\n  undefined8 *temp_file_info;\n  char **archived_files;\n  byte offset;\n  undefined8 return_address;\n  undefined8 *source_file;\n  long *file_size;\n  char *temp_dir;\n  undefined8 *archive_file_path;\n  undefined8 write_mode;\n  undefined8 unknown_format_flag;\n  uint permission;\n  long file_size;\n  \n  offset = 0;\ncode_r0x00104ea2:\n  archive_file = (char **)bfd_openw(archive_path,write_mode);\n  if (archive_file == (char **)0x0) {\nLAB_00104e80:\n    FUN_001126c0(archive_path,0,0,0);\nLAB_00104e93:\n    DAT_00127a20 = 1;\n  }\n  else {\nLAB_00114a5f:\n    result = FUNC_00114e50(archived_files,archive_file,return_address);\n    if (result == '\\0') {\n      arch_type = bfd_get_arch(archived_files);\n      if (arch_type == 0) goto LAB_00104d75;\n      result = bfd_close_all_done(archive_file);\n      if (result != '\\0') goto LAB_00104ec9;\n      FUN_001126c0(archive_path,0,0,0);\n      goto LAB_00104ec9;\n    }\n    result = bfd_close(archive_file);\n    archive_file = archived_files;\n    if (result == '\\0') {\n      FUN_001126c0(archive_path,0,0,0);\n      DAT_00127a20 = 1;\n    }\nLAB_00114a86:\n    if ((DAT_001279cb != '\\0') && (stat_result == 0)) {\n      FUN_0011a350(archive_path,stat_buffer);\n    }\n    remaining_size = bfd_openr(archive_path,write_mode);\n    temp_file_info[2] = remaining_size;\n    *file_size = remaining_size;\n    file_size = (long *)(remaining_size + 0xf0);\n    archived_files = (char **)bfd_openr_next_archived_file(archive_file_path,archive_file);\n    bfd_close(archive_file);\n    while ((DAT_00127a20 == 0 && (archived_files != (char **)0x0))) {\n      error_message = *archived_files;\n      current_char = error_message;\n      if (*error_message == '/') {\nLAB_0010527d:\n        error_message = dcgettext(0,\"illegal pathname found in archive member: %s\",5);\n        FUN_00119ed0(error_message,error_message);\n        goto LAB_00104e93;\n      }\n      while (*current_char != '\\0') {\n        current_char = current_char;\n        if ((*current_char == '.') && (current_char = current_char + 1, current_char[1] == '.')) {\n          current_char = current_char + 2;\n          if ((current_char[2] == '\\0') || (current_char[2] == '/')) goto LAB_0010527d;\n        }\n        for (; (*current_char != '\\0' && (*current_char != '/')); current_char = current_char + 1) {\n        }\n        current_char = current_char;\n        if (*current_char == '/') {\n          FUN_001052a2();\n          return;\n        }\n      }\n      stat_buffer = (file_stats *)&stack0x00000050;\n      archive_path = (char *)concat(temp_dir,&DAT_0011b47d);\n      arch_type = file_stats(archive_path,stat_buffer);\n      temp_dir_info = temp_file_info;\n      if (-1 < arch_type) {\n        remaining_size = FUN_0011a0e0(archive_path);\n        free(archive_path);\n        if (remaining_size == 0) {\n          error_number = __errno_location();\n          error_message = strerror(*error_number);\n          error_message = dcgettext(0,\"cannot create tempdir for archive copying (error: %s)\",5);\n          FUN_00119ed0(error_message,error_message);\n          goto LAB_00104e93;\n        }\n        temp_dir_info = (undefined8 *)xmalloc(0x18);\n        error_message = *archived_files;\n        *temp_dir_info = temp_file_info;\n        temp_dir_info[2] = 0;\n        temp_dir_info[1] = remaining_size;\n        archive_path = (char *)concat(remaining_size,&DAT_0011b47d,error_message);\n      }\n      stat_result = 0;\n      if (DAT_001279cb != '\\0') {\n        stat_buffer = stat_buffer;\n        for (remaining_size = 0x24; remaining_size != 0; remaining_size = remaining_size + -1) {\n          *(undefined4 *)&stat_buffer->st_dev = 0;\n          stat_buffer = (file_stats *)((long)stat_buffer + (ulong)offset * -8 + 4);\n        }\n        archive_file = (char **)archived_files[0x1d];\n        if ((char **)archived_files[0x1d] == (char **)0x0) {\n          archive_file = archived_files;\n        }\n        stat_result = (**(code **)(archive_file[1] + 0x1e8))(archived_files,stat_buffer);\n        if (stat_result != 0) {\n          error_message = *archived_files;\n          error_message = dcgettext(0,\"internal file_stats error on %s\",5);\n          FUN_00119ed0(error_message,error_message);\n        }\n      }\n      temp_file_info = (undefined8 *)xmalloc(0x18);\n      temp_file_info[1] = archive_path;\n      *temp_file_info = temp_dir_info;\n      temp_file_info[2] = 0;\n      result = bfd_check_format(archived_files,1);\n      if (result != '\\0') {\n        if (unknown_format_flag._7_1_ != '\\0') goto code_r0x00104ea2;\n        archive_file = (char **)bfd_openw(archive_path,*(undefined8 *)archived_files[1]);\n        if (archive_file == (char **)0x0) goto LAB_00104e80;\n        goto LAB_00114a5f;\n      }\n      error_message = dcgettext(0,\"Unable to recognise the format of file\",5);\n      FUN_001126c0(0,archived_files,0,error_message);\n      archive_file = (char **)bfd_openw(archive_path,write_mode);\n      if (archive_file == (char **)0x0) goto LAB_00104e80;\nLAB_00104d75:\n      archived_file = (char **)archived_files[0x1d];\n      if ((char **)archived_files[0x1d] == (char **)0x0) {\n        archived_file = archived_files;\n      }\n      arch_type = (**(code **)(archived_file[1] + 0x1e8))(archived_files);\n      remaining_size = file_size;\n      if (arch_type == 0) {\n        if (file_size < 0) {\n          FUN_001125fa(archived_files);\n          error_message = dcgettext(0,\"file_stats returns negative size for `%s\\'\",5);\n          FUN_00119ed0(error_message);\n        }\n        else {\n          arch_type = bfd_seek(archived_files,0,0);\n          if (arch_type == 0) {\n            if (DAT_001279c9 != '\\0') {\n              error_message = *archive_file;\n              error_message = FUN_001125fa(archived_files);\n              current_char = (char *)dcgettext(0,\"copy from `%s\\' [unknown] to `%s\\' [unknown]\\n\",5);\n              printf(current_char,error_message,error_message);\n            }\n            buffer = (void *)xmalloc(0x2000);\n            while( true ) {\n              if (remaining_size == 0) {\n                chmod(*archive_file,permission | 0x100);\n                free(buffer);\n                result = bfd_close_all_done(archive_file);\n                archive_file = archived_files;\n                if (result == '\\0') {\n                  FUN_001126c0(archive_path,0,0,0);\n                  DAT_00127a20 = 1;\n                }\n                goto LAB_00114a86;\n              }\n              bytes_to_write = 0x2000;\n              if (remaining_size < 0x2001) {\n                bytes_to_write = remaining_size;\n              }\n              bytes_read = bfd_bread(buffer,bytes_to_write,archived_files);\n              archived_file = archived_files;\n              if ((bytes_to_write != bytes_read) ||\n                 (bytes_read = bfd_bwrite(buffer,bytes_to_write,archive_file), archived_file = archive_file, bytes_to_write != bytes_read))\n              break;\n              remaining_size = remaining_size - bytes_to_write;\n            }\n            FUN_001126c0(0,archived_file,0,0);\n            free(buffer);\n          }\n          else {\n            error_message = FUN_001125fa(archived_files);\n            FUN_0011a110(error_message);\n          }\n        }\n      }\n      else {\n        FUN_001126c0(0,archived_files,0,0);\n      }\n      result = bfd_close_all_done(archive_file);\n      if (result == '\\0') {\n        FUN_001126c0(archive_path,0,0,0);\n      }\nLAB_00104ec9:\n      unlink(archive_path);\n      DAT_00127a20 = 1;\n    }\n    *file_size = 0;\n    buffer = (void *)xstrdup(*source_file);\n    if (DAT_00127a20 == 0) {\n      close_function = bfd_close;\n    }\n    else {\n      close_function = bfd_close_all_done;\n    }\n    result = (*close_function)(source_file);\n    if (result == '\\0') {\n      DAT_00127a20 = 1;\n      FUN_001126c0(buffer,0,0,0);\n    }\n    free(buffer);\n    buffer = (void *)xstrdup(*archive_file_path);\n    result = bfd_close(archive_file_path);\n    if (result == '\\0') {\n      DAT_00127a20 = 1;\n      FUN_001126c0(buffer,0,0,0);\n    }\n    free(buffer);\n  }\n  while (temp_file_info != (undefined8 *)0x0) {\n    if (temp_file_info[2] == 0) {\n      rmdir((char *)temp_file_info[1]);\n    }\n    else {\n      bfd_close();\n      unlink((char *)temp_file_info[1]);\n    }\n    free((void *)temp_file_info[1]);\n    temp_dir_info = (undefined8 *)*temp_file_info;\n    free(temp_file_info);\n    temp_file_info = temp_dir_info;\n  }\n  rmdir(temp_dir);\n  free(temp_dir);\n  return;\n}\n\n",
            "current_name": "extract_and_copy_files_from_archive_00104ea2",
            "entrypoint": "0x00104ea2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104ea2": "extract_and_copy_files_from_archive_00104ea2",
                "bVar17": "offset",
                "cVar1": "result",
                "iVar2": "arch_type",
                "in_stack_00000030": "unknown_format_flag",
                "lVar12": "remaining_size",
                "lVar14": "bytes_to_write",
                "lVar5": "bytes_read",
                "param_10": "archive_file_path",
                "param_11": "write_mode",
                "param_18": "permission",
                "param_19": "file_size",
                "param_7": "source_file",
                "param_8": "file_size",
                "param_9": "temp_dir",
                "pcVar10": "error_message",
                "pcVar13": "close_function",
                "pcVar15": "current_char",
                "pcVar7": "current_char",
                "piVar9": "error_number",
                "ppcVar3": "archived_file",
                "ppcVar6": "archive_file",
                "psVar16": "stat_buffer",
                "puVar8": "temp_dir_info",
                "pvVar4": "buffer",
                "stat": "file_stats",
                "uVar11": "error_message",
                "unaff_EBX": "stat_result",
                "unaff_R12": "archive_path",
                "unaff_R13": "temp_file_info",
                "unaff_R15": "archived_files",
                "unaff_RBP": "stat_buffer",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001052a2": {
            "additional_data": {
                "FUN_001052a2": {
                    "copy_archive": 2,
                    "copy_archive_content": 1,
                    "copy_archive_file": 1,
                    "extract_and_copy_archive": 6,
                    "extract_and_copy_archived_files": 3,
                    "extract_archive": 6,
                    "extract_archive_files": 1,
                    "extract_files_from_archive": 1,
                    "process_archive": 3,
                    "process_archive_file": 1,
                    "process_archive_member": 1,
                    "process_file": 1
                },
                "__format": {
                    "char_array1": 1,
                    "copy_format": 1,
                    "error_format": 3,
                    "error_format_string": 2,
                    "error_message_format": 2,
                    "error_msg": 1,
                    "error_msg_format": 5,
                    "format_str": 1,
                    "format_string": 15
                },
                "bVar18": {
                    "bool_var": 1,
                    "boolean": 1,
                    "byte1": 1,
                    "byte_flag": 2,
                    "byte_val": 1,
                    "byte_var": 7,
                    "byte_var1": 1,
                    "byte_var18": 1,
                    "byte_variable": 1,
                    "flag": 4,
                    "is_close_all": 1,
                    "is_negative": 1,
                    "local_flag": 1,
                    "loop_flag": 1,
                    "refresh_flag": 1,
                    "stack_var": 1,
                    "temp_flag": 1,
                    "temporary_flag": 1,
                    "tmp_byte": 1,
                    "unused": 1,
                    "zero_byte": 1
                },
                "cVar1": {
                    "char1": 2,
                    "char_var": 4,
                    "character": 4,
                    "character_var1": 1,
                    "check_format": 2,
                    "check_format_result": 1,
                    "current_char": 3,
                    "format_character": 1,
                    "format_check": 2,
                    "format_check_result": 1,
                    "format_is_valid": 1,
                    "format_result": 1,
                    "format_valid": 4,
                    "is_slash": 1,
                    "is_valid_format": 1,
                    "result": 1
                },
                "iVar2": {
                    "arch": 1,
                    "arch_format": 1,
                    "arch_type": 8,
                    "arch_type_result": 1,
                    "arch_value": 2,
                    "arch_version": 1,
                    "format_error_code": 1,
                    "int1": 3,
                    "int_value1": 1,
                    "int_var": 5,
                    "integer1": 3,
                    "integer_var2": 1,
                    "result": 1,
                    "temp_var1": 1
                },
                "iVar3": {
                    "int2": 3,
                    "int_value2": 1,
                    "int_var2": 1,
                    "integer2": 3,
                    "integer_var3": 1,
                    "internal_stat_error": 1,
                    "stat_check": 1,
                    "stat_result": 16,
                    "stat_return_value": 1,
                    "temp_var2": 1,
                    "tmp_int": 1
                },
                "in_RAX": {
                    "archive_dir_ptr": 1,
                    "archive_file_ptr": 1,
                    "archive_index": 1,
                    "archive_ptr": 1,
                    "base_address": 2,
                    "current_pos": 1,
                    "file_descriptor": 2,
                    "file_handle": 1,
                    "file_length": 1,
                    "file_path_length": 1,
                    "file_pointer": 1,
                    "file_ptr": 2,
                    "file_ptr2": 1,
                    "in_register_rax": 1,
                    "in_register_return": 1,
                    "long1": 1,
                    "long2": 1,
                    "path_len": 1,
                    "rax": 1,
                    "rax_value": 6,
                    "start_path_len": 1,
                    "temp": 1,
                    "temp_long": 1
                },
                "in_stack_00000008": {
                    "command_args": 1,
                    "destination_directory": 1,
                    "file_list_ptr": 1,
                    "file_name1_ptr": 1,
                    "in_stack_pointer1": 2,
                    "in_stack_size8": 1,
                    "in_stack_var1": 1,
                    "in_stack_variable1": 3,
                    "input_file_ptr": 1,
                    "input_files": 2,
                    "output_dir": 1,
                    "output_file_path": 1,
                    "output_path": 1,
                    "param4": 1,
                    "param_stack1": 2,
                    "param_stack8": 2,
                    "ptr_arg1": 1,
                    "stack_param1": 2,
                    "stack_var1": 3,
                    "stack_variable1": 1,
                    "temp_dir_path": 1,
                    "u_long_pointer3": 1
                },
                "in_stack_00000010": {
                    "arch_file_handle": 1,
                    "arch_file_ptr": 1,
                    "arch_file_size_ptr": 1,
                    "archive_file_ptr": 1,
                    "current_file_offset": 1,
                    "file_handle": 1,
                    "file_handle_ptr": 1,
                    "file_list_ptr": 1,
                    "file_ptr": 1,
                    "file_size_pointer": 1,
                    "file_size_ptr": 1,
                    "in_stack_pointer2": 2,
                    "in_stack_size10": 1,
                    "in_stack_var2": 1,
                    "in_stack_variable2": 3,
                    "l_var_stack10": 1,
                    "long_pointer1": 1,
                    "long_stack10": 1,
                    "param5": 1,
                    "param_stack2": 2,
                    "ptr_arg2": 1,
                    "stack_param2": 2,
                    "stack_var2": 3,
                    "stack_variable2": 1
                },
                "in_stack_00000018": {
                    "char_pointer3": 1,
                    "char_stack18": 1,
                    "in_stack_pointer3": 1,
                    "in_stack_size18": 1,
                    "in_stack_string": 1,
                    "in_stack_var3": 1,
                    "in_stack_variable3": 3,
                    "param6": 1,
                    "param_stack3": 1,
                    "stack_param3": 2,
                    "stack_var3": 2,
                    "stack_variable3": 1,
                    "temp_dir": 1,
                    "temp_dir_name": 1,
                    "temp_dir_path": 8,
                    "temp_directory": 1,
                    "tempdir_path": 3,
                    "working_dir": 1
                },
                "in_stack_00000020": {
                    "arch_handle_ptr": 1,
                    "archive_handle": 1,
                    "archive_path": 1,
                    "archived_file_handle": 1,
                    "extracted_file": 1,
                    "file_name2_ptr": 1,
                    "in_stack_pointer3": 1,
                    "in_stack_pointer4": 1,
                    "in_stack_size20": 1,
                    "in_stack_var4": 1,
                    "in_stack_variable4": 3,
                    "input_file_pointer": 1,
                    "next_archive": 1,
                    "next_file_ptr": 1,
                    "output_file_ptr": 1,
                    "output_list_ptr": 1,
                    "param7": 1,
                    "param_stack4": 1,
                    "ptr_arg3": 1,
                    "ptr_stack20": 1,
                    "stack_param4": 2,
                    "stack_var3": 1,
                    "stack_var4": 2,
                    "stack_variable4": 1,
                    "temp_file_handle_ptr": 1,
                    "temp_file_ptr": 1,
                    "u_long_pointer4": 1
                },
                "in_stack_00000028": {
                    "compression_type": 1,
                    "flag2": 1,
                    "in_stack_size28": 1,
                    "in_stack_value1": 2,
                    "in_stack_var5": 1,
                    "in_stack_variable5": 3,
                    "long_stack28": 1,
                    "open_flags": 1,
                    "open_mode": 6,
                    "output_format": 2,
                    "param8": 1,
                    "param_stack5": 1,
                    "stack_param5": 2,
                    "stack_var4": 1,
                    "stack_var5": 2,
                    "stack_variable5": 1,
                    "u_long4": 1,
                    "u_var28": 1,
                    "write_mode": 1,
                    "write_options": 1
                },
                "in_stack_00000030": {
                    "base_flag": 1,
                    "binary_flag": 1,
                    "byte_var2": 1,
                    "char_stack30": 1,
                    "close_all_done_flag": 1,
                    "close_all_flag": 1,
                    "detect_format": 1,
                    "flag3": 1,
                    "flag_struct": 1,
                    "in_stack_size30": 1,
                    "in_stack_value2": 2,
                    "in_stack_var6": 1,
                    "in_stack_variable6": 3,
                    "is_compressed": 1,
                    "is_mode_set": 1,
                    "is_writing_enabled": 1,
                    "param9": 1,
                    "param_stack6": 1,
                    "specified_mode": 1,
                    "stack_param6": 2,
                    "stack_var5": 1,
                    "stack_var6": 2,
                    "stack_variable6": 1,
                    "u_long5": 1,
                    "unknown_flag": 1,
                    "unknown_format": 1
                },
                "in_stack_000000f8": {
                    "chmod_mode": 1,
                    "file_permission": 4,
                    "file_permissions": 5,
                    "in_stack_value3": 2,
                    "in_stack_var7": 1,
                    "in_stack_variable7": 3,
                    "new_file_mode": 1,
                    "param_stack3": 1,
                    "param_stack7": 1,
                    "permission": 1,
                    "permission_bits": 1,
                    "permission_mask": 1,
                    "permissions": 1,
                    "stack_param7": 2,
                    "stack_var6": 1,
                    "stack_var7": 2,
                    "stack_variable7": 1,
                    "uint1": 1,
                    "uint_stack_f8": 1
                },
                "in_stack_00000110": {
                    "arch_file_count": 1,
                    "archive_size": 1,
                    "file_count": 1,
                    "file_size": 3,
                    "file_size_limit": 1,
                    "in_stack_long": 1,
                    "in_stack_value4": 1,
                    "in_stack_var8": 1,
                    "in_stack_variable8": 3,
                    "long4": 1,
                    "long_stack110": 1,
                    "num_archived_files": 1,
                    "param_stack4": 1,
                    "param_stack8": 1,
                    "remaining_file_size": 1,
                    "remaining_size": 1,
                    "stack_param8": 2,
                    "stack_var7": 1,
                    "stack_var8": 2,
                    "stack_variable8": 1,
                    "total_file_size": 2,
                    "total_size": 3
                },
                "lVar12": {
                    "archive_size": 1,
                    "archived_file_size": 1,
                    "file_size": 14,
                    "long2": 3,
                    "long3": 1,
                    "long_value2": 1,
                    "long_var12": 1,
                    "long_var2": 4,
                    "long_variable2": 1,
                    "temp_dir_size": 2,
                    "temp_long": 1,
                    "temp_long2": 1
                },
                "lVar15": {
                    "block_size": 1,
                    "buffer_size": 1,
                    "bytes_read": 4,
                    "bytes_remaining": 2,
                    "bytes_to_copy": 1,
                    "bytes_to_read": 2,
                    "bytes_written": 1,
                    "chunk_size": 1,
                    "copy_size": 2,
                    "long3": 3,
                    "long4": 1,
                    "long_value3": 1,
                    "long_var15": 1,
                    "long_var3": 4,
                    "long_variable3": 1,
                    "read_size": 1,
                    "remaining_bytes": 1,
                    "size_to_write": 1,
                    "temp_long2": 1,
                    "temp_long3": 1
                },
                "lVar20": {
                    "temp_size": 1
                },
                "lVar5": {
                    "bread_bytes": 1,
                    "bread_result": 1,
                    "bread_size": 1,
                    "buffer_size": 1,
                    "bytes_read": 8,
                    "file_size": 1,
                    "long1": 4,
                    "long_value1": 1,
                    "long_var": 5,
                    "long_var5": 1,
                    "long_variable1": 1,
                    "read_bytes": 1,
                    "read_result": 1,
                    "read_size": 1,
                    "temp_dir_length": 1,
                    "temp_var3": 1
                },
                "param_1": {
                    "param1": 18,
                    "param_1": 9,
                    "param_a": 1,
                    "param_file_path": 1,
                    "parameter1": 1
                },
                "param_2": {
                    "param2": 18,
                    "param_2": 9,
                    "param_b": 1,
                    "param_output_dir": 1,
                    "parameter2": 1
                },
                "param_3": {
                    "archive_file_name": 1,
                    "archive_path": 11,
                    "file_path": 1,
                    "filename": 1,
                    "param3": 10,
                    "param_archive_path": 1,
                    "parameter3": 1,
                    "path": 3,
                    "source_directory": 1
                },
                "pcVar10": {
                    "char_pointer1": 1,
                    "character_pointer": 1,
                    "curr_char": 1,
                    "curr_char_ptr": 1,
                    "curr_path": 1,
                    "current_char": 12,
                    "current_char_ptr": 2,
                    "current_path": 3,
                    "current_path_char": 1,
                    "file_path": 1,
                    "file_ptr": 1,
                    "filename": 1,
                    "path": 1,
                    "pointer_char_var10": 1,
                    "pointer_to_character1": 1,
                    "ptr_var3": 1,
                    "start_path": 1
                },
                "pcVar14": {
                    "bfd_close_func": 3,
                    "bfd_close_func_ptr": 1,
                    "bfd_close_function": 1,
                    "close_func": 3,
                    "close_function": 12,
                    "code_pointer1": 1,
                    "function_pointer": 3,
                    "pointer_code_var14": 1,
                    "pointer_to_code": 3,
                    "pointer_to_code_function": 1,
                    "ptr_var5": 1,
                    "temp_func": 1
                },
                "pcVar16": {
                    "arch_member": 1,
                    "char_pointer": 1,
                    "char_pointer2": 1,
                    "character_pointer2": 1,
                    "copy_from_ptr": 1,
                    "curr_char": 1,
                    "curr_char_copy": 1,
                    "current_char": 3,
                    "current_char2": 3,
                    "current_char_ptr2": 1,
                    "current_file_ptr": 1,
                    "current_path_char2": 1,
                    "next_char": 3,
                    "next_path_segment": 1,
                    "path_iterator": 1,
                    "pointer_char_var16": 1,
                    "pointer_to_character2": 1,
                    "ptr_var6": 1,
                    "temp_char": 2,
                    "temp_file_path": 1,
                    "temp_path": 1,
                    "temp_ptr": 3
                },
                "pcVar19": {
                    "concatenated_string": 1
                },
                "piVar8": {
                    "errno_loc": 1,
                    "errno_loc_ptr": 1,
                    "errno_location": 1,
                    "errno_ptr": 9,
                    "error_code": 1,
                    "error_num": 2,
                    "error_number": 2,
                    "error_ptr": 2,
                    "int_pointer1": 1,
                    "int_pointer_var": 1,
                    "int_ptr_var": 1,
                    "integer_pointer": 1,
                    "pointer_integer_var8": 1,
                    "pointer_to_int": 3,
                    "pointer_to_integer": 2,
                    "ptr_var2": 1,
                    "temp_var5": 1
                },
                "ppcVar11": {
                    "arch_file_ptr": 1,
                    "archive_file_ptr": 1,
                    "archive_files": 1,
                    "archive_path_list": 1,
                    "archived_file": 2,
                    "archived_files": 1,
                    "bfd_open_result": 1,
                    "char_array_pointer2": 1,
                    "curr_archived_file": 1,
                    "current_arch_ptr": 1,
                    "current_ptr": 1,
                    "double_pointer_char_array2": 1,
                    "double_pointer_char_var2": 1,
                    "double_pointer_var2": 1,
                    "double_ptr_var2": 1,
                    "file_ptr": 1,
                    "file_ptrs": 1,
                    "internal_format": 1,
                    "next_archive_member": 1,
                    "next_archived_file": 1,
                    "next_file_ptr": 1,
                    "pointer_to_pointer2": 2,
                    "pointer_to_pointer_char_var11": 1,
                    "pointer_to_pointer_to_character2": 1,
                    "pointer_to_pointer_to_string": 1,
                    "pointer_var": 1,
                    "ppc_var2": 1,
                    "temp_array2": 1,
                    "temp_file_list": 1
                },
                "ppcVar4": {
                    "arch_files": 1,
                    "arch_ptr": 1,
                    "archive": 1,
                    "archive_ptr": 3,
                    "archived_file": 1,
                    "archived_files": 1,
                    "char_array_pointer1": 1,
                    "double_pointer_char_array": 1,
                    "double_pointer_char_var": 1,
                    "double_pointer_var": 1,
                    "double_ptr_var": 1,
                    "file_list": 2,
                    "file_names": 1,
                    "file_ptr": 1,
                    "pointer_ptr_var": 1,
                    "pointer_to_pointer": 2,
                    "pointer_to_pointer_char_var4": 1,
                    "pointer_to_pointer_to_character": 1,
                    "pointer_to_string": 1,
                    "ppc_var1": 1,
                    "stat_args": 1,
                    "stat_file_path": 1,
                    "stat_func_ptr": 1,
                    "stat_function": 1,
                    "stat_path": 1,
                    "temp_array": 1,
                    "temp_paths": 1
                },
                "psVar17": {
                    "empty_stat_struct": 1,
                    "file_stat": 2,
                    "pointer_stat_var17": 1,
                    "pointer_to_stat": 2,
                    "pointer_to_stat_structure": 1,
                    "ptr_to_stat_var": 1,
                    "stat_buffer": 3,
                    "stat_pointer1": 1,
                    "stat_ptr": 1,
                    "stat_ptr1": 1,
                    "stat_struct": 8,
                    "stat_struct_pointer": 1,
                    "stat_struct_ptr": 4,
                    "stat_structure": 1,
                    "stat_variable": 1,
                    "struct_var": 1,
                    "temp_struct": 1
                },
                "puVar7": {
                    "new_tempdir": 1,
                    "pointer": 1,
                    "pointer_to_undefined": 1,
                    "pointer_to_unsigned_var": 1,
                    "pointer_to_unsigned_variable": 1,
                    "pointer_unsigned_var7": 1,
                    "pointer_var": 1,
                    "ptr_var1": 1,
                    "temp_dir": 6,
                    "temp_dir_info": 1,
                    "temp_dir_ptr": 4,
                    "temp_pointer": 1,
                    "temp_ptr": 2,
                    "tempdir_path": 1,
                    "tempdir_ptr": 2,
                    "tmp_ptr": 1,
                    "u_long_pointer1": 1,
                    "u_ptr_var": 1,
                    "unaff_ret_var": 1,
                    "undefined8_pointer": 1,
                    "undefined_pointer_var": 1
                },
                "pvVar13": {
                    "allocated_memory": 1,
                    "buffer": 10,
                    "buffer_pointer": 1,
                    "buffer_ptr": 6,
                    "pointer_to_void": 4,
                    "pointer_var": 1,
                    "pointer_void_var13": 1,
                    "ptr_var4": 1,
                    "temp_pointer2": 1,
                    "temp_ptr2": 1,
                    "void_pointer": 3,
                    "void_pointer1": 1
                },
                "stack0x00000050": {
                    "file_stat": 1
                },
                "stack0x000000e0": {
                    "attrs": 1
                },
                "uVar21": {
                    "error_code": 1
                },
                "uVar22": {
                    "error_string": 1
                },
                "uVar6": {
                    "char_pointer": 1,
                    "err_msg": 1,
                    "error_message": 2,
                    "error_msg": 3,
                    "format_err": 1,
                    "format_error": 1,
                    "format_string": 2,
                    "new_undefined_var": 1,
                    "pattern": 1,
                    "temp_string": 1,
                    "temp_var": 1,
                    "temp_var4": 1,
                    "tempdir_error": 1,
                    "tempdir_error_message": 1,
                    "tmp_string": 1,
                    "translated_msg": 1,
                    "u_long1": 1,
                    "u_var": 1,
                    "u_var6": 1,
                    "uint1": 1,
                    "undefined8_var1": 1,
                    "undefined_var1": 1,
                    "unknown_var": 1,
                    "unsigned_var1": 1,
                    "unsigned_var6": 1,
                    "unsigned_variable1": 1,
                    "unspecified_var1": 1
                },
                "uVar9": {
                    "err_msg": 2,
                    "error_message": 4,
                    "error_msg": 3,
                    "error_msg2": 1,
                    "error_string": 5,
                    "error_text": 1,
                    "new_undefined_var2": 1,
                    "temp_dir_error_msg": 1,
                    "temp_var2": 1,
                    "temp_var6": 1,
                    "u_long2": 1,
                    "u_var2": 1,
                    "u_var9": 1,
                    "uint2": 1,
                    "undefined8_var2": 1,
                    "undefined_var": 1,
                    "undefined_var2": 1,
                    "unsigned_var2": 1,
                    "unsigned_var9": 1,
                    "unsigned_variable2": 1,
                    "unspecified_var2": 1
                },
                "unaff_R14": {
                    "arch_info_ptr": 1,
                    "archive_buffer": 1,
                    "current_tempdir": 1,
                    "dynamic_array": 1,
                    "file_list_ptr": 1,
                    "malloced_struct": 1,
                    "new_var": 1,
                    "ptr_var7": 1,
                    "temp_dir_list": 4,
                    "temp_dir_list_ptr": 1,
                    "temp_file": 1,
                    "temp_file_list": 1,
                    "temp_path_node": 1,
                    "tempdir_info": 1,
                    "tempdir_list": 1,
                    "tempdir_struct": 1,
                    "temporary_variable": 1,
                    "tmp_ptr": 1,
                    "u_long_pointer2": 1,
                    "unaffected_r14": 2,
                    "unaffected_reg1": 1,
                    "unaffected_register14": 3,
                    "unaffected_var1": 1,
                    "undefined8_pointer1": 1,
                    "undefined_pointer_var2": 1
                },
                "unaff_R15": {
                    "archive": 2,
                    "archive_file": 2,
                    "archive_filenames": 1,
                    "archive_info": 1,
                    "archive_list": 1,
                    "archive_list_ptr": 1,
                    "archive_ptr": 3,
                    "archive_struct": 1,
                    "archive_variable": 1,
                    "archives": 1,
                    "bfd_ptr": 1,
                    "char_array_pointer3": 1,
                    "current_file_ptr": 1,
                    "double_pointer_char_array3": 1,
                    "file_list": 1,
                    "file_paths": 1,
                    "input_files": 1,
                    "params_ptr": 1,
                    "pointer_var2": 1,
                    "ppc_var3": 1,
                    "unaffected_r15": 2,
                    "unaffected_reg2": 1,
                    "unaffected_register15": 3,
                    "unaffected_var2": 1
                },
                "unaff_retaddr": {
                    "return_addr": 3,
                    "return_address": 18,
                    "tmp_ptr": 1,
                    "u_long3": 1,
                    "unaffected_return_addr": 2,
                    "unaffected_return_address": 5,
                    "undefined8_var3": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00104ea2"
            ],
            "code": "\nvoid extract_and_copy_archive_001052a2(undefined8 param1,undefined8 param2,char *archive_path)\n\n{\n  char char_var;\n  int arch_type;\n  int stat_result;\n  char **archive_ptr;\n  long bytes_read;\n  undefined8 error_msg;\n  char *format_string;\n  undefined8 *temp_dir;\n  int *errno_ptr;\n  undefined8 error_string;\n  long rax_value;\n  char *current_char;\n  char **archived_file;\n  long file_size;\n  void *buffer;\n  code *close_function;\n  long bytes_read;\n  char *current_char;\n  stat *stat_struct;\n  undefined8 *temp_dir_list;\n  char **archive_ptr;\n  byte byte_var;\n  undefined8 return_address;\n  undefined8 *stack_var1;\n  long *in_stack_variable2;\n  char *temp_dir_path;\n  undefined8 *in_stack_variable4;\n  undefined8 open_mode;\n  undefined8 in_stack_variable6;\n  uint file_permissions;\n  long total_size;\n  \n  byte_var = 0;\n  current_char = (char *)(rax_value + 1);\n  do {\n    if (*current_char == '/') {\n      extract_and_copy_archive_001052a2();\n      return;\n    }\n    while (*current_char == '\\0') {\n      current_char = (char *)concat(temp_dir_path,&DAT_0011b47d);\n      stat_result = stat(current_char,(stat *)&file_stat);\n      temp_dir = temp_dir_list;\n      if (-1 < stat_result) {\n        file_size = FUN_0011a0e0(current_char);\n        free(current_char);\n        if (file_size == 0) {\n          errno_ptr = __errno_location();\n          current_char = strerror(*errno_ptr);\n          error_string = dcgettext(0,\"cannot create tempdir for archive copying (error: %s)\",5);\n          FUN_00119ed0(error_string,current_char);\n          goto LAB_00104e93;\n        }\n        temp_dir = (undefined8 *)xmalloc(0x18);\n        current_char = *archive_ptr;\n        *temp_dir = temp_dir_list;\n        temp_dir[2] = 0;\n        temp_dir[1] = file_size;\n        current_char = (char *)concat(file_size,&DAT_0011b47d,current_char);\n      }\n      stat_result = 0;\n      if (DAT_001279cb != '\\0') {\n        stat_struct = (stat *)&file_stat;\n        for (file_size = 0x24; file_size != 0; file_size = file_size + -1) {\n          *(undefined4 *)&stat_struct->st_dev = 0;\n          stat_struct = (stat *)((long)stat_struct + (ulong)byte_var * -8 + 4);\n        }\n        archived_file = (char **)archive_ptr[0x1d];\n        if ((char **)archive_ptr[0x1d] == (char **)0x0) {\n          archived_file = archive_ptr;\n        }\n        stat_result = (**(code **)(archived_file[1] + 0x1e8))(archive_ptr,(stat *)&file_stat);\n        if (stat_result != 0) {\n          current_char = *archive_ptr;\n          error_string = dcgettext(0,\"internal stat error on %s\",5);\n          FUN_00119ed0(error_string,current_char);\n        }\n      }\n      temp_dir_list = (undefined8 *)xmalloc(0x18);\n      temp_dir_list[1] = current_char;\n      *temp_dir_list = temp_dir;\n      temp_dir_list[2] = 0;\n      char_var = bfd_check_format(archive_ptr,1);\n      if (char_var == '\\0') {\n        error_string = dcgettext(0,\"Unable to recognise the format of file\",5);\n        FUN_001126c0(0,archive_ptr,0,error_string);\n        archived_file = (char **)bfd_openw(current_char,open_mode);\n        if (archived_file == (char **)0x0) goto LAB_00104e80;\nLAB_00104d75:\n        archive_ptr = (char **)archive_ptr[0x1d];\n        if ((char **)archive_ptr[0x1d] == (char **)0x0) {\n          archive_ptr = archive_ptr;\n        }\n        arch_type = (**(code **)(archive_ptr[1] + 0x1e8))(archive_ptr,&attrs);\n        file_size = total_size;\n        if (arch_type == 0) {\n          if (total_size < 0) {\n            error_string = FUN_001125fa(archive_ptr);\n            error_msg = dcgettext(0,\"stat returns negative size for `%s\\'\",5);\n            FUN_00119ed0(error_msg,error_string);\n          }\n          else {\n            arch_type = bfd_seek(archive_ptr,0,0);\n            if (arch_type == 0) {\n              if (DAT_001279c9 != '\\0') {\n                current_char = *archived_file;\n                error_string = FUN_001125fa(archive_ptr);\n                format_string = (char *)dcgettext(0,\"copy from `%s\\' [unknown] to `%s\\' [unknown]\\n\",5);\n                printf(format_string,error_string,current_char);\n              }\n              buffer = (void *)xmalloc(0x2000);\n              for (; file_size != 0; file_size = file_size - bytes_read) {\n                bytes_read = 0x2000;\n                if (file_size < 0x2001) {\n                  bytes_read = file_size;\n                }\n                bytes_read = bfd_bread(buffer,bytes_read,archive_ptr);\n                archive_ptr = archive_ptr;\n                if ((bytes_read != bytes_read) ||\n                   (bytes_read = bfd_bwrite(buffer,bytes_read,archived_file), archive_ptr = archived_file, bytes_read != bytes_read\n                   )) {\n                  FUN_001126c0(0,archive_ptr,0,0);\n                  free(buffer);\n                  goto LAB_00104f00;\n                }\n              }\n              chmod(*archived_file,file_permissions | 0x100);\n              free(buffer);\n              char_var = bfd_close_all_done(archived_file);\n              if (char_var == '\\0') {\n                FUN_001126c0(current_char,0,0,0);\n                DAT_00127a20 = 1;\n              }\n              goto LAB_00114a86;\n            }\n            error_string = FUN_001125fa(archive_ptr);\n            FUN_0011a110(error_string);\n          }\n        }\n        else {\n          FUN_001126c0(0,archive_ptr,0,0);\n        }\nLAB_00104f00:\n        char_var = bfd_close_all_done(archived_file);\n        if (char_var == '\\0') {\n          FUN_001126c0(current_char,0,0,0);\n        }\nLAB_00104ec9:\n        unlink(current_char);\n        DAT_00127a20 = 1;\n      }\n      else {\n        if (in_stack_variable6._7_1_ == '\\0') {\n          archived_file = (char **)bfd_openw(current_char,*(undefined8 *)archive_ptr[1]);\n        }\n        else {\n          archived_file = (char **)bfd_openw(current_char,open_mode);\n        }\n        if (archived_file == (char **)0x0) {\nLAB_00104e80:\n          FUN_001126c0(current_char,0,0,0);\n          goto LAB_00104e93;\n        }\n        char_var = FUNC_00114e50(archive_ptr,archived_file,return_address);\n        if (char_var == '\\0') {\n          arch_type = bfd_get_arch(archive_ptr);\n          if (arch_type == 0) goto LAB_00104d75;\n          char_var = bfd_close_all_done(archived_file);\n          if (char_var == '\\0') {\n            FUN_001126c0(current_char,0,0,0);\n          }\n          goto LAB_00104ec9;\n        }\n        char_var = bfd_close(archived_file);\n        if (char_var == '\\0') {\n          FUN_001126c0(current_char,0,0,0);\n          DAT_00127a20 = 1;\n        }\nLAB_00114a86:\n        if ((DAT_001279cb != '\\0') && (stat_result == 0)) {\n          FUN_0011a350(current_char,(stat *)&file_stat);\n        }\n        file_size = bfd_openr(current_char,open_mode);\n        temp_dir_list[2] = file_size;\n        *in_stack_variable2 = file_size;\n        in_stack_variable2 = (long *)(file_size + 0xf0);\n        archived_file = (char **)bfd_openr_next_archived_file(in_stack_variable4,archive_ptr);\n        bfd_close(archive_ptr);\n        archive_ptr = archived_file;\n      }\n      if ((DAT_00127a20 != 0) || (archive_ptr == (char **)0x0)) {\n        *in_stack_variable2 = 0;\n        buffer = (void *)xstrdup(*stack_var1);\n        if (DAT_00127a20 == 0) {\n          close_function = bfd_close;\n        }\n        else {\n          close_function = bfd_close_all_done;\n        }\n        char_var = (*close_function)(stack_var1);\n        if (char_var == '\\0') {\n          DAT_00127a20 = 1;\n          FUN_001126c0(buffer,0,0,0);\n        }\n        free(buffer);\n        buffer = (void *)xstrdup(*in_stack_variable4);\n        char_var = bfd_close(in_stack_variable4);\n        if (char_var == '\\0') {\n          DAT_00127a20 = 1;\n          FUN_001126c0(buffer,0,0,0);\n        }\n        free(buffer);\n        goto LAB_00114b4b;\n      }\n      current_char = *archive_ptr;\n      archive_path = current_char;\n      if (*current_char == '/') goto LAB_0010527d;\n    }\n    current_char = current_char;\n    if ((*current_char == '.') && (current_char = current_char + 1, current_char[1] == '.')) {\n      current_char = current_char + 2;\n      if ((current_char[2] == '\\0') || (current_char[2] == '/')) {\nLAB_0010527d:\n        error_string = dcgettext(0,\"illegal pathname found in archive member: %s\",5);\n        FUN_00119ed0(error_string,archive_path);\nLAB_00104e93:\n        DAT_00127a20 = 1;\nLAB_00114b4b:\n        while (temp_dir_list != (undefined8 *)0x0) {\n          if (temp_dir_list[2] == 0) {\n            rmdir((char *)temp_dir_list[1]);\n          }\n          else {\n            bfd_close();\n            unlink((char *)temp_dir_list[1]);\n          }\n          free((void *)temp_dir_list[1]);\n          temp_dir = (undefined8 *)*temp_dir_list;\n          free(temp_dir_list);\n          temp_dir_list = temp_dir;\n        }\n        rmdir(temp_dir_path);\n        free(temp_dir_path);\n        return;\n      }\n    }\n    for (; (current_char = current_char, *current_char != '\\0' && (*current_char != '/')); current_char = current_char + 1) {\n    }\n  } while( true );\n}\n\n",
            "current_name": "extract_and_copy_archive_001052a2",
            "entrypoint": "0x001052a2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001052a2": "extract_and_copy_archive_001052a2",
                "__format": "format_string",
                "bVar18": "byte_var",
                "cVar1": "char_var",
                "iVar2": "arch_type",
                "iVar3": "stat_result",
                "in_RAX": "rax_value",
                "in_stack_00000008": "stack_var1",
                "in_stack_00000010": "in_stack_variable2",
                "in_stack_00000018": "temp_dir_path",
                "in_stack_00000020": "in_stack_variable4",
                "in_stack_00000028": "open_mode",
                "in_stack_00000030": "in_stack_variable6",
                "in_stack_000000f8": "file_permissions",
                "in_stack_00000110": "total_size",
                "lVar12": "file_size",
                "lVar15": "bytes_read",
                "lVar5": "bytes_read",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "archive_path",
                "pcVar10": "current_char",
                "pcVar14": "close_function",
                "pcVar16": "current_char",
                "piVar8": "errno_ptr",
                "ppcVar11": "archived_file",
                "ppcVar4": "archive_ptr",
                "psVar17": "stat_struct",
                "puVar7": "temp_dir",
                "pvVar13": "buffer",
                "stack0x00000050": "file_stat",
                "stack0x000000e0": "attrs",
                "uVar6": "error_msg",
                "uVar9": "error_string",
                "unaff_R14": "temp_dir_list",
                "unaff_R15": "archive_ptr",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001053b5": {
            "additional_data": {
                "FUN_001053b5": {
                    "check_format_and_display_error": 1,
                    "display_bad_format_error": 2,
                    "format_error": 1,
                    "format_error_message": 5,
                    "parse_bad_format": 3,
                    "parse_bad_format_message": 1,
                    "print_bad_format": 1,
                    "print_bad_format_error_message": 8,
                    "print_bad_format_for_string": 1,
                    "print_bad_format_message": 1,
                    "print_error": 1,
                    "print_error_message": 3,
                    "validate_format": 2,
                    "verify_and_print_error_message": 1
                },
                "FUN_00119dd0": {
                    "display_error_message": 1,
                    "print_error_message": 1
                },
                "dcgettext": {
                    "get_error_message": 1,
                    "get_localized_message": 5,
                    "get_message": 1,
                    "get_message_translation": 1,
                    "get_translated_message": 1,
                    "get_translated_text": 3,
                    "translate": 1,
                    "translate_message": 2,
                    "translate_text": 3
                },
                "param_1": {
                    "param1": 1,
                    "parameter_1": 1,
                    "unknown_parameter": 1,
                    "unused_param1": 1
                },
                "param_2": {
                    "param2": 1,
                    "parameter_2": 1,
                    "unknown_parameter": 1,
                    "unused_param2": 1
                },
                "param_3": {
                    "param3": 1,
                    "parameter_3": 1,
                    "unknown_parameter": 1,
                    "unused_param3": 1
                },
                "param_4": {
                    "param4": 1,
                    "parameter_4": 1,
                    "unknown_parameter": 1,
                    "unused_param4": 1
                },
                "uVar1": {
                    "bad_format_message": 1,
                    "error_message": 25,
                    "error_msg": 1,
                    "error_string": 1,
                    "format_error_message": 3
                }
            },
            "called": [
                "FUN_00119dd0",
                "dcgettext"
            ],
            "calling": [
                "FUN_00114c80"
            ],
            "code": "\nvoid print_bad_format_error_message_001053b5(void)\n\n{\n  undefined8 error_message;\n  \n  error_message = dcgettext(0,\"bad format for %s\",5);\n                    \n  FUN_00119dd0(error_message);\n}\n\n",
            "current_name": "print_bad_format_error_message_001053b5",
            "entrypoint": "0x001053b5",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001053b5": "print_bad_format_error_message_001053b5",
                "dcgettext": "get_localized_message",
                "uVar1": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001053d5": {
            "additional_data": {
                "FUN_001053d5": {
                    "close_and_return_status": 6,
                    "close_and_return_value": 1,
                    "close_bfd_and_return_status": 3,
                    "close_bfd_file": 1,
                    "close_bfd_files": 1,
                    "close_file_and_return_status": 1,
                    "execute_and_close": 1,
                    "execute_and_close_bfd": 1,
                    "execute_bfd_close": 1,
                    "execute_binary_function": 1,
                    "execute_close_operation": 1,
                    "execute_command": 1,
                    "execute_function": 2,
                    "initialize": 1,
                    "initialize_and_close": 1,
                    "initialize_and_close_bfd": 2,
                    "initialize_close_all_done": 1,
                    "initialize_function": 1,
                    "initialize_variable_and_close": 1,
                    "process_function": 1
                },
                "FUN_0011a110": {
                    "process_bfd_object": 1,
                    "process_input_data": 1,
                    "process_parameter": 1,
                    "reverse_data": 1
                },
                "param_1": {
                    "data_length": 1,
                    "file_pointer": 1,
                    "param": 1
                },
                "unaff_R12": {
                    "argument_ptr": 1,
                    "base_address": 9,
                    "binary_function_address": 1,
                    "buffer_address": 2,
                    "command_ptr": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "file_address": 1,
                    "file_descriptor": 3,
                    "file_offset": 1,
                    "file_pointer": 1,
                    "file_ptr": 3,
                    "function_param": 1,
                    "function_pointer": 1,
                    "ptr_data": 1,
                    "ptr_offset": 1,
                    "variable_address": 1
                },
                "unaff_R14": {
                    "bfd_handle": 2,
                    "bfd_object": 1,
                    "binary_function_ptr": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "file_pointer": 3,
                    "function_pointer": 6,
                    "function_ptr": 3,
                    "input_data": 1,
                    "param_ptr": 1,
                    "parameter_ptr": 2,
                    "pointer": 2,
                    "pointer_array": 1,
                    "pointer_to_data": 2,
                    "pointer_to_value": 1,
                    "ptr_func": 1,
                    "ptr_function": 1
                }
            },
            "called": [
                "FUN_0011a110"
            ],
            "calling": [
                "FUN_00119f70"
            ],
            "code": "\nundefined4 close_bfd_and_return_status_001053d5(void)\n\n{\n  long base_address;\n  undefined8 *function_pointer;\n  \n  FUN_0011a110(*function_pointer);\n  *(undefined4 *)(base_address + 8) = 1;\n  bfd_close_all_done();\n  return *(undefined4 *)(base_address + 8);\n}\n\n",
            "current_name": "close_bfd_and_return_status_001053d5",
            "entrypoint": "0x001053d5",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001053d5": "close_bfd_and_return_status_001053d5",
                "unaff_R12": "base_address",
                "unaff_R14": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010540e": {
            "additional_data": {
                "0x380": {
                    "offset_value": 1
                },
                "0x71": {
                    "byte_index": 1
                },
                "0x78": {
                    "function_offset": 1
                },
                "FUN_0010540e": {
                    "execute_action": 1,
                    "execute_action_with_condition": 1,
                    "execute_callback": 1,
                    "execute_code": 1,
                    "execute_function": 23,
                    "execute_function_with_condition": 1,
                    "execute_operation": 1,
                    "process_data": 2
                },
                "byte": {
                    "data_byte": 1
                },
                "code": {
                    "function_pointer": 1
                },
                "in_RAX": {
                    "address_reg": 1,
                    "function_address": 1,
                    "function_pointer": 1,
                    "function_ptr": 1,
                    "local_var1": 1,
                    "memory_address": 1,
                    "pointer": 1,
                    "ptr": 1,
                    "ptr_action": 1,
                    "ptr_value": 1,
                    "rax": 2,
                    "rax_value": 1,
                    "register_ax": 1,
                    "temp": 2,
                    "temp1": 2,
                    "temp_register": 2,
                    "temp_var": 1,
                    "temporary": 1,
                    "temporary_register": 1,
                    "temporary_value": 1
                },
                "param_1": {
                    "action": 1,
                    "arg1": 4,
                    "argument_1": 1,
                    "callback_function": 1,
                    "context": 1,
                    "data": 2,
                    "func_pointer": 1,
                    "function_parameter": 1,
                    "function_pointer": 1,
                    "input": 2,
                    "input1": 1,
                    "output": 2,
                    "param": 1,
                    "param1": 8,
                    "param_1": 1,
                    "param_ptr": 1,
                    "parameter1": 2
                },
                "param_2": {
                    "arg2": 4,
                    "argument_2": 1,
                    "binary_value": 1,
                    "buffer": 1,
                    "data": 1,
                    "data_address": 2,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "func_arg": 1,
                    "function_pointer": 1,
                    "input": 3,
                    "input2": 1,
                    "param2": 8,
                    "param_data_ptr": 1,
                    "parameter2": 2,
                    "ptr": 1
                },
                "param_3": {
                    "action_type": 1,
                    "arg3": 3,
                    "argument_3": 1,
                    "condition": 6,
                    "condition_flag": 2,
                    "condition_value": 1,
                    "flag": 4,
                    "input3": 1,
                    "option": 1,
                    "param3": 8,
                    "parameter3": 2,
                    "status_flag": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00114d50"
            ],
            "code": "\nvoid execute_function_with_condition_0010540e(undefined8 param1,long param2,uint param3)\n\n{\n  long rax;\n  \n  if ((param3 == 2) && (*(int *)(*(long *)(param2 + 8) + 8) == 2)) {\n    param3 = (uint)*(data_byte *)(*(long *)(*(long *)(param2 + 8) + 0x380) + 0x71);\n  }\n                    /* WARNING: Could not recover jumptable at 0x00105422. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (**(function_pointer **)(*(long *)(rax + 0x380) + 0x78))(param1,param3 != 0);\n  return;\n}\n\n",
            "current_name": "execute_function_with_condition_0010540e",
            "entrypoint": "0x0010540e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010540e": "execute_function_with_condition_0010540e",
                "byte": "data_byte",
                "code": "function_pointer",
                "in_RAX": "rax",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010543c": {
            "additional_data": {
                "FUN_0010543c": {
                    "open_and_print_error": 2,
                    "open_and_print_error_message": 1,
                    "open_file": 7,
                    "open_file_and_print_error": 8,
                    "open_file_and_print_error_message": 1,
                    "open_file_and_report_error": 1,
                    "open_file_error": 1,
                    "open_file_with_err_handling": 1,
                    "open_file_with_error_handling": 7,
                    "open_file_with_error_message": 2
                },
                "__errno_location": {
                    "get_errno_location": 2
                },
                "param_1": {
                    "error_code": 1
                },
                "param_2": {
                    "file_name": 1
                },
                "pcVar3": {
                    "error_message": 19,
                    "error_string": 10
                },
                "piVar2": {
                    "errno_location": 4,
                    "errno_location_ptr": 1,
                    "errno_pointer": 6,
                    "errno_ptr": 5,
                    "errnum_pointer": 1,
                    "error_code": 3,
                    "error_code_ptr": 1,
                    "error_number": 4,
                    "error_number_pointer": 2,
                    "error_number_ptr": 1
                },
                "strerror": {
                    "get_error_string": 2
                },
                "uVar1": {
                    "file_descriptor": 18,
                    "file_descriptor2": 1,
                    "file_handle": 8,
                    "file_path": 1,
                    "file_pointer": 2
                },
                "uVar4": {
                    "error_format": 2,
                    "error_message": 3,
                    "error_message_format": 1,
                    "error_msg": 2,
                    "error_string": 3,
                    "formatted_error": 1,
                    "localized_error_message": 10,
                    "localized_error_string": 1,
                    "localized_message": 1,
                    "translated_error_message": 5,
                    "translated_error_string": 1
                },
                "unaff_RBP": {
                    "base_pointer": 5,
                    "file_descriptor": 1,
                    "file_handle": 2,
                    "file_pointer": 1,
                    "stack_base": 3,
                    "stack_base_address": 1,
                    "stack_parameter": 1,
                    "stack_pointer": 3
                }
            },
            "called": [
                "FUN_00119dd0",
                "dcgettext",
                "__errno_location",
                "strerror"
            ],
            "calling": [
                "FUN_00114d60"
            ],
            "code": "\nvoid open_file_and_print_error_message_0010543c(void)\n\n{\n  undefined8 file_descriptor;\n  int *errno_pointer;\n  char *error_message;\n  undefined8 localized_error_message;\n  long base_pointer;\n  \n  errno_pointer = __errno_location();\n  error_message = strerror(*errno_pointer);\n  file_descriptor = *(undefined8 *)(base_pointer + 0x10);\n  localized_error_message = dcgettext(0,\"cannot open: %s: %s\",5);\n                    \n  FUN_00119dd0(localized_error_message,file_descriptor,error_message);\n}\n\n",
            "current_name": "open_file_and_print_error_message_0010543c",
            "entrypoint": "0x0010543c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010543c": "open_file_and_print_error_message_0010543c",
                "__errno_location": "get_errno_location",
                "pcVar3": "error_message",
                "piVar2": "errno_pointer",
                "strerror": "get_error_string",
                "uVar1": "file_descriptor",
                "uVar4": "localized_error_message",
                "unaff_RBP": "base_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001054af": {
            "additional_data": {
                "DAT_001278c8": {
                    "hash_table9": 1,
                    "hash_table_9": 1
                },
                "DAT_001278d0": {
                    "hash_table8": 1,
                    "hash_table_8": 1
                },
                "DAT_001279d0": {
                    "hash_table7": 1,
                    "hash_table_7": 1
                },
                "DAT_001279d8": {
                    "hash_table6": 1,
                    "hash_table_6": 1
                },
                "DAT_001279e0": {
                    "hash_table5": 1,
                    "hash_table_5": 1
                },
                "DAT_001279e8": {
                    "hash_table4": 1,
                    "hash_table_4": 1
                },
                "DAT_001279f0": {
                    "hash_table2": 1,
                    "hash_table_2": 1
                },
                "DAT_001279f8": {
                    "hash_table1": 1,
                    "hash_table_1": 1
                },
                "DAT_00127a08": {
                    "hash_table3": 1,
                    "hash_table_3": 1
                },
                "FUN_001054af": {
                    "clean_up_hash_table": 3,
                    "cleanup": 1,
                    "cleanup_and_delete": 1,
                    "cleanup_and_delete_hashtable": 1,
                    "cleanup_and_delete_hashtables": 2,
                    "cleanup_data": 1,
                    "cleanup_function": 4,
                    "cleanup_hashes": 1,
                    "cleanup_hashtable": 4,
                    "cleanup_hashtables": 2,
                    "cleanup_resources": 2,
                    "clear_hashtable": 1,
                    "delete_hash_table_entries": 2,
                    "delete_hash_tables": 3,
                    "delete_hashtable_entries": 2,
                    "delete_hashtables": 1
                },
                "in_RAX": {
                    "result": 1,
                    "result_register": 1,
                    "return_value": 2,
                    "temp_variable": 1,
                    "unused_var": 3,
                    "unused_variable": 8
                },
                "param_1": {
                    "arg1": 2,
                    "argument_1": 1,
                    "input_param1": 1,
                    "param1": 1,
                    "resource_param_1": 1,
                    "undefined_param_1": 1,
                    "unused_param": 15,
                    "unused_param1": 2,
                    "unused_param_1": 3,
                    "unused_parameter": 1,
                    "unused_parameter1": 1
                },
                "param_2": {
                    "arg2": 2,
                    "argument_2": 1,
                    "input_param2": 1,
                    "param2": 1,
                    "resource_param_2": 1,
                    "undefined_param_2": 1,
                    "unused_param": 12,
                    "unused_param2": 5,
                    "unused_param_2": 3,
                    "unused_parameter": 1,
                    "unused_parameter2": 1
                }
            },
            "called": [
                "htab_delete"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nvoid cleanup_and_delete_hashtable_001054af(undefined8 unused_param,undefined8 unused_param)\n\n{\n  undefined8 unused_variable;\n  \n  htab_delete(DAT_001279f8);\n  htab_delete(DAT_001279f0);\n  htab_delete(DAT_00127a08);\n  htab_delete(DAT_001279e8);\n  htab_delete(DAT_001279e0);\n  htab_delete(DAT_001279d8);\n  htab_delete(DAT_001279d0);\n  htab_delete(DAT_001278d0);\n  htab_delete(DAT_001278c8,unused_param,unused_variable);\n  return;\n}\n\n",
            "current_name": "cleanup_and_delete_hashtable_001054af",
            "entrypoint": "0x001054af",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001054af": "cleanup_and_delete_hashtable_001054af",
                "in_RAX": "unused_variable",
                "param_1": "unused_param",
                "param_2": "unused_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010551d": {
            "additional_data": {
                "CODE_XXXX": {
                    "specific_functions": 1
                },
                "DAT_001279b0": {
                    "constants": 1
                },
                "DAT_00127a10": {
                    "debuglink_section_flag": 1
                },
                "FUN_0010551d": {
                    "decompile_and_improve": 1,
                    "decompiled_function": 1,
                    "dump_debugging_info": 1,
                    "extract_and_improve_code": 1,
                    "extract_and_merge_notes": 1,
                    "extract_debug_info": 2,
                    "extract_debug_information": 1,
                    "extract_debug_sections": 2,
                    "extract_debugging_info": 1,
                    "merge_and_dump_debug_sections": 2,
                    "merge_and_write_debugging_info": 1,
                    "merge_debug_sections": 5,
                    "merge_debugging_information": 1,
                    "merge_notes": 1,
                    "process_binary": 1,
                    "process_debug_sections": 1
                },
                "UNKNOWN_VARIABLES": {
                    "explanatory_variable_names": 1
                },
                "__ptr": {
                    "pointer5": 1,
                    "pointer_var2": 1,
                    "section_contents": 3,
                    "temp_pointer_var": 1,
                    "tmp_ptr6": 1,
                    "voidptr": 1
                },
                "__ptr_0": {
                    "voidptr": 1
                },
                "__ptr_00": {
                    "pointer6": 1,
                    "pointer_var3": 1,
                    "section_contents_0": 1,
                    "section_contents_str": 1,
                    "stab_entry": 1,
                    "temp_pointer_var2": 1,
                    "tmp_ptr7": 1,
                    "voidptr": 1
                },
                "__s": {
                    "char_pointer": 1,
                    "message": 1,
                    "note_section_warning": 1,
                    "section_name": 2,
                    "str": 3,
                    "str_var": 1,
                    "str_var_1": 1,
                    "string": 3,
                    "string1": 1,
                    "string3": 1,
                    "string_var": 3,
                    "symbol_name": 1,
                    "tmp_str": 1
                },
                "__s_00": {
                    "note_filename": 1,
                    "section_dump_file": 1,
                    "str": 1,
                    "string2": 1,
                    "temp_file_pointer_var": 1
                },
                "_uStack0000000000000048": {
                    "int_pointer": 1
                },
                "bStack0000000000000100": {
                    "byte2": 1,
                    "byte_stack_var1": 1
                },
                "bStack0000000000000101": {
                    "byte3": 1,
                    "byte_stack_var2": 1
                },
                "bVar2": {
                    "byte": 1,
                    "byte1": 3,
                    "byte_flag": 1,
                    "byte_val": 1,
                    "byte_value": 1,
                    "byte_var": 9,
                    "flag": 3
                },
                "bVar38": {
                    "bool_flag": 1,
                    "bool_val": 1,
                    "bool_var": 4,
                    "flag": 1
                },
                "bVar39": {
                    "byte_val": 1,
                    "byte_var2": 3,
                    "flag": 1
                },
                "cStack0000000000000148": {
                    "char_stack148": 1
                },
                "cVar39": {
                    "byte_var2": 1
                },
                "cVar8": {
                    "ch": 1,
                    "char1": 2,
                    "char4": 1,
                    "char8": 1,
                    "char_8": 1,
                    "char_flag": 1,
                    "char_val": 1,
                    "char_var": 2,
                    "char_var1": 3,
                    "char_var_1": 1,
                    "character1": 1,
                    "flag": 1,
                    "tmp_char": 1
                },
                "cVar9": {
                    "ch": 1,
                    "char2": 2,
                    "char3": 1,
                    "char9": 1,
                    "char_9": 1,
                    "char_flag2": 1,
                    "char_val": 1,
                    "char_var": 1,
                    "char_var2": 4,
                    "char_var_2": 1,
                    "character2": 1,
                    "flag": 1,
                    "result": 1,
                    "tmp_char2": 1,
                    "warning_var": 1
                },
                "iStack000000000000006c": {
                    "tmp_int4": 1
                },
                "iVar11": {
                    "int1": 3,
                    "int11": 1,
                    "int3": 1,
                    "int_11": 1,
                    "int_val": 1,
                    "int_var": 6,
                    "int_var1": 2,
                    "result": 1,
                    "tmp_int": 1,
                    "val": 1
                },
                "iVar13": {
                    "int_var2": 1
                },
                "iVar14": {
                    "another_int_var": 1,
                    "int14": 1,
                    "int2": 2,
                    "int4": 1,
                    "int_14": 1,
                    "int_val": 1,
                    "int_var2": 5,
                    "int_var3": 1,
                    "int_var_2": 1,
                    "symbol_class": 1,
                    "tmp_int2": 1,
                    "val": 1
                },
                "iVar31": {
                    "int3": 2,
                    "int31": 1,
                    "int_var2": 1,
                    "int_var3": 1,
                    "tmp_int3": 1,
                    "val": 1
                },
                "iVar5": {
                    "int_value": 1
                },
                "in_stack_00000008": {
                    "binary_file": 1,
                    "binary_filename": 1,
                    "binary_ptr": 1,
                    "filename": 1,
                    "param1": 1,
                    "parameter1": 1
                },
                "in_stack_00000010": {
                    "binary_size": 1,
                    "note_section_count": 1,
                    "note_sections_count": 1,
                    "num_sections": 1,
                    "param2": 1,
                    "parameter2": 1
                },
                "in_stack_00000018": {
                    "flag": 1,
                    "int_var3": 1,
                    "param3": 1
                },
                "in_stack_000000c0": {
                    "param4": 1,
                    "section_contents": 1,
                    "section_list": 1,
                    "stab_array": 1
                },
                "in_stack_000000c8": {
                    "param5": 1,
                    "section_size": 2
                },
                "in_stack_000000d0": {
                    "param6": 1,
                    "stab_array_size": 1
                },
                "in_stack_000000d8": {
                    "param7": 1
                },
                "in_stack_000000e0": {
                    "param8": 1,
                    "section_contents2": 1,
                    "void_ptr": 1
                },
                "in_stack_000000f0": {
                    "param9": 1
                },
                "in_stack_000000f8": {
                    "param10": 1
                },
                "in_stack_00000110": {
                    "param11": 1,
                    "section_name": 1
                },
                "in_stack_00000118": {
                    "file_extension": 1,
                    "section_name": 1,
                    "stab_count": 1,
                    "ushort1": 1
                },
                "in_stack_00000140": {
                    "contents": 1,
                    "param12": 1,
                    "section_dump_file_name": 2
                },
                "in_stack_00000150": {
                    "current_section_name": 1
                },
                "lStack0000000000000078": {
                    "tmp_long5": 1
                },
                "lStack0000000000000088": {
                    "tmp_long6": 1
                },
                "lVar15": {
                    "current_pointer": 1,
                    "note_section_ptr": 1
                },
                "lVar21": {
                    "long1": 2,
                    "long2": 1,
                    "long_21": 1,
                    "long_val": 1,
                    "long_var": 1,
                    "long_var1": 1,
                    "long_var2": 3,
                    "tmp_long3": 1,
                    "val": 1
                },
                "lVar25": {
                    "long2": 2,
                    "long_val": 1,
                    "long_var": 1,
                    "long_var2": 2,
                    "section_size": 1,
                    "size": 1,
                    "tmp_long4": 1,
                    "val": 1
                },
                "lVar27": {
                    "long3": 1,
                    "long4": 1,
                    "long_val": 1,
                    "long_var3": 3,
                    "note_size": 1,
                    "tmp_long2": 1,
                    "val": 1
                },
                "lVar321": {
                    "long_var4": 1
                },
                "param_1": {
                    "arg1": 1
                },
                "param_2": {
                    "arg2": 1
                },
                "param_3": {
                    "arg3": 1
                },
                "param_4": {
                    "arg4": 1
                },
                "pauVar6": {
                    "pointer_array": 1
                },
                "pcStack0000000000000038": {
                    "char_ptr": 1,
                    "string4": 1,
                    "temp_char_pointer_var2": 1,
                    "tmp_c_str3": 1
                },
                "pcStack0000000000000090": {
                    "temp_char_pointer_var": 1,
                    "tmp_c_str4": 1
                },
                "pcVar19": {
                    "char_pointer2": 1,
                    "char_ptr1": 1,
                    "char_ptr19": 1,
                    "char_var3": 1,
                    "merged_contents": 1,
                    "pc_var_19": 1,
                    "pointer12": 1,
                    "pointer5": 1,
                    "section_contents": 1,
                    "str": 1,
                    "str_var2": 1,
                    "string": 1,
                    "string2": 1,
                    "string_var2": 1,
                    "tmp_c_str": 1
                },
                "pcVar28": {
                    "char_pointer6": 1,
                    "char_ptr2": 1,
                    "char_ptr28": 1,
                    "char_var4": 1,
                    "debug_link_file_name": 1,
                    "error_string": 1,
                    "pc_var_28": 1,
                    "pointer6": 1,
                    "section_name": 1,
                    "str": 1,
                    "str_var3": 1,
                    "string": 1,
                    "string3": 1,
                    "string_var3": 1,
                    "tmp_c_str2": 1
                },
                "pcVar33": {
                    "char_pointer4": 1,
                    "char_ptr33": 1,
                    "char_var5": 1,
                    "file_name": 1,
                    "pointer11": 1,
                    "section_name": 2,
                    "stab_entry": 1,
                    "str_var4": 1,
                    "symbol_name": 1
                },
                "pcVar39": {
                    "char_ptr39": 1
                },
                "pcVar4": {
                    "code_pointer": 1,
                    "code_var": 1,
                    "func": 1,
                    "func_ptr": 2,
                    "function": 1,
                    "function1": 1,
                    "function_pointer": 7,
                    "function_ptr": 1,
                    "function_var": 1,
                    "section_contents": 1,
                    "section_contents_function": 1,
                    "section_merge_function": 1,
                    "tmp_func": 1
                },
                "phVar40": {
                    "undefined4_var2": 1
                },
                "piVar23": {
                    "errno_addr": 1,
                    "errno_pointer": 1,
                    "error_number": 1,
                    "int_ptr": 1,
                    "pointer_var5": 1,
                    "ptr": 2,
                    "tmp_ptr8": 1
                },
                "plVar15": {
                    "long1": 1,
                    "long_array_ptr15": 1,
                    "long_pointer": 1,
                    "long_ptr": 1,
                    "long_ptr4": 1,
                    "long_var": 1,
                    "pointer4": 3,
                    "ptr": 1,
                    "ptr_arr": 1,
                    "ptr_array": 1,
                    "symbol_entry": 1,
                    "temp_long_var2": 1,
                    "tmp_ptr4": 1
                },
                "plVar23": {
                    "pointer7": 1
                },
                "plVar25": {
                    "pointer9": 1
                },
                "plVar27": {
                    "pointer6": 1
                },
                "plVar32": {
                    "long_ptr2": 1,
                    "long_ptr3": 1,
                    "merged_notes_list": 2,
                    "pointer10": 1,
                    "pointer7": 1,
                    "ptr": 1,
                    "ptr_arr": 1,
                    "ptr_array2": 1,
                    "symbol_entry": 1,
                    "temp_long_var": 1,
                    "tmp_ptr5": 1
                },
                "ppcVar35": {
                    "char_ptr_ptr": 1,
                    "ptr_ptr35": 1,
                    "ptr_ptr_array": 1,
                    "ptr_ptr_var": 1,
                    "section_dump_files": 1,
                    "temp_char_var": 1
                },
                "ppuVar37": {
                    "ptr_ptr_ptr_array": 1
                },
                "puStack0000000000000020": {
                    "pointer7": 1,
                    "temp_undefined4_pointer_var": 1,
                    "tmp_ptr9": 1,
                    "undefined4_ptr2": 1
                },
                "puVar1": {
                    "pointer": 2,
                    "pointer1": 5,
                    "pointer_1": 1,
                    "ptr": 4,
                    "ptr1": 3,
                    "ptr_1": 1,
                    "section_flags": 2,
                    "tmp_ptr": 1,
                    "uint_pointer": 1
                },
                "puVar23": {
                    "pointer8": 1
                },
                "puVar29": {
                    "note_entries": 1,
                    "note_entry": 1,
                    "pointer4": 1,
                    "pointer9": 1,
                    "pointer_var4": 1,
                    "ptr": 1,
                    "ptr29": 1,
                    "ptr_var3": 1,
                    "temp_long_var3": 1,
                    "ulong_ptr3": 1
                },
                "puVar3": {
                    "pointer2": 6,
                    "pointer_2": 1,
                    "pointer_var": 1,
                    "ptr": 2,
                    "ptr2": 2,
                    "ptr3": 2,
                    "ptr_3": 1,
                    "ptr_var": 1,
                    "symbol_name": 1,
                    "tmp_ptr2": 1,
                    "undefined_pointer": 1,
                    "undefined_ptr": 1
                },
                "puVar34": {
                    "ptr34": 1,
                    "ptr4": 1,
                    "undefined4_ptr3": 1
                },
                "puVar37": {
                    "ptr37": 1
                },
                "puVar5": {
                    "pointer3": 4,
                    "pointer_3": 1,
                    "ptr": 2,
                    "ptr3": 1,
                    "ptr5": 2,
                    "ptr_5": 1,
                    "ptr_var2": 1,
                    "section_list": 1,
                    "temp_long_var4": 1,
                    "tmp_ptr3": 1,
                    "ulong_pointer": 1
                },
                "pvVar36": {
                    "ptr_var4": 1,
                    "void_ptr": 1
                },
                "sVar18": {
                    "cstring_length": 1,
                    "length": 2,
                    "size": 1,
                    "size_t1": 2,
                    "size_t18": 1,
                    "size_t3": 1,
                    "size_t_var": 1,
                    "size_t_var1": 1,
                    "size_var": 3,
                    "size_var1": 1,
                    "tmp_size4": 1,
                    "val": 1
                },
                "sVar26": {
                    "bytes_written": 1,
                    "fwrite_return": 1,
                    "length": 1,
                    "size": 1,
                    "size_t2": 2,
                    "size_t3": 1,
                    "size_t_var2": 1,
                    "size_var2": 3,
                    "tmp_size5": 1,
                    "val": 1
                },
                "uStack0000000000000048": {
                    "tmp_var13": 1,
                    "uint4": 1,
                    "uint_var2": 1
                },
                "uVar10": {
                    "section_flags": 2,
                    "tmp_var3": 1,
                    "uint1": 4,
                    "uint10": 1,
                    "uint_10": 1,
                    "uint_var": 5,
                    "uint_var1": 2,
                    "unsigned_var3": 1,
                    "val": 1,
                    "var10": 1
                },
                "uVar12": {
                    "section_flags": 1,
                    "tmp_var4": 1,
                    "uint12": 1,
                    "uint2": 4,
                    "uint_12": 1,
                    "uint_var2": 5,
                    "uint_var_2": 1,
                    "unknown_var": 1,
                    "unsigned_var4": 1,
                    "val": 1,
                    "var12": 1
                },
                "uVar13": {
                    "result": 1,
                    "tmp_var5": 1,
                    "uint13": 1,
                    "uint3": 3,
                    "uint_13": 1,
                    "uint_var3": 3,
                    "undefined4": 1,
                    "undefined4_var": 2,
                    "undefined_pointer": 1,
                    "unsigned_var5": 1,
                    "val": 1,
                    "var13": 1
                },
                "uVar16": {
                    "err_msg_fmt": 1,
                    "error_string": 1,
                    "filename": 1,
                    "message": 1,
                    "note_size": 1,
                    "result_var2": 1,
                    "tmp_var6": 1,
                    "ulong16": 1,
                    "ulong3": 2,
                    "ulong_var3": 2,
                    "undefined8_1": 1,
                    "undefined8_var1": 1,
                    "unsigned_var6": 1,
                    "val": 1,
                    "var16": 1
                },
                "uVar17": {
                    "err_msg": 1,
                    "error_message": 1,
                    "error_messages": 1,
                    "error_msg": 1,
                    "error_string": 1,
                    "message": 1,
                    "result_var3": 1,
                    "tmp_var12": 1,
                    "ulong17": 1,
                    "ulong4": 2,
                    "ulong_var4": 2,
                    "undefined8_2": 1,
                    "undefined8_var2": 1,
                    "unsigned_var7": 1,
                    "val": 1,
                    "var17": 1
                },
                "uVar20": {
                    "counter_variable": 1,
                    "merged_size": 1,
                    "tmp_var8": 1,
                    "ulong10": 1,
                    "ulong5": 1,
                    "ulong6": 1,
                    "ulong_20": 1,
                    "var20": 1
                },
                "uVar22": {
                    "tmp_var9": 1,
                    "ulong3": 1,
                    "ulong6": 1,
                    "ulong_22": 1,
                    "unsigned_var9": 1,
                    "val": 1
                },
                "uVar24": {
                    "return_variable": 1,
                    "tmp_var10": 1,
                    "ulong4": 1,
                    "ulong9": 1,
                    "unsigned_var10": 1,
                    "val": 1
                },
                "uVar30": {
                    "tmp_var11": 1,
                    "ulong5": 1,
                    "ulong8": 1,
                    "unsigned_var8": 1,
                    "val": 1
                },
                "uVar6": {
                    "result_var": 1,
                    "section_flags": 1,
                    "tmp_var": 1,
                    "total_size": 1,
                    "ulong1": 4,
                    "ulong6": 1,
                    "ulong_6": 1,
                    "ulong_var1": 4,
                    "ulong_var_1": 1,
                    "val1": 1,
                    "var6": 1
                },
                "uVar7": {
                    "merged_size": 1,
                    "section_flags": 1,
                    "temp_var": 1,
                    "tmp_var2": 1,
                    "ulong2": 4,
                    "ulong7": 1,
                    "ulong_7": 1,
                    "ulong_var2": 4,
                    "ulong_var_2": 1,
                    "unsigned_var": 1,
                    "val2": 1,
                    "var7": 1
                },
                "uVar8": {
                    "unsigned_var2": 1
                },
                "unaff_R13": {
                    "merged_notes": 1,
                    "ptr": 1,
                    "reg_ptr3": 1
                },
                "unaff_R14": {
                    "bfd_data": 1,
                    "bfd_object": 1,
                    "ptr": 1,
                    "reg_ptr1": 1
                },
                "unaff_RBP": {
                    "current_section": 1,
                    "long_val": 1,
                    "ptr": 1,
                    "reg_ptr2": 1,
                    "unreachable_block_pointer": 1
                },
                "unaff_RBX": {
                    "merged_notes": 1,
                    "merged_notes_ptr": 1,
                    "ptr": 2,
                    "reg_ptr4": 1
                },
                "undefined": {
                    "undefined_var": 1
                },
                "undefined8": {
                    "ulong": 1
                },
                "while_loop_condition": {
                    "while_loop_condition2": 1
                }
            },
            "called": [
                "dcgettext",
                "free",
                "FUN_001126c0"
            ],
            "calling": [
                "FUN_00107880"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x001062da) */\n/* WARNING: Removing unreachable block (ram,0x001062e7) */\n/* WARNING: Removing unreachable block (ram,0x001062eb) */\n/* WARNING: Removing unreachable block (ram,0x00106314) */\n/* WARNING: Removing unreachable block (ram,0x00106316) */\n/* WARNING: Removing unreachable block (ram,0x00106323) */\n/* WARNING: Removing unreachable block (ram,0x00106331) */\n/* WARNING: Removing unreachable block (ram,0x0010633b) */\n/* WARNING: Removing unreachable block (ram,0x00106354) */\n/* WARNING: Removing unreachable block (ram,0x00106358) */\n/* WARNING: Removing unreachable block (ram,0x001075c4) */\n/* WARNING: Removing unreachable block (ram,0x0010636d) */\n/* WARNING: Removing unreachable block (ram,0x00106375) */\n/* WARNING: Removing unreachable block (ram,0x00106490) */\n/* WARNING: Type propagation algorithm not settling */\n\n\nulong merge_and_dump_debug_sections_0010551d(void)\n\n{\n  uint *pointer1;\n  byte byte_var;\n  undefined_var *pointer2;\n  code *function_pointer;\n  ulong *pointer3;\n  ulong ulong_var1;\n  ulong ulong2;\n  char *string;\n  char char_var1;\n  char char_var2;\n  uint uint_var;\n  int int_var;\n  uint uint_var2;\n  undefined_var4 uint3;\n  int int_var2;\n  long *pointer4;\n  ulong ulong_var3;\n  ulong ulong4;\n  size_t size_var;\n  char *section_contents;\n  void *section_contents;\n  void *section_contents_0;\n  ulong ulong6;\n  long long_var2;\n  ulong ulong6;\n  int *ptr;\n  ulong return_variable;\n  long long_var2;\n  FILE *note_filename;\n  size_t size_var2;\n  long long_var3;\n  long *ptr;\n  char *string;\n  ulong *note_entry;\n  ulong ulong8;\n  int int3;\n  long unreachable_block_pointer;\n  long *merged_notes_list;\n  char *section_name;\n  undefined_var4 *ptr4;\n  char **temp_char_var;\n  long *ptr;\n  void *void_ptr;\n  ulong *bfd_data;\n  undefined_var **ptr_ptr_ptr_array;\n  bool bool_var;\n  byte byte_var2;\n  long parameter1;\n  ulong parameter2;\n  char int_var3;\n  undefined_var4 *undefined4_ptr2;\n  char *temp_char_pointer_var2;\n  uint tmp_var13;\n  int tmp_int4;\n  long tmp_long5;\n  long tmp_long6;\n  char *tmp_c_str4;\n  long lStack00000000000000a0;\n  long *section_contents;\n  ulong section_size;\n  long stab_array_size;\n  long param7;\n  void *param8;\n  long param9;\n  ulong param10;\n  byte byte2;\n  byte byte3;\n  ulong section_name;\n  ushort file_extension;\n  char *section_dump_file_name;\n  char char_stack148;\n  char *current_section_name;\n  undefined_var uStack0000000000000158;\n  short sStack000000000000015a;\n  \n  byte_var2 = 0;\ncode_r0x0010551d:\n  dcgettext(0,\"warning: could not load note section\",5);\n  FUN_001126c0(0);\n  free(ptr);\nLAB_001151a2:\n  unreachable_block_pointer = *(long *)(unreachable_block_pointer + 8);\n  note_entry = DAT_001279b0;\n  if (unreachable_block_pointer == 0) goto joined_r0x001151c7;\n  if (DAT_00127a00 != '\\0') {\n    if ((((*(int *)(bfd_data[1] + 8) != 5) || (*(int *)(*(long *)(unreachable_block_pointer + 0xd0) + 4) != 7)) ||\n        (char_var2 = FUN_00113fb0(), char_var2 == '\\0')) ||\n       ((*(long *)(unreachable_block_pointer + 0x60) == 0 || (long_var2 = *(long *)(unreachable_block_pointer + 0x40), long_var2 == 0))))\n    goto LAB_001151a2;\n    ptr = (long *)xmalloc(0x20);\n    ptr[1] = 0;\n    char_var2 = bfd_get_full_section_contents();\n    if (char_var2 != '\\0') {\n      long_var3 = FUN_001163d0();\n      ptr[2] = long_var3;\n      if ((long_var3 == long_var2) || (char_var2 = bfd_set_section_size(), char_var2 != '\\0')) {\n        ptr[3] = (long)ptr;\n        *ptr = unreachable_block_pointer;\n        ptr = ptr;\n      }\n      else {\n        dcgettext(0,\"warning: failed to set merged notes size\",5);\n        FUN_001126c0(0,parameter1,unreachable_block_pointer);\n        free((void *)ptr[1]);\n        free(ptr);\n      }\n      goto LAB_001151a2;\n    }\n    goto code_r0x0010551d;\n  }\n  for (long_var2 = *(long *)(unreachable_block_pointer + 8); long_var2 != 0; long_var2 = *(long *)(long_var2 + 8)) {\n  }\njoined_r0x001151c7:\n  for (; note_entry != (ulong *)0x0; note_entry = (ulong *)*note_entry) {\n    long_var2 = bfd_get_section_by_name();\n    if (long_var2 == 0) {\n      dcgettext(0,\"can\\'t dump section \\'%s\\' - it does not exist\",5);\n      FUN_001126c0(0);\n    }\n    else if ((*(byte *)(long_var2 + 0x25) & 1) == 0) {\n      dcgettext(0,\"can\\'t dump section - it has no contents\",5);\n      FUN_001126c0(0);\n    }\n    else {\n      size_var = *(size_t *)(long_var2 + 0x40);\n      note_filename = fopen((char *)note_entry[2],\"w\");\n      if (note_filename == (FILE *)0x0) {\n        dcgettext(0,\"could not open section dump file\",5);\n        FUN_001126c0(note_entry[2],0,0);\n      }\n      else {\n        char_var2 = bfd_malloc_and_get_section();\n        if (char_var2 == '\\0') {\n          dcgettext(0,\"could not retrieve section contents\",5);\n          FUN_001126c0(0);\n        }\n        else if ((size_var != 0) &&\n                (size_var2 = fwrite(section_dump_file_name,1,size_var,note_filename), size_var2 != size_var)) {\n          ptr = __errno_location();\n          section_name = strerror(*ptr);\n          ulong4 = note_entry[2];\n          ulong_var3 = dcgettext(0,\"error writing section contents to %s (error: %s)\",5);\n          FUN_00119ed0(ulong_var3,ulong4,section_name);\n          free(section_dump_file_name);\n          fclose(note_filename);\n          return 0;\n        }\n        fclose(note_filename);\n        free(section_dump_file_name);\n      }\n    }\n  }\n  if (DAT_00127a10 == 0) {\nLAB_0010790a:\n    tmp_long5 = 0;\n  }\n  else {\n    long_var2 = bfd_get_section_by_name(parameter1,\".gnu_debuglink\");\n    if (long_var2 != 0) {\n      ulong4 = dcgettext(0,\"%s: debuglink section already exists\",5);\n      FUN_00119ed0(ulong4);\n      DAT_00127a10 = 0;\n      goto LAB_0010790a;\n    }\n    tmp_long5 = bfd_create_gnu_debuglink_section(parameter1);\n    long_var2 = DAT_00127a10;\n    if (tmp_long5 == 0) {\n      ulong4 = dcgettext(0,\"cannot create debug link section `%s\\'\",5);\n      FUN_001126c0(0,parameter1,0,ulong4,long_var2);\n      return 0;\n    }\n    if (*(int *)(*(long *)(parameter1 + 8) + 8) == 2) {\n      ulong6 = 0;\n      for (return_variable = *(ulong *)(parameter1 + 0x90); return_variable != 0;\n          return_variable = *(ulong *)(return_variable + 8)) {\n        ulong6 = *(ulong *)(return_variable + 0x30);\n        ulong8 = ulong6;\n        ulong_var1 = return_variable;\n        ulong2 = ulong6;\n        if (ulong6 != 0) {\n          while ((ulong8 = ulong_var1, ulong2 != 0 &&\n                 (ulong8 = return_variable, ulong6 <= *(ulong *)(ulong6 + 0x30)))) {\n            return_variable = *(ulong *)(return_variable + 8);\n            if (return_variable == 0) goto LAB_00107db8;\n            ulong6 = *(ulong *)(return_variable + 0x30);\n            ulong_var1 = ulong6;\n            ulong2 = ulong6;\n          }\n        }\n        ulong6 = ulong8;\n      }\nLAB_00107db8:\n      if (ulong6 == 0) {\n        return_variable = 0x1000;\n      }\n      else {\n        ulong6 = *(long *)(ulong6 + 0x40) + *(long *)(ulong6 + 0x30);\n        return_variable = 0xffffffffffffffff;\n        if (ulong6 < 0xfffffffffffff001) {\n          return_variable = ulong6 + 0xfff & 0xfffffffffffff000;\n        }\n      }\n      *(byte *)(tmp_long5 + 0x28) = *(byte *)(tmp_long5 + 0x28) | 1;\n      *(ulong *)(tmp_long5 + 0x30) = return_variable;\n      *(ulong *)(tmp_long5 + 0x38) = return_variable;\n    }\n  }\n  merged_notes_list = DAT_001278b0;\n  tmp_int4 = *(int *)(parameter1 + 0xa0);\n  if (tmp_int4 != 0) {\n    return_variable = FUN_0010554f();\n    return return_variable;\n  }\n  if (DAT_00127980 == '\\0') {\nLAB_00105588:\n    undefined4_ptr2 = (undefined_var4 *)0x0;\n  }\n  else {\n    ptr_ptr_ptr_array = &PTR_sstringtab_00125c60;\n    undefined4_ptr2 = (undefined_var4 *)xmalloc(0x60);\n    ptr4 = undefined4_ptr2;\n    for (long_var2 = 0x18; long_var2 != 0; long_var2 = long_var2 + -1) {\n      *ptr4 = 0;\n      ptr4 = ptr4 + (ulong)byte_var2 * -2 + 1;\n    }\n    temp_char_pointer_var2 = (char *)0x0;\n    do {\n      pointer2 = *ptr_ptr_ptr_array;\n      long_var2 = bfd_get_section_by_name();\n      long_var3 = bfd_get_section_by_name();\n      if ((long_var2 != 0) && (long_var3 != 0)) {\n        long_var2 = *(long *)(long_var2 + 0x40);\n        section_contents = (void *)xmalloc(long_var2);\n        char_var2 = bfd_get_section_contents();\n        if (char_var2 == '\\0') {\n          uint3 = bfd_get_error();\n          bfd_errmsg(uint3);\n          fprintf(_stderr,\"%s: %s: %s\\n\",*bfd_data);\n          free(temp_char_pointer_var2);\n          free(section_contents);\n        }\n        else {\n          return_variable = *(ulong *)(long_var3 + 0x40);\n          section_contents_0 = (void *)xmalloc(return_variable + 1);\n          int_var3 = bfd_get_section_contents();\n          if (int_var3 == '\\0') {\n            uint3 = bfd_get_error();\n            bfd_errmsg(uint3);\n            fprintf(_stderr,\"%s: %s: %s\\n\",*bfd_data);\n            free(temp_char_pointer_var2);\n          }\n          else {\n            *(undefined_var *)((long)section_contents_0 + return_variable) = 0;\n            if ((temp_char_pointer_var2 != (char *)0x0) ||\n               (temp_char_pointer_var2 = (char *)FUN_00112894(),\n               temp_char_pointer_var2 != (char *)0x0)) {\n              lStack00000000000000a0 = 0;\n              tmp_long6 = 0;\n              for (void_ptr = section_contents; void_ptr <= (void *)((long)section_contents + long_var2 + -0xc);\n                  void_ptr = (void *)((long)void_ptr + 0xc)) {\n                ulong6 = (**(code **)(bfd_data[1] + 0x40))(void_ptr);\n                byte_var = *(byte *)((long)void_ptr + 4);\n                uint3 = (**(code **)(bfd_data[1] + 0x58))((long)void_ptr + 6);\n                long_var3 = (**(code **)(bfd_data[1] + 0x40))((long)void_ptr + 8);\n                if (byte_var == 0) {\n                  tmp_long6 = lStack00000000000000a0;\n                  lStack00000000000000a0 = lStack00000000000000a0 + long_var3;\n                }\n                else {\n                  ulong6 = (ulong6 & 0xffffffff) + tmp_long6;\n                  if (ulong6 < return_variable) {\n                    section_name = (char *)((long)section_contents_0 + ulong6);\n                    tmp_c_str4 = (char *)0x0;\n                    while( true ) {\n                      size_var = strlen(section_name);\n                      if (((size_var == 0) || (string = section_name + (size_var - 1), *string != '\\')) ||\n                         ((ulong)((long)section_contents + long_var2) < (long)void_ptr + 0x10U)) goto LAB_001077fb;\n                      *string = '\\0';\n                      void_ptr = (void *)((long)void_ptr + 0xc);\n                      int_var = (**(code **)(bfd_data[1] + 0x40))(void_ptr);\n                      ulong6 = (ulong)(uint)(int_var + (int)tmp_long6);\n                      if (return_variable <= ulong6) break;\n                      section_name = (char *)concat(section_name,(long)section_contents_0 + ulong6,0);\n                      *string = '\\';\n                      free(tmp_c_str4);\n                      tmp_c_str4 = section_name;\n                    }\n                    ulong4 = *bfd_data;\n                    string = (char *)dcgettext(0,\"%s: %s: stab entry %ld is corrupt\\n\",5);\n                    fprintf(_stderr,string,ulong4,pointer2,((long)void_ptr - (long)section_contents) / 0xc);\nLAB_001077fb:\n                    FUN_001088ae((ulong)byte_var,uint3,long_var3,section_name);\n                    char_var2 = FUN_0011173a(undefined4_ptr2,temp_char_pointer_var2,byte_var);\n                    if (char_var2 == '\\0') {\n                      FUN_00108b3e();\n                      FUN_00108863();\n                      free(tmp_c_str4);\n                      free(temp_char_pointer_var2);\n                      free(section_contents);\n                      free(section_contents_0);\n                      goto LAB_00105981;\n                    }\n                  }\n                  else {\n                    ulong4 = *bfd_data;\n                    section_name = (char *)dcgettext(0,\n                                                \"%s: %s: stab entry %ld is corrupt, strx = 0x%x, type = %d\\n\"\n                                                ,5);\n                    fprintf(_stderr,section_name,ulong4,pointer2,((long)void_ptr - (long)section_contents) / 0xc,\n                            ulong6 & 0xffffffff,(ulong)byte_var,((long)void_ptr - (long)section_contents) % 0xc);\n                  }\n                }\n              }\n              FUN_00108863();\n              free(section_contents);\n              goto LAB_001058eb;\n            }\n          }\n          free(section_contents_0);\n          free(section_contents);\n        }\nLAB_00105981:\n        free(undefined4_ptr2);\n        goto LAB_00105588;\n      }\nLAB_001058eb:\n      ptr_ptr_ptr_array = ptr_ptr_ptr_array + 2;\n    } while (ptr_ptr_ptr_array != (undefined_var **)&DAT_00125c90);\n    if ((temp_char_pointer_var2 != (char *)0x0) && (char_var2 = FUN_0010c892(), char_var2 == '\\0'))\n    goto LAB_00105981;\n    if (*(int *)(bfd_data[1] + 8) == 1) {\n      long_var2 = 0;\n      for (pointer4 = merged_notes_list; pointer4 < merged_notes_list + parameter2; pointer4 = pointer4 + 1) {\n        (**(code **)(bfd_data[1] + 0x218))();\n        if (char_stack148 == '-') {\n          if (((long_var2 != 0) || (long_var2 = FUN_00112894(), long_var2 != 0)) &&\n             ((current_section_name != (char *)0x0 && (*current_section_name != '\\0')))) {\n            section_name = (char *)0x0;\n            string = current_section_name;\n            while (((*string != '\\0' && (size_var = strlen(string), string[size_var - 1] == '\\')) &&\n                   (pointer4 + 1 < merged_notes_list + parameter2))) {\n              section_contents = (char *)xstrdup(string);\n              size_var = strlen(section_contents);\n              section_contents[size_var - 1] = '\\0';\n              string = (char *)concat(section_contents,*(ulong *)(pointer4[1] + 8),0);\n              free(section_contents);\n              free(section_name);\n              pointer4 = pointer4 + 1;\n              section_name = string;\n            }\n            FUN_001088ae(uStack0000000000000158,(int)sStack000000000000015a,section_dump_file_name,\n                         string);\n            int_var3 = FUN_0011173a(undefined4_ptr2,long_var2,uStack0000000000000158);\n            if (int_var3 != '\\0') goto LAB_00106cac;\n            FUN_00108b3e();\n            FUN_00108863();\n          }\n          goto LAB_00105981;\n        }\nLAB_00106cac:\n      }\n      FUN_00108863();\n      if ((long_var2 != 0) && (char_var2 = FUN_0010c892(), char_var2 == '\\0')) goto LAB_00105981;\n    }\n    if (int_var3 == '\\0') {\n      if ((*(int *)(bfd_data[1] + 8) != 2) || (parameter2 == 0)) {\n        section_name = \"%s: no recognized debugging information\";\n        goto LAB_00105968;\n      }\n      section_dump_file_name = (char *)0x0;\n      section_contents = merged_notes_list;\n      stab_array_size = 0;\n      section_size = parameter2;\n      param7 = 0;\n      note_entry = (ulong *)&stack0x00000148;\n      for (long_var2 = 0x22; long_var2 != 0; long_var2 = long_var2 + -1) {\n        *(undefined_var4 *)note_entry = 0;\n        note_entry = (ulong *)((long)note_entry + (ulong)byte_var2 * -8 + 4);\n      }\n      char_var2 = '\\0';\n      int_pointer = (int *)0x0;\n      temp_char_pointer_var2 = (char *)0x0;\n      tmp_c_str4 = (char *)0xffffffffffffffff;\nswitchD_00106e1a_caseD_68:\n      do {\n        if ((long)parameter2 <= stab_array_size) break;\n        long_var2 = merged_notes_list[stab_array_size];\n        char_var1 = bfd_coff_get_syment();\n        long_var3 = param7;\n        if (char_var1 == '\\0') {\n          uint3 = bfd_get_error();\n          bfd_errmsg(uint3);\n          section_name = \"bfd_coff_get_syment failed: %s\";\nLAB_00105968:\n          ulong4 = dcgettext(0,section_name,5);\n          FUN_00119ed0(ulong4);\n          goto LAB_00105981;\n        }\n        section_name = *(char **)(long_var2 + 8);\n        stab_array_size = stab_array_size + 1;\n        param7 = (ulong)byte3 + 1 + param7;\n        if ((byte3 != 0) && (char_var1 = bfd_coff_get_auxent(), char_var1 == '\\0')) {\n          uint3 = bfd_get_error();\n          bfd_errmsg(uint3);\n          section_name = \"bfd_coff_get_auxent failed: %s\";\n          goto LAB_00105968;\n        }\n        if (tmp_c_str4 == (char *)long_var3) {\n          if (byte2 != 0x67) {\n            char_var1 = FUN_0010bbd3(undefined4_ptr2);\n            if (char_var1 == '\\0') goto LAB_00105981;\n            goto LAB_00106de4;\n          }\nswitchD_00106e1a_caseD_67:\n          tmp_c_str4 = (char *)param9;\n          char_var1 = FUN_0010bbd3(undefined4_ptr2);\n        }\n        else {\nLAB_00106de4:\n          if ((char)byte2 < '\\0') {\n            if (byte2 == 0xff) goto switchD_00106e1a_caseD_68;\n          }\n          else if (byte2 < 100) {\n            switch(byte2) {\n            case 3:\n              if (param10._6_2_ == 0) goto switchD_00106e1a_caseD_68;\n            case 2:\nswitchD_00106e1a_caseD_7f:\n              if ((ulong)((uint)param10._6_2_ & *(uint *)(bfd_data[0x22] + 0x40)) ==\n                  2L << ((byte)*(undefined_var4 *)(bfd_data[0x22] + 0x3c) & 0x3f)) {\n                int_pointer = (int *)(**(code **)(bfd_data[1] + 0x238))();\n                temp_char_pointer_var2 = section_name;\n                goto switchD_00106e1a_caseD_68;\n              }\n              break;\n            default:\n              break;\n            case 5:\n            case 7:\n            case 0xe:\n              goto switchD_00106e1a_caseD_68;\n            }\n          }\n          else {\n            switch(byte2) {\n            case 100:\n              int_var = strcmp(section_name,\".bb\");\n              if (int_var == 0) {\n                char_var1 = FUN_0010be88(undefined4_ptr2);\n                goto joined_r0x00107247;\n              }\n              int_var = strcmp(section_name,\".eb\");\n              if (int_var == 0) {\n                char_var1 = FUN_0010bf20(undefined4_ptr2);\n                goto joined_r0x00107247;\n              }\n              goto switchD_00106e1a_caseD_68;\n            case 0x65:\n              int_var = strcmp(section_name,\".bf\");\n              if (int_var == 0) {\n                if (temp_char_pointer_var2 != (char *)0x0) {\n                  long_var3 = FUN_0010dac0();\n                  if ((long_var3 == 0) ||\n                     (char_var2 = FUN_0010bc80(undefined4_ptr2), char_var2 == '\\0'))\n                  goto LAB_00105981;\n                  if (int_pointer != (int *)0x0) {\n                    int_var = 0;\n                    if (byte3 != 0) {\n                      int_var = file_extension - 1;\n                    }\n                    long_var2 = *(long *)(*(long *)(long_var2 + 0x20) + 0x30);\n                    while( true ) {\n                      int3 = int_pointer[4];\n                      if (int3 == 0) break;\n                      char_var1 = FUN_0010bf86(undefined4_ptr2,int_var + int3,\n                                           *(long *)(int_pointer + 6) + long_var2);\n                      int_pointer = int_pointer + 4;\n                      if (char_var1 == '\\0') goto LAB_00105981;\n                    }\n                  }\n                  int_pointer = (int *)0x0;\n                  temp_char_pointer_var2 = (char *)0x0;\n                  goto switchD_00106e1a_caseD_68;\n                }\n                section_name = \"%ld: .bf without preceding function\";\n              }\n              else {\n                int_var = strcmp(section_name,\".ef\");\n                if (int_var != 0) goto switchD_00106e1a_caseD_68;\n                if (char_var2 != '\\0') {\n                  char_var2 = FUN_0010be1a(undefined4_ptr2);\n                  if (char_var2 == '\\0') goto LAB_00105981;\n                  char_var2 = '\\0';\n                  goto switchD_00106e1a_caseD_68;\n                }\n                section_name = \"%ld: unexpected .ef\\n\";\n              }\n              ulong4 = dcgettext(0,section_name,5);\n              FUN_00119ed0(ulong4);\n              goto LAB_00105981;\n            case 0x67:\n              goto switchD_00106e1a_caseD_67;\n            case 0x68:\n            case 0x69:\n            case 0x6a:\n              goto switchD_00106e1a_caseD_68;\n            case 0x7f:\n              goto switchD_00106e1a_caseD_7f;\n            }\n          }\n          long_var2 = FUN_0010dac0();\n          if (long_var2 == 0) goto LAB_00105981;\n          char_var1 = FUN_00112a33(&stack0x00000140,long_var2,long_var3);\n        }\njoined_r0x00107247:\n        if (char_var1 == '\\0') goto LAB_00105981;\n      } while( true );\n    }\n  }\n  if (((*(uint *)(parameter1 + 0x44) & 0x42) != 0) &&\n     ((*(uint *)(parameter1 + 0x44) & 1) == 0)) {\n    if ((*(char *)(*(long *)(parameter1 + 8) + 0x20) == '\\0') && (DAT_00127939 == '\\0')) {\n      if (parameter2 != 0) {\n        merged_notes_list = DAT_001278b0 + parameter2;\n        pointer4 = DAT_001278b0;\n        do {\n          uint_var = *(uint *)(*pointer4 + 0x18);\n          if ((uint_var & 0x1000000) != 0) {\n            *(uint *)(*pointer4 + 0x18) = uint_var & 0xfeffffff;\n          }\n          pointer4 = pointer4 + 1;\n        } while (merged_notes_list != pointer4);\n      }\n    }\n    else {\n      for (long_var2 = *(long *)(parameter1 + 0x90); long_var2 != 0; long_var2 = *(long *)(long_var2 + 8)\n          ) {\n        if (*(long *)(long_var2 + 0xe8) != 0) {\n          pointer1 = (uint *)(*(long *)(long_var2 + 0xe8) + 0x18);\n          *pointer1 = *pointer1 | 0x1000000;\n        }\n      }\n    }\n  }\n  if ((DAT_00127a2c == 2) || (DAT_00127a2c == 7)) {\nLAB_001059fe:\n    if (DAT_00127a2c != 7) {\nLAB_00105a07:\n      bfd_set_error(0);\n      bfd_map_over_sections();\n      int_var = bfd_get_error();\n      if (int_var != 0) {\n        DAT_00127a20 = 1;\n        return 0;\n      }\n    }\n    long_var2 = xmalloc();\n    merged_notes_list = DAT_001278b0;\n    tmp_var13 = *(uint *)((long)bfd_data + 0x44) & 0x42;\n    DAT_001278a8 = long_var2;\n    if (parameter2 == 0) {\n      return_variable = 0;\n    }\n    else {\n      return_variable = 0;\n      _int_var3 = 0;\n      do {\n        int_var = DAT_001279a0;\n        pointer4 = (long *)merged_notes_list[_int_var3];\n        function_pointer = (code *)pointer4[4];\n        uint_var = *(uint *)(pointer4 + 3);\n        section_name = (char *)pointer4[1];\n        string = section_name;\n        if (DAT_001279a8 != (ulong *)0x0) {\n          int3 = 0;\n          note_entry = DAT_001279a8;\n          while( true ) {\n            if ((int_var <= int3) || (section_contents = (char *)note_entry[5], section_contents == (char *)0x0))\n            goto LAB_00105ad5;\n            if (section_contents != \"\") break;\nLAB_0010750b:\n            int3 = int3 + 1;\n          }\n          int_var2 = strcmp(section_contents,section_name);\n          if (int_var2 != 0) {\n            note_entry = (ulong *)*note_entry;\n            goto LAB_0010750b;\n          }\n          free(section_contents);\n          ulong6 = return_variable + 1;\n          note_entry[5] = \"\";\n          ulong_var3 = FUN_0011a2e0(note_entry);\n          ulong4 = DAT_001278d0;\n          *(ulong *)(long_var2 + return_variable * 8) = ulong_var3;\n          long_var3 = htab_elements(ulong4);\n          if ((long_var3 != 0) || (DAT_001278d8 != (char **)0x0)) goto LAB_001064eb;\nLAB_00105af8:\n          char_var2 = *section_name;\n          if (char_var2 != '\\0') goto LAB_00105b11;\nLAB_00106557:\n          section_name = DAT_00127908;\n          if ((DAT_00127988 != '\\0') && (*(char *)(*(long *)(parameter1 + 8) + 0x1c) != '\\0')\n             ) {\n            long_var3 = bfd_data[1];\n            char_var2 = '\\0';\n            goto LAB_0010668d;\n          }\n          goto joined_r0x00106565;\n        }\nLAB_00105ad5:\n        long_var3 = htab_elements(DAT_001278d0);\n        ulong6 = return_variable;\n        if ((long_var3 == 0) && (DAT_001278d8 == (char **)0x0)) goto LAB_00105af8;\n        if (section_name != (char *)0x0) {\nLAB_001064eb:\n          if (((*section_name == '_') && (section_name[1] == '_')) &&\n             (int_var = strcmp(section_name + (section_name[2] == '_'),\"__gnu_lto_slim\"), int_var == 0)) {\n            ulong4 = dcgettext(0,\"redefining symbols does not work on LTO-compiled object files\",5);\n                    \n            FUN_00119dd0(ulong4);\n          }\n        }\n        _char_stack148 = 0;\n        section_dump_file_name = section_name;\n        long_var3 = htab_find(DAT_001278d0);\n        if (((long_var3 == 0) || (string = *(char **)(long_var3 + 8), section_name == string)) &&\n           (string = section_name, temp_char_var = DAT_001278d8, (uint_var & 0x100) != 0)) {\n          for (; temp_char_var != (char **)0x0; temp_char_var = (char **)temp_char_var[3]) {\n            int_var = strcmp(*temp_char_var,section_name);\n            if (int_var == 0) {\n              string = temp_char_var[1];\n              break;\n            }\n          }\n        }\n        pointer4[1] = (long)string;\n        char_var2 = *string;\n        if (char_var2 == '\\0') goto LAB_00106557;\nLAB_00105b11:\n        section_name = DAT_00127908;\n        long_var3 = bfd_data[1];\n        if (*(char *)(long_var3 + 0x1c) == char_var2) {\n          if (DAT_00127988 == '\\0') {\n            if ((DAT_00127968 == '\\0') ||\n               ((((uint_var & 0x82) == 0 && (function_pointer != bfd_map_over_sections)) &&\n                ((*(byte *)(pointer4[4] + 0x25) & 0x10) == 0)))) goto joined_r0x00106565;\nLAB_0010677d:\n            string = string + 1;\n            pointer4[1] = (long)string;\n            goto joined_r0x00106565;\n          }\n          char_var2 = *(char *)(*(long *)(parameter1 + 8) + 0x1c);\n          if (char_var2 == '\\0') goto LAB_0010677d;\n          if (DAT_00127908 != (char *)0x0) {\n            string = string + 1;\n            pointer4[1] = (long)string;\n            size_var = strlen(string);\n            long_var3 = size_var + 2;\n            goto LAB_001066bc;\n          }\n          *string = char_var2;\n          pointer4[1] = (long)string;\n          return_variable = ulong6;\n        }\n        else {\n          if ((DAT_00127988 == '\\0') || (*(char *)(*(long *)(parameter1 + 8) + 0x1c) == '\\0')\n             ) {\njoined_r0x00106565:\n            return_variable = ulong6;\n            if (section_name == (char *)0x0) goto LAB_00105b32;\n            size_var = strlen(string);\n            size_var2 = strlen(section_name);\n            section_name = (char *)xmalloc(size_var2 + size_var + 1);\n            section_contents = section_name;\n          }\n          else {\nLAB_0010668d:\n            section_name = DAT_00127908;\n            if ((*(char *)(long_var3 + 0x1c) != '\\0') && (char_var2 != *(char *)(long_var3 + 0x1c)))\n            goto joined_r0x00106565;\n            size_var = strlen(string);\n            long_var3 = size_var + 2;\n            if (section_name == (char *)0x0) {\n              section_contents = (char *)xmalloc(long_var3);\n            }\n            else {\nLAB_001066bc:\n              size_var = strlen(section_name);\n              section_contents = (char *)xmalloc(size_var + long_var3);\n            }\n            section_name = section_contents + 1;\n            *section_contents = *(char *)(*(long *)(parameter1 + 8) + 0x1c);\n          }\n          string = DAT_00127908;\n          if (DAT_00127908 != (char *)0x0) {\n            strcpy(section_name,DAT_00127908);\n            size_var = strlen(string);\n            section_name = section_name + size_var;\n          }\n          strcpy(section_name,string);\n          pointer4[1] = (long)section_contents;\n          string = section_contents;\n          return_variable = ulong6;\n        }\nLAB_00105b32:\n        if (DAT_00127a2c == 7) goto LAB_001067a8;\n        if (((uint_var & 0x20) == 0) &&\n           (((uint_var & 0x100) == 0 ||\n            ((*(byte *)(**(long **)(pointer4[4] + 0xf0) + 0x18) & 0x20) == 0)))) {\n          if (((tmp_var13 == 0) &&\n              (((uint_var & 0x82) != 0 || ((*(byte *)(pointer4[4] + 0x25) & 0x10) != 0)))) ||\n             (int_var = bfd_decode_symclass(pointer4), int_var == 0x49)) {\nLAB_00105be2:\n            if (DAT_001279ca == '\\0') {\n              long_var3 = htab_find();\n              if (long_var3 == 0) goto LAB_00105c07;\n            }\n            else {\n              _char_stack148 = _char_stack148 & 0xffffffffffffff00;\n              section_dump_file_name = string;\n              htab_traverse(DAT_001279f8,FUN_0011a170,&stack0x00000140);\n              if (char_stack148 == '\\0') goto LAB_00105c07;\n            }\n          }\n          else if ((((uint_var & 0x82) == 0) && (function_pointer != bfd_map_over_sections)) &&\n                  ((*(byte *)(pointer4[4] + 0x25) & 0x10) == 0)) {\n            if ((uint_var & 4) == 0) {\n              if (((*(int *)(bfd_data[1] + 8) != 2) ||\n                  (long_var3 = *(long *)(pointer4[4] + 0xd0), long_var3 == 0)) ||\n                 (*(long *)(long_var3 + 0x40) == 0)) {\n                if ((DAT_00127a2c == 3) || (DAT_00127a28 == 2)) goto LAB_001067a8;\n                if (DAT_00127a28 == 1) {\n                  char_var2 = bfd_is_local_label(bfd_data);\n                  goto joined_r0x00106a11;\n                }\n              }\n              goto LAB_00105be2;\n            }\n            char_var2 = DAT_00127980;\n            if (1 < DAT_00127a2c - 2U) {\njoined_r0x00106a11:\n              if (char_var2 == '\\0') goto LAB_00105be2;\n            }\n          }\n          else if (DAT_00127a2c != 3) goto LAB_00105be2;\n          goto LAB_001067a8;\n        }\n        if (DAT_001279ca == '\\0') {\n          long_var3 = htab_find();\n          if (long_var3 != 0) {\nLAB_0010687f:\n            ulong4 = dcgettext(0,\"not stripping symbol `%s\\' because it is named in a relocation\",5)\n            ;\n            FUN_00119ed0(ulong4);\n            DAT_00127a20 = 1;\n          }\n        }\n        else {\n          _char_stack148 = _char_stack148 & 0xffffffffffffff00;\n          section_dump_file_name = string;\n          htab_traverse(DAT_001279f8,FUN_0011a170,&stack0x00000140);\n          if (char_stack148 != '\\0') goto LAB_0010687f;\n        }\n        if ((uint_var & 0x20) == 0) {\nLAB_00105c07:\n          if (DAT_001279ca != '\\0') {\n            _char_stack148 = _char_stack148 & 0xffffffffffffff00;\n            section_dump_file_name = string;\n            htab_traverse(DAT_001279f0,FUN_0011a170,&stack0x00000140);\n            if (char_stack148 != '\\0') goto LAB_001067a8;\n            goto LAB_00105c2c;\n          }\n          long_var3 = htab_find();\n          if (long_var3 == 0) goto LAB_00105c2c;\nLAB_001067a8:\n          if ((DAT_00127a18 != '\\0') && ((uint_var & 0x4000) != 0)) goto LAB_00105c2c;\n          if (DAT_001279ca == '\\0') {\n            long_var3 = htab_find();\n            if (long_var3 != 0) goto LAB_00105c2c;\n          }\n          else {\n            _char_stack148 = _char_stack148 & 0xffffffffffffff00;\n            section_dump_file_name = string;\n            htab_traverse(DAT_00127a08,FUN_0011a170,&stack0x00000140);\n            if (char_stack148 != '\\0') goto LAB_00105c2c;\n          }\n        }\n        else {\nLAB_00105c2c:\n          char_var2 = FUN_001159d0(pointer4[4]);\n          if (char_var2 == '\\0') {\n            if (((uint_var & 0x800002) == 0) && (function_pointer != bfd_map_over_sections)) {\nLAB_00105c5f:\n              if ((uint_var & 0x82) != 0) {\n                char_var2 = FUN_00115d70(string);\n                if ((char_var2 == '\\0') &&\n                   ((long_var3 = htab_elements(DAT_001279d8), long_var3 == 0 ||\n                    (char_var2 = FUN_00115d70(string), char_var2 != '\\0')))) {\n                  if (((((DAT_00127938 == '\\0') ||\n                        (uint_var2 = *(uint *)(pointer4 + 3), (uint_var2 & 0x200000) != 0)) ||\n                       (long_var3 = *pointer4, long_var3 == 0)) ||\n                      ((*(int *)(*(long *)(long_var3 + 8) + 8) != 5 || (*(long *)(long_var3 + 0x110) == 0)\n                       ))) || (1 < (*(byte *)((long)pointer4 + 0x49) & 3) - 1))\n                  goto joined_r0x00105ca2;\n                }\n                else {\n                  uint_var2 = *(uint *)(pointer4 + 3);\n                }\n                *(uint *)(pointer4 + 3) = uint_var2 & 0xffffff7d | 1;\n              }\njoined_r0x00105ca2:\n              if (((uint_var & 1) != 0) && (char_var2 = FUN_00115d70(string), char_var2 != '\\0')) {\n                *(uint *)(pointer4 + 3) = *(uint *)(pointer4 + 3) & 0xfffffffe | 2;\n              }\n            }\n            else {\n              if ((DAT_001279c8 != '\\0') || (char_var2 = FUN_00115d70(string), char_var2 != '\\0')) {\n                *(uint *)(pointer4 + 3) = *(uint *)(pointer4 + 3) & 0xff7ffffd | 0x80;\n              }\n              if (function_pointer != bfd_map_over_sections) goto LAB_00105c5f;\n            }\n            *(long **)(long_var2 + return_variable * 8) = pointer4;\n            return_variable = return_variable + 1;\n          }\n        }\n        _int_var3 = _int_var3 + 1;\n      } while (parameter2 != _int_var3);\n    }\n    if (DAT_001279a8 != (ulong *)0x0) {\n      note_entry = DAT_001279a8;\n      int_var = DAT_001279a0;\n      for (long_var3 = 0; long_var3 < int_var; long_var3 = long_var3 + 1) {\n        section_name = (char *)note_entry[5];\n        if (section_name == (char *)0x0) {\n          long_var2 = return_variable * 8;\n          return_variable = return_variable + 1;\n          ulong4 = FUN_0011a2e0(note_entry,parameter1);\n          *(ulong *)(long_var2 + long_var2) = ulong4;\n          int_var = DAT_001279a0;\n        }\n        else if (section_name != \"\") {\n          ulong4 = dcgettext(0,\"\\'before=%s\\' not found\",5);\n                    \n          FUN_00119dd0(ulong4,section_name);\n        }\n        note_entry = (ulong *)*note_entry;\n      }\n    }\n    bool_var = DAT_00127980 != '\\0';\n    *(ulong *)(long_var2 + return_variable * 8) = 0;\n    if ((bool_var) && (undefined4_ptr2 != (undefined_var4 *)0x0)) {\n      int_var = *(int *)(*(ulong **)(parameter1 + 8) + 1);\n      if ((int_var != 5) && (int_var != 2)) {\n        ulong4 = **(ulong **)(parameter1 + 8);\n        ulong_var3 = dcgettext(0,\"don\\'t know how to write debugging information for %s\",5);\n        FUN_001126c0(0,parameter1,0,ulong_var3,ulong4);\nLAB_00105d8c:\n        free(undefined4_ptr2);\n        DAT_00127a20 = 1;\n        return 0;\n      }\n      param8 = (void *)0x0;\n      char_var2 = FUN_0011378f(parameter1,undefined4_ptr2,&stack0x000000c0,\n                           &stack0x00000110,&stack0x000000e0,&stack0x00000140);\n      if (char_var2 == '\\0') goto LAB_00105d8c;\n      long_var2 = bfd_make_section_with_flags(parameter1,\".stab\",0x2108);\n      long_var3 = bfd_make_section_with_flags(parameter1,\".stabstr\",0x2108);\n      if ((((long_var2 == 0) || (long_var3 == 0)) ||\n          (char_var2 = bfd_set_section_size(long_var2,section_name), char_var2 == '\\0')) ||\n         (char_var2 = bfd_set_section_size(long_var3,section_dump_file_name), char_var2 == '\\0')) {\n        section_name = \"can\\'t create debugging section\";\nLAB_00105eb4:\n        ulong4 = dcgettext(0,section_name,5);\n        FUN_001126c0(0,parameter1,0,ulong4);\n        free(param8);\n        free(undefined4_ptr2);\n        DAT_00127a20 = 1;\n        return 0;\n      }\n      *(undefined_var4 *)(long_var2 + 0x7c) = 2;\n      *(undefined_var4 *)(long_var3 + 0x7c) = 0;\n      char_var2 = bfd_set_section_contents\n                        (parameter1,long_var2,section_contents,0,section_name);\n      if ((char_var2 == '\\0') ||\n         (char_var2 = bfd_set_section_contents\n                            (parameter1,long_var3,param8,0,section_dump_file_name),\n         char_var2 == '\\0')) {\n        section_name = \"can\\'t set debugging section contents\";\n        goto LAB_00105eb4;\n      }\n      free(undefined4_ptr2);\n    }\n    parameter2 = return_variable & 0xffffffff;\n  }\n  else {\n    if ((DAT_00127a2c - 3U < 4) || ((DAT_00127a28 != 0 || (DAT_00127938 != '\\0'))))\n    goto LAB_00105a07;\n    long_var2 = htab_elements(DAT_001279f8);\n    if (((long_var2 != 0) ||\n        (((((((long_var2 = htab_elements(DAT_00127a08), long_var2 != 0 ||\n              (long_var2 = htab_elements(DAT_001279e8), long_var2 != 0)) ||\n             (long_var2 = htab_elements(DAT_001279e0), long_var2 != 0)) ||\n            ((long_var2 = htab_elements(DAT_001279d8), long_var2 != 0 ||\n             (long_var2 = htab_elements(DAT_001279d0), long_var2 != 0)))) ||\n           (long_var2 = htab_elements(DAT_001278d0), long_var2 != 0)) ||\n          (((DAT_00127908 != (char *)0x0 || (DAT_001278b8 != '\\0')) ||\n           ((DAT_00127a19 != '\\0' ||\n            (((DAT_00127980 != '\\0' || (DAT_00127988 != '\\0')) || (DAT_00127968 != '\\0')))))))) ||\n         ((DAT_001278d8 != (char **)0x0 || (DAT_001279c8 != '\\0')))))) || (DAT_001279a0 != 0))\n    goto LAB_001059fe;\n  }\n  bfd_set_symtab(parameter1,DAT_001278a8,parameter2 & 0xffffffff);\n  bfd_map_over_sections(bfd_data,FUN_00115dc0,parameter1);\n  bfd_map_over_sections(bfd_data,FUN_00116110,parameter1);\n  for (note_entry = DAT_001279c0; pointer3 = DAT_001279b8, note_entry != (ulong *)0x0;\n      note_entry = (ulong *)*note_entry) {\n    char_var2 = bfd_set_section_contents(parameter1,note_entry[5],note_entry[4],0,note_entry[3]);\n    if (char_var2 == '\\0') {\n      FUN_001126c0(0,parameter1,note_entry[5],0);\n      return 0;\n    }\n  }\n  for (; pointer3 != (ulong *)0x0; pointer3 = (ulong *)*pointer3) {\n    ulong4 = *(ulong *)(pointer3[5] + 0x60);\n    char_var2 = bfd_set_section_contents(parameter1,ulong4,pointer3[4],0,pointer3[3]);\n    if (char_var2 == '\\0') {\n      FUN_001126c0(0,parameter1,ulong4,0);\n      return 0;\n    }\n  }\n  if (ptr == (long *)0x0) {\n    if ((DAT_00127a00 != '\\0') && (_DAT_00127a24 == 0)) {\n      ulong4 = *bfd_data;\n      ulong_var3 = dcgettext(0,\"%s: Could not find any mergeable note sections\",5);\n      FUN_00119ed0(ulong_var3,ulong4);\n    }\nLAB_0010578f:\n    if ((DAT_00127a10 == 0) ||\n       (char_var2 = bfd_fill_in_gnu_debuglink_section(parameter1,tmp_long5),\n       long_var2 = DAT_00127a10, char_var2 != '\\0')) {\n      uint_var = (**(code **)(*(long *)(parameter1 + 8) + 0x140))(bfd_data);\n      return_variable = (ulong)uint_var;\n      if ((char)uint_var != '\\0') {\n        if (DAT_00127910 == 0) {\n          return return_variable;\n        }\n        char_var2 = bfd_alt_mach_code(parameter1,DAT_00127910 & 0xffffffff);\n        ulong6 = DAT_00127910;\n        if (char_var2 != '\\0') {\n          return return_variable;\n        }\n        ulong4 = dcgettext(0,\"this target does not support %lu alternative machine codes\",5);\n        FUN_00119ed0(ulong4,ulong6);\n        if (*(int *)(*(long *)(parameter1 + 8) + 8) != 5) {\n          ulong4 = dcgettext(0,\"ignoring the alternative value\",5);\n          FUN_00119ed0(ulong4);\n          return return_variable;\n        }\n        ulong4 = dcgettext(0,\"treating that number as an absolute e_machine value instead\",5);\n        FUN_00119ed0(ulong4);\n        *(short *)(*(long *)(parameter1 + 0x110) + 0x3a) = (short)DAT_00127910;\n        return return_variable;\n      }\n      ulong4 = dcgettext(0,\"error copying private BFD data\",5);\n      FUN_001126c0(0,parameter1,0,ulong4);\n    }\n    else {\n      ulong4 = dcgettext(0,\"cannot fill debug link section `%s\\'\",5);\n      FUN_001126c0(0,parameter1,0,ulong4,long_var2);\n    }\n    return 0;\n  }\n  merged_notes_list = (long *)0x0;\n  note_entry = *(ulong **)(parameter1 + 0x90);\n  do {\n    if (note_entry == (ulong *)0x0) {\n      do {\n        merged_notes_list = (long *)ptr[3];\n        free((void *)ptr[1]);\n        free(ptr);\n        ptr = merged_notes_list;\n      } while (merged_notes_list != (long *)0x0);\n      goto LAB_0010578f;\n    }\n    if ((((DAT_00127a00 != '\\0') && (*(int *)(*(long *)(parameter1 + 8) + 8) == 5)) &&\n        (*(int *)(note_entry[0x1a] + 4) == 7)) &&\n       (char_var2 = FUN_00113fb0(*note_entry,\".gnu.build.attributes\"), char_var2 != '\\0')) {\n      if (merged_notes_list == (long *)0x0) {\n        merged_notes_list = ptr;\n      }\n      pointer4 = ptr;\n      if (*(ulong **)(*merged_notes_list + 0x60) == note_entry) {\nLAB_0010625f:\n        section_name = \"error: failed to merge notes\";\n        if (merged_notes_list[1] != 0) {\n          char_var2 = bfd_set_section_contents(parameter1,note_entry,merged_notes_list[1],0,merged_notes_list[2]);\n          if (char_var2 == '\\0') {\n            ulong4 = dcgettext(0,\"error: failed to copy merged notes into output\",5);\n            FUN_001126c0(0,parameter1,note_entry,ulong4);\n            return 0;\n          }\n          merged_notes_list = (long *)merged_notes_list[3];\n          goto LAB_001061be;\n        }\n      }\n      else {\n        do {\n          merged_notes_list = pointer4;\n          if (*(ulong **)(*pointer4 + 0x60) == note_entry) goto LAB_0010625f;\n          merged_notes_list = (long *)pointer4[3];\n          pointer4 = merged_notes_list;\n        } while (merged_notes_list != (long *)0x0);\n        section_name = \"error: failed to locate merged notes\";\n      }\n      ulong4 = dcgettext(0,section_name,5);\n      FUN_001126c0(0,parameter1,note_entry,ulong4);\n    }\nLAB_001061be:\n    note_entry = (ulong *)note_entry[1];\n  } while( true );\n}\n\n",
            "current_name": "merge_and_dump_debug_sections_0010551d",
            "entrypoint": "0x0010551d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010551d": "merge_and_dump_debug_sections_0010551d",
                "__ptr": "section_contents",
                "__ptr_0": "voidptr",
                "__ptr_00": "section_contents_0",
                "__s": "string",
                "__s_00": "note_filename",
                "_uStack0000000000000048": "int_pointer",
                "bStack0000000000000100": "byte2",
                "bStack0000000000000101": "byte3",
                "bVar2": "byte_var",
                "bVar38": "bool_var",
                "bVar39": "byte_var2",
                "cStack0000000000000148": "char_stack148",
                "cVar8": "char_var1",
                "cVar9": "char_var2",
                "iStack000000000000006c": "tmp_int4",
                "iVar11": "int_var",
                "iVar14": "int_var2",
                "iVar31": "int3",
                "in_stack_00000008": "parameter1",
                "in_stack_00000010": "parameter2",
                "in_stack_00000018": "int_var3",
                "in_stack_000000c0": "section_contents",
                "in_stack_000000c8": "section_size",
                "in_stack_000000d0": "stab_array_size",
                "in_stack_000000d8": "param7",
                "in_stack_000000e0": "param8",
                "in_stack_000000f0": "param9",
                "in_stack_000000f8": "param10",
                "in_stack_00000110": "section_name",
                "in_stack_00000118": "file_extension",
                "in_stack_00000140": "section_dump_file_name",
                "in_stack_00000150": "current_section_name",
                "lStack0000000000000078": "tmp_long5",
                "lStack0000000000000088": "tmp_long6",
                "lVar15": "current_pointer",
                "lVar21": "long_var2",
                "lVar25": "long_var2",
                "lVar27": "long_var3",
                "pcStack0000000000000038": "temp_char_pointer_var2",
                "pcStack0000000000000090": "tmp_c_str4",
                "pcVar19": "section_contents",
                "pcVar28": "string",
                "pcVar33": "section_name",
                "pcVar4": "function_pointer",
                "piVar23": "ptr",
                "plVar15": "pointer4",
                "plVar32": "merged_notes_list",
                "ppcVar35": "temp_char_var",
                "ppuVar37": "ptr_ptr_ptr_array",
                "puStack0000000000000020": "undefined4_ptr2",
                "puVar1": "pointer1",
                "puVar29": "note_entry",
                "puVar3": "pointer2",
                "puVar34": "ptr4",
                "puVar37": "ptr37",
                "puVar5": "pointer3",
                "pvVar36": "void_ptr",
                "sVar18": "size_var",
                "sVar26": "size_var2",
                "uStack0000000000000048": "tmp_var13",
                "uVar10": "uint_var",
                "uVar12": "uint_var2",
                "uVar13": "uint3",
                "uVar16": "ulong_var3",
                "uVar17": "ulong4",
                "uVar20": "ulong6",
                "uVar22": "ulong6",
                "uVar24": "return_variable",
                "uVar30": "ulong8",
                "uVar6": "ulong_var1",
                "uVar7": "ulong2",
                "unaff_R13": "ptr",
                "unaff_R14": "bfd_data",
                "unaff_RBP": "unreachable_block_pointer",
                "unaff_RBX": "ptr",
                "undefined": "undefined_var",
                "undefined8": "ulong"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010554f": {
            "additional_data": {
                "0x10": {
                    "flag_value": 1
                },
                "10252580": {
                    "array": 1
                },
                "10252664": {
                    "array_counter": 1
                },
                "10254004": {
                    "leave_loop_flag": 1
                },
                "10254352": {
                    "section_alignment_factor": 1
                },
                "10254364": {
                    "section_info_flag": 1
                },
                "10254761": {
                    "debugging_size_based_flag": 1
                },
                "10255144": {
                    "section_flags_mask": 1
                },
                "10255812": {
                    "size_alignment_dividend": 1
                },
                "10256024": {
                    "section_loop_counter": 1
                },
                "10256112": {
                    "ssize_flag": 1
                },
                "10300393": {
                    "size_alignment_divisor": 1
                },
                "10303580": {
                    "size_alignment_factor": 1
                },
                "10329341": {
                    "debugging_type_based_flag": 1
                },
                "1048576": {
                    "section_alignment_dividend": 1
                },
                "15509871": {
                    "section_alignment_divisor": 1
                },
                "DAT_00125c00": {
                    "stab_sections_ptr2": 1
                },
                "DAT_00125c60": {
                    "stab_values": 1
                },
                "DAT_00125c90": {
                    "hashtable2": 1
                },
                "DAT_00126880": {
                    "hashtable3": 1
                },
                "DAT_00126980": {
                    "stab_sections_ptr": 1
                },
                "DAT_001269a0": {
                    "hashtable4": 1
                },
                "DAT_00126eb0": {
                    "stab_name_ptr": 1
                },
                "DAT_00127140": {
                    "function_pointer": 1
                },
                "DAT_00127870": {
                    "stabfunctions": 1
                },
                "DAT_00127888": {
                    "stab_sections2": 1
                },
                "DAT_00127890": {
                    "stab_values2": 1
                },
                "DAT_001278a0": {
                    "stab_info2": 1
                },
                "DAT_001278a8": {
                    "output_sections": 1,
                    "symbol_table_buffer": 1,
                    "symtab_pointer": 1
                },
                "DAT_001278b0": {
                    "section_address": 1,
                    "section_pointers": 1,
                    "sections_array": 1
                },
                "DAT_001278b8": {
                    "flag_merge_note_sections": 1,
                    "is_section_name_copy_set": 1
                },
                "DAT_001278d0": {
                    "hashtable1": 1,
                    "htab_for_stripped_debug_strings": 1,
                    "symbol_name_hash_table": 1
                },
                "DAT_001278d8": {
                    "list_for_stripped_debug_stabs": 1,
                    "symbol_name_alias_table": 1
                },
                "DAT_00127908": {
                    "alternate_machine_codes_string": 1,
                    "before_string": 1,
                    "output_file": 1,
                    "stab_unknown": 1,
                    "stabstr_section_name": 1,
                    "target_object_format": 1
                },
                "DAT_00127910": {
                    "alternative_machine_code": 3,
                    "merge_section_vma": 1
                },
                "DAT_00127918": {
                    "is_sht_note_merged": 1
                },
                "DAT_00127920": {
                    "debugging_flag": 1,
                    "linked_sections": 1
                },
                "DAT_00127929": {
                    "linked_sections_atoms": 1
                },
                "DAT_00127930": {
                    "num_linked_sections_atoms": 1
                },
                "DAT_00127938": {
                    "flag_excluded_section": 1,
                    "is_lo_level": 1,
                    "is_lto_compiled": 1,
                    "is_lto_complied_object_file": 1
                },
                "DAT_00127939": {
                    "flag_debugging_info_section_added": 1,
                    "is_dynamic_reloc": 1,
                    "is_section_attr_set": 1
                },
                "DAT_00127968": {
                    "flag_padding_added": 1,
                    "is_legacy_sysv": 1,
                    "should_redefine_symbols": 1
                },
                "DAT_00127969": {
                    "debugging_size_flag": 1,
                    "flag_not_settling_type_propagation": 1,
                    "has_additional_info": 1,
                    "is_padding_added": 1,
                    "is_padding_enabled": 1,
                    "propagation_algorithm_not_settled_2": 1,
                    "set_size_flag": 1,
                    "type_propagation_flag2": 1,
                    "type_propagation_not_settling_flag": 1
                },
                "DAT_00127970": {
                    "alignment": 1,
                    "debug_padding_value": 1,
                    "octets_per_byte": 1,
                    "padding_octets_per_byte": 1,
                    "section_alignment": 1
                },
                "DAT_00127978": {
                    "debugging_type_flag": 1,
                    "flag_not_settling_type_propagation_algorithm": 1,
                    "has_type_propagation": 1,
                    "is_compilation_object_file": 1,
                    "is_func_ptr_data_stored": 1,
                    "propagation_algorithm_not_settled_1": 1,
                    "type_propagation_flag": 1,
                    "type_propagation_flag1": 1,
                    "type_propagation_not_settling_flag": 1
                },
                "DAT_00127979": {
                    "alignment_fill_byte": 1,
                    "default_null_buffer_value": 1
                },
                "DAT_00127980": {
                    "flag_strip_symbols": 1,
                    "is_merging_notes": 1,
                    "is_private_bfd_data": 1,
                    "strip_sections": 1,
                    "symtab_flag": 1
                },
                "DAT_00127988": {
                    "flag_strip_alternate_machine_codes": 1,
                    "is_arch_flag_set": 1,
                    "is_debugging_notes": 1,
                    "preserve_symbols": 1
                },
                "DAT_00127998": {
                    "flag_strip_special_sections": 1
                },
                "DAT_001279a0": {
                    "auxillary_entry_count": 1,
                    "num_alternative_machine_codes": 1,
                    "num_func_ptrs": 1
                },
                "DAT_001279a8": {
                    "list_for_alternative_machine_codes": 1
                },
                "DAT_001279c8": {
                    "flag_setting_attributes": 1
                },
                "DAT_001279ca": {
                    "debugging_gnu_attribute": 1,
                    "flag": 1,
                    "flag_write_attributes": 1,
                    "is_preserve_symbols": 1
                },
                "DAT_001279d8": {
                    "list_for_stripped_debug_strings": 1
                },
                "DAT_001279e0": {
                    "index_hash_table": 1,
                    "list_for_debug_strings": 1
                },
                "DAT_001279e8": {
                    "list_for_debugging_sections": 1,
                    "stride_hash_table": 1
                },
                "DAT_001279f0": {
                    "htab_for_debugging_sections": 1
                },
                "DAT_001279f8": {
                    "alt_machine_code_hash_table": 1,
                    "htab_for_attributes": 1
                },
                "DAT_00127a08": {
                    "gnu_debug_link_hash_table": 1,
                    "htab_for_strip_symbols": 1
                },
                "DAT_00127a10": {
                    "debug_link": 1,
                    "debug_link_section_size": 1,
                    "link_debug_link_section": 1
                },
                "DAT_00127a18": {
                    "flag_fill_debug_link_section": 1
                },
                "DAT_00127a19": {
                    "flag_setting_section_attributes": 1,
                    "is_generated_output": 1,
                    "should_ignore_gnu_attribute": 1
                },
                "DAT_00127a20": {
                    "error_flag": 4,
                    "error_occurred": 1
                },
                "DAT_00127a24": {
                    "is_debugging_section_created": 1
                },
                "DAT_00127a28": {
                    "debug_note_level": 1,
                    "flag_mark_as_used": 1,
                    "is_gnu_debugdata": 1,
                    "is_verbose": 1
                },
                "DAT_00127a2c": {
                    "debug_info_level": 1,
                    "debugging_info_level": 1,
                    "debugging_level": 2,
                    "flag_value": 1
                },
                "DCgettext_0": {
                    "message_format": 1
                },
                "DUMMY": {
                    "placeholder": 1
                },
                "Dcgettext_0": {
                    "error_message_0": 1
                },
                "Dcgettext_5": {
                    "error_message_5": 1
                },
                "FUN_0010554f": {
                    "improve_decompiled_code": 1,
                    "process_debug_info": 1
                },
                "FUN_0010870e": {
                    "process_section": 2,
                    "process_section_function": 1
                },
                "FUN_0010875d": {
                    "compare_section": 1,
                    "compare_section_pointers": 1,
                    "compare_section_sizes": 1,
                    "compare_sections": 1,
                    "comparison_function": 1,
                    "section_sort_cmp": 1
                },
                "FUN_00108863": {
                    "cleanup_memory": 1,
                    "free_memory": 1,
                    "free_resources": 1
                },
                "FUN_001088ae": {
                    "check_section_gap": 1,
                    "fill_gap_between_sections": 1,
                    "handle_stab_error": 1,
                    "print_error_message": 1,
                    "process_stab_entry": 1
                },
                "FUN_00108b3e": {
                    "cleanup_and_exit": 1,
                    "copy_relocation_entries": 1,
                    "create_debugging_sections": 1
                },
                "FUN_0010958e": {
                    "fill_gap_after_section": 1
                },
                "FUN_0010bbd3": {
                    "check_debugging_information": 1
                },
                "FUN_0010bc80": {
                    "merge_debug_sections": 1
                },
                "FUN_0010be1a": {
                    "check_section_name_stab_entry": 1
                },
                "FUN_0010be88": {
                    "check_section_name_build_attributes": 1
                },
                "FUN_0010bf20": {
                    "check_section_name_build_functions": 1
                },
                "FUN_0010bf86": {
                    "check_debugging_entry": 1
                },
                "FUN_0010c892": {
                    "has_error": 1,
                    "write_debug_link_section": 1
                },
                "FUN_0011173a": {
                    "check_corrupted_data": 1,
                    "check_debug_table": 1,
                    "create_debugging_info": 1,
                    "is_valid_stab_entry": 1,
                    "process_stab_entry": 1
                },
                "FUN_001126c0": {
                    "print_error": 2,
                    "print_error_message": 1
                },
                "FUN_00112894": {
                    "generate_stab_entry": 1,
                    "get_function_name": 1,
                    "get_mergeable_stab_entry": 1,
                    "get_stub_entry": 1,
                    "process_debug_info": 1,
                    "process_stab_entries": 1
                },
                "FUN_00112a33": {
                    "process_aux_entries": 1,
                    "update_stab_entry": 1
                },
                "FUN_0011378f": {
                    "merge_notes_sections": 1
                },
                "FUN_001152ed": {
                    "check_merging_notes": 1
                },
                "FUN_001159d0": {
                    "is_debug_symbol": 1,
                    "is_mergeable_note": 1,
                    "is_mergeable_section": 1,
                    "is_merged_symbol": 1,
                    "is_special_section": 1
                },
                "FUN_00115d70": {
                    "is_keep_function": 1,
                    "is_mergeable_symbol": 1,
                    "is_merging_needed": 1,
                    "is_symbol_okay": 1
                },
                "FUN_00115dc0": {
                    "merge_debug_info": 1,
                    "process_section": 1,
                    "process_sections": 2,
                    "process_symbols": 1
                },
                "FUN_00116030": {
                    "merge_sections": 1,
                    "modify_symbol_section": 1,
                    "process_section2": 1
                },
                "FUN_00116110": {
                    "copy_debug_info": 1,
                    "fill_in_debug_sections": 1,
                    "fill_in_section_contents": 1,
                    "place_symtabs_in_sections": 1,
                    "process_section3": 1,
                    "process_symbol_sections": 1
                },
                "FUN_00119dd0": {
                    "print_error": 2,
                    "print_message": 1
                },
                "FUN_00119ed0": {
                    "print_error_message": 1,
                    "print_generic_error_message": 1
                },
                "IDA2_00127530": {
                    "ida2_00127530": 1
                },
                "IDA3_001275c0": {
                    "ida3_001275c0": 1
                },
                "IDE2_001275d0": {
                    "ide2_001275d0": 1
                },
                "PTR_s__gnucore_001279c0": {
                    "guncore_pointer": 1
                },
                "PTR_s__stab_00125c60": {
                    "stab_name": 1,
                    "stab_pointer": 1
                },
                "PTR_s__stabstr_00125ce0": {
                    "stabstr_pointer": 1
                },
                "STACK_SPACE": {
                    "stack_size_to_allocate": 1
                },
                "VAR_00105a3b_2_8": {
                    "current_section_name": 1
                },
                "VAR_10": {
                    "var_10": 1
                },
                "VAR_100": {
                    "var_100": 1
                },
                "VAR_104": {
                    "var_104": 1
                },
                "VAR_108": {
                    "var_108": 1
                },
                "VAR_10C": {
                    "var_10_c": 1
                },
                "VAR_110": {
                    "var_110": 1
                },
                "VAR_114": {
                    "var_114": 1
                },
                "VAR_118": {
                    "var_118": 1
                },
                "VAR_11C": {
                    "var_11_c": 1
                },
                "VAR_120": {
                    "var_120": 1
                },
                "VAR_124": {
                    "var_124": 1
                },
                "VAR_128": {
                    "var_128": 1
                },
                "VAR_12C": {
                    "var_12_c": 1
                },
                "VAR_130": {
                    "var_130": 1
                },
                "VAR_134": {
                    "var_134": 1
                },
                "VAR_138": {
                    "var_138": 1
                },
                "VAR_13C": {
                    "var_13_c": 1
                },
                "VAR_14": {
                    "var_14": 1
                },
                "VAR_140": {
                    "var_140": 1
                },
                "VAR_144": {
                    "var_144": 1
                },
                "VAR_148": {
                    "var_148": 1
                },
                "VAR_14C": {
                    "var_14_c": 1
                },
                "VAR_150": {
                    "var_150": 1
                },
                "VAR_154": {
                    "var_154": 1
                },
                "VAR_158": {
                    "var_158": 1
                },
                "VAR_15C": {
                    "var_15_c": 1
                },
                "VAR_160": {
                    "var_160": 1
                },
                "VAR_164": {
                    "var_164": 1
                },
                "VAR_168": {
                    "var_168": 1
                },
                "VAR_16C": {
                    "var_16_c": 1
                },
                "VAR_170": {
                    "var_170": 1
                },
                "VAR_174": {
                    "var_174": 1
                },
                "VAR_178": {
                    "var_178": 1
                },
                "VAR_17C": {
                    "var_17_c": 1
                },
                "VAR_18": {
                    "var_18": 1
                },
                "VAR_180": {
                    "var_180": 1
                },
                "VAR_184": {
                    "var_184": 1
                },
                "VAR_188": {
                    "var_188": 1
                },
                "VAR_18C": {
                    "var_18_c": 1
                },
                "VAR_190": {
                    "var_190": 1
                },
                "VAR_194": {
                    "var_194": 1
                },
                "VAR_198": {
                    "var_198": 1
                },
                "VAR_19C": {
                    "var_19_c": 1
                },
                "VAR_1A0": {
                    "var_1_a0": 1
                },
                "VAR_1A4": {
                    "var_1_a4": 1
                },
                "VAR_1A8": {
                    "var_1_a8": 1
                },
                "VAR_1AC": {
                    "var_1_ac": 1
                },
                "VAR_1B0": {
                    "var_1_b0": 1
                },
                "VAR_1B4": {
                    "var_1_b4": 1
                },
                "VAR_1B8": {
                    "var_1_b8": 1
                },
                "VAR_1BC": {
                    "var_1_bc": 1
                },
                "VAR_1C0": {
                    "var_1_c0": 1
                },
                "VAR_1C4": {
                    "var_1_c4": 1
                },
                "VAR_1C8": {
                    "var_1_c8": 1
                },
                "VAR_1CC": {
                    "var_1_cc": 1
                },
                "VAR_1D0": {
                    "var_1_d0": 1
                },
                "VAR_1D4": {
                    "var_1_d4": 1
                },
                "VAR_1D8": {
                    "var_1_d8": 1
                },
                "VAR_1DC": {
                    "var_1_dc": 1
                },
                "VAR_1E0": {
                    "var_1_e0": 1
                },
                "VAR_1E4": {
                    "var_1_e4": 1
                },
                "VAR_1E8": {
                    "var_1_e8": 1
                },
                "VAR_1EC": {
                    "var_1_ec": 1
                },
                "VAR_1F0": {
                    "var_1_f0": 1
                },
                "VAR_1F4": {
                    "var_1_f4": 1
                },
                "VAR_1F8": {
                    "var_1_f8": 1
                },
                "VAR_1FC": {
                    "var_1_fc": 1
                },
                "VAR_20": {
                    "var_20": 1
                },
                "VAR_200": {
                    "var_200": 1
                },
                "VAR_204": {
                    "var_204": 1
                },
                "VAR_208": {
                    "var_208": 1
                },
                "VAR_20C": {
                    "var_20_c": 1
                },
                "VAR_210": {
                    "var_210": 1
                },
                "VAR_214": {
                    "var_214": 1
                },
                "VAR_28": {
                    "var_28": 1
                },
                "VAR_30": {
                    "var_30": 1
                },
                "VAR_38": {
                    "var_38": 1
                },
                "VAR_4": {
                    "var_4": 1
                },
                "VAR_40": {
                    "var_40": 1
                },
                "VAR_44": {
                    "var_44": 1
                },
                "VAR_48": {
                    "var_48": 1
                },
                "VAR_4C": {
                    "var_4_c": 1
                },
                "VAR_50": {
                    "var_50": 1
                },
                "VAR_54": {
                    "var_54": 1
                },
                "VAR_58": {
                    "var_58": 1
                },
                "VAR_5C": {
                    "var_5_c": 1
                },
                "VAR_60": {
                    "var_60": 1
                },
                "VAR_64": {
                    "var_64": 1
                },
                "VAR_68": {
                    "var_68": 1
                },
                "VAR_6C": {
                    "var_6_c": 1
                },
                "VAR_70": {
                    "var_70": 1
                },
                "VAR_74": {
                    "var_74": 1
                },
                "VAR_78": {
                    "var_78": 1
                },
                "VAR_7C": {
                    "var_7_c": 1
                },
                "VAR_8": {
                    "var_8": 1
                },
                "VAR_80": {
                    "var_80": 1
                },
                "VAR_84": {
                    "var_84": 1
                },
                "VAR_88": {
                    "var_88": 1
                },
                "VAR_8C": {
                    "var_8_c": 1
                },
                "VAR_90": {
                    "var_90": 1
                },
                "VAR_94": {
                    "var_94": 1
                },
                "VAR_98": {
                    "var_98": 1
                },
                "VAR_9C": {
                    "var_9_c": 1
                },
                "VAR_A0": {
                    "var_a0": 1
                },
                "VAR_A4": {
                    "var_a4": 1
                },
                "VAR_A8": {
                    "var_a8": 1
                },
                "VAR_AC": {
                    "var_ac": 1
                },
                "VAR_B0": {
                    "var_b0": 1
                },
                "VAR_B4": {
                    "var_b4": 1
                },
                "VAR_B8": {
                    "var_b8": 1
                },
                "VAR_BC": {
                    "var_bc": 1
                },
                "VAR_C0": {
                    "var_c0": 1
                },
                "VAR_C4": {
                    "var_c4": 1
                },
                "VAR_C8": {
                    "var_c8": 1
                },
                "VAR_CC": {
                    "var_cc": 1
                },
                "VAR_D0": {
                    "var_d0": 1
                },
                "VAR_D4": {
                    "var_d4": 1
                },
                "VAR_D8": {
                    "var_d8": 1
                },
                "VAR_DC": {
                    "var_dc": 1
                },
                "VAR_E0": {
                    "var_e0": 1
                },
                "VAR_E4": {
                    "var_e4": 1
                },
                "VAR_E8": {
                    "var_e8": 1
                },
                "VAR_EC": {
                    "var_ec": 1
                },
                "VAR_F0": {
                    "var_f0": 1
                },
                "VAR_F4": {
                    "var_f4": 1
                },
                "VAR_F8": {
                    "var_f8": 1
                },
                "VAR_FC": {
                    "var_fc": 1
                },
                "YCarg2": {
                    "undefined_var4": 1
                },
                "___ptr_00": {
                    "temp_alloc_1": 1
                },
                "___ptr_01": {
                    "temp_alloc_3": 1
                },
                "___ptr_02": {
                    "temp_alloc_2": 1
                },
                "__dest": {
                    "allocated_memory": 1,
                    "content": 1,
                    "section_content": 1
                },
                "__ptr": {
                    "debug_section_array": 1,
                    "fill_buffer": 1,
                    "filler": 1,
                    "filler_section_data": 1,
                    "memory_allocation": 1,
                    "ptr": 1,
                    "temp_pointer": 1,
                    "undefined_ptr": 1,
                    "zero_filled_memory": 1,
                    "zeroed_content": 1
                },
                "__ptr_00": {
                    "allocated_memory2": 1,
                    "temp_pointer": 1,
                    "void_ptr1": 1
                },
                "__ptr_01": {
                    "stabstr_array": 1,
                    "temp_pointer": 1,
                    "void_ptr2": 1,
                    "zero_filled_memory2": 1
                },
                "__ptr_02": {
                    "debug_table": 1,
                    "section_info": 1,
                    "stab_array": 1,
                    "stab_data": 1,
                    "stab_info": 1,
                    "stab_section_data": 1,
                    "stab_sections": 1,
                    "stab_sections_metadata": 1,
                    "stab_table": 1,
                    "symbol_table": 3
                },
                "__s": {
                    "char_var3": 1,
                    "string_ptr": 1
                },
                "_param_15": {
                    "stab_data_format": 1,
                    "symbol_table": 1
                },
                "_param_39": {
                    "stab_data_length": 1
                },
                "_param_41": {
                    "found": 1,
                    "is_relocated": 1
                },
                "_param_44": {
                    "stab_data_type": 1
                },
                "_param_9": {
                    "count": 1,
                    "section_index": 1
                },
                "_stderr": {
                    "error_stream": 1
                },
                "_stdout": {
                    "output_stream": 1
                },
                "allocate_and_initialize": {
                    "allocate_and_initialize": 1
                },
                "allocate_memory": {
                    "allocate_memory": 1
                },
                "allocate_stab_entry": {
                    "allocate_stab_entry": 1
                },
                "allocate_stub_entry": {
                    "allocate_stub_entry": 1
                },
                "bVar2": {
                    "aux_info_type": 1,
                    "b_var2": 1,
                    "boolean_flag": 1,
                    "byte_flag": 1,
                    "byte_value": 2,
                    "byte_var_2": 1,
                    "byte_variable": 1,
                    "temp_byte": 1
                },
                "bVar21": {
                    "section_exists": 1
                },
                "bVar22": {
                    "is_relocatable": 1
                },
                "bVar23": {
                    "has_merged_notes": 1
                },
                "bVar24": {
                    "is_strict": 1
                },
                "bVar25": {
                    "omit_from_executable": 1
                },
                "bVar26": {
                    "is_executable": 1
                },
                "bVar27": {
                    "is_writeable": 1
                },
                "bVar28": {
                    "is_allocatable": 1
                },
                "bVar29": {
                    "is_readable": 1
                },
                "bVar30": {
                    "is_initialized": 1
                },
                "bVar31": {
                    "is_mergeable": 1
                },
                "bVar32": {
                    "is_note": 1
                },
                "bVar33": {
                    "is_duplicate": 1
                },
                "bVar34": {
                    "has_contents": 1
                },
                "bVar35": {
                    "has_debugging_info": 1
                },
                "bVar36": {
                    "endianess": 1
                },
                "bVar38": {
                    "bool_value": 1,
                    "boolean_flag": 1,
                    "boolean_var_38": 1,
                    "byte_variable3": 1,
                    "flag": 1,
                    "has_debug_information": 1,
                    "has_debugging_info": 1,
                    "is_function_redefine": 1,
                    "is_null": 1,
                    "is_padding_added": 1
                },
                "bVar39": {
                    "boolean_flag": 1,
                    "byte_value": 1,
                    "byte_variable2": 1,
                    "flag": 1,
                    "is_null": 1
                },
                "bfd_alt_mach_code": {
                    "bfd_alt_mach_code": 1
                },
                "bfd_coff_get_auxent": {
                    "bfd_coff_get_aux_entry": 1,
                    "get_coff_auxent": 1
                },
                "bfd_coff_get_syment": {
                    "bfd_coff_get_sym_entry": 1,
                    "get_coff_syment": 1
                },
                "bfd_errmsg": {
                    "bfd_error_message": 1
                },
                "bfd_handler": {
                    "bfd_handler": 1
                },
                "bfd_make_section_with_flags": {
                    "bfd_create_section": 1
                },
                "bfd_octets_per_byte": {
                    "bfd_octets_per_byte": 1
                },
                "binary_file": {
                    "binary_file": 1
                },
                "byte_value": {
                    "byte_value": 1
                },
                "cVar15": {
                    "success": 1
                },
                "cVar16": {
                    "debugging": 1
                },
                "cVar17": {
                    "has_debugging_info": 1
                },
                "cVar18": {
                    "is_function": 1
                },
                "cVar19": {
                    "is_local": 1
                },
                "cVar20": {
                    "is_debuggable": 1
                },
                "cVar50": {
                    "c_var50": 1
                },
                "cVar7": {
                    "c_var7": 1,
                    "char_value": 1,
                    "char_var": 1,
                    "char_variable": 1,
                    "condition": 1,
                    "error_status": 1,
                    "flag": 1,
                    "is_error": 1,
                    "status": 1,
                    "temp_char": 1,
                    "temp_flag": 1
                },
                "cVar8": {
                    "c_var8": 1,
                    "char_value2": 1,
                    "char_var2": 1,
                    "char_variable2": 1,
                    "cond": 1,
                    "flag": 1,
                    "status2": 1
                },
                "c_isra_49": {
                    "char_var4": 1
                },
                "calloc": {
                    "allocate_and_initialize": 1
                },
                "cdecl_uint_func": {
                    "fun_0010870e": 1
                },
                "compare_section_sizes": {
                    "compare_section_sizes": 1
                },
                "compare_sections": {
                    "compare_sections": 1
                },
                "compare_strings": {
                    "compare_strings": 1
                },
                "concat": {
                    "concatenate_strings": 1
                },
                "concatenate_strings": {
                    "concatenate_strings": 1
                },
                "copy_string": {
                    "copy_string": 1
                },
                "counter": {
                    "counter": 1
                },
                "dangling_pointer": {
                    "param_9": 1
                },
                "dcgettext": {
                    "get_translation": 1
                },
                "deallocate_memory": {
                    "deallocate_memory": 1
                },
                "debugging_level": {
                    "debugging_level": 1
                },
                "error_occurred": {
                    "error_occurred": 1
                },
                "fill_in_debug_link_section": {
                    "fill_in_debug_link_section": 1
                },
                "fprintf": {
                    "print_formatted": 1
                },
                "free": {
                    "deallocate_memory": 2
                },
                "fun_0010bab7": {
                    "redefining_symbol_error_handler": 1
                },
                "fun_ptr1": {
                    "section_callback_function": 1
                },
                "funct1": {
                    "get_octets_per_byte": 1
                },
                "funct10": {
                    "get_alt_mach_code": 1
                },
                "funct11": {
                    "process_file": 1
                },
                "funct12": {
                    "decode_symclass": 1
                },
                "funct13": {
                    "fill_in_gnu_debuglink_section": 1
                },
                "funct14": {
                    "get_bfd_handle": 1
                },
                "funct2": {
                    "get_section_by_name": 1
                },
                "funct3": {
                    "get_section_contents": 1
                },
                "funct4": {
                    "set_section_size": 1
                },
                "funct5": {
                    "map_over_sections": 1
                },
                "funct6": {
                    "get_error_message": 1
                },
                "funct7": {
                    "get_symtab": 1
                },
                "funct8": {
                    "set_symtab": 1
                },
                "funct9": {
                    "process_gnu_debuglink": 1
                },
                "function_pointer": {
                    "function_pointer": 1
                },
                "gap_data": {
                    "gap_data": 1
                },
                "gap_ptr": {
                    "gap_ptr": 1
                },
                "gap_size": {
                    "gap_size": 1
                },
                "gap_sizes": {
                    "gap_sizes": 1
                },
                "get_stub_entry": {
                    "get_stub_entry": 1
                },
                "has_additional_info": {
                    "has_additional_info": 1
                },
                "has_error": {
                    "has_error": 1
                },
                "has_type_propagation": {
                    "has_type_propagation": 1
                },
                "hf_bfd_coff_edge_copy": {
                    "hf_bfd_coff_edge_copy": 1
                },
                "hf_bfd_coff_edge_entry": {
                    "hf_bfd_coff_edge_entry": 1
                },
                "hf_bfd_coff_get_auxent": {
                    "hf_bfd_coff_get_aux_entry": 1
                },
                "hf_bfd_coff_get_sec_size": {
                    "hf_bfd_coff_get_section_size": 1
                },
                "hf_bfd_coff_get_syment": {
                    "hf_bfd_coff_get_sym_entry": 1
                },
                "htab_elements": {
                    "htab_elements": 1
                },
                "htab_find": {
                    "htab_find": 1
                },
                "htab_traverse": {
                    "htab_traverse": 1
                },
                "iVar10": {
                    "comparison_index": 1,
                    "comparison_result": 1,
                    "error_code": 3,
                    "i_var10": 2,
                    "index": 1,
                    "int_var": 1,
                    "integer_var_10": 1,
                    "iteration_index": 1,
                    "iterator": 1,
                    "num_elements": 1,
                    "status3": 1
                },
                "iVar11": {
                    "another_integer_var_11": 1,
                    "cmp_result": 1,
                    "comparison_result": 2,
                    "i_var11": 2,
                    "int_var2": 1,
                    "status4": 1,
                    "strcmp_result": 1
                },
                "iVar12": {
                    "section_alignment": 1
                },
                "iVar13": {
                    "content_size": 1
                },
                "iVar14": {
                    "symbol_class": 1
                },
                "iVar27": {
                    "aux_info_offset": 1,
                    "iteration_status": 1
                },
                "iVar37": {
                    "for_loop_variable": 1
                },
                "iVar9": {
                    "size_of_sections": 1
                },
                "iVar_n": {
                    "i_var_n": 1
                },
                "in_R10": {
                    "list_of_pointers": 1,
                    "merged_note_sections_list": 1,
                    "merged_notes": 2,
                    "note_section_struct": 1,
                    "notes_data_list": 1
                },
                "in_stack_00000068": {
                    "number_of_sections": 1,
                    "param_1": 1,
                    "param_36": 1,
                    "param_8": 1,
                    "param_buffer": 1,
                    "param_count": 1,
                    "param_length": 1,
                    "section_count": 1,
                    "section_iterator": 1,
                    "size_struct": 1,
                    "struct_param": 1,
                    "unaffordable_r14": 1
                },
                "in_stack_000000d8": {
                    "counter": 1,
                    "in_memory_offset": 1,
                    "symbol_data": 1,
                    "temp_struct": 1
                },
                "in_stack_000000f8": {
                    "extra_offset_value": 1,
                    "message": 1,
                    "note_data": 1,
                    "param_37": 1,
                    "temp_struct_2": 1
                },
                "index": {
                    "index": 1
                },
                "is_gnu_debugdata": {
                    "is_gnu_debugdata": 1
                },
                "is_lto_compiled": {
                    "is_lto_compiled": 1
                },
                "is_null": {
                    "is_null": 1
                },
                "lVar12": {
                    "l_var14": 1
                },
                "lVar13": {
                    "l_var15": 1
                },
                "lVar14": {
                    "count": 1,
                    "index": 3,
                    "l_var14": 2,
                    "long_value": 1,
                    "long_var": 1,
                    "loop_counter": 1,
                    "section_index": 3,
                    "section_size": 3,
                    "size": 1,
                    "stab_index": 1
                },
                "lVar15": {
                    "current_element": 1,
                    "l_var15": 1,
                    "section_header": 1
                },
                "lVar16": {
                    "param_offset": 1
                },
                "lVar23": {
                    "content_size": 1,
                    "filler_index": 1,
                    "l_var23": 1,
                    "length_23": 1,
                    "length_var_23": 1,
                    "long_value2": 1,
                    "long_var2": 1,
                    "size": 1,
                    "string_length": 1,
                    "temp_long_val": 1
                },
                "lVar230": {
                    "merged_string": 1
                },
                "lVar37": {
                    "another_length_var_37": 1,
                    "auxent_offset": 1,
                    "counter": 1,
                    "elements_size": 1,
                    "iter_index": 1,
                    "l_var23": 1,
                    "l_var37": 1,
                    "length_37": 1,
                    "long_pointer": 1,
                    "loop_variable": 1,
                    "result_long_val": 1,
                    "stab_string_length": 1,
                    "table_index": 1,
                    "temp_variable": 1
                },
                "lVar38": {
                    "l_var38": 1
                },
                "lVar39": {
                    "l_var39": 1
                },
                "lVar40": {
                    "l_var40": 1
                },
                "lVar41": {
                    "l_var41": 1
                },
                "lVar42": {
                    "l_var42": 1
                },
                "lVar43": {
                    "l_var43": 1
                },
                "lVar44": {
                    "l_var44": 1
                },
                "lVar45": {
                    "l_var45": 1
                },
                "lVar46": {
                    "l_var46": 1
                },
                "lVar47": {
                    "l_var47": 1
                },
                "lVar48": {
                    "l_var48": 1
                },
                "lVar49": {
                    "l_var49": 1
                },
                "lVar50": {
                    "l_var50": 1
                },
                "lVar51": {
                    "l_var51": 1
                },
                "lVar52": {
                    "l_var52": 1
                },
                "lVar53": {
                    "l_var53": 1
                },
                "lVar54": {
                    "l_var54": 1
                },
                "lVar55": {
                    "l_var55": 1
                },
                "lVar56": {
                    "l_var56": 1
                },
                "lVar57": {
                    "l_var57": 1
                },
                "lVar58": {
                    "l_var58": 1
                },
                "lVar59": {
                    "l_var59": 1
                },
                "lVar60": {
                    "l_var60": 1
                },
                "lVar_n": {
                    "l_var_n": 1
                },
                "ld_publish_backend_check": {
                    "check_publish_backend": 1
                },
                "main": {
                    "improved_code_analysis": 1
                },
                "max_gap_size": {
                    "max_gap_size": 1
                },
                "message": {
                    "message": 1
                },
                "message_format": {
                    "message_format": 1
                },
                "number_of_sections": {
                    "number_of_sections": 1
                },
                "param_1": {
                    "binary": 1,
                    "binary_file": 1,
                    "input_param": 1,
                    "param1": 1,
                    "param_1": 1,
                    "param_7": 2,
                    "parameter_1": 1,
                    "undefined_value1": 1
                },
                "param_10": {
                    "opcode": 1,
                    "param_23": 1,
                    "undefined_value7": 1
                },
                "param_11": {
                    "param_24": 1,
                    "undefined_value8": 1
                },
                "param_12": {
                    "gap": 1,
                    "gap_size": 4,
                    "max_gap": 1,
                    "max_gap_size": 1,
                    "max_section_size": 2,
                    "max_size": 1,
                    "max_size_abbrv": 1,
                    "padding_size": 2,
                    "param_26": 1,
                    "param_size": 1
                },
                "param_13": {
                    "current_stab_entry": 1,
                    "gap_section": 1,
                    "param_30": 1,
                    "stab_entry": 1,
                    "stab_string": 1,
                    "stabstr_section_contents": 1
                },
                "param_14": {
                    "gap_buffer": 4,
                    "gap_data": 1,
                    "gap_sections": 1,
                    "gap_size": 1,
                    "padding": 2,
                    "param_31": 1,
                    "section_contents": 2,
                    "section_data": 2,
                    "section_data_buffer": 1,
                    "section_gap_list": 1,
                    "section_gap_sizes": 1,
                    "section_sizes": 2
                },
                "param_15": {
                    "alternative_machine_code": 1,
                    "flag2": 1,
                    "is_strip": 1,
                    "param_32": 1,
                    "symbol_table_flag": 1
                },
                "param_16": {
                    "param_33": 1,
                    "undefined_value9": 1
                },
                "param_17": {
                    "param_39": 1,
                    "section_addresses": 2,
                    "section_array": 1,
                    "section_gap_offsets": 1,
                    "section_list": 1,
                    "section_offset_array": 1,
                    "section_offsets": 1,
                    "section_pointer_list": 1,
                    "section_pointers": 1,
                    "section_ptrs": 1,
                    "section_sizes": 6,
                    "section_table": 1,
                    "sections": 3,
                    "sections_array": 1,
                    "sections_list": 1
                },
                "param_18": {
                    "param_41": 1,
                    "undefined_value10": 1
                },
                "param_19": {
                    "param_42": 1,
                    "undefined_value11": 1
                },
                "param_2": {
                    "config_param": 1,
                    "output_file": 2,
                    "param2": 1,
                    "param_2": 1,
                    "param_8": 2,
                    "parameter_2": 1,
                    "undefined_value2": 1
                },
                "param_20": {
                    "param_43": 1,
                    "undefined_value12": 1
                },
                "param_21": {
                    "dbglink_filename": 1,
                    "debug_file": 1,
                    "debug_filename": 2,
                    "debug_link_file": 1,
                    "debug_link_path": 2,
                    "debugging_section_name": 1,
                    "debuglink_filename": 1,
                    "debuglink_name": 1,
                    "param_44": 1
                },
                "param_23": {
                    "note_entry_offset": 1,
                    "output_file": 1,
                    "position": 1,
                    "section_name": 1,
                    "symbol_index": 1,
                    "symbol_name": 1,
                    "var23": 1
                },
                "param_24": {
                    "as_needed_symbol": 1,
                    "current_symbol_name": 1,
                    "file_name": 1,
                    "padding_section": 1,
                    "symbol_name_copy": 1,
                    "var24": 1
                },
                "param_25": {
                    "undefined_value13": 1
                },
                "param_26": {
                    "current_section_size": 1,
                    "current_symbol_value": 1,
                    "dbglink_section": 1,
                    "function_sizes": 1,
                    "gap_count": 1,
                    "note_buffer": 1,
                    "previous_section_size": 1,
                    "var26": 1
                },
                "param_27": {
                    "undefined_value14": 1
                },
                "param_28": {
                    "undefined_value15": 1
                },
                "param_29": {
                    "merged_notes": 1,
                    "number_var_29": 1,
                    "undefined_value16": 1
                },
                "param_3": {
                    "param3": 1,
                    "param_3": 1,
                    "param_9": 2,
                    "parameter_3": 2,
                    "params": 1,
                    "undefined_value3": 1
                },
                "param_30": {
                    "mapping_table": 1,
                    "merged_note_list": 1,
                    "pl_var25": 1,
                    "section_contents": 2,
                    "section_sizes": 1,
                    "sections": 1,
                    "sections_to_fill": 1,
                    "stab_name": 1,
                    "symbol_names": 1,
                    "symbol_sections": 1,
                    "symbols": 1
                },
                "param_31": {
                    "error_msg": 1,
                    "note_section_size": 1,
                    "num_sections": 1,
                    "offset": 1,
                    "padding_size": 1,
                    "section_size_offset": 1,
                    "symbol_section_size": 1
                },
                "param_32": {
                    "current_section_index": 1,
                    "section_count": 1,
                    "section_index": 3
                },
                "param_33": {
                    "current_section_contents": 1,
                    "debug_link_data": 1,
                    "debugging_contents": 1,
                    "gnu_debuglink": 1,
                    "merged_note_section": 1,
                    "merged_notes": 1,
                    "note_section_buffer": 1,
                    "param_33": 1,
                    "stab_local": 1
                },
                "param_34": {
                    "copy_error": 1,
                    "debug_link_size": 1
                },
                "param_36": {
                    "entry_type": 1,
                    "is_label": 1,
                    "is_local_label": 1,
                    "is_local_symbol": 1,
                    "is_negative": 1,
                    "is_strip_debug": 1,
                    "skip": 1
                },
                "param_37": {
                    "alt_machine_code": 1,
                    "entry_flags": 1,
                    "is_function_entry_symbol": 1,
                    "is_keep_debug": 1,
                    "reuse": 1,
                    "section_index_type": 1,
                    "section_padding": 1
                },
                "param_38": {
                    "debug_link_contents": 1,
                    "debug_link_section_size": 1,
                    "section_content": 1,
                    "stab_section_size": 1
                },
                "param_39": {
                    "cond_flags": 1,
                    "debug_link_section_data": 1,
                    "machine_code": 1,
                    "stab_entry_size": 1,
                    "stab_entry_type": 1,
                    "symbol_section_index": 1,
                    "symbol_type": 1,
                    "target_machine": 1
                },
                "param_4": {
                    "num_params": 1,
                    "param4": 1,
                    "param_10": 1,
                    "param_12": 1,
                    "param_4": 1,
                    "parameter_4": 2,
                    "undefined_value4": 1
                },
                "param_40": {
                    "current_debug_function": 1,
                    "current_stab_section": 1,
                    "debug_link_section_data2": 1,
                    "gap_sizes": 1,
                    "merge_notes": 1,
                    "merged_notes": 1,
                    "merged_sections": 1,
                    "output_section_list": 1,
                    "padding_sizes": 1,
                    "sorted_section_list": 1,
                    "sorted_section_offset_array": 1,
                    "symbol_name": 1
                },
                "param_41": {
                    "add_padding": 1,
                    "byte_value2": 1,
                    "debug_link_section_error": 1,
                    "has_error": 1,
                    "is_before_stab": 1,
                    "is_error": 1,
                    "is_merged_notes": 1,
                    "is_relocation_named": 1,
                    "is_symbol_preceding_function": 1,
                    "local_symbols": 1,
                    "param_41": 1
                },
                "param_42": {
                    "dbglink_contents": 1,
                    "function_name": 2,
                    "function_names": 1,
                    "merged_section_contents": 1,
                    "padding_section": 1,
                    "param_42": 1,
                    "relocation_name": 1,
                    "stabstr_section": 1
                },
                "param_43": {
                    "dbglink_size": 1,
                    "function_visibility": 1,
                    "relocation_type": 1,
                    "stab_entry_flags": 1,
                    "stab_flags": 1,
                    "strip": 1,
                    "symbol_binding": 1,
                    "symbol_type": 1
                },
                "param_44": {
                    "gap_offset": 1,
                    "num_dbg_info_sections": 1,
                    "relocation_index": 1,
                    "stab_entry_value": 1,
                    "stab_type": 1,
                    "strip_debug_notes": 1,
                    "symbol_count": 1,
                    "symbol_scope": 1,
                    "symbol_type": 1,
                    "symbol_value": 1
                },
                "param_45": {
                    "undefined_value17": 1
                },
                "param_5": {
                    "extra_flags": 1,
                    "param_13": 1,
                    "param_5": 1,
                    "parameter_5": 2,
                    "undefined_value5": 1
                },
                "param_6": {
                    "arch": 1,
                    "param_14": 1,
                    "param_6": 1,
                    "undefined_value6": 1
                },
                "param_7": {
                    "bfd": 3,
                    "bfd_file": 2,
                    "bfd_handle": 3,
                    "binary": 7,
                    "binary_file": 4,
                    "binary_object": 1,
                    "binary_path": 1,
                    "input_binary": 1,
                    "param_15": 1,
                    "param_file": 1,
                    "param_object": 1
                },
                "param_8": {
                    "num_sections": 12,
                    "number_of_sections": 2,
                    "param_17": 1,
                    "param_count": 1,
                    "section_count": 5
                },
                "param_9": {
                    "debug_flag": 1,
                    "extra_section_name": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "has_debug_symbols": 1,
                    "padding": 1,
                    "param_21": 1,
                    "param_flag": 1,
                    "section_flag": 1,
                    "special_case": 1
                },
                "param_n": {
                    "new_param_name": 1,
                    "param_m": 1,
                    "param_n": 1,
                    "paramn": 1
                },
                "pbVar22": {
                    "pb_var22": 1
                },
                "pbVar23": {
                    "pb_var23": 1
                },
                "pbVar24": {
                    "pb_var24": 1
                },
                "pbVar46": {
                    "pb_var46": 1
                },
                "pbVar47": {
                    "pb_var47": 1
                },
                "pbVar48": {
                    "pb_var48": 1
                },
                "pbVar49": {
                    "pb_var49": 1
                },
                "pbVar_n": {
                    "pb_var_n": 1
                },
                "pcVar20": {
                    "pc_var20": 1
                },
                "pcVar22": {
                    "char_ptr": 1,
                    "current_string": 1,
                    "temp_string_pc_var22": 1
                },
                "pcVar3": {
                    "current_section": 1,
                    "pc_var3": 1,
                    "section_contents_func": 1,
                    "section_iterator": 1,
                    "section_mapping_function": 1
                },
                "pcVar31": {
                    "error_message": 2,
                    "format_string": 1,
                    "section_name": 3,
                    "stab_corrupt_error_string": 1,
                    "stab_section_name": 1,
                    "temp_string": 1,
                    "warning_string": 1
                },
                "pcVar37": {
                    "pc_var37": 1
                },
                "pcVar38": {
                    "pc_var38": 1
                },
                "pcVar39": {
                    "pc_var39": 1
                },
                "pcVar40": {
                    "pc_var40": 1
                },
                "pcVar41": {
                    "pc_var41": 1
                },
                "pcVar42": {
                    "pc_var42": 1
                },
                "pcVar43": {
                    "pc_var43": 1
                },
                "pcVar44": {
                    "pc_var44": 1
                },
                "pcVar45": {
                    "pc_var45": 1
                },
                "plVar1": {
                    "param_17": 1
                },
                "plVar15": {
                    "curr_section": 1,
                    "current_section": 3,
                    "long_pointer2": 1,
                    "long_ptr": 1,
                    "merged_section_pointer": 1,
                    "pl_var15": 1,
                    "section": 1,
                    "section_begin_ptr": 1,
                    "section_iterator": 1,
                    "section_list": 1,
                    "section_pointer": 2,
                    "sections": 1
                },
                "plVar2": {
                    "param_40": 1
                },
                "plVar20": {
                    "auxent": 1,
                    "long_pointer3": 1,
                    "merged_note_section": 1,
                    "section": 1,
                    "section_ptr": 1,
                    "section_to_copy": 1,
                    "temp_ptr": 1,
                    "temp_section_ptr": 1
                },
                "plVar25": {
                    "current_merged_note": 1,
                    "current_section": 1,
                    "long_pointer4": 1,
                    "pointer_to_next_section": 1,
                    "section": 1,
                    "section_pointer": 1,
                    "stab_section_pointer": 1,
                    "temp_pointer": 1,
                    "temp_ptr_2": 1
                },
                "plVar28": {
                    "current_ptr": 1,
                    "current_section": 2,
                    "note_sections": 2,
                    "section_index_list": 1,
                    "section_pointer": 1,
                    "sections": 2,
                    "sections_array": 1,
                    "temp_iterator": 1,
                    "temp_pointer": 1
                },
                "plVar3": {
                    "pl_var3": 1
                },
                "ppcVar34": {
                    "debug_sections": 1,
                    "note_section_iterator": 1,
                    "note_section_list": 1,
                    "notes_data": 1,
                    "pointer_to_char_pointer": 1,
                    "ppc_var34": 2,
                    "temp_pointer": 1
                },
                "ppcVar35": {
                    "ppc_var35": 1
                },
                "ppcVar36": {
                    "ppc_var36": 1
                },
                "ppcVar_n": {
                    "ppc_var_n": 1
                },
                "ppuVar36": {
                    "section_name_list": 1,
                    "section_names": 2,
                    "sections": 1,
                    "stab_section_iterator": 1,
                    "stab_section_strings": 1,
                    "stab_sections": 2
                },
                "print_error": {
                    "print_error": 1
                },
                "print_error_message": {
                    "print_error_message": 1
                },
                "ptr_001278b0": {
                    "section_pointer_table": 1
                },
                "puVar1": {
                    "flags": 2,
                    "pointer_to_uint": 1,
                    "pointer_var_1": 1,
                    "pu_var1": 1,
                    "section_flags": 1,
                    "symbol_flag": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "uint_pointer": 1
                },
                "puVar2": {
                    "file_content": 1
                },
                "puVar26": {
                    "alternative_machine_code": 1,
                    "aux_symbol": 1,
                    "auxent_index": 1,
                    "auxiliary_info": 1,
                    "current_section": 1,
                    "iterator": 1,
                    "pointer": 1,
                    "pointer_to_undefined8": 1,
                    "pointer_var26": 1,
                    "pointer_var_26": 1,
                    "temp_pointer": 1,
                    "temp_ptr_3": 1
                },
                "puVar29": {
                    "pu_var29": 1
                },
                "puVar3": {
                    "section_content": 1
                },
                "puVar30": {
                    "current_symbol": 1,
                    "gap_section_size": 1,
                    "gap_sizes": 1,
                    "long_pointer": 1,
                    "pointer_to_ulong": 1,
                    "pu_var30": 1,
                    "section_merge_iterator": 1,
                    "size_ptr": 1,
                    "temp_ulong_ptr": 1
                },
                "puVar31": {
                    "pu_var31": 1
                },
                "puVar32": {
                    "auxent_ptr": 1,
                    "pu_var32": 1,
                    "section_flag_pointer": 1,
                    "stab_section_data_pointer": 1,
                    "symbol": 1,
                    "symbol_entry": 1,
                    "temp_data_ptr": 1
                },
                "puVar33": {
                    "filler_iterator": 1,
                    "gap_ptr": 1,
                    "note_section_content": 1,
                    "pu_var33": 1,
                    "string_buffer": 1,
                    "symbol_name": 1,
                    "temp_data_ptr_2": 1,
                    "temp_pointer": 1
                },
                "puVar36": {
                    "stab_section_names": 1,
                    "temp_pointer": 1
                },
                "puVar4": {
                    "filler_table": 1,
                    "merged_note_section_iterator": 1,
                    "pointer_to_undefined8": 1,
                    "pu_var4": 1,
                    "section_ptr": 1,
                    "sections_iterator": 1,
                    "struct_ptr": 1,
                    "temp_pointer": 1,
                    "void_pointer2": 1
                },
                "puVar5": {
                    "pu_var1": 1
                },
                "puVar6": {
                    "pu_var2": 1
                },
                "puVar7": {
                    "pu_var3": 1
                },
                "puVar_n": {
                    "pu_var_n": 1
                },
                "pvVar35": {
                    "pv_var35": 1,
                    "section_content_pointer": 1,
                    "temp_void_ptr": 1,
                    "void_pointer": 1
                },
                "qsort": {
                    "quick_sort": 1
                },
                "sVar18": {
                    "size_value": 1,
                    "size_var": 1,
                    "str_length": 1,
                    "string_length": 2,
                    "string_length_1": 1,
                    "string_length_18": 1,
                    "string_size": 1,
                    "temp_string_len": 1
                },
                "sVar19": {
                    "other_string_length": 1,
                    "s_var19": 1,
                    "size_value2": 1,
                    "size_var2": 1,
                    "stab_entry_size": 1,
                    "string_length_19": 1,
                    "string_length_2": 1
                },
                "sVar25": {
                    "s_var25": 1
                },
                "sVar26": {
                    "s_var26": 1
                },
                "section_alignment": {
                    "section_alignment": 1
                },
                "section_names": {
                    "section_names": 1
                },
                "section_sizes": {
                    "section_sizes": 1
                },
                "sections": {
                    "sections": 1
                },
                "set_section_contents": {
                    "set_section_contents": 1
                },
                "set_symtab": {
                    "set_symtab": 1
                },
                "stab_data": {
                    "stab_data": 1
                },
                "stab_data_format": {
                    "stab_data_format": 1
                },
                "stab_data_length": {
                    "stab_data_length": 1
                },
                "stab_data_type": {
                    "stab_data_type": 1
                },
                "stab_entry": {
                    "stab_entry": 1
                },
                "stack0x00000140": {
                    "unused_stack_variable": 1
                },
                "strcmp": {
                    "compare_strings": 1
                },
                "strcpy": {
                    "copy_string": 2
                },
                "string_length": {
                    "string_length": 1
                },
                "string_length_1": {
                    "string_length_1": 1
                },
                "string_length_2": {
                    "string_length_2": 1
                },
                "strip_sections": {
                    "strip_sections": 1
                },
                "stub_entry": {
                    "stub_entry": 1
                },
                "syncsections": {
                    "sync_sections": 1
                },
                "uCarg1": {
                    "undefined_var3": 1
                },
                "uVar12": {
                    "offset": 1,
                    "option": 1,
                    "section_flags": 2,
                    "symbol_flag": 1,
                    "temp_val_1": 1,
                    "u_var12": 1,
                    "uint_value": 1,
                    "uint_var": 1,
                    "undefined_var12": 1
                },
                "uVar13": {
                    "aux_info_flags": 1,
                    "comparison_result": 1,
                    "extra_offset": 1,
                    "temp_val_2": 1,
                    "u_var13": 1,
                    "uint_value2": 1,
                    "uint_var2": 1,
                    "undefined_var13": 1
                },
                "uVar16": {
                    "error_translation": 1,
                    "stab_entry_pointer": 1,
                    "temporary_variable": 1,
                    "u_var16": 2,
                    "undefined8_value": 1,
                    "undefined_var16": 1,
                    "undefined_var3": 1,
                    "undefined_variable_16": 1
                },
                "uVar17": {
                    "current_file": 1,
                    "err_msg": 1,
                    "temporary_variable": 1,
                    "u_var17": 1,
                    "undefined8_value2": 1,
                    "undefined_var17": 1,
                    "undefined_var4": 1,
                    "undefined_variable_17": 1
                },
                "uVar18": {
                    "u_var18": 1
                },
                "uVar21": {
                    "temp_size": 1,
                    "temporary_variable": 1,
                    "ulong_value": 1,
                    "ulong_var": 1,
                    "undefined_var21": 1,
                    "undefined_variable_21": 1
                },
                "uVar24": {
                    "duplicates_offset": 1,
                    "temporary_variable": 1,
                    "ulong_value2": 1,
                    "undefined_var24": 1,
                    "undefined_variable_24": 1
                },
                "uVar26": {
                    "loop_variable": 1
                },
                "uVar27": {
                    "u_var27": 1
                },
                "uVar28": {
                    "u_var28": 1
                },
                "uVar29": {
                    "filled_section_size": 1,
                    "gap_size": 1,
                    "max_size": 1,
                    "num_sections": 1,
                    "result_var": 1,
                    "size": 1,
                    "symbol_index": 1,
                    "temp_variable": 1,
                    "total_section_size": 1,
                    "ulong_value3": 1,
                    "undefined_var29": 1,
                    "undefined_variable_29": 1
                },
                "uVar4": {
                    "num_bytes": 1
                },
                "uVar5": {
                    "fill_byte": 1,
                    "filler_value": 1,
                    "note_section_content_byte": 1,
                    "temp_undefined": 1,
                    "u_var5": 1,
                    "undeclared_variable": 1,
                    "undefined_value": 2,
                    "undefined_var": 2,
                    "undefined_var5": 1
                },
                "uVar6": {
                    "file_flag": 1,
                    "flags": 1,
                    "index": 1,
                    "loop_index": 1,
                    "stab_value2": 1,
                    "temp_ushort": 1,
                    "u_var6": 1,
                    "undefined_var6": 1,
                    "ushort_value": 1,
                    "ushort_var": 1
                },
                "uVar7": {
                    "section_flags": 1
                },
                "uVar8": {
                    "section_info": 1
                },
                "uVar9": {
                    "error_code": 1,
                    "result": 3,
                    "return_value": 1,
                    "stab_value": 1,
                    "success_status": 1,
                    "symbol_class": 1,
                    "temp_data_size": 1,
                    "undefined4_value": 1,
                    "undefined_var2": 1,
                    "undefined_var9": 1
                },
                "uVar_n": {
                    "u_var_n": 1
                },
                "ucVar51": {
                    "uc_var51": 1
                },
                "ucVar52": {
                    "uc_var52": 1
                },
                "ucVar53": {
                    "uc_var53": 1
                },
                "ucVar54": {
                    "uc_var54": 1
                },
                "ucVar55": {
                    "uc_var55": 1
                },
                "ucVar56": {
                    "uc_var56": 1
                },
                "ucVar57": {
                    "uc_var57": 1
                },
                "ucVar58": {
                    "uc_var58": 1
                },
                "ucVar59": {
                    "uc_var59": 1
                },
                "ucVar60": {
                    "uc_var60": 1
                },
                "unaff_R10": {
                    "binary_file": 1
                },
                "unaff_R14": {
                    "abfd": 1,
                    "bfd_handle": 1,
                    "bfd_handler": 6,
                    "bfd_object": 2,
                    "binary": 1,
                    "binary_file": 2,
                    "section_table": 1,
                    "unaffected_register_pointer": 1
                },
                "unaff_R15": {
                    "binary_file": 1
                },
                "undefined_buffer": {
                    "__ptr": 1
                },
                "uuVar16": {
                    "end_address": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "bfd_map_over_sections",
                "FUN_0011173a",
                "free",
                "bfd_set_section_contents",
                "FUN_00108863",
                "FUN_00119ed0",
                "FUN_0010bf86",
                "FUN_00115dc0",
                "dcgettext",
                "FUN_0010875d",
                "bfd_map_over_sections",
                "fprintf",
                "FUN_001126c0",
                "strcmp",
                "bfd_get_section_contents",
                "bfd_get_error",
                "bfd_is_local_label",
                "bfd_set_section_size",
                "FUN_00112a33",
                "FUN_0011a170",
                "bfd_decode_symclass",
                "FUN_00115d70",
                "xstrdup",
                "FUN_0011378f",
                "FUN_0010bbd3",
                "bfd_set_error",
                "FUN_00116110",
                "FUN_001088ae",
                "FUN_00112894",
                "strlen",
                "FUN_0010c892",
                "FUN_0010870e",
                "FUN_0010bc80",
                "bfd_alt_mach_code",
                "qsort",
                "bfd_coff_get_syment",
                "bfd_set_symtab",
                "FUN_00119dd0",
                "strcpy",
                "concat",
                "FUN_0010bf20",
                "bfd_errmsg",
                "FUN_001159d0",
                "bfd_coff_get_auxent",
                "htab_traverse",
                "FUN_00108b3e",
                "FUN_00116030",
                "htab_elements",
                "bfd_make_section_with_flags",
                "bfd_octets_per_byte",
                "FUN_0011a2e0",
                "htab_find",
                "bfd_fill_in_gnu_debuglink_section",
                "FUN_0010be88",
                "FUN_0010be1a",
                "FUN_00113fb0",
                "xmalloc",
                "bfd_get_section_by_name",
                "FUN_0010dac0"
            ],
            "calling": [
                "FUN_00107880"
            ],
            "code": "\n/* WARNING: Type propagation algorithm not settling */\n\n\nundefined4 improve_decompiled_code_0010554f(void)\n\n{\n  uint *flags;\n  byte byte_value;\n  code *section_contents_func;\n  undefined8 *section_ptr;\n  undefined undefined_var;\n  ushort flags;\n  char error_status;\n  char c_var8;\n  undefined4 result;\n  int error_code;\n  int comparison_result;\n  uint section_flags;\n  uint aux_info_flags;\n  long index;\n  long *current_section;\n  undefined8 u_var16;\n  undefined *ptr;\n  undefined8 temporary_variable;\n  size_t string_length;\n  size_t string_length_19;\n  long *allocated_memory;\n  long *section_ptr;\n  void *temp_pointer;\n  void *temp_pointer;\n  ulong temporary_variable;\n  char *char_var3;\n  char *temp_string_pc_var22;\n  long length_23;\n  ulong temporary_variable;\n  long *current_section;\n  undefined8 *auxiliary_info;\n  int aux_info_offset;\n  long *note_sections;\n  ulong result_var;\n  ulong *size_ptr;\n  char *section_name;\n  undefined4 *symbol;\n  undefined *string_buffer;\n  long *merged_notes;\n  char **ppc_var34;\n  void *temp_void_ptr;\n  undefined8 *bfd_handler;\n  undefined **stab_sections;\n  long result_long_val;\n  bool has_debug_information;\n  byte boolean_flag;\n  long binary;\n  ulong num_sections;\n  char special_case;\n  undefined4 *symbol_table;\n  ulong gap_size;\n  char *param_30;\n  undefined *gap_buffer;\n  uint symbol_table_flag;\n  long *section_sizes;\n  undefined8 struct_param;\n  undefined8 debug_filename;\n  long output_file;\n  char *var24;\n  long current_section_size;\n  long *section_contents;\n  ulong offset;\n  long section_index;\n  long temp_struct;\n  void *parameter_33;\n  long debug_link_size;\n  undefined8 note_data;\n  byte is_label;\n  byte section_padding;\n  undefined8 stab_section_size;\n  ushort machine_code;\n  long *sorted_section_offset_array;\n  char has_error;\n  char *function_name;\n  undefined strip;\n  short strip_debug_notes;\n  \n  boolean_flag = 0;\n  if ((DAT_00127978 == '\\0') && (DAT_00127969 == '\\0')) {\n    gap_size = 0;\n    gap_buffer = (undefined *)0x0;\n    section_sizes = (long *)0x0;\n    result_var = gap_size;\n  }\n  else {\n    index = (ulong)struct_param._4_4_ * 8;\n    section_sizes = (long *)xmalloc(index);\n    sorted_section_offset_array = section_sizes;\n    bfd_map_over_sections(binary,FUN_0010870e,&unused_stack_variable);\n    qsort(section_sizes,(ulong)struct_param._4_4_,8,FUN_0010875d);\n    gap_buffer = (undefined *)xmalloc(index);\n    has_debug_information = DAT_00127978 != '\\0';\n    string_buffer = gap_buffer;\n    for (; index != 0; index = index + -1) {\n      *string_buffer = 0;\n      string_buffer = string_buffer + (ulong)boolean_flag * -2 + 1;\n    }\n    if (has_debug_information) {\n      result_var = 0;\n      gap_size = 0;\n      do {\n        size_ptr = (ulong *)(gap_buffer + result_var * 8);\n        note_sections = section_sizes + result_var;\n        temporary_variable = gap_size;\n        do {\n          gap_size = temporary_variable;\n          if (struct_param._4_4_ - 1 <= (uint)result_var) goto LAB_00107cd1;\n          result_var = (ulong)((uint)result_var + 1);\n          section_flags = bfd_octets_per_byte(binary,*note_sections);\n          aux_info_flags = bfd_octets_per_byte(binary);\n          index = *note_sections;\n          if ((*(uint *)(index + 0x24) & 0x102) != 0x102) break;\n          temporary_variable = (ulong)aux_info_flags * *(long *)(note_sections[1] + 0x38);\n          temporary_variable = (ulong)section_flags * *(long *)(index + 0x38) + *(long *)(index + 0x40);\n          if (temporary_variable <= temporary_variable) break;\n          temporary_variable = temporary_variable - temporary_variable;\n          error_status = bfd_set_section_size();\n          if (error_status == '\\0') {\n            dcgettext(0,\"Can\\'t fill gap after section\",5);\n            FUN_001126c0(0,binary,*note_sections);\n            DAT_00127a20 = 1;\n            goto LAB_00107cd1;\n          }\n          *size_ptr = temporary_variable;\n          note_sections = note_sections + 1;\n          size_ptr = size_ptr + 1;\n        } while (gap_size < temporary_variable);\n      } while( true );\n    }\n    gap_size = 0;\nLAB_00107cd1:\n    result_var = gap_size;\n    if (DAT_00127969 != '\\0') {\n      section_flags = bfd_octets_per_byte(binary);\n      index = section_sizes[struct_param._4_4_ - 1];\n      temporary_variable = DAT_00127970 * (ulong)section_flags;\n      temporary_variable = *(long *)(index + 0x40) + (ulong)section_flags * *(long *)(index + 0x38);\n      if (temporary_variable < temporary_variable) {\n        error_status = bfd_set_section_size();\n        if (error_status == '\\0') {\n          dcgettext(0,\"can\\'t add padding\",5);\n          FUN_001126c0(0,binary,section_sizes[struct_param._4_4_ - 1]);\n          DAT_00127a20 = 1;\n        }\n        else {\n          result_var = temporary_variable - temporary_variable;\n          *(ulong *)(gap_buffer + (ulong)(struct_param._4_4_ - 1) * 8) = result_var;\n          if (result_var <= gap_size) {\n            result_var = gap_size;\n          }\n        }\n      }\n    }\n  }\n  gap_size = result_var;\n  note_sections = DAT_001278b0;\n  if (DAT_00127980 == '\\0') {\nLAB_00105588:\n    symbol_table = (undefined4 *)0x0;\n  }\n  else {\n    stab_sections = &PTR_schar_var3tab_00125c60;\n    symbol_table = (undefined4 *)xmalloc(0x60);\n    symbol = symbol_table;\n    for (index = 0x18; index != 0; index = index + -1) {\n      *symbol = 0;\n      symbol = symbol + (ulong)boolean_flag * -2 + 1;\n    }\n    param_30 = (char *)0x0;\n    do {\n      string_buffer = *stab_sections;\n      index = bfd_get_section_by_name(bfd_handler,string_buffer);\n      result_long_val = bfd_get_section_by_name();\n      if ((index != 0) && (result_long_val != 0)) {\n        length_23 = *(long *)(index + 0x40);\n        temp_pointer = (void *)xmalloc(length_23);\n        error_status = bfd_get_section_contents(bfd_handler,index,temp_pointer,0,length_23);\n        if (error_status == '\\0') {\n          result = bfd_get_error();\n          bfd_errmsg(result);\n          fprintf(error_stream,\"%s: %s: %s\\n\",*bfd_handler);\n          free(param_30);\n          free(temp_pointer);\n        }\n        else {\n          result_var = *(ulong *)(result_long_val + 0x40);\n          temp_pointer = (void *)xmalloc(result_var + 1);\n          special_case = bfd_get_section_contents(bfd_handler,result_long_val,temp_pointer,0);\n          if (special_case == '\\0') {\n            result = bfd_get_error();\n            bfd_errmsg(result);\n            fprintf(error_stream,\"%s: %s: %s\\n\",*bfd_handler);\n            free(param_30);\n          }\n          else {\n            *(undefined *)((long)temp_pointer + result_var) = 0;\n            if ((param_30 != (char *)0x0) ||\n               (param_30 = (char *)FUN_00112894(bfd_handler,1,note_sections), param_30 != (char *)0x0)) {\n              current_section_size = 0;\n              output_file = 0;\n              for (temp_void_ptr = temp_pointer; temp_void_ptr <= (void *)((long)temp_pointer + length_23 + -0xc);\n                  temp_void_ptr = (void *)((long)temp_void_ptr + 0xc)) {\n                temporary_variable = (**(code **)(bfd_handler[1] + 0x40))(temp_void_ptr);\n                byte_value = *(byte *)((long)temp_void_ptr + 4);\n                result = (**(code **)(bfd_handler[1] + 0x58))((long)temp_void_ptr + 6);\n                index = (**(code **)(bfd_handler[1] + 0x40))((long)temp_void_ptr + 8);\n                if (byte_value == 0) {\n                  output_file = current_section_size;\n                  current_section_size = current_section_size + index;\n                }\n                else {\n                  temporary_variable = (temporary_variable & 0xffffffff) + output_file;\n                  if (temporary_variable < result_var) {\n                    section_name = (char *)((long)temp_pointer + temporary_variable);\n                    var24 = (char *)0x0;\n                    while( true ) {\n                      string_length = strlen(section_name);\n                      if (((string_length == 0) || (temp_string_pc_var22 = section_name + (string_length - 1), *temp_string_pc_var22 != '\\')) ||\n                         ((ulong)((long)temp_pointer + length_23) < (long)temp_void_ptr + 0x10U))\n                      goto LAB_001077fb;\n                      *temp_string_pc_var22 = '\\0';\n                      temp_void_ptr = (void *)((long)temp_void_ptr + 0xc);\n                      error_code = (**(code **)(bfd_handler[1] + 0x40))(temp_void_ptr);\n                      temporary_variable = (ulong)(uint)(error_code + (int)output_file);\n                      if (result_var <= temporary_variable) break;\n                      section_name = (char *)concatenate_strings(section_name,(long)temp_pointer + temporary_variable,0);\n                      *temp_string_pc_var22 = '\\';\n                      free(var24);\n                      var24 = section_name;\n                    }\n                    temporary_variable = *bfd_handler;\n                    temp_string_pc_var22 = (char *)dcgettext(0,\"%s: %s: stab entry %ld is corrupt\\n\",5);\n                    fprintf(error_stream,temp_string_pc_var22,temporary_variable,string_buffer,((long)temp_void_ptr - (long)temp_pointer) / 0xc);\nLAB_001077fb:\n                    FUN_001088ae((ulong)byte_value,result,index,section_name);\n                    error_status = FUN_0011173a(symbol_table,param_30,byte_value);\n                    if (error_status == '\\0') {\n                      FUN_00108b3e();\n                      FUN_00108863();\n                      free(var24);\n                      free(param_30);\n                      free(temp_pointer);\n                      free(temp_pointer);\n                      goto LAB_00105981;\n                    }\n                  }\n                  else {\n                    temporary_variable = *bfd_handler;\n                    section_name = (char *)dcgettext(0,\n                                                \"%s: %s: stab entry %ld is corrupt, strx = 0x%x, type = %d\\n\"\n                                                ,5);\n                    fprintf(error_stream,section_name,temporary_variable,string_buffer,((long)temp_void_ptr - (long)temp_pointer) / 0xc,\n                            temporary_variable & 0xffffffff,(ulong)byte_value,((long)temp_void_ptr - (long)temp_pointer) % 0xc)\n                    ;\n                  }\n                }\n              }\n              FUN_00108863();\n              free(temp_pointer);\n              goto LAB_001058eb;\n            }\n          }\n          free(temp_pointer);\n          free(temp_pointer);\n        }\n        goto LAB_00105981;\n      }\nLAB_001058eb:\n      stab_sections = stab_sections + 2;\n    } while (stab_sections != (undefined **)&DAT_00125c90);\n    if ((param_30 != (char *)0x0) && (error_status = FUN_0010c892(), error_status == '\\0')) {\nLAB_00105981:\n      free(symbol_table);\n      goto LAB_00105588;\n    }\n    if (*(int *)(bfd_handler[1] + 8) == 1) {\n      index = 0;\n      for (current_section = note_sections; current_section < note_sections + num_sections; current_section = current_section + 1) {\n        (**(code **)(bfd_handler[1] + 0x218))(bfd_handler,*current_section,&unused_stack_variable);\n        if (has_error == '-') {\n          if (((index == 0) && (index = FUN_00112894(bfd_handler,0,note_sections), index == 0)) ||\n             ((function_name == (char *)0x0 || (*function_name == '\\0')))) goto LAB_00105981;\n          section_name = (char *)0x0;\n          temp_string_pc_var22 = function_name;\n          while (((*temp_string_pc_var22 != '\\0' && (string_length = strlen(temp_string_pc_var22), temp_string_pc_var22[string_length - 1] == '\\')) &&\n                 (current_section + 1 < note_sections + num_sections))) {\n            char_var3 = (char *)xstrdup(temp_string_pc_var22);\n            string_length = strlen(char_var3);\n            char_var3[string_length - 1] = '\\0';\n            temp_string_pc_var22 = (char *)concatenate_strings(char_var3,*(undefined8 *)(current_section[1] + 8),0);\n            free(char_var3);\n            free(section_name);\n            current_section = current_section + 1;\n            section_name = temp_string_pc_var22;\n          }\n          FUN_001088ae(strip,(int)strip_debug_notes,sorted_section_offset_array,temp_string_pc_var22);\n          special_case = FUN_0011173a(symbol_table,index,strip);\n          if (special_case == '\\0') {\n            FUN_00108b3e();\n            FUN_00108863();\n            goto LAB_00105981;\n          }\n        }\n      }\n      FUN_00108863();\n      if ((index != 0) && (error_status = FUN_0010c892(), error_status == '\\0')) goto LAB_00105981;\n    }\n    if (special_case == '\\0') {\n      if ((*(int *)(bfd_handler[1] + 8) == 2) && (num_sections != 0)) {\n        sorted_section_offset_array = (long *)0x0;\n        section_contents = note_sections;\n        section_index = 0;\n        offset = num_sections;\n        temp_struct = 0;\n        auxiliary_info = (undefined8 *)&stack0x00000148;\n        for (index = 0x22; index != 0; index = index + -1) {\n          *(undefined4 *)auxiliary_info = 0;\n          auxiliary_info = (undefined8 *)((long)auxiliary_info + (ulong)boolean_flag * -8 + 4);\n        }\n        error_status = '\\0';\n        symbol_table = (int *)0x0;\n        section_flags = 0;\n        param_30 = (char *)0x0;\n        var24 = (char *)0xffffffffffffffff;\nswitchD_00106e1a_caseD_68:\n        do {\n          while( true ) {\n            if ((long)num_sections <= section_index) goto LAB_00105590;\n            index = note_sections[section_index];\n            c_var8 = bfd_coff_get_syment(bfd_handler,index,&stack0x000000e0);\n            result_long_val = temp_struct;\n            if (c_var8 == '\\0') {\n              result = bfd_get_error();\n              bfd_errmsg(result);\n              section_name = \"bfd_coff_get_syment failed: %s\";\n              goto LAB_00105968;\n            }\n            section_name = *(char **)(index + 8);\n            auxiliary_info = (undefined8 *)0x0;\n            section_index = section_index + 1;\n            temp_struct = (ulong)section_padding + 1 + temp_struct;\n            if (section_padding != 0) {\n              auxiliary_info = &stack0x00000110;\n              c_var8 = bfd_coff_get_auxent(bfd_handler,index,0);\n              if (c_var8 == '\\0') {\n                result = bfd_get_error();\n                bfd_errmsg(result);\n                section_name = \"bfd_coff_get_auxent failed: %s\";\n                goto LAB_00105968;\n              }\n            }\n            if (var24 != (char *)result_long_val) break;\n            if (is_label != 0x67) {\n              c_var8 = FUN_0010bbd3(symbol_table);\n              if (c_var8 != '\\0') break;\n              goto LAB_00105981;\n            }\nswitchD_00106e1a_caseD_67:\n            var24 = (char *)debug_link_size;\n            c_var8 = FUN_0010bbd3(symbol_table);\n            if (c_var8 == '\\0') goto LAB_00105981;\n          }\n          flags = note_data._6_2_;\n          if ((char)is_label < '\\0') {\n            if (is_label == 0xff) goto switchD_00106e1a_caseD_68;\nLAB_0010700a:\n            length_23 = FUN_0010dac0(bfd_handler,&stack0x000000c0,&unused_stack_variable);\n            if (length_23 == 0) break;\n            c_var8 = FUN_00112a33(&unused_stack_variable,index,result_long_val);\n          }\n          else {\n            if (is_label < 100) {\n              switch(is_label) {\n              case 3:\n                if (note_data._6_2_ == 0) goto switchD_00106e1a_caseD_68;\n              case 2:\nswitchD_00106e1a_caseD_7f:\n                if ((ulong)((uint)note_data._6_2_ & *(uint *)(bfd_handler[0x22] + 0x40)) !=\n                    2L << ((byte)*(undefined4 *)(bfd_handler[0x22] + 0x3c) & 0x3f)) goto LAB_0010700a;\n                symbol_table = (int *)(**(code **)(bfd_handler[1] + 0x238))(bfd_handler);\n                section_flags = (uint)flags;\n                param_30 = section_name;\n                goto switchD_00106e1a_caseD_68;\n              default:\n                goto LAB_0010700a;\n              case 5:\n              case 7:\n              case 0xe:\n                goto switchD_00106e1a_caseD_68;\n              }\n            }\n            switch(is_label) {\n            case 100:\n              error_code = strcmp(section_name,\".bb\");\n              if (error_code == 0) {\n                c_var8 = FUN_0010be88(symbol_table);\n              }\n              else {\n                error_code = strcmp(section_name,\".eb\");\n                if (error_code != 0) goto switchD_00106e1a_caseD_68;\n                c_var8 = FUN_0010bf20(symbol_table);\n              }\n              break;\n            case 0x65:\n              error_code = strcmp(section_name,\".bf\");\n              if (error_code == 0) {\n                if (param_30 != (char *)0x0) {\n                  aux_info_flags = (int)section_flags >> ((byte)*(undefined4 *)(bfd_handler[0x22] + 0x44) & 0x1f);\n                  result_long_val = FUN_0010dac0(bfd_handler,&stack0x000000c0,&unused_stack_variable,result_long_val,\n                                        aux_info_flags ^ (section_flags ^ aux_info_flags) &\n                                                 *(uint *)(bfd_handler[0x22] + 0x38),auxiliary_info,0,\n                                        symbol_table);\n                  if ((result_long_val == 0) || (error_status = FUN_0010bc80(symbol_table), error_status == '\\0'))\n                  goto LAB_00105981;\n                  if (symbol_table != (int *)0x0) {\n                    error_code = 0;\n                    if (section_padding != 0) {\n                      error_code = machine_code - 1;\n                    }\n                    index = *(long *)(*(long *)(index + 0x20) + 0x30);\n                    while( true ) {\n                      aux_info_offset = symbol_table[4];\n                      if (aux_info_offset == 0) break;\n                      c_var8 = FUN_0010bf86(symbol_table,error_code + aux_info_offset,\n                                           *(long *)(symbol_table + 6) + index);\n                      symbol_table = symbol_table + 4;\n                      if (c_var8 == '\\0') goto LAB_00105981;\n                    }\n                  }\n                  section_flags = 0;\n                  symbol_table = (int *)0x0;\n                  param_30 = (char *)0x0;\n                  goto switchD_00106e1a_caseD_68;\n                }\n                section_name = \"%ld: .bf without preceding function\";\n              }\n              else {\n                error_code = strcmp(section_name,\".ef\");\n                if (error_code != 0) goto switchD_00106e1a_caseD_68;\n                if (error_status != '\\0') {\n                  error_status = FUN_0010be1a(symbol_table);\n                  if (error_status == '\\0') goto LAB_00105981;\n                  error_status = '\\0';\n                  goto switchD_00106e1a_caseD_68;\n                }\n                section_name = \"%ld: unexpected .ef\\n\";\n              }\n              temporary_variable = dcgettext(0,section_name,5);\n              FUN_00119ed0(temporary_variable);\n              goto LAB_00105981;\n            default:\n              goto LAB_0010700a;\n            case 0x67:\n              goto switchD_00106e1a_caseD_67;\n            case 0x68:\n            case 0x69:\n            case 0x6a:\n              goto switchD_00106e1a_caseD_68;\n            case 0x7f:\n              goto switchD_00106e1a_caseD_7f;\n            }\n          }\n        } while (c_var8 != '\\0');\n      }\n      else {\n        section_name = \"%s: no recognized debugging information\";\nLAB_00105968:\n        temporary_variable = dcgettext(0,section_name,5);\n        FUN_00119ed0(temporary_variable);\n      }\n      goto LAB_00105981;\n    }\n  }\nLAB_00105590:\n  if (((*(uint *)(binary + 0x44) & 0x42) != 0) && ((*(uint *)(binary + 0x44) & 1) == 0)) {\n    if ((*(char *)(*(long *)(binary + 8) + 0x20) == '\\0') && (DAT_00127939 == '\\0')) {\n      if (num_sections != 0) {\n        note_sections = DAT_001278b0 + num_sections;\n        current_section = DAT_001278b0;\n        do {\n          section_flags = *(uint *)(*current_section + 0x18);\n          if ((section_flags & 0x1000000) != 0) {\n            *(uint *)(*current_section + 0x18) = section_flags & 0xfeffffff;\n          }\n          current_section = current_section + 1;\n        } while (note_sections != current_section);\n      }\n    }\n    else {\n      for (index = *(long *)(binary + 0x90); index != 0; index = *(long *)(index + 8)) {\n        if (*(long *)(index + 0xe8) != 0) {\n          flags = (uint *)(*(long *)(index + 0xe8) + 0x18);\n          *flags = *flags | 0x1000000;\n        }\n      }\n    }\n  }\n  if ((DAT_00127a2c == 2) || (DAT_00127a2c == 7)) {\nLAB_001059fe:\n    if (DAT_00127a2c == 7) {\nLAB_00105a3b:\n      index = xmalloc();\n      note_sections = DAT_001278b0;\n      symbol_table_flag = *(uint *)((long)bfd_handler + 0x44) & 0x42;\n      DAT_001278a8 = index;\n      if (num_sections == 0) {\n        result_var = 0;\n      }\n      else {\n        result_var = 0;\n        section_index = 0;\n        do {\n          error_code = DAT_001279a0;\n          current_section = (long *)note_sections[section_index];\n          section_contents_func = (code *)current_section[4];\n          section_flags = *(uint *)(current_section + 3);\n          section_ptr = (long *)current_section[1];\n          current_section = section_ptr;\n          if (DAT_001279a8 != (undefined8 *)0x0) {\n            aux_info_offset = 0;\n            auxiliary_info = DAT_001279a8;\n            while ((aux_info_offset < error_code && (section_name = (char *)auxiliary_info[5], section_name != (char *)0x0))) {\n              if (section_name != \"\") {\n                comparison_result = strcmp(section_name,(char *)section_ptr);\n                if (comparison_result == 0) {\n                  free(section_name);\n                  temporary_variable = result_var + 1;\n                  auxiliary_info[5] = \"\";\n                  u_var16 = FUN_0011a2e0(auxiliary_info);\n                  temporary_variable = DAT_001278d0;\n                  *(undefined8 *)(index + result_var * 8) = u_var16;\n                  result_long_val = htab_elements(temporary_variable);\n                  if ((result_long_val != 0) || (DAT_001278d8 != (char **)0x0)) goto LAB_001064eb;\n                  goto LAB_00105af8;\n                }\n                auxiliary_info = (undefined8 *)*auxiliary_info;\n              }\n              aux_info_offset = aux_info_offset + 1;\n            }\n          }\n          result_long_val = htab_elements(DAT_001278d0);\n          temporary_variable = result_var;\n          if ((result_long_val != 0) || (DAT_001278d8 != (char **)0x0)) {\n            if (section_ptr != (long *)0x0) {\nLAB_001064eb:\n              if (((*(char *)section_ptr == '_') && (*(char *)((long)section_ptr + 1) == '_')) &&\n                 (error_code = strcmp((char *)((ulong)(*(char *)((long)section_ptr + 2) == '_') +\n                                          (long)section_ptr),\"__gnu_lto_slim\"), error_code == 0)) {\n                temporary_variable = dcgettext(0,\"redefining symbols does not work on LTO-compiled object files\"\n                                   ,5);\n                    \n                FUN_00119dd0(temporary_variable);\n              }\n            }\n            is_relocated = 0;\n            sorted_section_offset_array = section_ptr;\n            result_long_val = htab_find(DAT_001278d0);\n            if (((result_long_val == 0) || (current_section = *(long **)(result_long_val + 8), section_ptr == current_section)) &&\n               (current_section = section_ptr, ppc_var34 = DAT_001278d8, (section_flags & 0x100) != 0)) {\n              for (; ppc_var34 != (char **)0x0; ppc_var34 = (char **)ppc_var34[3]) {\n                error_code = strcmp(*ppc_var34,(char *)section_ptr);\n                if (error_code == 0) {\n                  current_section = (long *)ppc_var34[1];\n                  break;\n                }\n              }\n            }\n            current_section[1] = (long)current_section;\n            error_status = *(char *)current_section;\n            if (error_status != '\\0') goto LAB_00105b11;\nLAB_00106557:\n            section_name = DAT_00127908;\n            if ((DAT_00127988 != '\\0') && (*(char *)(*(long *)(binary + 8) + 0x1c) != '\\0')) {\n              result_long_val = bfd_handler[1];\n              error_status = '\\0';\n              goto LAB_0010668d;\n            }\n            goto joined_r0x00106565;\n          }\nLAB_00105af8:\n          error_status = *(char *)section_ptr;\n          if (error_status == '\\0') goto LAB_00106557;\nLAB_00105b11:\n          section_name = DAT_00127908;\n          result_long_val = bfd_handler[1];\n          if (*(char *)(result_long_val + 0x1c) == error_status) {\n            if (DAT_00127988 == '\\0') {\n              if ((DAT_00127968 == '\\0') ||\n                 ((((section_flags & 0x82) == 0 && (section_contents_func != bfd_map_over_sections)) &&\n                  ((*(byte *)(current_section[4] + 0x25) & 0x10) == 0)))) goto joined_r0x00106565;\nLAB_0010677d:\n              current_section = (long *)((long)current_section + 1);\n              current_section[1] = (long)current_section;\n              goto joined_r0x00106565;\n            }\n            error_status = *(char *)(*(long *)(binary + 8) + 0x1c);\n            if (error_status == '\\0') goto LAB_0010677d;\n            if (DAT_00127908 != (char *)0x0) {\n              current_section = (long *)((long)current_section + 1);\n              current_section[1] = (long)current_section;\n              string_length = strlen((char *)current_section);\n              result_long_val = string_length + 2;\nLAB_001066bc:\n              string_length = strlen(section_name);\n              section_ptr = (long *)xmalloc(string_length + result_long_val);\n              goto LAB_001066d0;\n            }\n            *(char *)current_section = error_status;\n            current_section[1] = (long)current_section;\n            result_var = temporary_variable;\n          }\n          else {\n            if ((DAT_00127988 == '\\0') || (*(char *)(*(long *)(binary + 8) + 0x1c) == '\\0')) {\njoined_r0x00106565:\n              result_var = temporary_variable;\n              if (section_name == (char *)0x0) goto LAB_00105b32;\n              string_length = strlen((char *)current_section);\n              string_length_19 = strlen(section_name);\n              allocated_memory = (long *)xmalloc(string_length_19 + string_length + 1);\n              section_ptr = allocated_memory;\n            }\n            else {\nLAB_0010668d:\n              section_name = DAT_00127908;\n              if ((*(char *)(result_long_val + 0x1c) != '\\0') && (error_status != *(char *)(result_long_val + 0x1c)))\n              goto joined_r0x00106565;\n              string_length = strlen((char *)current_section);\n              result_long_val = string_length + 2;\n              if (section_name != (char *)0x0) goto LAB_001066bc;\n              section_ptr = (long *)xmalloc(result_long_val);\nLAB_001066d0:\n              allocated_memory = (long *)((long)section_ptr + 1);\n              *(char *)section_ptr = *(char *)(*(long *)(binary + 8) + 0x1c);\n            }\n            section_name = DAT_00127908;\n            if (DAT_00127908 != (char *)0x0) {\n              strcpy((char *)allocated_memory,DAT_00127908);\n              string_length = strlen(section_name);\n              allocated_memory = (long *)((long)allocated_memory + string_length);\n            }\n            strcpy((char *)allocated_memory,(char *)current_section);\n            current_section[1] = (long)section_ptr;\n            current_section = section_ptr;\n            result_var = temporary_variable;\n          }\nLAB_00105b32:\n          if (DAT_00127a2c == 7) goto LAB_001067a8;\n          if (((section_flags & 0x20) == 0) &&\n             (((section_flags & 0x100) == 0 ||\n              ((*(byte *)(**(long **)(current_section[4] + 0xf0) + 0x18) & 0x20) == 0)))) {\n            if (((symbol_table_flag == 0) &&\n                (((section_flags & 0x82) != 0 || ((*(byte *)(current_section[4] + 0x25) & 0x10) != 0)))) ||\n               (error_code = bfd_decode_symclass(current_section), error_code == 0x49)) {\nLAB_00105be2:\n              if (DAT_001279ca == '\\0') {\n                result_long_val = htab_find();\n                if (result_long_val == 0) goto LAB_00105c07;\n              }\n              else {\n                is_relocated = is_relocated & 0xffffffffffffff00;\n                sorted_section_offset_array = current_section;\n                htab_traverse(DAT_001279f8,FUN_0011a170,&unused_stack_variable);\n                if (has_error == '\\0') goto LAB_00105c07;\n              }\n            }\n            else if ((((section_flags & 0x82) == 0) && (section_contents_func != bfd_map_over_sections)) &&\n                    ((*(byte *)(current_section[4] + 0x25) & 0x10) == 0)) {\n              if ((section_flags & 4) == 0) {\n                if (((*(int *)(bfd_handler[1] + 8) != 2) ||\n                    (result_long_val = *(long *)(current_section[4] + 0xd0), result_long_val == 0)) ||\n                   (*(long *)(result_long_val + 0x40) == 0)) {\n                  if ((DAT_00127a2c == 3) || (DAT_00127a28 == 2)) goto LAB_001067a8;\n                  if (DAT_00127a28 == 1) {\n                    error_status = bfd_is_local_label(bfd_handler);\n                    goto joined_r0x00106a11;\n                  }\n                }\n                goto LAB_00105be2;\n              }\n              error_status = DAT_00127980;\n              if (1 < DAT_00127a2c - 2U) {\njoined_r0x00106a11:\n                if (error_status == '\\0') goto LAB_00105be2;\n              }\n            }\n            else if (DAT_00127a2c != 3) goto LAB_00105be2;\n            goto LAB_001067a8;\n          }\n          if (DAT_001279ca == '\\0') {\n            result_long_val = htab_find();\n            if (result_long_val != 0) {\nLAB_0010687f:\n              temporary_variable = dcgettext(0,\"not stripping symbol `%s\\' because it is named in a relocation\",\n                                 5);\n              FUN_00119ed0(temporary_variable);\n              DAT_00127a20 = 1;\n            }\n          }\n          else {\n            is_relocated = is_relocated & 0xffffffffffffff00;\n            sorted_section_offset_array = current_section;\n            htab_traverse(DAT_001279f8,FUN_0011a170,&unused_stack_variable);\n            if (has_error != '\\0') goto LAB_0010687f;\n          }\n          if ((section_flags & 0x20) == 0) {\nLAB_00105c07:\n            if (DAT_001279ca != '\\0') {\n              is_relocated = is_relocated & 0xffffffffffffff00;\n              sorted_section_offset_array = current_section;\n              htab_traverse(DAT_001279f0,FUN_0011a170,&unused_stack_variable);\n              if (has_error != '\\0') goto LAB_001067a8;\n              goto LAB_00105c2c;\n            }\n            result_long_val = htab_find();\n            if (result_long_val == 0) goto LAB_00105c2c;\nLAB_001067a8:\n            if ((DAT_00127a18 != '\\0') && ((section_flags & 0x4000) != 0)) goto LAB_00105c2c;\n            if (DAT_001279ca == '\\0') {\n              result_long_val = htab_find();\n              if (result_long_val != 0) goto LAB_00105c2c;\n            }\n            else {\n              is_relocated = is_relocated & 0xffffffffffffff00;\n              sorted_section_offset_array = current_section;\n              htab_traverse(DAT_00127a08,FUN_0011a170,&unused_stack_variable);\n              if (has_error != '\\0') goto LAB_00105c2c;\n            }\n          }\n          else {\nLAB_00105c2c:\n            error_status = FUN_001159d0(current_section[4]);\n            if (error_status == '\\0') {\n              if (((section_flags & 0x800002) == 0) && (section_contents_func != bfd_map_over_sections)) {\nLAB_00105c5f:\n                if ((section_flags & 0x82) != 0) {\n                  error_status = FUN_00115d70(current_section);\n                  if ((error_status == '\\0') &&\n                     ((result_long_val = htab_elements(DAT_001279d8), result_long_val == 0 ||\n                      (error_status = FUN_00115d70(current_section), error_status != '\\0')))) {\n                    if (((((DAT_00127938 == '\\0') ||\n                          (aux_info_flags = *(uint *)(current_section + 3), (aux_info_flags & 0x200000) != 0)) ||\n                         (result_long_val = *current_section, result_long_val == 0)) ||\n                        ((*(int *)(*(long *)(result_long_val + 8) + 8) != 5 ||\n                         (*(long *)(result_long_val + 0x110) == 0)))) ||\n                       (1 < (*(byte *)((long)current_section + 0x49) & 3) - 1)) goto joined_r0x00106920;\n                  }\n                  else {\n                    aux_info_flags = *(uint *)(current_section + 3);\n                  }\n                  *(uint *)(current_section + 3) = aux_info_flags & 0xffffff7d | 1;\n                }\njoined_r0x00106920:\n                if (((section_flags & 1) != 0) && (error_status = FUN_00115d70(current_section), error_status != '\\0')) {\n                  *(uint *)(current_section + 3) = *(uint *)(current_section + 3) & 0xfffffffe | 2;\n                }\n              }\n              else {\n                if ((DAT_001279c8 != '\\0') || (error_status = FUN_00115d70(current_section), error_status != '\\0')) {\n                  *(uint *)(current_section + 3) = *(uint *)(current_section + 3) & 0xff7ffffd | 0x80;\n                }\n                if (section_contents_func != bfd_map_over_sections) goto LAB_00105c5f;\n              }\n              *(long **)(index + result_var * 8) = current_section;\n              result_var = result_var + 1;\n            }\n          }\n          section_index = section_index + 1;\n        } while (num_sections != section_index);\n      }\n      if (DAT_001279a8 != (undefined8 *)0x0) {\n        auxiliary_info = DAT_001279a8;\n        error_code = DAT_001279a0;\n        for (result_long_val = 0; result_long_val < error_code; result_long_val = result_long_val + 1) {\n          section_name = (char *)auxiliary_info[5];\n          if (section_name == (char *)0x0) {\n            length_23 = result_var * 8;\n            result_var = result_var + 1;\n            temporary_variable = FUN_0011a2e0(auxiliary_info,binary);\n            *(undefined8 *)(index + length_23) = temporary_variable;\n            error_code = DAT_001279a0;\n          }\n          else if (section_name != \"\") {\n            temporary_variable = dcgettext(0,\"\\'before=%s\\' not found\",5);\n                    \n            FUN_00119dd0(temporary_variable,section_name);\n          }\n          auxiliary_info = (undefined8 *)*auxiliary_info;\n        }\n      }\n      has_debug_information = DAT_00127980 == '\\0';\n      *(undefined8 *)(index + result_var * 8) = 0;\n      if ((has_debug_information) || (symbol_table == (undefined4 *)0x0)) {\nLAB_00105cfa:\n        num_sections = result_var & 0xffffffff;\n        goto LAB_00105710;\n      }\n      error_code = *(int *)(*(undefined8 **)(binary + 8) + 1);\n      if ((error_code == 5) || (error_code == 2)) {\n        parameter_33 = (void *)0x0;\n        error_status = FUN_0011378f(binary,symbol_table,&stack0x000000c0,&stack0x00000110,&stack0x000000e0,\n                             &unused_stack_variable);\n        if (error_status != '\\0') {\n          index = bfd_make_section_with_flags(binary,\".stab\",0x2108);\n          result_long_val = bfd_make_section_with_flags(binary,\".stabstr\",0x2108);\n          if ((((index == 0) || (result_long_val == 0)) ||\n              (error_status = bfd_set_section_size(index,stab_section_size), error_status == '\\0')) ||\n             (error_status = bfd_set_section_size(result_long_val,sorted_section_offset_array), error_status == '\\0')) {\n            section_name = \"can\\'t create debugging section\";\n          }\n          else {\n            *(undefined4 *)(index + 0x7c) = 2;\n            *(undefined4 *)(result_long_val + 0x7c) = 0;\n            error_status = bfd_set_section_contents(binary,index,section_contents,0,stab_section_size);\n            if ((error_status != '\\0') &&\n               (error_status = bfd_set_section_contents(binary,result_long_val,parameter_33,0,sorted_section_offset_array), error_status != '\\0')\n               ) {\n              free(symbol_table);\n              goto LAB_00105cfa;\n            }\n            section_name = \"can\\'t set debugging section contents\";\n          }\n          temporary_variable = dcgettext(0,section_name,5);\n          FUN_001126c0(0,binary,0,temporary_variable);\n          free(parameter_33);\n          free(symbol_table);\n          goto LAB_00105d96;\n        }\n      }\n      else {\n        temporary_variable = **(undefined8 **)(binary + 8);\n        u_var16 = dcgettext(0,\"don\\'t know how to write debugging information for %s\",5);\n        FUN_001126c0(0,binary,0,u_var16,temporary_variable);\n      }\n      free(symbol_table);\n    }\n    else {\nLAB_00105a07:\n      bfd_set_error(0);\n      bfd_map_over_sections(bfd_handler,FUN_00116030,DAT_001278b0);\n      error_code = bfd_get_error();\n      if (error_code == 0) goto LAB_00105a3b;\n    }\nLAB_00105d96:\n    DAT_00127a20 = 1;\n  }\n  else {\n    if ((DAT_00127a2c - 3U < 4) || ((DAT_00127a28 != 0 || (DAT_00127938 != '\\0'))))\n    goto LAB_00105a07;\n    index = htab_elements(DAT_001279f8);\n    if (((index != 0) ||\n        ((((index = htab_elements(DAT_00127a08), index != 0 ||\n           (index = htab_elements(DAT_001279e8), index != 0)) ||\n          (index = htab_elements(DAT_001279e0), index != 0)) ||\n         ((index = htab_elements(DAT_001279d8), index != 0 ||\n          (index = htab_elements(DAT_001279d0), index != 0)))))) ||\n       ((((index = htab_elements(DAT_001278d0), index != 0 ||\n          ((DAT_00127908 != (char *)0x0 || (DAT_001278b8 != '\\0')))) || (DAT_00127a19 != '\\0')) ||\n        ((((DAT_00127980 != '\\0' || (DAT_00127988 != '\\0')) || (DAT_00127968 != '\\0')) ||\n         (((DAT_001278d8 != (char **)0x0 || (DAT_001279c8 != '\\0')) || (DAT_001279a0 != 0))))))))\n    goto LAB_001059fe;\nLAB_00105710:\n    bfd_set_symtab(binary,DAT_001278a8,num_sections & 0xffffffff);\n    bfd_map_over_sections(bfd_handler,FUN_00115dc0,binary);\n    bfd_map_over_sections(bfd_handler,FUN_00116110,binary);\n    for (auxiliary_info = DAT_001279c0; section_ptr = DAT_001279b8, auxiliary_info != (undefined8 *)0x0;\n        auxiliary_info = (undefined8 *)*auxiliary_info) {\n      error_status = bfd_set_section_contents(binary,auxiliary_info[5],auxiliary_info[4],0,auxiliary_info[3]);\n      if (error_status == '\\0') {\n        FUN_001126c0(0,binary,auxiliary_info[5],0);\n        return 0;\n      }\n    }\n    for (; section_ptr != (undefined8 *)0x0; section_ptr = (undefined8 *)*section_ptr) {\n      temporary_variable = *(undefined8 *)(section_ptr[5] + 0x60);\n      error_status = bfd_set_section_contents(binary,temporary_variable,section_ptr[4],0,section_ptr[3]);\n      if (error_status == '\\0') {\n        FUN_001126c0(0,binary,temporary_variable,0);\n        return 0;\n      }\n    }\n    if (merged_notes == (long *)0x0) {\n      if ((DAT_00127a00 != '\\0') && (_DAT_00127a24 == 0)) {\n        temporary_variable = *bfd_handler;\n        u_var16 = dcgettext(0,\"%s: Could not find any mergeable note sections\",5);\n        FUN_00119ed0(u_var16,temporary_variable);\n      }\n    }\n    else {\n      note_sections = (long *)0x0;\n      for (auxiliary_info = *(undefined8 **)(binary + 0x90); auxiliary_info != (undefined8 *)0x0;\n          auxiliary_info = (undefined8 *)auxiliary_info[1]) {\n        if (((DAT_00127a00 != '\\0') && (*(int *)(*(long *)(binary + 8) + 8) == 5)) &&\n           ((*(int *)(auxiliary_info[0x1a] + 4) == 7 &&\n            (error_status = FUN_00113fb0(*auxiliary_info,\".gnu.build.attributes\"), error_status != '\\0')))) {\n          if (note_sections == (long *)0x0) {\n            note_sections = merged_notes;\n          }\n          current_section = merged_notes;\n          if (*(undefined8 **)(*note_sections + 0x60) == auxiliary_info) {\nLAB_0010625f:\n            section_name = \"error: failed to merge notes\";\n            if (note_sections[1] != 0) {\n              error_status = bfd_set_section_contents(binary,auxiliary_info,note_sections[1],0,note_sections[2]);\n              if (error_status == '\\0') {\n                temporary_variable = dcgettext(0,\"error: failed to copy merged notes into output\",5);\n                FUN_001126c0(0,binary,auxiliary_info,temporary_variable);\n                return 0;\n              }\n              note_sections = (long *)note_sections[3];\n              goto LAB_001061be;\n            }\n          }\n          else {\n            do {\n              note_sections = current_section;\n              if (*(undefined8 **)(*current_section + 0x60) == auxiliary_info) goto LAB_0010625f;\n              note_sections = (long *)current_section[3];\n              current_section = note_sections;\n            } while (note_sections != (long *)0x0);\n            section_name = \"error: failed to locate merged notes\";\n          }\n          temporary_variable = dcgettext(0,section_name,5);\n          FUN_001126c0(0,binary,auxiliary_info,temporary_variable);\n        }\nLAB_001061be:\n      }\n      do {\n        note_sections = (long *)merged_notes[3];\n        free((void *)merged_notes[1]);\n        free(merged_notes);\n        merged_notes = note_sections;\n      } while (note_sections != (long *)0x0);\n    }\n    if ((DAT_00127a10 == 0) ||\n       (error_status = bfd_fill_in_gnu_debuglink_section(binary,debug_filename), index = DAT_00127a10,\n       error_status != '\\0')) {\n      if (gap_buffer != (undefined *)0x0) {\n        if (0x2000 < gap_size) {\n          gap_size = 0x2000;\n        }\n        index = 0;\n        ptr = (undefined *)xmalloc(gap_size);\n        undefined_var = DAT_00127979;\n        string_buffer = ptr;\n        for (gap_size = gap_size & 0xffffffff; gap_size != 0; gap_size = gap_size - 1) {\n          *string_buffer = undefined_var;\n          string_buffer = string_buffer + (ulong)boolean_flag * -2 + 1;\n        }\n        for (; (uint)index < struct_param._4_4_; index = index + 1) {\n          result_var = *(ulong *)(gap_buffer + index * 8);\n          if (result_var != 0) {\n            result_long_val = *(long *)(*section_sizes + 0x40) - result_var;\n            do {\n              temporary_variable = 0x2000;\n              if (result_var < 0x2001) {\n                temporary_variable = result_var;\n              }\n              error_status = bfd_set_section_contents(binary,*section_sizes,ptr,result_long_val,temporary_variable);\n              if (error_status == '\\0') {\n                FUN_001126c0(0,binary,*section_sizes,0);\n                free(ptr);\n                return 0;\n              }\n              result_long_val = result_long_val + temporary_variable;\n              result_var = result_var - temporary_variable;\n            } while (result_var != 0);\n          }\n          section_sizes = section_sizes + 1;\n        }\n        free(ptr);\n        free(gap_buffer);\n      }\n      result = (**(code **)(*(long *)(binary + 8) + 0x140))(bfd_handler);\n      if ((char)result != '\\0') {\n        if (DAT_00127910 == 0) {\n          return result;\n        }\n        error_status = bfd_alt_mach_code(binary,DAT_00127910 & 0xffffffff);\n        result_var = DAT_00127910;\n        if (error_status == '\\0') {\n          temporary_variable = dcgettext(0,\"this target does not support %lu alternative machine codes\",5);\n          FUN_00119ed0(temporary_variable,result_var);\n          if (*(int *)(*(long *)(binary + 8) + 8) == 5) {\n            temporary_variable = dcgettext(0,\"treating that number as an absolute e_machine value instead\",5);\n            FUN_00119ed0(temporary_variable);\n            *(short *)(*(long *)(binary + 0x110) + 0x3a) = (short)DAT_00127910;\n            return result;\n          }\n          temporary_variable = dcgettext(0,\"ignoring the alternative value\",5);\n          FUN_00119ed0(temporary_variable);\n          return result;\n        }\n        return result;\n      }\n      temporary_variable = dcgettext(0,\"error copying private BFD data\",5);\n      FUN_001126c0(0,binary,0,temporary_variable);\n    }\n    else {\n      temporary_variable = dcgettext(0,\"cannot fill debug link section `%s\\'\",5);\n      FUN_001126c0(0,binary,0,temporary_variable,index);\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "improve_decompiled_code_0010554f",
            "entrypoint": "0x0010554f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010554f": "improve_decompiled_code_0010554f",
                "__dest": "allocated_memory",
                "__ptr": "ptr",
                "__ptr_00": "temp_pointer",
                "__ptr_01": "temp_pointer",
                "__ptr_02": "symbol_table",
                "__s": "char_var3",
                "_param_15": "symbol_table",
                "_param_41": "is_relocated",
                "_param_9": "section_index",
                "_stderr": "error_stream",
                "bVar2": "byte_value",
                "bVar38": "has_debug_information",
                "bVar39": "boolean_flag",
                "bfd_coff_get_auxent": "bfd_coff_get_aux_entry",
                "bfd_coff_get_syment": "get_coff_syment",
                "bfd_errmsg": "bfd_error_message",
                "bfd_make_section_with_flags": "bfd_create_section",
                "cVar7": "error_status",
                "cVar8": "c_var8",
                "concat": "concatenate_strings",
                "dcgettext": "get_translation",
                "fprintf": "print_formatted",
                "free": "deallocate_memory",
                "iVar10": "error_code",
                "iVar11": "comparison_result",
                "iVar27": "aux_info_offset",
                "in_R10": "merged_notes",
                "in_stack_00000068": "struct_param",
                "in_stack_000000d8": "temp_struct",
                "in_stack_000000f8": "note_data",
                "lVar14": "index",
                "lVar15": "current_element",
                "lVar23": "length_23",
                "lVar37": "result_long_val",
                "param_1": "param_7",
                "param_12": "gap_size",
                "param_13": "param_30",
                "param_14": "gap_buffer",
                "param_15": "symbol_table_flag",
                "param_17": "section_sizes",
                "param_2": "output_file",
                "param_21": "debug_filename",
                "param_23": "output_file",
                "param_24": "var24",
                "param_26": "current_section_size",
                "param_3": "parameter_3",
                "param_30": "section_contents",
                "param_31": "offset",
                "param_32": "section_index",
                "param_34": "debug_link_size",
                "param_36": "is_label",
                "param_37": "section_padding",
                "param_38": "stab_section_size",
                "param_39": "machine_code",
                "param_4": "parameter_4",
                "param_40": "sorted_section_offset_array",
                "param_41": "has_error",
                "param_42": "function_name",
                "param_43": "strip",
                "param_44": "strip_debug_notes",
                "param_7": "binary",
                "param_8": "num_sections",
                "param_9": "special_case",
                "pcVar22": "temp_string_pc_var22",
                "pcVar3": "section_contents_func",
                "pcVar31": "section_name",
                "plVar1": "param_17",
                "plVar15": "current_section",
                "plVar2": "param_40",
                "plVar20": "section_ptr",
                "plVar25": "current_section",
                "plVar28": "note_sections",
                "ppcVar34": "ppc_var34",
                "ppuVar36": "stab_sections",
                "puVar1": "flags",
                "puVar2": "file_content",
                "puVar26": "auxiliary_info",
                "puVar3": "section_content",
                "puVar30": "size_ptr",
                "puVar32": "symbol",
                "puVar33": "string_buffer",
                "puVar36": "temp_pointer",
                "puVar4": "section_ptr",
                "pvVar35": "temp_void_ptr",
                "qsort": "quick_sort",
                "sVar18": "string_length",
                "sVar19": "string_length_19",
                "stack0x00000140": "unused_stack_variable",
                "strcmp": "compare_strings",
                "strcpy": "copy_string",
                "uVar12": "section_flags",
                "uVar13": "aux_info_flags",
                "uVar16": "u_var16",
                "uVar17": "temporary_variable",
                "uVar21": "temporary_variable",
                "uVar24": "temporary_variable",
                "uVar26": "loop_variable",
                "uVar29": "result_var",
                "uVar4": "num_bytes",
                "uVar5": "undefined_var",
                "uVar6": "flags",
                "uVar9": "result",
                "unaff_R14": "bfd_handler",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105828": {
            "additional_data": {
                "FUN_00105828": {
                    "check_architecture": 4,
                    "check_architecture_format": 1,
                    "check_file_arch": 1,
                    "check_file_architecture": 1,
                    "check_file_format": 1,
                    "check_input_file_architecture": 1,
                    "check_recognized_input_format": 1,
                    "identify_architecture": 2,
                    "identify_file_architecture": 1,
                    "recognize_file_format": 2,
                    "recognize_file_format_architecture": 1,
                    "recognize_format_of_file": 1,
                    "recognize_format_of_input_file": 1,
                    "recognize_input_file_architecture": 1,
                    "recognize_input_file_format": 11,
                    "recognize_input_format": 1
                },
                "FUN_001125fa": {
                    "extract_file_name": 1,
                    "extract_input_file_name": 1,
                    "get_input_file": 1,
                    "get_input_file_name": 4,
                    "get_input_filename": 1,
                    "identify_input_file": 1,
                    "parse_input_file": 1
                },
                "FUN_00119ed0": {
                    "display_error_message": 1,
                    "print_error": 1,
                    "print_error_message": 6,
                    "report_error": 1
                },
                "bfd_get_arch": {
                    "get_architecture": 1,
                    "get_architecture_id": 1
                },
                "bfd_get_mach": {
                    "get_machine": 1,
                    "get_machine_id": 1
                },
                "bfd_printable_arch_mach": {
                    "get_printable_arch_machine": 2
                },
                "dcgettext": {
                    "get_error_message": 2,
                    "get_localized_message": 1,
                    "get_message": 1,
                    "get_translated_message": 1,
                    "translate": 2,
                    "translate_error_message": 1,
                    "translate_text": 2
                },
                "iVar1": {
                    "arch": 1,
                    "arch_result": 2,
                    "arch_type": 1,
                    "architecture": 16,
                    "architecture_code": 1,
                    "architecture_id": 2,
                    "architecture_type": 1,
                    "file_arch": 1,
                    "file_format": 1
                },
                "param_1": {
                    "error_message_line1": 1,
                    "input_file_name": 1,
                    "message": 1
                },
                "param_2": {
                    "arg1": 1,
                    "error_message_line2": 1
                },
                "param_3": {
                    "arg2": 1
                },
                "param_4": {
                    "arg3": 1
                },
                "uVar2": {
                    "arch": 4,
                    "arch_code": 1,
                    "architecture": 4,
                    "file_mach": 1,
                    "mach": 2,
                    "mach_code": 1,
                    "machine": 12,
                    "machine_id": 1,
                    "machine_type": 3
                },
                "uVar3": {
                    "arch": 1,
                    "arch_and_mach": 1,
                    "arch_mach": 5,
                    "arch_machine_representation": 1,
                    "arch_type": 1,
                    "architecture_string": 1,
                    "format": 1,
                    "input_file": 8,
                    "input_file_arch": 1,
                    "input_file_format": 2,
                    "input_format": 3,
                    "machine": 3,
                    "output_arch": 1,
                    "printable_arch": 1
                },
                "uVar4": {
                    "error_message": 26,
                    "error_msg": 3,
                    "error_string": 1
                }
            },
            "called": [
                "dcgettext",
                "bfd_get_mach",
                "bfd_printable_arch_mach",
                "FUN_00119ed0",
                "FUN_001125fa",
                "bfd_get_arch"
            ],
            "calling": [
                "FUN_00107880"
            ],
            "code": "\nundefined8 recognize_format_of_input_file_00105828(void)\n\n{\n  int architecture;\n  undefined4 machine;\n  undefined8 input_file;\n  undefined8 error_message;\n  \n  architecture = bfd_get_arch();\n  if (architecture == 0) {\n    input_file = FUN_001125fa();\n    error_message = dcgettext(0,\"Unable to recognise the format of the input file `%s\\'\",5);\n    FUN_00119ed0(error_message,input_file);\n  }\n  else {\n    input_file = bfd_get_mach();\n    machine = bfd_get_arch();\n    input_file = bfd_printable_arch_mach(machine,input_file);\n    error_message = dcgettext(0,\"Output file cannot represent architecture `%s\\'\",5);\n    FUN_00119ed0(error_message,input_file);\n  }\n  return 0;\n}\n\n",
            "current_name": "recognize_format_of_input_file_00105828",
            "entrypoint": "0x00105828",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105828": "recognize_format_of_input_file_00105828",
                "bfd_get_arch": "get_architecture",
                "bfd_get_mach": "get_machine_id",
                "bfd_printable_arch_mach": "get_printable_arch_machine",
                "dcgettext": "translate_text",
                "iVar1": "architecture",
                "uVar2": "machine",
                "uVar3": "input_file",
                "uVar4": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107880": {
            "called": [
                "FUN_00114190",
                "FUN_00105828",
                "free",
                "bfd_get_arch",
                "bfd_create_gnu_debuglink_section",
                "FUN_001163d0",
                "FUN_00115f30",
                "FUN_00119ed0",
                "strerror",
                "bfd_get_full_section_contents",
                "bfd_make_section_with_flags",
                "dcgettext",
                "bfd_map_over_sections",
                "FUN_00115530",
                "FUN_001126c0",
                "FUN_0010554f",
                "bfd_set_section_size",
                "FUN_0010551d",
                "bfd_set_format",
                "FUN_00113fb0",
                "fwrite",
                "fopen",
                "bfd_malloc_and_get_section",
                "fclose",
                "__errno_location",
                "bfd_get_section_by_name",
                "xmalloc"
            ],
            "calling": [
                "FUN_001152b6"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x001062da) */\n/* WARNING: Removing unreachable block (ram,0x001062e7) */\n/* WARNING: Removing unreachable block (ram,0x001062eb) */\n/* WARNING: Removing unreachable block (ram,0x00106314) */\n/* WARNING: Removing unreachable block (ram,0x00106316) */\n/* WARNING: Removing unreachable block (ram,0x00106323) */\n/* WARNING: Removing unreachable block (ram,0x00106331) */\n/* WARNING: Removing unreachable block (ram,0x0010633b) */\n/* WARNING: Removing unreachable block (ram,0x00106354) */\n/* WARNING: Removing unreachable block (ram,0x00106358) */\n/* WARNING: Removing unreachable block (ram,0x001075c4) */\n/* WARNING: Removing unreachable block (ram,0x0010636d) */\n/* WARNING: Removing unreachable block (ram,0x00106375) */\n/* WARNING: Removing unreachable block (ram,0x00106490) */\n/* WARNING: Type propagation algorithm not settling */\n\n\nulong FUNC_00107880(void)\n\n{\n  uint *puVar1;\n  byte bVar2;\n  undefined *puVar3;\n  long *plVar4;\n  code *pcVar5;\n  long *plVar6;\n  ulong uVar7;\n  ulong uVar8;\n  char *__s;\n  char cVar9;\n  char cVar10;\n  uint uVar11;\n  int iVar12;\n  uint uVar13;\n  undefined4 uVar14;\n  int iVar15;\n  long *plVar16;\n  long lVar17;\n  undefined8 uVar18;\n  undefined8 uVar19;\n  size_t sVar20;\n  size_t sVar21;\n  char *pcVar22;\n  void *__ptr;\n  void *__ptr_00;\n  ulong uVar23;\n  long lVar24;\n  ulong uVar25;\n  long in_RAX;\n  int *piVar26;\n  long lVar27;\n  ulong uVar28;\n  FILE *__s_00;\n  long **pplVar29;\n  long **__ptr_01;\n  char *pcVar30;\n  undefined8 *puVar31;\n  ulong uVar32;\n  int iVar33;\n  long **pplVar34;\n  char *pcVar35;\n  undefined4 *puVar36;\n  undefined8 *puVar37;\n  char **ppcVar38;\n  void *pvVar39;\n  undefined8 *unaff_R14;\n  undefined **ppuVar40;\n  bool bVar41;\n  byte bVar42;\n  long param_7;\n  ulong param_8;\n  char param_9;\n  undefined4 *param_10;\n  char *pcStack0000000000000038;\n  uint uStack0000000000000048;\n  int param_11;\n  long param_12;\n  long lStack0000000000000088;\n  char *pcStack0000000000000090;\n  long lStack00000000000000a0;\n  long *in_stack_000000c0;\n  ulong in_stack_000000c8;\n  long in_stack_000000d0;\n  long in_stack_000000d8;\n  void *in_stack_000000e0;\n  long in_stack_000000f0;\n  undefined8 in_stack_000000f8;\n  byte bStack0000000000000100;\n  byte bStack0000000000000101;\n  undefined8 in_stack_00000110;\n  ushort in_stack_00000118;\n  char *param_13;\n  char cStack0000000000000148;\n  char *in_stack_00000150;\n  undefined uStack0000000000000158;\n  short sStack000000000000015a;\n  \n  bVar42 = 0;\n  cVar10 = (**(code **)(*(long *)(param_7 + 8) + 0x2a0))\n                     (param_7,**(undefined4 **)(in_RAX + 0x380),0);\n  if (cVar10 == '\\0') {\n    if ((*(byte *)(unaff_R14 + 9) & 0x40) != 0) {\n      iVar12 = bfd_get_arch();\n      if (iVar12 == 0) {\n        uVar19 = FUN_001125fa();\n        uVar18 = dcgettext(0,\"Unable to recognise the format of the input file `%s\\'\",5);\n        FUN_00119ed0(uVar18,uVar19);\n        return 0;\n      }\n      uVar19 = bfd_get_mach();\n      uVar14 = bfd_get_arch();\n      uVar19 = bfd_printable_arch_mach(uVar14,uVar19);\n      uVar18 = dcgettext(0,\"Output file cannot represent architecture `%s\\'\",5);\n      FUN_00119ed0(uVar18,uVar19);\n      return 0;\n    }\n    iVar12 = bfd_get_arch();\n    iVar33 = bfd_get_arch(param_7);\n    if (iVar12 != iVar33) {\n      uVar28 = FUN_00105828();\n      return uVar28;\n    }\n  }\n  cVar10 = bfd_set_format(param_7,*(byte *)(unaff_R14 + 9) & 7);\n  if (cVar10 == '\\0') {\nLAB_00107a82:\n    FUN_001126c0(0);\n    return 0;\n  }\n  if ((*(int *)(*(undefined8 **)(param_7 + 8) + 1) == 2) &&\n     (cVar10 = FUN_00113fb0(**(undefined8 **)(param_7 + 8),&DAT_0011b503), cVar10 != '\\0')) {\n    lVar27 = *(long *)(param_7 + 0x110);\n    if ((*(int *)((undefined8 *)unaff_R14[1] + 1) == 2) &&\n       (cVar10 = FUN_00113fb0(*(undefined8 *)unaff_R14[1],&DAT_0011b503), cVar10 != '\\0')) {\n      lVar17 = unaff_R14[0x22];\n      bVar41 = DAT_001279cb == '\\0';\n      puVar31 = (undefined8 *)(lVar17 + 200);\n      puVar37 = (undefined8 *)(lVar27 + 200);\n      for (lVar24 = 0x32; lVar24 != 0; lVar24 = lVar24 + -1) {\n        *puVar37 = *puVar31;\n        puVar31 = puVar31 + (ulong)bVar42 * -2 + 1;\n        puVar37 = puVar37 + (ulong)bVar42 * -2 + 1;\n      }\n      if (bVar41) {\n        *(undefined4 *)(lVar27 + 0x2a4) = 0xffffffff;\n      }\n      else {\n        *(int *)(lVar27 + 0x2a4) = (int)*(undefined8 *)(lVar17 + 0xa8);\n      }\n    }\n    uVar28 = DAT_001264a8;\n    if (DAT_001264a8 == 0xffffffffffffffff) {\n      DAT_001264a8 = 0x200;\n      uVar28 = 0x200;\n    }\n    else {\n      *(int *)(lVar27 + 0x10c) = (int)DAT_001264a8;\n    }\n    if (DAT_00126498 != -1) {\n      *(long *)(lVar27 + 0x148) = DAT_00126498;\n    }\n    if (DAT_001264a0 != -1) {\n      *(long *)(lVar27 + 0x148) = DAT_001264a0;\n    }\n    if (DAT_00126490 != -1) {\n      *(long *)(lVar27 + 0x100) = DAT_00126490;\n    }\n    uVar23 = DAT_00126488;\n    if (DAT_00126488 == 0xffffffffffffffff) {\n      DAT_00126488 = 0x1000;\n      uVar23 = 0x1000;\n    }\n    else {\n      *(int *)(lVar27 + 0x108) = (int)DAT_00126488;\n    }\n    if (DAT_00126478 != -1) {\n      *(long *)(lVar27 + 0x138) = DAT_00126478;\n    }\n    if (DAT_00126480 != -1) {\n      *(long *)(lVar27 + 0x138) = DAT_00126480;\n    }\n    if (DAT_00126474 != -1) {\n      *(short *)(lVar27 + 300) = DAT_00126474;\n    }\n    if (DAT_00126472 != -1) {\n      *(short *)(lVar27 + 0x118) = DAT_00126472;\n    }\n    if (DAT_00126470 != -1) {\n      *(short *)(lVar27 + 0x11a) = DAT_00126470;\n    }\n    if (uVar23 < uVar28) {\n      uVar19 = dcgettext(0,\"warning: file alignment (0x%lx) > section alignment (0x%lx)\",5);\n      FUN_00119ed0(uVar19,uVar28,uVar23);\n    }\n  }\n  plVar6 = DAT_001278b0;\n  free(DAT_001278b0);\n  if (plVar6 == DAT_001278a8) {\n    DAT_001278b0 = (long *)0x0;\n    DAT_001278a8 = (long *)0x0;\n    lVar27 = (**(code **)(unaff_R14[1] + 0x1f8))();\n  }\n  else {\n    free(DAT_001278a8);\n    DAT_001278b0 = (long *)0x0;\n    DAT_001278a8 = (long *)0x0;\n    lVar27 = (**(code **)(unaff_R14[1] + 0x1f8))();\n  }\n  if (lVar27 < 0) goto LAB_00107a82;\n  DAT_001278a8 = (long *)xmalloc();\n  DAT_001278b0 = DAT_001278a8;\n  param_8 = (**(code **)(unaff_R14[1] + 0x200))();\n  if ((long)param_8 < 0) goto LAB_00107a82;\n  if (param_8 == 0) {\n    free(DAT_001278b0);\n    DAT_001278b0 = (long *)0x0;\n    DAT_001278a8 = (long *)0x0;\n  }\n  bfd_map_over_sections();\n  puVar31 = DAT_001279c0;\n  if ((DAT_001278ec == '\\0') &&\n     (cVar10 = (**(code **)(*(long *)(param_7 + 8) + 0x168))(), puVar31 = DAT_001279c0,\n     cVar10 == '\\0')) {\n    DAT_00127a20 = 1;\n    dcgettext(0,\"error in private header data\",5);\n    FUN_001126c0(0);\n    puVar31 = DAT_001279c0;\n  }\n  for (; puVar37 = DAT_001279b8, puVar31 != (undefined8 *)0x0; puVar31 = (undefined8 *)*puVar31) {\n    uVar11 = 0x128;\n    lVar27 = FUN_00114190(puVar31[1],0,0x80);\n    if (lVar27 != 0) {\n      uVar11 = FUN_00115f30(*(uint *)(lVar27 + 0x28) | 0x100,param_7,puVar31[1]);\n    }\n    lVar27 = bfd_get_section_by_name(param_7,puVar31[1]);\n    if (lVar27 != 0) {\n      uVar19 = puVar31[1];\n      uVar18 = dcgettext(0,\"can\\'t add section \\'%s\\'\",5);\n      FUN_001126c0(0,param_7,0,uVar18,uVar19);\n      return 0;\n    }\n    lVar27 = bfd_make_section_with_flags(param_7,puVar31[1],uVar11 | 0x100000);\n    puVar31[5] = lVar27;\n    if (lVar27 == 0) {\n      uVar19 = puVar31[1];\n      uVar18 = dcgettext(0,\"can\\'t create section `%s\\'\",5);\n      FUN_001126c0(0,param_7,0,uVar18,uVar19);\n      return 0;\n    }\n    cVar10 = bfd_set_section_size();\n    if (cVar10 == '\\0') {\n      FUN_001126c0(0,param_7,puVar31[5],0);\n      return 0;\n    }\n    lVar27 = FUN_00114190(puVar31[1],0,0x18);\n    if (lVar27 != 0) {\n      uVar19 = *(undefined8 *)(lVar27 + 0x18);\n      lVar27 = puVar31[5];\n      *(byte *)(lVar27 + 0x28) = *(byte *)(lVar27 + 0x28) | 1;\n      *(undefined8 *)(lVar27 + 0x30) = uVar19;\n      *(undefined8 *)(lVar27 + 0x38) = uVar19;\n    }\n    lVar27 = FUN_00114190(puVar31[1],0,0x60);\n    if (lVar27 != 0) {\n      lVar17 = puVar31[5];\n      *(undefined8 *)(lVar17 + 0x38) = *(undefined8 *)(lVar27 + 0x20);\n      if (0x3e < *(uint *)(lVar17 + 0x7c)) {\n        FUN_001126c0(0,param_7,lVar17,0);\n        return 0;\n      }\n    }\n  }\n  for (; puVar37 != (undefined8 *)0x0; puVar37 = (undefined8 *)*puVar37) {\n    lVar27 = bfd_get_section_by_name();\n    puVar37[5] = lVar27;\n    if (lVar27 == 0) {\n      uVar19 = puVar37[1];\n      uVar18 = dcgettext(0,\"error: %s not found, can\\'t be updated\",5);\n      FUN_00119ed0(uVar18,uVar19);\n      return 0;\n    }\n    uVar19 = *(undefined8 *)(lVar27 + 0x60);\n    cVar10 = bfd_set_section_size(uVar19);\n    if (cVar10 == '\\0') {\n      FUN_001126c0(0,param_7,uVar19,0);\n      return 0;\n    }\n  }\n  puVar31 = DAT_001279b0;\n  if (DAT_00127a00 == '\\0') {\n    __ptr_01 = (long **)0x0;\n  }\n  else {\n    pplVar34 = (long **)unaff_R14[0x12];\n    __ptr_01 = pplVar34;\n    if (pplVar34 != (long **)0x0) {\n      __ptr_01 = (long **)0x0;\nLAB_001151ab:\n      if (DAT_00127a00 != '\\0') goto LAB_00115187;\n      for (plVar6 = pplVar34[1]; puVar31 = DAT_001279b0, plVar6 != (long *)0x0;\n          plVar6 = (long *)plVar6[1]) {\n      }\n    }\n  }\njoined_r0x001151c7:\n  for (; puVar31 != (undefined8 *)0x0; puVar31 = (undefined8 *)*puVar31) {\n    lVar27 = bfd_get_section_by_name();\n    if (lVar27 == 0) {\n      dcgettext(0,\"can\\'t dump section \\'%s\\' - it does not exist\",5);\n      FUN_001126c0(0);\n    }\n    else if ((*(byte *)(lVar27 + 0x25) & 1) == 0) {\n      dcgettext(0,\"can\\'t dump section - it has no contents\",5);\n      FUN_001126c0(0);\n    }\n    else {\n      sVar20 = *(size_t *)(lVar27 + 0x40);\n      __s_00 = fopen((char *)puVar31[2],\"w\");\n      if (__s_00 == (FILE *)0x0) {\n        dcgettext(0,\"could not open section dump file\",5);\n        FUN_001126c0(puVar31[2],0,0);\n      }\n      else {\n        cVar10 = bfd_malloc_and_get_section();\n        if (cVar10 == '\\0') {\n          dcgettext(0,\"could not retrieve section contents\",5);\n          FUN_001126c0(0);\n        }\n        else if ((sVar20 != 0) && (sVar21 = fwrite(param_13,1,sVar20,__s_00), sVar21 != sVar20)) {\n          piVar26 = __errno_location();\n          pcVar35 = strerror(*piVar26);\n          uVar19 = puVar31[2];\n          uVar18 = dcgettext(0,\"error writing section contents to %s (error: %s)\",5);\n          FUN_00119ed0(uVar18,uVar19,pcVar35);\n          free(param_13);\n          fclose(__s_00);\n          return 0;\n        }\n        fclose(__s_00);\n        free(param_13);\n      }\n    }\n  }\n  if (DAT_00127a10 == 0) {\nLAB_0010790a:\n    param_12 = 0;\n  }\n  else {\n    lVar27 = bfd_get_section_by_name(param_7,\".gnu_debuglink\");\n    if (lVar27 != 0) {\n      uVar19 = dcgettext(0,\"%s: debuglink section already exists\",5);\n      FUN_00119ed0(uVar19);\n      DAT_00127a10 = 0;\n      goto LAB_0010790a;\n    }\n    param_12 = bfd_create_gnu_debuglink_section(param_7);\n    lVar27 = DAT_00127a10;\n    if (param_12 == 0) {\n      uVar19 = dcgettext(0,\"cannot create debug link section `%s\\'\",5);\n      FUN_001126c0(0,param_7,0,uVar19,lVar27);\n      return 0;\n    }\n    if (*(int *)(*(long *)(param_7 + 8) + 8) == 2) {\n      uVar23 = 0;\n      for (uVar28 = *(ulong *)(param_7 + 0x90); uVar28 != 0; uVar28 = *(ulong *)(uVar28 + 8)) {\n        uVar25 = *(ulong *)(uVar28 + 0x30);\n        uVar32 = uVar23;\n        uVar7 = uVar28;\n        uVar8 = uVar23;\n        if (uVar25 != 0) {\n          while ((uVar32 = uVar7, uVar8 != 0 &&\n                 (uVar32 = uVar28, uVar25 <= *(ulong *)(uVar23 + 0x30)))) {\n            uVar28 = *(ulong *)(uVar28 + 8);\n            if (uVar28 == 0) goto LAB_00107db8;\n            uVar25 = *(ulong *)(uVar28 + 0x30);\n            uVar7 = uVar23;\n            uVar8 = uVar25;\n          }\n        }\n        uVar23 = uVar32;\n      }\nLAB_00107db8:\n      if (uVar23 == 0) {\n        uVar28 = 0x1000;\n      }\n      else {\n        uVar23 = *(long *)(uVar23 + 0x40) + *(long *)(uVar23 + 0x30);\n        uVar28 = 0xffffffffffffffff;\n        if (uVar23 < 0xfffffffffffff001) {\n          uVar28 = uVar23 + 0xfff & 0xfffffffffffff000;\n        }\n      }\n      *(byte *)(param_12 + 0x28) = *(byte *)(param_12 + 0x28) | 1;\n      *(ulong *)(param_12 + 0x30) = uVar28;\n      *(ulong *)(param_12 + 0x38) = uVar28;\n    }\n  }\n  plVar6 = DAT_001278b0;\n  param_11 = *(int *)(param_7 + 0xa0);\n  if (param_11 != 0) {\n    uVar28 = FUN_0010554f();\n    return uVar28;\n  }\n  if (DAT_00127980 == '\\0') {\nLAB_00105588:\n    param_10 = (undefined4 *)0x0;\n  }\n  else {\n    ppuVar40 = &PTR_s__stab_00125c60;\n    param_10 = (undefined4 *)xmalloc(0x60);\n    puVar36 = param_10;\n    for (lVar27 = 0x18; lVar27 != 0; lVar27 = lVar27 + -1) {\n      *puVar36 = 0;\n      puVar36 = puVar36 + (ulong)bVar42 * -2 + 1;\n    }\n    pcStack0000000000000038 = (char *)0x0;\n    do {\n      puVar3 = *ppuVar40;\n      lVar27 = bfd_get_section_by_name();\n      lVar17 = bfd_get_section_by_name();\n      if ((lVar27 != 0) && (lVar17 != 0)) {\n        lVar27 = *(long *)(lVar27 + 0x40);\n        __ptr = (void *)xmalloc(lVar27);\n        cVar10 = bfd_get_section_contents();\n        if (cVar10 == '\\0') {\n          uVar14 = bfd_get_error();\n          bfd_errmsg(uVar14);\n          fprintf(_stderr,\"%s: %s: %s\\n\",*unaff_R14);\n          free(pcStack0000000000000038);\n          free(__ptr);\n        }\n        else {\n          uVar28 = *(ulong *)(lVar17 + 0x40);\n          __ptr_00 = (void *)xmalloc(uVar28 + 1);\n          param_9 = bfd_get_section_contents();\n          if (param_9 == '\\0') {\n            uVar14 = bfd_get_error();\n            bfd_errmsg(uVar14);\n            fprintf(_stderr,\"%s: %s: %s\\n\",*unaff_R14);\n            free(pcStack0000000000000038);\n          }\n          else {\n            *(undefined *)((long)__ptr_00 + uVar28) = 0;\n            if ((pcStack0000000000000038 != (char *)0x0) ||\n               (pcStack0000000000000038 = (char *)FUN_00112894(),\n               pcStack0000000000000038 != (char *)0x0)) {\n              lStack00000000000000a0 = 0;\n              lStack0000000000000088 = 0;\n              for (pvVar39 = __ptr; pvVar39 <= (void *)((long)__ptr + lVar27 + -0xc);\n                  pvVar39 = (void *)((long)pvVar39 + 0xc)) {\n                uVar23 = (**(code **)(unaff_R14[1] + 0x40))(pvVar39);\n                bVar2 = *(byte *)((long)pvVar39 + 4);\n                uVar14 = (**(code **)(unaff_R14[1] + 0x58))((long)pvVar39 + 6);\n                lVar17 = (**(code **)(unaff_R14[1] + 0x40))((long)pvVar39 + 8);\n                if (bVar2 == 0) {\n                  lStack0000000000000088 = lStack00000000000000a0;\n                  lStack00000000000000a0 = lStack00000000000000a0 + lVar17;\n                }\n                else {\n                  uVar25 = (uVar23 & 0xffffffff) + lStack0000000000000088;\n                  if (uVar25 < uVar28) {\n                    pcVar35 = (char *)((long)__ptr_00 + uVar25);\n                    pcStack0000000000000090 = (char *)0x0;\n                    while( true ) {\n                      sVar20 = strlen(pcVar35);\n                      if (((sVar20 == 0) || (pcVar30 = pcVar35 + (sVar20 - 1), *pcVar30 != '\\\\')) ||\n                         ((ulong)((long)__ptr + lVar27) < (long)pvVar39 + 0x10U)) goto LAB_001077fb;\n                      *pcVar30 = '\\0';\n                      pvVar39 = (void *)((long)pvVar39 + 0xc);\n                      iVar12 = (**(code **)(unaff_R14[1] + 0x40))(pvVar39);\n                      uVar23 = (ulong)(uint)(iVar12 + (int)lStack0000000000000088);\n                      if (uVar28 <= uVar23) break;\n                      pcVar35 = (char *)concat(pcVar35,(long)__ptr_00 + uVar23,0);\n                      *pcVar30 = '\\\\';\n                      free(pcStack0000000000000090);\n                      pcStack0000000000000090 = pcVar35;\n                    }\n                    uVar19 = *unaff_R14;\n                    pcVar30 = (char *)dcgettext(0,\"%s: %s: stab entry %ld is corrupt\\n\",5);\n                    fprintf(_stderr,pcVar30,uVar19,puVar3,((long)pvVar39 - (long)__ptr) / 0xc);\nLAB_001077fb:\n                    FUN_001088ae((ulong)bVar2,uVar14,lVar17,pcVar35);\n                    cVar10 = FUN_0011173a(param_10,pcStack0000000000000038,bVar2);\n                    if (cVar10 == '\\0') {\n                      FUN_00108b3e();\n                      FUN_00108863();\n                      free(pcStack0000000000000090);\n                      free(pcStack0000000000000038);\n                      free(__ptr);\n                      free(__ptr_00);\n                      goto LAB_00105981;\n                    }\n                  }\n                  else {\n                    uVar19 = *unaff_R14;\n                    pcVar35 = (char *)dcgettext(0,\n                                                \"%s: %s: stab entry %ld is corrupt, strx = 0x%x, type = %d\\n\"\n                                                ,5);\n                    fprintf(_stderr,pcVar35,uVar19,puVar3,((long)pvVar39 - (long)__ptr) / 0xc,\n                            uVar23 & 0xffffffff,(ulong)bVar2,((long)pvVar39 - (long)__ptr) % 0xc);\n                  }\n                }\n              }\n              FUN_00108863();\n              free(__ptr);\n              goto LAB_001058eb;\n            }\n          }\n          free(__ptr_00);\n          free(__ptr);\n        }\n        goto LAB_00105981;\n      }\nLAB_001058eb:\n      ppuVar40 = ppuVar40 + 2;\n    } while (ppuVar40 != (undefined **)&DAT_00125c90);\n    if ((pcStack0000000000000038 != (char *)0x0) && (cVar10 = FUN_0010c892(), cVar10 == '\\0')) {\nLAB_00105981:\n      free(param_10);\n      goto LAB_00105588;\n    }\n    if (*(int *)(unaff_R14[1] + 8) == 1) {\n      lVar27 = 0;\n      for (plVar16 = plVar6; plVar16 < plVar6 + param_8; plVar16 = plVar16 + 1) {\n        (**(code **)(unaff_R14[1] + 0x218))();\n        if (cStack0000000000000148 == '-') {\n          if (((lVar27 == 0) && (lVar27 = FUN_00112894(), lVar27 == 0)) ||\n             ((in_stack_00000150 == (char *)0x0 || (*in_stack_00000150 == '\\0'))))\n          goto LAB_00105981;\n          pcVar35 = (char *)0x0;\n          pcVar30 = in_stack_00000150;\n          while (((*pcVar30 != '\\0' && (sVar20 = strlen(pcVar30), pcVar30[sVar20 - 1] == '\\\\')) &&\n                 (plVar16 + 1 < plVar6 + param_8))) {\n            pcVar22 = (char *)xstrdup(pcVar30);\n            sVar20 = strlen(pcVar22);\n            pcVar22[sVar20 - 1] = '\\0';\n            pcVar30 = (char *)concat(pcVar22,*(undefined8 *)(plVar16[1] + 8),0);\n            free(pcVar22);\n            free(pcVar35);\n            plVar16 = plVar16 + 1;\n            pcVar35 = pcVar30;\n          }\n          FUN_001088ae(uStack0000000000000158,(int)sStack000000000000015a,param_13,pcVar30);\n          param_9 = FUN_0011173a(param_10,lVar27,uStack0000000000000158);\n          if (param_9 == '\\0') {\n            FUN_00108b3e();\n            FUN_00108863();\n            goto LAB_00105981;\n          }\n        }\n      }\n      FUN_00108863();\n      if ((lVar27 != 0) && (cVar10 = FUN_0010c892(), cVar10 == '\\0')) goto LAB_00105981;\n    }\n    if (param_9 == '\\0') {\n      if ((*(int *)(unaff_R14[1] + 8) == 2) && (param_8 != 0)) {\n        param_13 = (char *)0x0;\n        in_stack_000000c0 = plVar6;\n        in_stack_000000d0 = 0;\n        in_stack_000000d8 = 0;\n        puVar31 = (undefined8 *)&stack0x00000148;\n        for (lVar27 = 0x22; lVar27 != 0; lVar27 = lVar27 + -1) {\n          *(undefined4 *)puVar31 = 0;\n          puVar31 = (undefined8 *)((long)puVar31 + (ulong)bVar42 * -8 + 4);\n        }\n        cVar10 = '\\0';\n        _uStack0000000000000048 = (int *)0x0;\n        pcStack0000000000000038 = (char *)0x0;\n        pcStack0000000000000090 = (char *)0xffffffffffffffff;\n        in_stack_000000c8 = param_8;\nswitchD_00106e1a_caseD_68:\n        do {\n          while( true ) {\n            if ((long)param_8 <= in_stack_000000d0) goto LAB_00105590;\n            lVar27 = plVar6[in_stack_000000d0];\n            cVar9 = bfd_coff_get_syment();\n            lVar17 = in_stack_000000d8;\n            if (cVar9 == '\\0') {\n              uVar14 = bfd_get_error();\n              bfd_errmsg(uVar14);\n              pcVar35 = \"bfd_coff_get_syment failed: %s\";\n              goto LAB_00105968;\n            }\n            pcVar35 = *(char **)(lVar27 + 8);\n            in_stack_000000d0 = in_stack_000000d0 + 1;\n            in_stack_000000d8 = (ulong)bStack0000000000000101 + 1 + in_stack_000000d8;\n            if ((bStack0000000000000101 != 0) && (cVar9 = bfd_coff_get_auxent(), cVar9 == '\\0')) {\n              uVar14 = bfd_get_error();\n              bfd_errmsg(uVar14);\n              pcVar35 = \"bfd_coff_get_auxent failed: %s\";\n              goto LAB_00105968;\n            }\n            if (pcStack0000000000000090 != (char *)lVar17) break;\n            if (bStack0000000000000100 != 0x67) {\n              cVar9 = FUN_0010bbd3(param_10);\n              if (cVar9 != '\\0') break;\n              goto LAB_00105981;\n            }\nswitchD_00106e1a_caseD_67:\n            pcStack0000000000000090 = (char *)in_stack_000000f0;\n            cVar9 = FUN_0010bbd3(param_10);\n            if (cVar9 == '\\0') goto LAB_00105981;\n          }\n          if ((char)bStack0000000000000100 < '\\0') {\n            if (bStack0000000000000100 == 0xff) goto switchD_00106e1a_caseD_68;\nLAB_0010700a:\n            lVar24 = FUN_0010dac0();\n            if (lVar24 == 0) break;\n            cVar9 = FUN_00112a33(&stack0x00000140,lVar27,lVar17);\n          }\n          else {\n            if (bStack0000000000000100 < 100) {\n              switch(bStack0000000000000100) {\n              case 3:\n                if (in_stack_000000f8._6_2_ == 0) goto switchD_00106e1a_caseD_68;\n              case 2:\nswitchD_00106e1a_caseD_7f:\n                if ((ulong)((uint)in_stack_000000f8._6_2_ & *(uint *)(unaff_R14[0x22] + 0x40)) !=\n                    2L << ((byte)*(undefined4 *)(unaff_R14[0x22] + 0x3c) & 0x3f)) goto LAB_0010700a;\n                _uStack0000000000000048 = (int *)(**(code **)(unaff_R14[1] + 0x238))();\n                pcStack0000000000000038 = pcVar35;\n                goto switchD_00106e1a_caseD_68;\n              default:\n                goto LAB_0010700a;\n              case 5:\n              case 7:\n              case 0xe:\n                goto switchD_00106e1a_caseD_68;\n              }\n            }\n            switch(bStack0000000000000100) {\n            case 100:\n              iVar12 = strcmp(pcVar35,\".bb\");\n              if (iVar12 == 0) {\n                cVar9 = FUN_0010be88(param_10);\n              }\n              else {\n                iVar12 = strcmp(pcVar35,\".eb\");\n                if (iVar12 != 0) goto switchD_00106e1a_caseD_68;\n                cVar9 = FUN_0010bf20(param_10);\n              }\n              break;\n            case 0x65:\n              iVar12 = strcmp(pcVar35,\".bf\");\n              if (iVar12 == 0) {\n                if (pcStack0000000000000038 != (char *)0x0) {\n                  lVar17 = FUN_0010dac0();\n                  if ((lVar17 == 0) || (cVar10 = FUN_0010bc80(param_10), cVar10 == '\\0'))\n                  goto LAB_00105981;\n                  if (_uStack0000000000000048 != (int *)0x0) {\n                    iVar12 = 0;\n                    if (bStack0000000000000101 != 0) {\n                      iVar12 = in_stack_00000118 - 1;\n                    }\n                    lVar27 = *(long *)(*(long *)(lVar27 + 0x20) + 0x30);\n                    while( true ) {\n                      iVar33 = _uStack0000000000000048[4];\n                      if (iVar33 == 0) break;\n                      cVar9 = FUN_0010bf86(param_10,iVar12 + iVar33,\n                                           *(long *)(_uStack0000000000000048 + 6) + lVar27);\n                      _uStack0000000000000048 = _uStack0000000000000048 + 4;\n                      if (cVar9 == '\\0') goto LAB_00105981;\n                    }\n                  }\n                  _uStack0000000000000048 = (int *)0x0;\n                  pcStack0000000000000038 = (char *)0x0;\n                  goto switchD_00106e1a_caseD_68;\n                }\n                pcVar35 = \"%ld: .bf without preceding function\";\n              }\n              else {\n                iVar12 = strcmp(pcVar35,\".ef\");\n                if (iVar12 != 0) goto switchD_00106e1a_caseD_68;\n                if (cVar10 != '\\0') {\n                  cVar10 = FUN_0010be1a(param_10);\n                  if (cVar10 == '\\0') goto LAB_00105981;\n                  cVar10 = '\\0';\n                  goto switchD_00106e1a_caseD_68;\n                }\n                pcVar35 = \"%ld: unexpected .ef\\n\";\n              }\n              uVar19 = dcgettext(0,pcVar35,5);\n              FUN_00119ed0(uVar19);\n              goto LAB_00105981;\n            default:\n              goto LAB_0010700a;\n            case 0x67:\n              goto switchD_00106e1a_caseD_67;\n            case 0x68:\n            case 0x69:\n            case 0x6a:\n              goto switchD_00106e1a_caseD_68;\n            case 0x7f:\n              goto switchD_00106e1a_caseD_7f;\n            }\n          }\n        } while (cVar9 != '\\0');\n      }\n      else {\n        pcVar35 = \"%s: no recognized debugging information\";\nLAB_00105968:\n        uVar19 = dcgettext(0,pcVar35,5);\n        FUN_00119ed0(uVar19);\n      }\n      goto LAB_00105981;\n    }\n  }\nLAB_00105590:\n  if (((*(uint *)(param_7 + 0x44) & 0x42) != 0) && ((*(uint *)(param_7 + 0x44) & 1) == 0)) {\n    if ((*(char *)(*(long *)(param_7 + 8) + 0x20) == '\\0') && (DAT_00127939 == '\\0')) {\n      if (param_8 != 0) {\n        plVar6 = DAT_001278b0 + param_8;\n        plVar16 = DAT_001278b0;\n        do {\n          uVar11 = *(uint *)(*plVar16 + 0x18);\n          if ((uVar11 & 0x1000000) != 0) {\n            *(uint *)(*plVar16 + 0x18) = uVar11 & 0xfeffffff;\n          }\n          plVar16 = plVar16 + 1;\n        } while (plVar6 != plVar16);\n      }\n    }\n    else {\n      for (lVar27 = *(long *)(param_7 + 0x90); lVar27 != 0; lVar27 = *(long *)(lVar27 + 8)) {\n        if (*(long *)(lVar27 + 0xe8) != 0) {\n          puVar1 = (uint *)(*(long *)(lVar27 + 0xe8) + 0x18);\n          *puVar1 = *puVar1 | 0x1000000;\n        }\n      }\n    }\n  }\n  if ((DAT_00127a2c == 2) || (DAT_00127a2c == 7)) {\nLAB_001059fe:\n    if (DAT_00127a2c == 7) {\nLAB_00105a3b:\n      plVar16 = (long *)xmalloc();\n      plVar6 = DAT_001278b0;\n      uStack0000000000000048 = *(uint *)((long)unaff_R14 + 0x44) & 0x42;\n      DAT_001278a8 = plVar16;\n      if (param_8 == 0) {\n        uVar28 = 0;\n      }\n      else {\n        uVar28 = 0;\n        _param_9 = 0;\n        do {\n          iVar12 = DAT_001279a0;\n          plVar4 = (long *)plVar6[_param_9];\n          pcVar5 = (code *)plVar4[4];\n          uVar11 = *(uint *)(plVar4 + 3);\n          pcVar35 = (char *)plVar4[1];\n          pcVar30 = pcVar35;\n          if (DAT_001279a8 != (undefined8 *)0x0) {\n            iVar33 = 0;\n            puVar31 = DAT_001279a8;\n            while ((iVar33 < iVar12 && (pcVar22 = (char *)puVar31[5], pcVar22 != (char *)0x0))) {\n              if (pcVar22 != \"\") {\n                iVar15 = strcmp(pcVar22,pcVar35);\n                if (iVar15 == 0) {\n                  free(pcVar22);\n                  uVar23 = uVar28 + 1;\n                  puVar31[5] = \"\";\n                  lVar27 = FUN_0011a2e0(puVar31);\n                  uVar19 = DAT_001278d0;\n                  plVar16[uVar28] = lVar27;\n                  lVar27 = htab_elements(uVar19);\n                  if ((lVar27 != 0) || (DAT_001278d8 != (char **)0x0)) goto LAB_001064eb;\n                  goto LAB_00105af8;\n                }\n                puVar31 = (undefined8 *)*puVar31;\n              }\n              iVar33 = iVar33 + 1;\n            }\n          }\n          lVar27 = htab_elements(DAT_001278d0);\n          uVar23 = uVar28;\n          if ((lVar27 != 0) || (DAT_001278d8 != (char **)0x0)) {\n            if (pcVar35 != (char *)0x0) {\nLAB_001064eb:\n              if (((*pcVar35 == '_') && (pcVar35[1] == '_')) &&\n                 (iVar12 = strcmp(pcVar35 + (pcVar35[2] == '_'),\"__gnu_lto_slim\"), iVar12 == 0)) {\n                uVar19 = dcgettext(0,\"redefining symbols does not work on LTO-compiled object files\"\n                                   ,5);\n                    \n                FUN_00119dd0(uVar19);\n              }\n            }\n            _cStack0000000000000148 = 0;\n            param_13 = pcVar35;\n            lVar27 = htab_find(DAT_001278d0);\n            if (((lVar27 == 0) || (pcVar30 = *(char **)(lVar27 + 8), pcVar35 == pcVar30)) &&\n               (pcVar30 = pcVar35, ppcVar38 = DAT_001278d8, (uVar11 & 0x100) != 0)) {\n              for (; ppcVar38 != (char **)0x0; ppcVar38 = (char **)ppcVar38[3]) {\n                iVar12 = strcmp(*ppcVar38,pcVar35);\n                if (iVar12 == 0) {\n                  pcVar30 = ppcVar38[1];\n                  break;\n                }\n              }\n            }\n            plVar4[1] = (long)pcVar30;\n            cVar10 = *pcVar30;\n            if (cVar10 != '\\0') goto LAB_00105b11;\nLAB_00106557:\n            pcVar35 = DAT_00127908;\n            if ((DAT_00127988 != '\\0') && (*(char *)(*(long *)(param_7 + 8) + 0x1c) != '\\0')) {\n              lVar27 = unaff_R14[1];\n              cVar10 = '\\0';\n              goto LAB_0010668d;\n            }\n            goto joined_r0x00106565;\n          }\nLAB_00105af8:\n          cVar10 = *pcVar35;\n          if (cVar10 == '\\0') goto LAB_00106557;\nLAB_00105b11:\n          pcVar35 = DAT_00127908;\n          lVar27 = unaff_R14[1];\n          if (*(char *)(lVar27 + 0x1c) == cVar10) {\n            if (DAT_00127988 == '\\0') {\n              if ((DAT_00127968 == '\\0') ||\n                 ((((uVar11 & 0x82) == 0 && (pcVar5 != bfd_map_over_sections)) &&\n                  ((*(byte *)(plVar4[4] + 0x25) & 0x10) == 0)))) goto joined_r0x00106565;\nLAB_0010677d:\n              pcVar30 = pcVar30 + 1;\n              plVar4[1] = (long)pcVar30;\n              goto joined_r0x00106565;\n            }\n            cVar10 = *(char *)(*(long *)(param_7 + 8) + 0x1c);\n            if (cVar10 == '\\0') goto LAB_0010677d;\n            if (DAT_00127908 != (char *)0x0) {\n              pcVar30 = pcVar30 + 1;\n              plVar4[1] = (long)pcVar30;\n              sVar20 = strlen(pcVar30);\n              lVar27 = sVar20 + 2;\nLAB_001066bc:\n              sVar20 = strlen(pcVar35);\n              pcVar35 = (char *)xmalloc(sVar20 + lVar27);\n              goto LAB_001066d0;\n            }\n            *pcVar30 = cVar10;\n            plVar4[1] = (long)pcVar30;\n            uVar28 = uVar23;\n          }\n          else {\n            if ((DAT_00127988 == '\\0') || (*(char *)(*(long *)(param_7 + 8) + 0x1c) == '\\0')) {\njoined_r0x00106565:\n              uVar28 = uVar23;\n              if (pcVar35 == (char *)0x0) goto LAB_00105b32;\n              sVar20 = strlen(pcVar30);\n              sVar21 = strlen(pcVar35);\n              pcVar22 = (char *)xmalloc(sVar21 + sVar20 + 1);\n              pcVar35 = pcVar22;\n            }\n            else {\nLAB_0010668d:\n              pcVar35 = DAT_00127908;\n              if ((*(char *)(lVar27 + 0x1c) != '\\0') && (cVar10 != *(char *)(lVar27 + 0x1c)))\n              goto joined_r0x00106565;\n              sVar20 = strlen(pcVar30);\n              lVar27 = sVar20 + 2;\n              if (pcVar35 != (char *)0x0) goto LAB_001066bc;\n              pcVar35 = (char *)xmalloc(lVar27);\nLAB_001066d0:\n              pcVar22 = pcVar35 + 1;\n              *pcVar35 = *(char *)(*(long *)(param_7 + 8) + 0x1c);\n            }\n            __s = DAT_00127908;\n            if (DAT_00127908 != (char *)0x0) {\n              strcpy(pcVar22,DAT_00127908);\n              sVar20 = strlen(__s);\n              pcVar22 = pcVar22 + sVar20;\n            }\n            strcpy(pcVar22,pcVar30);\n            plVar4[1] = (long)pcVar35;\n            pcVar30 = pcVar35;\n            uVar28 = uVar23;\n          }\nLAB_00105b32:\n          if (DAT_00127a2c == 7) goto LAB_001067a8;\n          if (((uVar11 & 0x20) == 0) &&\n             (((uVar11 & 0x100) == 0 ||\n              ((*(byte *)(**(long **)(plVar4[4] + 0xf0) + 0x18) & 0x20) == 0)))) {\n            if (((uStack0000000000000048 == 0) &&\n                (((uVar11 & 0x82) != 0 || ((*(byte *)(plVar4[4] + 0x25) & 0x10) != 0)))) ||\n               (iVar12 = bfd_decode_symclass(plVar4), iVar12 == 0x49)) {\nLAB_00105be2:\n              if (DAT_001279ca == '\\0') {\n                lVar27 = htab_find();\n                if (lVar27 == 0) goto LAB_00105c07;\n              }\n              else {\n                _cStack0000000000000148 = _cStack0000000000000148 & 0xffffffffffffff00;\n                param_13 = pcVar30;\n                htab_traverse(DAT_001279f8,FUN_0011a170,&stack0x00000140);\n                if (cStack0000000000000148 == '\\0') goto LAB_00105c07;\n              }\n            }\n            else if ((((uVar11 & 0x82) == 0) && (pcVar5 != bfd_map_over_sections)) &&\n                    ((*(byte *)(plVar4[4] + 0x25) & 0x10) == 0)) {\n              if ((uVar11 & 4) == 0) {\n                if (((*(int *)(unaff_R14[1] + 8) != 2) ||\n                    (lVar27 = *(long *)(plVar4[4] + 0xd0), lVar27 == 0)) ||\n                   (*(long *)(lVar27 + 0x40) == 0)) {\n                  if ((DAT_00127a2c == 3) || (DAT_00127a28 == 2)) goto LAB_001067a8;\n                  if (DAT_00127a28 == 1) {\n                    cVar10 = bfd_is_local_label(unaff_R14);\n                    goto joined_r0x00106a11;\n                  }\n                }\n                goto LAB_00105be2;\n              }\n              cVar10 = DAT_00127980;\n              if (1 < DAT_00127a2c - 2U) {\njoined_r0x00106a11:\n                if (cVar10 == '\\0') goto LAB_00105be2;\n              }\n            }\n            else if (DAT_00127a2c != 3) goto LAB_00105be2;\n            goto LAB_001067a8;\n          }\n          if (DAT_001279ca == '\\0') {\n            lVar27 = htab_find();\n            if (lVar27 != 0) {\nLAB_0010687f:\n              uVar19 = dcgettext(0,\"not stripping symbol `%s\\' because it is named in a relocation\",\n                                 5);\n              FUN_00119ed0(uVar19);\n              DAT_00127a20 = 1;\n            }\n          }\n          else {\n            _cStack0000000000000148 = _cStack0000000000000148 & 0xffffffffffffff00;\n            param_13 = pcVar30;\n            htab_traverse(DAT_001279f8,FUN_0011a170,&stack0x00000140);\n            if (cStack0000000000000148 != '\\0') goto LAB_0010687f;\n          }\n          if ((uVar11 & 0x20) == 0) {\nLAB_00105c07:\n            if (DAT_001279ca != '\\0') {\n              _cStack0000000000000148 = _cStack0000000000000148 & 0xffffffffffffff00;\n              param_13 = pcVar30;\n              htab_traverse(DAT_001279f0,FUN_0011a170,&stack0x00000140);\n              if (cStack0000000000000148 != '\\0') goto LAB_001067a8;\n              goto LAB_00105c2c;\n            }\n            lVar27 = htab_find();\n            if (lVar27 == 0) goto LAB_00105c2c;\nLAB_001067a8:\n            if ((DAT_00127a18 != '\\0') && ((uVar11 & 0x4000) != 0)) goto LAB_00105c2c;\n            if (DAT_001279ca == '\\0') {\n              lVar27 = htab_find();\n              if (lVar27 != 0) goto LAB_00105c2c;\n            }\n            else {\n              _cStack0000000000000148 = _cStack0000000000000148 & 0xffffffffffffff00;\n              param_13 = pcVar30;\n              htab_traverse(DAT_00127a08,FUN_0011a170,&stack0x00000140);\n              if (cStack0000000000000148 != '\\0') goto LAB_00105c2c;\n            }\n          }\n          else {\nLAB_00105c2c:\n            cVar10 = FUN_001159d0(plVar4[4]);\n            if (cVar10 == '\\0') {\n              if (((uVar11 & 0x800002) == 0) && (pcVar5 != bfd_map_over_sections)) {\nLAB_00105c5f:\n                if ((uVar11 & 0x82) != 0) {\n                  cVar10 = FUN_00115d70(pcVar30);\n                  if ((cVar10 == '\\0') &&\n                     ((lVar27 = htab_elements(DAT_001279d8), lVar27 == 0 ||\n                      (cVar10 = FUN_00115d70(pcVar30), cVar10 != '\\0')))) {\n                    if (((((DAT_00127938 == '\\0') ||\n                          (uVar13 = *(uint *)(plVar4 + 3), (uVar13 & 0x200000) != 0)) ||\n                         (lVar27 = *plVar4, lVar27 == 0)) ||\n                        ((*(int *)(*(long *)(lVar27 + 8) + 8) != 5 ||\n                         (*(long *)(lVar27 + 0x110) == 0)))) ||\n                       (1 < (*(byte *)((long)plVar4 + 0x49) & 3) - 1)) goto joined_r0x00105ca2;\n                  }\n                  else {\n                    uVar13 = *(uint *)(plVar4 + 3);\n                  }\n                  *(uint *)(plVar4 + 3) = uVar13 & 0xffffff7d | 1;\n                }\njoined_r0x00105ca2:\n                if (((uVar11 & 1) != 0) && (cVar10 = FUN_00115d70(pcVar30), cVar10 != '\\0')) {\n                  *(uint *)(plVar4 + 3) = *(uint *)(plVar4 + 3) & 0xfffffffe | 2;\n                }\n              }\n              else {\n                if ((DAT_001279c8 != '\\0') || (cVar10 = FUN_00115d70(pcVar30), cVar10 != '\\0')) {\n                  *(uint *)(plVar4 + 3) = *(uint *)(plVar4 + 3) & 0xff7ffffd | 0x80;\n                }\n                if (pcVar5 != bfd_map_over_sections) goto LAB_00105c5f;\n              }\n              plVar16[uVar28] = (long)plVar4;\n              uVar28 = uVar28 + 1;\n            }\n          }\n          _param_9 = _param_9 + 1;\n        } while (param_8 != _param_9);\n      }\n      if (DAT_001279a8 != (undefined8 *)0x0) {\n        puVar31 = DAT_001279a8;\n        iVar12 = DAT_001279a0;\n        for (lVar27 = 0; lVar27 < iVar12; lVar27 = lVar27 + 1) {\n          pcVar35 = (char *)puVar31[5];\n          if (pcVar35 == (char *)0x0) {\n            plVar6 = plVar16 + uVar28;\n            uVar28 = uVar28 + 1;\n            lVar17 = FUN_0011a2e0(puVar31,param_7);\n            *plVar6 = lVar17;\n            iVar12 = DAT_001279a0;\n          }\n          else if (pcVar35 != \"\") {\n            uVar19 = dcgettext(0,\"\\'before=%s\\' not found\",5);\n                    \n            FUN_00119dd0(uVar19,pcVar35);\n          }\n          puVar31 = (undefined8 *)*puVar31;\n        }\n      }\n      bVar41 = DAT_00127980 == '\\0';\n      plVar16[uVar28] = 0;\n      if ((bVar41) || (param_10 == (undefined4 *)0x0)) {\nLAB_00105cfa:\n        param_8 = uVar28 & 0xffffffff;\n        goto LAB_00105710;\n      }\n      iVar12 = *(int *)(*(undefined8 **)(param_7 + 8) + 1);\n      if ((iVar12 == 5) || (iVar12 == 2)) {\n        in_stack_000000e0 = (void *)0x0;\n        cVar10 = FUN_0011378f(param_7,param_10,&stack0x000000c0,&stack0x00000110,&stack0x000000e0,\n                              &stack0x00000140);\n        if (cVar10 != '\\0') {\n          lVar27 = bfd_make_section_with_flags(param_7,\".stab\",0x2108);\n          lVar17 = bfd_make_section_with_flags(param_7,\".stabstr\",0x2108);\n          if ((((lVar27 == 0) || (lVar17 == 0)) ||\n              (cVar10 = bfd_set_section_size(lVar27,in_stack_00000110), cVar10 == '\\0')) ||\n             (cVar10 = bfd_set_section_size(lVar17,param_13), cVar10 == '\\0')) {\n            pcVar35 = \"can\\'t create debugging section\";\n          }\n          else {\n            *(undefined4 *)(lVar27 + 0x7c) = 2;\n            *(undefined4 *)(lVar17 + 0x7c) = 0;\n            cVar10 = bfd_set_section_contents(param_7,lVar27,in_stack_000000c0,0,in_stack_00000110);\n            if ((cVar10 != '\\0') &&\n               (cVar10 = bfd_set_section_contents(param_7,lVar17,in_stack_000000e0,0,param_13),\n               cVar10 != '\\0')) {\n              free(param_10);\n              goto LAB_00105cfa;\n            }\n            pcVar35 = \"can\\'t set debugging section contents\";\n          }\n          uVar19 = dcgettext(0,pcVar35,5);\n          FUN_001126c0(0,param_7,0,uVar19);\n          free(in_stack_000000e0);\n          free(param_10);\n          goto LAB_00105d96;\n        }\n      }\n      else {\n        uVar19 = **(undefined8 **)(param_7 + 8);\n        uVar18 = dcgettext(0,\"don\\'t know how to write debugging information for %s\",5);\n        FUN_001126c0(0,param_7,0,uVar18,uVar19);\n      }\n      free(param_10);\n    }\n    else {\nLAB_00105a07:\n      bfd_set_error(0);\n      bfd_map_over_sections();\n      iVar12 = bfd_get_error();\n      if (iVar12 == 0) goto LAB_00105a3b;\n    }\nLAB_00105d96:\n    DAT_00127a20 = 1;\n  }\n  else {\n    if ((DAT_00127a2c - 3U < 4) || ((DAT_00127a28 != 0 || (DAT_00127938 != '\\0'))))\n    goto LAB_00105a07;\n    lVar27 = htab_elements(DAT_001279f8);\n    if (((lVar27 != 0) ||\n        (((((((lVar27 = htab_elements(DAT_00127a08), lVar27 != 0 ||\n              (lVar27 = htab_elements(DAT_001279e8), lVar27 != 0)) ||\n             (lVar27 = htab_elements(DAT_001279e0), lVar27 != 0)) ||\n            ((lVar27 = htab_elements(DAT_001279d8), lVar27 != 0 ||\n             (lVar27 = htab_elements(DAT_001279d0), lVar27 != 0)))) ||\n           (lVar27 = htab_elements(DAT_001278d0), lVar27 != 0)) ||\n          (((DAT_00127908 != (char *)0x0 || (DAT_001278b8 != '\\0')) ||\n           ((DAT_00127a19 != '\\0' ||\n            (((DAT_00127980 != '\\0' || (DAT_00127988 != '\\0')) || (DAT_00127968 != '\\0')))))))) ||\n         ((DAT_001278d8 != (char **)0x0 || (DAT_001279c8 != '\\0')))))) || (DAT_001279a0 != 0))\n    goto LAB_001059fe;\nLAB_00105710:\n    bfd_set_symtab(param_7,DAT_001278a8,param_8 & 0xffffffff);\n    bfd_map_over_sections(unaff_R14,FUN_00115dc0,param_7);\n    bfd_map_over_sections(unaff_R14,FUN_00116110,param_7);\n    for (puVar31 = DAT_001279c0; puVar37 = DAT_001279b8, puVar31 != (undefined8 *)0x0;\n        puVar31 = (undefined8 *)*puVar31) {\n      cVar10 = bfd_set_section_contents(param_7,puVar31[5],puVar31[4],0,puVar31[3]);\n      if (cVar10 == '\\0') {\n        FUN_001126c0(0,param_7,puVar31[5],0);\n        return 0;\n      }\n    }\n    for (; puVar37 != (undefined8 *)0x0; puVar37 = (undefined8 *)*puVar37) {\n      uVar19 = *(undefined8 *)(puVar37[5] + 0x60);\n      cVar10 = bfd_set_section_contents(param_7,uVar19,puVar37[4],0,puVar37[3]);\n      if (cVar10 == '\\0') {\n        FUN_001126c0(0,param_7,uVar19,0);\n        return 0;\n      }\n    }\n    if (__ptr_01 == (long **)0x0) {\n      if ((DAT_00127a00 != '\\0') && (_DAT_00127a24 == 0)) {\n        uVar19 = *unaff_R14;\n        uVar18 = dcgettext(0,\"%s: Could not find any mergeable note sections\",5);\n        FUN_00119ed0(uVar18,uVar19);\n      }\n    }\n    else {\n      pplVar34 = (long **)0x0;\n      for (puVar31 = *(undefined8 **)(param_7 + 0x90); puVar31 != (undefined8 *)0x0;\n          puVar31 = (undefined8 *)puVar31[1]) {\n        if (((DAT_00127a00 != '\\0') && (*(int *)(*(long *)(param_7 + 8) + 8) == 5)) &&\n           ((*(int *)(puVar31[0x1a] + 4) == 7 &&\n            (cVar10 = FUN_00113fb0(*puVar31,\".gnu.build.attributes\"), cVar10 != '\\0')))) {\n          if (pplVar34 == (long **)0x0) {\n            pplVar34 = __ptr_01;\n          }\n          pplVar29 = __ptr_01;\n          if ((undefined8 *)(*pplVar34)[0xc] == puVar31) {\nLAB_0010625f:\n            pcVar35 = \"error: failed to merge notes\";\n            if (pplVar34[1] != (long *)0x0) {\n              cVar10 = bfd_set_section_contents(param_7,puVar31,pplVar34[1],0,pplVar34[2]);\n              if (cVar10 == '\\0') {\n                uVar19 = dcgettext(0,\"error: failed to copy merged notes into output\",5);\n                FUN_001126c0(0,param_7,puVar31,uVar19);\n                return 0;\n              }\n              pplVar34 = (long **)pplVar34[3];\n              goto LAB_001061be;\n            }\n          }\n          else {\n            do {\n              pplVar34 = pplVar29;\n              if ((undefined8 *)(*pplVar29)[0xc] == puVar31) goto LAB_0010625f;\n              pplVar34 = (long **)pplVar29[3];\n              pplVar29 = pplVar34;\n            } while (pplVar34 != (long **)0x0);\n            pcVar35 = \"error: failed to locate merged notes\";\n          }\n          uVar19 = dcgettext(0,pcVar35,5);\n          FUN_001126c0(0,param_7,puVar31,uVar19);\n        }\nLAB_001061be:\n      }\n      do {\n        pplVar34 = (long **)__ptr_01[3];\n        free(__ptr_01[1]);\n        free(__ptr_01);\n        __ptr_01 = pplVar34;\n      } while (pplVar34 != (long **)0x0);\n    }\n    if ((DAT_00127a10 == 0) ||\n       (cVar10 = bfd_fill_in_gnu_debuglink_section(param_7,param_12), lVar27 = DAT_00127a10,\n       cVar10 != '\\0')) {\n      uVar11 = (**(code **)(*(long *)(param_7 + 8) + 0x140))(unaff_R14);\n      uVar28 = (ulong)uVar11;\n      if ((char)uVar11 != '\\0') {\n        if (DAT_00127910 == 0) {\n          return uVar28;\n        }\n        cVar10 = bfd_alt_mach_code(param_7,DAT_00127910 & 0xffffffff);\n        uVar23 = DAT_00127910;\n        if (cVar10 == '\\0') {\n          uVar19 = dcgettext(0,\"this target does not support %lu alternative machine codes\",5);\n          FUN_00119ed0(uVar19,uVar23);\n          if (*(int *)(*(long *)(param_7 + 8) + 8) == 5) {\n            uVar19 = dcgettext(0,\"treating that number as an absolute e_machine value instead\",5);\n            FUN_00119ed0(uVar19);\n            *(short *)(*(long *)(param_7 + 0x110) + 0x3a) = (short)DAT_00127910;\n            return uVar28;\n          }\n          uVar19 = dcgettext(0,\"ignoring the alternative value\",5);\n          FUN_00119ed0(uVar19);\n          return uVar28;\n        }\n        return uVar28;\n      }\n      uVar19 = dcgettext(0,\"error copying private BFD data\",5);\n      FUN_001126c0(0,param_7,0,uVar19);\n    }\n    else {\n      uVar19 = dcgettext(0,\"cannot fill debug link section `%s\\'\",5);\n      FUN_001126c0(0,param_7,0,uVar19,lVar27);\n    }\n  }\n  return 0;\nLAB_00115187:\n  if ((((*(int *)(unaff_R14[1] + 8) == 5) && (*(int *)((long)pplVar34[0x1a] + 4) == 7)) &&\n      (cVar10 = FUN_00113fb0(*pplVar34), cVar10 != '\\0')) &&\n     ((pplVar34[0xc] != (long *)0x0 && (plVar6 = pplVar34[8], plVar6 != (long *)0x0)))) {\n    pplVar29 = (long **)xmalloc(0x20);\n    pplVar29[1] = (long *)0x0;\n    cVar10 = bfd_get_full_section_contents();\n    if (cVar10 == '\\0') {\n      dcgettext(0,\"warning: could not load note section\",5);\n      FUN_001126c0(0);\n      free(pplVar29);\n    }\n    else {\n      plVar16 = (long *)FUN_001163d0();\n      pplVar29[2] = plVar16;\n      if ((plVar16 == plVar6) || (cVar10 = bfd_set_section_size(pplVar34[0xc]), cVar10 != '\\0')) {\n        pplVar29[3] = (long *)__ptr_01;\n        *pplVar29 = (long *)pplVar34;\n        __ptr_01 = pplVar29;\n      }\n      else {\n        dcgettext(0,\"warning: failed to set merged notes size\",5);\n        FUN_001126c0(0,param_7,pplVar34);\n        free(pplVar29[1]);\n        free(pplVar29);\n      }\n    }\n  }\n  pplVar34 = (long **)pplVar34[1];\n  puVar31 = DAT_001279b0;\n  if (pplVar34 == (long **)0x0) goto joined_r0x001151c7;\n  goto LAB_001151ab;\n}\n\n",
            "current_name": "FUNC_00107880",
            "entrypoint": "0x00107880",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00107880": "FUNC_00107880"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00107976": {
            "called": [
                "bfd_set_start_address",
                "dcgettext",
                "bfd_get_mach",
                "FUN_001125fa",
                "bfd_get_arch",
                "FUN_001152b6",
                "bfd_set_file_flags",
                "printf"
            ],
            "calling": [
                "FUN_00114e50"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x001062da) */\n/* WARNING: Removing unreachable block (ram,0x001062e7) */\n/* WARNING: Removing unreachable block (ram,0x001062eb) */\n/* WARNING: Removing unreachable block (ram,0x00106314) */\n/* WARNING: Removing unreachable block (ram,0x00106316) */\n/* WARNING: Removing unreachable block (ram,0x00106323) */\n/* WARNING: Removing unreachable block (ram,0x00106331) */\n/* WARNING: Removing unreachable block (ram,0x0010633b) */\n/* WARNING: Removing unreachable block (ram,0x00106354) */\n/* WARNING: Removing unreachable block (ram,0x00106358) */\n/* WARNING: Removing unreachable block (ram,0x001075c4) */\n/* WARNING: Removing unreachable block (ram,0x0010636d) */\n/* WARNING: Removing unreachable block (ram,0x00106375) */\n/* WARNING: Removing unreachable block (ram,0x00106490) */\n/* WARNING: Type propagation algorithm not settling */\n\n\nulong FUNC_00107976(void)\n\n{\n  uint *puVar1;\n  byte bVar2;\n  undefined *puVar3;\n  long *plVar4;\n  code *pcVar5;\n  long *plVar6;\n  ulong uVar7;\n  ulong uVar8;\n  char *__s;\n  char cVar9;\n  char cVar10;\n  uint uVar11;\n  int iVar12;\n  int iVar13;\n  undefined4 uVar14;\n  long *plVar15;\n  long lVar16;\n  undefined8 uVar17;\n  undefined8 uVar18;\n  size_t sVar19;\n  size_t sVar20;\n  char *pcVar21;\n  void *__ptr;\n  void *__ptr_00;\n  ulong uVar22;\n  long lVar23;\n  ulong uVar24;\n  undefined8 *in_RAX;\n  undefined8 uVar25;\n  char *pcVar26;\n  int *piVar27;\n  long lVar28;\n  ulong uVar29;\n  FILE *__s_00;\n  long **pplVar30;\n  uint uVar31;\n  long **__ptr_01;\n  char *pcVar32;\n  undefined8 *puVar33;\n  ulong uVar34;\n  int iVar35;\n  long **pplVar36;\n  long unaff_RBP;\n  undefined4 *puVar37;\n  undefined8 *puVar38;\n  char **ppcVar39;\n  void *pvVar40;\n  undefined8 *unaff_R14;\n  undefined **ppuVar41;\n  bool bVar42;\n  byte bVar43;\n  undefined8 *param_7;\n  ulong param_8;\n  char in_stack_00000018;\n  undefined4 *puStack0000000000000020;\n  char *pcStack0000000000000038;\n  uint uStack0000000000000048;\n  int iStack000000000000006c;\n  long lStack0000000000000078;\n  long lStack0000000000000088;\n  char *pcStack0000000000000090;\n  long lStack00000000000000a0;\n  long *in_stack_000000c0;\n  ulong in_stack_000000c8;\n  long in_stack_000000d0;\n  long in_stack_000000d8;\n  void *in_stack_000000e0;\n  long in_stack_000000f0;\n  undefined8 in_stack_000000f8;\n  byte bStack0000000000000100;\n  byte bStack0000000000000101;\n  undefined8 in_stack_00000110;\n  ushort in_stack_00000118;\n  char *in_stack_00000140;\n  char cStack0000000000000148;\n  char *in_stack_00000150;\n  undefined uStack0000000000000158;\n  short sStack000000000000015a;\n  \n  bVar43 = 0;\n  uVar18 = *in_RAX;\n  uVar17 = *param_7;\n  uVar25 = FUN_001125fa();\n  pcVar26 = (char *)dcgettext(0,\"copy from `%s\\' [%s] to `%s\\' [%s]\\n\",5);\n  printf(pcVar26,uVar25,uVar18,uVar17);\n  if ((*(byte *)(param_7 + 9) & 7) == 3) {\n    iVar13 = bfd_get_arch();\n    uVar14 = bfd_get_mach();\n    if (unaff_RBP != 0) {\n      uVar29 = FUNC_001152b6();\n      return uVar29;\n    }\n    goto LAB_00114f9a;\n  }\n  uVar31 = ~DAT_001278f0 & *(uint *)(param_7[1] + 0x14) &\n           (DAT_001278f4 | *(uint *)((long)unaff_R14 + 0x44));\n  if (DAT_00127a2c == 7) {\n    uVar31 = uVar31 & 0xfffffffe;\n    cVar10 = bfd_set_start_address(param_7);\n  }\n  else {\n    cVar10 = bfd_set_start_address(param_7);\n  }\n  if ((cVar10 == '\\0') || (cVar10 = bfd_set_file_flags(param_7,uVar31), cVar10 == '\\0'))\n  goto LAB_00107a82;\n  iVar13 = bfd_get_arch();\n  uVar14 = bfd_get_mach();\n  if (unaff_RBP == 0) {\nLAB_00114f9a:\n    if (((iVar13 == 0) && (*(int *)(unaff_R14[1] + 8) != 5)) && (*(int *)(param_7[1] + 8) == 5)) {\n      uVar29 = FUNC_00107880();\n      return uVar29;\n    }\n  }\n  else {\n    if (iVar13 == 0) {\n      iVar13 = *(int *)(unaff_RBP + 0xc);\n      uVar14 = *(undefined4 *)(unaff_RBP + 0x10);\n      goto LAB_00114f9a;\n    }\n    uVar18 = FUN_001125fa();\n    uVar17 = dcgettext(0,\"Input file `%s\\' ignores binary architecture parameter.\",5);\n    FUN_00119ed0(uVar17,uVar18);\n  }\n  cVar10 = (**(code **)(param_7[1] + 0x2a0))(param_7,iVar13,uVar14);\n  if (cVar10 == '\\0') {\n    if ((*(byte *)(unaff_R14 + 9) & 0x40) != 0) {\n      iVar13 = bfd_get_arch();\n      if (iVar13 == 0) {\n        uVar18 = FUN_001125fa();\n        uVar17 = dcgettext(0,\"Unable to recognise the format of the input file `%s\\'\",5);\n        FUN_00119ed0(uVar17,uVar18);\n        return 0;\n      }\n      uVar18 = bfd_get_mach();\n      uVar14 = bfd_get_arch();\n      uVar18 = bfd_printable_arch_mach(uVar14,uVar18);\n      uVar17 = dcgettext(0,\"Output file cannot represent architecture `%s\\'\",5);\n      FUN_00119ed0(uVar17,uVar18);\n      return 0;\n    }\n    iVar13 = bfd_get_arch();\n    iVar35 = bfd_get_arch(param_7);\n    if (iVar13 != iVar35) {\n      uVar29 = FUN_00105828();\n      return uVar29;\n    }\n  }\n  cVar10 = bfd_set_format(param_7,*(byte *)(unaff_R14 + 9) & 7);\n  if (cVar10 == '\\0') {\nLAB_00107a82:\n    FUN_001126c0(0);\n    return 0;\n  }\n  if ((*(int *)((undefined8 *)param_7[1] + 1) == 2) &&\n     (cVar10 = FUN_00113fb0(*(undefined8 *)param_7[1],&DAT_0011b503), cVar10 != '\\0')) {\n    lVar28 = param_7[0x22];\n    if ((*(int *)((undefined8 *)unaff_R14[1] + 1) == 2) &&\n       (cVar10 = FUN_00113fb0(*(undefined8 *)unaff_R14[1],&DAT_0011b503), cVar10 != '\\0')) {\n      lVar16 = unaff_R14[0x22];\n      bVar42 = DAT_001279cb == '\\0';\n      puVar33 = (undefined8 *)(lVar16 + 200);\n      puVar38 = (undefined8 *)(lVar28 + 200);\n      for (lVar23 = 0x32; lVar23 != 0; lVar23 = lVar23 + -1) {\n        *puVar38 = *puVar33;\n        puVar33 = puVar33 + (ulong)bVar43 * -2 + 1;\n        puVar38 = puVar38 + (ulong)bVar43 * -2 + 1;\n      }\n      if (bVar42) {\n        *(undefined4 *)(lVar28 + 0x2a4) = 0xffffffff;\n      }\n      else {\n        *(int *)(lVar28 + 0x2a4) = (int)*(undefined8 *)(lVar16 + 0xa8);\n      }\n    }\n    uVar29 = DAT_001264a8;\n    if (DAT_001264a8 == 0xffffffffffffffff) {\n      DAT_001264a8 = 0x200;\n      uVar29 = 0x200;\n    }\n    else {\n      *(int *)(lVar28 + 0x10c) = (int)DAT_001264a8;\n    }\n    if (DAT_00126498 != -1) {\n      *(long *)(lVar28 + 0x148) = DAT_00126498;\n    }\n    if (DAT_001264a0 != -1) {\n      *(long *)(lVar28 + 0x148) = DAT_001264a0;\n    }\n    if (DAT_00126490 != -1) {\n      *(long *)(lVar28 + 0x100) = DAT_00126490;\n    }\n    uVar22 = DAT_00126488;\n    if (DAT_00126488 == 0xffffffffffffffff) {\n      DAT_00126488 = 0x1000;\n      uVar22 = 0x1000;\n    }\n    else {\n      *(int *)(lVar28 + 0x108) = (int)DAT_00126488;\n    }\n    if (DAT_00126478 != -1) {\n      *(long *)(lVar28 + 0x138) = DAT_00126478;\n    }\n    if (DAT_00126480 != -1) {\n      *(long *)(lVar28 + 0x138) = DAT_00126480;\n    }\n    if (DAT_00126474 != -1) {\n      *(short *)(lVar28 + 300) = DAT_00126474;\n    }\n    if (DAT_00126472 != -1) {\n      *(short *)(lVar28 + 0x118) = DAT_00126472;\n    }\n    if (DAT_00126470 != -1) {\n      *(short *)(lVar28 + 0x11a) = DAT_00126470;\n    }\n    if (uVar22 < uVar29) {\n      uVar18 = dcgettext(0,\"warning: file alignment (0x%lx) > section alignment (0x%lx)\",5);\n      FUN_00119ed0(uVar18,uVar29,uVar22);\n    }\n  }\n  plVar6 = DAT_001278b0;\n  free(DAT_001278b0);\n  if (plVar6 == DAT_001278a8) {\n    DAT_001278b0 = (long *)0x0;\n    DAT_001278a8 = (long *)0x0;\n    lVar28 = (**(code **)(unaff_R14[1] + 0x1f8))();\n  }\n  else {\n    free(DAT_001278a8);\n    DAT_001278b0 = (long *)0x0;\n    DAT_001278a8 = (long *)0x0;\n    lVar28 = (**(code **)(unaff_R14[1] + 0x1f8))();\n  }\n  if (lVar28 < 0) goto LAB_00107a82;\n  DAT_001278a8 = (long *)xmalloc();\n  DAT_001278b0 = DAT_001278a8;\n  param_8 = (**(code **)(unaff_R14[1] + 0x200))();\n  if ((long)param_8 < 0) goto LAB_00107a82;\n  if (param_8 == 0) {\n    free(DAT_001278b0);\n    DAT_001278b0 = (long *)0x0;\n    DAT_001278a8 = (long *)0x0;\n  }\n  bfd_map_over_sections();\n  puVar33 = DAT_001279c0;\n  if ((DAT_001278ec == '\\0') &&\n     (cVar10 = (**(code **)(param_7[1] + 0x168))(), puVar33 = DAT_001279c0, cVar10 == '\\0')) {\n    DAT_00127a20 = 1;\n    dcgettext(0,\"error in private header data\",5);\n    FUN_001126c0(0);\n    puVar33 = DAT_001279c0;\n  }\n  for (; puVar38 = DAT_001279b8, puVar33 != (undefined8 *)0x0; puVar33 = (undefined8 *)*puVar33) {\n    uVar31 = 0x128;\n    lVar28 = FUN_00114190(puVar33[1],0,0x80);\n    if (lVar28 != 0) {\n      uVar31 = FUN_00115f30(*(uint *)(lVar28 + 0x28) | 0x100,param_7,puVar33[1]);\n    }\n    lVar28 = bfd_get_section_by_name(param_7,puVar33[1]);\n    if (lVar28 != 0) {\n      uVar18 = puVar33[1];\n      uVar17 = dcgettext(0,\"can\\'t add section \\'%s\\'\",5);\n      FUN_001126c0(0,param_7,0,uVar17,uVar18);\n      return 0;\n    }\n    lVar28 = bfd_make_section_with_flags(param_7,puVar33[1],uVar31 | 0x100000);\n    puVar33[5] = lVar28;\n    if (lVar28 == 0) {\n      uVar18 = puVar33[1];\n      uVar17 = dcgettext(0,\"can\\'t create section `%s\\'\",5);\n      FUN_001126c0(0,param_7,0,uVar17,uVar18);\n      return 0;\n    }\n    cVar10 = bfd_set_section_size();\n    if (cVar10 == '\\0') {\n      FUN_001126c0(0,param_7,puVar33[5],0);\n      return 0;\n    }\n    lVar28 = FUN_00114190(puVar33[1],0,0x18);\n    if (lVar28 != 0) {\n      uVar18 = *(undefined8 *)(lVar28 + 0x18);\n      lVar28 = puVar33[5];\n      *(byte *)(lVar28 + 0x28) = *(byte *)(lVar28 + 0x28) | 1;\n      *(undefined8 *)(lVar28 + 0x30) = uVar18;\n      *(undefined8 *)(lVar28 + 0x38) = uVar18;\n    }\n    lVar28 = FUN_00114190(puVar33[1],0,0x60);\n    if (lVar28 != 0) {\n      lVar16 = puVar33[5];\n      *(undefined8 *)(lVar16 + 0x38) = *(undefined8 *)(lVar28 + 0x20);\n      if (0x3e < *(uint *)(lVar16 + 0x7c)) {\n        FUN_001126c0(0,param_7,lVar16,0);\n        return 0;\n      }\n    }\n  }\n  for (; puVar38 != (undefined8 *)0x0; puVar38 = (undefined8 *)*puVar38) {\n    lVar28 = bfd_get_section_by_name();\n    puVar38[5] = lVar28;\n    if (lVar28 == 0) {\n      uVar18 = puVar38[1];\n      uVar17 = dcgettext(0,\"error: %s not found, can\\'t be updated\",5);\n      FUN_00119ed0(uVar17,uVar18);\n      return 0;\n    }\n    uVar18 = *(undefined8 *)(lVar28 + 0x60);\n    cVar10 = bfd_set_section_size(uVar18);\n    if (cVar10 == '\\0') {\n      FUN_001126c0(0,param_7,uVar18,0);\n      return 0;\n    }\n  }\n  puVar33 = DAT_001279b0;\n  if (DAT_00127a00 == '\\0') {\n    __ptr_01 = (long **)0x0;\n  }\n  else {\n    pplVar36 = (long **)unaff_R14[0x12];\n    __ptr_01 = pplVar36;\n    if (pplVar36 != (long **)0x0) {\n      __ptr_01 = (long **)0x0;\nLAB_001151ab:\n      if (DAT_00127a00 != '\\0') goto LAB_00115187;\n      for (plVar6 = pplVar36[1]; puVar33 = DAT_001279b0, plVar6 != (long *)0x0;\n          plVar6 = (long *)plVar6[1]) {\n      }\n    }\n  }\njoined_r0x001151c7:\n  for (; puVar33 != (undefined8 *)0x0; puVar33 = (undefined8 *)*puVar33) {\n    lVar28 = bfd_get_section_by_name();\n    if (lVar28 == 0) {\n      dcgettext(0,\"can\\'t dump section \\'%s\\' - it does not exist\",5);\n      FUN_001126c0(0);\n    }\n    else if ((*(byte *)(lVar28 + 0x25) & 1) == 0) {\n      dcgettext(0,\"can\\'t dump section - it has no contents\",5);\n      FUN_001126c0(0);\n    }\n    else {\n      sVar19 = *(size_t *)(lVar28 + 0x40);\n      __s_00 = fopen((char *)puVar33[2],\"w\");\n      if (__s_00 == (FILE *)0x0) {\n        dcgettext(0,\"could not open section dump file\",5);\n        FUN_001126c0(puVar33[2],0,0);\n      }\n      else {\n        cVar10 = bfd_malloc_and_get_section();\n        if (cVar10 == '\\0') {\n          dcgettext(0,\"could not retrieve section contents\",5);\n          FUN_001126c0(0);\n        }\n        else if ((sVar19 != 0) &&\n                (sVar20 = fwrite(in_stack_00000140,1,sVar19,__s_00), sVar20 != sVar19)) {\n          piVar27 = __errno_location();\n          pcVar26 = strerror(*piVar27);\n          uVar18 = puVar33[2];\n          uVar17 = dcgettext(0,\"error writing section contents to %s (error: %s)\",5);\n          FUN_00119ed0(uVar17,uVar18,pcVar26);\n          free(in_stack_00000140);\n          fclose(__s_00);\n          return 0;\n        }\n        fclose(__s_00);\n        free(in_stack_00000140);\n      }\n    }\n  }\n  if (DAT_00127a10 == 0) {\nLAB_0010790a:\n    lStack0000000000000078 = 0;\n  }\n  else {\n    lVar28 = bfd_get_section_by_name(param_7,\".gnu_debuglink\");\n    if (lVar28 != 0) {\n      uVar18 = dcgettext(0,\"%s: debuglink section already exists\",5);\n      FUN_00119ed0(uVar18);\n      DAT_00127a10 = 0;\n      goto LAB_0010790a;\n    }\n    lStack0000000000000078 = bfd_create_gnu_debuglink_section(param_7);\n    lVar28 = DAT_00127a10;\n    if (lStack0000000000000078 == 0) {\n      uVar18 = dcgettext(0,\"cannot create debug link section `%s\\'\",5);\n      FUN_001126c0(0,param_7,0,uVar18,lVar28);\n      return 0;\n    }\n    if (*(int *)(param_7[1] + 8) == 2) {\n      uVar22 = 0;\n      for (uVar29 = param_7[0x12]; uVar29 != 0; uVar29 = *(ulong *)(uVar29 + 8)) {\n        uVar24 = *(ulong *)(uVar29 + 0x30);\n        uVar34 = uVar22;\n        uVar7 = uVar29;\n        uVar8 = uVar22;\n        if (uVar24 != 0) {\n          while ((uVar34 = uVar7, uVar8 != 0 &&\n                 (uVar34 = uVar29, uVar24 <= *(ulong *)(uVar22 + 0x30)))) {\n            uVar29 = *(ulong *)(uVar29 + 8);\n            if (uVar29 == 0) goto LAB_00107db8;\n            uVar24 = *(ulong *)(uVar29 + 0x30);\n            uVar7 = uVar22;\n            uVar8 = uVar24;\n          }\n        }\n        uVar22 = uVar34;\n      }\nLAB_00107db8:\n      if (uVar22 == 0) {\n        uVar29 = 0x1000;\n      }\n      else {\n        uVar22 = *(long *)(uVar22 + 0x40) + *(long *)(uVar22 + 0x30);\n        uVar29 = 0xffffffffffffffff;\n        if (uVar22 < 0xfffffffffffff001) {\n          uVar29 = uVar22 + 0xfff & 0xfffffffffffff000;\n        }\n      }\n      *(byte *)(lStack0000000000000078 + 0x28) = *(byte *)(lStack0000000000000078 + 0x28) | 1;\n      *(ulong *)(lStack0000000000000078 + 0x30) = uVar29;\n      *(ulong *)(lStack0000000000000078 + 0x38) = uVar29;\n    }\n  }\n  plVar6 = DAT_001278b0;\n  iStack000000000000006c = *(int *)(param_7 + 0x14);\n  if (iStack000000000000006c != 0) {\n    uVar29 = FUN_0010554f();\n    return uVar29;\n  }\n  if (DAT_00127980 == '\\0') {\nLAB_00105588:\n    puStack0000000000000020 = (undefined4 *)0x0;\n  }\n  else {\n    ppuVar41 = &PTR_s__stab_00125c60;\n    puStack0000000000000020 = (undefined4 *)xmalloc(0x60);\n    puVar37 = puStack0000000000000020;\n    for (lVar28 = 0x18; lVar28 != 0; lVar28 = lVar28 + -1) {\n      *puVar37 = 0;\n      puVar37 = puVar37 + (ulong)bVar43 * -2 + 1;\n    }\n    pcStack0000000000000038 = (char *)0x0;\n    do {\n      puVar3 = *ppuVar41;\n      lVar28 = bfd_get_section_by_name();\n      lVar16 = bfd_get_section_by_name();\n      if ((lVar28 != 0) && (lVar16 != 0)) {\n        lVar28 = *(long *)(lVar28 + 0x40);\n        __ptr = (void *)xmalloc(lVar28);\n        cVar10 = bfd_get_section_contents();\n        if (cVar10 == '\\0') {\n          uVar14 = bfd_get_error();\n          bfd_errmsg(uVar14);\n          fprintf(_stderr,\"%s: %s: %s\\n\",*unaff_R14);\n          free(pcStack0000000000000038);\n          free(__ptr);\n        }\n        else {\n          uVar29 = *(ulong *)(lVar16 + 0x40);\n          __ptr_00 = (void *)xmalloc(uVar29 + 1);\n          in_stack_00000018 = bfd_get_section_contents();\n          if (in_stack_00000018 == '\\0') {\n            uVar14 = bfd_get_error();\n            bfd_errmsg(uVar14);\n            fprintf(_stderr,\"%s: %s: %s\\n\",*unaff_R14);\n            free(pcStack0000000000000038);\n          }\n          else {\n            *(undefined *)((long)__ptr_00 + uVar29) = 0;\n            if ((pcStack0000000000000038 != (char *)0x0) ||\n               (pcStack0000000000000038 = (char *)FUN_00112894(),\n               pcStack0000000000000038 != (char *)0x0)) {\n              lStack00000000000000a0 = 0;\n              lStack0000000000000088 = 0;\n              for (pvVar40 = __ptr; pvVar40 <= (void *)((long)__ptr + lVar28 + -0xc);\n                  pvVar40 = (void *)((long)pvVar40 + 0xc)) {\n                uVar22 = (**(code **)(unaff_R14[1] + 0x40))(pvVar40);\n                bVar2 = *(byte *)((long)pvVar40 + 4);\n                uVar14 = (**(code **)(unaff_R14[1] + 0x58))((long)pvVar40 + 6);\n                lVar16 = (**(code **)(unaff_R14[1] + 0x40))((long)pvVar40 + 8);\n                if (bVar2 == 0) {\n                  lStack0000000000000088 = lStack00000000000000a0;\n                  lStack00000000000000a0 = lStack00000000000000a0 + lVar16;\n                }\n                else {\n                  uVar24 = (uVar22 & 0xffffffff) + lStack0000000000000088;\n                  if (uVar24 < uVar29) {\n                    pcVar26 = (char *)((long)__ptr_00 + uVar24);\n                    pcStack0000000000000090 = (char *)0x0;\n                    while( true ) {\n                      sVar19 = strlen(pcVar26);\n                      if (((sVar19 == 0) || (pcVar32 = pcVar26 + (sVar19 - 1), *pcVar32 != '\\\\')) ||\n                         ((ulong)((long)__ptr + lVar28) < (long)pvVar40 + 0x10U)) goto LAB_001077fb;\n                      *pcVar32 = '\\0';\n                      pvVar40 = (void *)((long)pvVar40 + 0xc);\n                      iVar13 = (**(code **)(unaff_R14[1] + 0x40))(pvVar40);\n                      uVar22 = (ulong)(uint)(iVar13 + (int)lStack0000000000000088);\n                      if (uVar29 <= uVar22) break;\n                      pcVar26 = (char *)concat(pcVar26,(long)__ptr_00 + uVar22,0);\n                      *pcVar32 = '\\\\';\n                      free(pcStack0000000000000090);\n                      pcStack0000000000000090 = pcVar26;\n                    }\n                    uVar18 = *unaff_R14;\n                    pcVar32 = (char *)dcgettext(0,\"%s: %s: stab entry %ld is corrupt\\n\",5);\n                    fprintf(_stderr,pcVar32,uVar18,puVar3,((long)pvVar40 - (long)__ptr) / 0xc);\nLAB_001077fb:\n                    FUN_001088ae((ulong)bVar2,uVar14,lVar16,pcVar26);\n                    cVar10 = FUN_0011173a(puStack0000000000000020,pcStack0000000000000038,bVar2);\n                    if (cVar10 == '\\0') {\n                      FUN_00108b3e();\n                      FUN_00108863();\n                      free(pcStack0000000000000090);\n                      free(pcStack0000000000000038);\n                      free(__ptr);\n                      free(__ptr_00);\n                      goto LAB_00105981;\n                    }\n                  }\n                  else {\n                    uVar18 = *unaff_R14;\n                    pcVar26 = (char *)dcgettext(0,\n                                                \"%s: %s: stab entry %ld is corrupt, strx = 0x%x, type = %d\\n\"\n                                                ,5);\n                    fprintf(_stderr,pcVar26,uVar18,puVar3,((long)pvVar40 - (long)__ptr) / 0xc,\n                            uVar22 & 0xffffffff,(ulong)bVar2,((long)pvVar40 - (long)__ptr) % 0xc);\n                  }\n                }\n              }\n              FUN_00108863();\n              free(__ptr);\n              goto LAB_001058eb;\n            }\n          }\n          free(__ptr_00);\n          free(__ptr);\n        }\n        goto LAB_00105981;\n      }\nLAB_001058eb:\n      ppuVar41 = ppuVar41 + 2;\n    } while (ppuVar41 != (undefined **)&DAT_00125c90);\n    if ((pcStack0000000000000038 != (char *)0x0) && (cVar10 = FUN_0010c892(), cVar10 == '\\0')) {\nLAB_00105981:\n      free(puStack0000000000000020);\n      goto LAB_00105588;\n    }\n    if (*(int *)(unaff_R14[1] + 8) == 1) {\n      lVar28 = 0;\n      for (plVar15 = plVar6; plVar15 < plVar6 + param_8; plVar15 = plVar15 + 1) {\n        (**(code **)(unaff_R14[1] + 0x218))();\n        if (cStack0000000000000148 == '-') {\n          if (((lVar28 == 0) && (lVar28 = FUN_00112894(), lVar28 == 0)) ||\n             ((in_stack_00000150 == (char *)0x0 || (*in_stack_00000150 == '\\0'))))\n          goto LAB_00105981;\n          pcVar26 = (char *)0x0;\n          pcVar32 = in_stack_00000150;\n          while (((*pcVar32 != '\\0' && (sVar19 = strlen(pcVar32), pcVar32[sVar19 - 1] == '\\\\')) &&\n                 (plVar15 + 1 < plVar6 + param_8))) {\n            pcVar21 = (char *)xstrdup(pcVar32);\n            sVar19 = strlen(pcVar21);\n            pcVar21[sVar19 - 1] = '\\0';\n            pcVar32 = (char *)concat(pcVar21,*(undefined8 *)(plVar15[1] + 8),0);\n            free(pcVar21);\n            free(pcVar26);\n            plVar15 = plVar15 + 1;\n            pcVar26 = pcVar32;\n          }\n          FUN_001088ae(uStack0000000000000158,(int)sStack000000000000015a,in_stack_00000140,pcVar32)\n          ;\n          in_stack_00000018 = FUN_0011173a(puStack0000000000000020,lVar28,uStack0000000000000158);\n          if (in_stack_00000018 == '\\0') {\n            FUN_00108b3e();\n            FUN_00108863();\n            goto LAB_00105981;\n          }\n        }\n      }\n      FUN_00108863();\n      if ((lVar28 != 0) && (cVar10 = FUN_0010c892(), cVar10 == '\\0')) goto LAB_00105981;\n    }\n    if (in_stack_00000018 == '\\0') {\n      if ((*(int *)(unaff_R14[1] + 8) == 2) && (param_8 != 0)) {\n        in_stack_00000140 = (char *)0x0;\n        in_stack_000000c0 = plVar6;\n        in_stack_000000d0 = 0;\n        in_stack_000000d8 = 0;\n        puVar33 = (undefined8 *)&stack0x00000148;\n        for (lVar28 = 0x22; lVar28 != 0; lVar28 = lVar28 + -1) {\n          *(undefined4 *)puVar33 = 0;\n          puVar33 = (undefined8 *)((long)puVar33 + (ulong)bVar43 * -8 + 4);\n        }\n        cVar10 = '\\0';\n        _uStack0000000000000048 = (int *)0x0;\n        pcStack0000000000000038 = (char *)0x0;\n        pcStack0000000000000090 = (char *)0xffffffffffffffff;\n        in_stack_000000c8 = param_8;\nswitchD_00106e1a_caseD_68:\n        do {\n          while( true ) {\n            if ((long)param_8 <= in_stack_000000d0) goto LAB_00105590;\n            lVar28 = plVar6[in_stack_000000d0];\n            cVar9 = bfd_coff_get_syment();\n            lVar16 = in_stack_000000d8;\n            if (cVar9 == '\\0') {\n              uVar14 = bfd_get_error();\n              bfd_errmsg(uVar14);\n              pcVar26 = \"bfd_coff_get_syment failed: %s\";\n              goto LAB_00105968;\n            }\n            pcVar26 = *(char **)(lVar28 + 8);\n            in_stack_000000d0 = in_stack_000000d0 + 1;\n            in_stack_000000d8 = (ulong)bStack0000000000000101 + 1 + in_stack_000000d8;\n            if ((bStack0000000000000101 != 0) && (cVar9 = bfd_coff_get_auxent(), cVar9 == '\\0')) {\n              uVar14 = bfd_get_error();\n              bfd_errmsg(uVar14);\n              pcVar26 = \"bfd_coff_get_auxent failed: %s\";\n              goto LAB_00105968;\n            }\n            if (pcStack0000000000000090 != (char *)lVar16) break;\n            if (bStack0000000000000100 != 0x67) {\n              cVar9 = FUN_0010bbd3(puStack0000000000000020);\n              if (cVar9 != '\\0') break;\n              goto LAB_00105981;\n            }\nswitchD_00106e1a_caseD_67:\n            pcStack0000000000000090 = (char *)in_stack_000000f0;\n            cVar9 = FUN_0010bbd3(puStack0000000000000020);\n            if (cVar9 == '\\0') goto LAB_00105981;\n          }\n          if ((char)bStack0000000000000100 < '\\0') {\n            if (bStack0000000000000100 == 0xff) goto switchD_00106e1a_caseD_68;\nLAB_0010700a:\n            lVar23 = FUN_0010dac0();\n            if (lVar23 == 0) break;\n            cVar9 = FUN_00112a33(&stack0x00000140,lVar28,lVar16);\n          }\n          else {\n            if (bStack0000000000000100 < 100) {\n              switch(bStack0000000000000100) {\n              case 3:\n                if (in_stack_000000f8._6_2_ == 0) goto switchD_00106e1a_caseD_68;\n              case 2:\nswitchD_00106e1a_caseD_7f:\n                if ((ulong)((uint)in_stack_000000f8._6_2_ & *(uint *)(unaff_R14[0x22] + 0x40)) !=\n                    2L << ((byte)*(undefined4 *)(unaff_R14[0x22] + 0x3c) & 0x3f)) goto LAB_0010700a;\n                _uStack0000000000000048 = (int *)(**(code **)(unaff_R14[1] + 0x238))();\n                pcStack0000000000000038 = pcVar26;\n                goto switchD_00106e1a_caseD_68;\n              default:\n                goto LAB_0010700a;\n              case 5:\n              case 7:\n              case 0xe:\n                goto switchD_00106e1a_caseD_68;\n              }\n            }\n            switch(bStack0000000000000100) {\n            case 100:\n              iVar13 = strcmp(pcVar26,\".bb\");\n              if (iVar13 == 0) {\n                cVar9 = FUN_0010be88(puStack0000000000000020);\n              }\n              else {\n                iVar13 = strcmp(pcVar26,\".eb\");\n                if (iVar13 != 0) goto switchD_00106e1a_caseD_68;\n                cVar9 = FUN_0010bf20(puStack0000000000000020);\n              }\n              break;\n            case 0x65:\n              iVar13 = strcmp(pcVar26,\".bf\");\n              if (iVar13 == 0) {\n                if (pcStack0000000000000038 != (char *)0x0) {\n                  lVar16 = FUN_0010dac0();\n                  if ((lVar16 == 0) ||\n                     (cVar10 = FUN_0010bc80(puStack0000000000000020), cVar10 == '\\0'))\n                  goto LAB_00105981;\n                  if (_uStack0000000000000048 != (int *)0x0) {\n                    iVar13 = 0;\n                    if (bStack0000000000000101 != 0) {\n                      iVar13 = in_stack_00000118 - 1;\n                    }\n                    lVar28 = *(long *)(*(long *)(lVar28 + 0x20) + 0x30);\n                    while( true ) {\n                      iVar35 = _uStack0000000000000048[4];\n                      if (iVar35 == 0) break;\n                      cVar9 = FUN_0010bf86(puStack0000000000000020,iVar13 + iVar35,\n                                           *(long *)(_uStack0000000000000048 + 6) + lVar28);\n                      _uStack0000000000000048 = _uStack0000000000000048 + 4;\n                      if (cVar9 == '\\0') goto LAB_00105981;\n                    }\n                  }\n                  _uStack0000000000000048 = (int *)0x0;\n                  pcStack0000000000000038 = (char *)0x0;\n                  goto switchD_00106e1a_caseD_68;\n                }\n                pcVar26 = \"%ld: .bf without preceding function\";\n              }\n              else {\n                iVar13 = strcmp(pcVar26,\".ef\");\n                if (iVar13 != 0) goto switchD_00106e1a_caseD_68;\n                if (cVar10 != '\\0') {\n                  cVar10 = FUN_0010be1a(puStack0000000000000020);\n                  if (cVar10 == '\\0') goto LAB_00105981;\n                  cVar10 = '\\0';\n                  goto switchD_00106e1a_caseD_68;\n                }\n                pcVar26 = \"%ld: unexpected .ef\\n\";\n              }\n              uVar18 = dcgettext(0,pcVar26,5);\n              FUN_00119ed0(uVar18);\n              goto LAB_00105981;\n            default:\n              goto LAB_0010700a;\n            case 0x67:\n              goto switchD_00106e1a_caseD_67;\n            case 0x68:\n            case 0x69:\n            case 0x6a:\n              goto switchD_00106e1a_caseD_68;\n            case 0x7f:\n              goto switchD_00106e1a_caseD_7f;\n            }\n          }\n        } while (cVar9 != '\\0');\n      }\n      else {\n        pcVar26 = \"%s: no recognized debugging information\";\nLAB_00105968:\n        uVar18 = dcgettext(0,pcVar26,5);\n        FUN_00119ed0(uVar18);\n      }\n      goto LAB_00105981;\n    }\n  }\nLAB_00105590:\n  if (((*(uint *)((long)param_7 + 0x44) & 0x42) != 0) &&\n     ((*(uint *)((long)param_7 + 0x44) & 1) == 0)) {\n    if ((*(char *)(param_7[1] + 0x20) == '\\0') && (DAT_00127939 == '\\0')) {\n      if (param_8 != 0) {\n        plVar6 = DAT_001278b0 + param_8;\n        plVar15 = DAT_001278b0;\n        do {\n          uVar31 = *(uint *)(*plVar15 + 0x18);\n          if ((uVar31 & 0x1000000) != 0) {\n            *(uint *)(*plVar15 + 0x18) = uVar31 & 0xfeffffff;\n          }\n          plVar15 = plVar15 + 1;\n        } while (plVar6 != plVar15);\n      }\n    }\n    else {\n      for (lVar28 = param_7[0x12]; lVar28 != 0; lVar28 = *(long *)(lVar28 + 8)) {\n        if (*(long *)(lVar28 + 0xe8) != 0) {\n          puVar1 = (uint *)(*(long *)(lVar28 + 0xe8) + 0x18);\n          *puVar1 = *puVar1 | 0x1000000;\n        }\n      }\n    }\n  }\n  if ((DAT_00127a2c == 2) || (DAT_00127a2c == 7)) {\nLAB_001059fe:\n    if (DAT_00127a2c == 7) {\nLAB_00105a3b:\n      plVar15 = (long *)xmalloc();\n      plVar6 = DAT_001278b0;\n      uStack0000000000000048 = *(uint *)((long)unaff_R14 + 0x44) & 0x42;\n      DAT_001278a8 = plVar15;\n      if (param_8 == 0) {\n        uVar29 = 0;\n      }\n      else {\n        uVar29 = 0;\n        _in_stack_00000018 = 0;\n        do {\n          iVar13 = DAT_001279a0;\n          plVar4 = (long *)plVar6[_in_stack_00000018];\n          pcVar5 = (code *)plVar4[4];\n          uVar31 = *(uint *)(plVar4 + 3);\n          pcVar26 = (char *)plVar4[1];\n          pcVar32 = pcVar26;\n          if (DAT_001279a8 != (undefined8 *)0x0) {\n            iVar35 = 0;\n            puVar33 = DAT_001279a8;\n            while ((iVar35 < iVar13 && (pcVar21 = (char *)puVar33[5], pcVar21 != (char *)0x0))) {\n              if (pcVar21 != \"\") {\n                iVar12 = strcmp(pcVar21,pcVar26);\n                if (iVar12 == 0) {\n                  free(pcVar21);\n                  uVar22 = uVar29 + 1;\n                  puVar33[5] = \"\";\n                  lVar28 = FUN_0011a2e0(puVar33);\n                  uVar18 = DAT_001278d0;\n                  plVar15[uVar29] = lVar28;\n                  lVar28 = htab_elements(uVar18);\n                  if ((lVar28 != 0) || (DAT_001278d8 != (char **)0x0)) goto LAB_001064eb;\n                  goto LAB_00105af8;\n                }\n                puVar33 = (undefined8 *)*puVar33;\n              }\n              iVar35 = iVar35 + 1;\n            }\n          }\n          lVar28 = htab_elements(DAT_001278d0);\n          uVar22 = uVar29;\n          if ((lVar28 == 0) && (DAT_001278d8 == (char **)0x0)) {\nLAB_00105af8:\n            cVar10 = *pcVar26;\n            if (cVar10 != '\\0') goto LAB_00105b11;\nLAB_00106557:\n            pcVar26 = DAT_00127908;\n            if ((DAT_00127988 != '\\0') && (*(char *)(param_7[1] + 0x1c) != '\\0')) {\n              lVar28 = unaff_R14[1];\n              cVar10 = '\\0';\n              goto LAB_0010668d;\n            }\n            goto joined_r0x00106565;\n          }\n          if (pcVar26 != (char *)0x0) {\nLAB_001064eb:\n            if (((*pcVar26 == '_') && (pcVar26[1] == '_')) &&\n               (iVar13 = strcmp(pcVar26 + (pcVar26[2] == '_'),\"__gnu_lto_slim\"), iVar13 == 0)) {\n              uVar18 = dcgettext(0,\"redefining symbols does not work on LTO-compiled object files\",5\n                                );\n                    \n              FUN_00119dd0(uVar18);\n            }\n          }\n          _cStack0000000000000148 = 0;\n          in_stack_00000140 = pcVar26;\n          lVar28 = htab_find(DAT_001278d0);\n          if (((lVar28 == 0) || (pcVar32 = *(char **)(lVar28 + 8), pcVar26 == pcVar32)) &&\n             (pcVar32 = pcVar26, ppcVar39 = DAT_001278d8, (uVar31 & 0x100) != 0)) {\n            for (; ppcVar39 != (char **)0x0; ppcVar39 = (char **)ppcVar39[3]) {\n              iVar13 = strcmp(*ppcVar39,pcVar26);\n              if (iVar13 == 0) {\n                pcVar32 = ppcVar39[1];\n                break;\n              }\n            }\n          }\n          plVar4[1] = (long)pcVar32;\n          cVar10 = *pcVar32;\n          if (cVar10 == '\\0') goto LAB_00106557;\nLAB_00105b11:\n          pcVar26 = DAT_00127908;\n          lVar28 = unaff_R14[1];\n          if (*(char *)(lVar28 + 0x1c) == cVar10) {\n            if (DAT_00127988 == '\\0') {\n              if ((DAT_00127968 == '\\0') ||\n                 ((((uVar31 & 0x82) == 0 && (pcVar5 != bfd_map_over_sections)) &&\n                  ((*(byte *)(plVar4[4] + 0x25) & 0x10) == 0)))) goto joined_r0x00106565;\nLAB_0010677d:\n              pcVar32 = pcVar32 + 1;\n              plVar4[1] = (long)pcVar32;\n              goto joined_r0x00106565;\n            }\n            if (*(char *)(param_7[1] + 0x1c) == '\\0') goto LAB_0010677d;\n            if (DAT_00127908 != (char *)0x0) {\n              pcVar32 = pcVar32 + 1;\n              plVar4[1] = (long)pcVar32;\n              sVar19 = strlen(pcVar32);\n              lVar28 = sVar19 + 2;\nLAB_001066bc:\n              sVar19 = strlen(pcVar26);\n              pcVar26 = (char *)xmalloc(sVar19 + lVar28);\n              goto LAB_001066d0;\n            }\n            *pcVar32 = *(char *)(param_7[1] + 0x1c);\n            plVar4[1] = (long)pcVar32;\n            uVar29 = uVar22;\n          }\n          else {\n            if ((DAT_00127988 == '\\0') || (*(char *)(param_7[1] + 0x1c) == '\\0')) {\njoined_r0x00106565:\n              uVar29 = uVar22;\n              if (pcVar26 == (char *)0x0) goto LAB_00105b32;\n              sVar19 = strlen(pcVar32);\n              sVar20 = strlen(pcVar26);\n              pcVar21 = (char *)xmalloc(sVar20 + sVar19 + 1);\n              pcVar26 = pcVar21;\n            }\n            else {\nLAB_0010668d:\n              pcVar26 = DAT_00127908;\n              if ((*(char *)(lVar28 + 0x1c) != '\\0') && (cVar10 != *(char *)(lVar28 + 0x1c)))\n              goto joined_r0x00106565;\n              sVar19 = strlen(pcVar32);\n              lVar28 = sVar19 + 2;\n              if (pcVar26 != (char *)0x0) goto LAB_001066bc;\n              pcVar26 = (char *)xmalloc(lVar28);\nLAB_001066d0:\n              pcVar21 = pcVar26 + 1;\n              *pcVar26 = *(char *)(param_7[1] + 0x1c);\n            }\n            __s = DAT_00127908;\n            if (DAT_00127908 != (char *)0x0) {\n              strcpy(pcVar21,DAT_00127908);\n              sVar19 = strlen(__s);\n              pcVar21 = pcVar21 + sVar19;\n            }\n            strcpy(pcVar21,pcVar32);\n            plVar4[1] = (long)pcVar26;\n            pcVar32 = pcVar26;\n            uVar29 = uVar22;\n          }\nLAB_00105b32:\n          if (DAT_00127a2c == 7) goto LAB_001067a8;\n          if (((uVar31 & 0x20) == 0) &&\n             (((uVar31 & 0x100) == 0 ||\n              ((*(byte *)(**(long **)(plVar4[4] + 0xf0) + 0x18) & 0x20) == 0)))) {\n            if (((uStack0000000000000048 == 0) &&\n                (((uVar31 & 0x82) != 0 || ((*(byte *)(plVar4[4] + 0x25) & 0x10) != 0)))) ||\n               (iVar13 = bfd_decode_symclass(plVar4), iVar13 == 0x49)) {\nLAB_00105be2:\n              if (DAT_001279ca == '\\0') {\n                lVar28 = htab_find();\n                if (lVar28 == 0) goto LAB_00105c07;\n              }\n              else {\n                _cStack0000000000000148 = _cStack0000000000000148 & 0xffffffffffffff00;\n                in_stack_00000140 = pcVar32;\n                htab_traverse(DAT_001279f8,FUN_0011a170,&stack0x00000140);\n                if (cStack0000000000000148 == '\\0') goto LAB_00105c07;\n              }\n            }\n            else if ((((uVar31 & 0x82) == 0) && (pcVar5 != bfd_map_over_sections)) &&\n                    ((*(byte *)(plVar4[4] + 0x25) & 0x10) == 0)) {\n              if ((uVar31 & 4) == 0) {\n                if (((*(int *)(unaff_R14[1] + 8) != 2) ||\n                    (lVar28 = *(long *)(plVar4[4] + 0xd0), lVar28 == 0)) ||\n                   (*(long *)(lVar28 + 0x40) == 0)) {\n                  if ((DAT_00127a2c == 3) || (DAT_00127a28 == 2)) goto LAB_001067a8;\n                  if (DAT_00127a28 == 1) {\n                    cVar10 = bfd_is_local_label(unaff_R14);\n                    goto joined_r0x00106a11;\n                  }\n                }\n                goto LAB_00105be2;\n              }\n              cVar10 = DAT_00127980;\n              if (1 < DAT_00127a2c - 2U) {\njoined_r0x00106a11:\n                if (cVar10 == '\\0') goto LAB_00105be2;\n              }\n            }\n            else if (DAT_00127a2c != 3) goto LAB_00105be2;\n            goto LAB_001067a8;\n          }\n          if (DAT_001279ca == '\\0') {\n            lVar28 = htab_find();\n            if (lVar28 != 0) {\nLAB_0010687f:\n              uVar18 = dcgettext(0,\"not stripping symbol `%s\\' because it is named in a relocation\",\n                                 5);\n              FUN_00119ed0(uVar18);\n              DAT_00127a20 = 1;\n            }\n          }\n          else {\n            _cStack0000000000000148 = _cStack0000000000000148 & 0xffffffffffffff00;\n            in_stack_00000140 = pcVar32;\n            htab_traverse(DAT_001279f8,FUN_0011a170,&stack0x00000140);\n            if (cStack0000000000000148 != '\\0') goto LAB_0010687f;\n          }\n          if ((uVar31 & 0x20) == 0) {\nLAB_00105c07:\n            if (DAT_001279ca != '\\0') {\n              _cStack0000000000000148 = _cStack0000000000000148 & 0xffffffffffffff00;\n              in_stack_00000140 = pcVar32;\n              htab_traverse(DAT_001279f0,FUN_0011a170,&stack0x00000140);\n              if (cStack0000000000000148 != '\\0') goto LAB_001067a8;\n              goto LAB_00105c2c;\n            }\n            lVar28 = htab_find();\n            if (lVar28 == 0) goto LAB_00105c2c;\nLAB_001067a8:\n            if ((DAT_00127a18 != '\\0') && ((uVar31 & 0x4000) != 0)) goto LAB_00105c2c;\n            if (DAT_001279ca == '\\0') {\n              lVar28 = htab_find();\n              if (lVar28 != 0) goto LAB_00105c2c;\n            }\n            else {\n              _cStack0000000000000148 = _cStack0000000000000148 & 0xffffffffffffff00;\n              in_stack_00000140 = pcVar32;\n              htab_traverse(DAT_00127a08,FUN_0011a170,&stack0x00000140);\n              if (cStack0000000000000148 != '\\0') goto LAB_00105c2c;\n            }\n          }\n          else {\nLAB_00105c2c:\n            cVar10 = FUN_001159d0(plVar4[4]);\n            if (cVar10 == '\\0') {\n              if (((uVar31 & 0x800002) == 0) && (pcVar5 != bfd_map_over_sections)) {\nLAB_00105c5f:\n                if ((uVar31 & 0x82) != 0) {\n                  cVar10 = FUN_00115d70(pcVar32);\n                  if ((cVar10 == '\\0') &&\n                     ((lVar28 = htab_elements(DAT_001279d8), lVar28 == 0 ||\n                      (cVar10 = FUN_00115d70(pcVar32), cVar10 != '\\0')))) {\n                    if (((((DAT_00127938 == '\\0') ||\n                          (uVar11 = *(uint *)(plVar4 + 3), (uVar11 & 0x200000) != 0)) ||\n                         (lVar28 = *plVar4, lVar28 == 0)) ||\n                        ((*(int *)(*(long *)(lVar28 + 8) + 8) != 5 ||\n                         (*(long *)(lVar28 + 0x110) == 0)))) ||\n                       (1 < (*(byte *)((long)plVar4 + 0x49) & 3) - 1)) goto joined_r0x00105ca2;\n                  }\n                  else {\n                    uVar11 = *(uint *)(plVar4 + 3);\n                  }\n                  *(uint *)(plVar4 + 3) = uVar11 & 0xffffff7d | 1;\n                }\njoined_r0x00105ca2:\n                if (((uVar31 & 1) != 0) && (cVar10 = FUN_00115d70(pcVar32), cVar10 != '\\0')) {\n                  *(uint *)(plVar4 + 3) = *(uint *)(plVar4 + 3) & 0xfffffffe | 2;\n                }\n              }\n              else {\n                if ((DAT_001279c8 != '\\0') || (cVar10 = FUN_00115d70(pcVar32), cVar10 != '\\0')) {\n                  *(uint *)(plVar4 + 3) = *(uint *)(plVar4 + 3) & 0xff7ffffd | 0x80;\n                }\n                if (pcVar5 != bfd_map_over_sections) goto LAB_00105c5f;\n              }\n              plVar15[uVar29] = (long)plVar4;\n              uVar29 = uVar29 + 1;\n            }\n          }\n          _in_stack_00000018 = _in_stack_00000018 + 1;\n        } while (param_8 != _in_stack_00000018);\n      }\n      if (DAT_001279a8 != (undefined8 *)0x0) {\n        puVar33 = DAT_001279a8;\n        iVar13 = DAT_001279a0;\n        for (lVar28 = 0; lVar28 < iVar13; lVar28 = lVar28 + 1) {\n          pcVar26 = (char *)puVar33[5];\n          if (pcVar26 == (char *)0x0) {\n            plVar6 = plVar15 + uVar29;\n            uVar29 = uVar29 + 1;\n            lVar16 = FUN_0011a2e0(puVar33,param_7);\n            *plVar6 = lVar16;\n            iVar13 = DAT_001279a0;\n          }\n          else if (pcVar26 != \"\") {\n            uVar18 = dcgettext(0,\"\\'before=%s\\' not found\",5);\n                    \n            FUN_00119dd0(uVar18,pcVar26);\n          }\n          puVar33 = (undefined8 *)*puVar33;\n        }\n      }\n      bVar42 = DAT_00127980 == '\\0';\n      plVar15[uVar29] = 0;\n      if ((bVar42) || (puStack0000000000000020 == (undefined4 *)0x0)) {\nLAB_00105cfa:\n        param_8 = uVar29 & 0xffffffff;\n        goto LAB_00105710;\n      }\n      iVar13 = *(int *)((undefined8 *)param_7[1] + 1);\n      if ((iVar13 == 5) || (iVar13 == 2)) {\n        in_stack_000000e0 = (void *)0x0;\n        cVar10 = FUN_0011378f(param_7,puStack0000000000000020,&stack0x000000c0,&stack0x00000110,\n                              &stack0x000000e0,&stack0x00000140);\n        if (cVar10 != '\\0') {\n          lVar28 = bfd_make_section_with_flags(param_7,\".stab\",0x2108);\n          lVar16 = bfd_make_section_with_flags(param_7,\".stabstr\",0x2108);\n          if ((((lVar28 == 0) || (lVar16 == 0)) ||\n              (cVar10 = bfd_set_section_size(lVar28,in_stack_00000110), cVar10 == '\\0')) ||\n             (cVar10 = bfd_set_section_size(lVar16,in_stack_00000140), cVar10 == '\\0')) {\n            pcVar26 = \"can\\'t create debugging section\";\n          }\n          else {\n            *(undefined4 *)(lVar28 + 0x7c) = 2;\n            *(undefined4 *)(lVar16 + 0x7c) = 0;\n            cVar10 = bfd_set_section_contents(param_7,lVar28,in_stack_000000c0,0,in_stack_00000110);\n            if ((cVar10 != '\\0') &&\n               (cVar10 = bfd_set_section_contents\n                                   (param_7,lVar16,in_stack_000000e0,0,in_stack_00000140),\n               cVar10 != '\\0')) {\n              free(puStack0000000000000020);\n              goto LAB_00105cfa;\n            }\n            pcVar26 = \"can\\'t set debugging section contents\";\n          }\n          uVar18 = dcgettext(0,pcVar26,5);\n          FUN_001126c0(0,param_7,0,uVar18);\n          free(in_stack_000000e0);\n          free(puStack0000000000000020);\n          goto LAB_00105d96;\n        }\n      }\n      else {\n        uVar18 = *(undefined8 *)param_7[1];\n        uVar17 = dcgettext(0,\"don\\'t know how to write debugging information for %s\",5);\n        FUN_001126c0(0,param_7,0,uVar17,uVar18);\n      }\n      free(puStack0000000000000020);\n    }\n    else {\nLAB_00105a07:\n      bfd_set_error(0);\n      bfd_map_over_sections();\n      iVar13 = bfd_get_error();\n      if (iVar13 == 0) goto LAB_00105a3b;\n    }\nLAB_00105d96:\n    DAT_00127a20 = 1;\n  }\n  else {\n    if ((DAT_00127a2c - 3U < 4) || ((DAT_00127a28 != 0 || (DAT_00127938 != '\\0'))))\n    goto LAB_00105a07;\n    lVar28 = htab_elements(DAT_001279f8);\n    if (((lVar28 != 0) ||\n        (((((((lVar28 = htab_elements(DAT_00127a08), lVar28 != 0 ||\n              (lVar28 = htab_elements(DAT_001279e8), lVar28 != 0)) ||\n             (lVar28 = htab_elements(DAT_001279e0), lVar28 != 0)) ||\n            ((lVar28 = htab_elements(DAT_001279d8), lVar28 != 0 ||\n             (lVar28 = htab_elements(DAT_001279d0), lVar28 != 0)))) ||\n           (lVar28 = htab_elements(DAT_001278d0), lVar28 != 0)) ||\n          (((DAT_00127908 != (char *)0x0 || (DAT_001278b8 != '\\0')) ||\n           ((DAT_00127a19 != '\\0' ||\n            (((DAT_00127980 != '\\0' || (DAT_00127988 != '\\0')) || (DAT_00127968 != '\\0')))))))) ||\n         ((DAT_001278d8 != (char **)0x0 || (DAT_001279c8 != '\\0')))))) || (DAT_001279a0 != 0))\n    goto LAB_001059fe;\nLAB_00105710:\n    bfd_set_symtab(param_7,DAT_001278a8,param_8 & 0xffffffff);\n    bfd_map_over_sections(unaff_R14,FUN_00115dc0,param_7);\n    bfd_map_over_sections(unaff_R14,FUN_00116110,param_7);\n    for (puVar33 = DAT_001279c0; puVar38 = DAT_001279b8, puVar33 != (undefined8 *)0x0;\n        puVar33 = (undefined8 *)*puVar33) {\n      cVar10 = bfd_set_section_contents(param_7,puVar33[5],puVar33[4],0,puVar33[3]);\n      if (cVar10 == '\\0') {\n        FUN_001126c0(0,param_7,puVar33[5],0);\n        return 0;\n      }\n    }\n    for (; puVar38 != (undefined8 *)0x0; puVar38 = (undefined8 *)*puVar38) {\n      uVar18 = *(undefined8 *)(puVar38[5] + 0x60);\n      cVar10 = bfd_set_section_contents(param_7,uVar18,puVar38[4],0,puVar38[3]);\n      if (cVar10 == '\\0') {\n        FUN_001126c0(0,param_7,uVar18,0);\n        return 0;\n      }\n    }\n    if (__ptr_01 == (long **)0x0) {\n      if ((DAT_00127a00 != '\\0') && (_DAT_00127a24 == 0)) {\n        uVar18 = *unaff_R14;\n        uVar17 = dcgettext(0,\"%s: Could not find any mergeable note sections\",5);\n        FUN_00119ed0(uVar17,uVar18);\n      }\n    }\n    else {\n      pplVar36 = (long **)0x0;\n      for (puVar33 = (undefined8 *)param_7[0x12]; puVar33 != (undefined8 *)0x0;\n          puVar33 = (undefined8 *)puVar33[1]) {\n        if (((DAT_00127a00 != '\\0') && (*(int *)(param_7[1] + 8) == 5)) &&\n           ((*(int *)(puVar33[0x1a] + 4) == 7 &&\n            (cVar10 = FUN_00113fb0(*puVar33,\".gnu.build.attributes\"), cVar10 != '\\0')))) {\n          if (pplVar36 == (long **)0x0) {\n            pplVar36 = __ptr_01;\n          }\n          pplVar30 = __ptr_01;\n          if ((undefined8 *)(*pplVar36)[0xc] == puVar33) {\nLAB_0010625f:\n            pcVar26 = \"error: failed to merge notes\";\n            if (pplVar36[1] != (long *)0x0) {\n              cVar10 = bfd_set_section_contents(param_7,puVar33,pplVar36[1],0,pplVar36[2]);\n              if (cVar10 == '\\0') {\n                uVar18 = dcgettext(0,\"error: failed to copy merged notes into output\",5);\n                FUN_001126c0(0,param_7,puVar33,uVar18);\n                return 0;\n              }\n              pplVar36 = (long **)pplVar36[3];\n              goto LAB_001061be;\n            }\n          }\n          else {\n            do {\n              pplVar36 = pplVar30;\n              if ((undefined8 *)(*pplVar30)[0xc] == puVar33) goto LAB_0010625f;\n              pplVar36 = (long **)pplVar30[3];\n              pplVar30 = pplVar36;\n            } while (pplVar36 != (long **)0x0);\n            pcVar26 = \"error: failed to locate merged notes\";\n          }\n          uVar18 = dcgettext(0,pcVar26,5);\n          FUN_001126c0(0,param_7,puVar33,uVar18);\n        }\nLAB_001061be:\n      }\n      do {\n        pplVar36 = (long **)__ptr_01[3];\n        free(__ptr_01[1]);\n        free(__ptr_01);\n        __ptr_01 = pplVar36;\n      } while (pplVar36 != (long **)0x0);\n    }\n    if ((DAT_00127a10 == 0) ||\n       (cVar10 = bfd_fill_in_gnu_debuglink_section(param_7,lStack0000000000000078),\n       lVar28 = DAT_00127a10, cVar10 != '\\0')) {\n      uVar31 = (**(code **)(param_7[1] + 0x140))(unaff_R14);\n      uVar29 = (ulong)uVar31;\n      if ((char)uVar31 != '\\0') {\n        if (DAT_00127910 == 0) {\n          return uVar29;\n        }\n        cVar10 = bfd_alt_mach_code(param_7,DAT_00127910 & 0xffffffff);\n        uVar22 = DAT_00127910;\n        if (cVar10 == '\\0') {\n          uVar18 = dcgettext(0,\"this target does not support %lu alternative machine codes\",5);\n          FUN_00119ed0(uVar18,uVar22);\n          if (*(int *)(param_7[1] + 8) == 5) {\n            uVar18 = dcgettext(0,\"treating that number as an absolute e_machine value instead\",5);\n            FUN_00119ed0(uVar18);\n            *(short *)(param_7[0x22] + 0x3a) = (short)DAT_00127910;\n            return uVar29;\n          }\n          uVar18 = dcgettext(0,\"ignoring the alternative value\",5);\n          FUN_00119ed0(uVar18);\n          return uVar29;\n        }\n        return uVar29;\n      }\n      uVar18 = dcgettext(0,\"error copying private BFD data\",5);\n      FUN_001126c0(0,param_7,0,uVar18);\n    }\n    else {\n      uVar18 = dcgettext(0,\"cannot fill debug link section `%s\\'\",5);\n      FUN_001126c0(0,param_7,0,uVar18,lVar28);\n    }\n  }\n  return 0;\nLAB_00115187:\n  if ((((*(int *)(unaff_R14[1] + 8) == 5) && (*(int *)((long)pplVar36[0x1a] + 4) == 7)) &&\n      (cVar10 = FUN_00113fb0(*pplVar36), cVar10 != '\\0')) &&\n     ((pplVar36[0xc] != (long *)0x0 && (plVar6 = pplVar36[8], plVar6 != (long *)0x0)))) {\n    pplVar30 = (long **)xmalloc(0x20);\n    pplVar30[1] = (long *)0x0;\n    cVar10 = bfd_get_full_section_contents();\n    if (cVar10 == '\\0') {\n      dcgettext(0,\"warning: could not load note section\",5);\n      FUN_001126c0(0);\n      free(pplVar30);\n    }\n    else {\n      plVar15 = (long *)FUN_001163d0();\n      pplVar30[2] = plVar15;\n      if ((plVar15 == plVar6) || (cVar10 = bfd_set_section_size(pplVar36[0xc]), cVar10 != '\\0')) {\n        pplVar30[3] = (long *)__ptr_01;\n        *pplVar30 = (long *)pplVar36;\n        __ptr_01 = pplVar30;\n      }\n      else {\n        dcgettext(0,\"warning: failed to set merged notes size\",5);\n        FUN_001126c0(0,param_7,pplVar36);\n        free(pplVar30[1]);\n        free(pplVar30);\n      }\n    }\n  }\n  pplVar36 = (long **)pplVar36[1];\n  puVar33 = DAT_001279b0;\n  if (pplVar36 == (long **)0x0) goto joined_r0x001151c7;\n  goto LAB_001151ab;\n}\n\n",
            "current_name": "FUNC_00107976",
            "entrypoint": "0x00107976",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00107976": "FUNC_00107976"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00108072": {
            "additional_data": {
                "DAT_00127990": {
                    "constant_value": 2
                },
                "DAT_00127a20": {
                    "global_variable": 2
                },
                "FUN_00108072": {
                    "create_improved_size_and_alignment": 1,
                    "initialize_memory": 1,
                    "set_and_check_size": 1,
                    "set_and_get_size": 1,
                    "set_and_verify_memory_size": 1,
                    "set_and_verify_size": 1,
                    "set_data_section_size": 1,
                    "set_file_size": 3,
                    "set_file_size_and_alignment": 1,
                    "set_initial_memory": 1,
                    "set_memory_layout": 3,
                    "set_memory_properties": 1,
                    "set_memory_regions": 1,
                    "set_memory_size": 3,
                    "set_size": 1,
                    "set_size_alignment": 1,
                    "set_size_and_alignment": 4,
                    "set_sizes_and_alignment": 4
                },
                "FUN_00108179": {
                    "do_something": 1,
                    "execute_function": 1,
                    "failed_condition": 1,
                    "handle_alignment_failure": 1,
                    "perform_action": 1,
                    "print_error_msg": 1
                },
                "FUN_00114190": {
                    "allocate_memory": 6
                },
                "LAB_00115695": {
                    "error_label1": 1,
                    "label1": 1
                },
                "LAB_00115860": {
                    "error_label2": 1,
                    "label2": 1
                },
                "LAB_00115889": {
                    "error_label3": 1,
                    "label3": 1
                },
                "_DAT_00127990": {
                    "constant_value": 1
                },
                "bVar1": {
                    "byte_val": 1,
                    "byte_value": 3,
                    "byte_var": 8,
                    "byte_var1": 6,
                    "byte_variable": 4,
                    "flag": 3,
                    "temp6": 1
                },
                "byte": {
                    "byte_variable": 1
                },
                "cVar3": {
                    "char_val": 1,
                    "char_value": 3,
                    "char_var": 9,
                    "char_var3": 5,
                    "char_variable": 4,
                    "character": 1,
                    "flag_2": 1,
                    "result": 3
                },
                "dcgettext": {
                    "get_localized_string": 1,
                    "get_message": 1,
                    "get_text": 2,
                    "get_translation": 1,
                    "translate_text": 1
                },
                "lVar5": {
                    "dcgettext_var": 1,
                    "err_msg": 1,
                    "error": 1,
                    "error_message": 18,
                    "error_msg": 1,
                    "error_string": 2,
                    "failed_set_size": 1,
                    "failed_set_size_msg": 1,
                    "failed_size": 1,
                    "size_error": 2,
                    "size_error_message": 1,
                    "size_error_msg": 1
                },
                "lVar6": {
                    "alloc_size1": 1,
                    "allocated_memory": 1,
                    "allocation_result": 2,
                    "memory_allocation_result": 1,
                    "memory_size": 1,
                    "ptr1": 2,
                    "ptr2": 1,
                    "res": 1,
                    "result": 3,
                    "result1": 5,
                    "result_1": 2,
                    "result_variable1": 1,
                    "size1": 1,
                    "temp1": 2,
                    "temp_var_1": 2,
                    "temp_variable1": 2,
                    "temp_variable_1": 1,
                    "value1": 1,
                    "var6": 1
                },
                "lVar7": {
                    "adjusted_size": 1,
                    "aligned_address": 1,
                    "alignment": 1,
                    "alignment_adjustment": 1,
                    "alloc_size2": 1,
                    "memory_offset": 1,
                    "new_memory_size": 1,
                    "offset": 2,
                    "pointer_offset": 1,
                    "ptr2": 2,
                    "ptr3": 1,
                    "result2": 5,
                    "result_2": 1,
                    "result_variable2": 1,
                    "size2": 1,
                    "temp2": 2,
                    "temp_var_2": 2,
                    "temp_variable2": 2,
                    "temp_variable_2": 1,
                    "value2": 2,
                    "var7": 1
                },
                "lVar8": {
                    "alignment": 1,
                    "base_address": 2,
                    "data_offset": 1,
                    "offset": 2,
                    "ptr3": 2,
                    "result3": 4,
                    "result_2": 1,
                    "result_variable3": 1,
                    "size": 4,
                    "temp3": 2,
                    "temp_var_3": 2,
                    "temp_variable": 1,
                    "temp_variable3": 2,
                    "temp_variable_3": 1,
                    "value": 1,
                    "value3": 1,
                    "var3": 1,
                    "var8": 1,
                    "variable_8": 1
                },
                "param_1": {
                    "section_pointer": 1
                },
                "param_2": {
                    "c": 1
                },
                "param_3": {
                    "size": 1
                },
                "uVar2": {
                    "binary_pointer": 1,
                    "buffer_address": 1,
                    "current_function": 1,
                    "file_pointer": 1,
                    "function_pointer": 1,
                    "pointer": 3,
                    "ptr": 3,
                    "ptr1": 1,
                    "register2": 1,
                    "result": 1,
                    "result_var": 1,
                    "temp4": 1,
                    "temp_var": 1,
                    "u_long_var": 1,
                    "u_var": 1,
                    "u_var2": 1,
                    "unallocated_var2": 1,
                    "undefined8_variable": 1,
                    "undefined_var": 1,
                    "undefined_var2": 3,
                    "unused_variable": 1,
                    "uvar2": 1,
                    "value_1": 1,
                    "var_1": 1
                },
                "uVar4": {
                    "alignment": 4,
                    "integer": 1,
                    "register4": 1,
                    "temp5": 1,
                    "uint_value": 2,
                    "uint_var": 5,
                    "uint_var4": 3,
                    "uint_variable": 2,
                    "unsigned_int_variable": 1,
                    "unsigned_var": 1,
                    "unsigned_var4": 2,
                    "unsigned_variable": 2,
                    "uvar4": 1,
                    "value": 2,
                    "value_2": 1,
                    "var_2": 1
                },
                "unaff_R12": {
                    "data": 1,
                    "function_base": 1,
                    "function_pointer": 1,
                    "param1": 1,
                    "r12": 3,
                    "r12_ptr": 1,
                    "register12": 10,
                    "register_12": 2,
                    "register_r12": 2,
                    "register_value": 1,
                    "stack_pointer": 1,
                    "thread_object": 1,
                    "unaff_r12": 3,
                    "var2": 1,
                    "variable1": 1
                },
                "unaff_R14B": {
                    "condition_flag": 1,
                    "flag": 10,
                    "is_reversed": 1,
                    "mark_flag": 1,
                    "r14": 1,
                    "r14b": 1,
                    "register14_b": 3,
                    "register14_byte": 2,
                    "register_14_b": 2,
                    "register_r14_b": 2,
                    "unaff_r14_b": 1,
                    "unaff_r14b": 1,
                    "unafflicted_register14_b": 1,
                    "var4": 1
                },
                "unaff_R15": {
                    "context": 1,
                    "current_memory_address": 1,
                    "data_buffer": 1,
                    "destination": 1,
                    "param2": 1,
                    "r15": 2,
                    "r15_ptr": 1,
                    "register15": 10,
                    "register_15": 2,
                    "register_r15": 2,
                    "register_value": 1,
                    "result": 2,
                    "result_pointer": 1,
                    "return_value": 1,
                    "struct_ptr": 1,
                    "var5": 1,
                    "variable2": 1
                },
                "unaff_RBP": {
                    "base_pointer": 16,
                    "rbp": 3,
                    "rbp_ptr": 1,
                    "register_base": 1,
                    "register_base_pointer": 1,
                    "register_bp": 2,
                    "stack_base": 1,
                    "stack_frame_ptr": 1,
                    "unaff_rbp": 3,
                    "var1": 1
                },
                "unaff_RBX": {
                    "args": 1,
                    "arguments": 1,
                    "array": 1,
                    "file_info": 1,
                    "function_args": 1,
                    "function_args1": 1,
                    "function_arguments": 1,
                    "function_params": 3,
                    "function_pointers": 1,
                    "memory_layout": 1,
                    "parameters": 8,
                    "params": 1,
                    "pointer_array": 1,
                    "ptr_array": 3,
                    "rbx": 2,
                    "rbx_ptr": 1,
                    "register_bx": 2
                },
                "undefined8": {
                    "undefined8_variable": 1
                }
            },
            "called": [
                "FUN_00114190",
                "dcgettext",
                "FUN_00108179"
            ],
            "calling": [
                "FUN_00115530"
            ],
            "code": "\n\n\nvoid set_file_size_and_alignment_00108072(void)\n\n{\n  byte_variable byte_var;\n  undefined8_variable pointer;\n  char char_var;\n  uint uint_var;\n  long error_message;\n  long result1;\n  long result2;\n  undefined8_variable *parameters;\n  long base_pointer;\n  long register12;\n  long size;\n  char flag;\n  long register15;\n  \n  error_message = dcgettext(0,\"failed to set size\",5);\n  size = parameters[6];\n  result1 = FUN_00114190(*parameters,0,0x18);\n  if (result1 == 0) {\n    *(byte_variable *)(register15 + 0x28) = *(byte_variable *)(register15 + 0x28) | 1;\n    pointer = *parameters;\n    size = size + _DAT_00127990;\n    *(long *)(register15 + 0x30) = size;\n    *(long *)(register15 + 0x38) = size;\n    size = parameters[7];\n    result1 = FUN_00114190(pointer,0,0x60);\n    if (result1 == 0) goto label1;\nerror_label2:\n    result2 = *(long *)(result1 + 0x20);\n    if ((*(byte_variable *)(result1 + 0x14) & 0x40) != 0) {\n      result2 = result2 + size;\n    }\n    *(long *)(register15 + 0x38) = result2;\n    size = FUN_00114190(*parameters,0,0x200);\n    if (size != 0) goto error_label3;\nLAB_001156b8:\n    uint_var = *(uint *)((long)parameters + 0x7c);\n    if (uint_var < 0x3f) goto LAB_001156c4;\n    error_message = dcgettext(0,\"failed to set alignment\",5);\n    *(undefined4 *)(register15 + 0xb4) = *(undefined4 *)((long)parameters + 0xb4);\n    *(byte_variable *)(register15 + 0x28) =\n         *(byte_variable *)(register15 + 0x28) & 0xcf | *(byte_variable *)(parameters + 5) & 0x30;\n    parameters[0xc] = register15;\n    parameters[0xb] = 0;\n    byte_var = *(byte_variable *)((long)parameters + 0x27);\n  }\n  else {\n    result2 = *(long *)(result1 + 0x18);\n    if ((*(byte_variable *)(result1 + 0x14) & 8) == 0) {\n      result2 = result2 + size;\n    }\n    *(byte_variable *)(register15 + 0x28) = *(byte_variable *)(register15 + 0x28) | 1;\n    pointer = *parameters;\n    *(long *)(register15 + 0x30) = result2;\n    *(long *)(register15 + 0x38) = result2;\n    size = parameters[7];\n    result1 = FUN_00114190(pointer,0,0x60);\n    if (result1 != 0) goto error_label2;\nlabel1:\n    pointer = *parameters;\n    *(long *)(register15 + 0x38) = size + _DAT_00127990;\n    size = FUN_00114190(pointer,0,0x200);\n    if (size == 0) goto LAB_001156b8;\nerror_label3:\n    uint_var = *(uint *)(size + 0x2c);\n    if (0x3e < uint_var) {\n      FUN_00108179();\n      return;\n    }\nLAB_001156c4:\n    *(uint *)(register15 + 0x7c) = uint_var;\n    *(undefined4 *)(register15 + 0xb4) = *(undefined4 *)((long)parameters + 0xb4);\n    *(byte_variable *)(register15 + 0x28) =\n         *(byte_variable *)(register15 + 0x28) & 0xcf | *(byte_variable *)(parameters + 5) & 0x30;\n    parameters[0xc] = register15;\n    parameters[0xb] = 0;\n    byte_var = *(byte_variable *)((long)parameters + 0x27);\n  }\n  if ((byte_var & 2) != 0) {\n    size = parameters[0x1a];\n    result1 = FUN_00115d00(size,parameters[0x1c]);\n    if ((result1 != 0) &&\n       (result2 = *(long *)(register12 + 8), *(uint *)(result1 + 0x18) = *(uint *)(result1 + 0x18) | 0x20,\n       *(int *)(result2 + 8) == 5)) {\n      *(long *)(size + 0xb0) = result1;\n      char_var = (**(code **)(*(long *)(base_pointer + 8) + 0x158))();\n      if (char_var == '\\0') {\n        FUN_0010808f();\n        return;\n      }\n      goto LAB_0011571e;\n    }\n  }\n  char_var = (**(code **)(*(long *)(base_pointer + 8) + 0x158))();\n  if (char_var == '\\0') {\n    FUN_0010808f();\n    return;\n  }\nLAB_0011571e:\n  if (flag != '\\0') {\n    *(undefined4 *)(*(long *)(register15 + 0xd0) + 4) = 8;\n  }\n  if (error_message != 0) {\n    DAT_00127a20 = 1;\n    FUN_001126c0(0);\n  }\n  return;\n}\n\n",
            "current_name": "set_file_size_and_alignment_00108072",
            "entrypoint": "0x00108072",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108072": "set_file_size_and_alignment_00108072",
                "LAB_00115695": "label1",
                "LAB_00115860": "error_label2",
                "LAB_00115889": "error_label3",
                "bVar1": "byte_var",
                "byte": "byte_variable",
                "cVar3": "char_var",
                "dcgettext": "get_text",
                "lVar5": "error_message",
                "lVar6": "result1",
                "lVar7": "result2",
                "lVar8": "size",
                "uVar2": "pointer",
                "uVar4": "uint_var",
                "unaff_R12": "register12",
                "unaff_R14B": "flag",
                "unaff_R15": "register15",
                "unaff_RBP": "base_pointer",
                "unaff_RBX": "parameters",
                "undefined8": "undefined8_variable"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010808f": {
            "additional_data": {
                "DAT_00127a20": {
                    "copy_error": 1,
                    "error_flag": 1,
                    "is_error": 1
                },
                "FUN_0010808f": {
                    "copy_private_data": 30,
                    "handle_private_data_copy": 1
                },
                "FUN_001126c0": {
                    "handle_copy_error": 1,
                    "handle_error": 1,
                    "notify_error": 1
                },
                "dcgettext": {
                    "get_error_message": 2,
                    "get_translated_string": 1
                },
                "lVar1": {
                    "copy_error_message": 1,
                    "error_message": 5,
                    "error_msg": 1
                },
                "unaff_R14B": {
                    "condition": 1,
                    "copy_flag": 2,
                    "copy_succeeded": 2,
                    "copy_successful": 1,
                    "flag": 8,
                    "has_failed": 1,
                    "has_private_data": 1,
                    "is_copy_operation": 1,
                    "is_copy_successful": 5,
                    "is_copying_enabled": 1,
                    "is_private": 1,
                    "is_private_data": 1,
                    "is_private_data_copied": 2,
                    "is_success": 1,
                    "should_copy": 1,
                    "should_copy_data": 2
                },
                "unaff_R15": {
                    "address": 1,
                    "base_address": 4,
                    "data_address": 8,
                    "data_pointer": 9,
                    "data_ptr": 4,
                    "pointer": 1,
                    "private_data_address": 3,
                    "source_address": 1
                }
            },
            "called": [
                "dcgettext",
                "FUN_001126c0"
            ],
            "calling": [
                "FUN_00108179"
            ],
            "code": "\nvoid handle_private_data_copy_0010808f(void)\n\n{\n  long error_message;\n  char flag;\n  long data_pointer;\n  \n  error_message = dcgettext(0,\"failed to copy private data\",5);\n  if (flag != '\\0') {\n    *(undefined4 *)(*(long *)(data_pointer + 0xd0) + 4) = 8;\n  }\n  if (error_message != 0) {\n    DAT_00127a20 = 1;\n    FUN_001126c0(0);\n  }\n  return;\n}\n\n",
            "current_name": "handle_private_data_copy_0010808f",
            "entrypoint": "0x0010808f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010808f": "handle_private_data_copy_0010808f",
                "dcgettext": "get_error_message",
                "lVar1": "error_message",
                "unaff_R14B": "flag",
                "unaff_R15": "data_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00108179": {
            "additional_data": {
                "FUN_0010808f": {
                    "cleanup": 1,
                    "handle_error": 2
                },
                "FUN_00108179": {
                    "initialize_alignment": 1,
                    "process_alignment": 1,
                    "set_alignment": 25,
                    "set_alignment_and_flags": 1,
                    "set_alignment_failure": 1,
                    "update_alignment": 2
                },
                "FUN_00115d00": {
                    "check_value": 1,
                    "process_data": 1,
                    "update_object": 1
                },
                "cVar3": {
                    "alignment_flag": 1,
                    "char_result": 1,
                    "check": 1,
                    "flag": 3,
                    "flag2": 1,
                    "result": 16,
                    "result_flag": 1,
                    "return_value": 1,
                    "status": 4,
                    "temp_flag": 1,
                    "var3": 1
                },
                "dcgettext": {
                    "get_localized_text": 1,
                    "get_string": 1,
                    "get_translation": 1
                },
                "lVar1": {
                    "alignment_error": 1,
                    "alignment_msg": 2,
                    "alignment_text": 1,
                    "err_msg": 1,
                    "error_code": 1,
                    "error_message": 1,
                    "error_msg": 1,
                    "failure_message": 1,
                    "gettext_result": 1,
                    "language": 1,
                    "locale_string": 1,
                    "localized_error_msg": 1,
                    "message": 1,
                    "object_pointer": 1,
                    "original_value": 1,
                    "param1": 4,
                    "ptr1": 1,
                    "result": 1,
                    "result1": 1,
                    "return_value": 1,
                    "temp1": 1,
                    "temp_variable1": 1,
                    "translation": 1,
                    "translation_buffer": 1,
                    "translation_result": 1,
                    "var1": 2
                },
                "lVar2": {
                    "alignment_result": 1,
                    "compared_value": 1,
                    "length": 1,
                    "object_type_value": 1,
                    "param": 1,
                    "param1": 1,
                    "param2": 5,
                    "param2_copy": 1,
                    "param2_value": 1,
                    "parameter": 1,
                    "ptr2": 1,
                    "r12_value_2": 1,
                    "result2": 1,
                    "some_value": 2,
                    "temp2": 1,
                    "temp_var": 1,
                    "temp_var1": 2,
                    "temp_variable2": 1,
                    "value": 4,
                    "var2": 3
                },
                "lVar4": {
                    "alignment_failure_msg": 1,
                    "alignment_msg": 1,
                    "err_message": 1,
                    "err_msg": 3,
                    "error_message": 11,
                    "error_msg": 6,
                    "error_msg2": 1,
                    "error_str": 1,
                    "error_string": 1,
                    "failed_alignment_msg": 1,
                    "failure_message": 1,
                    "localized_error_message": 1,
                    "translation": 1,
                    "var4": 1
                },
                "lVar5": {
                    "fun_result": 1,
                    "l_var5": 2,
                    "param2": 1,
                    "result": 8,
                    "result2": 1,
                    "result3": 1,
                    "result_ptr": 1,
                    "result_value": 1,
                    "return_value": 5,
                    "temp3": 1,
                    "temp_var": 1,
                    "temp_var2": 2,
                    "temp_variable3": 1,
                    "translated_string": 1,
                    "translated_value": 1,
                    "updated_object": 1,
                    "var5": 2
                },
                "unaff_R12": {
                    "another_struct_ptr": 1,
                    "context": 1,
                    "function_pointer": 1,
                    "helper_register": 1,
                    "input_param_3": 1,
                    "object_type": 1,
                    "param1": 2,
                    "param3": 1,
                    "parameter3": 1,
                    "r12": 10,
                    "r12_ptr": 1,
                    "r12_val": 1,
                    "r12_value": 3,
                    "register12": 1,
                    "register_r12": 2,
                    "some_pointer3": 1,
                    "temp_register": 1,
                    "var1": 1
                },
                "unaff_R14B": {
                    "alignment_enabled": 1,
                    "boolean_flag": 1,
                    "flag": 9,
                    "param4": 1,
                    "parameter4": 1,
                    "r14_b": 1,
                    "r14_byte": 1,
                    "r14b": 9,
                    "r14b_val": 1,
                    "r14b_value": 3,
                    "register14": 1,
                    "register_r14_b": 2
                },
                "unaff_R15": {
                    "current_address": 1,
                    "data_ptr": 1,
                    "input_param_4": 1,
                    "new_object": 1,
                    "new_struct_ptr": 1,
                    "param2": 2,
                    "param5": 1,
                    "parameter5": 1,
                    "r15": 10,
                    "r15_ptr": 1,
                    "r15_val": 1,
                    "r15_value": 3,
                    "register15": 1,
                    "register_r15": 2,
                    "some_pointer4": 1,
                    "temp_var": 1,
                    "updated_pointer": 1,
                    "var2": 1
                },
                "unaff_RBP": {
                    "base_pointer": 7,
                    "context_ptr": 1,
                    "frame_base": 1,
                    "frame_pointer": 1,
                    "input_param_2": 1,
                    "param2": 1,
                    "parameter2": 1,
                    "rbp": 10,
                    "rbp_ptr": 1,
                    "rbp_val": 1,
                    "rbp_value": 3,
                    "register_rbp": 2,
                    "some_pointer2": 1
                },
                "unaff_RBX": {
                    "base_address": 1,
                    "base_pointer": 1,
                    "current_object": 1,
                    "current_pointer": 1,
                    "input_param_1": 1,
                    "param1": 2,
                    "parameter1": 1,
                    "rbx": 10,
                    "rbx_ptr": 1,
                    "rbx_val": 1,
                    "rbx_value": 3,
                    "register_rbx": 2,
                    "some_pointer1": 1,
                    "struct_ptr": 1,
                    "structure_ptr": 1,
                    "this": 1,
                    "this_pointer": 2
                }
            },
            "called": [
                "dcgettext",
                "FUN_00115d00",
                "FUN_0010808f"
            ],
            "calling": [
                "FUN_00108072"
            ],
            "code": "\nvoid set_alignment_failure_00108179(void)\n\n{\n  long param1;\n  long param2;\n  char result;\n  long error_message;\n  long result;\n  long rbx;\n  long rbp;\n  long r12;\n  char r14b;\n  long r15;\n  \n  error_message = dcgettext(0,\"failed to set alignment\",5);\n  *(undefined4 *)(r15 + 0xb4) = *(undefined4 *)(rbx + 0xb4);\n  *(byte *)(r15 + 0x28) =\n       *(byte *)(r15 + 0x28) & 0xcf | *(byte *)(rbx + 0x28) & 0x30;\n  *(long *)(rbx + 0x60) = r15;\n  *(undefined8 *)(rbx + 0x58) = 0;\n  if ((*(byte *)(rbx + 0x27) & 2) != 0) {\n    param1 = *(long *)(rbx + 0xd0);\n    result = FUN_00115d00(param1,*(undefined8 *)(rbx + 0xe0));\n    if ((result != 0) &&\n       (param2 = *(long *)(r12 + 8), *(uint *)(result + 0x18) = *(uint *)(result + 0x18) | 0x20,\n       *(int *)(param2 + 8) == 5)) {\n      *(long *)(param1 + 0xb0) = result;\n      result = (**(code **)(*(long *)(rbp + 8) + 0x158))();\n      if (result == '\\0') {\n        FUN_0010808f();\n        return;\n      }\n      goto LAB_0011571e;\n    }\n  }\n  result = (**(code **)(*(long *)(rbp + 8) + 0x158))();\n  if (result == '\\0') {\n    FUN_0010808f();\n    return;\n  }\nLAB_0011571e:\n  if (r14b != '\\0') {\n    *(undefined4 *)(*(long *)(r15 + 0xd0) + 4) = 8;\n  }\n  if (error_message != 0) {\n    DAT_00127a20 = 1;\n    FUN_001126c0(0);\n  }\n  return;\n}\n\n",
            "current_name": "set_alignment_failure_00108179",
            "entrypoint": "0x00108179",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108179": "set_alignment_failure_00108179",
                "cVar3": "result",
                "dcgettext": "get_string",
                "lVar1": "param1",
                "lVar2": "param2",
                "lVar4": "error_message",
                "lVar5": "result",
                "unaff_R12": "r12",
                "unaff_R14B": "r14b",
                "unaff_R15": "r15",
                "unaff_RBP": "rbp",
                "unaff_RBX": "rbx"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001081e9": {
            "additional_data": {
                "FUN_001081e9": {
                    "dealloc_memory": 1,
                    "deallocate_memory": 3,
                    "free_and_return": 4,
                    "free_memory": 4,
                    "free_memory_and_return": 3,
                    "release_memory": 16
                },
                "in_RAX": {
                    "input": 1,
                    "param_1": 1,
                    "result": 1,
                    "return_value": 4
                },
                "param_7": {
                    "result": 5,
                    "return_value": 15,
                    "returned_value": 1
                },
                "unaff_RBX": {
                    "allocated_memory": 1,
                    "memory_address": 6,
                    "memory_block": 8,
                    "memory_to_deallocate": 1,
                    "memory_to_free": 5,
                    "memory_to_release": 5,
                    "ptr_to_free": 3,
                    "ptr_to_free_memory": 1
                }
            },
            "called": [
                "free"
            ],
            "calling": [
                "FUN_0011a0e0"
            ],
            "code": "\nundefined8 release_memory_001081e9(void)\n\n{\n  undefined8 return_value;\n  void *memory_block;\n  undefined8 return_value;\n  \n  return_value = return_value;\n  free(memory_block);\n  return return_value;\n}\n\n",
            "current_name": "release_memory_001081e9",
            "entrypoint": "0x001081e9",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001081e9": "release_memory_001081e9",
                "in_RAX": "return_value",
                "param_7": "return_value",
                "unaff_RBX": "memory_block"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00108200": {
            "additional_data": {
                "FUN_00108200": {
                    "copy_and_unlink_file": 3,
                    "copy_file": 10,
                    "copy_file_and_delete": 1,
                    "copy_file_and_handle_error": 2,
                    "copy_file_and_handle_errors": 2,
                    "copy_file_and_reason": 1,
                    "copy_file_and_unlink": 7,
                    "copy_file_reason": 3,
                    "copy_file_with_reason": 1,
                    "handle_error_and_unlink": 1
                },
                "FUN_00119ed0": {
                    "handle_error": 1,
                    "log_error": 1,
                    "print_error": 2,
                    "print_error_message": 2
                },
                "FUN_0011a350": {
                    "perform_additional_action": 1,
                    "perform_additional_actions": 1,
                    "perform_cleanup": 2,
                    "reverse_something": 1
                },
                "__errno_location": {
                    "get_errno_location": 3,
                    "get_error_location": 1,
                    "get_error_number": 1,
                    "get_error_number_location": 1
                },
                "auVar3": {
                    "result": 6,
                    "return_value": 7
                },
                "dcgettext": {
                    "copy_error_message": 1,
                    "get_copy_error_message": 1,
                    "get_copy_file_error_message": 1,
                    "get_error_message": 1,
                    "get_localized_error_message": 1,
                    "translate": 1
                },
                "piVar1": {
                    "errno_location": 4,
                    "errno_location_ptr": 1,
                    "errno_pointer": 1,
                    "error_location": 3,
                    "error_number": 4,
                    "error_number_pointer": 1,
                    "error_number_ptr": 1,
                    "error_pointer": 3
                },
                "strerror": {
                    "get_error": 1,
                    "get_error_description": 1,
                    "get_error_message": 3,
                    "get_error_string": 1
                },
                "uVar2": {
                    "copy_error_message": 1,
                    "error_message": 11,
                    "error_msg": 1,
                    "error_string": 1
                },
                "unaff_R12B": {
                    "copy_failed": 1,
                    "copy_file_flag": 1,
                    "copy_flag": 5,
                    "copy_successful": 2,
                    "is_copy": 3,
                    "is_copy_failed": 1,
                    "is_recursive": 1,
                    "is_reversed": 1,
                    "is_reversible": 1,
                    "is_successful": 1,
                    "should_copy": 4,
                    "should_delete": 3,
                    "should_remove_source": 1,
                    "should_reverse": 5,
                    "should_unlink": 1
                },
                "unaff_R13": {
                    "error_code": 4,
                    "error_flag": 2,
                    "error_message": 1,
                    "file_flag": 1,
                    "file_flags": 2,
                    "file_options": 1,
                    "file_permission": 2,
                    "file_permissions": 3,
                    "file_size": 11,
                    "flags": 1,
                    "status": 1,
                    "syscall_result": 1,
                    "unlink_flag": 1
                },
                "unaff_RBP": {
                    "file_name": 6,
                    "file_path": 14,
                    "file_to_copy": 3,
                    "file_to_delete": 1,
                    "filename": 5,
                    "source_file_path": 2
                },
                "unaff_retaddr": {
                    "return_address": 30,
                    "return_value": 1
                },
                "unlink": {
                    "delete_file": 4,
                    "remove_file": 2
                }
            },
            "called": [
                "dcgettext",
                "unlink",
                "FUN_00119ed0",
                "__errno_location",
                "strerror",
                "FUN_0011a350"
            ],
            "calling": [
                "FUN_00115970"
            ],
            "code": "\nundefined  [16] copy_and_unlink_file_00108200(void)\n\n{\n  int *error_number;\n  undefined8 error_message;\n  char *file_path;\n  char copy_flag;\n  ulong file_size;\n  undefined return_value [16];\n  undefined8 return_address;\n  \n  error_number = __errno_location();\n  strerror(*error_number);\n  error_message = dcgettext(0,\"unable to copy file \\'%s\\'; reason: %s\",5);\n  FUN_00119ed0(error_message);\n  delete_file(file_path);\n  if (copy_flag != '\\0') {\n    FUN_0011a350();\n  }\n  return_value._0_8_ = file_size & 0xffffffff;\n  return_value._8_8_ = return_address;\n  return return_value;\n}\n\n",
            "current_name": "copy_and_unlink_file_00108200",
            "entrypoint": "0x00108200",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108200": "copy_and_unlink_file_00108200",
                "__errno_location": "get_errno_location",
                "auVar3": "return_value",
                "dcgettext": "get_localized_error_message",
                "piVar1": "error_number",
                "strerror": "get_error_message",
                "uVar2": "error_message",
                "unaff_R12B": "copy_flag",
                "unaff_R13": "file_size",
                "unaff_RBP": "file_path",
                "unaff_retaddr": "return_address",
                "unlink": "delete_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00108237": {
            "additional_data": {
                "FUN_00108237": {
                    "close_and_reset_errno": 1,
                    "close_and_reset_error": 1,
                    "close_and_return_error": 3,
                    "close_and_return_error_code": 1,
                    "close_and_set_errno": 6,
                    "close_file": 7,
                    "close_file_and_handle_error": 1,
                    "close_file_and_handle_errors": 1,
                    "close_file_and_reset_errno": 1,
                    "close_file_and_return_error": 3,
                    "close_file_and_set_errno": 1,
                    "close_file_and_set_error_code": 2,
                    "close_file_descriptor": 2
                },
                "__errno_location": {
                    "get_errno_location": 1
                },
                "close": {
                    "close_file": 1
                },
                "iVar1": {
                    "errno_value": 2,
                    "original_errno": 2,
                    "original_error_code": 1,
                    "previous_error": 2
                },
                "piVar2": {
                    "errno_location": 2,
                    "errno_location_ptr": 1,
                    "errno_pointer": 2,
                    "errno_ptr": 3,
                    "error_code_pointer": 1,
                    "error_pointer": 1
                },
                "unaff_R12D": {
                    "fd": 2,
                    "file_descriptor": 29
                }
            },
            "called": [
                "__errno_location",
                "close"
            ],
            "calling": [
                "FUN_00115a90"
            ],
            "code": "\nundefined8 close_file_and_return_error_00108237(void)\n\n{\n  int original_errno;\n  int *errno_ptr;\n  int file_descriptor;\n  \n  errno_ptr = __errno_location();\n  original_errno = *errno_ptr;\n  close_file(file_descriptor);\n  *errno_ptr = original_errno;\n  return 0xffffffff;\n}\n\n",
            "current_name": "close_file_and_return_error_00108237",
            "entrypoint": "0x00108237",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108237": "close_file_and_return_error_00108237",
                "__errno_location": "get_errno_location",
                "close": "close_file",
                "iVar1": "original_errno",
                "piVar2": "errno_ptr",
                "unaff_R12D": "file_descriptor"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010827b": {
            "additional_data": {
                "FUN_0010827b": {
                    "check_section_options": 1,
                    "display_section_error": 1,
                    "handle_section_match": 2,
                    "handle_section_match_error": 1,
                    "print_error_message": 2,
                    "print_matching_section_error": 1,
                    "print_section_error": 2,
                    "print_section_error_message": 1,
                    "process_error_section": 1,
                    "process_section": 8,
                    "process_section_error": 1,
                    "process_section_match": 3,
                    "process_section_matching_options": 1,
                    "process_section_options": 3,
                    "section_error": 1,
                    "section_match_error": 1,
                    "validate_section_options": 1
                },
                "uVar1": {
                    "current_option": 1,
                    "section": 2,
                    "section_address": 2,
                    "section_name": 4,
                    "section_pointer": 1,
                    "section_value": 17
                },
                "uVar2": {
                    "error_message": 27
                },
                "unaff_RBX": {
                    "section_address": 1,
                    "section_array": 1,
                    "section_data": 1,
                    "section_info_ptr": 1,
                    "section_options": 1,
                    "section_pointer": 16,
                    "section_ptr": 6
                }
            },
            "called": [
                "FUN_00119dd0",
                "dcgettext"
            ],
            "calling": [
                "FUN_00115b70"
            ],
            "code": "\nvoid process_section_match_0010827b(void)\n\n{\n  undefined8 section_value;\n  undefined8 error_message;\n  undefined8 *section_pointer;\n  \n  section_value = *section_pointer;\n  error_message = dcgettext(0,\"error: section %s matches both remove and copy options\",5);\n                    \n  FUN_00119dd0(error_message,section_value);\n}\n\n",
            "current_name": "process_section_match_0010827b",
            "entrypoint": "0x0010827b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010827b": "process_section_match_0010827b",
                "uVar1": "section_value",
                "uVar2": "error_message",
                "unaff_RBX": "section_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010829e": {
            "additional_data": {
                "FUN_0010829e": {
                    "check_and_execute_function": 1,
                    "check_condition": 7,
                    "check_condition_and_call_function": 6,
                    "check_condition_and_execute": 1,
                    "check_condition_and_return": 1,
                    "check_condition_and_return_value": 1,
                    "check_ebp_value": 4,
                    "check_function_state": 1,
                    "check_input": 2,
                    "check_parameter": 1,
                    "check_return_value": 1,
                    "check_state_and_execute_action": 1,
                    "determine_action": 1,
                    "determine_next_action": 1,
                    "process_ebp_value": 1,
                    "process_input": 1
                },
                "FUN_001082b3": {
                    "alternative_calculation": 1,
                    "alternative_function": 1,
                    "calculate_result": 1,
                    "check_ebp_four": 1,
                    "execute_action2": 1,
                    "execute_function_b": 1,
                    "execute_other_function": 1,
                    "execute_second_subfunction": 1,
                    "function_2": 1,
                    "handle_error": 1,
                    "other_function": 1,
                    "perform_action": 4,
                    "perform_operation": 4,
                    "perform_other_action": 1,
                    "process_case2": 1,
                    "process_case6": 1,
                    "process_data": 2,
                    "process_ebp_condition": 1,
                    "process_ebp_value": 1,
                    "process_input": 1,
                    "process_output": 1,
                    "process_value": 1
                },
                "FUN_00113ede": {
                    "calculate_result": 1,
                    "execute_action": 1,
                    "execute_action1": 1,
                    "execute_first_subfunction": 1,
                    "execute_function_a": 1,
                    "extract_data": 1,
                    "fetch_data": 1,
                    "function_1": 1,
                    "get_error_message": 1,
                    "get_string": 2,
                    "process_case1": 1,
                    "process_case5": 1,
                    "process_condition": 1,
                    "retrieve_data": 1,
                    "reverse_bytes": 1,
                    "reverse_data": 3,
                    "reverse_string": 6,
                    "reverse_text": 1,
                    "reverse_value": 1
                },
                "unaff_EBP": {
                    "arg_value": 1,
                    "condition": 10,
                    "condition_value": 1,
                    "condition_variable": 1,
                    "ebp_value": 6,
                    "error_code": 2,
                    "input": 1,
                    "input_value": 3,
                    "integer_value": 1,
                    "parameter": 3,
                    "state": 2
                }
            },
            "called": [
                "FUN_001082b3",
                "FUN_00113ede"
            ],
            "calling": [
                "FUN_00115b70"
            ],
            "code": "\nundefined8 check_condition_and_call_function_0010829e(void)\n\n{\n  undefined8 uVar1;\n  int condition;\n  \n  if (condition == 5) {\n    uVar1 = FUN_00113ede();\n    return uVar1;\n  }\n  if ((condition != 4) && (condition == 6)) {\n    uVar1 = FUN_001082b3();\n    return uVar1;\n  }\n  return 0;\n}\n\n",
            "current_name": "check_condition_and_call_function_0010829e",
            "entrypoint": "0x0010829e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010829e": "check_condition_and_call_function_0010829e",
                "unaff_EBP": "condition"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001082b3": {
            "additional_data": {
                "FUN_001082b3": {
                    "apply_xor_operation": 1,
                    "apply_xor_with_one": 1,
                    "calculate_complement": 1,
                    "calculate_inverse": 3,
                    "calculate_inverted_value": 1,
                    "calculate_modified_value": 1,
                    "calculate_xor_with_one": 1,
                    "evaluate_xor_result": 1,
                    "extracted_data": 1,
                    "get_flipped_result": 1,
                    "invert_and_return": 3,
                    "invert_and_return_one": 3,
                    "invert_and_return_one_bit_result": 1,
                    "invert_and_return_result": 4,
                    "invert_and_return_unsigned": 1,
                    "invert_and_return_value": 1,
                    "invert_and_xor": 2,
                    "invert_output": 2,
                    "invert_result": 1
                },
                "FUN_00113ede": {
                    "decompile": 1,
                    "decompile_function": 1,
                    "extract_data": 1,
                    "extract_input": 1,
                    "extract_unsigned_value": 1,
                    "extract_value": 2,
                    "get_input": 4,
                    "get_input_string": 1,
                    "get_original_value": 2,
                    "get_string": 3,
                    "get_string_value": 1,
                    "get_value_from_subfunction": 1,
                    "obtain_result": 1,
                    "obtain_value": 1,
                    "retrieve_data": 2,
                    "reverse_string": 5
                },
                "uVar1": {
                    "input_value": 1,
                    "inverted_result": 1,
                    "result": 14,
                    "reversed_string": 2
                }
            },
            "called": [
                "FUN_00113ede"
            ],
            "calling": [
                "FUN_0010829e"
            ],
            "code": "\nuint invert_and_return_one_bit_result_001082b3(void)\n\n{\n  uint result;\n  \n  result = FUN_00113ede();\n  return result ^ 1;\n}\n\n",
            "current_name": "invert_and_return_one_bit_result_001082b3",
            "entrypoint": "0x001082b3",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001082b3": "invert_and_return_one_bit_result_001082b3",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001082c3": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "FUN_001082c3": {
                    "clear_data": 1,
                    "get_default_value": 8,
                    "get_description": 1,
                    "get_zero": 2,
                    "get_zero_value": 2,
                    "initialize": 9,
                    "initialize_application": 1,
                    "initialize_data": 3,
                    "initialize_data_structure": 1,
                    "initialize_program": 2,
                    "initialize_return_value": 1
                },
                "PTR_": {
                    "": 1
                },
                "return_value": {
                    "status": 1
                },
                "undefined8": {
                    "uint64_t": 2,
                    "unsigned_long": 1,
                    "void": 8
                }
            },
            "called": [],
            "calling": [
                "FUN_00115d00"
            ],
            "code": "\nvoid initialize_data_structure_001082c3(void)\n\n{\n  return 0;\n}\n\n",
            "current_name": "initialize_data_structure_001082c3",
            "entrypoint": "0x001082c3",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001082c3": "initialize_data_structure_001082c3",
                "undefined8": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001082df": {
            "additional_data": {
                "FUN_001082df": {
                    "extract_and_call_sub_func": 1,
                    "extract_data_and_invoke_function": 1,
                    "extract_relevant_pointers": 1,
                    "extract_valid_pointers": 3,
                    "filter_and_execute": 1,
                    "process_data": 16,
                    "process_entries": 1,
                    "process_items": 2,
                    "process_records": 3
                },
                "FUN_00115d70": {
                    "check_condition": 1,
                    "is_data_valid": 1
                },
                "cVar3": {
                    "is_valid": 5,
                    "result": 22,
                    "result_char": 1,
                    "return_status": 1,
                    "return_value": 2
                },
                "lVar2": {
                    "current_data": 1,
                    "current_element": 6,
                    "current_item": 1,
                    "current_record": 1,
                    "current_value": 5,
                    "current_value_2": 1,
                    "element": 1,
                    "element_value": 2,
                    "entry_value": 1,
                    "pointer_value": 2,
                    "record_value": 2,
                    "value": 8
                },
                "param_1": {
                    "data": 1,
                    "data1": 1
                },
                "param_2": {
                    "data2": 1,
                    "flag": 1
                },
                "puVar4": {
                    "current_ptr": 1,
                    "filtered_array": 1,
                    "filtered_records": 1,
                    "new_array": 3,
                    "new_array_ptr": 1,
                    "new_buffer": 1,
                    "new_data_pointer": 1,
                    "new_item_pointer": 1,
                    "new_pointer_array": 2,
                    "output_array": 3,
                    "output_buffer": 1,
                    "output_pointer": 4,
                    "output_ptr": 2,
                    "processed_elements": 1,
                    "result_array": 1,
                    "result_pointer": 4,
                    "result_ptr": 3
                },
                "puVar5": {
                    "current_buffer": 1,
                    "current_data_pointer": 1,
                    "current_output": 2,
                    "current_output_ptr": 1,
                    "current_pointer": 3,
                    "current_result": 1,
                    "new_array_ptr": 1,
                    "new_array_ptr_temp": 1,
                    "next_array_element": 1,
                    "next_element": 1,
                    "next_filtered_element": 1,
                    "next_filtered_record": 1,
                    "next_item_pointer": 1,
                    "next_processed_element": 1,
                    "next_ptr": 1,
                    "next_result_pointer": 1,
                    "output_element_pointer": 1,
                    "output_pointer": 1,
                    "output_ptr": 1,
                    "temp_ptr": 1,
                    "temporary_pointer": 1,
                    "updated_output_pointer": 1,
                    "updated_output_ptr": 1,
                    "updated_pointer_array": 1,
                    "updated_result_pointer": 2,
                    "updated_result_ptr": 2
                },
                "uVar1": {
                    "array_length": 1,
                    "array_size": 2,
                    "buffer_size": 1,
                    "count": 5,
                    "current_index": 1,
                    "element_count": 1,
                    "entry_count": 1,
                    "item_count": 2,
                    "num_elements": 10,
                    "num_pointers": 2,
                    "number_of_elements": 1,
                    "record_count": 3,
                    "total_count": 1
                },
                "uVar6": {
                    "counter": 4,
                    "current_idx": 1,
                    "current_index": 10,
                    "i": 1,
                    "index": 11,
                    "loop_counter": 1,
                    "loop_index": 3
                },
                "unaff_R13": {
                    "array": 1,
                    "array_ptr": 2,
                    "data_array": 6,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "entry_array": 1,
                    "input_array": 3,
                    "input_pointer": 2,
                    "input_ptr": 1,
                    "item_array": 1,
                    "item_list": 1,
                    "pointer_array": 3,
                    "pointers_array": 1,
                    "record_array": 2,
                    "record_pointer": 1,
                    "source_array": 2,
                    "source_ptr": 1,
                    "sub_function_pointers": 1
                },
                "unaff_RBP": {
                    "base_pointer": 8,
                    "base_ptr": 3,
                    "frame_base": 2,
                    "frame_pointer": 9,
                    "function_pointer": 2,
                    "other_base": 1,
                    "stack_base": 3,
                    "stack_base_pointer": 1,
                    "user_data": 1
                },
                "unaff_RBX": {
                    "array_address": 1,
                    "array_base": 1,
                    "array_pointer": 2,
                    "array_ptr": 1,
                    "base_address": 14,
                    "base_pointer": 3,
                    "buffer_address": 1,
                    "current_value": 1,
                    "data": 1,
                    "data_array": 1,
                    "data_pointer": 1,
                    "input_buffer": 1,
                    "item_pointer": 1,
                    "record_array": 1,
                    "record_pointer": 1
                }
            },
            "called": [
                "FUN_00115d70"
            ],
            "calling": [
                "FUN_00115dc0"
            ],
            "code": "\nvoid process_data_001082df(void)\n\n{\n  uint num_elements;\n  long value;\n  char result;\n  long base_address;\n  undefined8 *output_pointer;\n  undefined8 *current_pointer;\n  long frame_pointer;\n  ulong index;\n  undefined8 *data_array;\n  \n  num_elements = *(uint *)(base_address + 0x78);\n  if (DAT_00127a2c == 7) {\n    output_pointer = data_array;\n    for (index = 0; index != num_elements; index = index + 1) {\n      current_pointer = output_pointer;\n      if (((*(long **)data_array[index] != (long *)0x0) &&\n          (value = **(long **)data_array[index], value != 0)) &&\n         (result = FUN_00115d70(*(undefined8 *)(value + 8),DAT_00127a08), result != '\\0')) {\n        current_pointer = output_pointer + 1;\n        *output_pointer = data_array[index];\n      }\n      output_pointer = current_pointer;\n    }\n    *output_pointer = 0;\n  }\n                    /* WARNING: Could not recover jumptable at 0x00115eae. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (**(code **)(*(long *)(frame_pointer + 8) + 0x288))();\n  return;\n}\n\n",
            "current_name": "process_data_001082df",
            "entrypoint": "0x001082df",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001082df": "process_data_001082df",
                "cVar3": "result",
                "lVar2": "value",
                "puVar4": "output_pointer",
                "puVar5": "current_pointer",
                "uVar1": "num_elements",
                "uVar6": "index",
                "unaff_R13": "data_array",
                "unaff_RBP": "frame_pointer",
                "unaff_RBX": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00108375": {
            "additional_data": {
                "FUN_00108375": {
                    "check_and_drop_share_flag": 7,
                    "check_flag_and_drop": 1,
                    "check_flag_and_drop_if_not_coff": 1,
                    "check_format_and_drop_share_flag": 1,
                    "check_output_format_and_drop_share_flag": 1,
                    "convert_flag_to_coff": 1,
                    "drop_share_flag": 3,
                    "drop_share_flag_if_needed": 1,
                    "drop_share_flag_if_not_coff": 10,
                    "extract_share_flag": 1,
                    "handle_share_flag_format": 1,
                    "process_output_format": 1,
                    "process_share_flag": 1,
                    "validate_output_format": 1
                },
                "FUN_00119ed0": {
                    "print_message": 1,
                    "print_note_message": 1,
                    "print_note_with_str": 1
                },
                "dcgettext": {
                    "get_localized_str": 1,
                    "get_localized_string": 1,
                    "get_message": 1
                },
                "param_1": {
                    "arg1": 5,
                    "function_param": 1,
                    "handle": 1,
                    "initial_value": 1,
                    "input_param": 1,
                    "param": 1,
                    "param1": 11,
                    "param_1": 6,
                    "param_ptr": 2,
                    "unused_param": 2
                },
                "param_2": {
                    "arg2": 5,
                    "input_params": 2,
                    "param2": 10,
                    "param_2": 2,
                    "param_2_array": 1,
                    "param_arr": 1,
                    "param_array": 6,
                    "param_list": 1,
                    "parameters": 1,
                    "params": 2
                },
                "param_3": {
                    "another_param": 1,
                    "arg3": 5,
                    "format": 1,
                    "output_format": 1,
                    "output_param": 1,
                    "param3": 11,
                    "param_3": 6,
                    "param_size": 1,
                    "param_val": 2,
                    "param_value": 2
                },
                "uVar1": {
                    "arg1_copy": 1,
                    "first_element": 1,
                    "first_param": 2,
                    "first_param_value": 1,
                    "input_flag": 1,
                    "input_string": 1,
                    "param1": 1,
                    "param1_value": 1,
                    "param_2_0": 1,
                    "result": 1,
                    "value": 2,
                    "value1": 4,
                    "value_1": 1,
                    "var1": 12
                },
                "uVar2": {
                    "error_message": 4,
                    "error_msg": 1,
                    "localized_str": 1,
                    "message": 4,
                    "msg": 1,
                    "note": 1,
                    "param2": 1,
                    "translation_string": 1,
                    "value2": 2,
                    "value_2": 1,
                    "var2": 12,
                    "warning_message": 1
                },
                "unaff_EBX": {
                    "ebx": 12,
                    "ebx_val": 1,
                    "ebx_value": 7,
                    "flag": 2,
                    "flag_register": 1,
                    "flags": 1,
                    "modified_ebx": 3,
                    "modified_ebx_value": 1,
                    "unaff_ebx": 1,
                    "updated_ebx": 1
                }
            },
            "called": [
                "dcgettext",
                "FUN_00119ed0"
            ],
            "calling": [
                "FUN_00115f30"
            ],
            "code": "\nuint drop_share_flag_if_not_coff_00108375(undefined8 param1,undefined8 *param2,undefined8 param3)\n\n{\n  undefined8 var1;\n  undefined8 var2;\n  uint ebx;\n  \n  if (*(int *)(param2[1] + 8) != 2) {\n    var1 = *param2;\n    ebx = ebx & 0xf7ffffff;\n    var2 = dcgettext(0,\"%s[%s]: Note - dropping \\'share\\' flag as output format is not COFF\",5);\n    FUN_00119ed0(var2,var1,param3);\n  }\n  return ebx;\n}\n\n",
            "current_name": "drop_share_flag_if_not_coff_00108375",
            "entrypoint": "0x00108375",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108375": "drop_share_flag_if_not_coff_00108375",
                "dcgettext": "get_message",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "var1",
                "uVar2": "var2",
                "unaff_EBX": "ebx"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001083b7": {
            "additional_data": {
                "FUN_001083b7": {
                    "check_and_execute_action": 1,
                    "check_and_exit": 3,
                    "check_and_exit_on_error": 1,
                    "check_and_handle_error": 1,
                    "check_error_and_exit": 7,
                    "check_param_and_handle_error": 1,
                    "decompiled_function": 1,
                    "handle_error": 7,
                    "handle_error_and_exit": 2,
                    "handle_param": 3,
                    "handle_param_1": 1,
                    "reverse_and_exit": 1
                },
                "FUN_0011a110": {
                    "handle_error": 1,
                    "process_bfd_data": 1
                },
                "bfd_get_error": {
                    "get_error_code": 1
                },
                "iVar1": {
                    "bfd_error": 5,
                    "bfd_error_code": 3,
                    "error": 1,
                    "error_code": 5,
                    "error_type": 2
                },
                "param_1": {
                    "error": 1,
                    "error_code": 19,
                    "input": 1,
                    "input_error": 1,
                    "input_param": 2,
                    "input_value": 4,
                    "param": 3
                },
                "unaff_RBP": {
                    "bfd_data_ptr": 1,
                    "bfd_ptr": 1,
                    "data_pointer": 1,
                    "function_argument": 1,
                    "function_arguments": 1,
                    "function_pointer": 6,
                    "function_ptr": 4,
                    "pointer": 6,
                    "pointer_args": 1,
                    "pointer_to_error": 1,
                    "pointer_to_function": 1,
                    "pointer_to_retaddr": 2,
                    "ptr_data": 1,
                    "ptr_error_handler": 1,
                    "ptr_return_value": 1,
                    "ptr_to_ret_value": 1,
                    "stack_pointer": 1
                },
                "unaff_retaddr": {
                    "return_addr": 1,
                    "return_address": 29,
                    "return_value": 1
                },
                "xexit": {
                    "exit_program": 1
                }
            },
            "called": [
                "FUN_0011a110",
                "bfd_get_error",
                "xexit"
            ],
            "calling": [
                "FUN_00116030"
            ],
            "code": "\nundefined8 check_and_exit_on_error_001083b7(long error_code)\n\n{\n  int error_code;\n  undefined8 *function_pointer;\n  undefined8 return_address;\n  \n  if (error_code == -1) {\n    error_code = bfd_get_error();\n    if (error_code == 5) {\n      return return_address;\n    }\n  }\n  FUN_0011a110(*function_pointer);\n                    \n  xexit(1);\n}\n\n",
            "current_name": "check_and_exit_on_error_001083b7",
            "entrypoint": "0x001083b7",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001083b7": "check_and_exit_on_error_001083b7",
                "bfd_get_error": "get_error_code",
                "iVar1": "error_code",
                "param_1": "error_code",
                "unaff_RBP": "function_pointer",
                "unaff_retaddr": "return_address",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001083de": {
            "additional_data": {
                "FUN_001083de": {
                    "reverse_bytes": 6,
                    "reverse_bytes_if_divisible": 1,
                    "reverse_bytes_in_section": 14,
                    "reverse_bytes_of_section": 2,
                    "reverse_bytes_section": 3,
                    "reverse_bytes_with_length_check": 1,
                    "reverse_section_bytes": 4
                },
                "FUN_00119dd0": {
                    "print_error": 1
                },
                "dcgettext": {
                    "get_message": 1
                },
                "uVar1": {
                    "data": 1,
                    "section": 1,
                    "section_address": 1,
                    "section_content": 1,
                    "section_data": 1,
                    "section_length": 1,
                    "section_pointer": 2,
                    "section_value": 12
                },
                "uVar2": {
                    "error_message": 12,
                    "error_msg": 6,
                    "error_string": 2
                },
                "unaff_EBP": {
                    "divisible_by": 1,
                    "divisor": 1,
                    "length_of_section": 1,
                    "section_length": 27,
                    "section_size": 1
                },
                "unaff_RBX": {
                    "input": 1,
                    "input_ptr": 1,
                    "section_bytes": 2,
                    "section_data": 2,
                    "section_length": 1,
                    "section_pointer": 22,
                    "section_ptr": 2
                }
            },
            "called": [
                "FUN_00119dd0",
                "dcgettext"
            ],
            "calling": [
                "FUN_00116110"
            ],
            "code": "\nvoid reverse_bytes_in_section_001083de(void)\n\n{\n  undefined8 section_value;\n  undefined8 error_message;\n  undefined8 *section_pointer;\n  undefined4 section_length;\n  \n  section_value = *section_pointer;\n  error_message = dcgettext(0,\"cannot reverse bytes: length of section %s must be evenly divisible by %d\",5)\n  ;\n                    \n  FUN_00119dd0(error_message,section_value,section_length);\n}\n\n",
            "current_name": "reverse_bytes_in_section_001083de",
            "entrypoint": "0x001083de",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001083de": "reverse_bytes_in_section_001083de",
                "dcgettext": "get_message",
                "uVar1": "section_value",
                "uVar2": "error_message",
                "unaff_EBP": "section_length",
                "unaff_RBX": "section_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00108466": {
            "additional_data": {
                "FUN_00108466": {
                    "cleanup_and_free": 1,
                    "cleanup_and_free_memory": 1,
                    "cleanup_function": 1,
                    "deallocate_memory": 1,
                    "initialize": 1,
                    "initialize_and_free": 3,
                    "initialize_and_free_memory": 13,
                    "initialize_and_free_resources": 1,
                    "initialize_data": 5,
                    "initialize_program": 4
                },
                "FUN_001126c0": {
                    "call_subfunction": 1,
                    "cleanup_resources": 1,
                    "custom_function": 1,
                    "do_something": 2,
                    "execute_cleanup_processes": 1,
                    "execute_initialization": 1,
                    "perform_action": 1,
                    "perform_cleanup": 2,
                    "reverse_bit_pattern": 1
                },
                "__ptr": {
                    "ptr": 1
                },
                "param_7": {
                    "buffer": 1,
                    "data": 1,
                    "data_pointer": 4,
                    "data_to_free": 1,
                    "dynamic_memory_ptr": 1,
                    "memory_allocation": 1,
                    "memory_block": 8,
                    "memory_pointer": 1,
                    "memory_to_free": 9,
                    "pointer": 1,
                    "pointer_to_free": 1,
                    "ptr_to_free": 1
                }
            },
            "called": [
                "free",
                "FUN_001126c0"
            ],
            "calling": [
                "FUN_00116110"
            ],
            "code": "\nvoid initialize_and_free_memory_00108466(void)\n\n{\n  void *memory_to_free;\n  \n  DAT_00127a20 = 1;\n  FUN_001126c0(0);\n  free(memory_to_free);\n  return;\n}\n\n",
            "current_name": "initialize_and_free_memory_00108466",
            "entrypoint": "0x00108466",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108466": "initialize_and_free_memory_00108466",
                "param_7": "memory_to_free"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010847a": {
            "additional_data": {
                "FUN_0010847a": {
                    "execute_initialization": 4,
                    "execute_initialization_routine": 1,
                    "execute_main_function": 3,
                    "execute_operations": 1,
                    "initialize": 6,
                    "initialize_and_start_execution": 1,
                    "initialize_components": 1,
                    "initialize_device": 1,
                    "initialize_resources": 1,
                    "initialize_system": 9
                },
                "FUN_00116490": {
                    "execute_device_initialization": 1,
                    "execute_function": 2,
                    "execute_initialization": 2,
                    "execute_process": 1,
                    "execute_sub_function": 3,
                    "execute_subfunction": 1,
                    "execute_system_initialization": 1,
                    "execute_task": 2,
                    "initialize_subsystem": 1,
                    "perform_action": 1,
                    "perform_complex_operation": 1,
                    "perform_operation": 2,
                    "perform_reverse_operation": 1,
                    "perform_system_setup": 1,
                    "perform_task": 2,
                    "process_data": 1,
                    "sub_function": 1,
                    "subfunction": 1
                },
                "param_1": {
                    "arg1": 11,
                    "argument1": 1,
                    "data": 2,
                    "device_address": 1,
                    "function_ptr": 1,
                    "input": 1,
                    "input1": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "param1": 3,
                    "param_1": 2,
                    "resource_param1": 1,
                    "setup_params": 1,
                    "system_info": 1,
                    "unspecified_param1": 1
                },
                "param_2": {
                    "arg2": 11,
                    "argument2": 1,
                    "counter": 1,
                    "data_param": 1,
                    "input2": 1,
                    "length": 1,
                    "param2": 4,
                    "param_2": 2,
                    "param_a": 1,
                    "resource_param2": 1,
                    "size": 3,
                    "size_module": 1,
                    "unspecified_param2": 1
                },
                "param_3": {
                    "arg3": 11,
                    "argument3": 1,
                    "config_param": 1,
                    "count": 1,
                    "data": 1,
                    "flags": 1,
                    "input3": 1,
                    "offset": 1,
                    "param3": 4,
                    "param_3": 2,
                    "param_b": 1,
                    "resource_param3": 1,
                    "size": 1,
                    "system_state": 1,
                    "unspecified_param3": 1
                },
                "param_4": {
                    "arg4": 11,
                    "argument4": 1,
                    "flag": 1,
                    "flags": 1,
                    "index": 1,
                    "input4": 1,
                    "mem_param": 1,
                    "offset": 1,
                    "option_flag": 1,
                    "param4": 4,
                    "param_4": 2,
                    "param_c": 1,
                    "resource_param4": 1,
                    "unspecified_param4": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_00116490"
            ],
            "calling": [
                "FUN_001086af"
            ],
            "code": "\nvoid initialize_system_0010847a(void)\n\n{\n  FUN_00116490();\n  return;\n}\n\n",
            "current_name": "initialize_system_0010847a",
            "entrypoint": "0x0010847a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010847a": "initialize_system_0010847a"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001086af": {
            "additional_data": {
                "FUN_0010847a": {
                    "helper_function3": 1
                },
                "FUN_001086af": {
                    "analyze_binary_function": 1,
                    "parse_build_attribute_notes": 1,
                    "process_build_attributes": 1
                },
                "FUN_001126c0": {
                    "helper_function5": 1
                },
                "FUN_0011a1b0": {
                    "helper_function4": 1
                },
                "PTR_FUN_00116490": {
                    "helper_function": 1
                },
                "PTR_FUN_00119ed0": {
                    "helper_function2": 1
                },
                "PTR_bfd_set_error": {
                    "bfd_set_error": 1
                },
                "PTR_dcgettext": {
                    "dcgettext": 1
                },
                "PTR_qsort": {
                    "qsort": 1
                },
                "__base": {
                    "base_pointer": 1
                },
                "__compar": {
                    "compare_function": 1,
                    "comparison_function": 1,
                    "temp_variable_38": 1
                },
                "__compar_fn_t": {
                    "comparison_function_pointer": 1
                },
                "__n": {
                    "temp_variable_41": 1
                },
                "__nmemb": {
                    "array_size": 3,
                    "count": 1,
                    "length": 1,
                    "num": 1,
                    "num_elements": 3,
                    "num_elems": 1,
                    "num_items": 1,
                    "num_members": 1,
                    "size": 7,
                    "size_param": 1,
                    "sizeof_array": 1,
                    "temp_size": 1,
                    "temp_variable7": 1,
                    "temp_variable_37": 1,
                    "var_27": 1
                },
                "__ptr": {
                    "allocated_memory": 1,
                    "allocation": 1,
                    "attribute_ptr": 1,
                    "buffer": 2,
                    "char_ptr": 1,
                    "data_pointer": 1,
                    "dyn_mem_ptr": 1,
                    "dynamic_array": 2,
                    "dynamic_pointer": 1,
                    "malloc_ptr": 1,
                    "new_pointer": 1,
                    "pointer_variable": 1,
                    "ptr": 4,
                    "ptr_var2": 2,
                    "result_string": 1,
                    "temp14": 1,
                    "temp_array2": 1,
                    "temp_pointer6": 1,
                    "temp_variable_36": 1,
                    "unused_variable_8": 1,
                    "var_28": 1
                },
                "__size": {
                    "size": 1
                },
                "bVar22": {
                    "bool_variable": 1,
                    "boolean_variable": 1,
                    "byte_value": 1,
                    "byte_var": 5,
                    "byte_var1": 1,
                    "byte_variable": 1,
                    "flag": 2,
                    "flag3": 1,
                    "new_variable20": 1,
                    "temp14": 1,
                    "temp_bool2": 1,
                    "temp_byte": 1,
                    "temp_flag": 1,
                    "temp_variable6": 1,
                    "temp_variable_33": 1,
                    "unused_variable_10": 1,
                    "var_3": 1
                },
                "bVar26": {
                    "temp_variable_34": 1
                },
                "bVar27": {
                    "temp_variable_35": 1
                },
                "bVar4": {
                    "bool_flag": 1,
                    "bool_value": 1,
                    "boolean_value": 1,
                    "boolean_variable_2": 1,
                    "condition": 1,
                    "condition_variable": 1,
                    "flag": 3,
                    "is_condition_true": 1,
                    "is_corrupt": 1,
                    "is_less": 1,
                    "is_true": 3,
                    "loop_check": 1,
                    "loop_flag": 1,
                    "new_variable24": 1,
                    "temp_bool": 1,
                    "temp_bool1": 1,
                    "temp_value10": 1,
                    "temp_variable_3": 1,
                    "unused_variable_3": 1
                },
                "byteVar": {
                    "byte_value": 1
                },
                "cVar17": {
                    "char17": 1,
                    "char_var": 4,
                    "char_var1": 1,
                    "char_variable": 1,
                    "character": 3,
                    "character_variable": 2,
                    "temp_char": 1,
                    "temp_character": 1,
                    "temp_var15": 1,
                    "temp_variable8": 1,
                    "var9": 1
                },
                "destination_variable": {
                    "destination_variable": 1
                },
                "iVar23": {
                    "counter": 1,
                    "counter2": 2,
                    "index_var2": 1,
                    "int_var2": 1,
                    "integer_variable": 1,
                    "loop_counter": 2,
                    "loop_counter2": 2,
                    "loop_index": 3,
                    "loop_var2": 1,
                    "note_index": 1,
                    "temp15": 1,
                    "temp_int2": 1,
                    "temp_var19": 1,
                    "temp_variable23": 1,
                    "temp_variable5": 1,
                    "unused_variable_11": 1,
                    "var23": 1,
                    "var_4": 1
                },
                "iVar6": {
                    "counter": 2,
                    "index": 4,
                    "index_var": 1,
                    "int_var": 1,
                    "int_var1": 1,
                    "integer_variable_2": 1,
                    "loop_counter": 2,
                    "loop_var": 1,
                    "memcmp_result": 1,
                    "new_variable7": 1,
                    "temp_int": 1,
                    "temp_var3": 1,
                    "temp_variable1": 1,
                    "temp_variable14": 1,
                    "temp_variable_5": 1,
                    "unused_variable_5": 1,
                    "var6": 1,
                    "var_5": 1
                },
                "in_RCX": {
                    "argument": 1,
                    "argument1": 1,
                    "input": 1,
                    "input_argument": 1,
                    "input_param1": 1,
                    "input_param2": 1,
                    "input_rcx": 4,
                    "input_value": 1,
                    "input_value2": 2,
                    "maximum_note_size": 1,
                    "param1": 1,
                    "param_1": 3,
                    "parameter1": 1,
                    "parameter_1": 2
                },
                "in_stack_00000030": {
                    "char_ptr_stack_var": 1,
                    "description": 1,
                    "description_buffer": 1,
                    "dest": 1,
                    "function_variable_9": 1,
                    "input_stack_value1": 1,
                    "input_stack_var1": 1,
                    "new_pointer": 1,
                    "ptr": 1,
                    "stack_param1": 1,
                    "stack_pointer1": 1,
                    "stack_value1": 1,
                    "stack_var1": 4,
                    "stack_variable1": 2,
                    "stack_variable_1": 1,
                    "temp_stack_value": 1,
                    "temp_variable5": 1,
                    "unused_variable_14": 1,
                    "var_1": 1
                },
                "in_stack_00000038": {
                    "flag1": 1,
                    "function_variable_10": 1,
                    "input_stack_var2": 1,
                    "param_13": 1,
                    "stack_param2": 1,
                    "stack_pointer2": 1,
                    "stack_value2": 1,
                    "stack_value38": 1,
                    "stack_var2": 4,
                    "stack_variable2": 2,
                    "stack_variable_2": 1,
                    "temp4": 1,
                    "temp_variable10": 1,
                    "unused_variable_15": 1,
                    "value": 1,
                    "var_2": 1
                },
                "inputArg6": {
                    "input_arg6": 1
                },
                "lVar32": {
                    "temp_variable_46": 1
                },
                "lVar42": {
                    "temp_variable_55": 1
                },
                "lVar44": {
                    "temp_variable_57": 1
                },
                "lVar46": {
                    "temp_variable_59": 1
                },
                "lVar48": {
                    "temp_variable_61": 1
                },
                "lVar50": {
                    "temp_variable_63": 1
                },
                "lVar7": {
                    "count": 1,
                    "error_message": 3,
                    "length": 5,
                    "long_var": 1,
                    "long_var1": 1,
                    "long_variable": 1,
                    "loop_index": 1,
                    "loop_var": 1,
                    "loop_variable": 1,
                    "new_variable8": 1,
                    "return_val": 1,
                    "size": 1,
                    "str_len": 1,
                    "temp_long": 1,
                    "temp_value8": 1,
                    "temp_var18": 1,
                    "temp_variable2": 1,
                    "temp_variable_6": 1,
                    "unused_variable_6": 1,
                    "var_6": 1
                },
                "param_1": {
                    "parameter_1": 1
                },
                "param_10": {
                    "argument3": 1,
                    "array_length": 1,
                    "attribute_count": 1,
                    "function_variable_6": 1,
                    "input3": 1,
                    "input_arg3": 1,
                    "input_param4": 2,
                    "input_param_10": 1,
                    "input_value4": 1,
                    "loop_variable_8": 1,
                    "new_size": 1,
                    "note_size": 1,
                    "output_size": 1,
                    "output_value": 1,
                    "param10": 3,
                    "param4": 1,
                    "param6": 1,
                    "param_10": 3,
                    "parameter10": 2,
                    "parameter9": 1,
                    "parameter_10": 1,
                    "result": 1,
                    "result_size": 1,
                    "size": 1
                },
                "param_11": {
                    "array": 2,
                    "array3": 1,
                    "array4": 1,
                    "array_pointer2": 1,
                    "attribute_data": 1,
                    "data_to_sort_array": 1,
                    "function_variable_7": 1,
                    "input_arg4": 1,
                    "input_array": 4,
                    "input_param5": 1,
                    "input_param_11": 1,
                    "input_pointer": 1,
                    "note_data": 1,
                    "param11": 3,
                    "param5": 1,
                    "param_11": 3,
                    "parameter10": 1,
                    "parameter11": 2,
                    "parameter_11": 1,
                    "temp_array": 1,
                    "unsorted_attributes": 1
                },
                "param_13": {
                    "argument4": 1,
                    "argument5": 1,
                    "bits": 1,
                    "flag2": 1,
                    "function_variable_8": 1,
                    "input4": 1,
                    "input_arg6": 1,
                    "input_param5": 1,
                    "input_param6": 1,
                    "input_param_13": 1,
                    "input_value5": 1,
                    "note_version": 1,
                    "param13": 3,
                    "param6": 1,
                    "param_12": 1,
                    "param_13": 2,
                    "parameter11": 1,
                    "parameter13": 2,
                    "parameter_13": 1,
                    "stack_parameter1": 1,
                    "temp3": 1,
                    "temp5": 1,
                    "temp_value5": 1,
                    "temp_variable9": 1,
                    "unused_variable_16": 1,
                    "version": 1
                },
                "param_14": {
                    "context_pointer": 1,
                    "function_pointers": 1,
                    "input_arg7": 1,
                    "input_param6": 1,
                    "input_param7": 1,
                    "input_param_14": 1,
                    "input_pointer2": 1,
                    "param14": 3,
                    "param7": 1,
                    "param_13": 1,
                    "param_14": 2,
                    "parameter12": 1,
                    "parameter14": 2,
                    "parameter_14": 1,
                    "parameter_3": 1,
                    "parameters": 1,
                    "pointer5": 1,
                    "pointer7": 1,
                    "stack_parameter2": 1,
                    "string_array": 1,
                    "temp_note_ptr": 1,
                    "unused_variable_17": 1,
                    "version_notes": 1,
                    "versions": 1,
                    "warning_message_array": 1
                },
                "param_15": {
                    "temp_variable_21": 1
                },
                "param_17": {
                    "temp_variable_24": 1
                },
                "param_18": {
                    "temp_variable_25": 1
                },
                "param_19": {
                    "temp_variable_26": 1
                },
                "param_1_1": {
                    "parameter_1_1": 1
                },
                "param_1_2": {
                    "parameter_1_2": 1
                },
                "param_2": {
                    "parameter_2": 1
                },
                "param_20": {
                    "temp_variable_27": 1
                },
                "param_21": {
                    "temp_variable_28": 1
                },
                "param_22": {
                    "temp_variable_29": 1
                },
                "param_23": {
                    "temp_variable_30": 1
                },
                "param_24": {
                    "temp_variable_31": 1
                },
                "param_25": {
                    "temp_variable_32": 1
                },
                "param_2_1": {
                    "parameter_2_1": 1
                },
                "param_2_2": {
                    "parameter_2_2": 1
                },
                "param_2_3": {
                    "parameter_2_3": 1
                },
                "param_2_4": {
                    "parameter_2_4": 1
                },
                "param_3": {
                    "parameter_3": 1,
                    "temp_variable_39": 1
                },
                "param_3_1": {
                    "parameter_3_1": 1
                },
                "param_3_2": {
                    "parameter_3_2": 1
                },
                "param_3_3": {
                    "parameter_3_3": 1
                },
                "param_3_4": {
                    "parameter_3_4": 1
                },
                "param_4": {
                    "parameter_4": 1,
                    "temp_variable_40": 1
                },
                "param_4_1": {
                    "parameter_4_1": 1
                },
                "param_4_2": {
                    "parameter_4_2": 1
                },
                "param_4_3": {
                    "parameter_4_3": 1
                },
                "param_4_4": {
                    "parameter_4_4": 1
                },
                "param_7": {
                    "argument2": 1,
                    "function_variable_11": 1,
                    "in_rcx": 4,
                    "input1": 1,
                    "input_arg1": 1,
                    "input_argument_copy": 1,
                    "input_param1": 1,
                    "input_rcx": 1,
                    "input_value": 2,
                    "input_value1": 2,
                    "input_value2": 1,
                    "new_variable3": 1,
                    "note_address": 1,
                    "param1": 1,
                    "param2": 1,
                    "param7": 2,
                    "param_7": 3,
                    "parameter6": 1,
                    "parameter_7": 1,
                    "rcx_value": 1,
                    "temp_variable8": 1
                },
                "param_8": {
                    "argument3": 1,
                    "function_variable_12": 1,
                    "input_param2": 1,
                    "input_value2": 1,
                    "note_kind": 1,
                    "param2": 1,
                    "param4": 1,
                    "param8": 3,
                    "param_8": 3,
                    "parameter7": 1,
                    "parameter8": 2,
                    "parameter_8": 1,
                    "temp_value6": 1,
                    "temp_variable7": 1,
                    "unused_variable_13": 1,
                    "version": 1
                },
                "param_9": {
                    "argument2": 1,
                    "argument4": 1,
                    "default_version": 1,
                    "function_variable_5": 1,
                    "initial_value": 1,
                    "input2": 1,
                    "input_arg2": 1,
                    "input_param3": 2,
                    "input_param_9": 1,
                    "input_value2": 1,
                    "input_value3": 2,
                    "loop_variable_7": 1,
                    "min_value2": 1,
                    "min_value3": 1,
                    "note_type": 1,
                    "param3": 1,
                    "param5": 1,
                    "param9": 3,
                    "param_9": 3,
                    "parameter8": 1,
                    "parameter9": 2,
                    "parameter_9": 1,
                    "temp_variable6": 1
                },
                "ptrVar18": {
                    "stack_var3": 1
                },
                "puVar15": {
                    "analyzed_note": 1,
                    "array": 1,
                    "attribute_info": 1,
                    "attributes": 1,
                    "current_array": 1,
                    "current_array_element": 2,
                    "current_pointer": 2,
                    "new_variable4": 1,
                    "note": 1,
                    "param_11": 1,
                    "pointer2": 1,
                    "pointer_var2": 2,
                    "ptr15": 2,
                    "ptr2": 1,
                    "ptr_var2": 1,
                    "ptr_var3": 1,
                    "ptr_var5": 1,
                    "temp_array_pointer2": 1,
                    "temp_pointer2": 1,
                    "temp_variable_17": 1,
                    "var_30": 1
                },
                "puVar16": {
                    "description_ptr": 1,
                    "new_variable25": 1,
                    "pointer3": 2,
                    "pointer_var3": 1,
                    "ptr16": 2,
                    "ptr3": 1,
                    "ptr_var2": 1,
                    "ptr_var3": 1,
                    "ptr_var4": 1,
                    "ptr_var6": 1,
                    "temp9": 1,
                    "temp_array_pointer3": 1,
                    "temp_pointer": 1,
                    "temp_pointer1": 1,
                    "temp_pointer2": 1,
                    "temp_pointer3": 1,
                    "temp_variable_18": 1,
                    "var_31": 1
                },
                "puVar18": {
                    "name_end": 1,
                    "name_ptr": 1,
                    "new_variable26": 1,
                    "pointer2": 1,
                    "pointer4": 2,
                    "pointer_var4": 1,
                    "pointer_variable_2": 1,
                    "ptr18": 2,
                    "ptr4": 1,
                    "ptr_var3": 1,
                    "ptr_var4": 1,
                    "ptr_var5": 1,
                    "ptr_var7": 1,
                    "temp10": 1,
                    "temp_array_pointer4": 1,
                    "temp_pointer2": 2,
                    "temp_pointer3": 1,
                    "temp_pointer4": 1,
                    "temp_variable_19": 1,
                    "var_32": 1
                },
                "puVar19": {
                    "name_start": 1,
                    "new_variable1": 1,
                    "pointer3": 1,
                    "pointer5": 2,
                    "pointer_var5": 1,
                    "pointer_variable_3": 1,
                    "ptr19": 2,
                    "ptr2": 1,
                    "ptr5": 1,
                    "ptr_var4": 1,
                    "ptr_var5": 1,
                    "ptr_var6": 1,
                    "ptr_var8": 1,
                    "temp11": 1,
                    "temp_array_pointer5": 1,
                    "temp_pointer3": 2,
                    "temp_pointer4": 1,
                    "temp_pointer5": 1,
                    "temp_variable_20": 1,
                    "var_33": 1
                },
                "puVar21": {
                    "current_note": 1,
                    "loop_array_element": 1,
                    "pointer4": 1,
                    "pointer6": 2,
                    "pointer_var6": 1,
                    "ptr21": 2,
                    "ptr6": 1,
                    "ptr_var5": 1,
                    "ptr_var6": 1,
                    "temp13": 1,
                    "temp_note": 1,
                    "temp_pointer4": 1,
                    "temp_pointer5": 1,
                    "temp_pointer7": 1,
                    "temp_variable_22": 1,
                    "unused_variable_9": 1,
                    "value_pointer": 1,
                    "var_34": 1
                },
                "puVar22": {
                    "temp_variable_23": 1
                },
                "puVar28": {
                    "temp_variable_42": 1
                },
                "puVar29": {
                    "temp_variable_43": 1
                },
                "puVar30": {
                    "temp_variable_44": 1
                },
                "puVar31": {
                    "temp_variable_45": 1
                },
                "puVar5": {
                    "new_variable5": 1,
                    "pointer1": 3,
                    "pointer_var": 1,
                    "pointer_var1": 1,
                    "pointer_variable_4": 1,
                    "ptr": 2,
                    "ptr1": 2,
                    "ptr_var": 1,
                    "ptr_var1": 3,
                    "temp_array_pointer": 1,
                    "temp_pointer": 1,
                    "temp_pointer1": 2,
                    "temp_variable_4": 1,
                    "unused_variable_4": 1,
                    "var5": 1,
                    "var_29": 1
                },
                "source_variable": {
                    "source_variable": 1
                },
                "uVar1": {
                    "loop_counter": 1,
                    "new_variable21": 1,
                    "result": 15,
                    "return_value": 4,
                    "temp_value6": 1,
                    "temp_variable11": 1,
                    "var_7": 1
                },
                "uVar10": {
                    "current": 1,
                    "current_value": 1,
                    "max_length": 1,
                    "max_value": 3,
                    "min_value2": 1,
                    "new_variable11": 1,
                    "return_value2": 1,
                    "temp4": 1,
                    "temp7": 1,
                    "temp_value": 2,
                    "temp_value2": 1,
                    "temp_value3": 1,
                    "temp_var4": 1,
                    "temp_var5": 2,
                    "temp_var7": 1,
                    "temp_variable17": 1,
                    "temp_variable_9": 1,
                    "unaffected_variable_6": 1,
                    "value": 1,
                    "value1": 1,
                    "value2": 1,
                    "var10": 1,
                    "var2": 1,
                    "var_13": 1
                },
                "uVar100": {
                    "temp_value92": 1,
                    "temp_value93": 1
                },
                "uVar101": {
                    "temp_value93": 1,
                    "temp_value94": 1
                },
                "uVar102": {
                    "temp_value94": 1,
                    "temp_value95": 1
                },
                "uVar103": {
                    "temp_value95": 1,
                    "temp_value96": 1
                },
                "uVar104": {
                    "temp_value96": 1,
                    "temp_value97": 1
                },
                "uVar105": {
                    "temp_value97": 1,
                    "temp_value98": 1
                },
                "uVar106": {
                    "temp_value98": 1,
                    "temp_value99": 1
                },
                "uVar107": {
                    "temp_value100": 1,
                    "temp_value99": 1
                },
                "uVar108": {
                    "temp_value100": 1,
                    "temp_value101": 1
                },
                "uVar109": {
                    "temp_value101": 1,
                    "temp_value102": 1
                },
                "uVar11": {
                    "current_value1": 1,
                    "loop_variable_1": 1,
                    "new_variable12": 1,
                    "param7": 1,
                    "temp5": 1,
                    "temp8": 1,
                    "temp_value1": 2,
                    "temp_value2": 1,
                    "temp_value3": 1,
                    "temp_value4": 1,
                    "temp_var4": 2,
                    "temp_var5": 1,
                    "temp_var6": 2,
                    "temp_var8": 1,
                    "temp_variable18": 1,
                    "temp_variable_10": 1,
                    "unaffected_variable_7": 1,
                    "value": 1,
                    "value2": 1,
                    "value3": 1,
                    "var11": 2,
                    "var3": 1,
                    "var_14": 1
                },
                "uVar110": {
                    "temp_value102": 1,
                    "temp_value103": 1
                },
                "uVar111": {
                    "temp_value103": 1,
                    "temp_value104": 1
                },
                "uVar112": {
                    "temp_value104": 1,
                    "temp_value105": 1
                },
                "uVar113": {
                    "temp_value105": 1,
                    "temp_value106": 1
                },
                "uVar114": {
                    "temp_value106": 1,
                    "temp_value107": 1
                },
                "uVar115": {
                    "temp_value107": 1,
                    "temp_value108": 1
                },
                "uVar116": {
                    "temp_value108": 1,
                    "temp_value109": 1
                },
                "uVar117": {
                    "temp_value109": 1,
                    "temp_value110": 1
                },
                "uVar118": {
                    "temp_value110": 1,
                    "temp_value111": 1
                },
                "uVar119": {
                    "temp_value111": 1,
                    "temp_value112": 1
                },
                "uVar12": {
                    "current_value": 1,
                    "current_value2": 1,
                    "loop_counter": 1,
                    "loop_variable_2": 1,
                    "new_value": 1,
                    "new_variable13": 1,
                    "param7_copy": 1,
                    "ptr_var2": 1,
                    "temp3": 1,
                    "temp6": 1,
                    "temp9": 1,
                    "temp_value2": 2,
                    "temp_value4": 1,
                    "temp_value5": 1,
                    "temp_var5": 2,
                    "temp_var6": 1,
                    "temp_var7": 2,
                    "temp_variable19": 1,
                    "temp_variable_11": 1,
                    "unaffected_variable_8": 1,
                    "value4": 1,
                    "var12": 2,
                    "var4": 1,
                    "var_15": 1
                },
                "uVar120": {
                    "temp_value112": 1,
                    "temp_value113": 1
                },
                "uVar121": {
                    "temp_value113": 1,
                    "temp_value114": 1
                },
                "uVar122": {
                    "temp_value114": 1,
                    "temp_value115": 1
                },
                "uVar123": {
                    "temp_value115": 1,
                    "temp_value116": 1
                },
                "uVar124": {
                    "temp_value116": 1,
                    "temp_value117": 1
                },
                "uVar125": {
                    "temp_value117": 1
                },
                "uVar126": {
                    "temp_value118": 1
                },
                "uVar127": {
                    "temp_value119": 1
                },
                "uVar128": {
                    "temp_value120": 1
                },
                "uVar129": {
                    "temp_value121": 1
                },
                "uVar13": {
                    "new_variable14": 1,
                    "param9_copy": 1,
                    "previous_value": 1,
                    "ptr_var3": 1,
                    "temp10": 1,
                    "temp4": 1,
                    "temp7": 1,
                    "temp_value3": 1,
                    "temp_value5": 1,
                    "temp_value6": 1,
                    "temp_var6": 2,
                    "temp_var8": 2,
                    "temp_variable20": 1,
                    "temp_variable_12": 1,
                    "unaff_rbp": 2,
                    "unaff_rbp_copy": 1,
                    "unaffected_variable_9": 1,
                    "value5": 1,
                    "var13": 2,
                    "var5": 1,
                    "var_16": 1
                },
                "uVar130": {
                    "temp_value122": 1
                },
                "uVar131": {
                    "temp_value123": 1
                },
                "uVar132": {
                    "temp_value124": 1
                },
                "uVar133": {
                    "temp_value125": 1
                },
                "uVar134": {
                    "temp_value126": 1
                },
                "uVar135": {
                    "temp_value127": 1
                },
                "uVar136": {
                    "temp_value128": 1
                },
                "uVar137": {
                    "temp_value129": 1
                },
                "uVar138": {
                    "temp_value130": 1
                },
                "uVar139": {
                    "temp_value131": 1
                },
                "uVar14": {
                    "array_address": 1,
                    "new_variable15": 1,
                    "note_ptr": 1,
                    "pointer_value": 1,
                    "ptr_var4": 1,
                    "temp11": 1,
                    "temp8": 1,
                    "temp_value4": 1,
                    "temp_value6": 1,
                    "temp_value7": 1,
                    "temp_var": 1,
                    "temp_var7": 3,
                    "temp_var9": 2,
                    "temp_variable21": 1,
                    "temp_variable_13": 1,
                    "unaffected_variable_10": 1,
                    "value2": 1,
                    "value3": 1,
                    "value6": 1,
                    "var14": 2,
                    "var6": 1,
                    "var_17": 1
                },
                "uVar140": {
                    "temp_value132": 1
                },
                "uVar141": {
                    "temp_value133": 1
                },
                "uVar142": {
                    "temp_value134": 1
                },
                "uVar143": {
                    "temp_value135": 1
                },
                "uVar144": {
                    "temp_value136": 1
                },
                "uVar145": {
                    "temp_value137": 1
                },
                "uVar146": {
                    "temp_value138": 1
                },
                "uVar147": {
                    "temp_value139": 1
                },
                "uVar148": {
                    "temp_value140": 1
                },
                "uVar149": {
                    "temp_value141": 1
                },
                "uVar15": {
                    "new_variable16": 1,
                    "pointer2": 1,
                    "temp_value7": 1,
                    "temp_value8": 1,
                    "unaffected_variable_11": 1,
                    "var_18": 1
                },
                "uVar150": {
                    "temp_value142": 1
                },
                "uVar151": {
                    "temp_value143": 1
                },
                "uVar152": {
                    "temp_value144": 1
                },
                "uVar153": {
                    "temp_value145": 1
                },
                "uVar154": {
                    "temp_value146": 1
                },
                "uVar155": {
                    "temp_value147": 1
                },
                "uVar156": {
                    "temp_value148": 1
                },
                "uVar157": {
                    "temp_value149": 1
                },
                "uVar158": {
                    "temp_value150": 1
                },
                "uVar159": {
                    "temp_value151": 1
                },
                "uVar16": {
                    "new_variable17": 1,
                    "temp_value8": 1,
                    "temp_value9": 1,
                    "unaffected_variable_12": 1,
                    "var_19": 1
                },
                "uVar160": {
                    "temp_value152": 1
                },
                "uVar161": {
                    "temp_value153": 1
                },
                "uVar162": {
                    "temp_value154": 1
                },
                "uVar163": {
                    "temp_value155": 1
                },
                "uVar164": {
                    "temp_value156": 1
                },
                "uVar165": {
                    "temp_value157": 1
                },
                "uVar166": {
                    "temp_value158": 1
                },
                "uVar167": {
                    "temp_value159": 1
                },
                "uVar168": {
                    "temp_value160": 1
                },
                "uVar169": {
                    "temp_value161": 1
                },
                "uVar17": {
                    "temp_value10": 1,
                    "temp_value9": 1,
                    "unaffected_variable_13": 1,
                    "var_20": 1
                },
                "uVar170": {
                    "temp_value162": 1
                },
                "uVar171": {
                    "temp_value163": 1
                },
                "uVar172": {
                    "temp_value164": 1
                },
                "uVar173": {
                    "temp_value165": 1
                },
                "uVar174": {
                    "temp_value166": 1
                },
                "uVar175": {
                    "temp_value167": 1
                },
                "uVar176": {
                    "temp_value168": 1
                },
                "uVar177": {
                    "temp_value169": 1
                },
                "uVar178": {
                    "temp_value170": 1
                },
                "uVar179": {
                    "temp_value171": 1
                },
                "uVar18": {
                    "temp_value10": 1,
                    "temp_value11": 1,
                    "unaffected_variable_14": 1,
                    "var_21": 1
                },
                "uVar180": {
                    "temp_value172": 1
                },
                "uVar181": {
                    "temp_value173": 1
                },
                "uVar182": {
                    "temp_value174": 1
                },
                "uVar183": {
                    "temp_value175": 1
                },
                "uVar184": {
                    "temp_value176": 1
                },
                "uVar185": {
                    "temp_value177": 1
                },
                "uVar186": {
                    "temp_value178": 1
                },
                "uVar187": {
                    "temp_value179": 1
                },
                "uVar188": {
                    "temp_value180": 1
                },
                "uVar189": {
                    "temp_value181": 1
                },
                "uVar19": {
                    "temp_value11": 1,
                    "temp_value12": 1,
                    "unaffected_variable_15": 1,
                    "var_22": 1
                },
                "uVar190": {
                    "temp_value182": 1
                },
                "uVar191": {
                    "temp_value183": 1
                },
                "uVar192": {
                    "temp_value184": 1
                },
                "uVar193": {
                    "temp_value185": 1
                },
                "uVar194": {
                    "temp_value186": 1
                },
                "uVar195": {
                    "temp_value187": 1
                },
                "uVar196": {
                    "temp_value188": 1
                },
                "uVar197": {
                    "temp_value189": 1
                },
                "uVar198": {
                    "temp_value190": 1
                },
                "uVar199": {
                    "temp_value191": 1
                },
                "uVar2": {
                    "new_variable22": 1,
                    "string_pointer1": 1,
                    "temp1": 5,
                    "temp3": 1,
                    "temp_value7": 1,
                    "temp_var1": 7,
                    "temp_variable12": 1,
                    "temp_variable_1": 1,
                    "unaffected_variable_2": 1,
                    "unused_variable1": 1,
                    "unused_variable_1": 1,
                    "var1": 1,
                    "var_8": 1,
                    "warning_message": 1
                },
                "uVar20": {
                    "loop_variable_6": 1,
                    "new_variable18": 1,
                    "param11_copy": 1,
                    "ptr_var10": 1,
                    "r13_value": 1,
                    "temp12": 1,
                    "temp13": 1,
                    "temp_value12": 1,
                    "temp_value13": 1,
                    "temp_value5": 1,
                    "temp_value7": 1,
                    "temp_var10": 2,
                    "temp_var8": 3,
                    "temp_variable22": 1,
                    "temp_variable_14": 1,
                    "unaff_r13_copy": 1,
                    "unaffected_variable_16": 1,
                    "value4": 1,
                    "value7": 1,
                    "var12": 1,
                    "var20": 1,
                    "var_23": 1
                },
                "uVar200": {
                    "temp_value192": 1
                },
                "uVar201": {
                    "temp_value193": 1
                },
                "uVar202": {
                    "temp_value194": 1
                },
                "uVar203": {
                    "temp_value195": 1
                },
                "uVar204": {
                    "temp_value196": 1
                },
                "uVar205": {
                    "temp_value197": 1
                },
                "uVar206": {
                    "temp_value198": 1
                },
                "uVar207": {
                    "temp_value199": 1
                },
                "uVar208": {
                    "temp_value200": 1
                },
                "uVar209": {
                    "temp_value201": 1
                },
                "uVar21": {
                    "new_variable19": 1,
                    "temp_value13": 1,
                    "temp_value14": 1,
                    "unaffected_variable_17": 1,
                    "var_24": 1
                },
                "uVar210": {
                    "temp_value202": 1
                },
                "uVar211": {
                    "temp_value203": 1
                },
                "uVar212": {
                    "temp_value204": 1
                },
                "uVar213": {
                    "temp_value205": 1
                },
                "uVar214": {
                    "temp_value206": 1
                },
                "uVar215": {
                    "temp_value207": 1
                },
                "uVar216": {
                    "temp_value208": 1
                },
                "uVar217": {
                    "temp_value209": 1
                },
                "uVar218": {
                    "temp_value210": 1
                },
                "uVar219": {
                    "temp_value211": 1
                },
                "uVar22": {
                    "temp_value14": 1,
                    "temp_value15": 1,
                    "temp_variable_15": 1,
                    "var_25": 1
                },
                "uVar220": {
                    "temp_value212": 1
                },
                "uVar221": {
                    "temp_value213": 1
                },
                "uVar222": {
                    "temp_value214": 1
                },
                "uVar223": {
                    "temp_value215": 1
                },
                "uVar224": {
                    "temp_value216": 1
                },
                "uVar225": {
                    "temp_value217": 1
                },
                "uVar226": {
                    "temp_value218": 1
                },
                "uVar227": {
                    "temp_value219": 1
                },
                "uVar228": {
                    "temp_value220": 1
                },
                "uVar229": {
                    "temp_value221": 1
                },
                "uVar23": {
                    "temp_value15": 1,
                    "temp_value16": 1,
                    "temp_variable_16": 1
                },
                "uVar230": {
                    "temp_value222": 1
                },
                "uVar231": {
                    "temp_value223": 1
                },
                "uVar232": {
                    "temp_value224": 1
                },
                "uVar233": {
                    "temp_value225": 1
                },
                "uVar234": {
                    "temp_value226": 1
                },
                "uVar235": {
                    "temp_value227": 1
                },
                "uVar236": {
                    "temp_value228": 1
                },
                "uVar237": {
                    "temp_value229": 1
                },
                "uVar238": {
                    "temp_value230": 1
                },
                "uVar239": {
                    "temp_value231": 1
                },
                "uVar24": {
                    "temp_value16": 1,
                    "temp_value17": 1
                },
                "uVar240": {
                    "temp_value232": 1
                },
                "uVar241": {
                    "temp_value233": 1
                },
                "uVar242": {
                    "temp_value234": 1
                },
                "uVar243": {
                    "temp_value235": 1
                },
                "uVar244": {
                    "temp_value236": 1
                },
                "uVar245": {
                    "temp_value237": 1
                },
                "uVar246": {
                    "temp_value238": 1
                },
                "uVar247": {
                    "temp_value239": 1
                },
                "uVar248": {
                    "temp_value240": 1
                },
                "uVar249": {
                    "temp_value241": 1
                },
                "uVar25": {
                    "temp_value17": 1,
                    "temp_value18": 1
                },
                "uVar250": {
                    "temp_value242": 1
                },
                "uVar251": {
                    "temp_value243": 1
                },
                "uVar252": {
                    "temp_value244": 1
                },
                "uVar253": {
                    "temp_value245": 1
                },
                "uVar254": {
                    "temp_value246": 1
                },
                "uVar255": {
                    "temp_value247": 1
                },
                "uVar256": {
                    "temp_value248": 1
                },
                "uVar257": {
                    "temp_value249": 1
                },
                "uVar258": {
                    "temp_value250": 1
                },
                "uVar259": {
                    "temp_value251": 1
                },
                "uVar26": {
                    "temp_value18": 1,
                    "temp_value19": 1
                },
                "uVar260": {
                    "temp_value252": 1
                },
                "uVar261": {
                    "temp_value253": 1
                },
                "uVar262": {
                    "temp_value254": 1
                },
                "uVar263": {
                    "temp_value255": 1
                },
                "uVar264": {
                    "temp_value256": 1
                },
                "uVar265": {
                    "temp_value257": 1
                },
                "uVar266": {
                    "temp_value258": 1
                },
                "uVar267": {
                    "temp_value259": 1
                },
                "uVar268": {
                    "temp_value260": 1
                },
                "uVar269": {
                    "temp_value261": 1
                },
                "uVar27": {
                    "temp_value19": 1,
                    "temp_value20": 1
                },
                "uVar270": {
                    "temp_value262": 1
                },
                "uVar271": {
                    "temp_value263": 1
                },
                "uVar272": {
                    "temp_value264": 1
                },
                "uVar273": {
                    "temp_value265": 1
                },
                "uVar274": {
                    "temp_value266": 1
                },
                "uVar275": {
                    "temp_value267": 1
                },
                "uVar276": {
                    "temp_value268": 1
                },
                "uVar277": {
                    "temp_value269": 1
                },
                "uVar278": {
                    "temp_value270": 1
                },
                "uVar279": {
                    "temp_value271": 1
                },
                "uVar28": {
                    "temp_value20": 1,
                    "temp_value21": 1
                },
                "uVar280": {
                    "temp_value272": 1
                },
                "uVar281": {
                    "temp_value273": 1
                },
                "uVar282": {
                    "temp_value274": 1
                },
                "uVar283": {
                    "temp_value275": 1
                },
                "uVar284": {
                    "temp_value276": 1
                },
                "uVar285": {
                    "temp_value277": 1
                },
                "uVar286": {
                    "temp_value278": 1
                },
                "uVar287": {
                    "temp_value279": 1
                },
                "uVar288": {
                    "temp_value280": 1
                },
                "uVar289": {
                    "temp_value281": 1
                },
                "uVar29": {
                    "temp_value21": 1,
                    "temp_value22": 1
                },
                "uVar290": {
                    "temp_value282": 1
                },
                "uVar291": {
                    "temp_value283": 1
                },
                "uVar292": {
                    "temp_value284": 1
                },
                "uVar293": {
                    "temp_value285": 1
                },
                "uVar294": {
                    "temp_value286": 1
                },
                "uVar295": {
                    "temp_value287": 1
                },
                "uVar296": {
                    "temp_value288": 1
                },
                "uVar297": {
                    "temp_value289": 1
                },
                "uVar298": {
                    "temp_value290": 1
                },
                "uVar299": {
                    "temp_value291": 1
                },
                "uVar3": {
                    "new_variable23": 1,
                    "string_pointer2": 1,
                    "temp2": 5,
                    "temp4": 1,
                    "temp_value8": 1,
                    "temp_var2": 7,
                    "temp_variable13": 1,
                    "temp_variable_2": 1,
                    "unaffected_variable_3": 1,
                    "unused_variable2": 1,
                    "unused_variable_2": 1,
                    "var2": 1,
                    "var_9": 1,
                    "warning_message2": 1
                },
                "uVar30": {
                    "temp_value22": 1,
                    "temp_value23": 1
                },
                "uVar300": {
                    "temp_value292": 1
                },
                "uVar301": {
                    "temp_value293": 1
                },
                "uVar302": {
                    "temp_value294": 1
                },
                "uVar303": {
                    "temp_value295": 1
                },
                "uVar304": {
                    "temp_value296": 1
                },
                "uVar305": {
                    "temp_value297": 1
                },
                "uVar306": {
                    "temp_value298": 1
                },
                "uVar307": {
                    "temp_value299": 1
                },
                "uVar308": {
                    "temp_value300": 1
                },
                "uVar309": {
                    "temp_value301": 1
                },
                "uVar31": {
                    "temp_value23": 1,
                    "temp_value24": 1
                },
                "uVar310": {
                    "temp_value302": 1
                },
                "uVar311": {
                    "temp_value303": 1
                },
                "uVar312": {
                    "temp_value304": 1
                },
                "uVar313": {
                    "temp_value305": 1
                },
                "uVar314": {
                    "temp_value306": 1
                },
                "uVar315": {
                    "temp_value307": 1
                },
                "uVar316": {
                    "temp_value308": 1
                },
                "uVar317": {
                    "temp_value309": 1
                },
                "uVar318": {
                    "temp_value310": 1
                },
                "uVar319": {
                    "temp_value311": 1
                },
                "uVar32": {
                    "temp_value24": 1,
                    "temp_value25": 1
                },
                "uVar320": {
                    "temp_value312": 1
                },
                "uVar321": {
                    "temp_value313": 1
                },
                "uVar322": {
                    "temp_value314": 1
                },
                "uVar323": {
                    "temp_value315": 1
                },
                "uVar324": {
                    "temp_value316": 1
                },
                "uVar325": {
                    "temp_value317": 1
                },
                "uVar326": {
                    "temp_value318": 1
                },
                "uVar327": {
                    "temp_value319": 1
                },
                "uVar328": {
                    "temp_value320": 1
                },
                "uVar329": {
                    "temp_value321": 1
                },
                "uVar33": {
                    "temp_value25": 1,
                    "temp_value26": 1,
                    "temp_variable_47": 1
                },
                "uVar330": {
                    "temp_value322": 1
                },
                "uVar331": {
                    "temp_value323": 1
                },
                "uVar332": {
                    "temp_value324": 1
                },
                "uVar333": {
                    "temp_value325": 1
                },
                "uVar334": {
                    "temp_value326": 1
                },
                "uVar335": {
                    "temp_value327": 1
                },
                "uVar336": {
                    "temp_value328": 1
                },
                "uVar337": {
                    "temp_value329": 1
                },
                "uVar338": {
                    "temp_value330": 1
                },
                "uVar339": {
                    "temp_value331": 1
                },
                "uVar34": {
                    "temp_value26": 1,
                    "temp_value27": 1,
                    "temp_variable_48": 1
                },
                "uVar340": {
                    "temp_value332": 1
                },
                "uVar341": {
                    "temp_value333": 1
                },
                "uVar342": {
                    "temp_value334": 1
                },
                "uVar343": {
                    "temp_value335": 1
                },
                "uVar344": {
                    "temp_value336": 1
                },
                "uVar345": {
                    "temp_value337": 1
                },
                "uVar346": {
                    "temp_value338": 1
                },
                "uVar347": {
                    "temp_value339": 1
                },
                "uVar348": {
                    "temp_value340": 1
                },
                "uVar349": {
                    "temp_value341": 1
                },
                "uVar35": {
                    "temp_value27": 1,
                    "temp_value28": 1
                },
                "uVar350": {
                    "temp_value342": 1
                },
                "uVar351": {
                    "temp_value343": 1
                },
                "uVar352": {
                    "temp_value344": 1
                },
                "uVar353": {
                    "temp_value345": 1
                },
                "uVar354": {
                    "temp_value346": 1
                },
                "uVar355": {
                    "temp_value347": 1
                },
                "uVar356": {
                    "temp_value348": 1
                },
                "uVar357": {
                    "temp_value349": 1
                },
                "uVar358": {
                    "temp_value350": 1
                },
                "uVar359": {
                    "temp_value351": 1
                },
                "uVar36": {
                    "temp_value28": 1,
                    "temp_value29": 1,
                    "temp_variable_49": 1
                },
                "uVar360": {
                    "temp_value352": 1
                },
                "uVar361": {
                    "temp_value353": 1
                },
                "uVar362": {
                    "temp_value354": 1
                },
                "uVar363": {
                    "temp_value355": 1
                },
                "uVar364": {
                    "temp_value356": 1
                },
                "uVar365": {
                    "temp_value357": 1
                },
                "uVar366": {
                    "temp_value358": 1
                },
                "uVar367": {
                    "temp_value359": 1
                },
                "uVar368": {
                    "temp_value360": 1
                },
                "uVar369": {
                    "temp_value361": 1
                },
                "uVar37": {
                    "temp_value29": 1,
                    "temp_value30": 1,
                    "temp_variable_50": 1
                },
                "uVar370": {
                    "temp_value362": 1
                },
                "uVar371": {
                    "temp_value363": 1
                },
                "uVar372": {
                    "temp_value364": 1
                },
                "uVar373": {
                    "temp_value365": 1
                },
                "uVar374": {
                    "temp_value366": 1
                },
                "uVar375": {
                    "temp_value367": 1
                },
                "uVar376": {
                    "temp_value368": 1
                },
                "uVar377": {
                    "temp_value369": 1
                },
                "uVar378": {
                    "temp_value370": 1
                },
                "uVar379": {
                    "temp_value371": 1
                },
                "uVar38": {
                    "temp_value30": 1,
                    "temp_value31": 1,
                    "temp_variable_51": 1
                },
                "uVar380": {
                    "temp_value372": 1
                },
                "uVar381": {
                    "temp_value373": 1
                },
                "uVar382": {
                    "temp_value374": 1
                },
                "uVar383": {
                    "temp_value375": 1
                },
                "uVar384": {
                    "temp_value376": 1
                },
                "uVar385": {
                    "temp_value377": 1
                },
                "uVar386": {
                    "temp_value378": 1
                },
                "uVar387": {
                    "temp_value379": 1
                },
                "uVar388": {
                    "temp_value380": 1
                },
                "uVar389": {
                    "temp_value381": 1
                },
                "uVar39": {
                    "temp_value31": 1,
                    "temp_value32": 1,
                    "temp_variable_52": 1
                },
                "uVar390": {
                    "temp_value382": 1
                },
                "uVar391": {
                    "temp_value383": 1
                },
                "uVar392": {
                    "temp_value384": 1
                },
                "uVar393": {
                    "temp_value385": 1
                },
                "uVar394": {
                    "temp_value386": 1
                },
                "uVar395": {
                    "temp_value387": 1
                },
                "uVar396": {
                    "temp_value388": 1
                },
                "uVar397": {
                    "temp_value389": 1
                },
                "uVar398": {
                    "temp_value390": 1
                },
                "uVar399": {
                    "temp_value391": 1
                },
                "uVar4": {
                    "bool_variable2": 1,
                    "boolean_value": 1,
                    "new_variable6": 1,
                    "var_10": 1
                },
                "uVar40": {
                    "temp_value32": 1,
                    "temp_value33": 1,
                    "temp_variable_53": 1
                },
                "uVar400": {
                    "temp_value392": 1
                },
                "uVar401": {
                    "temp_value393": 1
                },
                "uVar402": {
                    "temp_value394": 1
                },
                "uVar403": {
                    "temp_value395": 1
                },
                "uVar404": {
                    "temp_value396": 1
                },
                "uVar405": {
                    "temp_value397": 1
                },
                "uVar406": {
                    "temp_value398": 1
                },
                "uVar407": {
                    "temp_value399": 1
                },
                "uVar408": {
                    "temp_value400": 1
                },
                "uVar409": {
                    "temp_value401": 1
                },
                "uVar41": {
                    "temp_value33": 1,
                    "temp_value34": 1,
                    "temp_variable_54": 1
                },
                "uVar410": {
                    "temp_value402": 1
                },
                "uVar411": {
                    "temp_value403": 1
                },
                "uVar412": {
                    "temp_value404": 1
                },
                "uVar413": {
                    "temp_value405": 1
                },
                "uVar414": {
                    "temp_value406": 1
                },
                "uVar415": {
                    "temp_value407": 1
                },
                "uVar416": {
                    "temp_value408": 1
                },
                "uVar417": {
                    "temp_value409": 1
                },
                "uVar418": {
                    "temp_value410": 1
                },
                "uVar419": {
                    "temp_value411": 1
                },
                "uVar42": {
                    "temp_value34": 1,
                    "temp_value35": 1
                },
                "uVar420": {
                    "temp_value412": 1
                },
                "uVar421": {
                    "temp_value413": 1
                },
                "uVar422": {
                    "temp_value414": 1
                },
                "uVar423": {
                    "temp_value415": 1
                },
                "uVar424": {
                    "temp_value416": 1
                },
                "uVar425": {
                    "temp_value417": 1
                },
                "uVar426": {
                    "temp_value418": 1
                },
                "uVar427": {
                    "temp_value419": 1
                },
                "uVar428": {
                    "temp_value420": 1
                },
                "uVar429": {
                    "temp_value421": 1
                },
                "uVar43": {
                    "temp_value35": 1,
                    "temp_value36": 1,
                    "temp_variable_56": 1
                },
                "uVar430": {
                    "temp_value422": 1
                },
                "uVar431": {
                    "temp_value423": 1
                },
                "uVar432": {
                    "temp_value424": 1
                },
                "uVar433": {
                    "temp_value425": 1
                },
                "uVar434": {
                    "temp_value426": 1
                },
                "uVar435": {
                    "temp_value427": 1
                },
                "uVar436": {
                    "temp_value428": 1
                },
                "uVar437": {
                    "temp_value429": 1
                },
                "uVar438": {
                    "temp_value430": 1
                },
                "uVar439": {
                    "temp_value431": 1
                },
                "uVar44": {
                    "temp_value36": 1,
                    "temp_value37": 1
                },
                "uVar440": {
                    "temp_value432": 1
                },
                "uVar441": {
                    "temp_value433": 1
                },
                "uVar442": {
                    "temp_value434": 1
                },
                "uVar443": {
                    "temp_value435": 1
                },
                "uVar444": {
                    "temp_value436": 1
                },
                "uVar445": {
                    "temp_value437": 1
                },
                "uVar446": {
                    "temp_value438": 1
                },
                "uVar447": {
                    "temp_value439": 1
                },
                "uVar448": {
                    "temp_value440": 1
                },
                "uVar449": {
                    "temp_value441": 1
                },
                "uVar45": {
                    "temp_value37": 1,
                    "temp_value38": 1,
                    "temp_variable_58": 1
                },
                "uVar450": {
                    "temp_value442": 1
                },
                "uVar451": {
                    "temp_value443": 1
                },
                "uVar452": {
                    "temp_value444": 1
                },
                "uVar453": {
                    "temp_value445": 1
                },
                "uVar454": {
                    "temp_value446": 1
                },
                "uVar455": {
                    "temp_value447": 1
                },
                "uVar456": {
                    "temp_value448": 1
                },
                "uVar457": {
                    "temp_value449": 1
                },
                "uVar458": {
                    "temp_value450": 1
                },
                "uVar459": {
                    "temp_value451": 1
                },
                "uVar46": {
                    "temp_value38": 1,
                    "temp_value39": 1
                },
                "uVar460": {
                    "temp_value452": 1
                },
                "uVar461": {
                    "temp_value453": 1
                },
                "uVar462": {
                    "temp_value454": 1
                },
                "uVar463": {
                    "temp_value455": 1
                },
                "uVar464": {
                    "temp_value456": 1
                },
                "uVar465": {
                    "temp_value457": 1
                },
                "uVar466": {
                    "temp_value458": 1
                },
                "uVar467": {
                    "temp_value459": 1
                },
                "uVar468": {
                    "temp_value460": 1
                },
                "uVar469": {
                    "temp_value461": 1
                },
                "uVar47": {
                    "temp_value39": 1,
                    "temp_value40": 1,
                    "temp_variable_60": 1
                },
                "uVar470": {
                    "temp_value462": 1
                },
                "uVar471": {
                    "temp_value463": 1
                },
                "uVar472": {
                    "temp_value464": 1
                },
                "uVar473": {
                    "temp_value465": 1
                },
                "uVar474": {
                    "temp_value466": 1
                },
                "uVar475": {
                    "temp_value467": 1
                },
                "uVar476": {
                    "temp_value468": 1
                },
                "uVar477": {
                    "temp_value469": 1
                },
                "uVar478": {
                    "temp_value470": 1
                },
                "uVar479": {
                    "temp_value471": 1
                },
                "uVar48": {
                    "temp_value40": 1,
                    "temp_value41": 1
                },
                "uVar480": {
                    "temp_value472": 1
                },
                "uVar481": {
                    "temp_value473": 1
                },
                "uVar482": {
                    "temp_value474": 1
                },
                "uVar483": {
                    "temp_value475": 1
                },
                "uVar484": {
                    "temp_value476": 1
                },
                "uVar485": {
                    "temp_value477": 1
                },
                "uVar486": {
                    "temp_value478": 1
                },
                "uVar487": {
                    "temp_value479": 1
                },
                "uVar488": {
                    "temp_value480": 1
                },
                "uVar489": {
                    "temp_value481": 1
                },
                "uVar49": {
                    "temp_value41": 1,
                    "temp_value42": 1,
                    "temp_variable_62": 1
                },
                "uVar490": {
                    "temp_value482": 1
                },
                "uVar491": {
                    "temp_value483": 1
                },
                "uVar492": {
                    "temp_value484": 1
                },
                "uVar493": {
                    "temp_value485": 1
                },
                "uVar494": {
                    "temp_value486": 1
                },
                "uVar495": {
                    "temp_value487": 1
                },
                "uVar496": {
                    "temp_value488": 1
                },
                "uVar497": {
                    "temp_value489": 1
                },
                "uVar498": {
                    "temp_value490": 1
                },
                "uVar499": {
                    "temp_value491": 1
                },
                "uVar5": {
                    "array_element_ptr1": 1,
                    "var_11": 1
                },
                "uVar50": {
                    "temp_value42": 1,
                    "temp_value43": 1
                },
                "uVar500": {
                    "temp_value492": 1
                },
                "uVar501": {
                    "temp_value493": 1
                },
                "uVar502": {
                    "temp_value494": 1
                },
                "uVar503": {
                    "temp_value495": 1
                },
                "uVar504": {
                    "temp_value496": 1
                },
                "uVar505": {
                    "temp_value497": 1
                },
                "uVar506": {
                    "temp_value498": 1
                },
                "uVar507": {
                    "temp_value499": 1
                },
                "uVar508": {
                    "temp_value500": 1
                },
                "uVar509": {
                    "temp_value501": 1
                },
                "uVar51": {
                    "temp_value43": 1,
                    "temp_value44": 1,
                    "temp_variable_64": 1
                },
                "uVar510": {
                    "temp_value502": 1
                },
                "uVar511": {
                    "temp_value503": 1
                },
                "uVar512": {
                    "temp_value504": 1
                },
                "uVar513": {
                    "temp_value505": 1
                },
                "uVar514": {
                    "temp_value506": 1
                },
                "uVar515": {
                    "temp_value507": 1
                },
                "uVar516": {
                    "temp_value508": 1
                },
                "uVar517": {
                    "temp_value509": 1
                },
                "uVar518": {
                    "temp_value510": 1
                },
                "uVar519": {
                    "temp_value511": 1
                },
                "uVar52": {
                    "temp_value44": 1,
                    "temp_value45": 1
                },
                "uVar520": {
                    "temp_value512": 1
                },
                "uVar521": {
                    "temp_value513": 1
                },
                "uVar522": {
                    "temp_value514": 1
                },
                "uVar523": {
                    "temp_value515": 1
                },
                "uVar524": {
                    "temp_value516": 1
                },
                "uVar525": {
                    "temp_value517": 1
                },
                "uVar526": {
                    "temp_value518": 1
                },
                "uVar527": {
                    "temp_value519": 1
                },
                "uVar528": {
                    "temp_value520": 1
                },
                "uVar529": {
                    "temp_value521": 1
                },
                "uVar53": {
                    "temp_value45": 1,
                    "temp_value46": 1
                },
                "uVar530": {
                    "temp_value522": 1
                },
                "uVar531": {
                    "temp_value523": 1
                },
                "uVar532": {
                    "temp_value524": 1
                },
                "uVar533": {
                    "temp_value525": 1
                },
                "uVar534": {
                    "temp_value526": 1
                },
                "uVar535": {
                    "temp_value527": 1
                },
                "uVar536": {
                    "temp_value528": 1
                },
                "uVar537": {
                    "temp_value529": 1
                },
                "uVar538": {
                    "temp_value530": 1
                },
                "uVar539": {
                    "temp_value531": 1
                },
                "uVar54": {
                    "temp_value46": 1,
                    "temp_value47": 1
                },
                "uVar540": {
                    "temp_value532": 1
                },
                "uVar541": {
                    "temp_value533": 1
                },
                "uVar542": {
                    "temp_value534": 1
                },
                "uVar543": {
                    "temp_value535": 1
                },
                "uVar544": {
                    "temp_value536": 1
                },
                "uVar545": {
                    "temp_value537": 1
                },
                "uVar546": {
                    "temp_value538": 1
                },
                "uVar547": {
                    "temp_value539": 1
                },
                "uVar548": {
                    "temp_value540": 1
                },
                "uVar549": {
                    "temp_value541": 1
                },
                "uVar55": {
                    "temp_value47": 1,
                    "temp_value48": 1
                },
                "uVar550": {
                    "temp_value542": 1
                },
                "uVar551": {
                    "temp_value543": 1
                },
                "uVar552": {
                    "temp_value544": 1
                },
                "uVar553": {
                    "temp_value545": 1
                },
                "uVar554": {
                    "temp_value546": 1
                },
                "uVar555": {
                    "temp_value547": 1
                },
                "uVar556": {
                    "temp_value548": 1
                },
                "uVar557": {
                    "temp_value549": 1
                },
                "uVar558": {
                    "temp_value550": 1
                },
                "uVar559": {
                    "temp_value551": 1
                },
                "uVar56": {
                    "temp_value48": 1,
                    "temp_value49": 1
                },
                "uVar560": {
                    "temp_value552": 1
                },
                "uVar561": {
                    "temp_value553": 1
                },
                "uVar562": {
                    "temp_value554": 1
                },
                "uVar563": {
                    "temp_value555": 1
                },
                "uVar564": {
                    "temp_value556": 1
                },
                "uVar565": {
                    "temp_value557": 1
                },
                "uVar566": {
                    "temp_value558": 1
                },
                "uVar567": {
                    "temp_value559": 1
                },
                "uVar568": {
                    "temp_value560": 1
                },
                "uVar569": {
                    "temp_value561": 1
                },
                "uVar57": {
                    "temp_value49": 1,
                    "temp_value50": 1
                },
                "uVar570": {
                    "temp_value562": 1
                },
                "uVar571": {
                    "temp_value563": 1
                },
                "uVar572": {
                    "temp_value564": 1
                },
                "uVar573": {
                    "temp_value565": 1
                },
                "uVar574": {
                    "temp_value566": 1
                },
                "uVar575": {
                    "temp_value567": 1
                },
                "uVar576": {
                    "temp_value568": 1
                },
                "uVar577": {
                    "temp_value569": 1
                },
                "uVar578": {
                    "temp_value570": 1
                },
                "uVar579": {
                    "temp_value571": 1
                },
                "uVar58": {
                    "temp_value50": 1,
                    "temp_value51": 1
                },
                "uVar580": {
                    "temp_value572": 1
                },
                "uVar581": {
                    "temp_value573": 1
                },
                "uVar582": {
                    "temp_value574": 1
                },
                "uVar583": {
                    "temp_value575": 1
                },
                "uVar584": {
                    "temp_value576": 1
                },
                "uVar585": {
                    "temp_value577": 1
                },
                "uVar586": {
                    "temp_value578": 1
                },
                "uVar587": {
                    "temp_value579": 1
                },
                "uVar588": {
                    "temp_value580": 1
                },
                "uVar589": {
                    "temp_value581": 1
                },
                "uVar59": {
                    "temp_value51": 1,
                    "temp_value52": 1
                },
                "uVar590": {
                    "temp_value582": 1
                },
                "uVar591": {
                    "temp_value583": 1
                },
                "uVar592": {
                    "temp_value584": 1
                },
                "uVar593": {
                    "temp_value585": 1
                },
                "uVar594": {
                    "temp_value586": 1
                },
                "uVar595": {
                    "temp_value587": 1
                },
                "uVar596": {
                    "temp_value588": 1
                },
                "uVar597": {
                    "temp_value589": 1
                },
                "uVar598": {
                    "temp_value590": 1
                },
                "uVar599": {
                    "temp_value591": 1
                },
                "uVar6": {
                    "array_element_ptr2": 1
                },
                "uVar60": {
                    "temp_value52": 1,
                    "temp_value53": 1
                },
                "uVar600": {
                    "temp_value592": 1
                },
                "uVar601": {
                    "temp_value593": 1
                },
                "uVar602": {
                    "temp_value594": 1
                },
                "uVar603": {
                    "temp_value595": 1
                },
                "uVar604": {
                    "temp_value596": 1
                },
                "uVar605": {
                    "temp_value597": 1
                },
                "uVar606": {
                    "temp_value598": 1
                },
                "uVar607": {
                    "temp_value599": 1
                },
                "uVar608": {
                    "temp_value600": 1
                },
                "uVar609": {
                    "temp_value601": 1
                },
                "uVar61": {
                    "temp_value53": 1,
                    "temp_value54": 1
                },
                "uVar610": {
                    "temp_value602": 1
                },
                "uVar611": {
                    "temp_value603": 1
                },
                "uVar612": {
                    "temp_value604": 1
                },
                "uVar613": {
                    "temp_value605": 1
                },
                "uVar614": {
                    "temp_value606": 1
                },
                "uVar615": {
                    "temp_value607": 1
                },
                "uVar616": {
                    "temp_value608": 1
                },
                "uVar617": {
                    "temp_value609": 1
                },
                "uVar618": {
                    "temp_value610": 1
                },
                "uVar619": {
                    "temp_value611": 1
                },
                "uVar62": {
                    "temp_value54": 1,
                    "temp_value55": 1
                },
                "uVar620": {
                    "temp_value612": 1
                },
                "uVar621": {
                    "temp_value613": 1
                },
                "uVar622": {
                    "temp_value614": 1
                },
                "uVar623": {
                    "temp_value615": 1
                },
                "uVar624": {
                    "temp_value616": 1
                },
                "uVar625": {
                    "temp_value617": 1
                },
                "uVar626": {
                    "temp_value618": 1
                },
                "uVar627": {
                    "temp_value619": 1
                },
                "uVar628": {
                    "temp_value620": 1
                },
                "uVar629": {
                    "temp_value621": 1
                },
                "uVar63": {
                    "temp_value55": 1,
                    "temp_value56": 1
                },
                "uVar630": {
                    "temp_value622": 1
                },
                "uVar631": {
                    "temp_value623": 1
                },
                "uVar632": {
                    "temp_value624": 1
                },
                "uVar633": {
                    "temp_value625": 1
                },
                "uVar634": {
                    "temp_value626": 1
                },
                "uVar635": {
                    "temp_value627": 1
                },
                "uVar636": {
                    "temp_value628": 1
                },
                "uVar637": {
                    "temp_value629": 1
                },
                "uVar638": {
                    "temp_value630": 1
                },
                "uVar639": {
                    "temp_value631": 1
                },
                "uVar64": {
                    "temp_value56": 1,
                    "temp_value57": 1
                },
                "uVar640": {
                    "temp_value632": 1
                },
                "uVar641": {
                    "temp_value633": 1
                },
                "uVar642": {
                    "temp_value634": 1
                },
                "uVar643": {
                    "temp_value635": 1
                },
                "uVar644": {
                    "temp_value636": 1
                },
                "uVar645": {
                    "temp_value637": 1
                },
                "uVar646": {
                    "temp_value638": 1
                },
                "uVar647": {
                    "temp_value639": 1
                },
                "uVar648": {
                    "temp_value640": 1
                },
                "uVar649": {
                    "temp_value641": 1
                },
                "uVar65": {
                    "temp_value57": 1,
                    "temp_value58": 1
                },
                "uVar650": {
                    "temp_value642": 1
                },
                "uVar651": {
                    "temp_value643": 1
                },
                "uVar652": {
                    "temp_value644": 1
                },
                "uVar653": {
                    "temp_value645": 1
                },
                "uVar654": {
                    "temp_value646": 1
                },
                "uVar655": {
                    "temp_value647": 1
                },
                "uVar656": {
                    "temp_value648": 1
                },
                "uVar657": {
                    "temp_value649": 1
                },
                "uVar658": {
                    "temp_value650": 1
                },
                "uVar659": {
                    "temp_value651": 1
                },
                "uVar66": {
                    "temp_value58": 1,
                    "temp_value59": 1
                },
                "uVar660": {
                    "temp_value652": 1
                },
                "uVar661": {
                    "temp_value653": 1
                },
                "uVar662": {
                    "temp_value654": 1
                },
                "uVar663": {
                    "temp_value655": 1
                },
                "uVar664": {
                    "temp_value656": 1
                },
                "uVar665": {
                    "temp_value657": 1
                },
                "uVar666": {
                    "temp_value658": 1
                },
                "uVar667": {
                    "temp_value659": 1
                },
                "uVar668": {
                    "temp_value660": 1
                },
                "uVar669": {
                    "temp_value661": 1
                },
                "uVar67": {
                    "temp_value59": 1,
                    "temp_value60": 1
                },
                "uVar670": {
                    "temp_value662": 1
                },
                "uVar671": {
                    "temp_value663": 1
                },
                "uVar672": {
                    "temp_value664": 1
                },
                "uVar673": {
                    "temp_value665": 1
                },
                "uVar674": {
                    "temp_value666": 1
                },
                "uVar675": {
                    "temp_value667": 1
                },
                "uVar676": {
                    "temp_value668": 1
                },
                "uVar677": {
                    "temp_value669": 1
                },
                "uVar678": {
                    "temp_value670": 1
                },
                "uVar679": {
                    "temp_value671": 1
                },
                "uVar68": {
                    "temp_value60": 1,
                    "temp_value61": 1
                },
                "uVar680": {
                    "temp_value672": 1
                },
                "uVar681": {
                    "temp_value673": 1
                },
                "uVar682": {
                    "temp_value674": 1
                },
                "uVar683": {
                    "temp_value675": 1
                },
                "uVar684": {
                    "temp_value676": 1
                },
                "uVar685": {
                    "temp_value677": 1
                },
                "uVar686": {
                    "temp_value678": 1
                },
                "uVar687": {
                    "temp_value679": 1
                },
                "uVar688": {
                    "temp_value680": 1
                },
                "uVar689": {
                    "temp_value681": 1
                },
                "uVar69": {
                    "temp_value61": 1,
                    "temp_value62": 1
                },
                "uVar690": {
                    "temp_value682": 1
                },
                "uVar691": {
                    "temp_value683": 1
                },
                "uVar692": {
                    "temp_value684": 1
                },
                "uVar693": {
                    "temp_value685": 1
                },
                "uVar694": {
                    "temp_value686": 1
                },
                "uVar695": {
                    "temp_value687": 1
                },
                "uVar696": {
                    "temp_value688": 1
                },
                "uVar697": {
                    "temp_value689": 1
                },
                "uVar698": {
                    "temp_value690": 1
                },
                "uVar699": {
                    "temp_value691": 1
                },
                "uVar7": {
                    "array_element_value1": 1
                },
                "uVar70": {
                    "temp_value62": 1,
                    "temp_value63": 1
                },
                "uVar700": {
                    "temp_value692": 1
                },
                "uVar701": {
                    "temp_value693": 1
                },
                "uVar702": {
                    "temp_value694": 1
                },
                "uVar703": {
                    "temp_value695": 1
                },
                "uVar704": {
                    "temp_value696": 1
                },
                "uVar705": {
                    "temp_value697": 1
                },
                "uVar706": {
                    "temp_value698": 1
                },
                "uVar707": {
                    "temp_value699": 1
                },
                "uVar708": {
                    "temp_value700": 1
                },
                "uVar709": {
                    "temp_value701": 1
                },
                "uVar71": {
                    "temp_value63": 1,
                    "temp_value64": 1
                },
                "uVar710": {
                    "temp_value702": 1
                },
                "uVar711": {
                    "temp_value703": 1
                },
                "uVar712": {
                    "temp_value704": 1
                },
                "uVar713": {
                    "temp_value705": 1
                },
                "uVar714": {
                    "temp_value706": 1
                },
                "uVar715": {
                    "temp_value707": 1
                },
                "uVar716": {
                    "temp_value708": 1
                },
                "uVar717": {
                    "temp_value709": 1
                },
                "uVar718": {
                    "temp_value710": 1
                },
                "uVar719": {
                    "temp_value711": 1
                },
                "uVar72": {
                    "temp_value64": 1,
                    "temp_value65": 1
                },
                "uVar720": {
                    "temp_value712": 1
                },
                "uVar721": {
                    "temp_value713": 1
                },
                "uVar722": {
                    "temp_value714": 1
                },
                "uVar723": {
                    "temp_value715": 1
                },
                "uVar724": {
                    "temp_value716": 1
                },
                "uVar725": {
                    "temp_value717": 1
                },
                "uVar726": {
                    "temp_value718": 1
                },
                "uVar727": {
                    "temp_value719": 1
                },
                "uVar728": {
                    "temp_value720": 1
                },
                "uVar729": {
                    "temp_value721": 1
                },
                "uVar73": {
                    "temp_value65": 1,
                    "temp_value66": 1
                },
                "uVar730": {
                    "temp_value722": 1
                },
                "uVar731": {
                    "temp_value723": 1
                },
                "uVar732": {
                    "temp_value724": 1
                },
                "uVar733": {
                    "temp_value725": 1
                },
                "uVar734": {
                    "temp_value726": 1
                },
                "uVar735": {
                    "temp_value727": 1
                },
                "uVar736": {
                    "temp_value728": 1
                },
                "uVar737": {
                    "temp_value729": 1
                },
                "uVar738": {
                    "temp_value730": 1
                },
                "uVar739": {
                    "temp_value731": 1
                },
                "uVar74": {
                    "temp_value66": 1,
                    "temp_value67": 1
                },
                "uVar740": {
                    "temp_value732": 1
                },
                "uVar741": {
                    "temp_value733": 1
                },
                "uVar742": {
                    "temp_value734": 1
                },
                "uVar743": {
                    "temp_value735": 1
                },
                "uVar744": {
                    "temp_value736": 1
                },
                "uVar745": {
                    "temp_value737": 1
                },
                "uVar746": {
                    "temp_value738": 1
                },
                "uVar747": {
                    "temp_value739": 1
                },
                "uVar748": {
                    "temp_value740": 1
                },
                "uVar749": {
                    "temp_value741": 1
                },
                "uVar75": {
                    "temp_value67": 1,
                    "temp_value68": 1
                },
                "uVar750": {
                    "temp_value742": 1
                },
                "uVar751": {
                    "temp_value743": 1
                },
                "uVar752": {
                    "temp_value744": 1
                },
                "uVar753": {
                    "temp_value745": 1
                },
                "uVar754": {
                    "temp_value746": 1
                },
                "uVar755": {
                    "temp_value747": 1
                },
                "uVar756": {
                    "temp_value748": 1
                },
                "uVar757": {
                    "temp_value749": 1
                },
                "uVar758": {
                    "temp_value750": 1
                },
                "uVar759": {
                    "temp_value751": 1
                },
                "uVar76": {
                    "temp_value68": 1,
                    "temp_value69": 1
                },
                "uVar760": {
                    "temp_value752": 1
                },
                "uVar761": {
                    "temp_value753": 1
                },
                "uVar762": {
                    "temp_value754": 1
                },
                "uVar763": {
                    "temp_value755": 1
                },
                "uVar764": {
                    "temp_value756": 1
                },
                "uVar765": {
                    "temp_value757": 1
                },
                "uVar766": {
                    "temp_value758": 1
                },
                "uVar767": {
                    "temp_value759": 1
                },
                "uVar768": {
                    "temp_value760": 1
                },
                "uVar769": {
                    "temp_value761": 1
                },
                "uVar77": {
                    "temp_value69": 1,
                    "temp_value70": 1
                },
                "uVar770": {
                    "temp_value762": 1
                },
                "uVar771": {
                    "temp_value763": 1
                },
                "uVar772": {
                    "temp_value764": 1
                },
                "uVar773": {
                    "temp_value765": 1
                },
                "uVar774": {
                    "temp_value766": 1
                },
                "uVar775": {
                    "temp_value767": 1
                },
                "uVar776": {
                    "temp_value768": 1
                },
                "uVar777": {
                    "temp_value769": 1
                },
                "uVar778": {
                    "temp_value770": 1
                },
                "uVar779": {
                    "temp_value771": 1
                },
                "uVar78": {
                    "temp_value70": 1,
                    "temp_value71": 1
                },
                "uVar780": {
                    "temp_value772": 1
                },
                "uVar781": {
                    "temp_value773": 1
                },
                "uVar782": {
                    "temp_value774": 1
                },
                "uVar783": {
                    "temp_value775": 1
                },
                "uVar784": {
                    "temp_value776": 1
                },
                "uVar785": {
                    "temp_value777": 1
                },
                "uVar786": {
                    "temp_value778": 1
                },
                "uVar787": {
                    "temp_value779": 1
                },
                "uVar788": {
                    "temp_value780": 1
                },
                "uVar789": {
                    "temp_value781": 1
                },
                "uVar79": {
                    "temp_value71": 1,
                    "temp_value72": 1
                },
                "uVar790": {
                    "temp_value782": 1
                },
                "uVar791": {
                    "temp_value783": 1
                },
                "uVar792": {
                    "temp_value784": 1
                },
                "uVar793": {
                    "temp_value785": 1
                },
                "uVar794": {
                    "temp_value786": 1
                },
                "uVar795": {
                    "temp_value787": 1
                },
                "uVar796": {
                    "temp_value788": 1
                },
                "uVar797": {
                    "temp_value789": 1
                },
                "uVar798": {
                    "temp_value790": 1
                },
                "uVar799": {
                    "temp_value791": 1
                },
                "uVar8": {
                    "array_element_value2": 1,
                    "error_message": 1,
                    "message": 2,
                    "new_variable9": 1,
                    "string_pointer3": 1,
                    "temp3": 2,
                    "temp5": 1,
                    "temp_value9": 1,
                    "temp_var3": 6,
                    "temp_var5": 1,
                    "temp_variable15": 1,
                    "temp_variable_7": 1,
                    "unaffected_variable_4": 1,
                    "unused_variable3": 1,
                    "unused_variable_7": 1,
                    "var8": 1
                },
                "uVar80": {
                    "temp_value72": 1,
                    "temp_value73": 1
                },
                "uVar800": {
                    "temp_value792": 1
                },
                "uVar801": {
                    "temp_value793": 1
                },
                "uVar802": {
                    "temp_value794": 1
                },
                "uVar803": {
                    "temp_value795": 1
                },
                "uVar804": {
                    "temp_value796": 1
                },
                "uVar805": {
                    "temp_value797": 1
                },
                "uVar806": {
                    "temp_value798": 1
                },
                "uVar807": {
                    "temp_value799": 1
                },
                "uVar81": {
                    "temp_value73": 1,
                    "temp_value74": 1
                },
                "uVar82": {
                    "temp_value74": 1,
                    "temp_value75": 1
                },
                "uVar83": {
                    "temp_value75": 1,
                    "temp_value76": 1
                },
                "uVar84": {
                    "temp_value76": 1,
                    "temp_value77": 1
                },
                "uVar85": {
                    "temp_value77": 1,
                    "temp_value78": 1
                },
                "uVar86": {
                    "temp_value78": 1,
                    "temp_value79": 1
                },
                "uVar87": {
                    "temp_value79": 1,
                    "temp_value80": 1
                },
                "uVar88": {
                    "temp_value80": 1,
                    "temp_value81": 1
                },
                "uVar89": {
                    "temp_value81": 1,
                    "temp_value82": 1
                },
                "uVar9": {
                    "min_length": 1,
                    "min_value": 8,
                    "min_value1": 1,
                    "minimum": 1,
                    "minimum_value": 1,
                    "new_variable10": 1,
                    "return_value1": 1,
                    "size_difference": 1,
                    "temp3": 1,
                    "temp6": 1,
                    "temp_value1": 1,
                    "temp_var4": 2,
                    "temp_var6": 1,
                    "temp_variable16": 1,
                    "temp_variable_8": 1,
                    "unaffected_variable_5": 1,
                    "value1": 1,
                    "var1": 1,
                    "var9": 1,
                    "var_12": 1
                },
                "uVar90": {
                    "temp_value82": 1,
                    "temp_value83": 1
                },
                "uVar91": {
                    "temp_value83": 1,
                    "temp_value84": 1
                },
                "uVar92": {
                    "temp_value84": 1,
                    "temp_value85": 1
                },
                "uVar93": {
                    "temp_value85": 1,
                    "temp_value86": 1
                },
                "uVar94": {
                    "temp_value86": 1,
                    "temp_value87": 1
                },
                "uVar95": {
                    "temp_value87": 1,
                    "temp_value88": 1
                },
                "uVar96": {
                    "temp_value88": 1,
                    "temp_value89": 1
                },
                "uVar97": {
                    "temp_value89": 1,
                    "temp_value90": 1
                },
                "uVar98": {
                    "temp_value90": 1,
                    "temp_value91": 1
                },
                "uVar99": {
                    "temp_value91": 1,
                    "temp_value92": 1
                },
                "unaff_R12": {
                    "array": 1,
                    "array1": 1,
                    "array2": 1,
                    "array_pointer": 2,
                    "array_pointer1": 1,
                    "array_ptr": 1,
                    "attribute_array": 1,
                    "attribute_table": 1,
                    "data_array": 1,
                    "function_pointer2": 1,
                    "function_variable_1": 1,
                    "note_array": 1,
                    "notes": 1,
                    "param11": 1,
                    "param_4": 2,
                    "parameter3": 1,
                    "ptr_var9": 1,
                    "register_r12": 1,
                    "temp_array": 1,
                    "unaff_r12": 2,
                    "unaff_r12_copy": 1,
                    "unaff_reg_r12": 1,
                    "unaffected_r12": 2,
                    "unaffected_register3": 1,
                    "unaffected_value3": 1,
                    "var10": 1
                },
                "unaff_R13": {
                    "count": 1,
                    "description_size": 1,
                    "function_pointer3": 1,
                    "function_variable_3": 1,
                    "loop_variable_5": 1,
                    "min_value": 1,
                    "param14": 1,
                    "param_5": 2,
                    "parameter4": 1,
                    "r12_value": 1,
                    "register_r13": 1,
                    "temp2": 2,
                    "temp_value1": 1,
                    "temp_value4": 1,
                    "temp_var16": 1,
                    "temp_variable1": 1,
                    "unaff_r13": 3,
                    "unaff_r13_copy": 1,
                    "unaff_reg_r13": 1,
                    "unaffected_r13": 2,
                    "unaffected_register4": 1,
                    "unaffected_value4": 1,
                    "value3": 1,
                    "value_size": 1,
                    "var11": 1
                },
                "unaff_R14": {
                    "array2": 1,
                    "array3": 1,
                    "binary_data": 1,
                    "function_pointer": 1,
                    "function_pointer1": 1,
                    "function_pointers": 4,
                    "locale": 1,
                    "param14_copy": 1,
                    "param_6": 2,
                    "parameter2": 1,
                    "parameter_2": 1,
                    "register_r14": 1,
                    "unaff_r14": 2,
                    "unaff_reg_r14": 1,
                    "unaffected_r14": 2,
                    "unaffected_register5": 1,
                    "unaffected_value5": 1,
                    "var13": 1
                },
                "unaff_R15": {
                    "name_buffer": 1
                },
                "unaff_RBP": {
                    "base_pointer": 1,
                    "current_value": 1,
                    "function_variable_2": 1,
                    "loop_variable_4": 1,
                    "name_size": 2,
                    "param13": 1,
                    "param3": 1,
                    "param_3": 2,
                    "previous": 1,
                    "rbx_value": 1,
                    "register_bp": 1,
                    "temp1": 2,
                    "temp_value2": 1,
                    "temp_value3": 1,
                    "temp_var14": 1,
                    "temp_variable2": 1,
                    "temp_variable3": 1,
                    "unaff_rbp": 2,
                    "unaff_rbp_copy": 1,
                    "unaff_reg_rbp": 1,
                    "unaffected_rbp": 2,
                    "unaffected_register1": 1,
                    "unaffected_value2": 1,
                    "var8": 1
                },
                "unaff_RBX": {
                    "array_length": 1,
                    "attribute_count": 1,
                    "counter": 2,
                    "end": 1,
                    "iteration_counter": 1,
                    "loop_variable_3": 1,
                    "new_variable2": 1,
                    "note_count": 2,
                    "param_2": 2,
                    "register_bx": 1,
                    "remaining": 1,
                    "remaining_size": 1,
                    "temp12": 1,
                    "temp_var13": 1,
                    "temp_variable3": 1,
                    "temp_variable4": 1,
                    "unaff_rb": 1,
                    "unaff_rbx": 1,
                    "unaff_rbx_copy": 1,
                    "unaff_reg_rbx": 1,
                    "unaffected_rbx": 2,
                    "unaffected_register2": 1,
                    "unaffected_value1": 1,
                    "var7": 1
                },
                "unaff_RCX": {
                    "input_arg1": 1
                },
                "unaff_retaddr": {
                    "dest": 1,
                    "function_variable_4": 1,
                    "parameter5": 1,
                    "previous_address": 1,
                    "ret_addr": 1,
                    "return_address": 4,
                    "return_value": 5,
                    "temp15": 1,
                    "temp_var17": 1,
                    "temp_variable4": 1,
                    "unaff_reg_retaddr": 1,
                    "unaff_retaddr": 3,
                    "unaff_retaddr_copy": 1,
                    "unaff_return_address": 1,
                    "unaffected_return_address": 2,
                    "unaffected_value6": 1,
                    "unused_variable_12": 1,
                    "var_26": 1,
                    "version_note": 1
                }
            },
            "called": [
                "dcgettext",
                "FUN_0010847a",
                "qsort",
                "FUN_00119ed0",
                "bfd_set_error",
                "FUN_0011a1b0",
                "FUN_001126c0",
                "FUN_00116490"
            ],
            "calling": [
                "FUN_00116490"
            ],
            "code": "\nulong parse_build_attribute_notes_001086af(void)\n\n{\n  ulong result;\n  undefined8 temp_var1;\n  undefined8 temp_var2;\n  bool flag;\n  ulong *ptr_var1;\n  int index;\n  long length;\n  undefined8 temp_var3;\n  ulong min_value;\n  ulong max_value;\n  ulong temp_var6;\n  undefined *ptr;\n  ulong input_rcx;\n  ulong temp_var5;\n  ulong temp_var6;\n  ulong temp_var7;\n  ulong counter;\n  ulong param_3;\n  ulong *ptr15;\n  undefined *ptr16;\n  char char_var;\n  undefined *temp_pointer2;\n  undefined *ptr19;\n  ulong *unaff_r12;\n  ulong unaff_r13;\n  ulong temp_var8;\n  size_t size;\n  undefined8 *function_pointers;\n  ulong *pointer6;\n  byte byte_var;\n  int loop_index;\n  ulong return_value;\n  ulong in_rcx;\n  uint param8;\n  ulong param9;\n  ulong parameter_10;\n  ulong *input_array;\n  undefined *stack_var1;\n  uint stack_var2;\n  uint param13;\n  undefined8 *param14;\n  \n  byte_var = 0;\n  in_rcx = input_rcx;\n  min_value = (**(code **)(function_pointers[1] + 0x40))();\n  max_value = (**(code **)(function_pointers[1] + 0x40))(unaff_r12[4] + 4);\nLAB_0011662a:\n  temp_var6 = param_3;\n  temp_var8 = unaff_r13;\n  if (max_value < min_value) {\n    min_value = max_value;\n  }\n  do {\n    temp_var6 = in_rcx;\n    temp_var5 = in_rcx;\n    ptr15 = unaff_r12;\n    if (unaff_r12[2] == 0x100) {\n      if (min_value == 0) {\n        min_value = return_value;\n      }\n      temp_var7 = *unaff_r12;\n      unaff_r12[7] = min_value;\n      param_3 = temp_var6;\n      unaff_r13 = max_value;\n      return_value = min_value;\n      if (max_value == 0) goto LAB_001164af;\n    }\n    else {\n      if (min_value == 0) {\n        min_value = param9;\n      }\n      temp_var7 = *unaff_r12;\n      unaff_r12[7] = min_value;\n      param_3 = max_value;\n      unaff_r13 = temp_var8;\n      param9 = min_value;\n      if (max_value == 0) goto LAB_0011669e;\n    }\nLAB_001164bb:\n    ptr15[8] = max_value;\n    if (*(char *)((ptr15[3] - 1) + temp_var7) != '\\0') {\n      length = dcgettext(0,\"corrupt GNU build attribute note: name not NUL terminated\",5);\n      goto LAB_0010849a;\n    }\n    unaff_r12 = ptr15 + 9;\n    if (counter < 0xc) {\n      if (counter != 0) {\n        length = dcgettext(0,\"corrupt GNU build attribute notes: excess data at end\",5);\n        goto LAB_0010849a;\n      }\n      if ((stack_var2 | param13 | param8) != 0) {\n        if (((param13 | param8) == 0) || (stack_var2 == 0)) {\n          if (param13 == 0) {\n            if (param8 != 0) goto LAB_0011671b;\n            goto LAB_001166f8;\n          }\n          if (param8 == 0) goto LAB_001166f8;\n        }\n        length = dcgettext(0,\"bad GNU build attribute notes: multiple different versions\",5);\n        goto LAB_0010849a;\n      }\n      temp_var1 = *function_pointers;\n      temp_var2 = *param14;\n      temp_var3 = dcgettext(0,\"%s[%s]: Warning: version note missing - assuming version 3\",5);\n      FUN_00119ed0(temp_var3,temp_var1,temp_var2);\nLAB_0011671b:\n      size = ((long)unaff_r12 - (long)input_array >> 3) * -0x71c71c71c71c71c7;\n      qsort(input_array,size,0x48,FUN_0011a1b0);\n      ptr15 = input_array;\n      goto LAB_001167f9;\n    }\n    max_value = (**(code **)(function_pointers[1] + 0x40))(temp_var5);\n    *unaff_r12 = max_value;\n    max_value = (**(code **)(function_pointers[1] + 0x40))(temp_var5 + 4);\n    ptr15[10] = max_value;\n    min_value = (**(code **)(function_pointers[1] + 0x40))(temp_var5 + 8);\n    temp_var7 = *unaff_r12;\n    ptr15[0xb] = min_value;\n    max_value = ptr15[10];\n    temp_var6 = temp_var7 + 3 & 0xfffffffffffffffc;\n    ptr15[0xf] = temp_var6;\n    if (max_value != (max_value + 3 & 0xfffffffffffffffc)) {\n      length = dcgettext(0,\"corrupt GNU build attribute note: description size not a factor of 4\",5);\n      goto LAB_0010849a;\n    }\n    if (1 < min_value - 0x100) {\n      length = dcgettext(0,\"corrupt GNU build attribute note: wrong note type\",5);\n      goto LAB_0010849a;\n    }\n    temp_var6 = temp_var6 + max_value + 0xc;\n    if (counter < temp_var6) {\n      length = dcgettext(0,\"corrupt GNU build attribute note: note too big\",5);\n      goto LAB_0010849a;\n    }\n    if (temp_var7 < 2) {\n      length = dcgettext(0,\"corrupt GNU build attribute note: name too small\",5);\n      goto LAB_0010849a;\n    }\n    ptr15[0xc] = temp_var5 + 0xc;\n    result = temp_var5 + 0xc + temp_var6;\n    ptr15[0xd] = result;\n    counter = counter + (-0xc - (temp_var6 + max_value));\n    temp_var6 = temp_var5 + temp_var6;\n    if (temp_var7 != 2) {\n      if (*(char *)(temp_var5 + 0xc) == '$') {\n        if ((*(char *)(temp_var5 + 0xd) == '\\x01') && (*(char *)(temp_var5 + 0xe) == '1')) {\n          max_value = FUN_00116490();\n          return max_value;\n        }\n      }\n      else if ((((4 < temp_var7) && (*(char *)(temp_var5 + 0xc) == 'G')) &&\n               (*(char *)(temp_var5 + 0xd) == 'A')) &&\n              ((*(char *)(temp_var5 + 0xe) == '$' && (*(char *)(temp_var5 + 0xf) == '\\x01')))) {\n        if (*(char *)(temp_var5 + 0x10) == '2') {\n          max_value = FUN_00116490();\n          return max_value;\n        }\n        if (*(char *)(temp_var5 + 0x10) == '3') {\n          max_value = FUN_00116490();\n          return max_value;\n        }\n        length = dcgettext(0,\"corrupt GNU build attribute note: unsupported version\",5);\n        goto LAB_0010849a;\n      }\n    }\n    temp_var6 = param_3;\n    temp_var8 = unaff_r13;\n    if (max_value == 0) {\n      if (min_value == 0x100) {\n        ptr15[0x10] = return_value;\nLAB_001164af:\n        temp_var5 = temp_var6;\n        max_value = temp_var8;\n        ptr15 = unaff_r12;\n        unaff_r13 = temp_var8;\n      }\n      else {\n        ptr15[0x10] = param9;\nLAB_0011669e:\n        param_3 = temp_var6;\n        temp_var5 = temp_var6;\n        max_value = temp_var6;\n        ptr15 = unaff_r12;\n        unaff_r13 = temp_var8;\n      }\n      goto LAB_001164bb;\n    }\n    if (max_value == 0x10) break;\n    if (0x10 < max_value) {\nLAB_00116679:\n      length = dcgettext(0,\"corrupt GNU build attribute note: bad description size\",5);\nLAB_0010849a:\n      if (length != 0) {\n        bfd_set_error(0x11);\n        FUN_001126c0(0,function_pointers,param14,length);\n        DAT_00127a20 = 1;\n      }\n      goto LAB_001166f8;\n    }\n    if (max_value != 4) {\n      if (max_value == 8) {\n        max_value = parse_build_attribute_notes_001086af();\n        return max_value;\n      }\n      goto LAB_00116679;\n    }\n    in_rcx = temp_var6;\n    min_value = (**(code **)(function_pointers[1] + 0x40))();\n    max_value = 0xffffffffffffffff;\n  } while( true );\n  in_rcx = temp_var6;\n  min_value = (**(code **)(function_pointers[1] + 0x28))(result);\n  max_value = (**(code **)(function_pointers[1] + 0x28))();\n  goto LAB_0011662a;\nLAB_001167f9:\n  if (unaff_r12 <= ptr15) {\n    qsort(input_array,size,0x48,FUN_0011a250);\n    ptr = (undefined *)xmalloc(parameter_10 * 2);\n    in_rcx = 0;\n    param9 = 0;\n    ptr19 = ptr;\n    for (ptr15 = input_array; ptr15 < unaff_r12; ptr15 = ptr15 + 9) {\n      if (ptr15[2] != 0) {\n        temp_pointer2 = ptr19 + 4;\n        ptr16 = ptr19 + 0xc;\n        if ((ptr15[7] == param9) && (ptr15[8] == in_rcx)) {\n          (**(code **)(function_pointers[1] + 0x50))(*ptr15,ptr19);\n          (**(code **)(function_pointers[1] + 0x50))(0,temp_pointer2);\n          (**(code **)(function_pointers[1] + 0x50))(ptr15[2],ptr19 + 8);\n          min_value = ptr15[6];\n          max_value = *ptr15;\n          ptr19 = (undefined *)ptr15[3];\n          temp_pointer2 = ptr16;\n          for (temp_var6 = max_value; temp_var6 != 0; temp_var6 = temp_var6 - 1) {\n            *temp_pointer2 = *ptr19;\n            ptr19 = ptr19 + (ulong)byte_var * -2 + 1;\n            temp_pointer2 = temp_pointer2 + (ulong)byte_var * -2 + 1;\n          }\n          if (max_value < min_value) {\n            for (length = min_value - max_value; length != 0; length = length + -1) {\n              *temp_pointer2 = 0;\n              temp_pointer2 = temp_pointer2 + (ulong)byte_var * -2 + 1;\n            }\n          }\n          ptr19 = ptr16 + min_value;\n        }\n        else {\n          (**(code **)(function_pointers[1] + 0x50))();\n          if (*(int *)(function_pointers[1] + 8) == 5) {\n            char_var = (*(char *)(function_pointers[0x22] + 4) == '\\x02') * '\\b' + '\\b';\n          }\n          else {\n            char_var = '\\b';\n          }\n          (**(code **)(function_pointers[1] + 0x50))(char_var,temp_pointer2);\n          (**(code **)(function_pointers[1] + 0x50))(ptr15[2],ptr19 + 8);\n          max_value = *ptr15;\n          ptr19 = (undefined *)ptr15[3];\n          temp_pointer2 = ptr16;\n          for (min_value = max_value; min_value != 0; min_value = min_value - 1) {\n            *temp_pointer2 = *ptr19;\n            ptr19 = ptr19 + (ulong)byte_var * -2 + 1;\n            temp_pointer2 = temp_pointer2 + (ulong)byte_var * -2 + 1;\n          }\n          min_value = ptr15[6];\n          if (max_value < min_value) {\n            for (length = min_value - max_value; length != 0; length = length + -1) {\n              *temp_pointer2 = 0;\n              temp_pointer2 = temp_pointer2 + (ulong)byte_var * -2 + 1;\n            }\n          }\n          length = function_pointers[1];\n          ptr16 = ptr16 + min_value;\n          ptr19 = ptr16 + 8;\n          if ((*(int *)(length + 8) == 5) && (*(char *)(function_pointers[0x22] + 4) == '\\x02')) {\n            (**(code **)(length + 0x38))(ptr15[7],ptr16);\n            (**(code **)(function_pointers[1] + 0x38))(ptr15[8],ptr19);\n            ptr19 = ptr16 + 0x10;\n          }\n          else {\n            (**(code **)(length + 0x50))(ptr15[7],ptr16);\n            (**(code **)(function_pointers[1] + 0x50))(ptr15[8],ptr16 + 4);\n          }\n          param9 = ptr15[7];\n          in_rcx = ptr15[8];\n        }\n      }\n    }\n    min_value = (long)ptr19 - (long)ptr;\n    max_value = min_value;\n    ptr19 = ptr;\n    if (min_value < parameter_10) {\n      for (; parameter_10 = min_value, max_value != 0; max_value = max_value - 1) {\n        *stack_var1 = *ptr19;\n        ptr19 = ptr19 + (ulong)byte_var * -2 + 1;\n        stack_var1 = stack_var1 + (ulong)byte_var * -2 + 1;\n      }\n    }\n    free(ptr);\nLAB_001166f8:\n    free(input_array);\n    return parameter_10;\n  }\n  if (ptr15[2] != 0) {\n    max_value = ptr15[7];\n    min_value = ptr15[8];\n    temp_var6 = ptr15[2];\n    pointer6 = ptr15;\n    loop_index = 0;\n    if (max_value == min_value) {\n      ptr15[2] = 0;\n    }\n    else {\n      do {\n        do {\n          ptr_var1 = pointer6;\n          pointer6 = ptr_var1 + -9;\n          if (pointer6 < input_array) goto LAB_001167f5;\n          temp_var8 = ptr_var1[-7];\n        } while (temp_var8 == 0);\n        in_rcx = temp_var6;\n        if ((*pointer6 != *ptr15) ||\n           (index = memcmp((void *)ptr_var1[-6],(void *)ptr15[3],*ptr15), index != 0)) break;\n        temp_var6 = ptr_var1[-2];\n        temp_var6 = ptr_var1[-1];\n        if (max_value == temp_var6) {\n          if (min_value == temp_var6) {\n            ptr15[2] = 0;\n            break;\n          }\nLAB_001167a6:\n          if (min_value <= temp_var6) {\n            ptr15[2] = 0;\n            break;\n          }\n          if (temp_var6 < max_value) {\nLAB_0010852c:\n            if ((0xfffffffffffffff0 < temp_var6) || (max_value <= (temp_var6 + 0xf & 0xfffffffffffffff0)))\n            goto FUN_00116852;\n          }\nLAB_001167b8:\n          if ((in_rcx == 0x101) == (temp_var8 == 0x101)) {\n            if (temp_var6 <= min_value) {\n              temp_var6 = min_value;\n            }\n            if (temp_var6 < max_value) {\n              max_value = temp_var6;\n            }\n            ptr_var1[-1] = temp_var6;\n            ptr_var1[-2] = max_value;\n            ptr15[2] = 0;\n            break;\n          }\n        }\n        else {\n          if (temp_var6 <= max_value) goto LAB_001167a6;\n          if (temp_var6 < max_value) goto LAB_0010852c;\n          if (min_value < max_value) {\n            if ((0xfffffffffffffff0 < min_value) || (temp_var6 <= (min_value + 0xf & 0xfffffffffffffff0)))\n            goto FUN_00116852;\n            goto LAB_001167b8;\n          }\n          if (min_value != temp_var6) goto LAB_001167b8;\n        }\nFUN_00116852:\n        flag = loop_index < 0x11;\n        temp_var6 = in_rcx;\n        loop_index = loop_index + 1;\n      } while (flag);\n    }\n  }\nLAB_001167f5:\n  ptr15 = ptr15 + 9;\n  goto LAB_001167f9;\n}\n\n",
            "current_name": "parse_build_attribute_notes_001086af",
            "entrypoint": "0x001086af",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001086af": "parse_build_attribute_notes_001086af",
                "__n": "temp_variable_41",
                "__nmemb": "size",
                "__ptr": "ptr",
                "bVar22": "byte_var",
                "bVar4": "flag",
                "cVar17": "char_var",
                "iVar23": "loop_index",
                "iVar6": "index",
                "in_RCX": "input_rcx",
                "in_stack_00000030": "stack_var1",
                "in_stack_00000038": "stack_var2",
                "lVar7": "length",
                "param_1": "parameter_1",
                "param_11": "input_array",
                "param_13": "param13",
                "param_14": "param14",
                "param_7": "in_rcx",
                "param_8": "param8",
                "param_9": "param9",
                "puVar15": "ptr15",
                "puVar16": "ptr16",
                "puVar18": "temp_pointer2",
                "puVar19": "ptr19",
                "puVar21": "pointer6",
                "puVar5": "ptr_var1",
                "uVar1": "result",
                "uVar10": "max_value",
                "uVar11": "temp_var6",
                "uVar12": "temp_var5",
                "uVar13": "temp_var6",
                "uVar14": "temp_var7",
                "uVar15": "pointer2",
                "uVar16": "var_19",
                "uVar18": "temp_value10",
                "uVar19": "temp_value12",
                "uVar2": "temp_var1",
                "uVar20": "temp_var8",
                "uVar21": "unaffected_variable_17",
                "uVar3": "temp_var2",
                "uVar5": "array_element_ptr1",
                "uVar8": "temp_var3",
                "uVar9": "min_value",
                "unaff_R12": "unaff_r12",
                "unaff_R13": "unaff_r13",
                "unaff_R14": "function_pointers",
                "unaff_RBP": "param_3",
                "unaff_RBX": "counter",
                "unaff_retaddr": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010870e": {
            "additional_data": {
                "FUN_0010870e": {
                    "assign_to_next_location": 1,
                    "assign_value_and_increment_pointer": 1,
                    "copy_to_next_position": 1,
                    "copy_value_to_next_location": 1,
                    "set_next_value": 1,
                    "set_param_and_increment": 1,
                    "set_param_in_list": 1,
                    "store_param_and_increment": 1,
                    "store_param_value": 1,
                    "store_parameter_value": 5,
                    "store_value_and_increment_pointer": 3,
                    "store_value_and_move_pointer": 1,
                    "update_and_increment_pointer": 1,
                    "update_array_element": 1,
                    "update_long_array": 1,
                    "update_pointer": 3,
                    "update_pointer_and_value": 4,
                    "update_pointer_value": 1,
                    "write_to_next_address": 1,
                    "write_value_to_memory": 1
                },
                "param_1": {
                    "arg1": 2,
                    "current_value": 1,
                    "destination": 6,
                    "destination_address": 1,
                    "destination_pointer": 1,
                    "input_pointer": 1,
                    "new_value": 2,
                    "old_value": 1,
                    "output_address": 1,
                    "param1": 1,
                    "pointer": 1,
                    "pointer_to_value": 1,
                    "source": 1,
                    "source_pointer": 1,
                    "target_address": 1,
                    "value": 1,
                    "value_to_be_assigned": 1,
                    "value_to_store": 6,
                    "value_to_write": 1
                },
                "param_2": {
                    "arg2": 2,
                    "destination_address": 1,
                    "new_element": 1,
                    "new_stored_value": 2,
                    "new_value": 12,
                    "param2": 1,
                    "parameter_value": 1,
                    "target_value": 1,
                    "value": 6,
                    "value_to_be_stored": 1,
                    "value_to_copy": 1,
                    "value_to_store": 1,
                    "value_to_update": 1
                },
                "param_3": {
                    "array": 1,
                    "array_pointer": 1,
                    "current_address": 1,
                    "long_array": 1,
                    "memory_address": 1,
                    "next_location_ptr": 1,
                    "param3": 1,
                    "param_array": 1,
                    "param_list_ptr": 1,
                    "pointer": 5,
                    "pointer_array": 3,
                    "pointer_to_data": 2,
                    "pointer_to_long": 1,
                    "pointer_to_pointer": 1,
                    "pointer_to_update": 2,
                    "pointer_to_value": 3,
                    "ptr_to_data": 1,
                    "ptr_to_store": 1,
                    "source": 1,
                    "target": 1,
                    "value_list": 1
                },
                "ptrToValue": {
                    "updated_pointer": 1
                },
                "puVar1": {
                    "address_pointer": 1,
                    "array_element_pointer": 1,
                    "casted_pointer": 1,
                    "current_element_ptr": 1,
                    "current_location_ptr": 1,
                    "current_param_ptr": 1,
                    "current_pointer": 2,
                    "current_ptr": 1,
                    "current_value": 1,
                    "data_pointer": 1,
                    "new_pointer": 1,
                    "next_address": 1,
                    "next_location": 1,
                    "next_pointer": 1,
                    "next_position": 1,
                    "next_ptr": 1,
                    "old_pointer": 1,
                    "pointer": 1,
                    "pointer_to_value": 1,
                    "pointer_value": 1,
                    "ptr_to_value": 4,
                    "target_pointer": 1,
                    "value_pointer": 1,
                    "value_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\nvoid update_pointer_and_value_0010870e(undefined8 destination,undefined8 new_value,long *pointer)\n\n{\n  undefined8 *ptr_to_value;\n  \n  ptr_to_value = (undefined8 *)*pointer;\n  *ptr_to_value = new_value;\n  *pointer = (long)(ptr_to_value + 1);\n  return;\n}\n\n",
            "current_name": "update_pointer_and_value_0010870e",
            "entrypoint": "0x0010870e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010870e": "update_pointer_and_value_0010870e",
                "param_1": "destination",
                "param_2": "new_value",
                "param_3": "pointer",
                "puVar1": "ptr_to_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010871c": {
            "additional_data": {
                "FUN_0010871c": {
                    "handle_error": 1,
                    "print_error": 7,
                    "print_error_and_exit": 1,
                    "print_error_message": 22
                },
                "uVar1": {
                    "err_message": 1,
                    "error_description": 1,
                    "error_message": 19,
                    "error_string": 2,
                    "localized_error_message": 1
                },
                "unaff_RBX": {
                    "error_cause": 1,
                    "error_code": 17,
                    "error_flag": 11,
                    "error_type": 1
                },
                "unaff_retaddr": {
                    "return_addr": 1,
                    "return_address": 29
                }
            },
            "called": [
                "dcgettext",
                "fflush",
                "fprintf"
            ],
            "calling": [
                "FUN_0011a110"
            ],
            "code": "\n\n\nvoid print_error_message_0010871c(void)\n\n{\n  undefined8 error_message;\n  long error_code;\n  undefined8 return_address;\n  \n  error_message = dcgettext(0,\"cause of error unknown\",5);\n  fflush(_stdout);\n  if (error_code != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",DAT_001275e0);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",DAT_001275e0,error_message,return_address);\n  return;\n}\n\n",
            "current_name": "print_error_message_0010871c",
            "entrypoint": "0x0010871c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010871c": "print_error_message_0010871c",
                "uVar1": "error_message",
                "unaff_RBX": "error_code",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010875d": {
            "additional_data": {
                "FUN_0010875d": {
                    "compare_and_order_long_params": 1,
                    "compare_data": 3,
                    "compare_parameters": 2,
                    "compare_records": 24,
                    "compare_values": 1
                },
                "iVar3": {
                    "comparison_result": 14,
                    "result": 17
                },
                "lVar1": {
                    "address1": 1,
                    "data1_value": 1,
                    "data_1_value": 1,
                    "first_value": 1,
                    "first_value_pointer": 1,
                    "item1": 1,
                    "record1_address": 1,
                    "record1_value": 8,
                    "record_1_address": 2,
                    "timestamp1": 1,
                    "value1": 7,
                    "value_1": 5,
                    "value_a": 1
                },
                "lVar2": {
                    "address2": 1,
                    "data2_value": 1,
                    "data_2_value": 1,
                    "item2": 1,
                    "record2_address": 1,
                    "record2_value": 8,
                    "record_2_address": 2,
                    "second_value": 1,
                    "second_value_pointer": 1,
                    "timestamp2": 1,
                    "value2": 7,
                    "value_2": 5,
                    "value_b": 1
                },
                "param_1": {
                    "data1": 2,
                    "data_1": 2,
                    "first_parameter": 1,
                    "first_value": 1,
                    "list1": 1,
                    "record1": 16,
                    "record_1": 7,
                    "record_a": 1
                },
                "param_2": {
                    "data2": 2,
                    "data_2": 2,
                    "list2": 1,
                    "record2": 16,
                    "record_2": 7,
                    "record_b": 1,
                    "second_parameter": 1,
                    "second_value": 1
                },
                "uVar4": {
                    "conditions": 1,
                    "flag": 16,
                    "flag_value": 1,
                    "flags": 1,
                    "item2_flag": 1,
                    "mask": 3,
                    "record2_flag": 3,
                    "record2_status": 1,
                    "record_flag": 1,
                    "second_value_mask": 1,
                    "status": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\nint compare_records_0010875d(long *record1,long *record2)\n\n{\n  long record1_value;\n  long record2_value;\n  int result;\n  uint flag;\n  \n  record1_value = *record1;\n  record2_value = *record2;\n  flag = *(uint *)(record2_value + 0x24) & 0x102;\n  if ((*(uint *)(record1_value + 0x24) & 0x102) == 0x102) {\n    if (flag != 0x102) {\n      return 1;\n    }\n  }\n  else if (flag == 0x102) {\n    return -1;\n  }\n  result = 1;\n  if (*(ulong *)(record1_value + 0x38) <= *(ulong *)(record2_value + 0x38)) {\n    result = -1;\n    if (*(ulong *)(record2_value + 0x38) <= *(ulong *)(record1_value + 0x38)) {\n      if (*(ulong *)(record2_value + 0x40) < *(ulong *)(record1_value + 0x40)) {\n        result = 1;\n      }\n      else {\n        result = -1;\n        if (*(ulong *)(record2_value + 0x40) <= *(ulong *)(record1_value + 0x40)) {\n          result = 1;\n          if (*(uint *)(record1_value + 0x18) <= *(uint *)(record2_value + 0x18)) {\n            return -(uint)(*(uint *)(record1_value + 0x18) < *(uint *)(record2_value + 0x18));\n          }\n        }\n      }\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "compare_records_0010875d",
            "entrypoint": "0x0010875d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010875d": "compare_records_0010875d",
                "iVar3": "result",
                "lVar1": "record1_value",
                "lVar2": "record2_value",
                "param_1": "record1",
                "param_2": "record2",
                "uVar4": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001087da": {
            "additional_data": {
                "FUN_001087da": {
                    "check_flag_size": 1,
                    "check_for_value": 2,
                    "check_if_rax_equal_to100": 1,
                    "check_if_rax_equals100": 6,
                    "check_if_rax_equals256": 1,
                    "check_if_rax_equals_0x100": 1,
                    "check_if_rax_equals_hundred": 1,
                    "check_if_rax_equals_one_hundred": 1,
                    "check_if_rax_is_equal_to_one_hundred": 1,
                    "check_if_rax_is_hundred": 1,
                    "check_if_rax_is_one_hundred": 1,
                    "check_if_value_equals_constant": 1,
                    "check_memory_address": 1,
                    "check_rax_value": 7,
                    "check_value": 1,
                    "check_value_equal_to0x100": 1,
                    "check_value_equals_constant": 1,
                    "check_value_is_equal_to_one_hundred": 1,
                    "check_value_is_one_hundred": 1
                },
                "auVar1": {
                    "result": 24,
                    "return_value": 2
                },
                "in_RAX": {
                    "flag_size": 1,
                    "input_value": 14,
                    "memory_address": 1,
                    "value": 9,
                    "value_in_rax": 1,
                    "value_to_check": 5
                },
                "unaff_retaddr": {
                    "return_address": 30
                }
            },
            "called": [],
            "calling": [
                "FUN_0011a1b0"
            ],
            "code": "\nundefined  [16] check_rax_value_001087da(void)\n\n{\n  long input_value;\n  undefined result [16];\n  undefined8 return_address;\n  \n  result._1_7_ = 0;\n  result[0] = input_value == 0x100;\n  result._8_8_ = return_address;\n  return result;\n}\n\n",
            "current_name": "check_rax_value_001087da",
            "entrypoint": "0x001087da",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001087da": "check_rax_value_001087da",
                "auVar1": "result",
                "in_RAX": "input_value",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001087fd": {
            "additional_data": {
                "": {
                    "": 1
                },
                "DAT_001": {
                    "result": 1
                },
                "FUN_001087fd": {
                    "calculate_result": 1,
                    "calculate_return_value": 2,
                    "clear_screen": 1,
                    "do_nothing": 1,
                    "dummy_function": 1,
                    "get_default_value": 3,
                    "get_return_value": 2,
                    "get_value": 1,
                    "get_zero": 1,
                    "get_zero_value": 3,
                    "initialize": 12,
                    "initialize_data": 1,
                    "initialize_program": 1,
                    "zero_return_function": 1
                },
                "return": {
                    "result": 2,
                    "success": 1
                },
                "undefined8": {
                    "void": 6
                }
            },
            "called": [],
            "calling": [
                "FUN_0011a250"
            ],
            "code": "\nvoid initialize_program_001087fd(void)\n\n{\n  result 0;\n}\n\n",
            "current_name": "initialize_program_001087fd",
            "entrypoint": "0x001087fd",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001087fd": "initialize_program_001087fd",
                "return": "result",
                "undefined8": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00108800": {
            "additional_data": {
                "FUN_00108800": {
                    "calculate_hash": 2,
                    "hash_input_string": 1,
                    "hash_string": 28
                },
                "hv": {
                    "hash_value": 1
                },
                "param_1": {
                    "hash_input": 1,
                    "hash_param": 1,
                    "input": 1,
                    "input_string": 16,
                    "param": 1,
                    "string": 3,
                    "string_ptr": 3,
                    "string_to_hash": 1
                }
            },
            "called": [
                "htab_hash_string"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nvoid hash_input_string_00108800(undefined8 *input_string)\n\n{\n  htab_hash_string(*input_string);\n  return;\n}\n\n",
            "current_name": "hash_input_string_00108800",
            "entrypoint": "0x00108800",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108800": "hash_input_string_00108800",
                "param_1": "input_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00108808": {
            "additional_data": {
                "FUN_00108808": {
                    "find_and_display_missing_section": 1,
                    "find_and_print_section": 10,
                    "find_and_print_section_not_found": 1,
                    "find_and_report_not_found_section": 1,
                    "find_missing_section": 14,
                    "find_section_and_call_function": 1,
                    "find_section_and_print": 1,
                    "find_section_and_print_message": 1,
                    "print_section_not_found_error": 1
                },
                "FUN_00119dd0": {
                    "print_error_message": 1,
                    "print_message": 1,
                    "print_section_not_found": 1
                },
                "dcgettext": {
                    "get_localized_message": 1,
                    "get_text_from_library": 1
                },
                "uVar1": {
                    "section": 1,
                    "section_address": 17,
                    "section_name": 3,
                    "section_name_ptr": 1,
                    "section_pointer": 7,
                    "section_ptr": 1
                },
                "uVar2": {
                    "error_message": 19,
                    "error_message_ptr": 1,
                    "error_msg": 1,
                    "error_string": 1,
                    "missing_section_error_message": 1,
                    "section_error_message": 1,
                    "section_name": 1,
                    "section_not_found_error": 1,
                    "section_not_found_message": 1,
                    "section_not_found_msg": 1,
                    "section_not_found_str": 1,
                    "section_not_found_text": 1
                },
                "unaff_RBP": {
                    "base_address": 4,
                    "base_pointer": 16,
                    "rbase": 1,
                    "stack_base_pointer": 1,
                    "stack_frame_base": 1,
                    "stack_pointer": 3
                }
            },
            "called": [
                "FUN_00119dd0",
                "dcgettext"
            ],
            "calling": [
                "FUN_0011a2e0"
            ],
            "code": "\nvoid find_and_display_missing_section_00108808(void)\n\n{\n  undefined8 section_address;\n  undefined8 error_message;\n  long base_pointer;\n  \n  section_address = *(undefined8 *)(base_pointer + 0x20);\n  error_message = dcgettext(0,\"Section %s not found\",5);\n                    \n  FUN_00119dd0(error_message,section_address);\n}\n\n",
            "current_name": "find_and_display_missing_section_00108808",
            "entrypoint": "0x00108808",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108808": "find_and_display_missing_section_00108808",
                "dcgettext": "get_text_from_library",
                "uVar1": "section_address",
                "uVar2": "error_message",
                "unaff_RBP": "base_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010882c": {
            "additional_data": {
                "FUN_0010882c": {
                    "handle_time_setting_error": 1,
                    "print_cannot_set_time_error": 1,
                    "print_cannot_set_time_error_message": 1,
                    "print_error_message": 5,
                    "print_set_time_error": 1,
                    "print_time_error": 1,
                    "print_time_error_message": 1,
                    "set_time_error": 8,
                    "set_time_error_handler": 2,
                    "set_time_error_handling": 5,
                    "set_time_error_message": 5
                },
                "__errno_location": {
                    "get_errno_location": 1,
                    "get_error_number_location": 1,
                    "get_error_number_pointer": 1
                },
                "__errnum": {
                    "error_number": 2
                },
                "dcgettext": {
                    "get_error_message": 1,
                    "get_localized_message": 1,
                    "get_message": 1,
                    "get_translated_error_message": 1,
                    "translate_error_message": 4
                },
                "param_1": {
                    "error_string": 1
                },
                "piVar1": {
                    "errno_location": 5,
                    "errno_location_ptr": 1,
                    "errno_ptr": 4,
                    "errno_value": 1,
                    "errnum_ptr": 1,
                    "error_code": 3,
                    "error_code_pointer": 1,
                    "error_location": 1,
                    "error_message": 1,
                    "error_number": 5,
                    "error_number_pointer": 1,
                    "error_number_ptr": 2,
                    "error_pointer": 1,
                    "error_ptr": 1
                },
                "strerror": {
                    "get_error_msg": 1,
                    "get_error_string": 8
                },
                "uVar2": {
                    "err_msg": 1,
                    "error_message": 10,
                    "error_message_pointer": 1,
                    "error_msg": 2,
                    "error_string": 4,
                    "error_text_ptr": 1,
                    "i18n_msg": 1,
                    "localized_error_message": 1,
                    "time_error_message": 1,
                    "translated_error_message": 5,
                    "translated_error_msg": 1,
                    "translated_message": 1
                }
            },
            "called": [
                "dcgettext",
                "__errno_location",
                "FUN_00119ed0",
                "strerror"
            ],
            "calling": [
                "FUN_0011a350"
            ],
            "code": "\nvoid print_cannot_set_time_error_message_0010882c(void)\n\n{\n  int *error_number;\n  undefined8 error_message;\n  \n  error_number = __errno_location();\n  strerror(*error_number);\n  error_message = dcgettext(0,\"%s: cannot set time: %s\",5);\n  FUN_00119ed0(error_message);\n  return;\n}\n\n",
            "current_name": "print_cannot_set_time_error_message_0010882c",
            "entrypoint": "0x0010882c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010882c": "print_cannot_set_time_error_message_0010882c",
                "__errno_location": "get_error_number_pointer",
                "dcgettext": "translate_error_message",
                "piVar1": "error_number",
                "strerror": "get_error_string",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00108863": {
            "additional_data": {
                "DAT_00127720": {
                    "pointer_array_start": 1
                },
                "DAT_001278a0": {
                    "pointer_array_end": 1
                },
                "FUN_00108863": {
                    "clean_up_memory": 1,
                    "cleanup": 1,
                    "cleanup_memory": 1,
                    "cleanup_resources": 1,
                    "clear_memory": 13,
                    "deallocate_memory": 2,
                    "free_and_reset_data": 1,
                    "free_memory": 4,
                    "free_memory_and_reset_pointers": 1,
                    "free_memory_block": 1,
                    "free_memory_blocks": 4,
                    "reset_memory": 1
                },
                "__ptr": {
                    "ptr_to_free": 1
                },
                "puVar1": {
                    "array_pointer": 3,
                    "block_pointer": 1,
                    "block_ptr": 1,
                    "current_block": 10,
                    "current_block_ptr": 1,
                    "current_entry": 1,
                    "current_pointer": 7,
                    "current_ptr": 1,
                    "data_pointer": 4,
                    "pointer": 1,
                    "pointer_array": 1
                },
                "puVar2": {
                    "next_array_pointer": 3,
                    "next_block": 10,
                    "next_block_pointer": 1,
                    "next_block_ptr": 2,
                    "next_data_pointer": 4,
                    "next_entry": 1,
                    "next_pointer": 8,
                    "next_pointer_array": 1,
                    "next_ptr": 1
                }
            },
            "called": [
                "free"
            ],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\nvoid clear_memory_00108863(void)\n\n{\n  undefined4 *current_block;\n  undefined4 *next_block;\n  \n  current_block = (undefined4 *)&DAT_00127720;\n  do {\n    next_block = current_block + 6;\n    free(*(void **)(current_block + 4));\n    *(undefined8 *)(current_block + 4) = 0;\n    current_block = next_block;\n  } while (next_block != &DAT_001278a0);\n  DAT_001278a0 = 0;\n  return;\n}\n\n",
            "current_name": "clear_memory_00108863",
            "entrypoint": "0x00108863",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108863": "clear_memory_00108863",
                "puVar1": "current_block",
                "puVar2": "next_block"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00108898": {
            "additional_data": {
                "FUN_00108898": {
                    "compare_strings": 31
                },
                "__s1": {
                    "s1": 1
                },
                "__s2": {
                    "s2": 1
                },
                "auVar2": {
                    "comparison_result": 2,
                    "comparison_result_array": 1,
                    "result": 16,
                    "result_array": 1,
                    "result_buffer": 1,
                    "return_values": 1
                },
                "iVar1": {
                    "comparison_result": 27,
                    "string_comparison_result": 4
                },
                "in_RAX": {
                    "auxiliary_variable": 1,
                    "return_value": 8,
                    "some_value": 1,
                    "undefined_value": 5,
                    "unused": 2,
                    "unused_variable": 2
                },
                "param_1": {
                    "string1": 23,
                    "string1_ptr": 1,
                    "string_1": 7
                },
                "param_2": {
                    "string2": 23,
                    "string2_ptr": 1,
                    "string_2": 7
                }
            },
            "called": [
                "strcmp"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nundefined  [16] compare_strings_00108898(char **string1,char **string2)\n\n{\n  int comparison_result;\n  undefined8 return_value;\n  undefined result [16];\n  \n  comparison_result = strcmp(*string1,*string2);\n  result._1_7_ = 0;\n  result[0] = comparison_result == 0;\n  result._8_8_ = return_value;\n  return result;\n}\n\n",
            "current_name": "compare_strings_00108898",
            "entrypoint": "0x00108898",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108898": "compare_strings_00108898",
                "auVar2": "result",
                "iVar1": "comparison_result",
                "in_RAX": "return_value",
                "param_1": "string1",
                "param_2": "string2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001088ae": {
            "additional_data": {
                "FUN_001088ae": {
                    "modify_data_and_return": 1,
                    "update_data": 14,
                    "update_data_and_return_count": 1,
                    "update_data_and_return_index": 1,
                    "update_data_entry": 14
                },
                "free": {
                    "release_memory": 2
                },
                "iVar1": {
                    "current_index": 1,
                    "entry_index": 1,
                    "index": 2,
                    "new_count": 1,
                    "new_data_index": 1,
                    "new_entry_index": 1,
                    "new_index": 14,
                    "next_index": 2,
                    "updated_count": 1,
                    "updated_index": 5,
                    "updated_value": 1
                },
                "lVar2": {
                    "current_entry": 2,
                    "current_index": 8,
                    "current_value": 1,
                    "data_index": 2,
                    "entry_index": 2,
                    "index": 13,
                    "last_index": 1,
                    "old_index": 2
                },
                "lVar3": {
                    "array_index": 1,
                    "entry_index": 2,
                    "entry_offset": 6,
                    "offset": 21,
                    "updated_index": 1
                },
                "param_1": {
                    "data_entry_id": 1,
                    "entry_field1": 1,
                    "entry_id": 1,
                    "entry_type": 1,
                    "new_param1": 1,
                    "new_value1": 22,
                    "value1": 4
                },
                "param_2": {
                    "data_type": 1,
                    "entry_field2": 1,
                    "entry_status": 1,
                    "entry_type": 1,
                    "new_param2": 1,
                    "new_value2": 22,
                    "value2": 4
                },
                "param_3": {
                    "entry_data": 1,
                    "entry_field3": 1,
                    "entry_value1": 1,
                    "new_data": 1,
                    "new_data1": 3,
                    "new_param3": 1,
                    "new_value3": 18,
                    "value3": 5
                },
                "param_4": {
                    "entry_description": 1,
                    "entry_field4": 1,
                    "entry_value2": 1,
                    "new_data2": 3,
                    "new_param4": 1,
                    "new_string": 3,
                    "new_value4": 15,
                    "str": 1,
                    "str_param": 1,
                    "string_param": 1,
                    "updated_string": 1,
                    "value4": 2
                },
                "uVar4": {
                    "copied_description": 1,
                    "copied_string": 1,
                    "copied_value": 1,
                    "duplicate_str": 3,
                    "duplicated_data": 3,
                    "duplicated_str": 6,
                    "duplicated_string": 11,
                    "duplicated_value": 3,
                    "new_entry": 1,
                    "new_string_copy": 1
                },
                "xstrdup": {
                    "duplicate_string": 2
                }
            },
            "called": [
                "xstrdup",
                "free"
            ],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\nulong update_data_entry_001088ae(undefined4 new_value1,undefined4 new_value2,undefined8 new_value3,undefined8 new_value4)\n\n{\n  int new_index;\n  long index;\n  long offset;\n  undefined8 duplicated_string;\n  \n  index = (long)DAT_001278a0;\n  offset = index * 0x18;\n  free((void *)(&DAT_00127730)[index * 3]);\n  *(undefined4 *)(&DAT_00127720 + offset) = new_value1;\n  *(undefined4 *)(&DAT_00127724 + offset) = new_value2;\n  *(undefined8 *)(&DAT_00127728 + offset) = new_value3;\n  duplicated_string = xstrdup(new_value4);\n  (&DAT_00127730)[index * 3] = duplicated_string;\n  new_index = DAT_001278a0 + 1;\n  DAT_001278a0 = new_index % 0x10;\n  return (long)new_index / 0x10 & 0xffffffff;\n}\n\n",
            "current_name": "update_data_entry_001088ae",
            "entrypoint": "0x001088ae",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001088ae": "update_data_entry_001088ae",
                "free": "release_memory",
                "iVar1": "new_index",
                "lVar2": "index",
                "lVar3": "offset",
                "param_1": "new_value1",
                "param_2": "new_value2",
                "param_3": "new_value3",
                "param_4": "new_value4",
                "uVar4": "duplicated_string",
                "xstrdup": "duplicate_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00108916": {
            "additional_data": {
                "FUN_00104a35": {
                    "print_additional_help": 1,
                    "print_additional_info": 9,
                    "print_additional_options": 1,
                    "print_custom_message": 1,
                    "print_debug_info": 1,
                    "print_extra_info": 1,
                    "print_footer": 1
                },
                "FUN_00108916": {
                    "copy_file": 1,
                    "display_usage_and_exit": 1,
                    "print_binary_file_options": 2,
                    "print_file_usage": 4,
                    "print_help": 1,
                    "print_usage": 16,
                    "print_usage_and_exit": 4,
                    "print_usage_help": 1,
                    "print_usage_message": 1
                },
                "dcgettext": {
                    "get_localized_message": 2,
                    "get_localized_string": 2,
                    "get_message": 1,
                    "get_translated_message": 4,
                    "get_translated_string": 1,
                    "get_translated_text": 4,
                    "translate_text": 1
                },
                "exit": {
                    "exit_program": 4,
                    "terminate_program": 10
                },
                "fprintf": {
                    "print_formatted_message": 1,
                    "print_formatted_output": 1,
                    "print_formatted_text": 1,
                    "print_message": 4,
                    "print_text": 1,
                    "print_to_file": 1,
                    "print_to_output": 2,
                    "write_output": 1,
                    "write_to_file": 2,
                    "write_to_stream": 1
                },
                "param_1": {
                    "file": 6,
                    "file_pointer": 2,
                    "file_stream": 1,
                    "output": 1,
                    "output_file": 19,
                    "output_file_ptr": 1,
                    "output_stream": 1
                },
                "param_2": {
                    "error_code": 2,
                    "exit_code": 14,
                    "exit_status": 10,
                    "status": 3,
                    "status_code": 2
                },
                "pcVar2": {
                    "format_string": 1,
                    "localized_string": 4,
                    "message": 19,
                    "msg_ptr": 1,
                    "print_string": 1,
                    "text": 4,
                    "text_to_print": 1
                },
                "uVar1": {
                    "bug_report_url": 1,
                    "debug_string": 1,
                    "debug_text": 1,
                    "debugger": 1,
                    "default_message": 3,
                    "description": 1,
                    "main_string": 1,
                    "message": 1,
                    "source_url": 1,
                    "usage_message": 6,
                    "usage_msg": 1,
                    "usage_str": 1,
                    "usage_string": 10,
                    "version": 1,
                    "version_string": 1
                }
            },
            "called": [
                "dcgettext",
                "fprintf",
                "exit",
                "FUN_00104a35"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nvoid print_usage_and_exit_00108916(FILE *output_file,int exit_code)\n\n{\n  undefined8 usage_string;\n  char *message;\n  \n  usage_string = DAT_001275e0;\n  message = (char *)dcgettext(0,\"Usage: %s [option(s)] in-file [out-file]\\n\",5);\n  fprintf(output_file,message,usage_string);\n  message = (char *)dcgettext(0,\" Copies a binary file, possibly transforming it in the process\\n\",5)\n  ;\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\" The options are:\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \"  -I --input-target <bfdname>      Assume input file is in format <bfdname>\\n  -O --output-target <bfdname>     Create an output file in format <bfdname>\\n  -B --binary-architecture <arch>  Set output arch, when input is arch-less\\n  -F --target <bfdname>            Set both input and output format to <bfdname>\\n     --debugging                   Convert debugging information, if possible\\n  -p --preserve-dates              Copy modified/access timestamps to the output\\n\"\n                             ,5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \"  -D --enable-deterministic-archives\\n                                   Produce deterministic output when stripping archives (default)\\n  -U --disable-deterministic-archives\\n                                   Disable -D behavior\\n\"\n                             ,5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \"  -j --only-section <name>         Only copy section <name> into the output\\n     --add-gnu-debuglink=<file>    Add section .gnu_debuglink linking to <file>\\n  -R --remove-section <name>       Remove section <name> from the output\\n     --remove-relocations <name>   Remove relocations from section <name>\\n  -S --strip-all                   Remove all symbol and relocation information\\n  -g --strip-debug                 Remove all debugging symbols & sections\\n     --strip-dwo                   Remove all DWO sections\\n     --strip-unneeded              Remove all symbols not needed by relocations\\n  -N --strip-symbol <name>         Do not copy symbol <name>\\n     --strip-unneeded-symbol <name>\\n                                   Do not copy symbol <name> unless needed by\\n                                     relocations\\n     --only-keep-debug             Strip everything but the debug information\\n     --extract-dwo                 Copy only DWO sections\\n     --extract-symbol              Remove section contents but keep symbols\\n     --keep-section <name>         Do not strip section <name>\\n  -K --keep-symbol <name>          Do not strip symbol <name>\\n     --keep-section-symbols        Do not strip section symbols\\n     --keep-file-symbols           Do not strip file symbol(s)\\n     --localize-hidden             Turn all ELF hidden symbols into locals\\n  -L --localize-symbol <name>      Force symbol <name> to be marked as a local\\n     --globalize-symbol <name>     Force symbol <name> to be marked as a global\\n  -G --keep-global-symbol <name>   Localize all symbols except <name>\\n  -W --weaken-symbol <name>        Force symbol <name> to be marked as a weak\\n     --weaken                      Force all global symbols to be marked as weak\\n  -w --wildcard                    Permit wildcard in symbol comparison\\n  -x --discard-all                 Remove all non-global symbols\\n  -X --discard-locals              Remove any compiler-generated symbols\\n  -i --interleave[=<number>]       Only copy N out of every <number> bytes\\n     --interlea...\" /* TRUNCATED STRING LITERAL */\n                             ,5);\n  fprintf(output_file,message);\n  FUN_00104a35(DAT_001275e0,output_file);\n  if (exit_code == 0) {\n    message = (char *)dcgettext(0,\"Report bugs to %s\\n\",5);\n    fprintf(output_file,message,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  terminate_program(exit_code);\n}\n\n",
            "current_name": "print_usage_and_exit_00108916",
            "entrypoint": "0x00108916",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108916": "print_usage_and_exit_00108916",
                "dcgettext": "get_translated_text",
                "exit": "terminate_program",
                "fprintf": "print_message",
                "param_1": "output_file",
                "param_2": "exit_code",
                "pcVar2": "message",
                "uVar1": "usage_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00108a2a": {
            "additional_data": {
                "FUN_00104a35": {
                    "display_info": 1,
                    "print_additional_info": 7,
                    "print_object_files_modified": 2,
                    "print_program_info": 1,
                    "print_version": 2,
                    "print_version_info": 1
                },
                "FUN_00108a2a": {
                    "print_usage": 6,
                    "print_usage_and_exit": 24,
                    "print_usage_info": 1
                },
                "__format": {
                    "format": 1
                },
                "__status": {
                    "status": 1
                },
                "__stream": {
                    "stream": 1
                },
                "dcgettext": {
                    "get_localized_message": 2,
                    "get_message": 3,
                    "get_translated_message": 3,
                    "get_translated_string": 1,
                    "get_translated_text": 2,
                    "translate_text": 2
                },
                "exit": {
                    "exit_program": 6,
                    "terminate_execution": 1,
                    "terminate_program": 6
                },
                "fprintf": {
                    "print_formatted_message": 4,
                    "print_formatted_output": 2,
                    "print_formatted_text": 1,
                    "print_message": 1,
                    "print_text": 2,
                    "write_to_file": 2,
                    "write_to_output_file": 1
                },
                "param_1": {
                    "file": 5,
                    "file_pointer": 2,
                    "file_ptr": 3,
                    "output_file": 21
                },
                "param_2": {
                    "error_code": 2,
                    "exit_code": 21,
                    "exit_status": 7,
                    "status": 1
                },
                "pcVar2": {
                    "localized_message": 2,
                    "localized_string": 1,
                    "localized_text": 1,
                    "message": 23,
                    "text": 3,
                    "text_string": 1
                },
                "uVar1": {
                    "default_message": 1,
                    "default_version": 1,
                    "program_name": 1,
                    "usage_message": 1,
                    "usage_string": 2,
                    "version": 9,
                    "version_info": 2,
                    "version_number": 13,
                    "version_string": 1
                }
            },
            "called": [
                "dcgettext",
                "fprintf",
                "FUN_00104a35",
                "exit"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nvoid print_usage_and_exit_00108a2a(FILE *output_file,int exit_code)\n\n{\n  undefined8 version_number;\n  char *message;\n  \n  version_number = DAT_001275e0;\n  message = (char *)dcgettext(0,\"Usage: %s <option(s)> in-file(s)\\n\",5);\n  fprintf(output_file,message,version_number);\n  message = (char *)dcgettext(0,\" Removes symbols and sections from files\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\" The options are:\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \"  -I --input-target=<bfdname>      Assume input file is in format <bfdname>\\n  -O --output-target=<bfdname>     Create an output file in format <bfdname>\\n  -F --target=<bfdname>            Set both input and output format to <bfdname>\\n  -p --preserve-dates              Copy modified/access timestamps to the output\\n\"\n                             ,5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \"  -D --enable-deterministic-archives\\n                                   Produce deterministic output when stripping archives (default)\\n  -U --disable-deterministic-archives\\n                                   Disable -D behavior\\n\"\n                             ,5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \"  -R --remove-section=<name>       Also remove section <name> from the output\\n     --remove-relocations <name>   Remove relocations from section <name>\\n  -s --strip-all                   Remove all symbol and relocation information\\n  -g -S -d --strip-debug           Remove all debugging symbols & sections\\n     --strip-dwo                   Remove all DWO sections\\n     --strip-unneeded              Remove all symbols not needed by relocations\\n     --only-keep-debug             Strip everything but the debug information\\n  -M  --merge-notes                Remove redundant entries in note sections (default)\\n      --no-merge-notes             Do not attempt to remove redundant notes\\n  -N --strip-symbol=<name>         Do not copy symbol <name>\\n     --keep-section=<name>         Do not strip section <name>\\n  -K --keep-symbol=<name>          Do not strip symbol <name>\\n     --keep-section-symbols        Do not strip section symbols\\n     --keep-file-symbols           Do not strip file symbol(s)\\n  -w --wildcard                    Permit wildcard in symbol comparison\\n  -x --discard-all                 Remove all non-global symbols\\n  -X --discard-locals              Remove any compiler-generated symbols\\n  -v --verbose                     List all object files modified\\n  -V --version                     Display this program\\'s version number\\n  -h --help                        Display this output\\n     --info                        List object formats & architectures supported\\n  -o <file>                        Place stripped output into <file>\\n\"\n                             ,5);\n  fprintf(output_file,message);\n  FUN_00104a35(DAT_001275e0,output_file);\n  if (exit_code == 0) {\n    message = (char *)dcgettext(0,\"Report bugs to %s\\n\",5);\n    fprintf(output_file,message,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  exit_program(exit_code);\n}\n\n",
            "current_name": "print_usage_and_exit_00108a2a",
            "entrypoint": "0x00108a2a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108a2a": "print_usage_and_exit_00108a2a",
                "dcgettext": "get_message",
                "exit": "exit_program",
                "fprintf": "print_formatted_message",
                "param_1": "output_file",
                "param_2": "exit_code",
                "pcVar2": "message",
                "uVar1": "version_number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00108b3e": {
            "additional_data": {
                "DAT_00127720": {
                    "stab_entries_array": 1
                },
                "DAT_00127724": {
                    "stab_entries_desc": 1
                },
                "DAT_00127728": {
                    "stab_entries_values": 1
                },
                "DAT_001278a0": {
                    "stab_entries_count": 1
                },
                "FUN_00108b3e": {
                    "display_stab_entries": 1,
                    "print_last_stab_entries": 4,
                    "print_last_stabs_entries": 18,
                    "print_stab_entries": 2,
                    "print_stabs_entries": 2
                },
                "__format": {
                    "error_message": 2,
                    "format": 2,
                    "format_message": 1,
                    "format_str": 4,
                    "format_string": 21,
                    "message": 1
                },
                "_c": {
                    "c": 1
                },
                "_stderr": {
                    "error_output": 2,
                    "error_stream": 4,
                    "file_stream": 1,
                    "stderr": 1
                },
                "bfd_get_stab_name": {
                    "get_bfd_stab_name": 1,
                    "get_stab_name": 7
                },
                "dcgettext": {
                    "get_error_message": 1,
                    "get_localized_message": 1,
                    "get_text": 1,
                    "get_translated_message": 1,
                    "get_translated_string": 1,
                    "get_translated_text": 2,
                    "translate": 1
                },
                "fprintf": {
                    "print_formatted": 1,
                    "print_formatted_output": 2,
                    "print_to_stream": 3,
                    "write_formatted": 1,
                    "write_formatted_text_to_file": 1
                },
                "fputc": {
                    "put_character": 3,
                    "write_char": 1,
                    "write_char_to_file": 2,
                    "write_char_to_stream": 1,
                    "write_character": 1
                },
                "fwrite": {
                    "write_to_file": 5,
                    "write_to_stream": 3
                },
                "iVar5": {
                    "count": 8,
                    "counter": 7,
                    "current_index": 1,
                    "i": 1,
                    "index": 5,
                    "iteration": 2,
                    "iteration_count": 2,
                    "loop_counter": 2,
                    "loop_index": 2,
                    "loop_var": 1
                },
                "lVar1": {
                    "name": 1,
                    "name_ptr": 1,
                    "stab_name": 28,
                    "symbol_name": 1
                },
                "lVar2": {
                    "count": 1,
                    "counter": 1,
                    "current_index": 1,
                    "entry_index": 1,
                    "i": 4,
                    "i_var5": 1,
                    "index": 18,
                    "iter_index": 1,
                    "iteration_index": 2,
                    "loop_index": 1
                },
                "lVar3": {
                    "entry_offset": 2,
                    "offset": 25,
                    "stab_entry_offset": 2,
                    "stab_offset": 2
                },
                "param_1": {
                    "entry1": 1,
                    "input_param": 1,
                    "param": 2,
                    "param1": 8,
                    "param_1": 18,
                    "param_format": 1
                },
                "param_2": {
                    "entry2": 1,
                    "format": 1,
                    "output_param": 1,
                    "param": 1,
                    "param2": 8,
                    "param_2": 18,
                    "param_stream": 1
                },
                "param_3": {
                    "entry3": 1,
                    "error_message": 1,
                    "param3": 8,
                    "param_3": 17,
                    "param_return": 1,
                    "result": 1,
                    "result_param": 1,
                    "return_value": 1
                },
                "piVar4": {
                    "current_entry": 2,
                    "current_stab_entry": 1,
                    "entry_ptr": 3,
                    "pointer": 1,
                    "ptr_to_stab": 1,
                    "stab_code_ptr": 1,
                    "stab_entry": 9,
                    "stab_info": 2,
                    "stab_pointer": 2,
                    "stab_ptr": 3,
                    "stab_type": 3,
                    "symbol": 1,
                    "symbol_type": 2
                }
            },
            "called": [
                "dcgettext",
                "fwrite",
                "fputc",
                "bfd_get_stab_name",
                "fprintf"
            ],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\n\n\nundefined8 print_last_stabs_entries_00108b3e(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  char *format_string;\n  long stab_name;\n  long index;\n  long offset;\n  int *stab_entry;\n  int count;\n  \n  format_string = (char *)dcgettext(0,\"Last stabs entries before error:\\n\",5);\n  fprintf(error_stream,format_string);\n  fwrite(\"n_type n_desc n_value  string\\n\",1,0x1e,error_stream);\n  count = DAT_001278a0;\n  do {\n    index = (long)count;\n    offset = index * 0x18;\n    stab_entry = (int *)(&DAT_00127720 + offset);\n    if ((&DAT_00127730)[index * 3] != 0) {\n      stab_name = bfd_get_stab_name(*stab_entry);\n      if (stab_name == 0) {\n        if (*stab_entry == 0) {\n          fwrite(\"HdrSym\",1,6,error_stream);\n        }\n        else {\n          fprintf(error_stream,\"%-6d\");\n        }\n      }\n      else {\n        fprintf(error_stream,\"%-6s\",stab_name);\n      }\n      fprintf(error_stream,\" %-6d \",(ulong)*(uint *)(&DAT_00127724 + offset));\n      fprintf(error_stream,\"%08lx\",*(undefined8 *)(&DAT_00127728 + offset));\n      if (*stab_entry != 0) {\n        fprintf(error_stream,\" %s\",(&DAT_00127730)[index * 3]);\n      }\n      fputc(10,error_stream);\n    }\n    count = (count + 1) % 0x10;\n  } while (DAT_001278a0 != count);\n  return param_3;\n}\n\n",
            "current_name": "print_last_stabs_entries_00108b3e",
            "entrypoint": "0x00108b3e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108b3e": "print_last_stabs_entries_00108b3e",
                "__format": "format_string",
                "_stderr": "error_stream",
                "bfd_get_stab_name": "get_stab_name",
                "dcgettext": "get_translated_text",
                "fprintf": "print_to_stream",
                "fputc": "put_character",
                "fwrite": "write_to_file",
                "iVar5": "count",
                "lVar1": "stab_name",
                "lVar2": "index",
                "lVar3": "offset",
                "piVar4": "stab_entry"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00108c86": {
            "additional_data": {
                "FUN_00108c86": {
                    "decode_and_extract_info": 2,
                    "decode_binary_data": 1,
                    "decode_binary_function": 1,
                    "decode_function": 1,
                    "extract_and_modify_data": 1,
                    "extract_binary_info": 6,
                    "extract_code_information": 1,
                    "extract_component_info": 1,
                    "extract_driver_version": 1,
                    "extract_signature": 1,
                    "extract_string_and_set_value": 1,
                    "extract_string_from_binary": 1,
                    "extract_version": 1,
                    "extract_version_info": 1,
                    "parse_and_process_data": 1,
                    "parse_config": 1,
                    "parse_driver_info": 2,
                    "parse_driver_name": 1,
                    "parse_driver_type": 1,
                    "parse_function_signature": 1
                },
                "FUN_00113fb0": {
                    "check_string": 1
                },
                "__s": {
                    "binary_data": 1,
                    "binary_string": 1,
                    "config_string": 1,
                    "current_string": 2,
                    "data_string": 1,
                    "driver_name": 4,
                    "driver_str": 1,
                    "input_string": 5,
                    "original_string": 1,
                    "signature": 2,
                    "source_string": 1,
                    "string": 3,
                    "string_1": 1,
                    "string_ptr": 4,
                    "substring": 2,
                    "version_string": 1
                },
                "__s1": {
                    "arch": 3,
                    "arch_name": 1,
                    "arch_str": 1,
                    "arch_string": 3,
                    "arch_type": 1,
                    "architecture": 10,
                    "architecture_string": 1,
                    "data_string1": 1,
                    "platform": 1,
                    "platform_string": 2,
                    "prefix_ptr": 1,
                    "string_2": 1,
                    "string_pointer": 1,
                    "sub_string_ptr": 1,
                    "substring": 1,
                    "substring2": 1,
                    "substring_ptr": 1
                },
                "__s2": {
                    "comparison_string": 1
                },
                "bVar8": {
                    "boolean": 1,
                    "byte_flag": 1,
                    "byte_value": 7,
                    "byte_var": 1,
                    "count": 1,
                    "flag": 10,
                    "index": 1,
                    "is_negative": 1,
                    "is_null": 2,
                    "is_prefix": 1,
                    "is_uppercase": 1,
                    "search_result": 2,
                    "should_reverse": 1,
                    "skip_bytes": 1
                },
                "cVar1": {
                    "char_check": 1,
                    "char_found": 1,
                    "char_result": 2,
                    "check_flag": 1,
                    "check_result": 4,
                    "first_char": 1,
                    "first_check": 1,
                    "first_match": 1,
                    "found_match": 1,
                    "is_bsdrv": 2,
                    "is_match": 2,
                    "is_matched": 1,
                    "is_valid": 1,
                    "match_found": 1,
                    "match_result": 1,
                    "result": 6,
                    "result_char": 1
                },
                "iVar2": {
                    "cmp_result": 1,
                    "compare_result": 1,
                    "comparison_result": 26,
                    "string_comparison_result": 1
                },
                "lVar5": {
                    "address": 1,
                    "address_of_string": 1,
                    "address_offset": 4,
                    "base_address": 1,
                    "config_offset": 1,
                    "current_index": 1,
                    "current_offset": 1,
                    "data_offset": 2,
                    "data_value": 2,
                    "input_data": 1,
                    "input_value": 1,
                    "offset": 11,
                    "original_length": 1,
                    "ptr": 1,
                    "ptr_value": 1,
                    "temp": 1
                },
                "param_1": {
                    "binary_address": 2,
                    "binary_info": 3,
                    "binary_pointer": 1,
                    "binary_ptr": 1,
                    "code_ptr": 1,
                    "component_info_ptr": 1,
                    "config_data": 1,
                    "data_ptr": 5,
                    "driver_info": 3,
                    "driver_ptr": 2,
                    "input": 1,
                    "input_data": 4,
                    "input_ptr": 4,
                    "signature_address": 1,
                    "signature_ptr": 1
                },
                "puVar4": {
                    "allocated_buffer": 1,
                    "allocated_memory": 3,
                    "allocated_string_ptr": 1,
                    "buffer": 1,
                    "component_name_ptr": 1,
                    "config_buffer": 1,
                    "decoded_string": 2,
                    "driver_version": 1,
                    "dynamic_memory": 1,
                    "encoded_info": 1,
                    "extracted_info": 1,
                    "extracted_signature": 1,
                    "extracted_string": 2,
                    "new_data": 1,
                    "new_signature": 1,
                    "new_string": 4,
                    "new_string_ptr": 3,
                    "output_ptr": 1,
                    "parsed_info_ptr": 1,
                    "str_ptr": 1,
                    "version_info": 1,
                    "version_ptr": 1
                },
                "puVar6": {
                    "allocated_memory_offset": 1,
                    "allocated_memory_ptr": 1,
                    "allocated_string_ptr_iter": 1,
                    "buffer_iterator": 1,
                    "buffer_ptr": 1,
                    "component_name_dest_ptr": 1,
                    "config_buffer_ptr": 1,
                    "copy_pointer": 1,
                    "current_char": 2,
                    "current_position": 1,
                    "decoded_string_ptr": 2,
                    "dynamic_memory_iterator": 1,
                    "encoded_info_ptr": 1,
                    "extracted_string_ptr": 1,
                    "info_ptr": 1,
                    "new_data_ptr": 1,
                    "new_signature_ptr": 1,
                    "new_string_index": 1,
                    "new_string_pointer": 1,
                    "new_string_ptr": 2,
                    "new_string_ptr_2": 1,
                    "new_string_ptr_iter": 1,
                    "new_string_ptr_iterator": 1,
                    "output_ptr_copy": 1,
                    "parsed_info_ptr_dest": 1,
                    "ptr": 1,
                    "string_copy": 1,
                    "temp_ptr": 1
                },
                "sVar3": {
                    "config_length": 1,
                    "input_length": 1,
                    "length": 2,
                    "name_length": 2,
                    "signature_length": 1,
                    "str_length": 1,
                    "string_length": 22,
                    "substring_length": 1
                },
                "strcmp": {
                    "compare_strings": 3
                },
                "strlen": {
                    "get_string_length": 3
                },
                "uVar7": {
                    "result": 5,
                    "return_val": 1,
                    "return_value": 25
                },
                "xmalloc": {
                    "allocate_memory": 2
                }
            },
            "called": [
                "strlen",
                "FUN_00113fb0",
                "xmalloc",
                "strcmp"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nundefined8 extract_binary_info_00108c86(long *data_ptr)\n\n{\n  char result;\n  int comparison_result;\n  size_t string_length;\n  undefined2 *new_string;\n  long offset;\n  char *input_string;\n  char *architecture;\n  undefined2 *current_char;\n  undefined8 return_value;\n  byte flag;\n  \n  flag = 0;\n  offset = *data_ptr;\n  input_string = (char *)(offset + 4);\n  result = FUN_00113fb0(input_string,&DAT_0011b73b);\n  if (result == '\\0') {\n    result = FUN_00113fb0(input_string,\"bsdrv-\");\n    if (result == '\\0') {\n      result = FUN_00113fb0(input_string,\"rtdrv-\");\n      if (result == '\\0') {\n        return 0xffffffff;\n      }\n      input_string = (char *)(offset + 6);\n      return_value = 0xc;\n    }\n    else {\n      input_string = (char *)(offset + 6);\n      return_value = 0xb;\n    }\n  }\n  else {\n    return_value = 10;\n  }\n  string_length = strlen(input_string);\n  new_string = (undefined2 *)xmalloc(string_length + 8);\n  architecture = input_string + 4;\n  current_char = new_string;\n  for (offset = string_length + 1; offset != 0; offset = offset + -1) {\n    *(char *)current_char = *input_string;\n    input_string = input_string + (ulong)flag * -2 + 1;\n    current_char = (undefined2 *)((long)current_char + (ulong)flag * -2 + 1);\n  }\n  *(undefined *)(new_string + 1) = 0x69;\n  *new_string = 0x6570;\n  comparison_result = strcmp(architecture,\"ia32\");\n  if (comparison_result == 0) {\n    *(undefined *)((long)new_string + 7) = 0x36;\n    *(undefined2 *)((long)new_string + 5) = 0x3833;\n  }\n  else {\n    comparison_result = strcmp(architecture,\"x86_64\");\n    if (comparison_result == 0) {\n      *(undefined *)((long)new_string + 7) = 0x2d;\n    }\n    else {\n      comparison_result = strcmp(architecture,\"aarch64\");\n      if (comparison_result == 0) {\n        *(undefined8 *)((long)new_string + 0xb) = 0x656c7474696c2d;\n      }\n    }\n  }\n  *data_ptr = (long)new_string;\n  return return_value;\n}\n\n",
            "current_name": "extract_binary_info_00108c86",
            "entrypoint": "0x00108c86",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108c86": "extract_binary_info_00108c86",
                "__s": "input_string",
                "__s1": "architecture",
                "bVar8": "flag",
                "cVar1": "result",
                "iVar2": "comparison_result",
                "lVar5": "offset",
                "param_1": "data_ptr",
                "puVar4": "new_string",
                "puVar6": "current_char",
                "sVar3": "string_length",
                "strcmp": "compare_strings",
                "strlen": "get_string_length",
                "uVar7": "return_value",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00108d9a": {
            "additional_data": {
                "FUN_00108d9a": {
                    "check_and_insert_symbol": 1,
                    "check_redefinition": 2,
                    "check_symbol_redefined": 4,
                    "check_symbol_redefinition": 20,
                    "check_symbol_redefinitions": 1,
                    "validate_and_add_symbol": 1,
                    "validate_and_store_symbol": 1,
                    "validate_symbol_redefinition": 1
                },
                "dcgettext": {
                    "get_error": 1,
                    "get_error_message": 7,
                    "get_formatted_message": 1,
                    "get_localized_error_message": 1,
                    "get_message": 1,
                    "retrieve_error_message": 1,
                    "retrieve_translation": 1
                },
                "htab_find": {
                    "find_entry": 1,
                    "find_hash": 1,
                    "find_htab_entry": 1,
                    "find_in_hash_table": 1,
                    "find_in_hashtable": 1,
                    "find_in_htab": 1,
                    "find_in_table": 4,
                    "find_symbol": 2,
                    "find_symbol_in_table": 1,
                    "lookup_symbol": 1
                },
                "htab_find_slot": {
                    "find_hash_slot": 1,
                    "find_htab_slot": 1,
                    "find_or_create_entry_slot": 1,
                    "find_or_create_symbol_slot": 1,
                    "find_slot_entry": 1,
                    "find_slot_in_hash_table": 1,
                    "find_slot_in_hashtable": 1,
                    "find_slot_in_htab": 1,
                    "find_slot_in_table": 5,
                    "find_symbol_slot": 1
                },
                "lVar3": {
                    "found": 1,
                    "found_symbol": 1,
                    "result": 1,
                    "result_code": 1,
                    "symbol": 1,
                    "symbol1_htab_result": 1,
                    "symbol_check_result": 1,
                    "symbol_count": 1,
                    "symbol_entry": 2,
                    "symbol_entry_address": 1,
                    "symbol_entry_count": 1,
                    "symbol_entry_found": 1,
                    "symbol_exist": 1,
                    "symbol_exists": 2,
                    "symbol_find_result": 2,
                    "symbol_found": 8,
                    "symbol_redefinition_check": 1,
                    "symbol_redefinition_result": 1,
                    "symbol_result": 1,
                    "symbol_search_result": 1,
                    "symbol_table_entry": 1
                },
                "param_1": {
                    "arg1": 1,
                    "error_code": 2,
                    "error_context": 1,
                    "error_message": 4,
                    "file_descriptor": 2,
                    "file_handle": 1,
                    "file_path": 1,
                    "filename": 1,
                    "input_file": 1,
                    "input_string": 1,
                    "msg": 1,
                    "output": 2,
                    "output_stream": 1,
                    "param": 5,
                    "param_1": 4,
                    "param_error_message": 1,
                    "result_ptr": 1,
                    "symbol_filename": 1
                },
                "param_2": {
                    "old_symbol": 1,
                    "original_symbol": 1,
                    "source_symbol": 2,
                    "symbol": 2,
                    "symbol1": 1,
                    "symbol_name": 14,
                    "symbol_name1": 9,
                    "symbol_name_1": 1
                },
                "param_3": {
                    "new_symbol": 2,
                    "symbol2": 1,
                    "symbol_name2": 9,
                    "symbol_name_2": 1,
                    "target": 1,
                    "target_name": 1,
                    "target_symbol": 15,
                    "target_symbol_name": 1
                },
                "param_4": {
                    "arg4": 1,
                    "input": 1,
                    "output": 1,
                    "param_4": 11,
                    "result": 11,
                    "return_value": 6
                },
                "pcVar2": {
                    "dup_source_symbol": 1,
                    "dup_symbol_name": 1,
                    "duplicate_string": 1,
                    "duplicate_symbol": 3,
                    "duplicate_symbol_name": 1,
                    "duplicated_symbol": 1,
                    "duplicated_symbol_name": 2,
                    "original_symbol_copy": 1,
                    "source_symbol_copy": 1,
                    "str1": 2,
                    "string_copy": 1,
                    "symbol": 1,
                    "symbol2_entry": 1,
                    "symbol_copy": 3,
                    "symbol_name": 1,
                    "symbol_name_copy": 8,
                    "symbol_ptr": 1,
                    "symbol_str": 1
                },
                "plVar5": {
                    "entry_slot": 1,
                    "found_slot": 1,
                    "htab_slot": 1,
                    "pointer_slot": 1,
                    "slot": 4,
                    "slot_address": 5,
                    "slot_entry": 1,
                    "slot_pointer": 3,
                    "slot_ptr": 7,
                    "symbol2_htab_result": 1,
                    "symbol_entry_location": 1,
                    "symbol_entry_slot": 1,
                    "symbol_slot": 3,
                    "symbols_slot": 1
                },
                "ppcVar1": {
                    "allocated_pointers": 1,
                    "string_pointers": 2,
                    "symbol1_entry": 1,
                    "symbol_array": 6,
                    "symbol_data": 1,
                    "symbol_entry": 3,
                    "symbol_info": 1,
                    "symbol_names": 5,
                    "symbol_pair": 6,
                    "symbol_pointers": 1,
                    "symbol_ptrs": 1,
                    "symbol_table": 1,
                    "symbol_target_array": 1,
                    "symbols_array": 1
                },
                "strdup": {
                    "duplicate_string": 12
                },
                "uVar4": {
                    "error_message": 21,
                    "error_msg": 2,
                    "error_string": 2,
                    "error_text": 1,
                    "localization_handle": 1,
                    "message": 1,
                    "translation": 3
                },
                "xmalloc": {
                    "allocate_memory": 14
                }
            },
            "called": [
                "FUN_00119dd0",
                "dcgettext",
                "htab_find_slot",
                "xmalloc",
                "htab_find",
                "strdup"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nundefined8 check_symbol_redefinition_00108d9a(undefined8 param,char *symbol_name,char *target_symbol,undefined8 result)\n\n{\n  char **symbol_pair;\n  char *symbol_name_copy;\n  long symbol_found;\n  undefined8 error_message;\n  long *slot_ptr;\n  \n  symbol_pair = (char **)xmalloc(0x10);\n  symbol_name_copy = strdup(symbol_name);\n  *symbol_pair = symbol_name_copy;\n  symbol_name_copy = strdup(target_symbol);\n  error_message = DAT_001278d0;\n  symbol_pair[1] = symbol_name_copy;\n  symbol_found = htab_find(error_message,symbol_pair);\n  if (symbol_found != 0) {\n    error_message = dcgettext(0,\"%s: Multiple redefinition of symbol \\\"%s\\\"\",5);\n                    \n    FUN_00119dd0(error_message,param,symbol_name);\n  }\n  symbol_found = htab_find(DAT_001278c8,target_symbol);\n  if (symbol_found != 0) {\n    error_message = dcgettext(0,\"%s: Symbol \\\"%s\\\" is target of more than one redefinition\",5);\n                    \n    FUN_00119dd0(error_message,param,target_symbol);\n  }\n  slot_ptr = (long *)htab_find_slot(DAT_001278d0,symbol_pair,1);\n  error_message = DAT_001278c8;\n  *slot_ptr = (long)symbol_pair;\n  symbol_name_copy = symbol_pair[1];\n  symbol_pair = (char **)htab_find_slot(error_message,symbol_name_copy,1);\n  *symbol_pair = symbol_name_copy;\n  return result;\n}\n\n",
            "current_name": "check_symbol_redefinition_00108d9a",
            "entrypoint": "0x00108d9a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108d9a": "check_symbol_redefinition_00108d9a",
                "dcgettext": "get_error_message",
                "htab_find": "find_in_table",
                "htab_find_slot": "find_slot_in_table",
                "lVar3": "symbol_found",
                "param_1": "param",
                "param_2": "symbol_name",
                "param_3": "target_symbol",
                "param_4": "result",
                "pcVar2": "symbol_name_copy",
                "plVar5": "slot_ptr",
                "ppcVar1": "symbol_pair",
                "strdup": "duplicate_string",
                "uVar4": "error_message",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00108e76": {
            "additional_data": {
                "FUN_00108e76": {
                    "convert_byte_to_int": 2,
                    "extract_decimal": 1,
                    "extract_integer_from_byte_array": 4,
                    "extract_integer_from_byte_sequence": 2,
                    "extract_integer_from_byte_string": 1,
                    "extract_integer_from_bytes": 2,
                    "extract_integer_from_string": 3,
                    "extract_number_from_byte_pointer": 1,
                    "extract_number_from_bytes": 2,
                    "extract_number_from_string": 2,
                    "extract_numerical_value": 1,
                    "parse_decimal": 1,
                    "parse_integer": 3,
                    "parse_integer_from_bytes": 1,
                    "parse_integer_from_input": 1,
                    "parse_integer_from_string": 1,
                    "parse_number": 1,
                    "parse_numeric_value": 1,
                    "parse_positive_integer": 1
                },
                "bVar1": {
                    "byte_value": 1,
                    "current_byte": 18,
                    "current_char": 6,
                    "current_character": 3
                },
                "iVar2": {
                    "converted_value": 1,
                    "extracted_integer": 4,
                    "extracted_number": 2,
                    "parsed_integer": 5,
                    "parsed_number": 1,
                    "parsed_value": 1,
                    "result": 15
                },
                "param_1": {
                    "byte_array": 9,
                    "byte_pointer": 1,
                    "byte_ptr": 1,
                    "byte_sequence": 2,
                    "byte_string": 2,
                    "data_ptr": 2,
                    "input_data": 1,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "input_str": 2,
                    "input_string": 5,
                    "ptr_string": 1,
                    "string_pointer": 2,
                    "string_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0010d559",
                "FUN_0010ee3f",
                "FUN_0010d21c",
                "FUN_0010c95e"
            ],
            "code": "\nint parse_integer_from_string_00108e76(byte **byte_array)\n\n{\n  byte current_byte;\n  int result;\n  \n  result = 0;\n  while( true ) {\n    current_byte = **byte_array;\n    if (((&_sch_istable)[(ulong)current_byte * 2] & 4) == 0) break;\n    *byte_array = *byte_array + 1;\n    result = result * 10 + -0x30 + (int)(char)current_byte;\n  }\n  return result;\n}\n\n",
            "current_name": "parse_integer_from_string_00108e76",
            "entrypoint": "0x00108e76",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108e76": "parse_integer_from_string_00108e76",
                "bVar1": "current_byte",
                "iVar2": "result",
                "param_1": "byte_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00108ea1": {
            "additional_data": {
                "FUN_00108ea1": {
                    "convert_string_to_unsigned": 1,
                    "extract_number_from_string": 1,
                    "parse_and_extract_number": 1,
                    "parse_and_extract_value": 1,
                    "parse_int_from_string": 1,
                    "parse_integer": 9,
                    "parse_integer_from_string": 1,
                    "parse_number": 13,
                    "parse_number_from_string": 1,
                    "parse_numeric_string": 2
                },
                "_sch_istable": {
                    "character_table": 1
                },
                "iVar1": {
                    "accumulated_number": 1,
                    "accumulator": 1,
                    "current_digit": 4,
                    "current_number": 1,
                    "current_value": 2,
                    "digit": 1,
                    "int_value": 2,
                    "parsed_integer": 1,
                    "result": 1,
                    "temp_var": 1
                },
                "param_1": {
                    "byte_array": 1,
                    "byte_ptr": 1,
                    "data": 1,
                    "input": 4,
                    "input_buffer": 1,
                    "input_bytes": 1,
                    "input_data": 4,
                    "input_pointer": 2,
                    "input_ptr": 8,
                    "input_string": 4,
                    "string": 1,
                    "string_ptr": 1
                },
                "param_2": {
                    "number_ptr": 2,
                    "numeric_value": 1,
                    "output": 3,
                    "output_int": 2,
                    "output_integer": 4,
                    "output_num": 2,
                    "output_number": 3,
                    "output_value": 2,
                    "parsed_integer": 2,
                    "parsed_number": 3,
                    "result": 2,
                    "result_ptr": 3
                },
                "pbVar2": {
                    "byte_ptr": 2,
                    "byte_ptr_1": 1,
                    "current_byte": 12,
                    "current_char": 10,
                    "current_character": 1,
                    "current_ptr": 1,
                    "data_ptr": 1,
                    "ptr": 1,
                    "ptr_data": 1,
                    "ptr_input": 1
                },
                "pbVar3": {
                    "byte_ptr_2": 1,
                    "current_byte_ptr": 1,
                    "next_byte": 12,
                    "next_byte_ptr": 1,
                    "next_char": 10,
                    "next_character": 1,
                    "next_data_ptr": 1,
                    "next_ptr": 2,
                    "ptr_next": 2
                },
                "uVar4": {
                    "formatted_result": 1,
                    "parsed_value": 1,
                    "result": 24,
                    "return_value": 5
                }
            },
            "called": [],
            "calling": [
                "FUN_0010d882",
                "FUN_0010d21c",
                "FUN_0010c95e"
            ],
            "code": "\nulong parse_number_from_string_00108ea1(byte **input_ptr,int *output_integer)\n\n{\n  int current_digit;\n  byte *current_byte;\n  byte *next_byte;\n  ulong result;\n  \n  current_byte = *input_ptr;\n  result = 0;\n  if (((&character_table)[(ulong)*current_byte * 2] & 4) != 0) {\n    next_byte = current_byte + 1;\n    current_digit = (char)*current_byte + -0x30;\n    *output_integer = current_digit;\n    *input_ptr = next_byte;\n    if (((&character_table)[(ulong)current_byte[1] * 2] & 4) != 0) {\n      do {\n        current_byte = next_byte;\n        current_digit = current_digit * 10 + -0x30 + (int)(char)*current_byte;\n        next_byte = current_byte + 1;\n      } while (((&character_table)[(ulong)current_byte[1] * 2] & 4) != 0);\n      if (current_byte[1] == 0x5f) {\n        next_byte = current_byte + 2;\n        *input_ptr = next_byte;\n        *output_integer = current_digit;\n      }\n    }\n    result = CONCAT71((int7)((ulong)next_byte >> 8),1);\n  }\n  return result & 0xffffffff;\n}\n\n",
            "current_name": "parse_number_from_string_00108ea1",
            "entrypoint": "0x00108ea1",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108ea1": "parse_number_from_string_00108ea1",
                "_sch_istable": "character_table",
                "iVar1": "current_digit",
                "param_1": "input_ptr",
                "param_2": "output_integer",
                "pbVar2": "current_byte",
                "pbVar3": "next_byte",
                "uVar4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00108f05": {
            "additional_data": {
                "FUN_00108f05": {
                    "check_if_one": 2,
                    "check_if_value_exists": 1,
                    "check_success": 1,
                    "determine_success": 1,
                    "determine_value": 1,
                    "get_one": 16,
                    "get_return_value": 6,
                    "initialize_application": 1,
                    "is_one": 2
                },
                "return": {
                    "result": 1,
                    "success": 1
                },
                "undefined": {
                    "int": 1,
                    "void": 1
                },
                "void": {
                    "": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_001135a5"
            ],
            "code": "\nint get_one_00108f05(void)\n\n{\n  success 1;\n}\n\n",
            "current_name": "get_one_00108f05",
            "entrypoint": "0x00108f05",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108f05": "get_one_00108f05",
                "return": "success",
                "undefined": "int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00108f08": {
            "additional_data": {
                "FUN_00108f08": {
                    "add_debug_source": 3,
                    "add_source_file": 5,
                    "debug_start_source": 7,
                    "debugger_start_source": 1,
                    "find_and_add_file": 1,
                    "find_and_add_filename": 2,
                    "process_debug_file": 1,
                    "process_debug_source": 2,
                    "source_debug_initialize": 1,
                    "source_debug_start": 1,
                    "source_debugger": 1,
                    "update_debug_info": 1,
                    "update_debug_source": 3,
                    "update_source_file": 1,
                    "update_source_filenames": 1
                },
                "_stderr": {
                    "error_output": 2,
                    "error_stream": 3,
                    "stderr": 1
                },
                "bVar9": {
                    "allocation_toggle": 1,
                    "bit_flag": 1,
                    "byte_flag": 2,
                    "byte_val": 1,
                    "byte_value": 3,
                    "byte_var": 1,
                    "count": 1,
                    "counter": 2,
                    "counter_flag": 1,
                    "flag": 9,
                    "increment": 2,
                    "is_first_iteration": 2,
                    "is_null": 1,
                    "is_zero": 1,
                    "offset": 2,
                    "zero_byte": 1
                },
                "dcgettext": {
                    "get_debug_message": 1,
                    "get_error_message": 3
                },
                "filename_cmp": {
                    "compare_file_name": 1,
                    "compare_filenames": 3
                },
                "fprintf": {
                    "print_error": 1,
                    "print_error_message": 3
                },
                "iVar1": {
                    "cmp_result": 8,
                    "comparison_result": 14,
                    "filename_comparison": 1,
                    "result": 1
                },
                "lVar5": {
                    "count": 2,
                    "counter": 4,
                    "iteration_count": 1,
                    "iterator": 1,
                    "loop_counter": 19,
                    "loop_index": 1,
                    "loop_var": 1,
                    "loop_variable": 1
                },
                "param_1": {
                    "debug_info": 1,
                    "debug_info_address": 1,
                    "debug_info_ptr": 1,
                    "debug_state": 1,
                    "debugger_instance": 1,
                    "debugger_state": 1,
                    "file_ptr": 1,
                    "filename": 1,
                    "function_table": 1,
                    "param1": 1,
                    "param_pointer": 1,
                    "pointer_to_struct": 1,
                    "source": 1,
                    "source_context": 2,
                    "source_database": 1,
                    "source_debugger": 1,
                    "source_debugger_param1": 1,
                    "source_file": 1,
                    "source_files": 1,
                    "source_handle": 2,
                    "source_info": 2,
                    "source_list": 1,
                    "source_manager": 4,
                    "source_manager_ptr": 1,
                    "source_ptr": 1
                },
                "param_2": {
                    "debug_filename": 1,
                    "file_name": 2,
                    "filename": 26,
                    "param2": 1,
                    "source_debugger_param2": 1
                },
                "pcVar7": {
                    "current_filename": 16,
                    "default_file_name": 1,
                    "default_filename": 6,
                    "filename": 2,
                    "filename_ptr": 1,
                    "filename_to_compare": 2,
                    "input_filename": 1,
                    "source_filename": 1,
                    "temp_file_name": 1
                },
                "puVar3": {
                    "current": 2,
                    "current_debug_info": 1,
                    "current_entry": 4,
                    "current_file": 2,
                    "current_file_entry": 1,
                    "current_filename_node": 1,
                    "current_item": 1,
                    "current_node": 5,
                    "current_ptr": 1,
                    "current_source": 2,
                    "debug_context": 1,
                    "debug_set_filename": 1,
                    "debug_set_filename_ptr": 1,
                    "debug_source": 1,
                    "debug_source_entry": 1,
                    "debugger_filenames": 1,
                    "entry": 1,
                    "file_list": 1,
                    "file_node": 1,
                    "source_files_list": 1,
                    "source_ptr": 1
                },
                "puVar4": {
                    "current_file": 2,
                    "current_item": 1,
                    "current_node": 2,
                    "current_ptr": 1,
                    "next": 1,
                    "next_file_entry": 1,
                    "next_node": 2,
                    "prev_source": 1,
                    "previous": 1,
                    "previous_entry": 2,
                    "previous_item": 1,
                    "previous_node": 2,
                    "previous_source": 1,
                    "temp": 1,
                    "temp_debug_info": 1,
                    "temp_entry": 3,
                    "temp_file": 2,
                    "temp_node": 2,
                    "temp_pointer": 2,
                    "temp_source": 1
                },
                "puVar6": {
                    "debug_info_list": 1,
                    "debug_source_list": 1,
                    "file_list": 1,
                    "function_table_head": 1,
                    "head": 4,
                    "head_file_entry": 1,
                    "head_node": 6,
                    "head_pointer": 1,
                    "last_ptr": 1,
                    "pointer_to_first_entry": 1,
                    "ptr1": 1,
                    "source_files": 1,
                    "source_head_ptr": 1,
                    "source_list": 7,
                    "source_list_head": 1,
                    "source_list_ptr": 1,
                    "start_node": 1
                },
                "puVar8": {
                    "current_pointer": 1,
                    "file_list": 1,
                    "last_entry": 1,
                    "last_file": 1,
                    "last_file_ptr": 1,
                    "last_item": 1,
                    "last_node": 2,
                    "new_entry": 1,
                    "new_node": 2,
                    "new_ptr": 1,
                    "new_source": 1,
                    "pointer_to_last_entry": 1,
                    "prev_debug_info": 1,
                    "prev_entry": 1,
                    "prev_file": 1,
                    "prev_node": 2,
                    "prev_source": 1,
                    "previous_node": 1,
                    "previous_source": 1,
                    "ptr2": 1,
                    "source_list_tail": 1,
                    "tail": 3,
                    "tail_file_entry": 1,
                    "tail_node": 1,
                    "temp_entry": 1,
                    "temp_item": 1
                },
                "uVar2": {
                    "result": 13,
                    "return_value": 8,
                    "success": 6,
                    "success_flag": 2,
                    "success_indicator": 1,
                    "success_result": 1
                },
                "xmalloc": {
                    "allocate_memory": 4
                }
            },
            "called": [
                "filename_cmp",
                "dcgettext",
                "xmalloc",
                "fprintf"
            ],
            "calling": [
                "FUN_0011173a"
            ],
            "code": "\n\n\nundefined8 source_debug_start_00108f08(long source_manager,char *filename)\n\n{\n  int comparison_result;\n  undefined8 result;\n  undefined8 *current_node;\n  undefined8 *temp_entry;\n  long loop_counter;\n  undefined8 *source_list;\n  char *current_filename;\n  undefined8 *tail;\n  byte flag;\n  \n  flag = 0;\n  current_filename = \"\";\n  if (filename != (char *)0x0) {\n    current_filename = filename;\n  }\n  if (*(long *)(source_manager + 8) == 0) {\n    result = dcgettext(0,\"debug_start_source: no debug_set_filename call\",5);\n    fprintf(error_stream,\"%s\\n\",result);\n    result = 0;\n  }\n  else {\n    for (current_node = *(undefined8 **)(*(long *)(source_manager + 8) + 8); current_node != (undefined8 *)0x0;\n        current_node = (undefined8 *)*current_node) {\n      comparison_result = filename_cmp(current_node[1],current_filename);\n      if (comparison_result == 0) goto LAB_00108fad;\n    }\n    current_node = (undefined8 *)xmalloc(0x18);\n    source_list = *(undefined8 **)(source_manager + 0x10);\n    tail = current_node;\n    for (loop_counter = 6; loop_counter != 0; loop_counter = loop_counter + -1) {\n      *(undefined4 *)tail = 0;\n      tail = (undefined8 *)((long)tail + (ulong)flag * -8 + 4);\n    }\n    current_node[1] = current_filename;\n    tail = (undefined8 *)*source_list;\n    while (temp_entry = tail, temp_entry != (undefined8 *)0x0) {\n      source_list = temp_entry;\n      tail = (undefined8 *)*temp_entry;\n    }\n    *source_list = current_node;\nLAB_00108fad:\n    *(undefined8 **)(source_manager + 0x10) = current_node;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "current_name": "source_debug_start_00108f08",
            "entrypoint": "0x00108f08",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108f08": "source_debug_start_00108f08",
                "_stderr": "error_stream",
                "bVar9": "flag",
                "dcgettext": "get_error_message",
                "filename_cmp": "compare_filenames",
                "fprintf": "print_error_message",
                "iVar1": "comparison_result",
                "lVar5": "loop_counter",
                "param_1": "source_manager",
                "param_2": "filename",
                "pcVar7": "current_filename",
                "puVar3": "current_node",
                "puVar4": "temp_entry",
                "puVar6": "source_list",
                "puVar8": "tail",
                "uVar2": "result",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00108fb9": {
            "additional_data": {
                "FUN_00108fb9": {
                    "print_bad_stab": 6,
                    "print_bad_stab_error": 6,
                    "print_bad_stab_error_message": 6,
                    "print_bad_stab_message": 6,
                    "print_error": 1,
                    "print_error_message": 4,
                    "print_error_stab": 1,
                    "print_stab_error_message": 1
                },
                "__format": {
                    "error_format": 1,
                    "error_format_string": 2,
                    "error_message": 4,
                    "error_message_format": 6,
                    "format": 1,
                    "format_string": 15,
                    "translated_error_message": 1,
                    "translated_format": 1
                },
                "_stderr": {
                    "standard_error": 1
                },
                "param_1": {
                    "error_message": 15,
                    "error_string": 1,
                    "message": 3,
                    "stab": 3,
                    "stab_error": 1,
                    "stab_error_message": 2,
                    "stab_message": 6
                }
            },
            "called": [
                "dcgettext",
                "fprintf"
            ],
            "calling": [
                "FUN_0010ee3f",
                "FUN_0011173a",
                "FUN_00109ab1"
            ],
            "code": "\n\n\nvoid print_bad_stab_error_message_00108fb9(undefined8 error_message)\n\n{\n  char *format_string;\n  \n  format_string = (char *)dcgettext(0,\"Bad stab: %s\\n\",5);\n  fprintf(standard_error,format_string,error_message);\n  return;\n}\n\n",
            "current_name": "print_bad_stab_error_message_00108fb9",
            "entrypoint": "0x00108fb9",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108fb9": "print_bad_stab_error_message_00108fb9",
                "__format": "format_string",
                "_stderr": "standard_error",
                "param_1": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00108fe8": {
            "additional_data": {
                "FUN_00108fe8": {
                    "log_warning": 1,
                    "print_warning": 27,
                    "print_warning_message": 3
                },
                "__format": {
                    "error_message_format": 1,
                    "format": 1,
                    "format_string": 15,
                    "message_format": 1,
                    "warning_format": 13
                },
                "in_RAX": {
                    "format_result": 1,
                    "locale": 1,
                    "result": 1,
                    "return_address": 1,
                    "return_value": 5,
                    "undefined_value": 1,
                    "unused_variable": 1
                },
                "param_1": {
                    "error_message": 7,
                    "file_name": 2,
                    "first_param": 1,
                    "message": 20,
                    "message1": 1
                },
                "param_2": {
                    "error_message": 2,
                    "error_type": 1,
                    "file": 1,
                    "file_name": 4,
                    "filename": 6,
                    "message2": 1,
                    "second_param": 1,
                    "source": 13,
                    "source_name": 1,
                    "warning_message": 1
                }
            },
            "called": [
                "dcgettext",
                "fprintf"
            ],
            "calling": [
                "FUN_0010ee3f",
                "FUN_0011173a",
                "FUN_00109a32"
            ],
            "code": "\n\n\nvoid print_warning_message_00108fe8(undefined8 message,undefined8 source)\n\n{\n  undefined8 return_value;\n  char *format_string;\n  \n  format_string = (char *)dcgettext(0,\"Warning: %s: %s\\n\",5);\n  fprintf(_stderr,format_string,source,message,return_value);\n  return;\n}\n\n",
            "current_name": "print_warning_message_00108fe8",
            "entrypoint": "0x00108fe8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00108fe8": "print_warning_message_00108fe8",
                "__format": "format_string",
                "in_RAX": "return_value",
                "param_1": "message",
                "param_2": "source"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00109022": {
            "additional_data": {
                "FUN_00109022": {
                    "extract_and_initialize_data": 1,
                    "extract_data_from_binary": 1,
                    "extract_file_data": 2,
                    "extract_file_from_binary": 1,
                    "extract_file_info": 2,
                    "extract_file_type": 1,
                    "extract_type_file": 1,
                    "extract_type_from_binary": 1,
                    "extract_type_info": 1,
                    "extract_type_information": 1,
                    "file_index_out_of_range": 1,
                    "process_file": 12,
                    "process_file_data": 2,
                    "process_file_type": 1,
                    "readable_function": 1,
                    "validate_and_allocate_memory_for_types": 1
                },
                "auVar8": {
                    "result": 3,
                    "result_data": 1,
                    "return_data": 1,
                    "return_val": 3,
                    "return_value": 19,
                    "return_var": 1
                },
                "bVar7": {
                    "b_var": 1,
                    "byte_counter": 1,
                    "byte_flag": 2,
                    "byte_value": 7,
                    "byte_var": 12,
                    "byte_variable": 1,
                    "offset": 1,
                    "temp": 1,
                    "temp_byte": 2,
                    "temp_flag": 1,
                    "zero_byte": 2
                },
                "dcgettext": {
                    "get_localized_string": 1
                },
                "fprintf": {
                    "print_formatted": 1
                },
                "lVar4": {
                    "count": 1,
                    "counter": 4,
                    "index": 1,
                    "loop_count": 2,
                    "loop_counter": 14,
                    "loop_index": 3,
                    "loop_var": 5,
                    "temp": 1
                },
                "param_1": {
                    "binary": 1,
                    "binary_address": 2,
                    "file": 1,
                    "file_count": 3,
                    "file_data": 5,
                    "file_handle": 3,
                    "file_index": 5,
                    "file_info": 1,
                    "file_list": 1,
                    "file_number": 7,
                    "file_pointer": 1,
                    "file_ptr": 1
                },
                "param_2": {
                    "file_indexes": 1,
                    "file_indices": 2,
                    "file_numbers": 8,
                    "type_array": 2,
                    "type_data": 1,
                    "type_file_number": 1,
                    "type_file_numbers": 1,
                    "type_index": 9,
                    "type_indexes": 2,
                    "type_indices": 1,
                    "type_number": 1,
                    "type_numbers": 2
                },
                "param_3": {
                    "arg1": 4,
                    "arg3": 2,
                    "arg_1": 1,
                    "data1": 1,
                    "message1": 1,
                    "output1": 1,
                    "param1": 3,
                    "param3": 9,
                    "param_3": 5,
                    "parameter1": 1,
                    "ptr1": 1,
                    "var1": 2
                },
                "param_4": {
                    "arg2": 4,
                    "arg4": 2,
                    "arg_2": 1,
                    "data2": 1,
                    "message2": 1,
                    "output2": 1,
                    "param2": 3,
                    "param4": 9,
                    "param_4": 5,
                    "parameter2": 1,
                    "ptr2": 1,
                    "var2": 2
                },
                "pcVar2": {
                    "err_msg": 3,
                    "error_message": 20,
                    "error_msg": 5,
                    "error_string": 2,
                    "type_error_message": 1
                },
                "plVar3": {
                    "allocated_memory": 2,
                    "data_ptr": 1,
                    "file_data": 1,
                    "file_info": 3,
                    "file_pointer": 2,
                    "file_ptr": 1,
                    "result": 6,
                    "type_array": 1,
                    "type_array_ptr": 1,
                    "type_data": 5,
                    "type_index": 1,
                    "type_info": 3,
                    "type_pointer": 2,
                    "type_ptr": 1,
                    "type_record": 1
                },
                "pplVar6": {
                    "data_ptr": 1,
                    "file_data_array": 1,
                    "file_info_pointer": 1,
                    "file_info_ptr": 2,
                    "file_list_pointer": 1,
                    "file_ptr_list": 1,
                    "nested_pointer": 1,
                    "pointer_pointer": 1,
                    "pointer_ptr": 1,
                    "pointer_to_allocated_memory": 1,
                    "pointer_to_pointer": 1,
                    "ptr_to_ptr_to_type_data": 1,
                    "type_array": 3,
                    "type_array_pointer": 1,
                    "type_array_ptr": 1,
                    "type_array_ptr_ptr": 1,
                    "type_data_ptr": 1,
                    "type_data_ptr_ptr": 1,
                    "type_file_pointer": 1,
                    "type_info_ptr": 1,
                    "type_list": 1,
                    "type_list_ptr": 2,
                    "type_pointer": 3,
                    "type_pointer_pointer": 1,
                    "type_pointers": 1
                },
                "uVar1": {
                    "current_index": 1,
                    "file_count": 1,
                    "file_index": 1,
                    "file_num": 1,
                    "file_number": 2,
                    "file_numbers_count": 1,
                    "file_type": 1,
                    "index": 2,
                    "index_number": 1,
                    "type": 1,
                    "type_file_number": 1,
                    "type_index": 10,
                    "type_index1": 1,
                    "type_index_low": 1,
                    "type_index_value": 2,
                    "type_number": 2,
                    "upper_bound": 2
                },
                "uVar5": {
                    "count": 1,
                    "file_index": 4,
                    "file_number": 3,
                    "file_type_index": 1,
                    "index": 1,
                    "index_num": 1,
                    "index_number": 2,
                    "loop_count": 1,
                    "loop_variable": 1,
                    "num_iterations": 1,
                    "remaining_index": 1,
                    "temp_var": 1,
                    "type_count": 1,
                    "type_file_number": 2,
                    "type_index": 3,
                    "type_index_high": 1,
                    "type_index_number": 1,
                    "type_number": 2,
                    "type_offset": 1,
                    "type_value": 1,
                    "var5": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "dcgettext",
                "fprintf",
                "xmalloc"
            ],
            "calling": [
                "FUN_0010c2d2",
                "FUN_0010ee3f"
            ],
            "code": "\n\n\nundefined  [16] process_file_data_00109022(long file_number,uint *type_index,undefined8 param3,undefined8 param4)\n\n{\n  uint type_index;\n  char *error_message;\n  long *result;\n  long loop_counter;\n  uint file_index;\n  long **type_array;\n  byte byte_var;\n  undefined return_value [16];\n  \n  byte_var = 0;\n  file_index = *type_index;\n  type_index = type_index[1];\n  if (((int)file_index < 0) || (*(uint *)(file_number + 0x80) <= file_index)) {\n    error_message = (char *)dcgettext(0,\"Type file number %d out of range\\n\",5);\n    fprintf(_stderr,error_message,(ulong)file_index);\n  }\n  else {\n    if (-1 < (int)type_index) {\n      type_array = (long **)(*(long *)(file_number + 0x88) + (long)(int)file_index * 8);\n      for (file_index = type_index; 0xf < (int)file_index; file_index = file_index - 0x10) {\n        if (*type_array == (long *)0x0) {\n          result = (long *)xmalloc(0x88);\n          *type_array = result;\n          for (loop_counter = 0x22; loop_counter != 0; loop_counter = loop_counter + -1) {\n            *(undefined4 *)result = 0;\n            result = (long *)((long)result + (ulong)byte_var * -8 + 4);\n          }\n        }\n        type_array = (long **)*type_array;\n      }\n      if (*type_array == (long *)0x0) {\n        result = (long *)xmalloc(0x88);\n        *type_array = result;\n        for (loop_counter = 0x22; loop_counter != 0; loop_counter = loop_counter + -1) {\n          *(undefined4 *)result = 0;\n          result = (long *)((long)result + (ulong)byte_var * -8 + 4);\n        }\n      }\n      result = *type_array + (long)(int)((type_index >> 4) * -0x10 + type_index) + 1;\n      goto LAB_00109117;\n    }\n    error_message = (char *)dcgettext(0,\"Type index number %d out of range\\n\",5);\n    fprintf(_stderr,error_message,(ulong)type_index);\n  }\n  result = (long *)0x0;\nLAB_00109117:\n  return_value._8_8_ = param4;\n  return_value._0_8_ = result;\n  return return_value;\n}\n\n",
            "current_name": "process_file_data_00109022",
            "entrypoint": "0x00109022",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00109022": "process_file_data_00109022",
                "auVar8": "return_value",
                "bVar7": "byte_var",
                "dcgettext": "get_localized_string",
                "fprintf": "print_formatted",
                "lVar4": "loop_counter",
                "param_1": "file_number",
                "param_2": "type_index",
                "param_3": "param3",
                "param_4": "param4",
                "pcVar2": "error_message",
                "plVar3": "result",
                "pplVar6": "type_array",
                "uVar1": "type_index",
                "uVar5": "file_index",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010911f": {
            "additional_data": {
                "FUN_0010911f": {
                    "print_bad_mangled_name": 4,
                    "print_bad_mangled_name_message": 1,
                    "print_bad_name_error": 1,
                    "print_error": 1,
                    "print_error_message": 23,
                    "print_mangled_name_error": 1
                },
                "__format": {
                    "error_format": 8,
                    "error_message_format": 3,
                    "error_msg": 1,
                    "format_string": 13,
                    "localized_message": 1,
                    "mangled_name_format": 1,
                    "message_format": 4
                },
                "_stderr": {
                    "error_stream": 1
                },
                "dcgettext": {
                    "get_error_message": 1
                },
                "fprintf": {
                    "print_error_message": 1
                },
                "param_1": {
                    "error_message": 13,
                    "mangled_name": 11,
                    "message": 6
                }
            },
            "called": [
                "dcgettext",
                "fprintf"
            ],
            "calling": [
                "FUN_0010d559",
                "FUN_0010d882",
                "FUN_0010ee3f",
                "FUN_0010d21c",
                "FUN_0010c95e"
            ],
            "code": "\n\n\nvoid print_error_message_0010911f(undefined8 error_message)\n\n{\n  char *format_string;\n  \n  format_string = (char *)dcgettext(0,\"bad mangled name `%s\\'\\n\",5);\n  print_error_message_0010911f(error_stream,format_string,error_message);\n  return;\n}\n\n",
            "current_name": "print_error_message_0010911f",
            "entrypoint": "0x0010911f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010911f": "print_error_message_0010911f",
                "__format": "format_string",
                "_stderr": "error_stream",
                "dcgettext": "get_error_message",
                "fprintf": "print_error_message",
                "param_1": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010914e": {
            "additional_data": {
                "FUN_0010914e": {
                    "find_named_type": 31
                },
                "auVar7": {
                    "data": 1,
                    "output": 1,
                    "output_struct": 1,
                    "result": 18,
                    "result_value": 1,
                    "return_value": 3
                },
                "iVar2": {
                    "compare_result": 1,
                    "comparison_result": 26,
                    "result": 3,
                    "string_comparison_result": 1
                },
                "lVar1": {
                    "compilation_unit": 4,
                    "compilation_unit_ptr": 1,
                    "current_comp_unit_ptr": 1,
                    "current_compilation_unit": 14,
                    "current_unit": 11
                },
                "lVar5": {
                    "current_compilation_unit": 1,
                    "current_element": 1,
                    "current_entry": 2,
                    "current_entry_address": 2,
                    "current_item_ptr": 1,
                    "current_l_var": 1,
                    "current_list": 2,
                    "current_node": 1,
                    "current_unit": 1,
                    "elem_ptr": 1,
                    "element": 1,
                    "entry": 4,
                    "iterator": 2,
                    "list_entry": 1,
                    "loop_var": 2,
                    "loop_variable": 1,
                    "node": 1,
                    "node_2": 1,
                    "ptr2": 1,
                    "ptr_2": 1,
                    "unit_ptr": 1,
                    "var_1": 1,
                    "var_5": 1
                },
                "param_1": {
                    "binary_data": 1,
                    "compilation_unit": 23,
                    "input": 3,
                    "input_param": 1,
                    "input_struct": 1,
                    "param_pointer": 1,
                    "symbol_table": 1
                },
                "param_2": {
                    "name": 5,
                    "name_to_find": 2,
                    "target_name": 1,
                    "type_name": 23
                },
                "param_3": {
                    "arg1": 2,
                    "arg3": 3,
                    "arg_1": 1,
                    "arg_3": 1,
                    "file": 1,
                    "file_handle": 1,
                    "file_stream": 2,
                    "output1": 1,
                    "param_3": 11,
                    "ptr_1": 1,
                    "ptr_param": 1,
                    "stdout": 1,
                    "stream": 3,
                    "unknown_parameter_1": 1,
                    "var_3": 1
                },
                "param_4": {
                    "arg2": 2,
                    "arg4": 3,
                    "arg_2": 1,
                    "arg_4": 1,
                    "au_var7": 1,
                    "default_value": 3,
                    "format": 3,
                    "line": 1,
                    "output2": 1,
                    "output_param": 1,
                    "param_4": 10,
                    "ptr_2": 1,
                    "result": 1,
                    "unknown_parameter_2": 1,
                    "var_4": 1
                },
                "puVar4": {
                    "current_elem_ptr": 1,
                    "current_element": 2,
                    "current_entry": 9,
                    "current_item": 3,
                    "current_name": 1,
                    "current_node": 2,
                    "current_ptr": 1,
                    "current_pu_var": 1,
                    "current_type": 1,
                    "element": 1,
                    "node_1": 1,
                    "ptr": 6,
                    "ptr_1": 1,
                    "ptr_4": 1
                },
                "puVar6": {
                    "comp_unit_ptr": 1,
                    "current_comp_unit_node": 1,
                    "current_compilation_unit_entry": 1,
                    "current_entry": 1,
                    "current_entry_list": 1,
                    "current_item_ptr_2": 1,
                    "current_list": 1,
                    "current_unit_element": 1,
                    "current_unit_entry": 3,
                    "current_unit_node": 1,
                    "entry_list": 1,
                    "item": 1,
                    "loop_variable2": 1,
                    "node_3": 1,
                    "ptr2": 2,
                    "ptr3": 1,
                    "ptr_2": 1,
                    "ptr_3": 1,
                    "ptr_6": 1,
                    "pu_var": 1,
                    "type_entry": 1,
                    "unit_element": 1,
                    "unit_entry": 4,
                    "var_2": 1,
                    "var_ptr": 1
                },
                "uVar3": {
                    "debug_msg": 1,
                    "error_message": 20,
                    "gettext_result": 1,
                    "localized_text": 1,
                    "message": 2,
                    "result": 2,
                    "translated_message": 1,
                    "translated_text": 1,
                    "translation": 2
                }
            },
            "called": [
                "dcgettext",
                "strcmp",
                "fprintf"
            ],
            "calling": [
                "FUN_0010d559",
                "FUN_0010ee3f",
                "FUN_0010c95e"
            ],
            "code": "\n\n\nundefined  [16] find_named_type_0010914e(long compilation_unit,char *type_name,undefined8 param_3,undefined8 param_4)\n\n{\n  long current_compilation_unit;\n  int comparison_result;\n  undefined8 error_message;\n  undefined8 *current_entry;\n  long entry;\n  undefined8 *unit_entry;\n  undefined result [16];\n  \n  current_compilation_unit = *(long *)(compilation_unit + 8);\n  if (current_compilation_unit == 0) {\n    error_message = dcgettext(0,\"debug_find_named_type_0010914e: no current compilation unit\",5);\n    fprintf(_stderr,\"%s\\n\",error_message);\n  }\n  else {\n    for (entry = *(long *)(compilation_unit + 0x20); entry != 0; entry = *(long *)(entry + 8)) {\n      if (*(undefined8 **)(entry + 0x28) != (undefined8 *)0x0) {\n        for (current_entry = (undefined8 *)**(undefined8 **)(entry + 0x28); current_entry != (undefined8 *)0x0;\n            current_entry = (undefined8 *)*current_entry) {\n          if (*(int *)((long)current_entry + 0x14) == 0) {\n            if (*(char *)current_entry[1] == *type_name) {\n              comparison_result = strcmp((char *)current_entry[1],type_name);\n              if (comparison_result == 0) goto LAB_00109216;\n            }\n          }\n        }\n      }\n    }\n    for (unit_entry = *(undefined8 **)(current_compilation_unit + 8); unit_entry != (undefined8 *)0x0;\n        unit_entry = (undefined8 *)*unit_entry) {\n      if ((undefined8 *)unit_entry[2] != (undefined8 *)0x0) {\n        for (current_entry = *(undefined8 **)(undefined8 *)unit_entry[2]; current_entry != (undefined8 *)0x0;\n            current_entry = (undefined8 *)*current_entry) {\n          if (*(int *)((long)current_entry + 0x14) == 0) {\n            if (*(char *)current_entry[1] == *type_name) {\n              comparison_result = strcmp((char *)current_entry[1],type_name);\n              if (comparison_result == 0) goto LAB_00109216;\n            }\n          }\n        }\n      }\n    }\n  }\n  error_message = 0;\nLAB_00109223:\n  result._8_8_ = param_4;\n  result._0_8_ = error_message;\n  return result;\nLAB_00109216:\n  error_message = current_entry[4];\n  goto LAB_00109223;\n}\n\n",
            "current_name": "find_named_type_0010914e",
            "entrypoint": "0x0010914e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010914e": "find_named_type_0010914e",
                "auVar7": "result",
                "iVar2": "comparison_result",
                "lVar1": "current_compilation_unit",
                "lVar5": "entry",
                "param_1": "compilation_unit",
                "param_2": "type_name",
                "puVar4": "current_entry",
                "puVar6": "unit_entry",
                "uVar3": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010922b": {
            "additional_data": {
                "FUN_0010922b": {
                    "check_equality": 21,
                    "check_if_equal": 1,
                    "compare_data": 2,
                    "compare_function": 1,
                    "compare_parameters": 1,
                    "compare_values": 3,
                    "is_equal": 1
                },
                "bVar12": {
                    "bool_result": 1,
                    "boolean_var": 1,
                    "byte1": 1,
                    "byte_var": 1,
                    "is_equal": 18,
                    "is_match": 1,
                    "is_same": 2,
                    "result": 4,
                    "result_byte": 1,
                    "return_value": 1
                },
                "cVar11": {
                    "char1": 1,
                    "char_val": 1,
                    "char_value": 1,
                    "char_var": 3,
                    "char_var_3": 1,
                    "check": 1,
                    "comparison_result": 3,
                    "result": 19,
                    "result_char": 1
                },
                "iVar13": {
                    "cmp_result": 3,
                    "compare_result": 5,
                    "comparison": 1,
                    "comparison_int_result": 1,
                    "comparison_result": 10,
                    "comparison_result2": 1,
                    "comparison_result_int": 1,
                    "index": 1,
                    "int_var": 3,
                    "int_var_1": 1,
                    "result_int": 1,
                    "strcmp_result": 1,
                    "strcmp_return_value": 1,
                    "var3": 1
                },
                "lVar18": {
                    "temp_length": 1
                },
                "lVar19": {
                    "arr1_var19": 1,
                    "cnt": 1,
                    "i": 1,
                    "index": 7,
                    "length4": 2,
                    "local_var4": 1,
                    "long_var9": 1,
                    "long_var_4": 1,
                    "offset": 8,
                    "temp_var2": 1,
                    "value1_2": 1,
                    "var4": 2,
                    "var9": 1,
                    "var_4": 1,
                    "variable4": 1
                },
                "lVar22": {
                    "arr1_var22": 1,
                    "array1_index": 1,
                    "base_offset": 1,
                    "compare_offset": 1,
                    "compare_result": 1,
                    "i": 1,
                    "index": 1,
                    "inner_index": 1,
                    "j": 1,
                    "l_value": 1,
                    "length": 1,
                    "length4": 1,
                    "length5": 1,
                    "local_var5": 1,
                    "long_var10": 1,
                    "long_var_5": 1,
                    "offset": 4,
                    "ptr1_val": 1,
                    "str_offset": 1,
                    "temp1": 1,
                    "temp_var5": 1,
                    "value": 1,
                    "value1_3": 1,
                    "var10": 1,
                    "var5": 2,
                    "var_5": 1,
                    "variable5": 1
                },
                "lVar6": {
                    "arr1_var6": 1,
                    "data1": 1,
                    "data1_2": 1,
                    "first_param_value2": 1,
                    "index1": 1,
                    "len1": 2,
                    "length1": 7,
                    "local_var1": 1,
                    "long_var6": 1,
                    "long_var_1": 1,
                    "source_int": 1,
                    "str_len1": 1,
                    "string_array1_length": 1,
                    "temp1": 1,
                    "value1_1": 1,
                    "var1": 4,
                    "var6": 3,
                    "var_1": 1,
                    "variable1": 1
                },
                "lVar7": {
                    "arr1_var7": 1,
                    "data2": 1,
                    "first_param_deref_value1": 1,
                    "index1": 1,
                    "index2": 1,
                    "len2": 2,
                    "length2": 6,
                    "local_var2": 1,
                    "long_var7": 1,
                    "long_var_2": 1,
                    "str1_ptr": 1,
                    "str_len2": 1,
                    "string_array1_type": 1,
                    "target_int": 1,
                    "temp2": 1,
                    "value2_1": 1,
                    "var2": 4,
                    "var7": 3,
                    "var_2": 1,
                    "variable2": 1
                },
                "lVar8": {
                    "arr2_var7": 1,
                    "data3": 1,
                    "index2": 1,
                    "index3": 1,
                    "len3": 2,
                    "length3": 6,
                    "local_var3": 1,
                    "long_var8": 1,
                    "long_var_3": 1,
                    "second_param_deref_value1": 1,
                    "source_long": 1,
                    "str2_ptr": 1,
                    "str_len3": 1,
                    "string_array2_type": 1,
                    "temp3": 1,
                    "value2_2": 1,
                    "var3": 4,
                    "var8": 3,
                    "var_3": 1,
                    "variable3": 1
                },
                "local_48": {
                    "array2_prev": 1,
                    "current_target_ptr": 1,
                    "local_48": 1,
                    "local_array2": 3,
                    "local_array_3": 1,
                    "local_array_pointer2": 1,
                    "local_pointer2": 1,
                    "local_pointer3": 2,
                    "local_ptr": 1,
                    "local_ptr3": 2,
                    "local_ptr_3": 1,
                    "local_ptr_array2": 1,
                    "local_ptr_list2": 1,
                    "local_var": 1,
                    "local_var2": 1,
                    "local_var3": 1,
                    "pointer_value6": 1,
                    "ptr_data2": 1,
                    "ptr_list3": 1,
                    "second_param_temp": 1,
                    "stack_ptr2": 1,
                    "temp_data_ptr4": 1,
                    "temp_ptr3": 1,
                    "temp_var2": 1,
                    "temp_var6": 1
                },
                "local_58": {
                    "head": 1,
                    "linked_list_head": 1,
                    "linked_list_ptr": 1,
                    "list_head": 1,
                    "list_ptr": 1,
                    "local_pointer": 1,
                    "local_pointer2": 2,
                    "local_pointer_to_function_result": 1,
                    "local_ptr": 2,
                    "local_ptr2": 3,
                    "local_ptr_1": 1,
                    "local_ptr_array": 2,
                    "local_ptr_undefined_var1": 1,
                    "local_undef8_ptr": 1,
                    "local_var2": 1,
                    "pointer_array": 1,
                    "ptr10": 1,
                    "ptr6": 1,
                    "ptr_arr1": 1,
                    "ptr_hashes_list": 1,
                    "ptr_list": 3,
                    "ptr_to_array_list": 1,
                    "ptrptr5": 1,
                    "undefined8_pointer3": 1
                },
                "local_70": {
                    "array2_prev_ptr": 1,
                    "compare_str_ptr_array": 1,
                    "first_param_traversal": 1,
                    "local_arr": 1,
                    "local_array1": 4,
                    "local_array_1": 1,
                    "local_array_pointer": 1,
                    "local_pointer": 1,
                    "local_pointer1": 2,
                    "local_ptr": 1,
                    "local_ptr1": 3,
                    "local_ptr_array": 1,
                    "local_ptr_list1": 1,
                    "local_var1": 1,
                    "pointer_value4": 1,
                    "ptr4_val": 1,
                    "ptr9": 1,
                    "ptr_arr2": 2,
                    "ptr_data2": 1,
                    "ptr_list2": 1,
                    "ptrptr4": 1,
                    "temp_arr": 1,
                    "temp_data_ptr2": 1,
                    "temp_ptr2": 1
                },
                "param_1": {
                    "arg1": 3,
                    "base_address": 1,
                    "data_structure": 1,
                    "func_param1": 1,
                    "function_data": 1,
                    "input": 4,
                    "input_param1": 1,
                    "input_parameter": 1,
                    "param": 3,
                    "param1": 8,
                    "param_1": 5,
                    "param_ptr": 1,
                    "value": 1
                },
                "param_2": {
                    "arr1": 5,
                    "array1": 8,
                    "array_1": 1,
                    "data1": 5,
                    "data1_ptr": 1,
                    "first_param": 1,
                    "input1": 2,
                    "input_1": 1,
                    "list1": 2,
                    "source": 1,
                    "value1": 3,
                    "values1": 1
                },
                "param_3": {
                    "arr2": 5,
                    "array2": 8,
                    "array_2": 1,
                    "data2": 5,
                    "data2_ptr": 1,
                    "input2": 2,
                    "input_2": 1,
                    "list2": 2,
                    "second_param": 1,
                    "target": 1,
                    "value2": 3,
                    "values2": 1
                },
                "pcVar10": {
                    "char2": 1,
                    "char_pointer2": 2,
                    "char_ptr2": 7,
                    "char_ptr4": 1,
                    "char_var_2": 1,
                    "pointer2": 1,
                    "pointer_to_char4": 1,
                    "ptr2": 2,
                    "ptr_char2": 3,
                    "ptr_char_2": 1,
                    "second_param_deref_deref_value1": 1,
                    "source_char_ptr": 1,
                    "str2": 8,
                    "string2": 1
                },
                "pcVar9": {
                    "char1": 1,
                    "char_pointer1": 2,
                    "char_ptr1": 7,
                    "char_ptr3": 1,
                    "char_var_1": 1,
                    "first_param_deref_deref_value1": 1,
                    "pointer1": 1,
                    "pointer_to_char3": 1,
                    "ptr1": 2,
                    "ptr_char1": 3,
                    "ptr_char_1": 1,
                    "str1": 8,
                    "string1": 1,
                    "target_char_ptr": 1
                },
                "plStack_50": {
                    "arr1_ptr3": 1,
                    "array1_prev": 1,
                    "array3": 1,
                    "current_source_ptr": 1,
                    "first_param_temp": 1,
                    "local_array_2": 1,
                    "local_ptr_2": 1,
                    "local_var1": 1,
                    "long_pointer1": 1,
                    "pl_stack": 3,
                    "pointer_on_stack": 1,
                    "pointer_stack": 1,
                    "pointer_value5": 1,
                    "ptr_data1": 1,
                    "ptr_stack": 1,
                    "stack_array": 2,
                    "stack_array_pointer": 1,
                    "stack_list": 1,
                    "stack_ptr": 5,
                    "stack_ptr_list1": 1,
                    "temp_data_ptr3": 1,
                    "temp_stack_var": 1,
                    "temp_var": 1
                },
                "plVar18": {
                    "arr1_ptr": 2,
                    "arr_ptr1": 1,
                    "array1": 1,
                    "array1_ptr": 2,
                    "array3": 1,
                    "array_ptr1": 1,
                    "data1": 1,
                    "first_param_deref_value3": 1,
                    "inner_array1": 1,
                    "input1": 1,
                    "long_ptr_1": 1,
                    "long_var1": 1,
                    "pl_array1": 1,
                    "pointer1": 1,
                    "pointer_value1": 1,
                    "ptr1": 4,
                    "ptr6": 1,
                    "ptr_array1": 1,
                    "ptr_array_1": 1,
                    "ptr_data1": 1,
                    "ptr_list3": 1,
                    "ptr_value1": 1,
                    "source_ptr": 1,
                    "temp_list4": 1,
                    "temp_pointer": 1,
                    "temp_var1": 1
                },
                "plVar19": {
                    "compare_ptr": 1
                },
                "plVar20": {
                    "arr2_ptr": 2,
                    "arr_ptr2": 1,
                    "array2": 1,
                    "array2_ptr": 1,
                    "array2_ptr2": 1,
                    "array4": 1,
                    "array_ptr2": 1,
                    "data2": 1,
                    "first_param_deref_deref_value3": 1,
                    "inner_array2": 1,
                    "long_ptr_2": 1,
                    "long_var2": 1,
                    "pl_array2": 1,
                    "pointer2": 1,
                    "pointer4": 1,
                    "pointer_value2": 1,
                    "ptr": 1,
                    "ptr2": 2,
                    "ptr3": 1,
                    "ptr5": 1,
                    "ptr7": 1,
                    "ptr_array2": 1,
                    "ptr_array_2": 1,
                    "ptr_data2": 1,
                    "ptr_list4": 1,
                    "target_ptr": 1,
                    "temp_list2": 1,
                    "temp_var3": 2
                },
                "plVar21": {
                    "arr1_ptr2": 2,
                    "array1_ptr2": 1,
                    "array3": 1,
                    "array5": 1,
                    "array_ptr3": 1,
                    "compare_ptr_array": 1,
                    "inner_array3": 1,
                    "input2": 1,
                    "long_ptr_3": 1,
                    "long_var3": 1,
                    "pl_temp1": 1,
                    "pointer3": 1,
                    "pointer5": 1,
                    "pointer_value3": 1,
                    "ptr1": 1,
                    "ptr3": 1,
                    "ptr4": 1,
                    "ptr6": 1,
                    "ptr8": 1,
                    "ptr_arr1": 1,
                    "ptr_array3": 1,
                    "ptr_array_3": 1,
                    "ptr_data1": 1,
                    "ptr_list5": 1,
                    "ptr_value3": 1,
                    "second_param_deref_deref_value3": 1,
                    "temp_data_ptr": 1,
                    "temp_list3": 1,
                    "temp_ptr1": 1,
                    "temp_var4": 1
                },
                "ppcVar4": {
                    "char_array1": 1,
                    "char_ptr1": 1,
                    "first_param_deref_deref": 1,
                    "pointer_pointer2": 1,
                    "pointer_pointer_value2": 1,
                    "pointer_to_char1": 2,
                    "ppc_array1": 1,
                    "ptr2": 1,
                    "ptr3": 1,
                    "ptr_char_arr1": 1,
                    "ptr_ptr2": 2,
                    "ptr_ptr_2": 1,
                    "ptr_ptr_char1": 3,
                    "ptr_ptr_char_1": 1,
                    "ptr_ptr_str1": 1,
                    "ptr_str1": 2,
                    "ptr_string1": 1,
                    "ptr_to_char1": 2,
                    "ptr_to_ptr_char_array1": 1,
                    "ptr_tochar_arr1": 1,
                    "ptrptr2": 2,
                    "str1_ptr_ptr": 1,
                    "string_array1": 1,
                    "target_str_ptr": 1
                },
                "ppcVar5": {
                    "char_array2": 1,
                    "char_ptr2": 1,
                    "pointer_pointer3": 1,
                    "pointer_pointer_value3": 1,
                    "pointer_to_char2": 2,
                    "ppc_array2": 1,
                    "ptr3": 1,
                    "ptr4": 1,
                    "ptr_char_arr2": 1,
                    "ptr_ptr3": 2,
                    "ptr_ptr_3": 1,
                    "ptr_ptr_char2": 3,
                    "ptr_ptr_char_2": 1,
                    "ptr_ptr_str2": 1,
                    "ptr_str2": 2,
                    "ptr_string2": 1,
                    "ptr_to_char2": 2,
                    "ptr_to_ptr_char_array2": 1,
                    "ptr_tochar_arr2": 1,
                    "ptrptr3": 2,
                    "second_param_deref_deref": 1,
                    "source_str_ptr": 1,
                    "str2_ptr_ptr": 1,
                    "string_array2": 1
                },
                "pplVar3": {
                    "array2_ptr": 1,
                    "data1_ptr_ptr": 1,
                    "first_param_deref": 1,
                    "pointer_pointer1": 1,
                    "pointer_pointer_value1": 1,
                    "pointer_to_pointer1": 2,
                    "ppl_array1": 1,
                    "ptr1": 2,
                    "ptr2": 1,
                    "ptr_arr1": 2,
                    "ptr_array1": 1,
                    "ptr_list1": 2,
                    "ptr_ptr1": 2,
                    "ptr_ptr_1": 1,
                    "ptr_ptr_arr1": 1,
                    "ptr_ptr_array1": 2,
                    "ptr_ptr_array_1": 1,
                    "ptr_ptr_data1": 1,
                    "ptr_to_array1": 1,
                    "ptr_to_ptr1": 1,
                    "ptr_to_ptr_arr1": 1,
                    "ptr_to_ptr_array1": 1,
                    "ptrptr1": 2,
                    "source_ptr_ptr": 1
                },
                "puVar16": {
                    "first_param_deref_deref_value2": 1,
                    "pointer1": 3,
                    "pointer_to_function_result1": 1,
                    "ptr": 1,
                    "ptr1": 10,
                    "ptr2": 1,
                    "ptr3": 1,
                    "ptr4": 1,
                    "ptr_1": 1,
                    "ptr_array": 1,
                    "ptr_comp1": 1,
                    "ptr_data1": 1,
                    "ptr_undefined_var1": 1,
                    "ptr_value_1": 1,
                    "ptr_var1": 1,
                    "result_undef8_ptr1": 1,
                    "source_ptr_ptr_array": 1,
                    "u_ptr1": 1,
                    "undefined8_pointer1": 1,
                    "undefined_pointer1": 1
                },
                "puVar17": {
                    "char_ptr_array": 1,
                    "pointer2": 3,
                    "pointer_to_function_result2": 1,
                    "ptr2": 11,
                    "ptr4": 1,
                    "ptr5": 2,
                    "ptr_2": 1,
                    "ptr_comp2": 1,
                    "ptr_data2": 1,
                    "ptr_undefined_var2": 1,
                    "ptr_value_2": 1,
                    "ptr_var2": 1,
                    "result_undef8_ptr2": 1,
                    "second_param_deref_deref_value2": 1,
                    "target_ptr_ptr_array": 1,
                    "u_ptr2": 1,
                    "undefined8_pointer2": 1,
                    "undefined_pointer2": 1
                },
                "uVar1": {
                    "array1_type": 1,
                    "data_type1": 5,
                    "first_param_value": 1,
                    "source_type": 1,
                    "tag1": 1,
                    "type1": 7,
                    "type_1": 1,
                    "val1": 5,
                    "value1": 6,
                    "value_1": 1,
                    "var1": 2
                },
                "uVar14": {
                    "comp1": 1,
                    "converted1": 2,
                    "converted_char_ptr1": 1,
                    "converted_data1": 2,
                    "converted_input1": 1,
                    "converted_value1": 2,
                    "converted_var1": 1,
                    "encoded_str1": 1,
                    "first_param_deref_value2": 1,
                    "fun_result1": 1,
                    "function_result1": 1,
                    "hash1": 3,
                    "hex_value1": 2,
                    "param2_as_int": 1,
                    "result_undef8_1": 1,
                    "str1": 1,
                    "temp4": 1,
                    "u_var1": 1,
                    "undefined8_1": 2,
                    "undefined8_value1": 1,
                    "undefined_var1": 2,
                    "value_3": 1,
                    "var4": 1
                },
                "uVar15": {
                    "comp2": 1,
                    "converted2": 2,
                    "converted_char_ptr2": 1,
                    "converted_data2": 2,
                    "converted_input2": 1,
                    "converted_value2": 2,
                    "converted_var2": 1,
                    "encoded_str2": 1,
                    "fun_result2": 1,
                    "function_result2": 1,
                    "hash2": 3,
                    "hex_value2": 2,
                    "param3_as_int": 1,
                    "result_undef8_2": 1,
                    "second_param_deref_value2": 1,
                    "str2": 1,
                    "temp5": 1,
                    "u_var2": 1,
                    "undefined8_2": 2,
                    "undefined8_value2": 1,
                    "undefined_var2": 2,
                    "value_4": 1,
                    "var5": 1
                },
                "uVar2": {
                    "array2_type": 1,
                    "data_type2": 5,
                    "second_param_value": 1,
                    "tag2": 1,
                    "target_type": 1,
                    "type2": 7,
                    "type_2": 1,
                    "val2": 5,
                    "value2": 6,
                    "value_2": 1,
                    "var2": 2
                }
            },
            "called": [
                "FUN_00112b6e",
                "FUN_0010922b",
                "strcmp",
                "abort"
            ],
            "calling": [
                "FUN_0010c7a0",
                "FUN_0010922b"
            ],
            "code": "\nbyte check_equality_0010922b(long param1,long *array1,long *array2)\n\n{\n  uint type1;\n  uint type2;\n  long **ptr_ptr1;\n  char **ptr_ptr_char1;\n  char **ptr_ptr_char2;\n  long length1;\n  long length2;\n  long length3;\n  char *str1;\n  char *str2;\n  char result;\n  byte is_equal;\n  int comparison_result;\n  undefined8 hash1;\n  undefined8 hash2;\n  undefined8 *ptr1;\n  undefined8 *ptr2;\n  long *ptr1;\n  long offset;\n  long *arr2_ptr;\n  long *arr1_ptr2;\n  long offset;\n  long *local_array1;\n  undefined8 *ptr_list;\n  long *stack_ptr;\n  long *local_array2;\n  \n  ptr1 = array2;\n  if (array1 == (long *)0x0) {\nLAB_00109241:\n    return array2 == (long *)0x0;\n  }\njoined_r0x00109255:\n  if (ptr1 == (long *)0x0) {\n    return false;\n  }\n  while( true ) {\n    type1 = *(uint *)array1;\n    if (type1 == 1) goto code_r0x00109263;\n    while (type2 = *(uint *)array2, type2 == 1) {\n      array2 = **(long ***)array2[2];\n      if (array2 == (long *)0x0) {\n        return false;\n      }\n    }\n    if (array1 == array2) {\n      return true;\n    }\n    if (type1 != 0x16) break;\n    if (type2 != 0x17) goto LAB_001092cb;\n    array1 = *(long **)(array1[2] + 8);\n    if (array1 == (long *)0x0) goto LAB_00109241;\n  }\n  if ((type1 == 0x17) && (type2 == 0x16)) {\n    array2 = *(long **)(array2[2] + 8);\n    ptr1 = array2;\n    goto joined_r0x00109255;\n  }\nLAB_001092cb:\n  if (*array1 != *array2) {\n    return false;\n  }\n  if (type1 == 3) {\n    return *(char *)(array1 + 2) == *(char *)(array2 + 2);\n  }\n  if (type1 < 4) {\n    if (type1 == 2) {\n      return true;\n    }\n  }\n  else if (type1 - 4 < 3) {\n    return true;\n  }\n  ptr_list = *(undefined8 **)(param1 + 0x58);\n  for (ptr2 = ptr_list; ptr2 != (undefined8 *)0x0; ptr2 = (undefined8 *)*ptr2) {\n    if (((long *)ptr2[1] == array1) && ((long *)ptr2[2] == array2)) {\n      return true;\n    }\n  }\n  *(undefined8 ***)(param1 + 0x58) = &ptr_list;\n  stack_ptr = array1;\n  local_array2 = array2;\n  switch(type1) {\n  case 7:\n  case 8:\n  case 9:\n  case 10:\n    ptr1 = (long *)array1[2];\n    ptr_ptr1 = (long **)array2[2];\n    if (ptr1 == (long *)0x0) {\n      is_equal = ptr_ptr1 == (long **)0x0;\n      goto LAB_001099c4;\n    }\n    if (ptr_ptr1 == (long **)0x0) goto LAB_00109382;\n    if ((*(uint *)(param1 + 0x38) < *(uint *)((long)ptr1 + 0xc)) &&\n       (*(uint *)((long)ptr1 + 0xc) == *(uint *)((long)ptr_ptr1 + 0xc))) goto LAB_001097af;\n    ptr2 = (undefined8 *)*ptr1;\n    local_array1 = *ptr_ptr1;\n    if (((ptr2 == (undefined8 *)0x0) == (local_array1 == (long *)0x0)) &&\n       ((((ptr1[2] == 0) == (ptr_ptr1[2] == (long *)0x0) &&\n         ((ptr1[3] == 0) == (ptr_ptr1[3] == (long *)0x0))) &&\n        ((ptr1[4] == 0) == (ptr_ptr1[4] == (long *)0x0))))) {\n      if (ptr2 == (undefined8 *)0x0) {\nLAB_001093fd:\n        if ((ptr1[4] != 0) &&\n           (result = check_equality_0010922b(param1,ptr1[4],ptr_ptr1[4]), result == '\\0'))\n        goto LAB_00109382;\n        arr1_ptr2 = (long *)ptr1[2];\n        if (arr1_ptr2 == (long *)0x0) {\nLAB_00109540:\n          ptr2 = (undefined8 *)ptr1[3];\n          if (ptr2 == (undefined8 *)0x0) goto LAB_001097af;\n          ptr1 = ptr_ptr1[3];\n          while( true ) {\n            ptr_ptr_char2 = (char **)*ptr2;\n            if (ptr_ptr_char2 == (char **)0x0) {\n              is_equal = *ptr1 == 0;\n              goto LAB_001099c4;\n            }\n            ptr_ptr_char1 = (char **)*ptr1;\n            if (ptr_ptr_char1 == (char **)0x0) break;\n            if ((**ptr_ptr_char2 != **ptr_ptr_char1) || (comparison_result = strcmp(*ptr_ptr_char2,*ptr_ptr_char1), comparison_result != 0))\n            break;\n            str1 = ptr_ptr_char2[1];\n            str2 = ptr_ptr_char1[1];\n            if ((str1 == (char *)0x0) != (str2 == (char *)0x0)) break;\n            if (str1 != (char *)0x0) {\n              offset = 0;\n              while( true ) {\n                ptr_ptr_char2 = *(char ***)(str1 + offset);\n                ptr_ptr_char1 = *(char ***)(str2 + offset);\n                if (ptr_ptr_char2 == (char **)0x0) break;\n                if (ptr_ptr_char1 == (char **)0x0) goto LAB_00109382;\n                if ((((**ptr_ptr_char2 != **ptr_ptr_char1) ||\n                     ((((ulong)ptr_ptr_char2[2] ^ (ulong)ptr_ptr_char1[2]) & 0xffffffffffff) != 0)) ||\n                    ((ptr_ptr_char2[3] != ptr_ptr_char1[3] ||\n                     ((((ptr_ptr_char2[4] == (char *)0x0) != (ptr_ptr_char1[4] == (char *)0x0) ||\n                       (comparison_result = strcmp(*ptr_ptr_char2,*ptr_ptr_char1), comparison_result != 0)) ||\n                      (result = check_equality_0010922b(param1,ptr_ptr_char2[1],ptr_ptr_char1[1]), result == '\\0')))))) ||\n                   ((ptr_ptr_char2[4] != (char *)0x0 &&\n                    (result = check_equality_0010922b(param1,ptr_ptr_char2[4],ptr_ptr_char1[4]), result == '\\0'))))\n                goto LAB_00109382;\n                offset = offset + 8;\n              }\n              if (ptr_ptr_char1 == (char **)0x0) goto LAB_001095f1;\n              break;\n            }\nLAB_001095f1:\n            ptr2 = ptr2 + 1;\n            ptr1 = ptr1 + 1;\n          }\n        }\n        else {\n          arr2_ptr = ptr_ptr1[2];\n          for (; ptr2 = (undefined8 *)*arr1_ptr2, ptr2 != (undefined8 *)0x0;\n              arr1_ptr2 = arr1_ptr2 + 1) {\n            ptr1 = (undefined8 *)*arr2_ptr;\n            if ((((ptr1 == (undefined8 *)0x0) ||\n                 (((ptr2[1] ^ ptr1[1]) & 0xffffffffff) != 0)) ||\n                (*(int *)(ptr2 + 2) != *(int *)(ptr1 + 2))) ||\n               (result = check_equality_0010922b(param1,*ptr2,*ptr1), result == '\\0'))\n            goto LAB_00109382;\n            arr2_ptr = arr2_ptr + 1;\n          }\n          if (*arr2_ptr == 0) goto LAB_00109540;\n        }\n      }\n      else {\n        for (; ptr_ptr_char2 = (char **)*ptr2, ptr_ptr_char2 != (char **)0x0; ptr2 = ptr2 + 1) {\n          ptr_ptr_char1 = (char **)*local_array1;\n          if (ptr_ptr_char1 == (char **)0x0) goto LAB_00109382;\n          str1 = *ptr_ptr_char1;\n          str2 = *ptr_ptr_char2;\n          if ((*str2 != *str1) ||\n             ((((ulong)ptr_ptr_char2[2] ^ (ulong)ptr_ptr_char1[2]) & 0xffffffffff) != 0)) goto LAB_00109382;\n          if (*(char *)((long)ptr_ptr_char2 + 0x14) == '\\0') {\n            if (ptr_ptr_char2[3] == ptr_ptr_char1[3]) goto LAB_00109480;\n            goto LAB_00109382;\n          }\n          comparison_result = strcmp(ptr_ptr_char2[3],ptr_ptr_char1[3]);\n          if (comparison_result != 0) goto LAB_00109382;\nLAB_00109480:\n          comparison_result = strcmp(str2,str1);\n          if (((comparison_result != 0) || (ptr_ptr_char2[1] == (char *)0x0)) || (ptr_ptr_char1[1] == (char *)0x0))\n          goto LAB_00109382;\n          hash1 = FUN_00112b6e(ptr_ptr_char1[1],0);\n          hash2 = FUN_00112b6e(ptr_ptr_char2[1],0);\n          result = check_equality_0010922b(param1,hash2,hash1);\n          if (result == '\\0') goto LAB_00109382;\n          local_array1 = local_array1 + 1;\n        }\n        if (*local_array1 == 0) goto LAB_001093fd;\n      }\n    }\n    goto LAB_00109382;\n  case 0xb:\n    ptr1 = (long *)array1[2];\n    arr1_ptr2 = (long *)array2[2];\n    if (ptr1 == (long *)0x0) {\n      is_equal = arr1_ptr2 == (long *)0x0;\n      goto LAB_001099c4;\n    }\n    if (arr1_ptr2 == (long *)0x0) goto LAB_00109382;\n    offset = *ptr1;\n    length1 = *arr1_ptr2;\n    offset = 0;\n    length2 = ptr1[1];\n    length3 = arr1_ptr2[1];\n    do {\n      str1 = *(char **)(offset + offset);\n      if (str1 == (char *)0x0) {\n        is_equal = *(long *)(length1 + offset) == 0;\n        goto LAB_001099c1;\n      }\n      str2 = *(char **)(length1 + offset);\n      if (((str2 == (char *)0x0) || (*str1 != *str2)) ||\n         (*(long *)(length2 + offset) != *(long *)(length3 + offset))) break;\n      comparison_result = strcmp(str1,str2);\n      offset = offset + 8;\n    } while (comparison_result == 0);\nLAB_00109964:\n    is_equal = 0;\n    break;\n  case 0xc:\n  case 0xe:\n  case 0x14:\n  case 0x15:\n    is_equal = check_equality_0010922b(param1,array1[2],array2[2]);\n    goto LAB_001099c4;\n  case 0xd:\n    if ((*(char *)((undefined8 *)array1[2] + 2) == *(char *)((undefined8 *)array2[2] + 2)) &&\n       (result = check_equality_0010922b(param1,*(undefined8 *)array1[2],*(undefined8 *)array2[2]),\n       result != '\\0')) {\n      ptr1 = *(long **)(array1[2] + 8);\n      arr1_ptr2 = *(long **)(array2[2] + 8);\n      if ((ptr1 == (long *)0x0) == (arr1_ptr2 == (long *)0x0)) {\n        if (ptr1 == (long *)0x0) goto LAB_001097af;\n        while (((*ptr1 != 0 && (*arr1_ptr2 != 0)) &&\n               (result = check_equality_0010922b(param1), result != '\\0'))) {\n          ptr1 = ptr1 + 1;\n          arr1_ptr2 = arr1_ptr2 + 1;\n        }\nLAB_0010995d:\n        if (*ptr1 != 0) goto LAB_00109964;\n        is_equal = *arr1_ptr2 == 0;\n        break;\n      }\n    }\n    goto LAB_00109382;\n  case 0xf:\n    ptr2 = (undefined8 *)array2[2];\n    ptr1 = (undefined8 *)array1[2];\n    is_equal = 0;\n    if ((ptr1[1] == ptr2[1]) && (ptr1[2] == ptr2[2])) {\nLAB_00109862:\n      is_equal = check_equality_0010922b(param1,*ptr1,*ptr2);\n    }\n    break;\n  case 0x10:\n    ptr2 = (undefined8 *)array2[2];\n    ptr1 = (undefined8 *)array1[2];\n    is_equal = 0;\n    if (((ptr1[2] == ptr2[2]) && (ptr1[3] == ptr2[3])) &&\n       (*(char *)(ptr1 + 4) == *(char *)(ptr2 + 4))) goto LAB_00109862;\n    break;\n  case 0x11:\n    ptr2 = (undefined8 *)array2[2];\n    ptr1 = (undefined8 *)array1[2];\n    is_equal = 0;\n    if (*(char *)(ptr1 + 1) == *(char *)(ptr2 + 1)) goto LAB_00109862;\n    break;\n  case 0x12:\n    result = check_equality_0010922b(param1,*(undefined8 *)array1[2],*(undefined8 *)array2[2]);\n    is_equal = 0;\n    if (result != '\\0') {\n      is_equal = check_equality_0010922b(param1,*(undefined8 *)(array1[2] + 8),*(undefined8 *)(array2[2] + 8))\n      ;\n    }\n    break;\n  case 0x13:\n    if (((*(char *)((undefined8 *)array1[2] + 3) == *(char *)((undefined8 *)array2[2] + 3)) &&\n        (result = check_equality_0010922b(param1,*(undefined8 *)array1[2],*(undefined8 *)array2[2]),\n        result != '\\0')) &&\n       (result = check_equality_0010922b(param1,*(undefined8 *)(array1[2] + 8),\n                              *(undefined8 *)(array2[2] + 8)), result != '\\0')) {\n      ptr1 = *(long **)(array1[2] + 0x10);\n      arr1_ptr2 = *(long **)(array2[2] + 0x10);\n      if ((ptr1 == (long *)0x0) == (arr1_ptr2 == (long *)0x0)) {\n        if (ptr1 != (long *)0x0) {\n          while (((*ptr1 != 0 && (*arr1_ptr2 != 0)) &&\n                 (result = check_equality_0010922b(param1), result != '\\0'))) {\n            ptr1 = ptr1 + 1;\n            arr1_ptr2 = arr1_ptr2 + 1;\n          }\n          goto LAB_0010995d;\n        }\nLAB_001097af:\n        is_equal = 1;\n        goto LAB_001099c4;\n      }\n    }\nLAB_00109382:\n    is_equal = 0;\n    goto LAB_001099c4;\n  case 0x16:\n  case 0x17:\n    ptr1 = (long *)array2[2];\n    arr1_ptr2 = (long *)array1[2];\n    comparison_result = strcmp(*(char **)(*arr1_ptr2 + 8),*(char **)(*ptr1 + 8));\n    is_equal = 0;\n    if (comparison_result == 0) {\n      is_equal = check_equality_0010922b(param1,arr1_ptr2[1],ptr1[1]);\n    }\n    break;\n  default:\n                    \n    abort();\n  }\nLAB_001099c1:\n  is_equal = is_equal & 1;\nLAB_001099c4:\n  *(undefined8 **)(param1 + 0x58) = ptr_list;\n  return is_equal;\ncode_r0x00109263:\n  array1 = **(long ***)array1[2];\n  ptr1 = array1;\n  goto joined_r0x00109255;\n}\n\n",
            "current_name": "check_equality_0010922b",
            "entrypoint": "0x0010922b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010922b": "check_equality_0010922b",
                "bVar12": "is_equal",
                "cVar11": "result",
                "iVar13": "comparison_result",
                "lVar18": "temp_length",
                "lVar19": "offset",
                "lVar22": "offset",
                "lVar6": "length1",
                "lVar7": "length2",
                "lVar8": "length3",
                "local_48": "local_array2",
                "local_58": "ptr_list",
                "local_70": "local_array1",
                "param_1": "param1",
                "param_2": "array1",
                "param_3": "array2",
                "pcVar10": "str2",
                "pcVar9": "str1",
                "plStack_50": "stack_ptr",
                "plVar18": "ptr1",
                "plVar20": "arr2_ptr",
                "plVar21": "arr1_ptr2",
                "ppcVar4": "ptr_ptr_char1",
                "ppcVar5": "ptr_ptr_char2",
                "pplVar3": "ptr_ptr1",
                "puVar16": "ptr1",
                "puVar17": "ptr2",
                "uVar1": "type1",
                "uVar14": "hash1",
                "uVar15": "hash2",
                "uVar2": "type2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00109a0b": {
            "additional_data": {
                "FUN_00109a0b": {
                    "copy_and_null_terminate": 15,
                    "copy_and_null_terminate_data": 1,
                    "copy_and_null_terminate_string": 5,
                    "copy_and_terminate_string": 2,
                    "copy_and_zero_terminate": 1,
                    "copy_and_zero_terminate_string": 1,
                    "copy_string": 2,
                    "copy_string_and_null_terminate": 1,
                    "copy_string_with_null_terminator": 2,
                    "duplicate_string": 1
                },
                "bVar4": {
                    "byte_flag": 1,
                    "byte_offset": 1,
                    "byte_value": 1,
                    "counter": 1,
                    "direction": 1,
                    "flag": 1,
                    "flip_flag": 1,
                    "increment": 5,
                    "index": 1,
                    "is_neg": 1,
                    "is_negative_offset": 1,
                    "offset": 15,
                    "toggle": 1
                },
                "lVar2": {
                    "count": 4,
                    "counter": 4,
                    "current_index": 1,
                    "i": 7,
                    "index": 7,
                    "iteration_count": 1,
                    "length": 1,
                    "length_counter": 1,
                    "remaining_length": 4,
                    "remaining_size": 1
                },
                "param_1": {
                    "data": 1,
                    "source": 20,
                    "source_string": 10
                },
                "param_2": {
                    "length": 18,
                    "size": 5,
                    "source_length": 2,
                    "source_string_length": 2,
                    "string_length": 4
                },
                "puVar1": {
                    "buffer": 3,
                    "copied_data": 1,
                    "copied_string": 7,
                    "copy": 1,
                    "dest": 1,
                    "destination": 14,
                    "destination_string": 1,
                    "duplicate": 1,
                    "new_string": 2
                },
                "puVar3": {
                    "copied_string_index": 1,
                    "current_character": 1,
                    "current_destination": 2,
                    "dest": 2,
                    "dest_pointer": 3,
                    "dest_ptr": 9,
                    "dest_string": 1,
                    "destination": 6,
                    "destination_iterator": 1,
                    "destination_ptr": 1,
                    "destination_string": 3,
                    "target_string": 1
                }
            },
            "called": [
                "xmalloc"
            ],
            "calling": [
                "FUN_0010d559",
                "FUN_0010ee3f",
                "FUN_0010d21c",
                "FUN_0010c95e",
                "FUN_0011173a",
                "FUN_0010afd5"
            ],
            "code": "\nvoid copy_string_and_null_terminate_00109a0b(undefined *source,int length)\n\n{\n  undefined *destination;\n  long i;\n  undefined *dest_ptr;\n  byte offset;\n  \n  offset = 0;\n  destination = (undefined *)xmalloc((long)(length + 1));\n  dest_ptr = destination;\n  for (i = (long)length; i != 0; i = i + -1) {\n    *dest_ptr = *source;\n    source = source + (ulong)offset * -2 + 1;\n    dest_ptr = dest_ptr + (ulong)offset * -2 + 1;\n  }\n  destination[length] = 0;\n  return;\n}\n\n",
            "current_name": "copy_string_and_null_terminate_00109a0b",
            "entrypoint": "0x00109a0b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00109a0b": "copy_string_and_null_terminate_00109a0b",
                "bVar4": "offset",
                "lVar2": "i",
                "param_1": "source",
                "param_2": "length",
                "puVar1": "destination",
                "puVar3": "dest_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00109a32": {
            "additional_data": {
                "FUN_00109a32": {
                    "convert_string_to_integer": 1,
                    "convert_string_to_unsigned_long": 2,
                    "parse_and_convert": 1,
                    "parse_and_convert_string": 1,
                    "parse_and_convert_string_to_ulong": 2,
                    "parse_and_validate_numeric_input": 1,
                    "parse_input": 3,
                    "parse_integer": 1,
                    "parse_number": 2,
                    "parse_number_and_set_flag": 1,
                    "parse_number_from_string": 1,
                    "parse_number_with_error_handling": 1,
                    "parse_numeric_input": 3,
                    "parse_numeric_string": 3,
                    "parse_numeric_value": 2,
                    "parse_unsigned_integer": 2,
                    "parse_unsigned_long": 1,
                    "parse_unsigned_long_from_string": 2,
                    "parse_unsigned_number": 1
                },
                "__nptr": {
                    "current_char": 15,
                    "current_char_ptr": 2,
                    "current_pos": 1,
                    "current_position": 1,
                    "current_ptr": 1,
                    "current_string": 2,
                    "input_string": 1,
                    "number_str": 1,
                    "number_string": 2,
                    "numeric_string": 2,
                    "string": 1,
                    "string_pointer": 1,
                    "string_ptr": 1
                },
                "auVar4": {
                    "result": 19,
                    "result_variable": 1,
                    "return_value": 11
                },
                "param_1": {
                    "data_pointer": 1,
                    "input_str": 2,
                    "input_str_ptr": 1,
                    "input_string": 17,
                    "input_string_ptr": 1,
                    "input_strings": 1,
                    "str_address": 1,
                    "string": 1,
                    "string_address": 1,
                    "string_pointer": 1,
                    "string_ptr": 4
                },
                "param_2": {
                    "error_flag": 7,
                    "error_flag_ptr": 5,
                    "is_overflow": 6,
                    "is_overflow_ptr": 1,
                    "numeric_overflow": 1,
                    "numeric_overflow_flag": 2,
                    "out_of_range": 2,
                    "out_of_range_flag": 2,
                    "out_of_range_indicator": 1,
                    "overflow_flag": 3,
                    "parse_error": 1
                },
                "param_3": {
                    "end_address": 1,
                    "end_of_buffer": 1,
                    "end_of_input": 5,
                    "end_of_input_str": 1,
                    "end_of_str": 2,
                    "end_of_string": 11,
                    "end_ptr": 1,
                    "end_string": 3,
                    "last_valid_char": 1,
                    "limit": 1,
                    "str_end_address": 1,
                    "string_end": 3
                },
                "param_4": {
                    "arg4": 1,
                    "base": 3,
                    "param4": 1,
                    "param_4": 9,
                    "unknown_param": 1,
                    "unknown_param_4": 1,
                    "unused_param": 3,
                    "unused_param1": 1,
                    "unused_param4": 2,
                    "unused_param_1": 3,
                    "unused_param_4": 6
                },
                "param_5": {
                    "arg5": 1,
                    "default_value": 1,
                    "output_value": 1,
                    "overflow_val": 1,
                    "param5": 1,
                    "param_5": 8,
                    "result": 3,
                    "result_param": 1,
                    "undefined_val": 1,
                    "unknown_param_2": 1,
                    "unknown_param_5": 1,
                    "unused_param2": 1,
                    "unused_param5": 2,
                    "unused_param_2": 4,
                    "unused_param_5": 4
                },
                "piVar1": {
                    "errno_pointer": 1,
                    "errno_ptr": 22,
                    "error_code_ptr": 2,
                    "error_indicator_ptr": 1,
                    "error_location_ptr": 2,
                    "error_number": 2,
                    "error_number_ptr": 1
                },
                "uVar2": {
                    "converted_number": 1,
                    "converted_value": 5,
                    "parsed_number": 6,
                    "parsed_value": 14,
                    "result": 5
                },
                "uVar3": {
                    "error_message": 23,
                    "error_msg": 7,
                    "numeric_overflow_msg": 1
                }
            },
            "called": [
                "dcgettext",
                "strtoul",
                "FUN_00108fe8",
                "__errno_location"
            ],
            "calling": [
                "FUN_0010ee3f",
                "FUN_00109ab1"
            ],
            "code": "\nundefined  [16]\nparse_and_validate_numeric_input_00109a32(char **input_string,undefined *error_flag,char *end_of_string,undefined8 param_4,undefined8 param_5)\n\n{\n  char *current_char;\n  int *errno_ptr;\n  ulong parsed_value;\n  undefined8 error_message;\n  undefined result [16];\n  \n  if (error_flag != (undefined *)0x0) {\n    *error_flag = 0;\n  }\n  current_char = *input_string;\n  if ((current_char < end_of_string) && (*current_char != '\\0')) {\n    errno_ptr = __errno_location();\n    *errno_ptr = 0;\n    parsed_value = strtoul(current_char,input_string,0);\n    if ((parsed_value != 0xffffffffffffffff) || (*errno_ptr == 0)) goto LAB_00109aa9;\n    if (error_flag == (undefined *)0x0) {\n      error_message = dcgettext(0,\"numeric overflow\",5);\n      FUN_00108fe8(current_char,error_message);\n    }\n    else {\n      *error_flag = 1;\n    }\n  }\n  parsed_value = 0;\nLAB_00109aa9:\n  result._8_8_ = param_5;\n  result._0_8_ = parsed_value;\n  return result;\n}\n\n",
            "current_name": "parse_and_validate_numeric_input_00109a32",
            "entrypoint": "0x00109a32",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00109a32": "parse_and_validate_numeric_input_00109a32",
                "__nptr": "current_char",
                "auVar4": "result",
                "param_1": "input_string",
                "param_2": "error_flag",
                "param_3": "end_of_string",
                "piVar1": "errno_ptr",
                "uVar2": "parsed_value",
                "uVar3": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00109ab1": {
            "additional_data": {
                "FUN_00108fb9": {
                    "cleanup": 3,
                    "cleanup_string": 1,
                    "free_memory": 1
                },
                "FUN_00109a32": {
                    "parse_argument": 1,
                    "parse_value": 3,
                    "parse_value_from_string": 1
                },
                "FUN_00109ab1": {
                    "extract_and_parse_parameters": 1,
                    "extract_arguments": 1,
                    "extract_function_arguments": 1,
                    "extract_function_params": 1,
                    "extract_values_from_string": 1,
                    "parse_arguments": 3,
                    "parse_function_arguments": 17,
                    "parse_function_parameters": 2,
                    "parse_function_params": 1,
                    "parse_input": 1,
                    "parse_parameters": 1,
                    "parse_params": 1
                },
                "auVar4": {
                    "combined_result": 1,
                    "final_result": 2,
                    "output": 1,
                    "result": 4,
                    "result_array": 2,
                    "result_data": 1,
                    "result_struct": 2,
                    "return_array": 1,
                    "return_data": 1,
                    "return_object": 1,
                    "return_value": 15
                },
                "param_1": {
                    "arg_list": 1,
                    "arg_string": 1,
                    "argument": 1,
                    "argument_data": 1,
                    "arguments": 1,
                    "function_string": 1,
                    "input": 2,
                    "input_pointer": 1,
                    "input_ptr": 2,
                    "input_str": 1,
                    "input_string": 16,
                    "pointer_to_string": 1,
                    "str_ptr": 1,
                    "string": 1
                },
                "param_2": {
                    "arg1": 1,
                    "arg_array": 1,
                    "output": 2,
                    "output_1": 1,
                    "output_arguments": 1,
                    "output_array": 1,
                    "output_data": 1,
                    "output_param": 1,
                    "output_params": 1,
                    "output_pointer": 1,
                    "output_ptr": 3,
                    "output_value": 1,
                    "output_values": 9,
                    "output_vars": 1,
                    "parsed_arguments": 1,
                    "pointer_to_result": 1,
                    "result": 2,
                    "result_values": 1,
                    "value1_ptr": 1
                },
                "param_3": {
                    "additional_param": 1,
                    "arg1": 1,
                    "arg2": 1,
                    "arg_3": 1,
                    "arg_c_str": 1,
                    "argument_3": 1,
                    "auxiliary_data_1": 1,
                    "extra_param": 1,
                    "param1": 1,
                    "param3": 2,
                    "param_3": 16,
                    "param_a": 1,
                    "temp1": 1,
                    "unused_param_3": 1,
                    "unused_parameter": 1
                },
                "param_4": {
                    "arg2": 1,
                    "arg3": 1,
                    "arg_4": 1,
                    "argument_4": 1,
                    "auxiliary_data_2": 1,
                    "param2": 1,
                    "param4": 2,
                    "param_4": 17,
                    "param_b": 1,
                    "temp2": 1,
                    "unused_param1": 2,
                    "unused_param_4": 1,
                    "unused_parameter": 1
                },
                "param_5": {
                    "arg3": 1,
                    "arg4": 1,
                    "arg_5": 1,
                    "argument_5": 1,
                    "auxiliary_data_3": 1,
                    "param3": 1,
                    "param5": 2,
                    "param_5": 17,
                    "param_c": 1,
                    "temp3": 1,
                    "unused_param2": 2,
                    "unused_param_5": 1,
                    "unused_parameter": 1
                },
                "pcVar2": {
                    "current_char": 27,
                    "current_character": 2,
                    "str": 1,
                    "string_pointer": 1
                },
                "uVar1": {
                    "argument1": 1,
                    "function_result": 1,
                    "output_value": 1,
                    "parsed_arg1": 1,
                    "parsed_value": 8,
                    "result": 6,
                    "result1": 3,
                    "result_1": 7,
                    "value1": 2,
                    "value_1": 1
                },
                "uVar3": {
                    "concatenated_data": 1,
                    "concatenated_result": 1,
                    "flag": 1,
                    "modified_value": 1,
                    "result": 7,
                    "result2": 2,
                    "result_2": 6,
                    "return_val": 3,
                    "return_value": 9
                }
            },
            "called": [
                "FUN_00108fb9",
                "FUN_00109a32"
            ],
            "calling": [
                "FUN_0010ee3f"
            ],
            "code": "\nundefined  [16]\nparse_function_arguments_00109ab1(char **input_string,undefined4 *output_values,undefined8 param_3,undefined8 param_4,\n            undefined8 param_5)\n\n{\n  undefined4 parsed_value;\n  char *current_char;\n  undefined8 return_value;\n  undefined return_value [16];\n  \n  current_char = *input_string;\n  if (*current_char == '(') {\n    *input_string = current_char + 1;\n    parsed_value = FUN_00109a32(input_string,0);\n    *output_values = parsed_value;\n    if (**input_string == ',') {\n      *input_string = *input_string + 1;\n      parsed_value = FUN_00109a32(input_string,0,param_3);\n      output_values[1] = parsed_value;\n      if (**input_string == ')') {\n        current_char = *input_string + 1;\n        *input_string = current_char;\n        goto LAB_00109b25;\n      }\n    }\n    FUN_00108fb9(current_char);\n    return_value = 0;\n  }\n  else {\n    *output_values = 0;\n    current_char = (char *)FUN_00109a32(input_string,0);\n    output_values[1] = (int)current_char;\nLAB_00109b25:\n    return_value = CONCAT71((int7)((ulong)current_char >> 8),1);\n  }\n  return_value._8_8_ = param_5;\n  return_value._0_8_ = return_value;\n  return return_value;\n}\n\n",
            "current_name": "parse_function_arguments_00109ab1",
            "entrypoint": "0x00109ab1",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00109ab1": "parse_function_arguments_00109ab1",
                "auVar4": "return_value",
                "param_1": "input_string",
                "param_2": "output_values",
                "pcVar2": "current_char",
                "uVar1": "parsed_value",
                "uVar3": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00109b2f": {
            "additional_data": {
                "FUN_00109b2f": {
                    "deallocate_memory": 1,
                    "deallocate_next": 1,
                    "extract_and_free": 2,
                    "extract_and_free_next_item": 2,
                    "extract_and_free_next_ptr": 1,
                    "extract_and_free_pointer": 3,
                    "extract_and_free_ptr": 5,
                    "extract_and_remove": 1,
                    "extract_and_return_next_value": 1,
                    "extract_data": 1,
                    "extract_first_element": 1,
                    "extract_next_item": 2,
                    "extract_next_pointer": 1,
                    "extract_next_value": 3,
                    "extract_ptr_and_free": 1,
                    "extract_ptr_from_param": 1,
                    "extract_second_element": 2,
                    "extract_value_from_pointer": 1,
                    "reordered_free": 1
                },
                "__ptr": {
                    "current_allocation": 1,
                    "current_item": 2,
                    "current_item_ptr": 1,
                    "current_node": 2,
                    "current_pointer": 2,
                    "data_ptr": 1,
                    "first_element": 1,
                    "linked_list_ptr": 1,
                    "next_item_ptr": 1,
                    "next_node": 1,
                    "next_ptr": 3,
                    "next_value_ptr": 1,
                    "old_ptr": 1,
                    "pointer": 2,
                    "pointer_to_free": 1,
                    "pointer_value": 1,
                    "ptr": 8,
                    "ptr_value": 1
                },
                "free": {
                    "release_memory": 2
                },
                "param_1": {
                    "base_address": 1,
                    "binary_address": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "initial_address": 1,
                    "input": 4,
                    "input_address": 4,
                    "input_array": 1,
                    "input_param": 1,
                    "input_pointer": 1,
                    "input_ptr": 4,
                    "item_list": 3,
                    "memory_address": 2,
                    "param_ptr": 1,
                    "pointer_address": 1,
                    "ptr": 1,
                    "ptr_address": 1,
                    "ptr_list": 1,
                    "start_address": 1
                },
                "puVar1": {
                    "extracted_item_ptr": 1,
                    "extracted_pointer": 1,
                    "extracted_ptr": 2,
                    "extracted_value": 2,
                    "new_ptr": 1,
                    "next_allocation": 1,
                    "next_item": 3,
                    "next_linked_list_ptr": 1,
                    "next_node": 1,
                    "next_pointer": 3,
                    "next_ptr": 2,
                    "next_value": 2,
                    "result": 1,
                    "ret_ptr": 1,
                    "retrieved_ptr": 1,
                    "return_ptr": 1,
                    "return_value": 4,
                    "returned_ptr": 1,
                    "second_element": 2
                }
            },
            "called": [
                "free"
            ],
            "calling": [
                "FUN_0010a2b9",
                "FUN_0010e9a0",
                "FUN_0010a377",
                "FUN_0010eafe",
                "FUN_0010abdd",
                "FUN_0010a77a",
                "FUN_0010e6a8",
                "FUN_0010a0e9",
                "FUN_0010e5db",
                "FUN_0010e7c2",
                "FUN_0010a181",
                "FUN_0010b948",
                "FUN_0010a424",
                "FUN_0010ba08",
                "FUN_0010aa53",
                "FUN_0010e918",
                "FUN_0010ebb0",
                "FUN_00109ed3",
                "FUN_0010a94e",
                "FUN_0010a83e"
            ],
            "code": "\nundefined8 * extract_and_free_next_ptr_00109b2f(long input)\n\n{\n  undefined8 *ptr;\n  undefined8 *return_value;\n  \n  ptr = *(undefined8 **)(input + 0x60);\n  if (ptr != (undefined8 *)0x0) {\n    return_value = (undefined8 *)ptr[1];\n    *(undefined8 *)(input + 0x60) = *ptr;\n    release_memory(ptr);\n    return return_value;\n  }\n  return ptr;\n}\n\n",
            "current_name": "extract_and_free_next_ptr_00109b2f",
            "entrypoint": "0x00109b2f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00109b2f": "extract_and_free_next_ptr_00109b2f",
                "__ptr": "ptr",
                "free": "release_memory",
                "param_1": "input",
                "puVar1": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00109b52": {
            "additional_data": {
                "FUN_00109b52": {
                    "allocate_and_initialize": 1,
                    "allocate_and_set_values": 1,
                    "copy_and_store_data": 1,
                    "create_and_register_object": 1,
                    "create_data_entry": 1,
                    "create_data_object": 1,
                    "create_data_record": 1,
                    "create_entry_in_function_list": 1,
                    "create_entry_in_list": 1,
                    "create_new_data_structure": 1,
                    "create_new_entry": 6,
                    "create_object": 1,
                    "initialize_data": 2,
                    "initialize_data_structure": 10,
                    "initialize_memory_block": 1,
                    "initialize_object": 1
                },
                "param_1": {
                    "arg1": 1,
                    "data_entry_ptr": 1,
                    "data_pointer": 1,
                    "data_struct": 1,
                    "data_struct_ptr": 1,
                    "data_structure": 2,
                    "data_structure_address": 2,
                    "data_structure_pointer": 2,
                    "data_structure_ptr": 4,
                    "entry_handle": 1,
                    "entry_list": 4,
                    "function_list": 1,
                    "input_data": 1,
                    "list": 1,
                    "obj_ptr": 1,
                    "object_manager": 1,
                    "object_pointer": 1,
                    "param_pointer": 1,
                    "parent_address": 1,
                    "record_table": 1,
                    "struct_ptr": 2
                },
                "param_2": {
                    "arg2": 1,
                    "data": 2,
                    "function_name": 1,
                    "input_string": 11,
                    "original_string": 3,
                    "source_string": 6,
                    "str_param": 2,
                    "str_to_duplicate": 1,
                    "string": 1,
                    "string_data": 1,
                    "string_to_duplicate": 1,
                    "string_value": 1
                },
                "param_3": {
                    "additional_data": 7,
                    "address": 1,
                    "arg3": 1,
                    "data": 2,
                    "data_ptr": 1,
                    "extra_data": 2,
                    "info": 1,
                    "input_data": 1,
                    "input_value": 1,
                    "object_to_attach": 1,
                    "param3": 3,
                    "param3_ptr": 1,
                    "param3_value": 4,
                    "param_3": 2,
                    "resource_pointer": 1,
                    "value": 2
                },
                "param_4": {
                    "additional_param": 1,
                    "arg4": 1,
                    "byte_param": 1,
                    "char_to_set": 1,
                    "character": 1,
                    "flag": 15,
                    "param4": 4,
                    "param4_val": 1,
                    "param4_value": 3,
                    "param_4": 3
                },
                "param_5": {
                    "arg5": 1,
                    "code": 1,
                    "counter": 1,
                    "error_code": 1,
                    "int_param": 1,
                    "integer_to_set": 1,
                    "numeric_value": 1,
                    "param": 1,
                    "param5": 4,
                    "param5_val": 1,
                    "param5_value": 4,
                    "param_5": 3,
                    "status": 8,
                    "value": 3
                },
                "puVar2": {
                    "allocated_memory": 4,
                    "allocated_memory_ptr": 1,
                    "dynamic_array_ptr": 1,
                    "dynamic_memory_ptr": 2,
                    "entry": 1,
                    "new_data_object": 1,
                    "new_data_pointer": 1,
                    "new_data_struct_ptr": 1,
                    "new_data_structure": 1,
                    "new_data_structure_pointer": 1,
                    "new_data_structure_ptr": 2,
                    "new_entry": 6,
                    "new_entry_pointer": 1,
                    "new_entry_ptr": 1,
                    "new_object": 3,
                    "new_pointer": 1,
                    "new_record": 1,
                    "new_struct_ptr": 2
                },
                "tempVar1": {
                    "temp_var1": 1
                },
                "uVar1": {
                    "next_entry": 1,
                    "old_data": 1,
                    "old_data_structure_ptr": 1,
                    "old_entry_value": 1,
                    "old_object": 1,
                    "old_value": 1,
                    "original_data_ptr": 1,
                    "original_value": 1,
                    "prev_data_structure_address": 1,
                    "prev_struct_ptr": 1,
                    "previous_data_object": 1,
                    "previous_data_structure_pointer": 1,
                    "previous_data_structure_ptr": 1,
                    "previous_entry": 2,
                    "temp1": 1,
                    "temp_entry": 1,
                    "temp_value": 1,
                    "temp_var": 2,
                    "temp_var1": 9,
                    "temp_variable1": 2
                },
                "uVar3": {
                    "duplicate_string": 1,
                    "duplicated_data": 2,
                    "duplicated_name": 1,
                    "duplicated_str": 2,
                    "duplicated_str_ptr": 1,
                    "duplicated_string": 18,
                    "duplicated_string_value": 1,
                    "new_string": 1,
                    "temp2": 1,
                    "temp_var2": 3
                },
                "xmalloc": {
                    "allocate_memory": 2
                },
                "xstrdup": {
                    "duplicate_string": 2
                }
            },
            "called": [
                "xstrdup",
                "xmalloc"
            ],
            "calling": [
                "FUN_0010a2b9",
                "FUN_00109e76",
                "FUN_0010b800",
                "FUN_00109dfe",
                "FUN_0010e453",
                "FUN_0010a377",
                "FUN_00109cf4",
                "FUN_0010a77a",
                "FUN_0010a0e9",
                "FUN_0010a181",
                "FUN_0010b948",
                "FUN_0010a424",
                "FUN_00109d97",
                "FUN_00109ed3",
                "FUN_0010a69a"
            ],
            "code": "\nundefined initialize_data_structure_00109b52(long entry_list,undefined8 input_string,undefined8 additional_data,undefined flag,\n                      undefined4 status)\n\n{\n  undefined8 temp_var1;\n  undefined8 *new_entry;\n  undefined8 duplicated_string;\n  \n  new_entry = (undefined8 *)xmalloc(0x40);\n  duplicated_string = xstrdup(input_string);\n  new_entry[2] = additional_data;\n  *(undefined (*) [16])(new_entry + 4) = ZEXT816(0);\n  *(undefined (*) [16])(new_entry + 6) = ZEXT816(0);\n  temp_var1 = *(undefined8 *)(entry_list + 0x60);\n  *(undefined *)((long)new_entry + 0x1c) = flag;\n  *(undefined4 *)(new_entry + 3) = status;\n  *(undefined8 **)(entry_list + 0x60) = new_entry;\n  *new_entry = temp_var1;\n  new_entry[1] = duplicated_string;\n  return 1;\n}\n\n",
            "current_name": "initialize_data_structure_00109b52",
            "entrypoint": "0x00109b52",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00109b52": "initialize_data_structure_00109b52",
                "param_1": "entry_list",
                "param_2": "input_string",
                "param_3": "additional_data",
                "param_4": "flag",
                "param_5": "status",
                "puVar2": "new_entry",
                "uVar1": "temp_var1",
                "uVar3": "duplicated_string",
                "xmalloc": "allocate_memory",
                "xstrdup": "duplicate_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00109bbb": {
            "additional_data": {
                "FUN_00109bbb": {
                    "add_semicolon_to_end_of_string": 2,
                    "append_semicolon": 1,
                    "append_semicolon_if_needed": 1,
                    "append_semicolon_if_not_null": 4,
                    "append_semicolon_if_valid": 1,
                    "append_semicolon_to_end_of_string": 3,
                    "append_semicolon_to_string": 14,
                    "append_to_end_with_semicolon": 1,
                    "check_and_append_semicolon": 2,
                    "modify_string": 1,
                    "update_string_with_semicolon": 1
                },
                "__s": {
                    "str": 3,
                    "str_to_modify": 1,
                    "string": 2,
                    "string_pointer": 8,
                    "string_ptr": 9,
                    "string_to_append": 1,
                    "string_to_modify": 3,
                    "string_value": 1,
                    "target_string": 1
                },
                "param_1": {
                    "address": 2,
                    "base_address": 1,
                    "input": 2,
                    "input_address": 4,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_pointer": 4,
                    "input_ptr": 2,
                    "input_string": 6,
                    "input_struct": 3,
                    "object_address": 2,
                    "param": 3
                },
                "sVar1": {
                    "length": 1,
                    "str_length": 3,
                    "string_length": 23
                }
            },
            "called": [
                "strlen"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nbool append_semicolon_to_end_of_string_00109bbb(long input_string)\n\n{\n  char *string_ptr;\n  size_t string_length;\n  \n  if (*(long *)(input_string + 0x60) != 0) {\n    string_ptr = *(char **)(*(long *)(input_string + 0x60) + 0x30);\n    if (string_ptr != (char *)0x0) {\n      string_length = strlen(string_ptr);\n      *(undefined2 *)(string_ptr + string_length) = 0x3b;\n    }\n    return string_ptr != (char *)0x0;\n  }\n  return false;\n}\n\n",
            "current_name": "append_semicolon_to_end_of_string_00109bbb",
            "entrypoint": "0x00109bbb",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00109bbb": "append_semicolon_to_end_of_string_00109bbb",
                "__s": "string_ptr",
                "param_1": "input_string",
                "sVar1": "string_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00109be3": {
            "additional_data": {
                "FUN_00109be3": {
                    "add_entry_to_buffer": 1,
                    "add_to_array": 1,
                    "add_value_to_buffer": 1,
                    "append_data": 5,
                    "append_data_item": 1,
                    "append_data_to_buffer": 2,
                    "append_item": 1,
                    "append_item_to_array": 1,
                    "append_item_to_list": 1,
                    "append_to_dynamic_array": 1,
                    "append_value_to_data_structure": 1,
                    "expand_and_add_item_to_array": 1,
                    "expand_and_add_to_buffer": 1,
                    "expand_and_insert": 1,
                    "expand_and_insert_data": 1,
                    "expand_and_insert_entry": 1,
                    "expand_and_store": 1,
                    "expand_and_store_data": 1,
                    "expand_and_store_value": 1,
                    "expand_array": 2,
                    "reallocate_and_store_data": 1,
                    "store_data_and_increment": 1,
                    "store_data_and_update_count": 1,
                    "update_data": 1,
                    "update_data_and_return": 1
                },
                "param_1": {
                    "array": 5,
                    "array_address": 1,
                    "array_ptr": 1,
                    "buffer": 6,
                    "data": 4,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_storage": 1,
                    "data_struct": 6,
                    "data_structure": 2,
                    "list_ptr": 1,
                    "memory_block": 1,
                    "param_ptr": 1
                },
                "param_2": {
                    "data": 5,
                    "element": 3,
                    "entry": 2,
                    "item": 4,
                    "item_value": 1,
                    "new_element": 1,
                    "new_value": 2,
                    "value": 13
                },
                "param_3": {
                    "count": 3,
                    "element_size": 1,
                    "entry_info": 1,
                    "flag": 6,
                    "item_length": 1,
                    "item_size": 1,
                    "item_type": 1,
                    "length": 4,
                    "new_value_type": 1,
                    "param": 1,
                    "param_3": 1,
                    "size": 4,
                    "status": 1,
                    "value": 5
                },
                "puVar2": {
                    "array_pointer": 1,
                    "buffer_ptr": 1,
                    "current_entry": 1,
                    "data_element_ptr": 1,
                    "data_pointer": 3,
                    "element_address": 1,
                    "element_pointer": 1,
                    "entry_pointer": 2,
                    "entry_ptr": 2,
                    "item_ptr": 1,
                    "new_data_ptr": 2,
                    "new_element": 4,
                    "new_element_ptr": 1,
                    "new_entry": 1,
                    "new_entry_ptr": 1,
                    "new_item_address": 2,
                    "new_item_ptr": 2,
                    "new_value_ptr": 1,
                    "ptr_to_new_data": 1,
                    "value_pointer": 1,
                    "value_ptr": 1
                },
                "uVar1": {
                    "allocated_data": 1,
                    "expanded_array": 2,
                    "expanded_memory_block": 1,
                    "expanded_ptr": 1,
                    "new_array": 1,
                    "new_array_pointer": 1,
                    "new_buffer": 5,
                    "new_data_ptr": 4,
                    "new_data_storage": 1,
                    "new_data_structure_ptr": 1,
                    "new_list_ptr": 1,
                    "new_ptr": 1,
                    "realloc_result": 9,
                    "result": 1,
                    "updated_data": 1
                },
                "uVar3": {
                    "array_length": 1,
                    "array_size": 1,
                    "buffer_size": 2,
                    "current_count": 3,
                    "current_length": 4,
                    "current_size": 17,
                    "data_size": 1,
                    "item_count": 1,
                    "new_size": 1
                },
                "uVar3_new": {
                    "new_size": 1
                },
                "uVar4": {
                    "new_size": 1
                },
                "xrealloc": {
                    "expand_buffer": 1,
                    "resize_memory": 1
                }
            },
            "called": [
                "xrealloc"
            ],
            "calling": [
                "FUN_0010ee3f",
                "FUN_0010d7d4"
            ],
            "code": "\nundefined8 append_data_to_buffer_00109be3(long data_struct,undefined8 value,undefined4 flag)\n\n{\n  undefined8 realloc_result;\n  undefined8 *new_element;\n  uint current_size;\n  \n  if (*(uint *)(data_struct + 0x2c) <= *(uint *)(data_struct + 0x28)) {\n    current_size = *(uint *)(data_struct + 0x2c) + 10;\n    *(uint *)(data_struct + 0x2c) = current_size;\n    realloc_result = xrealloc(*(undefined8 *)(data_struct + 0x20),(ulong)current_size << 4);\n    *(undefined8 *)(data_struct + 0x20) = realloc_result;\n  }\n  current_size = *(uint *)(data_struct + 0x28);\n  new_element = (undefined8 *)((ulong)current_size * 0x10 + *(long *)(data_struct + 0x20));\n  *new_element = value;\n  *(undefined4 *)(new_element + 1) = flag;\n  *(uint *)(data_struct + 0x28) = current_size + 1;\n  return CONCAT71((int7)((ulong)new_element >> 8),1);\n}\n\n",
            "current_name": "append_data_to_buffer_00109be3",
            "entrypoint": "0x00109be3",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00109be3": "append_data_to_buffer_00109be3",
                "param_1": "data_struct",
                "param_2": "value",
                "param_3": "flag",
                "puVar2": "new_element",
                "uVar1": "realloc_result",
                "uVar3": "current_size",
                "xrealloc": "expand_buffer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00109c2e": {
            "additional_data": {
                "FUN_00109c2e": {
                    "expand_and_allocate_memory": 1,
                    "expand_and_copy": 2,
                    "expand_and_copy_array": 1,
                    "expand_and_copy_data": 2,
                    "expand_and_copy_memory": 1,
                    "expand_and_initialize_array": 5,
                    "expand_array": 2,
                    "expand_buffer": 2,
                    "expand_memory_and_copy_data": 1,
                    "reallocate_and_initialize_array": 1,
                    "resize_and_copy": 1,
                    "resize_and_copy_data": 3,
                    "resize_and_initialize_array": 3,
                    "resize_array": 5,
                    "resize_buffer": 1
                },
                "auVar7": {
                    "result": 6,
                    "return_array": 1,
                    "return_data": 1,
                    "return_val": 2,
                    "return_value": 20,
                    "return_value_struct": 1
                },
                "bVar6": {
                    "bit_flag": 1,
                    "byte": 1,
                    "byte_flag": 4,
                    "byte_var": 1,
                    "byte_var6": 1,
                    "count": 1,
                    "flag": 1,
                    "flag2": 5,
                    "flag_byte": 2,
                    "flag_value": 4,
                    "increment": 1,
                    "is_empty": 1,
                    "is_zero": 5,
                    "temp_flag": 1,
                    "temp_var6": 1,
                    "zero_flag": 1
                },
                "lVar1": {
                    "index": 1,
                    "new_allocation": 1,
                    "new_array": 1,
                    "new_array_pointer": 1,
                    "new_array_ptr": 1,
                    "new_array_size": 2,
                    "new_data": 1,
                    "new_data_pointer": 1,
                    "new_element": 3,
                    "new_element_index": 2,
                    "new_index": 1,
                    "new_length": 1,
                    "new_memory_ptr": 1,
                    "new_pointer": 2,
                    "new_ptr": 1,
                    "new_size": 3,
                    "next_index": 1,
                    "result_value": 1,
                    "temp": 1,
                    "temp_ptr": 1,
                    "temp_var1": 4
                },
                "lVar3": {
                    "byte_count": 1,
                    "count": 1,
                    "index": 1,
                    "length": 1,
                    "loop_counter": 1,
                    "loop_index": 1,
                    "remaining": 4,
                    "remaining_elements": 8,
                    "remaining_length": 1,
                    "remaining_size": 7,
                    "remaining_space": 1,
                    "temp_var2": 2,
                    "temp_var3": 2
                },
                "param_1": {
                    "array": 16,
                    "array_ptr": 2,
                    "buffer": 3,
                    "data": 2,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "data_structure": 1,
                    "input": 1,
                    "input_data": 1,
                    "source_ptr": 1
                },
                "param_2": {
                    "data": 3,
                    "element": 2,
                    "input_data": 1,
                    "item_to_add": 1,
                    "new_data": 1,
                    "new_value": 2,
                    "param_2": 1,
                    "value": 20
                },
                "param_3": {
                    "array_size": 3,
                    "count": 1,
                    "current_size": 1,
                    "data_size": 2,
                    "index": 3,
                    "num_elements": 1,
                    "size": 20
                },
                "param_4": {
                    "flag": 30,
                    "param_4": 1
                },
                "param_5": {
                    "array_size_ptr": 1,
                    "data": 1,
                    "flag_array": 1,
                    "flag_ptr": 1,
                    "out_data": 1,
                    "out_value": 1,
                    "output": 3,
                    "output_array": 1,
                    "output_data": 2,
                    "output_ptr": 1,
                    "output_var": 1,
                    "param_5_ptr": 1,
                    "pointer": 1,
                    "ptr": 1,
                    "result": 12,
                    "status": 1,
                    "value_pointer": 1
                },
                "param_6": {
                    "additional_data": 1,
                    "aux_var": 1,
                    "data": 6,
                    "extra_data": 1,
                    "info": 1,
                    "metadata": 1,
                    "param": 3,
                    "param6": 1,
                    "param_6": 3,
                    "param_value": 1,
                    "parameter": 1,
                    "pointer": 2,
                    "result": 3,
                    "return_value": 2,
                    "value": 3,
                    "var6": 1
                },
                "plVar2": {
                    "array_entry": 1,
                    "array_ptr": 1,
                    "current_element": 5,
                    "current_element_ptr": 1,
                    "current_entry": 1,
                    "current_entry_ptr": 1,
                    "element": 5,
                    "element_ptr": 5,
                    "entry": 1,
                    "new_data": 1,
                    "new_element": 1,
                    "new_element_pointer": 1,
                    "ptr_array": 1,
                    "ptr_to_current_value": 1,
                    "target_ptr": 2,
                    "temp_ptr1": 1,
                    "temp_var2": 2
                },
                "puVar4": {
                    "copy_ptr": 1,
                    "current": 1,
                    "current_byte": 4,
                    "current_byte_ptr": 1,
                    "current_element": 1,
                    "current_element_pointer": 1,
                    "current_element_ptr": 1,
                    "current_ptr": 4,
                    "element_ptr": 1,
                    "mem_fill_ptr": 1,
                    "pointer": 1,
                    "ptr": 6,
                    "ptr_element": 1,
                    "ptr_to_element": 1,
                    "ptr_to_zero": 1,
                    "ptr_to_zeroes": 1,
                    "temp_ptr": 1,
                    "temp_ptr2": 1,
                    "temp_var4": 2
                },
                "uVar5": {
                    "array_size": 4,
                    "current_capacity": 1,
                    "current_length": 1,
                    "current_size": 17,
                    "limit": 1,
                    "max_size": 2,
                    "new_size": 1,
                    "old_array_size": 1,
                    "old_size": 1,
                    "temp_var3": 1,
                    "temp_var5": 1
                },
                "xrealloc": {
                    "reallocate_memory": 1,
                    "resize_array": 1
                }
            },
            "called": [
                "xrealloc"
            ],
            "calling": [
                "FUN_00109d5c",
                "FUN_0010a69a"
            ],
            "code": "\nundefined  [16]\nresize_and_initialize_array_00109c2e(long array,long value,ulong size,int flag,undefined4 *result,\n            undefined8 data)\n\n{\n  long temp_var1;\n  long *current_element;\n  long remaining_elements;\n  undefined *ptr;\n  ulong current_size;\n  byte flag2;\n  undefined return_value [16];\n  \n  flag2 = 0;\n  size = size & 0xffffffff;\n  current_size = *(ulong *)(array + 0x1b0);\n  if (current_size <= size) {\n    if (current_size == 0) {\n      current_size = 10;\n    }\n    for (; current_size <= size; current_size = current_size * 2) {\n    }\n    temp_var1 = xrealloc(*(undefined8 *)(array + 0x1a8),current_size * 0x18);\n    *(long *)(array + 0x1a8) = temp_var1;\n    ptr = (undefined *)(*(long *)(array + 0x1b0) * 0x18 + temp_var1);\n    for (remaining_elements = (current_size - *(long *)(array + 0x1b0)) * 0x18; remaining_elements != 0; remaining_elements = remaining_elements + -1) {\n      *ptr = 0;\n      ptr = ptr + (ulong)flag2 * -2 + 1;\n    }\n    *(ulong *)(array + 0x1b0) = current_size;\n  }\n  current_element = (long *)(size * 0x18 + *(long *)(array + 0x1a8));\n  if (*current_element == 0) {\n    temp_var1 = *(long *)(array + 0x68);\n    *current_element = temp_var1;\n    *(long *)(array + 0x68) = temp_var1 + 1;\n    current_element[1] = value;\n    *(int *)(current_element + 2) = flag;\n  }\n  if (flag == 0) {\n    *(undefined4 *)(current_element + 2) = 0;\n    *(undefined4 *)((long)current_element + 0x14) = *result;\n  }\n  else {\n    *result = *(undefined4 *)((long)current_element + 0x14);\n  }\n  return_value._8_8_ = data;\n  return_value._0_8_ = *current_element;\n  return return_value;\n}\n\n",
            "current_name": "resize_and_initialize_array_00109c2e",
            "entrypoint": "0x00109c2e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00109c2e": "resize_and_initialize_array_00109c2e",
                "auVar7": "return_value",
                "bVar6": "flag2",
                "lVar1": "temp_var1",
                "lVar3": "remaining_elements",
                "param_1": "array",
                "param_2": "value",
                "param_3": "size",
                "param_4": "flag",
                "param_5": "result",
                "param_6": "data",
                "plVar2": "current_element",
                "puVar4": "ptr",
                "uVar5": "current_size",
                "xrealloc": "resize_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00109cf4": {
            "additional_data": {
                "FUN_00109cf4": {
                    "convert_and_call": 4,
                    "convert_and_call_function": 4,
                    "convert_and_print": 1,
                    "convert_and_print_long": 2,
                    "convert_and_process_data": 1,
                    "convert_and_send_data": 2,
                    "convert_parameter_to_string_and_call_function": 1,
                    "convert_to_formatted_string": 1,
                    "format_and_call": 1,
                    "format_and_call_function": 6,
                    "format_and_call_subfunction": 3,
                    "format_and_send_data": 1,
                    "format_number_and_call": 1,
                    "format_string_and_call_subfunction": 1,
                    "print_param": 1,
                    "print_param_as_string": 1
                },
                "local_3c": {
                    "buffer": 2,
                    "converted_data": 3,
                    "converted_input": 1,
                    "converted_number": 2,
                    "converted_string": 6,
                    "converted_value": 2,
                    "formatted_input": 3,
                    "formatted_number": 1,
                    "formatted_param": 1,
                    "formatted_param2": 1,
                    "formatted_str": 1,
                    "formatted_string": 1,
                    "formatted_value": 1,
                    "param_str": 1,
                    "string_buffer": 2,
                    "string_value": 3
                },
                "param_1": {
                    "arg1": 4,
                    "converted_value": 2,
                    "data": 1,
                    "data1": 1,
                    "data_1": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "input1": 5,
                    "input_1": 1,
                    "input_value": 1,
                    "output": 1,
                    "output_buffer": 2,
                    "output_param": 1,
                    "output_stream": 1,
                    "output_value": 1,
                    "param1": 3,
                    "param_1": 2,
                    "source": 1
                },
                "param_2": {
                    "arg2": 3,
                    "converted_value": 1,
                    "data": 1,
                    "data2": 1,
                    "data_2": 1,
                    "input": 1,
                    "input2": 5,
                    "input_2": 1,
                    "input_param": 1,
                    "input_value": 4,
                    "integer_value": 1,
                    "long_value": 1,
                    "number_to_convert": 2,
                    "original_value": 1,
                    "param2": 3,
                    "param_value": 1,
                    "value": 3
                },
                "param_3": {
                    "arg3": 3,
                    "data_3": 1,
                    "flag": 10,
                    "flags": 2,
                    "format_specifier": 2,
                    "input3": 5,
                    "input_3": 1,
                    "param": 1,
                    "param3": 3,
                    "param_3": 2,
                    "size": 1
                }
            },
            "called": [
                "FUN_00109b52",
                "sprintf"
            ],
            "calling": [
                "FUN_0010b948",
                "FUN_0010b800",
                "FUN_00109d3e",
                "FUN_0010bba1",
                "FUN_00109d5c",
                "FUN_0010e453",
                "FUN_00109dfe",
                "FUN_00109d97",
                "FUN_00109ed3"
            ],
            "code": "\nvoid convert_parameter_to_string_and_call_function_00109cf4(undefined8 input1,undefined8 input2,undefined4 flag)\n\n{\n  char converted_string [28];\n  \n  sprintf(converted_string,\"%ld\",input2);\n  FUN_00109b52(input1,converted_string,input2,0,flag);\n  return;\n}\n\n",
            "current_name": "convert_parameter_to_string_and_call_function_00109cf4",
            "entrypoint": "0x00109cf4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00109cf4": "convert_parameter_to_string_and_call_function_00109cf4",
                "local_3c": "converted_string",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00109d3e": {
            "additional_data": {
                "FUN_00109cf4": {
                    "process_data": 2,
                    "process_sub_function": 1,
                    "process_subfunction": 1,
                    "process_values": 1,
                    "sub_function": 2
                },
                "FUN_00109d3e": {
                    "extract_and_improve_data": 1,
                    "extract_and_process_data": 1,
                    "extract_data": 3,
                    "extract_function_data": 1,
                    "extract_value_from_binary": 1,
                    "process_data": 11,
                    "process_function": 3,
                    "process_param": 1,
                    "retrieve_data": 1
                },
                "param_1": {
                    "arg1": 2,
                    "data": 7,
                    "data_buffer": 2,
                    "data_packet": 1,
                    "data_param": 1,
                    "data_pointer": 2,
                    "function_param": 1,
                    "input": 2,
                    "input_data": 3,
                    "input_param": 4,
                    "input_parameter": 1,
                    "input_value": 1,
                    "input_var": 1,
                    "output": 1,
                    "output_buffer": 1,
                    "output_value": 1
                },
                "param_2": {
                    "arg2": 2,
                    "array_size": 1,
                    "count": 4,
                    "counter": 2,
                    "data_length": 2,
                    "index": 6,
                    "input_index": 1,
                    "input_length": 1,
                    "length": 3,
                    "num_elements": 1,
                    "num_iterations": 1,
                    "size": 7
                },
                "param_3": {
                    "length": 1
                },
                "uVar1": {
                    "default_val": 1,
                    "default_value": 6,
                    "extracted_value": 4,
                    "result": 8,
                    "return_value": 2,
                    "selected_data": 1,
                    "selected_element": 1,
                    "selected_value": 1,
                    "value": 5
                }
            },
            "called": [
                "FUN_00109cf4"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nvoid extract_and_process_data_00109d3e(undefined8 data,int size)\n\n{\n  undefined8 result;\n  \n  result = 0xfffffffffffffff0;\n  if (size - 1U < 8) {\n    result = *(undefined8 *)(&DAT_00121360 + (ulong)(size - 1U) * 8);\n  }\n  FUN_00109cf4(data,result,size);\n  return;\n}\n\n",
            "current_name": "extract_and_process_data_00109d3e",
            "entrypoint": "0x00109d3e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00109d3e": "extract_and_process_data_00109d3e",
                "param_1": "data",
                "param_2": "size",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00109d5c": {
            "additional_data": {
                "FUN_00109c2e": {
                    "check_validity": 1,
                    "get_initial_value": 1,
                    "get_result": 4,
                    "helper_function1": 1,
                    "perform_initial_check": 1
                },
                "FUN_00109cf4": {
                    "helper_function2": 1,
                    "perform_calculation": 1,
                    "perform_computation": 1,
                    "process_data": 1,
                    "process_result": 3,
                    "process_sub_data": 1
                },
                "FUN_00109d5c": {
                    "check_and_process_data": 1,
                    "execute_function": 6,
                    "execute_operation": 2,
                    "extract_data": 3,
                    "extract_data_from_binary": 1,
                    "perform_operation": 1,
                    "process_data": 10,
                    "process_input": 1,
                    "process_param": 1,
                    "process_result": 1
                },
                "iParam4": {
                    "param4": 1
                },
                "lParam1": {
                    "param1": 1
                },
                "lParam2": {
                    "param2": 1
                },
                "lVar1": {
                    "result": 29,
                    "result_value": 1,
                    "return_value": 1
                },
                "param1": {
                    "input1": 1
                },
                "param2": {
                    "input2": 1
                },
                "param3": {
                    "input3": 1
                },
                "param_1": {
                    "data": 5,
                    "input": 4,
                    "input1": 2,
                    "input_data": 6,
                    "input_param": 9,
                    "input_param_1": 1,
                    "input_value": 3,
                    "param1": 1
                },
                "param_2": {
                    "data_param": 1,
                    "input2": 2,
                    "input_param": 1,
                    "input_param_2": 1,
                    "param2": 1,
                    "sub_data1": 1
                },
                "param_3": {
                    "additional_param": 1,
                    "input3": 2,
                    "input_param_3": 1,
                    "param3": 1,
                    "some_param": 1,
                    "sub_data2": 1
                },
                "param_4": {
                    "flag": 1,
                    "input3": 1,
                    "param3": 1,
                    "param4": 2,
                    "param_4": 1
                },
                "param_5": {
                    "input4": 1,
                    "param4": 1,
                    "param5": 2,
                    "param_5": 1,
                    "param_array": 1,
                    "status": 1
                },
                "uVar2": {
                    "execution_result": 1,
                    "extracted_data": 2,
                    "extraction_result": 1,
                    "function_result": 2,
                    "operation_result": 1,
                    "output": 11,
                    "output_data": 2,
                    "output_value": 1,
                    "processed_data": 1,
                    "processing_result": 1,
                    "result": 1,
                    "return_value": 7
                },
                "ulParam3": {
                    "param3": 1
                }
            },
            "called": [
                "FUN_00109c2e",
                "FUN_00109cf4"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nundefined8 check_and_process_data_00109d5c(undefined8 input_param)\n\n{\n  long result;\n  undefined8 output;\n  \n  result = FUN_00109c2e();\n  if (-1 < result) {\n    output = FUN_00109cf4(input_param,result,0);\n    return output;\n  }\n  return 0;\n}\n\n",
            "current_name": "check_and_process_data_00109d5c",
            "entrypoint": "0x00109d5c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00109d5c": "check_and_process_data_00109d5c",
                "lVar1": "result",
                "param_1": "input_param",
                "uVar2": "output"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00109d97": {
            "additional_data": {
                "FUN_00109b52": {
                    "log_message": 1,
                    "print_data": 1,
                    "print_info": 1,
                    "print_parameter": 1,
                    "print_result": 1,
                    "process_data": 1,
                    "send_data": 3,
                    "send_formatted_data": 3,
                    "send_formatted_string": 1,
                    "send_number": 1
                },
                "FUN_00109cf4": {
                    "execute_sub_function": 1,
                    "perform_action": 1,
                    "process_data": 2,
                    "process_nested_data": 1,
                    "process_sub_data": 4,
                    "process_sub_function": 7,
                    "update_parameter": 1
                },
                "FUN_00109d97": {
                    "process_data": 14,
                    "process_input": 1,
                    "process_number": 2,
                    "process_param": 6,
                    "process_parameter": 5,
                    "process_parameter_value": 1,
                    "process_value": 1
                },
                "lVar1": {
                    "count": 2,
                    "counter": 11,
                    "current_value": 1
                },
                "local_40": {
                    "formatted_data": 4,
                    "formatted_number": 1,
                    "formatted_string": 11,
                    "formatted_text": 1,
                    "message": 2,
                    "output": 2,
                    "output_string": 8,
                    "result": 1,
                    "result_string": 1
                },
                "param_1": {
                    "data": 11,
                    "data_pointer": 1,
                    "input": 2,
                    "input_data": 2,
                    "input_param": 2,
                    "input_value": 2,
                    "number": 1,
                    "param": 5,
                    "param1": 2,
                    "parameter": 2,
                    "value": 1
                },
                "param_2": {
                    "nested_data": 1,
                    "param2": 2,
                    "sub_data": 1,
                    "sub_data_pointer": 1,
                    "sub_function_arg1": 1,
                    "sub_function_param2": 1,
                    "sub_function_parameter1": 1,
                    "update_value": 1
                },
                "param_3": {
                    "flag": 2,
                    "param3": 3,
                    "sub_data1": 1,
                    "sub_function_arg2": 1,
                    "sub_function_param3": 1
                },
                "param_4": {
                    "param4": 1,
                    "value2": 1
                },
                "sprintf": {
                    "format_data": 1,
                    "format_string": 1
                }
            },
            "called": [
                "FUN_00109b52",
                "sprintf",
                "FUN_00109cf4"
            ],
            "calling": [
                "FUN_00112c1f",
                "FUN_0010a424"
            ],
            "code": "\nvoid process_data_00109d97(long data)\n\n{\n  long counter;\n  char formatted_string [40];\n  \n  if (*(long *)(data + 0x70) != 0) {\n    FUN_00109cf4(data,*(long *)(data + 0x70),0);\n    return;\n  }\n  counter = *(long *)(data + 0x68);\n  *(long *)(data + 0x68) = counter + 1;\n  sprintf(formatted_string,\"%ld=%ld\",counter,counter);\n  FUN_00109b52(data,formatted_string,counter,0,0);\n  return;\n}\n\n",
            "current_name": "process_data_00109d97",
            "entrypoint": "0x00109d97",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00109d97": "process_data_00109d97",
                "lVar1": "counter",
                "local_40": "formatted_string",
                "param_1": "data",
                "sprintf": "format_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00109dfe": {
            "additional_data": {
                "FUN_00109b52": {
                    "print_data": 4,
                    "print_formatted_string": 1,
                    "print_formatted_value": 1,
                    "send_data": 3,
                    "send_formatted_data": 1,
                    "send_output": 1
                },
                "FUN_00109cf4": {
                    "process_data": 1,
                    "process_input_value": 1,
                    "process_sub_data": 4,
                    "process_sub_function": 4,
                    "process_value": 1,
                    "set_param": 1,
                    "sub_function": 1,
                    "update_data": 1
                },
                "FUN_00109dfe": {
                    "process_data": 17,
                    "process_function": 1,
                    "process_param": 3,
                    "process_parameter": 4,
                    "process_value": 1,
                    "reverse_and_update_variable": 1,
                    "update_value": 2,
                    "update_value_and_notify": 1
                },
                "__format": {
                    "format_specifier": 1
                },
                "__s": {
                    "buffer": 1
                },
                "lVar1": {
                    "counter": 13,
                    "current_value": 3,
                    "param_value": 1,
                    "previous_value": 1
                },
                "local_40": {
                    "buffer": 1,
                    "format_string": 1,
                    "formatted_string": 15,
                    "formatted_value": 1,
                    "message": 6,
                    "output": 1,
                    "output_string": 5,
                    "string_buffer": 1
                },
                "param_1": {
                    "data": 14,
                    "data_struct": 1,
                    "event_handler": 1,
                    "input": 2,
                    "input_data": 2,
                    "input_param": 2,
                    "input_parameter": 1,
                    "input_value": 3,
                    "param": 4,
                    "param1": 1
                },
                "param_2": {
                    "input_value_2": 1,
                    "param": 1,
                    "param2": 1,
                    "sub_data": 3,
                    "sub_func_param1": 1,
                    "sub_function_data": 1,
                    "sub_function_param1": 1
                },
                "param_3": {
                    "flag": 1,
                    "input_value_3": 1,
                    "param3": 1,
                    "sub_data_flag": 1,
                    "sub_flag": 1,
                    "sub_func_param2": 1,
                    "sub_function_param": 1,
                    "sub_function_param2": 1
                },
                "param_4": {
                    "flag": 3,
                    "param4": 1,
                    "sub_function_flag": 1
                },
                "sprintf": {
                    "format_string": 1
                }
            },
            "called": [
                "FUN_00109b52",
                "sprintf",
                "FUN_00109cf4"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nvoid process_data_00109dfe(long data)\n\n{\n  long counter;\n  char formatted_string [40];\n  \n  if (*(long *)(data + 0x70) != 0) {\n    FUN_00109cf4(data,*(long *)(data + 0x70),0);\n    return;\n  }\n  counter = *(long *)(data + 0x68);\n  *(long *)(data + 0x68) = counter + 1;\n  *(long *)(data + 0x70) = counter;\n  sprintf(formatted_string,\"%ld=%ld\",counter,counter);\n  FUN_00109b52(data,formatted_string,counter,1,0);\n  return;\n}\n\n",
            "current_name": "process_data_00109dfe",
            "entrypoint": "0x00109dfe",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00109dfe": "process_data_00109dfe",
                "lVar1": "counter",
                "local_40": "formatted_string",
                "param_1": "data",
                "sprintf": "format_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00109e76": {
            "additional_data": {
                "FUN_00109e76": {
                    "increase_and_format": 1,
                    "increase_counter_and_format_string": 1,
                    "increment_and_print": 2,
                    "increment_and_print_info": 1,
                    "increment_and_print_message": 1,
                    "increment_and_print_value": 1,
                    "increment_counter_and_call_function": 1,
                    "increment_counter_and_print": 1,
                    "parse_and_execute_statement": 1,
                    "process_data": 3,
                    "update_and_call_function": 1,
                    "update_and_format_data": 2,
                    "update_and_print": 2,
                    "update_and_print_value": 1,
                    "update_counter": 1,
                    "update_counter_and_call_function": 3,
                    "update_counter_and_format_string": 1,
                    "update_counter_and_print": 3,
                    "update_counter_and_print_info": 1,
                    "update_data": 1,
                    "update_variable_and_call_another_function": 1,
                    "update_variable_and_call_function": 1
                },
                "lVar1": {
                    "count": 1,
                    "counter": 13,
                    "counter_value": 2,
                    "current_statement_index": 1,
                    "current_value": 9,
                    "old_value": 2,
                    "original_value": 1,
                    "previous_counter_value": 1,
                    "value": 1
                },
                "local_5a": {
                    "format_string": 1,
                    "formatted_data": 1,
                    "formatted_message": 1,
                    "formatted_statement": 1,
                    "formatted_string": 19,
                    "info_string": 1,
                    "message": 1,
                    "output_string": 6
                },
                "param_1": {
                    "address": 1,
                    "base_address": 7,
                    "class_instance": 1,
                    "counter_address": 2,
                    "counter_pointer": 1,
                    "data": 1,
                    "data_pointer": 3,
                    "data_ptr": 3,
                    "input_address": 1,
                    "message": 1,
                    "object": 1,
                    "object_address": 4,
                    "object_pointer": 1,
                    "param_ptr": 1,
                    "pointer": 1,
                    "ptr": 1,
                    "statement": 1
                },
                "param_2": {
                    "counter": 1,
                    "increment": 1,
                    "info": 1,
                    "multiplier": 2,
                    "value": 26
                },
                "sprintf": {
                    "format_string": 1
                }
            },
            "called": [
                "FUN_00109b52",
                "sprintf"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nvoid update_counter_and_print_info_00109e76(long base_address,uint value)\n\n{\n  long counter;\n  char formatted_string [58];\n  \n  counter = *(long *)(base_address + 0x68);\n  *(long *)(base_address + 0x68) = counter + 1;\n  sprintf(formatted_string,\"%ld=r%ld;%u;0;\",counter,counter,(ulong)value);\n  FUN_00109b52(base_address,formatted_string,counter,1,value * 2);\n  return;\n}\n\n",
            "current_name": "update_counter_and_print_info_00109e76",
            "entrypoint": "0x00109e76",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00109e76": "update_counter_and_print_info_00109e76",
                "lVar1": "counter",
                "local_5a": "formatted_string",
                "param_1": "base_address",
                "param_2": "value",
                "sprintf": "format_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00109ed3": {
            "additional_data": {
                "FUN_00109ed3": {
                    "extract_and_process_data": 1,
                    "extract_data": 1,
                    "parse_and_process_data": 1,
                    "process_data": 10,
                    "reverse_extracted_data": 1
                },
                "__ptr": {
                    "allocated_memory": 2,
                    "dynamic_ptr": 1,
                    "free_ptr": 1,
                    "pointer_variable": 1,
                    "ptr": 4,
                    "ptr2": 1,
                    "ptr_var": 1,
                    "temp_pointer": 6,
                    "temp_pointer2": 1,
                    "temp_ptr": 9,
                    "temp_ptr_2": 1,
                    "temp_var2": 1,
                    "temporary_pointer": 1,
                    "unformatted_string": 1
                },
                "__s": {
                    "dynamic_string": 2,
                    "formatted_str": 3,
                    "formatted_string": 7,
                    "new_str": 2,
                    "new_string": 12,
                    "new_string_ptr": 1,
                    "output_string": 1,
                    "str": 1,
                    "string": 1,
                    "string_var": 1
                },
                "bVar12": {
                    "bool_val": 1,
                    "bool_value": 1,
                    "byte_b_var12": 1,
                    "byte_flag": 2,
                    "byte_value": 1,
                    "byte_var": 4,
                    "byte_variable": 2,
                    "flag": 3,
                    "flag2": 2,
                    "flag_byte": 1,
                    "flag_check": 1,
                    "flag_value": 2,
                    "flag_zero": 1,
                    "initial_value": 1,
                    "is_negative": 1,
                    "loop_flag": 1,
                    "true_value": 1,
                    "zero_byte": 1,
                    "zero_byte_flag": 1,
                    "zero_flag": 2
                },
                "cVar3": {
                    "char_c_var3": 1,
                    "char_value": 3,
                    "char_var": 3,
                    "char_variable": 2,
                    "check": 1,
                    "error": 1,
                    "flag": 1,
                    "is_valid": 1,
                    "result": 12,
                    "result_char": 2,
                    "return_value": 1,
                    "status": 1,
                    "success": 1,
                    "success_flag": 1
                },
                "lVar6": {
                    "count": 3,
                    "count_l_var6": 1,
                    "counter": 7,
                    "index": 7,
                    "long_var": 1,
                    "loop_variable": 1,
                    "ptr": 1,
                    "temp": 1,
                    "temp_3": 1,
                    "temp_long": 1,
                    "temp_value": 1,
                    "temp_var": 2,
                    "temp_var1": 1,
                    "var1": 2,
                    "var6": 1
                },
                "lVar9": {
                    "bytes_remaining": 1,
                    "count": 1,
                    "count_l_var9": 1,
                    "iter": 1,
                    "length_left": 1,
                    "length_var": 1,
                    "loop_counter": 9,
                    "loop_value": 1,
                    "loop_var": 4,
                    "loop_variable2": 1,
                    "offset": 1,
                    "remaining": 2,
                    "remaining_size": 1,
                    "temp_4": 1,
                    "temp_counter": 1,
                    "temp_length": 1,
                    "temp_value_3": 1,
                    "temp_var3": 1,
                    "var9": 1
                },
                "param_1": {
                    "address": 1,
                    "binary_address": 1,
                    "binary_offset": 1,
                    "data": 3,
                    "data_pointer": 3,
                    "data_ptr": 4,
                    "data_struct": 1,
                    "input": 3,
                    "input1": 1,
                    "input_1": 1,
                    "input_data": 1,
                    "input_param": 5,
                    "input_param1": 2,
                    "input_pointer": 1,
                    "input_ptr": 2,
                    "input_value": 1
                },
                "param_2": {
                    "category": 1,
                    "char_param": 2,
                    "character": 4,
                    "data_type": 2,
                    "flag": 8,
                    "input2": 1,
                    "input_2": 1,
                    "input_param2": 2,
                    "input_size": 1,
                    "input_value": 3,
                    "insertion_char": 1,
                    "value": 5
                },
                "param_3": {
                    "data_length": 1,
                    "extra_param": 1,
                    "flag": 9,
                    "format": 1,
                    "format_param": 1,
                    "input3": 1,
                    "input_3": 1,
                    "input_flag": 2,
                    "input_param3": 2,
                    "int_param": 2,
                    "length": 1,
                    "param": 2,
                    "param3": 1,
                    "param_3": 1,
                    "parameter": 1,
                    "status": 2,
                    "type": 1
                },
                "param_4": {
                    "array": 3,
                    "array1": 1,
                    "array_pointer": 2,
                    "array_ptr": 3,
                    "buffer": 2,
                    "data_ptr": 1,
                    "data_storage": 1,
                    "dynamic_array": 1,
                    "long_arr": 1,
                    "output": 1,
                    "output1": 1,
                    "output_arr": 1,
                    "output_array": 5,
                    "output_array_ptr": 1,
                    "output_buf": 1,
                    "output_param1": 1,
                    "output_pointer": 1,
                    "output_ptr": 2,
                    "ptr_array": 1,
                    "result_array": 1
                },
                "param_5": {
                    "array2": 1,
                    "array_size": 4,
                    "buffer_size": 2,
                    "count_array": 1,
                    "counter_ptr": 1,
                    "output2": 1,
                    "output_array_size": 2,
                    "output_array_size_ptr": 1,
                    "output_buf_size": 1,
                    "output_param2": 1,
                    "output_size": 4,
                    "output_size_ptr": 1,
                    "pointer_count": 1,
                    "result_array_size": 1,
                    "size_arr": 1,
                    "size_array": 3,
                    "size_pointer": 2,
                    "size_ptr": 2,
                    "ulong_ptr": 1
                },
                "pcVar4": {
                    "char_ptr": 1,
                    "item_string": 1,
                    "str": 2,
                    "str_pc_var4": 1,
                    "str_pointer": 2,
                    "string": 5,
                    "string_data": 1,
                    "string_ptr": 5,
                    "string_variable": 2,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "temp_str": 2,
                    "temp_string": 7
                },
                "puVar11": {
                    "array_pointer": 1,
                    "new_element": 1,
                    "new_pointer": 1,
                    "output_ptr_increment": 1,
                    "pointer": 2,
                    "pointer_var": 1,
                    "pointer_variable": 1,
                    "pointer_variable_2": 1,
                    "ptr": 8,
                    "ptr3": 1,
                    "ptr_byte": 1,
                    "ptr_to_update": 1,
                    "ptr_var": 2,
                    "temp_pointer2": 1,
                    "temp_ptr2": 2,
                    "temp_ptr_3": 1,
                    "temp_ptr_increment": 1,
                    "undefined_pointer": 1,
                    "undefined_ptr": 1,
                    "undefined_pu_var11": 1,
                    "undefined_var_ptr": 1
                },
                "sVar5": {
                    "len": 1,
                    "length": 3,
                    "size_var": 1,
                    "str_length": 5,
                    "string_length": 19,
                    "string_size": 1,
                    "temp_str_len": 1
                },
                "uVar1": {
                    "array_size": 2,
                    "count": 1,
                    "current_size": 3,
                    "data_size": 1,
                    "element_count": 3,
                    "first_value": 1,
                    "heap_alloc_size": 1,
                    "length": 2,
                    "length_value": 1,
                    "size": 5,
                    "size1": 1,
                    "size_u_var1": 1,
                    "stored_size": 1,
                    "temp_1": 1,
                    "temp_size": 1,
                    "temp_value_1": 1,
                    "temp_variable1": 1,
                    "total_items": 1,
                    "val1": 1,
                    "value1": 1,
                    "var1": 1
                },
                "uVar10": {
                    "allocated_size": 1,
                    "array_new_size": 1,
                    "array_size": 1,
                    "current_counter": 1,
                    "current_size": 3,
                    "new_array_size": 1,
                    "new_buf_size": 1,
                    "new_length": 1,
                    "new_output_size": 1,
                    "new_size": 8,
                    "old_length": 1,
                    "original_size": 1,
                    "required_size": 1,
                    "size_u_var10": 1,
                    "target_size": 1,
                    "temp_5": 1,
                    "temp_size": 2,
                    "temp_value_4": 1,
                    "temp_variable3": 1,
                    "ulong_var": 1,
                    "value10": 1
                },
                "uVar2": {
                    "current_array_size": 1,
                    "current_size": 1,
                    "new_array_size": 1,
                    "new_data_size": 1,
                    "new_element_count": 1,
                    "new_items": 1,
                    "new_length": 1,
                    "new_size": 9,
                    "second_value": 1,
                    "size2": 1,
                    "size_u_var2": 1,
                    "temp": 1,
                    "temp_2": 1,
                    "temp_length": 1,
                    "temp_size": 3,
                    "temp_value": 1,
                    "temp_value_2": 1,
                    "temp_variable2": 1,
                    "val2": 1,
                    "value2": 1,
                    "var2": 1
                },
                "uVar7": {
                    "function_result": 1,
                    "output_var": 1,
                    "result": 10,
                    "return_value": 17,
                    "temp_result": 1,
                    "value7": 1
                },
                "uVar8": {
                    "dynamic_allocated_flag": 1,
                    "dynamic_allocation": 1,
                    "flag": 7,
                    "flag1": 1,
                    "flag2": 3,
                    "flag_value": 3,
                    "flag_variable": 1,
                    "is_allocated": 2,
                    "is_formatted": 1,
                    "is_required": 1,
                    "is_stored_size_less_than_one": 1,
                    "new_flag": 1,
                    "success": 1,
                    "temp_flag": 1,
                    "undefined_u_var8": 1,
                    "undefined_var": 1,
                    "update_flag": 1,
                    "use_flag": 1,
                    "value8": 1,
                    "var": 1
                }
            },
            "called": [
                "strlen",
                "FUN_00109b52",
                "sprintf",
                "xrealloc",
                "free",
                "FUN_00109b2f",
                "FUN_00109cf4",
                "xmalloc"
            ],
            "calling": [
                "FUN_0010a0a0",
                "FUN_0010a083",
                "FUN_0010a0bd",
                "FUN_0010e5db",
                "FUN_0010a0d3"
            ],
            "code": "\nundefined8 extract_and_process_data_00109ed3(long input_param,uint flag,undefined4 flag,long *output_array,ulong *output_size)\n\n{\n  ulong size;\n  ulong new_size;\n  char result;\n  char *temp_string;\n  size_t string_length;\n  char *new_string;\n  long index;\n  void *temp_ptr;\n  undefined8 return_value;\n  undefined flag;\n  long loop_counter;\n  ulong new_size;\n  undefined *ptr;\n  byte byte_var;\n  \n  byte_var = 0;\n  index = *(long *)(input_param + 0x60);\n  if (index != 0) {\n    size = *(ulong *)(index + 0x10);\n    if (((long)size < 1) || (output_array == (long *)0x0)) {\n      flag = *(undefined *)(index + 0x1c);\n      temp_string = (char *)FUN_00109b2f(input_param);\n      string_length = strlen(temp_string);\n      new_string = (char *)xmalloc(string_length + 2);\n      sprintf(new_string,\"%c%s\",(ulong)flag,temp_string);\n      free(temp_string);\n      index = 0;\n    }\n    else {\n      new_size = *output_size;\n      if (new_size <= size) {\n        if (new_size == 0) {\n          new_size = 10;\n        }\n        for (; new_size <= size; new_size = new_size * 2) {\n        }\n        index = xrealloc(*output_array,new_size * 8);\n        new_size = *output_size;\n        *output_array = index;\n        ptr = (undefined *)(index + new_size * 8);\n        for (loop_counter = (new_size - new_size) * 8; loop_counter != 0; loop_counter = loop_counter + -1) {\n          *ptr = 0;\n          ptr = ptr + (ulong)byte_var * -2 + 1;\n        }\n        *output_size = new_size;\n      }\n      index = *(long *)(*output_array + size * 8);\n      if ((index != 0) && (*(char *)(*(long *)(input_param + 0x60) + 0x1c) == '\\0')) {\n        temp_ptr = (void *)FUN_00109b2f(input_param);\n        free(temp_ptr);\n        return_value = FUN_00109cf4(input_param,index,flag);\n        return return_value;\n      }\n      index = *(long *)(input_param + 0x68);\n      *(long *)(input_param + 0x68) = index + 1;\n      temp_string = (char *)FUN_00109b2f(input_param);\n      string_length = strlen(temp_string);\n      new_string = (char *)xmalloc(string_length + 0x14);\n      sprintf(new_string,\"%ld=%c%s\",index,(ulong)flag,temp_string);\n      free(temp_string);\n      flag = 1;\n      *(long *)(*output_array + size * 8) = index;\n    }\n    result = FUN_00109b52(input_param,new_string,index,flag,flag);\n    if (result != '\\0') {\n      free(new_string);\n      return 1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "extract_and_process_data_00109ed3",
            "entrypoint": "0x00109ed3",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00109ed3": "extract_and_process_data_00109ed3",
                "__ptr": "temp_ptr",
                "__s": "new_string",
                "bVar12": "byte_var",
                "cVar3": "result",
                "lVar6": "index",
                "lVar9": "loop_counter",
                "param_1": "input_param",
                "param_2": "flag",
                "param_3": "flag",
                "param_4": "output_array",
                "param_5": "output_size",
                "pcVar4": "temp_string",
                "puVar11": "ptr",
                "sVar5": "string_length",
                "uVar1": "size",
                "uVar10": "new_size",
                "uVar2": "new_size",
                "uVar7": "return_value",
                "uVar8": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010a083": {
            "additional_data": {
                "FUN_00109ed3": {
                    "apply_modifications": 1,
                    "apply_transform": 1,
                    "execute_sub_function": 2,
                    "handle_subfunction": 1,
                    "modify_data": 2,
                    "perform_action": 1,
                    "perform_data_initialization": 1,
                    "process_data": 8,
                    "process_sub_function": 11,
                    "process_subfunction": 2,
                    "sub_function": 1
                },
                "FUN_0010a083": {
                    "execute_function": 2,
                    "extract_data": 1,
                    "initialize_and_process_data": 1,
                    "initialize_data": 2,
                    "initialize_data_structures": 1,
                    "initialize_function": 1,
                    "initialize_new_data_structure": 1,
                    "initialize_parameters": 1,
                    "initialize_struct": 1,
                    "process_and_apply_changes": 1,
                    "process_data": 16,
                    "process_function": 1,
                    "reverse_something": 1,
                    "update_data": 1
                },
                "param_1": {
                    "data": 11,
                    "data_address": 1,
                    "data_pointer": 2,
                    "data_structure": 1,
                    "data_structure_pointer": 1,
                    "input": 3,
                    "input_data": 1,
                    "input_param": 3,
                    "input_parameter": 1,
                    "input_value": 6,
                    "struct_pointer": 1
                },
                "param_2": {
                    "action_code": 1,
                    "constant": 5,
                    "constant1": 1,
                    "constant_value": 3,
                    "flag": 3,
                    "modifier": 1,
                    "sub_function_param": 1,
                    "sub_param1": 1,
                    "value": 13,
                    "value1": 1
                },
                "param_3": {
                    "constant2": 1,
                    "count": 11,
                    "length": 3,
                    "offset": 1,
                    "parameter": 1,
                    "size": 9,
                    "sub_function_flag": 1,
                    "sub_param2": 1,
                    "value": 1,
                    "value2": 1
                },
                "param_4": {
                    "address_pointer": 1,
                    "array1": 1,
                    "array_address": 1,
                    "array_pointer1": 1,
                    "buffer_pointer": 1,
                    "data_offset1": 1,
                    "data_pointer": 1,
                    "data_pointer1": 1,
                    "first_pointer": 1,
                    "input_pointer": 1,
                    "output1": 1,
                    "output_array": 1,
                    "output_data": 1,
                    "output_data1": 1,
                    "output_param1": 1,
                    "output_ptr1": 2,
                    "pointer1": 3,
                    "ptr1": 7,
                    "result1": 1,
                    "result_1": 1,
                    "sub_param3": 1
                },
                "param_5": {
                    "additional_data": 1,
                    "array2": 1,
                    "array_pointer2": 1,
                    "data_offset2": 1,
                    "data_pointer": 1,
                    "data_pointer2": 1,
                    "offset_pointer": 1,
                    "output2": 1,
                    "output_data2": 1,
                    "output_number": 1,
                    "output_param2": 1,
                    "output_pointer": 1,
                    "output_ptr2": 2,
                    "pointer2": 3,
                    "pointer_array_address": 1,
                    "ptr2": 7,
                    "result2": 1,
                    "result_2": 1,
                    "result_pointer": 1,
                    "second_pointer": 1,
                    "sub_param4": 1
                }
            },
            "called": [
                "FUN_00109ed3"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nvoid initialize_and_process_data_0010a083(long data)\n\n{\n  FUN_00109ed3(data,0x2a,4,data + 0x178,data + 0x180);\n  return;\n}\n\n",
            "current_name": "initialize_and_process_data_0010a083",
            "entrypoint": "0x0010a083",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010a083": "initialize_and_process_data_0010a083",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010a0a0": {
            "additional_data": {
                "FUN_00109ed3": {
                    "call_sub_function": 2,
                    "execute_sub_function": 1,
                    "extract_data": 1,
                    "handle_sub_function": 2,
                    "manipulate_data": 1,
                    "perform_operation": 1,
                    "perform_sub_operation": 1,
                    "process_data": 2,
                    "process_sub_function": 9,
                    "process_subfunction": 4,
                    "sub_function": 3,
                    "sub_process": 2,
                    "transform_data": 1
                },
                "FUN_0010a0a0": {
                    "execute_function": 3,
                    "extract_data_from_binary": 2,
                    "initialize_values": 1,
                    "perform_some_operation": 1,
                    "process_data": 22,
                    "process_param": 1
                },
                "param_1": {
                    "binary_data": 1,
                    "data": 11,
                    "input": 5,
                    "input_address": 1,
                    "input_data": 7,
                    "input_param": 3,
                    "input_parameter": 1,
                    "input_value": 2
                },
                "param_2": {
                    "arg2": 1,
                    "constant": 1,
                    "constant_value": 1,
                    "data_offset": 1,
                    "data_type": 1,
                    "flag": 2,
                    "param2": 1,
                    "parameter2": 1,
                    "size": 1,
                    "start_param": 1,
                    "sub_param1": 1,
                    "value": 8,
                    "value1": 10,
                    "value_param": 1
                },
                "param_3": {
                    "another_constant": 1,
                    "arg3": 1,
                    "count": 4,
                    "count_param": 2,
                    "data_size": 1,
                    "length": 1,
                    "length_value": 1,
                    "num": 1,
                    "offset": 1,
                    "param3": 1,
                    "param_size": 1,
                    "parameter3": 1,
                    "size": 3,
                    "sub_param2": 1,
                    "value": 1,
                    "value2": 10
                },
                "param_4": {
                    "array1": 2,
                    "data_pointer": 1,
                    "data_ptr1": 2,
                    "offset1": 1,
                    "offset_data": 1,
                    "output1": 3,
                    "output_address1": 1,
                    "output_array": 1,
                    "output_data1": 2,
                    "output_data_ptr": 1,
                    "output_param1": 2,
                    "output_param_1": 1,
                    "parameter4": 1,
                    "pointer1": 3,
                    "ptr1": 6,
                    "result1": 1,
                    "result_ptr1": 1,
                    "sub_param3": 1
                },
                "param_5": {
                    "additional_data_ptr": 1,
                    "array2": 2,
                    "data_ptr2": 2,
                    "offset2": 1,
                    "output2": 3,
                    "output_address2": 1,
                    "output_data2": 2,
                    "output_param2": 2,
                    "output_param_2": 1,
                    "output_pointer": 1,
                    "parameter5": 1,
                    "pointer2": 3,
                    "ptr2": 6,
                    "result2": 1,
                    "result_data": 1,
                    "result_ptr2": 1,
                    "sub_param4": 1,
                    "value_pointer": 1
                }
            },
            "called": [
                "FUN_00109ed3"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nvoid process_data_0010a0a0(long data)\n\n{\n  FUN_00109ed3(data,0x26,4,data + 0x198,data + 0x1a0);\n  return;\n}\n\n",
            "current_name": "process_data_0010a0a0",
            "entrypoint": "0x0010a0a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010a0a0": "process_data_0010a0a0",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010a0bd": {
            "additional_data": {
                "FUN_00109ed3": {
                    "call_sub_function": 2,
                    "decode_data": 1,
                    "execute_operation": 2,
                    "execute_sub_func": 1,
                    "execute_sub_function": 6,
                    "execute_subfunction": 2,
                    "perform_action": 1,
                    "process_data": 5,
                    "process_sub_function": 6,
                    "reverse_data": 1,
                    "sub_function": 2,
                    "subfunction": 1
                },
                "FUN_0010a0bd": {
                    "call_sub_function": 2,
                    "execute_func_with_params": 1,
                    "execute_function": 7,
                    "execute_process": 1,
                    "execute_task": 2,
                    "extract_data_from_binary": 1,
                    "initialize_function": 1,
                    "invoke_subfunction": 2,
                    "process_data": 8,
                    "process_param": 1,
                    "process_parameter": 2
                },
                "param_1": {
                    "binary_data_address": 1,
                    "data": 3,
                    "function_param": 1,
                    "input": 6,
                    "input_data": 1,
                    "input_param": 6,
                    "input_parameter": 4,
                    "input_value": 2,
                    "param": 4,
                    "parameter": 1,
                    "task_argument": 1,
                    "task_data": 1
                },
                "param_2": {
                    "code": 1,
                    "data_size": 1,
                    "error_code": 1,
                    "flag": 5,
                    "operation_code": 2,
                    "param_2": 1,
                    "param_index": 1,
                    "param_value": 2,
                    "sub_function_param1": 2,
                    "sub_param": 1,
                    "sub_param1": 1,
                    "sub_parameter_1": 1,
                    "subfunction_param_2": 1,
                    "value": 11
                },
                "param_3": {
                    "address": 2,
                    "data": 7,
                    "data_offset": 1,
                    "data_param": 1,
                    "data_value": 4,
                    "info": 1,
                    "offset": 1,
                    "param": 2,
                    "param3": 1,
                    "param_3": 1,
                    "parameter": 1,
                    "sub_function_param": 1,
                    "sub_function_param2": 2,
                    "sub_param2": 1,
                    "sub_parameter_2": 1,
                    "subfunction_param_3": 1,
                    "value": 3
                },
                "param_4": {
                    "array_ptr": 1,
                    "data_address": 1,
                    "data_pointer": 4,
                    "param4": 1,
                    "param_array": 1,
                    "param_pointer": 1,
                    "parameter_4": 1,
                    "pointer": 3,
                    "pointer1": 5,
                    "pointer_1": 1,
                    "pointer_param": 1,
                    "ptr": 1,
                    "ptr1": 2,
                    "ptr_data": 1,
                    "sub_function_array_param": 1,
                    "sub_function_param3": 2,
                    "sub_param3": 1,
                    "sub_parameter_3": 1,
                    "subfunction_param_4": 1,
                    "value_ptr": 1
                },
                "param_5": {
                    "address_pointer": 1,
                    "data_length": 1,
                    "data_ptr": 1,
                    "output_array": 1,
                    "param5": 1,
                    "parameter_5": 1,
                    "pointer": 1,
                    "pointer2": 6,
                    "pointer_2": 1,
                    "pointer_array": 1,
                    "pointer_param2": 1,
                    "ptr2": 3,
                    "ptr_result": 1,
                    "result_address": 1,
                    "sub_function_param4": 2,
                    "sub_function_pointer_param": 1,
                    "sub_param4": 1,
                    "sub_parameter_4": 1,
                    "subfunction_param_5": 1,
                    "ulong_pointer": 2,
                    "value_pointer": 1,
                    "value_ptr": 1
                }
            },
            "called": [
                "FUN_00109ed3"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nvoid process_data_0010a0bd(long input)\n\n{\n  FUN_00109ed3(input,0x6b,*(undefined4 *)(*(long *)(input + 0x60) + 0x18),0,0);\n  return;\n}\n\n",
            "current_name": "process_data_0010a0bd",
            "entrypoint": "0x0010a0bd",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010a0bd": "process_data_0010a0bd",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010a0d3": {
            "additional_data": {
                "FUN_00109ed3": {
                    "call_sub_function": 4,
                    "call_sub_function2": 1,
                    "execute_sub_function": 7,
                    "execute_sub_task": 1,
                    "execute_subfunction2": 1,
                    "handle_data": 1,
                    "initialize_data": 1,
                    "invoke_sub_function": 2,
                    "perform_action": 1,
                    "perform_operation": 2,
                    "perform_reversal": 1,
                    "process_data": 2,
                    "process_sub_function": 3,
                    "reverse_operation": 1,
                    "sub_function": 1
                },
                "FUN_0010a0d3": {
                    "call_sub_function": 1,
                    "call_sub_function_with_params": 1,
                    "execute_function": 14,
                    "execute_process": 1,
                    "execute_reversal": 1,
                    "execute_subfunction": 1,
                    "execute_task": 1,
                    "extract_and_process_data": 1,
                    "process_data": 4,
                    "process_function": 1
                },
                "param_1": {
                    "data": 5,
                    "function_param": 1,
                    "function_parameter": 1,
                    "input": 8,
                    "input_data": 1,
                    "input_param": 4,
                    "input_parameter": 4,
                    "input_value": 3,
                    "param": 2,
                    "process_id": 1,
                    "task_parameter": 1
                },
                "param_2": {
                    "action": 1,
                    "constant": 1,
                    "constant_value": 2,
                    "flag": 5,
                    "operation": 1,
                    "operation_code": 2,
                    "param2": 3,
                    "parameter2": 1,
                    "reversal_code": 1,
                    "sub_function_param1": 1,
                    "sub_function_parameter1": 2,
                    "sub_param1": 1,
                    "sub_param2": 1,
                    "sub_param_1": 1,
                    "sub_task_parameter": 1,
                    "value": 7
                },
                "param_3": {
                    "data": 2,
                    "data_pointer": 1,
                    "flag": 1,
                    "memory_address": 1,
                    "offset": 2,
                    "optional_param": 1,
                    "param3": 3,
                    "param_value": 1,
                    "parameter": 1,
                    "parameter1": 1,
                    "parameter3": 1,
                    "pointer_value": 2,
                    "reversal_param": 1,
                    "sub_function_param2": 1,
                    "sub_function_parameter2": 2,
                    "sub_param2": 1,
                    "sub_param3": 1,
                    "sub_param_2": 1,
                    "sub_task_property": 1,
                    "value": 6
                },
                "param_4": {
                    "data_pointer": 3,
                    "long_pointer": 1,
                    "memory_pointer": 1,
                    "param4": 3,
                    "param_array": 1,
                    "param_pointer": 1,
                    "parameter2": 1,
                    "parameter4": 1,
                    "pointer": 6,
                    "pointer1": 2,
                    "pointer_1": 1,
                    "ptr": 2,
                    "reversal_data1": 1,
                    "sub_function_param3": 1,
                    "sub_function_parameter3": 2,
                    "sub_param3": 1,
                    "sub_param4": 1,
                    "sub_param_3": 1,
                    "sub_task_pointer": 1
                },
                "param_5": {
                    "address": 3,
                    "address_pointer": 1,
                    "count": 1,
                    "counter_pointer": 1,
                    "data": 2,
                    "data_ptr": 1,
                    "long_pointer": 1,
                    "num_ptr": 1,
                    "param5": 3,
                    "param_long_pointer": 1,
                    "param_pointer": 1,
                    "parameter3": 1,
                    "parameter5": 1,
                    "pointer2": 2,
                    "pointer_2": 1,
                    "reversal_data2": 1,
                    "sub_function_param4": 1,
                    "sub_function_parameter4": 2,
                    "sub_param4": 1,
                    "sub_param5": 1,
                    "sub_param_4": 1,
                    "sub_task_counter": 1,
                    "ulong_pointer": 1,
                    "value_pointer": 1
                }
            },
            "called": [
                "FUN_00109ed3"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nvoid execute_function_0010a0d3(long input)\n\n{\n  FUN_00109ed3(input,0x42,*(undefined4 *)(*(long *)(input + 0x60) + 0x18),0,0);\n  return;\n}\n\n",
            "current_name": "execute_function_0010a0d3",
            "entrypoint": "0x0010a0d3",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010a0d3": "execute_function_0010a0d3",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010a0e9": {
            "additional_data": {
                "FUN_00109b2f": {
                    "get_dynamic_data": 2
                },
                "FUN_00109b52": {
                    "send_command": 1
                },
                "FUN_0010a0e9": {
                    "execute_command": 10,
                    "execute_remote_command": 2,
                    "execute_request": 3,
                    "parse_request": 1,
                    "process_data": 5,
                    "process_request": 7,
                    "send_request": 1,
                    "submit_request": 1
                },
                "__s": {
                    "command": 1,
                    "command_output": 1,
                    "command_result": 2,
                    "command_string": 3,
                    "remote_string": 1,
                    "request_str": 1,
                    "request_string": 1,
                    "response": 2,
                    "result": 2,
                    "result_string": 2,
                    "session_id": 1,
                    "str1": 1,
                    "string": 3,
                    "string1": 2,
                    "string_1": 3,
                    "string_pointer": 1,
                    "string_ptr": 1,
                    "token": 1,
                    "username": 1
                },
                "__s_00": {
                    "allocated_string": 1,
                    "buffer": 1,
                    "dynamic_string": 2,
                    "final_string": 1,
                    "formatted_command": 2,
                    "formatted_output": 1,
                    "formatted_request": 6,
                    "formatted_string": 3,
                    "malloced_command": 1,
                    "modified_command": 1,
                    "modified_request_str": 1,
                    "modified_string": 4,
                    "modified_string_ptr": 1,
                    "new_string": 1,
                    "str2": 1,
                    "string2": 1,
                    "string_2": 2
                },
                "_s": {
                    "request_string": 1
                },
                "_s_00": {
                    "formatted_string": 1
                },
                "free": {
                    "free_memory": 1
                },
                "param_1": {
                    "base_address": 1,
                    "cmd_struct": 1,
                    "command": 2,
                    "command_context": 3,
                    "command_data": 1,
                    "context": 1,
                    "data": 2,
                    "data_ptr": 4,
                    "input": 1,
                    "input_data": 1,
                    "remote_structure": 1,
                    "request": 6,
                    "request_data": 2,
                    "request_info": 1,
                    "request_pointer": 1,
                    "request_ptr": 2,
                    "target_address": 1
                },
                "param_2": {
                    "arg1": 2,
                    "param1": 6,
                    "param1_value": 1,
                    "param2": 3,
                    "param_2": 5,
                    "param_a": 1,
                    "param_value_1": 1,
                    "value1": 10,
                    "value_1": 2
                },
                "param_3": {
                    "arg2": 2,
                    "param2": 6,
                    "param2_value": 1,
                    "param3": 3,
                    "param_3": 5,
                    "param_b": 1,
                    "param_value_2": 1,
                    "value2": 10,
                    "value_2": 2
                },
                "sVar3": {
                    "command_length": 2,
                    "command_string_length": 1,
                    "length": 1,
                    "output_length": 1,
                    "request_string_length": 1,
                    "response_length": 2,
                    "result_length": 6,
                    "session_id_length": 1,
                    "str1_length": 1,
                    "str_len": 1,
                    "string_len": 1,
                    "string_length": 11,
                    "token_length": 1,
                    "username_length": 1
                },
                "sprintf": {
                    "format_string": 2
                },
                "strlen": {
                    "get_string_length": 2
                },
                "uVar1": {
                    "byte_value": 2,
                    "char_offset": 1,
                    "char_value": 1,
                    "command_flag": 1,
                    "data": 2,
                    "data_value": 1,
                    "dynamic_data1": 1,
                    "flag": 1,
                    "offset": 1,
                    "option": 1,
                    "pointer": 1,
                    "pointer_1": 1,
                    "ptr": 1,
                    "ptr1": 1,
                    "ptr1_value": 1,
                    "ptr_value": 2,
                    "request_flag": 1,
                    "session_key": 1,
                    "unknown_value": 1,
                    "value1": 3,
                    "value_1": 3,
                    "variable1": 1
                },
                "uVar2": {
                    "dynamic_data2": 1,
                    "ptr2_value": 1,
                    "result": 18,
                    "return_value": 5,
                    "status": 2,
                    "value2": 1,
                    "value_2": 2
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "FUN_00109b52",
                "strlen",
                "sprintf",
                "FUN_00109b2f",
                "free",
                "xmalloc"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nundefined4 execute_remote_command_0010a0e9(long request,undefined8 value1,undefined8 value2)\n\n{\n  undefined value_1;\n  undefined4 result;\n  char *string_1;\n  size_t string_length;\n  char *formatted_request;\n  \n  value_1 = *(undefined *)(*(long *)(request + 0x60) + 0x1c);\n  result = *(undefined4 *)(*(long *)(request + 0x60) + 0x18);\n  string_1 = (char *)FUN_00109b2f();\n  string_length = strlen(string_1);\n  formatted_request = (char *)xmalloc(string_length + 100);\n  sprintf(formatted_request,\"r%s;%ld;%ld;\",string_1,value1,value2);\n  free_memory(string_1);\n  result = FUN_00109b52(request,formatted_request,0,value_1,result);\n  if ((char)result != '\\0') {\n    free_memory(formatted_request);\n  }\n  return result;\n}\n\n",
            "current_name": "execute_remote_command_0010a0e9",
            "entrypoint": "0x0010a0e9",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010a0e9": "execute_remote_command_0010a0e9",
                "__s": "string_1",
                "__s_00": "formatted_request",
                "_s": "request_string",
                "_s_00": "formatted_string",
                "free": "free_memory",
                "param_1": "request",
                "param_2": "value1",
                "param_3": "value2",
                "sVar3": "string_length",
                "sprintf": "format_string",
                "strlen": "get_string_length",
                "uVar1": "value_1",
                "uVar2": "result",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010a181": {
            "additional_data": {
                "FUN_00109b2f": {
                    "get_new_string": 1
                },
                "FUN_00109b52": {
                    "call_sub_function": 1,
                    "process_data": 1
                },
                "FUN_0010a181": {
                    "combine_strings": 1,
                    "determine_output_string": 1,
                    "execute_command": 1,
                    "execute_function": 1,
                    "extract_and_process_data": 1,
                    "generate_arbitrary_string": 2,
                    "generate_arithmetic_expression": 1,
                    "generate_report": 1,
                    "parse_data": 1,
                    "process_data": 16
                },
                "__s": {
                    "source_string": 1,
                    "str1": 5,
                    "string1": 16,
                    "string_1": 7,
                    "temp_str1": 1,
                    "temp_string1": 1
                },
                "__s_00": {
                    "param_string": 1,
                    "str2": 5,
                    "string2": 16,
                    "string_2": 7,
                    "temp_str2": 1,
                    "temp_string2": 1
                },
                "__s_01": {
                    "combined_str": 2,
                    "combined_string": 8,
                    "concat_str": 1,
                    "concatenated_string": 2,
                    "final_str": 1,
                    "formatted_string": 1,
                    "joined_string": 1,
                    "new_string": 1,
                    "output_string": 2,
                    "result_str": 1,
                    "result_string": 10,
                    "str_result": 1
                },
                "cVar1": {
                    "char_flag": 5,
                    "char_value": 10,
                    "character": 1,
                    "character_1": 1,
                    "data_flag": 1,
                    "flag": 3,
                    "flag_value": 7,
                    "ptr_char": 1,
                    "temp_char": 1,
                    "value": 1
                },
                "free": {
                    "deallocate_memory": 1,
                    "release_memory": 1
                },
                "iVar2": {
                    "count": 2,
                    "data_length": 1,
                    "int_value": 4,
                    "int_value1": 3,
                    "int_value_1": 1,
                    "int_var": 2,
                    "int_var1": 1,
                    "int_variable": 1,
                    "integer_1": 1,
                    "length": 9,
                    "multiplier": 2,
                    "ptr_int1": 1,
                    "some_var": 1,
                    "temp_int": 1,
                    "variable_1": 1
                },
                "iVar3": {
                    "calculation_result": 1,
                    "int_value2": 3,
                    "int_value_2": 1,
                    "int_var2": 1,
                    "integer_2": 1,
                    "ptr_int2": 1,
                    "result": 19,
                    "return_value": 2,
                    "variable_2": 1
                },
                "lVar7": {
                    "count": 7,
                    "counter": 20,
                    "increment": 1,
                    "index": 1,
                    "long_var": 1
                },
                "local_41": {
                    "combined_flag": 2,
                    "flag": 4,
                    "flag1": 1,
                    "flag2": 2,
                    "local_flag": 16,
                    "result": 1,
                    "special_flag": 1,
                    "temp_flag": 3,
                    "updated_flag": 1
                },
                "param_1": {
                    "arithmetic_context": 1,
                    "command": 1,
                    "data": 2,
                    "data_pointer": 1,
                    "data_ptr": 7,
                    "data_struct": 7,
                    "data_struct_ptr": 1,
                    "data_structure": 2,
                    "input_1": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "input_param1": 2,
                    "input_param_1": 1,
                    "source": 1,
                    "string_data": 1,
                    "value1": 1
                },
                "param_2": {
                    "input_2": 1,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "start": 6,
                    "start_idx": 1,
                    "start_index": 12,
                    "start_position": 1,
                    "start_value": 7,
                    "value2": 1
                },
                "param_3": {
                    "end": 6,
                    "end_idx": 1,
                    "end_index": 12,
                    "end_position": 1,
                    "end_value": 7,
                    "input_3": 1,
                    "input_param3": 1,
                    "input_param_3": 1,
                    "value3": 1
                },
                "param_4": {
                    "byte_param": 1,
                    "enable_flag": 1,
                    "flag": 22,
                    "input_4": 1,
                    "input_param4": 1,
                    "is_special": 1,
                    "mode": 1,
                    "option": 1,
                    "update_flag": 1,
                    "value4": 1
                },
                "sVar5": {
                    "len1": 5,
                    "len_string1": 1,
                    "len_string_1": 2,
                    "len_temp_str1": 1,
                    "length1": 13,
                    "length_1": 3,
                    "length_string1": 1,
                    "length_temp_string1": 1,
                    "source_len": 1,
                    "string_1_length": 2,
                    "string_length1": 1
                },
                "sVar6": {
                    "len2": 5,
                    "len_string2": 1,
                    "len_string_2": 2,
                    "len_temp_str2": 1,
                    "length2": 13,
                    "length_2": 3,
                    "length_string2": 1,
                    "length_temp_string2": 1,
                    "param_len": 1,
                    "string_2_length": 2,
                    "string_length2": 1
                },
                "sprintf": {
                    "format_string": 1
                },
                "strlen": {
                    "get_length": 1,
                    "get_string_length": 1
                },
                "uVar4": {
                    "result": 7,
                    "ret_val": 1,
                    "return_value": 20,
                    "status": 1
                },
                "xmalloc": {
                    "allocate_memory": 2
                }
            },
            "called": [
                "strlen",
                "FUN_00109b52",
                "sprintf",
                "FUN_00109b2f",
                "free",
                "xmalloc"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nundefined4 extract_and_process_data_0010a181(long data_ptr,long start_index,long end_index,byte flag)\n\n{\n  char char_value;\n  int length;\n  int result;\n  undefined4 return_value;\n  char *string1;\n  char *string2;\n  size_t length1;\n  size_t length2;\n  char *result_string;\n  long counter;\n  byte local_flag;\n  \n  char_value = *(char *)(*(long *)(data_ptr + 0x60) + 0x1c);\n  string1 = (char *)FUN_00109b2f();\n  local_flag = 1;\n  if (char_value == '\\0') {\n    local_flag = *(byte *)(*(long *)(data_ptr + 0x60) + 0x1c);\n  }\n  length = *(int *)(*(long *)(data_ptr + 0x60) + 0x18);\n  string2 = (char *)FUN_00109b2f(data_ptr);\n  length1 = strlen(string1);\n  length2 = strlen(string2);\n  result_string = (char *)xmalloc(length1 + 100 + length2);\n  if (flag == 0) {\n    *result_string = '\\0';\n    counter = 0;\n    local_flag = local_flag & 1;\n  }\n  else {\n    counter = *(long *)(data_ptr + 0x68);\n    *(long *)(data_ptr + 0x68) = counter + 1;\n    sprintf(result_string,\"%ld=@S;\",counter);\n    local_flag = flag;\n  }\n  length1 = strlen(result_string);\n  sprintf(result_string + length1,\"ar%s;%ld;%ld;%s\",string1,start_index,end_index,string2);\n  free(string1);\n  free(string2);\n  result = 0;\n  if (start_index <= end_index) {\n    result = length * (((int)end_index - (int)start_index) + 1);\n  }\n  return_value = FUN_00109b52(data_ptr,result_string,counter,local_flag,result);\n  if ((char)return_value != '\\0') {\n    free(result_string);\n  }\n  return return_value;\n}\n\n",
            "current_name": "extract_and_process_data_0010a181",
            "entrypoint": "0x0010a181",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010a181": "extract_and_process_data_0010a181",
                "__s": "string1",
                "__s_00": "string2",
                "__s_01": "result_string",
                "cVar1": "char_value",
                "free": "release_memory",
                "iVar2": "length",
                "iVar3": "result",
                "lVar7": "counter",
                "local_41": "local_flag",
                "param_1": "data_ptr",
                "param_2": "start_index",
                "param_3": "end_index",
                "param_4": "flag",
                "sVar5": "length1",
                "sVar6": "length2",
                "sprintf": "format_string",
                "strlen": "get_length",
                "uVar4": "return_value",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010a2b9": {
            "additional_data": {
                "FUN_00109b2f": {
                    "get_string": 1,
                    "get_string_value": 1,
                    "get_sub_function_address": 1,
                    "get_substring": 1
                },
                "FUN_00109b52": {
                    "execute_sub_function": 1,
                    "invoke_sub_function": 1,
                    "process_string": 1,
                    "process_sub_function": 1
                },
                "FUN_0010a2b9": {
                    "construct_string": 1,
                    "create_formatted_string": 1,
                    "create_use_string": 1,
                    "extract_and_format_string": 1,
                    "extract_data_from_binary": 1,
                    "generate_data_string": 2,
                    "generate_formatted_string": 2,
                    "generate_modified_string": 1,
                    "generate_report": 1,
                    "generate_serialized_string": 1,
                    "parse_and_format_data": 1,
                    "process_data": 13,
                    "process_input": 1,
                    "reverse_and_format": 1,
                    "reverse_and_format_string": 1,
                    "reverse_and_update_string": 1
                },
                "__format": {
                    "format_specifier": 1
                },
                "__ptr": {
                    "pointer": 1
                },
                "__s": {
                    "input_string": 1,
                    "original_string": 2,
                    "output_string": 1,
                    "result_string": 2,
                    "source_string": 1,
                    "str": 2,
                    "str1": 2,
                    "str_data": 1,
                    "string1": 11,
                    "string_1": 2,
                    "string_a": 1,
                    "string_pointer": 1,
                    "string_var1": 1,
                    "sub_function_string": 1,
                    "temp_string": 2
                },
                "__s_00": {
                    "formatted_string": 2,
                    "modified_string": 2,
                    "new_str": 2,
                    "new_str_data": 1,
                    "new_string": 9,
                    "new_string_pointer": 1,
                    "output_string": 1,
                    "str2": 2,
                    "string2": 10,
                    "string_2": 1
                },
                "auVar4": {
                    "result": 24,
                    "result_array": 1,
                    "return_val": 1,
                    "return_value": 5
                },
                "cVar1": {
                    "char1": 3,
                    "char_1": 1,
                    "char_val": 1,
                    "char_value": 8,
                    "char_var": 4,
                    "char_var1": 1,
                    "character": 4,
                    "character1": 1,
                    "flag_char": 1,
                    "some_char": 1,
                    "value1": 1
                },
                "free": {
                    "deallocate_memory": 1,
                    "free_memory": 1,
                    "release_memory": 2
                },
                "lVar3": {
                    "count": 8,
                    "counter": 20,
                    "long_var": 2,
                    "record_count": 1
                },
                "param_1": {
                    "binary_address": 2,
                    "data": 2,
                    "data_address": 2,
                    "data_length": 1,
                    "data_offset": 1,
                    "data_pointer": 4,
                    "data_ptr": 7,
                    "data_struct_pointer": 1,
                    "input_data": 2,
                    "input_param": 1,
                    "input_ptr": 1,
                    "input_value": 3,
                    "object_address": 1,
                    "pointer": 1,
                    "ptr1": 1,
                    "source_string": 1
                },
                "param_2": {
                    "append_flag": 1,
                    "condition": 1,
                    "flag": 23,
                    "is_first": 1,
                    "is_increment": 1,
                    "is_null": 1,
                    "is_param_null": 1,
                    "is_zero": 1,
                    "use_flag": 1
                },
                "param_3": {
                    "arg1": 3,
                    "arg_ptr1": 1,
                    "data_1": 1,
                    "input_param1": 2,
                    "param1": 8,
                    "param3": 1,
                    "param_3": 3,
                    "param_a": 3,
                    "ptr1": 2,
                    "unused_param": 1,
                    "unused_param1": 1,
                    "value1": 1,
                    "var1": 3,
                    "var_1": 1
                },
                "param_4": {
                    "arg2": 3,
                    "arg_ptr2": 1,
                    "data_2": 1,
                    "input_param2": 2,
                    "other_data": 1,
                    "param2": 8,
                    "param4": 1,
                    "param_4": 2,
                    "param_b": 3,
                    "ptr2": 2,
                    "unused_param2": 1,
                    "user_input": 1,
                    "value2": 1,
                    "var2": 3,
                    "var_2": 1
                },
                "sVar2": {
                    "input_length": 1,
                    "length": 1,
                    "length1": 5,
                    "output_length": 1,
                    "result_length": 1,
                    "source_string_length": 1,
                    "str_len": 2,
                    "str_length": 2,
                    "string1_length": 5,
                    "string_1_length": 1,
                    "string_len": 1,
                    "string_length": 9,
                    "strlen_result": 1
                },
                "sprintf": {
                    "format_string": 6
                },
                "strlen": {
                    "get_string_length": 2,
                    "string_length": 2
                },
                "xmalloc": {
                    "allocate_memory": 4
                }
            },
            "called": [
                "strlen",
                "FUN_00109b52",
                "sprintf",
                "free",
                "FUN_00109b2f",
                "xmalloc"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nundefined  [16] process_data_0010a2b9(long data_ptr,char flag,undefined8 param1,undefined8 param2)\n\n{\n  char char_value;\n  char *string1;\n  size_t strlen;\n  char *string2;\n  long counter;\n  undefined result [16];\n  \n  char_value = *(char *)(*(long *)(data_ptr + 0x60) + 0x1c);\n  string1 = (char *)FUN_00109b2f();\n  string_length = string_length(string1);\n  string2 = (char *)xmalloc(string_length + 0x1e);\n  if (flag == '\\0') {\n    *string2 = '\\0';\n    counter = 0;\n    flag = char_value;\n  }\n  else {\n    counter = *(long *)(data_ptr + 0x68);\n    *(long *)(data_ptr + 0x68) = counter + 1;\n    sprintf(string2,\"%ld=@S;\",counter);\n  }\n  string_length = string_length(string2);\n  sprintf(string2 + string_length,\"S%s\",string1);\n  free(string1);\n  result._0_4_ = FUN_00109b52(data_ptr,string2,counter,flag,0);\n  result._4_4_ = 0;\n  if ((char)result._0_4_ != '\\0') {\n    free(string2);\n  }\n  result._8_8_ = param2;\n  return result;\n}\n\n",
            "current_name": "process_data_0010a2b9",
            "entrypoint": "0x0010a2b9",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010a2b9": "process_data_0010a2b9",
                "__s": "string1",
                "__s_00": "string2",
                "auVar4": "result",
                "cVar1": "char_value",
                "free": "release_memory",
                "lVar3": "counter",
                "param_1": "data_ptr",
                "param_2": "flag",
                "param_3": "param1",
                "param_4": "param2",
                "sVar2": "string_length",
                "sprintf": "format_string",
                "strlen": "string_length",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010a377": {
            "additional_data": {
                "FUN_0010a377": {
                    "combine_strings": 1,
                    "construct_formatted_string": 1,
                    "decode_and_send_data": 1,
                    "generate_message": 1,
                    "generate_output_with_prefix": 1,
                    "insert_string_at_beginning": 1,
                    "process_binary_function": 1,
                    "process_data": 5,
                    "process_string": 1,
                    "reverse_and_process_string": 1,
                    "reverse_and_send_data": 7,
                    "reverse_string_concatenation": 1
                },
                "__s": {
                    "decoded_data": 1,
                    "first_string": 4,
                    "message": 2,
                    "source_string": 1,
                    "str1": 3,
                    "string1": 19,
                    "string_1": 1
                },
                "__s_00": {
                    "data": 1,
                    "decoded_string": 1,
                    "insert_string": 1,
                    "second_message": 1,
                    "second_string": 4,
                    "str2": 3,
                    "string2": 19,
                    "string_2": 1
                },
                "__s_01": {
                    "combined_data": 1,
                    "combined_message": 1,
                    "combined_str": 3,
                    "combined_string": 12,
                    "concatenated_string": 3,
                    "formatted_string": 2,
                    "new_string": 3,
                    "processed_data": 1,
                    "result": 1,
                    "result_string": 4
                },
                "cVar1": {
                    "char1": 1,
                    "char_status": 1,
                    "char_value": 3,
                    "char_var": 1,
                    "flag": 18,
                    "flag_char": 1,
                    "flag_value": 1,
                    "is_null_byte": 1
                },
                "param_1": {
                    "binary_address": 1,
                    "binary_parameter": 1,
                    "data": 3,
                    "data_pointer": 1,
                    "data_ptr": 4,
                    "input": 6,
                    "input_address": 1,
                    "input_buffer": 1,
                    "input_data": 4,
                    "input_param": 4,
                    "input_parameter": 2,
                    "input_ptr": 1,
                    "input_value": 2
                },
                "sVar3": {
                    "data_length": 1,
                    "first_string_len": 1,
                    "len1": 2,
                    "len_str1": 1,
                    "length1": 13,
                    "length_1": 1,
                    "length_first_string": 3,
                    "length_string1": 1,
                    "message_length": 2,
                    "source_len": 1,
                    "string1_length": 5
                },
                "sVar4": {
                    "data_length": 1,
                    "insert_len": 1,
                    "len2": 2,
                    "len_str2": 1,
                    "length2": 13,
                    "length_2": 1,
                    "length_second_string": 3,
                    "length_string2": 1,
                    "second_message_length": 1,
                    "second_string_len": 1,
                    "string2_length": 5,
                    "string_length": 1
                },
                "uVar2": {
                    "result": 19,
                    "return_value": 12
                },
                "uVar5": {
                    "additional_value": 1,
                    "flag": 2,
                    "flag_value": 2,
                    "flag_variable": 1,
                    "is_flag_set": 2,
                    "is_not_null": 1,
                    "is_null": 1,
                    "should_free": 1,
                    "special_flag": 1,
                    "unused_var": 1,
                    "updated_flag": 1,
                    "use_default_value": 1,
                    "use_special_character": 1,
                    "variant": 1
                }
            },
            "called": [
                "FUN_00109b52",
                "strlen",
                "sprintf",
                "free",
                "FUN_00109b2f",
                "xmalloc"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nundefined4 reverse_and_send_data_0010a377(long input)\n\n{\n  char flag;\n  undefined4 result;\n  char *string1;\n  char *string2;\n  size_t length1;\n  size_t length2;\n  char *combined_string;\n  undefined is_flag_set;\n  \n  is_flag_set = 1;\n  flag = *(char *)(*(long *)(input + 0x60) + 0x1c);\n  string1 = (char *)FUN_00109b2f();\n  if (flag == '\\0') {\n    is_flag_set = *(undefined *)(*(long *)(input + 0x60) + 0x1c);\n  }\n  string2 = (char *)FUN_00109b2f(input);\n  length1 = strlen(string1);\n  length2 = strlen(string2);\n  combined_string = (char *)xmalloc(length1 + 3 + length2);\n  sprintf(combined_string,\"@%s,%s\",string2,string1);\n  free(string2);\n  free(string1);\n  result = FUN_00109b52(input,combined_string,0,is_flag_set,0);\n  if ((char)result != '\\0') {\n    free(combined_string);\n  }\n  return result;\n}\n\n",
            "current_name": "reverse_and_send_data_0010a377",
            "entrypoint": "0x0010a377",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010a377": "reverse_and_send_data_0010a377",
                "__s": "string1",
                "__s_00": "string2",
                "__s_01": "combined_string",
                "cVar1": "flag",
                "param_1": "input",
                "sVar3": "length1",
                "sVar4": "length2",
                "uVar2": "result",
                "uVar5": "is_flag_set"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010a424": {
            "additional_data": {
                "FUN_00109b2f": {
                    "get_data": 1
                },
                "FUN_00109b52": {
                    "send_data": 1
                },
                "FUN_00109d97": {
                    "check_flag": 1
                },
                "FUN_0010a424": {
                    "create_modified_data": 1,
                    "extract_and_format_data": 2,
                    "extract_data": 1,
                    "generate_data_packet": 1,
                    "generate_formatted_string": 4,
                    "process_data": 4,
                    "reformatted_code": 1,
                    "reverse_string_concatenation": 1
                },
                "__ptr": {
                    "allocated_memory": 1,
                    "array": 2,
                    "array_ptr": 1,
                    "data_buffer": 1,
                    "dynamic_array": 5,
                    "ptr_array": 18,
                    "str_array": 1,
                    "string_array": 1,
                    "temp_pointer": 1
                },
                "__s": {
                    "inserted_string": 1,
                    "str2": 15,
                    "str_ptr_2": 1,
                    "string2": 12,
                    "string_data": 1,
                    "temp_string": 1
                },
                "__s_00": {
                    "combined_string": 2,
                    "data_packet": 1,
                    "final_str": 5,
                    "final_string": 5,
                    "formatted_str": 1,
                    "formatted_string": 5,
                    "new_str": 1,
                    "new_str_ptr": 1,
                    "new_string": 1,
                    "output_string": 1,
                    "result_str": 5,
                    "result_string": 3
                },
                "__s_01": {
                    "constant_string": 1
                },
                "bVar10": {
                    "bit_value": 1,
                    "byte_flag": 3,
                    "byte_var2": 1,
                    "check_flag": 1,
                    "condition": 1,
                    "condition_flag": 2,
                    "continue_loop": 1,
                    "flag": 1,
                    "flag1": 1,
                    "flag2": 1,
                    "flag3": 2,
                    "flag_var": 1,
                    "is_condition_met2": 1,
                    "loop_flag": 6,
                    "loop_temp_byte": 1,
                    "result4": 1,
                    "temp_byte": 2,
                    "temp_byte2": 2,
                    "temp_flag": 1,
                    "temp_flag_2": 1
                },
                "bVar2": {
                    "byte_result": 1,
                    "byte_val": 5,
                    "byte_value": 4,
                    "byte_var": 6,
                    "result2": 1,
                    "temp_byte": 11,
                    "temp_byte1": 1,
                    "temp_flag": 2
                },
                "cVar1": {
                    "char_value": 2,
                    "char_var": 1,
                    "output_char1": 1,
                    "result": 21,
                    "result1": 1,
                    "result_char": 3,
                    "result_flag": 1,
                    "return_value": 1
                },
                "free": {
                    "release_memory": 1
                },
                "iVar3": {
                    "counter": 1,
                    "increment": 1,
                    "index": 3,
                    "int_value": 1,
                    "int_var": 2,
                    "length": 2,
                    "loop_index": 1,
                    "string_length": 1,
                    "temp": 1,
                    "temp_int": 11,
                    "temp_int1": 1,
                    "temp_var": 6
                },
                "lVar11": {
                    "index2": 1,
                    "inner_loop_var": 1,
                    "j": 3,
                    "length_index": 1,
                    "loop_counter2": 1,
                    "loop_index": 10,
                    "loop_index_2": 1,
                    "loop_var2": 8,
                    "loop_variable": 1,
                    "loop_variable2": 3,
                    "total_length": 1
                },
                "lVar9": {
                    "i": 3,
                    "index": 9,
                    "loop_count": 1,
                    "loop_counter": 2,
                    "loop_index": 2,
                    "loop_var": 2,
                    "loop_var1": 7,
                    "loop_variable": 3,
                    "temp_len": 1,
                    "temp_long": 1
                },
                "param_1": {
                    "arg1": 2,
                    "binary_address": 1,
                    "binary_data": 1,
                    "binary_ptr": 1,
                    "data": 3,
                    "data_address": 1,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "input": 4,
                    "input1": 1,
                    "input_address": 1,
                    "input_data": 1,
                    "input_param": 4,
                    "input_param1": 2,
                    "input_value": 1,
                    "input_value1": 1,
                    "original_param": 2,
                    "original_parameter": 1
                },
                "param_2": {
                    "arg2": 2,
                    "condition": 1,
                    "flag": 18,
                    "flag1": 6,
                    "flag_param": 1,
                    "input_param2": 2,
                    "input_value2": 1
                },
                "param_3": {
                    "arg3": 2,
                    "count": 15,
                    "input_param3": 2,
                    "input_value3": 1,
                    "length": 2,
                    "num_elements": 5,
                    "num_of_strings": 1,
                    "size": 2,
                    "size_param": 1
                },
                "param_4": {
                    "additional_flag": 5,
                    "arg4": 2,
                    "check": 1,
                    "condition": 3,
                    "conditional_param": 1,
                    "enable_last": 1,
                    "extra_flag": 2,
                    "flag": 1,
                    "flag2": 8,
                    "input_param4": 2,
                    "input_value4": 1,
                    "insert_flag": 1,
                    "is_condition_met": 1,
                    "preserve_flag": 1,
                    "update_flag": 1
                },
                "pcVar5": {
                    "format_data": 1,
                    "original_string": 1,
                    "str1": 15,
                    "str_ptr_1": 1,
                    "string1": 12,
                    "temp_char_pointer": 1
                },
                "sVar7": {
                    "len1": 5,
                    "length1": 14,
                    "original_string_length": 1,
                    "size1": 3,
                    "size_str1": 1,
                    "str1_length": 2,
                    "str_len1": 1,
                    "str_len_1": 1,
                    "string1_length": 1,
                    "string_length1": 1,
                    "strlen1": 1
                },
                "sVar8": {
                    "inserted_string_length": 1,
                    "len2": 5,
                    "length2": 14,
                    "size2": 3,
                    "size_str2": 1,
                    "str2_length": 2,
                    "str_len2": 1,
                    "str_len_2": 1,
                    "string2_length": 1,
                    "string_length2": 1,
                    "strlen2": 1
                },
                "sprintf": {
                    "format_string": 1
                },
                "strcpy": {
                    "copy_string": 1
                },
                "strlen": {
                    "get_length": 1
                },
                "uVar12": {
                    "final_flag": 1,
                    "flag": 1,
                    "flag2": 1,
                    "flag3": 4,
                    "flag4": 2,
                    "flag_val": 1,
                    "flag_value": 1,
                    "insert_flag": 1,
                    "last_byte_flag": 1,
                    "loop_flag": 1,
                    "loop_var3": 1,
                    "output_flag": 1,
                    "preserve_flag2": 1,
                    "result5": 1,
                    "result_flag": 1,
                    "temp_flag": 1,
                    "temp_var2": 2,
                    "u_var": 1,
                    "undefined_flag": 1,
                    "undefined_val": 1,
                    "undefined_value": 1,
                    "undefined_var": 3,
                    "unknown_var": 1,
                    "update_var": 1
                },
                "uVar4": {
                    "output": 1,
                    "result": 6,
                    "return_val": 1,
                    "return_value": 23
                },
                "uVar6": {
                    "format_string": 1,
                    "insert_string": 1,
                    "result3": 1,
                    "result_long": 1,
                    "result_var": 1,
                    "temp_return_value": 1,
                    "temp_value": 12,
                    "temp_var": 3,
                    "temp_var1": 1,
                    "val": 1,
                    "value": 7,
                    "var1": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "strlen",
                "FUN_00109b52",
                "strcpy",
                "sprintf",
                "free",
                "FUN_00109b2f",
                "FUN_00109d97",
                "xmalloc"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nundefined4 extract_and_format_data_0010a424(long input,char flag,int count,char flag2)\n\n{\n  char result;\n  byte temp_byte;\n  int temp_int;\n  undefined4 return_value;\n  char *str1;\n  undefined8 *ptr_array;\n  undefined8 temp_value;\n  char *str2;\n  size_t length1;\n  size_t length2;\n  char *result_str;\n  long index;\n  byte loop_flag;\n  long loop_index;\n  undefined flag3;\n  \n  if ((flag == '\\0') && (result = FUN_00109d97(), result == '\\0')) {\n    return 0;\n  }\n  loop_flag = *(byte *)(*(long *)(input + 0x60) + 0x1c);\n  str1 = (char *)FUN_00109b2f(input);\n  if (count < 0) {\n    ptr_array = (undefined8 *)0x0;\n    count = 0;\nLAB_0010a582:\n    flag3 = 1;\n    if (loop_flag != 0) goto LAB_0010a596;\n  }\n  else {\n    if (count != 0) {\n      temp_int = count + 1;\n      ptr_array = (undefined8 *)xmalloc((long)temp_int * 8);\n      index = (long)(count + -1);\n      do {\n        temp_byte = 1;\n        if (loop_flag == 0) {\n          temp_byte = *(byte *)(*(long *)(input + 0x60) + 0x1c);\n        }\n        temp_value = FUN_00109b2f(input);\n        loop_flag = temp_byte & 1;\n        ptr_array[index] = temp_value;\n        index = index + -1;\n      } while ((int)index != -1);\n      if (flag2 == '\\0') {\n        result = FUN_00109d97(input);\n        if (result == '\\0') {\n          return 0;\n        }\n        temp_byte = 1;\n        if (loop_flag == 0) {\n          temp_byte = *(byte *)(*(long *)(input + 0x60) + 0x1c);\n        }\n        loop_flag = temp_byte & 1;\n        temp_value = FUN_00109b2f(input);\n        ptr_array[(long)temp_int + -1] = temp_value;\n        count = temp_int;\n      }\n      goto LAB_0010a582;\n    }\n    ptr_array = (undefined8 *)0x0;\n    if (flag2 != '\\0') goto LAB_0010a582;\n    ptr_array = (undefined8 *)xmalloc(8);\n    result = FUN_00109d97(input);\n    if (result == '\\0') {\n      return 0;\n    }\n    if ((loop_flag != 0) || (*(char *)(*(long *)(input + 0x60) + 0x1c) != '\\0')) {\n      temp_value = FUN_00109b2f(input);\n      count = 1;\n      flag3 = 1;\n      *ptr_array = temp_value;\n      goto LAB_0010a596;\n    }\n    temp_value = FUN_00109b2f(input);\n    count = 1;\n    *ptr_array = temp_value;\n  }\n  flag3 = *(undefined *)(*(long *)(input + 0x60) + 0x1c);\nLAB_0010a596:\n  str2 = (char *)FUN_00109b2f(input);\n  length1 = strlen(str1);\n  length2 = strlen(str2);\n  index = length1 + 10 + length2;\n  for (loop_index = 0; (int)loop_index < count; loop_index = loop_index + 1) {\n    length1 = strlen((char *)ptr_array[loop_index]);\n    index = index + length1;\n  }\n  result_str = (char *)xmalloc(index);\n  sprintf(result_str,\"#%s,%s\",str1,str2);\n  index = 0;\n  free(str1);\n  free(str2);\n  while( true ) {\n    length1 = strlen(result_str);\n    if (count <= (int)index) break;\n    *(undefined2 *)(result_str + length1) = 0x2c;\n    str1 = (char *)ptr_array[index];\n    index = index + 1;\n    strcpy(result_str + length1 + 1,str1);\n    free(str1);\n  }\n  *(undefined2 *)(result_str + length1) = 0x3b;\n  free(ptr_array);\n  return_value = FUN_00109b52(input,result_str,0,flag3,0);\n  if ((char)return_value == '\\0') {\n    return 0;\n  }\n  free(result_str);\n  return return_value;\n}\n\n",
            "current_name": "extract_and_format_data_0010a424",
            "entrypoint": "0x0010a424",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010a424": "extract_and_format_data_0010a424",
                "__ptr": "ptr_array",
                "__s": "str2",
                "__s_00": "result_str",
                "bVar10": "loop_flag",
                "bVar2": "temp_byte",
                "cVar1": "result",
                "free": "release_memory",
                "iVar3": "temp_int",
                "lVar11": "loop_index",
                "lVar9": "index",
                "param_1": "input",
                "param_2": "flag",
                "param_3": "count",
                "param_4": "flag2",
                "pcVar5": "str1",
                "sVar7": "length1",
                "sVar8": "length2",
                "sprintf": "format_string",
                "strcpy": "copy_string",
                "strlen": "get_length",
                "uVar12": "flag3",
                "uVar4": "return_value",
                "uVar6": "temp_value",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010a69a": {
            "additional_data": {
                "FUN_0010a69a": {
                    "convert_to_hex_string": 1,
                    "extract_data": 1,
                    "format_and_store_value": 1,
                    "parse_and_allocate_memory": 1,
                    "parse_and_update_data": 1,
                    "parse_data": 1,
                    "parse_input": 1,
                    "process_data": 16,
                    "process_input": 1,
                    "process_param_values": 1,
                    "reverse_and_allocate_memory": 3,
                    "reverse_and_update_value": 1,
                    "sanitize_input": 1
                },
                "Fun_00109c2e": {
                    "get_initial_value": 1
                },
                "lVar2": {
                    "converted_value": 3,
                    "data": 1,
                    "input_length": 1,
                    "length": 14,
                    "processed_value": 1,
                    "result": 1,
                    "result_length": 2,
                    "return_value": 2,
                    "value": 5,
                    "value_length": 1
                },
                "local_60": {
                    "buffer": 5,
                    "converted_string": 1,
                    "formatted_data": 2,
                    "formatted_string": 2,
                    "message": 2,
                    "output_buffer": 4,
                    "output_str": 1,
                    "output_string": 7,
                    "output_text": 1,
                    "parsed_data": 1,
                    "prefix_buffer": 1,
                    "prefix_string": 1,
                    "string_buffer": 1,
                    "temp_string": 1
                },
                "param_1": {
                    "base": 1,
                    "base_address": 2,
                    "data": 9,
                    "data_address": 1,
                    "data_pointer": 4,
                    "data_ptr": 6,
                    "input": 1,
                    "input_address": 3,
                    "input_data": 1,
                    "input_param": 2,
                    "input_pointer": 1
                },
                "param_2": {
                    "address": 3,
                    "buffer": 1,
                    "data": 1,
                    "data_length": 1,
                    "data_size": 3,
                    "info": 1,
                    "input_data": 1,
                    "length": 1,
                    "new_value": 1,
                    "output": 1,
                    "output_address": 1,
                    "output_data": 1,
                    "output_param": 1,
                    "output_pointer": 1,
                    "param": 1,
                    "param_2": 1,
                    "param_ptr": 4,
                    "ptr": 2,
                    "result_pointer": 1,
                    "secondary_param": 1,
                    "unused_parameter": 1,
                    "value": 2
                },
                "param_3": {
                    "check_flag": 1,
                    "flag": 18,
                    "input_length": 1,
                    "is_available": 1,
                    "is_data_valid": 1,
                    "length": 2,
                    "num_digits": 1,
                    "number_of_digits": 1,
                    "param_length": 1,
                    "should_process_output": 1,
                    "size": 3
                },
                "param_4": {
                    "char_val": 3,
                    "char_value": 4,
                    "character": 9,
                    "check": 1,
                    "condition": 1,
                    "flag": 8,
                    "flag_char": 1,
                    "is_flag_set": 1,
                    "is_zero": 1,
                    "param_char": 1,
                    "symbol": 1
                },
                "param_5": {
                    "count": 1,
                    "flag_int": 1,
                    "int_value": 1,
                    "number": 3,
                    "param_uint": 1,
                    "uint_val": 3,
                    "uint_value": 3,
                    "value": 18
                },
                "sVar3": {
                    "existing_length": 1,
                    "formatted_length": 2,
                    "length": 8,
                    "length_local60": 1,
                    "local_len": 1,
                    "output_length": 1,
                    "prefix_length": 2,
                    "size": 1,
                    "str_len": 1,
                    "str_length": 2,
                    "string_length": 11
                },
                "uVar1": {
                    "result": 30,
                    "return_value": 1
                },
                "uVar4": {
                    "allocated_memory": 23,
                    "allocated_ptr": 1,
                    "allocated_value": 1,
                    "allocation": 1,
                    "dynamic_allocation": 1,
                    "malloc_ptr": 1,
                    "malloc_result": 2,
                    "xmalloc_result": 1
                },
                "uVar5": {
                    "flag": 1,
                    "has_data": 2,
                    "has_formatted_data": 1,
                    "has_length": 1,
                    "has_prefix": 2,
                    "has_value": 2,
                    "is_allocated": 1,
                    "is_conversion_successful": 1,
                    "is_converted": 1,
                    "is_data_present": 1,
                    "is_flag_set": 3,
                    "is_length_negative": 1,
                    "is_length_valid": 1,
                    "is_negative": 2,
                    "is_return_value_valid": 1,
                    "is_valid": 1,
                    "is_value": 2,
                    "is_value_negative": 1,
                    "is_value_present": 2,
                    "is_value_set": 1,
                    "is_value_valid": 1,
                    "is_zero": 1,
                    "should_print_value": 1
                }
            },
            "called": [
                "strlen",
                "FUN_00109b52",
                "FUN_00109c2e",
                "sprintf",
                "xmalloc"
            ],
            "calling": [
                "FUN_00112c1f",
                "FUN_0010a83e"
            ],
            "code": "\nundefined4 process_data_0010a69a(long data,undefined8 param_ptr,int flag,char character,uint value)\n\n{\n  undefined4 result;\n  long length;\n  size_t string_length;\n  undefined8 allocated_memory;\n  undefined is_flag_set;\n  char output_string [48];\n  \n  if (flag == 0) {\n    output_string[0] = '\\0';\n    is_flag_set = 0;\n    length = 0;\n  }\n  else {\n    length = FUN_00109c2e();\n    if (length < 0) {\n      return 0;\n    }\n    is_flag_set = 1;\n    sprintf(output_string,\"%ld=\",length);\n  }\n  string_length = strlen(output_string);\n  sprintf(output_string + string_length,\"%c%u\",(ulong)((-(uint)(character == '\\0') & 2) + 0x73),(ulong)value);\n  result = FUN_00109b52(data,output_string,length,is_flag_set,value);\n  if ((char)result == '\\0') {\n    return 0;\n  }\n  length = *(long *)(data + 0x60);\n  allocated_memory = xmalloc(1);\n  *(undefined8 *)(length + 0x20) = allocated_memory;\n  **(undefined **)(*(long *)(data + 0x60) + 0x20) = 0;\n  return result;\n}\n\n",
            "current_name": "process_data_0010a69a",
            "entrypoint": "0x0010a69a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010a69a": "process_data_0010a69a",
                "lVar2": "length",
                "local_60": "output_string",
                "param_1": "data",
                "param_2": "param_ptr",
                "param_3": "flag",
                "param_4": "character",
                "param_5": "value",
                "sVar3": "string_length",
                "uVar1": "result",
                "uVar4": "allocated_memory",
                "uVar5": "is_flag_set"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010a77a": {
            "additional_data": {
                "FUN_00109b2f": {
                    "get_data": 1,
                    "get_some_value": 1
                },
                "FUN_00109b52": {
                    "modify_data": 1
                },
                "FUN_0010a77a": {
                    "combine_strings_and_call_function": 1,
                    "parse_data": 1,
                    "process_and_send_data": 1,
                    "process_data": 24,
                    "reconstruct_string": 1
                },
                "__s": {
                    "info": 1,
                    "source_string": 1,
                    "str1": 11,
                    "string": 3,
                    "string1": 10,
                    "string_1": 2,
                    "string_ptr": 2,
                    "string_value": 1
                },
                "__s_00": {
                    "additional_info": 1,
                    "new_string_1": 1,
                    "prefix": 2,
                    "prefix_string": 1,
                    "processed_string1": 1,
                    "result_string": 1,
                    "str2": 11,
                    "string2": 10,
                    "temp_string": 1,
                    "temp_string1": 1,
                    "temp_string_value": 1
                },
                "__s_01": {
                    "combined_info": 1,
                    "combined_str": 3,
                    "combined_string": 8,
                    "combined_string_value": 1,
                    "concatenated_str": 1,
                    "concatenated_string": 3,
                    "final_string": 1,
                    "merged_str": 1,
                    "merged_string": 1,
                    "modified_string": 1,
                    "new_str": 2,
                    "new_string": 1,
                    "processed_string2": 1,
                    "reconstructed_string": 1,
                    "result": 2,
                    "result_string": 1,
                    "str3": 1,
                    "str_final": 1
                },
                "free": {
                    "deallocate_memory": 1,
                    "free_memory": 1
                },
                "lVar2": {
                    "data_pointer": 3,
                    "data_ptr": 3,
                    "info_pointer": 1,
                    "param_pointer": 1,
                    "pointer": 1,
                    "ptr": 4,
                    "ptr1": 4,
                    "ptr_data": 3,
                    "ptr_info": 1,
                    "ptr_struct": 1,
                    "ptr_to_some_struct": 1,
                    "ptr_to_struct": 1,
                    "struct_address": 1,
                    "struct_pointer": 1,
                    "struct_ptr": 2
                },
                "param_1": {
                    "data": 17,
                    "data_address": 2,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "input": 1,
                    "input_address": 2,
                    "input_data": 1,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_value": 1
                },
                "sVar5": {
                    "additional_info_length": 1,
                    "input_length": 1,
                    "len1": 6,
                    "len_str2": 1,
                    "len_string2": 1,
                    "len_temp_string1": 1,
                    "length1": 9,
                    "length_1": 1,
                    "length_string2": 1,
                    "prefix_len": 1,
                    "prefix_length": 2,
                    "str1_length": 1,
                    "str2_length": 1,
                    "string2_length": 1,
                    "string_1_length": 1,
                    "temp_len1": 1
                },
                "sVar6": {
                    "info_length": 1,
                    "len2": 6,
                    "len_str1": 1,
                    "len_string": 1,
                    "len_string1": 1,
                    "length2": 9,
                    "length_2": 1,
                    "length_string1": 1,
                    "str1_length": 1,
                    "str2_length": 1,
                    "string1_length": 1,
                    "string_2_length": 1,
                    "string_len": 1,
                    "string_length": 3,
                    "temp_len2": 1
                },
                "sprintf": {
                    "format_string": 2
                },
                "strlen": {
                    "get_string_length": 2
                },
                "uVar1": {
                    "byte_val": 2,
                    "byte_value": 3,
                    "char1": 1,
                    "char_flag": 1,
                    "char_value": 1,
                    "character": 3,
                    "flag": 13,
                    "info_flag": 1,
                    "length": 1,
                    "param4": 1,
                    "value": 1,
                    "var1": 2
                },
                "uVar3": {
                    "info_value": 1,
                    "long_val": 1,
                    "long_value": 4,
                    "param2": 1,
                    "param3": 1,
                    "pointer": 1,
                    "ptr2": 1,
                    "ptr3": 1,
                    "ptr_data": 1,
                    "ptr_value": 1,
                    "value": 13,
                    "value1": 3,
                    "variable1": 1
                },
                "uVar4": {
                    "result": 21,
                    "return_value": 5,
                    "status": 3,
                    "value2": 1,
                    "var2": 1
                },
                "xmalloc": {
                    "allocate_memory": 2
                }
            },
            "called": [
                "strlen",
                "FUN_00109b52",
                "sprintf",
                "free",
                "FUN_00109b2f",
                "xmalloc"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nundefined4 process_and_send_data_0010a77a(long data)\n\n{\n  undefined flag;\n  long ptr;\n  char *str1;\n  undefined8 value;\n  undefined4 result;\n  char *str2;\n  size_t length1;\n  size_t length2;\n  char *combined_string;\n  \n  ptr = *(long *)(data + 0x60);\n  if ((ptr != 0) && (str1 = *(char **)(ptr + 0x20), str1 != (char *)0x0)) {\n    result = *(undefined4 *)(ptr + 0x18);\n    flag = *(undefined *)(ptr + 0x1c);\n    value = *(undefined8 *)(ptr + 0x10);\n    str2 = (char *)FUN_00109b2f();\n    length1 = strlen(str2);\n    length2 = strlen(str1);\n    combined_string = (char *)xmalloc(length1 + 2 + length2);\n    sprintf(combined_string,\"%s%s;\",str2,str1);\n    free_memory(str2);\n    free_memory(str1);\n    result = FUN_00109b52(data,combined_string,value,flag,result);\n    if ((char)result != '\\0') {\n      free_memory(combined_string);\n      return result;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_and_send_data_0010a77a",
            "entrypoint": "0x0010a77a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010a77a": "process_and_send_data_0010a77a",
                "__s": "str1",
                "__s_00": "str2",
                "__s_01": "combined_string",
                "free": "free_memory",
                "lVar2": "ptr",
                "param_1": "data",
                "sVar5": "length1",
                "sVar6": "length2",
                "sprintf": "format_string",
                "strlen": "get_string_length",
                "uVar1": "flag",
                "uVar3": "value",
                "uVar4": "result",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010a83e": {
            "additional_data": {
                "FUN_00109b2f": {
                    "allocate_memory": 3,
                    "get_data": 1,
                    "get_dynamic_data": 1,
                    "get_dynamic_memory": 2,
                    "get_random_value": 1
                },
                "FUN_0010a69a": {
                    "check_condition": 1,
                    "perform_operation": 3,
                    "process_data": 1,
                    "process_input": 1,
                    "process_result": 1,
                    "process_sub_data": 1
                },
                "FUN_0010a83e": {
                    "extract_info_and_format": 1,
                    "extract_information": 2,
                    "parse_and_format_string": 1,
                    "process_data": 16,
                    "process_function": 1,
                    "reverse_and_format_string": 1,
                    "reverse_and_modify": 2,
                    "reverse_string": 1
                },
                "__s": {
                    "format_string": 1,
                    "str": 3,
                    "str1": 8,
                    "str_a": 1,
                    "str_pointer": 1,
                    "str_ptr": 1,
                    "string1": 8,
                    "string_1": 5,
                    "string_a": 1,
                    "string_ptr": 1,
                    "string_value": 1
                },
                "__s_00": {
                    "formatted_str": 2,
                    "formatted_str_ptr": 1,
                    "modified_string": 1,
                    "new_str": 1,
                    "new_string_ptr": 1,
                    "output_string": 1,
                    "result_string": 1,
                    "str2": 8,
                    "str_b": 1,
                    "string2": 8,
                    "string_2": 5,
                    "string_b": 1
                },
                "cVar3": {
                    "char1": 3,
                    "char_a": 1,
                    "char_flag": 6,
                    "char_val": 2,
                    "char_value": 10,
                    "char_var": 6,
                    "character": 1,
                    "flag3": 1,
                    "flag_char": 1
                },
                "free": {
                    "free_memory": 3,
                    "release_memory": 1
                },
                "param_1": {
                    "address": 3,
                    "arg1": 1,
                    "arg_1": 1,
                    "data": 4,
                    "data_pointer": 1,
                    "data_ptr": 6,
                    "file_ptr": 1,
                    "function_pointer": 1,
                    "info_1": 1,
                    "input": 3,
                    "input_data": 1,
                    "input_param": 4,
                    "input_ptr": 1,
                    "input_string": 1,
                    "param1": 1,
                    "param_a": 1
                },
                "param_2": {
                    "additional_data": 1,
                    "arg2": 2,
                    "arg_2": 1,
                    "config": 1,
                    "config_param": 2,
                    "data": 2,
                    "data_length": 1,
                    "header_ptr": 1,
                    "info_2": 1,
                    "input_data": 1,
                    "input_value": 1,
                    "param": 5,
                    "param2": 4,
                    "param_2": 1,
                    "param_b": 1,
                    "param_pointer": 1,
                    "param_ptr": 3,
                    "ptr": 1,
                    "value": 1
                },
                "param_3": {
                    "arg3": 2,
                    "arg_3": 1,
                    "data_1": 1,
                    "info_3": 1,
                    "input_size": 1,
                    "length": 5,
                    "num1": 1,
                    "param3": 2,
                    "param_a": 2,
                    "param_c": 1,
                    "size": 3,
                    "size1": 8,
                    "size_param": 1,
                    "str_length": 1,
                    "value_a": 1
                },
                "param_4": {
                    "arg4": 2,
                    "arg_4": 1,
                    "character": 1,
                    "flag": 8,
                    "flag1": 5,
                    "flag_a": 1,
                    "flag_param": 1,
                    "info_4": 1,
                    "input_flag": 1,
                    "param4": 4,
                    "param_4": 2,
                    "param_b": 2,
                    "param_d": 1,
                    "unused": 1
                },
                "param_5": {
                    "arg5": 2,
                    "arg_5": 1,
                    "data_2": 1,
                    "flag2": 1,
                    "info_5": 1,
                    "mask": 1,
                    "num2": 1,
                    "param5": 3,
                    "param_5": 1,
                    "param_c": 2,
                    "param_e": 1,
                    "size2": 8,
                    "temp_param": 1,
                    "value": 5,
                    "value_b": 1,
                    "value_param": 1
                },
                "param_6": {
                    "arg_6": 1,
                    "condition1": 4,
                    "condition_1": 2,
                    "conditional_param": 1,
                    "flag1": 10,
                    "flag2": 4,
                    "flag3": 1,
                    "flag_1": 2,
                    "flag_a": 2,
                    "flag_b": 1,
                    "is_first_condition_met": 1,
                    "param6": 1,
                    "param_f": 1
                },
                "param_7": {
                    "arg_7": 1,
                    "check_param": 1,
                    "condition2": 4,
                    "condition_2": 2,
                    "flag2": 10,
                    "flag3": 4,
                    "flag4": 1,
                    "flag_2": 2,
                    "flag_b": 2,
                    "flag_c": 1,
                    "is_second_condition_met": 1,
                    "param7": 1,
                    "param_g": 1
                },
                "sVar2": {
                    "len": 1,
                    "length": 6,
                    "output_length": 1,
                    "str_len": 3,
                    "str_length": 7,
                    "string_length": 13
                },
                "sprintf": {
                    "format_string": 4
                },
                "strlen": {
                    "get_length": 2,
                    "get_string_length": 2
                },
                "uVar1": {
                    "result": 27,
                    "return_value": 3
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "strlen",
                "sprintf",
                "free",
                "FUN_00109b2f",
                "xmalloc",
                "FUN_0010a69a"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nundefined4\nprocess_data_0010a83e(long data_ptr,undefined8 param,ulong size1,undefined flag,ulong size2,\n            byte flag1,byte flag2)\n\n{\n  undefined4 result;\n  char *str1;\n  char *str2;\n  size_t string_length;\n  char char_value;\n  \n  if (((flag2 ^ 1) & flag1) == 0) {\n    str1 = (char *)0x0;\n    char_value = '\\0';\n  }\n  else {\n    char_value = *(char *)(*(long *)(data_ptr + 0x60) + 0x1c);\n    str1 = (char *)FUN_00109b2f();\n    size2 = size2 & 0xffffffff;\n    size1 = size1 & 0xffffffff;\n  }\n  result = FUN_0010a69a(data_ptr,param,size1,flag,size2);\n  if ((char)result != '\\0') {\n    if (flag1 == 0) {\n      return result;\n    }\n    if (flag2 == 0) {\n      if (str1 == (char *)0x0) {\n        return 0;\n      }\n      string_length = strlen(str1);\n      str2 = (char *)xmalloc(string_length + 3);\n      sprintf(str2,\"~%%%s\",str1);\n      free_memory(str1);\n      if (char_value != '\\0') {\n        *(undefined *)(*(long *)(data_ptr + 0x60) + 0x1c) = 1;\n      }\n    }\n    else {\n      if (*(long *)(*(long *)(data_ptr + 0x60) + 0x10) < 1) {\n        return 0;\n      }\n      str2 = (char *)xmalloc(0x14);\n      sprintf(str2,\"~%%%ld\",*(undefined8 *)(*(long *)(data_ptr + 0x60) + 0x10));\n    }\n    *(char **)(*(long *)(data_ptr + 0x60) + 0x38) = str2;\n    return result;\n  }\n  return result;\n}\n\n",
            "current_name": "process_data_0010a83e",
            "entrypoint": "0x0010a83e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010a83e": "process_data_0010a83e",
                "__s": "str1",
                "__s_00": "str2",
                "cVar3": "char_value",
                "free": "free_memory",
                "param_1": "data_ptr",
                "param_2": "param",
                "param_3": "size1",
                "param_4": "flag",
                "param_5": "size2",
                "param_6": "flag1",
                "param_7": "flag2",
                "sVar2": "string_length",
                "sprintf": "format_string",
                "strlen": "get_length",
                "uVar1": "result",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010a94e": {
            "additional_data": {
                "FUN_00109b2f": {
                    "get_result": 1,
                    "get_sub_string": 1,
                    "retrieve_data": 1
                },
                "FUN_0010a94e": {
                    "build_request": 1,
                    "build_string": 1,
                    "build_url": 2,
                    "concatenate_strings": 1,
                    "construct_path": 1,
                    "construct_payload": 1,
                    "create_formatted_string": 1,
                    "execute_command": 1,
                    "extracted_data": 1,
                    "format_string": 1,
                    "generate_code": 1,
                    "generate_connection_data": 1,
                    "generate_formatted_string": 4,
                    "generate_url": 2,
                    "parse_data": 1,
                    "parse_input": 1,
                    "parse_input_arguments": 1,
                    "reformat_function": 1,
                    "reverse_and_update_string": 1,
                    "update_config": 1,
                    "update_configuration": 4
                },
                "__s": {
                    "client_info": 1,
                    "config_string": 1,
                    "decompiled_string": 1,
                    "default_string_value": 1,
                    "extracted_string": 1,
                    "header_string": 1,
                    "helper_string": 1,
                    "output_string": 1,
                    "password": 1,
                    "random_string": 1,
                    "result": 8,
                    "result_str": 1,
                    "result_string": 1,
                    "some_string": 1,
                    "str1": 2,
                    "string": 1,
                    "string3": 1,
                    "sub_string": 1,
                    "substring": 1,
                    "temp_string": 1,
                    "temporary_string": 1,
                    "timestamp": 1,
                    "username_length": 1
                },
                "abort": {
                    "abort_execution": 1,
                    "halt_execution": 1,
                    "terminate_execution": 1
                },
                "cVar1": {
                    "char1": 1,
                    "char_check": 1,
                    "char_flag": 2,
                    "character": 1,
                    "check_value": 1,
                    "config_flag": 2,
                    "flag": 12,
                    "flag_char": 5,
                    "flag_value": 4,
                    "header_char": 1,
                    "is_flag_set": 1
                },
                "free": {
                    "deallocate_memory": 3
                },
                "lVar2": {
                    "auxiliary": 1,
                    "command_pointer": 1,
                    "config_address": 1,
                    "config_ptr": 3,
                    "config_ptr2": 1,
                    "connection_ptr": 1,
                    "context_ptr": 1,
                    "data": 1,
                    "data_address_2": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_size": 1,
                    "data_var": 1,
                    "local_var2": 1,
                    "object_ptr_copy": 1,
                    "param1_copy": 1,
                    "param_1_ptr": 1,
                    "param_pointer": 1,
                    "payload_address": 1,
                    "pointer_value": 1,
                    "ptr": 2,
                    "ptr1": 1,
                    "ptr_param_1": 1,
                    "ptr_param_pointer": 1,
                    "request_ptr": 1,
                    "var1": 1
                },
                "param_1": {
                    "address": 1,
                    "arg1": 2,
                    "binary_handle": 1,
                    "command": 1,
                    "config": 2,
                    "config_address": 1,
                    "config_ptr": 1,
                    "configuration": 1,
                    "configuration_address": 1,
                    "connection_info": 1,
                    "context": 1,
                    "data_address": 1,
                    "data_ptr": 1,
                    "data_structure": 1,
                    "file_descriptor": 1,
                    "input_address": 1,
                    "input_data": 2,
                    "input_param": 1,
                    "object_address": 1,
                    "object_ptr": 1,
                    "param": 2,
                    "param1": 2,
                    "param_1": 2,
                    "param_pointer": 1,
                    "request_struct": 1
                },
                "param_2": {
                    "arg2": 2,
                    "argument1": 1,
                    "hostname": 1,
                    "input_param_1": 1,
                    "input_string1": 2,
                    "message": 1,
                    "param1": 1,
                    "param2": 3,
                    "param_2": 1,
                    "param_a": 1,
                    "param_server": 1,
                    "param_value1": 1,
                    "resource": 1,
                    "service_address": 1,
                    "str1": 1,
                    "string1": 4,
                    "string_1": 1,
                    "username": 5,
                    "value1": 2
                },
                "param_3": {
                    "address": 1,
                    "arg3": 2,
                    "argument2": 1,
                    "input_param_2": 1,
                    "input_string2": 2,
                    "param2": 1,
                    "param3": 3,
                    "param_3": 1,
                    "param_b": 1,
                    "param_username": 1,
                    "param_value2": 1,
                    "password": 4,
                    "server": 1,
                    "server_address": 1,
                    "str2": 1,
                    "string2": 4,
                    "string_2": 1,
                    "user_id": 1,
                    "username": 1,
                    "value2": 2
                },
                "param_4": {
                    "arg4": 1,
                    "config_type": 1,
                    "flag": 14,
                    "input_param_3": 1,
                    "option": 6,
                    "option_flag": 1,
                    "param": 1,
                    "param3": 1,
                    "param4": 2,
                    "param_c": 1,
                    "param_flag": 2
                },
                "pcVar7": {
                    "buffer": 1,
                    "complete_string": 1,
                    "concatenated_string": 3,
                    "concatenated_strings": 1,
                    "connection_data": 1,
                    "dynamic_string": 1,
                    "formatted_str": 2,
                    "formatted_string": 3,
                    "new_config": 2,
                    "new_config_string": 1,
                    "new_memory": 1,
                    "new_str": 1,
                    "new_string": 3,
                    "new_url": 1,
                    "original_string": 1,
                    "output": 1,
                    "payload": 1,
                    "result_string": 2,
                    "str2": 1,
                    "url": 3
                },
                "pcVar9": {
                    "additional_char": 1,
                    "empty_string": 1,
                    "extra_string": 1,
                    "flag": 1,
                    "flag_str": 7,
                    "flag_string": 6,
                    "option": 1,
                    "option_str": 2,
                    "option_string": 4,
                    "param4_string": 1,
                    "param_flag": 1,
                    "param_flag_str": 1,
                    "str3": 1,
                    "suffix": 1,
                    "switch_case_string": 1,
                    "type": 1
                },
                "sVar3": {
                    "argument1_length": 1,
                    "config_length": 1,
                    "host_len": 1,
                    "len1": 7,
                    "len_pc_var7": 3,
                    "len_resource": 1,
                    "len_str1": 1,
                    "len_string_1": 1,
                    "length1": 6,
                    "original_string_length": 1,
                    "payload_length": 1,
                    "server_len": 1,
                    "server_length": 1,
                    "service_len": 1,
                    "size1": 2,
                    "url_len": 2
                },
                "sVar4": {
                    "argument2_length": 1,
                    "len2": 7,
                    "len_input_param_1": 1,
                    "len_param_2": 4,
                    "len_string_2": 1,
                    "length2": 6,
                    "message_length": 1,
                    "param2_length": 1,
                    "param_len": 1,
                    "param_server_length": 1,
                    "size2": 2,
                    "user_len": 1,
                    "username_len": 3,
                    "value1_length": 1
                },
                "sVar5": {
                    "client_info_len": 1,
                    "decompiled_string_length": 1,
                    "default_len": 1,
                    "header_string_length": 1,
                    "len3": 7,
                    "len_extracted_string": 1,
                    "len_helper_string": 1,
                    "len_result": 3,
                    "len_substring": 1,
                    "length3": 6,
                    "pass_len": 1,
                    "random_string_len": 1,
                    "result_length": 2,
                    "size3": 2,
                    "timestamp_len": 1,
                    "username_length": 1
                },
                "sVar6": {
                    "address_len": 1,
                    "address_length": 1,
                    "config_len": 1,
                    "flag_string_length": 1,
                    "len4": 7,
                    "len_input_param_2": 1,
                    "len_param_3": 2,
                    "len_password": 1,
                    "len_string_3": 1,
                    "len_user_id": 1,
                    "length4": 6,
                    "option_len": 1,
                    "param3_length": 1,
                    "param_username_length": 1,
                    "password_len": 2,
                    "size4": 2,
                    "value2_length": 1
                },
                "sprintf": {
                    "format_string": 3
                },
                "strlen": {
                    "get_length": 2,
                    "get_string_length": 1
                },
                "uVar8": {
                    "result": 15,
                    "result_code": 1,
                    "result_status": 1,
                    "return_val": 1,
                    "return_value": 13
                },
                "xmalloc": {
                    "allocate_memory": 3
                }
            },
            "called": [
                "strlen",
                "sprintf",
                "free",
                "FUN_00109b2f",
                "xmalloc",
                "abort"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nundefined8 reverse_and_update_string_0010a94e(long param1,char *username,char *password,int flag)\n\n{\n  char flag;\n  long config_ptr;\n  char *result;\n  size_t len1;\n  size_t len2;\n  size_t len3;\n  size_t len4;\n  char *new_string;\n  undefined8 result;\n  char *flag_str;\n  \n  flag = *(char *)(*(long *)(param1 + 0x60) + 0x1c);\n  result = (char *)FUN_00109b2f();\n  new_string = *(char **)(*(long *)(param1 + 0x60) + 0x20);\n  if (new_string == (char *)0x0) {\n    result = 0;\n  }\n  else {\n    len1 = strlen(new_string);\n    len2 = strlen(username);\n    len3 = strlen(result);\n    len4 = strlen(password);\n    new_string = (char *)xmalloc(len1 + 10 + len2 + len3 + len4);\n    if (flag == 1) {\n      flag_str = \"/1\";\n    }\n    else {\n      flag_str = \"/0\";\n      if ((flag != 2) && (flag_str = \"\", flag != 0)) {\n                    \n        abort();\n      }\n    }\n    sprintf(new_string,\"%s%s:%s%s:%s;\",*(undefined8 *)(*(long *)(param1 + 0x60) + 0x20),username,flag_str,\n            result,password,*(long *)(param1 + 0x60));\n    free(*(void **)(*(long *)(param1 + 0x60) + 0x20));\n    config_ptr = *(long *)(param1 + 0x60);\n    *(char **)(config_ptr + 0x20) = new_string;\n    if (flag != '\\0') {\n      *(undefined *)(config_ptr + 0x1c) = 1;\n    }\n    result = CONCAT71((int7)((ulong)config_ptr >> 8),1);\n  }\n  return result;\n}\n\n",
            "current_name": "reverse_and_update_string_0010a94e",
            "entrypoint": "0x0010a94e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010a94e": "reverse_and_update_string_0010a94e",
                "__s": "result",
                "abort": "halt_execution",
                "cVar1": "flag",
                "free": "deallocate_memory",
                "lVar2": "config_ptr",
                "param_1": "param1",
                "param_2": "username",
                "param_3": "password",
                "param_4": "flag",
                "pcVar7": "new_string",
                "pcVar9": "flag_str",
                "sVar3": "len1",
                "sVar4": "len2",
                "sVar5": "len3",
                "sVar6": "len4",
                "sprintf": "format_string",
                "strlen": "get_length",
                "uVar8": "result",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010aa53": {
            "additional_data": {
                "FUN_0010aa53": {
                    "append_data_to_file": 1,
                    "create_log_entry": 1,
                    "extract_and_store_data": 2,
                    "modify_and_store_data": 1,
                    "parse_and_store_data": 2,
                    "parse_data": 1,
                    "parse_param": 1,
                    "process_data": 15,
                    "replace_string": 1,
                    "store_data": 2,
                    "update_data": 2,
                    "update_function": 1
                },
                "__s": {
                    "result_string": 1,
                    "source_string": 2,
                    "str": 9,
                    "str_value": 1,
                    "string": 11,
                    "string_data": 1,
                    "string_ptr": 1,
                    "string_value": 3,
                    "temp_string": 2
                },
                "__s1": {
                    "modified_string": 1
                },
                "cVar1": {
                    "char_flag": 1,
                    "char_value": 3,
                    "char_var1": 2,
                    "char_variable": 1,
                    "character": 1,
                    "data_flag": 1,
                    "file_option": 1,
                    "flag": 1,
                    "flag1": 1,
                    "flag_char": 2,
                    "flag_value": 14,
                    "previous_status": 1,
                    "ptr": 1,
                    "temp_char": 1
                },
                "cVar3": {
                    "char_value": 2,
                    "character": 1,
                    "condition_value": 1,
                    "flag2": 1,
                    "flag_char": 6,
                    "flag_char2": 1,
                    "flag_character": 1,
                    "flag_value": 3,
                    "mode_char": 2,
                    "mode_value": 2,
                    "option_char": 5,
                    "option_value": 3,
                    "status_variable": 1,
                    "type_value": 2
                },
                "lVar2": {
                    "address": 1,
                    "data": 1,
                    "data_ptr": 2,
                    "data_ptr_2": 1,
                    "data_struct": 3,
                    "data_struct_ptr": 1,
                    "file_ptr": 1,
                    "info_ptr": 1,
                    "log_struct_ptr": 1,
                    "object": 1,
                    "pointer": 1,
                    "ptr": 2,
                    "ptr1": 6,
                    "ptr2": 1,
                    "ptr_data": 2,
                    "ptr_value": 1,
                    "ptr_variable": 1,
                    "struct_address": 1,
                    "struct_ptr": 2,
                    "structure": 1
                },
                "lVar7": {
                    "allocated_memory": 1,
                    "new_address": 1,
                    "new_data": 1,
                    "new_pointer": 1,
                    "new_ptr": 3,
                    "ptr2": 4,
                    "realloc_address": 1,
                    "realloc_object": 1,
                    "realloc_ptr": 11,
                    "realloc_result": 3,
                    "reallocated_data": 1,
                    "reallocated_ptr": 2,
                    "resized_data_struct_ptr": 1
                },
                "param_1": {
                    "address": 1,
                    "arg1": 1,
                    "binary_data": 2,
                    "data": 9,
                    "data_address": 2,
                    "data_buffer": 1,
                    "data_ptr": 3,
                    "data_struct": 2,
                    "file_struct_pointer": 1,
                    "input": 3,
                    "input_data": 3,
                    "input_param": 1,
                    "input_value": 1,
                    "log_struct": 1
                },
                "param_2": {
                    "arg2": 1,
                    "data": 1,
                    "data_value": 1,
                    "new_value": 2,
                    "param": 1,
                    "param_value": 2,
                    "value": 22,
                    "value_param": 1
                },
                "param_3": {
                    "char_param": 1,
                    "char_to_append": 1,
                    "char_value": 1,
                    "character": 4,
                    "flag": 21,
                    "option": 1,
                    "param_char": 1,
                    "status": 1
                },
                "param_4": {
                    "condition": 1,
                    "flag": 5,
                    "flag_value": 1,
                    "mode": 8,
                    "option": 10,
                    "option_param": 1,
                    "param_flag": 1,
                    "size": 1,
                    "status": 1,
                    "type": 2
                },
                "pcVar6": {
                    "allocated_str": 1,
                    "buffer": 1,
                    "dynamic_string": 2,
                    "formatted_str": 3,
                    "formatted_string": 4,
                    "new_data": 2,
                    "new_str": 3,
                    "new_string": 14,
                    "new_string_ptr": 1
                },
                "sVar5": {
                    "length": 2,
                    "result_length": 1,
                    "source_length": 2,
                    "str_len": 4,
                    "str_length": 7,
                    "string_length": 15
                },
                "uVar10": {
                    "count": 4,
                    "count2": 1,
                    "counter": 1,
                    "counter_end": 1,
                    "end_index": 1,
                    "final_counter": 1,
                    "index2": 2,
                    "index_limit": 1,
                    "index_max": 1,
                    "last_index": 3,
                    "last_non_null_index": 1,
                    "length": 2,
                    "loop_count": 1,
                    "loop_counter_max": 2,
                    "loop_limit": 1,
                    "loop_var2": 1,
                    "max_counter": 2,
                    "max_index": 1,
                    "size": 1,
                    "temp_counter2": 1,
                    "temp_var2": 1,
                    "var2": 1
                },
                "uVar4": {
                    "count": 2,
                    "counter": 6,
                    "increment": 1,
                    "index": 3,
                    "loop_counter": 4,
                    "loop_counter2": 1,
                    "loop_index": 5,
                    "loop_var": 2,
                    "temp_counter": 1,
                    "var3": 1
                },
                "uVar8": {
                    "result": 16,
                    "result_code": 1,
                    "return_value": 12,
                    "success": 1,
                    "success_flag": 1
                },
                "uVar9": {
                    "count": 2,
                    "counter": 3,
                    "i": 1,
                    "index": 10,
                    "iteration": 1,
                    "loop_counter": 4,
                    "loop_var": 2,
                    "start_index": 1,
                    "temp_counter": 4,
                    "temp_var1": 1,
                    "var": 1,
                    "var1": 1
                }
            },
            "called": [
                "strlen",
                "sprintf",
                "xrealloc",
                "FUN_00109b2f",
                "free",
                "xmalloc",
                "abort"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nundefined8 process_data_0010aa53(long data,undefined8 value,char flag,int option)\n\n{\n  char flag_value;\n  long ptr1;\n  char flag_char;\n  uint counter;\n  char *string;\n  size_t string_length;\n  char *new_string;\n  long realloc_ptr;\n  undefined8 result;\n  ulong index;\n  ulong count;\n  \n  flag_value = *(char *)(*(long *)(data + 0x60) + 0x1c);\n  string = (char *)FUN_00109b2f();\n  string_length = strlen(string);\n  new_string = (char *)xmalloc(string_length + 0x19);\n  *new_string = flag + '0';\n  if (option == 1) {\n    flag_char = '1';\n  }\n  else {\n    flag_char = '0';\n    if ((option != 2) && (flag_char = '2', option != 0)) {\n                    \n      abort();\n    }\n  }\n  new_string[1] = flag_char;\n  sprintf(new_string + 2,\"%ld,%s;\",value);\n  free(string);\n  ptr1 = *(long *)(data + 0x60);\n  result = 0;\n  if ((ptr1 != 0) && (*(long *)(ptr1 + 0x20) != 0)) {\n    ptr1 = *(long *)(ptr1 + 0x28);\n    count = 0;\n    if (ptr1 != 0) {\n      counter = 0;\n      do {\n        index = (ulong)counter;\n        count = (ulong)counter;\n        counter = counter + 1;\n      } while (*(long *)(ptr1 + index * 8) != 0);\n    }\n    realloc_ptr = xrealloc(ptr1,(ulong)((int)count + 2) << 3);\n    *(char **)(realloc_ptr + count * 8) = new_string;\n    *(undefined8 *)(realloc_ptr + (ulong)((int)count + 1) * 8) = 0;\n    ptr1 = *(long *)(data + 0x60);\n    *(long *)(ptr1 + 0x28) = realloc_ptr;\n    if (flag_value != '\\0') {\n      *(undefined *)(ptr1 + 0x1c) = 1;\n    }\n    result = 1;\n  }\n  return result;\n}\n\n",
            "current_name": "process_data_0010aa53",
            "entrypoint": "0x0010aa53",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010aa53": "process_data_0010aa53",
                "__s": "string",
                "cVar1": "flag_value",
                "cVar3": "flag_char",
                "lVar2": "ptr1",
                "lVar7": "realloc_ptr",
                "param_1": "data",
                "param_2": "value",
                "param_3": "flag",
                "param_4": "option",
                "pcVar6": "new_string",
                "sVar5": "string_length",
                "uVar10": "count",
                "uVar4": "counter",
                "uVar8": "result",
                "uVar9": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010ab4d": {
            "additional_data": {
                "FUN_0010ab4d": {
                    "append_string": 2,
                    "append_string_and_data": 1,
                    "append_string_to_buffer": 2,
                    "append_string_to_data": 1,
                    "append_string_to_field": 1,
                    "append_string_to_list": 2,
                    "append_string_to_memory": 1,
                    "append_string_to_variable": 3,
                    "append_string_with_double_colons": 1,
                    "append_string_with_prefix": 1,
                    "append_to_buffer": 1,
                    "append_to_log": 2,
                    "append_to_message": 1,
                    "append_to_name": 1,
                    "append_to_string": 2,
                    "concatenate_strings": 1,
                    "update_data": 1,
                    "update_function_name": 1,
                    "update_param_string": 1,
                    "update_string": 3,
                    "update_string_with_param": 1,
                    "update_string_with_prefix": 1
                },
                "auVar3": {
                    "buffer_1": 1,
                    "output": 1,
                    "result": 14,
                    "result1": 6,
                    "result_variable": 1,
                    "return_value": 6,
                    "reversed_output": 1
                },
                "auVar7": {
                    "buffer_2": 1,
                    "final_result": 1,
                    "modified_return_value": 1,
                    "new_result": 1,
                    "new_return_value": 2,
                    "result": 1,
                    "result2": 6,
                    "result_2": 1,
                    "return_val": 3,
                    "return_value": 11,
                    "updated_output": 1,
                    "updated_result": 1
                },
                "lVar2": {
                    "buffer_ptr": 2,
                    "buffer_struct_ptr": 1,
                    "context_address_copy": 1,
                    "data_ptr2": 1,
                    "data_ptr_copy": 1,
                    "data_structure": 1,
                    "data_value2": 1,
                    "field_ptr_copy": 1,
                    "list_item": 1,
                    "local_var": 1,
                    "log_struct": 1,
                    "msg_ptr": 1,
                    "obj_ptr2": 1,
                    "pointer_to_data": 1,
                    "ptr": 1,
                    "ptr2": 4,
                    "ptr_2": 2,
                    "ptr_data": 1,
                    "ptr_value2": 1,
                    "struct_address_copy": 1,
                    "struct_ptr_value_2": 1,
                    "struct_value_copy": 1,
                    "structure_field_2": 1,
                    "structure_value2": 1,
                    "user_data_copy": 1
                },
                "param_1": {
                    "base_address": 3,
                    "buffer": 2,
                    "buffer_struct": 1,
                    "data": 4,
                    "data_ptr": 2,
                    "data_struct": 1,
                    "data_struct_ptr": 1,
                    "data_structure_ptr": 1,
                    "input": 2,
                    "input_param": 1,
                    "input_struct": 1,
                    "input_var": 1,
                    "list": 1,
                    "log_struct": 1,
                    "memory_address": 1,
                    "message": 1,
                    "obj": 1,
                    "param_ptr": 1,
                    "ptr": 1,
                    "structure": 1,
                    "structure_ptr": 2,
                    "user_data": 1
                },
                "param_2": {
                    "input": 1,
                    "input_string": 8,
                    "message": 1,
                    "name": 1,
                    "new_param": 1,
                    "new_string": 3,
                    "source": 1,
                    "string": 4,
                    "string_data": 1,
                    "string_to_add": 3,
                    "string_to_append": 6,
                    "text": 1
                },
                "param_3": {
                    "arg1": 2,
                    "data1": 2,
                    "input_param_1": 1,
                    "param3": 6,
                    "param_3": 5,
                    "parameter_3": 1,
                    "ptr_3": 1,
                    "unknown_param": 1,
                    "unnamed_param1": 1,
                    "unused1": 2,
                    "unused_param": 2,
                    "unused_param1": 3,
                    "unused_param_1": 2,
                    "unused_parameter": 1,
                    "unused_parameter1": 1
                },
                "param_4": {
                    "appended_string": 1,
                    "arg2": 2,
                    "base_address": 1,
                    "data2": 2,
                    "input_param_2": 1,
                    "param4": 6,
                    "param_4": 5,
                    "parameter_4": 1,
                    "ptr_4": 1,
                    "unknown_param2": 1,
                    "unnamed_param2": 1,
                    "unused2": 2,
                    "unused_param2": 3,
                    "unused_param_2": 2,
                    "unused_parameter2": 1,
                    "user_data": 1
                },
                "pcVar5": {
                    "allocated_memory": 1,
                    "allocated_string": 1,
                    "allocated_string_ptr": 1,
                    "buffer": 1,
                    "concatenated_string": 1,
                    "current_buffer_data": 1,
                    "dest": 1,
                    "dynamic_string": 2,
                    "existing_buffer": 1,
                    "existing_name": 1,
                    "existing_string": 9,
                    "existing_text": 1,
                    "field_value": 1,
                    "log_buffer": 1,
                    "log_string": 1,
                    "stored_string": 1,
                    "str1": 1,
                    "str_ptr": 1,
                    "string_pointer": 1,
                    "string_ptr": 2,
                    "target_str": 1
                },
                "sVar4": {
                    "input_len": 1,
                    "input_length": 3,
                    "input_str_len": 1,
                    "input_string_length": 5,
                    "length1": 3,
                    "length_of_string_to_append": 1,
                    "message_length": 1,
                    "name_len": 1,
                    "new_param_length": 1,
                    "new_str_len": 1,
                    "new_string_len": 1,
                    "source_len": 1,
                    "string_data_length": 1,
                    "string_len": 1,
                    "string_length": 5,
                    "string_to_add_length": 1,
                    "string_to_append_length": 1,
                    "strlen_input": 1,
                    "text_length": 1
                },
                "sVar6": {
                    "allocated_memory_len": 1,
                    "allocated_str_len": 1,
                    "allocated_string_length": 1,
                    "buffer_length": 1,
                    "current_buffer_length": 1,
                    "dest_len": 1,
                    "dynamic_string_length": 2,
                    "existing_buffer_length": 1,
                    "existing_length": 1,
                    "existing_name_len": 1,
                    "existing_str_len": 1,
                    "existing_string_len": 1,
                    "existing_string_length": 6,
                    "existing_text_length": 1,
                    "field_value_length": 1,
                    "length2": 3,
                    "length_of_concatenated_string": 1,
                    "log_string_length": 1,
                    "stored_string_length": 1,
                    "string_length": 1,
                    "string_pointer_length": 1,
                    "strlen_str_ptr": 1,
                    "target_str_len": 1
                },
                "uVar1": {
                    "base_address": 1,
                    "buffer_length": 1,
                    "buffer_ptr": 1,
                    "buffer_size": 1,
                    "context_address": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "data_structure_address": 1,
                    "data_value": 1,
                    "field_ptr": 1,
                    "input_data": 1,
                    "list_item": 1,
                    "log_struct_address": 1,
                    "msg_ptr": 1,
                    "obj_ptr": 1,
                    "ptr1": 4,
                    "ptr_1": 2,
                    "ptr_value": 2,
                    "struct_address": 1,
                    "struct_ptr": 1,
                    "struct_ptr_value": 1,
                    "struct_value": 1,
                    "structure_field": 1,
                    "structure_value": 1,
                    "user_data_value": 1
                }
            },
            "called": [
                "strlen",
                "sprintf",
                "xrealloc",
                "xmalloc"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nundefined  [16] append_string_to_variable_0010ab4d(long data,char *input_string,undefined8 param3,undefined8 param4)\n\n{\n  ulong ptr1;\n  long ptr2;\n  undefined result [16];\n  size_t string_length;\n  char *existing_string;\n  size_t existing_string_length;\n  undefined return_value [16];\n  \n  ptr1 = *(ulong *)(data + 0x60);\n  if ((ptr1 != 0) && (*(long *)(ptr1 + 0x20) != 0)) {\n    existing_string = *(char **)(ptr1 + 0x30);\n    string_length = strlen(input_string);\n    if (existing_string == (char *)0x0) {\n      existing_string = (char *)xmalloc(string_length + 3);\n      *existing_string = '\\0';\n    }\n    else {\n      existing_string_length = strlen(existing_string);\n      existing_string = (char *)xrealloc(existing_string,string_length + 4 + existing_string_length);\n    }\n    string_length = strlen(existing_string);\n    sprintf(existing_string + string_length,\"%s::\",input_string);\n    ptr2 = *(long *)(data + 0x60);\n    *(char **)(ptr2 + 0x30) = existing_string;\n    return_value._1_7_ = (undefined7)((ulong)ptr2 >> 8);\n    return_value[0] = 1;\n    return_value._8_8_ = param4;\n    return return_value;\n  }\n  result._8_8_ = 0;\n  result._0_8_ = ptr1;\n  return result << 0x40;\n}\n\n",
            "current_name": "append_string_to_variable_0010ab4d",
            "entrypoint": "0x0010ab4d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010ab4d": "append_string_to_variable_0010ab4d",
                "auVar3": "result",
                "auVar7": "return_value",
                "lVar2": "ptr2",
                "param_1": "data",
                "param_2": "input_string",
                "param_3": "param3",
                "param_4": "param4",
                "pcVar5": "existing_string",
                "sVar4": "string_length",
                "sVar6": "existing_string_length",
                "uVar1": "ptr1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010abdd": {
            "additional_data": {
                "FUN_00109b2f": {
                    "sub_function": 1
                },
                "FUN_0010abdd": {
                    "extract_function_data": 1,
                    "generate_log_entry": 1,
                    "modify_data": 1,
                    "modify_function": 1,
                    "process_data": 9,
                    "update_config": 2,
                    "update_data": 2,
                    "update_function": 1,
                    "update_string": 1
                },
                "__s": {
                    "additional_info": 1,
                    "additional_value": 1,
                    "allocated_string": 1,
                    "extra_string": 1,
                    "old_config": 1,
                    "ptr3": 1,
                    "ptr4": 2,
                    "str2": 1,
                    "str3": 9,
                    "str_ptr3": 1,
                    "string": 1,
                    "string3": 2,
                    "string4": 1,
                    "string_4": 1,
                    "string_pointer3": 1,
                    "string_ptr": 1,
                    "string_ptr_3": 1,
                    "string_var3": 1,
                    "temp_str": 1,
                    "temp_str_3": 1,
                    "temp_string": 1
                },
                "abort": {
                    "abort_program": 1
                },
                "bVar3": {
                    "byte1": 2,
                    "byte_val": 4,
                    "byte_value": 3,
                    "byte_var": 10,
                    "temp": 1,
                    "temp_bool": 1,
                    "temp_flag": 2
                },
                "cVar10": {
                    "calculated_char": 1,
                    "char1": 12,
                    "char_val1": 1,
                    "char_val_1": 1,
                    "char_value1": 1,
                    "char_var": 1,
                    "char_var1": 7,
                    "char_var_1": 2,
                    "character": 1,
                    "character1": 2,
                    "temp_char1": 1,
                    "temp_char_1": 1
                },
                "cVar11": {
                    "calculated_char2": 1,
                    "char2": 12,
                    "char_val2": 1,
                    "char_val_2": 1,
                    "char_value2": 1,
                    "char_var2": 7,
                    "char_var_2": 3,
                    "character2": 3,
                    "temp_char2": 1,
                    "temp_char_2": 1
                },
                "free": {
                    "release_memory": 1
                },
                "lVar1": {
                    "binary_pointer": 1,
                    "config_data_ptr": 1,
                    "config_ptr_value": 1,
                    "data": 2,
                    "data_length": 1,
                    "data_pointer": 2,
                    "data_ptr": 4,
                    "length_var": 1,
                    "length_var1": 1,
                    "local_var1": 1,
                    "long_var_1": 1,
                    "pointer": 1,
                    "ptr": 2,
                    "ptr1": 6,
                    "struct_address": 2,
                    "struct_ptr": 1,
                    "user_data": 1,
                    "value1": 1,
                    "var_1": 1
                },
                "local_52": {
                    "byte2": 2,
                    "byte_val": 2,
                    "byte_var": 3,
                    "byte_var2": 2,
                    "byte_var_2": 1,
                    "flag": 1,
                    "flag5": 1,
                    "local_byte": 9,
                    "local_byte_val": 1,
                    "local_byte_var": 1,
                    "local_flag": 6,
                    "local_temp1": 1,
                    "local_var": 1
                },
                "param_1": {
                    "arg1": 1,
                    "binary_address": 1,
                    "config_ptr": 2,
                    "data": 6,
                    "data_address": 1,
                    "data_pointer": 1,
                    "data_ptr": 4,
                    "input": 3,
                    "input_address": 1,
                    "input_param": 5,
                    "input_value": 1,
                    "input_value1": 1,
                    "param1": 2,
                    "param_1_address": 1,
                    "param_pointer": 1
                },
                "param_2": {
                    "arg2": 1,
                    "data": 1,
                    "input_str": 1,
                    "input_string": 4,
                    "input_value2": 1,
                    "message": 1,
                    "new_config": 1,
                    "new_value": 1,
                    "param2": 2,
                    "str1": 3,
                    "string1": 10,
                    "string_1": 1,
                    "string_param": 3,
                    "username": 1
                },
                "param_3": {
                    "arg3": 1,
                    "data_length": 1,
                    "flag": 1,
                    "input_len": 1,
                    "input_length": 1,
                    "input_size": 2,
                    "input_value3": 1,
                    "length": 10,
                    "length_input_string": 1,
                    "length_param": 1,
                    "log_type": 1,
                    "num1": 3,
                    "param3": 2,
                    "size": 2,
                    "size_param": 1,
                    "string_len": 1,
                    "uint_param": 1
                },
                "param_4": {
                    "arg4": 1,
                    "char_param": 1,
                    "flag1": 21,
                    "flag1_param": 1,
                    "flag_1": 4,
                    "is_option1": 1,
                    "param4": 2
                },
                "param_5": {
                    "arg5": 1,
                    "char_param_2": 1,
                    "flag2": 21,
                    "flag2_param": 1,
                    "flag_2": 4,
                    "is_option2": 1,
                    "param5": 2
                },
                "param_6": {
                    "arg6": 1,
                    "char_param_3": 1,
                    "flag3": 21,
                    "flag3_param": 1,
                    "flag_3": 4,
                    "is_option3": 1,
                    "param6": 2
                },
                "param_7": {
                    "arg7": 1,
                    "input_param_2": 1,
                    "input_value": 1,
                    "input_value4": 1,
                    "num2": 3,
                    "num_param": 2,
                    "param": 1,
                    "param7": 3,
                    "param7_val": 1,
                    "param7_value": 1,
                    "param_value": 1,
                    "parameter_7": 1,
                    "timestamp": 1,
                    "value": 12,
                    "value_param": 1
                },
                "param_8": {
                    "arg8": 1,
                    "char_param_4": 1,
                    "enable_flag": 1,
                    "flag4": 18,
                    "flag4_param": 1,
                    "flag_4": 4,
                    "is_authenticated": 1,
                    "is_value_available": 1,
                    "param8": 3
                },
                "pcVar2": {
                    "buffer": 1,
                    "char_ptr1": 1,
                    "config_string": 1,
                    "config_value_ptr": 1,
                    "formatted_log": 1,
                    "pointer_to_string1": 1,
                    "ptr1": 2,
                    "ptr2": 2,
                    "str1": 9,
                    "str_ptr": 1,
                    "str_ptr1": 1,
                    "string1": 3,
                    "string2": 1,
                    "string_2": 1,
                    "string_pointer1": 1,
                    "string_ptr": 1,
                    "string_ptr_1": 1,
                    "string_var1": 1,
                    "temp_str_1": 1
                },
                "pcVar4": {
                    "char_ptr2": 1,
                    "new_value_ptr": 1,
                    "pointer_to_string2": 1,
                    "ptr2": 2,
                    "ptr3": 2,
                    "str2": 9,
                    "str_ptr2": 2,
                    "string2": 3,
                    "string3": 1,
                    "string_3": 1,
                    "string_pointer2": 1,
                    "string_ptr_2": 2,
                    "string_var2": 1,
                    "temp_buffer": 1,
                    "temp_str_2": 1,
                    "temp_value_ptr": 1,
                    "user_log": 1
                },
                "sVar5": {
                    "config_string_length": 1,
                    "config_value_len": 1,
                    "len1": 10,
                    "len_1": 1,
                    "len_string2": 1,
                    "length1": 7,
                    "length_1": 1,
                    "length_var1": 1,
                    "log_length1": 1,
                    "size1": 2,
                    "size_temp_str_1": 1,
                    "str1_length": 1,
                    "string1_length": 1,
                    "string_length_1": 1
                },
                "sVar6": {
                    "len2": 10,
                    "len_2": 1,
                    "len_string3": 1,
                    "length2": 7,
                    "length_2": 1,
                    "length_var2": 1,
                    "log_length2": 1,
                    "new_value_ptr_length": 1,
                    "size2": 2,
                    "size_temp_str_2": 1,
                    "str2_length": 1,
                    "string2_length": 1,
                    "string_length_2": 1,
                    "temp_value_len": 1
                },
                "sVar7": {
                    "data_length": 1,
                    "len3": 10,
                    "len_3": 1,
                    "len_string1": 1,
                    "length3": 6,
                    "length_3": 1,
                    "length_var3": 1,
                    "new_config_len": 1,
                    "new_value_length": 1,
                    "size3": 2,
                    "size_input_string": 1,
                    "str1_length": 1,
                    "string1_length": 1,
                    "string_length_3": 1,
                    "username_length": 1
                },
                "sVar8": {
                    "additional_value_length": 1,
                    "extra_string_length": 1,
                    "info_length": 1,
                    "len4": 10,
                    "len_4": 1,
                    "len_string4": 1,
                    "length4": 6,
                    "length_4": 1,
                    "length_var4": 1,
                    "old_config_len": 1,
                    "size4": 2,
                    "size_temp_str_3": 1,
                    "str3_length": 2,
                    "string_length_4": 1
                },
                "sprintf": {
                    "string_format": 1
                },
                "strlen": {
                    "calculate_length": 1
                },
                "uVar9": {
                    "result": 25,
                    "return_val": 3,
                    "return_value": 3
                },
                "xrealloc": {
                    "resize_memory": 1
                }
            },
            "called": [
                "strlen",
                "sprintf",
                "xrealloc",
                "FUN_00109b2f",
                "free",
                "abort"
            ],
            "calling": [
                "FUN_0010add5",
                "FUN_0010adf2"
            ],
            "code": "\nundefined8\nprocess_data_0010abdd(long data,char *string1,uint length,char flag1,char flag2,char flag3,\n            undefined8 value,char flag4)\n\n{\n  long ptr1;\n  char *str1;\n  byte byte_var;\n  char *str2;\n  char *str3;\n  size_t len1;\n  size_t len2;\n  size_t len3;\n  size_t len4;\n  undefined8 result;\n  char char1;\n  char char2;\n  byte local_byte;\n  \n  str3 = (char *)0x0;\n  local_byte = *(byte *)(*(long *)(data + 0x60) + 0x1c);\n  str2 = (char *)FUN_00109b2f();\n  if (flag4 != '\\0') {\n    byte_var = 1;\n    if (local_byte == 0) {\n      byte_var = *(byte *)(*(long *)(data + 0x60) + 0x1c);\n    }\n    local_byte = byte_var & 1;\n    str3 = (char *)FUN_00109b2f(data);\n  }\n  ptr1 = *(long *)(data + 0x60);\n  if ((ptr1 == 0) || (str1 = *(char **)(ptr1 + 0x30), str1 == (char *)0x0)) {\n    result = 0;\n  }\n  else {\n    if (2 < length) {\n                    \n      abort_program();\n    }\n    if (flag2 == '\\0') {\n      char2 = (-(flag3 == '\\0') & 0xfeU) + 0x43;\n    }\n    else {\n      char2 = (-(flag3 == '\\0') & 0xfeU) + 0x44;\n    }\n    char1 = '?';\n    if (flag1 == '\\0') {\n      char1 = (-(flag4 == '\\0') & 4U) + 0x2a;\n    }\n    len1 = strlen(str1);\n    len2 = strlen(str2);\n    len3 = strlen(string1);\n    len4 = 0;\n    if (flag4 != '\\0') {\n      len4 = strlen(str3);\n    }\n    result = xrealloc(str1,len3 + len1 + 0x28 + len2 + len4);\n    *(undefined8 *)(ptr1 + 0x30) = result;\n    str1 = *(char **)(*(long *)(data + 0x60) + 0x30);\n    len1 = strlen(str1);\n    sprintf(str1 + len1,\"%s:%s;%c%c%c\",str2,string1,(ulong)(byte)(0x32 - (char)length),\n            (ulong)(uint)(int)char2,(ulong)(uint)(int)char1,len1);\n    free(str2);\n    if (flag4 != '\\0') {\n      str2 = *(char **)(*(long *)(data + 0x60) + 0x30);\n      len1 = strlen(str2);\n      sprintf(str2 + len1,\"%ld;%s;\",value,str3);\n      free(str3);\n    }\n    if (local_byte != 0) {\n      *(undefined *)(*(long *)(data + 0x60) + 0x1c) = 1;\n    }\n    result = 1;\n  }\n  return result;\n}\n\n",
            "current_name": "process_data_0010abdd",
            "entrypoint": "0x0010abdd",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010abdd": "process_data_0010abdd",
                "__s": "str3",
                "abort": "abort_program",
                "bVar3": "byte_var",
                "cVar10": "char1",
                "cVar11": "char2",
                "free": "release_memory",
                "lVar1": "ptr1",
                "local_52": "local_byte",
                "param_1": "data",
                "param_2": "string1",
                "param_3": "length",
                "param_4": "flag1",
                "param_5": "flag2",
                "param_6": "flag3",
                "param_7": "value",
                "param_8": "flag4",
                "pcVar2": "str1",
                "pcVar4": "str2",
                "sVar5": "len1",
                "sVar6": "len2",
                "sVar7": "len3",
                "sVar8": "len4",
                "sprintf": "string_format",
                "strlen": "calculate_length",
                "uVar9": "result",
                "xrealloc": "resize_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010add5": {
            "additional_data": {
                "FUN_0010abdd": {
                    "call_subfunction": 1,
                    "execute_sub_function": 3,
                    "initialize_application": 2,
                    "initialize_data": 1,
                    "initialize_values": 1,
                    "initialize_variables": 2,
                    "perform_initialization": 1,
                    "process_data": 1,
                    "process_data_helper": 1
                },
                "FUN_0010add5": {
                    "call_subfunctions": 1,
                    "execute_application": 4,
                    "execute_function": 2,
                    "execute_initial_function": 1,
                    "execute_initial_setup": 3,
                    "execute_initialization": 5,
                    "execute_main_function": 3,
                    "execute_preparation": 1,
                    "execute_setup": 1,
                    "execute_task": 1,
                    "initialize": 1,
                    "initialize_and_execute": 1,
                    "initialize_system": 2,
                    "process_data": 1,
                    "run_initial_setup": 1,
                    "run_main_function": 2
                },
                "param_1": {
                    "address": 1,
                    "config_value": 1,
                    "data_length": 2,
                    "data_size": 2,
                    "descriptive_param_1": 1,
                    "initial_value": 1,
                    "input": 1,
                    "input1": 2,
                    "input_value": 4,
                    "length": 3,
                    "long_param": 1,
                    "param": 1,
                    "size": 2,
                    "timestamp": 2,
                    "value": 1,
                    "value1": 3
                },
                "param_2": {
                    "buffer": 4,
                    "char_array_param": 1,
                    "data": 2,
                    "data_buffer": 2,
                    "data_pointer": 1,
                    "descriptive_param_2": 1,
                    "input2": 2,
                    "input_array": 2,
                    "input_data": 1,
                    "input_string": 4,
                    "message": 3,
                    "str": 1,
                    "string": 2,
                    "string_input": 1,
                    "string_value": 1
                },
                "param_3": {
                    "array_size": 1,
                    "count": 2,
                    "data_flags": 1,
                    "descriptive_param_3": 1,
                    "flag": 3,
                    "flags": 2,
                    "input3": 1,
                    "input_length": 1,
                    "input_size": 2,
                    "length": 2,
                    "option": 1,
                    "size": 9,
                    "uint_param": 1,
                    "value2": 1
                },
                "param_4": {
                    "char_param_4": 1,
                    "descriptive_param_4": 1,
                    "flag": 1,
                    "flag1": 17,
                    "flag_1": 1,
                    "option1": 5,
                    "option_a": 1,
                    "value1": 1
                },
                "param_5": {
                    "char_param_5": 1,
                    "descriptive_param_5": 1,
                    "flag2": 17,
                    "flag_2": 1,
                    "option1": 1,
                    "option2": 5,
                    "option_b": 1,
                    "value2": 1
                },
                "param_6": {
                    "char_param_6": 1,
                    "descriptive_param_6": 1,
                    "flag3": 17,
                    "flag_3": 1,
                    "option2": 1,
                    "option3": 5,
                    "option_c": 1,
                    "value3": 1
                }
            },
            "called": [
                "FUN_0010abdd"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nvoid run_main_function_0010add5(void)\n\n{\n  FUN_0010abdd();\n  return;\n}\n\n",
            "current_name": "run_main_function_0010add5",
            "entrypoint": "0x0010add5",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010add5": "run_main_function_0010add5"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010adf2": {
            "additional_data": {
                "FUN_0010abdd": {
                    "call_sub_function": 1,
                    "execute_initialization": 3,
                    "execute_setup": 1,
                    "execute_sub_function": 6,
                    "initialize_parameters": 1,
                    "initialize_sub_function": 1,
                    "initialize_sub_functions": 1,
                    "initialize_subsystem": 2,
                    "setup_environment": 1
                },
                "FUN_0010adf2": {
                    "execute_function": 1,
                    "execute_main_function": 8,
                    "execute_sub_functions": 2,
                    "initialize": 7,
                    "initialize_application": 2,
                    "initialize_module": 1,
                    "initialize_program": 1,
                    "initialize_system": 6
                },
                "param_1": {
                    "config_param": 1,
                    "data": 1,
                    "device_id": 3,
                    "file_handle": 1,
                    "input1": 2,
                    "input_param": 1,
                    "input_value": 4,
                    "len": 1,
                    "length": 7,
                    "num_iterations": 1,
                    "offset": 1,
                    "param1": 1,
                    "param_address": 1,
                    "parameter1": 1,
                    "some_value": 1,
                    "timestamp": 1,
                    "value1": 1
                },
                "param_2": {
                    "buffer": 4,
                    "config_file": 1,
                    "config_file_path": 1,
                    "data": 1,
                    "data_buffer": 1,
                    "data_string": 1,
                    "device_name": 3,
                    "input2": 2,
                    "input_string": 6,
                    "param2": 1,
                    "param_string": 1,
                    "parameter2": 1,
                    "str": 2,
                    "string": 2,
                    "string_param": 1,
                    "string_value": 1
                },
                "param_3": {
                    "buffer_size": 2,
                    "count": 1,
                    "device_flags": 3,
                    "flag": 3,
                    "flags": 1,
                    "identifier": 1,
                    "input3": 2,
                    "input_length": 1,
                    "input_size": 1,
                    "length": 1,
                    "options": 1,
                    "param3": 1,
                    "param_value": 1,
                    "parameter3": 1,
                    "size": 5,
                    "size_param": 1,
                    "value": 2,
                    "value2": 1
                },
                "param_4": {
                    "char1": 2,
                    "config_option1": 1,
                    "flag": 1,
                    "flag1": 13,
                    "flag_1": 6,
                    "is_enabled": 1,
                    "option1": 1,
                    "option_1": 1,
                    "param4": 1,
                    "param_flag1": 1,
                    "parameter4": 1
                },
                "param_5": {
                    "char2": 2,
                    "char_param1": 1,
                    "config_option2": 1,
                    "flag2": 13,
                    "flag_2": 6,
                    "has_connection": 1,
                    "option2": 1,
                    "option_2": 1,
                    "param5": 1,
                    "param_flag2": 1,
                    "parameter5": 1
                },
                "param_6": {
                    "char3": 2,
                    "char_param2": 1,
                    "config_option3": 1,
                    "flag3": 13,
                    "flag_3": 6,
                    "is_working": 1,
                    "option3": 1,
                    "option_3": 1,
                    "param6": 1,
                    "param_flag3": 1,
                    "parameter6": 1
                }
            },
            "called": [
                "FUN_0010abdd"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nvoid initialize_system_0010adf2(void)\n\n{\n  FUN_0010abdd();\n  return;\n}\n\n",
            "current_name": "initialize_system_0010adf2",
            "entrypoint": "0x0010adf2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010adf2": "initialize_system_0010adf2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010ae0e": {
            "additional_data": {
                "FUN_0010ae0e": {
                    "assemble_string": 1,
                    "combine_strings": 1,
                    "concatenate_and_free_strings": 1,
                    "construct_string": 1,
                    "decompile_and_improve": 1,
                    "extract_and_concatenate_strings": 1,
                    "extract_strings": 1,
                    "improve_code": 1,
                    "parse_function": 1,
                    "process_data": 1,
                    "reconstruct_string": 2,
                    "reverse_and_concat_strings": 1,
                    "reverse_and_concatenate_strings": 2
                },
                "__dest": {
                    "dest_str": 1,
                    "destination": 1
                },
                "__format": {
                    "format": 1,
                    "format_str": 1,
                    "format_string": 1
                },
                "__ptr": {
                    "generic_ptr": 1,
                    "pointer": 2,
                    "ptr": 8,
                    "ptr3": 3,
                    "ptr_array": 1,
                    "str_ptr": 1,
                    "sub_ptr": 1,
                    "sub_string": 1,
                    "subdata_alloc_ptr": 1,
                    "substruct_element_ptr": 1,
                    "temp_pointer": 4,
                    "temp_ptr": 6,
                    "void_ptr": 1
                },
                "__s": {
                    "dest_str": 1,
                    "string": 2
                },
                "__src": {
                    "source": 1,
                    "src_str": 1
                },
                "free": {
                    "deallocate": 1,
                    "deallocate_memory": 1
                },
                "lVar1": {
                    "address_1": 1,
                    "binary_structure": 1,
                    "data": 1,
                    "data_block": 1,
                    "data_ptr": 2,
                    "data_struct": 1,
                    "function_data": 1,
                    "function_pointer": 1,
                    "info_ptr": 1,
                    "pointer_1": 1,
                    "ptr1": 6,
                    "ptr_to_struct": 2,
                    "struct_pointer": 1,
                    "struct_ptr": 6,
                    "structure_address": 1,
                    "structure_ptr": 1,
                    "value1": 1,
                    "var1": 2
                },
                "lVar2": {
                    "address_2": 1,
                    "array_address": 1,
                    "array_pointer": 1,
                    "loop_index": 1,
                    "nested_data_struct": 1,
                    "pointer": 1,
                    "pointer_2": 1,
                    "ptr": 2,
                    "ptr2": 6,
                    "ptr_array": 1,
                    "ptr_to_array": 2,
                    "ptr_to_char_array": 2,
                    "str_ptr": 1,
                    "string_array_ptr": 1,
                    "string_data": 1,
                    "string_ptr": 1,
                    "sub_strings_ptr": 1,
                    "subdata_ptr": 1,
                    "substruct_ptr": 1,
                    "temp_data": 1,
                    "value2": 1,
                    "var2": 2
                },
                "lVar8": {
                    "buffer_size": 1,
                    "final_length": 2,
                    "final_str_len": 1,
                    "new_length": 1,
                    "output_string_length": 1,
                    "result_len": 2,
                    "result_length": 2,
                    "total_len": 8,
                    "total_length": 12,
                    "total_string_length": 1
                },
                "param_1": {
                    "data": 1,
                    "input": 15,
                    "input_address": 3,
                    "input_data": 3,
                    "input_param": 5,
                    "input_parameter": 3,
                    "input_value": 1
                },
                "pcVar3": {
                    "char_array": 1,
                    "char_ptr": 1,
                    "pointer_3": 1,
                    "str": 3,
                    "str1": 2,
                    "str_ptr": 8,
                    "string_1": 1,
                    "string_ptr": 2,
                    "string_var": 1,
                    "sub_string": 1,
                    "subchar_ptr": 1,
                    "subdata_str": 1,
                    "temp_str": 4,
                    "temp_string": 3,
                    "temp_string_pointer": 1
                },
                "pcVar6": {
                    "concat_str": 1,
                    "concatenated_str": 2,
                    "concatenated_string": 2,
                    "final_string": 1,
                    "maindata_str": 1,
                    "new_str": 3,
                    "output_str": 1,
                    "output_string": 2,
                    "reconstructed_string": 1,
                    "result": 3,
                    "result_str": 3,
                    "result_string": 6,
                    "str2": 2,
                    "str_buffer": 1,
                    "string_1": 1,
                    "string_2": 1
                },
                "sVar4": {
                    "len1": 9,
                    "len_1": 1,
                    "len_str": 1,
                    "len_str1": 2,
                    "length1": 10,
                    "length_1": 2,
                    "maindata_len": 1,
                    "source_length": 1,
                    "str_len1": 1,
                    "str_len_1": 1,
                    "strlen1": 2
                },
                "sVar5": {
                    "len2": 9,
                    "len_2": 1,
                    "len_str2": 2,
                    "len_sub_str": 1,
                    "length2": 10,
                    "length_2": 2,
                    "str_len2": 1,
                    "str_len_2": 1,
                    "strlen2": 2,
                    "sub_length": 1,
                    "subdata_len": 1
                },
                "sprintf": {
                    "format_string": 1,
                    "string_format": 1
                },
                "strcat": {
                    "concatenate_string": 1,
                    "string_concat": 1
                },
                "strcpy": {
                    "copy_string": 1,
                    "string_copy": 1
                },
                "strlen": {
                    "string_length": 2
                },
                "uVar10": {
                    "array_length": 1,
                    "array_size": 1,
                    "count": 4,
                    "counter": 1,
                    "counter2": 2,
                    "index": 1,
                    "inner_loop_counter": 1,
                    "loop_counter": 1,
                    "null_count": 1,
                    "num_elements": 1,
                    "num_elems": 1,
                    "num_ptrs": 2,
                    "num_strings": 2,
                    "num_sub_str": 1,
                    "ptr_array_size": 1,
                    "str_count": 1,
                    "string_count": 2,
                    "string_counter": 1,
                    "sub_counter": 1,
                    "subdata_count": 1,
                    "substruct_size": 1,
                    "temp_count": 1,
                    "total_count": 1,
                    "total_length": 1
                },
                "uVar7": {
                    "result": 11,
                    "return_value": 20
                },
                "uVar9": {
                    "count": 1,
                    "counter": 22,
                    "index": 1,
                    "loop_counter": 5,
                    "sub_str_index": 1,
                    "subdata_index": 1
                },
                "xmalloc": {
                    "allocate_memory": 3
                }
            },
            "called": [
                "strlen",
                "strcpy",
                "sprintf",
                "strcat",
                "free",
                "xmalloc"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nundefined8 concatenate_and_free_strings_0010ae0e(long input)\n\n{\n  long ptr1;\n  long ptr2;\n  void *ptr;\n  char *str_ptr;\n  size_t length1;\n  size_t length2;\n  char *result_string;\n  undefined8 return_value;\n  long total_length;\n  uint counter;\n  ulong count;\n  \n  return_value = 0;\n  ptr1 = *(long *)(input + 0x60);\n  if (((ptr1 != 0) && (*(char **)(ptr1 + 8) != (char *)0x0)) &&\n     (result_string = *(char **)(ptr1 + 0x20), result_string != (char *)0x0)) {\n    length1 = strlen(*(char **)(ptr1 + 8));\n    length2 = strlen(result_string);\n    ptr2 = *(long *)(ptr1 + 0x28);\n    if (ptr2 == 0) {\n      total_length = length1 + length2 + 10;\n      count = 0;\n    }\n    else {\n      total_length = length1 + length2 + 0x1e;\n      count = 0;\n      while( true ) {\n        result_string = *(char **)(ptr2 + count * 8);\n        if (result_string == (char *)0x0) break;\n        length1 = strlen(result_string);\n        count = (ulong)((int)count + 1);\n        total_length = total_length + length1;\n      }\n    }\n    if (*(char **)(ptr1 + 0x30) != (char *)0x0) {\n      length1 = strlen(*(char **)(ptr1 + 0x30));\n      total_length = total_length + length1;\n    }\n    if (*(char **)(ptr1 + 0x38) != (char *)0x0) {\n      length1 = strlen(*(char **)(ptr1 + 0x38));\n      total_length = total_length + length1;\n    }\n    result_string = (char *)xmalloc(total_length);\n    ptr1 = *(long *)(input + 0x60);\n    strcpy(result_string,*(char **)(ptr1 + 8));\n    if (*(long *)(ptr1 + 0x28) != 0) {\n      counter = 0;\n      length1 = strlen(result_string);\n      sprintf(result_string + length1,\"!%u,\",count);\n      while( true ) {\n        ptr1 = *(long *)(input + 0x60);\n        count = (ulong)counter;\n        ptr = *(void **)(ptr1 + 0x28);\n        str_ptr = *(char **)((long)ptr + count * 8);\n        if (str_ptr == (char *)0x0) break;\n        counter = counter + 1;\n        strcat(result_string,str_ptr);\n        deallocate(*(void **)(*(long *)(ptr1 + 0x28) + count * 8));\n      }\n      deallocate(ptr);\n      *(undefined8 *)(*(long *)(input + 0x60) + 0x28) = 0;\n    }\n    ptr1 = *(long *)(input + 0x60);\n    strcat(result_string,*(char **)(ptr1 + 0x20));\n    deallocate(*(void **)(ptr1 + 0x20));\n    ptr1 = *(long *)(input + 0x60);\n    *(undefined8 *)(ptr1 + 0x20) = 0;\n    if (*(char **)(ptr1 + 0x30) != (char *)0x0) {\n      strcat(result_string,*(char **)(ptr1 + 0x30));\n      deallocate(*(void **)(ptr1 + 0x30));\n      *(undefined8 *)(*(long *)(input + 0x60) + 0x30) = 0;\n    }\n    length1 = strlen(result_string);\n    ptr1 = *(long *)(input + 0x60);\n    *(undefined2 *)(result_string + length1) = 0x3b;\n    str_ptr = *(char **)(ptr1 + 0x38);\n    if (str_ptr != (char *)0x0) {\n      strcpy(result_string + length1 + 1,str_ptr);\n      deallocate(*(void **)(ptr1 + 0x38));\n      *(undefined8 *)(*(long *)(input + 0x60) + 0x38) = 0;\n    }\n    deallocate(*(void **)(*(long *)(input + 0x60) + 8));\n    ptr1 = *(long *)(input + 0x60);\n    *(char **)(ptr1 + 8) = result_string;\n    return_value = CONCAT71((int7)((ulong)ptr1 >> 8),1);\n  }\n  return return_value;\n}\n\n",
            "current_name": "concatenate_and_free_strings_0010ae0e",
            "entrypoint": "0x0010ae0e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010ae0e": "concatenate_and_free_strings_0010ae0e",
                "__ptr": "ptr",
                "free": "deallocate",
                "lVar1": "ptr1",
                "lVar2": "ptr2",
                "lVar8": "total_length",
                "param_1": "input",
                "pcVar3": "str_ptr",
                "pcVar6": "result_string",
                "sVar4": "length1",
                "sVar5": "length2",
                "sprintf": "format_string",
                "strcat": "string_concat",
                "strcpy": "string_copy",
                "strlen": "string_length",
                "uVar10": "count",
                "uVar7": "return_value",
                "uVar9": "counter",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010afd5": {
            "additional_data": {
                "FUN_00109a0b": {
                    "find_char_in_string": 1,
                    "get_data_string": 1,
                    "get_offset": 1,
                    "get_string": 1,
                    "get_string_ptr": 1,
                    "initialize_pointer": 1
                },
                "FUN_0010afd5": {
                    "find_and_allocate_string": 1,
                    "find_and_free_matched_string": 1,
                    "find_and_free_matching_string": 1,
                    "find_and_free_memory": 1,
                    "find_and_free_string": 2,
                    "find_and_update_entry": 1,
                    "find_data_entry": 1,
                    "find_entry": 1,
                    "find_matching_string": 7,
                    "find_matching_string_in_binary": 1,
                    "find_matching_value": 3,
                    "find_string": 1,
                    "find_string_in_binary": 3,
                    "find_string_in_nested_structures": 4,
                    "search_and_free": 1,
                    "search_and_free_item": 1
                },
                "FUN_00113e23": {
                    "calculate_checksum": 2,
                    "calculate_hash": 2,
                    "calculate_value": 1,
                    "get_string_length": 1
                },
                "__s2": {
                    "input_string": 1,
                    "key_string": 1,
                    "search": 1,
                    "search_str": 1,
                    "search_string": 10,
                    "search_string2": 1,
                    "search_value": 1,
                    "searched_string": 2,
                    "str_to_compare": 1,
                    "string2": 2,
                    "string_2": 1,
                    "string_to_compare": 1,
                    "target_string": 8
                },
                "auVar8": {
                    "final_result": 1,
                    "output": 2,
                    "result": 3,
                    "result_array": 1,
                    "result_struct": 1,
                    "return_val": 2,
                    "return_value": 19
                },
                "bVar7": {
                    "byte_val": 1,
                    "byte_var": 1,
                    "count": 2,
                    "counter": 11,
                    "flag": 7,
                    "index": 1,
                    "is_zero": 1,
                    "loop_counter": 3,
                    "loop_index": 2,
                    "loop_var": 1,
                    "temp": 1
                },
                "free": {
                    "dealloc_memory": 1,
                    "deallocate_memory": 2,
                    "free_memory": 3,
                    "release_memory": 2
                },
                "iVar1": {
                    "cmp_result": 2,
                    "compare_result": 1,
                    "comparison": 1,
                    "comparison_result": 4,
                    "result": 2
                },
                "lVar4": {
                    "data": 1,
                    "entry_value": 1,
                    "item": 1,
                    "item_value": 1,
                    "length": 2,
                    "long_var": 1,
                    "node_value": 1,
                    "offset": 1,
                    "string_length": 1,
                    "string_offset": 1,
                    "string_size": 1,
                    "temp": 2,
                    "temp2": 1,
                    "temp_data": 1,
                    "temp_val": 1,
                    "temp_value": 3,
                    "temp_var_2": 1,
                    "temp_variable2": 1,
                    "value": 8,
                    "value_to_free": 1
                },
                "param_1": {
                    "array": 1,
                    "array_ptr": 1,
                    "entry_list": 3,
                    "first_level_list": 1,
                    "linked_list": 5,
                    "linked_list_root": 1,
                    "list": 14,
                    "list_ptr": 1,
                    "node_list": 1,
                    "node_pointer": 1,
                    "param_array": 1,
                    "string_list": 1
                },
                "param_2": {
                    "binary": 1,
                    "context": 4,
                    "data": 9,
                    "data_struct": 1,
                    "data_structure": 5,
                    "param": 2,
                    "param2": 1,
                    "param_2": 1,
                    "param_size": 1,
                    "struct_addr": 1,
                    "struct_index": 1,
                    "struct_offset": 1,
                    "struct_param": 1,
                    "struct_ptr": 1,
                    "user_data": 1
                },
                "param_3": {
                    "input_param": 1,
                    "key": 1,
                    "param3": 1,
                    "param_3": 1,
                    "ptr": 1,
                    "ptr_to_sub_function": 1,
                    "search_string": 3,
                    "search_value": 2,
                    "str": 4,
                    "str_ptr": 2,
                    "string": 7,
                    "string1": 2,
                    "string_1": 1,
                    "string_array": 1,
                    "string_param": 1,
                    "string_to_find": 1,
                    "value": 1
                },
                "param_4": {
                    "flag1": 1,
                    "int1": 1,
                    "int_param1": 1,
                    "int_val": 1,
                    "len": 2,
                    "num1": 1,
                    "param4": 9,
                    "param_4": 7,
                    "param_len": 1,
                    "size": 1,
                    "string1_length": 1,
                    "val1": 1,
                    "value1": 1,
                    "value_1": 2,
                    "x": 1
                },
                "param_5": {
                    "flag2": 1,
                    "int2": 1,
                    "int_param2": 1,
                    "int_val_2": 1,
                    "mode": 1,
                    "new_param": 1,
                    "new_value": 1,
                    "num2": 1,
                    "param": 1,
                    "param5": 9,
                    "param_5": 7,
                    "val2": 1,
                    "value": 1,
                    "value2": 1,
                    "value_2": 2,
                    "y": 1
                },
                "param_6": {
                    "param6": 9,
                    "param_6": 7,
                    "ptr2": 1,
                    "result": 6,
                    "result_param": 1,
                    "result_pointer": 1,
                    "result_ptr": 1,
                    "val3": 1,
                    "value": 1,
                    "value_3": 2,
                    "z": 1
                },
                "puVar2": {
                    "array_ptr_2": 1,
                    "current": 3,
                    "current_entry": 2,
                    "current_item": 4,
                    "current_node": 10,
                    "current_node1": 1,
                    "current_pointer": 1,
                    "current_ptr": 2,
                    "current_struct": 1,
                    "current_value": 1,
                    "entry": 2,
                    "node": 2,
                    "sub_function_list": 1
                },
                "puVar5": {
                    "array_ptr_3": 1,
                    "current_list": 1,
                    "current_node2": 1,
                    "inner": 1,
                    "inner_entry": 1,
                    "inner_item": 1,
                    "inner_list": 1,
                    "inner_node": 5,
                    "inner_pointer": 1,
                    "inner_ptr": 2,
                    "list": 1,
                    "nested_list": 1,
                    "nested_node": 1,
                    "node": 1,
                    "node_ptr": 1,
                    "ptr": 1,
                    "ptr3": 1,
                    "string_entry": 1,
                    "sub_entry": 1,
                    "sub_function_ptr": 1,
                    "sub_item": 1,
                    "sub_list": 1,
                    "sub_node": 1,
                    "subitem": 1,
                    "temp_node": 2
                },
                "puVar6": {
                    "current_node2_pointer": 1,
                    "current_struct_param": 1,
                    "flag_ptr": 1,
                    "inner2": 1,
                    "inner_data": 1,
                    "inner_loop_var": 1,
                    "inner_node_param": 1,
                    "inner_node_ptr": 1,
                    "inner_pointer2": 1,
                    "inner_struct": 1,
                    "inner_val": 1,
                    "inner_value": 2,
                    "inner_var": 1,
                    "int_array_ptr": 1,
                    "mode_ptr": 1,
                    "nested_node_param2": 1,
                    "nested_value": 1,
                    "ptr": 1,
                    "ptr2": 1,
                    "ptr4": 1,
                    "ptr_to_int": 1,
                    "sub_entry_param": 1,
                    "sub_item_param2": 1,
                    "subitem_param": 1,
                    "temp2": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 4
                },
                "strcmp": {
                    "compare_strings": 9
                },
                "uVar3": {
                    "result": 19,
                    "temp": 4,
                    "temp_ptr": 1,
                    "temp_result": 2,
                    "temp_value": 1,
                    "temp_var": 2,
                    "temp_variable": 1,
                    "tmp_var": 1
                },
                "xmalloc": {
                    "alloc_memory": 1,
                    "allocate_memory": 7
                }
            },
            "called": [
                "FUN_00113e23",
                "FUN_00109a0b",
                "free",
                "xmalloc",
                "strcmp"
            ],
            "calling": [
                "FUN_0010b0fa",
                "FUN_0010d559",
                "FUN_0010ee3f",
                "FUN_0010c95e"
            ],
            "code": "\nundefined  [16]\nfind_and_free_matching_string_0010afd5(undefined8 *list,long data,undefined8 string,undefined4 param4,\n            undefined4 param5,undefined8 param6)\n\n{\n  int comparison_result;\n  char *search_string;\n  undefined8 *current_node;\n  undefined8 result;\n  long value;\n  undefined8 *inner_node;\n  undefined4 *temp_ptr;\n  byte counter;\n  undefined return_value [16];\n  \n  counter = 0;\n  search_string = (char *)FUN_00109a0b(string,param4);\n  for (list = (undefined8 *)*list; list != (undefined8 *)0x0;\n      list = (undefined8 *)*list) {\n    for (current_node = (undefined8 *)list[1]; current_node != (undefined8 *)0x0;\n        current_node = (undefined8 *)*current_node) {\n      if ((undefined8 *)current_node[2] != (undefined8 *)0x0) {\n        for (inner_node = *(undefined8 **)(undefined8 *)current_node[2]; inner_node != (undefined8 *)0x0;\n            inner_node = (undefined8 *)*inner_node) {\n          if ((*(int *)((long)inner_node + 0x14) == 1) && (*(char *)inner_node[1] == *search_string)) {\n            comparison_result = strcmp((char *)inner_node[1],search_string);\n            if (comparison_result == 0) {\n              value = inner_node[4];\n              if (value == 0) goto LAB_0010b05b;\n              free_memory(search_string);\n              goto LAB_0010b0eb;\n            }\n          }\n        }\n      }\n    }\n  }\nLAB_0010b05b:\n  current_node = *(undefined8 **)(data + 0x1a0);\n  do {\n    if (current_node == (undefined8 *)0x0) {\n      current_node = (undefined8 *)xmalloc(0x28);\n      result = *(undefined8 *)(data + 0x1a0);\n      temp_ptr = (undefined4 *)((long)current_node + 0x14);\n      for (value = 5; value != 0; value = value + -1) {\n        *temp_ptr = 0;\n        temp_ptr = temp_ptr + (ulong)counter * -2 + 1;\n      }\n      *(undefined4 *)(current_node + 2) = param5;\n      *current_node = result;\n      current_node[1] = search_string;\n      result = FUN_00113e23(current_node + 3,search_string);\n      *(undefined8 **)(data + 0x1a0) = current_node;\n      current_node[4] = result;\nLAB_0010b0e7:\n      value = current_node[4];\nLAB_0010b0eb:\n      return_value._8_8_ = param6;\n      return_value._0_8_ = value;\n      return return_value;\n    }\n    if (*(char *)current_node[1] == *search_string) {\n      comparison_result = strcmp((char *)current_node[1],search_string);\n      if (comparison_result == 0) {\n        if (*(int *)(current_node + 2) == 0) {\n          *(undefined4 *)(current_node + 2) = param5;\n        }\n        free_memory(search_string);\n        goto LAB_0010b0e7;\n      }\n    }\n    current_node = (undefined8 *)*current_node;\n  } while( true );\n}\n\n",
            "current_name": "find_and_free_matching_string_0010afd5",
            "entrypoint": "0x0010afd5",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010afd5": "find_and_free_matching_string_0010afd5",
                "__s2": "search_string",
                "auVar8": "return_value",
                "bVar7": "counter",
                "free": "free_memory",
                "iVar1": "comparison_result",
                "lVar4": "value",
                "param_1": "list",
                "param_2": "data",
                "param_3": "string",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "puVar2": "current_node",
                "puVar5": "inner_node",
                "puVar6": "temp_ptr",
                "strcmp": "compare_strings",
                "uVar3": "result",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010b0fa": {
            "additional_data": {
                "FUN_0010afd5": {
                    "reverse_string11": 1
                },
                "FUN_0010b0fa": {
                    "demangle_and_print_type": 1,
                    "demangle_and_print_type_info": 1,
                    "demangle_component": 1,
                    "demangle_function": 1,
                    "get_demangle_string": 1,
                    "print_demangled_type": 1,
                    "reverse_eng_func": 1
                },
                "FUN_0010b6ea": {
                    "reverse_string12": 1
                },
                "FUN_00112904": {
                    "reverse_string9": 1
                },
                "FUN_001129f4": {
                    "reverse_string10": 1
                },
                "FUN_00113b1e": {
                    "get_template_data": 1
                },
                "FUN_00113b4a": {
                    "reverse_string1": 1
                },
                "FUN_00113b71": {
                    "reverse_string2": 1
                },
                "FUN_00113cb9": {
                    "reverse_string3": 1
                },
                "FUN_00113ce0": {
                    "reverse_string4": 1
                },
                "FUN_00113d3a": {
                    "reverse_string5": 1
                },
                "FUN_00113df2": {
                    "reverse_string7": 1
                },
                "FUN_00113dfe": {
                    "reverse_string6": 1
                },
                "FUN_00113e17": {
                    "reverse_string8": 1
                },
                "__ptr": {
                    "allocated_memory": 1,
                    "pointer": 8,
                    "pointer_2": 1,
                    "ptr": 17,
                    "template_arg_result": 1,
                    "void_ptr": 2,
                    "void_ptr_var": 1
                },
                "abort": {
                    "terminate_program": 1
                },
                "calloc": {
                    "allocate_memory": 1
                },
                "cplus_demangle_print": {
                    "print_demangled_string": 1
                },
                "dcgettext": {
                    "get_localized_text": 1
                },
                "fprintf": {
                    "print_formatted_output": 1
                },
                "free": {
                    "deallocate_memory": 1
                },
                "iVar2": {
                    "cmp_result": 1,
                    "comparison_result": 18,
                    "index": 3,
                    "result": 4,
                    "temp_int": 1,
                    "value2": 3,
                    "value_2": 1
                },
                "lVar7": {
                    "demangled_template_len": 1,
                    "length": 5,
                    "length_var": 1,
                    "long_value": 2,
                    "long_var": 4,
                    "ptr_len": 1,
                    "result": 3,
                    "result_2": 1,
                    "result_length": 4,
                    "result_size": 1,
                    "result_value": 1,
                    "return_value": 2,
                    "return_value2": 1,
                    "size": 4
                },
                "local_40": {
                    "buffer": 9,
                    "demangle_buff": 1,
                    "demangled_template": 1,
                    "local_array": 13,
                    "local_buffer": 4,
                    "local_data": 1,
                    "local_variable": 1,
                    "temp_undefined_array": 1
                },
                "param_1": {
                    "arg1": 3,
                    "argument1": 1,
                    "first_param": 1,
                    "input1": 3,
                    "input_param1": 3,
                    "input_param_1": 1,
                    "param1": 14,
                    "param_1": 3,
                    "parameter_1": 1,
                    "unknown1": 1
                },
                "param_2": {
                    "arg2": 3,
                    "argument2": 1,
                    "input2": 3,
                    "input_param2": 3,
                    "input_param_2": 1,
                    "param2": 14,
                    "param_2": 3,
                    "parameter_2": 1,
                    "second_param": 1,
                    "unknown2": 1
                },
                "param_3": {
                    "array": 3,
                    "components": 2,
                    "data": 1,
                    "data_array": 1,
                    "demangle_components": 1,
                    "input_array": 2,
                    "input_param3": 3,
                    "input_param_3": 1,
                    "input_params": 1,
                    "param3": 8,
                    "param_array": 3,
                    "parameter_3": 1,
                    "type": 1,
                    "type_components": 1,
                    "type_ids": 1,
                    "unsigned_int_param": 1
                },
                "param_4": {
                    "input_param4": 3,
                    "input_param_4": 1,
                    "len": 1,
                    "length": 8,
                    "long_param": 1,
                    "param4": 12,
                    "param_4": 2,
                    "parameter_4": 1,
                    "template_arg": 1,
                    "template_size": 1
                },
                "param_5": {
                    "error": 1,
                    "error_flag": 7,
                    "flag": 2,
                    "input_param5": 3,
                    "input_param_5": 1,
                    "is_unexpected_var_args": 1,
                    "is_var_args": 1,
                    "output_flag": 1,
                    "output_param": 1,
                    "param5": 10,
                    "param_5": 1,
                    "parameter_5": 1,
                    "undefined_param": 1
                },
                "pcVar3": {
                    "char_ptr_var": 1,
                    "demangle_result": 1,
                    "demangled_name": 2,
                    "demangled_string": 1,
                    "demangled_type": 2,
                    "output": 1,
                    "output_string": 2,
                    "result": 10,
                    "result_str": 2,
                    "result_string": 6,
                    "return_value": 2,
                    "string_ptr": 1
                },
                "pcVar5": {
                    "auxiliary_string": 1,
                    "builtin_type": 1,
                    "char_ptr_var2": 1,
                    "demangled_string": 1,
                    "demangled_value": 1,
                    "error_message": 12,
                    "error_str": 2,
                    "error_string": 2,
                    "message": 4,
                    "output_string": 1,
                    "result": 3,
                    "result_string": 1,
                    "return_value": 1
                },
                "plVar4": {
                    "array_ptr": 1,
                    "list_pointer": 1,
                    "long_pointer": 1,
                    "long_ptr": 3,
                    "pointer": 2,
                    "pointer_array": 2,
                    "pointer_list": 1,
                    "ptr": 2,
                    "ptr_array": 1,
                    "ptr_list": 3,
                    "ptr_to_long": 3,
                    "string_array": 1,
                    "templates": 2,
                    "type_info_list": 1,
                    "type_templates": 1
                },
                "puts": {
                    "print_string": 1
                },
                "sVar6": {
                    "comparison_length": 1,
                    "len": 1,
                    "length": 6,
                    "name_length": 1,
                    "size_var": 1,
                    "str_len": 1,
                    "string_length": 19,
                    "string_size": 1
                },
                "strcmp": {
                    "compare_strings": 1
                },
                "strcpy": {
                    "copy_string": 1
                },
                "strlen": {
                    "get_string_length": 1
                },
                "strncmp": {
                    "compare_strings_n": 1
                },
                "uVar1": {
                    "array_element": 4,
                    "array_length": 2,
                    "component": 1,
                    "component_type": 3,
                    "current_value": 1,
                    "data": 1,
                    "input_value": 2,
                    "item": 1,
                    "temp_unsigned_int": 1,
                    "type_code": 1,
                    "type_id": 1,
                    "value": 9,
                    "value1": 3,
                    "value_1": 1
                },
                "undefined": {
                    "undefined": 1
                }
            },
            "called": [
                "FUN_0010b0fa",
                "strlen",
                "FUN_00113b71",
                "dcgettext",
                "FUN_00113b4a",
                "FUN_00113cb9",
                "FUN_00113df2",
                "FUN_001129f4",
                "strncmp",
                "free",
                "FUN_00113ce0",
                "FUN_00113b1e",
                "strcmp",
                "fprintf",
                "cplus_demangle_print",
                "FUN_0010afd5",
                "FUN_00113dfe",
                "FUN_00113e17",
                "FUN_00113d3a",
                "FUN_0010b6ea",
                "abort",
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010b0fa",
                "FUN_0010b6ea"
            ],
            "code": "\n\n\nchar * demangle_and_print_type_info_0010b0fa(undefined8 param1,undefined8 param2,uint *param3,long param4,\n                   undefined *param5)\n\n{\n  uint value;\n  int comparison_result;\n  char *result;\n  long *long_ptr;\n  char *error_message;\n  size_t string_length;\n  void *ptr;\n  long length;\n  undefined local_array [16];\n  \n  if (param5 != (undefined *)0x0) {\n    *param5 = 0;\n  }\n  while( true ) {\n    value = *param3;\n    if (0x29 < value) break;\n    if (0x17 < value) {\n      switch(value) {\n      case 0x18:\n        goto switchD_0010b158_caseD_18;\n      case 0x19:\n      case 0x1a:\n      case 0x1b:\n      case 0x22:\n      case 0x23:\n        result = (char *)demangle_and_print_type_info_0010b0fa(param1,param2,*(undefined8 *)(param3 + 4),0,0);\n        if (result != (char *)0x0) {\n          switch(*param3) {\n          case 0x19:\n            goto switchD_0010b2de_caseD_19;\n          case 0x1a:\n            result = (char *)FUN_00113b4a(result);\n            return result;\n          case 0x1b:\n            result = (char *)FUN_00113b71(result);\n            return result;\n          default:\n                    \n            abort();\n          case 0x22:\n            result = (char *)FUN_00113d3a(result);\n            return result;\n          case 0x23:\n            result = (char *)FUN_00113cb9(result);\n            return result;\n          }\n        }\n        goto LAB_0010b38c;\n      case 0x27:\n        result = (char *)cplus_demangle_print(3,param3,0x14,local_array);\n        if (result == (char *)0x0) {\n          error_message = \"Couldn\\'t get demangled builtin type\\n\";\n          result = (char *)0x0;\n          goto LAB_0010b3d3;\n        }\n        comparison_result = strcmp(result,\"signed char\");\n        if (comparison_result == 0) {\nLAB_0010b406:\n          error_message = (char *)FUN_00113dfe(1,0);\n          goto LAB_0010b6c6;\n        }\n        comparison_result = strcmp(result,\"bool\");\n        if (comparison_result == 0) {\n          error_message = (char *)FUN_00112904(6,1);\n          goto LAB_0010b6c6;\n        }\n        comparison_result = strcmp(result,\"char\");\n        if (comparison_result == 0) goto LAB_0010b406;\n        comparison_result = strcmp(result,\"double\");\n        if ((comparison_result == 0) || (comparison_result = strcmp(result,\"long double\"), comparison_result == 0)) {\n          error_message = (char *)FUN_00113df2(8);\n          goto LAB_0010b6c6;\n        }\n        comparison_result = strcmp(result,\"float\");\n        if (comparison_result == 0) {\n          error_message = (char *)FUN_00113df2(4);\n          goto LAB_0010b6c6;\n        }\n        comparison_result = strcmp(result,\"__float128\");\n        if (comparison_result == 0) {\n          error_message = (char *)FUN_00113df2(0x10);\n          goto LAB_0010b6c6;\n        }\n        comparison_result = strcmp(result,\"unsigned char\");\n        if (comparison_result == 0) {\n          error_message = (char *)FUN_00113dfe(1,1);\n          goto LAB_0010b6c6;\n        }\n        comparison_result = strcmp(result,\"int\");\n        if (comparison_result == 0) {\nLAB_0010b504:\n          error_message = (char *)FUN_00113dfe(4,0);\n          goto LAB_0010b6c6;\n        }\n        comparison_result = strcmp(result,\"unsigned int\");\n        if (comparison_result == 0) {\nLAB_0010b528:\n          error_message = (char *)FUN_00113dfe(4,1);\n          goto LAB_0010b6c6;\n        }\n        comparison_result = strcmp(result,\"long\");\n        if (comparison_result == 0) goto LAB_0010b504;\n        comparison_result = strcmp(result,\"unsigned long\");\n        if (comparison_result == 0) goto LAB_0010b528;\n        comparison_result = strcmp(result,\"__int128\");\n        if (comparison_result == 0) {\n          error_message = (char *)FUN_00113dfe(0x10,0);\n          goto LAB_0010b6c6;\n        }\n        comparison_result = strcmp(result,\"unsigned __int128\");\n        if (comparison_result == 0) {\n          error_message = (char *)FUN_00113dfe(0x10,1);\n          goto LAB_0010b6c6;\n        }\n        comparison_result = strcmp(result,\"short\");\n        if (comparison_result == 0) {\n          error_message = (char *)FUN_00113dfe(2,0);\n          goto LAB_0010b6c6;\n        }\n        comparison_result = strcmp(result,\"unsigned short\");\n        if (comparison_result == 0) {\n          error_message = (char *)FUN_00113dfe(2,1);\n          goto LAB_0010b6c6;\n        }\n        comparison_result = strcmp(result,\"void\");\n        if (comparison_result == 0) {\n          error_message = (char *)FUN_00113e17();\n          goto LAB_0010b6c6;\n        }\n        comparison_result = strcmp(result,\"wchar_t\");\n        if (comparison_result == 0) goto LAB_0010b528;\n        comparison_result = strcmp(result,\"long long\");\n        if (comparison_result == 0) {\n          error_message = (char *)FUN_00113dfe(8,0);\n          goto LAB_0010b6c6;\n        }\n        comparison_result = strcmp(result,\"unsigned long long\");\n        if (comparison_result == 0) {\n          error_message = (char *)FUN_00113dfe(8,1);\n          goto LAB_0010b6c6;\n        }\n        comparison_result = strcmp(result,\"...\");\n        if (comparison_result == 0) {\n          error_message = \"Unexpected demangled varargs\\n\";\n          if (param5 == (undefined *)0x0) goto LAB_0010b6a9;\n          *param5 = 1;\n        }\n        else {\n          error_message = \"Unrecognized demangled builtin type\\n\";\nLAB_0010b6a9:\n          error_message = (char *)dcgettext(0,error_message,5);\n          fprintf(_stderr,error_message);\n        }\n        error_message = (char *)0x0;\nLAB_0010b6c6:\n        free(result);\n        return error_message;\n      case 0x29:\n        if (*(long *)(param3 + 4) == 0) {\n          ptr = (void *)FUN_00113e17();\n        }\n        else {\n          ptr = (void *)demangle_and_print_type_info_0010b0fa(param1,param2,*(long *)(param3 + 4),0,0);\n        }\n        if (ptr != (void *)0x0) {\n          length = FUN_0010b6ea(param1,param2,*(undefined8 *)(param3 + 6),local_array);\n          if (length != 0) {\n            result = (char *)FUN_00113ce0(ptr,length,local_array[0]);\n            return result;\n          }\n          free(ptr);\n        }\n        goto LAB_0010b38c;\n      }\n      break;\n    }\n    if (value != 1) {\n      if (value == 4) {\n        result = (char *)cplus_demangle_print(3,param3,0x14,local_array);\n        error_message = \"Failed to print demangled template\\n\";\n        if (result != (char *)0x0) {\n          string_length = strlen(result);\n          error_message = (char *)FUN_0010afd5(param1,param2,result,string_length & 0xffffffff,9);\n          free(result);\n          return error_message;\n        }\nLAB_0010b3d3:\n        error_message = (char *)dcgettext(0,error_message,5);\n        fprintf(_stderr,error_message);\n        return result;\n      }\n      if (value == 0) {\n        if ((param4 == 0) || (long_ptr = (long *)FUN_00113b1e(param4), long_ptr == (long *)0x0))\n        goto switchD_0010b158_caseD_18;\n        goto LAB_0010b1a5;\n      }\n      break;\n    }\n    param4 = demangle_and_print_type_info_0010b0fa(param1,param2,*(undefined8 *)(param3 + 4),param4,0);\n    if (param4 == 0) goto LAB_0010b38c;\n    param3 = *(uint **)(param3 + 6);\n    param5 = (undefined *)0x0;\n  }\n  result = (char *)dcgettext(0,\"Unrecognized demangle component %d\\n\",5);\n  fprintf(_stderr,result,(ulong)value);\nLAB_0010b38c:\n  result = (char *)0x0;\nswitchD_0010b2de_caseD_19:\n  return result;\nLAB_0010b1a5:\n  if (*long_ptr == 0) {\nswitchD_0010b158_caseD_18:\n    result = (char *)FUN_0010afd5(param1,param2,*(undefined8 *)(param3 + 4),param3[6],0);\n    return result;\n  }\n  result = *(char **)(*long_ptr + 8);\n  if (result == (char *)0x0) goto LAB_0010b38c;\n  error_message = (char *)FUN_001129f4(result);\n  if (error_message != (char *)0x0) {\n    string_length = strlen(error_message);\n    if ((param3[6] == (uint)string_length) &&\n       (comparison_result = strncmp(error_message,*(char **)(param3 + 4),(long)(int)param3[6]), comparison_result == 0)) {\n      return result;\n    }\n  }\n  long_ptr = long_ptr + 1;\n  goto LAB_0010b1a5;\n}\n\n",
            "current_name": "demangle_and_print_type_info_0010b0fa",
            "entrypoint": "0x0010b0fa",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010b0fa": "demangle_and_print_type_info_0010b0fa",
                "__ptr": "ptr",
                "abort": "terminate_program",
                "cplus_demangle_print": "print_demangled_string",
                "dcgettext": "get_localized_text",
                "fprintf": "print_formatted_output",
                "free": "deallocate_memory",
                "iVar2": "comparison_result",
                "lVar7": "length",
                "local_40": "local_array",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "pcVar3": "result",
                "pcVar5": "error_message",
                "plVar4": "long_ptr",
                "sVar6": "string_length",
                "strcmp": "compare_strings",
                "strlen": "get_string_length",
                "strncmp": "compare_strings_n",
                "uVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010b6ea": {
            "additional_data": {
                "FUN_0010b6ea": {
                    "arglist_demangling": 1,
                    "demangle": 1,
                    "demangle_arglist": 10,
                    "demangle_v3_arglist": 7,
                    "extract_arglist": 1,
                    "extract_type_names": 1,
                    "extract_v3_arglist": 2,
                    "get_demangled_args": 1,
                    "parse_arglist": 5,
                    "parse_arglist_and_demangle": 1,
                    "process_arglist": 1
                },
                "__format": {
                    "error_message": 21,
                    "error_message_format": 1,
                    "error_msg": 6,
                    "error_string": 1,
                    "format_string": 1
                },
                "__ptr": {
                    "allocated_memory": 1,
                    "parsed_strings": 1,
                    "result": 16,
                    "result_array": 5,
                    "result_list": 1,
                    "result_ptr": 5,
                    "type_names": 1
                },
                "lVar1": {
                    "demangled_ptr": 1,
                    "demangled_str": 1,
                    "demangled_string": 1,
                    "length": 1,
                    "parsed_value": 1,
                    "result": 9,
                    "result_code": 3,
                    "result_len": 1,
                    "result_length": 1,
                    "result_size": 1,
                    "result_value": 2,
                    "return_value": 3,
                    "temp": 1,
                    "temp_result": 2,
                    "temp_var1": 1,
                    "temp_variable": 1
                },
                "local_39": {
                    "buffer": 6,
                    "demangled_arg": 1,
                    "demangled_name": 1,
                    "name_buffer": 3,
                    "temp_buffer": 6,
                    "temp_string": 10,
                    "type_name": 3
                },
                "param_1": {
                    "arg1": 24,
                    "arg_1": 2,
                    "param_1": 3,
                    "ptr_1": 1
                },
                "param_2": {
                    "arg2": 24,
                    "arg_2": 2,
                    "param_2": 3,
                    "ptr_2": 1
                },
                "param_3": {
                    "arg_list": 3,
                    "arglist": 22,
                    "arglist_ptr": 1,
                    "int_array": 1,
                    "type_list": 3
                },
                "param_4": {
                    "error": 2,
                    "error_flag": 16,
                    "flag": 1,
                    "has_error": 2,
                    "is_demangled": 1,
                    "is_error": 4,
                    "is_type_mismatch": 1,
                    "result": 2,
                    "success_flag": 1
                },
                "uVar2": {
                    "count": 8,
                    "i": 1,
                    "index": 9,
                    "num_elements": 2,
                    "num_results": 1,
                    "num_strings": 1,
                    "result_count": 5,
                    "result_index": 2,
                    "type_count": 1
                },
                "uVar3": {
                    "allocated_size": 1,
                    "array_size": 2,
                    "capacity": 6,
                    "current_capacity": 1,
                    "initial_capacity": 1,
                    "max_results": 1,
                    "max_strings": 1,
                    "result_capacity": 4,
                    "result_size": 3,
                    "size": 9,
                    "type_capacity": 1
                },
                "uVar4": {
                    "count": 6,
                    "increment": 1,
                    "index": 1,
                    "new_count": 5,
                    "new_index": 3,
                    "new_num_elements": 1,
                    "new_num_results": 1,
                    "new_num_strings": 1,
                    "new_result_count": 1,
                    "next_index": 1,
                    "temp": 1,
                    "temp_count": 5,
                    "temp_index": 1,
                    "updated_count": 1,
                    "updated_num_elements": 1
                }
            },
            "called": [
                "FUN_0010b0fa",
                "dcgettext",
                "xrealloc",
                "free",
                "fprintf",
                "xmalloc"
            ],
            "calling": [
                "FUN_0010b0fa",
                "FUN_0010ee3f"
            ],
            "code": "\n\n\nvoid * demangle_v3_arglist_0010b6ea(undefined8 arg1,undefined8 arg2,int *arglist,undefined *error_flag)\n\n{\n  void *result;\n  char *error_message;\n  long result;\n  ulong index;\n  ulong size;\n  uint count;\n  char temp_string [9];\n  \n  size = 10;\n  index = 0;\n  result = (void *)xmalloc(0x50);\n  *error_flag = 0;\n  for (; arglist != (int *)0x0; arglist = *(int **)(arglist + 6)) {\n    if (*arglist != 0x2e) {\n      error_message = (char *)dcgettext(0,\"Unexpected type in v3 arglist demangling\\n\",5);\n      fprintf(_stderr,error_message);\n      free(result);\n      return (void *)0x0;\n    }\n    if (*(long *)(arglist + 4) == 0) break;\n    result = FUN_0010b0fa(arg1,arg2,*(long *)(arglist + 4),0,temp_string);\n    if (result == 0) {\n      if (temp_string[0] == '\\0') {\n        free(result);\n        return (void *)0x0;\n      }\n      *error_flag = 1;\n    }\n    else {\n      count = (int)index + 1;\n      if ((uint)size <= count) {\n        size = (ulong)((uint)size + 10);\n        result = (void *)xrealloc(result,size << 3);\n      }\n      *(long *)((long)result + index * 8) = result;\n      index = (ulong)count;\n    }\n  }\n  *(undefined8 *)((long)result + index * 8) = 0;\n  return result;\n}\n\n",
            "current_name": "demangle_v3_arglist_0010b6ea",
            "entrypoint": "0x0010b6ea",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010b6ea": "demangle_v3_arglist_0010b6ea",
                "__format": "error_message",
                "__ptr": "result",
                "lVar1": "result",
                "local_39": "temp_string",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arglist",
                "param_4": "error_flag",
                "uVar2": "index",
                "uVar3": "size",
                "uVar4": "count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010b800": {
            "additional_data": {
                "FUN_0010b800": {
                    "convert_int_to_stab": 1,
                    "parse_int_type": 1,
                    "parse_integer_type": 1,
                    "process_data": 3,
                    "process_int_type": 5,
                    "process_integer_type": 1,
                    "process_param": 3,
                    "process_stab_int_type": 9,
                    "process_stab_type": 1,
                    "reverse_stab_int_type": 1
                },
                "auStack_8a": {
                    "array": 1,
                    "array_of_long_values": 1,
                    "array_of_longs": 1,
                    "array_of_strings": 1,
                    "data_arr": 1,
                    "local_array": 1,
                    "stack": 1,
                    "stack_arr": 1,
                    "stack_array": 13,
                    "temp_array": 4,
                    "temp_buffer": 1,
                    "temp_stack": 1,
                    "unused_array": 2
                },
                "lVar4": {
                    "current_value": 1,
                    "element_value": 1,
                    "offset": 1,
                    "temp": 3,
                    "temp1": 6,
                    "temp_long_1": 1,
                    "temp_value": 2,
                    "temp_value1": 1,
                    "temp_var": 1,
                    "temp_var1": 4,
                    "value": 8,
                    "value1": 1,
                    "var1": 1
                },
                "lVar5": {
                    "bit_mask": 7,
                    "bit_value": 1,
                    "bitmask": 2,
                    "bitwise_value": 1,
                    "mask": 3,
                    "temp2": 7,
                    "temp_long_2": 1,
                    "temp_value": 1,
                    "temp_value2": 1,
                    "temp_var2": 5,
                    "value2": 1,
                    "var2": 1
                },
                "local_8c": {
                    "buffer": 12,
                    "format_string": 2,
                    "formatted_string": 3,
                    "output": 2,
                    "output_string": 9,
                    "result_string": 1,
                    "string_buffer": 2
                },
                "param_1": {
                    "base_address": 19,
                    "data": 2,
                    "data_ptr": 1,
                    "function_address": 1,
                    "input": 2,
                    "input_addr": 1,
                    "input_data": 2,
                    "input_ptr": 1,
                    "input_val": 1,
                    "start_address": 1
                },
                "param_2": {
                    "param_size": 1,
                    "size": 30
                },
                "param_3": {
                    "flag": 24,
                    "has_modifier": 1,
                    "is_decimal": 1,
                    "is_flag_set": 2,
                    "is_negative": 1,
                    "is_numeric": 1,
                    "is_signed": 1
                },
                "plVar1": {
                    "current_param": 1,
                    "pointer": 5,
                    "pointer_to_val": 1,
                    "ptr": 8,
                    "ptr1": 1,
                    "ptr_current": 1,
                    "ptr_element": 1,
                    "ptr_to_element": 1,
                    "ptr_to_long": 3,
                    "ptr_to_size": 3,
                    "ptr_value": 5
                },
                "sVar3": {
                    "len": 1,
                    "length": 9,
                    "str_len": 1,
                    "str_length": 2,
                    "string_length": 15
                },
                "uVar2": {
                    "result": 25,
                    "return_value": 5
                }
            },
            "called": [
                "strlen",
                "FUN_00109b52",
                "dcgettext",
                "sprintf",
                "FUN_00119ed0",
                "FUN_00109cf4"
            ],
            "calling": [
                "FUN_0010b948",
                "FUN_00112c1f"
            ],
            "code": "\nundefined8 process_stab_int_type_0010b800(long base_address,int size,char flag)\n\n{\n  long *ptr;\n  undefined8 result;\n  size_t string_length;\n  long value;\n  long temp2;\n  undefined2 buffer;\n  undefined4 stack_array [24];\n  \n  if (size - 1U < 8) {\n    value = base_address + 0xb8;\n    if (flag != '\\0') {\n      value = base_address + 0x78;\n    }\n    ptr = (long *)(value + (ulong)(size - 1U) * 8);\n    value = *ptr;\n    if (value != 0) {\n      result = FUN_00109cf4(base_address,value,size);\n      return result;\n    }\n    value = *(long *)(base_address + 0x68);\n    *(long *)(base_address + 0x68) = value + 1;\n    *ptr = value;\n    sprintf((char *)&buffer,\"%ld=r%ld;\",value,value);\n    if (flag == '\\0') {\n      temp2 = 1L << ((char)size * '\\b' - 1U & 0x3f);\n      string_length = strlen((char *)&buffer);\n      sprintf((char *)((long)&buffer + string_length),\"%ld;%ld;\",-temp2,temp2 + -1);\n    }\n    else {\n      string_length = strlen((char *)&buffer);\n      *(undefined2 *)((long)&buffer + string_length) = 0x3b30;\n      *(undefined *)((long)&buffer + string_length + 2) = 0;\n      if (size == 8) {\n        *(undefined4 *)((long)&buffer + string_length + 2) = 0x3b312d;\n      }\n      else {\n        sprintf((char *)((long)&buffer + string_length + 2),\"%ld;\",\n                (1L << ((char)size * '\\b' & 0x3fU)) + -1);\n      }\n    }\n    result = FUN_00109b52(base_address,&buffer,value,1,size);\n  }\n  else {\n    result = dcgettext(0,\"stab_int_type: bad size %u\",5);\n    FUN_00119ed0(result,size);\n    result = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "process_stab_int_type_0010b800",
            "entrypoint": "0x0010b800",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010b800": "process_stab_int_type_0010b800",
                "auStack_8a": "stack_array",
                "lVar4": "value",
                "lVar5": "temp2",
                "local_8c": "buffer",
                "param_1": "base_address",
                "param_2": "size",
                "param_3": "flag",
                "plVar1": "ptr",
                "sVar3": "string_length",
                "uVar2": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010b948": {
            "additional_data": {
                "FUN_00109b2f": {
                    "allocate_memory": 1
                },
                "FUN_00109b52": {
                    "send_message": 1
                },
                "FUN_00109cf4": {
                    "modify_data": 1
                },
                "FUN_0010b800": {
                    "check_condition": 1
                },
                "FUN_0010b948": {
                    "extract_data": 1,
                    "handle_data": 1,
                    "parse_and_handle_data": 1,
                    "process_data": 28
                },
                "__ptr": {
                    "allocated_memory": 1,
                    "buffer": 1,
                    "data": 2,
                    "data_pointer": 3,
                    "data_ptr": 1,
                    "dynamic_memory": 1,
                    "dynamic_ptr": 1,
                    "ptr": 5,
                    "str_ptr": 3,
                    "string_pointer": 5,
                    "string_ptr": 6,
                    "string_value": 1
                },
                "cVar2": {
                    "char_flag": 1,
                    "flag": 8,
                    "is_valid": 3,
                    "result": 19
                },
                "lVar1": {
                    "data": 1,
                    "data_pointer": 1,
                    "data_value": 1,
                    "element": 2,
                    "index": 3,
                    "last_value": 1,
                    "temp": 2,
                    "temp_value": 2,
                    "temp_var": 17,
                    "temp_var1": 1
                },
                "local_5a": {
                    "format_string": 1,
                    "formatted_str": 1,
                    "formatted_string": 11,
                    "local_string": 1,
                    "message_buffer": 1,
                    "output_str": 1,
                    "output_string": 14,
                    "result_string": 1
                },
                "param_1": {
                    "address": 1,
                    "data": 2,
                    "data_address": 4,
                    "data_pointer": 11,
                    "data_ptr": 9,
                    "input_data": 2,
                    "input_pointer": 2
                },
                "param_2": {
                    "array_size": 1,
                    "count": 5,
                    "data_length": 1,
                    "data_size": 10,
                    "length": 1,
                    "num_elements": 1,
                    "size": 11
                },
                "uVar3": {
                    "converted_size": 4,
                    "count_u": 1,
                    "count_ulong": 1,
                    "count_unsigned": 1,
                    "data_length_unsigned": 1,
                    "data_size": 1,
                    "data_size_as_unsigned": 1,
                    "data_size_u": 1,
                    "data_size_ul": 1,
                    "data_size_unsigned": 4,
                    "formatted_size": 1,
                    "length_as_integer": 1,
                    "num_elements_unsigned": 1,
                    "num_value": 1,
                    "param_value": 1,
                    "size": 1,
                    "size_u": 1,
                    "size_unsigned": 1,
                    "size_var": 2,
                    "ulong_data_size": 1,
                    "ulong_size": 1,
                    "unsigned_size": 2,
                    "updated_count_ulong": 1
                },
                "uVar4": {
                    "adjusted_size": 4,
                    "count_minus_one": 3,
                    "data_size_minus_one": 3,
                    "decremented_data_size": 1,
                    "decremented_size": 1,
                    "index": 1,
                    "last_index": 2,
                    "modified_data_size": 1,
                    "modified_size": 1,
                    "num_elements_minus_one": 1,
                    "size_minus_one": 4,
                    "temp": 1,
                    "temp_length": 1,
                    "u_size": 1,
                    "unsigned_index": 1,
                    "updated_count": 1,
                    "updated_data_length": 1,
                    "updated_size": 3
                }
            },
            "called": [
                "FUN_00109b52",
                "FUN_0010b800",
                "sprintf",
                "FUN_00109b2f",
                "free",
                "FUN_00109cf4"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nvoid process_data_0010b948(long data_pointer,uint size)\n\n{\n  long temp_var;\n  char result;\n  void *string_ptr;\n  ulong converted_size;\n  uint size_minus_one;\n  char output_string [50];\n  \n  size_minus_one = size - 1;\n  converted_size = (ulong)size;\n  if ((size_minus_one < 0x10) && (temp_var = *(long *)(data_pointer + 0xf8 + (ulong)size_minus_one * 8), temp_var != 0)) {\n    FUN_00109cf4(data_pointer,temp_var,converted_size);\n    return;\n  }\n  result = FUN_0010b800(data_pointer,4,0);\n  if (result != '\\0') {\n    string_ptr = (void *)FUN_00109b2f(data_pointer);\n    temp_var = *(long *)(data_pointer + 0x68);\n    *(long *)(data_pointer + 0x68) = temp_var + 1;\n    if (size_minus_one < 0x10) {\n      *(long *)(data_pointer + 0xf8 + (ulong)size_minus_one * 8) = temp_var;\n    }\n    sprintf(output_string,\"%ld=r%s;%u;0;\",temp_var,string_ptr,converted_size);\n    free(string_ptr);\n    FUN_00109b52(data_pointer,output_string,temp_var,1,converted_size);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_0010b948",
            "entrypoint": "0x0010b948",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010b948": "process_data_0010b948",
                "__ptr": "string_ptr",
                "cVar2": "result",
                "lVar1": "temp_var",
                "local_5a": "output_string",
                "param_1": "data_pointer",
                "param_2": "size",
                "uVar3": "converted_size",
                "uVar4": "size_minus_one"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010ba08": {
            "additional_data": {
                "F1_00109b2f": {
                    "get_config_ptr": 1
                },
                "F1_00119ed0": {
                    "generate_warning": 1
                },
                "FUN_00109b2f": {
                    "get_args_pointer": 1,
                    "get_base_string": 1,
                    "get_config_params": 1,
                    "get_dynamic_string": 1,
                    "get_parameters": 2,
                    "get_params": 1,
                    "get_pointer": 1,
                    "get_struct_pointer": 2
                },
                "FUN_0010ba08": {
                    "build_struct_message": 1,
                    "build_warning_message": 4,
                    "construct_warning_message": 1,
                    "format_and_store_data": 1,
                    "generate_data_payload": 1,
                    "generate_field_string": 2,
                    "generate_struct_field": 1,
                    "generate_struct_field_string": 1,
                    "generate_struct_info": 1,
                    "generate_struct_warning_message": 1,
                    "generate_warning_message": 16,
                    "generate_warning_string": 1
                },
                "FUN_00119ed0": {
                    "log_warning": 1,
                    "print_warning": 5,
                    "print_warning_message": 4
                },
                "__s": {
                    "base_string": 2,
                    "default_string": 1,
                    "err_msg": 1,
                    "error_message": 2,
                    "field_type": 1,
                    "field_warning": 1,
                    "local_string_1": 1,
                    "message": 2,
                    "param_4_description": 1,
                    "return_value": 1,
                    "string1": 1,
                    "string_1": 1,
                    "struct_name": 5,
                    "struct_warning_message": 1,
                    "translated_message": 2,
                    "translated_text": 2,
                    "unknown_message": 1,
                    "warning_message": 4,
                    "warning_string": 1
                },
                "__s_00": {
                    "combined_text": 1,
                    "complete_message": 2,
                    "concatenated_string": 1,
                    "dynamic_string": 1,
                    "final_string": 1,
                    "formatted_message": 4,
                    "formatted_string": 2,
                    "generated_message": 1,
                    "generated_string": 1,
                    "message": 2,
                    "new_field_string": 1,
                    "new_string": 3,
                    "payload": 1,
                    "result_string": 2,
                    "string2": 1,
                    "struct_info_message": 1,
                    "warning_message": 5,
                    "warning_msg": 1
                },
                "abort": {
                    "abort_execution": 1,
                    "abort_program": 3,
                    "exit_program": 1,
                    "stop_execution": 2,
                    "terminate": 1,
                    "terminate_execution": 1,
                    "terminate_process": 1,
                    "terminate_program": 3
                },
                "cVar1": {
                    "char_flag": 1,
                    "char_value": 2,
                    "character": 1,
                    "flag": 8,
                    "flag_value": 6,
                    "is_checked": 1,
                    "is_field_enabled": 1,
                    "is_field_set": 1,
                    "is_field_updated": 1,
                    "is_name_set": 1,
                    "is_warning_enabled": 3,
                    "some_char": 1,
                    "status_char": 1,
                    "use_warning": 1,
                    "warning_enabled": 1,
                    "warning_flag": 1
                },
                "dcgettext": {
                    "get_localized_message": 1,
                    "get_message": 1,
                    "get_translated_string": 2,
                    "get_translated_text": 3,
                    "get_translation": 1,
                    "gettext": 1,
                    "retrieve_translated_text": 1,
                    "translate_message": 1
                },
                "free": {
                    "deallocate_memory": 4,
                    "free_memory": 4,
                    "release_memory": 3
                },
                "iVar2": {
                    "field_count": 2,
                    "field_length": 2,
                    "field_size": 2,
                    "field_type": 1,
                    "field_type_value": 1,
                    "int_value": 2,
                    "int_var": 1,
                    "integer": 1,
                    "length": 1,
                    "offset": 1,
                    "size_value": 1,
                    "some_int": 1,
                    "struct_counter": 1,
                    "struct_index": 1,
                    "struct_member_count": 1,
                    "struct_size": 12
                },
                "lVar3": {
                    "config_offset": 1,
                    "config_param_ptr": 1,
                    "config_ptr": 2,
                    "data_pointer": 1,
                    "data_size": 1,
                    "local_variable": 1,
                    "local_variable3": 1,
                    "long_value": 3,
                    "long_var": 1,
                    "param1": 1,
                    "param1_value": 1,
                    "param1c": 1,
                    "param_1_c": 2,
                    "param_struct": 1,
                    "ptr_c": 1,
                    "some_long": 1,
                    "struct_address": 1,
                    "struct_info_ptr": 1,
                    "struct_offset": 1,
                    "struct_pointer_index": 1,
                    "struct_ptr_offset": 1,
                    "struct_var": 1,
                    "tmp": 1,
                    "var3": 1,
                    "var_1": 1
                },
                "param_1": {
                    "arg_array": 1,
                    "args": 1,
                    "config": 2,
                    "config_params": 2,
                    "data_params": 1,
                    "function_info": 1,
                    "function_params": 1,
                    "input_params": 2,
                    "message_data": 1,
                    "param_array": 4,
                    "param_list": 1,
                    "parameters": 4,
                    "params": 1,
                    "pointers": 1,
                    "ptr_array": 1,
                    "struct_array": 1,
                    "struct_info": 1,
                    "struct_pointer": 2,
                    "struct_ptr": 3
                },
                "param_2": {
                    "field": 2,
                    "field_name": 29
                },
                "param_3": {
                    "arg_3": 1,
                    "field_size": 1,
                    "field_type": 2,
                    "field_value": 3,
                    "param3": 6,
                    "param3_value": 1,
                    "param_3": 4,
                    "param_size": 2,
                    "param_val": 1,
                    "param_value": 7,
                    "struct_param": 1,
                    "value": 2
                },
                "param_4": {
                    "field_length": 1,
                    "field_offset": 2,
                    "field_size": 19,
                    "param4": 1,
                    "param_4": 1,
                    "size": 3,
                    "struct_size": 2,
                    "unknown_size": 2
                },
                "param_5": {
                    "field_flag": 2,
                    "field_status": 2,
                    "field_type": 14,
                    "flag": 8,
                    "is_warning": 1,
                    "param5": 2,
                    "param_5": 1,
                    "warning_type": 1
                },
                "pcVar9": {
                    "field_flag": 1,
                    "field_flag_str": 1,
                    "field_flag_string": 1,
                    "field_set_flag": 1,
                    "field_status": 1,
                    "field_status_str": 1,
                    "field_type_indicator": 1,
                    "field_type_specifier": 1,
                    "field_type_str": 1,
                    "field_type_string": 2,
                    "flag": 2,
                    "flag_str": 2,
                    "flag_string": 7,
                    "number_flag": 1,
                    "param_5_string": 1,
                    "path": 1,
                    "slash_pc": 1,
                    "status_string": 1,
                    "string_value": 1,
                    "suffix": 1,
                    "type": 1,
                    "type_string": 1
                },
                "sVar4": {
                    "base_str_length": 1,
                    "config_size": 1,
                    "config_string_size": 1,
                    "existing_field_string_size": 1,
                    "field_string_length": 1,
                    "input_string_length": 1,
                    "len1": 1,
                    "length1": 3,
                    "length_1": 1,
                    "length_field_name": 1,
                    "length_struct_ptr": 1,
                    "param1_size": 2,
                    "param2_size": 1,
                    "param_1_length": 2,
                    "param_1_size": 1,
                    "param_size": 1,
                    "size1": 1,
                    "source_string_length": 1,
                    "src_size": 1,
                    "str_len1": 2,
                    "string_size_1": 1,
                    "struct_field_size": 1,
                    "struct_name_length": 3,
                    "struct_str_len": 1
                },
                "sVar5": {
                    "field_name_len": 1,
                    "field_name_length": 7,
                    "field_name_size": 6,
                    "field_size": 1,
                    "len2": 1,
                    "length2": 3,
                    "length_2": 1,
                    "length_field_name": 1,
                    "length_field_value": 1,
                    "param2_size": 2,
                    "param_2_length": 1,
                    "param_2_size": 1,
                    "param_string_length": 1,
                    "size2": 1,
                    "str_len2": 2,
                    "string_size_2": 1
                },
                "sVar6": {
                    "base_string_size": 1,
                    "err_msg_size": 1,
                    "error_message_length": 1,
                    "field_type_length": 1,
                    "field_type_size": 1,
                    "field_warning_string_length": 1,
                    "len3": 1,
                    "length3": 3,
                    "length_3": 1,
                    "length_struct_name": 1,
                    "length_unknown_message": 1,
                    "message_length": 1,
                    "message_size": 2,
                    "param3_length": 1,
                    "param_3_size": 1,
                    "param_4_length": 1,
                    "param_value_len": 1,
                    "param_value_length": 2,
                    "param_value_size": 1,
                    "return_value_size": 1,
                    "size3": 1,
                    "str_len3": 2,
                    "string_size_3": 1,
                    "translated_text_size": 1,
                    "warning_length": 1,
                    "warning_message_size": 1
                },
                "sprintf": {
                    "create_formatted_string": 1,
                    "create_message": 1,
                    "format_string": 8,
                    "generate_string": 1
                },
                "strlen": {
                    "get_string_length": 10
                },
                "uVar7": {
                    "dcgettext_result": 2,
                    "error_message": 2,
                    "format_specifier": 1,
                    "get_field_warning": 1,
                    "gettext_string": 1,
                    "message_id": 1,
                    "result1": 1,
                    "translated_message": 1,
                    "translation": 2,
                    "translation_message": 1,
                    "warning_format": 3,
                    "warning_message": 13,
                    "warning_str": 1,
                    "warning_string": 1
                },
                "uVar8": {
                    "result": 12,
                    "result2": 1,
                    "return_val": 1,
                    "return_value": 17
                },
                "xmalloc": {
                    "allocate_memory": 12,
                    "custom_malloc": 1
                }
            },
            "called": [
                "strlen",
                "dcgettext",
                "sprintf",
                "FUN_00119ed0",
                "free",
                "FUN_00109b2f",
                "xmalloc",
                "abort"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nundefined8\ngenerate_struct_warning_message_0010ba08(undefined8 *parameters,char *field_name,undefined8 param_value,ulong field_size,int field_type)\n\n{\n  char flag;\n  int struct_size;\n  long long_value;\n  char *struct_name;\n  size_t struct_name_length;\n  size_t field_name_length;\n  size_t length3;\n  char *warning_message;\n  undefined8 warning_message;\n  undefined8 return_value;\n  char *flag_string;\n  \n  flag = *(char *)(parameters[0xc] + 0x1c);\n  struct_size = *(int *)(parameters[0xc] + 0x18);\n  struct_name = (char *)FUN_00109b2f();\n  if (*(char **)(parameters[0xc] + 0x20) == (char *)0x0) {\n    return_value = 0;\n  }\n  else {\n    struct_name_length = strlen(*(char **)(parameters[0xc] + 0x20));\n    field_name_length = strlen(field_name);\n    length3 = strlen(struct_name);\n    warning_message = (char *)xmalloc(struct_name_length + 0x32 + field_name_length + length3);\n    if (field_type == 1) {\n      flag_string = \"/1\";\n    }\n    else {\n      flag_string = \"/0\";\n      if ((field_type != 2) && (flag_string = \"\", field_type != 0)) {\n                    \n        abort();\n      }\n    }\n    if ((field_size == 0) && (field_size = (ulong)(uint)(struct_size * 8), field_size == 0)) {\n      return_value = *(undefined8 *)*parameters;\n      warning_message = dcgettext(0,\"%s: warning: unknown size for field `%s\\' in struct\",5);\n      FUN_00119ed0(warning_message,return_value,field_name);\n    }\n    sprintf(warning_message,\"%s%s:%s%s,%ld,%ld;\",*(undefined8 *)(parameters[0xc] + 0x20),field_name,flag_string,struct_name,\n            param_value,field_size);\n    free_memory(*(void **)(parameters[0xc] + 0x20));\n    long_value = parameters[0xc];\n    *(char **)(long_value + 0x20) = warning_message;\n    if (flag != '\\0') {\n      *(undefined *)(long_value + 0x1c) = 1;\n    }\n    return_value = CONCAT71((int7)((ulong)long_value >> 8),1);\n  }\n  return return_value;\n}\n\n",
            "current_name": "generate_struct_warning_message_0010ba08",
            "entrypoint": "0x0010ba08",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010ba08": "generate_struct_warning_message_0010ba08",
                "__s": "struct_name",
                "__s_00": "warning_message",
                "abort": "terminate_program",
                "cVar1": "flag",
                "dcgettext": "get_translated_text",
                "free": "free_memory",
                "iVar2": "struct_size",
                "lVar3": "long_value",
                "param_1": "parameters",
                "param_2": "field_name",
                "param_3": "param_value",
                "param_4": "field_size",
                "param_5": "field_type",
                "pcVar9": "flag_string",
                "sVar4": "struct_name_length",
                "sVar5": "field_name_length",
                "sVar6": "length3",
                "sprintf": "format_string",
                "strlen": "get_string_length",
                "uVar7": "warning_message",
                "uVar8": "return_value",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010bb52": {
            "additional_data": {
                "FUN_0010bb52": {
                    "allocate_and_init_hash": 1,
                    "allocate_and_initialize_hash": 3,
                    "allocate_and_initialize_hash_function": 1,
                    "allocate_hash_function": 1,
                    "allocate_new_bfd_hash": 1,
                    "create_and_initialize_hash": 2,
                    "create_bfd_hash": 2,
                    "create_hash": 2,
                    "create_hash_entry": 1,
                    "create_hash_func": 1,
                    "create_hash_function": 9,
                    "create_new_bfd_hash": 1,
                    "create_new_hash_func": 1,
                    "initialize_hash": 1,
                    "initialize_hash_function": 3,
                    "initialize_hash_table": 1
                },
                "bfd_hash_allocate": {
                    "allocate_bfd_hash": 1,
                    "allocate_hash": 9
                },
                "bfd_hash_newfunc": {
                    "create_new_bfd_hash": 1,
                    "create_new_func": 1,
                    "create_new_function": 3,
                    "create_new_hash": 3,
                    "create_new_hash_function": 1,
                    "initialize_hash": 1
                },
                "lVar1": {
                    "hash_entry_ptr": 1,
                    "hash_func": 1,
                    "hash_func_ptr": 1,
                    "hash_function_ptr": 1,
                    "hash_function_result": 2,
                    "hash_handle": 1,
                    "hash_pointer": 1,
                    "hash_ptr": 6,
                    "hash_result": 3,
                    "hash_value": 1,
                    "new_bfd_hash": 1,
                    "new_func_ptr": 1,
                    "new_hash": 7,
                    "new_hash_entry": 1,
                    "new_hash_func": 1,
                    "new_hash_function": 1,
                    "result": 1
                },
                "param_1": {
                    "hash_input": 1,
                    "hash_param": 1,
                    "hash_size": 3,
                    "input": 2,
                    "input_param": 4,
                    "input_size": 1,
                    "input_value": 8,
                    "size": 11
                },
                "param_2": {
                    "allocate_param": 1,
                    "allocation_size": 2,
                    "arg1": 5,
                    "func_param_1": 1,
                    "hash_allocate_param1": 1,
                    "hash_data_1": 1,
                    "hash_param1": 3,
                    "key": 1,
                    "param2": 6,
                    "param_2": 6,
                    "param_224": 1,
                    "param_a": 1,
                    "param_two": 1,
                    "parameter_2": 1
                },
                "param_3": {
                    "arg2": 5,
                    "data": 1,
                    "func_param_2": 1,
                    "function_param": 1,
                    "hash_allocate_param2": 1,
                    "hash_data_2": 1,
                    "hash_param2": 3,
                    "initialization_parameter": 1,
                    "newfunc_param": 1,
                    "param3": 6,
                    "param_232": 1,
                    "param_3": 6,
                    "param_b": 1,
                    "param_three": 1,
                    "parameter_3": 1
                }
            },
            "called": [
                "bfd_hash_allocate",
                "bfd_hash_newfunc"
            ],
            "calling": [
                "FUN_0011378f"
            ],
            "code": "\nlong create_hash_function_0010bb52(long size,undefined8 param2,undefined8 param_3)\n\n{\n  long new_hash;\n  \n  if (((size != 0) || (size = bfd_hash_allocate(param2,0x30), size != 0)) &&\n     (new_hash = bfd_hash_newfunc(size,param2,param_3), new_hash != 0)) {\n    *(undefined8 *)(new_hash + 0x20) = 0xffffffffffffffff;\n    *(undefined8 *)(new_hash + 0x18) = 0;\n    *(undefined4 *)(new_hash + 0x28) = 0;\n    return new_hash;\n  }\n  return 0;\n}\n\n",
            "current_name": "create_hash_function_0010bb52",
            "entrypoint": "0x0010bb52",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010bb52": "create_hash_function_0010bb52",
                "bfd_hash_allocate": "allocate_hash",
                "bfd_hash_newfunc": "create_new_hash",
                "lVar1": "new_hash",
                "param_1": "size",
                "param_2": "param2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010bba1": {
            "additional_data": {
                "FUN_00109cf4": {
                    "call_function": 1
                },
                "FUN_0010bba1": {
                    "find_hashed_value": 1,
                    "find_matching_entry": 1,
                    "find_symbol_offset": 1,
                    "find_valid_entry": 1,
                    "hash_lookup_and_execute": 1,
                    "lookup_and_call_func": 1,
                    "lookup_and_call_function": 11,
                    "lookup_and_call_function_with_hash": 1,
                    "lookup_and_execute": 4,
                    "lookup_and_execute_function": 1,
                    "lookup_and_invoke_function": 1,
                    "lookup_and_process_data": 2,
                    "lookup_and_process_entry": 1,
                    "lookup_and_return_result": 1,
                    "lookup_entry_in_hash_table": 1,
                    "lookup_function_results": 1,
                    "lookup_table_entry": 1
                },
                "lVar1": {
                    "entry": 6,
                    "entry_addr": 1,
                    "entry_address": 4,
                    "hash_entry": 10,
                    "hash_lookup_result": 3,
                    "hash_result": 1,
                    "lookup_result": 3,
                    "result": 1,
                    "symbol_offset": 1
                },
                "param_1": {
                    "address": 1,
                    "base_addr": 1,
                    "base_address": 4,
                    "hash_table": 20,
                    "hash_table_address": 1,
                    "input_param": 1,
                    "input_pointer": 1,
                    "param": 1,
                    "table_base_address": 1
                },
                "param_2": {
                    "data": 1,
                    "entry": 2,
                    "entry_key": 2,
                    "hash": 1,
                    "hash_key": 1,
                    "hash_value": 1,
                    "key": 14,
                    "lookup_key": 4,
                    "lookup_param": 1,
                    "search_value": 1,
                    "symbol_name": 1,
                    "value": 1,
                    "value_to_lookup": 1
                },
                "uVar2": {
                    "execution_result": 3,
                    "function_result": 2,
                    "result": 24,
                    "return_value": 1
                }
            },
            "called": [
                "bfd_hash_lookup",
                "FUN_00109cf4"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nundefined8 lookup_and_call_function_with_hash_0010bba1(long hash_table,undefined8 key)\n\n{\n  long hash_entry;\n  undefined8 result;\n  \n  hash_entry = bfd_hash_lookup(hash_table + 0x1b8,key,0,0);\n  if ((hash_entry != 0) && (0 < *(long *)(hash_entry + 0x20))) {\n    result = FUN_00109cf4(hash_table,*(long *)(hash_entry + 0x20),*(undefined4 *)(hash_entry + 0x28));\n    return result;\n  }\n  return 0;\n}\n\n",
            "current_name": "lookup_and_call_function_with_hash_0010bba1",
            "entrypoint": "0x0010bba1",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010bba1": "lookup_and_call_function_with_hash_0010bba1",
                "lVar1": "hash_entry",
                "param_1": "hash_table",
                "param_2": "key",
                "uVar2": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010bbd3": {
            "additional_data": {
                "FUN_0010bbd3": {
                    "initialize_and_set_parameters": 1,
                    "initialize_data_structure": 1,
                    "initialize_debug_data": 1,
                    "initialize_debug_info": 24,
                    "initialize_debugger": 3,
                    "process_parameters": 1
                },
                "auVar8": {
                    "result": 5,
                    "return_val": 4,
                    "return_value": 21
                },
                "bVar7": {
                    "b_var": 1,
                    "b_var7": 1,
                    "bool_val": 1,
                    "byte_0": 1,
                    "byte_flag": 1,
                    "byte_val": 1,
                    "byte_value": 1,
                    "byte_var": 11,
                    "flag": 6,
                    "is_zero": 1,
                    "temp_flag": 1,
                    "temp_var": 2,
                    "zero_byte": 3
                },
                "lVar4": {
                    "count": 4,
                    "counter": 4,
                    "i": 1,
                    "iteration_count": 2,
                    "loop_count": 2,
                    "loop_counter": 15,
                    "loop_index": 3
                },
                "param_1": {
                    "data_structure": 1,
                    "debug_data": 1,
                    "debug_info": 22,
                    "debug_info_ptr": 1,
                    "debugger_info": 2,
                    "info": 3,
                    "parameter1": 1
                },
                "param_2": {
                    "file": 1,
                    "filename": 30
                },
                "param_3": {
                    "arg3": 2,
                    "arg_1": 1,
                    "param1": 1,
                    "param3": 13,
                    "param_3": 11,
                    "unused_param_1": 1,
                    "var1": 1
                },
                "param_4": {
                    "arg4": 2,
                    "arg_2": 1,
                    "param2": 1,
                    "param4": 13,
                    "param_4": 11,
                    "unused_param_2": 1,
                    "value": 1,
                    "var2": 1
                },
                "pcVar6": {
                    "current_filename": 1,
                    "default_filename": 3,
                    "file": 5,
                    "file_name_ptr": 1,
                    "file_path": 1,
                    "file_pointer": 1,
                    "file_ptr": 4,
                    "filename_ptr": 6,
                    "final_filename": 1,
                    "new_filename": 2,
                    "str": 1,
                    "temp_filename": 3,
                    "temp_string": 1,
                    "unit_filename": 1
                },
                "puVar1": {
                    "debug_info_ptr": 1,
                    "debug_info_units": 1,
                    "info_units": 3,
                    "pointer1": 1,
                    "prev_debug_data": 1,
                    "prev_debug_info": 7,
                    "previous_debug_info": 1,
                    "ptr1": 5,
                    "ptr_1": 1,
                    "ptr_to_debug_info": 2,
                    "ptr_to_info": 1,
                    "unit_ptr": 5,
                    "units": 1,
                    "units_ptr": 1
                },
                "puVar2": {
                    "allocated_memory_1": 1,
                    "debug_info_units_ptr": 1,
                    "info_units": 1,
                    "info_units_ptr": 2,
                    "memory_ptr1": 1,
                    "new_allocation1": 1,
                    "pointer2": 1,
                    "ptr1": 3,
                    "ptr2": 4,
                    "ptr_2": 1,
                    "ptr_to_units": 2,
                    "unit1": 1,
                    "unit_data1": 1,
                    "unit_info": 1,
                    "unit_info1": 1,
                    "units": 1,
                    "units1": 1,
                    "units_array": 1,
                    "units_array1": 1,
                    "units_ptr": 3,
                    "units_ptr1": 1,
                    "xmalloc1": 1
                },
                "puVar3": {
                    "allocated_memory_2": 1,
                    "debug_info_units_ptr_temp": 1,
                    "memory_ptr2": 1,
                    "new_allocation2": 1,
                    "new_debug_info": 1,
                    "new_info_units": 1,
                    "new_info_units_ptr": 2,
                    "new_units": 2,
                    "new_units_array": 1,
                    "new_units_ptr": 1,
                    "pointer3": 1,
                    "ptr2": 4,
                    "ptr3": 4,
                    "ptr_3": 1,
                    "ptr_to_new_units": 2,
                    "unit2": 1,
                    "unit_data2": 1,
                    "unit_info2": 1,
                    "units2": 1,
                    "units_array2": 1,
                    "units_ptr2": 1,
                    "xmalloc2": 1
                },
                "puVar5": {
                    "current_memory_location": 1,
                    "current_ptr": 2,
                    "current_unit": 2,
                    "current_unit_info": 1,
                    "loop_ptr": 2,
                    "loop_var": 1,
                    "pointer4": 1,
                    "ptr": 5,
                    "ptr3": 3,
                    "ptr4": 3,
                    "ptr5": 1,
                    "ptr_4": 1,
                    "ptr_to_new_units_element": 1,
                    "ptr_to_temp": 1,
                    "pu_var5": 1,
                    "temp_ptr": 3,
                    "unit_info_pointer": 1,
                    "units_ptr3": 1
                }
            },
            "called": [
                "__assert_fail",
                "xmalloc"
            ],
            "calling": [
                "FUN_0011173a",
                "FUN_0010554f"
            ],
            "code": "\nundefined  [16] initialize_debug_info_0010bbd3(long *debug_info,char *filename,undefined8 param3,undefined8 param4)\n\n{\n  undefined8 *prev_debug_info;\n  undefined4 *ptr2;\n  undefined4 *ptr3;\n  long loop_counter;\n  undefined4 *ptr;\n  char *filename_ptr;\n  byte byte_var;\n  undefined return_value [16];\n  \n  byte_var = 0;\n  filename_ptr = \"\";\n  if (filename != (char *)0x0) {\n    filename_ptr = filename;\n  }\n  ptr2 = (undefined4 *)xmalloc(0x18);\n  ptr = ptr2;\n  for (loop_counter = 6; loop_counter != 0; loop_counter = loop_counter + -1) {\n    *ptr = 0;\n    ptr = ptr + (ulong)byte_var * -2 + 1;\n  }\n  *(char **)(ptr2 + 2) = filename_ptr;\n  ptr3 = (undefined4 *)xmalloc(0x18);\n  debug_info[2] = (long)ptr2;\n  ptr = ptr3;\n  for (loop_counter = 6; loop_counter != 0; loop_counter = loop_counter + -1) {\n    *ptr = 0;\n    ptr = ptr + (ulong)byte_var * -2 + 1;\n  }\n  prev_debug_info = (undefined8 *)debug_info[1];\n  *(undefined4 **)(ptr3 + 2) = ptr2;\n  if (prev_debug_info == (undefined8 *)0x0) {\n    if (*debug_info != 0) {\n                    \n      __assert_fail(\"info->units == NULL\",\"../../binutils/debug.c\",699,\"debug_set_filename\");\n    }\n    *debug_info = (long)ptr3;\n  }\n  else {\n    *prev_debug_info = ptr3;\n  }\n  debug_info[1] = (long)ptr3;\n  debug_info[5] = 0;\n  *(undefined (*) [16])(debug_info + 3) = ZEXT816(0);\n  return_value._8_8_ = param4;\n  return_value._0_8_ = 1;\n  return return_value;\n}\n\n",
            "current_name": "initialize_debug_info_0010bbd3",
            "entrypoint": "0x0010bbd3",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010bbd3": "initialize_debug_info_0010bbd3",
                "auVar8": "return_value",
                "bVar7": "byte_var",
                "lVar4": "loop_counter",
                "param_1": "debug_info",
                "param_2": "filename",
                "param_3": "param3",
                "param_4": "param4",
                "pcVar6": "filename_ptr",
                "puVar1": "prev_debug_info",
                "puVar2": "ptr2",
                "puVar3": "ptr3",
                "puVar5": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010bc80": {
            "additional_data": {
                "FUN_0010bc80": {
                    "debug_record_function": 16,
                    "process_debug_record": 1,
                    "record_debug_function": 9,
                    "record_debug_info": 1,
                    "record_debug_information": 2,
                    "record_function": 1
                },
                "_stderr": {
                    "error_stream": 1,
                    "stderr": 1
                },
                "auVar8": {
                    "debug_result_values": 1,
                    "result": 23,
                    "ret_value": 1,
                    "return_val": 1,
                    "return_value": 4
                },
                "bVar7": {
                    "b_var7": 2,
                    "byte_flag": 1,
                    "byte_val": 1,
                    "byte_var": 1,
                    "debug_byte": 1,
                    "debug_flag": 1,
                    "flag": 12,
                    "flag2": 2,
                    "flag_byte": 2,
                    "flag_zero": 1,
                    "is_debug": 1,
                    "loop_condition": 1,
                    "reset_flag": 1,
                    "row_index": 1,
                    "temp_flag": 1,
                    "value": 1,
                    "zero_byte": 1
                },
                "lVar4": {
                    "count": 2,
                    "debug_result": 1,
                    "i": 12,
                    "index": 3,
                    "length": 1,
                    "loop_counter": 8,
                    "result": 1,
                    "temp": 2,
                    "var1": 1
                },
                "param_1": {
                    "arg1": 2,
                    "data": 1,
                    "debug_context": 3,
                    "debug_info": 3,
                    "debug_info_ptr": 2,
                    "debug_record_struct": 1,
                    "debugger": 1,
                    "filename": 1,
                    "function_address": 1,
                    "param1": 3,
                    "param_1": 3,
                    "param_address": 1,
                    "param_base": 2,
                    "param_ptr": 2,
                    "record": 1,
                    "record_data": 1,
                    "record_handle": 1,
                    "record_ptr": 2
                },
                "param_2": {
                    "arg2": 1,
                    "debug_file_path": 1,
                    "debug_filename": 1,
                    "debug_info": 1,
                    "file_name": 1,
                    "file_path": 1,
                    "filename": 22,
                    "input_string": 1,
                    "param2": 2
                },
                "param_3": {
                    "address": 1,
                    "arg3": 2,
                    "buffer_size": 1,
                    "data": 1,
                    "data_size": 1,
                    "debug_file_size": 1,
                    "debug_value": 1,
                    "file_size": 1,
                    "function_len": 1,
                    "length": 1,
                    "line": 1,
                    "param3": 2,
                    "record_size": 6,
                    "size": 10,
                    "source_line": 1
                },
                "param_4": {
                    "arg4": 2,
                    "byte_value": 1,
                    "debug_flag": 2,
                    "debug_info_flag": 1,
                    "debug_level": 2,
                    "debug_type": 1,
                    "flag": 11,
                    "flags": 6,
                    "param4": 2,
                    "record_type": 3
                },
                "param_5": {
                    "arg1": 2,
                    "arg5": 3,
                    "debug_param5": 1,
                    "param5": 8,
                    "param_5": 15,
                    "param_ptr2": 1,
                    "start_time": 1
                },
                "param_6": {
                    "arg2": 2,
                    "arg6": 3,
                    "debug_param6": 1,
                    "end_time": 1,
                    "param6": 8,
                    "param_6": 15,
                    "param_long": 1
                },
                "pcVar6": {
                    "debug_file_name": 2,
                    "debug_filename": 1,
                    "debug_message": 1,
                    "debug_msg_ptr": 1,
                    "debug_set_filename": 1,
                    "debug_set_filename_msg": 1,
                    "default_file_path": 1,
                    "default_filename": 6,
                    "default_string": 1,
                    "empty_string": 1,
                    "error_string": 1,
                    "file": 2,
                    "file_name": 1,
                    "file_name_param": 1,
                    "file_name_ptr": 1,
                    "file_path": 1,
                    "filename_message": 1,
                    "filename_ptr": 2,
                    "param_filename": 1,
                    "ptr_filename": 1,
                    "str": 1,
                    "temp": 1,
                    "temp_filename": 1
                },
                "plVar2": {
                    "buffer": 1,
                    "debug_data": 1,
                    "debug_info": 5,
                    "debug_record": 8,
                    "debug_record_ptr": 2,
                    "ptr1": 4,
                    "ptr_data": 1,
                    "ptr_size": 1,
                    "record": 5,
                    "record_info": 1,
                    "record_ptr": 2
                },
                "puVar3": {
                    "allocated_memory": 1,
                    "buffer": 1,
                    "buffer_ptr": 1,
                    "data_buffer": 2,
                    "debug_buffer": 2,
                    "debug_data": 7,
                    "debug_data_ptr": 1,
                    "debug_info": 1,
                    "debug_info_ptr2": 1,
                    "debug_ptr": 1,
                    "debug_set": 4,
                    "debug_set_filename": 1,
                    "ptr": 1,
                    "ptr2": 4,
                    "ptr_array": 1,
                    "ptr_memory": 1,
                    "record_data": 1
                },
                "puVar5": {
                    "buffer_entry": 1,
                    "buffer_ptr": 2,
                    "current_debug_data": 1,
                    "debug_array": 1,
                    "debug_data_ptr": 1,
                    "debug_info_ptr3": 1,
                    "debug_ptr": 3,
                    "debug_set_ptr": 1,
                    "ptr": 8,
                    "ptr2": 1,
                    "ptr3": 4,
                    "ptr_loop": 1,
                    "ptr_temp": 1,
                    "pu_var5": 2,
                    "row": 1,
                    "temp_ptr": 1,
                    "zeroed_data": 1
                },
                "uVar1": {
                    "debug_msg": 1,
                    "err_msg": 2,
                    "error_message": 19,
                    "error_msg": 3,
                    "message": 1,
                    "msg": 2,
                    "result": 2,
                    "return_val": 1
                }
            },
            "called": [
                "FUN_00112925",
                "dcgettext",
                "xmalloc",
                "fprintf"
            ],
            "calling": [
                "FUN_0011173a",
                "FUN_0010554f"
            ],
            "code": "\n\n\nundefined  [16]\nrecord_debug_function_0010bc80(long debug_info,char *filename,long size,uint flag,undefined8 param_5,\n            undefined8 param_6)\n\n{\n  undefined8 error_message;\n  long *debug_record;\n  undefined4 *debug_data;\n  long i;\n  undefined4 *ptr;\n  char *default_filename;\n  byte flag;\n  undefined result [16];\n  \n  flag = 0;\n  default_filename = \"\";\n  if (filename != (char *)0x0) {\n    default_filename = filename;\n  }\n  if (size != 0) {\n    if (*(long *)(debug_info + 8) == 0) {\n      error_message = dcgettext(0,\"debug_record_function: no debug_set_filename call\",5);\n      fprintf(stderr,\"%s\\n\",error_message);\n    }\n    else {\n      debug_record = (long *)xmalloc(0x18);\n      *debug_record = size;\n      *(undefined (*) [16])(debug_record + 1) = ZEXT816(0);\n      debug_data = (undefined4 *)xmalloc(0x30);\n      *(long **)(debug_info + 0x18) = debug_record;\n      debug_record[2] = (long)debug_data;\n      ptr = debug_data;\n      for (i = 0xc; i != 0; i = i + -1) {\n        *ptr = 0;\n        ptr = ptr + (ulong)flag * -2 + 1;\n      }\n      *(undefined4 **)(debug_info + 0x20) = debug_data;\n      i = *(long *)(debug_info + 0x10);\n      *(undefined8 *)(debug_data + 6) = param_5;\n      *(undefined8 *)(debug_data + 8) = 0xffffffffffffffff;\n      i = FUN_00112925(i + 0x10,default_filename,3,(flag & 0xff) + 1);\n      if (i != 0) {\n        *(long **)(i + 0x20) = debug_record;\n        error_message = CONCAT71((int7)((ulong)i >> 8),1);\n        goto LAB_0010bd56;\n      }\n    }\n  }\n  error_message = 0;\nLAB_0010bd56:\n  result._8_8_ = param_6;\n  result._0_8_ = error_message;\n  return result;\n}\n\n",
            "current_name": "record_debug_function_0010bc80",
            "entrypoint": "0x0010bc80",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010bc80": "record_debug_function_0010bc80",
                "_stderr": "stderr",
                "auVar8": "result",
                "bVar7": "flag",
                "lVar4": "i",
                "param_1": "debug_info",
                "param_2": "filename",
                "param_3": "size",
                "param_4": "flag",
                "pcVar6": "default_filename",
                "plVar2": "debug_record",
                "puVar3": "debug_data",
                "puVar5": "ptr",
                "uVar1": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010bd62": {
            "additional_data": {
                "FUN_0010bd62": {
                    "add_record_to_function": 1,
                    "debug_record_parameter": 1,
                    "record_debug_parameter": 2,
                    "record_parameter": 23,
                    "record_parameter_debug": 3,
                    "record_parameter_debugging": 1
                },
                "__stderr": {
                    "stderr": 1
                },
                "_stderr": {
                    "error_output": 1,
                    "error_output_stream": 1,
                    "output_stream": 1
                },
                "bVar8": {
                    "b": 1,
                    "b_var8": 1,
                    "byte_flag": 1,
                    "byte_value": 1,
                    "count": 1,
                    "counter": 2,
                    "flag": 9,
                    "found_flag": 1,
                    "is_zero": 1,
                    "iteration": 1,
                    "iteration_count": 1,
                    "iteration_flag": 1,
                    "loop_condition": 2,
                    "loop_counter": 5,
                    "loop_index": 1,
                    "loop_iteration": 1,
                    "zero": 1
                },
                "dcgettext": {
                    "get_error_message": 2,
                    "get_localized_message": 1
                },
                "fprintf": {
                    "print_error": 1
                },
                "lVar5": {
                    "count": 2,
                    "counter": 2,
                    "current_offset": 1,
                    "i": 1,
                    "length": 4,
                    "list_size": 1,
                    "loop_count": 1,
                    "loop_counter": 4,
                    "node_address": 1,
                    "node_count": 1,
                    "offset": 2,
                    "record_size": 1,
                    "temp": 1,
                    "temp2": 1,
                    "temp_length": 1,
                    "temp_value": 2,
                    "temp_var": 4
                },
                "param_1": {
                    "function": 3,
                    "function_address": 3,
                    "function_context": 1,
                    "function_ctx": 1,
                    "function_data": 4,
                    "function_info": 7,
                    "function_ptr": 10,
                    "function_record": 1,
                    "record": 1
                },
                "param_2": {
                    "arg1": 2,
                    "param1": 5,
                    "param2": 4,
                    "param_2": 4,
                    "param_2_size": 1,
                    "param_2_value": 3,
                    "param_size": 1,
                    "param_value": 1,
                    "parameter1": 1,
                    "parameter_size": 1,
                    "parameter_type": 1,
                    "parameter_value": 1,
                    "record_id": 2,
                    "record_number": 1,
                    "record_ptr": 1,
                    "record_size": 1,
                    "size": 1
                },
                "param_3": {
                    "arg2": 2,
                    "length": 1,
                    "param2": 5,
                    "param3": 4,
                    "param_3": 4,
                    "param_3_size": 1,
                    "param_3_value": 3,
                    "param_value": 1,
                    "param_value_size": 1,
                    "parameter2": 1,
                    "parameter_count": 1,
                    "parameter_id": 1,
                    "parameter_number": 1,
                    "parameter_ptr": 1,
                    "parameter_size": 2,
                    "record_count": 1,
                    "value": 1
                },
                "param_4": {
                    "arg3": 2,
                    "data_type": 1,
                    "debug_info": 1,
                    "param3": 5,
                    "param4": 5,
                    "param_4": 5,
                    "param_4_value": 4,
                    "param_flag": 1,
                    "param_type": 1,
                    "param_value": 1,
                    "parameter": 1,
                    "parameter3": 1,
                    "parameter_type": 1,
                    "record_flag": 1,
                    "status": 1
                },
                "param_5": {
                    "arg4": 2,
                    "current_function_info": 1,
                    "data": 2,
                    "debug_ctx": 1,
                    "debug_info": 1,
                    "debug_record": 1,
                    "param4": 5,
                    "param5": 5,
                    "param_5": 6,
                    "param_5_ptr": 1,
                    "param_5_value": 3,
                    "param_data": 1,
                    "parameter4": 1,
                    "record_address": 1
                },
                "puVar1": {
                    "current": 5,
                    "current_function": 1,
                    "current_node": 4,
                    "current_pointer": 1,
                    "current_ptr": 7,
                    "last_node": 1,
                    "last_pointer": 1,
                    "next_pointer": 1,
                    "prev_node": 1,
                    "prev_node_ptr": 1,
                    "prev_ptr": 1,
                    "prev_record": 1,
                    "ptr1": 3,
                    "tail_ptr": 1,
                    "temp_ptr": 2
                },
                "puVar3": {
                    "allocated_mem_ptr": 1,
                    "allocated_memory": 3,
                    "debug_record": 1,
                    "mem_alloc": 1,
                    "new_alloc": 1,
                    "new_allocation": 1,
                    "new_node": 2,
                    "new_node_ptr": 1,
                    "new_parameter": 1,
                    "new_pointer": 1,
                    "new_record": 8,
                    "new_struct": 2,
                    "new_struct_ptr": 1,
                    "ptr2": 2,
                    "ptr3": 1,
                    "record": 2,
                    "record_ptr": 2
                },
                "puVar4": {
                    "curr_ptr": 1,
                    "current_node": 2,
                    "current_pointer": 2,
                    "current_ptr": 2,
                    "current_tail": 1,
                    "iterator_ptr": 1,
                    "next_node": 4,
                    "next_ptr": 2,
                    "next_record": 1,
                    "node_ptr": 1,
                    "ptr3": 2,
                    "ptr4": 1,
                    "temp": 3,
                    "temp_pointer": 2,
                    "temp_ptr": 5,
                    "temp_record": 1
                },
                "puVar6": {
                    "current_node_ptr": 1,
                    "current_ptr": 1,
                    "insert_ptr": 1,
                    "last": 1,
                    "last_node": 2,
                    "last_pointer": 2,
                    "last_ptr": 8,
                    "last_record": 2,
                    "prev_node": 2,
                    "prev_node_ptr_temp": 1,
                    "prev_record_address": 1,
                    "previous_node": 1,
                    "previous_pointer": 2,
                    "ptr4": 2,
                    "ptr6": 1,
                    "temp2": 1,
                    "temp_ptr": 1,
                    "temp_ptr2": 1
                },
                "puVar7": {
                    "current_memory": 1,
                    "current_record": 2,
                    "init_node": 1,
                    "iteration": 1,
                    "loop_counter": 3,
                    "loop_pointer": 2,
                    "new_allocation_iter": 1,
                    "new_node_ptr_temp": 1,
                    "new_struct_ptr": 1,
                    "pointer_array": 1,
                    "ptr": 2,
                    "ptr5": 2,
                    "ptr7": 1,
                    "ptr_array": 1,
                    "pu_var7": 1,
                    "record_pointer": 1,
                    "record_ptr": 3,
                    "temp_node": 1,
                    "temp_ptr": 1,
                    "temp_ptr2": 1,
                    "temp_ptr_2": 1,
                    "temp_record": 1,
                    "temp_struct_ptr": 1
                },
                "uVar2": {
                    "debug_error_message": 1,
                    "debug_error_msg": 1,
                    "debug_message": 1,
                    "debug_msg": 1,
                    "error": 1,
                    "error_message": 15,
                    "error_msg": 7,
                    "error_string": 1,
                    "msg": 1,
                    "result": 1,
                    "temp": 1
                }
            },
            "called": [
                "dcgettext",
                "xmalloc",
                "fprintf"
            ],
            "calling": [
                "FUN_0011173a",
                "FUN_00112a33"
            ],
            "code": "\n\n\nundefined8\ndebug_record_parameter_0010bd62(long function_ptr,long param1,long param2,undefined4 param4,undefined8 param_5)\n\n{\n  undefined8 *current_ptr;\n  undefined8 error_message;\n  undefined4 *new_record;\n  undefined8 *temp_ptr;\n  long temp_var;\n  undefined8 *last_ptr;\n  undefined4 *record_ptr;\n  byte flag;\n  \n  flag = 0;\n  if (param1 == 0) {\n    return 0;\n  }\n  if (param2 != 0) {\n    if ((*(long *)(function_ptr + 8) != 0) && (*(long *)(function_ptr + 0x18) != 0)) {\n      new_record = (undefined4 *)xmalloc(0x28);\n      record_ptr = new_record;\n      for (temp_var = 10; temp_var != 0; temp_var = temp_var + -1) {\n        *record_ptr = 0;\n        record_ptr = record_ptr + (ulong)flag * -2 + 1;\n      }\n      temp_var = *(long *)(function_ptr + 0x18);\n      *(long *)(new_record + 2) = param1;\n      *(long *)(new_record + 4) = param2;\n      new_record[6] = param4;\n      current_ptr = *(undefined8 **)(temp_var + 8);\n      *(undefined8 *)(new_record + 8) = param_5;\n      last_ptr = (undefined8 *)(temp_var + 8);\n      while (temp_ptr = current_ptr, temp_ptr != (undefined8 *)0x0) {\n        last_ptr = temp_ptr;\n        current_ptr = (undefined8 *)*temp_ptr;\n      }\n      *last_ptr = new_record;\n      return 1;\n    }\n    error_message = dcgettext(0,\"debug_record_parameter_0010bd62: no current function\",5);\n    fprintf(output_stream,\"%s\\n\",error_message);\n  }\n  return 0;\n}\n\n",
            "current_name": "debug_record_parameter_0010bd62",
            "entrypoint": "0x0010bd62",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010bd62": "debug_record_parameter_0010bd62",
                "_stderr": "output_stream",
                "bVar8": "flag",
                "dcgettext": "get_error_message",
                "fprintf": "print_error",
                "lVar5": "temp_var",
                "param_1": "function_ptr",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param4",
                "puVar1": "current_ptr",
                "puVar3": "new_record",
                "puVar4": "temp_ptr",
                "puVar6": "last_ptr",
                "puVar7": "record_ptr",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010be1a": {
            "additional_data": {
                "FUN_0010be1a": {
                    "check_function_validity": 1,
                    "debug_end_function": 11,
                    "debug_end_function_with_validation": 1,
                    "end_current_function": 2,
                    "end_debug_function": 3,
                    "end_debugging_function": 4,
                    "end_function": 3,
                    "end_function_debugging": 3,
                    "process_debug_function": 1,
                    "validate_and_set_end_of_function": 1
                },
                "auVar4": {
                    "result": 3,
                    "result_variable": 1,
                    "return_data": 2,
                    "return_value": 15,
                    "return_value_struct": 2,
                    "return_values": 1
                },
                "lVar1": {
                    "block": 1,
                    "block_address": 2,
                    "block_context": 1,
                    "block_data": 4,
                    "block_info": 5,
                    "block_info_ptr": 1,
                    "block_pointer": 1,
                    "block_ptr": 4,
                    "current_block": 9,
                    "current_block_ptr": 1,
                    "current_function": 1,
                    "current_function_ptr": 1
                },
                "param_1": {
                    "context": 1,
                    "function": 1,
                    "function_context": 6,
                    "function_data": 7,
                    "function_info": 7,
                    "function_info_ptr": 1,
                    "function_pointer": 1,
                    "function_ptr": 7
                },
                "param_2": {
                    "current_block": 1,
                    "current_function_ptr": 2,
                    "debug_info": 1,
                    "debug_msg": 1,
                    "file_name": 1,
                    "file_path": 1,
                    "new_address": 1,
                    "new_block_address": 1,
                    "new_context": 1,
                    "new_end_address": 1,
                    "new_end_flag": 1,
                    "new_func_info": 1,
                    "new_function_addr": 2,
                    "new_function_address": 1,
                    "new_function_info": 1,
                    "new_function_ptr": 2,
                    "new_module_name": 1,
                    "new_param": 4,
                    "new_param_1": 2,
                    "new_param_ptr": 1,
                    "new_parameter": 1,
                    "new_pc": 1,
                    "new_stack_trace": 1,
                    "parameter2": 1
                },
                "param_3": {
                    "block_info": 1,
                    "file_descriptor": 1,
                    "new_param": 1,
                    "new_param_2": 2,
                    "param_3": 1,
                    "parameter3": 1,
                    "unknown": 2,
                    "unused": 2,
                    "unused1": 1,
                    "unused_param": 12,
                    "unused_param1": 2,
                    "unused_parameter": 3,
                    "unused_ptr": 1
                },
                "param_4": {
                    "debug_string": 1,
                    "error_message": 2,
                    "error_message_ptr": 1,
                    "error_string": 1,
                    "message": 1,
                    "new_param_3": 2,
                    "output": 2,
                    "param_4": 2,
                    "parameter4": 1,
                    "result": 4,
                    "result_value": 1,
                    "ret_ptr": 1,
                    "return_addr": 1,
                    "return_value": 6,
                    "unused2": 1,
                    "unused_param2": 3,
                    "unused_parameter": 1
                },
                "pcVar3": {
                    "debug_message": 1,
                    "default_error_message": 1,
                    "error_message": 12,
                    "error_message_text": 3,
                    "error_msg": 3,
                    "error_string": 11
                },
                "uVar2": {
                    "debug_message": 1,
                    "error_message": 13,
                    "error_msg": 1,
                    "error_msg_ptr": 1,
                    "error_string_ptr": 1,
                    "localized_error": 1,
                    "msg_ptr": 1,
                    "result": 5,
                    "translated_message": 1,
                    "translated_string": 1,
                    "translation": 3,
                    "translation_ptr": 1,
                    "translation_result": 1
                }
            },
            "called": [
                "dcgettext",
                "fprintf"
            ],
            "calling": [
                "FUN_0010c892",
                "FUN_0011173a",
                "FUN_0010554f"
            ],
            "code": "\n\n\nundefined  [16] debug_end_function_with_validation_0010be1a(long function_ptr,undefined8 new_param,undefined8 unused_param,undefined8 return_value)\n\n{\n  long current_block;\n  undefined8 error_message;\n  char *error_message;\n  undefined return_value [16];\n  \n  if (((*(long *)(function_ptr + 8) == 0) || (current_block = *(long *)(function_ptr + 0x20), current_block == 0)) ||\n     (*(long *)(function_ptr + 0x18) == 0)) {\n    error_message = \"debug_end_function: no current function\";\n  }\n  else {\n    if (*(long *)(current_block + 8) == 0) {\n      *(undefined8 *)(current_block + 0x20) = new_param;\n      error_message = CONCAT71((int7)((ulong)current_block >> 8),1);\n      *(undefined (*) [16])(function_ptr + 0x18) = ZEXT816(0);\n      goto LAB_0010be86;\n    }\n    error_message = \"debug_end_function: some blocks were not closed\";\n  }\n  error_message = dcgettext(0,error_message,5);\n  fprintf(_stderr,\"%s\\n\",error_message);\n  error_message = 0;\nLAB_0010be86:\n  return_value._8_8_ = return_value;\n  return_value._0_8_ = error_message;\n  return return_value;\n}\n\n",
            "current_name": "debug_end_function_with_validation_0010be1a",
            "entrypoint": "0x0010be1a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010be1a": "debug_end_function_with_validation_0010be1a",
                "auVar4": "return_value",
                "lVar1": "current_block",
                "param_1": "function_ptr",
                "param_2": "new_param",
                "param_3": "unused_param",
                "param_4": "return_value",
                "pcVar3": "error_message",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010be88": {
            "additional_data": {
                "FUN_0010be88": {
                    "check_and_update_block": 1,
                    "debug_start_block": 9,
                    "initialize_block": 1,
                    "start_block": 2,
                    "start_block_debug": 1,
                    "start_block_debugger": 1,
                    "start_block_debugging": 8,
                    "start_debug_block": 8
                },
                "_stderr": {
                    "error_stream": 1,
                    "stderr": 1,
                    "stdout_ptr": 1
                },
                "auVar9": {
                    "result": 7,
                    "result_arr": 1,
                    "result_array": 1,
                    "result_var": 2,
                    "return_array": 1,
                    "return_data": 1,
                    "return_struct": 1,
                    "return_tuple": 1,
                    "return_val": 1,
                    "return_value": 13,
                    "return_value_struct": 1
                },
                "bVar8": {
                    "byte_value": 1,
                    "byte_var": 4,
                    "byte_var8": 1,
                    "count": 1,
                    "counter": 4,
                    "flag": 8,
                    "is_zero": 1,
                    "iteration": 1,
                    "loop_count": 1,
                    "loop_counter": 7,
                    "zero_byte": 1,
                    "zero_flag": 1
                },
                "dcgettext": {
                    "get_debug_message": 1,
                    "get_error_message": 1
                },
                "fprintf": {
                    "print_error_message": 2
                },
                "lVar5": {
                    "block_addr": 2,
                    "block_address": 5,
                    "block_offset": 3,
                    "block_pointer": 2,
                    "block_size": 1,
                    "block_value": 1,
                    "count": 1,
                    "index": 1,
                    "loop_var": 1,
                    "offset": 1,
                    "param1_20": 1,
                    "param_address": 1,
                    "temp_value": 3,
                    "value": 1,
                    "var5": 1,
                    "var_18": 1
                },
                "param_1": {
                    "arg1": 1,
                    "block": 4,
                    "block_address": 1,
                    "block_info": 4,
                    "block_info_ptr": 1,
                    "block_param": 1,
                    "block_pointer": 2,
                    "block_ptr": 13,
                    "block_ptr_1": 1,
                    "object_address": 1,
                    "param1": 1,
                    "pointer": 1
                },
                "param_2": {
                    "arg2": 1,
                    "block_start_address": 1,
                    "current_block": 3,
                    "debug_ptr": 2,
                    "debug_value": 1,
                    "param2": 10,
                    "param_2": 4,
                    "param_value1": 1,
                    "start_addr": 2,
                    "start_address": 4,
                    "start_block": 1,
                    "start_ptr": 1
                },
                "param_3": {
                    "arg3": 1,
                    "end_addr": 1,
                    "end_address": 1,
                    "end_ptr": 1,
                    "param3": 11,
                    "param_3": 4,
                    "param_value2": 1,
                    "ptr_3": 1,
                    "unimportant_3": 1,
                    "unknown": 1,
                    "unknown_param": 1,
                    "unknown_param3": 1,
                    "unused": 1,
                    "unused1": 1,
                    "unused_param": 1,
                    "unused_param1": 1,
                    "unused_parameter": 1,
                    "unused_ptr": 1
                },
                "param_4": {
                    "arg4": 1,
                    "debug_mode": 1,
                    "end_address": 1,
                    "param4": 10,
                    "param_4": 2,
                    "param_value3": 1,
                    "result": 4,
                    "return_value": 4,
                    "status": 3,
                    "unimportant_4": 1,
                    "unknown_param4": 1,
                    "unused2": 1,
                    "unused_param2": 1
                },
                "puVar1": {
                    "block_ptr": 1,
                    "curr_var": 1,
                    "current": 1,
                    "current_entry": 1,
                    "current_pointer": 4,
                    "current_ptr": 3,
                    "current_var": 1,
                    "last_block_ptr": 1,
                    "last_ptr": 2,
                    "next_block": 4,
                    "next_block_ptr": 1,
                    "next_entry": 1,
                    "ptr": 2,
                    "ptr1": 3,
                    "ptr_1": 1,
                    "ptr_to_var1": 1,
                    "ptr_var1": 1,
                    "temp_ptr": 2
                },
                "puVar3": {
                    "allocated_memory": 10,
                    "allocated_memory_ptr": 1,
                    "allocated_ptr": 2,
                    "block_ptr": 1,
                    "block_ptr_temp": 1,
                    "dynamic_mem": 1,
                    "memory_block": 1,
                    "new_block": 8,
                    "new_block_entry": 1,
                    "new_block_ptr": 1,
                    "ptr3": 1,
                    "ptr_2": 1,
                    "ptr_array": 1,
                    "ptr_to_var3": 1
                },
                "puVar4": {
                    "current_block": 2,
                    "current_entry": 1,
                    "current_ptr": 2,
                    "next": 1,
                    "next_block": 2,
                    "next_entry": 1,
                    "next_pointer": 2,
                    "next_ptr": 3,
                    "next_var_ptr": 1,
                    "ptr": 1,
                    "ptr4": 3,
                    "ptr_3": 1,
                    "ptr_to_var4": 1,
                    "ptr_var4": 1,
                    "temp_block": 1,
                    "temp_block_ptr": 1,
                    "temp_pointer": 2,
                    "temp_ptr": 3,
                    "temp_ptr2": 1
                },
                "puVar5": {
                    "loop_variable": 1
                },
                "puVar6": {
                    "current_ptr": 1,
                    "end_block": 1,
                    "last_block": 2,
                    "last_block_ptr": 3,
                    "last_entry": 2,
                    "last_node": 1,
                    "last_pointer": 4,
                    "last_ptr": 6,
                    "last_var": 1,
                    "prev_block_ptr": 1,
                    "prev_ptr": 1,
                    "ptr6": 3,
                    "ptr_4": 1,
                    "ptr_to_var6": 1,
                    "ptr_var6": 1,
                    "temp_ptr2": 1
                },
                "puVar7": {
                    "allocated_memory2": 1,
                    "block_iterator": 1,
                    "curr_memory": 1,
                    "current_block": 1,
                    "current_ptr": 2,
                    "current_ptr_temp": 1,
                    "iterator": 1,
                    "loop_var": 2,
                    "ptr7": 3,
                    "ptr_5": 1,
                    "ptr_array_iterator": 1,
                    "ptr_to_set_zero": 1,
                    "ptr_to_var7": 1,
                    "ptr_var7": 1,
                    "temp": 1,
                    "temp_block": 2,
                    "temp_block_ptr": 1,
                    "temp_entry": 1,
                    "temp_memory": 2,
                    "temp_pointer": 1,
                    "temp_pointer2": 1,
                    "temp_ptr": 3,
                    "tmp_ptr": 1
                },
                "uVar2": {
                    "error_message": 1,
                    "result": 14,
                    "return_value": 5,
                    "status": 2,
                    "success": 4,
                    "success_flag": 4,
                    "success_status": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "dcgettext",
                "xmalloc",
                "fprintf"
            ],
            "calling": [
                "FUN_0011173a",
                "FUN_0010554f"
            ],
            "code": "\n\n\nundefined  [16] start_block_debug_0010be88(long block_ptr,undefined8 param2,undefined8 param3,undefined8 param4)\n\n{\n  undefined8 *current_pointer;\n  undefined8 result;\n  undefined4 *allocated_memory;\n  undefined8 *next_ptr;\n  long block_address;\n  undefined8 *last_ptr;\n  undefined4 *temp_ptr;\n  byte flag;\n  undefined return_value [16];\n  \n  flag = 0;\n  if ((*(long *)(block_ptr + 8) == 0) || (*(long *)(block_ptr + 0x20) == 0)) {\n    result = dcgettext(0,\"debug_start_block: no current block\",5);\n    fprintf(stdout_ptr,\"%s\\n\",result);\n    result = 0;\n  }\n  else {\n    allocated_memory = (undefined4 *)xmalloc(0x30);\n    temp_ptr = allocated_memory;\n    for (block_address = 0xc; block_address != 0; block_address = block_address + -1) {\n      *temp_ptr = 0;\n      temp_ptr = temp_ptr + (ulong)flag * -2 + 1;\n    }\n    block_address = *(long *)(block_ptr + 0x20);\n    *(undefined8 *)(allocated_memory + 6) = param2;\n    *(undefined8 *)(allocated_memory + 8) = 0xffffffffffffffff;\n    *(long *)(allocated_memory + 2) = block_address;\n    current_pointer = *(undefined8 **)(block_address + 0x10);\n    last_ptr = (undefined8 *)(block_address + 0x10);\n    while (next_ptr = current_pointer, next_ptr != (undefined8 *)0x0) {\n      last_ptr = next_ptr;\n      current_pointer = (undefined8 *)*next_ptr;\n    }\n    *last_ptr = allocated_memory;\n    result = 1;\n    *(undefined4 **)(block_ptr + 0x20) = allocated_memory;\n  }\n  return_value._8_8_ = param4;\n  return_value._0_8_ = result;\n  return return_value;\n}\n\n",
            "current_name": "start_block_debug_0010be88",
            "entrypoint": "0x0010be88",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010be88": "start_block_debug_0010be88",
                "_stderr": "stdout_ptr",
                "auVar9": "return_value",
                "bVar8": "flag",
                "dcgettext": "get_debug_message",
                "fprintf": "print_error_message",
                "lVar5": "block_address",
                "param_1": "block_ptr",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "puVar1": "current_pointer",
                "puVar3": "allocated_memory",
                "puVar4": "next_ptr",
                "puVar6": "last_ptr",
                "puVar7": "temp_ptr",
                "uVar2": "result",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010bf20": {
            "additional_data": {
                "FUN_0010bf20": {
                    "close_debug_block": 1,
                    "debug_end_block": 16,
                    "end_block": 4,
                    "end_block_debugger": 1,
                    "end_block_debugging": 2,
                    "end_current_block": 3,
                    "end_debug_block": 4
                },
                "auVar4": {
                    "output_data": 1,
                    "result": 5,
                    "return_array": 1,
                    "return_data": 2,
                    "return_result": 2,
                    "return_struct": 1,
                    "return_value": 9,
                    "return_value_struct": 3,
                    "return_value_structure": 1,
                    "return_value_wrapper": 1
                },
                "lVar1": {
                    "current_block": 24,
                    "current_block_pointer": 1,
                    "current_block_ptr": 5,
                    "top_level_block": 1
                },
                "param_1": {
                    "block": 1,
                    "block_data": 1,
                    "block_info": 1,
                    "block_pointer": 7,
                    "block_ptr": 15,
                    "block_structure": 1,
                    "current_block": 1,
                    "debug_ptr": 1,
                    "input_param": 1,
                    "input_param1": 1,
                    "param_ptr": 1
                },
                "param_2": {
                    "block_end_ptr": 1,
                    "block_ptr": 1,
                    "current_value": 1,
                    "end_block_func": 1,
                    "end_info": 1,
                    "input_param2": 1,
                    "new_block": 2,
                    "new_block_data": 1,
                    "new_block_pointer": 4,
                    "new_block_ptr": 4,
                    "new_block_structure": 1,
                    "new_block_value": 1,
                    "new_context": 1,
                    "new_debug_end_block": 1,
                    "new_debug_info": 1,
                    "new_end_address": 1,
                    "new_end_block": 1,
                    "new_param2": 1,
                    "new_param_ptr": 1,
                    "new_top_block": 1,
                    "new_value": 4
                },
                "param_3": {
                    "file_ptr": 1,
                    "input_param3": 1,
                    "new_param3": 1,
                    "param_3": 1,
                    "some_value": 1,
                    "unset_parameter": 1,
                    "unused": 1,
                    "unused1": 1,
                    "unused_param": 21,
                    "unused_param_ptr": 1
                },
                "param_4": {
                    "error": 1,
                    "error_message": 1,
                    "input_param4": 1,
                    "new_param4": 1,
                    "output": 1,
                    "param_4": 1,
                    "result": 4,
                    "return_value": 17,
                    "retval": 1,
                    "unused2": 1,
                    "unused_param": 1,
                    "unused_param_2": 1
                },
                "pcVar3": {
                    "error_message": 13,
                    "error_message_string": 1,
                    "error_msg": 1,
                    "error_string": 16
                },
                "uVar2": {
                    "debug_end_result": 1,
                    "error_message": 15,
                    "error_msg": 1,
                    "error_string": 1,
                    "localized_error_message": 1,
                    "localized_message": 1,
                    "localized_msg": 1,
                    "message": 2,
                    "result": 2,
                    "return_value": 1,
                    "string_result": 1,
                    "translated_error_message": 1,
                    "translation": 3
                }
            },
            "called": [
                "dcgettext",
                "fprintf"
            ],
            "calling": [
                "FUN_0011173a",
                "FUN_0010554f"
            ],
            "code": "\n\n\nundefined  [16] end_debug_block_0010bf20(long block_ptr,undefined8 new_value,undefined8 unused_param,undefined8 return_value)\n\n{\n  long current_block;\n  undefined8 error_message;\n  char *error_string;\n  undefined return_value [16];\n  \n  if ((*(long *)(block_ptr + 8) == 0) || (current_block = *(long *)(block_ptr + 0x20), current_block == 0)) {\n    error_string = \"debug_end_block: no current block\";\n  }\n  else {\n    if (*(long *)(current_block + 8) != 0) {\n      *(undefined8 *)(current_block + 0x20) = new_value;\n      error_message = CONCAT71((int7)((ulong)current_block >> 8),1);\n      *(long *)(block_ptr + 0x20) = *(long *)(current_block + 8);\n      goto LAB_0010bf84;\n    }\n    error_string = \"debug_end_block: attempt to close top level block\";\n  }\n  error_message = dcgettext(0,error_string,5);\n  fprintf(_stderr,\"%s\\n\",error_message);\n  error_message = 0;\nLAB_0010bf84:\n  return_value._8_8_ = return_value;\n  return_value._0_8_ = error_message;\n  return return_value;\n}\n\n",
            "current_name": "end_debug_block_0010bf20",
            "entrypoint": "0x0010bf20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010bf20": "end_debug_block_0010bf20",
                "auVar4": "return_value",
                "lVar1": "current_block",
                "param_1": "block_ptr",
                "param_2": "new_value",
                "param_3": "unused_param",
                "param_4": "return_value",
                "pcVar3": "error_string",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010bf86": {
            "additional_data": {
                "FUN_0010bf86": {
                    "debug_record_line": 4,
                    "record_debug_line": 4,
                    "record_line": 4,
                    "record_line_debug": 2,
                    "record_line_debug_info": 5,
                    "update_current_unit": 1,
                    "update_debug_record_line": 7,
                    "update_record_line": 4
                },
                "_stderr": {
                    "error_output": 1,
                    "error_stream": 3,
                    "stderr": 2
                },
                "bVar7": {
                    "byte_flag": 1,
                    "byte_var": 1,
                    "flag": 23,
                    "is_pointer_null": 1,
                    "is_record_valid": 1,
                    "is_reverse": 1,
                    "is_zero": 1,
                    "zero": 1,
                    "zero_byte": 1
                },
                "dcgettext": {
                    "get_error_message": 2,
                    "get_translated_string": 1
                },
                "fprintf": {
                    "print_error_message": 2,
                    "print_to_stderr": 1
                },
                "lVar5": {
                    "buffer_length": 1,
                    "cnt": 1,
                    "count": 1,
                    "counter": 8,
                    "current_record": 1,
                    "current_unit": 1,
                    "i": 4,
                    "index": 2,
                    "index2": 1,
                    "j": 1,
                    "length": 1,
                    "loop_counter": 2,
                    "loop_counter2": 1,
                    "loop_index": 1,
                    "record_count": 1,
                    "temp": 1,
                    "temp_value": 1
                },
                "param_1": {
                    "arg1": 2,
                    "base_address": 1,
                    "debug_data": 1,
                    "debug_info": 1,
                    "debug_info_ptr": 1,
                    "debug_record": 1,
                    "file": 1,
                    "input": 1,
                    "param": 1,
                    "record": 5,
                    "record_address": 1,
                    "record_info": 1,
                    "record_pointer": 1,
                    "record_ptr": 4,
                    "record_table": 1,
                    "source_file": 1,
                    "unit": 2,
                    "unit_address": 2,
                    "unit_context": 1,
                    "unit_info": 2
                },
                "param_2": {
                    "arg2": 1,
                    "debug_record": 1,
                    "debug_value": 1,
                    "line": 4,
                    "line_num": 1,
                    "line_number": 11,
                    "line_param2": 1,
                    "line_ptr": 2,
                    "new_line": 2,
                    "new_line_pointer": 1,
                    "new_record_line": 1,
                    "record": 3,
                    "record_address": 1,
                    "record_line": 1
                },
                "param_3": {
                    "arg3": 1,
                    "column": 1,
                    "file_offset": 1,
                    "file_position": 1,
                    "file_ptr": 1,
                    "line": 1,
                    "line_address": 2,
                    "line_data": 1,
                    "line_info": 1,
                    "line_num": 1,
                    "line_number": 1,
                    "line_param3": 1,
                    "line_record": 1,
                    "new_unit": 3,
                    "new_unit_pointer": 1,
                    "record": 1,
                    "source_file": 1,
                    "unit": 8,
                    "unit_address": 1,
                    "unit_ptr": 2
                },
                "puVar2": {
                    "current_debug_record": 1,
                    "current_entry": 5,
                    "current_pointer": 1,
                    "current_ptr": 1,
                    "current_record": 8,
                    "current_unit": 2,
                    "current_unit_pointer": 1,
                    "line_table_entry": 1,
                    "ptr": 3,
                    "ptr_array": 1,
                    "record_entry": 1,
                    "record_ptr": 3,
                    "unit_array": 1,
                    "unit_ptr": 2
                },
                "puVar4": {
                    "allocated_memory": 1,
                    "buffer": 1,
                    "new_buffer": 1,
                    "new_debug_record": 1,
                    "new_entry": 5,
                    "new_line_table_entry": 1,
                    "new_object": 1,
                    "new_record": 13,
                    "new_record_pointer": 1,
                    "new_record_ptr": 2,
                    "new_unit": 1,
                    "ptr2": 1,
                    "ptr_array": 1,
                    "record_buffer": 1
                },
                "puVar6": {
                    "buffer_ptr": 2,
                    "current_entry_pointer": 1,
                    "current_entry_ptr": 1,
                    "current_field": 1,
                    "current_pointer": 1,
                    "current_ptr": 1,
                    "current_record": 2,
                    "entry_pointer": 2,
                    "entry_ptr": 1,
                    "loop_pointer": 1,
                    "new_line": 1,
                    "new_object2": 1,
                    "new_record_ptr": 1,
                    "pointer": 2,
                    "ptr": 4,
                    "ptr2": 1,
                    "ptr3": 1,
                    "ptr_array": 1,
                    "record_pointer": 2,
                    "record_ptr": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "temp_record": 1
                },
                "uVar1": {
                    "err_msg": 1,
                    "error_message": 18,
                    "error_msg": 1,
                    "message": 4,
                    "result": 6,
                    "return_value": 1
                },
                "uVar3": {
                    "count": 1,
                    "counter": 1,
                    "entry_index": 3,
                    "i": 1,
                    "index": 20,
                    "loop_counter": 3,
                    "record_index": 2
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "dcgettext",
                "xmalloc",
                "fprintf"
            ],
            "calling": [
                "FUN_0011173a",
                "FUN_0010554f"
            ],
            "code": "\n\n\nundefined8 update_debug_record_line_0010bf86(long record,undefined8 line_number,undefined8 unit)\n\n{\n  undefined8 error_message;\n  undefined8 *current_record;\n  ulong index;\n  undefined4 *new_record;\n  long counter;\n  undefined4 *ptr;\n  byte flag;\n  \n  flag = 0;\n  if (*(long *)(record + 8) == 0) {\n    error_message = dcgettext(0,\"debug_record_line: no current unit\",5);\n    fprintf(error_stream,\"%s\\n\",error_message);\n    error_message = 0;\n  }\n  else {\n    counter = *(long *)(record + 0x28);\n    if ((counter != 0) && (*(long *)(counter + 8) == *(long *)(record + 0x10))) {\n      index = 0;\n      do {\n        if (*(long *)(counter + 0x10 + index * 8) == -1) {\n          current_record = (undefined8 *)(index & 0xffffffff);\n          *(undefined8 *)(counter + 0x10 + (long)current_record * 8) = line_number;\n          *(undefined8 *)(counter + 0x60 + (long)current_record * 8) = unit;\n          goto LAB_0010c056;\n        }\n        index = index + 1;\n      } while (index != 10);\n    }\n    new_record = (undefined4 *)xmalloc(0xb0);\n    ptr = new_record;\n    for (counter = 0x2c; counter != 0; counter = counter + -1) {\n      *ptr = 0;\n      ptr = ptr + (ulong)flag * -2 + 1;\n    }\n    error_message = *(undefined8 *)(record + 0x10);\n    *(undefined8 *)(new_record + 4) = line_number;\n    *(undefined8 *)(new_record + 2) = error_message;\n    *(undefined8 *)(new_record + 0x18) = unit;\n    ptr = new_record + 6;\n    for (counter = 0x48; counter != 0; counter = counter + -1) {\n      *(undefined *)ptr = 0xff;\n      ptr = (undefined4 *)((long)ptr + (ulong)flag * -2 + 1);\n    }\n    current_record = *(undefined8 **)(record + 0x28);\n    if (current_record == (undefined8 *)0x0) {\n      current_record = *(undefined8 **)(record + 8);\n      current_record[2] = new_record;\n    }\n    else {\n      *current_record = new_record;\n    }\n    *(undefined4 **)(record + 0x28) = new_record;\nLAB_0010c056:\n    error_message = CONCAT71((int7)((ulong)current_record >> 8),1);\n  }\n  return error_message;\n}\n\n",
            "current_name": "update_debug_record_line_0010bf86",
            "entrypoint": "0x0010bf86",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010bf86": "update_debug_record_line_0010bf86",
                "_stderr": "error_stream",
                "bVar7": "flag",
                "dcgettext": "get_error_message",
                "fprintf": "print_error_message",
                "lVar5": "counter",
                "param_1": "record",
                "param_2": "line_number",
                "param_3": "unit",
                "puVar2": "current_record",
                "puVar4": "new_record",
                "puVar6": "ptr",
                "uVar1": "error_message",
                "uVar3": "index",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010c05d": {
            "additional_data": {
                "DATA_0010c129": {
                    "error_msg": 1
                },
                "FILE": {
                    "file": 1
                },
                "FUN_0010c05d": {
                    "debug_record_variable": 11,
                    "process_variable_record": 1,
                    "record_debug_variable": 2,
                    "record_variable": 13,
                    "record_variable_debug": 4
                },
                "FUN_00112925": {
                    "create_record": 1,
                    "process_data": 1,
                    "process_variable": 2,
                    "process_variable_record": 1
                },
                "L_AU": {
                    "l_au": 1
                },
                "L_EN": {
                    "l_en": 1
                },
                "PIFun1": {
                    "dcgettext": 1
                },
                "PIFun2": {
                    "fprintf": 1
                },
                "PIFun3": {
                    "xmalloc": 1
                },
                "__format": {
                    "format": 1
                },
                "__stream": {
                    "stream": 1
                },
                "_stderr": {
                    "error_file": 1,
                    "error_output_stream": 2,
                    "output_file": 1,
                    "stderr": 1
                },
                "auVar1": {
                    "address_value": 1,
                    "file_id": 1,
                    "file_record": 1,
                    "new_record": 1,
                    "record": 1,
                    "result": 10,
                    "result1": 1,
                    "result_tmp": 1,
                    "result_value": 1,
                    "result_var": 1,
                    "return_value": 2,
                    "temp1": 2,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "translated_value": 1,
                    "value_container": 1,
                    "var1": 1,
                    "variable_result": 1
                },
                "auVar9": {
                    "final_result": 2,
                    "function_result": 1,
                    "new_result": 1,
                    "output": 1,
                    "result": 3,
                    "result2": 3,
                    "result_var": 1,
                    "return_container": 1,
                    "return_tuple": 1,
                    "return_value": 8,
                    "return_value2": 1,
                    "temp4": 1,
                    "temp_var2": 2,
                    "updated_result": 1,
                    "var2": 1
                },
                "bVar8": {
                    "b_var8": 2,
                    "byte_flag": 1,
                    "byte_value": 3,
                    "byte_var": 4,
                    "counter": 2,
                    "flag": 4,
                    "flag2": 2,
                    "is_debug_enabled": 1,
                    "is_false": 1,
                    "is_initialized": 1,
                    "loop_condition": 2,
                    "loop_counter": 3,
                    "temp3": 1,
                    "temporary_flag": 1,
                    "zero": 1
                },
                "cVar4": {
                    "bool_flag": 1,
                    "case_value": 1,
                    "char_var": 1,
                    "condition": 1,
                    "condition_flag": 1,
                    "flag": 12,
                    "has_additional_info": 1,
                    "is_allocated": 1,
                    "is_local": 2,
                    "loop_condition": 1,
                    "new_type": 1,
                    "temp2": 1,
                    "type_flag": 1,
                    "var_completed": 1
                },
                "dcgettext": {
                    "get_debug_info": 1,
                    "get_error_message": 2,
                    "get_error_msg": 1,
                    "get_text": 1,
                    "get_translation": 1,
                    "obtain_error_message": 1
                },
                "fprintf": {
                    "print_error": 4,
                    "print_error_message": 1,
                    "print_error_msg": 1,
                    "print_message": 1
                },
                "lVar5": {
                    "count": 1,
                    "counter": 7,
                    "i": 1,
                    "loop_counter": 15,
                    "loop_iterator": 1,
                    "loop_value": 1,
                    "loop_var": 2,
                    "loop_variable": 1,
                    "loop_variable_1": 1
                },
                "lVar6": {
                    "alloc_size": 1,
                    "current_address": 1,
                    "current_file": 15,
                    "current_file_address": 2,
                    "current_file_ptr": 2,
                    "current_position": 1,
                    "current_record": 1,
                    "current_variable": 1,
                    "data_pointer": 1,
                    "file_info": 1,
                    "file_ptr": 1,
                    "long_var": 1,
                    "loop_variable_2": 1,
                    "temp2": 1,
                    "temp3": 1
                },
                "param_1": {
                    "arg1": 2,
                    "base_address": 1,
                    "context": 1,
                    "current_file": 1,
                    "file": 3,
                    "file_address": 2,
                    "file_context": 2,
                    "file_data": 4,
                    "file_data_ptr": 1,
                    "file_handle": 1,
                    "file_info": 3,
                    "file_pointer": 2,
                    "file_ptr": 2,
                    "file_records": 1,
                    "record_address": 1,
                    "record_ptr": 4
                },
                "param_2": {
                    "arg2": 2,
                    "current_line": 1,
                    "current_variable": 1,
                    "data_value": 1,
                    "offset": 1,
                    "record": 1,
                    "record_ptr": 1,
                    "var_value": 2,
                    "variable": 2,
                    "variable_address": 7,
                    "variable_id": 5,
                    "variable_offset": 1,
                    "variable_ptr": 2,
                    "variable_value": 4
                },
                "param_3": {
                    "arg3": 2,
                    "buffer": 1,
                    "current_file": 1,
                    "data_type": 1,
                    "file": 1,
                    "file_id": 2,
                    "file_number": 1,
                    "file_offset": 1,
                    "file_pointer": 1,
                    "file_ptr": 2,
                    "length": 1,
                    "offset": 1,
                    "record_id": 1,
                    "size": 2,
                    "value": 1,
                    "variable_address": 1,
                    "variable_length": 1,
                    "variable_name": 1,
                    "variable_size": 5,
                    "variable_type": 2,
                    "variable_value": 2
                },
                "param_4": {
                    "arg4": 2,
                    "case_value": 1,
                    "debug_level": 3,
                    "num_params": 1,
                    "record_type": 1,
                    "source_type": 1,
                    "type": 4,
                    "var_type": 1,
                    "variable_number": 1,
                    "variable_scope": 1,
                    "variable_size": 1,
                    "variable_type": 14
                },
                "param_5": {
                    "arg5": 2,
                    "data": 2,
                    "debug_message": 1,
                    "error_message": 1,
                    "extra_param1": 1,
                    "file": 1,
                    "format_string": 1,
                    "message": 1,
                    "param5": 3,
                    "param_5": 13,
                    "ptr_1": 1,
                    "record_data": 1,
                    "some_param": 1,
                    "value": 1,
                    "var": 1
                },
                "param_6": {
                    "another_param": 1,
                    "arg6": 2,
                    "extra_param2": 1,
                    "is_success": 1,
                    "param6": 3,
                    "param_6": 8,
                    "ptr_2": 1,
                    "result": 14
                },
                "piVar3": {
                    "allocated_int_ptr": 1,
                    "allocated_memory": 6,
                    "allocated_memory_block": 1,
                    "allocated_ptr": 1,
                    "dynamic_array": 2,
                    "dynamic_buffer": 1,
                    "int_array": 1,
                    "int_ptr": 1,
                    "new_record": 2,
                    "new_variable": 4,
                    "new_variable_ptr": 1,
                    "ptr": 3,
                    "ptr1": 2,
                    "ptr_3": 1,
                    "record": 1,
                    "variable_data": 1,
                    "variable_info": 1,
                    "variable_ptr": 1
                },
                "piVar7": {
                    "allocated_memory_iterator": 2,
                    "allocated_ptr_second": 1,
                    "array_ptr": 1,
                    "counter_ptr": 1,
                    "current": 1,
                    "current_memory": 1,
                    "current_ptr": 1,
                    "current_record": 1,
                    "current_variable": 1,
                    "initialized_memory": 1,
                    "int_pointer": 1,
                    "int_ptr2": 1,
                    "iterator": 1,
                    "loop_ptr": 1,
                    "new_variable_ptr": 1,
                    "pi_var7": 3,
                    "pointer": 4,
                    "pointer_to_dynamic_buffer": 1,
                    "ptr": 1,
                    "ptr2": 2,
                    "ptr_4": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "variable_ptr": 1
                },
                "uVar2": {
                    "error_code": 1,
                    "error_message": 2,
                    "result": 7,
                    "ret_val": 1,
                    "ret_value": 1,
                    "return_value": 8,
                    "status": 9,
                    "success": 1
                },
                "xmalloc": {
                    "allocate_memory": 6
                }
            },
            "called": [
                "FUN_00112925",
                "dcgettext",
                "xmalloc",
                "fprintf"
            ],
            "calling": [
                "FUN_0010c139",
                "FUN_0011173a",
                "FUN_0010c1c6",
                "FUN_00112a33"
            ],
            "code": "\n\n\nundefined  [16]\nrecord_debug_variable_0010c05d(long record_ptr,long variable_address,ulong variable_size,int variable_type,undefined8 param_5,\n            undefined8 result)\n\n{\n  undefined result [16];\n  undefined8 status;\n  int *allocated_memory;\n  char flag;\n  long loop_counter;\n  long current_file;\n  int *pointer;\n  byte flag;\n  undefined return_value [16];\n  \n  flag = 0;\n  if (variable_address == 0) {\n    result._8_8_ = 0;\n    result._0_8_ = variable_size;\n    return result << 0x40;\n  }\n  if (variable_size != 0) {\n    if ((*(long *)(record_ptr + 8) == 0) || (current_file = *(long *)(record_ptr + 0x10), current_file == 0)) {\n      status = dcgettext(0,\"debug_record_variable: no current file\",5);\n      fprintf(error_output_stream,\"%s\\n\",status);\n    }\n    else {\n      if (variable_type - 1U < 2) {\n        current_file = current_file + 0x10;\n        flag = (variable_type == 1) + '\\x01';\n      }\n      else if (*(long *)(record_ptr + 0x20) == 0) {\n        current_file = current_file + 0x10;\n        flag = '\\0';\n      }\n      else {\n        current_file = *(long *)(record_ptr + 0x20) + 0x28;\n        flag = '\\0';\n      }\n      current_file = FUN_00112925(current_file,variable_address,2,flag);\n      if (current_file != 0) {\n        allocated_memory = (int *)xmalloc(0x18);\n        pointer = allocated_memory + 1;\n        for (loop_counter = 5; loop_counter != 0; loop_counter = loop_counter + -1) {\n          *pointer = 0;\n          pointer = pointer + (ulong)flag * -2 + 1;\n        }\n        *allocated_memory = variable_type;\n        status = 1;\n        *(ulong *)(allocated_memory + 2) = variable_size;\n        *(undefined8 *)(allocated_memory + 4) = param_5;\n        *(int **)(current_file + 0x20) = allocated_memory;\n        goto LAB_0010c12e;\n      }\n    }\n  }\n  status = 0;\nLAB_0010c12e:\n  return_value._8_8_ = result;\n  return_value._0_8_ = status;\n  return return_value;\n}\n\n",
            "current_name": "record_debug_variable_0010c05d",
            "entrypoint": "0x0010c05d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010c05d": "record_debug_variable_0010c05d",
                "_stderr": "error_output_stream",
                "auVar1": "result",
                "auVar9": "return_value",
                "bVar8": "flag",
                "cVar4": "flag",
                "dcgettext": "get_error_message",
                "fprintf": "print_error",
                "lVar5": "loop_counter",
                "lVar6": "current_file",
                "param_1": "record_ptr",
                "param_2": "variable_address",
                "param_3": "variable_size",
                "param_4": "variable_type",
                "param_6": "result",
                "piVar3": "allocated_memory",
                "piVar7": "pointer",
                "uVar2": "status",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010c139": {
            "additional_data": {
                "FUN_0010c139": {
                    "allocate_and_assign_value": 1,
                    "allocate_and_initialize": 2,
                    "allocate_and_initialize_data": 1,
                    "allocate_and_initialize_memory": 1,
                    "allocate_and_initialize_structure": 1,
                    "allocate_and_update": 1,
                    "allocate_memory": 1,
                    "allocate_memory_and_assign_values": 2,
                    "allocate_memory_and_store_params": 1,
                    "allocate_memory_and_store_value": 1,
                    "allocate_memory_and_store_values": 2,
                    "allocate_memory_and_update_params": 1,
                    "allocate_or_update_memory": 1,
                    "allocate_resource": 1,
                    "extract_data": 2,
                    "extract_data_or_call_subfunction": 1,
                    "initialize_data_structure": 1,
                    "parse_and_allocate_memory": 1,
                    "process_data": 4,
                    "process_function": 1,
                    "update_character": 1,
                    "update_data": 1,
                    "update_function": 1
                },
                "cVar2": {
                    "ch": 1,
                    "char_flag": 1,
                    "char_value": 17,
                    "char_var": 1,
                    "character": 3,
                    "character_variable": 1,
                    "condition_var": 1,
                    "current_value": 1,
                    "flag": 3,
                    "struct_char": 1,
                    "var_b": 1
                },
                "in_R10": {
                    "context_reg": 1,
                    "in_reg10": 1,
                    "in_register10": 1,
                    "in_register_10": 1,
                    "input_register_10": 1,
                    "param10": 1,
                    "reg_value": 1,
                    "reg_value1": 1,
                    "register1": 3,
                    "register10": 4,
                    "register_10": 2,
                    "register_param": 1,
                    "register_r10": 3,
                    "register_value": 1,
                    "register_value1": 1,
                    "special_param_1": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp_var2": 2,
                    "unused": 1,
                    "unused_variable": 1,
                    "var_e": 1
                },
                "param_1": {
                    "address": 1,
                    "arg1": 2,
                    "base_address": 1,
                    "character_info": 1,
                    "data_ptr": 2,
                    "input": 1,
                    "input_data": 2,
                    "input_param": 2,
                    "input_parameter_1": 1,
                    "input_ptr": 1,
                    "input_var1": 1,
                    "param": 1,
                    "param1": 6,
                    "param_1": 1,
                    "param_a": 1,
                    "param_address": 1,
                    "param_pointer": 1,
                    "param_ptr": 1,
                    "ptr_to_data": 1,
                    "unknown1": 2,
                    "unused": 1
                },
                "param_2": {
                    "address1": 2,
                    "arg2": 2,
                    "binary_address": 2,
                    "buffer_address": 1,
                    "character_data": 1,
                    "data": 1,
                    "data_ptr": 2,
                    "data_structure_address": 1,
                    "input": 1,
                    "input_parameter_2": 1,
                    "input_var2": 1,
                    "param2": 5,
                    "param_b": 1,
                    "ptr": 1,
                    "struct_address": 3,
                    "struct_pointer": 1,
                    "struct_ptr": 4,
                    "structure": 1
                },
                "param_3": {
                    "arg3": 2,
                    "data_1": 1,
                    "input_parameter_3": 1,
                    "input_var3": 1,
                    "new_param": 1,
                    "new_param3": 1,
                    "new_param_1": 1,
                    "new_param_3": 1,
                    "new_value1": 1,
                    "param3": 8,
                    "param_1": 1,
                    "param_3": 3,
                    "param_c": 1,
                    "param_ptr": 1,
                    "parameter_1": 1,
                    "unknown2": 2,
                    "value1": 3,
                    "var3": 1
                },
                "param_4": {
                    "address2": 1,
                    "arg4": 2,
                    "data_2": 1,
                    "flag": 1,
                    "input_parameter_4": 1,
                    "input_var4": 1,
                    "new_param4": 1,
                    "new_param_2": 1,
                    "new_param_4": 1,
                    "new_value2": 1,
                    "param2": 1,
                    "param4": 9,
                    "param_2": 1,
                    "param_4": 3,
                    "param_d": 1,
                    "parameter_3": 1,
                    "value2": 3,
                    "var4": 1
                },
                "param_5": {
                    "arg5": 2,
                    "data_3": 1,
                    "flag": 1,
                    "input_parameter_5": 1,
                    "input_var5": 1,
                    "new_param5": 1,
                    "new_param_3": 1,
                    "new_param_5": 1,
                    "new_value3": 1,
                    "param3": 1,
                    "param5": 9,
                    "param_3": 1,
                    "param_5": 3,
                    "param_e": 1,
                    "parameter_4": 1,
                    "some_value": 1,
                    "value": 1,
                    "value3": 2,
                    "var5": 1
                },
                "param_6": {
                    "address3": 1,
                    "arg6": 2,
                    "data_4": 1,
                    "input_parameter_6": 1,
                    "input_var6": 1,
                    "new_param6": 1,
                    "new_param_4": 1,
                    "new_param_6": 1,
                    "new_value4": 1,
                    "other_ptr": 1,
                    "param4": 1,
                    "param6": 9,
                    "param_4": 1,
                    "param_6": 3,
                    "param_f": 1,
                    "parameter_5": 1,
                    "value3": 1,
                    "value4": 2,
                    "var6": 1
                },
                "puVar4": {
                    "allocated_data": 1,
                    "allocated_memory": 14,
                    "allocated_memory_pointer": 1,
                    "allocated_struct": 1,
                    "data_structure": 1,
                    "new_character_data": 1,
                    "new_data_ptr": 2,
                    "new_memory": 1,
                    "new_pointer": 1,
                    "new_ptr": 1,
                    "new_struct_ptr": 2,
                    "new_structure": 1,
                    "ptr": 2,
                    "resource_ptr": 1,
                    "var_d": 1
                },
                "uVar1": {
                    "old_data_ptr": 1,
                    "old_param_1": 1,
                    "old_u_var1": 1,
                    "old_var_1": 1,
                    "original_value": 1,
                    "prev_character_data": 1,
                    "prev_data_ptr": 1,
                    "prev_struct_ptr": 1,
                    "prev_value": 4,
                    "previous_value": 2,
                    "saved_value": 1,
                    "temp": 1,
                    "temp1": 2,
                    "temp_value": 1,
                    "temp_value1": 1,
                    "temp_var": 1,
                    "temp_var1": 4,
                    "temporary_variable_1": 1,
                    "value": 2,
                    "var_a": 1
                },
                "uVar3": {
                    "result": 15,
                    "result_value": 1,
                    "return_value": 14,
                    "var_c": 1
                },
                "unaff_R15": {
                    "other_reg_value": 1,
                    "reg_value2": 1,
                    "register15": 3,
                    "register2": 3,
                    "register_15": 1,
                    "register_r15": 2,
                    "register_value2": 2,
                    "special_param_2": 1,
                    "temp2": 1,
                    "temp_var3": 2,
                    "unaff_data_ptr": 1,
                    "unaff_reg15": 1,
                    "unaffected_register15": 2,
                    "unaffected_register_15": 3,
                    "unaffected_register_r15": 1,
                    "uninitialized_param": 1,
                    "unused": 1,
                    "unused_reg": 1,
                    "unused_variable": 1,
                    "var_f": 1,
                    "variable": 1
                },
                "xmalloc": {
                    "allocate_memory": 4
                }
            },
            "called": [
                "FUN_0010c05d",
                "xmalloc"
            ],
            "calling": [
                "FUN_0011173a"
            ],
            "code": "\nulong process_data_0010c139(undefined8 param1,long param2,undefined8 param3,undefined8 param4,\n                  undefined4 param5,undefined8 param6)\n\n{\n  undefined8 prev_value;\n  char char_value;\n  ulong result;\n  undefined8 *allocated_memory;\n  undefined8 register10;\n  undefined8 register2;\n  \n  char_value = *(char *)(param2 + 0x60);\n  if ((char_value != '\\0') && ((*(int *)(param2 + 0x40) != 0 || (*(char *)(param2 + 0x44) == '\\0')))) {\n    allocated_memory = (undefined8 *)xmalloc(0x28);\n    prev_value = *(undefined8 *)(param2 + 0x78);\n    *(undefined8 *)((long)allocated_memory + 0x1c) = 0;\n    allocated_memory[2] = param4;\n    *(undefined4 *)(allocated_memory + 3) = param5;\n    allocated_memory[4] = param6;\n    *(undefined8 **)(param2 + 0x78) = allocated_memory;\n    *allocated_memory = prev_value;\n    allocated_memory[1] = param3;\n    return CONCAT71((int7)((ulong)register2 >> 8),char_value) & 0xffffffff;\n  }\n  result = FUN_0010c05d(param1,param3,param4,param5,param6,register10);\n  return result;\n}\n\n",
            "current_name": "process_data_0010c139",
            "entrypoint": "0x0010c139",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010c139": "process_data_0010c139",
                "cVar2": "char_value",
                "in_R10": "register10",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "puVar4": "allocated_memory",
                "uVar1": "prev_value",
                "uVar3": "result",
                "unaff_R15": "register2",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010c1c6": {
            "additional_data": {
                "FUN_0010c05d": {
                    "perform_operation": 1
                },
                "FUN_0010c1c6": {
                    "deallocate_linked_list": 1,
                    "deallocate_list": 1,
                    "deallocate_memory": 1,
                    "iterate_and_free": 1,
                    "process_linked_data_structure": 1,
                    "process_linked_list": 6,
                    "process_ptrs": 1,
                    "reverse_and_free": 2,
                    "reverse_and_free_data": 1,
                    "reverse_and_free_linked_data": 1,
                    "reverse_and_free_linked_list": 7,
                    "reverse_and_free_list": 1,
                    "reverse_and_free_memory": 3,
                    "reverse_and_free_ptr": 1,
                    "update_pointer": 2
                },
                "__ptr": {
                    "current_node": 16,
                    "current_node_ptr": 3,
                    "current_pointer": 3,
                    "current_ptr": 8
                },
                "cVar2": {
                    "char_var": 1,
                    "condition": 1,
                    "is_valid": 1,
                    "is_zero": 1,
                    "result": 19,
                    "return_value": 1,
                    "status": 2,
                    "success_flag": 1
                },
                "free": {
                    "free_memory": 1
                },
                "param_1": {
                    "arg1": 2,
                    "code_base_address": 1,
                    "data_structure": 1,
                    "function_pointer": 1,
                    "initial_value": 1,
                    "input1": 1,
                    "input_value": 1,
                    "param": 9,
                    "param1": 3,
                    "param_1": 7,
                    "param_pointer": 2,
                    "param_ptr": 1,
                    "param_x": 1
                },
                "param_2": {
                    "arg2": 2,
                    "data": 1,
                    "data_ptr": 1,
                    "data_structure": 1,
                    "data_structure_size": 1,
                    "head": 6,
                    "head_ptr": 2,
                    "input2": 1,
                    "input_struct_ptr": 1,
                    "linked_list": 1,
                    "list": 2,
                    "list_ptr": 1,
                    "memory_pointer": 1,
                    "param2": 2,
                    "param_2": 2,
                    "param_address": 1,
                    "param_y": 1,
                    "ptr_array": 1,
                    "ptr_list": 1,
                    "root": 1,
                    "struct_ptr": 1
                },
                "param_3": {
                    "arg3": 1,
                    "input3": 1,
                    "param3": 4,
                    "param_3": 12,
                    "param_a": 1,
                    "param_data_1": 1,
                    "param_pointer2": 1,
                    "param_z": 1,
                    "ptr": 1,
                    "ptr1": 1,
                    "unused": 1,
                    "unused1": 1,
                    "unused_parameter_1": 1
                },
                "param_4": {
                    "arg4": 1,
                    "input4": 1,
                    "integer_param": 1,
                    "param4": 4,
                    "param_4": 12,
                    "param_b": 1,
                    "param_data_2": 1,
                    "param_w": 1,
                    "ptr2": 1,
                    "unused": 1,
                    "unused2": 1,
                    "unused_parameter_2": 1,
                    "value": 1
                },
                "param_5": {
                    "arg5": 1,
                    "input5": 1,
                    "param": 1,
                    "param5": 5,
                    "param_5": 13,
                    "param_c": 1,
                    "param_data_3": 1,
                    "param_pointer3": 1,
                    "param_v": 1,
                    "parameter_a": 1,
                    "ptr3": 1,
                    "unused3": 1,
                    "unused_parameter_3": 1
                },
                "param_6": {
                    "arg6": 2,
                    "input6": 1,
                    "param": 1,
                    "param6": 5,
                    "param_6": 14,
                    "param_d": 1,
                    "param_data_4": 1,
                    "param_pointer4": 1,
                    "param_u": 1,
                    "parameter_b": 1,
                    "ptr4": 1,
                    "unused4": 1,
                    "unused_parameter_4": 1
                },
                "puVar1": {
                    "next_node": 16,
                    "next_node_ptr": 3,
                    "next_pointer": 3,
                    "next_ptr": 8
                }
            },
            "called": [
                "FUN_0010c05d",
                "free"
            ],
            "calling": [
                "FUN_0010c892",
                "FUN_0011173a"
            ],
            "code": "\nundefined reverse_and_free_linked_list_0010c1c6(undefined8 param,long head,undefined8 param_3,undefined8 param_4,\n                      undefined8 param_5,undefined8 param_6)\n\n{\n  undefined8 *next_node;\n  char result;\n  undefined8 *current_node;\n  \n  current_node = *(undefined8 **)(head + 0x78);\n  while( true ) {\n    if (current_node == (undefined8 *)0x0) {\n      *(undefined8 *)(head + 0x78) = 0;\n      return 1;\n    }\n    result = FUN_0010c05d(param,current_node[1],current_node[2],*(undefined4 *)(current_node + 3),current_node[4],param_6,\n                         param_5);\n    if (result == '\\0') break;\n    next_node = (undefined8 *)*current_node;\n    free_memory(current_node);\n    current_node = next_node;\n  }\n  return 0;\n}\n\n",
            "current_name": "reverse_and_free_linked_list_0010c1c6",
            "entrypoint": "0x0010c1c6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010c1c6": "reverse_and_free_linked_list_0010c1c6",
                "__ptr": "current_node",
                "cVar2": "result",
                "free": "free_memory",
                "param_1": "param",
                "param_2": "head",
                "puVar1": "next_node"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010c218": {
            "additional_data": {
                "0x16": {
                    "memory_size": 1
                },
                "FUM_00112904": {
                    "allocate_memory": 1
                },
                "FUN_0010c218": {
                    "debug_name_type": 3,
                    "extract_debug_name": 1,
                    "extract_debug_name_type": 2,
                    "extract_file_data": 1,
                    "handle_debug_name_type": 2,
                    "improve_debug_name_type": 1,
                    "process_debug_info": 2,
                    "process_debug_name_type": 14,
                    "process_file_data": 1,
                    "process_name_type": 2,
                    "update_file_info": 1,
                    "updated_function": 1
                },
                "FUN_00112904": {
                    "allocate_memory": 6,
                    "allocate_memory_for_function": 1,
                    "create_new_entry": 1,
                    "initialize_data": 1,
                    "initialize_flag": 1,
                    "initialize_value": 3
                },
                "FUN_00112925": {
                    "create_entry": 1,
                    "find_offset": 1,
                    "get_data_offset": 1,
                    "modify_entry": 1,
                    "process_data": 3,
                    "process_debug_info": 1,
                    "process_file": 3,
                    "process_name_type": 2
                },
                "ZEXT816": {
                    "zero_extend": 1
                },
                "__format": {
                    "format": 1
                },
                "__stream": {
                    "stderr": 1,
                    "stream": 1
                },
                "_stderr": {
                    "error_file": 1,
                    "error_output": 2,
                    "error_stream": 5,
                    "output_stream": 1,
                    "stderr": 1
                },
                "dcgettext": {
                    "get_error_message": 7,
                    "get_error_msg": 1,
                    "get_localized_string": 1,
                    "get_text": 2,
                    "get_text_translation": 1
                },
                "fprintf": {
                    "print_error": 5,
                    "print_error_message": 6,
                    "print_message": 1
                },
                "lVar2": {
                    "allocated_memory": 1,
                    "debug_name": 1,
                    "entry_check": 1,
                    "file_data_size": 1,
                    "file_id": 1,
                    "file_ptr": 1,
                    "file_type": 2,
                    "file_type_info": 1,
                    "flag": 1,
                    "name_ptr": 1,
                    "new_debug_name": 1,
                    "new_debug_name_type": 1,
                    "new_file_data": 1,
                    "new_file_idx": 1,
                    "new_file_info": 1,
                    "result": 12,
                    "temp_var": 1,
                    "temp_variable": 1,
                    "zext_value": 1
                },
                "lVar3": {
                    "new_file_info": 1
                },
                "lVar4": {
                    "current_file": 11,
                    "current_file_data_ptr": 1,
                    "current_file_info": 1,
                    "current_file_ptr": 1,
                    "current_file_ptr_2": 1,
                    "current_pointer": 1,
                    "file_header": 1,
                    "file_offset": 2,
                    "file_offset_plus_0x10": 1,
                    "file_pointer": 2,
                    "file_ptr": 3,
                    "file_ptr_offset": 1,
                    "new_file_info": 1,
                    "new_l_var": 1,
                    "offset": 1,
                    "ptr_file": 1,
                    "result": 1
                },
                "lVar5": {
                    "result": 1
                },
                "param_1": {
                    "arg1": 2,
                    "context": 1,
                    "file": 4,
                    "file_context": 1,
                    "file_data": 3,
                    "file_data_ptr": 1,
                    "file_descriptor": 1,
                    "file_info": 9,
                    "file_ptr": 2,
                    "file_structure": 1,
                    "info_structure": 1,
                    "input": 1,
                    "input_param": 2,
                    "input_parameter": 1,
                    "param_1_value": 1
                },
                "param_2": {
                    "arg2": 2,
                    "condition_1": 1,
                    "current_file": 5,
                    "current_file_idx": 1,
                    "current_file_offset": 1,
                    "current_file_pointer": 1,
                    "current_file_ptr": 1,
                    "current_param": 1,
                    "data_size": 1,
                    "debug_name": 1,
                    "debug_name_ptr": 1,
                    "debug_name_type": 2,
                    "file_id": 2,
                    "file_offset": 1,
                    "file_size": 1,
                    "flag": 1,
                    "flag1": 1,
                    "flag_1": 1,
                    "name_type": 1,
                    "param2": 1,
                    "param_2_value": 1,
                    "size_parameter": 1,
                    "type": 2
                },
                "param_3": {
                    "arg3": 1,
                    "condition_2": 1,
                    "current_file": 2,
                    "current_file_ptr": 1,
                    "current_file_type": 1,
                    "debug_name": 1,
                    "debug_name_type": 4,
                    "file_id": 1,
                    "file_size": 1,
                    "flag2": 1,
                    "flag_2": 1,
                    "name": 2,
                    "name_ptr": 1,
                    "name_type": 7,
                    "param3": 1,
                    "size": 1,
                    "type": 2,
                    "value": 1,
                    "value_parameter": 1
                },
                "param_4": {
                    "param_4": 1,
                    "unknown_param": 1,
                    "unused_param": 1
                },
                "pauVar3": {
                    "alloc_ptr": 1,
                    "allocated_array": 1,
                    "allocated_buffer": 1,
                    "allocated_memory": 2,
                    "allocation_pointer": 1,
                    "allocation_ptr": 1,
                    "buffer": 2,
                    "dynamic_array": 1,
                    "dynamic_data_ptr": 1,
                    "file_info": 1,
                    "file_type_info_ptr": 1,
                    "name": 1,
                    "name_type_ptr": 2,
                    "new_debug_info": 1,
                    "new_debug_name": 1,
                    "new_entry": 1,
                    "new_file_info": 1,
                    "new_file_ptr": 1,
                    "new_name_type": 1,
                    "new_name_type_ptr": 1,
                    "new_pau_var": 1,
                    "new_pointer": 1,
                    "new_ptr": 1,
                    "p_new_data": 1,
                    "pointer_to_allocated_memory": 1,
                    "ptr": 1,
                    "ptr_array": 1,
                    "ptr_name": 1
                },
                "uVar1": {
                    "err_msg": 1,
                    "error_message": 20,
                    "error_msg": 4,
                    "message": 2
                },
                "xmalloc": {
                    "allocate_dynamic_memory": 1,
                    "allocate_memory": 5
                }
            },
            "called": [
                "FUN_00112925",
                "dcgettext",
                "xmalloc",
                "fprintf",
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010c2d2",
                "FUN_0011173a",
                "FUN_0010dac0",
                "FUN_00112a33"
            ],
            "code": "\n\n\nlong process_debug_name_type_0010c218(long file_info,long current_file,long name_type)\n\n{\n  undefined8 error_message;\n  long result;\n  undefined (*buffer) [16];\n  long current_file;\n  \n  if ((current_file != 0) && (name_type != 0)) {\n    if ((*(long *)(file_info + 8) == 0) || (*(long *)(file_info + 0x10) == 0)) {\n      error_message = dcgettext(0,\"debug_name_type: no current file\",5);\n      fprintf(error_stream,\"%s\\n\",error_message);\n    }\n    else {\n      result = FUN_00112904(0x16,0);\n      if (result != 0) {\n        buffer = (undefined (*) [16])xmalloc(0x10);\n        current_file = *(long *)(file_info + 0x10);\n        *buffer = zero_extend(0);\n        *(long *)(*buffer + 8) = name_type;\n        *(undefined (**) [16])(result + 0x10) = buffer;\n        current_file = FUN_00112925(current_file + 0x10,current_file,0,3);\n        if (current_file != 0) {\n          *(long *)(current_file + 0x20) = result;\n          *(long *)*buffer = current_file;\n          return result;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_debug_name_type_0010c218",
            "entrypoint": "0x0010c218",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010c218": "process_debug_name_type_0010c218",
                "ZEXT816": "zero_extend",
                "_stderr": "error_stream",
                "dcgettext": "get_error_message",
                "fprintf": "print_error_message",
                "lVar2": "result",
                "lVar4": "current_file",
                "param_1": "file_info",
                "param_2": "current_file",
                "param_3": "name_type",
                "pauVar3": "buffer",
                "uVar1": "error_message",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010c2d2": {
            "additional_data": {
                "FUN_00109022": {
                    "get_data_pointer": 1,
                    "get_long_ptr": 1,
                    "get_pointer_type_info": 1
                },
                "FUN_0010c218": {
                    "create_data_type": 1,
                    "store_data_type": 1,
                    "store_type_info": 1
                },
                "FUN_0010c2d2": {
                    "analyze_type": 1,
                    "convert_data_types": 1,
                    "convert_xcoff_type": 1,
                    "decode_data_types": 1,
                    "decode_type": 1,
                    "extract_data_type": 1,
                    "extract_type_info": 1,
                    "get_data_type": 7,
                    "get_type_from_code": 1,
                    "get_type_from_xcoff": 5,
                    "get_type_info": 1,
                    "parse_data_type": 1,
                    "parse_type": 4,
                    "retrieve_data_type": 1
                },
                "FUN_00112904": {
                    "create_boolean_type": 1,
                    "get_logical": 1
                },
                "FUN_00113df2": {
                    "create_floating_point": 1,
                    "get_float": 1,
                    "print_float_type": 1
                },
                "FUN_00113dfe": {
                    "create_data_type": 1,
                    "get_data_type_value": 1,
                    "get_numeric_type": 1
                },
                "FUN_00113e17": {
                    "get_void": 2,
                    "get_void_type": 1
                },
                "FUN_00113e23": {
                    "check_for_null": 1,
                    "create_type_from_specifier": 1
                },
                "_stderr": {
                    "error_output": 1,
                    "error_stream": 3,
                    "standard_error": 1,
                    "stderr": 1
                },
                "dcgettext": {
                    "get_error_message": 3,
                    "get_string": 1,
                    "message_translation": 1
                },
                "fprintf": {
                    "print_error": 1,
                    "print_error_message": 2
                },
                "lVar4": {
                    "data": 1,
                    "data_length": 1,
                    "data_type": 1,
                    "data_type_addr": 1,
                    "data_type_address": 3,
                    "data_type_result": 1,
                    "parsed_type": 1,
                    "result": 18,
                    "return_value": 2,
                    "type_addr": 1,
                    "type_index": 1
                },
                "param_1": {
                    "arg1": 1,
                    "func_name": 1,
                    "info": 1,
                    "output": 5,
                    "output_type": 1,
                    "param": 6,
                    "param1": 7,
                    "param_1": 5,
                    "param_a": 1,
                    "param_address": 1,
                    "param_width": 1,
                    "result": 1
                },
                "param_2": {
                    "arg2": 1,
                    "data": 4,
                    "data_addr": 1,
                    "data_address": 1,
                    "data_type_array": 1,
                    "input": 2,
                    "obj_addr": 1,
                    "param2": 7,
                    "param_2": 4,
                    "param_b": 1,
                    "param_offset": 1,
                    "type_info": 2,
                    "type_table": 5
                },
                "param_3": {
                    "arg3": 1,
                    "data_type": 1,
                    "error_code": 1,
                    "param3": 7,
                    "param_3": 3,
                    "param_c": 1,
                    "param_type": 1,
                    "type": 4,
                    "type_code": 3,
                    "type_index": 3,
                    "type_info": 4,
                    "type_specifier": 2
                },
                "pcVar2": {
                    "data_type": 2,
                    "data_type_str": 2,
                    "data_type_string": 5,
                    "temp2": 1,
                    "type": 1,
                    "type_name": 12,
                    "type_str": 1,
                    "type_string": 7
                },
                "plVar5": {
                    "address_ptr": 1,
                    "data_pointer": 2,
                    "p_data": 1,
                    "pl_data": 2,
                    "pointer": 6,
                    "pointer_to_data_type": 1,
                    "ptr_data_length": 1,
                    "ptr_result": 6,
                    "ptr_to_result": 2,
                    "ptr_type": 1,
                    "return_value_ptr": 1,
                    "temp4": 1,
                    "temp_ptr": 1,
                    "type_info_ptr": 1,
                    "type_pointer": 1,
                    "type_ptr": 2,
                    "var_info": 1
                },
                "uVar1": {
                    "code": 2,
                    "data_type_index": 1,
                    "data_type_val": 1,
                    "error_code": 1,
                    "negative_type": 2,
                    "specifier_index": 1,
                    "temp1": 1,
                    "type": 2,
                    "type_code": 7,
                    "type_code1": 1,
                    "type_code_index": 1,
                    "type_id": 1,
                    "type_idx": 1,
                    "type_index": 2,
                    "type_specifier2": 1,
                    "type_value": 3,
                    "unrecognized_type": 2,
                    "unsigned_var1": 1
                },
                "uVar3": {
                    "converted_data": 1,
                    "data_type": 2,
                    "data_type_ptr": 1,
                    "data_type_value": 1,
                    "result": 10,
                    "return_value": 3,
                    "temp3": 1,
                    "type": 5,
                    "type_info": 3,
                    "type_info_result": 1,
                    "type_size": 1,
                    "type_value": 2
                },
                "uVar6": {
                    "abs_specifier_index": 1,
                    "abs_type_code": 1,
                    "abs_type_index": 1,
                    "abs_type_value": 2,
                    "complement": 1,
                    "data_type_index": 1,
                    "index": 8,
                    "neg_type_code": 2,
                    "negative_type_code": 2,
                    "negative_type_index": 1,
                    "positive_code": 1,
                    "temp5": 1,
                    "type_code2": 1,
                    "type_index": 1,
                    "type_index_abs": 1,
                    "type_index_inverse": 1,
                    "unrecognized_type": 1,
                    "unsigned_value": 1,
                    "unsigned_var6": 1
                }
            },
            "called": [
                "FUN_00113e17",
                "FUN_00113e23",
                "dcgettext",
                "FUN_00113df2",
                "FUN_00109022",
                "FUN_0010c218",
                "fprintf",
                "FUN_00113dfe",
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010ee3f"
            ],
            "code": "\n\n\nlong get_data_type_0010c2d2(undefined8 param1,long param2,int *param3)\n\n{\n  uint type_code;\n  char *type_name;\n  undefined8 result;\n  long result;\n  long *pointer;\n  uint index;\n  \n  if ((*param3 == 0) && (type_code = param3[1], (int)type_code < 0)) {\n    index = ~type_code;\n    if (index < 0x22) {\n      result = *(long *)(param2 + 0x90 + (ulong)index * 8);\n      if (result == 0) {\n        switch(index) {\n        case 1:\n          result = FUN_00113dfe(1,0);\n          type_name = \"char\";\n          break;\n        case 2:\n          result = FUN_00113dfe(2,0);\n          type_name = \"short\";\n          break;\n        case 3:\n          result = FUN_00113dfe(4,0);\n          type_name = \"long\";\n          break;\n        case 4:\n          result = FUN_00113dfe(1,1);\n          type_name = \"unsigned char\";\n          break;\n        case 5:\n          result = FUN_00113dfe(1,0);\n          type_name = \"signed char\";\n          break;\n        case 6:\n          result = FUN_00113dfe(2,1);\n          type_name = \"unsigned short\";\n          break;\n        case 7:\n          result = FUN_00113dfe(4,1);\n          type_name = \"unsigned int\";\n          break;\n        case 8:\n          result = FUN_00113dfe(4,1);\n          type_name = \"unsigned\";\n          break;\n        case 9:\n          result = FUN_00113dfe(4,1);\n          type_name = \"unsigned long\";\n          break;\n        case 10:\n          result = FUN_00113e17();\n          type_name = \"void\";\n          break;\n        case 0xb:\n          result = FUN_00113df2(4);\n          type_name = \"float\";\n          break;\n        case 0xc:\n          result = FUN_00113df2(8);\n          type_name = \"double\";\n          break;\n        case 0xd:\n          result = FUN_00113df2(8);\n          type_name = \"long double\";\n          break;\n        case 0xe:\n          result = FUN_00113dfe(4,0);\n          type_name = \"integer\";\n          break;\n        case 0xf:\n          result = FUN_00112904(6,4);\n          type_name = \"boolean\";\n          break;\n        case 0x10:\n          result = FUN_00113df2(4);\n          type_name = \"short real\";\n          break;\n        case 0x11:\n          result = FUN_00113df2(8);\n          type_name = \"real\";\n          break;\n        case 0x12:\n          type_name = \"stringptr\";\n          result = 0;\n          break;\n        case 0x13:\n          result = FUN_00113dfe(1,1);\n          type_name = \"character\";\n          break;\n        case 0x14:\n          result = FUN_00112904(6,1);\n          type_name = \"logical*1\";\n          break;\n        case 0x15:\n          result = FUN_00112904(6,2);\n          type_name = \"logical*2\";\n          break;\n        case 0x16:\n          result = FUN_00112904(6,4);\n          type_name = \"logical*4\";\n          break;\n        case 0x17:\n          result = FUN_00112904(6,4);\n          type_name = \"logical\";\n          break;\n        case 0x18:\n          result = FUN_00112904(5,8);\n          type_name = \"complex\";\n          break;\n        case 0x19:\n          result = FUN_00112904(5,0x10);\n          type_name = \"double complex\";\n          break;\n        case 0x1a:\n          result = FUN_00113dfe(1,0);\n          type_name = \"integer*1\";\n          break;\n        case 0x1b:\n          result = FUN_00113dfe(2,0);\n          type_name = \"integer*2\";\n          break;\n        case 0x1c:\n          result = FUN_00113dfe(4,0);\n          type_name = \"integer*4\";\n          break;\n        case 0x1d:\n          result = FUN_00113dfe(2,0);\n          type_name = \"wchar\";\n          break;\n        case 0x1e:\n          result = FUN_00113dfe(8,0);\n          type_name = \"long long\";\n          break;\n        case 0x1f:\n          result = FUN_00113dfe(8,1);\n          type_name = \"unsigned long long\";\n          break;\n        case 0x20:\n          result = FUN_00112904(6,8);\n          type_name = \"logical*8\";\n          break;\n        case 0x21:\n          result = FUN_00113dfe(8,0);\n          type_name = \"integer*8\";\n          break;\n        default:\n          result = FUN_00113dfe(4,0);\n          type_name = \"int\";\n        }\n        result = FUN_0010c218(param1,type_name,result);\n        *(long *)(param2 + 0x90 + (ulong)index * 8) = result;\n        return result;\n      }\n      return result;\n    }\n    type_name = (char *)dcgettext(0,\"Unrecognized XCOFF type %d\\n\",5);\n    fprintf(error_stream,type_name,(ulong)type_code);\n  }\n  else {\n    pointer = (long *)FUN_00109022(param2);\n    if (pointer != (long *)0x0) {\n      if (*pointer == 0) {\n        result = FUN_00113e23(pointer,0);\n        return result;\n      }\n      return *pointer;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "get_data_type_0010c2d2",
            "entrypoint": "0x0010c2d2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010c2d2": "get_data_type_0010c2d2",
                "_stderr": "error_stream",
                "dcgettext": "get_error_message",
                "fprintf": "print_error_message",
                "lVar4": "result",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "pcVar2": "type_name",
                "plVar5": "pointer",
                "uVar1": "type_code",
                "uVar3": "result",
                "uVar6": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010c6be": {
            "additional_data": {
                "FUN_0010c6be": {
                    "check_debug_tag_type": 1,
                    "debug_tag_type": 9,
                    "debug_tag_type_check": 1,
                    "find_debug_tag_type": 1,
                    "get_debug_tag_type": 1,
                    "handle_debug_tag_type": 1,
                    "process_debug_tag": 11,
                    "process_debug_tag_type": 1,
                    "validate_debug_tag": 3,
                    "validate_debug_tag_type": 1
                },
                "FUN_00112904": {
                    "allocate_memory": 5,
                    "allocate_variable": 1,
                    "create_tag": 2,
                    "initialize_tag": 1
                },
                "FUN_00112925": {
                    "copy_memory": 1,
                    "copy_to_memory": 1,
                    "create_tag": 1,
                    "process_tag": 2,
                    "process_tag_data": 1
                },
                "F_ExtractDebugTag": {
                    "extract_debug_tag": 1
                },
                "_stderr": {
                    "error_output": 2,
                    "error_stream": 2,
                    "output_stream": 1,
                    "standard_error_stream": 1
                },
                "dcgettext": {
                    "get_error_message": 3,
                    "get_localized_message": 1,
                    "get_localized_string": 1,
                    "get_translated_message": 1,
                    "get_translated_string": 1,
                    "get_translated_text": 2,
                    "gettext": 1,
                    "translate_message": 1
                },
                "fprintf": {
                    "print_error": 1,
                    "print_error_message": 1,
                    "print_to_stderr": 1,
                    "print_to_stream": 1,
                    "write_to_stderr": 1
                },
                "iVar1": {
                    "compare_result": 1,
                    "comparison_result": 22,
                    "result": 1,
                    "strcmp_result": 1,
                    "string_comparison_result": 3,
                    "tag_comparison_result": 3
                },
                "lVar5": {
                    "current_file_handle": 1,
                    "entry_address": 1,
                    "file_length": 1,
                    "file_offset": 3,
                    "length": 1,
                    "offset": 12,
                    "ptr1": 1,
                    "result": 3,
                    "return_value": 1,
                    "tag_address": 1,
                    "tag_info_offset": 1,
                    "tag_offset": 1,
                    "temp_value": 2,
                    "temp_var": 1,
                    "temp_variable": 1
                },
                "param_1": {
                    "debug_info": 1,
                    "file_address": 3,
                    "file_context": 1,
                    "file_handle": 9,
                    "file_info": 1,
                    "file_offset": 3,
                    "file_pointer": 1,
                    "file_ptr": 5,
                    "file_struct": 1,
                    "param_address": 1,
                    "param_struct": 1,
                    "pointer": 1,
                    "ptr_struct": 1,
                    "tag_pointer": 1,
                    "tag_type": 1
                },
                "param_2": {
                    "file_name": 3,
                    "tag": 5,
                    "tag_name": 21,
                    "tag_type": 1,
                    "unknown_param_2": 1
                },
                "param_3": {
                    "current_tag": 3,
                    "debug_tag": 3,
                    "line_number": 1,
                    "ptr_int": 1,
                    "tag": 5,
                    "tag_array": 1,
                    "tag_data": 3,
                    "tag_entry": 1,
                    "tag_list": 2,
                    "tag_pointer": 1,
                    "tag_ptr": 6,
                    "tag_struct": 1,
                    "tag_type": 2,
                    "tag_type_ptr": 1
                },
                "param_4": {
                    "column_number": 1
                },
                "pauVar4": {
                    "alloc_ptr": 1,
                    "allocated_memory": 5,
                    "allocated_ptr": 1,
                    "allocated_struct_ptr": 1,
                    "allocated_tag_struct": 1,
                    "metadata": 1,
                    "new_debug_tag": 1,
                    "new_pointer": 1,
                    "new_tag": 1,
                    "new_tag_ptr": 1,
                    "new_tag_type_ptr": 1,
                    "ptr_array": 1,
                    "tag_array": 1,
                    "tag_buffer": 1,
                    "tag_container": 1,
                    "tag_data": 3,
                    "tag_entry": 2,
                    "tag_info": 3,
                    "tag_metadata": 1,
                    "tag_payload": 1,
                    "tag_ptr": 1,
                    "tag_structure": 1
                },
                "pcVar6": {
                    "debug_message": 1,
                    "error_message": 29,
                    "error_msg": 1
                },
                "piVar3": {
                    "allocated_memory": 1,
                    "allocated_tag": 1,
                    "new_current_tag": 1,
                    "new_debug_tag": 2,
                    "new_tag": 10,
                    "new_tag_array": 1,
                    "new_tag_data": 1,
                    "new_tag_entry": 1,
                    "new_tag_list_element": 1,
                    "new_tag_ptr": 3,
                    "new_tag_struct": 1,
                    "new_tag_type": 1,
                    "ptr_int2": 1,
                    "result": 1,
                    "result_pointer": 1
                },
                "print_error": {
                    "print_error_message": 1
                },
                "strcmp": {
                    "compare_strings": 4,
                    "string_comparison": 1
                },
                "uVar2": {
                    "localized_error_message": 1,
                    "localized_message": 1,
                    "translated_err_msg": 1,
                    "translated_error": 2,
                    "translated_error_message": 6,
                    "translated_message": 6
                },
                "xmalloc": {
                    "allocate_dynamic_memory": 2,
                    "allocate_memory": 5
                }
            },
            "called": [
                "FUN_00112925",
                "dcgettext",
                "fprintf",
                "strcmp",
                "xmalloc",
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010c892",
                "FUN_0011173a",
                "FUN_00112a33"
            ],
            "code": "\n\n\nint * process_debug_tag_type_0010c6be(long file_handle,char *tag_name,int *tag_ptr)\n\n{\n  int comparison_result;\n  undefined8 translated_error_message;\n  int *new_tag;\n  undefined (*allocated_memory) [16];\n  long offset;\n  char *error_message;\n  \n  if ((tag_name != (char *)0x0) && (tag_ptr != (int *)0x0)) {\n    if (*(long *)(file_handle + 0x10) == 0) {\n      error_message = \"debug_tag_type: no current file\";\n    }\n    else {\n      if (*tag_ptr != 0x17) {\n        new_tag = (int *)FUN_00112904(0x17,0);\n        if (new_tag == (int *)0x0) {\n          return (int *)0x0;\n        }\n        allocated_memory = (undefined (*) [16])xmalloc(0x10);\n        offset = *(long *)(file_handle + 0x10);\n        *allocated_memory = ZEXT816(0);\n        *(int **)(*allocated_memory + 8) = tag_ptr;\n        *(undefined (**) [16])(new_tag + 4) = allocated_memory;\n        offset = FUN_00112925(offset + 0x10,tag_name,1,3);\n        if (offset == 0) {\n          return (int *)0x0;\n        }\n        *(int **)(offset + 0x20) = new_tag;\n        *(long *)*allocated_memory = offset;\n        return new_tag;\n      }\n      comparison_result = strcmp(*(char **)(**(long **)(tag_ptr + 4) + 8),tag_name);\n      error_message = \"debug_tag_type: extra tag attempted\";\n      if (comparison_result == 0) {\n        return tag_ptr;\n      }\n    }\n    translated_error_message = dcgettext(0,error_message,5);\n    fprintf(error_stream,\"%s\\n\",translated_error_message);\n  }\n  return (int *)0x0;\n}\n\n",
            "current_name": "process_debug_tag_type_0010c6be",
            "entrypoint": "0x0010c6be",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010c6be": "process_debug_tag_type_0010c6be",
                "_stderr": "error_stream",
                "dcgettext": "get_error_message",
                "fprintf": "print_error",
                "iVar1": "comparison_result",
                "lVar5": "offset",
                "param_1": "file_handle",
                "param_2": "tag_name",
                "param_3": "tag_ptr",
                "pauVar4": "allocated_memory",
                "pcVar6": "error_message",
                "piVar3": "new_tag",
                "strcmp": "compare_strings",
                "uVar2": "translated_error_message",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010c7a0": {
            "additional_data": {
                "FUN_0010922b": {
                    "compare_strings": 1,
                    "compare_types": 1
                },
                "FUN_0010c7a0": {
                    "debug_set_class_id": 13,
                    "find_or_create_class_id": 1,
                    "resolve_class_id": 1,
                    "set_class_id": 13,
                    "set_debug_class_id": 2,
                    "update_class_id": 1
                },
                "__assert_fail": {
                    "assert_fail": 2,
                    "assertion_fail": 1,
                    "assertion_failed": 1
                },
                "__file": {
                    "file": 1
                },
                "__function": {
                    "function": 1
                },
                "__line": {
                    "line": 1
                },
                "__s1": {
                    "class_name_2": 1,
                    "current_class_name": 1,
                    "current_name": 1,
                    "existing_class_name": 15,
                    "existing_name": 3,
                    "found_class_name": 1,
                    "prev_name": 1,
                    "ptr": 1,
                    "stored_class_name": 3,
                    "stored_name": 1,
                    "temp_str": 1,
                    "type_name": 1,
                    "type_string": 1
                },
                "auVar8": {
                    "new_return_value": 1,
                    "output": 2,
                    "result_data": 1,
                    "result_struct": 1,
                    "return_val": 1,
                    "return_value": 23,
                    "return_var": 1,
                    "retval": 1
                },
                "cVar5": {
                    "char_check": 1,
                    "char_result": 5,
                    "char_var": 1,
                    "check_result": 3,
                    "compare_flag": 1,
                    "comparison_result": 1,
                    "flag": 3,
                    "is_equal": 1,
                    "is_match": 1,
                    "is_same_name": 1,
                    "is_valid": 2,
                    "result": 6,
                    "return_val": 1,
                    "return_value": 1,
                    "success": 2,
                    "temp_char": 1
                },
                "iVar6": {
                    "count": 10,
                    "counter": 7,
                    "index": 1,
                    "new_class_id": 3,
                    "new_id": 2,
                    "new_type": 1,
                    "new_type_id": 2,
                    "new_type_id_2": 1,
                    "new_type_kind": 1,
                    "new_type_kind_value": 1,
                    "new_type_size": 1,
                    "temp_int": 1
                },
                "lVar3": {
                    "address": 1,
                    "data": 1,
                    "debug_info": 1,
                    "debug_type": 1,
                    "param_3_offset": 1,
                    "ptr": 1,
                    "ptr_data": 1,
                    "struct_ptr": 1,
                    "temp_var3": 1,
                    "type_data": 2,
                    "type_definition": 1,
                    "type_info": 12,
                    "type_info_ptr": 4,
                    "type_ptr": 2,
                    "type_ptr_value": 1
                },
                "param_1": {
                    "class_id": 12,
                    "class_info": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "debug_data": 1,
                    "debug_info": 1,
                    "debug_struct": 1,
                    "input": 2,
                    "input_param": 1,
                    "input_value": 1,
                    "instance": 1,
                    "obj_ptr": 1,
                    "object": 1,
                    "param": 1,
                    "param1": 2,
                    "param_ptr": 1,
                    "param_value": 1,
                    "type_info": 1
                },
                "param_2": {
                    "class_name": 25,
                    "name": 4,
                    "param2": 1,
                    "type_name": 1
                },
                "param_3": {
                    "class_type": 1,
                    "param3": 1,
                    "type": 15,
                    "type_id": 1,
                    "type_info": 1,
                    "type_kind": 9,
                    "type_ptr": 3
                },
                "param_4": {
                    "id": 3,
                    "param": 2,
                    "param4": 4,
                    "param_4": 21,
                    "unspecified_param": 1
                },
                "piVar4": {
                    "current_type": 2,
                    "found_type_kind": 1,
                    "param_2_1": 1,
                    "ptr_type": 1,
                    "struct_type_ptr": 1,
                    "temp": 1,
                    "temp_ptr": 1,
                    "type_id_ptr": 2,
                    "type_info_kind": 1,
                    "type_kind": 3,
                    "type_kind_ptr": 1,
                    "type_pointer": 1,
                    "type_ptr": 12,
                    "type_ptr_check": 1,
                    "type_ptr_int": 1,
                    "type_ptr_value_1": 1
                },
                "puVar7": {
                    "class_entry": 1,
                    "class_info": 1,
                    "curr_node": 1,
                    "current_class": 1,
                    "current_element": 1,
                    "current_node": 5,
                    "current_ptr": 2,
                    "current_type": 1,
                    "debug_class": 1,
                    "entry": 1,
                    "existing_type": 1,
                    "new_data": 1,
                    "new_debug_struct": 1,
                    "new_entry": 1,
                    "new_node": 4,
                    "new_type": 1,
                    "node": 3,
                    "node_ptr": 1,
                    "struct_list_ptr": 1,
                    "temp_ptr": 2
                },
                "strcmp": {
                    "compare_strings": 2
                },
                "uVar1": {
                    "old_data_ptr": 1,
                    "prev_data": 1,
                    "result": 23,
                    "ret_val": 1,
                    "return_value": 2,
                    "temp": 2,
                    "temp_var": 1
                },
                "uVar2": {
                    "class_id": 1,
                    "class_size": 1,
                    "count": 1,
                    "index": 1,
                    "new_class_id": 4,
                    "new_id": 7,
                    "new_size": 2,
                    "new_type": 1,
                    "new_type_id": 2,
                    "new_type_kind": 1,
                    "new_type_ptr_value": 1,
                    "num": 1,
                    "old_id": 1,
                    "size": 1,
                    "temp_var2": 1,
                    "type_id": 2,
                    "type_kind_value": 1,
                    "type_size": 1
                },
                "xmalloc": {
                    "allocate_memory": 2
                }
            },
            "called": [
                "__assert_fail",
                "FUN_0010922b",
                "xmalloc",
                "strcmp"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nundefined  [16] set_debug_class_id_0010c7a0(long class_id,char *class_name,int *type,undefined8 param_4)\n\n{\n  undefined8 result;\n  uint new_id;\n  long type_info;\n  int *type_ptr;\n  char *existing_class_name;\n  char result;\n  int count;\n  undefined8 *current_node;\n  undefined return_value [16];\n  \n  if (3 < *type - 7U) {\n                    \n    __assert_fail(\"type->kind == DEBUG_KIND_STRUCT || type->kind == DEBUG_KIND_UNION || type->kind == DEBUG_KIND_CLASS || type->kind == DEBUG_KIND_UNION_CLASS\"\n                  ,\"../../binutils/debug.c\",0xb87,\"debug_set_class_id\");\n  }\n  type_info = *(long *)(type + 4);\n  current_node = (undefined8 *)(ulong)*(uint *)(type_info + 0xc);\n  if (*(uint *)(type_info + 0xc) <= *(uint *)(class_id + 0x38)) {\n    for (current_node = *(undefined8 **)(class_id + 0x50); current_node != (undefined8 *)0x0;\n        current_node = (undefined8 *)*current_node) {\n      type_ptr = (int *)current_node[1];\n      if (*type_ptr == *type) {\n        existing_class_name = (char *)current_node[2];\n        if (class_name == (char *)0x0) {\n          if (existing_class_name == (char *)0x0) {\nLAB_0010c82c:\n            result = FUN_0010922b(class_id,type_ptr,type);\n            if (result != '\\0') {\n              new_id = *(uint *)(*(long *)(current_node[1] + 0x10) + 0xc);\n              current_node = (undefined8 *)(ulong)new_id;\n              *(uint *)(type_info + 0xc) = new_id;\n              goto LAB_0010c884;\n            }\n          }\n        }\n        else if (((existing_class_name != (char *)0x0) && (*existing_class_name == *class_name)) &&\n                (count = strcmp(existing_class_name,class_name), count == 0)) goto LAB_0010c82c;\n      }\n    }\n    count = *(int *)(class_id + 0x34) + 1;\n    *(int *)(class_id + 0x34) = count;\n    *(int *)(type_info + 0xc) = count;\n    current_node = (undefined8 *)xmalloc(0x18);\n    result = *(undefined8 *)(class_id + 0x50);\n    current_node[2] = class_name;\n    *(undefined8 **)(class_id + 0x50) = current_node;\n    *current_node = result;\n    current_node[1] = type;\n  }\nLAB_0010c884:\n  return_value._1_7_ = (undefined7)((ulong)current_node >> 8);\n  return_value[0] = 1;\n  return_value._8_8_ = param_4;\n  return return_value;\n}\n\n",
            "current_name": "set_debug_class_id_0010c7a0",
            "entrypoint": "0x0010c7a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010c7a0": "set_debug_class_id_0010c7a0",
                "__assert_fail": "assert_fail",
                "__s1": "existing_class_name",
                "auVar8": "return_value",
                "cVar5": "result",
                "iVar6": "count",
                "lVar3": "type_info",
                "param_1": "class_id",
                "param_2": "class_name",
                "param_3": "type",
                "piVar4": "type_ptr",
                "puVar7": "current_node",
                "strcmp": "compare_strings",
                "uVar1": "result",
                "uVar2": "new_id",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010c892": {
            "additional_data": {
                "FUN_0010be1a": {
                    "check_condition": 1
                },
                "FUN_0010c1c6": {
                    "check_condition": 2,
                    "check_conditions": 1,
                    "check_flag": 1,
                    "check_validity": 1,
                    "reverse_flag": 1
                },
                "FUN_0010c6be": {
                    "process_data": 2,
                    "process_param": 1,
                    "process_string": 1,
                    "process_value": 1
                },
                "FUN_0010c892": {
                    "process_data": 16,
                    "process_debug_types": 1,
                    "process_function": 3,
                    "process_items": 3,
                    "process_types": 2,
                    "process_undefined_type": 3,
                    "process_undefined_types": 1
                },
                "FUN_00112904": {
                    "allocate_memory": 3,
                    "calculate_result": 1,
                    "create_var": 1,
                    "generate_data": 1
                },
                "_stderr": {
                    "error_output": 1,
                    "error_stream": 4
                },
                "cVar1": {
                    "char_var": 1,
                    "character": 1,
                    "flag": 17,
                    "is_checked": 1,
                    "is_debug": 1,
                    "is_valid": 1,
                    "is_valid_pointer": 1,
                    "result": 4,
                    "result_char": 1,
                    "should_process": 1,
                    "status": 1,
                    "temp_char": 1
                },
                "dcgettext": {
                    "get_error_message": 1,
                    "get_localized_message": 1,
                    "get_string": 1,
                    "get_text": 2,
                    "translate": 1
                },
                "fprintf": {
                    "print": 1,
                    "print_error": 1,
                    "print_formatted": 1,
                    "print_function": 1,
                    "print_line": 1,
                    "print_message": 1
                },
                "iVar6": {
                    "condition": 1,
                    "counter": 1,
                    "int_value": 1,
                    "int_var": 2,
                    "item_type": 1,
                    "item_value": 1,
                    "kind": 15,
                    "kind_value": 1,
                    "num": 1,
                    "temp_int": 1,
                    "value": 3,
                    "var": 1,
                    "var_int": 1
                },
                "lVar2": {
                    "item_kind": 1,
                    "kind": 1,
                    "result": 12,
                    "result1": 2,
                    "result_var": 1,
                    "return_value": 1,
                    "size": 1,
                    "temp1": 4,
                    "temp_long1": 1,
                    "temp_var": 1,
                    "temp_var1": 3,
                    "temp_var_1": 1,
                    "type": 1,
                    "value1": 1
                },
                "lVar3": {
                    "data": 1,
                    "item_value": 1,
                    "kind": 1,
                    "loop_var": 1,
                    "result2": 2,
                    "temp2": 4,
                    "temp_long2": 1,
                    "temp_var": 1,
                    "temp_var2": 3,
                    "temp_var_2": 1,
                    "type": 1,
                    "type_value": 1,
                    "value": 12,
                    "value2": 1
                },
                "param_1": {
                    "arg1": 12,
                    "argument_1": 1,
                    "data": 4,
                    "data_buffer": 1,
                    "data_ptr": 1,
                    "function_name": 1,
                    "input": 1,
                    "input_param": 3,
                    "input_parameter": 1,
                    "param": 1,
                    "param1": 5
                },
                "param_2": {
                    "address": 2,
                    "arg2": 12,
                    "argument_2": 1,
                    "data": 2,
                    "data_length": 1,
                    "data_param": 1,
                    "data_ptr": 2,
                    "param": 1,
                    "param2": 5,
                    "param_ptr": 1,
                    "ptr": 1,
                    "size": 1,
                    "struct_ptr": 1
                },
                "puVar5": {
                    "current_item": 2,
                    "current_node": 3,
                    "item": 1,
                    "node": 1,
                    "ptr": 19,
                    "ptr1": 1,
                    "ptr_list": 1,
                    "ptr_var": 2,
                    "temp_pointer": 1
                },
                "uVar4": {
                    "output": 1,
                    "result": 10,
                    "return_value": 19,
                    "return_var": 1
                }
            },
            "called": [
                "dcgettext",
                "FUN_0010be1a",
                "fprintf",
                "FUN_0010c6be",
                "FUN_0010c1c6",
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\n\n\nundefined8 process_data_0010c892(undefined8 arg1,long arg2)\n\n{\n  char flag;\n  long result;\n  long value;\n  undefined8 return_value;\n  undefined8 *ptr;\n  int kind;\n  \n  if (*(char *)(arg2 + 0x60) == '\\0') {\nLAB_0010c8c7:\n    for (ptr = *(undefined8 **)(arg2 + 0x1a0); ptr != (undefined8 *)0x0;\n        ptr = (undefined8 *)*ptr) {\n      kind = *(int *)(ptr + 2);\n      value = ptr[1];\n      if (kind != 0) {\n        if (value != 0) {\n          if (kind - 7U < 5) goto LAB_0010c8d5;\n          return_value = dcgettext(0,\"debug_make_undefined_type: unsupported kind\",5);\n          fprintf(error_stream,\"%s\\n\",return_value);\n        }\nLAB_0010c910:\n        ptr[3] = 0;\n        goto LAB_0010c916;\n      }\n      if (value == 0) goto LAB_0010c910;\n      kind = 7;\nLAB_0010c8d5:\n      result = FUN_00112904(kind,0);\n      if (result == 0) goto LAB_0010c910;\n      value = FUN_0010c6be(arg1,value,result);\n      ptr[3] = value;\n      if (value == 0) goto LAB_0010c916;\n    }\n    return_value = 1;\n  }\n  else {\n    flag = FUN_0010c1c6();\n    if (flag != '\\0') {\n      flag = FUN_0010be1a(arg1,*(undefined8 *)(arg2 + 0x68));\n      if (flag != '\\0') {\n        *(undefined *)(arg2 + 0x60) = 0;\n        *(undefined8 *)(arg2 + 0x68) = 0xffffffffffffffff;\n        goto LAB_0010c8c7;\n      }\n    }\nLAB_0010c916:\n    return_value = 0;\n  }\n  return return_value;\n}\n\n",
            "current_name": "process_data_0010c892",
            "entrypoint": "0x0010c892",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010c892": "process_data_0010c892",
                "_stderr": "error_stream",
                "cVar1": "flag",
                "dcgettext": "get_text",
                "fprintf": "print",
                "iVar6": "kind",
                "lVar2": "result",
                "lVar3": "value",
                "param_1": "arg1",
                "param_2": "arg2",
                "puVar5": "ptr",
                "uVar4": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010c95e": {
            "additional_data": {
                "FUN_0010c95e": {
                    "decode_instruction": 1,
                    "decompile_and_improve": 2,
                    "decompile_function": 2,
                    "extract_data": 3,
                    "parse_and_process_code": 1,
                    "parse_command": 2,
                    "parse_data": 1,
                    "parse_function": 1,
                    "parse_input": 2,
                    "parse_instructions": 1,
                    "parse_parameter": 1,
                    "process_data": 2,
                    "reverse_decompiled_code": 1
                },
                "__ptr": {
                    "allocated_memory": 1,
                    "buffer_ptr": 1,
                    "memory_allocation": 1,
                    "memory_ptr": 1,
                    "pointer": 4,
                    "pointer_var": 1,
                    "ptr": 4,
                    "ptr1": 1,
                    "ptr_val": 1,
                    "ptr_value": 2,
                    "ptr_var": 1,
                    "string_ptr": 2,
                    "temp_ptr": 2,
                    "void_pointer": 6,
                    "void_ptr": 2
                },
                "bVar1": {
                    "byte_1": 1,
                    "byte_val1": 2,
                    "byte_value": 5,
                    "byte_value1": 1,
                    "byte_value_1": 1,
                    "byte_var": 1,
                    "byte_var1": 4,
                    "bytecode_byte": 1,
                    "current_byte": 11,
                    "first_byte": 2,
                    "first_char": 1
                },
                "bVar2": {
                    "another_byte_var": 1,
                    "byte_2": 1,
                    "byte_val2": 2,
                    "byte_value2": 4,
                    "byte_value_2": 1,
                    "byte_var2": 4,
                    "next_byte": 12,
                    "next_byte_value": 1,
                    "second_byte": 2,
                    "second_byte_value": 1,
                    "second_char": 1
                },
                "bVar4": {
                    "bool_1": 1,
                    "bool_val1": 2,
                    "bool_value": 1,
                    "bool_value1": 3,
                    "bool_value_1": 2,
                    "bool_var1": 5,
                    "flag1": 2,
                    "is_signed": 13,
                    "is_signed_char": 1
                },
                "bVar5": {
                    "bool_2": 1,
                    "bool_val2": 2,
                    "bool_value2": 4,
                    "bool_value_2": 2,
                    "bool_var2": 5,
                    "flag2": 2,
                    "is_array": 1,
                    "is_pointer": 1,
                    "is_short": 3,
                    "is_unsigned": 9
                },
                "bVar6": {
                    "bool_3": 1,
                    "bool_val3": 2,
                    "bool_value3": 4,
                    "bool_value_3": 2,
                    "bool_var3": 5,
                    "flag3": 2,
                    "is_float": 5,
                    "is_floating_point": 1,
                    "is_function": 1,
                    "is_long": 1,
                    "is_special": 1,
                    "is_unsigned": 2,
                    "is_unsigned_char": 1,
                    "is_void": 2
                },
                "cVar20": {
                    "char_2": 1
                },
                "cVar7": {
                    "char_1": 1,
                    "char_flag": 1,
                    "char_val": 2,
                    "char_value": 7,
                    "char_var": 5,
                    "char_var1": 1,
                    "result": 2,
                    "result_char": 1,
                    "return_value": 8,
                    "status": 1,
                    "success": 1
                },
                "caseD_42": {
                    "case_break": 1
                },
                "lVar10": {
                    "another_long_var": 1,
                    "data_type": 1,
                    "data_type_identifier": 1,
                    "length": 1,
                    "length_result": 1,
                    "long_1": 1,
                    "long_val1": 1,
                    "long_value": 6,
                    "long_value1": 1,
                    "long_value_1": 2,
                    "long_var": 1,
                    "long_var1": 5,
                    "result": 2,
                    "return_value": 1,
                    "str_length": 1,
                    "string_value": 1,
                    "temp_long": 1,
                    "temp_size": 1,
                    "temp_value": 1
                },
                "lVar15": {
                    "converted_data": 1,
                    "function_result": 1,
                    "long_2": 1,
                    "long_val2": 1,
                    "long_value": 1,
                    "long_value2": 4,
                    "long_value3": 1,
                    "long_value_2": 2,
                    "long_value_3": 1,
                    "long_var2": 6,
                    "long_var3": 1,
                    "parsed_value": 1,
                    "result": 2,
                    "result_long": 1,
                    "result_value": 3,
                    "return_value": 1,
                    "temp_long": 1,
                    "temp_result": 1
                },
                "lVar15_2": {
                    "return_value_2": 1
                },
                "lVarJ": {
                    "result_value": 1
                },
                "local_40": {
                    "char_array": 6,
                    "char_double_array": 1,
                    "char_pointer_array": 1,
                    "char_pointer_array_1": 1,
                    "char_ptr_arr": 1,
                    "char_var_array": 1,
                    "char_var_array1": 1,
                    "local_char_pointer": 1,
                    "local_chars": 1,
                    "local_str": 1,
                    "local_string_array": 2,
                    "optional_string_array": 1,
                    "str_arr": 1,
                    "string_array": 5,
                    "string_buffer": 3,
                    "temp_buffer": 1,
                    "type_str": 1
                },
                "local_48": {
                    "array_length": 1,
                    "local_48": 1,
                    "local_data_size": 1,
                    "local_ulong_var": 1,
                    "local_unsigned": 2,
                    "local_value": 1,
                    "local_variable2": 1,
                    "numeric_value2": 1,
                    "offset_value": 1,
                    "optional_data_1": 1,
                    "ulong_2": 1,
                    "ulong_data": 1,
                    "ulong_val2": 2,
                    "ulong_value": 1,
                    "ulong_value1": 1,
                    "ulong_value2": 1,
                    "ulong_value3": 1,
                    "ulong_value_2": 3,
                    "ulong_var": 1,
                    "ulong_var2": 3,
                    "ulong_var3": 1,
                    "unsigned_length": 1,
                    "unsigned_long_variable": 1,
                    "value": 1
                },
                "local_49": {
                    "bool_val4": 1,
                    "byte_var3": 1,
                    "flag": 1,
                    "is_char": 1,
                    "is_long_double": 1,
                    "is_signed_byte": 1,
                    "local_49": 1,
                    "local_bool1": 1,
                    "local_flag": 1,
                    "local_signed": 1,
                    "local_undefined": 1,
                    "local_undefined_var": 1,
                    "local_variable1": 1,
                    "optional_data_2": 1,
                    "signed_flag": 1,
                    "undefined_1": 1,
                    "undefined_byte": 1,
                    "undefined_val": 1,
                    "undefined_value": 4,
                    "undefined_value1": 1,
                    "undefined_value_1": 1,
                    "undefined_var": 1,
                    "undefined_var1": 4,
                    "undefined_variable": 1
                },
                "param_1": {
                    "command_array": 1,
                    "data_ptr": 1,
                    "extract_data_param_1": 1,
                    "function_args": 1,
                    "function_config": 1,
                    "function_data": 5,
                    "function_parameters": 2,
                    "function_pointer": 3,
                    "input_data": 1,
                    "input_params": 1,
                    "input_pointers": 1,
                    "input_values": 1,
                    "instructions": 2,
                    "options": 1,
                    "original_params": 1,
                    "output": 1,
                    "output_buffer": 1,
                    "param_array": 2,
                    "param_function": 1,
                    "parameters": 1,
                    "pointer_array": 1,
                    "result": 1
                },
                "param_2": {
                    "buffer": 1,
                    "byte_arr": 1,
                    "byte_array": 6,
                    "byte_array_pointer": 1,
                    "byte_data": 3,
                    "byte_pointer": 1,
                    "byte_pointer_array": 1,
                    "byte_pointer_pointer": 1,
                    "byte_pointers": 2,
                    "byte_ptr": 1,
                    "byte_ptr_ptr": 1,
                    "byte_sequence": 1,
                    "byte_stream": 1,
                    "bytecode": 1,
                    "command": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "extract_data_param_2": 1,
                    "input_address": 1,
                    "input_data": 2,
                    "param_byte_pointer": 2
                },
                "param_3": {
                    "extract_data_param_3": 1,
                    "long_array": 3,
                    "long_data": 1,
                    "long_pointer": 2,
                    "long_pointers": 2,
                    "long_ptr": 1,
                    "memory": 1,
                    "output": 1,
                    "output_data": 4,
                    "output_ptr": 1,
                    "output_value": 1,
                    "param_long_pointer": 2,
                    "param_ptr": 1,
                    "parameter_size": 1,
                    "result": 5,
                    "result_len": 1,
                    "result_pointer": 2,
                    "result_ptr": 1
                },
                "pbVar20": {
                    "byte_pointer": 2,
                    "byte_pointer3": 2,
                    "byte_ptr3": 1,
                    "byte_ptr4": 1,
                    "current_buffer_ptr": 1,
                    "current_byte": 1,
                    "current_byte_pointer": 1,
                    "ptr_byte3": 1
                },
                "pbVar3": {
                    "buffer_ptr": 1,
                    "byte_pointer": 8,
                    "byte_pointer1": 1,
                    "byte_pointer_1": 2,
                    "byte_pointer_2": 1,
                    "byte_ptr": 4,
                    "byte_ptr2": 1,
                    "byte_ptr3": 2,
                    "current_address": 1,
                    "current_byte": 2,
                    "current_byte_pointer": 1,
                    "current_byte_ptr": 1,
                    "current_pointer": 1,
                    "current_ptr": 1,
                    "next_byte_pointer": 1,
                    "ptr_byte": 2
                },
                "pbVar9": {
                    "another_byte_pointer": 1,
                    "byte_pointer": 1,
                    "byte_pointer2": 4,
                    "byte_pointer_2": 2,
                    "byte_pointer_3": 1,
                    "byte_ptr2": 2,
                    "byte_ptr3": 1,
                    "byte_ptr9": 2,
                    "new_byte": 1,
                    "next_address": 1,
                    "next_buffer_ptr": 1,
                    "next_byte": 1,
                    "next_byte_pointer": 3,
                    "next_byte_ptr": 3,
                    "next_pointer": 1,
                    "next_ptr": 1,
                    "ptr_byte2": 1,
                    "ptr_byte_2": 1,
                    "second_byte_pointer": 1,
                    "temp_byte_pointer": 1
                },
                "pcVar12": {
                    "char_pointer": 7,
                    "char_pointer1": 1,
                    "char_pointer_1": 1,
                    "char_pointer_var": 1,
                    "char_ptr": 4,
                    "char_ptr1": 1,
                    "data_type": 3,
                    "data_type1": 1,
                    "data_type_alias": 1,
                    "integer_type": 1,
                    "ptr_char": 1,
                    "ptr_type": 1,
                    "signed_integer": 1,
                    "str_ptr": 1,
                    "type1": 1,
                    "type_b": 1,
                    "type_specifier": 1,
                    "type_str": 1,
                    "type_string": 1
                },
                "pcVar19": {
                    "char_pointer": 3,
                    "char_pointer2": 4,
                    "char_pointer3": 1,
                    "char_pointer_1": 1,
                    "char_pointer_2": 1,
                    "char_pointer_3": 1,
                    "char_pointer_var2": 1,
                    "char_ptr2": 4,
                    "char_ptr_2": 1,
                    "data_type": 3,
                    "data_type2": 1,
                    "helper_ptr1": 1,
                    "long_data": 1,
                    "ptr_char2": 1,
                    "str_ptr2": 1,
                    "type2": 1,
                    "type_b": 1,
                    "type_str": 1,
                    "type_string": 2
                },
                "pchVar16": {
                    "char_pointer_2": 1
                },
                "ppcVar18": {
                    "another_char_pointer": 1,
                    "char_double_pointer": 1,
                    "char_pointer2": 1,
                    "char_pointer_array": 1,
                    "char_pointer_pointer": 6,
                    "char_pointer_pointer_1": 1,
                    "char_pointer_pointer_var": 1,
                    "char_ptr": 1,
                    "char_ptr_ptr": 5,
                    "helper_ptr4": 1,
                    "parameter_array_pointer": 1,
                    "ptr_ptr_char": 1,
                    "str_ptr_arr": 1,
                    "string_array": 3,
                    "string_array_pointer": 1,
                    "string_pointer": 2,
                    "temp_buffer_ptr": 1,
                    "type_str_ptr": 1
                },
                "puVar16": {
                    "helper_ptr2": 1,
                    "length_ptr": 1,
                    "optional_data_1": 1,
                    "ptr_unsigned": 1,
                    "ulong_pointer": 11,
                    "ulong_pointer_var": 1,
                    "ulong_ptr": 5,
                    "ulong_ptr1": 1,
                    "unsigned_int": 1,
                    "unsigned_long_pointer": 1,
                    "unsigned_pointer": 1,
                    "unsigned_val": 1
                },
                "puVar17": {
                    "helper_ptr3": 1,
                    "is_signed_ptr": 1,
                    "optional_data_2": 1,
                    "ptr_undefined": 1,
                    "signed_char": 1,
                    "signed_pointer": 1,
                    "signed_val": 1,
                    "undef_ptr": 1,
                    "undefined_pointer": 11,
                    "undefined_pointer_1": 1,
                    "undefined_pointer_var": 1,
                    "undefined_ptr": 4,
                    "undefined_ptr1": 1,
                    "void_pointer2": 1
                },
                "sVar13": {
                    "data_size": 1,
                    "length": 4,
                    "size_t_1": 1,
                    "size_t_value": 1,
                    "size_t_var": 1,
                    "size_val": 2,
                    "size_value": 6,
                    "size_var": 4,
                    "size_var1": 1,
                    "str_len": 1,
                    "str_length": 1,
                    "string_length": 6,
                    "string_size": 1
                },
                "switchD_0010c9b2_caseD_50": {
                    "switch_case_break2": 1
                },
                "switchD_0010cdf9_caseD_5f": {
                    "switch_case_break3": 1
                },
                "switchD_0010cdf9_caseD_60": {
                    "switch_case_break": 1
                },
                "uVar11": {
                    "function_result": 1,
                    "function_return_value": 2,
                    "numeric_var2": 1,
                    "parse_result": 1,
                    "result2": 1,
                    "ret_value": 1,
                    "return_val": 2,
                    "return_value": 6,
                    "sub_function_return_value": 1,
                    "temp_value": 1,
                    "u_var11": 1,
                    "uint64_val": 1,
                    "uint64_value": 2,
                    "uint_2": 1,
                    "uint_var2": 3,
                    "ulong_value": 1,
                    "ulong_var1": 1,
                    "unsigned_long_value": 1,
                    "unsigned_value2": 1
                },
                "uVar14": {
                    "converted_value": 1,
                    "data_type_length": 1,
                    "length_u_int": 1,
                    "numeric_value": 1,
                    "string_length": 1,
                    "temp_size": 1,
                    "ul_value": 1,
                    "ulong_1": 1,
                    "ulong_val": 2,
                    "ulong_value": 6,
                    "ulong_value2": 1,
                    "ulong_var": 3,
                    "ulong_var1": 1,
                    "ulong_var2": 1,
                    "unsigned_length": 2,
                    "unsigned_long_value2": 1,
                    "unsigned_size": 1,
                    "unsigned_value": 2,
                    "unsigned_value3": 1,
                    "unsigned_var": 1
                },
                "uVar8": {
                    "array_size": 2,
                    "byte_count": 1,
                    "byte_length": 1,
                    "integer_size": 1,
                    "length": 3,
                    "numeric_var": 1,
                    "parsed_value": 1,
                    "type_length": 1,
                    "uint_1": 1,
                    "uint_val": 2,
                    "uint_value": 8,
                    "uint_var": 4,
                    "uint_var1": 1,
                    "unsigned_int_value": 1,
                    "unsigned_value": 2
                }
            },
            "called": [
                "strlen",
                "FUN_00113b98",
                "FUN_00113b71",
                "FUN_00113b4a",
                "FUN_00113cb9",
                "FUN_00113df2",
                "FUN_0010c95e",
                "free",
                "FUN_00113ce0",
                "FUN_0010afd5",
                "FUN_00108e76",
                "FUN_00113dfe",
                "FUN_0010d559",
                "FUN_00113e17",
                "FUN_0010d882",
                "FUN_00108ea1",
                "FUN_0010911f",
                "FUN_0010d21c",
                "FUN_00109a0b",
                "FUN_0010914e",
                "FUN_00113bfa",
                "FUN_00113d3a",
                "FUN_00113c43",
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010d21c",
                "FUN_00113e5e",
                "FUN_0010c95e",
                "FUN_0010d7d4"
            ],
            "code": "\nundefined8 extract_data_0010c95e(undefined8 *function_data,byte **byte_array,long *result)\n\n{\n  byte current_byte;\n  byte next_byte;\n  byte *byte_pointer;\n  bool is_signed;\n  bool is_unsigned;\n  bool is_float;\n  char return_value;\n  uint uint_value;\n  byte *byte_pointer2;\n  long long_value;\n  undefined8 return_value;\n  char *char_pointer;\n  size_t string_length;\n  ulong ulong_value;\n  void *void_pointer;\n  long long_var2;\n  ulong *ulong_pointer;\n  undefined *undefined_pointer;\n  char **char_pointer_pointer;\n  char *char_pointer2;\n  byte *byte_pointer3;\n  undefined undefined_var1;\n  ulong ulong_value_2;\n  char *char_array [2];\n  \n  while( true ) {\n    byte_pointer3 = *byte_array;\n    current_byte = *byte_pointer3;\n    if ('T' < (char)current_byte) break;\n    if ((char)current_byte < 'A') goto switchD_0010c9b2_case_break;\n    switch(current_byte) {\n    case 0x41:\n      long_var2 = 0;\n      byte_pointer = byte_pointer3;\n      goto LAB_0010ca26;\n    default:\n      goto switchD_0010c9b2_case_break;\n    case 0x43:\n      *byte_array = byte_pointer3 + 1;\n      return_value = extract_data_0010c95e(function_data,byte_array,result);\n      if (return_value == '\\0') {\n        return 0;\n      }\n      if (result == (long *)0x0) {\n        return 1;\n      }\n      long_var2 = FUN_00113b71(*result);\n      *result = long_var2;\n      return 1;\n    case 0x46:\n      *byte_array = byte_pointer3 + 1;\n      if (result == (long *)0x0) {\n        ulong_pointer = (ulong *)0x0;\n        char_pointer_pointer = (char **)0x0;\n      }\n      else {\n        ulong_pointer = &ulong_value_2;\n        char_pointer_pointer = char_array;\n      }\n      return_value = FUN_0010d882(function_data,byte_array,char_pointer_pointer,ulong_pointer);\n      if (return_value == '\\0') {\n        return 0;\n      }\n      if (**byte_array == 0x5f) {\n        *byte_array = *byte_array + 1;\n        return_value = extract_data_0010c95e(function_data,byte_array,result);\n        if (return_value == '\\0') {\n          return 0;\n        }\n        if (result == (long *)0x0) {\n          return 1;\n        }\n        long_var2 = FUN_00113ce0(*result,char_array[0],ulong_value_2 & 0xff);\n        *result = long_var2;\n        return 1;\n      }\n      goto switch_case_break;\n    case 0x47:\n      *byte_array = byte_pointer3 + 1;\n      break;\n    case 0x4d:\n    case 0x4f:\n      undefined_var1 = 0;\n      char_array[0] = (char *)0x0;\n      ulong_value_2 = 0;\n      *byte_array = byte_pointer3 + 1;\n      if (((&_sch_istable)[(ulong)byte_pointer3[1] * 2] & 4) == 0) {\n        if (byte_pointer3[1] != 0x51) goto switch_case_break;\n        char_pointer_pointer = char_array;\n        if (result == (long *)0x0) {\n          char_pointer_pointer = (char **)0x0;\n        }\n        return_value = FUN_0010d559(function_data,byte_array,char_pointer_pointer);\n        if (return_value == '\\0') {\n          return 0;\n        }\n      }\n      else {\n        uint_value = FUN_00108e76(byte_array);\n        byte_pointer = *byte_array;\n        string_length = strlen((char *)byte_pointer);\n        if (string_length < uint_value) goto switch_case_break;\n        *byte_array = byte_pointer + uint_value;\n        if ((result != (long *)0x0) &&\n           (char_array[0] = (char *)FUN_0010afd5(*function_data,function_data[1],byte_pointer,uint_value,9),\n           char_array[0] == (char *)0x0)) {\n          return 0;\n        }\n      }\n      next_byte = **byte_array;\n      if (current_byte == 0x4d) {\n        if ((next_byte == 0x43) || (next_byte == 0x56)) {\n          *byte_array = *byte_array + 1;\n        }\n        if (**byte_array != 0x46) goto switch_case_break;\n        *byte_array = *byte_array + 1;\n        if (result == (long *)0x0) {\n          undefined_pointer = (undefined *)0x0;\n          ulong_pointer = (ulong *)0x0;\n        }\n        else {\n          undefined_pointer = &undefined_var1;\n          ulong_pointer = &ulong_value_2;\n        }\n        return_value = FUN_0010d882(function_data,byte_array,ulong_pointer,undefined_pointer);\n        if (return_value == '\\0') {\n          return 0;\n        }\n      }\n      if (**byte_array == 0x5f) {\n        *byte_array = *byte_array + 1;\n        return_value = extract_data_0010c95e(function_data,byte_array,result);\n        if (return_value == '\\0') {\n          return 0;\n        }\n        if (result == (long *)0x0) {\n          return 1;\n        }\n        if (current_byte != 0x4d) {\n          long_var2 = FUN_00113bfa(char_array[0],*result);\n          *result = long_var2;\n          return 1;\n        }\n        long_var2 = FUN_00113b98(*result,char_array[0],ulong_value_2,undefined_var1);\n        *result = long_var2;\n        return 1;\n      }\n      goto switch_case_break;\n    case 0x50:\n      goto switch_case_break2;\n    case 0x51:\n      return_value = FUN_0010d559(function_data,byte_array,result);\n      return return_value;\n    case 0x52:\n      *byte_array = byte_pointer3 + 1;\n      return_value = extract_data_0010c95e(function_data,byte_array,result);\n      if (return_value == '\\0') {\n        return 0;\n      }\n      if (result == (long *)0x0) {\n        return 1;\n      }\n      long_var2 = FUN_00113cb9(*result);\n      *result = long_var2;\n      return 1;\n    case 0x54:\n      *byte_array = byte_pointer3 + 1;\n      return_value = FUN_00108ea1(byte_array,&ulong_value_2);\n      if (return_value != '\\0') {\n        if ((uint)ulong_value_2 < *(uint *)(function_data + 5)) {\n          char_array[0] = *(char **)((ulong_value_2 & 0xffffffff) * 0x10 + function_data[4]);\n          return_value = extract_data_0010c95e(function_data,char_array,result);\n          if (return_value == '\\0') {\n            return 0;\n          }\n          return 1;\n        }\n      }\n      goto switch_case_break;\n    }\n  }\n  if (current_byte == 0x70) {\nswitch_case_break2:\n    *byte_array = byte_pointer3 + 1;\n    return_value = extract_data_0010c95e(function_data,byte_array,result);\n    if (return_value == '\\0') {\n      return 0;\n    }\n    if (result == (long *)0x0) {\n      return 1;\n    }\n    long_var2 = FUN_00113d3a(*result);\n    *result = long_var2;\n    return 1;\n  }\nswitchD_0010c9b2_case_break:\n  is_float = false;\n  is_signed = false;\n  return_value = '\\0';\n  is_unsigned = false;\n  do {\n    byte_pointer = *byte_array;\n    current_byte = *byte_pointer;\n    if (current_byte == 0x55) {\n      return_value = '\\x01';\n      goto LAB_0010cd84;\n    }\n    if ('U' < (char)current_byte) {\n      if (current_byte == 0x56) {\n        is_float = true;\n        goto LAB_0010cd84;\n      }\n      if ('x' < (char)current_byte) goto switch_case_break;\n      if ((char)current_byte < '_') goto LAB_0010cdfb;\n      switch(current_byte) {\n      case 0x5f:\n        goto switch_case_break3;\n      default:\n        goto switch_case_break;\n      case 0x62:\n        if (result == (long *)0x0) {\nLAB_0010d0aa:\n          *byte_array = byte_pointer + 1;\n          return 1;\n        }\n        long_var2 = FUN_0010914e(*function_data,&DAT_00120436);\n        *result = long_var2;\n        if (long_var2 == 0) {\n          long_var2 = FUN_00112904(6,4);\n          *result = long_var2;\n          *byte_array = *byte_array + 1;\n          goto LAB_0010d1de;\n        }\n        break;\n      case 99:\n        if (result == (long *)0x0) goto LAB_0010d0aa;\n        char_pointer2 = \"unsigned char\";\n        if ((return_value == '\\0') && (char_pointer2 = \"char\", is_signed)) {\n          char_pointer2 = \"signed char\";\n        }\n        long_var2 = FUN_0010914e(*function_data,char_pointer2);\n        *result = long_var2;\n        if (long_var2 == 0) {\n          long_var2 = FUN_00113dfe(1,return_value);\n          *result = long_var2;\n          *byte_array = *byte_array + 1;\n          goto LAB_0010d1de;\n        }\n        break;\n      case 100:\n        if (result == (long *)0x0) goto LAB_0010d0aa;\n        char_pointer2 = \"double\";\n        goto LAB_0010d046;\n      case 0x66:\n        if (result == (long *)0x0) goto LAB_0010d0aa;\n        long_var2 = FUN_0010914e(*function_data,\"float\");\n        *result = long_var2;\n        if (long_var2 == 0) {\n          long_var2 = FUN_00113df2(4);\n          *result = long_var2;\n          *byte_array = *byte_array + 1;\n          goto LAB_0010d1de;\n        }\n        break;\n      case 0x69:\n        if (result == (long *)0x0) goto LAB_0010d0aa;\n        char_pointer2 = \"unsigned int\";\n        char_pointer = \"int\";\n        goto LAB_0010ced2;\n      case 0x6c:\n        if (result == (long *)0x0) goto LAB_0010d0aa;\n        char_pointer2 = \"long unsigned int\";\n        char_pointer = \"long int\";\nLAB_0010ced2:\n        if (return_value == '\\0') {\n          char_pointer2 = char_pointer;\n        }\n        long_var2 = FUN_0010914e(*function_data,char_pointer2);\n        *result = long_var2;\n        if (long_var2 == 0) {\n          long_var2 = FUN_00113dfe(4,return_value);\n          *result = long_var2;\n          *byte_array = *byte_array + 1;\n          goto LAB_0010d1de;\n        }\n        break;\n      case 0x72:\n        char_pointer2 = \"long double\";\n        if (result == (long *)0x0) goto LAB_0010d0aa;\nLAB_0010d046:\n        long_var2 = FUN_0010914e(*function_data,char_pointer2);\n        *result = long_var2;\n        if (long_var2 == 0) {\n          long_var2 = FUN_00113df2(8);\n          *result = long_var2;\n          *byte_array = *byte_array + 1;\n          goto LAB_0010d1de;\n        }\n        break;\n      case 0x73:\n        if (result == (long *)0x0) goto LAB_0010d0aa;\n        char_pointer2 = \"short unsigned int\";\n        if (return_value == '\\0') {\n          char_pointer2 = \"short int\";\n        }\n        long_var2 = FUN_0010914e(*function_data,char_pointer2);\n        *result = long_var2;\n        if (long_var2 == 0) {\n          long_var2 = FUN_00113dfe(2,return_value);\n          *result = long_var2;\n          *byte_array = *byte_array + 1;\n          goto LAB_0010d1de;\n        }\n        break;\n      case 0x74:\n        char_pointer_pointer = char_array;\n        if (result == (long *)0x0) {\n          char_pointer_pointer = (char **)0x0;\n        }\n        return_value = FUN_0010d21c(function_data,byte_array,char_pointer_pointer);\n        if (return_value == '\\0') {\n          return 0;\n        }\n        if (result == (long *)0x0) {\n          return 1;\n        }\n        string_length = strlen(char_array[0]);\n        long_var2 = FUN_0010afd5(*function_data,function_data[1],char_array[0],string_length & 0xffffffff,9);\n        *result = long_var2;\n        free(char_array[0]);\n        long_var2 = *result;\n        goto joined_r0x0010d1d8;\n      case 0x76:\n        if (result == (long *)0x0) goto LAB_0010d0aa;\n        long_var2 = FUN_0010914e(*function_data,&DAT_00120495);\n        *result = long_var2;\n        if (long_var2 == 0) {\n          long_var2 = FUN_00113e17();\n          *result = long_var2;\n          *byte_array = *byte_array + 1;\n          goto LAB_0010d1de;\n        }\n        break;\n      case 0x77:\n        if (result == (long *)0x0) goto LAB_0010d0aa;\n        long_var2 = FUN_0010914e(*function_data,\"__wchar_t\");\n        *result = long_var2;\n        if (long_var2 == 0) {\n          long_var2 = FUN_00113dfe(2,1);\n          *result = long_var2;\n          *byte_array = *byte_array + 1;\n          goto LAB_0010d1de;\n        }\n        break;\n      case 0x78:\n        if (result == (long *)0x0) goto LAB_0010d0aa;\n        char_pointer2 = \"long long unsigned int\";\n        if (return_value == '\\0') {\n          char_pointer2 = \"long long int\";\n        }\n        long_var2 = FUN_0010914e(*function_data,char_pointer2);\n        *result = long_var2;\n        if (long_var2 == 0) {\n          long_var2 = FUN_00113dfe(8,return_value);\n          *result = long_var2;\n        }\n      }\n      *byte_array = *byte_array + 1;\n      goto LAB_0010d1de;\n    }\n    if (current_byte == 0x43) {\n      is_unsigned = true;\n      goto LAB_0010cd84;\n    }\n    if (current_byte != 0x53) goto LAB_0010cdc5;\n    is_signed = true;\nLAB_0010cd84:\n    *byte_array = byte_pointer + 1;\n  } while( true );\nLAB_0010ca26:\n  byte_pointer2 = byte_pointer + 1;\n  *byte_array = byte_pointer2;\n  current_byte = *byte_pointer2;\n  if (current_byte == 0) goto switch_case_break;\n  if (current_byte == 0x5f) {\n    *byte_array = byte_pointer + 2;\n    return_value = extract_data_0010c95e(function_data,byte_array,result);\n    if (return_value == '\\0') {\n      return 0;\n    }\n    if (result == (long *)0x0) {\n      return 1;\n    }\n    long_value = FUN_0010914e(*function_data,\"int\");\n    if (long_value == 0) {\n      long_value = FUN_00113dfe(4,0);\n    }\n    long_var2 = FUN_00113c43(*result,long_value,0,long_var2,0);\n    *result = long_var2;\n    return 1;\n  }\n  if (((&_sch_istable)[(ulong)current_byte * 2] & 4) == 0) goto switch_case_break;\n  long_var2 = long_var2 * 10 + (long)((char)current_byte + -0x30);\n  byte_pointer = byte_pointer2;\n  goto LAB_0010ca26;\nLAB_0010cdc5:\n  if ((char)current_byte < ':') {\n    if ((char)current_byte < '0') {\n      if (current_byte != 0) goto switch_case_break;\nswitch_case_break3:\n      FUN_0010911f(byte_pointer3);\n      if (result == (long *)0x0) {\n        return 1;\n      }\n      goto LAB_0010d1de;\n    }\n  }\n  else {\nLAB_0010cdfb:\n    if ((current_byte != 0x47) || (*byte_array = byte_pointer + 1, ((&_sch_istable)[(ulong)byte_pointer[1] * 2] & 4) == 0)\n       ) goto switch_case_break;\n  }\n  byte_pointer3 = *byte_array;\n  uint_value = FUN_00108e76(byte_array);\n  byte_pointer = *byte_array;\n  string_length = strlen((char *)byte_pointer);\n  ulong_value = (ulong)uint_value;\n  if (ulong_value <= string_length) {\n    *byte_array = byte_pointer + ulong_value;\n    if (result == (long *)0x0) {\n      return 1;\n    }\n    void_pointer = (void *)FUN_00109a0b(byte_pointer,ulong_value);\n    long_var2 = FUN_0010914e(*function_data,void_pointer);\n    *result = long_var2;\n    free(void_pointer);\n    if (*result == 0) {\n      long_var2 = FUN_0010afd5(*function_data,function_data[1],byte_pointer,(int)*byte_array - (int)byte_pointer,0);\n      *result = long_var2;\njoined_r0x0010d1d8:\n      if (long_var2 == 0) {\n        return 0;\n      }\n    }\nLAB_0010d1de:\n    if (is_unsigned) {\n      long_var2 = FUN_00113b71(*result);\n      *result = long_var2;\n    }\n    if (is_float) {\n      long_var2 = FUN_00113b4a(*result);\n      *result = long_var2;\n    }\n    return 1;\n  }\nswitch_case_break:\n  FUN_0010911f(byte_pointer3);\n  return 0;\n}\n\n",
            "current_name": "extract_data_0010c95e",
            "entrypoint": "0x0010c95e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010c95e": "extract_data_0010c95e",
                "__ptr": "void_pointer",
                "bVar1": "current_byte",
                "bVar2": "next_byte",
                "bVar4": "is_signed",
                "bVar5": "is_unsigned",
                "bVar6": "is_float",
                "cVar7": "return_value",
                "caseD_42": "case_break",
                "lVar10": "long_value",
                "lVar15": "long_var2",
                "local_40": "char_array",
                "local_48": "ulong_value_2",
                "local_49": "undefined_var1",
                "param_1": "function_data",
                "param_2": "byte_array",
                "param_3": "result",
                "pbVar20": "byte_pointer3",
                "pbVar3": "byte_pointer",
                "pbVar9": "byte_pointer2",
                "pcVar12": "char_pointer",
                "pcVar19": "char_pointer2",
                "ppcVar18": "char_pointer_pointer",
                "puVar16": "ulong_pointer",
                "puVar17": "undefined_pointer",
                "sVar13": "string_length",
                "switchD_0010c9b2_caseD_50": "switch_case_break2",
                "switchD_0010cdf9_caseD_5f": "switch_case_break3",
                "switchD_0010cdf9_caseD_60": "switch_case_break",
                "uVar11": "return_value",
                "uVar14": "ulong_value",
                "uVar8": "uint_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010d21c": {
            "additional_data": {
                "FUN_0010d21c": {
                    "extract_string": 2,
                    "reverse_string": 2
                },
                "__haystack": {
                    "char_pointer1": 1,
                    "char_ptr_haystack": 2,
                    "haystack": 18,
                    "haystack_ptr": 1,
                    "haystack_str": 3,
                    "haystack_string": 1,
                    "haystack_var": 1,
                    "haystack_variable": 1,
                    "str_haystack": 1,
                    "string": 1
                },
                "__ptr": {
                    "pointer": 1,
                    "pointer3": 1,
                    "ptr": 1,
                    "ptr1": 15,
                    "ptr3": 1,
                    "ptr_1": 1,
                    "ptr_var1": 1,
                    "ptr_variable1": 1,
                    "ptr_void": 1,
                    "temp_ptr": 3,
                    "void_pointer1": 1,
                    "void_ptr": 2,
                    "void_ptr1": 1
                },
                "__ptr_00": {
                    "concatenated_ptr": 1,
                    "pointer2": 1,
                    "pointer4": 1,
                    "ptr0": 1,
                    "ptr2": 15,
                    "ptr4": 1,
                    "ptr_2": 1,
                    "ptr_var2": 1,
                    "ptr_variable2": 1,
                    "ptr_void_1": 1,
                    "temp_ptr2": 1,
                    "temp_ptr_2": 1,
                    "void_pointer2": 1,
                    "void_ptr0": 1,
                    "void_ptr00": 1,
                    "void_ptr2": 1
                },
                "bVar1": {
                    "byte1": 9,
                    "byte_1": 3,
                    "byte_var": 1,
                    "byte_var1": 10,
                    "byte_variable1": 1,
                    "current_byte": 6
                },
                "bVar14": {
                    "byte14": 1,
                    "byte4": 7,
                    "byte7": 1,
                    "byte_1": 1,
                    "byte_4": 2,
                    "byte_value2": 1,
                    "byte_var14": 8,
                    "byte_var2": 1,
                    "byte_var4": 3,
                    "byte_variable4": 1,
                    "loop_var1": 1,
                    "temp_byte2": 1,
                    "var14": 2
                },
                "bVar16": {
                    "byte16": 1,
                    "byte5": 7,
                    "byte6": 1,
                    "byte_2": 1,
                    "byte_5": 2,
                    "byte_value3": 1,
                    "byte_var16": 8,
                    "byte_var5": 3,
                    "byte_variable5": 1,
                    "loop_var2": 1,
                    "temp_byte3": 1,
                    "var16": 3
                },
                "bVar17": {
                    "byte17": 1,
                    "byte4": 1,
                    "byte6": 7,
                    "byte_3": 1,
                    "byte_6": 2,
                    "byte_value4": 1,
                    "byte_var17": 8,
                    "byte_var6": 3,
                    "byte_variable6": 1,
                    "loop_var3": 1,
                    "temp_byte4": 1,
                    "var17": 3
                },
                "bVar18": {
                    "byte18": 1,
                    "byte2": 1,
                    "byte7": 7,
                    "byte_4": 1,
                    "byte_7": 2,
                    "byte_value5": 1,
                    "byte_var18": 8,
                    "byte_var7": 3,
                    "byte_variable7": 1,
                    "loop_var4": 1,
                    "temp_byte5": 1,
                    "var18": 3
                },
                "bVar19": {
                    "byte19": 1,
                    "byte8": 8,
                    "byte_5": 1,
                    "byte_8": 2,
                    "byte_value6": 1,
                    "byte_var19": 8,
                    "byte_var8": 3,
                    "byte_variable8": 1,
                    "loop_var5": 1,
                    "temp_byte6": 1,
                    "var19": 3
                },
                "bVar3": {
                    "byte2": 7,
                    "byte3": 2,
                    "byte_2": 2,
                    "byte_value": 1,
                    "byte_var2": 3,
                    "byte_var3": 8,
                    "byte_variable2": 1,
                    "current_byte_copy": 1,
                    "previous_byte": 2,
                    "temp_byte": 2,
                    "var3": 1
                },
                "bVar5": {
                    "bool_var": 1,
                    "byte3": 7,
                    "byte5": 2,
                    "byte_3": 2,
                    "byte_result": 1,
                    "byte_var": 1,
                    "byte_var3": 3,
                    "byte_var5": 8,
                    "byte_variable3": 1,
                    "return_value": 2,
                    "status": 1,
                    "var5": 1
                },
                "cVar4": {
                    "char1": 8,
                    "char4": 1,
                    "char_1": 2,
                    "char_value": 1,
                    "char_var": 6,
                    "char_var1": 1,
                    "char_var4": 6,
                    "char_variable": 1,
                    "current_char": 1,
                    "temp_char": 2
                },
                "iVar7": {
                    "count": 1,
                    "counter": 1,
                    "index": 2,
                    "int1": 2,
                    "int_value": 1,
                    "int_var": 9,
                    "int_var1": 4,
                    "int_var7": 6,
                    "int_variable": 1,
                    "length": 1,
                    "temp_int": 1,
                    "var7": 1
                },
                "local_3c": {
                    "array": 3,
                    "array_3c": 1,
                    "array_var": 2,
                    "int_array": 1,
                    "length_arr": 1,
                    "local_arr": 2,
                    "local_array": 10,
                    "local_array3c": 1,
                    "local_var_array": 1,
                    "local_vars_array": 1,
                    "uint_array": 6
                },
                "param_1": {
                    "arg1": 2,
                    "data": 1,
                    "input": 2,
                    "input1": 1,
                    "input_1": 1,
                    "input_param": 1,
                    "original_param": 1,
                    "param": 2,
                    "param1": 10,
                    "param_1": 8,
                    "param_a": 1
                },
                "param_2": {
                    "arg2": 2,
                    "binary_data": 1,
                    "buffer": 1,
                    "byte_array": 2,
                    "byte_array_ptr": 2,
                    "byte_pointer": 1,
                    "data": 1,
                    "input2": 1,
                    "input_2": 1,
                    "input_data": 1,
                    "param2": 10,
                    "param_2": 5,
                    "param_b": 1,
                    "str_ptr": 1
                },
                "param_3": {
                    "arg3": 2,
                    "output": 3,
                    "output_data": 1,
                    "output_param": 1,
                    "output_str": 1,
                    "output_string": 1,
                    "output_string_ptr": 2,
                    "param3": 10,
                    "param_3": 5,
                    "param_c": 1,
                    "result": 1,
                    "result_pointer": 1,
                    "result_ptr": 1
                },
                "pbVar10": {
                    "byte_pointer2": 2,
                    "byte_pointer3": 1,
                    "byte_pointer_var10": 1,
                    "byte_ptr10": 4,
                    "byte_ptr2": 7,
                    "byte_ptr_2": 1,
                    "byte_ptr_var": 1,
                    "byte_ptr_var10": 1,
                    "byte_ptr_variable2": 1,
                    "current_data_ptr": 1,
                    "current_str_ptr": 1,
                    "pointer2": 1,
                    "ptr2": 1,
                    "ptr_after_string_length": 1,
                    "ptr_byte": 1,
                    "ptr_byte_1": 1,
                    "ptr_to_byte": 1,
                    "str_ptr": 2,
                    "temp_char_ptr": 1
                },
                "pbVar2": {
                    "byte_pointer": 1,
                    "byte_pointer1": 1,
                    "byte_pointer2": 1,
                    "byte_pointer_var2": 1,
                    "byte_ptr": 5,
                    "byte_ptr1": 2,
                    "byte_ptr2": 4,
                    "byte_ptr_1": 1,
                    "byte_ptr_var2": 1,
                    "byte_ptr_variable1": 1,
                    "current_byte": 1,
                    "current_byte_ptr": 1,
                    "current_char_ptr": 1,
                    "current_position": 1,
                    "current_ptr": 1,
                    "data_ptr": 1,
                    "pointer": 1,
                    "pointer_to_byte": 1,
                    "ptr": 1,
                    "ptr1": 1,
                    "ptr_byte": 1,
                    "str_ptr_copy": 1
                },
                "pcVar11": {
                    "char_pointer2": 1,
                    "char_ptr1": 1,
                    "char_ptr11": 2,
                    "charset_var1": 1,
                    "needle": 2,
                    "needle_ptr": 2,
                    "needle_str1": 1,
                    "pc_var1": 3,
                    "pc_variable1": 1,
                    "pointer3": 1,
                    "pointer5": 1,
                    "pointer_var1": 2,
                    "pointer_var11": 2,
                    "ptr11": 1,
                    "ptr3": 1,
                    "ptr5": 1,
                    "str_var_1": 1,
                    "temp_char_ptr2": 1,
                    "var11": 4,
                    "var11_str": 1
                },
                "pcVar13": {
                    "char_pointer3": 1,
                    "char_ptr13": 2,
                    "char_ptr2": 1,
                    "charset_var2": 1,
                    "haystack2": 1,
                    "needle2": 1,
                    "pc_var2": 3,
                    "pc_variable2": 1,
                    "pointer4": 1,
                    "pointer6": 1,
                    "pointer_var13": 2,
                    "pointer_var2": 2,
                    "ptr13": 1,
                    "ptr4": 1,
                    "ptr6": 1,
                    "ptr_to_str1": 1,
                    "str_ptr1": 1,
                    "str_ptr_copy_2": 1,
                    "str_var_2": 1,
                    "temp_char_ptr3": 1,
                    "var13": 4,
                    "var13_str": 1
                },
                "pcVar15": {
                    "char_pointer4": 1,
                    "char_ptr15": 2,
                    "char_ptr3": 1,
                    "charset_var3": 1,
                    "haystack2": 1,
                    "haystack3": 1,
                    "pc_var3": 3,
                    "pc_variable3": 1,
                    "pointer5": 1,
                    "pointer7": 1,
                    "pointer_var15": 2,
                    "pointer_var3": 2,
                    "ptr15": 1,
                    "ptr5": 1,
                    "ptr7": 1,
                    "ptr_to_str2": 1,
                    "str_ptr2": 1,
                    "str_ptr_copy_3": 1,
                    "str_var_3": 1,
                    "temp_char_ptr4": 1,
                    "var15": 4,
                    "var15_str": 1
                },
                "sVar9": {
                    "length": 2,
                    "size": 7,
                    "size_t1": 1,
                    "size_t_var": 2,
                    "size_var": 4,
                    "size_var9": 6,
                    "size_variable": 1,
                    "str_len": 2,
                    "str_length": 2,
                    "string_length": 3
                },
                "uVar12": {
                    "demangled_string": 1,
                    "ptr_result": 1,
                    "result": 1,
                    "result2": 8,
                    "result3": 1,
                    "result_1": 1,
                    "result_2": 1,
                    "result_str": 1,
                    "result_variable2": 1,
                    "return_val2": 1,
                    "return_var2": 1,
                    "str": 1,
                    "temp_uint2": 1,
                    "u_int_var12": 1,
                    "u_var1": 1,
                    "u_var12": 1,
                    "uint_var12": 1,
                    "uint_var3": 1,
                    "undefined8_1": 1,
                    "undefined_value": 1,
                    "undefined_var12": 1,
                    "var12": 2
                },
                "uVar20": {
                    "count": 3,
                    "count_var": 1,
                    "counter": 3,
                    "counter2": 1,
                    "index": 2,
                    "loop_counter": 2,
                    "result4": 1,
                    "u_int_var20": 1,
                    "u_var20": 1,
                    "uint2": 1,
                    "uint_value2": 1,
                    "uint_var2": 5,
                    "uint_var20": 4,
                    "uint_var4": 1,
                    "uint_var_1": 1,
                    "uint_var_2": 1,
                    "uint_variable2": 1
                },
                "uVar21": {
                    "converted_counter": 1,
                    "length_copy": 1,
                    "result5": 1,
                    "size": 1,
                    "temp_ulong": 1,
                    "u_var21": 2,
                    "ul_var": 1,
                    "ulong1": 3,
                    "ulong_value": 1,
                    "ulong_var": 10,
                    "ulong_var1": 1,
                    "ulong_var21": 4,
                    "ulong_variable": 1,
                    "value": 2
                },
                "uVar6": {
                    "result": 20,
                    "result_variable": 1,
                    "return_val": 1,
                    "return_value": 2,
                    "return_var": 1,
                    "u_int_var6": 1,
                    "uint_var": 1,
                    "undefined4_1": 1,
                    "undefined_result": 1,
                    "undefined_var6": 1
                },
                "uVar8": {
                    "count": 1,
                    "length": 3,
                    "result2": 1,
                    "temp_uint": 1,
                    "u_var8": 1,
                    "uint1": 2,
                    "uint_value": 1,
                    "uint_var": 9,
                    "uint_var1": 3,
                    "uint_var2": 1,
                    "uint_var8": 5,
                    "uint_variable": 1,
                    "var8": 1
                }
            },
            "called": [
                "strlen",
                "FUN_00108ea1",
                "FUN_0010911f",
                "concat",
                "cplus_demangle",
                "FUN_00109a0b",
                "FUN_0010c95e",
                "free",
                "abort",
                "strstr",
                "FUN_00108e76"
            ],
            "calling": [
                "FUN_0010d559",
                "FUN_0010ee3f",
                "FUN_0010c95e"
            ],
            "code": "\nundefined4 reverse_string_0010d21c(undefined8 param1,byte **param2,undefined8 *param3)\n\n{\n  byte byte_var1;\n  byte *byte_ptr;\n  byte byte_var3;\n  char char1;\n  byte byte_var5;\n  undefined4 result;\n  int int_var;\n  uint uint_var;\n  size_t size;\n  byte *byte_ptr2;\n  void *ptr1;\n  void *ptr2;\n  char *haystack;\n  char *var11;\n  undefined8 result2;\n  char *var13;\n  byte byte_var14;\n  char *var15;\n  byte byte_var16;\n  byte byte_var17;\n  byte byte_var18;\n  byte byte_var19;\n  uint uint_var2;\n  ulong ulong_var;\n  uint local_array [3];\n  \n  byte_ptr = *param2;\n  *param2 = byte_ptr + 1;\n  local_array[0] = FUN_00108e76(param2);\n  ulong_var = (ulong)local_array[0];\n  if (local_array[0] != 0) {\n    byte_ptr2 = *param2;\n    size = strlen((char *)byte_ptr2);\n    if (ulong_var <= size) {\n      *param2 = byte_ptr2 + ulong_var;\n      uint_var2 = 0;\n      result = FUN_00108ea1(param2,local_array);\n      if ((char)result != '\\0') {\nLAB_0010d2b4:\n        if (local_array[0] <= uint_var2) {\n          if (param3 == (undefined8 *)0x0) {\n            return result;\n          }\n          ptr1 = (void *)FUN_00109a0b(byte_ptr,(int)*param2 - (int)byte_ptr);\n          ptr2 = (void *)concat(\"NoSuchStrinG__\",ptr1,0);\n          free(ptr1);\n          haystack = (char *)cplus_demangle(ptr2,2);\n          free(ptr2);\n          if ((haystack != (char *)0x0) &&\n             (var11 = strstr(haystack,\"::NoSuchStrinG\"), var13 = haystack,\n             var15 = haystack, var11 != (char *)0x0)) {\n            for (; var13 != var11; var13 = var13 + 1) {\n              if ((*var13 != ' ') ||\n                 (((var13[1] == '>' && (haystack < var13)) && (var13[-1] == '>')))) {\n                *var15 = *var13;\n                var15 = var15 + 1;\n              }\n            }\n            result2 = FUN_00109a0b(haystack,(int)var15 - (int)haystack);\n            *param3 = result2;\n            free(haystack);\n            return result;\n          }\n          FUN_0010911f(byte_ptr);\n          free(haystack);\n          return 0;\n        }\n        byte_ptr2 = *param2;\n        if (*byte_ptr2 != 0x5a) {\n          byte_var5 = FUN_0010c95e(param1,param2,0);\n          if (byte_var5 == 0) {\n            return 0;\n          }\n          byte_var3 = 0;\n          byte_var14 = 0;\n          byte_var18 = 0;\n          byte_var17 = 0;\n          byte_var19 = 0;\nLAB_0010d2e9:\n          do {\n            do {\n              byte_var16 = byte_var3;\n              byte_var1 = *byte_ptr2;\n              if ((byte_var14 | byte_var1 == 0) != 0) {\n                byte_var5 = 0;\n                goto switchD_0010d329_caseD_70;\n              }\n              byte_var3 = byte_var5;\n              byte_var14 = byte_var5;\n            } while ('v' < (char)byte_var1);\n            if ((char)byte_var1 < 'b') {\n              if ((char)byte_var1 < 'U') {\n                if ((char)byte_var1 < 'C') goto LAB_0010d2e9;\n                ulong_var = 1L << (byte_var1 + 0xbd & 0x3f);\n                if ((ulong_var & 0x11409) == 0) {\n                  if ((ulong_var & 0xa000) != 0) goto switchD_0010d329_caseD_70;\n                  if (byte_var1 == 0x54) goto switchD_0010d329_caseD_76;\n                  goto LAB_0010d2e9;\n                }\n              }\n              else if (1 < (byte)(byte_var1 + 0xab)) goto LAB_0010d2e9;\n              byte_ptr2 = byte_ptr2 + 1;\n              byte_var3 = byte_var16;\n              byte_var14 = 0;\n              goto LAB_0010d2e9;\n            }\n            switch(byte_var1) {\n            case 0x62:\n              byte_var3 = byte_var16;\n              byte_var18 = byte_var5;\n              break;\n            case 99:\n              byte_var3 = byte_var16;\n              byte_var19 = byte_var5;\n              break;\n            case 100:\n            case 0x66:\n            case 0x72:\n              byte_var3 = byte_var16;\n              byte_var17 = byte_var5;\n              break;\n            case 0x70:\n              goto switchD_0010d329_caseD_70;\n            case 0x76:\nswitchD_0010d329_caseD_76:\n                    \n              abort();\n            }\n          } while( true );\n        }\n        *param2 = byte_ptr2 + 1;\n        char1 = FUN_0010c95e(param1,param2,0);\n        if (char1 == '\\0') {\n          return 0;\n        }\n        goto LAB_0010d2b1;\n      }\n    }\n  }\nLAB_0010d280:\n  FUN_0010911f(byte_ptr);\n  return 0;\nswitchD_0010d329_caseD_70:\n  if (byte_var16 == 0) {\n    if (byte_var19 == 0) {\n      if (byte_var18 == 0) {\n        if (byte_var17 == 0) {\n          if (byte_var5 != 0) {\n            uint_var = FUN_00108e76(param2);\n            if (uint_var == 0) goto LAB_0010d280;\n            *param2 = *param2 + uint_var;\n          }\n        }\n        else {\n          if (**param2 == 0x6d) {\n            *param2 = *param2 + 1;\n          }\n          while( true ) {\n            byte_ptr2 = *param2;\n            if (((&_sch_istable)[(ulong)*byte_ptr2 * 2] & 4) == 0) break;\n            *param2 = byte_ptr2 + 1;\n          }\n          if (*byte_ptr2 == 0x2e) {\n            do {\n              byte_ptr2 = byte_ptr2 + 1;\n              *param2 = byte_ptr2;\n            } while (((&_sch_istable)[(ulong)*byte_ptr2 * 2] & 4) != 0);\n          }\n          byte_ptr2 = *param2;\n          if (*byte_ptr2 == 0x65) {\n            do {\n              byte_ptr2 = byte_ptr2 + 1;\n              *param2 = byte_ptr2;\n            } while (((&_sch_istable)[(ulong)*byte_ptr2 * 2] & 4) != 0);\n          }\n        }\n      }\n      else {\n        uint_var = FUN_00108e76(param2);\n        if (1 < uint_var) goto LAB_0010d280;\n      }\n    }\n    else {\n      if (**param2 == 0x6d) {\n        *param2 = *param2 + 1;\n      }\n      int_var = FUN_00108e76(param2);\n      if (int_var == 0) goto LAB_0010d280;\n    }\n  }\n  else {\n    if (**param2 == 0x6d) {\n      *param2 = *param2 + 1;\n    }\n    while (((&_sch_istable)[(ulong)**param2 * 2] & 4) != 0) {\n      *param2 = *param2 + 1;\n    }\n  }\nLAB_0010d2b1:\n  uint_var2 = uint_var2 + 1;\n  goto LAB_0010d2b4;\n}\n\n",
            "current_name": "reverse_string_0010d21c",
            "entrypoint": "0x0010d21c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010d21c": "reverse_string_0010d21c",
                "__haystack": "haystack",
                "__ptr": "ptr1",
                "__ptr_00": "ptr2",
                "bVar1": "byte_var1",
                "bVar14": "byte_var14",
                "bVar16": "byte_var16",
                "bVar17": "byte_var17",
                "bVar18": "byte_var18",
                "bVar19": "byte_var19",
                "bVar3": "byte_var3",
                "bVar5": "byte_var5",
                "cVar4": "char1",
                "iVar7": "int_var",
                "local_3c": "local_array",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "pbVar10": "byte_ptr2",
                "pbVar2": "byte_ptr",
                "pcVar11": "var11",
                "pcVar13": "var13",
                "pcVar15": "var15",
                "sVar9": "size",
                "uVar12": "result2",
                "uVar20": "uint_var2",
                "uVar21": "ulong_var",
                "uVar6": "result",
                "uVar8": "uint_var"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010d559": {
            "additional_data": {
                "FUN_0010d559": {
                    "decode_and_improve": 1,
                    "decode_and_process_data": 2,
                    "decode_and_update": 1,
                    "decode_and_update_variable": 1,
                    "extract_and_count_strings": 1,
                    "extract_and_process_data": 1,
                    "extract_data": 1,
                    "extract_data_from_binary": 1,
                    "extract_numbers": 1,
                    "extract_strings": 1,
                    "extracted_function": 1,
                    "parse_and_process_data": 1,
                    "parse_code": 1,
                    "parse_data": 2,
                    "parse_input": 1,
                    "parse_string": 1,
                    "process_data": 1,
                    "validate_credentials": 1,
                    "validate_input": 1
                },
                "__nptr": {
                    "byte_pointer3": 1,
                    "byte_pointer_3": 1,
                    "byte_ptr": 1,
                    "byte_ptr3": 2,
                    "byte_ptr_2": 1,
                    "byte_ptr_3": 3,
                    "num_ptr": 1,
                    "number_pointer": 1,
                    "number_start": 1,
                    "number_string": 4,
                    "number_value": 1,
                    "numeric_ptr": 1,
                    "numeric_string": 2,
                    "temp_pointer2": 1
                },
                "__ptr": {
                    "alloc_ptr": 1,
                    "dynamic_memory_ptr": 1,
                    "pointer": 1,
                    "ptr": 1,
                    "str_ptr": 1,
                    "temp_pointer": 6,
                    "temp_ptr": 1,
                    "temp_string": 1,
                    "temp_string_ptr": 1,
                    "temp_void_pointer": 1,
                    "temporary_pointer": 1,
                    "temporary_void_ptr": 1,
                    "void_pointer": 3,
                    "void_ptr": 10,
                    "void_ptr1": 1
                },
                "__s1": {
                    "char_pointer_2": 1,
                    "char_ptr": 1,
                    "char_ptr1": 1,
                    "char_ptr2": 1,
                    "char_ptr_1": 2,
                    "char_ptr_2": 1,
                    "compare_string": 1,
                    "compared_string": 1,
                    "comparison_string": 3,
                    "str_2": 1,
                    "string1": 2,
                    "string2": 1,
                    "string_1": 4,
                    "string_b": 1,
                    "string_pointer": 1,
                    "string_ptr": 1,
                    "string_ptr2": 1,
                    "string_value": 2,
                    "temp_str_2": 1,
                    "temp_string1": 1,
                    "temp_string_2": 3
                },
                "bVar1": {
                    "byte1": 1,
                    "byte_1": 1,
                    "byte_val": 1,
                    "byte_val1": 1,
                    "byte_val_1": 1,
                    "byte_value": 8,
                    "byte_var": 2,
                    "character": 1,
                    "current_byte": 1,
                    "current_char": 1,
                    "first_byte": 6,
                    "first_char": 3,
                    "first_character": 2,
                    "next_byte": 1,
                    "second_char": 1
                },
                "cVar3": {
                    "char1": 1,
                    "char_1": 1,
                    "char_result": 1,
                    "char_val": 2,
                    "char_val1": 1,
                    "char_value": 6,
                    "char_var": 2,
                    "character": 1,
                    "character_value": 1,
                    "comparison_result": 1,
                    "result": 9,
                    "result_char": 3,
                    "result_flag": 1,
                    "status": 1
                },
                "iVar5": {
                    "comparison": 2,
                    "comparison_result": 15,
                    "int1": 1,
                    "int_val": 2,
                    "int_val1": 1,
                    "int_value": 4,
                    "int_var": 3,
                    "return_value": 1,
                    "string_cmp_result": 1,
                    "string_comparison_result": 1
                },
                "lVar8": {
                    "accumulator": 1,
                    "counter": 1,
                    "length": 1,
                    "length_value": 1,
                    "long1": 1,
                    "long_val": 2,
                    "long_value": 4,
                    "long_var": 2,
                    "loop_counter": 1,
                    "result": 4,
                    "result_len": 1,
                    "result_length": 5,
                    "result_long": 1,
                    "result_value": 2,
                    "return_value": 1,
                    "temp_long": 1,
                    "total_length": 1,
                    "value": 1
                },
                "local_40": {
                    "buffer_array": 1,
                    "char_array": 2,
                    "char_array_2": 1,
                    "local_arr_1": 2,
                    "local_array_1": 1,
                    "local_buffer": 1,
                    "local_string": 1,
                    "local_string_array": 1,
                    "local_strings": 1,
                    "local_variable_2": 1,
                    "output_str": 1,
                    "output_string_array": 1,
                    "output_strings": 1,
                    "result_string": 1,
                    "str_arr": 1,
                    "string_array": 5,
                    "string_buffer": 1,
                    "temp_string_array": 2,
                    "temp_string_array_2": 1,
                    "temporary_string_array": 1
                },
                "local_64": {
                    "count_copy": 1,
                    "counter": 6,
                    "counter_value": 1,
                    "int2": 1,
                    "local_count": 2,
                    "local_counter": 1,
                    "local_length": 1,
                    "local_var_1": 4,
                    "local_variable_1": 1,
                    "loop_count": 1,
                    "loop_counter": 5,
                    "num_iterations": 1,
                    "number_count": 1,
                    "remaining_iterations": 1,
                    "remaining_strings": 1
                },
                "param_1": {
                    "arr_param": 1,
                    "array": 2,
                    "buffer": 1,
                    "config": 1,
                    "data": 1,
                    "data_array": 1,
                    "data_pointers": 1,
                    "function_ptr": 1,
                    "input_array": 8,
                    "input_data": 1,
                    "output": 1,
                    "output_array": 1,
                    "param1": 1,
                    "param_1": 1,
                    "param_arr": 1,
                    "param_array": 3,
                    "result": 3,
                    "string_ptr": 1
                },
                "param_2": {
                    "binary": 1,
                    "buffer": 2,
                    "byte_array": 4,
                    "byte_array_param": 1,
                    "byte_array_ptr": 3,
                    "byte_pp": 1,
                    "byte_sequence": 1,
                    "data": 2,
                    "data_ptr": 1,
                    "data_ptr_ptr": 1,
                    "input": 2,
                    "input_buffer": 1,
                    "input_data": 2,
                    "input_ptr": 1,
                    "input_str": 1,
                    "input_string": 4,
                    "param2": 1,
                    "string_array": 1
                },
                "param_3": {
                    "array_length": 1,
                    "count": 5,
                    "count_ptr": 3,
                    "counter": 2,
                    "data_size": 1,
                    "input_length": 1,
                    "length": 1,
                    "length_array": 2,
                    "length_ptr": 1,
                    "output_buffer": 1,
                    "output_count": 1,
                    "output_len": 1,
                    "output_length": 4,
                    "output_param": 1,
                    "param3": 1,
                    "result": 1,
                    "result_length": 1,
                    "result_value": 1,
                    "string_length_ptr": 1
                },
                "pbVar11": {
                    "adjusted_buffer_size": 1,
                    "byte_pointer2": 1,
                    "byte_pointer_2": 1,
                    "byte_ptr": 3,
                    "byte_ptr1": 1,
                    "byte_ptr2": 2,
                    "byte_ptr_1": 1,
                    "byte_ptr_2": 3,
                    "new_byte": 1,
                    "new_char_ptr": 1,
                    "new_input": 1,
                    "next_byte": 3,
                    "next_char": 1,
                    "next_pos": 1,
                    "result_ptr": 1,
                    "string_start": 1,
                    "temp_byte_pointer": 1,
                    "updated_byte": 1,
                    "updated_char": 1,
                    "updated_data_pointer": 1,
                    "updated_data_ptr": 1,
                    "updated_ptr": 1,
                    "updated_string_pointer": 2
                },
                "pbVar2": {
                    "byte_array": 1,
                    "byte_pointer": 2,
                    "byte_ptr": 7,
                    "byte_ptr1": 1,
                    "byte_ptr2": 1,
                    "current_byte": 5,
                    "current_char": 2,
                    "current_char_ptr": 1,
                    "current_input": 1,
                    "current_pos": 1,
                    "current_ptr": 3,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "ptr": 1,
                    "string_pointer": 3
                },
                "pcVar10": {
                    "char_array": 1,
                    "char_pointer": 1,
                    "char_pointer_1": 1,
                    "char_ptr": 8,
                    "char_ptr1": 1,
                    "comp_str": 1,
                    "current_string": 1,
                    "loop_string": 1,
                    "result_string": 1,
                    "str": 1,
                    "string1": 1,
                    "string_a": 1,
                    "string_comparison": 1,
                    "string_ptr1": 1,
                    "string_value": 1,
                    "temp_char_ptr": 1,
                    "temp_string": 7,
                    "temporary_string": 1
                },
                "plVar9": {
                    "array_ptr": 1,
                    "long_array": 1,
                    "long_pointer": 3,
                    "long_ptr": 10,
                    "loop_variable": 1,
                    "lst_ptr": 1,
                    "pointer_array": 5,
                    "pointer_list": 1,
                    "pointer_value": 1,
                    "ptr_arr": 1,
                    "ptr_array": 1,
                    "result_address": 1,
                    "string_list": 1,
                    "temp_array": 1,
                    "temp_long_pointer": 1,
                    "temp_long_ptr": 1
                },
                "ppcVar6": {
                    "auxiliary_arr": 1,
                    "buffer_array": 1,
                    "char_array_ptr": 1,
                    "char_double_pointer": 1,
                    "char_pointer_pointer": 1,
                    "char_pp": 1,
                    "char_ptr_ptr": 5,
                    "dynamic_array": 1,
                    "local_array": 1,
                    "pointer_array": 1,
                    "ptr_array": 1,
                    "return_string": 1,
                    "str_array_ptr": 1,
                    "string_array": 3,
                    "string_ptr_array": 1,
                    "temp_array": 1,
                    "temp_buffer": 1,
                    "temp_ptr_array": 1,
                    "temp_str": 1,
                    "temp_string": 2,
                    "temp_string_array": 3,
                    "temporary_array": 1
                },
                "sVar7": {
                    "length": 1,
                    "size": 3,
                    "size_val": 2,
                    "size_value": 3,
                    "size_var": 2,
                    "str_length": 1,
                    "string_length": 16,
                    "string_length_2": 1,
                    "temp_length": 1,
                    "temp_size": 1
                },
                "uVar12": {
                    "condition_value": 1,
                    "constant_value": 2,
                    "default_value": 1,
                    "flag": 1,
                    "function_mode": 1,
                    "helper_value": 1,
                    "index": 1,
                    "length_var_2": 1,
                    "result_numeric": 1,
                    "some_value": 1,
                    "some_variable": 1,
                    "special_flag": 1,
                    "special_value": 1,
                    "temp_flag": 1,
                    "temp_value": 1,
                    "u_var12": 1,
                    "uint2": 1,
                    "uint_val": 1,
                    "uint_val2": 1,
                    "uint_var_1": 1,
                    "undefined8_val": 1,
                    "undefined8_value": 2,
                    "undefined8_var": 1,
                    "undefined_value": 1,
                    "undefined_var": 1,
                    "unk_value": 1,
                    "unknown_value": 1,
                    "value": 1,
                    "var": 1
                },
                "uVar4": {
                    "char_count": 1,
                    "count": 1,
                    "input_length": 1,
                    "int_value": 2,
                    "length": 7,
                    "length_var": 1,
                    "result_uint": 1,
                    "str_length": 3,
                    "str_size": 1,
                    "string_length": 1,
                    "substring_length": 1,
                    "uint1": 1,
                    "uint_val": 2,
                    "uint_val1": 1,
                    "uint_value": 4,
                    "uint_var": 3
                }
            },
            "called": [
                "strlen",
                "FUN_0010911f",
                "FUN_0010d21c",
                "FUN_001129f4",
                "FUN_00109a0b",
                "free",
                "FUN_0010914e",
                "strtol",
                "FUN_00113b1e",
                "strcmp",
                "FUN_0010afd5",
                "FUN_00108e76"
            ],
            "calling": [
                "FUN_0010ee3f",
                "FUN_0010c95e"
            ],
            "code": "\nundefined8 parse_and_process_data_0010d559(undefined8 *input_array,byte **byte_array,long *count)\n\n{\n  byte byte_value;\n  byte *byte_ptr;\n  char result;\n  uint length;\n  int comparison_result;\n  char **char_ptr_ptr;\n  size_t string_length;\n  long result_length;\n  long *long_ptr;\n  char *char_ptr;\n  char *string_1;\n  void *void_ptr;\n  byte *byte_ptr;\n  undefined8 undefined8_value;\n  byte *number_string;\n  int counter;\n  char *string_array [2];\n  \n  byte_ptr = *byte_array;\n  byte_value = byte_ptr[1];\n  if ((char)byte_value < ':') {\n    if ((char)byte_value < '1') goto LAB_0010d5d8;\n    counter = (char)byte_value + -0x30;\n    if (byte_ptr[2] == 0x5f) {\n      *byte_array = byte_ptr + 1;\n    }\n    byte_ptr = *byte_array + 2;\n  }\n  else {\n    if (((byte_value != 0x5f) || (((&_sch_istable)[(ulong)byte_ptr[2] * 2] & 4) == 0)) ||\n       (byte_ptr[2] == 0x30)) goto LAB_0010d5d8;\n    number_string = byte_ptr + 2;\n    result_length = strtol((char *)number_string,(char **)0x0,10);\n    counter = (int)result_length;\n    while (((&_sch_istable)[(ulong)*number_string * 2] & 4) != 0) {\n      number_string = number_string + 1;\n    }\n    byte_ptr = number_string + 1;\n    if (*number_string != 0x5f) goto LAB_0010d5d8;\n  }\n  *byte_array = byte_ptr;\n  char_ptr_ptr = (char **)0x0;\n  if (count != (long *)0x0) {\n    char_ptr_ptr = string_array;\n  }\n  result_length = 0;\n  while( true ) {\n    while( true ) {\n      counter = counter + -1;\n      if (counter == -1) {\n        if (count != (long *)0x0) {\n          *count = result_length;\n        }\n        return 1;\n      }\n      if (**byte_array == 0x5f) {\n        *byte_array = *byte_array + 1;\n      }\n      if (**byte_array != 0x74) break;\n      result = FUN_0010d21c(input_array,byte_array,char_ptr_ptr);\n      char_ptr = string_array[0];\n      if (result == '\\0') {\n        return 0;\n      }\n      if (count != (long *)0x0) {\n        string_length = strlen(string_array[0]);\n        result_length = FUN_0010afd5(*input_array,input_array[1],char_ptr,string_length & 0xffffffff,9);\n        free(char_ptr);\n        if (result_length == 0) {\n          return 0;\n        }\n      }\n    }\n    length = FUN_00108e76(byte_array);\n    string_length = strlen((char *)*byte_array);\n    if (string_length < length) break;\n    if (count != (long *)0x0) {\n      if ((result_length != 0) && (long_ptr = (long *)FUN_00113b1e(result_length), long_ptr != (long *)0x0)) {\n        char_ptr = (char *)FUN_00109a0b(*byte_array,length);\n        for (; result_length = *long_ptr, result_length != 0; long_ptr = long_ptr + 1) {\n          result_length = *(long *)(result_length + 8);\n          if (result_length == 0) {\n            free(char_ptr);\n            return 0;\n          }\n          string_1 = (char *)FUN_001129f4(result_length);\n          if ((string_1 != (char *)0x0) && (comparison_result = strcmp(string_1,char_ptr), comparison_result == 0)) break;\n        }\n        free(char_ptr);\n        if (result_length != 0) goto LAB_0010d7ad;\n      }\n      undefined8_value = 9;\n      if (counter == 0) {\n        void_ptr = (void *)FUN_00109a0b(*byte_array,length);\n        result_length = FUN_0010914e(*input_array,void_ptr);\n        free(void_ptr);\n        if (result_length != 0) goto LAB_0010d7ad;\n        undefined8_value = 0;\n      }\n      result_length = FUN_0010afd5(*input_array,input_array[1],*byte_array,length,undefined8_value);\n      if (result_length == 0) {\n        return 0;\n      }\n    }\nLAB_0010d7ad:\n    *byte_array = *byte_array + length;\n  }\nLAB_0010d5d8:\n  FUN_0010911f(byte_ptr);\n  return 0;\n}\n\n",
            "current_name": "parse_and_process_data_0010d559",
            "entrypoint": "0x0010d559",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010d559": "parse_and_process_data_0010d559",
                "__nptr": "number_string",
                "__ptr": "void_ptr",
                "__s1": "string_1",
                "bVar1": "byte_value",
                "cVar3": "result",
                "iVar5": "comparison_result",
                "lVar8": "result_length",
                "local_40": "string_array",
                "local_64": "counter",
                "param_1": "input_array",
                "param_2": "byte_array",
                "param_3": "count",
                "pbVar11": "byte_ptr",
                "pbVar2": "byte_ptr",
                "pcVar10": "char_ptr",
                "plVar9": "long_ptr",
                "ppcVar6": "char_ptr_ptr",
                "sVar7": "string_length",
                "uVar12": "undefined8_value",
                "uVar4": "length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010d7d4": {
            "additional_data": {
                "FUN_00109be3": {
                    "check_success": 1,
                    "validate_data": 1
                },
                "FUN_0010c95e": {
                    "process_byte": 1,
                    "read_data": 1
                },
                "FUN_0010d7d4": {
                    "extract_and_store_data": 3,
                    "extract_and_store_numbers": 1,
                    "extract_and_store_values": 3,
                    "extract_data": 2,
                    "extract_data_from_binary": 1,
                    "extract_integer_values": 1,
                    "parse_and_update_data": 1,
                    "process_data": 16,
                    "process_function": 2
                },
                "cVar2": {
                    "check_flag": 1,
                    "condition": 1,
                    "flag": 3,
                    "is_valid": 2,
                    "result": 15,
                    "result_flag": 2,
                    "status": 1,
                    "success": 1,
                    "success_flag": 2,
                    "success_indicator": 1,
                    "var2": 2
                },
                "lVar4": {
                    "allocated_mem": 1,
                    "allocated_memory": 3,
                    "array_length": 1,
                    "buffer": 2,
                    "buffer_address": 1,
                    "current_length": 1,
                    "current_size": 1,
                    "data_count": 1,
                    "existing_array": 1,
                    "old_output_array": 1,
                    "output_data": 1,
                    "realloc_size": 1,
                    "temp": 6,
                    "temp1": 1,
                    "temp_data": 1,
                    "temp_long": 1,
                    "temp_size": 1,
                    "temp_value": 2,
                    "temp_var": 2,
                    "var4": 2
                },
                "local_40": {
                    "array": 1,
                    "buffer": 2,
                    "data_array": 2,
                    "extracted_values_array": 1,
                    "local_array": 6,
                    "local_buffer": 4,
                    "local_data": 2,
                    "temp_array": 5,
                    "temp_array2": 1,
                    "temp_array_2": 1,
                    "temp_buffer": 2,
                    "temp_data": 1,
                    "temporary_array_2": 1
                },
                "param_1": {
                    "arg1": 6,
                    "binary_data": 1,
                    "data": 2,
                    "input": 3,
                    "input1": 2,
                    "input_array": 1,
                    "input_data": 2,
                    "input_param": 9,
                    "input_value": 2,
                    "param1": 1,
                    "param_1": 2
                },
                "param_2": {
                    "arg2": 6,
                    "buffer": 1,
                    "data": 1,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "input2": 2,
                    "input_array": 3,
                    "input_buffer": 1,
                    "input_data": 2,
                    "input_pointer": 2,
                    "input_ptr": 2,
                    "output": 1,
                    "output_array": 1,
                    "output_data": 1,
                    "output_param": 1,
                    "param2": 1,
                    "pointer": 1
                },
                "param_3": {
                    "arg3": 6,
                    "buffer": 2,
                    "buffer_size": 1,
                    "count_array": 1,
                    "existing_data": 1,
                    "output1": 2,
                    "output_array": 9,
                    "output_buffer": 1,
                    "output_data": 1,
                    "output_data_ptr": 1,
                    "output_pointer": 1,
                    "output_ptr": 3,
                    "param3": 1,
                    "result": 1
                },
                "param_4": {
                    "arg4": 6,
                    "count": 3,
                    "count1": 1,
                    "count_pointer": 1,
                    "count_ptr": 3,
                    "counter": 1,
                    "counter1": 3,
                    "counter_1": 2,
                    "counter_ptr": 2,
                    "data_count_ptr": 1,
                    "index_array": 1,
                    "num_elements": 2,
                    "num_processed": 1,
                    "output2": 1,
                    "param4": 1,
                    "param_count": 1,
                    "total_count": 1
                },
                "param_5": {
                    "arg5": 6,
                    "capacity": 3,
                    "capacity_ptr": 3,
                    "count2": 1,
                    "counter2": 3,
                    "counter_2": 2,
                    "limit_ptr": 1,
                    "max_count": 1,
                    "max_elements": 2,
                    "max_index": 1,
                    "max_param_count": 1,
                    "max_processed": 1,
                    "output3": 1,
                    "param5": 1,
                    "size": 1,
                    "size_pointer": 1,
                    "size_ptr": 2
                },
                "plVar5": {
                    "buffer_ptr": 2,
                    "local_buffer": 1,
                    "local_memory": 1,
                    "local_ptr": 1,
                    "output_array_ptr": 1,
                    "output_buffer": 1,
                    "output_data": 1,
                    "output_ptr_tmp": 1,
                    "ptr_to_result": 1,
                    "realloc_array": 1,
                    "realloc_ptr": 1,
                    "temp2": 1,
                    "temp_array": 8,
                    "temp_buffer": 2,
                    "temp_pointer": 2,
                    "temp_ptr": 3,
                    "temporary_array": 1,
                    "var5": 2
                },
                "uVar1": {
                    "data": 1,
                    "data_start": 4,
                    "first_arg_value": 1,
                    "first_byte": 2,
                    "first_element": 4,
                    "first_item": 1,
                    "first_value": 3,
                    "input_value": 2,
                    "start_value": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "value": 3,
                    "value1": 4,
                    "var1": 2,
                    "variable1": 1
                },
                "uVar3": {
                    "function_result": 2,
                    "result": 11,
                    "return_val": 1,
                    "return_value": 8,
                    "status": 6,
                    "success": 1,
                    "var3": 2
                },
                "uVar6": {
                    "count": 2,
                    "count_added": 1,
                    "counter": 4,
                    "counter_3": 1,
                    "index": 5,
                    "new_count": 2,
                    "new_counter": 1,
                    "new_param_count": 1,
                    "num_elements_new": 1,
                    "temp3": 1,
                    "temp_count": 1,
                    "temp_counter": 1,
                    "updated_counter": 1,
                    "var6": 2
                },
                "xrealloc": {
                    "expand_buffer": 1,
                    "resize_array": 1
                }
            },
            "called": [
                "xrealloc",
                "FUN_00109be3",
                "FUN_0010c95e"
            ],
            "calling": [
                "FUN_0010d882"
            ],
            "code": "\nundefined4\nprocess_data_0010d7d4(undefined8 input_param,undefined8 *arg2,long *output_array,uint *arg4,uint *arg5)\n\n{\n  undefined8 value1;\n  char result;\n  undefined4 result;\n  long temp;\n  long *temp_array;\n  uint index;\n  long local_array [2];\n  \n  value1 = *arg2;\n  temp_array = local_array;\n  if (output_array == (long *)0x0) {\n    temp_array = (long *)0x0;\n  }\n  result = FUN_0010c95e(input_param,arg2,temp_array);\n  if ((result != '\\0') &&\n     (result = FUN_00109be3(input_param,value1,(int)*arg2 - (int)value1), (char)result != '\\0')) {\n    if (output_array == (long *)0x0) {\n      return result;\n    }\n    if (local_array[0] != 0) {\n      if (*arg5 <= *arg4 + 1) {\n        index = *arg5 + 10;\n        temp = *output_array;\n        *arg5 = index;\n        temp = xrealloc(temp,(ulong)index << 3);\n        *output_array = temp;\n      }\n      index = *arg4;\n      *(long *)(*output_array + (ulong)index * 8) = local_array[0];\n      *arg4 = index + 1;\n      return result;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_0010d7d4",
            "entrypoint": "0x0010d7d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010d7d4": "process_data_0010d7d4",
                "cVar2": "result",
                "lVar4": "temp",
                "local_40": "local_array",
                "param_1": "input_param",
                "param_2": "arg2",
                "param_3": "output_array",
                "param_4": "arg4",
                "param_5": "arg5",
                "plVar5": "temp_array",
                "uVar1": "value1",
                "uVar3": "result",
                "uVar6": "index",
                "xrealloc": "resize_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010d882": {
            "additional_data": {
                "FUN_00108ea1": {
                    "parse_number": 1,
                    "parse_value": 1
                },
                "FUN_0010911f": {
                    "free_memory": 2
                },
                "FUN_0010d7d4": {
                    "parse_other_function": 1,
                    "process_data": 1
                },
                "FUN_0010d882": {
                    "decode_and_process_data": 1,
                    "decode_param": 1,
                    "extract_binary_data": 1,
                    "extract_data": 2,
                    "parse_and_improve_code": 1,
                    "parse_function": 2,
                    "parse_input": 9,
                    "parse_input_data": 1,
                    "process_binary_data": 1,
                    "process_data": 5,
                    "process_input": 2,
                    "process_input_data": 1
                },
                "bVar7": {
                    "bool_var": 1,
                    "condition": 3,
                    "condition_flag": 1,
                    "flag": 4,
                    "is_continue": 1,
                    "is_iteration": 1,
                    "is_local44_non_zero": 1,
                    "is_looping": 1,
                    "is_not_empty": 1,
                    "is_not_zero": 1,
                    "is_processing": 1,
                    "is_true": 1,
                    "is_valid": 4,
                    "loop_condition": 8,
                    "loop_flag": 1
                },
                "cVar3": {
                    "ch": 1,
                    "char_value": 1,
                    "current": 1,
                    "current_byte": 4,
                    "current_char": 17,
                    "current_char_value": 4,
                    "current_character": 1,
                    "current_val": 1,
                    "next_char": 1
                },
                "iVar1": {
                    "count": 5,
                    "counter": 3,
                    "iteration_count": 5,
                    "loop_counter": 4,
                    "temp_var_1": 1
                },
                "lVar4": {
                    "alloc_mem": 1,
                    "allocated_buffer": 2,
                    "allocated_mem": 2,
                    "allocated_memory": 19,
                    "allocated_memory_ptr": 1,
                    "allocated_ptr": 1,
                    "buffer_address": 1,
                    "dynamic_memory": 1,
                    "result": 1,
                    "temporary": 1
                },
                "local_40": {
                    "arguments": 1,
                    "array": 1,
                    "decoded_values": 1,
                    "entry_array": 1,
                    "extracted_data_array": 1,
                    "func_output_array": 1,
                    "function_result": 1,
                    "local_array": 1,
                    "record": 1,
                    "result_array": 1,
                    "results": 1,
                    "temp_arr": 1,
                    "temp_array": 5,
                    "temp_buffer": 9,
                    "temp_data": 3,
                    "temp_memory": 1,
                    "value_array": 1
                },
                "local_44": {
                    "count": 5,
                    "counter": 1,
                    "counter_3": 1,
                    "inner_iteration_count": 1,
                    "is_t": 1,
                    "iter": 1,
                    "iteration_counter": 1,
                    "iterations": 1,
                    "local44": 1,
                    "loop_count": 1,
                    "loop_counter": 5,
                    "loop_variable": 1,
                    "nested_counter": 2,
                    "repeat": 1,
                    "repeat_count": 1,
                    "repetitions": 1,
                    "skip_count": 1,
                    "sub_count": 1,
                    "subcount": 1,
                    "temp_flag": 1,
                    "type_flag": 1,
                    "var2": 1
                },
                "local_48": {
                    "argument_length": 1,
                    "count": 4,
                    "counter": 1,
                    "counter_2": 1,
                    "index2": 1,
                    "index_2": 1,
                    "int_value": 1,
                    "length": 1,
                    "local48": 1,
                    "local_value": 1,
                    "number": 1,
                    "size_value": 1,
                    "string_length": 1,
                    "string_value": 1,
                    "sub_count": 1,
                    "temp_value": 1,
                    "temp_value_2": 1,
                    "val": 1,
                    "value": 8,
                    "var1": 1
                },
                "local_4c": {
                    "buffer_size": 1,
                    "constant": 10,
                    "constant_value": 5,
                    "default_len": 1,
                    "error_code": 1,
                    "flag": 1,
                    "length": 1,
                    "local4c": 1,
                    "local_flag": 1,
                    "max_allowed": 1,
                    "max_count": 1,
                    "max_value": 1,
                    "size": 1,
                    "temp_value_1": 1,
                    "temp_var": 2
                },
                "local_50": {
                    "count": 3,
                    "counter": 2,
                    "curr_index": 1,
                    "current_index": 1,
                    "data_index": 1,
                    "index": 7,
                    "index1": 1,
                    "index_1": 1,
                    "index_value": 1,
                    "len": 1,
                    "local50": 1,
                    "offset": 3,
                    "output_index": 1,
                    "position_counter": 1,
                    "string_counter": 1,
                    "string_index": 1,
                    "token_counter": 1,
                    "total_arguments": 1,
                    "total_count": 1,
                    "total_processed": 1
                },
                "param_1": {
                    "arg1": 2,
                    "arg_1": 1,
                    "binary_param": 1,
                    "binary_ptr": 1,
                    "buffer": 1,
                    "data": 2,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_size": 2,
                    "input": 5,
                    "input_buffer": 1,
                    "input_data": 3,
                    "input_length": 1,
                    "input_param": 4,
                    "input_value": 3,
                    "param1": 1,
                    "param_ptr": 1
                },
                "param_2": {
                    "arg2": 2,
                    "arg_2": 1,
                    "arguments": 1,
                    "char_array": 1,
                    "data": 1,
                    "data_array": 1,
                    "input": 4,
                    "input_array": 3,
                    "input_string": 1,
                    "input_strings": 6,
                    "param2": 1,
                    "ptr_to_string": 1,
                    "string_array": 4,
                    "string_array_ptr": 1,
                    "strings": 2,
                    "tokens": 1
                },
                "param_3": {
                    "arg3": 2,
                    "arg_3": 1,
                    "output": 6,
                    "output_array_ptr": 1,
                    "output_buffer": 3,
                    "output_data": 3,
                    "output_data_ptr": 1,
                    "output_param": 4,
                    "output_pointer": 1,
                    "output_ptr": 4,
                    "output_value": 2,
                    "param3": 1,
                    "result": 1,
                    "return_value": 1
                },
                "param_4": {
                    "arg4": 2,
                    "arg_4": 1,
                    "end_flag": 1,
                    "flag": 13,
                    "flag_param": 4,
                    "flag_pointer": 1,
                    "flag_ptr": 6,
                    "is_terminated": 1,
                    "output_flag": 1,
                    "param4": 1
                },
                "param_5": {
                    "temp_ptr": 1,
                    "unused_param": 1
                },
                "pcVar2": {
                    "current_argument": 1,
                    "current_char": 14,
                    "current_char_ptr": 1,
                    "current_param2": 1,
                    "current_string": 8,
                    "current_string_ptr": 1,
                    "data_ptr": 1,
                    "input_string": 1,
                    "pointer": 1,
                    "str": 1,
                    "token": 1
                },
                "pcVar5": {
                    "current_byte": 1,
                    "current_char": 7,
                    "current_char_ptr": 1,
                    "current_input": 1,
                    "current_param2_copy": 1,
                    "current_pointer": 1,
                    "current_pos": 1,
                    "current_position": 4,
                    "current_ptr": 2,
                    "current_string": 5,
                    "current_string_ptr_2": 1,
                    "current_token": 1,
                    "ptr": 1,
                    "string_pointer": 1,
                    "temp_char_ptr": 1,
                    "temp_input": 1,
                    "tmp_ptr": 1
                },
                "uVar6": {
                    "argument_number": 1,
                    "current_index": 3,
                    "index": 18,
                    "local48": 1,
                    "local_count": 1,
                    "position": 1,
                    "string_index": 2,
                    "temp_value": 2,
                    "token_index": 1,
                    "uint_var": 1
                },
                "xmalloc": {
                    "allocate_memory": 2
                }
            },
            "called": [
                "FUN_00108ea1",
                "FUN_0010911f",
                "xmalloc",
                "FUN_0010d7d4"
            ],
            "calling": [
                "FUN_0010ee3f",
                "FUN_0010c95e"
            ],
            "code": "\nundefined8 parse_input_data_0010d882(long input,char **input_strings,long *output,undefined *flag)\n\n{\n  int iteration_count;\n  char *current_char;\n  char current_char;\n  long allocated_memory;\n  char *current_char;\n  ulong index;\n  bool loop_condition;\n  uint index;\n  undefined4 constant;\n  uint value;\n  int count;\n  undefined8 temp_buffer [2];\n  \n  current_char = *input_strings;\n  constant = 10;\n  if (output != (long *)0x0) {\n    allocated_memory = xmalloc();\n    *output = allocated_memory;\n    *flag = 0;\n  }\n  index = 0;\n  while( true ) {\n    current_char = *input_strings;\n    current_char = *current_char;\n    if ((current_char == '_' || current_char == '\\0') || (current_char == 'e')) break;\n    if ((current_char == 'N') || (current_char == 'T')) {\n      *input_strings = current_char + 1;\n      if (current_char == 'T') {\n        count = 1;\n      }\n      else {\n        current_char = FUN_00108ea1(input_strings,&count);\n        if (current_char == '\\0') goto LAB_0010d958;\n      }\n      current_char = FUN_00108ea1(input_strings,&value);\n      if ((current_char == '\\0') || (*(uint *)(input + 0x28) <= value)) {\nLAB_0010d958:\n        FUN_0010911f(current_char);\n        return 0;\n      }\n      index = (ulong)value;\n      while (iteration_count = count + -1, loop_condition = count != 0, count = iteration_count, loop_condition) {\n        temp_buffer[0] = *(undefined8 *)(*(long *)(input + 0x20) + index * 0x10);\n        current_char = FUN_0010d7d4(input,temp_buffer,output,&index,&constant);\n        if (current_char == '\\0') {\n          return 0;\n        }\n      }\n    }\n    else {\n      current_char = FUN_0010d7d4(input,input_strings,output,&index,&constant);\n      if (current_char == '\\0') {\n        return 0;\n      }\n    }\n  }\n  if (output == (long *)0x0) {\n    if (current_char != 'e') goto LAB_0010d9fa;\n  }\n  else {\n    *(undefined8 *)(*output + (ulong)index * 8) = 0;\n    if (*current_char != 'e') goto LAB_0010d9fa;\n    *flag = 1;\n  }\n  current_char = current_char + 1;\n  *input_strings = current_char;\nLAB_0010d9fa:\n  return CONCAT71((int7)((ulong)current_char >> 8),1);\n}\n\n",
            "current_name": "parse_input_data_0010d882",
            "entrypoint": "0x0010d882",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010d882": "parse_input_data_0010d882",
                "bVar7": "loop_condition",
                "cVar3": "current_char",
                "iVar1": "iteration_count",
                "lVar4": "allocated_memory",
                "local_40": "temp_buffer",
                "local_44": "count",
                "local_48": "value",
                "local_4c": "constant",
                "local_50": "index",
                "param_1": "input",
                "param_2": "input_strings",
                "param_3": "output",
                "param_4": "flag",
                "pcVar2": "current_char",
                "pcVar5": "current_char",
                "uVar6": "index",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010da0b": {
            "additional_data": {
                "FUN_0010da0b": {
                    "allocate_and_fill_slot": 2,
                    "allocate_and_init_memory": 1,
                    "allocate_and_initialize": 1,
                    "allocate_and_initialize_data": 1,
                    "allocate_and_initialize_memory": 4,
                    "allocate_and_initialize_slot": 10,
                    "allocate_and_initialize_slots": 3,
                    "allocate_and_set_slot": 1,
                    "allocate_memory": 3,
                    "allocate_memory_for_slot": 2,
                    "allocate_slots": 1,
                    "create_or_update_slot": 1,
                    "create_slot": 1
                },
                "auVar7": {
                    "computed_address": 1,
                    "output": 1,
                    "result": 14,
                    "result_array": 1,
                    "return_value": 11,
                    "return_variable": 1,
                    "slot_ptr": 1
                },
                "bVar6": {
                    "b_var": 1,
                    "b_var6": 3,
                    "byte_value": 1,
                    "byte_var": 1,
                    "flag": 5,
                    "increment": 1,
                    "initialized": 1,
                    "is_negative": 1,
                    "is_zero": 1,
                    "loop_condition": 4,
                    "loop_counter": 1,
                    "loop_flag": 2,
                    "slot_flag": 1,
                    "temp": 1,
                    "temp_byte": 2,
                    "temp_var": 1,
                    "temp_var_2": 1,
                    "unused_byte": 1,
                    "zero_byte": 1,
                    "zero_flag": 1
                },
                "lVar3": {
                    "adjusted_slot_index": 1,
                    "inner_loop_counter": 1,
                    "loop_counter": 3,
                    "loop_index": 1,
                    "memory_offset": 1,
                    "neg_offset": 1,
                    "offset": 14,
                    "remaining_index": 1,
                    "remaining_slots": 1,
                    "slot_offset": 7
                },
                "lVar4": {
                    "count": 2,
                    "counter": 3,
                    "i": 1,
                    "inner_loop_counter": 1,
                    "l_var4": 4,
                    "loop_count": 1,
                    "loop_counter": 11,
                    "loop_counter_2": 2,
                    "offset2": 1,
                    "outer_loop_counter": 1,
                    "reset_loop_counter": 1,
                    "second_offset": 1,
                    "temp": 1,
                    "temp_index": 1
                },
                "param1": {
                    "slot_ptr": 1
                },
                "param2": {
                    "index": 1
                },
                "param3": {
                    "param3": 1
                },
                "param4": {
                    "param4": 1
                },
                "param_1": {
                    "data_ptr": 1,
                    "double_pointer_to_memory": 1,
                    "memory_block": 1,
                    "memory_ptr": 5,
                    "pointer": 1,
                    "ptr_to_ptr": 1,
                    "slot": 1,
                    "slot_array": 1,
                    "slot_list": 1,
                    "slot_list_pointer": 1,
                    "slot_list_ptr": 1,
                    "slot_pointer": 2,
                    "slot_ptr": 13
                },
                "param_2": {
                    "size": 1,
                    "slot_index": 29
                },
                "param_3": {
                    "arg1": 2,
                    "arg3": 1,
                    "arg_1": 2,
                    "param3": 4,
                    "param_3": 20,
                    "unknown1": 1
                },
                "param_4": {
                    "arg2": 2,
                    "arg4": 1,
                    "arg_2": 2,
                    "param4": 4,
                    "param_4": 19,
                    "ptr_offset": 1,
                    "unknown2": 1
                },
                "plVar2": {
                    "allocated_memory": 3,
                    "allocated_ptr": 1,
                    "malloced_memory": 1,
                    "memory_ptr": 1,
                    "new_data_ptr": 1,
                    "new_memory": 1,
                    "new_memory_ptr": 2,
                    "new_slot": 15,
                    "new_slot_ptr": 3,
                    "slot": 1,
                    "slot_address": 1,
                    "slot_ptr": 1
                },
                "uVar1": {
                    "err_msg": 1,
                    "error_message": 18,
                    "error_msg": 7,
                    "message": 2,
                    "translated_error": 1
                },
                "uVar5": {
                    "index": 1,
                    "remaining_index": 4,
                    "remaining_slots": 13,
                    "temp": 1,
                    "temp_index": 4,
                    "temp_size": 1,
                    "temp_slot_index": 1,
                    "temp_var": 5,
                    "u_var5": 1
                }
            },
            "called": [
                "FUN_00119dd0",
                "dcgettext",
                "xmalloc"
            ],
            "calling": [
                "FUN_0010dac0",
                "FUN_00112a33"
            ],
            "code": "\nundefined  [16] allocate_and_initialize_slot_0010da0b(long **slot_ptr,ulong slot_index,undefined8 param_3,undefined8 param_4)\n\n{\n  undefined8 error_message;\n  long *new_slot;\n  long offset;\n  long loop_counter;\n  ulong remaining_slots;\n  byte flag;\n  undefined result [16];\n  \n  flag = 0;\n  remaining_slots = slot_index;\n  if ((long)slot_index < 0x3e90) {\n    for (; 0xf < (long)remaining_slots; remaining_slots = remaining_slots - 0x10) {\n      if (*slot_ptr == (long *)0x0) {\n        new_slot = (long *)xmalloc(0x88);\n        *slot_ptr = new_slot;\n        for (offset = 0x22; offset != 0; offset = offset + -1) {\n          *(undefined4 *)new_slot = 0;\n          new_slot = (long *)((long)new_slot + (ulong)flag * -8 + 4);\n        }\n      }\n      slot_ptr = (long **)*slot_ptr;\n    }\n    offset = (slot_index >> 4) * -0x10;\n    if ((long)slot_index < 0) {\n      offset = 0;\n    }\n    if (*slot_ptr == (long *)0x0) {\n      new_slot = (long *)xmalloc(0x88);\n      *slot_ptr = new_slot;\n      for (loop_counter = 0x22; loop_counter != 0; loop_counter = loop_counter + -1) {\n        *(undefined4 *)new_slot = 0;\n        new_slot = (long *)((long)new_slot + (ulong)flag * -8 + 4);\n      }\n    }\n    result._8_8_ = param_4;\n    result._0_8_ = *slot_ptr + slot_index + offset + 1;\n    return result;\n  }\n  error_message = dcgettext(0,\"Excessively large slot index: %lx\",5);\n                    \n  FUN_00119dd0(error_message,slot_index);\n}\n\n",
            "current_name": "allocate_and_initialize_slot_0010da0b",
            "entrypoint": "0x0010da0b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010da0b": "allocate_and_initialize_slot_0010da0b",
                "auVar7": "result",
                "bVar6": "flag",
                "lVar3": "offset",
                "lVar4": "loop_counter",
                "param_1": "slot_ptr",
                "param_2": "slot_index",
                "plVar2": "new_slot",
                "uVar1": "error_message",
                "uVar5": "remaining_slots"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010dac0": {
            "additional_data": {
                "FUNK_0010dac0": {
                    "parse_coff_type": 1
                },
                "FUN_0010dac0": {
                    "parse_coff_type": 21,
                    "parse_type": 2
                },
                "__ptr": {
                    "allocated_mem1": 1,
                    "local_ptr_1": 1,
                    "local_var8": 1,
                    "local_var_ptr_1": 1,
                    "local_variable_8": 1,
                    "malloc_1": 1,
                    "malloc_ptr1": 1,
                    "name": 1,
                    "pointer1": 1,
                    "pointer_variable_1": 1,
                    "ptr1": 9,
                    "ptr2": 1,
                    "ptr_1": 1,
                    "ptr_local_4": 1,
                    "ptr_var1": 1,
                    "ptr_var_3": 1,
                    "temp_ptr1": 2,
                    "temp_ptr_2": 1,
                    "temp_var_8": 1,
                    "type_name": 1,
                    "type_names": 1
                },
                "__ptr_00": {
                    "allocated_mem2": 1,
                    "aux_data": 1,
                    "local_ptr_2": 1,
                    "local_var9": 1,
                    "local_var_ptr_2": 1,
                    "local_variable_9": 1,
                    "malloc_2": 1,
                    "malloc_ptr2": 1,
                    "pointer2": 1,
                    "pointer_variable_2": 1,
                    "ptr2": 9,
                    "ptr3": 1,
                    "ptr_2": 1,
                    "ptr_local_5": 1,
                    "ptr_var2": 1,
                    "ptr_var_4": 1,
                    "temp_ptr2": 2,
                    "temp_ptr_3": 1,
                    "temp_var_9": 1,
                    "type_offset": 1,
                    "type_sizes": 1
                },
                "bVar8": {
                    "b_var8": 1,
                    "bit_count": 1,
                    "bit_offset": 1,
                    "bit_value": 1,
                    "byte_val": 2,
                    "byte_value": 1,
                    "byte_var": 5,
                    "byte_var8": 1,
                    "byte_variable": 1,
                    "local_byte": 1,
                    "local_var10": 1,
                    "local_var_8": 1,
                    "local_variable_10": 1,
                    "mask": 1,
                    "shift_amount": 1,
                    "temp2": 1,
                    "temp6": 1,
                    "temp8": 1,
                    "temp_byte": 1,
                    "temp_var8": 1,
                    "temp_var_10": 1,
                    "temp_var_5": 1,
                    "type_shift": 2,
                    "var8": 1
                },
                "cVar2": {
                    "char_var": 2,
                    "char_variable": 1,
                    "condition_variable": 1,
                    "is_valid": 1,
                    "local_var2": 1,
                    "local_var_2": 2,
                    "local_variable_2": 1,
                    "result": 2,
                    "result2": 1,
                    "status": 5,
                    "success": 2,
                    "temp": 1,
                    "temp1": 1,
                    "temp2": 2,
                    "temp_char": 1,
                    "temp_var2": 2,
                    "temp_var_1": 1,
                    "temp_var_2": 1,
                    "var2": 2
                },
                "iVar9": {
                    "count": 4,
                    "counter": 3,
                    "i_var": 1,
                    "i_var9": 1,
                    "index": 1,
                    "int_val": 1,
                    "int_var": 5,
                    "integer_variable": 1,
                    "iteration_count": 1,
                    "local_var11": 1,
                    "local_var_9": 2,
                    "local_variable_11": 1,
                    "loop_var": 1,
                    "temp7": 1,
                    "temp9": 1,
                    "temp_int": 1,
                    "temp_var9": 1,
                    "temp_var_11": 1,
                    "temp_var_6": 1,
                    "var9": 1
                },
                "lVar1": {
                    "code_variable": 1,
                    "coff_type_entry": 1,
                    "local_var1": 1,
                    "local_var_1": 2,
                    "local_variable_1": 1,
                    "ptr_local_2": 1,
                    "result": 5,
                    "result1": 2,
                    "result_1": 1,
                    "return_value1": 1,
                    "symbol_entry": 2,
                    "symbol_table_entry": 1,
                    "temp1": 2,
                    "temp_result": 1,
                    "temp_var1": 2,
                    "temp_var_1": 1,
                    "type_entry": 1,
                    "value": 2,
                    "var1": 2
                },
                "lVar12": {
                    "current_index": 1,
                    "i": 1,
                    "index": 7,
                    "local_var14": 1,
                    "local_var_12": 2,
                    "local_variable_14": 1,
                    "long_val": 1,
                    "long_var": 1,
                    "long_variable": 1,
                    "loop_counter": 1,
                    "loop_var": 1,
                    "ptr_local_3": 1,
                    "result2": 1,
                    "result7": 2,
                    "temp10": 1,
                    "temp12": 1,
                    "temp_long2": 1,
                    "temp_var12": 1,
                    "temp_var7": 1,
                    "temp_var_14": 1,
                    "temp_var_8": 1,
                    "var12": 1
                },
                "lVar5": {
                    "local_var5": 1,
                    "local_var_5": 2,
                    "local_variable_5": 1,
                    "ptr_local": 1,
                    "result": 8,
                    "result1": 1,
                    "result4": 1,
                    "result5": 1,
                    "result_2": 1,
                    "result_handle": 1,
                    "return_value": 3,
                    "return_value2": 1,
                    "temp4": 1,
                    "temp_result": 1,
                    "temp_var5": 2,
                    "temp_var_5": 1,
                    "value": 1,
                    "var5": 2
                },
                "local_47": {
                    "byte_value": 2,
                    "byte_var": 2,
                    "byte_var1": 1,
                    "byte_var_2": 2,
                    "byte_variable_2": 1,
                    "local_47": 1,
                    "local_byte": 8,
                    "local_byte_1": 3,
                    "local_byte_2": 1,
                    "local_var19": 1,
                    "local_var2": 1,
                    "local_var_2": 1,
                    "loop_count": 1,
                    "loop_var_2": 1,
                    "size": 1,
                    "specifier": 1,
                    "temp17": 1,
                    "var2": 1
                },
                "local_48": {
                    "char_value": 1,
                    "char_var1": 1,
                    "char_var_2": 2,
                    "char_variable_2": 1,
                    "data": 1,
                    "flag": 2,
                    "local_48": 1,
                    "local_char": 9,
                    "local_char_1": 3,
                    "local_var1": 1,
                    "local_var18": 1,
                    "local_var_1": 1,
                    "loop_flag": 1,
                    "loop_var_1": 1,
                    "switch_case": 1,
                    "temp16": 1,
                    "type_tag": 1,
                    "var1": 1
                },
                "local_68": {
                    "buffer": 6,
                    "local_arr_1": 1,
                    "local_array": 6,
                    "local_array1": 3,
                    "local_array_1": 2,
                    "local_buffer": 3,
                    "local_buffer_1": 1,
                    "local_string_1": 1,
                    "sym_entry_buffer": 1,
                    "symbol_entry": 1,
                    "type_code_msg": 1,
                    "type_name_buffer": 1,
                    "type_string": 1,
                    "undefined16_arr": 1,
                    "undefined_arr": 1
                },
                "param_1": {
                    "arg1": 5,
                    "binary": 1,
                    "binary_ptr": 1,
                    "coff_data": 4,
                    "coff_file": 4,
                    "coff_handle": 2,
                    "coff_header": 1,
                    "coff_ptr": 1,
                    "coff_type_ptr": 1,
                    "func_param_1": 1,
                    "input1": 1,
                    "input_file": 1,
                    "input_param": 3,
                    "input_param_1": 2,
                    "input_pointer": 1,
                    "param1": 1,
                    "param_0": 1
                },
                "param_2": {
                    "arg2": 5,
                    "array_param": 1,
                    "coff_base_ptr": 1,
                    "coff_header": 2,
                    "coff_symbol_table": 1,
                    "coff_syms": 1,
                    "data_pointer": 1,
                    "func_param_2": 1,
                    "input2": 1,
                    "input_param_2": 2,
                    "param2": 1,
                    "param_array": 1,
                    "ptr_param": 2,
                    "records": 1,
                    "section_headers": 1,
                    "symbol_data": 1,
                    "symbol_table": 5,
                    "symbol_table_ptr": 1,
                    "symbols": 1,
                    "type_ptr": 1
                },
                "param_3": {
                    "abfd": 1,
                    "arg3": 5,
                    "coff_ptr": 1,
                    "coff_scn": 1,
                    "context": 1,
                    "data_section": 1,
                    "file_ptr": 1,
                    "func_param_3": 1,
                    "input3": 1,
                    "input_param_3": 2,
                    "length_param": 1,
                    "output_context": 2,
                    "param1": 1,
                    "param3": 1,
                    "param_context": 1,
                    "param_ptr": 1,
                    "section_header": 1,
                    "size_param": 2,
                    "symbol_table": 2,
                    "type_data": 1,
                    "type_section": 1,
                    "type_table": 2
                },
                "param_4": {
                    "arg4": 5,
                    "byte_order": 1,
                    "file": 1,
                    "func_param_4": 1,
                    "input4": 1,
                    "input_param_4": 2,
                    "msg": 1,
                    "param2": 1,
                    "param4": 1,
                    "param_4": 8,
                    "param_resource": 1,
                    "section": 1,
                    "section_table": 1,
                    "symbol_table": 1,
                    "type_ptr": 1,
                    "type_table": 1,
                    "undefined8_param": 2,
                    "undefined_param": 1
                },
                "param_5": {
                    "arg5": 3,
                    "func_param_5": 1,
                    "input5": 1,
                    "input_param_5": 2,
                    "mask_param": 1,
                    "param3": 1,
                    "param5": 1,
                    "param_type": 1,
                    "type_code": 19,
                    "uint_param": 1
                },
                "param_6": {
                    "arg6": 3,
                    "aux_arr_ptr": 1,
                    "aux_data": 1,
                    "aux_symbols": 2,
                    "buffer_param": 1,
                    "coff_name": 1,
                    "coff_type": 1,
                    "func_param_6": 1,
                    "input6": 1,
                    "input_param_6": 2,
                    "param4": 1,
                    "param6": 1,
                    "param_data": 1,
                    "ptr": 1,
                    "ptr_buffer": 1,
                    "ptr_param_2": 1,
                    "string_table": 1,
                    "symbol": 1,
                    "symbol_table": 2,
                    "type_aux": 1,
                    "type_info": 3,
                    "type_name": 1,
                    "type_ptr": 1,
                    "type_string_ptr": 1
                },
                "param_7": {
                    "arg7": 3,
                    "char_param": 1,
                    "flag": 6,
                    "flag_param": 1,
                    "func_param_7": 1,
                    "input7": 1,
                    "input_param_7": 2,
                    "is_signed": 1,
                    "is_unsigned": 5,
                    "param5": 1,
                    "param7": 1,
                    "param_7": 4,
                    "param_flag": 1,
                    "parse": 1,
                    "parse_flags": 1,
                    "parse_only": 1
                },
                "param_8": {
                    "arg8": 4,
                    "bfd": 1,
                    "context": 1,
                    "error_message": 1,
                    "error_msg": 1,
                    "func_param_8": 1,
                    "function_name": 1,
                    "input8": 1,
                    "input_param_8": 2,
                    "language": 1,
                    "message_catalog": 1,
                    "output_file": 1,
                    "param6": 1,
                    "param8": 1,
                    "param_8": 6,
                    "param_translation": 1,
                    "printer": 1,
                    "target": 1,
                    "translation_domain": 2,
                    "undefined8_param_2": 1,
                    "undefined_param_2": 1
                },
                "pcVar10": {
                    "char_pointer_var": 1,
                    "char_ptr": 1,
                    "char_ptr_var": 1,
                    "char_var": 1,
                    "local_var12": 1,
                    "local_var_10": 2,
                    "local_variable_12": 1,
                    "pc_var10": 1,
                    "pointer_variable_3": 1,
                    "ptr_char_var": 1,
                    "str": 1,
                    "str_val": 1,
                    "str_var": 1,
                    "string_var": 1,
                    "temp10": 1,
                    "temp3": 1,
                    "temp8": 1,
                    "temp_char_ptr": 1,
                    "temp_ptr_4": 1,
                    "temp_var10": 1,
                    "temp_var_12": 1,
                    "type": 2,
                    "type_name": 2,
                    "type_str": 1,
                    "type_string": 1,
                    "var10": 1,
                    "var_name": 1
                },
                "plVar7": {
                    "local_var7": 1,
                    "local_var_7": 2,
                    "local_variable_7": 1,
                    "pl_var7": 1,
                    "pointer": 1,
                    "pointer_local": 1,
                    "pointer_var": 1,
                    "pointer_variable": 2,
                    "ptr": 1,
                    "ptr1": 1,
                    "ptr_array": 1,
                    "ptr_data": 1,
                    "ptr_temp": 1,
                    "ptr_var": 2,
                    "result_pointer": 1,
                    "symbol": 1,
                    "temp6": 1,
                    "temp7": 1,
                    "temp_long_ptr": 1,
                    "temp_pointer": 1,
                    "temp_ptr_1": 1,
                    "temp_var7": 1,
                    "temp_var_7": 1,
                    "type_info_ptr": 1,
                    "var7": 2
                },
                "uVar11": {
                    "bit_mask": 1,
                    "bitmask": 1,
                    "local_var13": 1,
                    "local_var_11": 2,
                    "local_variable_13": 1,
                    "mask": 2,
                    "masked_value": 1,
                    "result6": 1,
                    "temp11": 1,
                    "temp9": 1,
                    "temp_mask": 1,
                    "temp_ulong2": 1,
                    "temp_var11": 1,
                    "temp_var_13": 1,
                    "temp_var_7": 1,
                    "type_mask": 2,
                    "u_var11": 1,
                    "ulong_val": 1,
                    "ulong_value": 1,
                    "ulong_var": 5,
                    "ulong_variable": 1,
                    "unsigned_long_var": 1,
                    "var11": 1
                },
                "uVar13": {
                    "bit_shifted_1": 1,
                    "code_1": 1,
                    "computed_type": 1,
                    "filtered_type_code": 1,
                    "local_var15": 1,
                    "local_var_13": 2,
                    "local_variable_15": 1,
                    "result8": 2,
                    "shifted_code": 1,
                    "shifted_type_code": 2,
                    "shifted_value": 1,
                    "temp11": 1,
                    "temp13": 1,
                    "temp7": 1,
                    "temp_1": 1,
                    "temp_code": 1,
                    "temp_uint2": 1,
                    "temp_var13": 1,
                    "temp_var_15": 1,
                    "temp_var_9": 1,
                    "u_var13": 1,
                    "uint_var": 2,
                    "uint_var1": 1,
                    "uint_variable": 1,
                    "unsigned_int_var": 1,
                    "var13": 1
                },
                "uVar14": {
                    "code_2": 1,
                    "count": 2,
                    "i": 1,
                    "local_var16": 1,
                    "local_var_14": 2,
                    "local_variable_16": 1,
                    "loop_var_uint": 1,
                    "result9": 2,
                    "temp12": 1,
                    "temp14": 1,
                    "temp8": 1,
                    "temp_2": 1,
                    "temp_len": 1,
                    "temp_uint3": 1,
                    "temp_var14": 1,
                    "temp_var_10": 1,
                    "temp_var_16": 1,
                    "u_var14": 1,
                    "uint_var2": 1,
                    "uint_var_2": 1,
                    "uint_variable_2": 1,
                    "unsigned_int_var_2": 1,
                    "ushort_count": 1,
                    "ushort_value": 3,
                    "var14": 1
                },
                "uVar15": {
                    "code_3": 1,
                    "default_value": 1,
                    "float_param": 1,
                    "local_var17": 1,
                    "local_var_15": 2,
                    "local_variable_17": 1,
                    "result": 2,
                    "result10": 2,
                    "temp": 1,
                    "temp13": 1,
                    "temp15": 1,
                    "temp9": 1,
                    "temp_3": 1,
                    "temp_ulong3": 1,
                    "temp_var15": 1,
                    "temp_var_11": 1,
                    "temp_var_17": 1,
                    "u_var15": 2,
                    "ulong_value": 1,
                    "undefined_var": 1,
                    "undefined_var15": 1,
                    "undefined_var3": 1,
                    "undefined_var_4": 1,
                    "undefined_variable": 1,
                    "unused": 1,
                    "var15": 1
                },
                "uVar3": {
                    "bfd_error_code": 3,
                    "error": 1,
                    "error_code": 5,
                    "error_flag": 1,
                    "local_var3": 1,
                    "local_var_3": 2,
                    "local_variable_3": 1,
                    "result2": 1,
                    "result3": 1,
                    "temp2": 1,
                    "temp3": 2,
                    "temp_uint": 1,
                    "temp_var3": 2,
                    "temp_var_2": 1,
                    "temp_var_3": 1,
                    "undefined_var": 2,
                    "undefined_var3": 1,
                    "undefined_variable": 1,
                    "var3": 2
                },
                "uVar4": {
                    "bfd_error_message": 1,
                    "errmsg": 1,
                    "error_message": 3,
                    "local_var4": 1,
                    "local_var_4": 2,
                    "local_variable_4": 1,
                    "message": 1,
                    "param": 1,
                    "result": 3,
                    "result3": 1,
                    "result4": 1,
                    "result_variable": 1,
                    "temp3": 1,
                    "temp4": 2,
                    "temp_ulong": 1,
                    "temp_var4": 2,
                    "temp_var_3": 1,
                    "temp_var_4": 1,
                    "undefined_var1": 1,
                    "undefined_var4": 1,
                    "undefined_var_2": 1,
                    "var4": 2
                },
                "uVar6": {
                    "local_var6": 1,
                    "local_var_6": 2,
                    "local_variable_6": 1,
                    "nested_result": 1,
                    "new_result": 1,
                    "result": 3,
                    "result5": 1,
                    "result6": 1,
                    "return_value": 1,
                    "temp5": 2,
                    "temp6": 1,
                    "temp_result2": 1,
                    "temp_var6": 2,
                    "temp_var_4": 1,
                    "temp_var_6": 1,
                    "type_size": 1,
                    "u_var6": 1,
                    "undefined_var2": 1,
                    "undefined_var6": 1,
                    "undefined_var_3": 1,
                    "undefined_variable": 1,
                    "var6": 2
                }
            },
            "called": [
                "dcgettext",
                "FUN_00113df2",
                "free",
                "FUN_0010da0b",
                "FUN_00113ce0",
                "bfd_coff_get_syment",
                "FUN_00113da9",
                "bfd_get_error",
                "FUN_0010e07c",
                "FUN_00113dfe",
                "FUN_00113d6e",
                "FUN_00113e17",
                "FUN_00113e23",
                "xrealloc",
                "bfd_errmsg",
                "FUN_00119ed0",
                "FUN_0010c218",
                "FUN_00113d3a",
                "xmalloc",
                "FUN_0010dac0",
                "FUN_00113c43"
            ],
            "calling": [
                "FUN_0010dac0",
                "FUN_0010554f",
                "FUN_0010e07c"
            ],
            "code": "\nlong parse_coff_type_0010dac0(long arg1,long *symbol_table,long arg3,undefined8 param_4,uint type_code,\n                 long *type_info,char flag,undefined8 param_8)\n\n{\n  long result;\n  char status;\n  undefined4 error_code;\n  undefined8 result;\n  long result;\n  undefined8 result;\n  long *local_var_7;\n  void *ptr1;\n  void *ptr2;\n  byte byte_var;\n  int int_var;\n  char *type;\n  ulong ulong_var;\n  long index;\n  uint uint_var;\n  uint ushort_value;\n  undefined8 u_var15;\n  undefined buffer [32];\n  char local_char;\n  byte local_byte;\n  \n  result = *(long *)(arg1 + 0x110);\n  if ((~*(uint *)(result + 0x38) & type_code) != 0) {\n    uint_var = (int)type_code >> ((byte)*(undefined4 *)(result + 0x44) & 0x1f);\n    ulong_var = (ulong)(type_code & *(uint *)(result + 0x40));\n    byte_var = (byte)*(undefined4 *)(result + 0x3c);\n    uint_var = (uint_var ^ type_code) & *(uint *)(result + 0x38) ^ uint_var;\n    if (ulong_var == 1L << (byte_var & 0x3f)) {\n      result = parse_coff_type_0010dac0(arg1,symbol_table,arg3,param_4,uint_var,type_info,flag,param_8);\n      result = FUN_00113d3a(result);\n      return result;\n    }\n    if (ulong_var != 2L << (byte_var & 0x3f)) {\n      if (ulong_var != 3L << (byte_var & 0x3f)) {\n        result = dcgettext(0,\"parse_coff_type_0010dac0: Bad type code 0x%x\",5,*(undefined4 *)(result + 0x3c),\n                          uint_var);\n        FUN_00119ed0(result,type_code);\n        return 0;\n      }\n      ushort_value = 0;\n      if (type_info != (long *)0x0) {\n        ushort_value = (uint)*(ushort *)(type_info + 2);\n        local_var_7 = type_info + 2;\n        for (int_var = 0; (*(short *)local_var_7 != 0 && (int_var != 3)); int_var = int_var + 1) {\n          *(short *)local_var_7 = *(short *)((long)local_var_7 + 2);\n          local_var_7 = (long *)((long)local_var_7 + 2);\n        }\n        *(short *)local_var_7 = 0;\n      }\n      u_var15 = 0;\n      result = param_8;\n      result = parse_coff_type_0010dac0(arg1,symbol_table,arg3,param_4,uint_var,type_info,0);\n      result = *(long *)(arg3 + 0x28);\n      if (result == 0) {\n        result = FUN_00113dfe(4,0,u_var15,result);\n        result = FUN_0010c218(param_8,\"int\",result);\n        *(long *)(arg3 + 0x28) = result;\n      }\n      result = FUN_00113c43(result,result,0,(long)(int)(ushort_value - 1),0);\n      return result;\n    }\n    result = parse_coff_type_0010dac0(arg1,symbol_table,arg3,param_4,uint_var,type_info,flag,param_8);\n    result = FUN_00113ce0(result,0,0);\n    return result;\n  }\n  if ((type_info != (long *)0x0) && (0 < *type_info)) {\n    local_var_7 = (long *)FUN_0010da0b(arg3);\n    if (*local_var_7 != 0) {\n      return *local_var_7;\n    }\n    result = FUN_00113e23(local_var_7,0);\n    return result;\n  }\n  if (flag == '\\0') {\n    type_info = (long *)0x0;\n  }\n  if (0x10 < type_code) {\n    result = FUN_00113e17();\n    return result;\n  }\n  result = *(long *)(arg3 + 8 + (long)(int)type_code * 8);\n  if (result != 0) {\n    return result;\n  }\n  switch(type_code) {\n  default:\n    result = FUN_00113e17();\n    type = \"void\";\n    break;\n  case 2:\n    result = FUN_00113dfe(1,0);\n    type = \"char\";\n    break;\n  case 3:\n    result = FUN_00113dfe(2,0);\n    type = \"short\";\n    break;\n  case 4:\n    result = FUN_00113dfe(4,0);\n    type = \"int\";\n    break;\n  case 5:\n    result = FUN_00113dfe(4,0);\n    type = \"long\";\n    break;\n  case 6:\n    result = FUN_00113df2(4);\n    type = \"float\";\n    break;\n  case 7:\n    result = FUN_00113df2(8);\n    type = \"double\";\n    break;\n  case 8:\n    if (type_info == (long *)0x0) {\n      result = FUN_00113da9(1,0,0);\n      goto LAB_0010e046;\n    }\n    result = 8;\n    goto LAB_0010de7a;\n  case 9:\n    if (type_info == (long *)0x0) {\n      result = FUN_00113da9(0,0,0);\n      goto LAB_0010e046;\n    }\n    result = 9;\nLAB_0010de7a:\n    result = FUN_0010e07c(arg1,symbol_table,arg3,result,type_info,param_8);\nLAB_0010e046:\n    local_var_7 = (long *)FUN_0010da0b(arg3,param_4);\n    *local_var_7 = result;\n    return result;\n  case 10:\n    if (type_info == (long *)0x0) {\n      result = FUN_00113d6e(0,0);\n    }\n    else {\n      result = type_info[3];\n      ptr1 = (void *)xmalloc(0x50);\n      ptr2 = (void *)xmalloc(0x50);\n      index = 0;\n      do {\n        while( true ) {\n          if ((result <= symbol_table[3]) || (symbol_table[1] <= symbol_table[2])) goto LAB_0010e032;\n          int_var = (int)index;\n          result = *(long *)(*symbol_table + symbol_table[2] * 8);\n          status = bfd_coff_get_syment(arg1,result,buffer);\n          index = (long)int_var;\n          if (status == '\\0') {\n            error_code = bfd_get_error();\n            result = bfd_errmsg(error_code);\n            result = dcgettext(0,\"bfd_coff_get_syment failed: %s\",5);\n            FUN_00119ed0(result,result);\n            free(ptr1);\n            free(ptr2);\n            result = 0;\n            goto LAB_0010e046;\n          }\n          symbol_table[2] = symbol_table[2] + 1;\n          symbol_table[3] = (ulong)local_byte + 1 + symbol_table[3];\n          if (local_char != '\\x10') break;\n          if ((int)type_code <= int_var + 1) {\n            type_code = type_code + 10;\n            ptr1 = (void *)xrealloc(ptr1);\n            ptr2 = (void *)xrealloc(ptr2,(long)(int)type_code << 3);\n          }\n          index = *(long *)(result + 0x20);\n          *(undefined8 *)((long)ptr1 + (long)int_var * 8) = *(undefined8 *)(result + 8);\n          *(long *)((long)ptr2 + (long)int_var * 8) =\n               *(long *)(result + 0x10) + *(long *)(index + 0x30);\n          index = (long)(int_var + 1);\n        }\n      } while (local_char != 'f');\nLAB_0010e032:\n      *(undefined8 *)((long)ptr1 + index * 8) = 0;\n      result = FUN_00113d6e(ptr1,ptr2);\n    }\n    goto LAB_0010e046;\n  case 0xb:\n    result = FUN_00113e17();\n    goto LAB_0010e065;\n  case 0xc:\n    result = FUN_00113dfe(1,1);\n    type = \"unsigned char\";\n    break;\n  case 0xd:\n    result = FUN_00113dfe(2,1);\n    type = \"unsigned short\";\n    break;\n  case 0xe:\n    result = FUN_00113dfe(4,1);\n    type = \"unsigned int\";\n    break;\n  case 0xf:\n    result = FUN_00113dfe(4,1);\n    type = \"unsigned long\";\n    break;\n  case 0x10:\n    result = FUN_00113df2(0xc);\n    type = \"long double\";\n  }\n  result = FUN_0010c218(param_8,type,result);\nLAB_0010e065:\n  *(long *)(arg3 + 8 + (long)(int)type_code * 8) = result;\n  return result;\n}\n\n",
            "current_name": "parse_coff_type_0010dac0",
            "entrypoint": "0x0010dac0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010dac0": "parse_coff_type_0010dac0",
                "__ptr": "ptr1",
                "__ptr_00": "ptr2",
                "bVar8": "byte_var",
                "cVar2": "status",
                "iVar9": "int_var",
                "lVar1": "result",
                "lVar12": "index",
                "lVar5": "result",
                "local_47": "local_byte",
                "local_48": "local_char",
                "local_68": "buffer",
                "param_1": "arg1",
                "param_2": "symbol_table",
                "param_3": "arg3",
                "param_5": "type_code",
                "param_6": "type_info",
                "param_7": "flag",
                "pcVar10": "type",
                "plVar7": "local_var_7",
                "uVar11": "ulong_var",
                "uVar13": "uint_var",
                "uVar14": "ushort_value",
                "uVar15": "u_var15",
                "uVar3": "error_code",
                "uVar4": "result",
                "uVar6": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010e07c": {
            "additional_data": {
                "FUN_0010dac0": {
                    "reverse_binary_data": 1
                },
                "FUN_0010e07c": {
                    "extract_symbols": 3,
                    "parse_binary_file": 1,
                    "parse_binary_function": 1,
                    "process_binary_data": 2,
                    "process_binary_function": 1,
                    "process_data": 1
                },
                "FUN_00113da9": {
                    "process_output": 1
                },
                "__ptr": {
                    "allocated_memory": 8,
                    "allocated_memory_array": 1,
                    "allocated_memory_ptr": 1,
                    "buffer": 1,
                    "data_buffer": 1,
                    "dynamic_array": 3,
                    "dynamic_mem": 1,
                    "dynamic_memory": 2,
                    "entry_buffer": 1,
                    "malloc_ptr": 1,
                    "mapped_pointers": 1,
                    "memory_ptr": 1,
                    "parsed_symbols": 1,
                    "result_array": 1,
                    "symbol_array": 2,
                    "symbol_data": 1,
                    "symbol_list": 1,
                    "symbol_table": 2,
                    "var_a6": 1
                },
                "bfd_coff_get_auxent": {
                    "coff_get_aux_entry": 1
                },
                "bfd_coff_get_syment": {
                    "coff_get_symbol_entry": 1
                },
                "bfd_get_error": {
                    "get_bfd_error": 1
                },
                "cVar4": {
                    "char1": 1,
                    "char_result": 1,
                    "char_value": 1,
                    "char_var": 7,
                    "character_var": 2,
                    "coff_flag": 1,
                    "coff_syment_result": 1,
                    "error": 1,
                    "get_error": 1,
                    "result": 9,
                    "return_value": 2,
                    "status": 1,
                    "symbol": 1,
                    "symbol_result": 1,
                    "var_a4": 1
                },
                "free": {
                    "release_memory": 1
                },
                "iVar13": {
                    "address": 1,
                    "address_offset": 1,
                    "aux_value": 1,
                    "i_var1": 1,
                    "i_var13": 3,
                    "index2": 1,
                    "int_value1": 1,
                    "int_var": 2,
                    "int_var1": 2,
                    "int_var_1": 1,
                    "integer_var": 1,
                    "integer_var1": 1,
                    "loop_var5": 1,
                    "offset": 2,
                    "symbol_info": 1,
                    "symbol_size": 1,
                    "symbol_value": 2,
                    "temp_var1": 1,
                    "total": 1,
                    "val2": 1,
                    "value1": 1,
                    "value_4": 1,
                    "var_13": 1,
                    "var_a14": 1,
                    "variable2": 1
                },
                "iVar14": {
                    "allocated_memory": 1,
                    "array_size": 2,
                    "count_var": 1,
                    "counter": 1,
                    "entry_capacity": 1,
                    "i_var14": 1,
                    "i_var2": 1,
                    "initial_size": 1,
                    "int_value2": 1,
                    "int_var2": 3,
                    "int_var_2": 2,
                    "integer_var2": 1,
                    "iteration": 1,
                    "loop_var6": 1,
                    "loop_variable": 1,
                    "max_count": 1,
                    "max_index": 1,
                    "max_parsed_symbols": 1,
                    "max_symbols": 1,
                    "size": 2,
                    "symbol_capacity": 2,
                    "symbol_table_size": 1,
                    "symbol_table_size_increment": 1,
                    "temp_var2": 1,
                    "var_a15": 1
                },
                "lVar1": {
                    "first_long_var": 2,
                    "first_value": 1,
                    "first_var": 1,
                    "length": 4,
                    "length_var1": 2,
                    "local_var1": 1,
                    "loop_var1": 1,
                    "next_symbol_offset": 1,
                    "num_entries": 1,
                    "offset": 1,
                    "ptr1": 1,
                    "ptr_from_param_5_add_0x18": 1,
                    "symbol_offset": 1,
                    "symbol_size": 1,
                    "symbol_table_end": 1,
                    "symbol_table_entry": 2,
                    "symbol_table_offset": 2,
                    "symbol_table_size": 2,
                    "value1": 2,
                    "var1": 1,
                    "var_a1": 1,
                    "variable1": 1
                },
                "lVar12": {
                    "count": 1,
                    "counter": 1,
                    "counter_var": 1,
                    "current_long_index": 1,
                    "entry_count": 1,
                    "entry_index": 2,
                    "index": 8,
                    "l_var12": 1,
                    "loop_counter": 1,
                    "loop_var": 3,
                    "loop_var4": 1,
                    "num_allocated_structs": 1,
                    "parsed_symbol_index": 1,
                    "ptr4": 1,
                    "symbol_index": 4,
                    "symbol_table_entry_index": 1,
                    "var_a13": 1,
                    "variable4": 1
                },
                "lVar2": {
                    "address": 2,
                    "current_entry": 2,
                    "current_ptr": 1,
                    "element": 1,
                    "length_var2": 2,
                    "local_var2": 1,
                    "loop_var2": 1,
                    "ptr2": 1,
                    "ptr_from_star_param_2_add_param_2_mul_8": 1,
                    "second_long_var": 2,
                    "second_value": 1,
                    "second_var": 1,
                    "symbol_address": 3,
                    "symbol_entry": 3,
                    "symbol_offset": 2,
                    "symbol_table_entry": 1,
                    "symbol_table_entry_address": 1,
                    "value2": 2,
                    "var2": 1,
                    "var_a2": 1,
                    "variable2": 1
                },
                "lVar3": {
                    "count": 3,
                    "counter": 1,
                    "current_symbol_index": 1,
                    "index_3": 1,
                    "length_var3": 2,
                    "local_var3": 1,
                    "loop_var3": 1,
                    "num_symbols": 3,
                    "param_2_add_3": 1,
                    "parsed_symbol_count": 1,
                    "processed_entries": 1,
                    "ptr3": 1,
                    "symbol_count": 3,
                    "symbol_index": 1,
                    "temp_var": 1,
                    "third_long_var": 2,
                    "third_value": 1,
                    "third_var": 1,
                    "value3": 2,
                    "var3": 1,
                    "var_a3": 1,
                    "variable3": 1
                },
                "local_56": {
                    "aux_data_offset": 1,
                    "aux_data_size": 1,
                    "aux_data_value": 1,
                    "aux_value": 1,
                    "aux_value2": 1,
                    "auxiliary_entry_value_3": 1,
                    "header": 1,
                    "local_56": 1,
                    "local_short": 2,
                    "local_short_var": 1,
                    "local_ushort": 1,
                    "local_var6b": 1,
                    "local_var8": 2,
                    "local_var_56": 4,
                    "section_flag": 1,
                    "section_index": 1,
                    "symbol_flags": 1,
                    "temp_local_var8": 1,
                    "ushort_value": 1,
                    "ushort_var": 2,
                    "ushort_variable": 1,
                    "value3": 1,
                    "value5": 1,
                    "value9": 1
                },
                "local_60": {
                    "array": 1,
                    "array3": 1,
                    "aux_buf": 1,
                    "aux_buffer": 3,
                    "aux_data_buffer": 4,
                    "auxent_buffer_array": 1,
                    "auxiliary_data": 1,
                    "auxiliary_entry_data_buffer": 1,
                    "auxiliary_info_array": 1,
                    "buffer2": 1,
                    "local_60": 1,
                    "local_arr_60": 1,
                    "local_array2": 3,
                    "local_array3": 1,
                    "local_array_2": 1,
                    "local_array_60": 1,
                    "local_buffer": 1,
                    "local_string3": 1,
                    "local_undefined3": 1,
                    "local_var_60": 2,
                    "other_buffer": 1,
                    "value8": 1
                },
                "local_67": {
                    "aux_data_present": 2,
                    "aux_data_size": 1,
                    "aux_size": 3,
                    "auxiliary_entry_value_2": 1,
                    "byte2": 3,
                    "byte_val2": 1,
                    "byte_var_2": 1,
                    "has_aux_data": 1,
                    "local_67": 1,
                    "local_byte2": 3,
                    "local_byte_var2": 1,
                    "local_var7": 2,
                    "local_var7a": 1,
                    "local_var_67": 4,
                    "next_symbol_flag": 1,
                    "record_count": 1,
                    "syment_size": 1,
                    "temp_local_var7": 1,
                    "value7": 1
                },
                "local_68": {
                    "aux_count": 1,
                    "aux_data_offset": 1,
                    "aux_data_type": 2,
                    "aux_type": 3,
                    "auxiliary_entry_value_1": 1,
                    "auxiliary_format": 1,
                    "byte1": 3,
                    "byte_val1": 1,
                    "byte_var_1": 1,
                    "local_68": 1,
                    "local_byte1": 3,
                    "local_byte_var1": 1,
                    "local_var6": 2,
                    "local_var8a": 1,
                    "local_var_68": 4,
                    "symbol_class": 1,
                    "temp_local_var6": 1,
                    "type": 1,
                    "value6": 1
                },
                "local_6a": {
                    "array2": 1,
                    "aux_data_size": 1,
                    "data_type": 1,
                    "flag": 1,
                    "flag2": 1,
                    "local_6a": 1,
                    "local_array2": 1,
                    "local_string2": 1,
                    "local_undefined2": 1,
                    "local_var2": 1,
                    "local_var4": 1,
                    "local_var5": 2,
                    "local_var6a": 1,
                    "local_var_2": 1,
                    "local_var_6a": 5,
                    "machine_type": 1,
                    "section": 1,
                    "section_index": 1,
                    "symbol_info": 1,
                    "symbol_type": 1,
                    "temp_local_var5": 1,
                    "token_2": 1,
                    "ushort_val": 1,
                    "value2": 1,
                    "value5": 1
                },
                "local_88": {
                    "array1": 1,
                    "aux_buffer": 1,
                    "buf": 1,
                    "buffer": 3,
                    "buffer_array": 1,
                    "char_array": 1,
                    "info": 1,
                    "local_88": 1,
                    "local_arr_88": 1,
                    "local_array": 2,
                    "local_array1": 3,
                    "local_array_88": 1,
                    "local_string1": 1,
                    "local_undefined": 1,
                    "local_var_88": 1,
                    "symbol_data": 1,
                    "symbol_data_buffer": 1,
                    "symbol_info": 1,
                    "symbol_name": 6,
                    "syment_buffer": 1
                },
                "local_a8": {
                    "entry1": 1,
                    "entry_low": 1,
                    "lo_part_a": 1,
                    "local1": 1,
                    "local_a8": 1,
                    "local_undefined4": 1,
                    "local_value1": 1,
                    "local_var": 3,
                    "local_var1": 4,
                    "local_var8": 1,
                    "local_var_a8": 6,
                    "local_variable1": 1,
                    "name_lower": 1,
                    "new_var1": 1,
                    "parsed_symbol_low_dword": 1,
                    "symbol_type": 1,
                    "temp_local_var1": 1,
                    "token_1": 1,
                    "value1": 2
                },
                "param_1": {
                    "arg1": 2,
                    "bfd_handle": 1,
                    "binary_file": 2,
                    "input_param": 3,
                    "input_parameter1": 1,
                    "input_value": 1,
                    "input_value1": 1,
                    "param": 2,
                    "param1": 6,
                    "param_1": 8,
                    "param_a": 2,
                    "param_pointer": 1,
                    "reversed_param_1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "array": 3,
                    "array_param": 1,
                    "array_pointer": 1,
                    "buffer": 1,
                    "coff_symbols": 1,
                    "data_array": 2,
                    "indices": 1,
                    "input_array": 1,
                    "input_parameter2": 1,
                    "long_array": 1,
                    "long_array_param": 1,
                    "offsets": 1,
                    "param2": 4,
                    "param_2": 2,
                    "param_2_array": 1,
                    "param_b": 2,
                    "pointer_array": 1,
                    "reversed_param_2": 1,
                    "symbol_table": 4
                },
                "param_3": {
                    "another_value": 1,
                    "arg3": 2,
                    "input_param_2": 1,
                    "input_parameter3": 1,
                    "input_value2": 1,
                    "obj_file": 1,
                    "output_buffer": 1,
                    "param3": 6,
                    "param_3": 10,
                    "param_c": 2,
                    "param_element": 1,
                    "param_size": 1,
                    "ptr_param": 1,
                    "reversed_param_3": 1,
                    "target": 1
                },
                "param_4": {
                    "arg4": 2,
                    "flag": 2,
                    "input_parameter4": 1,
                    "input_value3": 1,
                    "int_param": 2,
                    "integer_value": 1,
                    "param4": 6,
                    "param_4": 10,
                    "param_d": 2,
                    "param_integer": 1,
                    "reversed_param_4": 1,
                    "symbol_count": 1,
                    "value": 1
                },
                "param_5": {
                    "arg5": 2,
                    "coff_header": 1,
                    "info_offset": 1,
                    "input_parameter5": 1,
                    "input_value4": 1,
                    "long_param": 2,
                    "long_value": 1,
                    "offset": 1,
                    "param5": 6,
                    "param_5": 9,
                    "param_e": 2,
                    "param_long": 1,
                    "reversed_param_5": 1,
                    "section_offset": 1,
                    "symbol_table_offset": 1
                },
                "param_6": {
                    "another_input": 1,
                    "arg6": 2,
                    "custom_data": 1,
                    "input_param_3": 1,
                    "input_parameter6": 1,
                    "input_value5": 1,
                    "output_param": 1,
                    "param6": 7,
                    "param_6": 12,
                    "param_f": 2,
                    "param_pointer_2": 1,
                    "reversed_param_6": 1
                },
                "pcVar9": {
                    "char_pointer": 1,
                    "char_ptr": 2,
                    "error_fmt_str": 1,
                    "error_format": 2,
                    "error_message": 8,
                    "error_message_format": 2,
                    "error_message_template": 1,
                    "error_msg": 5,
                    "error_msg_format": 2,
                    "error_msg_string": 1,
                    "error_msg_var": 1,
                    "error_string": 1,
                    "error_template": 1,
                    "pc_var9": 1,
                    "string_var": 1,
                    "var_a10": 1
                },
                "puVar10": {
                    "aux_buffer": 1,
                    "aux_data": 10,
                    "aux_data_ptr": 1,
                    "aux_info": 1,
                    "auxent_pointer": 1,
                    "auxent_var": 2,
                    "auxiliary_data": 3,
                    "auxiliary_entry_data": 1,
                    "auxiliary_info_ptr": 1,
                    "auxiliary_var": 1,
                    "loc_60_ptr": 1,
                    "local_ptr": 1,
                    "pointer_var2": 1,
                    "pu_var10": 1,
                    "undefined_ptr": 2,
                    "unknown_pointer": 1,
                    "var_10": 1,
                    "var_a11": 1
                },
                "puVar8": {
                    "allocated_array": 1,
                    "allocated_memory": 2,
                    "allocated_memory_ptr_2": 1,
                    "allocated_memory_var": 1,
                    "allocated_struct": 1,
                    "aux_data": 1,
                    "aux_entry": 2,
                    "auxiliary_entry": 1,
                    "data_ptr": 1,
                    "dynamic_array": 2,
                    "malloced_data": 2,
                    "malloced_memory": 1,
                    "new_buffer": 2,
                    "new_symbol": 1,
                    "new_symbol_table_entry": 1,
                    "parsed_symbol_ptr": 1,
                    "pointer_var": 3,
                    "pu_var8": 1,
                    "symbol": 1,
                    "symbol_entry": 2,
                    "undefined4_ptr": 2,
                    "var_a9": 1
                },
                "uStack_9c": {
                    "address_upper1": 1,
                    "aux_entry_high": 1,
                    "entry2_upper": 1,
                    "hi_part_b": 1,
                    "local4": 1,
                    "local_value4": 1,
                    "local_var3": 1,
                    "local_var4": 4,
                    "local_var5": 1,
                    "local_var_9c": 5,
                    "local_variable4": 1,
                    "new_var4": 1,
                    "parsed_symbol_result_high_dword": 1,
                    "symbol_func_high": 1,
                    "temp_local_var4": 1,
                    "u_stack_9c": 1,
                    "u_stack_var3": 1,
                    "undefined4_var_3": 1,
                    "undefined_val_9c": 1,
                    "unsigned_stack_var3": 1,
                    "value4": 2
                },
                "uStack_a0": {
                    "address_lower": 1,
                    "aux_entry_low": 1,
                    "entry2": 1,
                    "lo_part_b": 1,
                    "local3": 1,
                    "local_value3": 1,
                    "local_var2": 1,
                    "local_var3": 4,
                    "local_var6": 1,
                    "local_var_a0": 5,
                    "local_variable3": 1,
                    "new_var3": 1,
                    "parsed_symbol_result_low_dword": 1,
                    "symbol_func_low": 1,
                    "temp_local_var3": 1,
                    "u_stack_a0": 1,
                    "u_stack_var2": 1,
                    "undefined4_var_2": 1,
                    "undefined_val_a0": 1,
                    "unsigned_stack_var2": 1,
                    "value3": 2
                },
                "uStack_a4": {
                    "entry1_upper": 1,
                    "entry_high": 1,
                    "hi_part_a": 1,
                    "local2": 1,
                    "local_value2": 1,
                    "local_var1": 1,
                    "local_var2": 4,
                    "local_var7": 1,
                    "local_var_a4": 5,
                    "local_variable2": 1,
                    "name_upper1": 1,
                    "new_var2": 1,
                    "parsed_symbol_high_dword": 1,
                    "symbol_type_upper": 1,
                    "temp_local_var2": 1,
                    "u_stack_a4": 1,
                    "u_stack_var1": 1,
                    "undefined4_var_1": 1,
                    "undefined_val_a4": 1,
                    "unsigned_stack_var": 1,
                    "value2": 2
                },
                "uVar11": {
                    "aux_data_length": 1,
                    "aux_data_size": 1,
                    "aux_value": 1,
                    "auxent_var2": 1,
                    "auxiliary_info": 1,
                    "count": 1,
                    "index": 2,
                    "index_var": 1,
                    "int_value": 1,
                    "return_value": 1,
                    "section_offset": 1,
                    "symbol_offset": 1,
                    "u_var": 1,
                    "u_var11": 3,
                    "uint_val1": 1,
                    "uint_var": 1,
                    "uint_var_4": 1,
                    "unsigned_value": 1,
                    "unsigned_var3": 1,
                    "unsigned_var4": 1,
                    "val1": 1,
                    "value": 3,
                    "value_3": 1,
                    "var_11": 1,
                    "var_a12": 1,
                    "variable1": 1
                },
                "uVar5": {
                    "bfd_error": 2,
                    "bfd_error_code": 1,
                    "bfd_error_result": 1,
                    "error": 5,
                    "error_code": 10,
                    "error_msg": 1,
                    "error_value": 1,
                    "error_var": 3,
                    "uint_var": 2,
                    "undefined4_var": 1,
                    "undefined_val1": 1,
                    "unsigned_var": 2,
                    "var_a5": 1
                },
                "uVar6": {
                    "aux_val": 1,
                    "aux_var1": 1,
                    "bfd_errmsg_result": 1,
                    "error_message": 1,
                    "first_error": 1,
                    "function_address": 2,
                    "result": 2,
                    "result1": 6,
                    "result_value1": 1,
                    "result_var": 1,
                    "result_var1": 2,
                    "return_code": 1,
                    "symbol_name": 1,
                    "u_var6": 1,
                    "uint_var_2": 1,
                    "undefined8_var1": 1,
                    "undefined_val2": 1,
                    "unsigned_var1": 1,
                    "unsigned_var2": 1,
                    "value": 1,
                    "value_1": 1,
                    "var_6": 1,
                    "var_a7": 1
                },
                "uVar7": {
                    "address": 1,
                    "aux_var2": 1,
                    "dcgettext_result": 1,
                    "error_message": 5,
                    "error_message_ptr": 1,
                    "error_msg": 2,
                    "message": 1,
                    "result2": 6,
                    "result_value2": 1,
                    "result_var2": 2,
                    "second_error": 1,
                    "u_var7": 1,
                    "uint_var_3": 1,
                    "undefined8_var2": 1,
                    "undefined_val3": 1,
                    "unsigned_var2": 1,
                    "unsigned_var3": 1,
                    "value_2": 1,
                    "var_7": 1,
                    "var_a8": 1
                },
                "xdcgettext": {
                    "get_translation": 1
                },
                "xfd_errmsg": {
                    "get_error_msg": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                },
                "xrealloc": {
                    "reallocate_memory": 1
                }
            },
            "called": [
                "dcgettext",
                "xrealloc",
                "bfd_errmsg",
                "FUN_00119ed0",
                "free",
                "xmalloc",
                "bfd_coff_get_syment",
                "FUN_0010dac0",
                "FUN_00113da9",
                "bfd_coff_get_auxent",
                "bfd_get_error"
            ],
            "calling": [
                "FUN_0010dac0"
            ],
            "code": "\nundefined8\nparse_binary_file_0010e07c(undefined8 param_1,long *symbol_table,undefined8 param_3,int param_4,long param_5,\n            undefined8 param_6)\n\n{\n  long length;\n  long symbol_address;\n  long symbol_count;\n  char result;\n  undefined4 error_code;\n  void *allocated_memory;\n  undefined8 result1;\n  undefined8 result2;\n  undefined4 *pointer_var;\n  char *error_message;\n  undefined *aux_data;\n  uint value;\n  long index;\n  int i_var13;\n  int int_var2;\n  undefined4 local_var_a8;\n  undefined4 local_var_a4;\n  undefined4 local_var_a0;\n  undefined4 local_var_9c;\n  undefined symbol_name [30];\n  undefined2 local_var_6a;\n  byte local_var_68;\n  byte local_var_67;\n  undefined aux_data_buffer [10];\n  ushort local_var_56;\n  \n  int_var2 = 10;\n  index = 0;\n  length = *(long *)(param_5 + 0x18);\n  allocated_memory = (void *)xmalloc(0x50);\n  while ((symbol_table[3] < length && (symbol_table[2] < symbol_table[1]))) {\n    symbol_address = *(long *)(*symbol_table + symbol_table[2] * 8);\n    result = bfd_coff_get_syment(param_1,symbol_address,symbol_name);\n    if (result == '\\0') {\n      error_code = bfd_get_error();\n      result1 = bfd_errmsg(error_code);\n      error_message = \"bfd_coff_get_syment failed: %s\";\nLAB_0010e18d:\n      result2 = dcgettext(0,error_message,5);\n      FUN_00119ed0(result2,result1);\n      free(allocated_memory);\n      return 0;\n    }\n    symbol_count = symbol_table[3];\n    aux_data = (undefined *)0x0;\n    symbol_table[2] = symbol_table[2] + 1;\n    symbol_table[3] = symbol_count + 1 + (ulong)local_var_67;\n    if (local_var_67 != 0) {\n      aux_data = aux_data_buffer;\n      result = bfd_coff_get_auxent(param_1,symbol_address,0,aux_data);\n      if (result == '\\0') {\n        error_code = bfd_get_error();\n        result1 = bfd_errmsg(error_code);\n        error_message = \"bfd_coff_get_auxent failed: %s\";\n        goto LAB_0010e18d;\n      }\n    }\n    if (local_var_68 == 0x12) {\n      value = (uint)local_var_56;\n      i_var13 = (int)*(undefined8 *)(symbol_address + 0x10) +\n               (int)*(undefined8 *)(*(long *)(symbol_address + 0x20) + 0x30);\n    }\n    else {\n      if (local_var_68 < 0x13) {\n        if ((local_var_68 == 8) || (local_var_68 == 0xb)) {\n          value = 0;\n          i_var13 = ((int)*(undefined8 *)(symbol_address + 0x10) +\n                   (int)*(undefined8 *)(*(long *)(symbol_address + 0x20) + 0x30)) * 8;\n          goto LAB_0010e214;\n        }\n      }\n      else if (local_var_68 == 0x66) break;\n      value = 0;\n      i_var13 = 0;\n    }\nLAB_0010e214:\n    result2 = FUN_0010dac0(param_1,symbol_table,param_3,symbol_count,local_var_6a,aux_data,1);\n    result1 = *(undefined8 *)(symbol_address + 8);\n    pointer_var = (undefined4 *)xmalloc(0x20);\n    local_var_a8 = (undefined4)result1;\n    local_var_a4 = (undefined4)((ulong)result1 >> 0x20);\n    local_var_a0 = (undefined4)result2;\n    local_var_9c = (undefined4)((ulong)result2 >> 0x20);\n    *(undefined8 *)(pointer_var + 5) = 0;\n    pointer_var[6] = i_var13;\n    pointer_var[7] = value;\n    pointer_var[4] = 0;\n    *pointer_var = local_var_a8;\n    pointer_var[1] = local_var_a4;\n    pointer_var[2] = local_var_a0;\n    pointer_var[3] = local_var_9c;\n    if (int_var2 <= (int)index + 1) {\n      int_var2 = int_var2 + 10;\n      allocated_memory = (void *)xrealloc(allocated_memory,(long)int_var2 << 3,pointer_var,0,param_6);\n    }\n    *(undefined4 **)((long)allocated_memory + index * 8) = pointer_var;\n    index = index + 1;\n  }\n  *(undefined8 *)((long)allocated_memory + (long)(int)index * 8) = 0;\n  result1 = FUN_00113da9(param_4 == 8,*(undefined2 *)(param_5 + 10),allocated_memory);\n  return result1;\n}\n\n",
            "current_name": "parse_binary_file_0010e07c",
            "entrypoint": "0x0010e07c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010e07c": "parse_binary_file_0010e07c",
                "__ptr": "allocated_memory",
                "bfd_coff_get_auxent": "coff_get_aux_entry",
                "bfd_coff_get_syment": "coff_get_symbol_entry",
                "bfd_get_error": "get_bfd_error",
                "cVar4": "result",
                "free": "release_memory",
                "iVar13": "i_var13",
                "iVar14": "int_var2",
                "lVar1": "length",
                "lVar12": "index",
                "lVar2": "symbol_address",
                "lVar3": "symbol_count",
                "local_56": "local_var_56",
                "local_60": "aux_data_buffer",
                "local_67": "local_var_67",
                "local_68": "local_var_68",
                "local_6a": "local_var_6a",
                "local_88": "symbol_name",
                "local_a8": "local_var_a8",
                "param_2": "symbol_table",
                "pcVar9": "error_message",
                "puVar10": "aux_data",
                "puVar8": "pointer_var",
                "uStack_9c": "local_var_9c",
                "uStack_a0": "local_var_a0",
                "uStack_a4": "local_var_a4",
                "uVar11": "value",
                "uVar5": "error_code",
                "uVar6": "result1",
                "uVar7": "result2",
                "xmalloc": "allocate_memory",
                "xrealloc": "reallocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010e2f0": {
            "additional_data": {
                "CONCAT14": {
                    "concat3": 1
                },
                "CONCAT15": {
                    "concat2": 1
                },
                "CONCAT26": {
                    "concat1": 1
                },
                "FUN_0010e2f0": {
                    "decode_and_process_data": 1,
                    "extract_and_append_string": 1,
                    "extract_and_store_string": 3,
                    "extract_data": 1,
                    "parse_and_store_string": 1,
                    "process_data": 3,
                    "process_string": 19,
                    "reverse_lookup_and_update": 1
                },
                "FUN_00119ed0": {
                    "print_error_message": 1
                },
                "bfd_errmsg": {
                    "get_error_message": 1
                },
                "bfd_get_error": {
                    "get_error": 1
                },
                "bfd_hash_lookup": {
                    "lookup_hash_entry": 1
                },
                "dcgettext": {
                    "get_localized_string": 1
                },
                "lVar1": {
                    "count": 1,
                    "current_entry": 1,
                    "first_long": 1,
                    "hash_lookup_result": 1,
                    "length": 2,
                    "prev_entry": 1,
                    "prev_node": 1,
                    "previous": 1,
                    "previous_hash": 1,
                    "previous_value": 1,
                    "ptr1": 1,
                    "temp1": 6,
                    "temp_long_1": 1,
                    "temp_value": 1,
                    "temp_var1": 4,
                    "temp_var_1": 1,
                    "temp_variable_1": 1,
                    "var1": 4
                },
                "lVar3": {
                    "current_hash": 1,
                    "current_node": 1,
                    "entry": 2,
                    "hash_lookup_result": 2,
                    "hash_result": 3,
                    "hash_value": 1,
                    "lookup_result": 2,
                    "new_value_offset": 1,
                    "ptr2": 1,
                    "temp2": 6,
                    "temp_long_2": 1,
                    "temp_var2": 4,
                    "temp_var_2": 1,
                    "temp_variable_2": 1,
                    "var2": 2,
                    "var3": 1
                },
                "lVar7": {
                    "current": 1,
                    "current_offset": 1,
                    "extracted_string_offset": 1,
                    "hash_value": 2,
                    "index": 2,
                    "length": 2,
                    "long_value": 1,
                    "new_entry_index": 1,
                    "new_node_offset": 1,
                    "new_value": 2,
                    "offset": 2,
                    "result": 3,
                    "string_address": 1,
                    "string_hash": 1,
                    "string_offset": 1,
                    "temp3": 3,
                    "temp_long_3": 1,
                    "temp_value": 1,
                    "temp_var3": 2,
                    "var3": 1,
                    "var6": 1
                },
                "local_3c": {
                    "local_arr": 1,
                    "local_array": 10,
                    "local_array_1": 1,
                    "local_var2": 7,
                    "local_variable2": 1,
                    "local_variable_2": 1,
                    "new_undefined_var": 1,
                    "output": 1,
                    "output_var2": 1,
                    "temp_arr": 1,
                    "temp_array": 2,
                    "temporary_variable_4": 1,
                    "var2": 2,
                    "var_array": 1
                },
                "local_44": {
                    "local_result": 1,
                    "local_value1": 1,
                    "local_var": 3,
                    "local_var1": 8,
                    "local_var_1": 1,
                    "local_variable": 1,
                    "local_variable1": 1,
                    "local_variable_1": 1,
                    "output_var1": 1,
                    "result": 5,
                    "result_var": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temporary_variable_3": 1,
                    "undefined4_var": 1,
                    "var1": 3
                },
                "param_1": {
                    "bfd_data": 1,
                    "binary_data": 1,
                    "data": 1,
                    "data_array": 1,
                    "data_ptr": 1,
                    "hash_table": 19,
                    "input_array": 1,
                    "p_data": 1,
                    "param_array": 5
                },
                "param_2": {
                    "flag": 7,
                    "param": 8,
                    "param2": 1,
                    "param_flag": 3,
                    "param_value": 2,
                    "undefined_byte": 1,
                    "undefined_param": 4,
                    "undefined_parameter": 1,
                    "undefined_value": 1,
                    "undefined_var": 1,
                    "value": 2
                },
                "param_3": {
                    "int_param": 4,
                    "int_parameter": 1,
                    "int_var": 1,
                    "length": 4,
                    "num": 1,
                    "param": 1,
                    "param3": 2,
                    "param_count": 1,
                    "param_int": 3,
                    "param_len": 1,
                    "param_length": 3,
                    "param_size": 3,
                    "size": 3,
                    "string_index": 1,
                    "value": 1,
                    "var_size": 1
                },
                "param_4": {
                    "binary_parameter": 1,
                    "data": 5,
                    "extra_param": 1,
                    "input_param": 1,
                    "param": 2,
                    "param4": 3,
                    "param_4": 2,
                    "param_data": 3,
                    "param_long": 2,
                    "param_ptr": 1,
                    "param_string": 1,
                    "param_value": 6,
                    "ptr_param": 1,
                    "return_value": 1,
                    "value": 1
                },
                "param_5": {
                    "input_string": 10,
                    "key": 1,
                    "param_string": 4,
                    "str": 2,
                    "str_param": 1,
                    "string": 11,
                    "string_parameter": 1,
                    "string_to_extract": 1
                },
                "sVar6": {
                    "key_length": 1,
                    "length": 2,
                    "str_len": 2,
                    "str_length": 4,
                    "string_length": 22
                },
                "strlen": {
                    "get_string_length": 1
                },
                "uStack_3e": {
                    "flag3": 1,
                    "local_value4": 1,
                    "param3_stack": 1,
                    "stack_result": 1,
                    "stack_value2": 1,
                    "stack_var3": 5,
                    "stack_var_3": 1,
                    "stack_variable3": 1,
                    "temp_ushort": 1,
                    "u_stack3": 1,
                    "u_stack3_e": 1,
                    "u_stack3e": 3,
                    "u_stack_3": 2,
                    "u_stack_3e": 5,
                    "u_stack_parameter": 1,
                    "u_stack_var3": 1,
                    "undefined2_var": 1,
                    "undefined_short": 1,
                    "undefined_var4": 1,
                    "var4": 1
                },
                "uStack_3f": {
                    "flag1": 1,
                    "local_value3": 1,
                    "param1_stack": 1,
                    "stack_param3": 1,
                    "stack_undefined1": 1,
                    "stack_var1": 1,
                    "stack_var2": 4,
                    "stack_var_2": 1,
                    "stack_variable2": 1,
                    "u_stack2": 1,
                    "u_stack3_f": 1,
                    "u_stack3f": 3,
                    "u_stack_2": 2,
                    "u_stack_3f": 6,
                    "u_stack_parameter": 1,
                    "u_stack_var2": 1,
                    "undefined_byte2": 1,
                    "undefined_var2": 1,
                    "undefined_var3": 1,
                    "var3": 1
                },
                "uStack_40": {
                    "flag2": 1,
                    "local_value2": 1,
                    "param2_stack": 1,
                    "stack_param2": 1,
                    "stack_value1": 1,
                    "stack_var1": 4,
                    "stack_var2": 1,
                    "stack_var_1": 1,
                    "stack_variable1": 1,
                    "u_stack1": 1,
                    "u_stack40": 4,
                    "u_stack_1": 2,
                    "u_stack_40": 6,
                    "u_stack_parameter": 1,
                    "u_stack_var1": 1,
                    "undefined_byte1": 1,
                    "undefined_var": 1,
                    "undefined_var2": 1,
                    "var2": 1
                },
                "uVar2": {
                    "bfd_error": 2,
                    "bfd_error_code": 2,
                    "err_code": 1,
                    "error": 15,
                    "error_code": 5,
                    "error_var": 2,
                    "temp_uint": 1,
                    "var3": 1,
                    "var4": 1
                },
                "uVar4": {
                    "bfd_error_msg": 3,
                    "err_message": 1,
                    "err_msg": 7,
                    "errmsg": 3,
                    "error_message": 5,
                    "error_msg": 8,
                    "temp_ulong_1": 1,
                    "var4": 1,
                    "var5": 1
                },
                "uVar5": {
                    "err_msg": 1,
                    "error_message": 4,
                    "error_msg": 1,
                    "error_msg_format": 1,
                    "error_string": 3,
                    "errormsg": 1,
                    "localized_err_msg": 1,
                    "localized_msg": 1,
                    "localized_text": 1,
                    "lookup_error": 1,
                    "message": 1,
                    "msg_format": 1,
                    "temp_ulong_2": 1,
                    "text": 1,
                    "translated_err": 1,
                    "translated_err_msg": 1,
                    "translated_error": 1,
                    "translated_error_message": 1,
                    "translated_error_msg": 2,
                    "translated_message": 1,
                    "translated_msg": 2,
                    "var5": 1,
                    "var6": 1
                },
                "xrealloc": {
                    "reallocate_memory": 1
                }
            },
            "called": [
                "strlen",
                "dcgettext",
                "bfd_hash_lookup",
                "xrealloc",
                "bfd_errmsg",
                "FUN_00119ed0",
                "bfd_get_error"
            ],
            "calling": [
                "FUN_0010ec73",
                "FUN_0010e9a0",
                "FUN_0010e453",
                "FUN_0010eafe",
                "FUN_0010edb4",
                "FUN_0010e6a8",
                "FUN_0010e5db",
                "FUN_0010e7c2",
                "FUN_0010e439",
                "FUN_0010e8a9",
                "FUN_0011378f",
                "FUN_0010e842",
                "FUN_0010ed2c",
                "FUN_0010e918",
                "FUN_0010ebb0"
            ],
            "code": "\nundefined8\nprocess_string_0010e2f0(long *hash_table,undefined param,int int_param,undefined8 param_value,char *string)\n\n{\n  long temp1;\n  undefined4 error;\n  long temp2;\n  undefined8 error_msg;\n  undefined8 error_message;\n  size_t string_length;\n  long result;\n  undefined4 local_var1;\n  undefined u_stack_40;\n  undefined u_stack_3f;\n  undefined2 u_stack_3e;\n  undefined4 local_array [3];\n  \n  if (string == (char *)0x0) {\n    result = 0;\n  }\n  else {\n    temp2 = bfd_hash_lookup(hash_table + 7,string,1,1);\n    if (temp2 == 0) {\n      error = bfd_get_error();\n      error_msg = bfd_errmsg(error);\n      error_message = dcgettext(0,\"string_hash_lookup failed: %s\",5);\n      FUN_00119ed0(error_message,error_msg);\n      return 0;\n    }\n    result = *(long *)(temp2 + 0x20);\n    if (result == -1) {\n      result = hash_table[6];\n      temp1 = hash_table[5];\n      *(long *)(temp2 + 0x20) = result;\n      if (temp1 == 0) {\n        hash_table[4] = temp2;\n      }\n      else {\n        *(long *)(temp1 + 0x18) = temp2;\n      }\n      hash_table[5] = temp2;\n      string_length = strlen(string);\n      hash_table[6] = result + 1 + string_length;\n    }\n  }\n  (**(code **)(*(long *)(*hash_table + 8) + 0x50))(result,&local_var1);\n  u_stack_3f = 0;\n  u_stack_40 = param;\n  (**(code **)(*(long *)(*hash_table + 8) + 0x68))((long)int_param,&u_stack_3e);\n  (**(code **)(*(long *)(*hash_table + 8) + 0x50))(param_value,local_array);\n  if ((ulong)hash_table[3] < hash_table[2] + 0xcU) {\n    hash_table[3] = hash_table[3] * 2;\n    result = xrealloc(hash_table[1]);\n    hash_table[1] = result;\n  }\n  result = hash_table[2];\n  temp2 = hash_table[1];\n  *(ulong *)(temp2 + result) = concat1(u_stack_3e,concat2(u_stack_3f,concat3(u_stack_40,local_var1)));\n  *(undefined4 *)(temp2 + 8 + result) = local_array[0];\n  hash_table[2] = hash_table[2] + 0xc;\n  return CONCAT71((int7)((ulong)result >> 8),1);\n}\n\n",
            "current_name": "process_string_0010e2f0",
            "entrypoint": "0x0010e2f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "CONCAT14": "concat3",
                "CONCAT15": "concat2",
                "CONCAT26": "concat1",
                "FUN_0010e2f0": "process_string_0010e2f0",
                "bfd_errmsg": "get_error_message",
                "bfd_get_error": "get_error",
                "bfd_hash_lookup": "lookup_hash_entry",
                "dcgettext": "get_localized_string",
                "lVar1": "temp1",
                "lVar3": "temp2",
                "lVar7": "result",
                "local_3c": "local_array",
                "local_44": "local_var1",
                "param_1": "hash_table",
                "param_2": "param",
                "param_3": "int_param",
                "param_4": "param_value",
                "param_5": "string",
                "sVar6": "string_length",
                "strlen": "get_string_length",
                "uStack_3e": "u_stack_3e",
                "uStack_3f": "u_stack_3f",
                "uStack_40": "u_stack_40",
                "uVar2": "error",
                "uVar4": "error_msg",
                "uVar5": "error_message",
                "xrealloc": "reallocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010e439": {
            "additional_data": {
                "FUN_0010e2f0": {
                    "call_sub_function": 11,
                    "execute_procedure": 1,
                    "execute_sub_function": 1,
                    "handle_data": 1,
                    "handle_update": 1,
                    "invoke_sub_function": 1,
                    "perform_action": 1,
                    "perform_operation": 3,
                    "perform_update": 1,
                    "process_data": 1,
                    "process_param": 1,
                    "process_value": 1,
                    "send_command": 1,
                    "update_data": 1,
                    "update_instance": 1,
                    "update_param": 1
                },
                "FUN_0010e439": {
                    "set_function_pointer_and_call": 1,
                    "set_param": 3,
                    "set_param_2": 1,
                    "set_param_2_and_call": 1,
                    "set_param_and_call": 1,
                    "set_param_and_call_function": 2,
                    "set_param_value": 11,
                    "set_parameter_value": 3,
                    "store_param_and_call_function": 1,
                    "store_param_in_memory": 1,
                    "store_parameter_and_call_function": 1,
                    "update_data": 1,
                    "update_data_pointer": 1,
                    "update_param2": 1,
                    "update_param_value": 1,
                    "update_parameter_and_call_function": 1
                },
                "param_1": {
                    "address": 1,
                    "base_addr": 1,
                    "base_address": 5,
                    "data": 1,
                    "data_pointer": 3,
                    "data_ptr": 2,
                    "instance": 1,
                    "memory_address": 2,
                    "obj_ptr": 1,
                    "object": 1,
                    "object_address": 2,
                    "object_pointer": 3,
                    "object_ptr": 4,
                    "param_1": 1,
                    "param_pointer": 1,
                    "ptr": 1,
                    "structure_pointer": 1
                },
                "param_2": {
                    "new_data": 1,
                    "new_param_2": 1,
                    "new_param_value": 3,
                    "new_value": 10,
                    "param_2_sub": 1,
                    "param_value": 3,
                    "parameter_value": 2,
                    "update_value": 1,
                    "value": 8,
                    "value_to_store": 1
                },
                "param_3": {
                    "command_param": 1,
                    "count": 1,
                    "flag": 3,
                    "length": 1,
                    "operation_code": 1,
                    "operation_param": 1,
                    "operation_type": 1,
                    "param": 1,
                    "param1": 1,
                    "param3": 3,
                    "param_3": 1,
                    "param_3_sub": 1,
                    "param_value1": 1,
                    "some_flag": 2,
                    "sub_function_param1": 1,
                    "sub_param1": 2,
                    "sub_param_1": 1,
                    "unknown_param": 1,
                    "value1": 4
                },
                "param_4": {
                    "another_value": 2,
                    "arg_value": 1,
                    "command_value": 1,
                    "param": 1,
                    "param2": 1,
                    "param4": 3,
                    "param_4": 3,
                    "param_4_sub": 1,
                    "param_value2": 1,
                    "sub_function_param2": 1,
                    "sub_param2": 2,
                    "sub_param_2": 1,
                    "unknown": 1,
                    "unknown_value": 1,
                    "unused_param": 3,
                    "value2": 5
                },
                "param_5": {
                    "command_string": 1,
                    "data_ptr": 1,
                    "message": 1,
                    "param3": 1,
                    "param5": 2,
                    "param_5": 2,
                    "param_5_sub": 1,
                    "param_value3": 1,
                    "str": 3,
                    "str_param": 1,
                    "string": 3,
                    "string_data": 1,
                    "string_param": 2,
                    "string_parameter": 2,
                    "sub_function_param3": 1,
                    "sub_param3": 2,
                    "sub_param_3": 1,
                    "text": 1,
                    "unknown_string": 1
                }
            },
            "called": [
                "FUN_0010e2f0"
            ],
            "calling": [
                "thunk_FUN_0010e439",
                "FUN_0011378f"
            ],
            "code": "\nvoid set_param_value_0010e439(long base_address,undefined8 new_value)\n\n{\n  *(undefined8 *)(base_address + 0x210) = new_value;\n  FUN_0010e2f0(base_address,0x84,0,0,new_value);\n  return;\n}\n\n",
            "current_name": "set_param_value_0010e439",
            "entrypoint": "0x0010e439",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010e439": "set_param_value_0010e439",
                "param_1": "base_address",
                "param_2": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010e453": {
            "additional_data": {
                "FUN_00109b52": {
                    "check_condition": 1
                },
                "FUN_00109cf4": {
                    "check_result": 2
                },
                "FUN_0010e2f0": {
                    "check_function": 1,
                    "process_data": 1
                },
                "FUN_0010e453": {
                    "decode_and_process_data": 1,
                    "decompile_binary_function": 1,
                    "extract_and_format_data": 1,
                    "extract_and_reverse": 1,
                    "extract_and_send_data": 2,
                    "extract_binary_info": 1,
                    "extract_data": 5,
                    "parse_command_line": 1,
                    "process_data": 5,
                    "reverse_string": 1
                },
                "__s": {
                    "allocated_string": 3,
                    "dynamic_str": 1,
                    "formatted_str": 2,
                    "formatted_string": 12,
                    "new_string": 3,
                    "output_str": 1,
                    "output_string": 7,
                    "string_buffer": 1
                },
                "cVar2": {
                    "char": 1,
                    "char_result": 2,
                    "char_value": 1,
                    "char_var": 2,
                    "char_variable": 1,
                    "character": 1,
                    "check_value": 1,
                    "flag": 1,
                    "result": 10,
                    "return_value": 1,
                    "status": 3
                },
                "free": {
                    "deallocate_memory": 1
                },
                "lVar1": {
                    "address": 1,
                    "arg": 1,
                    "array_element": 2,
                    "curr_string_length": 1,
                    "current_address": 1,
                    "current_array_element": 1,
                    "current_data": 1,
                    "current_element": 1,
                    "current_item": 2,
                    "current_ptr": 1,
                    "current_str_length": 1,
                    "current_string": 2,
                    "current_string_address": 1,
                    "current_string_length": 2,
                    "input_array_element": 1,
                    "length": 1,
                    "length1": 1,
                    "list_element": 1,
                    "loop_index": 1,
                    "ptr": 1,
                    "ptr_value": 1,
                    "section_length": 1,
                    "str_arr_elem": 1,
                    "string_length": 1,
                    "temp_var1": 1
                },
                "lVar10": {
                    "formatted_string_length": 1
                },
                "lVar2": {
                    "element_length": 1
                },
                "lVar5": {
                    "count": 2,
                    "counter": 3,
                    "formatted_str_length": 1,
                    "index": 2,
                    "length": 4,
                    "length3": 1,
                    "string_length": 3,
                    "string_length_with_padding": 1,
                    "string_size": 1,
                    "temp": 1,
                    "temp_length": 3,
                    "total_len": 1,
                    "total_length": 6,
                    "total_size": 1
                },
                "lVar7": {
                    "arg_index": 1,
                    "array_counter": 1,
                    "array_index": 10,
                    "array_pointer": 1,
                    "curr_index": 1,
                    "current_string_index": 1,
                    "index": 3,
                    "index_2": 1,
                    "length4": 1,
                    "loop_counter": 1,
                    "offset": 7,
                    "output_index": 1,
                    "param_3_index": 1
                },
                "param_1": {
                    "address": 1,
                    "arg1": 1,
                    "binary": 1,
                    "command_line": 1,
                    "data_length": 3,
                    "data_pointer": 2,
                    "data_ptr": 3,
                    "data_size": 4,
                    "input": 1,
                    "input1": 1,
                    "input_data": 1,
                    "input_length": 1,
                    "input_long": 2,
                    "input_number": 1,
                    "input_param": 1,
                    "input_value": 3,
                    "input_variable": 1,
                    "param_1": 1,
                    "value": 1
                },
                "param_2": {
                    "arg2": 1,
                    "input2": 1,
                    "input_str": 3,
                    "input_string": 13,
                    "name": 1,
                    "prefix": 2,
                    "source_string": 1,
                    "str_param": 1,
                    "string": 2,
                    "string1": 1,
                    "string_data": 1,
                    "string_param": 2,
                    "symbol": 1
                },
                "param_3": {
                    "arg3": 1,
                    "arguments": 1,
                    "data_list": 1,
                    "input_array": 3,
                    "input_data": 1,
                    "input_string_array": 1,
                    "list": 1,
                    "output_strings": 1,
                    "sections": 1,
                    "str_arr": 1,
                    "str_array": 1,
                    "str_list": 1,
                    "string_array": 9,
                    "string_array_param": 2,
                    "string_array_ptr": 1,
                    "string_list": 3,
                    "strings_array": 1
                },
                "ppcVar6": {
                    "arg_ptr": 1,
                    "arr_ptr": 1,
                    "array_element_ptr": 1,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "curr_string": 1,
                    "current_array_element": 1,
                    "current_item": 1,
                    "current_output": 1,
                    "current_pointer": 1,
                    "current_section": 1,
                    "current_str": 1,
                    "current_string": 7,
                    "data_pointer": 1,
                    "input_pointer": 1,
                    "param_3_iterator": 1,
                    "str_list_pointer": 1,
                    "string_array": 3,
                    "string_array_ptr": 1,
                    "string_pointer_array": 1,
                    "string_ptr": 1,
                    "temp_list": 1
                },
                "sVar3": {
                    "input2_length": 1,
                    "input_length": 1,
                    "input_string_length": 1,
                    "length": 2,
                    "length2": 1,
                    "size": 1,
                    "str_len": 1,
                    "str_length": 3,
                    "string_length": 14,
                    "string_length_temp": 1,
                    "string_size": 1
                },
                "sprintf": {
                    "format_string": 1
                },
                "strlen": {
                    "get_string_length": 1
                },
                "uVar4": {
                    "output": 2,
                    "result": 16,
                    "return_value": 11,
                    "success_indicator": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "strlen",
                "FUN_00109b52",
                "sprintf",
                "free",
                "FUN_0010e2f0",
                "xmalloc",
                "FUN_00109cf4"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nundefined8 extract_and_send_data_0010e453(long data_size,char *input_string,char **string_array)\n\n{\n  long array_element;\n  char result;\n  size_t string_length;\n  undefined2 *formatted_string;\n  undefined8 result;\n  long total_length;\n  char **current_string;\n  long array_index;\n  \n  if (string_array == (char **)0x0) {\n    if (input_string != (char *)0x0) {\n      string_length = strlen(input_string);\n      formatted_string = (undefined2 *)xmalloc(string_length + 10);\n      sprintf((char *)formatted_string,\"xe%s:\",input_string);\nLAB_0010e578:\n      result = FUN_00109b52(data_size,formatted_string,0,0,4);\n      if (result != '\\0') goto LAB_0010e58b;\n    }\nLAB_0010e475:\n    result = 0;\n  }\n  else {\n    total_length = 10;\n    current_string = string_array;\n    if (input_string != (char *)0x0) {\n      string_length = strlen(input_string);\n      total_length = string_length + 10;\n    }\n    for (; *current_string != (char *)0x0; current_string = current_string + 1) {\n      string_length = strlen(*current_string);\n      total_length = total_length + 0x14 + string_length;\n    }\n    formatted_string = (undefined2 *)xmalloc(total_length);\n    if (input_string == (char *)0x0) {\n      *formatted_string = 0x65;\n      total_length = 0;\n    }\n    else {\n      total_length = *(long *)(data_size + 0x68);\n      *(long *)(data_size + 0x68) = total_length + 1;\n      sprintf((char *)formatted_string,\"%s:T%ld=e\",input_string,total_length);\n    }\n    array_index = 0;\n    while( true ) {\n      array_element = *(long *)((long)string_array + array_index);\n      string_length = strlen((char *)formatted_string);\n      if (array_element == 0) break;\n      array_index = array_index + 8;\n      sprintf((char *)(undefined2 *)((long)formatted_string + string_length),\"%s:%ld,\");\n    }\n    *(undefined2 *)((long)formatted_string + string_length) = 0x3b;\n    if (input_string == (char *)0x0) goto LAB_0010e578;\n    result = FUN_0010e2f0(data_size,0x80,0,0,formatted_string);\n    if ((result == '\\0') || (result = FUN_00109cf4(data_size,total_length,4), result == '\\0'))\n    goto LAB_0010e475;\nLAB_0010e58b:\n    free(formatted_string);\n    result = 1;\n  }\n  return result;\n}\n\n",
            "current_name": "extract_and_send_data_0010e453",
            "entrypoint": "0x0010e453",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010e453": "extract_and_send_data_0010e453",
                "__s": "formatted_string",
                "cVar2": "result",
                "free": "deallocate_memory",
                "lVar1": "array_element",
                "lVar5": "total_length",
                "lVar7": "array_index",
                "param_1": "data_size",
                "param_2": "input_string",
                "param_3": "string_array",
                "ppcVar6": "current_string",
                "sVar3": "string_length",
                "sprintf": "format_string",
                "strlen": "get_string_length",
                "uVar4": "result",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010e5db": {
            "additional_data": {
                "DAT_0010e5e3": {
                    "constant_1": 1
                },
                "DAT_0010e5e6": {
                    "constant_2": 1
                },
                "DAT_0010e5ea": {
                    "constant_3": 1
                },
                "FUN_00109b2f": {
                    "allocate_memory": 4,
                    "allocate_memory_block": 1,
                    "create_memory_block": 1
                },
                "FUN_00109ed3": {
                    "process_input": 1,
                    "process_result": 1,
                    "reverse": 1,
                    "reverse_data": 1,
                    "reverse_payload": 1
                },
                "FUN_0010e2f0": {
                    "check_condition": 1,
                    "check_data": 1,
                    "check_result": 1,
                    "check_status": 2,
                    "perform_operation": 1
                },
                "FUN_0010e5db": {
                    "decompiled_function": 1,
                    "process_data": 18,
                    "process_param": 1,
                    "reverse_string": 1
                },
                "__ptr": {
                    "allocated_memory": 6,
                    "malloc_ptr": 1,
                    "malloced_memory": 1,
                    "memory_block": 3,
                    "memory_ptr": 2,
                    "pointer_1": 1,
                    "ptr": 13,
                    "ptr1": 2,
                    "ptr_1": 2
                },
                "__s": {
                    "allocated_string": 1,
                    "input_string": 2,
                    "ptr_2": 1,
                    "source_string": 1,
                    "str": 6,
                    "str1": 2,
                    "string": 11,
                    "string1": 1,
                    "string_1": 2,
                    "string_data": 1,
                    "string_ptr": 3
                },
                "__s_00": {
                    "formatted_str": 1,
                    "formatted_string": 3,
                    "modified_string": 12,
                    "new_str": 5,
                    "new_string": 3,
                    "new_string_ptr": 1,
                    "ptr_3": 1,
                    "str2": 2,
                    "string2": 1,
                    "string_2": 2
                },
                "auVar4": {
                    "output_value": 1,
                    "result": 16,
                    "result_array": 1,
                    "return_value": 12
                },
                "cVar1": {
                    "char_check": 1,
                    "char_check_result": 1,
                    "char_result": 2,
                    "char_var": 1,
                    "char_variable": 1,
                    "check_result": 2,
                    "flag": 1,
                    "is_success": 1,
                    "result": 7,
                    "result_char": 1,
                    "status": 3,
                    "success": 1,
                    "success_flag": 1
                },
                "free": {
                    "deallocate_memory": 2,
                    "free_memory": 1,
                    "release_memory": 2
                },
                "iVar3": {
                    "count": 4,
                    "counter": 5,
                    "i": 1,
                    "index": 2,
                    "iter_count": 1,
                    "iteration": 2,
                    "iteration_count": 9,
                    "iteration_counter": 3,
                    "iteration_num": 1,
                    "iterator": 1,
                    "loop_counter": 2
                },
                "in_R10": {
                    "additional_data": 4,
                    "additional_param": 2,
                    "constant": 1,
                    "extra_param": 1,
                    "memory_address": 1,
                    "param": 1,
                    "param_constant": 1,
                    "param_pointer": 1,
                    "parameter": 1,
                    "r10": 1,
                    "random_value": 1,
                    "result": 2,
                    "return_address": 1,
                    "return_value": 2,
                    "temp_var": 1,
                    "val": 1,
                    "value": 6,
                    "value_1": 1,
                    "var": 1,
                    "var_r10": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 1,
                    "data": 9,
                    "data_pointer": 2,
                    "data_ptr": 5,
                    "function_param": 1,
                    "input": 2,
                    "input_address": 1,
                    "input_data": 2,
                    "input_param": 3,
                    "input_parameter": 1,
                    "input_pointer": 1,
                    "input_value": 1,
                    "param_one": 1
                },
                "param_2": {
                    "count": 3,
                    "input_length": 1,
                    "length": 7,
                    "limit": 1,
                    "loop_count": 1,
                    "loop_iterations": 1,
                    "loop_limit": 2,
                    "max_iterations": 4,
                    "num_iterations": 7,
                    "param_two": 1,
                    "size": 2,
                    "total_iters": 1
                },
                "param_3": {
                    "offset": 1,
                    "param_1": 1
                },
                "param_4": {
                    "buffer": 1,
                    "param_2": 1
                },
                "param_5": {
                    "output": 1,
                    "param_3": 1
                },
                "sVar2": {
                    "length": 2,
                    "str_len": 2,
                    "str_length": 5,
                    "string_len": 1,
                    "string_length": 21
                },
                "sprintf": {
                    "format_string": 5
                },
                "strlen": {
                    "get_string_length": 5
                },
                "xmalloc": {
                    "allocate_dynamic_memory": 3,
                    "allocate_memory": 3
                }
            },
            "called": [
                "strlen",
                "sprintf",
                "FUN_00109b2f",
                "free",
                "FUN_0010e2f0",
                "xmalloc",
                "FUN_00109ed3"
            ],
            "calling": [
                "FUN_00112c1f"
            ],
            "code": "\nundefined  [16] process_data_0010e5db(long data,int num_iterations)\n\n{\n  char result;\n  void *ptr;\n  char *string;\n  size_t string_length;\n  char *modified_string;\n  ulong value;\n  int iteration_count;\n  undefined result [16];\n  \n  iteration_count = 0;\n  do {\n    if (num_iterations <= iteration_count) {\n      result = FUN_00109ed3(data,0x66,0,data + 0x188,data + 400,value);\n      return result;\n    }\n    if (*(char *)(*(long *)(data + 0x60) + 0x1c) == '\\0') {\n      ptr = (void *)FUN_00109b2f(data);\n      free(ptr);\n    }\n    else {\n      string = (char *)FUN_00109b2f(data);\n      string_length = strlen(string);\n      modified_string = (char *)xmalloc(string_length + 3);\n      sprintf(modified_string,\":t%s\",string);\n      free(string);\n      result = FUN_0010e2f0(data,0x80,0,0,modified_string);\n      if (result == '\\0') {\n        result._8_8_ = 0;\n        result._0_8_ = value;\n        return result << 0x40;\n      }\n      free(modified_string);\n    }\n    iteration_count = iteration_count + 1;\n  } while( true );\n}\n\n",
            "current_name": "process_data_0010e5db",
            "entrypoint": "0x0010e5db",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010e5db": "process_data_0010e5db",
                "__ptr": "ptr",
                "__s": "string",
                "__s_00": "modified_string",
                "auVar4": "result",
                "cVar1": "result",
                "free": "release_memory",
                "iVar3": "iteration_count",
                "in_R10": "value",
                "param_1": "data",
                "param_2": "num_iterations",
                "sVar2": "string_length",
                "sprintf": "format_string",
                "strlen": "get_string_length",
                "xmalloc": "allocate_dynamic_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010e6a8": {
            "additional_data": {
                "FUN_0010e2f0": {
                    "process_other_string": 1
                },
                "FUN_0010e6a8": {
                    "extract_and_update_symbols": 1,
                    "parse_input": 1,
                    "process_data": 5,
                    "process_function": 1,
                    "process_parameters": 1,
                    "process_string": 6
                },
                "FUN_00119ed0": {
                    "report_error": 1
                },
                "__s": {
                    "aux_string": 1,
                    "debug_info": 1,
                    "decoded_string": 4,
                    "decomp_string": 1,
                    "extra_string": 1,
                    "extracted_string": 2,
                    "generated_string": 1,
                    "hash_string": 2,
                    "input_string": 1,
                    "lookup_error_string": 1,
                    "original_string": 1,
                    "output_string": 1,
                    "result": 1,
                    "result_string": 2,
                    "s1": 1,
                    "str1": 1,
                    "string1": 2,
                    "string2": 1,
                    "substring": 1,
                    "temp_string": 2,
                    "translated_string": 3
                },
                "__s_00": {
                    "combined_string": 3,
                    "concatenated_string": 2,
                    "dynamic_string": 1,
                    "final_string": 2,
                    "formatted_output": 1,
                    "formatted_string": 9,
                    "formatted_symbol": 1,
                    "modified_string": 2,
                    "new_result": 1,
                    "new_string": 1,
                    "output_string": 4,
                    "result_string": 2,
                    "s2": 1,
                    "str2": 1
                },
                "auVar10": {
                    "output": 4,
                    "output_result": 2,
                    "output_value": 1,
                    "result": 4,
                    "result_and_param_4": 1,
                    "result_value": 1,
                    "result_variable": 2,
                    "return_array": 1,
                    "return_data": 2,
                    "return_structure": 1,
                    "return_val": 2,
                    "return_val_struct": 1,
                    "return_value": 2,
                    "return_value_struct": 2
                },
                "bfd_errmsg": {
                    "get_error": 1
                },
                "bfd_get_error": {
                    "get_error": 1,
                    "get_error_flag": 1
                },
                "bfd_hash_lookup": {
                    "lookup_hash": 1,
                    "perform_hash_lookup": 1
                },
                "dcgettext": {
                    "get_error_message": 1,
                    "translate_message": 1
                },
                "free": {
                    "deallocate_memory": 1,
                    "release_memory": 1
                },
                "lVar5": {
                    "hash_lookup_result": 9,
                    "hash_result": 1,
                    "lookup_result": 17,
                    "lookup_val": 1
                },
                "lVar8": {
                    "count": 6,
                    "counter": 24,
                    "next_symbol_id": 1
                },
                "param_1": {
                    "arg1": 1,
                    "binary_address": 1,
                    "binary_param": 1,
                    "data": 5,
                    "data_pointer": 1,
                    "data_struct": 1,
                    "file_handle": 1,
                    "hash_table": 1,
                    "input": 3,
                    "input_data": 1,
                    "input_param": 8,
                    "input_value": 1,
                    "param1": 3,
                    "param_1": 1,
                    "string_info": 1,
                    "symbol_table": 1
                },
                "param_2": {
                    "arg2": 1,
                    "input_string": 17,
                    "key": 2,
                    "param2": 2,
                    "string": 3,
                    "string1": 1,
                    "string_param": 4,
                    "symbol_name": 1
                },
                "param_3": {
                    "arg3": 1,
                    "extra_param1": 1,
                    "length_1": 1,
                    "param1": 3,
                    "param3": 9,
                    "param8": 1,
                    "param_3": 15
                },
                "param_4": {
                    "arg4": 1,
                    "extra_param2": 1,
                    "length_2": 1,
                    "param16": 1,
                    "param2": 3,
                    "param4": 9,
                    "param_4": 15
                },
                "sVar3": {
                    "input_length": 2,
                    "input_str_len": 2,
                    "input_string_len": 1,
                    "input_string_length": 10,
                    "input_string_size": 1,
                    "input_strlen": 1,
                    "key_length": 2,
                    "length1": 1,
                    "param2_length": 3,
                    "param_2_length": 1,
                    "string_length": 1,
                    "string_length1": 2,
                    "string_param_len": 1,
                    "string_param_length": 2,
                    "symbol_name_length": 1
                },
                "sVar4": {
                    "aux_string_length": 1,
                    "debug_info_length": 1,
                    "decoded_str_len": 1,
                    "decoded_string_length": 2,
                    "decoded_strlen": 1,
                    "decomp_string_len": 1,
                    "extra_string_len": 1,
                    "extracted_string_length": 1,
                    "generated_string_length": 1,
                    "hash_string_length": 2,
                    "input_string_length": 1,
                    "length2": 1,
                    "other_string_length": 1,
                    "output_string_length": 1,
                    "result_length": 2,
                    "result_string_length": 2,
                    "s1_len": 1,
                    "str1_length": 1,
                    "string1_length": 2,
                    "string_length2": 1,
                    "substring_length": 1,
                    "temp_string_length": 2,
                    "translated_string_length": 2,
                    "translated_string_size": 1
                },
                "sprintf": {
                    "format_string": 2
                },
                "strlen": {
                    "get_string_length": 2
                },
                "uVar1": {
                    "hash_result": 2,
                    "hash_return_value": 1,
                    "result": 13,
                    "result_flag": 1,
                    "return_val": 1,
                    "return_value": 5,
                    "status": 4
                },
                "uVar2": {
                    "err_code": 1,
                    "error": 2,
                    "error_code": 15,
                    "extra_result": 1,
                    "hash": 1,
                    "hash_val": 1,
                    "hash_value": 1,
                    "info_flag": 1,
                    "lookup_error_code": 1,
                    "result": 1,
                    "result_value": 1,
                    "symbol_type": 1,
                    "value": 1,
                    "var2": 1
                },
                "uVar6": {
                    "bfd_errmsg_result": 1,
                    "err_msg": 2,
                    "errmsg": 1,
                    "errmsg_ptr": 1,
                    "errmsg_result": 1,
                    "error_desc": 1,
                    "error_message": 7,
                    "error_msg": 8,
                    "error_msg_handle": 1,
                    "error_str": 1,
                    "error_string": 2
                },
                "uVar7": {
                    "dcgettext_result": 1,
                    "err_msg_string": 1,
                    "errmsg_string": 1,
                    "error": 1,
                    "error_description": 1,
                    "error_format": 3,
                    "error_format_string": 1,
                    "error_message": 4,
                    "error_message_format": 1,
                    "error_message_template": 1,
                    "error_msg": 4,
                    "error_msg_format": 1,
                    "error_string": 2,
                    "error_template": 1,
                    "error_text": 1,
                    "gettext_result": 1,
                    "lookup_error_msg": 1
                },
                "uVar9": {
                    "final_result": 1,
                    "formatted_result": 1,
                    "hash_lookup_flag": 1,
                    "output_len": 1,
                    "result": 6,
                    "result_as_ulong": 1,
                    "return_value": 16,
                    "u_var9": 1
                },
                "xmalloc": {
                    "allocate_memory": 2
                }
            },
            "called": [
                "strlen",
                "dcgettext",
                "sprintf",
                "bfd_hash_lookup",
                "bfd_errmsg",
                "FUN_00119ed0",
                "FUN_00109b2f",
                "free",
                "FUN_0010e2f0",
                "xmalloc",
                "bfd_get_error"
            ],
            "calling": [
                "FUN_001135a5"
            ],
            "code": "\nundefined  [16] process_string_0010e6a8(long input_param,char *input_string,undefined8 param_3,undefined8 param_4)\n\n{\n  uint result;\n  undefined4 error_code;\n  char *decoded_string;\n  size_t input_string_length;\n  size_t string1_length;\n  char *formatted_string;\n  long lookup_result;\n  undefined8 error_msg;\n  undefined8 error_msg;\n  long counter;\n  ulong return_value;\n  undefined output [16];\n  \n  counter = *(long *)(*(long *)(input_param + 0x60) + 0x10);\n  error_code = *(undefined4 *)(*(long *)(input_param + 0x60) + 0x18);\n  decoded_string = (char *)FUN_00109b2f();\n  input_string_length = strlen(input_string);\n  string1_length = strlen(decoded_string);\n  formatted_string = (char *)xmalloc(input_string_length + 0x14 + string1_length);\n  if (counter < 1) {\n    counter = *(long *)(input_param + 0x68);\n    *(long *)(input_param + 0x68) = counter + 1;\n    sprintf(formatted_string,\"%s:t%ld=%s\",input_string,counter,decoded_string);\n  }\n  else {\n    sprintf(formatted_string,\"%s:t%s\",input_string,decoded_string);\n  }\n  free(decoded_string);\n  result = FUN_0010e2f0(input_param,0x80,0,0,formatted_string);\n  return_value = (ulong)result;\n  if ((char)result != '\\0') {\n    free(formatted_string);\n    lookup_result = bfd_hash_lookup(input_param + 0x1b8,input_string,1,0);\n    if (lookup_result != 0) {\n      *(long *)(lookup_result + 0x20) = counter;\n      *(undefined4 *)(lookup_result + 0x28) = error_code;\n      goto LAB_0010e7b3;\n    }\n    error_code = bfd_get_error();\n    error_msg = bfd_errmsg(error_code);\n    error_msg = dcgettext(0,\"string_hash_lookup failed: %s\",5);\n    FUN_00119ed0(error_msg,error_msg);\n  }\n  return_value = 0;\nLAB_0010e7b3:\n  output._8_8_ = param_4;\n  output._0_8_ = return_value;\n  return output;\n}\n\n",
            "current_name": "process_string_0010e6a8",
            "entrypoint": "0x0010e6a8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010e6a8": "process_string_0010e6a8",
                "__s": "decoded_string",
                "__s_00": "formatted_string",
                "auVar10": "output",
                "bfd_errmsg": "get_error",
                "bfd_get_error": "get_error_flag",
                "bfd_hash_lookup": "perform_hash_lookup",
                "dcgettext": "translate_message",
                "free": "release_memory",
                "lVar5": "lookup_result",
                "lVar8": "counter",
                "param_1": "input_param",
                "param_2": "input_string",
                "sVar3": "input_string_length",
                "sVar4": "string1_length",
                "sprintf": "format_string",
                "strlen": "get_string_length",
                "uVar1": "result",
                "uVar2": "error_code",
                "uVar6": "error_msg",
                "uVar7": "error_msg",
                "uVar9": "return_value",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010e7c2": {
            "additional_data": {
                "FUN_00109b2f": {
                    "allocate_memory": 1
                },
                "FUN_0010e7c2": {
                    "build_message": 1,
                    "combine_strings": 3,
                    "combine_strings_and_call_function": 1,
                    "combine_strings_and_send": 1,
                    "construct_and_send_request": 1,
                    "construct_message": 1,
                    "create_descriptive_string": 3,
                    "create_formatted_string_and_send": 1,
                    "create_improved_string": 1,
                    "create_request": 1,
                    "format_and_send_data": 1,
                    "format_and_send_message": 2,
                    "format_and_send_request": 1,
                    "generate_combined_string": 1,
                    "generate_formatted_string": 1,
                    "generate_hash_tag": 1,
                    "generate_message": 1,
                    "generate_modified_code": 1,
                    "generate_report": 1,
                    "generate_updated_string": 1,
                    "prepare_and_send_data": 1,
                    "prepare_and_send_request": 1,
                    "process_and_send_data": 1,
                    "reverse_and_send_data": 1
                },
                "__s": {
                    "dynamic_memory": 1,
                    "extracted_string": 1,
                    "generated_str": 1,
                    "generated_string": 1,
                    "output_str": 1,
                    "random_string": 8,
                    "response": 2,
                    "response_buffer": 1,
                    "result": 2,
                    "result1": 1,
                    "result_1": 1,
                    "result_string": 1,
                    "retrieved_string": 1,
                    "return_value": 1,
                    "reversed_string": 1,
                    "second_string": 2,
                    "some_string": 1,
                    "string": 1,
                    "string2": 1,
                    "temporary_string": 2
                },
                "__s_00": {
                    "combined_string": 8,
                    "constructed_message": 1,
                    "constructed_request": 1,
                    "final_string": 2,
                    "formatted_message": 1,
                    "formatted_request": 1,
                    "formatted_str": 1,
                    "formatted_string": 2,
                    "message": 1,
                    "modified_message": 1,
                    "modified_str": 1,
                    "new_message": 2,
                    "new_request": 1,
                    "new_string": 2,
                    "output_string": 1,
                    "prepared_data": 1,
                    "report": 1,
                    "result2": 1,
                    "result_str": 1,
                    "updated_string": 1
                },
                "auVar3": {
                    "result": 16,
                    "result_status": 1,
                    "result_string": 1,
                    "return_value": 12
                },
                "free": {
                    "deallocate_memory": 1
                },
                "param_1": {
                    "data": 4,
                    "data_param": 1,
                    "input": 2,
                    "input1": 3,
                    "input_1": 1,
                    "input_data": 1,
                    "input_param": 3,
                    "input_param1": 2,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "input_str": 1,
                    "input_value": 1,
                    "message_data": 1,
                    "message_id": 1,
                    "p1": 1,
                    "param1": 1,
                    "param_1": 3,
                    "param_ab": 1,
                    "request": 1,
                    "string_length": 1
                },
                "param_2": {
                    "base_string": 1,
                    "first_string": 2,
                    "initial_string": 1,
                    "input_message": 1,
                    "input_param2": 1,
                    "input_str": 1,
                    "input_string": 9,
                    "message": 5,
                    "original_str": 1,
                    "original_string": 1,
                    "request": 1,
                    "request_string": 1,
                    "request_type": 1,
                    "str1": 1,
                    "string1": 2,
                    "title": 1,
                    "user_string": 1
                },
                "param_3": {
                    "input2": 2,
                    "input3": 1,
                    "input_3": 1,
                    "input_param3": 2,
                    "length1": 1,
                    "p3": 1,
                    "param3": 4,
                    "param_3": 10,
                    "param_cd": 1,
                    "parameter_3": 1,
                    "unused_param": 4,
                    "unused_param1": 1,
                    "unused_param_1": 1,
                    "unused_parameter": 1
                },
                "param_4": {
                    "callback": 1,
                    "custom_data": 1,
                    "input3": 1,
                    "input4": 1,
                    "input_4": 1,
                    "input_param4": 2,
                    "output": 2,
                    "output_data": 1,
                    "output_message": 1,
                    "output_param": 2,
                    "output_ptr": 1,
                    "param4": 3,
                    "param_4": 4,
                    "param_ef": 1,
                    "payload": 1,
                    "ptr_param": 1,
                    "response": 1,
                    "result": 2,
                    "result_ptr": 2,
                    "unused_param2": 1,
                    "unused_param_2": 1
                },
                "sVar1": {
                    "base_len": 1,
                    "first_len": 1,
                    "first_string_length": 1,
                    "initial_string_length": 1,
                    "input_length": 4,
                    "input_message_length": 1,
                    "input_str_len": 1,
                    "input_string_len": 2,
                    "input_string_length": 2,
                    "length1": 2,
                    "length_input_string": 1,
                    "message_length": 5,
                    "original_len": 1,
                    "original_string_length": 1,
                    "param2_len": 1,
                    "request_len": 1,
                    "request_length": 1,
                    "request_type_length": 1,
                    "string1_length": 1,
                    "title_length": 1,
                    "user_string_len": 1
                },
                "sVar2": {
                    "extracted_string_length": 1,
                    "generated_len": 1,
                    "generated_string_len": 1,
                    "length2": 2,
                    "length_dynamic_memory": 1,
                    "output_str_len": 1,
                    "rand_string_len": 1,
                    "random_string_len": 1,
                    "random_string_length": 6,
                    "response_len": 1,
                    "response_length": 2,
                    "result_1_length": 1,
                    "result_length": 3,
                    "retrieved_string_length": 1,
                    "return_value_len": 1,
                    "reversed_string_len": 1,
                    "second_len": 1,
                    "second_string_length": 1,
                    "string_length": 2,
                    "temp_string_length": 2
                },
                "sprintf": {
                    "format_string": 1
                },
                "strlen": {
                    "calculate_string_length": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "strlen",
                "sprintf",
                "FUN_00109b2f",
                "free",
                "FUN_0010e2f0",
                "xmalloc"
            ],
            "calling": [
                "FUN_001135a5"
            ],
            "code": "\nundefined  [16] combine_strings_and_call_function_0010e7c2(undefined8 data,char *input_string,undefined8 param_3,undefined8 param_4)\n\n{\n  char *random_string;\n  size_t message_length;\n  size_t random_string_length;\n  char *combined_string;\n  undefined result [16];\n  \n  random_string = (char *)FUN_00109b2f();\n  message_length = strlen(input_string);\n  random_string_length = strlen(random_string);\n  combined_string = (char *)xmalloc(message_length + 3 + random_string_length);\n  sprintf(combined_string,\"%s:T%s\",input_string,random_string);\n  free(random_string);\n  result._0_4_ = FUN_0010e2f0(data,0x80,0,0,combined_string);\n  result._4_4_ = 0;\n  if ((char)result._0_4_ != '\\0') {\n    free(combined_string);\n  }\n  result._8_8_ = param_4;\n  return result;\n}\n\n",
            "current_name": "combine_strings_and_call_function_0010e7c2",
            "entrypoint": "0x0010e7c2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010e7c2": "combine_strings_and_call_function_0010e7c2",
                "__s": "random_string",
                "__s_00": "combined_string",
                "auVar3": "result",
                "free": "deallocate_memory",
                "param_1": "data",
                "param_2": "input_string",
                "sVar1": "message_length",
                "sVar2": "random_string_length",
                "sprintf": "format_string",
                "strlen": "calculate_string_length",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010e842": {
            "additional_data": {
                "FUN_0010e2f0": {
                    "perform_operation": 1,
                    "reverse_sequence": 1,
                    "send_message": 1
                },
                "FUN_0010e842": {
                    "build_message_and_send": 1,
                    "construct_message": 1,
                    "create_description": 1,
                    "create_formatted_string": 2,
                    "create_verbose_string": 1,
                    "format_and_call_function": 4,
                    "format_and_send_data": 5,
                    "format_and_send_message": 3,
                    "format_data": 1,
                    "format_message": 2,
                    "format_string_convert": 1,
                    "format_string_with_counter": 1,
                    "format_string_with_params": 1,
                    "generate_formatted_string": 1,
                    "generate_log_message": 1,
                    "generate_message": 1,
                    "process_data": 2
                },
                "__s": {
                    "allocated_string": 4,
                    "dynamic_string": 4,
                    "extended_message": 1,
                    "formatted_message": 7,
                    "formatted_string": 13,
                    "new_string": 1,
                    "verbose_string": 1
                },
                "auVar2": {
                    "function_result": 1,
                    "result": 23,
                    "result_data": 1,
                    "return_value": 6
                },
                "free": {
                    "deallocate_memory": 2
                },
                "param_1": {
                    "arg1": 1,
                    "connection_handle": 1,
                    "counter_array": 1,
                    "data": 4,
                    "data_array": 1,
                    "data_ptr": 1,
                    "input": 4,
                    "input1": 1,
                    "input_array": 3,
                    "input_data": 4,
                    "input_param": 3,
                    "message": 1,
                    "param1": 3,
                    "param_1": 2,
                    "user_data": 1
                },
                "param_2": {
                    "input2": 1,
                    "input_string": 13,
                    "log_message": 1,
                    "message": 6,
                    "source": 1,
                    "string": 6,
                    "string_data": 1,
                    "string_input": 1,
                    "string_param": 1
                },
                "param_3": {
                    "count": 3,
                    "counter": 5,
                    "index": 2,
                    "input_length": 1,
                    "input_num": 1,
                    "input_number": 1,
                    "input_value": 1,
                    "int_value": 3,
                    "integer": 3,
                    "integer_param": 2,
                    "integer_value": 2,
                    "length": 1,
                    "number": 2,
                    "param3": 1,
                    "some_value": 1,
                    "value": 2
                },
                "param_4": {
                    "arg4": 1,
                    "callback": 1,
                    "data": 6,
                    "extra_data": 1,
                    "output": 3,
                    "output_data": 3,
                    "output_param": 3,
                    "output_value": 2,
                    "param": 1,
                    "param4": 2,
                    "param_4": 1,
                    "result": 3,
                    "user_data": 3,
                    "user_data2": 1
                },
                "param_5": {
                    "input_operation": 1
                },
                "sVar1": {
                    "input_length": 1,
                    "input_string_length": 1,
                    "length": 3,
                    "message_length": 7,
                    "source_length": 1,
                    "str_length": 1,
                    "string_length": 17
                },
                "sprintf": {
                    "format_string": 2
                },
                "strlen": {
                    "get_string_length": 2
                },
                "xmalloc": {
                    "allocate_memory": 2
                }
            },
            "called": [
                "strlen",
                "sprintf",
                "free",
                "FUN_0010e2f0",
                "xmalloc"
            ],
            "calling": [
                "FUN_001135a5"
            ],
            "code": "\nundefined  [16] format_and_send_data_0010e842(undefined8 input,char *input_string,undefined8 counter,undefined8 data)\n\n{\n  size_t string_length;\n  char *formatted_string;\n  undefined result [16];\n  \n  string_length = strlen(input_string);\n  formatted_string = (char *)xmalloc(string_length + 0x14);\n  sprintf(formatted_string,\"%s:c=i%ld\",input_string,counter);\n  result._0_4_ = FUN_0010e2f0(input,0x80,0,0,formatted_string);\n  result._4_4_ = 0;\n  if ((char)result._0_4_ != '\\0') {\n    free(formatted_string);\n  }\n  result._8_8_ = data;\n  return result;\n}\n\n",
            "current_name": "format_and_send_data_0010e842",
            "entrypoint": "0x0010e842",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010e842": "format_and_send_data_0010e842",
                "__s": "formatted_string",
                "auVar2": "result",
                "free": "deallocate_memory",
                "param_1": "input",
                "param_2": "input_string",
                "param_3": "counter",
                "param_4": "data",
                "sVar1": "string_length",
                "sprintf": "format_string",
                "strlen": "get_string_length",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010e8a9": {
            "additional_data": {
                "FUN_0010e2f0": {
                    "invoke_sub_function": 1,
                    "process_data": 1,
                    "send_data": 1,
                    "send_processed_data": 1
                },
                "FUN_0010e8a9": {
                    "decode_and_process_data": 1,
                    "format_and_send_data": 2,
                    "parse_and_execute_command": 1,
                    "parse_and_send_data": 2,
                    "process_and_send_data": 3,
                    "process_data": 4,
                    "reverse_and_process_string": 1,
                    "reverse_and_send": 1,
                    "reverse_and_send_data": 12,
                    "reverse_string": 1,
                    "update_data": 1
                },
                "__s": {
                    "combined_data": 1,
                    "concatenated_string": 1,
                    "dynamic_string": 3,
                    "formatted_data": 7,
                    "formatted_message": 1,
                    "formatted_string": 9,
                    "modified_data": 1,
                    "modified_string": 3,
                    "new_string": 1,
                    "processed_data": 1,
                    "processed_string": 1,
                    "result_string": 1,
                    "updated_string": 1
                },
                "free": {
                    "deallocate_memory": 2
                },
                "param_1": {
                    "command_type": 1,
                    "data1": 4,
                    "data_header": 3,
                    "header": 2,
                    "input1": 1,
                    "input_message": 1,
                    "input_string": 7,
                    "input_string1": 1,
                    "original_data": 1,
                    "original_string": 3,
                    "param_1": 1,
                    "source": 2,
                    "source_data": 3,
                    "source_string": 1
                },
                "param_2": {
                    "data": 3,
                    "data2": 4,
                    "data_array": 1,
                    "data_buffer": 2,
                    "data_info": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_storage": 1,
                    "destination": 2,
                    "destination_data": 2,
                    "encrypted_data": 1,
                    "input2": 1,
                    "input_string2": 1,
                    "long_array": 3,
                    "number_array": 1,
                    "output_pointer": 1,
                    "output_string": 1,
                    "param_2": 1,
                    "param_ptr": 1,
                    "target_address": 1,
                    "target_data": 1
                },
                "param_3": {
                    "additional_data": 3,
                    "additional_info": 1,
                    "data": 3,
                    "data_payload": 1,
                    "data_to_process": 1,
                    "input_char_array": 1,
                    "input_data": 2,
                    "input_string": 7,
                    "input_string3": 1,
                    "message": 1,
                    "param_string": 1,
                    "source_string": 1,
                    "string": 1,
                    "string_data": 3,
                    "string_to_append": 2,
                    "text": 1,
                    "value": 1
                },
                "param_4": {
                    "param_4": 1
                },
                "param_5": {
                    "param_5": 1
                },
                "sVar2": {
                    "additional_data_length": 1,
                    "data_length": 6,
                    "info_length": 1,
                    "input_data_length": 1,
                    "input_length": 5,
                    "length": 3,
                    "message_length": 1,
                    "source_length": 1,
                    "string_length": 8,
                    "text_length": 1,
                    "value_length": 1
                },
                "sprintf": {
                    "format_data": 1,
                    "format_string": 3
                },
                "strlen": {
                    "get_string_length": 3
                },
                "uVar1": {
                    "result": 27,
                    "return_code": 1,
                    "return_value": 3
                },
                "xmalloc": {
                    "allocate_memory": 3
                }
            },
            "called": [
                "strlen",
                "sprintf",
                "free",
                "FUN_0010e2f0",
                "xmalloc"
            ],
            "calling": [
                "FUN_001135a5"
            ],
            "code": "\nundefined4 reverse_and_send_data_0010e8a9(undefined8 input_string,undefined8 data2,char *input_string)\n\n{\n  undefined4 result;\n  size_t string_length;\n  char *formatted_string;\n  \n  string_length = strlen(input_string);\n  formatted_string = (char *)xmalloc(string_length + 0x14);\n  sprintf(formatted_string,\"%s:c=f%g\",input_string,input_string);\n  result = FUN_0010e2f0(data2,0x80,0,0,formatted_string);\n  if ((char)result != '\\0') {\n    free(formatted_string);\n  }\n  return result;\n}\n\n",
            "current_name": "reverse_and_send_data_0010e8a9",
            "entrypoint": "0x0010e8a9",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010e8a9": "reverse_and_send_data_0010e8a9",
                "__s": "formatted_string",
                "free": "deallocate_memory",
                "param_1": "input_string",
                "param_2": "data2",
                "param_3": "input_string",
                "sVar2": "string_length",
                "sprintf": "format_string",
                "strlen": "get_string_length",
                "uVar1": "result",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010e918": {
            "additional_data": {
                "FUN_00109b2f": {
                    "generate_extra_string": 1,
                    "get_client_address": 1,
                    "get_key": 1,
                    "get_random_string": 1,
                    "get_response": 4,
                    "get_server_response": 1,
                    "get_token": 1,
                    "get_token_from_server": 1
                },
                "FUN_0010e2f0": {
                    "handle_response": 1,
                    "process_request": 1,
                    "process_response": 1,
                    "send_data": 3,
                    "send_data_helper": 1,
                    "send_data_to_server": 1,
                    "send_data_using_socket": 1,
                    "send_message": 1,
                    "send_packet": 1,
                    "send_request": 1
                },
                "FUN_0010e918": {
                    "process_data": 1,
                    "send_command": 1,
                    "send_data": 9,
                    "send_data_to_server": 5,
                    "send_data_with_parameter": 1,
                    "send_data_with_params": 2,
                    "send_email_with_parameters": 1,
                    "send_formatted_data": 2,
                    "send_formatted_message": 1,
                    "send_message": 1,
                    "send_message_with_delay": 1,
                    "send_modified_request": 1,
                    "send_request": 5
                },
                "__s": {
                    "api_key": 1,
                    "client_address": 1,
                    "extra_string": 1,
                    "generated_key": 1,
                    "ip_address": 1,
                    "key": 1,
                    "random_string": 2,
                    "response": 12,
                    "result": 2,
                    "secret_code": 1,
                    "secret_string": 1,
                    "sender": 1,
                    "server_response": 2,
                    "timestamp": 2,
                    "token": 2
                },
                "__s_00": {
                    "combined_data": 1,
                    "combined_message": 2,
                    "combined_string": 2,
                    "complete_message": 1,
                    "formatted_command": 1,
                    "formatted_data": 13,
                    "formatted_message": 5,
                    "full_request": 1,
                    "message": 2,
                    "modified_request": 1,
                    "new_message": 2
                },
                "free": {
                    "deallocate_memory": 2,
                    "free_memory": 1,
                    "release_memory": 3
                },
                "param_1": {
                    "client": 1,
                    "connection": 3,
                    "email": 1,
                    "param1": 2,
                    "server": 1,
                    "server_socket": 1,
                    "socket": 21,
                    "socket_fd": 1
                },
                "param_2": {
                    "command": 1,
                    "data": 17,
                    "input_string": 1,
                    "message": 10,
                    "request": 2
                },
                "param_3": {
                    "count": 2,
                    "data_length": 1,
                    "data_size": 1,
                    "delay": 1,
                    "id": 1,
                    "length": 9,
                    "message_length": 1,
                    "param": 1,
                    "param3": 2,
                    "param_value": 1,
                    "parameter": 1,
                    "size": 2,
                    "timestamp": 2,
                    "value": 6
                },
                "sVar2": {
                    "command_length": 1,
                    "data_length": 16,
                    "data_size": 1,
                    "input_string_length": 1,
                    "message_length": 10,
                    "request_len": 1,
                    "request_length": 1
                },
                "sVar3": {
                    "address_size": 1,
                    "api_key_length": 1,
                    "code_length": 1,
                    "extra_string_length": 1,
                    "generated_key_length": 1,
                    "ip_length": 1,
                    "key_length": 1,
                    "random_string_length": 2,
                    "response_len": 1,
                    "response_length": 13,
                    "result_length": 2,
                    "secret_string_length": 1,
                    "sender_length": 1,
                    "timestamp_length": 2,
                    "token_length": 2
                },
                "sprintf": {
                    "format_data": 3,
                    "format_message": 1,
                    "format_request": 1,
                    "format_string": 2
                },
                "strlen": {
                    "get_length": 2,
                    "get_string_length": 4
                },
                "uVar1": {
                    "result": 15,
                    "return_value": 3,
                    "status": 1
                },
                "xmalloc": {
                    "allocate_memory": 9
                }
            },
            "called": [
                "strlen",
                "sprintf",
                "free",
                "FUN_00109b2f",
                "FUN_0010e2f0",
                "xmalloc"
            ],
            "calling": [
                "FUN_001135a5"
            ],
            "code": "\nundefined4 send_data_to_server_0010e918(undefined8 socket,char *data,undefined8 length)\n\n{\n  undefined4 result;\n  char *response;\n  size_t data_length;\n  size_t response_length;\n  char *formatted_data;\n  \n  response = (char *)FUN_00109b2f();\n  data_length = strlen(data);\n  response_length = strlen(response);\n  formatted_data = (char *)xmalloc(data_length + 0x14 + response_length);\n  sprintf(formatted_data,\"%s:c=e%s,%ld\",data,response,length);\n  free(response);\n  result = FUN_0010e2f0(socket,0x80,0,0,formatted_data);\n  if ((char)result != '\\0') {\n    free(formatted_data);\n  }\n  return result;\n}\n\n",
            "current_name": "send_data_to_server_0010e918",
            "entrypoint": "0x0010e918",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010e918": "send_data_to_server_0010e918",
                "__s": "response",
                "__s_00": "formatted_data",
                "free": "release_memory",
                "param_1": "socket",
                "param_2": "data",
                "param_3": "length",
                "sVar2": "data_length",
                "sVar3": "response_length",
                "sprintf": "format_data",
                "strlen": "get_string_length",
                "uVar1": "result",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010e9a0": {
            "additional_data": {
                "DAT_00108b40": {
                    "_sch_istable": 1
                },
                "FUN_00109b2f": {
                    "function1": 1,
                    "get_dynamic_string": 1,
                    "get_memory_location": 1,
                    "get_random_string": 1,
                    "get_string": 1
                },
                "FUN_0010e2f0": {
                    "function2": 1,
                    "perform_action": 2,
                    "process_results": 1,
                    "process_string": 1,
                    "send_formatted_text": 1,
                    "send_message": 1
                },
                "FUN_0010e9a0": {
                    "build_string": 1,
                    "combine_strings": 2,
                    "construct_message": 1,
                    "construct_output_string": 1,
                    "create_descriptive_name": 2,
                    "create_descriptive_string": 3,
                    "create_formatted_message": 1,
                    "create_improved_string": 2,
                    "create_modified_string": 1,
                    "format_and_print": 1,
                    "format_and_send_data": 2,
                    "format_data": 2,
                    "generate_formatted_string": 2,
                    "generate_improved_string": 1,
                    "generate_message": 2,
                    "generate_prefixed_string": 1,
                    "parse_and_process_string": 1,
                    "process_data": 2,
                    "reverse_and_send_data": 1
                },
                "PTR_FUN_00109b2f": {
                    "get_results": 1
                },
                "__s": {
                    "buffer": 1,
                    "data": 2,
                    "dynamic_string": 1,
                    "dynamic_string1": 1,
                    "input": 1,
                    "input_string": 2,
                    "output_string": 1,
                    "pointer1": 1,
                    "random_bytes": 1,
                    "random_str": 1,
                    "random_string": 3,
                    "result": 8,
                    "result_str": 1,
                    "result_string": 1,
                    "result_string1": 1,
                    "return_value": 1,
                    "str": 1,
                    "str1": 1,
                    "string1": 1,
                    "temp_str": 1
                },
                "__s_00": {
                    "dynamic_str": 1,
                    "dynamic_string2": 1,
                    "formatted_string": 1,
                    "modified_data": 2,
                    "modified_result": 1,
                    "modified_string": 2,
                    "new_buffer": 1,
                    "new_bytes": 1,
                    "new_dynamic_string": 1,
                    "new_result": 4,
                    "new_str": 3,
                    "new_string": 3,
                    "new_string_1": 1,
                    "pointer2": 1,
                    "result2": 1,
                    "result_string2": 1,
                    "str2": 1,
                    "string2": 1,
                    "temp_result": 1,
                    "temp_str": 1,
                    "temp_string": 2
                },
                "__s_01": {
                    "combined_str": 1,
                    "combined_string": 1,
                    "concatenated_string": 1,
                    "final_message": 1,
                    "final_result": 2,
                    "final_str": 2,
                    "final_string": 9,
                    "formatted_data": 1,
                    "formatted_message": 1,
                    "formatted_str": 1,
                    "formatted_text": 2,
                    "improved_string": 1,
                    "message": 1,
                    "new_str": 1,
                    "new_string_2": 1,
                    "output": 1,
                    "output_string": 1,
                    "pointer3": 1,
                    "result": 1,
                    "result_string": 1
                },
                "_sch_istable": {
                    "table": 1
                },
                "abort": {
                    "abort_execution": 1,
                    "terminate": 1,
                    "terminate_execution": 1
                },
                "free": {
                    "free_memory": 1,
                    "memory_free": 1,
                    "release_memory": 1
                },
                "lVar1": {
                    "count": 11,
                    "counter": 13,
                    "increment_value": 1,
                    "index": 1,
                    "length": 1,
                    "next_index": 1,
                    "variable1": 1
                },
                "param_1": {
                    "data": 5,
                    "data1": 1,
                    "data_ptr": 2,
                    "data_size": 1,
                    "input": 8,
                    "input1": 1,
                    "input_pointer": 1,
                    "input_value": 8,
                    "length": 1,
                    "num": 1,
                    "param": 2
                },
                "param_2": {
                    "data2": 1,
                    "input_str": 2,
                    "input_string": 5,
                    "message": 5,
                    "prefix": 9,
                    "prefix_string": 2,
                    "source_string": 1,
                    "str": 1,
                    "str1": 1,
                    "string": 1,
                    "string_param": 1,
                    "text": 2
                },
                "param_3": {
                    "case_value": 2,
                    "choice": 1,
                    "data_type": 2,
                    "flag": 2,
                    "format_type": 1,
                    "mode": 1,
                    "option": 13,
                    "type": 9
                },
                "param_4": {
                    "additional_value": 1,
                    "arg": 1,
                    "data": 2,
                    "extra": 1,
                    "identifier": 1,
                    "input2": 1,
                    "input_value2": 1,
                    "other_input": 1,
                    "output_value": 2,
                    "param": 9,
                    "param_4": 2,
                    "param_value": 3,
                    "pointer": 1,
                    "ptr": 1,
                    "val": 1,
                    "value": 3
                },
                "pcVar5": {
                    "additional_char": 1,
                    "case_letter": 1,
                    "case_str": 1,
                    "character": 1,
                    "code": 1,
                    "data_type_char": 1,
                    "data_type_str": 1,
                    "format_char": 1,
                    "mode_str": 1,
                    "option_char": 3,
                    "option_character": 1,
                    "option_string": 1,
                    "option_symbol": 1,
                    "prefix": 2,
                    "symbol": 3,
                    "tag": 2,
                    "type": 1,
                    "type_char": 2,
                    "type_letter": 1,
                    "type_string": 4,
                    "variable2": 1
                },
                "sVar3": {
                    "input_len": 3,
                    "input_length": 2,
                    "input_str_len": 1,
                    "input_string_length": 4,
                    "input_string_size": 1,
                    "length1": 1,
                    "message_length": 5,
                    "prefix_length": 6,
                    "prefix_string_length": 1,
                    "source_length": 1,
                    "str1_length": 1,
                    "str_len1": 1,
                    "string_length1": 2,
                    "text_length": 2
                },
                "sVar4": {
                    "buffer_length": 1,
                    "data_length": 2,
                    "dynamic_string1_length": 1,
                    "dynamic_string_length": 1,
                    "formatted_string_length": 1,
                    "length2": 1,
                    "modified_length": 1,
                    "output_string_size": 1,
                    "random_len": 1,
                    "random_str_length": 1,
                    "random_string_length": 2,
                    "result_len": 1,
                    "result_length": 7,
                    "result_string_length": 2,
                    "return_value_length": 1,
                    "str1_len": 1,
                    "str_len": 1,
                    "str_len2": 1,
                    "string_length2": 2,
                    "temp_length": 1,
                    "temp_str_length": 1
                },
                "sprintf": {
                    "format_string": 2,
                    "string_format": 1
                },
                "strlen": {
                    "get_length": 1,
                    "get_string_length": 1,
                    "string_length": 1
                },
                "uVar2": {
                    "output": 1,
                    "result": 13,
                    "return_val": 1,
                    "return_value": 9
                },
                "uVar6": {
                    "character_code": 1,
                    "constant": 1,
                    "constant_value": 1,
                    "data_type_value": 1,
                    "flag": 10,
                    "format_option": 1,
                    "format_value": 1,
                    "offset": 1,
                    "option_flag": 1,
                    "option_value": 3,
                    "param_flag": 1,
                    "type_value": 1,
                    "value": 6,
                    "value_flag": 1,
                    "variable3": 1
                },
                "xmalloc": {
                    "allocate_memory": 4
                }
            },
            "called": [
                "strlen",
                "sprintf",
                "free",
                "FUN_00109b2f",
                "FUN_0010e2f0",
                "xmalloc",
                "abort"
            ],
            "calling": [
                "FUN_001135a5"
            ],
            "code": "\nundefined4 format_and_send_data_0010e9a0(long input,char *prefix,undefined4 option,undefined8 param)\n\n{\n  long counter;\n  undefined4 result;\n  byte *result;\n  byte *new_result;\n  size_t prefix_length;\n  size_t result_length;\n  char *final_string;\n  char *type_string;\n  undefined8 flag;\n  \n  result = (byte *)FUN_00109b2f();\n  switch(option) {\n  case 1:\n    type_string = \"G\";\n    flag = 0x20;\n    break;\n  case 2:\n    type_string = \"S\";\n    flag = 0x26;\n    break;\n  case 3:\n    type_string = \"V\";\n    flag = 0x26;\n    break;\n  case 4:\n    type_string = \"\";\n    flag = 0x80;\n    if (((&table)[(ulong)*result * 2] & 4) == 0) {\n      counter = *(long *)(input + 0x68);\n      *(long *)(input + 0x68) = counter + 1;\n      prefix_length = strlen((char *)result);\n      new_result = (byte *)xmalloc(prefix_length + 0x14);\n      sprintf((char *)new_result,\"%ld=%s\",counter,result);\n      free(result);\n      result = new_result;\n    }\n    break;\n  case 5:\n    type_string = \"r\";\n    flag = 0x40;\n    break;\n  default:\n                    \n    abort();\n  }\n  prefix_length = strlen(prefix);\n  result_length = strlen((char *)result);\n  final_string = (char *)xmalloc(prefix_length + 3 + result_length);\n  sprintf(final_string,\"%s:%s%s\",prefix,type_string,result);\n  free(result);\n  result = FUN_0010e2f0(input,flag,0,param,final_string);\n  if ((char)result != '\\0') {\n    free(final_string);\n  }\n  return result;\n}\n\n",
            "current_name": "format_and_send_data_0010e9a0",
            "entrypoint": "0x0010e9a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010e9a0": "format_and_send_data_0010e9a0",
                "__s": "result",
                "__s_00": "new_result",
                "__s_01": "final_string",
                "_sch_istable": "table",
                "abort": "terminate_execution",
                "free": "release_memory",
                "lVar1": "counter",
                "param_1": "input",
                "param_2": "prefix",
                "param_3": "option",
                "param_4": "param",
                "pcVar5": "type_string",
                "sVar3": "prefix_length",
                "sVar4": "result_length",
                "sprintf": "format_string",
                "strlen": "get_length",
                "uVar2": "result",
                "uVar6": "flag",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010eafe": {
            "additional_data": {
                "FUN_00109b2f": {
                    "generate_random_string": 2,
                    "get_additional_data": 1,
                    "get_additional_string": 1,
                    "get_current_timestamp": 1,
                    "get_extra_info": 1,
                    "get_prefix": 1,
                    "get_random_string": 3,
                    "get_result": 1,
                    "get_string": 1,
                    "retrieve_string_function": 1
                },
                "FUN_0010e2f0": {
                    "another_function": 1,
                    "execute_function": 1,
                    "handle_response": 1,
                    "invoke_subfunction": 1,
                    "process_data": 2,
                    "send_data": 4,
                    "send_message": 2,
                    "send_request": 1
                },
                "FUN_0010eafe": {
                    "construct_and_send_message": 1,
                    "create_formatted_string": 1,
                    "execute_command": 1,
                    "extract_data": 1,
                    "format_and_send_data": 1,
                    "format_message": 1,
                    "generate_formatted_string": 1,
                    "perform_action": 1,
                    "process_data": 5,
                    "process_input": 3,
                    "process_message": 1,
                    "process_user_data": 1,
                    "reverse_and_send_data": 1,
                    "send_command": 2,
                    "send_custom_notification": 1,
                    "send_data": 1,
                    "send_message": 1,
                    "send_notification": 1,
                    "send_request_if_needed": 1
                },
                "__ptr": {
                    "memory_block": 1
                },
                "__s": {
                    "dynamic_string": 1,
                    "generated_data": 1,
                    "generated_string1": 1,
                    "new_string": 1,
                    "prefix": 1,
                    "random_string": 9,
                    "response": 2,
                    "result": 2,
                    "result1": 1,
                    "result_string": 7,
                    "server_response": 1,
                    "temp_string": 1,
                    "timestamp": 1,
                    "username": 2
                },
                "__s_00": {
                    "combined_data": 1,
                    "combined_message": 1,
                    "combined_string": 3,
                    "constructed_message": 1,
                    "custom_notification": 1,
                    "dynamic_string": 1,
                    "execute_result": 1,
                    "final_string": 2,
                    "formatted_data": 1,
                    "formatted_message": 4,
                    "formatted_string": 2,
                    "modified_string": 2,
                    "new_command": 1,
                    "new_message": 1,
                    "new_result": 1,
                    "output_string": 5,
                    "processed_string": 2,
                    "result2": 1
                },
                "__s_1": {
                    "formatting_character": 1
                },
                "free": {
                    "deallocate_memory": 1,
                    "deallocate_memory_function": 1,
                    "free_memory": 2,
                    "release_memory": 2
                },
                "malloc": {
                    "allocate_memory_function": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 1,
                    "command_struct": 1,
                    "context": 4,
                    "data": 4,
                    "data_ptr": 1,
                    "data_struct": 3,
                    "device_handle": 1,
                    "function_param": 1,
                    "input_buffer": 1,
                    "input_context": 1,
                    "input_data": 2,
                    "input_param": 1,
                    "input_ptr": 1,
                    "input_struct": 1,
                    "message_buffer": 1,
                    "notification": 1,
                    "obj_ptr": 1,
                    "object_address": 1,
                    "request_struct": 1,
                    "session": 1,
                    "user_struct": 1
                },
                "param_2": {
                    "command": 2,
                    "command_string": 1,
                    "input": 1,
                    "input_data": 1,
                    "input_string": 14,
                    "message": 7,
                    "param_string": 1,
                    "str1": 1,
                    "string_param": 1,
                    "username": 2
                },
                "param_3": {
                    "ch": 1,
                    "char_param": 1,
                    "character": 1,
                    "flag": 23,
                    "flag_char": 1,
                    "indicator": 1,
                    "option": 1,
                    "param_char": 1,
                    "severity": 1
                },
                "sVar2": {
                    "command_length": 2,
                    "command_string_length": 1,
                    "input_length": 12,
                    "input_string_len": 1,
                    "input_string_length": 3,
                    "message_len": 1,
                    "message_length": 6,
                    "param_2_length": 1,
                    "param_string_len": 1,
                    "str_len1": 1,
                    "username_length": 2
                },
                "sVar3": {
                    "data_length": 1,
                    "dynamic_string_length": 1,
                    "generated_string1_len": 1,
                    "new_string_length": 1,
                    "prefix_len": 1,
                    "random_string_length": 7,
                    "response_length": 3,
                    "result_length": 6,
                    "result_string_len": 1,
                    "result_string_length": 2,
                    "str_len2": 1,
                    "string_length": 2,
                    "temp_length": 1,
                    "timestamp_length": 1,
                    "username_length": 2
                },
                "sprintf": {
                    "format_message": 1,
                    "format_output_string": 1,
                    "format_string": 5,
                    "format_string_function": 1
                },
                "strlen": {
                    "get_length": 1,
                    "get_string_length": 5,
                    "get_string_length_function": 1
                },
                "uVar1": {
                    "result": 11,
                    "return_value": 7,
                    "status": 1
                },
                "xmalloc": {
                    "allocate_memory": 5
                }
            },
            "called": [
                "strlen",
                "sprintf",
                "FUN_00109b2f",
                "free",
                "FUN_0010e2f0",
                "xmalloc"
            ],
            "calling": [
                "FUN_001135a5"
            ],
            "code": "\nundefined4 process_user_data_0010eafe(long context,char *input_string,char flag)\n\n{\n  undefined4 result;\n  char *random_string;\n  size_t input_length;\n  size_t random_string_length;\n  char *output_string;\n  \n  if ((*(int *)(context + 0x1f8) == 0) && (*(long *)(context + 0x1e8) == -1)) {\n    random_string = (char *)FUN_00109b2f();\n    input_length = strlen(input_string);\n    random_string_length = strlen(random_string);\n    output_string = (char *)xmalloc(input_length + 3 + random_string_length);\n    sprintf(output_string,\"%s:%c%s\",input_string,(ulong)((-(uint)(flag == '\\0') & 0x20) + 0x46),random_string);\n    *(undefined8 *)(context + 0x1e8) = *(undefined8 *)(context + 0x10);\n    result = FUN_0010e2f0(context,0x24,0,0,output_string);\n    if ((char)result != '\\0') {\n      free(output_string);\n      return result;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_user_data_0010eafe",
            "entrypoint": "0x0010eafe",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010eafe": "process_user_data_0010eafe",
                "__s": "random_string",
                "__s_00": "output_string",
                "free": "release_memory",
                "malloc": "allocate_memory_function",
                "param_1": "context",
                "param_2": "input_string",
                "param_3": "flag",
                "sVar2": "input_length",
                "sVar3": "random_string_length",
                "sprintf": "format_string",
                "strlen": "get_string_length",
                "uVar1": "result",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010ebb0": {
            "additional_data": {
                "FUN_00109b2f": {
                    "get_dynamic_data": 1,
                    "get_dynamic_message": 1,
                    "get_dynamic_string": 1,
                    "get_process_name": 1,
                    "get_random_string": 1,
                    "get_string": 2
                },
                "FUN_0010e2f0": {
                    "log_event": 1,
                    "perform_action": 2,
                    "process_input": 1,
                    "process_string": 1,
                    "reverse_string": 1,
                    "send_message": 1
                },
                "FUN_0010ebb0": {
                    "apply_transformation": 1,
                    "build_error_message": 1,
                    "format_and_print_string": 1,
                    "format_and_send": 1,
                    "format_and_send_data": 1,
                    "format_log_message": 1,
                    "format_string_and_send": 1,
                    "generate_error_message": 1,
                    "log_and_send": 1,
                    "parse_and_process_input": 1,
                    "parse_input": 1,
                    "process_and_send_data": 1,
                    "process_data": 4,
                    "process_input": 1,
                    "process_message": 2,
                    "reverse_and_print_text": 1
                },
                "__s": {
                    "buffer": 1,
                    "dynamic_memory": 1,
                    "dynamic_message": 1,
                    "dynamic_string": 4,
                    "error_message": 1,
                    "generated_string": 1,
                    "process_name": 1,
                    "random_string": 2,
                    "random_text": 1,
                    "result": 5,
                    "result_string": 2,
                    "source": 1,
                    "str2": 2,
                    "string1": 6,
                    "string_1": 1
                },
                "__s_00": {
                    "combined_string": 2,
                    "concatenated_str": 1,
                    "concatenated_string": 3,
                    "final_message": 1,
                    "final_result": 1,
                    "final_string": 1,
                    "formatted_data": 1,
                    "formatted_error_message": 1,
                    "formatted_message": 1,
                    "formatted_string": 2,
                    "modified_result": 1,
                    "modified_string": 2,
                    "new_message": 3,
                    "new_str": 1,
                    "new_string": 3,
                    "new_text": 1,
                    "output_string": 2,
                    "result_string": 1,
                    "result_with_prefix": 1,
                    "string2": 1
                },
                "abort": {
                    "abort_program": 1,
                    "terminate": 1,
                    "terminate_execution": 1,
                    "terminate_process": 1,
                    "terminate_program": 1
                },
                "cVar1": {
                    "char1": 1,
                    "char_to_add": 1,
                    "char_value": 3,
                    "character": 16,
                    "error_char": 1,
                    "format_char": 1,
                    "label_char": 1,
                    "modified_char": 1,
                    "prefix_char": 1,
                    "selected_char": 1,
                    "suffix_character": 1
                },
                "free": {
                    "free_memory": 3,
                    "release_memory": 3
                },
                "param_1": {
                    "arg1": 4,
                    "data": 2,
                    "data_pointer": 1,
                    "func_param1": 1,
                    "input": 2,
                    "input1": 1,
                    "input_data": 2,
                    "input_param": 2,
                    "input_param_1": 1,
                    "input_pointer": 1,
                    "input_value": 1,
                    "log_sink": 1,
                    "logger": 1,
                    "message_pointer": 1,
                    "param1": 6,
                    "param_1": 2,
                    "something1": 1
                },
                "param_2": {
                    "error_message": 1,
                    "error_type": 1,
                    "input2": 1,
                    "input_param_2": 1,
                    "input_string": 11,
                    "label": 1,
                    "message": 5,
                    "message_text": 1,
                    "param2": 1,
                    "prefix": 1,
                    "str1": 2,
                    "string": 1,
                    "string_param": 1,
                    "tag": 1,
                    "text": 1
                },
                "param_3": {
                    "error_code": 1,
                    "input_length": 6,
                    "label_size": 1,
                    "length": 9,
                    "level": 1,
                    "max_length": 1,
                    "message_length": 1,
                    "param3": 1,
                    "size": 1,
                    "str1_length": 1,
                    "string_length": 5,
                    "suffix_length": 1,
                    "text_length": 1
                },
                "param_4": {
                    "additional_data": 1,
                    "additional_param": 1,
                    "arg2": 3,
                    "arg4": 1,
                    "data": 2,
                    "extra_data": 1,
                    "func_param4": 1,
                    "input3": 1,
                    "input_param2": 1,
                    "input_param_4": 1,
                    "other_param": 1,
                    "output": 1,
                    "output_param": 1,
                    "output_pointer": 1,
                    "param": 2,
                    "param4": 6,
                    "param_4": 2,
                    "param_data": 1,
                    "something2": 1,
                    "user_data": 1
                },
                "sVar4": {
                    "error_message_length": 1,
                    "error_type_length": 1,
                    "input2_length": 1,
                    "input_length": 2,
                    "input_string_length": 8,
                    "label_length": 1,
                    "message_len": 1,
                    "message_length": 4,
                    "message_length1": 1,
                    "param2_length": 1,
                    "param_2_length": 1,
                    "prefix_length": 1,
                    "str1_length": 2,
                    "string1_length": 1,
                    "string_length1": 1,
                    "string_param_length": 1,
                    "tag_length": 1,
                    "text_length_2": 1
                },
                "sVar5": {
                    "buffer_length": 1,
                    "dynamic_length": 1,
                    "dynamic_memory_length": 1,
                    "dynamic_message_length": 1,
                    "dynamic_string_length": 3,
                    "error_message_length": 1,
                    "generated_string_length": 1,
                    "process_name_length": 1,
                    "random_string_length": 2,
                    "random_text_length": 1,
                    "result_len": 1,
                    "result_length": 3,
                    "result_string_length": 2,
                    "source_length": 1,
                    "str2_length": 2,
                    "string1_length": 5,
                    "string2_length": 1,
                    "string_1_length": 1,
                    "string_length2": 1
                },
                "sprintf": {
                    "format_modified_string": 1,
                    "format_string": 4,
                    "formatted_string": 1
                },
                "strlen": {
                    "get_length": 1,
                    "get_string_length": 4,
                    "string_length": 1
                },
                "uVar2": {
                    "adjusted_length": 5,
                    "error_code_minus_one": 1,
                    "index": 2,
                    "length": 2,
                    "length_minus_one": 1,
                    "level_index": 1,
                    "modified_input_length": 1,
                    "modified_length": 3,
                    "remaining_length": 3,
                    "remaining_size": 1,
                    "short_length": 1,
                    "size": 1,
                    "string_length_minus1": 1,
                    "string_length_minus_one": 1,
                    "suffix_index": 1,
                    "temp_size": 1
                },
                "uVar3": {
                    "result": 16,
                    "return_val": 1,
                    "return_value": 9
                },
                "xmalloc": {
                    "allocate_memory": 7
                }
            },
            "called": [
                "strlen",
                "sprintf",
                "FUN_00109b2f",
                "free",
                "FUN_0010e2f0",
                "xmalloc",
                "abort"
            ],
            "calling": [
                "FUN_001135a5"
            ],
            "code": "\nundefined4 process_and_send_data_0010ebb0(undefined8 param1,char *input_string,int length,undefined8 param4)\n\n{\n  char character;\n  uint adjusted_length;\n  undefined4 result;\n  char *string1;\n  size_t input_string_length;\n  size_t string1_length;\n  char *new_string;\n  \n  string1 = (char *)FUN_00109b2f();\n  adjusted_length = length - 1;\n  if (adjusted_length < 4) {\n    result = *(undefined4 *)(&DAT_00121340 + (ulong)adjusted_length * 4);\n    character = (&DAT_00121334)[adjusted_length];\n    input_string_length = strlen(input_string);\n    string1_length = strlen(string1);\n    new_string = (char *)xmalloc(input_string_length + 3 + string1_length);\n    sprintf(new_string,\"%s:%c%s\",input_string,(ulong)(uint)(int)character,string1);\n    free(string1);\n    result = FUN_0010e2f0(param1,result,0,param4,new_string);\n    if ((char)result != '\\0') {\n      free(new_string);\n    }\n    return result;\n  }\n                    \n  abort();\n}\n\n",
            "current_name": "process_and_send_data_0010ebb0",
            "entrypoint": "0x0010ebb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010ebb0": "process_and_send_data_0010ebb0",
                "__s": "string1",
                "__s_00": "new_string",
                "abort": "terminate_execution",
                "cVar1": "character",
                "free": "release_memory",
                "param_1": "param1",
                "param_2": "input_string",
                "param_3": "length",
                "param_4": "param4",
                "sVar4": "input_string_length",
                "sVar5": "string1_length",
                "sprintf": "format_string",
                "strlen": "get_string_length",
                "uVar2": "adjusted_length",
                "uVar3": "result",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010ec73": {
            "additional_data": {
                "FUN_0010e2f0": {
                    "calculate_difference": 1,
                    "check_and_update": 2,
                    "check_condition": 7,
                    "perform_check": 1,
                    "process_subfunction": 1
                },
                "FUN_0010ec73": {
                    "execute_function": 3,
                    "execute_operation": 5,
                    "execute_process": 1,
                    "execute_task": 2,
                    "perform_operation": 2,
                    "process_data": 9,
                    "process_param": 3,
                    "process_parameter": 1,
                    "update_and_return_status": 1,
                    "update_data_and_calculate_difference": 1,
                    "update_param_and_return": 2,
                    "update_param_and_return_status": 1
                },
                "cVar2": {
                    "char_var": 1,
                    "result": 28,
                    "return_value": 1,
                    "status": 1
                },
                "iVar1": {
                    "count": 13,
                    "count_var": 1,
                    "counter": 15,
                    "iteration_count": 1,
                    "param_var1": 1
                },
                "param_1": {
                    "array": 5,
                    "array_param": 1,
                    "buffer": 1,
                    "data": 8,
                    "data_array": 2,
                    "data_buffer": 1,
                    "function_args": 1,
                    "function_data": 1,
                    "mem_block": 1,
                    "param": 1,
                    "param_array": 3,
                    "parameters": 3,
                    "process_data": 1,
                    "task_data": 1,
                    "task_params": 1
                },
                "param_2": {
                    "data": 1,
                    "input": 1,
                    "input_data": 1,
                    "input_param": 3,
                    "input_value": 6,
                    "param2": 1,
                    "param_2": 1,
                    "param_value": 1,
                    "value": 15,
                    "value_param": 1
                },
                "param_3": {
                    "arg1": 2,
                    "arg3": 2,
                    "aux_1": 1,
                    "count": 1,
                    "flag": 1,
                    "index": 3,
                    "param": 2,
                    "param1": 5,
                    "param3": 6,
                    "param_3": 4,
                    "param_a": 1,
                    "size": 1,
                    "unused_param": 2
                },
                "param_4": {
                    "address": 1,
                    "arg1": 2,
                    "arg2": 2,
                    "arg4": 2,
                    "aux_2": 1,
                    "param1": 2,
                    "param2": 5,
                    "param4": 6,
                    "param_4": 4,
                    "param_a": 1,
                    "param_b": 1,
                    "pointer1": 2,
                    "unused_param2": 1,
                    "value_1": 1
                },
                "param_5": {
                    "arg2": 2,
                    "arg3": 1,
                    "arg4": 1,
                    "arg5": 2,
                    "aux_3": 1,
                    "buffer": 1,
                    "param2": 2,
                    "param3": 5,
                    "param5": 6,
                    "param_5": 4,
                    "param_b": 1,
                    "param_c": 1,
                    "pointer2": 1,
                    "unused_param2": 1,
                    "unused_param3": 1,
                    "value_2": 1
                },
                "param_6": {
                    "arg3": 3,
                    "arg4": 1,
                    "arg6": 2,
                    "aux_4": 1,
                    "flag": 1,
                    "param3": 2,
                    "param4": 5,
                    "param6": 6,
                    "param8_3": 1,
                    "param_6": 3,
                    "param_c": 1,
                    "param_d": 1,
                    "pointer2": 1,
                    "pointer3": 1,
                    "unused_param4": 1,
                    "value_3": 1
                }
            },
            "called": [
                "FUN_0010e2f0"
            ],
            "calling": [
                "FUN_00113a4d"
            ],
            "code": "\nundefined process_data_0010ec73(long *data,long value,undefined8 param3,undefined8 param4,\n                      undefined8 param5,undefined8 param6)\n\n{\n  int counter;\n  char result;\n  \n  if (data[0x3c] != -1) {\n    (**(code **)(*(long *)(*data + 8) + 0x50))(value,data[1] + 8 + data[0x3c]);\n    data[0x3c] = -1;\n  }\n  if (data[0x3d] != -1) {\n    (**(code **)(*(long *)(*data + 8) + 0x50))(value,data[1] + 8 + data[0x3d]);\n    data[0x3d] = -1;\n  }\n  counter = *(int *)(data + 0x3f);\n  *(int *)(data + 0x3f) = counter + 1;\n  if (counter == 0) {\n    data[0x40] = value;\n  }\n  else {\n    if ((data[0x41] != -1) &&\n       (result = FUN_0010e2f0(data,0xc0,0,data[0x41],0,param6,param4), result == '\\0')) {\n      return 0;\n    }\n    data[0x41] = value - data[0x40];\n  }\n  return 1;\n}\n\n",
            "current_name": "process_data_0010ec73",
            "entrypoint": "0x0010ec73",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010ec73": "process_data_0010ec73",
                "cVar2": "result",
                "iVar1": "counter",
                "param_1": "data",
                "param_2": "value",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010ed2c": {
            "additional_data": {
                "FUN_0010ed2c": {
                    "update_and_return_result": 1,
                    "update_buffer": 1,
                    "update_data": 1,
                    "update_if_greater": 1,
                    "update_max_and_call": 1,
                    "update_max_and_return": 2,
                    "update_max_length": 2,
                    "update_max_param": 4,
                    "update_max_parameter": 1,
                    "update_max_value": 6,
                    "update_maximum": 1,
                    "update_maximum_value": 1,
                    "update_memory": 2,
                    "update_param": 1,
                    "update_param_and_return": 1,
                    "update_param_values": 1,
                    "update_parameter": 1,
                    "update_parameters": 2,
                    "update_statistics": 1
                },
                "auVar4": {
                    "modified_result": 1,
                    "output": 5,
                    "result": 12,
                    "result_array": 1,
                    "result_struct": 1,
                    "result_value": 1,
                    "return_value": 8,
                    "updated_value": 1
                },
                "cVar1": {
                    "char_result": 1,
                    "check": 1,
                    "check_result": 1,
                    "flag": 3,
                    "is_successful": 1,
                    "is_valid": 1,
                    "result": 4,
                    "result_char": 1,
                    "success": 9,
                    "success_flag": 2,
                    "temporary_char": 1,
                    "valid_flag": 1
                },
                "extraout_RDX": {
                    "additional_var": 1,
                    "extra_output": 3,
                    "extra_result": 3,
                    "extraout_rdx": 1,
                    "output": 1,
                    "output_value": 1,
                    "result": 3,
                    "return_value": 3,
                    "temp": 1
                },
                "iVar2": {
                    "count": 4,
                    "counter": 17,
                    "int_result": 1,
                    "iteration": 1,
                    "iteration_count": 1,
                    "remaining": 1,
                    "temp_value": 1,
                    "temp_var": 2,
                    "temp_variable": 1
                },
                "in_R10": {
                    "additional_data": 6,
                    "additional_info": 1,
                    "additional_param": 4,
                    "additional_parameter": 1,
                    "aux_param": 1,
                    "context": 2,
                    "extra_data": 3,
                    "extra_input": 1,
                    "extra_out_value": 1,
                    "extra_param": 1,
                    "extra_parameter": 1,
                    "in_r10": 1,
                    "in_register": 1,
                    "pointer": 1,
                    "r10": 1,
                    "special_param": 1,
                    "temp_var": 1,
                    "unknown_param": 1,
                    "unused_param": 1
                },
                "param_1": {
                    "arg1": 1,
                    "array": 1,
                    "base_address": 1,
                    "buffer": 1,
                    "data": 13,
                    "data_container": 1,
                    "data_ptr": 4,
                    "data_structure": 1,
                    "input_ptr": 1,
                    "input_structure": 1,
                    "memory": 2,
                    "memory_structure": 1,
                    "param1": 1,
                    "param_array": 1,
                    "struct_ptr": 1
                },
                "param_2": {
                    "arg2": 1,
                    "input": 1,
                    "length": 1,
                    "max_value": 1,
                    "new_buffer_size": 1,
                    "new_length": 1,
                    "new_max": 2,
                    "new_size": 1,
                    "new_value": 19,
                    "param2": 1,
                    "value": 2
                },
                "param_3": {
                    "additional_input": 1,
                    "additional_param": 2,
                    "arg3": 1,
                    "data_size": 1,
                    "extra_data": 3,
                    "extra_info": 1,
                    "extra_param": 4,
                    "extra_value": 1,
                    "flags": 1,
                    "input_param": 1,
                    "input_value": 2,
                    "offset": 1,
                    "other_parameter": 1,
                    "param": 3,
                    "param3": 2,
                    "param_3": 2,
                    "param_value": 2,
                    "reserved": 1,
                    "updated_param": 1
                },
                "param_4": {
                    "extra_param": 1
                },
                "param_5": {
                    "param5": 1
                },
                "uVar3": {
                    "flag": 4,
                    "new_param3": 1,
                    "new_value": 1,
                    "result": 9,
                    "return_value": 1,
                    "temp_value": 2,
                    "updated_length": 1,
                    "updated_max": 1,
                    "updated_value": 8
                }
            },
            "called": [
                "FUN_0010e2f0"
            ],
            "calling": [
                "FUN_00113a4d"
            ],
            "code": "\nundefined  [16] update_max_value_0010ed2c(long data,ulong new_value,undefined8 extra_param)\n\n{\n  char success;\n  int counter;\n  undefined8 return_value;\n  ulong result;\n  undefined8 additional_data;\n  undefined result [16];\n  \n  if (*(ulong *)(data + 0x1f0) < new_value) {\n    *(ulong *)(data + 0x1f0) = new_value;\n  }\n  if (*(long *)(data + 0x208) == -1) {\nLAB_0010ed78:\n    if (*(int *)(data + 0x1f8) != 0) {\n      counter = *(int *)(data + 0x1f8) + -1;\n      result = CONCAT71((int7)((ulong)extra_param >> 8),1);\n      *(int *)(data + 0x1f8) = counter;\n      if (counter != 0) {\n        result = FUN_0010e2f0(data,0xe0,0,new_value - *(long *)(data + 0x200),0,additional_data);\n        return result;\n      }\n      goto LAB_0010edae;\n    }\n  }\n  else {\n    success = FUN_0010e2f0(data,0xc0,0,*(long *)(data + 0x208),0);\n    if (success != '\\0') {\n      *(undefined8 *)(data + 0x208) = 0xffffffffffffffff;\n      extra_param = return_value;\n      goto LAB_0010ed78;\n    }\n  }\n  result = 0;\nLAB_0010edae:\n  result._0_8_ = result & 0xffffffff;\n  result._8_8_ = additional_data;\n  return result;\n}\n\n",
            "current_name": "update_max_value_0010ed2c",
            "entrypoint": "0x0010ed2c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010ed2c": "update_max_value_0010ed2c",
                "auVar4": "result",
                "cVar1": "success",
                "extraout_RDX": "return_value",
                "iVar2": "counter",
                "in_R10": "additional_data",
                "param_1": "data",
                "param_2": "new_value",
                "param_3": "extra_param",
                "uVar3": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010edb4": {
            "additional_data": {
                "FUN_0010e2f0": {
                    "handle_file_operation": 1,
                    "perform_operation": 1
                },
                "FUN_0010edb4": {
                    "process_data": 1,
                    "process_file": 7,
                    "process_file_data": 1,
                    "process_function": 1,
                    "update_file_and_return": 1,
                    "update_file_info": 9,
                    "update_file_information": 4,
                    "update_file_metadata": 1,
                    "update_file_path": 1,
                    "update_filename_and_return": 1,
                    "update_filename_if_needed": 1,
                    "validate_and_process_file": 1
                },
                "cVar1": {
                    "char_result": 1,
                    "check_result": 1,
                    "cmp_result": 1,
                    "compare_result": 1,
                    "comparison_result": 6,
                    "is_comparison_successful": 1,
                    "is_file_processed": 1,
                    "is_file_successfully_updated": 1,
                    "is_successful": 1,
                    "is_valid": 1,
                    "result": 4,
                    "success": 6,
                    "success_flag": 6
                },
                "filename_cmp": {
                    "compare_file_names": 1,
                    "compare_filename": 1,
                    "compare_filenames": 7
                },
                "iVar2": {
                    "cmp_result": 5,
                    "comparison": 2,
                    "comparison_result": 4,
                    "file_name_comparison_result": 1,
                    "filename_comparison": 9,
                    "filename_comparison_result": 9,
                    "result": 1
                },
                "in_R10": {
                    "additional_argument": 2,
                    "additional_data": 2,
                    "additional_info": 1,
                    "additional_param": 5,
                    "additional_parameter": 3,
                    "context": 1,
                    "context_register": 1,
                    "dynamic_param": 1,
                    "extra_info": 1,
                    "extra_param": 4,
                    "register": 1,
                    "register_value": 3,
                    "reserved": 1,
                    "reserved_register": 1,
                    "some_register": 1,
                    "unknown_param": 2
                },
                "param_1": {
                    "arg1": 1,
                    "base_address": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "file_context": 1,
                    "file_data": 7,
                    "file_handle": 1,
                    "file_info": 11,
                    "file_info_ptr": 2,
                    "file_information": 1,
                    "file_metadata": 1,
                    "file_state": 1,
                    "file_struct": 2
                },
                "param_2": {
                    "arg2": 1,
                    "file_name": 3,
                    "filename": 15,
                    "new_file_name": 3,
                    "new_filename": 7,
                    "new_path": 1,
                    "updated_filename": 1
                },
                "param_3": {
                    "arg3": 1,
                    "file_attributes": 1,
                    "file_format": 1,
                    "file_info_type": 1,
                    "file_mode": 2,
                    "file_permissions": 2,
                    "file_size": 2,
                    "file_type": 7,
                    "flag": 4,
                    "flags": 1,
                    "is_modified": 1,
                    "mode": 1,
                    "option": 1,
                    "param": 2,
                    "param3_value": 1,
                    "param_value": 1,
                    "parameter": 1,
                    "update_option": 1
                },
                "param_4": {
                    "arg4": 1,
                    "file_size": 23,
                    "max_file_size": 2,
                    "new_file_size": 1,
                    "new_size": 1,
                    "size": 3
                },
                "param_5": {
                    "file_name_to_compare": 1
                },
                "uVar3": {
                    "file_update_status": 1,
                    "result": 23,
                    "return_value": 5,
                    "sub_func_result": 1
                }
            },
            "called": [
                "filename_cmp",
                "FUN_0010e2f0"
            ],
            "calling": [
                "FUN_00112502"
            ],
            "code": "\nundefined8 update_filename_and_return_0010edb4(long file_info,undefined8 filename,undefined4 file_type,ulong file_size)\n\n{\n  char comparison_result;\n  int filename_comparison;\n  undefined8 result;\n  undefined8 additional_param;\n  \n  if (*(long *)(file_info + 0x210) == 0) {\n    return 0;\n  }\n  if (*(ulong *)(file_info + 0x1f0) < file_size) {\n    *(ulong *)(file_info + 0x1f0) = file_size;\n  }\n  filename_comparison = filename_cmp(filename);\n  if (filename_comparison != 0) {\n    comparison_result = FUN_0010e2f0(file_info,0x84,0,file_size,filename);\n    if (comparison_result == '\\0') {\n      return 0;\n    }\n    *(undefined8 *)(file_info + 0x210) = filename;\n  }\n  result = FUN_0010e2f0(file_info,0x44,file_type,file_size - *(long *)(file_info + 0x200),0,additional_param);\n  return result;\n}\n\n",
            "current_name": "update_filename_and_return_0010edb4",
            "entrypoint": "0x0010edb4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010edb4": "update_filename_and_return_0010edb4",
                "cVar1": "comparison_result",
                "filename_cmp": "compare_filenames",
                "iVar2": "filename_comparison",
                "in_R10": "additional_param",
                "param_1": "file_info",
                "param_2": "filename",
                "param_3": "file_type",
                "param_4": "file_size",
                "uVar3": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010ee3f": {
            "called": [
                "sprintf",
                "FUN_00108fe8",
                "FUN_00109a32",
                "free",
                "FUN_00113da9",
                "FUN_00113d6e",
                "FUN_00112b6e",
                "FUN_00113bfa",
                "strspn",
                "FUN_00109ab1",
                "dcgettext",
                "FUN_0010ee3f",
                "cplus_demangle_init_info",
                "FUN_00113cb9",
                "strcat",
                "fprintf",
                "strcmp",
                "FUN_0010d882",
                "FUN_00113e17",
                "FUN_0010c2d2",
                "xrealloc",
                "FUN_00109a0b",
                "FUN_00108fb9",
                "FUN_00113b98",
                "strlen",
                "FUN_00113b4a",
                "FUN_00113df2",
                "strtol",
                "FUN_0010afd5",
                "FUN_00108e76",
                "strcpy",
                "FUN_0010d559",
                "concat",
                "FUN_00113e5e",
                "FUN_00109be3",
                "FUN_00113d3a",
                "strstr",
                "FUN_00113b71",
                "FUN_001129f4",
                "strncmp",
                "FUN_00113ce0",
                "cplus_demangle_mangled_name",
                "FUN_00113dfe",
                "strchr",
                "FUN_00113fb0",
                "FUN_0010911f",
                "FUN_0010d21c",
                "FUN_00109022",
                "FUN_0010914e",
                "FUN_0010b6ea",
                "xmalloc",
                "malloc",
                "FUN_00113c43",
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010ee3f",
                "FUN_0011173a"
            ],
            "code": "\n\n\nvoid * FUNC_0010ee3f(undefined8 param_1,long param_2,char *param_3,byte **param_4,undefined8 *param_5\n                   ,byte *param_6)\n\n{\n  byte bVar1;\n  byte bVar2;\n  byte *pbVar3;\n  long lVar4;\n  byte *pbVar5;\n  char cVar6;\n  byte bVar7;\n  char cVar8;\n  byte bVar9;\n  int iVar10;\n  undefined4 uVar11;\n  uint uVar12;\n  undefined4 uVar13;\n  int iVar14;\n  undefined8 uVar15;\n  char *pcVar16;\n  void *pvVar17;\n  void **ppvVar18;\n  long lVar19;\n  long lVar20;\n  int *piVar21;\n  undefined *puVar22;\n  char **ppcVar23;\n  void *pvVar24;\n  void *pvVar25;\n  ulong uVar26;\n  byte *pbVar27;\n  byte *pbVar28;\n  char *pcVar29;\n  size_t sVar30;\n  byte *pbVar31;\n  undefined8 *puVar32;\n  size_t sVar33;\n  byte **ppbVar34;\n  void **ppvVar35;\n  undefined8 uVar36;\n  undefined8 uVar37;\n  long lVar38;\n  long *plVar39;\n  char *pcVar40;\n  bool bVar41;\n  byte *pbVar42;\n  char cVar43;\n  undefined uVar44;\n  ulong uVar45;\n  char *pcVar46;\n  byte bVar47;\n  byte bVar48;\n  ulong uVar49;\n  byte *pbVar50;\n  bool bVar51;\n  bool bVar52;\n  undefined auVar53 [16];\n  undefined auVar54 [16];\n  void *local_158;\n  char *local_150;\n  byte *local_140;\n  char local_138;\n  char local_130;\n  uint local_12c;\n  char *local_128;\n  byte *local_120;\n  void *local_118;\n  byte *local_110;\n  undefined4 local_100;\n  uint local_fc;\n  uint local_f0;\n  uint local_ec;\n  uint local_e0;\n  int local_d0;\n  char local_a9;\n  undefined8 local_a8;\n  byte *local_a0;\n  undefined8 local_98;\n  long local_90;\n  long local_88;\n  char local_80;\n  undefined7 uStack_7f;\n  void *local_78;\n  undefined4 local_70;\n  int local_6c;\n  void *local_68;\n  int local_5c;\n  \n  bVar48 = 0;\n  if (param_5 != (undefined8 *)0x0) {\n    *param_5 = 0;\n  }\n  pbVar3 = *param_4;\n  if (param_6 <= pbVar3) {\n    return (void *)0x0;\n  }\n  *(undefined *)(param_2 + 0x1a8) = 0;\n  bVar9 = *pbVar3;\n  if (((bVar9 != 0x28 && bVar9 != 0x2d) &\n      ((byte)(*(ushort *)(&_sch_istable + (ulong)bVar9 * 2) >> 2) ^ 1)) == 0) {\n    cVar6 = FUN_00109ab1(param_4,&local_a8,param_6);\n    if (cVar6 == '\\0') {\n      return (void *)0x0;\n    }\n    if (**param_4 != 0x3d) {\n      pvVar17 = (void *)FUN_0010c2d2(param_1,param_2,&local_a8);\n      return pvVar17;\n    }\n    if (param_5 != (undefined8 *)0x0) {\n      if (-1 < (int)((uint)local_a8 | local_a8._4_4_)) {\n        uVar15 = FUN_00109022(param_2);\n        *param_5 = uVar15;\n      }\n    }\n    *param_4 = *param_4 + 1;\n    local_12c = 0xffffffff;\n    cVar8 = '\\0';\n    do {\n      while( true ) {\n        do {\n          cVar43 = cVar8;\n          pbVar27 = *param_4;\n          if (((*pbVar27 != 0x40) ||\n              (bVar9 = pbVar27[1], ((&_sch_istable)[(ulong)bVar9 * 2] & 4) != 0)) ||\n             (pbVar50 = pbVar27, bVar9 == 0x28 || bVar9 == 0x2d)) goto LAB_0010efe0;\n          while( true ) {\n            bVar9 = pbVar50[1];\n            if (bVar9 == 0x3b) break;\n            pbVar50 = pbVar50 + 1;\n            if (bVar9 == 0) goto switchD_0010f055_caseD_24;\n          }\n          *param_4 = pbVar50 + 2;\n          bVar9 = pbVar27[1];\n          cVar8 = cVar6;\n        } while (bVar9 == 0x53);\n        cVar8 = cVar43;\n        if (bVar9 != 0x73) break;\n        lVar38 = strtol((char *)(pbVar27 + 2),(char **)0x0,10);\n        local_12c = 0xffffffff;\n        if (7 < (int)lVar38) {\n          local_12c = (int)lVar38 >> 3;\n        }\n      }\n    } while (bVar9 != 0);\n    goto switchD_0010f055_caseD_24;\n  }\n  local_12c = 0xffffffff;\n  cVar43 = '\\0';\n  local_a8 = 0xffffffffffffffff;\nLAB_0010efe0:\n  pbVar50 = *param_4;\n  bVar9 = *pbVar50;\n  pbVar27 = pbVar50 + 1;\n  *param_4 = pbVar27;\n  if ('x' < (char)bVar9) goto switchD_0010f055_caseD_24;\n  if ((char)bVar9 < 'a') {\n    if (bVar9 == 0x40) {\n      lVar38 = FUNC_0010ee3f(param_1,param_2,0,param_4,0,param_6);\n      if (lVar38 == 0) {\n        return (void *)0x0;\n      }\n      if (**param_4 != 0x2c) goto switchD_0010f055_caseD_24;\n      *param_4 = *param_4 + 1;\n      lVar19 = FUNC_0010ee3f(param_1,param_2,0,param_4,0,param_6);\n      if (lVar19 == 0) {\n        return (void *)0x0;\n      }\n      pvVar17 = (void *)FUN_00113bfa(lVar38,lVar19);\n    }\n    else if ((char)bVar9 < 'A') {\n      if ('-' < (char)bVar9) {\n        if (9 < (byte)(bVar9 - 0x30)) goto switchD_0010f055_caseD_24;\nswitchD_0010f055_caseD_28:\n        *param_4 = pbVar50;\n        cVar6 = FUN_00109ab1(param_4,&local_98,param_6);\n        if (cVar6 == '\\0') {\n          return (void *)0x0;\n        }\n        iVar10 = (uint)local_a8;\n        if ((uint)local_a8 == (uint)local_98) {\n          if (local_a8._4_4_ == local_98._4_4_) {\n            pvVar17 = (void *)FUN_00113e17();\n            if (iVar10 != -1) {\n              ppvVar18 = (void **)FUN_00109022(param_2,&local_a8);\n              if (ppvVar18 == (void **)0x0) {\n                return (void *)0x0;\n              }\n              *ppvVar18 = pvVar17;\n            }\n            goto LAB_001115e2;\n          }\n        }\n        *param_4 = pbVar50;\n        pvVar17 = (void *)FUNC_0010ee3f(param_1,param_2,0,param_4,0,param_6);\n        if (pvVar17 == (void *)0x0) {\n          return (void *)0x0;\n        }\n        if (iVar10 != -1) {\n          ppvVar18 = (void **)FUN_00109022(param_2,&local_a8);\n          if (ppvVar18 == (void **)0x0) {\n            return (void *)0x0;\n          }\n          *ppvVar18 = pvVar17;\n        }\n        goto LAB_001115eb;\n      }\n      if ((char)bVar9 < '#') goto switchD_0010f055_caseD_24;\n      switch(bVar9) {\n      case 0x23:\n        if (pbVar50[1] == 0x23) {\n          *param_4 = pbVar50 + 2;\n          lVar38 = FUNC_0010ee3f(param_1,param_2,0,param_4,0,param_6);\n          if (lVar38 == 0) {\n            return (void *)0x0;\n          }\n          if (**param_4 != 0x3b) goto switchD_0010f055_caseD_24;\n          *param_4 = *param_4 + 1;\n          pvVar17 = (void *)FUN_00113b98(lVar38,0,0,0);\n        }\n        else {\n          lVar38 = FUNC_0010ee3f(param_1,param_2,0,param_4,0,param_6);\n          if (lVar38 == 0) {\n            return (void *)0x0;\n          }\n          if (**param_4 != 0x2c) goto switchD_0010f055_caseD_24;\n          *param_4 = *param_4 + 1;\n          lVar19 = FUNC_0010ee3f(param_1,param_2,0,param_4,0,param_6);\n          if (lVar19 == 0) {\n            return (void *)0x0;\n          }\n          uVar45 = 10;\n          uVar49 = 0;\n          auVar53 = xmalloc(0x50);\n          while( true ) {\n            lVar20 = auVar53._0_8_;\n            pbVar27 = *param_4;\n            iVar10 = (int)uVar49;\n            if (*pbVar27 == 0x3b) break;\n            if (*pbVar27 != 0x2c) {\n              FUN_00108fb9(pbVar3);\n              return (void *)0x0;\n            }\n            *param_4 = pbVar27 + 1;\n            if ((uint)uVar45 <= iVar10 + 1U) {\n              uVar45 = (ulong)((uint)uVar45 + 10);\n              lVar20 = xrealloc(lVar20,uVar45 << 3);\n            }\n            auVar54 = FUNC_0010ee3f(param_1,param_2,0,param_4,0,param_6);\n            auVar53._8_8_ = auVar54._8_8_;\n            auVar53._0_8_ = lVar20;\n            *(long *)(lVar20 + uVar49 * 8) = auVar54._0_8_;\n            if (auVar54._0_8_ == 0) {\n              return (void *)0x0;\n            }\n            uVar49 = (ulong)(iVar10 + 1U);\n          }\n          uVar15 = 1;\n          *param_4 = pbVar27 + 1;\n          uVar45 = uVar49;\n          if (iVar10 != 0) {\n            uVar45 = (ulong)(iVar10 - 1);\n            lVar4 = *(long *)(lVar20 + uVar45 * 8);\n            if (((lVar4 == 0) ||\n                (piVar21 = (int *)FUN_00112b6e(lVar4,0,0x3b,1), piVar21 == (int *)0x0)) ||\n               (*piVar21 != 2)) {\n              uVar15 = 1;\n              uVar45 = uVar49;\n            }\n            else {\n              uVar15 = 0;\n            }\n          }\n          *(undefined8 *)(lVar20 + uVar45 * 8) = 0;\n          pvVar17 = (void *)FUN_00113b98(lVar19,lVar38,lVar20,uVar15);\n        }\n        break;\n      default:\n        goto switchD_0010f055_caseD_24;\n      case 0x26:\n        uVar15 = FUNC_0010ee3f(param_1,param_2,0,param_4,0,param_6);\n        pvVar17 = (void *)FUN_00113cb9(uVar15);\n        break;\n      case 0x28:\n      case 0x2d:\n        goto switchD_0010f055_caseD_28;\n      case 0x2a:\n        uVar15 = FUNC_0010ee3f(param_1,param_2,0,param_4,0,param_6);\n        pvVar17 = (void *)FUN_00113d3a(uVar15);\n      }\n    }\n    else if (bVar9 == 0x52) {\n      if (param_6 <= pbVar27) {\n        return (void *)0x0;\n      }\n      lVar38 = FUN_00109a32(param_4,0,param_6);\n      if ((**param_4 != 0x3b) || (uVar11 = FUN_00109a32(param_4,0,param_6), **param_4 != 0x3b))\n      goto LAB_0010fb4c;\n      if (lVar38 - 3U < 3) {\n        pvVar17 = (void *)FUN_00112904(5);\n      }\n      else {\n        pvVar17 = (void *)FUN_00113df2(uVar11);\n      }\n    }\n    else {\n      if (bVar9 == 0x53) {\n        lVar38 = FUNC_0010ee3f(param_1,param_2,0,param_4,0,param_6);\n        if (lVar38 == 0) {\n          return (void *)0x0;\n        }\n        pvVar17 = (void *)FUN_00112904(0x11,0);\n        if (pvVar17 == (void *)0x0) {\n          return (void *)0x0;\n        }\n        plVar39 = (long *)xmalloc(0x10);\n        *(undefined4 *)((long)plVar39 + 9) = 0;\n        *plVar39 = lVar38;\n        *(undefined4 *)((long)plVar39 + 0xc) = 0;\n        *(char *)(plVar39 + 1) = cVar43;\n        *(long **)((long)pvVar17 + 0x10) = plVar39;\n        goto LAB_001115eb;\n      }\n      if (bVar9 != 0x42) goto switchD_0010f055_caseD_24;\n      uVar15 = FUNC_0010ee3f(param_1,param_2,0,param_4,0,param_6);\n      pvVar17 = (void *)FUN_00113b4a(uVar15);\n    }\n  }\n  else {\n    switch(bVar9) {\n    case 0x61:\n      if (pbVar50[1] != 0x72) goto switchD_0010f055_caseD_24;\n      pbVar50 = pbVar50 + 2;\n      *param_4 = pbVar50;\n      if (param_6 <= pbVar50) {\n        return (void *)0x0;\n      }\n      local_a0 = pbVar50;\n      cVar6 = FUN_00109ab1(&local_a0,&local_98,param_6);\n      if (cVar6 == '\\0') {\n        return (void *)0x0;\n      }\n      if ((((uint)local_98 | local_98._4_4_) == 0) && (**param_4 != 0x3d)) {\n        lVar38 = FUN_0010914e(param_1,\"int\");\n        if ((lVar38 == 0) && (lVar38 = FUN_00113dfe(4,0), lVar38 == 0)) {\n          return (void *)0x0;\n        }\n        *param_4 = local_a0;\n      }\n      else {\n        lVar38 = FUNC_0010ee3f(param_1,param_2,0,param_4,0,param_6);\n      }\n      pbVar3 = *param_4;\n      if (*pbVar3 != 0x3b) {\nLAB_0011151b:\n        FUN_00108fb9(pbVar50);\n        return (void *)0x0;\n      }\n      *param_4 = pbVar3 + 1;\n      bVar48 = pbVar3[1];\n      bVar48 = (bVar48 != 0x2d && bVar48 != 0) &\n               ((byte)(*(ushort *)(&_sch_istable + (ulong)bVar48 * 2) >> 2) ^ 1);\n      if (bVar48 != 0) {\n        *param_4 = pbVar3 + 2;\n      }\n      uVar15 = FUN_00109a32(param_4,0,param_6);\n      pbVar3 = *param_4;\n      if (*pbVar3 != 0x3b) goto LAB_0011151b;\n      *param_4 = pbVar3 + 1;\n      bVar9 = pbVar3[1];\n      bVar9 = (bVar9 != 0x2d && bVar9 != 0) &\n              ((byte)(*(ushort *)(&_sch_istable + (ulong)bVar9 * 2) >> 2) ^ 1);\n      if (bVar9 != 0) {\n        *param_4 = pbVar3 + 2;\n        bVar48 = bVar9;\n      }\n      uVar36 = FUN_00109a32(param_4,0,param_6);\n      if (**param_4 != 0x3b) goto LAB_0011151b;\n      *param_4 = *param_4 + 1;\n      lVar19 = FUNC_0010ee3f(param_1,param_2,0,param_4,0,param_6);\n      if (lVar19 == 0) {\n        return (void *)0x0;\n      }\n      if (bVar48 != 0) {\n        uVar15 = 0;\n      }\n      uVar37 = 0xffffffffffffffff;\n      if (bVar48 == 0) {\n        uVar37 = uVar36;\n      }\n      pvVar17 = (void *)FUN_00113c43(lVar19,lVar38,uVar15,uVar37,cVar43);\n      break;\n    case 0x62:\n      if (param_6 <= pbVar27) {\n        return (void *)0x0;\n      }\n      if (pbVar50[1] == 0x73) {\n        uVar44 = 0;\n      }\n      else {\n        if (pbVar50[1] != 0x75) goto LAB_0010fb4c;\n        uVar44 = 1;\n      }\n      *param_4 = pbVar50 + 2;\n      if (((byte)(pbVar50[2] + 0x9e) < 2) || (pbVar50[2] == 0x76)) {\n        *param_4 = pbVar50 + 3;\n      }\n      FUN_00109a32(param_4,0,param_6);\n      if (**param_4 != 0x3b) goto LAB_0010fb4c;\n      *param_4 = *param_4 + 1;\n      FUN_00109a32(param_4,0,param_6);\n      if (**param_4 != 0x3b) goto LAB_0010fb4c;\n      *param_4 = *param_4 + 1;\n      uVar49 = FUN_00109a32(param_4,0,param_6);\n      if (**param_4 == 0x3b) {\n        *param_4 = *param_4 + 1;\n      }\n      if (uVar49 != 0) {\n        pvVar17 = (void *)FUN_00113dfe(uVar49 >> 3 & 0xffffffff,uVar44);\n        break;\n      }\nLAB_0010fa8f:\n      pvVar17 = (void *)FUN_00113e17();\n      break;\n    default:\n      goto switchD_0010f055_caseD_24;\n    case 0x65:\n      if (param_6 <= pbVar27) {\n        return (void *)0x0;\n      }\n      if (pbVar50[1] == 0x2d) {\n        while( true ) {\n          pbVar3 = *param_4;\n          if (*pbVar3 == 0x3a) break;\n          if (*pbVar3 == 0) goto LAB_0010fb4c;\n          *param_4 = pbVar3 + 1;\n        }\n        *param_4 = pbVar3 + 1;\n      }\n      uVar45 = 10;\n      pvVar17 = (void *)xmalloc(0x50);\n      pvVar24 = (void *)xmalloc(0x50);\n      uVar49 = 0;\n      while( true ) {\n        pbVar3 = *param_4;\n        pbVar50 = pbVar3;\n        if ((*pbVar3 < 0x3c) && ((-0x800100000000002 >> (*pbVar3 & 0x3f) & 1U) == 0)) break;\n        for (; *pbVar50 != 0x3a; pbVar50 = pbVar50 + 1) {\n          if (*pbVar50 == 0) {\n            FUN_00108fb9(pbVar27);\n            free(pvVar17);\n            free(pvVar24);\n            return (void *)0x0;\n          }\n        }\n        pvVar25 = (void *)FUN_00109a0b(pbVar3,(int)pbVar50 - (int)pbVar3);\n        *param_4 = pbVar50 + 1;\n        uVar15 = FUN_00109a32(param_4,0,param_6);\n        if (**param_4 != 0x2c) {\n          FUN_00108fb9(pbVar27);\n          free(pvVar25);\n          free(pvVar17);\n          free(pvVar24);\n          return (void *)0x0;\n        }\n        uVar12 = (int)uVar49 + 1;\n        *param_4 = *param_4 + 1;\n        if ((uint)uVar45 <= uVar12) {\n          uVar45 = (ulong)((uint)uVar45 + 10);\n          pvVar17 = (void *)xrealloc(pvVar17,uVar45 << 3);\n          pvVar24 = (void *)xrealloc(pvVar24,uVar45 << 3);\n        }\n        *(void **)((long)pvVar17 + uVar49 * 8) = pvVar25;\n        *(undefined8 *)((long)pvVar24 + uVar49 * 8) = uVar15;\n        uVar49 = (ulong)uVar12;\n      }\n      *(undefined8 *)((long)pvVar17 + uVar49 * 8) = 0;\n      *(undefined8 *)((long)pvVar24 + uVar49 * 8) = 0;\n      if (**param_4 == 0x3b) {\n        *param_4 = *param_4 + 1;\n      }\n      pvVar17 = (void *)FUN_00113d6e(pvVar17,pvVar24);\n      break;\n    case 0x66:\n      uVar15 = FUNC_0010ee3f(param_1,param_2,0,param_4,0,param_6);\n      pvVar17 = (void *)FUN_00113ce0(uVar15,0,0);\n      break;\n    case 0x6b:\n      uVar15 = FUNC_0010ee3f(param_1,param_2,0,param_4,0,param_6);\n      pvVar17 = (void *)FUN_00113b71(uVar15);\n      break;\n    case 0x72:\n      if (param_6 <= pbVar27) {\n        return (void *)0x0;\n      }\n      cVar6 = FUN_00109ab1(param_4,&local_98,param_6);\n      if (cVar6 == '\\0') {\n        return (void *)0x0;\n      }\n      bVar51 = false;\n      if ((uint)local_98 == (uint)local_a8) {\n        bVar51 = local_98._4_4_ == local_a8._4_4_;\n      }\n      lVar38 = 0;\n      if (**param_4 == 0x3d) {\n        *param_4 = pbVar27;\n        lVar38 = FUNC_0010ee3f(param_1,param_2,0,param_4,0,param_6);\n        if (lVar38 == 0) {\n          return (void *)0x0;\n        }\n      }\n      if (**param_4 == 0x3b) {\n        *param_4 = *param_4 + 1;\n      }\n      pbVar3 = *param_4;\n      uVar49 = FUN_00109a32(param_4,&local_a9,param_6);\n      if (**param_4 != 0x3b) goto LAB_0010fb4c;\n      pbVar50 = *param_4 + 1;\n      *param_4 = pbVar50;\n      uVar45 = FUN_00109a32(param_4,&local_a0,param_6);\n      cVar6 = local_a9;\n      if (**param_4 != 0x3b) goto LAB_0010fb4c;\n      *param_4 = *param_4 + 1;\n      if ((local_a9 == '\\0') && ((char)local_a0 == '\\0')) {\nLAB_0010f700:\n        if (lVar38 != 0) goto LAB_0010f956;\n        if ((!bVar51) || (uVar49 != 0)) {\n          bVar52 = uVar45 != 0;\n          if ((!bVar51) || (bVar52)) {\n            if (((long)uVar49 < 1) || (bVar52)) {\n              if ((uVar45 == 0xffffffffffffffff) && (uVar49 == 0)) goto LAB_0010f788;\n              if (uVar49 == 0) goto LAB_0010f829;\n              if ((-1 < (long)uVar49) || (bVar52)) goto LAB_0010f8cd;\n              if ((uVar49 == 0xfffffffffffffff8) || (bVar51)) goto LAB_0010f89d;\n              if (uVar49 != 0xffffffffffffffff) {\n                if (uVar49 != 1) goto LAB_0010f956;\n                goto LAB_0010f8eb;\n              }\nLAB_0010f8ff:\n              if (uVar45 == 0x7f) goto LAB_0010f810;\n              if (uVar45 == 0x7fff) {\nLAB_0010f912:\n                pvVar17 = (void *)FUN_00113dfe(2,0);\n              }\n              else {\n                if (uVar45 != 0x7fffffff) {\n                  if (uVar45 == 0x7fffffffffffffff) goto LAB_0010f7a5;\n                  goto LAB_0010f956;\n                }\nLAB_0010f92f:\n                pvVar17 = (void *)FUN_00113dfe(4,0);\n              }\n            }\n            else {\n              pvVar17 = (void *)FUN_00113df2(uVar49 & 0xffffffff);\n            }\n          }\n          else if ((long)uVar49 < 1) {\n            if (-1 < (long)uVar49) {\nLAB_0010f8cd:\n              if (uVar49 == ~uVar45) goto LAB_0010f8ff;\n              if (uVar49 == uVar45 + 1) {\n                if (uVar45 == 0x7f) goto LAB_0010f810;\nLAB_0010f8eb:\n                if (uVar45 == 0x7fff) goto LAB_0010f912;\n                if (uVar45 == 0x7fffffff) goto LAB_0010f92f;\n              }\nLAB_0010f956:\n              if (bVar51) {\nLAB_0010fb4c:\n                FUN_00108fb9(pbVar27);\n                return (void *)0x0;\n              }\n              lVar38 = FUN_0010c2d2(param_1,param_2,&local_98);\n              if (lVar38 == 0) {\n                uVar15 = dcgettext(0,\"missing index type\",5);\n                FUN_00108fe8(pbVar27,uVar15);\n                lVar38 = FUN_00113dfe(4,0);\n                if (lVar38 == 0) {\n                  return (void *)0x0;\n                }\n              }\n              pvVar17 = (void *)FUN_00112904(0xf,0);\n              if (pvVar17 == (void *)0x0) {\n                return (void *)0x0;\n              }\n              plVar39 = (long *)xmalloc(0x18);\n              *plVar39 = lVar38;\n              plVar39[1] = uVar49;\n              plVar39[2] = uVar45;\n              *(long **)((long)pvVar17 + 0x10) = plVar39;\n              goto LAB_001115eb;\n            }\nLAB_0010f89d:\n            pvVar17 = (void *)FUN_00113dfe(-(int)uVar49,1);\n          }\n          else {\n            pvVar17 = (void *)FUN_00112904(5,uVar49 & 0xffffffff);\n          }\n        }\n        else {\n          if (uVar45 == 0) goto LAB_0010fa8f;\n          if (uVar45 == 0xffffffffffffffff) {\nLAB_0010f788:\n            if (param_3 != (char *)0x0) {\n              iVar10 = strcmp(param_3,\"long long int\");\n              if (iVar10 == 0) goto LAB_0010f7a5;\n              iVar10 = strcmp(param_3,\"long long unsigned int\");\n              if (iVar10 == 0) goto LAB_0010f7ce;\n            }\nLAB_0010f7f3:\n            pvVar17 = (void *)FUN_00113dfe(4,1);\n          }\n          else if (uVar45 == 0x7f) {\nLAB_0010f810:\n            pvVar17 = (void *)FUN_00113dfe(1,0);\n          }\n          else {\nLAB_0010f829:\n            if ((long)uVar45 < 0) {\n              pvVar17 = (void *)FUN_00113dfe(-(int)uVar45,1);\n            }\n            else if (uVar45 == 0xff) {\n              pvVar17 = (void *)FUN_00113dfe(1,1);\n            }\n            else {\n              if (uVar45 != 0xffff) {\n                if (uVar45 != 0xffffffff) goto LAB_0010f956;\n                goto LAB_0010f7f3;\n              }\n              pvVar17 = (void *)FUN_00113dfe(2,1);\n            }\n          }\n        }\n      }\n      else {\n        if (lVar38 != 0) {\nLAB_0010f6e2:\n          uVar15 = dcgettext(0,\"numeric overflow\",5);\n          FUN_00108fe8(pbVar27,uVar15);\n          goto LAB_0010f700;\n        }\n        cVar8 = FUN_00113fb0(pbVar3,\"01000000000000000000000;\");\n        if ((cVar8 == '\\0') ||\n           (cVar8 = FUN_00113fb0(pbVar50,\"0777777777777777777777;\"), cVar8 == '\\0')) {\n          if ((cVar6 == '\\x01') ||\n             ((uVar49 != 0 ||\n              (cVar6 = FUN_00113fb0(pbVar50,\"01777777777777777777777;\"), cVar6 == '\\0'))))\n          goto LAB_0010f6e2;\nLAB_0010f7ce:\n          pvVar17 = (void *)FUN_00113dfe(8,1);\n        }\n        else {\nLAB_0010f7a5:\n          pvVar17 = (void *)FUN_00113dfe(8,0);\n        }\n      }\n      break;\n    case 0x73:\n    case 0x75:\n      uVar49 = FUN_00109a32(param_4,0,param_6);\n      pbVar3 = *param_4;\n      if (pbVar3 < param_6) {\n        local_118 = (void *)0x0;\n        if (*pbVar3 == 0x21) {\n          *param_4 = pbVar3 + 1;\n          uVar12 = FUN_00109a32(param_4,0,param_6);\n          if (**param_4 != 0x2c) {\nLAB_0010fe26:\n            FUN_00108fb9(pbVar3);\n            goto LAB_0010fe2e;\n          }\n          *param_4 = *param_4 + 1;\n          lVar38 = 0;\n          local_118 = (void *)xmalloc();\n          while ((uint)lVar38 < uVar12) {\n            bVar1 = **param_4;\n            if (bVar1 == 0x30) {\nLAB_0010fe06:\n              uVar44 = 0;\n            }\n            else {\n              if (bVar1 != 0x31) {\n                if (bVar1 != 0) {\n                  uVar15 = dcgettext(0,\"unknown virtual character for baseclass\",5);\n                  FUN_00108fe8(pbVar3,uVar15);\n                  goto LAB_0010fe06;\n                }\n                goto LAB_0010fe26;\n              }\n              uVar44 = 1;\n            }\n            pbVar27 = *param_4;\n            *param_4 = pbVar27 + 1;\n            bVar1 = pbVar27[1];\n            if (bVar1 == 0x31) {\n              uVar11 = 1;\n            }\n            else {\n              if ((char)bVar1 < '2') {\n                if (bVar1 == 0) goto LAB_0010fe26;\n                uVar11 = 2;\n                if (bVar1 == 0x30) goto LAB_0010fd53;\nLAB_0010fe6c:\n                uVar15 = dcgettext(0,\"unknown visibility character for baseclass\",5);\n                FUN_00108fe8(pbVar3,uVar15);\n              }\n              else if (bVar1 != 0x32) goto LAB_0010fe6c;\n              uVar11 = 0;\n            }\nLAB_0010fd53:\n            *param_4 = *param_4 + 1;\n            uVar13 = FUN_00109a32(param_4,0,param_6);\n            if (**param_4 != 0x2c) goto LAB_0010fe26;\n            *param_4 = *param_4 + 1;\n            lVar19 = FUNC_0010ee3f(param_1,param_2,0,param_4);\n            if (lVar19 == 0) goto LAB_0010fe2e;\n            plVar39 = (long *)xmalloc();\n            *(undefined8 *)((long)plVar39 + 0xd) = 0;\n            *(undefined4 *)(plVar39 + 1) = uVar13;\n            *(undefined4 *)((long)plVar39 + 0x14) = 0;\n            *plVar39 = lVar19;\n            *(long **)((long)local_118 + lVar38 * 8) = plVar39;\n            lVar38 = lVar38 + 1;\n            *(undefined *)((long)plVar39 + 0xc) = uVar44;\n            *(undefined4 *)(plVar39 + 2) = uVar11;\n            if (**param_4 != 0x3b) goto LAB_0010fe2e;\n            *param_4 = *param_4 + 1;\n          }\n          *(undefined8 *)((long)local_118 + lVar38 * 8) = 0;\n        }\n        pbVar3 = *param_4;\n        if (pbVar3 < param_6) {\n          uVar45 = 0;\n          local_158 = (void *)xmalloc(0x50);\n          bVar51 = false;\n          local_150._0_4_ = 10;\n          while (pbVar27 = *param_4, *pbVar27 != 0x3b) {\n            uVar12 = (int)uVar45 + 1;\n            if ((uint)local_150 <= uVar12) {\n              local_150._0_4_ = (uint)local_150 + 10;\n              local_158 = (void *)xrealloc(local_158);\n            }\n            if (((*pbVar27 == 0x24) || (*pbVar27 == 0x2e)) && (pbVar27[1] != 0x5f)) {\n              *param_4 = *param_4 + 1;\n              plVar39 = (long *)((long)local_158 + uVar45 * 8);\n              *plVar39 = 0;\n              pbVar27 = *param_4;\n              if (pbVar27 < param_6) {\n                if (*pbVar27 == 0x76) {\n                  *param_4 = pbVar27 + 1;\n                  bVar1 = pbVar27[1];\n                  if (bVar1 != 0) {\n                    *param_4 = pbVar27 + 2;\n                    lVar38 = FUNC_0010ee3f(param_1,param_2,0,param_4,0,param_6);\n                    if (lVar38 == 0) goto LAB_001102dc;\n                    if (bVar1 == 0x62) {\n                      puVar22 = (undefined *)FUN_001129f4();\n                      if (puVar22 == (undefined *)0x0) {\n                        uVar15 = dcgettext(0,\"unnamed $vb type\",5);\n                        FUN_00108fe8(pbVar27,uVar15);\n                        puVar22 = &DAT_001206ea;\n                      }\n                      pcVar40 = (char *)concat(&DAT_0012077e,puVar22,0);\n                    }\n                    else {\n                      pcVar40 = \"_vptr$\";\n                      if (bVar1 != 0x66) {\n                        uVar15 = dcgettext(0,\"unrecognized C++ abbreviation\",5);\n                        pcVar40 = \"INVALID_CPLUSPLUS_ABBREV\";\n                        FUN_00108fe8(pbVar27,uVar15);\n                      }\n                    }\n                    if (**param_4 == 0x3a) {\n                      *param_4 = *param_4 + 1;\n                      pcVar16 = (char *)FUNC_0010ee3f(param_1,param_2,0);\n                      if (**param_4 == 0x2c) {\n                        *param_4 = *param_4 + 1;\n                        uVar11 = FUN_00109a32(param_4,0,param_6);\n                        if (**param_4 == 0x3b) {\n                          *param_4 = *param_4 + 1;\n                          ppcVar23 = (char **)xmalloc(0x20);\n                          *(undefined8 *)((long)ppcVar23 + 0x14) = 0;\n                          *(undefined4 *)((long)ppcVar23 + 0x1c) = 0;\n                          *ppcVar23 = pcVar40;\n                          ppcVar23[1] = pcVar16;\n                          *(undefined4 *)(ppcVar23 + 3) = uVar11;\n                          *(undefined4 *)(ppcVar23 + 2) = 2;\n                          *plVar39 = (long)ppcVar23;\n                          goto LAB_001102eb;\n                        }\n                      }\n                    }\n                  }\n                }\n                FUN_00108fb9(pbVar27);\n              }\nLAB_001102dc:\n              free(local_158);\n              goto LAB_0010fe2e;\n            }\n            pcVar40 = strchr((char *)pbVar27,0x3a);\n            if (pcVar40 == (char *)0x0) {\n              FUN_00108fb9(pbVar3);\n              free(local_158);\n              goto LAB_0010fe2e;\n            }\n            if (pcVar40[1] == ':') break;\n            pbVar27 = *param_4;\n            if (param_6 <= pbVar27) goto LAB_001102dc;\n            pvVar17 = (void *)FUN_00109a0b(pbVar27,(int)pcVar40 - (int)pbVar27);\n            *param_4 = (byte *)(pcVar40 + 1);\n            if (pcVar40[1] == '/') {\n              *param_4 = (byte *)(pcVar40 + 2);\n              cVar6 = pcVar40[2];\n              if (cVar6 == '1') {\n                uVar11 = 1;\n              }\n              else if (cVar6 < '2') {\n                if (cVar6 == '\\0') {\n                  FUN_00108fb9(pbVar27);\n                  goto LAB_001102dc;\n                }\n                uVar11 = 2;\n                if (cVar6 != '0') goto LAB_00110152;\n              }\n              else {\n                if (cVar6 != '2') {\nLAB_00110152:\n                  uVar15 = dcgettext(0,\"unknown visibility character for field\",5);\n                  FUN_00108fe8(pbVar27,uVar15);\n                }\n                uVar11 = 0;\n              }\n              *param_4 = *param_4 + 1;\n            }\n            else {\n              uVar11 = 0;\n            }\n            pvVar24 = (void *)FUNC_0010ee3f(param_1,param_2,0,param_4);\n            if (pvVar24 == (void *)0x0) {\nLAB_001101e1:\n              free(pvVar17);\n              goto LAB_001102dc;\n            }\n            puVar32 = (undefined8 *)((long)local_158 + uVar45 * 8);\n            pbVar50 = *param_4;\n            if (*pbVar50 != 0x3a) {\n              if (*pbVar50 == 0x2c) {\n                *param_4 = pbVar50 + 1;\n                uVar45 = FUN_00109a32(param_4,0,param_6);\n                if (**param_4 == 0x2c) {\n                  *param_4 = *param_4 + 1;\n                  uVar26 = FUN_00109a32(param_4,0,param_6);\n                  if (**param_4 == 0x3b) {\n                    *param_4 = *param_4 + 1;\n                    if ((uVar45 | uVar26) == 0) {\n                      uVar11 = 3;\n                    }\n                    ppvVar18 = (void **)xmalloc(0x20);\n                    *(undefined8 *)((long)ppvVar18 + 0x14) = 0;\n                    *ppvVar18 = pvVar17;\n                    ppvVar18[1] = pvVar24;\n                    *(int *)(ppvVar18 + 3) = (int)uVar45;\n                    *(int *)((long)ppvVar18 + 0x1c) = (int)uVar26;\n                    *(undefined4 *)(ppvVar18 + 2) = uVar11;\n                    *puVar32 = ppvVar18;\n                    goto LAB_001102eb;\n                  }\n                }\n              }\nLAB_001101d9:\n              FUN_00108fb9(pbVar27);\n              goto LAB_001101e1;\n            }\n            pbVar50 = pbVar50 + 1;\n            *param_4 = pbVar50;\n            pcVar40 = strchr((char *)pbVar50,0x3b);\n            if (pcVar40 == (char *)0x0) goto LAB_001101d9;\n            pvVar25 = (void *)FUN_00109a0b(pbVar50);\n            *param_4 = (byte *)(pcVar40 + 1);\n            ppvVar18 = (void **)xmalloc(0x20);\n            bVar51 = true;\n            *(undefined8 *)((long)ppvVar18 + 0x15) = 0;\n            *ppvVar18 = pvVar17;\n            ppvVar18[1] = pvVar24;\n            *(undefined *)((long)ppvVar18 + 0x14) = 1;\n            ppvVar18[3] = pvVar25;\n            *(undefined4 *)(ppvVar18 + 2) = uVar11;\n            *puVar32 = ppvVar18;\nLAB_001102eb:\n            uVar45 = (ulong)uVar12;\n          }\n          *(undefined8 *)((long)local_158 + uVar45 * 8) = 0;\n          pbVar3 = *param_4;\n          if (param_6 <= pbVar3) goto LAB_001112f3;\n          local_128 = (char *)0x0;\n          pbVar27 = (byte *)0x0;\n          pvVar24 = (void *)0x0;\n          local_150 = (char *)0x0;\n          local_e0 = 0;\n          local_fc = 0;\nLAB_00110345:\n          pbVar50 = *param_4;\n          bVar1 = *pbVar50;\n          if (((bVar1 != 0x3b) && (pcVar40 = strchr((char *)pbVar50,0x3a), pcVar40 != (char *)0x0))\n             && (pcVar40[1] == ':')) {\n            pbVar28 = (byte *)(pcVar40 + 2);\n            if (((bVar1 == 0x6f) && (pbVar50[1] == 0x70)) && (pbVar50[2] == 0x24)) {\n              *param_4 = pbVar28;\n              for (pbVar50 = pbVar28; *pbVar50 != 0x2e; pbVar50 = pbVar50 + 1) {\n                if (*pbVar50 == 0) goto LAB_00110788;\n              }\n              pbVar50 = pbVar50 + 1;\n              local_150 = (char *)FUN_00109a0b(pbVar28);\n            }\n            else {\n              local_150 = (char *)FUN_00109a0b(pbVar50);\n              pbVar50 = pbVar28;\n            }\n            *param_4 = pbVar50;\n            local_128 = (char *)xmalloc();\n            local_ec = 10;\n            local_140 = (byte *)0x0;\n            local_f0 = 0;\nLAB_00110406:\n            pbVar50 = local_140;\n            if (local_140 == (byte *)0x0) {\n              pbVar50 = (byte *)FUNC_0010ee3f(param_1,param_2,0);\n              if (pbVar50 == (byte *)0x0) goto LAB_001111e9;\n              if (**param_4 != 0x3a) goto LAB_00110788;\n            }\n            pbVar28 = *param_4;\n            *param_4 = pbVar28 + 1;\n            pcVar40 = strchr((char *)(pbVar28 + 1),0x3b);\n            if (pcVar40 == (char *)0x0) goto LAB_00110788;\n            piVar21 = (int *)FUN_00112b6e(pbVar50,0);\n            bVar52 = false;\n            if ((piVar21 != (int *)0x0) && (bVar52 = false, *piVar21 == 0x13)) {\n              bVar52 = true;\n              piVar21 = (int *)FUN_00112b6e(pbVar50,0);\n              if (piVar21 != (int *)0x0) {\n                if (*piVar21 == 0xd) {\n                  lVar38 = *(long *)(*(long *)(piVar21 + 4) + 8);\n                }\n                else {\n                  if (*piVar21 != 0x13) goto LAB_001104b1;\n                  lVar38 = *(long *)(*(long *)(piVar21 + 4) + 0x10);\n                }\n                bVar52 = lVar38 == 0;\n              }\n            }\nLAB_001104b1:\n            pbVar27 = (byte *)FUN_00109a0b(*param_4,(int)pcVar40 - (int)*param_4);\n            *param_4 = (byte *)(pcVar40 + 1);\n            cVar6 = pcVar40[1];\n            if (cVar6 == '0') {\n              local_100 = 2;\n            }\n            else if (cVar6 == '1') {\n              local_100 = 1;\n            }\n            else {\n              if (cVar6 == '\\0') goto LAB_00110788;\n              local_100 = 0;\n            }\n            *param_4 = (byte *)(pcVar40 + 2);\n            bVar1 = pcVar40[2];\n            if ('D' < (char)bVar1) {\nswitchD_00110537_caseD_40:\n              uVar15 = dcgettext(0,\"const/volatile indicator missing\",5);\n              FUN_00108fe8(pbVar3,uVar15);\n              goto switchD_00110537_caseD_3f;\n            }\n            if ((char)bVar1 < '?') {\n              if ((bVar1 & 0xfb) != 0x2a) goto switchD_00110537_caseD_40;\n              goto switchD_00110537_caseD_3f;\n            }\n            switch(bVar1) {\n            default:\n              goto switchD_00110537_caseD_40;\n            case 0x41:\n              *param_4 = (byte *)(pcVar40 + 3);\n            case 0x3f:\nswitchD_00110537_caseD_3f:\n              local_130 = '\\0';\n              local_138 = '\\0';\n              break;\n            case 0x42:\n              local_130 = '\\0';\n              *param_4 = (byte *)(pcVar40 + 3);\n              local_138 = '\\x01';\n              break;\n            case 0x43:\n              local_130 = '\\x01';\n              *param_4 = (byte *)(pcVar40 + 3);\n              local_138 = '\\0';\n              break;\n            case 0x44:\n              local_130 = '\\x01';\n              *param_4 = (byte *)(pcVar40 + 3);\n              local_138 = '\\x01';\n            }\n            pbVar28 = *param_4;\n            bVar1 = *pbVar28;\n            pbVar31 = pbVar27;\n            if (bVar1 == 0x2e) {\n              *param_4 = pbVar28 + 1;\nLAB_001106bd:\n              bVar41 = false;\n              local_120 = (byte *)0x0;\n              local_110 = (byte *)0x0;\n              local_140 = (byte *)0x0;\n            }\n            else {\n              if (bVar1 == 0x3f) {\n                *param_4 = pbVar28 + 1;\n                sVar33 = strlen(local_150);\n                iVar10 = strncmp((char *)pbVar27,local_150,sVar33);\n                if (iVar10 == 0) {\n                  bVar41 = true;\n                  local_120 = (byte *)0x0;\n                  local_110 = (byte *)0x0;\n                  local_140 = (byte *)0x0;\n                  goto LAB_00110703;\n                }\n                bVar41 = true;\n                local_140 = (byte *)0x0;\n                local_120 = (byte *)0x0;\n                local_110 = (byte *)0x0;\nLAB_0011072b:\n                lVar38 = FUN_0010c2d2(param_1,param_2,&local_a8);\n                if (lVar38 == 0) goto LAB_001111e9;\n                piVar21 = (int *)FUN_00112b6e(pbVar50,0);\n                if ((piVar21 == (int *)0x0) ||\n                   (((*piVar21 != 0xd && (*piVar21 != 0x13)) ||\n                    (lVar19 = **(long **)(piVar21 + 4), lVar19 == 0)))) goto LAB_00110788;\n                bVar1 = *pbVar27;\n                if (((bVar1 == 0x5f) && (pbVar27[1] == 0x5f)) &&\n                   ((bVar47 = pbVar27[2], ((&_sch_istable)[(ulong)bVar47 * 2] & 4) != 0 ||\n                    (bVar47 == 0x51 || bVar47 == 0x74)))) {\n                  bVar52 = true;\n                  bVar47 = 1;\nLAB_00110827:\n                  bVar2 = pbVar27[1];\n                  if ((bVar2 == 0x24) || (bVar2 == 0x2e)) {\n                    if (pbVar27[2] != 0x5f) goto LAB_0011085d;\n                    goto LAB_00110a69;\n                  }\n                  bVar7 = FUN_00113fb0(pbVar27,&DAT_001207c3);\n                  if (bVar2 != 0x5a) goto LAB_0011086f;\n                  if ((bVar47 | bVar7) != 0) goto LAB_00110a58;\n                  uVar45 = 0;\nLAB_00110a9d:\n                  local_a0 = pbVar31;\n                  if ((*pbVar31 == 0x5f) && (pbVar31[1] == 0x5a)) {\n                    sVar33 = strlen((char *)pbVar31);\n                    cplus_demangle_init_info(pbVar31,3,sVar33,&local_98);\n                    pvVar17 = malloc((long)local_6c << 5);\n                    local_78 = pvVar17;\n                    pvVar25 = malloc((long)local_5c << 3);\n                    local_68 = pvVar25;\n                    if ((pvVar17 == (void *)0x0) || (pvVar25 == (void *)0x0)) {\n                      free(pvVar17);\n                      free(pvVar25);\n                    }\n                    else {\n                      piVar21 = (int *)cplus_demangle_mangled_name(&local_98,1);\n                      if (*(char *)CONCAT71(uStack_7f,local_80) == '\\0') {\n                        free(local_68);\n                        pvVar17 = local_78;\n                        if (piVar21 != (int *)0x0) {\n                          if ((*piVar21 == 3) && (**(int **)(piVar21 + 6) == 0x29)) {\n                            lVar20 = FUN_0010b6ea(param_1,param_2,\n                                                  *(undefined8 *)(*(int **)(piVar21 + 6) + 6),\n                                                  &local_a9);\n                            free(pvVar17);\n                            goto LAB_001110a9;\n                          }\n                          pcVar40 = (char *)dcgettext(0,\"Demangled name is not a function\\n\",5);\n                          fprintf(_stderr,pcVar40);\n                          free(pvVar17);\n                          goto LAB_001111e9;\n                        }\n                      }\n                      else {\n                        free(local_68);\n                      }\n                      free(local_78);\n                    }\n                    FUN_0010911f(pbVar31);\n                  }\n                  else {\n                    local_80 = '\\0';\n                    local_88 = 0;\n                    local_6c = 10;\n                    local_98 = param_1;\n                    local_90 = param_2;\n                    local_78 = (void *)xmalloc(0xa0);\n                    pbVar50 = local_a0;\n                    local_70 = 0;\n                    pbVar28 = local_a0;\n                    if ((int)uVar45 == 0) {\n                      do {\n                        pbVar42 = (byte *)strchr((char *)pbVar28,0x5f);\n                        if (pbVar42 == (byte *)0x0) {\n                          FUN_0010911f(pbVar50);\n                          goto LAB_00111097;\n                        }\n                        pbVar28 = pbVar42 + 1;\n                      } while (pbVar42[1] != 0x5f);\n                      sVar33 = strspn((char *)pbVar42,\"_\");\n                      if (2 < (uint)sVar33) {\n                        pbVar42 = pbVar42 + ((uint)sVar33 - 2);\n                      }\n                    }\n                    else {\n                      pbVar42 = local_a0 + uVar45;\n                    }\n                    bVar1 = pbVar42[2];\n                    if (local_a0 == pbVar42) {\n                      if ((((&_sch_istable)[(ulong)bVar1 * 2] & 4) != 0) ||\n                         (pbVar50 = pbVar42, bVar1 == 0x51 || bVar1 == 0x74)) {\n                        local_a0 = pbVar42 + 2;\nLAB_00110d86:\n                        pbVar50 = local_a0;\n                        if (*local_a0 != 0) {\n                          pbVar28 = (byte *)0x0;\n                          cVar8 = '\\0';\n                          cVar6 = '\\0';\n                          while (pbVar42 = local_a0, bVar1 = *local_a0, bVar1 != 0) {\n                            if (bVar1 == 0x51) {\n                              cVar6 = FUN_0010d559(&local_98,&local_a0,0);\n                              if (cVar6 != '\\0') {\n                                cVar6 = FUN_00109be3(&local_98,pbVar42,(int)local_a0 - (int)pbVar42)\n                                ;\njoined_r0x00110fbc:\n                                if (cVar6 != '\\0') {\n                                  pbVar28 = (byte *)0x0;\n                                  goto LAB_0011100c;\n                                }\n                              }\n                              goto LAB_00111097;\n                            }\n                            if ('Q' < (char)bVar1) {\n                              if (bVar1 == 0x5f) {\n                                FUN_0010911f(pbVar50);\n                              }\n                              else {\n                                if (bVar1 != 0x74) {\n                                  if (bVar1 != 0x53) goto LAB_00110fd7;\n                                  goto LAB_00110ead;\n                                }\n                                if (pbVar28 == (byte *)0x0) {\n                                  pbVar28 = local_a0;\n                                }\n                                cVar6 = FUN_0010d21c(&local_98,&local_a0,0);\n                                if (cVar6 != '\\0') {\n                                  cVar6 = FUN_00109be3(&local_98,pbVar28,\n                                                       (int)local_a0 - (int)pbVar28);\n                                  goto joined_r0x00110fbc;\n                                }\n                              }\n                              goto LAB_00111097;\n                            }\n                            if (bVar1 != 0x43) {\n                              if ((char)bVar1 < 'D') {\n                                if ((byte)(bVar1 - 0x30) < 10) {\n                                  if (pbVar28 == (byte *)0x0) {\n                                    pbVar28 = local_a0;\n                                  }\n                                  uVar12 = FUN_00108e76(&local_a0);\n                                  pbVar5 = local_a0;\n                                  sVar33 = strlen((char *)local_a0);\n                                  if (uVar12 <= sVar33) {\n                                    local_a0 = pbVar5 + uVar12;\n                                    cVar6 = FUN_00109be3(&local_98,pbVar28,\n                                                         (int)local_a0 - (int)pbVar28);\n                                    goto joined_r0x00110fbc;\n                                  }\n                                  FUN_0010911f(pbVar42);\n                                  goto LAB_00111097;\n                                }\n                              }\n                              else if (bVar1 == 0x46) {\n                                local_a0 = local_a0 + 1;\n                                cVar8 = FUN_0010d882(&local_98,&local_a0,&local_88,&local_80);\n                                if (cVar8 != '\\0') {\n                                  pbVar28 = (byte *)0x0;\n                                  pbVar42 = local_a0;\n                                  goto LAB_00111004;\n                                }\n                                goto LAB_00111097;\n                              }\nLAB_00110fd7:\n                              cVar8 = FUN_0010d882(&local_98,&local_a0,&local_88,&local_80);\n                              pbVar42 = local_a0;\n                              if (cVar8 != '\\0') goto LAB_00111004;\n                              goto LAB_00111097;\n                            }\nLAB_00110ead:\n                            pbVar42 = local_a0 + 1;\n                            if (pbVar28 == (byte *)0x0) {\n                              pbVar28 = local_a0;\n                            }\nLAB_00111004:\n                            local_a0 = pbVar42;\n                            if (cVar6 != '\\0') {\nLAB_0011100c:\n                              cVar8 = FUN_0010d882(&local_98,&local_a0,&local_88,&local_80);\n                              cVar6 = cVar8;\n                              if (cVar8 == '\\0') goto LAB_00111097;\n                            }\n                          }\n                          if ((cVar8 == '\\0') &&\n                             (cVar6 = FUN_0010d882(&local_98,&local_a0,&local_88,&local_80),\n                             cVar6 == '\\0')) goto LAB_00111097;\n                        }\n                        free(local_78);\n                        local_78 = (void *)0x0;\n                        if (local_88 == 0) {\n                          pcVar40 = (char *)dcgettext(0,\"no argument types in mangled string\\n\",5);\n                          fprintf(_stderr,pcVar40);\n                        }\n                        local_a9 = local_80;\n                        lVar20 = local_88;\nLAB_001110a9:\n                        if (lVar20 != 0) {\n                          pbVar50 = (byte *)FUN_00113b98(lVar19,lVar38,lVar20,local_a9);\n                          goto LAB_001110d5;\n                        }\n                        goto LAB_001111e9;\n                      }\n                      for (; *pbVar50 == 0x5f; pbVar50 = pbVar50 + 1) {\n                      }\n                      pcVar40 = strstr((char *)pbVar50,\"__\");\n                      if ((pcVar40 != (char *)0x0) && (pcVar40[2] != '\\0')) {\n                        cVar6 = FUN_00113e5e(&local_98,&local_a0,pcVar40);\n                        goto LAB_00110d7e;\n                      }\n                      FUN_0010911f(pbVar42);\n                    }\n                    else if (bVar1 == 0) {\n                      FUN_0010911f(local_a0);\n                    }\n                    else {\n                      cVar6 = FUN_00113e5e(&local_98,&local_a0,pbVar42);\nLAB_00110d7e:\n                      if (cVar6 != '\\0') goto LAB_00110d86;\n                    }\nLAB_00111097:\n                    free(local_78);\n                  }\n                  goto LAB_001111e9;\n                }\n                cVar6 = FUN_00113fb0(pbVar27,&DAT_001207be);\n                if (cVar6 == '\\0') {\n                  if (param_3 == (char *)0x0) {\n                    bVar47 = 0;\n                    bVar52 = false;\n                  }\n                  else {\n                    iVar10 = strcmp(local_150,param_3);\n                    bVar52 = iVar10 == 0;\n                    bVar47 = 0;\n                  }\n                }\n                else {\n                  bVar47 = 1;\n                  bVar52 = true;\n                }\n                if (bVar1 == 0x5f) goto LAB_00110827;\nLAB_0011085d:\n                bVar7 = FUN_00113fb0(pbVar27,&DAT_001207c3);\nLAB_0011086f:\n                if ((bVar47 | bVar7) == 0) {\n                  pcVar40 = param_3;\n                  if (param_3 == (char *)0x0) {\n                    if (local_138 == '\\0') {\n                      pcVar16 = \"\";\n                      if (local_130 != '\\0') {\n                        pcVar16 = \"V\";\n                      }\n                      pcVar46 = \"\";\n                    }\n                    else {\n                      pcVar16 = \"\";\n                      if (local_130 != '\\0') {\n                        pcVar16 = \"V\";\n                      }\n                      pcVar46 = \"C\";\n                    }\nLAB_00110917:\n                    iVar10 = 0;\n                    sprintf((char *)&local_98,\"__%s%s\",pcVar46,pcVar16);\n                  }\n                  else {\n                    pcVar46 = \"C\";\n                    pcVar16 = \"V\";\n                    sVar33 = strlen(param_3);\n                    iVar10 = (int)sVar33;\n                    if (local_138 == '\\0') {\n                      pcVar46 = \"\";\n                    }\n                    if (local_130 == '\\0') {\n                      pcVar16 = \"\";\n                    }\n                    if (iVar10 == 0) goto LAB_00110917;\n                    pcVar29 = strchr(param_3,0x3c);\n                    if (pcVar29 == (char *)0x0) {\n                      sprintf((char *)&local_98,\"__%s%s%d\",pcVar46,pcVar16);\n                    }\n                    else {\n                      iVar10 = 0;\n                      sprintf((char *)&local_98,\"__%s%s\",pcVar46,pcVar16);\n                      pcVar40 = (char *)0x0;\n                    }\n                  }\n                  iVar14 = 0;\n                  if (!bVar52) {\n                    sVar33 = strlen(local_150);\n                    iVar14 = (int)sVar33;\n                  }\n                  sVar33 = strlen((char *)&local_98);\n                  sVar30 = strlen((char *)pbVar27);\n                  local_d0 = (int)sVar33;\n                  if (((*local_150 == 'o') && (local_150[1] == 'p')) &&\n                     ((local_150[2] == '$' || (local_150[2] == '.')))) goto LAB_001111e9;\n                  pbVar31 = (byte *)xmalloc(iVar10 + 1 + iVar14 + local_d0 + (int)sVar30);\n                  if (bVar52) {\n                    *pbVar31 = 0;\n                  }\n                  else {\n                    strcpy((char *)pbVar31,local_150);\n                  }\n                  sVar33 = strlen((char *)pbVar31);\n                  uVar45 = sVar33 & 0xffffffff;\n                  strcpy((char *)(pbVar31 + sVar33),(char *)&local_98);\n                  if (pcVar40 != (char *)0x0) {\n                    strcat((char *)pbVar31,pcVar40);\n                  }\n                  strcat((char *)pbVar31,(char *)pbVar27);\n                  if (*pbVar27 != 0) goto LAB_00110a9d;\n                }\n                else {\nLAB_00110a58:\n                  if ((bVar1 != 0) && ((bVar7 & 1) == 0)) {\n                    uVar45 = 0;\n                    goto LAB_00110a9d;\n                  }\n                }\nLAB_00110a69:\n                puVar32 = (undefined8 *)xmalloc(8);\n                *puVar32 = 0;\n                pbVar50 = (byte *)FUN_00113b98(lVar19,lVar38,puVar32,0);\nLAB_001110d5:\n                if (pbVar50 == (byte *)0x0) goto LAB_001111e9;\n                goto LAB_001110de;\n              }\n              if (bVar1 != 0x2a) {\n                FUN_00108fe8(pbVar3,\"member function type missing\");\n                goto LAB_001106bd;\n              }\n              *param_4 = pbVar28 + 1;\n              uVar12 = FUN_00109a32(param_4,0,param_6);\n              pbVar28 = *param_4;\n              if (*pbVar28 != 0x3b) goto LAB_00110788;\n              local_110 = (byte *)(ulong)(uVar12 & 0x7fffffff);\n              *param_4 = pbVar28 + 1;\n              bVar41 = pbVar28[1] == 0x3b || pbVar28[1] == 0;\n              if (bVar41) {\n                bVar41 = false;\n                local_120 = (byte *)0x0;\n                local_140 = (byte *)0x0;\n              }\n              else {\n                pbVar28 = (byte *)FUNC_0010ee3f(param_1,param_2,0,param_4);\n                bVar1 = **param_4;\n                if (bVar1 != 0x3a) {\n                  if (bVar1 == 0x3b) {\n                    *param_4 = *param_4 + 1;\n                    local_140 = (byte *)0x0;\n                    local_120 = pbVar28;\n                    goto LAB_00110703;\n                  }\n                  goto LAB_00110788;\n                }\n                local_120 = (byte *)0x0;\n                local_140 = pbVar28;\n              }\n            }\nLAB_00110703:\n            if (bVar52) goto LAB_0011072b;\nLAB_001110de:\n            uVar12 = local_f0 + 1;\n            if (local_ec <= uVar12) {\n              local_ec = local_ec + 10;\n              local_128 = (char *)xrealloc(local_128,(ulong)local_ec << 3);\n            }\n            if (bVar41) {\n              ppbVar34 = (byte **)xmalloc(0x28);\n              puVar22 = (undefined *)((long)ppbVar34 + 0x16);\n              for (lVar38 = 0x12; lVar38 != 0; lVar38 = lVar38 + -1) {\n                *puVar22 = 0;\n                puVar22 = puVar22 + (ulong)bVar48 * -2 + 1;\n              }\n              *ppbVar34 = pbVar31;\n              ppbVar34[1] = pbVar50;\n              *(undefined4 *)(ppbVar34 + 2) = local_100;\n              ppbVar34[3] = (byte *)0xffffffffffffffff;\n              *(char *)((long)ppbVar34 + 0x14) = local_138;\n              *(char *)((long)ppbVar34 + 0x15) = local_130;\n            }\n            else {\n              ppbVar34 = (byte **)xmalloc(0x28);\n              puVar22 = (undefined *)((long)ppbVar34 + 0x16);\n              for (lVar38 = 0x12; lVar38 != 0; lVar38 = lVar38 + -1) {\n                *puVar22 = 0;\n                puVar22 = puVar22 + (ulong)bVar48 * -2 + 1;\n              }\n              *ppbVar34 = pbVar31;\n              ppbVar34[1] = pbVar50;\n              *(undefined4 *)(ppbVar34 + 2) = local_100;\n              *(char *)((long)ppbVar34 + 0x14) = local_138;\n              *(char *)((long)ppbVar34 + 0x15) = local_130;\n              ppbVar34[3] = local_110;\n              ppbVar34[4] = local_120;\n            }\n            *(byte ***)(local_128 + (ulong)local_f0 * 8) = ppbVar34;\n            pbVar50 = *param_4;\n            if ((*pbVar50 == 0x3b) || (local_f0 = uVar12, *pbVar50 == 0)) goto LAB_00111678;\n            goto LAB_00110406;\n          }\n          if (pvVar24 != (void *)0x0) {\n            *(undefined8 *)((long)pvVar24 + (ulong)local_fc * 8) = 0;\n          }\n          pbVar3 = *param_4;\n          if (param_6 <= pbVar3) goto LAB_001112f3;\n          if (*pbVar3 == 0x3b) {\n            *param_4 = pbVar3 + 1;\n          }\n          pbVar27 = *param_4;\n          if (*pbVar27 == 0x7e) {\n            *param_4 = pbVar27 + 1;\n            if (((pbVar27[1] & 0xef) == 0x2d) || (pbVar27[1] == 0x2b)) {\n              *param_4 = pbVar27 + 2;\n            }\n            if (**param_4 != 0x25) goto LAB_001112ee;\n            pbVar27 = *param_4 + 1;\n            *param_4 = pbVar27;\n            cVar6 = FUN_00109ab1(param_4,&local_98,param_6);\n            if (cVar6 == '\\0') goto LAB_001112f3;\n            if ((uint)local_98 != (uint)local_a8) {\nLAB_001112a2:\n              *param_4 = pbVar27;\n              pvVar25 = (void *)FUNC_0010ee3f(param_1,param_2,0,param_4,0,param_6);\n              for (pbVar27 = *param_4; *pbVar27 != 0x3b; pbVar27 = pbVar27 + 1) {\n                if (*pbVar27 == 0) {\n                  FUN_00108fb9(pbVar3);\n                  goto LAB_001112f3;\n                }\n              }\n              *param_4 = pbVar27 + 1;\n              goto LAB_00111307;\n            }\n            if (local_98._4_4_ != local_a8._4_4_) goto LAB_001112a2;\n            pvVar25 = (void *)0x0;\n          }\n          else {\nLAB_001112ee:\n            pvVar25 = (void *)0x0;\nLAB_00111307:\n            if ((((ulong)local_118 | (ulong)pvVar24 | (ulong)pvVar25) == 0) && (!bVar51)) {\n              pvVar17 = (void *)FUN_00113da9(bVar9 == 0x73,uVar49,local_158);\n              break;\n            }\n            cVar6 = '\\0';\n          }\n          pvVar17 = (void *)FUN_00112904((bVar9 != 0x73) + '\\t',uVar49 & 0xffffffff);\n          if (pvVar17 == (void *)0x0) {\n            return (void *)0x0;\n          }\n          ppvVar35 = (void **)xmalloc(0x28);\n          lVar38 = 8;\n          ppvVar18 = ppvVar35 + 1;\n          if (cVar6 != '\\0') {\n            pvVar25 = pvVar17;\n          }\n          for (; lVar38 != 0; lVar38 = lVar38 + -1) {\n            *(undefined4 *)ppvVar18 = 0;\n            ppvVar18 = (void **)((long)ppvVar18 + (ulong)bVar48 * -8 + 4);\n          }\n          ppvVar35[3] = pvVar24;\n          ppvVar35[4] = pvVar25;\n          *ppvVar35 = local_158;\n          ppvVar35[2] = local_118;\n          *(void ***)((long)pvVar17 + 0x10) = ppvVar35;\n          goto LAB_001115eb;\n        }\n      }\nLAB_0010fe2e:\n      local_158 = (void *)0x0;\nLAB_001112f3:\n      free(local_158);\n      return (void *)0x0;\n    case 0x78:\n      bVar48 = pbVar50[1];\n      if (bVar48 == 0x73) {\nLAB_0010f0fd:\n        uVar15 = 7;\n      }\n      else if ((char)bVar48 < 't') {\n        if (bVar48 == 0) goto switchD_0010f055_caseD_24;\n        uVar15 = 0xb;\n        if (bVar48 != 0x65) goto LAB_0010f0df;\n      }\n      else {\n        uVar15 = 8;\n        if (bVar48 != 0x75) {\nLAB_0010f0df:\n          uVar15 = dcgettext(0,\"unrecognized cross reference type\",5);\n          FUN_00108fe8(pbVar3,uVar15);\n          goto LAB_0010f0fd;\n        }\n      }\n      pbVar27 = *param_4 + 1;\n      *param_4 = pbVar27;\n      pcVar16 = strchr((char *)pbVar27,0x3c);\n      pcVar40 = strchr((char *)pbVar27,0x3a);\n      if (pcVar40 == (char *)0x0) {\nswitchD_0010f055_caseD_24:\n        FUN_00108fb9(pbVar3);\n        return (void *)0x0;\n      }\n      if (((pcVar16 != (char *)0x0) && (pcVar16 < pcVar40)) && (pcVar40[1] == ':')) {\n        iVar10 = 0;\n        for (; cVar6 = *pcVar16, cVar6 != '\\0'; pcVar16 = pcVar16 + 1) {\n          if (cVar6 == '<') {\n            iVar10 = iVar10 + 1;\n          }\n          else if (cVar6 == '>') {\n            iVar10 = iVar10 + -1;\n          }\n          else if ((iVar10 == 0) && (pcVar40 = pcVar16, cVar6 == ':')) goto LAB_0010f176;\n        }\n        goto switchD_0010f055_caseD_24;\n      }\nLAB_0010f176:\n      uVar49 = (long)pcVar40 - (long)pbVar27;\n      if ((param_3 != (char *)0x0) &&\n         ((iVar10 = strncmp(param_3,(char *)pbVar27,uVar49), iVar10 == 0 &&\n          (param_3[uVar49] == '\\0')))) {\n        *(undefined *)(param_2 + 0x1a8) = 1;\n      }\n      pvVar17 = (void *)FUN_0010afd5(param_1,param_2,pbVar27,uVar49 & 0xffffffff,uVar15);\n      *param_4 = (byte *)(pcVar40 + 1);\n    }\n  }\nLAB_001115e2:\n  if (pvVar17 == (void *)0x0) {\n    return (void *)0x0;\n  }\nLAB_001115eb:\n  if ((uint)local_a8 != -1) {\n    ppvVar18 = (void **)FUN_00109022(param_2,&local_a8);\n    if (ppvVar18 == (void **)0x0) {\n      return (void *)0x0;\n    }\n    *ppvVar18 = pvVar17;\n  }\n  if (local_12c != 0xffffffff) {\n    uVar12 = *(uint *)((long)pvVar17 + 4);\n    if ((uVar12 != 0) && (local_12c != uVar12)) {\n      pcVar40 = (char *)dcgettext(0,\"Warning: changing type size from %d to %d\\n\",5);\n      fprintf(_stderr,pcVar40,(ulong)uVar12,(ulong)local_12c);\n    }\n    *(uint *)((long)pvVar17 + 4) = local_12c;\n    return pvVar17;\n  }\n  return pvVar17;\nLAB_00110788:\n  FUN_00108fb9(pbVar3);\nLAB_001111e9:\n  free(local_150);\n  free(local_128);\n  free(pbVar27);\n  goto LAB_001112f3;\nLAB_00111678:\n  *(undefined8 *)(local_128 + (ulong)uVar12 * 8) = 0;\n  if (*pbVar50 != 0) {\n    *param_4 = pbVar50 + 1;\n  }\n  if (local_e0 <= local_fc + 1) {\n    local_e0 = local_e0 + 10;\n    pvVar24 = (void *)xrealloc(pvVar24,(ulong)local_e0 << 3);\n  }\n  ppcVar23 = (char **)xmalloc(0x10);\n  *ppcVar23 = local_150;\n  ppcVar23[1] = local_128;\n  *(char ***)((long)pvVar24 + (ulong)local_fc * 8) = ppcVar23;\n  local_fc = local_fc + 1;\n  goto LAB_00110345;\n}\n\n",
            "current_name": "FUNC_0010ee3f",
            "entrypoint": "0x0010ee3f",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0010ee3f": "FUNC_0010ee3f"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0011173a": {
            "additional_data": {
                "FUN_0011173a": {
                    "extract_information": 2,
                    "process_binary_function": 1
                },
                "__ptr": {
                    "__ptr_name": 1,
                    "pointer": 3,
                    "pointer_value": 1,
                    "pointer_var": 1,
                    "pointer_variable": 1,
                    "ptr": 9,
                    "ptr_value": 1,
                    "ptr_var": 6,
                    "temp_ptr": 4,
                    "void_pointer": 1
                },
                "bVar2": {
                    "b_var2_name": 1,
                    "byte": 1,
                    "byte_flag": 1,
                    "byte_temp": 1,
                    "byte_value": 3,
                    "byte_var": 5,
                    "byte_var2": 12,
                    "byte_variable2": 1,
                    "temp_byte": 3,
                    "temp_byte1": 1
                },
                "bVar5": {
                    "byte_value_a": 1
                },
                "bVar6": {
                    "byte_value_b": 1
                },
                "cVar1": {
                    "c_var1_name": 1,
                    "ch1": 1,
                    "char1": 1,
                    "char_temp1": 1,
                    "char_value": 2,
                    "char_value1": 1,
                    "char_value_a": 1,
                    "char_var": 1,
                    "char_var1": 12,
                    "character": 1,
                    "character_var1": 2,
                    "character_variable1": 1,
                    "cur_char": 1,
                    "current_char": 1,
                    "temp_char": 1,
                    "temp_char1": 3
                },
                "cVar2": {
                    "byte_var": 1,
                    "char_value_b": 1
                },
                "cVar3": {
                    "ch2": 1,
                    "char_temp2": 1,
                    "char_value2": 1,
                    "char_value_c": 1,
                    "char_var": 3,
                    "char_var2": 6,
                    "char_var3": 6,
                    "character_flag": 1,
                    "character_var2": 1,
                    "character_var3": 1,
                    "character_variable3": 1,
                    "return_value": 1,
                    "temp_char": 1,
                    "temp_char2": 3,
                    "temp_char_2": 1
                },
                "char_pointer_local_48": {
                    "ptr_local_string": 1
                },
                "char_pointer_param_6": {
                    "string": 1
                },
                "char_pointer_pcVar16": {
                    "ptr_string2": 1
                },
                "char_pointer_pcVar8": {
                    "ptr_string": 1
                },
                "dVar19": {
                    "d_var19_name": 1,
                    "double_value": 4,
                    "double_var": 9,
                    "double_var1": 1,
                    "double_var19": 7,
                    "double_variable19": 1,
                    "temp_double": 3,
                    "temp_double1": 1
                },
                "dVar22": {
                    "double_var": 1
                },
                "double_dVar19": {
                    "double_var": 1
                },
                "iVar5": {
                    "i_var5_name": 1,
                    "index": 2,
                    "int_value": 1,
                    "int_value1": 1,
                    "int_var": 10,
                    "int_var1": 2,
                    "int_var5": 5,
                    "integer": 1,
                    "integer_var1": 1,
                    "integer_var5": 1,
                    "integer_variable5": 1,
                    "temp_int": 2,
                    "temp_int1": 2,
                    "var": 1
                },
                "int_param_3": {
                    "type": 1
                },
                "int_param_4": {
                    "flag": 1
                },
                "lVar10": {
                    "l_var10_name": 1,
                    "length": 1,
                    "long_value1": 3,
                    "long_value_a": 1,
                    "long_var1": 10,
                    "long_var10": 7,
                    "long_var2": 2,
                    "long_variable10": 1,
                    "temp_long1": 3,
                    "temp_long_1": 1
                },
                "lVar11": {
                    "l_var11_name": 1,
                    "long_value2": 3,
                    "long_value_b": 1,
                    "long_var11": 7,
                    "long_var2": 10,
                    "long_var5": 2,
                    "long_variable11": 1,
                    "temp_long2": 3,
                    "temp_long_2": 1,
                    "var1": 1
                },
                "lVar12": {
                    "l_var12_name": 1,
                    "long_value3": 3,
                    "long_value_c": 1,
                    "long_var12": 7,
                    "long_var3": 9,
                    "long_var4": 1,
                    "long_var6": 1,
                    "long_variable12": 1,
                    "temp_long": 1,
                    "temp_long3": 3,
                    "temp_long_3": 1,
                    "var2": 1
                },
                "lVar13": {
                    "long_pointer": 1,
                    "long_pointer2": 1,
                    "long_pointer_pointer_a": 1,
                    "long_value_pointer_pointer": 1,
                    "long_var13": 4,
                    "long_var4": 5,
                    "new_long_ptr": 1,
                    "ptr_long1": 1,
                    "temp_long4": 1,
                    "temp_long_4": 1,
                    "temp_long_ptr": 1
                },
                "lVar14": {
                    "long_var5": 1
                },
                "lVar15": {
                    "long_var6": 1
                },
                "lVar16": {
                    "long_var7": 1
                },
                "local_40": {
                    "array_of_double_ptr_to_long": 1,
                    "local_40_name": 1,
                    "local_array": 1,
                    "local_array_of_long_pointer": 1,
                    "local_long_double_pointer_var2": 1,
                    "local_long_pointer_array": 1,
                    "local_long_ptr": 1,
                    "local_long_ptr_array": 2,
                    "local_long_ptr_list": 1,
                    "local_long_ptr_ptr": 1,
                    "local_long_ptr_ptr1": 1,
                    "local_long_ptr_ptr_var": 1,
                    "local_pointer": 1,
                    "local_pointer_array": 1,
                    "local_pointer_array_variable40": 1,
                    "local_pointer_var1": 1,
                    "local_ptr_array": 5,
                    "local_ptr_long_var40": 1,
                    "local_ptr_var2": 1,
                    "local_var40": 2,
                    "long_pointer_pointer_array": 1,
                    "temp_local_array_ptr": 1,
                    "temp_ptr_ptr1": 1
                },
                "local_48": {
                    "char_pointer3": 1,
                    "local_48_name": 1,
                    "local_char_pointer": 3,
                    "local_char_pointer1": 1,
                    "local_char_pointer_var1": 1,
                    "local_char_ptr": 5,
                    "local_char_ptr1": 2,
                    "local_char_ptr_1": 1,
                    "local_char_ptr_var": 1,
                    "local_char_var1": 1,
                    "local_char_var48": 1,
                    "local_pointer": 1,
                    "local_pointer_char_var1": 1,
                    "local_pointer_variable48": 1,
                    "local_ptr48": 1,
                    "local_ptr_48": 1,
                    "local_ptr_char": 1,
                    "local_ptr_var1": 1,
                    "local_string": 1,
                    "local_var48": 2,
                    "temp_local_char_ptr": 1,
                    "temp_ptr5": 1
                },
                "long_lVar10": {
                    "variable1": 1
                },
                "long_lVar11": {
                    "variable2": 1
                },
                "long_lVar12": {
                    "variable3": 1
                },
                "long_pointer_param_2": {
                    "array": 1
                },
                "long_pointer_pointer_local_40": {
                    "pp_local_array": 1
                },
                "long_pointer_pointer_pplVar13": {
                    "pp_array": 1
                },
                "long_pointer_pointer_pplVar18": {
                    "pp_array2": 1
                },
                "param_1": {
                    "code": 1,
                    "function_param1": 3,
                    "function_parameter1": 1,
                    "function_state": 1,
                    "input": 1,
                    "input1": 1,
                    "input_value": 2,
                    "instruction_ptr": 1,
                    "param": 4,
                    "param1": 7,
                    "param_1": 2,
                    "param_1_name": 1,
                    "param_a": 1,
                    "param_function": 1,
                    "param_list": 1,
                    "param_pointer": 2
                },
                "param_2": {
                    "array": 1,
                    "array_of_long": 1,
                    "array_param": 1,
                    "binary_data": 1,
                    "data": 1,
                    "data_list": 1,
                    "data_pointer": 1,
                    "function_param2": 2,
                    "function_parameter2": 1,
                    "function_params": 1,
                    "input2": 1,
                    "long_pointer": 1,
                    "param2": 7,
                    "param_2_name": 1,
                    "param_array": 5,
                    "param_b": 1,
                    "parameters": 2,
                    "symbol_table": 1
                },
                "param_3": {
                    "code": 1,
                    "code_param": 1,
                    "condition_a": 1,
                    "control_var1": 1,
                    "function_param3": 2,
                    "function_parameter3": 1,
                    "input3": 1,
                    "input_param": 1,
                    "instruction_code": 1,
                    "int_param1": 1,
                    "opcode": 2,
                    "param3": 7,
                    "param_3_name": 1,
                    "param_c": 1,
                    "param_int1": 2,
                    "param_size": 1,
                    "param_value1": 1,
                    "size": 1,
                    "switch_state": 1,
                    "type": 2
                },
                "param_4": {
                    "condition_b": 1,
                    "control_var2": 1,
                    "flag": 2,
                    "function_index": 1,
                    "function_param4": 2,
                    "function_parameter4": 1,
                    "input4": 1,
                    "int_param": 1,
                    "int_param2": 1,
                    "length": 1,
                    "num_params": 1,
                    "number": 1,
                    "number_of_operands": 1,
                    "other_param": 1,
                    "param4": 7,
                    "param_4_name": 1,
                    "param_d": 1,
                    "param_int": 1,
                    "param_int2": 2,
                    "param_value2": 1,
                    "value": 1
                },
                "param_5": {
                    "additional_param": 1,
                    "address": 1,
                    "address_var": 1,
                    "arg": 1,
                    "function_param5": 2,
                    "function_parameter5": 1,
                    "input5": 1,
                    "offset": 1,
                    "offset_value": 1,
                    "param5": 7,
                    "param_5_name": 1,
                    "param_e": 1,
                    "param_u_int64": 1,
                    "param_ulong": 1,
                    "param_value": 1,
                    "param_value3": 1,
                    "parameter": 1,
                    "ulong_param": 1,
                    "ulong_param1": 1,
                    "value": 4
                },
                "param_6": {
                    "function_param6": 2,
                    "function_parameter6": 1,
                    "input6": 1,
                    "input_string": 1,
                    "name": 2,
                    "param6": 7,
                    "param_6_name": 1,
                    "param_char_pointer": 1,
                    "param_f": 1,
                    "param_string": 3,
                    "str_param": 1,
                    "string": 5,
                    "string_param": 2,
                    "string_ptr": 1,
                    "string_var": 1
                },
                "pcVar16": {
                    "char_pointer2": 5,
                    "char_pointer_var2": 1,
                    "char_ptr16": 1,
                    "char_ptr2": 3,
                    "char_ptr_var2": 2,
                    "new_string_ptr2": 1,
                    "pc_var16_nam": 1,
                    "pointer_char_var16": 1,
                    "pointer_char_var2": 1,
                    "pointer_variable16": 1,
                    "ptr_char1": 1,
                    "ptr_char_var16": 1,
                    "ptr_to_char2": 1,
                    "ptr_var16": 2,
                    "temp_char_ptr2": 2,
                    "temp_char_ptr_2": 1,
                    "temp_ptr4": 1
                },
                "pcVar20": {
                    "char_ptr2": 1
                },
                "pcVar8": {
                    "char_pointer": 5,
                    "char_pointer1": 1,
                    "char_pointer_var": 1,
                    "char_ptr": 3,
                    "char_ptr1": 1,
                    "char_ptr8": 1,
                    "char_ptr_var": 2,
                    "new_string_ptr": 1,
                    "pc_var8_name": 1,
                    "pointer_char_var": 1,
                    "pointer_char_var8": 1,
                    "pointer_variable8": 1,
                    "ptr_char": 1,
                    "ptr_char_var8": 1,
                    "ptr_to_char": 1,
                    "ptr_var8": 4,
                    "temp_char_ptr": 2,
                    "temp_char_ptr1": 1,
                    "temp_ptr3": 1
                },
                "plVar16": {
                    "ptr_var16": 1
                },
                "plVar18": {
                    "ptr_var18": 1
                },
                "plVar7": {
                    "long_array": 2,
                    "long_list": 1,
                    "long_pointer": 2,
                    "long_pointer1": 1,
                    "long_ptr": 1,
                    "long_value_pointer": 1,
                    "long_var": 3,
                    "long_var1": 1,
                    "long_var7": 1,
                    "pl_var7_name": 1,
                    "pointer_var2": 1,
                    "pointer_var7": 1,
                    "pointer_variable7": 1,
                    "ptr_array": 1,
                    "ptr_long": 1,
                    "ptr_long_var7": 1,
                    "ptr_to_long": 1,
                    "ptr_var3": 1,
                    "ptr_var7": 4,
                    "temp_long_ptr": 2,
                    "temp_long_ptr1": 1,
                    "temp_ptr2": 1
                },
                "pplVar13": {
                    "double_ptr_to_long": 1,
                    "double_ptr_var": 1,
                    "long_double_pointer_var1": 1,
                    "long_ptr_array": 1,
                    "long_ptr_list": 1,
                    "long_ptr_ptr": 1,
                    "long_ptr_ptr13": 1,
                    "long_ptr_ptr_var": 1,
                    "pointer_pointer_long_var13": 1,
                    "pointer_to_pointer_variable13": 1,
                    "ppl_var13_name": 1,
                    "ptr1_ptr_long": 1,
                    "ptr_ptr_var13": 1,
                    "temp_long_ptr_ptr": 1,
                    "temp_long_ptr_ptr1": 1
                },
                "pplVar17": {
                    "ptr_ptr_var1": 1
                },
                "pplVar18": {
                    "long_pointer_pointer1": 1,
                    "long_ptr_ptr18": 1,
                    "new_pointer_ptr": 1,
                    "pointer_pointer_long_var18": 1,
                    "pointer_to_pointer_variable18": 1,
                    "ptr2_ptr_long": 1,
                    "ptr_ptr_array": 1,
                    "ptr_ptr_long_var18": 1,
                    "ptr_ptr_var18": 1,
                    "temp_long_ptr_ptr_2": 1
                },
                "puVar6": {
                    "allocated_memory": 1,
                    "malloced_ptr": 1,
                    "new_pointer": 1,
                    "pointer": 1,
                    "pointer_array": 1,
                    "pointer_var1": 1,
                    "pointer_var2": 1,
                    "pointer_var6": 1,
                    "pointer_variable6": 1,
                    "ptr": 1,
                    "ptr_array": 1,
                    "ptr_list": 1,
                    "ptr_to_undef_var": 1,
                    "ptr_var": 4,
                    "ptr_var2": 1,
                    "ptr_var6": 6,
                    "pu_var6_name": 1,
                    "temp_ptr1": 1,
                    "temp_ptr2": 1,
                    "temp_ptr_2": 1,
                    "undefined8_pointer": 1,
                    "undefined_pointer": 1
                },
                "uVar14": {
                    "temp_u_long1": 1,
                    "temp_ulong1": 1,
                    "temp_ulong2": 1,
                    "temp_ulong_1": 1,
                    "u_var14_name": 1,
                    "ulong_value1": 3,
                    "ulong_value_a": 1,
                    "ulong_var": 1,
                    "ulong_var1": 10,
                    "ulong_var14": 7,
                    "undefined_variable14": 1,
                    "unsigned_value1": 1
                },
                "uVar15": {
                    "temp_u_long2": 1,
                    "temp_ulong2": 1,
                    "temp_ulong3": 1,
                    "temp_ulong_2": 1,
                    "u_var15_name": 1,
                    "ulong_value2": 3,
                    "ulong_value_b": 1,
                    "ulong_var15": 7,
                    "ulong_var2": 11,
                    "undefined_variable15": 1,
                    "unsigned_value2": 1
                },
                "uVar17": {
                    "temp_u_int2": 1,
                    "temp_uint": 1,
                    "temp_uint1": 1,
                    "temp_uint_2": 1,
                    "u_var17_name": 1,
                    "uint_value": 3,
                    "uint_var": 10,
                    "uint_var1": 1,
                    "uint_var17": 7,
                    "undefined_variable17": 1,
                    "unsigned_value3": 1
                },
                "uVar18": {
                    "ulong_var2": 1
                },
                "uVar19": {
                    "ulong_var3": 1
                },
                "uVar21": {
                    "uint_var": 1
                },
                "uVar4": {
                    "return_value": 2,
                    "temp_undefined": 2,
                    "temp_undefined1": 1,
                    "u_var4_name": 1,
                    "undefined_flag": 1,
                    "undefined_value": 2,
                    "undefined_var": 8,
                    "undefined_var1": 2,
                    "undefined_var4": 7,
                    "undefined_variable1": 1,
                    "undefined_variable4": 1
                },
                "uVar9": {
                    "new_value": 1,
                    "result": 1,
                    "temp_u_int": 1,
                    "temp_uint": 1,
                    "temp_ulong1": 1,
                    "temp_undefined2": 1,
                    "u_var9_name": 1,
                    "ulong_var": 1,
                    "ulong_var9": 1,
                    "undefined8_value": 1,
                    "undefined8_var": 3,
                    "undefined_value": 2,
                    "undefined_value2": 1,
                    "undefined_var2": 6,
                    "undefined_var9": 6,
                    "undefined_variable2": 1,
                    "undefined_variable9": 1
                },
                "uint_uVar17": {
                    "u_var3": 1
                },
                "ulong_param_5": {
                    "value": 1
                },
                "ulong_uVar14": {
                    "u_var1": 1
                },
                "ulong_uVar15": {
                    "u_var2": 1
                },
                "undefined8_param_1": {
                    "param": 1
                },
                "undefined8_pointer_puVar6": {
                    "ptr_array": 1
                },
                "undefined8_uVar9": {
                    "u_var": 1
                },
                "uvar4": {
                    "result": 1
                },
                "void_pointer___ptr": {
                    "pointer": 1
                }
            },
            "called": [
                "strlen",
                "FUN_0010bc80",
                "FUN_0010c05d",
                "FUN_00108fe8",
                "FUN_0010c139",
                "free",
                "strtol",
                "FUN_0010c1c6",
                "FUN_00108f08",
                "concat",
                "FUN_0010bd62",
                "FUN_0010bf20",
                "FUN_00113d3a",
                "FUN_0010c6be",
                "FUN_0010bf86",
                "dcgettext",
                "FUN_0010ee3f",
                "FUN_00113ce0",
                "strtod",
                "strcmp",
                "fprintf",
                "FUN_00112996",
                "strchr",
                "FUN_0010be88",
                "FUN_0010be1a",
                "xrealloc",
                "xstrdup",
                "FUN_00109a0b",
                "FUN_00108fb9",
                "FUN_0010bbd3",
                "FUN_0010c218",
                "xmalloc"
            ],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0011244f) */\n/* WARNING: Type propagation algorithm not settling */\n\n\nundefined extract_information_0011173a(undefined8 param1,long *param2,int param3,int param4,ulong param5,\n                      char *param6)\n\n{\n  char char_var1;\n  byte byte_var2;\n  void *ptr;\n  char char_var2;\n  undefined undefined_var;\n  int int_var;\n  undefined8 *ptr_var6;\n  long *ptr_var7;\n  char *char_pointer;\n  undefined8 undefined_var2;\n  long long_var1;\n  long long_var2;\n  long long_var3;\n  long **long_ptr_ptr;\n  ulong ulong_var1;\n  ulong ulong_var2;\n  char *char_pointer2;\n  uint uint_var;\n  long **pointer_to_pointer_variable18;\n  double double_var;\n  char *local_char_ptr;\n  long **local_ptr_array [2];\n  \n  if (param2[4] != 0) {\n    if (((param3 == 100) && (*param6 != '\\0')) && (param2[5] == param5)) goto LAB_00111a06;\n    char_var2 = FUN_0010bbd3(param1);\n    if (char_var2 == '\\0') {\n      return 0;\n    }\n    *(undefined *)((long)param2 + 0x44) = 0;\n    *(undefined4 *)(param2 + 8) = 0;\n    param2[9] = param2[4];\n    if (*(char *)(param2 + 1) == '\\0') {\n      param2[6] = param2[5];\n    }\n    *(undefined4 *)(param2 + 0x10) = 1;\n    ptr_var6 = (undefined8 *)xmalloc(8);\n    param2[0x11] = (long)ptr_var6;\n    *ptr_var6 = 0;\n    param2[4] = 0;\n  }\n  strlen(param6);\n  if (param3 == 0x84) {\nLAB_00111ab7:\n    undefined_var = FUN_00108f08(param1,param6);\n    return undefined_var;\n  }\n  if (param3 < 0x85) {\n    if (param3 == 0x3c) {\n      int_var = strcmp(param6,\"gcc2_compiled.\");\n      if (int_var == 0) {\n        *(undefined4 *)(param2 + 8) = 2;\n        return 1;\n      }\n      int_var = strcmp(param6,\"gcc_compiled.\");\n      if (int_var == 0) {\n        *(undefined4 *)(param2 + 8) = 1;\n        return 1;\n      }\n      *(undefined *)((long)param2 + 0x44) = 1;\n      return 1;\n    }\n    if (param3 < 0x3d) {\n      if (param3 == 0x24) {\n        if (*param6 == '\\0') {\n          if (*(char *)(param2 + 0xc) == '\\0') {\n            return 1;\n          }\n          if (*(char *)(param2 + 1) != '\\0') {\n            param5 = param5 + param2[7];\n          }\n          char_var2 = FUN_0010c1c6(param1,param2);\n          if (char_var2 != '\\0') {\n            char_var2 = FUN_0010be1a(param1,param5);\n            if (char_var2 != '\\0') {\n              *(undefined *)(param2 + 0xc) = 0;\n              param2[0xd] = -1;\n              return 1;\n            }\n            return 0;\n          }\n          return 0;\n        }\n        if ((*(char *)(param2 + 0xc) != '\\0') &&\n           ((param5 < (ulong)param2[0xd] || (param2[0xd] == 0xffffffffffffffff)))) {\n          param2[0xd] = param5;\n        }\n      }\n      else if (param3 < 0x25) {\n        if (param3 == 0xc) {\n          return 1;\n        }\n        if (param3 - 0x1eU < 2) {\n          return 1;\n        }\n      }\n      else {\n        if (param3 == 0x2a) {\n          return 1;\n        }\n        if (param3 == 0x38) {\n          return 1;\n        }\n      }\n    }\n    else {\n      if (param3 == 100) {\nLAB_00111a06:\n        if (*(char *)(param2 + 0xc) != '\\0') {\n          ulong_var1 = param5;\n          if (((*param6 != '\\0') && (ulong_var2 = param2[0xd], ulong_var2 != 0xffffffffffffffff)) &&\n             (ulong_var1 = ulong_var2, param5 < ulong_var2)) {\n            ulong_var1 = param5;\n          }\n          char_var2 = FUN_0010c1c6(param1,param2);\n          if (char_var2 == '\\0') {\n            return 0;\n          }\n          char_var2 = FUN_0010be1a(param1,ulong_var1);\n          if (char_var2 == '\\0') {\n            return 0;\n          }\n          *(undefined *)(param2 + 0xc) = 0;\n          param2[0xd] = -1;\n        }\n        if (*param6 == '\\0') {\n          return 1;\n        }\n        ptr = (void *)param2[4];\n        if (ptr == (void *)0x0) {\n          long_var3 = xstrdup(param6);\n          param2[4] = long_var3;\n        }\n        else {\n          if (*param6 == '/') {\n            long_var3 = xstrdup(param6);\n          }\n          else {\n            long_var3 = concat(ptr,param6,0);\n          }\n          param2[4] = long_var3;\n          free(ptr);\n        }\n        param2[5] = param5;\n        return 1;\n      }\n      if (param3 < 0x65) {\n        if (param3 == 0x44) {\n          long_var3 = 0;\n          if (*(char *)(param2 + 0xc) != '\\0') {\n            long_var3 = param2[7];\n          }\n          undefined_var = FUN_0010bf86(param1,(long)param4,long_var3 + param5);\n          return undefined_var;\n        }\n        if (param3 == 0x62) {\n          return 1;\n        }\n      }\n      else if (param3 == 0x82) {\n        ptr_var7 = (long *)xmalloc();\n        int_var = *(int *)(param2 + 0x10);\n        long_var1 = param2[10];\n        long_var2 = param2[0xb];\n        ptr_var7[5] = 0;\n        long_var3 = param2[0x11];\n        *(int *)(ptr_var7 + 4) = int_var;\n        uint_var = int_var + 1;\n        *(uint *)(param2 + 0x10) = uint_var;\n        *ptr_var7 = long_var2;\n        ptr_var7[1] = long_var1;\n        ptr_var7[2] = (long)param6;\n        ptr_var7[3] = param5;\n        param2[10] = (long)ptr_var7;\n        param2[0xb] = (long)ptr_var7;\n        long_var3 = xrealloc(long_var3,(ulong)uint_var << 3);\n        uint_var = *(uint *)(ptr_var7 + 4);\n        param2[0x11] = long_var3;\n        *(undefined8 *)(long_var3 + (ulong)uint_var * 8) = 0;\n        goto LAB_00111ab7;\n      }\n    }\nLAB_00111c29:\n    char_pointer = strchr(param6,0x3a);\n    if ((char_pointer != (char *)0x0) && ((char_pointer[1] & 0xdfU) == 0x46)) {\n      if (*(char *)(param2 + 0xc) != '\\0') {\n        ulong_var1 = param2[0xd];\n        ulong_var2 = param5;\n        if ((ulong_var1 != 0xffffffffffffffff) && (ulong_var2 = ulong_var1, param5 < ulong_var1)) {\n          ulong_var2 = param5;\n        }\n        char_var2 = FUN_0010c1c6(param1,param2);\n        if (char_var2 == '\\0') {\n          return 0;\n        }\n        char_var2 = FUN_0010be1a(param1,ulong_var2);\n        if (char_var2 == '\\0') {\n          return 0;\n        }\n        param2[0xd] = -1;\n      }\n      if (*(char *)(param2 + 1) != '\\0') {\n        param2[7] = param5;\n      }\n      *(undefined *)(param2 + 0xc) = 1;\n    }\n    local_char_ptr = strchr(param6,0x3a);\n    if (local_char_ptr == (char *)0x0) {\n      return 1;\n    }\nLAB_00111cbc:\n    if (local_char_ptr[1] == ':') goto code_r0x00111cc7;\n    if (*param6 == '$') {\n      char_var2 = param6[1];\n      char_pointer2 = \"eh_throw\";\n      if (char_var2 != 'e') {\n        if (char_var2 < 'f') {\n          if ((char_var2 != 'X') && (char_var2 != '_')) {\nLAB_00111d1a:\n            undefined_var2 = dcgettext(0,\"unknown C++ encoded name\",5);\n            FUN_00108fe8(param6,undefined_var2);\n          }\n        }\n        else {\n          char_pointer2 = \"this\";\n          if (char_var2 == 't') goto LAB_00111d62;\n          if (char_var2 != 'v') goto LAB_00111d1a;\n        }\n        goto LAB_00111d38;\n      }\n    }\n    else {\nLAB_00111d38:\n      char_pointer2 = (char *)0x0;\n      if ((param6 != local_char_ptr) && ((*param6 != ' ' || (local_char_ptr != param6 + 1)))) {\n        char_pointer2 = (char *)FUN_00109a0b(param6,(int)local_char_ptr - (int)param6);\n      }\n    }\nLAB_00111d62:\n    byte_var2 = local_char_ptr[1];\n    char_pointer = local_char_ptr + 1;\n    if (((byte)(*(ushort *)(&_sch_istable + (ulong)byte_var2 * 2) >> 2) & 1 |\n        (byte_var2 == 0x2d || byte_var2 == 0x28)) != 0) {\nswitchD_00111de5_caseD_58:\n      local_char_ptr = char_pointer;\n      long_var3 = FUNC_0010ee3f(param1,param2,0,&local_char_ptr,0);\n      if (long_var3 == 0) {\n        return 0;\n      }\n      undefined_var2 = 4;\n      goto LAB_001123e8;\n    }\n    if (byte_var2 == 0) goto switchD_00111de5_caseD_44;\n    char_pointer = local_char_ptr + 2;\n    char_var2 = local_char_ptr[1];\n    switch(char_var2) {\n    case 'C':\n      local_char_ptr = char_pointer;\n      long_var3 = FUNC_0010ee3f(param1,param2,0,&local_char_ptr,0);\n      char_pointer = \"debug_record_label: not implemented\";\n      if (long_var3 == 0) {\n        return 0;\n      }\n      goto LAB_00111b96;\n    default:\n      goto switchD_00111de5_caseD_44;\n    case 'F':\n    case 'f':\n      local_char_ptr = char_pointer;\n      long_var3 = FUNC_0010ee3f(param1,param2,0,&local_char_ptr,0);\n      if (long_var3 == 0) {\n        return 0;\n      }\n      char_var2 = FUN_0010bc80(param1,char_pointer2,long_var3,char_var2 == 'F',param5);\n      if (char_var2 != '\\0') {\n        do {\n          if (*local_char_ptr != ';') {\n            return 1;\n          }\n          local_char_ptr = local_char_ptr + 1;\n          long_var3 = FUNC_0010ee3f(param1,param2,0,&local_char_ptr,0);\n        } while (long_var3 != 0);\n        return 0;\n      }\n      return 0;\n    case 'G':\n      local_char_ptr = char_pointer;\n      long_var3 = FUNC_0010ee3f(param1,param2,0,&local_char_ptr,0);\n      if (long_var3 == 0) {\n        return 0;\n      }\n      if (char_pointer2 == (char *)0x0) goto LAB_0011208f;\n      long_var1 = param2[3];\n      ptr_var7 = (long *)param2[2];\n      char_var2 = *(char *)(*(long *)(*param2 + 8) + 0x1c);\n      goto LAB_00112045;\n    case 'P':\n      if (param3 == 0x24) {\n        local_char_ptr = char_pointer;\n        do {\n          if (*local_char_ptr != ';') {\n            return 1;\n          }\n          local_char_ptr = local_char_ptr + 1;\n          long_var3 = FUNC_0010ee3f(param1,param2,0,&local_char_ptr,0);\n        } while (long_var3 != 0);\n        return 0;\n      }\n    case 'R':\n      local_char_ptr = char_pointer;\n      long_var3 = FUNC_0010ee3f(param1,param2,0,&local_char_ptr,0);\n      if (long_var3 == 0) {\n        return 0;\n      }\n      undefined_var2 = 2;\n      break;\n    case 'S':\n      local_char_ptr = char_pointer;\n      long_var3 = FUNC_0010ee3f(param1,param2,0,&local_char_ptr,0);\n      if (long_var3 == 0) {\n        return 0;\n      }\n      undefined_var2 = 2;\n      goto LAB_001121c4;\n    case 'T':\n      char_var2 = local_char_ptr[2];\n      if (char_var2 == 't') {\n        char_pointer = local_char_ptr + 3;\n      }\n      local_char_ptr = char_pointer;\n      long_var3 = FUNC_0010ee3f(param1,param2,char_pointer2,&local_char_ptr,local_ptr_array);\n      if (long_var3 == 0) {\n        return 0;\n      }\n      if (char_pointer2 == (char *)0x0) {\n        return 1;\n      }\n      char_var1 = *(char *)(param2 + 0x35);\n      ptr_var7 = (long *)FUN_0010c6be(param1,char_pointer2,long_var3);\n      if (ptr_var7 == (long *)0x0) {\n        return 0;\n      }\n      if (local_ptr_array[0] != (long **)0x0) {\n        *local_ptr_array[0] = ptr_var7;\n      }\n      if (char_var1 != '\\0') goto LAB_001122f0;\n      long_ptr_ptr = (long **)(param2 + 0x34);\n      pointer_to_pointer_variable18 = (long **)param2[0x34];\n      goto LAB_001122b2;\n    case 'V':\n      local_char_ptr = char_pointer;\n      long_var3 = FUNC_0010ee3f(param1,param2,0,&local_char_ptr,0);\n      if (long_var3 == 0) {\n        return 0;\n      }\n      undefined_var2 = 3;\n      goto LAB_001123e8;\n    case 'X':\n    case 'l':\n    case 's':\n      goto switchD_00111de5_caseD_58;\n    case 'Y':\n      char_pointer = local_char_ptr + 3;\n      if (((local_char_ptr[2] != '\\0') && (char_pointer = local_char_ptr + 4, local_char_ptr[3] == 'n')) &&\n         (char_pointer = local_char_ptr + 5, char_pointer2 = local_char_ptr + 4, local_char_ptr = char_pointer, *char_pointer2 == '0')) {\n        for (; char_pointer = local_char_ptr, *local_char_ptr != '\\0'; local_char_ptr = local_char_ptr + 1) {\n          if (*local_char_ptr == ';') {\n            return 1;\n          }\n        }\n      }\n      goto switchD_00111de5_caseD_44;\n    case 'a':\n      local_char_ptr = char_pointer;\n      long_var3 = FUNC_0010ee3f(param1,param2,0,&local_char_ptr,0);\n      if (long_var3 == 0) {\n        return 0;\n      }\n      undefined_var2 = 4;\n      break;\n    case 'c':\n      if (local_char_ptr[2] == '=') {\n        char_pointer = local_char_ptr + 4;\n        char_var2 = local_char_ptr[3];\n        local_char_ptr = char_pointer;\n        if (char_var2 == 'i') {\n          long_var3 = strtol(char_pointer,(char **)0x0,10);\n          if (char_pointer2 == (char *)0x0) {\n            return 0;\n          }\n          long_var1 = FUN_00112996(param1,char_pointer2,4);\n          if (long_var1 != 0) {\n            *(long *)(long_var1 + 0x20) = (long)(int)long_var3;\n            return 1;\n          }\n          return 0;\n        }\n        if (char_var2 == 'r') {\n          double_var = strtod(char_pointer,(char **)0x0);\n          if (char_pointer2 == (char *)0x0) {\n            return 0;\n          }\n          long_var3 = FUN_00112996(param1,char_pointer2,5);\n          if (long_var3 != 0) {\n            *(double *)(long_var3 + 0x20) = double_var;\n            return 1;\n          }\n          return 0;\n        }\n        if (char_var2 == 'e') {\n          long_var3 = FUNC_0010ee3f(param1,param2,0,&local_char_ptr,0);\n          if (long_var3 == 0) {\n            return 0;\n          }\n          char_pointer = local_char_ptr;\n          if (*local_char_ptr == ',') {\n            long_var1 = strtol(local_char_ptr,(char **)0x0,10);\n            if (char_pointer2 == (char *)0x0) {\n              return 0;\n            }\n            long_var2 = FUN_00112996(param1,char_pointer2,6);\n            if (long_var2 != 0) {\n              ptr_var7 = (long *)xmalloc(0x10);\n              *ptr_var7 = long_var3;\n              ptr_var7[1] = (long)(int)long_var1;\n              *(long **)(long_var2 + 0x20) = ptr_var7;\n              return 1;\n            }\n            return 0;\n          }\n        }\n      }\n      goto switchD_00111de5_caseD_44;\n    case 'p':\n      if (local_char_ptr[2] == 'F') {\n        local_char_ptr = local_char_ptr + 3;\n        long_var3 = FUNC_0010ee3f(param1,param2,0,&local_char_ptr,0);\n        if (long_var3 == 0) {\n          return 0;\n        }\n        undefined_var2 = FUN_00113ce0(long_var3,0,0);\n        long_var3 = FUN_00113d3a(undefined_var2);\n      }\n      else {\n        local_char_ptr = char_pointer;\n        long_var3 = FUNC_0010ee3f(param1,param2,0,&local_char_ptr,0);\n      }\n      if (long_var3 == 0) {\n        return 0;\n      }\n      undefined_var2 = 1;\n      break;\n    case 'r':\n      local_char_ptr = char_pointer;\n      long_var3 = FUNC_0010ee3f(param1,param2,0,&local_char_ptr,0);\n      if (long_var3 == 0) {\n        return 0;\n      }\n      undefined_var2 = 5;\nLAB_001123e8:\n      char_var2 = FUN_0010c139(param1,param2,char_pointer2,long_var3,undefined_var2,param5);\n      goto joined_r0x001123f8;\n    case 't':\n      local_char_ptr = char_pointer;\n      long_var3 = FUNC_0010ee3f(param1,param2,char_pointer2,&local_char_ptr,local_ptr_array);\n      if (long_var3 == 0) {\n        return 0;\n      }\n      if (char_pointer2 == (char *)0x0) {\n        return 1;\n      }\n      ptr_var7 = (long *)FUN_0010c218(param1,char_pointer2,long_var3);\n      if (ptr_var7 == (long *)0x0) {\n        return 0;\n      }\n      if (local_ptr_array[0] == (long **)0x0) {\n        return 1;\n      }\n      *local_ptr_array[0] = ptr_var7;\n      return 1;\n    case 'v':\n      local_char_ptr = char_pointer;\n      long_var3 = FUNC_0010ee3f(param1,param2,0,&local_char_ptr,0);\n      if (long_var3 == 0) {\n        return 0;\n      }\n      undefined_var2 = 3;\n    }\n    char_var2 = FUN_0010bd62(param1,char_pointer2,long_var3,undefined_var2,param5);\n    goto joined_r0x001123f8;\n  }\n  if (param3 == 0xe0) {\n    if ((*(char *)((long)param2 + 0x44) != '\\0') && (param4 == 1)) {\n      return 1;\n    }\n    char_var2 = FUN_0010c1c6(param1,param2);\n    if (char_var2 == '\\0') {\n      return 0;\n    }\n    char_var2 = FUN_0010bf20(param1,param2[7] + param2[6] + param5);\n    if (char_var2 == '\\0') {\n      return 0;\n    }\n    param2 = param2 + 0xe;\n    *(int *)param2 = *(int *)param2 + -1;\n    char_pointer = \"Too many N_RBRACs\\n\";\n    if (-1 < *(int *)param2) {\n      return 1;\n    }\n  }\n  else {\n    if (0xe0 < param3) {\n      if (param3 == 0xe2) {\n        char_pointer = \"debug_start_common_block: not implemented\";\n      }\n      else {\n        char_pointer = \"debug_end_common_block: not implemented\";\n        if (param3 != 0xe4) goto LAB_00111c29;\n      }\nLAB_00111b96:\n      undefined_var2 = dcgettext(0,char_pointer,5);\n      fprintf(_stderr,\"%s\\n\",undefined_var2);\n      return 0;\n    }\n    if (param3 != 0xc0) {\n      if (param3 == 0xc2) {\n        int_var = *(int *)(param2 + 0x10);\n        *(uint *)(param2 + 0x10) = int_var + 1U;\n        long_var3 = xrealloc(param2[0x11],(ulong)(int_var + 1U) << 3);\n        ptr_var6 = (undefined8 *)param2[0xb];\n        param2[0x11] = long_var3;\n        while( true ) {\n          if (ptr_var6 == (undefined8 *)0x0) {\n            undefined_var2 = dcgettext(0,\"Undefined N_EXCL\",5);\n            FUN_00108fe8(param6,undefined_var2);\n            *(undefined8 *)(param2[0x11] + (ulong)(*(int *)(param2 + 0x10) - 1) * 8) = 0;\n            return 1;\n          }\n          if ((param5 == ptr_var6[3]) && (int_var = strcmp((char *)ptr_var6[2],param6), int_var == 0))\n          break;\n          ptr_var6 = (undefined8 *)*ptr_var6;\n        }\n        *(undefined8 *)(long_var3 + (ulong)(*(int *)(param2 + 0x10) - 1) * 8) = ptr_var6[5];\n        return 1;\n      }\n      if (param3 == 0xa2) {\n        long_var3 = param2[10];\n        if (long_var3 != 0) {\n          long_var1 = *(long *)(long_var3 + 8);\n          uint_var = *(uint *)(long_var3 + 0x20);\n          param2[10] = long_var1;\n          if ((uint_var < *(uint *)(param2 + 0x10)) &&\n             (*(undefined8 *)(long_var3 + 0x28) = *(undefined8 *)(param2[0x11] + (ulong)uint_var * 8),\n             long_var1 != 0)) {\n            param6 = *(char **)(long_var1 + 0x10);\n            goto LAB_00111ab7;\n          }\n        }\n        param6 = (char *)param2[9];\n        goto LAB_00111ab7;\n      }\n      goto LAB_00111c29;\n    }\n    if ((*(char *)((long)param2 + 0x44) != '\\0') && (param4 == 1)) {\n      return 1;\n    }\n    if (*(char *)(param2 + 0xc) != '\\0') {\n      char_var2 = FUN_0010be88(param1,param2[7] + param2[6] + param5);\n      if (char_var2 == '\\0') {\n        return 0;\n      }\n      char_var2 = FUN_0010c1c6(param1,param2);\n      if (char_var2 != '\\0') {\n        *(int *)(param2 + 0xe) = *(int *)(param2 + 0xe) + 1;\n        return 1;\n      }\n      return 0;\n    }\n    char_pointer = \"N_LBRAC not within function\\n\";\n  }\n  char_pointer = (char *)dcgettext(0,char_pointer,5);\n  fprintf(_stderr,char_pointer);\n  return 0;\ncode_r0x00111cc7:\n  local_char_ptr = local_char_ptr + 2;\n  local_char_ptr = strchr(local_char_ptr,0x3a);\n  if (local_char_ptr == (char *)0x0) {\n    char_pointer = (char *)0x0;\nswitchD_00111de5_caseD_44:\n    local_char_ptr = char_pointer;\n    FUN_00108fb9(param6);\n    return 0;\n  }\n  goto LAB_00111cbc;\nLAB_001122b2:\n  if (pointer_to_pointer_variable18 == (long **)0x0) {\nLAB_001122f0:\n    if (char_var2 != 't') {\n      return 1;\n    }\n    ptr_var7 = (long *)FUN_0010c218(param1,char_pointer2,ptr_var7);\n    if (ptr_var7 != (long *)0x0) {\n      if (local_ptr_array[0] == (long **)0x0) {\n        return 1;\n      }\n      *local_ptr_array[0] = ptr_var7;\n      return 1;\n    }\n    return 0;\n  }\n  if ((*(char *)pointer_to_pointer_variable18[1] == *char_pointer2) &&\n     (int_var = strcmp((char *)pointer_to_pointer_variable18[1],char_pointer2), int_var == 0)) {\n    pointer_to_pointer_variable18[3] = ptr_var7;\n    *long_ptr_ptr = *pointer_to_pointer_variable18;\n    goto LAB_001122f0;\n  }\n  long_ptr_ptr = pointer_to_pointer_variable18;\n  pointer_to_pointer_variable18 = (long **)*pointer_to_pointer_variable18;\n  goto LAB_001122b2;\nLAB_00112045:\n  if (long_var1 < 1) {\nLAB_0011208f:\n    undefined_var2 = 1;\nLAB_001121c4:\n    char_var2 = FUN_0010c05d(param1,char_pointer2,long_var3,undefined_var2,param5);\njoined_r0x001123f8:\n    if (char_var2 != '\\0') {\n      return 1;\n    }\n    return 0;\n  }\n  char_pointer = *(char **)(*ptr_var7 + 8);\n  if ((char_var2 != '\\0') && (char_var2 == *char_pointer)) {\n    char_pointer = char_pointer + 1;\n  }\n  if ((*char_pointer == *char_pointer2) && (int_var = strcmp(char_pointer,char_pointer2), int_var == 0)) {\n    param5 = *(long *)(*ptr_var7 + 0x10) + *(long *)(*(long *)(*ptr_var7 + 0x20) + 0x30);\n    goto LAB_0011208f;\n  }\n  long_var1 = long_var1 + -1;\n  ptr_var7 = ptr_var7 + 1;\n  goto LAB_00112045;\n}\n\n",
            "current_name": "extract_information_0011173a",
            "entrypoint": "0x0011173a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0011173a": "extract_information_0011173a",
                "__ptr": "ptr",
                "bVar2": "byte_var2",
                "cVar1": "char_var1",
                "cVar3": "char_var2",
                "dVar19": "double_var",
                "iVar5": "int_var",
                "lVar10": "long_var1",
                "lVar11": "long_var2",
                "lVar12": "long_var3",
                "lVar13": "long_var4",
                "local_40": "local_ptr_array",
                "local_48": "local_char_ptr",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "pcVar16": "char_pointer2",
                "pcVar8": "char_pointer",
                "plVar18": "ptr_var18",
                "plVar7": "ptr_var7",
                "pplVar13": "long_ptr_ptr",
                "pplVar18": "pointer_to_pointer_variable18",
                "puVar6": "ptr_var6",
                "uVar14": "ulong_var1",
                "uVar15": "ulong_var2",
                "uVar17": "uint_var",
                "uVar4": "undefined_var",
                "uVar9": "undefined_var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00112502": {
            "additional_data": {
                "FUN_0010edb4": {
                    "check_command_validity": 1,
                    "check_compatibility": 1,
                    "check_condition": 3,
                    "check_validity": 1,
                    "check_value": 2,
                    "validate_data": 1,
                    "validate_input_data": 1
                },
                "FUN_00112502": {
                    "check_access": 1,
                    "check_and_execute_commands": 1,
                    "check_and_execute_operations": 1,
                    "check_and_execute_tasks": 1,
                    "check_and_increment_index": 1,
                    "check_and_process_data": 3,
                    "check_and_update_data": 1,
                    "check_and_validate_data": 2,
                    "check_condition_and_execute": 1,
                    "check_condition_and_update": 1,
                    "check_conditions": 1,
                    "check_conditions_and_return": 1,
                    "check_conditions_and_update": 1,
                    "check_for_valid_addresses": 1,
                    "check_if_param_in_list": 1,
                    "check_if_threshold_exceeded": 1,
                    "check_if_value_exists_within_range": 1,
                    "check_overflow": 1,
                    "check_parameter_validity": 1,
                    "check_parameter_value": 1,
                    "check_threshold": 1,
                    "check_threshold_and_verify": 1,
                    "process_data": 5
                },
                "cVar4": {
                    "check_result": 5,
                    "flag": 1,
                    "is_valid": 1,
                    "result": 22,
                    "status": 1,
                    "verification_result": 1
                },
                "param_1": {
                    "address_list": 1,
                    "arg1": 1,
                    "base_address": 3,
                    "command_data": 1,
                    "data": 7,
                    "data_pointer": 1,
                    "data_ptr": 4,
                    "data_struct_ptr": 1,
                    "data_structure": 2,
                    "index": 1,
                    "input": 1,
                    "input_data": 2,
                    "input_object": 1,
                    "input_struct": 1,
                    "list_ptr": 2,
                    "param_ptr": 1,
                    "task_list": 1
                },
                "param_2": {
                    "arg1": 1,
                    "arg2": 1,
                    "config_param": 1,
                    "data": 1,
                    "input": 1,
                    "input_param": 3,
                    "input_value": 2,
                    "param": 6,
                    "param1": 2,
                    "param2": 1,
                    "param_2": 1,
                    "param_data": 1,
                    "param_ptr": 4,
                    "param_value": 1,
                    "param_x": 1,
                    "secondary_data": 1,
                    "user_data": 1,
                    "value": 2
                },
                "param_3": {
                    "arg2": 1,
                    "desired_value": 1,
                    "input_value": 2,
                    "limit": 5,
                    "param2": 1,
                    "param3": 1,
                    "param_limit": 1,
                    "size": 2,
                    "target": 2,
                    "target_address": 1,
                    "target_value": 2,
                    "threshold": 10,
                    "value": 1,
                    "value_to_check": 1
                },
                "puVar2": {
                    "array": 5,
                    "array_pointer": 4,
                    "array_ptr": 3,
                    "command_list": 1,
                    "current_address": 1,
                    "current_task": 1,
                    "data_array": 3,
                    "data_pointer": 1,
                    "element_ptr_array": 1,
                    "entry_ptr": 1,
                    "ptr": 4,
                    "ptr_array": 3,
                    "ptr_to_array": 1,
                    "sub_array": 1,
                    "sub_func_ptr": 1
                },
                "uVar1": {
                    "array_index": 2,
                    "counter": 2,
                    "index": 26,
                    "loop_counter": 1
                },
                "uVar3": {
                    "current_data": 1,
                    "current_ptr": 1,
                    "next_address": 1,
                    "next_command": 1,
                    "next_element": 2,
                    "next_element_ptr": 1,
                    "next_entry": 1,
                    "next_item": 2,
                    "next_node": 1,
                    "next_ptr": 4,
                    "next_task": 1,
                    "next_value": 2,
                    "result": 2,
                    "return_value": 1,
                    "temp": 1,
                    "temp_value": 4,
                    "temp_var": 3,
                    "temp_variable": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_0010edb4"
            ],
            "calling": [
                "FUN_001135a5",
                "FUN_0011378f",
                "FUN_00113a4d"
            ],
            "code": "\nundefined check_and_process_data_00112502(long data,undefined8 param,ulong threshold)\n\n{\n  uint index;\n  undefined8 *array;\n  undefined8 next_ptr;\n  char result;\n  \n  do {\n    array = *(undefined8 **)(data + 0x40);\n    if (array == (undefined8 *)0x0) {\n      return 1;\n    }\n    while ((index = *(uint *)(data + 0x48), index < 10 && (array[(ulong)index + 2] != -1))) {\n      if (threshold <= (ulong)array[(ulong)index + 0xc]) {\n        return 1;\n      }\n      result = FUN_0010edb4(param,*(undefined8 *)(array[1] + 8));\n      if (result == '\\0') {\n        return 0;\n      }\n      *(int *)(data + 0x48) = *(int *)(data + 0x48) + 1;\n    }\n    next_ptr = *array;\n    *(undefined4 *)(data + 0x48) = 0;\n    *(undefined8 *)(data + 0x40) = next_ptr;\n  } while( true );\n}\n\n",
            "current_name": "check_and_process_data_00112502",
            "entrypoint": "0x00112502",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00112502": "check_and_process_data_00112502",
                "cVar4": "result",
                "param_1": "data",
                "param_2": "param",
                "param_3": "threshold",
                "puVar2": "array",
                "uVar1": "index",
                "uVar3": "next_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0011256b": {
            "additional_data": {
                "DAT_001275e0": {
                    "default_data": 1
                },
                "FUN_0011256b": {
                    "print_matching_formats": 31
                },
                "__c": {
                    "character": 7
                },
                "__format": {
                    "error_message": 2,
                    "error_string": 1,
                    "format_message": 1,
                    "format_msg": 1,
                    "format_str": 1,
                    "format_string": 15,
                    "format_text": 1,
                    "message": 1,
                    "message_format": 5
                },
                "__ptr": {
                    "pointer": 2
                },
                "__stream": {
                    "file_stream": 1,
                    "output_stream": 6,
                    "stream": 1
                },
                "_stderr": {
                    "_stderr": 1,
                    "error_stream": 1,
                    "standard_error": 2,
                    "stderr_file": 1,
                    "stderr_stream": 4
                },
                "_stdout": {
                    "_stdout": 1,
                    "output_stream": 1,
                    "standard_output": 2,
                    "stdout": 1,
                    "stdout_file": 1,
                    "stdout_stream": 4
                },
                "_stream": {
                    "error_stream": 1
                },
                "dcgettext": {
                    "get_translated_text": 1,
                    "translate_text": 1
                },
                "fflush": {
                    "flush_output": 1
                },
                "fprintf": {
                    "print_to_error": 1,
                    "print_to_output": 1
                },
                "fputc": {
                    "write_character": 1
                },
                "free": {
                    "release_memory": 1
                },
                "param_1": {
                    "format_list": 5,
                    "format_strings": 8,
                    "formats": 14,
                    "formats_array": 2,
                    "matching_formats": 1,
                    "strings": 1
                },
                "plVar2": {
                    "current_format": 19,
                    "current_format_string": 3,
                    "current_string": 3,
                    "format_iterator": 1,
                    "format_ptr": 2
                },
                "stderr": {
                    "standard_error": 1
                },
                "stdout": {
                    "standard_output": 1
                },
                "uVar1": {
                    "dat_value": 1,
                    "data_var": 1,
                    "default_format": 2,
                    "default_locale": 2,
                    "default_value": 2,
                    "format": 1,
                    "format_message": 1,
                    "language_string": 1,
                    "matching_format": 1,
                    "matching_formats": 2,
                    "message": 1,
                    "string_id": 1,
                    "translation_domain": 1
                }
            },
            "called": [
                "dcgettext",
                "fflush",
                "fputc",
                "free",
                "fprintf"
            ],
            "calling": [
                "FUN_00114690"
            ],
            "code": "\n\n\nvoid print_matching_formats_0011256b(long *formats)\n\n{\n  undefined8 matching_formats;\n  char *format_string;\n  long *current_format;\n  \n  fflush(stdout_stream);\n  matching_formats = DAT_001275e0;\n  format_string = (char *)dcgettext(0,\"%s: Matching formats:\",5);\n  fprintf(stderr_stream,format_string,matching_formats);\n  for (current_format = formats; *current_format != 0; current_format = current_format + 1) {\n    fprintf(stderr_stream,\" %s\");\n  }\n  free(formats);\n  fputc(10,stderr_stream);\n  return;\n}\n\n",
            "current_name": "print_matching_formats_0011256b",
            "entrypoint": "0x0011256b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0011256b": "print_matching_formats_0011256b",
                "__format": "format_string",
                "_stderr": "stderr_stream",
                "_stdout": "stdout_stream",
                "dcgettext": "translate_text",
                "fflush": "flush_output",
                "fprintf": "print_to_output",
                "fputc": "write_character",
                "free": "release_memory",
                "param_1": "formats",
                "plVar2": "current_format",
                "stderr": "standard_error",
                "stdout": "standard_output",
                "uVar1": "matching_formats"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001125fa": {
            "additional_data": {
                "DAT_00127a30": {
                    "formatted_filename": 1,
                    "formatted_string": 1,
                    "new_string": 1
                },
                "DAT_00127a38": {
                    "max_len": 1,
                    "max_output_size": 1,
                    "max_size": 1,
                    "max_string_length": 1
                },
                "FUN_001125fa": {
                    "build_filename": 1,
                    "construct_filename": 1,
                    "create_archive_filename": 1,
                    "create_improved_filename": 1,
                    "create_modified_filename": 2,
                    "create_modified_string": 1,
                    "format_archive_filename": 3,
                    "generate_formatted_string": 1,
                    "get_archive_filename": 1,
                    "get_combined_string": 1,
                    "get_concatenated_string": 2,
                    "get_formatted_filename": 4,
                    "get_formatted_string": 4,
                    "get_formatted_string_from_params": 1,
                    "get_modified_filename": 3,
                    "get_modified_string": 4
                },
                "__assert_fail": {
                    "assert_fail": 1,
                    "assert_failure": 3,
                    "assertion_failure": 2,
                    "handle_assertion_failure": 1
                },
                "__file": {
                    "file": 1
                },
                "__function": {
                    "function": 1
                },
                "__line": {
                    "line": 1
                },
                "__ptr": {
                    "memory_ptr": 1
                },
                "__s": {
                    "archive_filename": 1,
                    "combined_string": 1,
                    "file": 1,
                    "file_path": 1,
                    "filename": 5,
                    "filename_ptr": 1,
                    "input_string": 6,
                    "modified_filename": 2,
                    "original_filename": 3,
                    "original_string": 3,
                    "result": 3,
                    "result_string": 3,
                    "string_param": 1
                },
                "free": {
                    "deallocate": 1,
                    "deallocate_memory": 1,
                    "release_memory": 2
                },
                "param_1": {
                    "archive_files": 1,
                    "archive_parameters": 1,
                    "args": 3,
                    "arguments": 12,
                    "filename_ptr_ptr": 1,
                    "input_parameters": 1,
                    "input_params": 3,
                    "input_strings": 1,
                    "parameters": 6,
                    "params": 1,
                    "strings": 1
                },
                "ppcVar2": {
                    "archive": 2,
                    "archive_file": 1,
                    "archive_file_name": 1,
                    "archive_filename": 5,
                    "archive_filename_ptr": 1,
                    "archive_path": 2,
                    "archive_ptr": 3,
                    "file_info": 1,
                    "file_paths": 1,
                    "filename_pointer": 1,
                    "filename_ptr": 2,
                    "pointer": 1,
                    "pointer_to_arg": 1,
                    "pointer_to_array": 1,
                    "ppc_var": 1,
                    "ptr_to_char": 2,
                    "ptr_to_char_ptr": 1,
                    "string_pointer": 3,
                    "string_ptr": 1
                },
                "sVar3": {
                    "archive_filename_len": 1,
                    "archive_filename_length": 3,
                    "archive_len": 2,
                    "archive_length": 1,
                    "archive_name_length": 2,
                    "archive_path_length": 1,
                    "char_len1": 1,
                    "filename_length": 3,
                    "first_string_length": 1,
                    "len1": 1,
                    "len_archive_file_name": 1,
                    "length1": 7,
                    "length_archive_filename": 1,
                    "length_of_archive_file": 1,
                    "length_of_string1": 1,
                    "length_string1": 1,
                    "path_length": 2,
                    "string_length1": 1
                },
                "sVar4": {
                    "arg_length": 1,
                    "base_filename_length": 1,
                    "char_len2": 1,
                    "file_name_length": 1,
                    "file_path_length": 1,
                    "filename_len": 3,
                    "filename_length": 2,
                    "input_string_length": 2,
                    "len2": 1,
                    "len_input_string": 1,
                    "length2": 7,
                    "length_of_input": 1,
                    "length_of_string2": 1,
                    "length_original_string": 1,
                    "length_string2": 1,
                    "original_filename_length": 1,
                    "original_length": 1,
                    "original_string_length": 1,
                    "param_length": 1,
                    "second_string_length": 1,
                    "string_length2": 1
                },
                "sprintf": {
                    "create_formatted_string": 1,
                    "format_string": 2
                },
                "strlen": {
                    "get_length": 1,
                    "get_string_length": 1
                },
                "uVar1": {
                    "combined_len": 1,
                    "combined_string_length": 1,
                    "formatted_filename_length": 2,
                    "formatted_string_length": 3,
                    "modified_filename_len": 1,
                    "new_filename_len": 1,
                    "new_length": 3,
                    "new_string_length": 2,
                    "output_string_size": 1,
                    "required_length": 1,
                    "result_length": 1,
                    "total_len": 1,
                    "total_length": 12
                },
                "xmalloc": {
                    "allocate_memory": 4
                }
            },
            "called": [
                "strlen",
                "sprintf",
                "__assert_fail",
                "free",
                "xmalloc"
            ],
            "calling": [
                "FUN_00114e50",
                "FUN_00104ea2",
                "FUN_00105828",
                "FUN_001126c0",
                "FUN_00107976",
                "FUN_001152b6"
            ],
            "code": "\nchar * get_formatted_string_from_params_001125fa(char **arguments)\n\n{\n  ulong total_length;\n  char **archive_filename;\n  size_t length1;\n  size_t length2;\n  char *input_string;\n  \n  if (arguments == (char **)0x0) {\n                    \n    __assert_fail(\"abfd != NULL\",\"../../binutils/bucomm.c\",0x298,\"bfd_get_archive_filename\");\n  }\n  archive_filename = (char **)arguments[0x1d];\n  input_string = *arguments;\n  if ((archive_filename != (char **)0x0) && ((*(byte *)((long)archive_filename + 0x49) & 0x10) == 0)) {\n    length1 = strlen(*archive_filename);\n    length2 = strlen(input_string);\n    total_length = length1 + 3 + length2;\n    if (DAT_00127a38 < total_length) {\n      if (DAT_00127a38 != 0) {\n        free(DAT_00127a30);\n      }\n      DAT_00127a38 = (total_length >> 1) + total_length;\n      DAT_00127a30 = (char *)xmalloc();\n    }\n    sprintf(DAT_00127a30,\"%s(%s)\",*(undefined8 *)arguments[0x1d],*arguments);\n    input_string = DAT_00127a30;\n  }\n  return input_string;\n}\n\n",
            "current_name": "get_formatted_string_from_params_001125fa",
            "entrypoint": "0x001125fa",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001125fa": "get_formatted_string_from_params_001125fa",
                "__assert_fail": "assert_failure",
                "__s": "input_string",
                "free": "release_memory",
                "param_1": "arguments",
                "ppcVar2": "archive_filename",
                "sVar3": "length1",
                "sVar4": "length2",
                "sprintf": "format_string",
                "strlen": "get_length",
                "uVar1": "total_length",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001126c0": {
            "additional_data": {
                "DAT_0011b4a0": {
                    "data2": 1
                },
                "DAT_001275e0": {
                    "data": 1
                },
                "FUN_001126c0": {
                    "print_bfd_error_message": 6,
                    "print_error": 8,
                    "print_error_message": 17
                },
                "_stderr": {
                    "standard_error": 1
                },
                "_stdout": {
                    "standard_output": 1
                },
                "iVar1": {
                    "bfd_error": 5,
                    "error": 7,
                    "error_check_result": 2,
                    "error_code": 1,
                    "error_flag": 1,
                    "error_msg": 1,
                    "error_number": 1,
                    "error_status": 1,
                    "error_value": 2
                },
                "in_AL": {
                    "bool_value": 1,
                    "boolean_flag": 1,
                    "condition": 1,
                    "error_flag": 1,
                    "flag": 16,
                    "input_char": 1,
                    "input_flag": 2,
                    "is_error": 1,
                    "is_error_set": 1,
                    "is_message_printed": 1,
                    "print_flag": 1,
                    "some_flag": 1
                },
                "local_100": {
                    "array_size1": 1,
                    "buf_size": 1,
                    "buf_size1": 2,
                    "buffer_size": 7,
                    "buffer_size1": 11,
                    "length1": 1,
                    "local1": 1,
                    "local_var100": 1,
                    "param_size1": 1,
                    "size1": 1,
                    "temp_buffer1_size": 1
                },
                "local_48": {
                    "error8_copy": 3,
                    "error8_value": 1,
                    "error_code16": 1,
                    "error_code8": 2,
                    "error_code8_copy": 3,
                    "error_flag8_local": 1,
                    "local_error8": 1,
                    "local_param8": 2,
                    "param12": 1,
                    "param8": 1,
                    "param8_copy": 5,
                    "param_8": 1,
                    "temp_error_param2": 1,
                    "var10": 1
                },
                "local_58": {
                    "error7_copy": 3,
                    "error7_value": 1,
                    "error_code15": 1,
                    "error_code7": 2,
                    "error_code7_copy": 3,
                    "error_flag7_local": 1,
                    "local_error7": 1,
                    "local_param7": 2,
                    "param11": 1,
                    "param7": 1,
                    "param7_copy": 5,
                    "param_7": 1,
                    "temp_error_param": 1,
                    "var9": 1
                },
                "local_68": {
                    "error6_copy": 3,
                    "error6_value": 1,
                    "error_code14": 1,
                    "error_code6": 2,
                    "error_code6_copy": 3,
                    "error_flag6_local": 1,
                    "local_error6": 1,
                    "local_param6": 2,
                    "param10": 1,
                    "param6": 1,
                    "param6_copy": 5,
                    "param_6": 1,
                    "temp_error_sub_func": 1,
                    "var8": 1
                },
                "local_78": {
                    "error5": 1,
                    "error5_copy": 3,
                    "error5_value": 1,
                    "error_code13": 1,
                    "error_code5": 2,
                    "error_code5_copy": 3,
                    "error_flag5_local": 1,
                    "local_error5": 1,
                    "local_param5": 2,
                    "param5_copy": 5,
                    "param9": 1,
                    "param_5": 1,
                    "temp_error_func": 1,
                    "var7": 1
                },
                "local_88": {
                    "error4": 1,
                    "error4_copy": 3,
                    "error4_value": 1,
                    "error_code12": 1,
                    "error_code4": 2,
                    "error_code4_copy": 3,
                    "error_flag4_local": 1,
                    "error_severity_copy": 1,
                    "local_error4": 1,
                    "local_param4": 2,
                    "param4_copy": 4,
                    "param8": 1,
                    "param_4": 1,
                    "temp_error_cause": 1,
                    "var6": 1
                },
                "local_98": {
                    "error3": 1,
                    "error3_copy": 3,
                    "error3_value": 1,
                    "error_code11": 1,
                    "error_code3": 2,
                    "error_code3_copy": 3,
                    "error_detail_copy": 1,
                    "error_flag3_local": 1,
                    "local_error3": 1,
                    "local_param3": 2,
                    "param3_copy": 4,
                    "param7": 1,
                    "param_3": 1,
                    "temp_error_reason": 1,
                    "var5": 1
                },
                "local_a8": {
                    "error2": 1,
                    "error2_copy": 3,
                    "error2_value": 1,
                    "error_code10": 1,
                    "error_code2": 2,
                    "error_code2_copy": 3,
                    "error_flag2_local": 1,
                    "error_type_copy": 1,
                    "local_error2": 1,
                    "local_param2": 2,
                    "param2_copy": 4,
                    "param6": 1,
                    "param_2": 1,
                    "temp_error_code": 1,
                    "var4": 1
                },
                "local_b8": {
                    "error1": 1,
                    "error1_copy": 3,
                    "error1_value": 1,
                    "error_category_copy": 1,
                    "error_code": 1,
                    "error_code1": 2,
                    "error_code1_copy": 3,
                    "error_code9": 1,
                    "error_code_copy": 1,
                    "error_flag1_local": 1,
                    "local_error1": 1,
                    "local_param1": 2,
                    "param1_copy": 3,
                    "param5": 1,
                    "temp_error_type": 1,
                    "var3": 1
                },
                "local_c0": {
                    "error_message2": 1,
                    "error_message6_local": 1,
                    "file_pointer2": 1,
                    "local_param2": 1,
                    "param14": 1,
                    "param14_copy": 13,
                    "param2_copy": 4,
                    "param4": 4,
                    "param_14": 1,
                    "ptr2": 1,
                    "temp_param14": 1,
                    "var2": 1
                },
                "local_c8": {
                    "error_message1": 1,
                    "error_message5_local": 1,
                    "file_pointer1": 1,
                    "local_param1": 1,
                    "param13": 1,
                    "param13_copy": 13,
                    "param1_copy": 4,
                    "param3": 4,
                    "param_13": 1,
                    "ptr1": 1,
                    "temp_param13": 1,
                    "var1": 1
                },
                "local_e8": {
                    "additional_info": 1,
                    "buffer": 7,
                    "error_buffer": 1,
                    "error_message7_local": 1,
                    "error_message_buffer": 2,
                    "local_array": 4,
                    "local_array2": 1,
                    "local_buffer": 7,
                    "local_buffer2": 1,
                    "local_data_array": 1,
                    "local_error_buffer": 1,
                    "local_message_buffer": 1,
                    "temp_array": 1,
                    "temp_error_message_buffer": 1
                },
                "local_f0": {
                    "arg_buffer2": 1,
                    "buffer": 2,
                    "buffer_ptr": 1,
                    "local4": 1,
                    "local_array": 4,
                    "local_buf": 1,
                    "local_buffer": 8,
                    "local_buffer_pointer": 1,
                    "local_pointer2": 1,
                    "local_ptr2": 1,
                    "local_var_f0": 1,
                    "ptr2": 5,
                    "stack_value2": 1,
                    "string_ptr2": 1,
                    "temp_ptr2": 1
                },
                "local_f8": {
                    "arg_buffer1": 1,
                    "arg_list_ptr": 1,
                    "format_ptr": 1,
                    "formatting_arguments": 1,
                    "local3": 1,
                    "local_pointer": 1,
                    "local_pointer1": 1,
                    "local_ptr": 1,
                    "local_ptr1": 1,
                    "local_var_f8": 1,
                    "param_array": 1,
                    "param_ptr": 1,
                    "ptr": 2,
                    "ptr1": 6,
                    "stack_pointer": 1,
                    "stack_ptr": 4,
                    "stack_value1": 1,
                    "string_ptr1": 1,
                    "temp_ptr": 1,
                    "temp_ptr1": 2
                },
                "local_fc": {
                    "array_size": 1,
                    "array_size2": 1,
                    "buf_size2": 2,
                    "buffer_size2": 11,
                    "format_buffer_size": 1,
                    "format_size": 3,
                    "formatted_size": 1,
                    "length2": 1,
                    "local2": 1,
                    "local_var_fc": 1,
                    "offset": 1,
                    "overflow_size": 1,
                    "param_size2": 1,
                    "size2": 1,
                    "temp_buffer2_size": 1
                },
                "param_1": {
                    "error1": 7,
                    "error_category": 1,
                    "error_code": 4,
                    "error_code1": 13,
                    "error_flag": 2,
                    "error_flag1": 1,
                    "error_type": 2
                },
                "param_10": {
                    "error_code": 7,
                    "error_code2": 1,
                    "error_message2": 3,
                    "error_message_length": 1,
                    "error_message_size": 1,
                    "error_number": 1,
                    "error_string_length": 1,
                    "error_string_size": 1,
                    "length": 2,
                    "param10": 4,
                    "param_10": 1,
                    "param_count": 3,
                    "param_flag": 1,
                    "param_size": 2,
                    "size": 1
                },
                "param_11": {
                    "array": 2,
                    "array_ptr": 1,
                    "error_args": 1,
                    "error_code_array": 1,
                    "error_data": 1,
                    "error_message3": 3,
                    "error_message_array": 1,
                    "error_message_ptr": 1,
                    "error_string": 1,
                    "error_string_array": 1,
                    "param": 1,
                    "param11": 7,
                    "param_11": 1,
                    "param_array": 6,
                    "string_array": 2
                },
                "param_12": {
                    "additional_error_message": 1,
                    "error_format": 2,
                    "error_message": 1,
                    "error_message4": 2,
                    "error_message_format": 1,
                    "format": 1,
                    "format_string": 19,
                    "message": 1,
                    "param12": 2
                },
                "param_13": {
                    "error_message5": 1,
                    "param1": 9,
                    "param13": 19,
                    "param_13": 1
                },
                "param_14": {
                    "error_message6": 1,
                    "param14": 19,
                    "param2": 9,
                    "param_14": 1
                },
                "param_2": {
                    "error2": 7,
                    "error_code": 1,
                    "error_code2": 13,
                    "error_flag2": 1,
                    "error_type": 1,
                    "param2": 6,
                    "param_2": 1
                },
                "param_3": {
                    "error3": 7,
                    "error_code3": 13,
                    "error_detail": 1,
                    "error_flag3": 1,
                    "error_reason": 1,
                    "param3": 6,
                    "param_3": 1
                },
                "param_4": {
                    "error4": 7,
                    "error_cause": 1,
                    "error_code4": 13,
                    "error_flag4": 1,
                    "error_severity": 1,
                    "param4": 6,
                    "param_4": 1
                },
                "param_5": {
                    "error5": 7,
                    "error_code5": 13,
                    "error_flag5": 1,
                    "error_func": 1,
                    "param5": 6,
                    "param_5": 1
                },
                "param_6": {
                    "error6": 6,
                    "error_code6": 13,
                    "error_flag6": 1,
                    "error_sub_func": 1,
                    "param6": 7,
                    "param_6": 1
                },
                "param_7": {
                    "error7": 6,
                    "error_code7": 13,
                    "error_flag7": 1,
                    "error_param": 1,
                    "param7": 7,
                    "param_7": 1
                },
                "param_8": {
                    "error8": 6,
                    "error_code8": 13,
                    "error_flag8": 1,
                    "error_param2": 1,
                    "param8": 7,
                    "param_8": 1
                },
                "param_9": {
                    "error_description": 2,
                    "error_message": 19,
                    "error_message1": 5,
                    "error_string": 4
                },
                "uVar2": {
                    "cause": 1,
                    "err_msg": 2,
                    "error_message": 8,
                    "error_message2": 1,
                    "error_message_from_bfd": 1,
                    "error_message_ptr": 3,
                    "error_message_result": 1,
                    "error_msg": 4,
                    "error_string": 1
                }
            },
            "called": [
                "dcgettext",
                "fwrite",
                "fflush",
                "bfd_errmsg",
                "FUN_001125fa",
                "vfprintf",
                "fprintf",
                "bfd_get_error",
                "fputs"
            ],
            "calling": [
                "FUN_00115dc0",
                "FUN_00108466",
                "FUN_00104ea2",
                "FUN_001086af",
                "FUN_0010808f",
                "FUN_00107880",
                "FUN_0010554f",
                "FUN_0010551d",
                "FUN_00104d25",
                "FUN_00114e50",
                "FUN_00116b90",
                "FUN_00114690",
                "FUN_00116110"
            ],
            "code": "\n\n\nvoid print_bfd_error_message_001126c0(undefined4 error_code1,undefined4 error_code2,undefined4 error_code3,undefined4 error_code4,\n                 undefined4 error_code5,undefined4 error_code6,undefined4 error_code7,undefined4 error_code8,\n                 long error_message,long error_code,long *param11,char *format_string,undefined8 param13,\n                 undefined8 param14)\n\n{\n  char flag;\n  int error;\n  undefined8 error_message;\n  undefined4 buffer_size1;\n  undefined4 buffer_size2;\n  undefined *ptr1;\n  undefined *local_buffer;\n  undefined local_buffer [32];\n  undefined8 param13_copy;\n  undefined8 param14_copy;\n  undefined4 param1_copy;\n  undefined4 param2_copy;\n  undefined4 param3_copy;\n  undefined4 param4_copy;\n  undefined4 param5_copy;\n  undefined4 param6_copy;\n  undefined4 param7_copy;\n  undefined4 param8_copy;\n  \n  if (flag != '\\0') {\n    param1_copy = error_code1;\n    param2_copy = error_code2;\n    param3_copy = error_code3;\n    param4_copy = error_code4;\n    param5_copy = error_code5;\n    param6_copy = error_code6;\n    param7_copy = error_code7;\n    param8_copy = error_code8;\n  }\n  param13_copy = param13;\n  param14_copy = param14;\n  error = bfd_get_error();\n  if (error == 0) {\n    error_message = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    error_message = bfd_errmsg();\n  }\n  fflush(standard_output);\n  fputs(DAT_001275e0,standard_error);\n  if (error_code != 0) {\n    if (error_message == 0) {\n      error_message = FUN_001125fa(error_code);\n    }\n    if ((param11 != (long *)0x0) && (*param11 != 0)) {\n      fprintf(standard_error,\": %s[%s]\",error_message);\n      goto LAB_001127c1;\n    }\n  }\n  fprintf(standard_error,\": %s\",error_message);\nLAB_001127c1:\n  if (format_string != (char *)0x0) {\n    ptr1 = &stack0x00000008;\n    local_buffer = local_buffer;\n    buffer_size1 = 0x20;\n    buffer_size2 = 0x30;\n    fwrite(&DAT_0011b4a0,1,2,standard_error);\n    vfprintf(standard_error,format_string,&buffer_size1);\n  }\n  fprintf(standard_error,\": %s\\n\",error_message);\n  return;\n}\n\n",
            "current_name": "print_bfd_error_message_001126c0",
            "entrypoint": "0x001126c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001126c0": "print_bfd_error_message_001126c0",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "iVar1": "error",
                "in_AL": "flag",
                "local_100": "buffer_size1",
                "local_48": "param8_copy",
                "local_58": "param7_copy",
                "local_68": "param6_copy",
                "local_78": "param5_copy",
                "local_88": "param4_copy",
                "local_98": "param3_copy",
                "local_a8": "param2_copy",
                "local_b8": "param1_copy",
                "local_c0": "param14_copy",
                "local_c8": "param13_copy",
                "local_e8": "local_buffer",
                "local_f0": "local_buffer",
                "local_f8": "ptr1",
                "local_fc": "buffer_size2",
                "param_1": "error_code1",
                "param_10": "error_code",
                "param_11": "param11",
                "param_12": "format_string",
                "param_13": "param13",
                "param_14": "param14",
                "param_2": "error_code2",
                "param_3": "error_code3",
                "param_4": "error_code4",
                "param_5": "error_code5",
                "param_6": "error_code6",
                "param_7": "error_code7",
                "param_8": "error_code8",
                "param_9": "error_message",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0011283f": {
            "additional_data": {
                "FUN_0011283f": {
                    "check_and_get_directory": 1,
                    "check_and_get_directory_path": 1,
                    "check_and_return_directory": 1,
                    "check_directory_access": 6,
                    "check_directory_permission": 4,
                    "check_directory_permissions": 4,
                    "find_accessible_directory": 1,
                    "find_directory": 7,
                    "get_readable_filename": 1,
                    "get_valid_directory": 1,
                    "validate_directory": 2,
                    "validate_directory_access": 1,
                    "validate_directory_path": 1
                },
                "access": {
                    "check_directory_access": 1
                },
                "iVar1": {
                    "access_result": 23,
                    "access_status": 1
                },
                "param_1": {
                    "directory_path": 16,
                    "file_path": 7,
                    "filepath": 1,
                    "input_path": 1,
                    "path": 6
                },
                "param_2": {
                    "current_directory": 1,
                    "default_directory": 6,
                    "default_directory_path": 1,
                    "default_filepath": 1,
                    "default_path": 7,
                    "directory": 5,
                    "directory_path": 4,
                    "existing_directory_path": 1,
                    "found_directory": 1,
                    "original_directory_path": 1,
                    "valid_directory": 1,
                    "validated_directory_path": 1,
                    "validated_path": 1
                },
                "sStack_a8": {
                    "directory_info": 1,
                    "file_info": 6,
                    "file_stat": 7,
                    "file_stat_result": 2,
                    "file_stats": 11,
                    "file_status": 1,
                    "stat_info": 2
                },
                "stat": {
                    "get_directory_info": 1
                }
            },
            "called": [
                "access",
                "stat"
            ],
            "calling": [
                "FUN_001199d0"
            ],
            "code": "\nchar * find_accessible_directory_0011283f(char *directory_path,char *default_path)\n\n{\n  int access_result;\n  get_directory_info file_stats;\n  \n  if ((default_path == (char *)0x0) && (directory_path != (char *)0x0)) {\n    access_result = check_directory_access(directory_path,7);\n    if (access_result == 0) {\n      access_result = get_directory_info(directory_path,&file_stats);\n      if ((access_result == 0) && ((file_stats.st_mode & 0xf000) == 0x4000)) {\n        default_path = directory_path;\n      }\n    }\n  }\n  return default_path;\n}\n\n",
            "current_name": "find_accessible_directory_0011283f",
            "entrypoint": "0x0011283f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0011283f": "find_accessible_directory_0011283f",
                "access": "check_directory_access",
                "iVar1": "access_result",
                "param_1": "directory_path",
                "param_2": "default_path",
                "sStack_a8": "file_stats",
                "stat": "get_directory_info"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00112894": {
            "additional_data": {
                "FUN_00112894": {
                    "allocate_and_initialize_memory": 1,
                    "create_data_structure": 6,
                    "create_initialized_data_structure": 1,
                    "create_initialized_struct": 1,
                    "create_initialized_structure": 1,
                    "create_memory_block": 3,
                    "initialize_data_structure": 11,
                    "initialize_memory": 5,
                    "initialize_struct": 1,
                    "initialize_structure": 1
                },
                "bVar4": {
                    "byte_count": 1,
                    "byte_counter": 3,
                    "byte_flag": 1,
                    "byte_val": 2,
                    "byte_value": 14,
                    "counter": 1,
                    "dummy_byte": 1,
                    "increment_val": 1,
                    "initial_value": 1,
                    "iteration_flag": 1,
                    "offset": 3,
                    "temp_byte": 2
                },
                "lVar3": {
                    "count": 1,
                    "counter": 5,
                    "index": 1,
                    "iteration": 1,
                    "iteration_count": 2,
                    "loop_count": 1,
                    "loop_counter": 19,
                    "loop_index": 1
                },
                "param_1": {
                    "data": 4,
                    "data_value": 1,
                    "initial_data": 1,
                    "input": 1,
                    "input1": 3,
                    "input_1": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "input_value": 4,
                    "input_value1": 1,
                    "input_var1": 1,
                    "structure_data": 1,
                    "value1": 7,
                    "value_1": 2
                },
                "param_2": {
                    "byte_value": 3,
                    "flag": 8,
                    "input2": 3,
                    "input_2": 1,
                    "input_byte": 1,
                    "input_flag": 2,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "input_value2": 1,
                    "input_var2": 1,
                    "value2": 7,
                    "value_2": 2
                },
                "param_3": {
                    "arg1": 2,
                    "data_1": 2,
                    "data_pointer": 1,
                    "input3": 3,
                    "input_3": 1,
                    "input_data1": 1,
                    "input_param3": 1,
                    "input_param_3": 1,
                    "input_value3": 1,
                    "input_value_2": 1,
                    "input_var3": 1,
                    "param3": 1,
                    "param3_data": 1,
                    "param_3": 1,
                    "param_3_value": 1,
                    "value1": 3,
                    "value3": 7,
                    "value_3": 2
                },
                "param_4": {
                    "arg2": 2,
                    "data_2": 2,
                    "input4": 3,
                    "input_4": 1,
                    "input_data2": 1,
                    "input_param4": 1,
                    "input_param_4": 1,
                    "input_value4": 1,
                    "input_value_3": 1,
                    "input_var4": 1,
                    "param4": 1,
                    "param4_data": 1,
                    "param_4": 1,
                    "param_4_value": 1,
                    "pointer_value": 1,
                    "value2": 3,
                    "value4": 7,
                    "value_4": 2
                },
                "puVar1": {
                    "allocated_memory": 1,
                    "data_structure": 11,
                    "data_structure_pointer": 1,
                    "data_structure_ptr": 4,
                    "memory": 1,
                    "memory_block": 6,
                    "memory_block_ptr": 1,
                    "new_data_structure": 1,
                    "result_array": 1,
                    "struct_ptr": 2,
                    "structure_ptr": 2
                },
                "puVar2": {
                    "allocated_memory": 1,
                    "current_address": 2,
                    "current_block": 1,
                    "current_element": 1,
                    "current_pointer": 3,
                    "current_ptr": 9,
                    "data_pointer": 1,
                    "ptr": 1,
                    "temp_array": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 10
                },
                "xmalloc": {
                    "allocate_memory": 4
                }
            },
            "called": [
                "xmalloc"
            ],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\nundefined8 *\ninitialize_data_structure_00112894(undefined8 value1,undefined flag,undefined8 value3,undefined8 value4)\n\n{\n  undefined8 *data_structure;\n  undefined8 *temp_ptr;\n  long loop_counter;\n  byte byte_value;\n  \n  byte_value = 0;\n  data_structure = (undefined8 *)xmalloc(0x1b0);\n  temp_ptr = data_structure;\n  for (loop_counter = 0x6c; loop_counter != 0; loop_counter = loop_counter + -1) {\n    *(undefined4 *)temp_ptr = 0;\n    temp_ptr = (undefined8 *)((long)temp_ptr + (ulong)byte_value * -8 + 4);\n  }\n  *data_structure = value1;\n  *(undefined *)(data_structure + 1) = flag;\n  data_structure[2] = value3;\n  data_structure[3] = value4;\n  *(undefined4 *)(data_structure + 0x10) = 1;\n  temp_ptr = (undefined8 *)xmalloc(8);\n  data_structure[0xd] = 0xffffffffffffffff;\n  data_structure[0x11] = temp_ptr;\n  *temp_ptr = 0;\n  return data_structure;\n}\n\n",
            "current_name": "initialize_data_structure_00112894",
            "entrypoint": "0x00112894",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00112894": "initialize_data_structure_00112894",
                "bVar4": "byte_value",
                "lVar3": "loop_counter",
                "param_1": "value1",
                "param_2": "flag",
                "param_3": "value3",
                "param_4": "value4",
                "puVar1": "data_structure",
                "puVar2": "temp_ptr",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00112904": {
            "additional_data": {
                "FUN_00112904": {
                    "allocate_memory": 1,
                    "initialize_2d_array": 1,
                    "initialize_and_allocate_memory": 1,
                    "initialize_array": 1,
                    "initialize_data": 9,
                    "initialize_data_struct": 2,
                    "initialize_data_structure": 6,
                    "initialize_memory": 6,
                    "initialize_memory_block": 3,
                    "initialize_variables": 1
                },
                "param_1": {
                    "data": 1,
                    "data1": 4,
                    "data_address": 1,
                    "data_element1": 1,
                    "data_value1": 1,
                    "first_param": 1,
                    "first_parameter": 1,
                    "input1": 2,
                    "input_1": 2,
                    "input_param1": 2,
                    "input_parameter1": 2,
                    "size": 2,
                    "value1": 10,
                    "value_1": 1
                },
                "param_2": {
                    "count": 1,
                    "data2": 4,
                    "data_element2": 1,
                    "data_value": 1,
                    "data_value2": 1,
                    "input2": 2,
                    "input_2": 2,
                    "input_param2": 2,
                    "input_parameter2": 2,
                    "second_param": 1,
                    "second_parameter": 1,
                    "value": 2,
                    "value2": 10,
                    "value_2": 1
                },
                "puVar1": {
                    "allocated_data": 1,
                    "allocated_memory": 7,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "data_pointer": 3,
                    "data_ptr": 2,
                    "data_structure": 2,
                    "dynamic_array": 1,
                    "dynamic_memory_ptr": 1,
                    "memory_block": 8,
                    "memory_ptr": 2,
                    "new_data": 1,
                    "ptr_to_data_struct": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "xmalloc"
            ],
            "calling": [
                "FUN_00113b98",
                "FUN_0010b0fa",
                "FUN_0010c892",
                "FUN_00113b71",
                "FUN_0010ee3f",
                "FUN_00113b4a",
                "FUN_00113cb9",
                "FUN_00113df2",
                "FUN_0010c95e",
                "FUN_00113ce0",
                "FUN_00113da9",
                "FUN_00113dfe",
                "FUN_00113d6e",
                "FUN_00113e23",
                "FUN_00113e17",
                "FUN_0010c2d2",
                "FUN_00113d3a",
                "FUN_0010c218",
                "FUN_00113bfa",
                "FUN_0010c6be",
                "FUN_00113c43"
            ],
            "code": "\nvoid initialize_data_structure_00112904(undefined4 value1,undefined4 value2)\n\n{\n  undefined4 *memory_block;\n  \n  memory_block = (undefined4 *)xmalloc(0x18);\n  *memory_block = value1;\n  memory_block[1] = value2;\n  *(undefined (*) [16])(memory_block + 2) = ZEXT816(0);\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_00112904",
            "entrypoint": "0x00112904",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00112904": "initialize_data_structure_00112904",
                "param_1": "value1",
                "param_2": "value2",
                "puVar1": "memory_block",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00112925": {
            "additional_data": {
                "FUN_00112925": {
                    "initialize_array": 8,
                    "initialize_buffer": 1,
                    "initialize_data": 1,
                    "initialize_data_structure": 12,
                    "initialize_memory": 8,
                    "initialize_object": 1
                },
                "bVar5": {
                    "byte_flag": 1,
                    "byte_val": 1,
                    "byte_value": 5,
                    "byte_var": 4,
                    "byte_variable": 1,
                    "counter": 2,
                    "flag": 4,
                    "index": 3,
                    "is_first_element": 1,
                    "loop_counter": 1,
                    "loop_flag": 1,
                    "loop_index": 1,
                    "offset": 2,
                    "temp_byte": 2,
                    "zero_byte": 1,
                    "zero_flag": 1
                },
                "lVar3": {
                    "count": 4,
                    "counter": 5,
                    "iteration_count": 1,
                    "loop_count": 1,
                    "loop_counter": 16,
                    "loop_index": 2,
                    "loop_var": 1,
                    "loop_variable": 1
                },
                "param_1": {
                    "array": 3,
                    "array_param": 1,
                    "array_pointer": 7,
                    "array_ptr": 2,
                    "buffer": 1,
                    "data_array": 1,
                    "data_struct_ptr": 1,
                    "data_structure": 6,
                    "data_structure_pointer": 1,
                    "data_structure_ptr": 2,
                    "mem_pointer": 1,
                    "memory": 1,
                    "memory_array": 1,
                    "object_array": 1,
                    "parameter_array": 1,
                    "pointers_array": 1
                },
                "param_2": {
                    "argument2": 1,
                    "data": 1,
                    "param": 1,
                    "param2": 4,
                    "param2_value": 1,
                    "param_value": 3,
                    "param_value1": 1,
                    "param_value2": 1,
                    "value": 14,
                    "value1": 2,
                    "value2": 1,
                    "value_param": 1
                },
                "param_3": {
                    "argument3": 1,
                    "data1": 1,
                    "flag1": 1,
                    "param3": 16,
                    "param3_value": 1,
                    "param_3": 1,
                    "param_value2": 1,
                    "param_value3": 1,
                    "param_value_2": 1,
                    "parameter3": 1,
                    "value1": 3,
                    "value2": 2,
                    "value3": 1
                },
                "param_4": {
                    "argument4": 1,
                    "data2": 1,
                    "flag2": 1,
                    "param4": 16,
                    "param4_value": 1,
                    "param_4": 1,
                    "param_value3": 1,
                    "param_value4": 1,
                    "param_value_3": 1,
                    "parameter4": 1,
                    "value2": 3,
                    "value3": 2,
                    "value4": 1
                },
                "pauVar2": {
                    "allocated_memory": 1,
                    "array": 2,
                    "array_copy": 1,
                    "array_pointer": 1,
                    "current_data_array": 1,
                    "dynamic_array": 1,
                    "existing_array": 6,
                    "existing_array_pointer": 2,
                    "existing_array_ptr": 1,
                    "existing_buffer": 1,
                    "existing_data": 1,
                    "existing_data_ptr": 2,
                    "existing_data_structure": 3,
                    "existing_memory": 2,
                    "p_mem_pointer": 1,
                    "pau_memory": 1,
                    "pointer_to_data_structure": 1,
                    "temp_array": 3
                },
                "puVar1": {
                    "allocated_memory": 7,
                    "array": 2,
                    "array_pointer": 2,
                    "array_ptr": 1,
                    "buffer_ptr": 1,
                    "data_array": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "dynamic_array": 1,
                    "memory": 1,
                    "memory_block": 1,
                    "memory_ptr": 3,
                    "new_array": 2,
                    "new_data": 1,
                    "new_data_pointer": 1,
                    "new_data_structure_ptr": 1,
                    "object_ptr": 1,
                    "ptr": 1,
                    "result_pointer": 1
                },
                "puVar4": {
                    "array_element": 1,
                    "array_ptr": 2,
                    "current_block": 1,
                    "current_data_ptr": 1,
                    "current_element": 5,
                    "current_memory_pointer": 1,
                    "current_pointer": 4,
                    "current_position": 1,
                    "current_ptr": 4,
                    "iterator": 1,
                    "new_array_ptr": 1,
                    "ptr": 1,
                    "ptr2": 1,
                    "temp_data_ptr": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 2
                },
                "xmalloc": {
                    "allocate_memory": 3
                }
            },
            "called": [
                "xmalloc"
            ],
            "calling": [
                "FUN_0010c05d",
                "FUN_0010bc80",
                "FUN_0010c218",
                "FUN_0010c6be",
                "FUN_00112996"
            ],
            "code": "\nundefined4 *\ninitialize_data_structure_00112925(undefined (**array_pointer) [16],undefined8 value,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 *allocated_memory;\n  undefined (*existing_array) [16];\n  long loop_counter;\n  undefined4 *current_element;\n  byte byte_value;\n  \n  byte_value = 0;\n  allocated_memory = (undefined4 *)xmalloc(0x28);\n  current_element = allocated_memory;\n  for (loop_counter = 10; loop_counter != 0; loop_counter = loop_counter + -1) {\n    *current_element = 0;\n    current_element = current_element + (ulong)byte_value * -2 + 1;\n  }\n  existing_array = *array_pointer;\n  *(undefined8 *)(allocated_memory + 2) = value;\n  allocated_memory[5] = param3;\n  allocated_memory[6] = param4;\n  if (existing_array == (undefined (*) [16])0x0) {\n    existing_array = (undefined (*) [16])xmalloc(0x10);\n    *existing_array = ZEXT816(0);\n    *array_pointer = existing_array;\n    *(undefined (**) [16])(*existing_array + 8) = existing_array;\n  }\n  **(undefined8 **)(*existing_array + 8) = allocated_memory;\n  *(undefined4 **)(*existing_array + 8) = allocated_memory;\n  return allocated_memory;\n}\n\n",
            "current_name": "initialize_data_structure_00112925",
            "entrypoint": "0x00112925",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00112925": "initialize_data_structure_00112925",
                "bVar5": "byte_value",
                "lVar3": "loop_counter",
                "param_1": "array_pointer",
                "param_2": "value",
                "param_3": "param3",
                "param_4": "param4",
                "pauVar2": "existing_array",
                "puVar1": "allocated_memory",
                "puVar4": "current_element",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00112996": {
            "additional_data": {
                "FUN_00112925": {
                    "do_something": 1,
                    "helper_function": 1,
                    "perform_operation": 2,
                    "process_data": 1,
                    "process_sub_function": 1
                },
                "FUN_00112996": {
                    "add_current_namespace": 1,
                    "add_debug_to_current_namespace": 3,
                    "add_debug_to_namespace": 1,
                    "add_file_to_namespace": 1,
                    "add_namespace_to_file": 1,
                    "add_to_current_namespace": 22,
                    "process_add_to_current_namespace": 1,
                    "process_file": 1
                },
                "_stderr": {
                    "err_stream": 1,
                    "error_file": 1,
                    "error_stream": 3,
                    "standard_error": 1
                },
                "dcgettext": {
                    "get_debug_message": 1,
                    "get_debug_string": 1,
                    "get_error_message": 5,
                    "get_text_from_msgid": 1
                },
                "fprintf": {
                    "print_error": 1,
                    "print_message": 1
                },
                "lVar2": {
                    "address": 3,
                    "current_offset": 1,
                    "data_ptr": 1,
                    "file_pointer": 1,
                    "file_ptr": 3,
                    "local_var": 1,
                    "namespace_pointer": 1,
                    "namespace_ptr": 1,
                    "new_address": 1,
                    "offset": 9,
                    "target_address": 1,
                    "target_ptr": 1,
                    "temp_var": 3,
                    "var1": 3
                },
                "lvar2": {
                    "file_ptr": 1
                },
                "param_1": {
                    "current_file": 1,
                    "debug_struct": 1,
                    "file": 1,
                    "file_handle": 3,
                    "file_offset": 1,
                    "file_pointer": 4,
                    "file_ptr": 2,
                    "input_address": 1,
                    "namespace": 4,
                    "namespace_pointer": 1,
                    "namespace_ptr": 10,
                    "param_ptr": 1,
                    "ptr": 1
                },
                "param_2": {
                    "file": 1,
                    "param1": 2,
                    "param2": 11,
                    "param_2": 16,
                    "ptr2": 1
                },
                "param_3": {
                    "param2": 2,
                    "param3": 11,
                    "param_3": 17,
                    "ptr3": 1
                },
                "uVar1": {
                    "error_message": 3,
                    "message": 1,
                    "result": 23,
                    "return_value": 4
                }
            },
            "called": [
                "FUN_00112925",
                "dcgettext",
                "fprintf"
            ],
            "calling": [
                "FUN_0011173a"
            ],
            "code": "\n\n\nundefined8 add_debug_to_current_namespace_00112996(long namespace_ptr,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 result;\n  long offset;\n  \n  if ((*(long *)(namespace_ptr + 8) != 0) && (*(long *)(namespace_ptr + 0x10) != 0)) {\n    offset = *(long *)(namespace_ptr + 0x10) + 0x10;\n    if (*(long *)(namespace_ptr + 0x20) != 0) {\n      offset = *(long *)(namespace_ptr + 0x20) + 0x28;\n    }\n    result = FUN_00112925(offset,param_2,param_3,3);\n    return result;\n  }\n  result = dcgettext(0,\"debug_add_to_current_namespace: no current file\",5);\n  fprintf(error_stream,\"%s\\n\",result);\n  return 0;\n}\n\n",
            "current_name": "add_debug_to_current_namespace_00112996",
            "entrypoint": "0x00112996",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00112996": "add_debug_to_current_namespace_00112996",
                "_stderr": "error_stream",
                "dcgettext": "get_error_message",
                "fprintf": "print_error",
                "lVar2": "offset",
                "param_1": "namespace_ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001129f4": {
            "additional_data": {
                "FUN_001129f4": {
                    "extract_data": 1,
                    "extract_data_from_binary": 4,
                    "extract_data_from_parameter": 1,
                    "extract_func_result": 1,
                    "extract_value_from_binary": 4,
                    "get_data_value": 1,
                    "get_function_result": 1,
                    "get_return_value": 4,
                    "parse_data": 1,
                    "process_data": 2,
                    "process_input": 1,
                    "reverse_and_lookup": 1,
                    "reverse_lookup": 1
                },
                "param_1": {
                    "array": 2,
                    "data": 1,
                    "data_array": 2,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input_array": 20,
                    "input_data": 2,
                    "input_ptr": 1,
                    "lookup_table": 1
                },
                "piVar2": {
                    "curr_ptr": 2,
                    "current_array": 1,
                    "current_array_element": 1,
                    "current_array_pointer": 1,
                    "current_data": 1,
                    "current_data_pointer": 1,
                    "current_element": 1,
                    "current_entry": 1,
                    "current_pointer": 7,
                    "current_ptr": 4,
                    "current_value": 1,
                    "int_array_ptr": 1,
                    "nested_array_ptr": 1,
                    "ptr_next": 1,
                    "ptr_to_element": 1,
                    "ptr_to_ptr_to_array": 1,
                    "temp_pointer": 2,
                    "temp_ptr": 2
                },
                "puVar1": {
                    "address_pointer": 1,
                    "array_data": 1,
                    "array_pointer": 3,
                    "array_ptr": 3,
                    "auxiliary_pointer": 1,
                    "data_pointer": 1,
                    "element_ptr": 1,
                    "entry_pointer": 1,
                    "long_array_ptr": 1,
                    "next_array": 1,
                    "next_array_pointer": 1,
                    "pointer": 3,
                    "pointer_to_array": 1,
                    "pointer_to_data": 1,
                    "ptr": 1,
                    "ptr_data": 1,
                    "ptr_to_array": 2,
                    "ptr_to_data": 1,
                    "ptr_to_input_array_plus_four": 1,
                    "ptr_to_long_array": 1,
                    "ptr_to_output": 1,
                    "secondary_array": 1,
                    "temp_ptr": 1
                }
            },
            "called": [
                "FUN_001129f4"
            ],
            "calling": [
                "FUN_00112b6e",
                "FUN_0010b0fa",
                "FUN_0010d559",
                "FUN_0010ee3f",
                "FUN_001129f4"
            ],
            "code": "\nundefined8 extract_data_from_binary_001129f4(int *input_array)\n\n{\n  undefined8 *array_ptr;\n  int *current_pointer;\n  \n  do {\n    if (*input_array != 1) {\n      if (1 < *input_array - 0x16U) {\n        return 0;\n      }\n      return *(undefined8 *)(**(long **)(input_array + 4) + 8);\n    }\n    array_ptr = (undefined8 *)(input_array + 4);\n    current_pointer = **(int ***)(undefined8 *)*array_ptr;\n  } while ((input_array != current_pointer) && (input_array = current_pointer, current_pointer != (int *)0x0));\n  return ((undefined8 *)*array_ptr)[1];\n}\n\n",
            "current_name": "extract_data_from_binary_001129f4",
            "entrypoint": "0x001129f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001129f4": "extract_data_from_binary_001129f4",
                "param_1": "input_array",
                "piVar2": "current_pointer",
                "puVar1": "array_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00112a33": {
            "additional_data": {
                "FUN_0010bd62": {
                    "another_long_function": 1,
                    "calculate_value_2": 1,
                    "execute_another_opcode": 1,
                    "execute_function2": 1,
                    "execute_function_type2": 1,
                    "function_2": 1,
                    "handle_case": 1,
                    "handle_type9": 1,
                    "perform_another_operation": 1,
                    "perform_operation": 1,
                    "process_case9or11": 1,
                    "process_operation2": 1
                },
                "FUN_0010c05d": {
                    "calculate_result": 1,
                    "calculate_value_1": 1,
                    "execute_function1": 1,
                    "execute_function_type1": 1,
                    "execute_opcode": 1,
                    "function_1": 1,
                    "handle_type1": 1,
                    "perform_operation": 1,
                    "process_case1": 1,
                    "process_data": 1,
                    "process_operation1": 1,
                    "some_long_function": 1
                },
                "FUN_0010c218": {
                    "calculate_value_3": 1,
                    "check_value": 1,
                    "execute_function4": 1,
                    "execute_function_type4": 1,
                    "function_4": 1,
                    "handle_type13": 1,
                    "one_more_long_function": 1,
                    "process_case13": 1,
                    "process_operation3": 1,
                    "reverse_something": 1,
                    "validate_value": 1,
                    "verify_value": 1
                },
                "FUN_0010c6be": {
                    "allocate_memory": 1,
                    "calculate_value_4": 1,
                    "execute_function3": 1,
                    "execute_function_type3": 1,
                    "extract_value": 1,
                    "final_long_function": 1,
                    "find_value": 1,
                    "function_3": 1,
                    "get_type_ptr": 1,
                    "process_case10or12or15": 1,
                    "process_operation4": 1,
                    "process_result": 1
                },
                "FUN_0010da0b": {
                    "allocate_memory": 6,
                    "assign_value": 1,
                    "create_ptr": 1,
                    "function_5": 1,
                    "get_pointer": 1,
                    "get_value": 1,
                    "yet_another_long_function": 1
                },
                "FUN_00112a33": {
                    "check_and_execute": 1,
                    "check_condition": 2,
                    "check_condition_and_call_function": 1,
                    "check_condition_and_execute": 1,
                    "check_opcode": 1,
                    "check_param": 1,
                    "check_permission": 1,
                    "check_validation": 1,
                    "execute_operation": 2,
                    "process_command": 1,
                    "process_function": 1,
                    "process_input": 5,
                    "process_operation": 1,
                    "process_param": 1,
                    "process_parameter": 4,
                    "process_request": 1
                },
                "lVar2": {
                    "func_result": 1,
                    "function_result": 1,
                    "pointer": 1,
                    "result": 6,
                    "result_long": 1,
                    "return_value": 7,
                    "temp": 2,
                    "temp_value": 1,
                    "temp_var": 4,
                    "value": 7
                },
                "param_1": {
                    "arg1": 2,
                    "command_data": 1,
                    "context": 1,
                    "func_param": 1,
                    "func_pointer": 1,
                    "function_pointer": 1,
                    "input": 1,
                    "input1": 2,
                    "input_list": 1,
                    "input_ptr": 1,
                    "param": 2,
                    "param1": 8,
                    "param_1": 3,
                    "param_a": 1,
                    "param_pointer": 1,
                    "pointer": 1,
                    "result": 3
                },
                "param_2": {
                    "address": 1,
                    "arg2": 2,
                    "data": 4,
                    "data_param": 1,
                    "data_ptr": 1,
                    "global_data": 1,
                    "input": 1,
                    "input2": 2,
                    "input_1": 1,
                    "input_addr": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "input_size": 1,
                    "length": 1,
                    "param2": 8,
                    "param_2": 1,
                    "param_b": 1,
                    "parameter2": 1,
                    "struct_address": 1
                },
                "param_3": {
                    "arg3": 2,
                    "array": 1,
                    "buffer": 1,
                    "config": 1,
                    "config_data": 1,
                    "data": 2,
                    "input3": 2,
                    "output_addr": 1,
                    "output_list": 1,
                    "output_ptr": 1,
                    "param3": 8,
                    "param_3": 3,
                    "param_address": 1,
                    "param_c": 1,
                    "param_pointer2": 1,
                    "parameter3": 1,
                    "ptr": 1,
                    "ptr_param": 1,
                    "result_data": 1
                },
                "param_4": {
                    "byte_param": 1,
                    "byte_value": 1,
                    "code": 1,
                    "command_type": 1,
                    "condition": 3,
                    "flag": 1,
                    "index": 1,
                    "input4": 1,
                    "input_code": 1,
                    "input_type": 1,
                    "opcode": 4,
                    "operation": 1,
                    "operation_code": 1,
                    "operation_type": 1,
                    "param4": 8,
                    "param_4": 1,
                    "param_d": 1,
                    "permission": 1,
                    "type": 1
                },
                "param_5": {
                    "arg1": 3,
                    "arg4": 1,
                    "arg5": 1,
                    "arg_1": 1,
                    "argument": 1,
                    "data": 1,
                    "data1": 1,
                    "fun_ptr": 1,
                    "func_pointer": 1,
                    "input5": 1,
                    "input_2": 1,
                    "other_param": 1,
                    "param1": 2,
                    "param5": 8,
                    "param5_address": 1,
                    "param_1": 1,
                    "param_5": 3,
                    "param_e": 1,
                    "parameter5": 1
                },
                "param_6": {
                    "arg2": 3,
                    "arg5": 1,
                    "arg6": 1,
                    "arg_2": 1,
                    "data2": 1,
                    "input6": 1,
                    "input_3": 1,
                    "param2": 2,
                    "param6": 9,
                    "param6_address": 1,
                    "param_2": 1,
                    "param_6": 3,
                    "param_f": 1,
                    "param_pointer3": 1,
                    "parameter": 1,
                    "parameter6": 1,
                    "unknown_param": 1,
                    "value": 1
                },
                "param_7": {
                    "arg3": 1,
                    "arg6": 1,
                    "arg7": 1,
                    "arg_3": 1,
                    "flag": 4,
                    "flags": 2,
                    "input7": 1,
                    "length": 1,
                    "param": 1,
                    "param7": 8,
                    "param7_value": 1,
                    "param_3": 1,
                    "param_4": 1,
                    "param_7": 2,
                    "param_g": 1,
                    "parameter7": 1,
                    "size": 2,
                    "uint_param": 1
                },
                "plVar3": {
                    "data_ptr": 1,
                    "output_array": 1,
                    "output_data": 1,
                    "output_param": 1,
                    "output_ptr": 1,
                    "pl_result": 1,
                    "pointer": 3,
                    "pointer_to_result": 1,
                    "pointer_var": 1,
                    "ptr": 4,
                    "ptr_return_value": 1,
                    "ptr_value": 1,
                    "ptr_var": 1,
                    "result_array": 1,
                    "result_long_ptr": 1,
                    "result_pointer": 5,
                    "result_ptr": 5,
                    "return_pointer": 1
                },
                "uVar1": {
                    "bool_result": 1,
                    "output": 1,
                    "result": 22,
                    "return_value": 7
                }
            },
            "called": [
                "FUN_0010c05d",
                "FUN_0010bd62",
                "FUN_0010c218",
                "FUN_0010da0b",
                "FUN_0010c6be"
            ],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\nbool process_input_00112a33(undefined8 param1,long param2,undefined8 param3,byte param4,undefined8 param5\n                 ,undefined8 param6,uint param7)\n\n{\n  undefined result;\n  long return_value;\n  long *result_ptr;\n  \n  if (param4 < 0x12) {\n    if (param4 != 0) {\n      switch(param4) {\n      case 1:\n        result = FUN_0010c05d(param5,*(undefined8 *)(param2 + 8),param6,4,\n                             *(long *)(param2 + 0x10) + *(long *)(*(long *)(param2 + 0x20) + 0x30)\n                            );\n        return (bool)result;\n      case 2:\n        goto switchD_00112a73_caseD_2;\n      case 3:\n        result = FUN_0010c05d(param5,*(undefined8 *)(param2 + 8),param6,(param7 & 0xff) + 2,\n                             *(long *)(param2 + 0x10) + *(long *)(*(long *)(param2 + 0x20) + 0x30)\n                            );\n        return (bool)result;\n      case 4:\n        result = FUN_0010c05d(param5,*(undefined8 *)(param2 + 8),param6,5,\n                             *(long *)(param2 + 0x10) + *(long *)(*(long *)(param2 + 0x20) + 0x30)\n                            );\n        return (bool)result;\n      case 9:\n        result = FUN_0010bd62(param5,*(undefined8 *)(param2 + 8),param6,1,\n                             *(long *)(param2 + 0x10) + *(long *)(*(long *)(param2 + 0x20) + 0x30)\n                            );\n        return (bool)result;\n      case 10:\n      case 0xc:\n      case 0xf:\n        return_value = FUN_0010c6be(param5,*(undefined8 *)(param2 + 8));\n        if (return_value == 0) {\n          return false;\n        }\n        result_ptr = (long *)FUN_0010da0b(param1,param3);\n        *result_ptr = return_value;\n        break;\n      case 0xd:\n        return_value = FUN_0010c218(param5,*(undefined8 *)(param2 + 8));\n        return return_value != 0;\n      case 0x11:\n        result = FUN_0010bd62(param5,*(undefined8 *)(param2 + 8),param6,2,\n                             *(long *)(param2 + 0x10) + *(long *)(*(long *)(param2 + 0x20) + 0x30)\n                            );\n        return (bool)result;\n      }\n    }\n  }\n  else if (param4 == 0x7f) {\nswitchD_00112a73_caseD_2:\n    result = FUN_0010c05d(param5,*(undefined8 *)(param2 + 8),param6,1,\n                         *(long *)(param2 + 0x10) + *(long *)(*(long *)(param2 + 0x20) + 0x30));\n    return (bool)result;\n  }\n  return true;\n}\n\n",
            "current_name": "process_input_00112a33",
            "entrypoint": "0x00112a33",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00112a33": "process_input_00112a33",
                "lVar2": "return_value",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "plVar3": "result_ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00112b6e": {
            "additional_data": {
                "FUN_00112b6e": {
                    "check_debug_info": 1,
                    "find_real_type": 9,
                    "find_type_in_debug_info": 1,
                    "get_real_type": 10,
                    "get_real_type_ptr": 1,
                    "process_input": 1,
                    "reverse_circular_debug_info": 1
                },
                "__format": {
                    "debug_message_format": 1,
                    "error_message": 3,
                    "format": 1,
                    "format_str": 4,
                    "format_string": 21,
                    "message_format": 1
                },
                "_stderr": {
                    "error_file": 2,
                    "error_output_stream": 1,
                    "error_stream": 2
                },
                "bVar5": {
                    "circular_check": 1,
                    "has_circular_info": 1,
                    "is_circular": 28,
                    "is_circular_debug_info": 1
                },
                "dcgettext": {
                    "get_translated_string": 1
                },
                "iVar1": {
                    "array_length": 4,
                    "first_element": 5,
                    "first_element_of_input_array": 1,
                    "first_value": 1,
                    "input_value": 1,
                    "param1_value": 1,
                    "type": 2,
                    "type_code": 2,
                    "type_info_value": 1,
                    "type_value": 5,
                    "value": 1,
                    "value_at_index_0": 1,
                    "var1": 1
                },
                "local_10": {
                    "current_input_array": 1,
                    "current_type": 3,
                    "input_array": 2,
                    "input_array_copy": 1,
                    "input_temp": 1,
                    "input_type": 1,
                    "input_type_copy": 1,
                    "local_input_data": 1,
                    "local_input_list": 1,
                    "local_input_type": 1,
                    "new_input_array": 2,
                    "original_array_ptr": 1,
                    "temp_array": 1,
                    "temp_input": 2,
                    "temp_input_array": 6,
                    "temp_result_pointer": 1,
                    "temp_source_type": 1,
                    "type_info": 1,
                    "updated_input_array": 1,
                    "visited_type": 2
                },
                "local_18": {
                    "current_debug_info": 1,
                    "current_debug_info_array": 1,
                    "current_info": 1,
                    "debug_info": 2,
                    "debug_info_stack": 1,
                    "debug_info_temp": 1,
                    "debug_list": 1,
                    "debug_path": 1,
                    "local_debug_info": 3,
                    "new_debug_info": 2,
                    "original_debug_ptr": 1,
                    "temp_address_array": 1,
                    "temp_debug_info": 7,
                    "temp_debug_info_array": 2,
                    "temp_long_array": 1,
                    "updated_debug_info": 1,
                    "visited_debug_entries": 1,
                    "visited_debug_info": 1,
                    "visited_info": 2
                },
                "param_1": {
                    "input": 3,
                    "input_array": 15,
                    "input_data": 1,
                    "input_list": 1,
                    "input_param": 1,
                    "input_type": 6,
                    "source_type": 1,
                    "type": 1,
                    "type_info": 1,
                    "type_ptr": 1
                },
                "param_2": {
                    "debug_info": 23,
                    "debug_info_array": 4,
                    "debug_info_list": 1,
                    "debug_info_ptr": 1,
                    "input_array_addresses": 1,
                    "long_array": 1
                },
                "piVar3": {
                    "next_type": 1,
                    "result": 18,
                    "result_array": 8,
                    "result_array_ptr": 1,
                    "result_list": 1,
                    "result_pointer": 1
                },
                "plVar4": {
                    "address_array": 1,
                    "current_array": 1,
                    "current_debug": 1,
                    "current_debug_element": 1,
                    "current_debug_info": 13,
                    "current_debug_ptr": 1,
                    "current_element": 1,
                    "current_info": 5,
                    "current_pointer": 1,
                    "debug_entry": 1,
                    "debug_node": 1,
                    "debug_ptr": 2,
                    "info_ptr": 1,
                    "ptr": 1
                },
                "uVar2": {
                    "circular_warning": 1,
                    "debug_info_string": 2,
                    "debug_message": 2,
                    "debug_type": 1,
                    "error_message": 5,
                    "error_string": 1,
                    "formatted_type": 1,
                    "real_type": 2,
                    "returned_value": 1,
                    "type_name": 1
                }
            },
            "called": [
                "FUN_00112b6e",
                "dcgettext",
                "FUN_001129f4",
                "fprintf"
            ],
            "calling": [
                "FUN_00112b6e",
                "FUN_00112c1f",
                "FUN_0010ee3f",
                "FUN_0010922b",
                "FUN_00113b1e"
            ],
            "code": "\n\n\nint * get_real_type_ptr_00112b6e(int *input_array,long *debug_info)\n\n{\n  int first_element;\n  undefined8 error_message;\n  char *format_string;\n  int *result;\n  long *current_debug_info;\n  bool is_circular;\n  long *temp_debug_info;\n  int *temp_input_array;\n  \n  first_element = *input_array;\n  if ((first_element != 1) && (1 < first_element - 0x16U)) {\n    return input_array;\n  }\n  current_debug_info = debug_info;\n  while (current_debug_info != (long *)0x0) {\n    if ((input_array == (int *)current_debug_info[1]) ||\n       (is_circular = current_debug_info == (long *)*current_debug_info, current_debug_info = (long *)*current_debug_info, is_circular)) {\n      error_message = FUN_001129f4(input_array,\"debug_get_real_type: circular debug information for %s\\n\");\n      format_string = (char *)dcgettext(0);\n      fprintf(error_file,format_string,error_message);\n      return (int *)0x0;\n    }\n  }\n  temp_debug_info = debug_info;\n  temp_input_array = input_array;\n  if (first_element - 0x16U < 2) {\n    result = (int *)get_real_type_ptr_00112b6e((*(undefined8 **)(input_array + 4))[1],&temp_debug_info);\n    return result;\n  }\n  result = *(int **)**(undefined8 **)(input_array + 4);\n  if (input_array == result) {\n    return input_array;\n  }\n  if (result == (int *)0x0) {\n    return input_array;\n  }\n  result = (int *)get_real_type_ptr_00112b6e(result,&temp_debug_info);\n  return result;\n}\n\n",
            "current_name": "get_real_type_ptr_00112b6e",
            "entrypoint": "0x00112b6e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00112b6e": "get_real_type_ptr_00112b6e",
                "__format": "format_string",
                "_stderr": "error_file",
                "bVar5": "is_circular",
                "dcgettext": "get_translated_string",
                "iVar1": "first_element",
                "local_10": "temp_input_array",
                "local_18": "temp_debug_info",
                "param_1": "input_array",
                "param_2": "debug_info",
                "piVar3": "result",
                "plVar4": "current_debug_info",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00112c1f": {
            "additional_data": {
                "FUN_00109bbb": {
                    "function_2": 1
                },
                "FUN_00109d3e": {
                    "function_6": 1
                },
                "FUN_00109d5c": {
                    "function_8": 1
                },
                "FUN_00109dfe": {
                    "function_10": 1
                },
                "FUN_00109e76": {
                    "function_20": 1
                },
                "FUN_0010a083": {
                    "function_28": 1
                },
                "FUN_0010a0a0": {
                    "function_5": 1
                },
                "FUN_0010a0d3": {
                    "function_15": 1
                },
                "FUN_0010a0e9": {
                    "function_25": 1
                },
                "FUN_0010a181": {
                    "function_26": 1
                },
                "FUN_0010a2b9": {
                    "function_1": 1
                },
                "FUN_0010a377": {
                    "function_11": 1
                },
                "FUN_0010a424": {
                    "function_16": 1
                },
                "FUN_0010a69a": {
                    "function_19": 1
                },
                "FUN_0010a77a": {
                    "function_23": 1
                },
                "FUN_0010a83e": {
                    "function_18": 1
                },
                "FUN_0010a94e": {
                    "function_29": 1
                },
                "FUN_0010aa53": {
                    "function_17": 1
                },
                "FUN_0010ab4d": {
                    "function_12": 1
                },
                "FUN_0010ae0e": {
                    "function_14": 1
                },
                "FUN_0010b800": {
                    "function_3": 1
                },
                "FUN_0010bba1": {
                    "function_7": 1
                },
                "FUN_0010c7a0": {
                    "function_4": 1
                },
                "FUN_0010e453": {
                    "function_9": 1
                },
                "FUN_0010e5db": {
                    "function_13": 1
                },
                "FUN_00112c1f": {
                    "process_binary_data": 1,
                    "process_data": 1,
                    "process_debug_object": 1,
                    "process_function": 1
                },
                "__assert_fail": {
                    "function_22": 1
                },
                "abort": {
                    "function_27": 1
                },
                "bVar14": {
                    "b_var14": 3,
                    "bool_flag": 1,
                    "bool_value": 1,
                    "bool_var": 9,
                    "bool_var1": 1,
                    "bool_var14": 1,
                    "bool_variable": 1,
                    "bool_variable14": 1,
                    "bool_variable_1": 1,
                    "boolean_value": 1,
                    "flag": 1,
                    "is_param_3": 1,
                    "temp_bool": 3,
                    "var10": 1,
                    "var13": 1,
                    "var7": 1,
                    "var_b_var14": 1
                },
                "cVar5": {
                    "c_var5": 1,
                    "char_value": 1,
                    "char_var": 9,
                    "char_var1": 1,
                    "char_var5": 1,
                    "char_variable5": 1,
                    "char_variable_1": 1,
                    "character1": 1,
                    "condition_variable": 1,
                    "flag": 2,
                    "result": 5,
                    "temp_char": 2,
                    "var2": 1,
                    "var5": 1,
                    "var_c_var5": 1
                },
                "dcgettext": {
                    "function_21": 1
                },
                "fprintf": {
                    "function_24": 1
                },
                "iVar9": {
                    "i_var": 1,
                    "i_var9": 2,
                    "int_value": 2,
                    "int_var": 5,
                    "int_var2": 1,
                    "int_variable9": 1,
                    "int_variable_1": 1,
                    "nested_value2": 1,
                    "param_3_1": 1,
                    "tag_value": 1,
                    "temp_int": 1,
                    "temp_var2": 2,
                    "value": 1,
                    "value2": 1,
                    "var2": 2,
                    "var3": 1,
                    "var5": 1,
                    "var8": 1,
                    "var9": 1,
                    "var_i_var9": 1
                },
                "lVar2": {
                    "child": 1,
                    "current_ptr": 1,
                    "current_type_ptr": 1,
                    "entry": 1,
                    "l_var2": 1,
                    "long_var": 3,
                    "long_var2": 2,
                    "long_variable2": 1,
                    "long_variable_1": 1,
                    "pointer1": 1,
                    "ptr2": 1,
                    "temp_var": 3,
                    "type_node": 1,
                    "type_value": 1,
                    "value": 1,
                    "var1": 4,
                    "var2": 2,
                    "var_1": 2,
                    "var_l_var2": 1
                },
                "local_3c": {
                    "local_3c": 2,
                    "local_value": 1,
                    "local_var": 9,
                    "local_var3c": 3,
                    "local_variable3c": 1,
                    "temp": 1,
                    "temp_local_uint": 1,
                    "temp_value3": 1,
                    "temp_var7": 1,
                    "uint_var_2": 1,
                    "uint_variable_2": 1,
                    "var11": 1,
                    "var14": 1,
                    "var8": 2,
                    "var_7": 1,
                    "var_local_3c": 1
                },
                "param_1": {
                    "arg1": 1,
                    "argument1": 1,
                    "data": 1,
                    "info": 8,
                    "input": 2,
                    "input1": 1,
                    "input_param": 2,
                    "input_value_1": 1,
                    "param1": 7,
                    "param_1": 1,
                    "param_a": 2,
                    "param_ulong": 1,
                    "param_value": 1
                },
                "param_2": {
                    "arg2": 1,
                    "argument2": 1,
                    "config_param": 1,
                    "debug": 1,
                    "input2": 1,
                    "input_value_2": 1,
                    "name": 7,
                    "output_param": 1,
                    "param": 3,
                    "param2": 7,
                    "param_2": 1,
                    "param_b": 2,
                    "param_pointer": 1,
                    "param_undefined8": 1
                },
                "param_3": {
                    "arg3": 1,
                    "argument3": 1,
                    "array": 2,
                    "children": 1,
                    "data_array": 1,
                    "info_list": 1,
                    "input_array": 2,
                    "nested_values": 1,
                    "param3": 6,
                    "param_3": 1,
                    "param_array": 2,
                    "param_c": 2,
                    "param_int_ptr": 1,
                    "parameters": 1,
                    "tag": 1,
                    "type": 4,
                    "type_array": 1
                },
                "param_4": {
                    "additional_parameter": 1,
                    "arg4": 1,
                    "argument4": 1,
                    "base_id": 2,
                    "base_type": 1,
                    "current_type": 1,
                    "current_value": 1,
                    "input_param": 1,
                    "input_value_3": 1,
                    "length": 1,
                    "memory_param": 1,
                    "param4": 8,
                    "param_4": 1,
                    "param_d": 2,
                    "param_long": 1,
                    "param_value2": 1,
                    "tag": 1,
                    "type": 3
                },
                "piVar6": {
                    "array_pointer2": 1,
                    "debug_object": 1,
                    "int_pointer6": 1,
                    "int_ptr": 1,
                    "int_var": 2,
                    "pi_var6": 1,
                    "pointer4": 1,
                    "pointer_4": 1,
                    "pointer_to_int": 1,
                    "pointer_to_int6": 1,
                    "pointer_to_int_1": 1,
                    "pointer_to_parameters": 1,
                    "pointer_var6": 2,
                    "ptr3": 1,
                    "ptr4": 2,
                    "ptr5": 1,
                    "ptr_4": 1,
                    "ptr_pi_var6": 1,
                    "ptr_result": 1,
                    "ptr_var6": 2,
                    "result_ptr": 1,
                    "temp_ptr3": 1,
                    "temp_ptr_3": 1,
                    "var6": 1,
                    "var_pi_var6": 1
                },
                "plVar1": {
                    "array_pointer": 1,
                    "long_pointer1": 1,
                    "nested_value_ptr": 1,
                    "parent": 1,
                    "pointer1": 1,
                    "pointer_1": 1,
                    "pointer_to_long": 1,
                    "pointer_to_long1": 1,
                    "pointer_to_long_1": 1,
                    "pointer_var1": 2,
                    "pointers_list1": 1,
                    "ptr1": 4,
                    "ptr_1": 1,
                    "ptr_l_var1": 1,
                    "ptr_var1": 2,
                    "temp_pointer": 1,
                    "type": 1,
                    "type_array_ptr": 1,
                    "type_list": 2,
                    "type_ptr": 1,
                    "var1": 1,
                    "var_list": 1,
                    "var_pl_var1": 1
                },
                "puVar3": {
                    "null": 1,
                    "output_ptr": 1,
                    "pointer2": 1,
                    "pointer_2": 1,
                    "pointer_list1": 1,
                    "pointer_to_undef8_1": 1,
                    "pointer_to_undefined8_1": 1,
                    "pointer_to_var3": 1,
                    "pointer_var3": 2,
                    "ptr1": 1,
                    "ptr2": 3,
                    "ptr3": 2,
                    "ptr_2": 1,
                    "ptr_pu_var3": 1,
                    "ptr_var1": 1,
                    "ptr_var3": 2,
                    "pu_var3": 1,
                    "temp_ptr": 1,
                    "temp_ptr1": 1,
                    "temp_ptr_1": 1,
                    "undefined8_ptr": 1,
                    "undefined_pointer3": 1,
                    "var3": 1,
                    "var_pu_var3": 1
                },
                "puVar4": {
                    "nested_value_ptr": 1,
                    "pointer3": 1,
                    "pointer_3": 1,
                    "pointer_list2": 1,
                    "pointer_to_undef8_2": 1,
                    "pointer_to_undefined8_2": 1,
                    "pointer_to_var4": 1,
                    "pointer_var4": 2,
                    "ptr": 1,
                    "ptr2": 1,
                    "ptr3": 3,
                    "ptr4": 2,
                    "ptr_3": 1,
                    "ptr_pu_var4": 1,
                    "ptr_var2": 1,
                    "ptr_var4": 2,
                    "pu_var4": 1,
                    "temp_ptr2": 2,
                    "temp_ptr_2": 1,
                    "undefined8_ptr_2": 1,
                    "undefined_pointer4": 1,
                    "var4": 1,
                    "var_pu_var4": 1
                },
                "uVar10": {
                    "output3": 1,
                    "param2": 1,
                    "param_2_2": 1,
                    "param_var2": 1,
                    "result_3": 1,
                    "temp_u_var2": 1,
                    "temp_uint": 1,
                    "temp_value": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "u_var10": 4,
                    "undefined4_var": 1,
                    "undefined4_variable_1": 1,
                    "undefined_variable10": 1,
                    "unused_var2": 1,
                    "var10": 1,
                    "var3": 4,
                    "var4": 1,
                    "var6": 1,
                    "var9": 1,
                    "var_3": 1,
                    "var_u_var10": 1,
                    "variable2": 1
                },
                "uVar11": {
                    "nested_value3": 1,
                    "output4": 1,
                    "param3": 1,
                    "param_3_2": 1,
                    "param_var3": 1,
                    "result_4": 1,
                    "temp_result_2": 1,
                    "temp_u_var3": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "u_var11": 4,
                    "undefined8_var_2": 1,
                    "undefined8_variable_1": 1,
                    "undefined_variable11": 1,
                    "unused_var3": 1,
                    "var10": 1,
                    "var11": 1,
                    "var4": 4,
                    "var5": 1,
                    "var7": 1,
                    "var_4": 1,
                    "var_u_var11": 1,
                    "variable3": 1
                },
                "uVar12": {
                    "count": 3,
                    "counter": 2,
                    "index": 2,
                    "temp_u_var4": 1,
                    "temp_ulong": 1,
                    "temp_var4": 1,
                    "temp_var5": 1,
                    "u_var12": 3,
                    "ulong_var": 4,
                    "ulong_variable_1": 1,
                    "undefined_variable12": 1,
                    "var11": 1,
                    "var12": 1,
                    "var5": 2,
                    "var6": 1,
                    "var8": 1,
                    "var_5": 1,
                    "var_u_var12": 1,
                    "variable4": 1
                },
                "uVar13": {
                    "count2": 1,
                    "size": 1,
                    "temp_u_var5": 1,
                    "temp_uint_2": 1,
                    "temp_value2": 1,
                    "temp_var5": 1,
                    "temp_var6": 1,
                    "u_var13": 4,
                    "uint_var": 5,
                    "uint_variable13": 1,
                    "uint_variable_1": 1,
                    "value3": 1,
                    "var12": 1,
                    "var13": 1,
                    "var5": 1,
                    "var6": 2,
                    "var7": 1,
                    "var9": 1,
                    "var_6": 1,
                    "var_u_var13": 1,
                    "variable5": 1
                },
                "uVar7": {
                    "output1": 1,
                    "result": 11,
                    "result_var": 2,
                    "ret_val": 1,
                    "ret_value": 1,
                    "ret_var": 1,
                    "return_value": 3,
                    "return_value_1": 1,
                    "return_var": 1,
                    "retval": 1,
                    "u_var7": 2,
                    "undefined_variable7": 1,
                    "var3": 1,
                    "var7": 1,
                    "var_u_var7": 1
                },
                "uVar8": {
                    "nested_value1": 1,
                    "output2": 1,
                    "param1": 1,
                    "param_2_1": 1,
                    "param_var1": 1,
                    "result_2": 1,
                    "result_var2": 1,
                    "return_value_2": 1,
                    "temp_result_1": 1,
                    "temp_u_var": 1,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "u_var8": 3,
                    "undefined8_var": 1,
                    "undefined_variable8": 1,
                    "unused_var1": 1,
                    "var1": 2,
                    "var2": 3,
                    "var4": 1,
                    "var7": 1,
                    "var8": 1,
                    "var_2": 1,
                    "var_u_var8": 1,
                    "variable1": 1
                },
                "uVar9": {
                    "int_var": 1
                }
            },
            "called": [
                "FUN_0010a2b9",
                "FUN_00109bbb",
                "FUN_0010b800",
                "FUN_0010c7a0",
                "FUN_0010a0a0",
                "FUN_00109d3e",
                "FUN_0010bba1",
                "FUN_00109d5c",
                "FUN_0010e453",
                "FUN_00109dfe",
                "FUN_0010a377",
                "FUN_0010adf2",
                "FUN_0010ab4d",
                "FUN_0010e5db",
                "FUN_0010ae0e",
                "FUN_0010a0d3",
                "FUN_00112c1f",
                "FUN_0010b948",
                "FUN_00112b6e",
                "FUN_0010ba08",
                "FUN_0010a424",
                "FUN_0010aa53",
                "FUN_00109d97",
                "FUN_0010a0bd",
                "FUN_0010add5",
                "FUN_0010a83e",
                "FUN_0010a69a",
                "FUN_00109e76",
                "dcgettext",
                "__assert_fail",
                "FUN_0010a77a",
                "fprintf",
                "FUN_0010a0e9",
                "FUN_0010a181",
                "FUN_0010a083",
                "abort",
                "FUN_0010a94e"
            ],
            "calling": [
                "FUN_00112c1f",
                "FUN_001135a5"
            ],
            "code": "\n\n\nundefined8 process_binary_data_00112c1f(ulong info,undefined8 name,int *param3,long param4)\n\n{\n  long *ptr1;\n  long var1;\n  undefined8 *ptr2;\n  undefined8 *ptr3;\n  char char_var;\n  int *ptr_var6;\n  undefined8 result;\n  undefined8 u_var8;\n  int int_var;\n  undefined4 u_var10;\n  undefined8 var4;\n  ulong ulong_var;\n  uint uint_var;\n  bool bool_var;\n  uint local_var;\n  \n  ulong_var = info;\nLAB_00112c39:\n  if (param3 != (int *)0x0) {\n    int_var = *param3;\n    if (int_var - 0x16U < 2) {\n      do {\n        ptr1 = *(long **)(param3 + 4);\n        uint_var = *(uint *)(info + 0x30);\n        ulong_var = (ulong)uint_var;\n        var1 = *ptr1;\n        if (*(uint *)(var1 + 0x10) == uint_var) {\n          if (int_var == 0x16) {\n            result = FUN_0010bba1(name,*(undefined8 *)(var1 + 8));\n            return result;\n          }\nLAB_00112c94:\n          ptr_var6 = (int *)FUN_00112b6e(param3,0);\n          if (ptr_var6 == (int *)0x0) goto LAB_00112dd6;\n          if ((*ptr_var6 - 7U < 4) && (*(long *)(ptr_var6 + 4) != 0)) {\n            if ((*(uint *)(*(long *)(ptr_var6 + 4) + 0xc) <= *(uint *)(info + 0x38)) &&\n               (char_var = FUN_0010c7a0(info,*(undefined8 *)(**(long **)(param3 + 4) + 8),ptr_var6),\n               char_var == '\\0')) {\n              return 0;\n            }\n            uint_var = *(uint *)(*(long *)(ptr_var6 + 4) + 0xc);\n          }\n          else {\n            uint_var = 0;\n          }\n          int_var = *ptr_var6;\n          result = *(undefined8 *)(**(long **)(param3 + 4) + 8);\n          goto LAB_00112ed2;\n        }\n        if (int_var == 0x17) {\n          if (var1 != param4) goto LAB_00112c94;\n          *(uint *)(param4 + 0x10) = uint_var;\n          param4 = *ptr1;\n          param3 = (int *)ptr1[1];\n          goto LAB_00112c39;\n        }\n        if (param4 != 0) {\n          *(uint *)(param4 + 0x10) = uint_var;\n        }\n        param3 = (int *)ptr1[1];\n        if (param3 == (int *)0x0) goto LAB_00112dd6;\n        int_var = *param3;\n        param4 = 0;\n      } while (int_var - 0x16U < 2);\nLAB_00112d74:\n      result = 0;\n    }\n    else {\n      if (param4 == 0) goto LAB_00112d74;\n      *(undefined4 *)(param4 + 0x10) = *(undefined4 *)(info + 0x30);\n      if (*(int *)(param4 + 0x14) != 1) {\n                    \n        __assert_fail(\"name->kind == DEBUG_OBJECT_TAG\",\"../../binutils/debug.c\",0x9b3,\n                      \"debug_write_type\");\n      }\n      result = *(undefined8 *)(param4 + 8);\n    }\n    switch(int_var) {\n    case 0:\n      result = dcgettext(0,\"debug_write_type: illegal type encountered\",5);\n      fprintf(_stderr,\"%s\\n\",result);\n      return 0;\n    case 1:\n      goto switchD_00112d8e_caseD_1;\n    case 2:\n      result = FUN_00109dfe(name);\n      return result;\n    case 3:\n      result = FUN_0010b800(name,param3[1],*(undefined *)(param3 + 4));\n      return result;\n    case 4:\n      result = FUN_0010b948(name,param3[1]);\n      return result;\n    case 5:\n      result = FUN_00109e76(name,param3[1]);\n      return result;\n    case 6:\n      result = FUN_00109d3e(name,param3[1]);\n      return result;\n    case 7:\n    case 8:\n      if (*(long *)(param3 + 4) != 0) {\n        if ((*(uint *)(*(long *)(param3 + 4) + 0xc) <= *(uint *)(info + 0x38)) &&\n           (char_var = FUN_0010c7a0(info,result,param3), char_var == '\\0')) {\n          return 0;\n        }\n        var1 = *(long *)(param3 + 4);\n        if (*(int *)(info + 0x30) == *(int *)(var1 + 8)) {\n          uint_var = *(uint *)(var1 + 0xc);\n          if (uint_var <= *(uint *)(info + 0x38)) {\n                    \n            __assert_fail(\"type->u.kclass->id > info->base_id\",\"../../binutils/debug.c\",0x9db,\n                          \"debug_write_type\");\n          }\n          int_var = *param3;\nLAB_00112ed2:\n          result = FUN_00109d5c(name,result,uint_var,int_var);\n          return result;\n        }\n        *(int *)(var1 + 8) = *(int *)(info + 0x30);\n      }\n      u_var10 = 0;\n      if (*(long *)(param3 + 4) != 0) {\n        u_var10 = *(undefined4 *)(*(long *)(param3 + 4) + 0xc);\n      }\n      char_var = FUN_0010a69a(name,result,u_var10,*param3 == 7,param3[1]);\n      if (char_var == '\\0') {\n        return 0;\n      }\n      if ((*(long **)(param3 + 4) != (long *)0x0) && (ulong_var = 0, **(long **)(param3 + 4) != 0)) {\n        while( true ) {\n          ptr3 = *(undefined8 **)(**(long **)(param3 + 4) + ulong_var * 8);\n          if (ptr3 == (undefined8 *)0x0) break;\n          char_var = process_binary_data_00112c1f(info,name,ptr3[1],0);\n          if (char_var == '\\0') {\n            return 0;\n          }\n          char_var = FUN_0010ba08(name,*ptr3,*(undefined4 *)(ptr3 + 3),\n                               *(undefined4 *)((long)ptr3 + 0x1c),*(undefined4 *)(ptr3 + 2));\n          if (char_var == '\\0') {\n            return 0;\n          }\n          ulong_var = (ulong)((int)ulong_var + 1);\n        }\n      }\n      result = FUN_0010a77a(name);\n      return result;\n    case 9:\n    case 10:\n      if (*(long *)(param3 + 4) == 0) {\n        uint_var = 0;\n        ptr_var6 = (int *)0x0;\n      }\n      else {\n        if ((*(uint *)(*(long *)(param3 + 4) + 0xc) <= *(uint *)(info + 0x38)) &&\n           (ulong_var = info, char_var = FUN_0010c7a0(info,result,param3), char_var == '\\0')) {\n          return 0;\n        }\n        var1 = *(long *)(param3 + 4);\n        uint_var = *(uint *)(var1 + 0xc);\n        if (*(int *)(info + 0x30) == *(int *)(var1 + 8)) {\n          if (uint_var <= *(uint *)(info + 0x38)) {\n                    \n            __assert_fail(\"type->u.kclass->id > info->base_id\",\"../../binutils/debug.c\",0xa87,\n                          \"debug_write_class_type\");\n          }\n          int_var = *param3;\n          goto LAB_00112ed2;\n        }\n        ptr_var6 = *(int **)(var1 + 0x20);\n        *(int *)(var1 + 8) = *(int *)(info + 0x30);\n        if (((ptr_var6 != (int *)0x0) && (param3 != ptr_var6)) &&\n           (ulong_var = info, char_var = process_binary_data_00112c1f(info,name,ptr_var6,0), char_var == '\\0')) {\n          return 0;\n        }\n      }\n      char_var = FUN_0010a83e(name,result,uint_var,*param3 == 9,param3[1],ptr_var6 != (int *)0x0,\n                           param3 == ptr_var6,ulong_var);\n      if (char_var == '\\0') {\n        return 0;\n      }\n      if (*(long **)(param3 + 4) != (long *)0x0) {\n        uint_var = 0;\n        if (**(long **)(param3 + 4) != 0) {\n          while (ptr3 = *(undefined8 **)(**(long **)(param3 + 4) + (ulong)uint_var * 8),\n                ptr3 != (undefined8 *)0x0) {\n            char_var = process_binary_data_00112c1f(info,name,ptr3[1],0);\n            if (char_var == '\\0') {\n              return 0;\n            }\n            if (*(char *)((long)ptr3 + 0x14) == '\\0') {\n              char_var = FUN_0010ba08(name,*ptr3,*(undefined4 *)(ptr3 + 3));\n            }\n            else {\n              char_var = FUN_0010a94e(name,*ptr3,ptr3[3]);\n            }\n            if (char_var == '\\0') {\n              return 0;\n            }\n            uint_var = uint_var + 1;\n          }\n        }\n        uint_var = 0;\n        if (*(long *)(*(long *)(param3 + 4) + 0x10) != 0) {\n          while (ptr3 = *(undefined8 **)\n                           (*(long *)(*(long *)(param3 + 4) + 0x10) + (ulong)uint_var * 8),\n                ptr3 != (undefined8 *)0x0) {\n            char_var = process_binary_data_00112c1f(info,name,*ptr3,0);\n            if (char_var == '\\0') {\n              return 0;\n            }\n            char_var = FUN_0010aa53(name,*(undefined4 *)(ptr3 + 1),\n                                 *(undefined *)((long)ptr3 + 0xc));\n            if (char_var == '\\0') {\n              return 0;\n            }\n            uint_var = uint_var + 1;\n          }\n        }\n        local_var = 0;\n        if (*(long *)(*(long *)(param3 + 4) + 0x18) != 0) {\n          while (ptr3 = *(undefined8 **)\n                           (*(long *)(*(long *)(param3 + 4) + 0x18) + (ulong)local_var * 8),\n                ptr3 != (undefined8 *)0x0) {\n            char_var = FUN_0010ab4d(name,*ptr3);\n            if (char_var == '\\0') {\n              return 0;\n            }\n            uint_var = 0;\n            while (ptr2 = *(undefined8 **)(ptr3[1] + (ulong)uint_var * 8),\n                  ptr2 != (undefined8 *)0x0) {\n              if ((ptr2[4] != 0) &&\n                 (char_var = process_binary_data_00112c1f(info,name,ptr2[4],0), char_var == '\\0')) {\n                return 0;\n              }\n              char_var = process_binary_data_00112c1f(info,name,ptr2[1],0);\n              if (char_var == '\\0') {\n                return 0;\n              }\n              if (ptr2[3] == -1) {\n                char_var = FUN_0010adf2(name,*ptr2,*(undefined4 *)(ptr2 + 2),\n                                     *(undefined *)((long)ptr2 + 0x14),\n                                     *(undefined *)((long)ptr2 + 0x15));\n              }\n              else {\n                char_var = FUN_0010add5(name);\n              }\n              if (char_var == '\\0') {\n                return 0;\n              }\n              uint_var = uint_var + 1;\n            }\n            char_var = FUN_00109bbb(name);\n            if (char_var == '\\0') {\n              return 0;\n            }\n            local_var = local_var + 1;\n          }\n        }\n      }\n      result = FUN_0010ae0e(name);\n      return result;\n    case 0xb:\n      ptr3 = *(undefined8 **)(param3 + 4);\n      if (ptr3 == (undefined8 *)0x0) {\n        u_var8 = 0;\n        var4 = 0;\n      }\n      else {\n        u_var8 = ptr3[1];\n        var4 = *ptr3;\n      }\n      result = FUN_0010e453(name,result,var4,u_var8);\n      return result;\n    case 0xc:\n      char_var = process_binary_data_00112c1f(info,name,*(undefined8 *)(param3 + 4),0);\n      if (char_var == '\\0') {\n        return 0;\n      }\n      result = FUN_0010a083(name);\n      return result;\n    case 0xd:\n      char_var = process_binary_data_00112c1f(info,name,**(undefined8 **)(param3 + 4),0);\n      if (char_var == '\\0') {\n        return 0;\n      }\n      ulong_var = 0;\n      if (*(long *)(*(long *)(param3 + 4) + 8) == 0) {\n        ulong_var = 0xffffffff;\n      }\n      else {\n        while (var1 = *(long *)(*(long *)(*(long *)(param3 + 4) + 8) + ulong_var * 8), var1 != 0) {\n          ulong_var = ulong_var + 1;\n          char_var = process_binary_data_00112c1f(info,name,var1,0);\n          if (char_var == '\\0') {\n            return 0;\n          }\n        }\n        ulong_var = ulong_var & 0xffffffff;\n      }\n      result = FUN_0010e5db(name,ulong_var,*(undefined *)(*(long *)(param3 + 4) + 0x10));\n      return result;\n    case 0xe:\n      char_var = process_binary_data_00112c1f(info,name,*(undefined8 *)(param3 + 4),0);\n      if (char_var == '\\0') {\n        return 0;\n      }\n      result = FUN_0010a0a0(name);\n      return result;\n    case 0xf:\n      char_var = process_binary_data_00112c1f(info,name,**(undefined8 **)(param3 + 4),0);\n      if (char_var == '\\0') {\n        return 0;\n      }\n      result = FUN_0010a0e9(name,*(undefined8 *)(*(long *)(param3 + 4) + 8),\n                           *(undefined8 *)(*(long *)(param3 + 4) + 0x10));\n      return result;\n    case 0x10:\n      char_var = process_binary_data_00112c1f(info,name,**(undefined8 **)(param3 + 4),0);\n      if (char_var == '\\0') {\n        return 0;\n      }\n      char_var = process_binary_data_00112c1f(info,name,*(undefined8 *)(*(long *)(param3 + 4) + 8),0);\n      if (char_var == '\\0') {\n        return 0;\n      }\n      var1 = *(long *)(param3 + 4);\n      result = FUN_0010a181(name,*(undefined8 *)(var1 + 0x10),*(undefined8 *)(var1 + 0x18),\n                           *(undefined *)(var1 + 0x20));\n      return result;\n    case 0x11:\n      char_var = process_binary_data_00112c1f(info,name,**(undefined8 **)(param3 + 4),0);\n      if (char_var == '\\0') {\n        return 0;\n      }\n      result = FUN_0010a2b9(name,*(undefined *)(*(long *)(param3 + 4) + 8));\n      return result;\n    case 0x12:\n      char_var = process_binary_data_00112c1f(info,name,**(undefined8 **)(param3 + 4),0);\n      if (char_var == '\\0') {\n        return 0;\n      }\n      char_var = process_binary_data_00112c1f(info,name,*(undefined8 *)(*(long *)(param3 + 4) + 8),0);\n      if (char_var == '\\0') {\n        return 0;\n      }\n      result = FUN_0010a377(name);\n      return result;\n    case 0x13:\n      char_var = process_binary_data_00112c1f(info,name,**(undefined8 **)(param3 + 4),0);\n      if (char_var == '\\0') {\n        return 0;\n      }\n      ulong_var = 0;\n      if (*(long *)(*(long *)(param3 + 4) + 0x10) == 0) {\n        ulong_var = 0xffffffff;\n      }\n      else {\n        while (var1 = *(long *)(*(long *)(*(long *)(param3 + 4) + 0x10) + ulong_var * 8), var1 != 0)\n        {\n          ulong_var = ulong_var + 1;\n          char_var = process_binary_data_00112c1f(info,name,var1,0);\n          if (char_var == '\\0') {\n            return 0;\n          }\n        }\n      }\n      if ((*(long *)(*(long *)(param3 + 4) + 8) != 0) &&\n         (char_var = process_binary_data_00112c1f(info,name,*(long *)(*(long *)(param3 + 4) + 8),0),\n         char_var == '\\0')) {\n        return 0;\n      }\n      result = FUN_0010a424(name,*(long *)(*(long *)(param3 + 4) + 8) != 0,ulong_var & 0xffffffff,\n                           *(undefined *)(*(long *)(param3 + 4) + 0x18));\n      return result;\n    case 0x14:\n      char_var = process_binary_data_00112c1f(info,name,*(undefined8 *)(param3 + 4),0);\n      if (char_var == '\\0') {\n        return 0;\n      }\n      result = FUN_0010a0bd(name);\n      return result;\n    case 0x15:\n      char_var = process_binary_data_00112c1f(info,name,*(undefined8 *)(param3 + 4),0);\n      if (char_var == '\\0') {\n        return 0;\n      }\n      result = FUN_0010a0d3(name);\n      return result;\n    default:\n                    \n      abort();\n    }\n  }\n  goto LAB_00112dd6;\nswitchD_00112d8e_caseD_1:\n  bool_var = *(int **)**(undefined8 **)(param3 + 4) == param3;\n  param3 = *(int **)**(undefined8 **)(param3 + 4);\n  if (bool_var) {\nLAB_00112dd6:\n    result = FUN_00109d97(name);\n    return result;\n  }\n  goto LAB_00112c39;\n}\n\n",
            "current_name": "process_binary_data_00112c1f",
            "entrypoint": "0x00112c1f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00112c1f": "process_binary_data_00112c1f",
                "__assert_fail": "function_22",
                "abort": "function_27",
                "bVar14": "bool_var",
                "cVar5": "char_var",
                "dcgettext": "function_21",
                "fprintf": "function_24",
                "iVar9": "int_var",
                "lVar2": "var1",
                "local_3c": "local_var",
                "param_1": "info",
                "param_2": "name",
                "param_3": "param3",
                "param_4": "param4",
                "piVar6": "ptr_var6",
                "plVar1": "ptr1",
                "puVar3": "ptr2",
                "puVar4": "ptr3",
                "uVar10": "u_var10",
                "uVar11": "var4",
                "uVar12": "ulong_var",
                "uVar13": "uint_var",
                "uVar7": "result",
                "uVar8": "u_var8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001135a5": {
            "additional_data": {
                "FUN_00108f05": {
                    "cleanup": 1,
                    "get_output": 1,
                    "process_data_f": 1
                },
                "FUN_0010e6a8": {
                    "execute_task0": 1,
                    "process_case0": 1,
                    "process_data_a": 1,
                    "process_data_case0": 1,
                    "process_type0": 1
                },
                "FUN_0010e7c2": {
                    "execute_task1": 1,
                    "process_case1": 1,
                    "process_data_b": 1,
                    "process_data_case1": 1,
                    "process_type1": 1
                },
                "FUN_0010e842": {
                    "execute_task4": 1,
                    "process_case4": 1,
                    "process_data_case4": 1,
                    "process_data_g": 1,
                    "process_type4": 1
                },
                "FUN_0010e8a9": {
                    "execute_task5": 1,
                    "process_case5": 1,
                    "process_data_case5": 1,
                    "process_data_h": 1,
                    "process_type5": 1
                },
                "FUN_0010e918": {
                    "execute_task6": 1,
                    "process_case6": 1,
                    "process_data_case6": 1,
                    "process_data_i": 1,
                    "process_type6": 1
                },
                "FUN_0010e9a0": {
                    "process_case2": 1,
                    "process_data_c": 1,
                    "process_data_case2": 1,
                    "process_task2": 1,
                    "process_type2": 1
                },
                "FUN_0010eafe": {
                    "process_case3": 1,
                    "process_data_case3": 1,
                    "process_data_d": 1,
                    "process_task3": 1,
                    "process_type3": 1
                },
                "FUN_0010ebb0": {
                    "process_data_case3_sub_function": 1
                },
                "FUN_00112502": {
                    "check_if_valid": 1,
                    "check_task4": 1,
                    "check_value": 1,
                    "process_data_e": 1,
                    "process_type3_sub_func": 1
                },
                "FUN_00112c1f": {
                    "check_condition": 3,
                    "check_validity": 2
                },
                "FUN_001135a5": {
                    "execute_command": 1,
                    "execute_function": 3,
                    "execute_operation": 2,
                    "execute_task": 2,
                    "perform_operation": 1,
                    "process_data": 10,
                    "process_input": 1,
                    "process_operation": 1
                },
                "FUN_00113a4d": {
                    "check_data": 1,
                    "check_loop": 1,
                    "check_node": 1,
                    "check_type6_sub_func": 1,
                    "process_data_j": 1
                },
                "abort": {
                    "abort": 3,
                    "abort_function": 1
                },
                "cVar2": {
                    "char_val": 1,
                    "char_var": 2,
                    "check": 1,
                    "condition": 2,
                    "condition_var": 2,
                    "flag": 3,
                    "is_valid": 7,
                    "result": 10,
                    "var2": 2,
                    "var_c": 1
                },
                "iVar1": {
                    "count": 1,
                    "counter": 2,
                    "i_var": 1,
                    "index": 11,
                    "index_var": 1,
                    "int_value": 2,
                    "int_var": 1,
                    "int_var1": 1,
                    "iteration_var": 1,
                    "loop_counter": 1,
                    "loop_index": 1,
                    "result": 1,
                    "status": 1,
                    "value": 1,
                    "var1": 4,
                    "var_i": 1
                },
                "param_1": {
                    "arg1": 8,
                    "data1": 1,
                    "first_param": 1,
                    "input1": 10,
                    "input_1": 1,
                    "input_param": 1,
                    "input_param1": 2,
                    "input_param_1": 1,
                    "input_var1": 1,
                    "param1": 5
                },
                "param_2": {
                    "arg2": 8,
                    "data2": 1,
                    "input2": 10,
                    "input_2": 1,
                    "input_param2": 2,
                    "input_param_2": 1,
                    "input_var2": 1,
                    "output_param": 1,
                    "param2": 5,
                    "second_param": 1
                },
                "param_3": {
                    "arg3": 6,
                    "command_info": 1,
                    "data": 7,
                    "data3": 1,
                    "function_data": 1,
                    "input_param3": 2,
                    "input_param_3": 1,
                    "input_var3": 1,
                    "operation_data": 1,
                    "param": 2,
                    "param3": 6,
                    "parameter3": 1,
                    "third_param": 1
                },
                "puVar4": {
                    "current_item": 1,
                    "current_node": 3,
                    "current_ptr": 4,
                    "iter_var1": 1,
                    "list_ptr": 1,
                    "pointer1": 1,
                    "ptr1": 12,
                    "ptr_var1": 4,
                    "temp_ptr": 1,
                    "var4": 2,
                    "var_pu_1": 1
                },
                "puVar5": {
                    "current_list": 1,
                    "current_node": 1,
                    "head_node": 2,
                    "iter_var2": 1,
                    "nested_list_ptr": 1,
                    "next_ptr": 4,
                    "pointer2": 1,
                    "ptr2": 12,
                    "ptr_var2": 4,
                    "temp_ptr2": 1,
                    "var5": 2,
                    "var_pu_2": 1
                },
                "uVar3": {
                    "output": 5,
                    "output_var": 1,
                    "result": 14,
                    "result_var": 1,
                    "return_value": 7,
                    "var3": 2,
                    "var_u": 1
                }
            },
            "called": [
                "FUN_0010e9a0",
                "FUN_0010eafe",
                "FUN_0010e6a8",
                "FUN_0010e7c2",
                "FUN_00112502",
                "FUN_00112c1f",
                "FUN_0010e8a9",
                "FUN_00108f05",
                "FUN_0010e842",
                "FUN_0010e918",
                "FUN_00113a4d",
                "FUN_0010ebb0",
                "abort"
            ],
            "calling": [
                "FUN_0011378f",
                "FUN_00113a4d"
            ],
            "code": "\nundefined8 process_data_001135a5(undefined8 input1,undefined8 input2,long data)\n\n{\n  int index;\n  char result;\n  undefined8 result;\n  undefined8 *ptr1;\n  undefined8 *ptr2;\n  \n  if (6 < *(uint *)(data + 0x14)) {\n                    \n    abort();\n  }\n  switch(*(undefined4 *)(data + 0x14)) {\n  case 0:\n    result = FUN_00112c1f(input1,input2,*(undefined8 *)(data + 0x20),data);\n    if (result != '\\0') {\n      result = FUN_0010e6a8(input2,*(undefined8 *)(data + 8));\n      return result;\n    }\n    break;\n  case 1:\n    result = FUN_00112c1f(input1,input2,*(undefined8 *)(data + 0x20),data);\n    if (result != '\\0') {\n      result = FUN_0010e7c2(input2,*(undefined8 *)(data + 8));\n      return result;\n    }\n    break;\n  case 2:\n    result = FUN_00112c1f(input1,input2,*(undefined8 *)(*(long *)(data + 0x20) + 8),0);\n    if (result != '\\0') {\n      result = FUN_0010e9a0(input2,*(undefined8 *)(data + 8),**(undefined4 **)(data + 0x20),\n                           *(undefined8 *)(*(undefined4 **)(data + 0x20) + 4));\n      return result;\n    }\n    break;\n  case 3:\n    ptr2 = *(undefined8 **)(data + 0x20);\n    index = *(int *)(data + 0x18);\n    result = *(undefined8 *)(data + 8);\n    result = FUN_00112502(input1,input2,*(undefined8 *)(ptr2[2] + 0x18));\n    if (((result != '\\0') && (result = FUN_00112c1f(input1,input2,*ptr2,0), result != '\\0')) &&\n       (result = FUN_0010eafe(input2,result,index == 2), result != '\\0')) {\n      for (ptr1 = (undefined8 *)ptr2[1]; ptr1 != (undefined8 *)0x0;\n          ptr1 = (undefined8 *)*ptr1) {\n        result = FUN_00112c1f(input1,input2,ptr1[2],0);\n        if (result == '\\0') {\n          return 0;\n        }\n        result = FUN_0010ebb0(input2,ptr1[1],*(undefined4 *)(ptr1 + 3));\n        if (result == '\\0') {\n          return 0;\n        }\n      }\n      ptr2 = (undefined8 *)ptr2[2];\n      while( true ) {\n        if (ptr2 == (undefined8 *)0x0) {\n          result = FUN_00108f05(input2);\n          return result;\n        }\n        result = FUN_00113a4d(input1,input2,ptr2);\n        if (result == '\\0') break;\n        ptr2 = (undefined8 *)*ptr2;\n      }\n    }\n    break;\n  case 4:\n    result = FUN_0010e842(input2,*(undefined8 *)(data + 8),*(undefined8 *)(data + 0x20));\n    return result;\n  case 5:\n    result = FUN_0010e8a9(*(undefined8 *)(data + 0x20),input2,*(undefined8 *)(data + 8));\n    return result;\n  case 6:\n    result = FUN_00112c1f(input1,input2,**(undefined8 **)(data + 0x20),0);\n    if (result != '\\0') {\n      result = FUN_0010e918(input2,*(undefined8 *)(data + 8),\n                           *(undefined8 *)(*(long *)(data + 0x20) + 8));\n      return result;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_001135a5",
            "entrypoint": "0x001135a5",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001135a5": "process_data_001135a5",
                "cVar2": "result",
                "iVar1": "index",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "data",
                "puVar4": "ptr1",
                "puVar5": "ptr2",
                "uVar3": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0011378f": {
            "additional_data": {
                "FUN_0010e2f0": {
                    "check_func_5": 1,
                    "initialize_bfd_hash_table": 1
                },
                "FUN_0010e439": {
                    "check_func_2": 1,
                    "process_data": 1
                },
                "FUN_00112502": {
                    "check_func_1": 1,
                    "check_result": 1
                },
                "FUN_001135a5": {
                    "check_data": 1,
                    "check_func_4": 1
                },
                "FUN_0011378f": {
                    "analyze_binary": 1,
                    "decompiled_function": 1,
                    "extract_data": 1,
                    "extract_file_information": 1,
                    "extract_function_data": 2,
                    "parse_binary": 1,
                    "process_binary_function": 1
                },
                "FUN_00119ed0": {
                    "print_error_message": 1,
                    "print_error_msg": 1
                },
                "__dest": {
                    "copy_dest": 1,
                    "dest": 3,
                    "dest_array": 1,
                    "dest_buffer": 1,
                    "dest_ptr": 3,
                    "dest_string": 1,
                    "destination": 6,
                    "destination_buffer": 1,
                    "destination_pointer": 1,
                    "destination_string": 8,
                    "destination_variable": 1,
                    "string_dest": 1,
                    "temp_dest": 1,
                    "temp_var10": 1
                },
                "auVar1": {
                    "aux_var1": 1,
                    "auxiliary_var": 1,
                    "auxiliary_variable": 1,
                    "auxiliary_variable1": 1,
                    "temp1": 1,
                    "temp_a": 1,
                    "temp_array": 7,
                    "temp_buffer": 3,
                    "temp_var": 2,
                    "temp_var1": 3,
                    "temp_variable1": 1,
                    "temp_variable_1": 1,
                    "temporary_buffer_1": 1,
                    "temporary_variable_1": 1,
                    "temporary_variable_one": 1,
                    "tmp_variable": 1
                },
                "bVar12": {
                    "bit_flag": 1,
                    "boolean_var": 1,
                    "boolean_variable": 2,
                    "byte_check": 1,
                    "byte_result": 1,
                    "byte_value": 1,
                    "byte_var": 7,
                    "byte_var12": 1,
                    "byte_variable": 1,
                    "flag": 6,
                    "flag2": 1,
                    "temp_byte": 1,
                    "temp_var12": 1,
                    "temp_var13": 1,
                    "temp_variable_7": 1,
                    "zero": 1
                },
                "bfd_errmsg": {
                    "get_bfd_error_message": 1,
                    "get_bfd_error_msg": 1
                },
                "bfd_get_error": {
                    "get_bfd_error": 2
                },
                "bfd_hash_table_init": {
                    "init_bfd_hash_table": 1,
                    "initialize_bfd_hash_table": 1
                },
                "cVar2": {
                    "char_check": 1,
                    "char_result": 1,
                    "char_var": 6,
                    "char_variable": 3,
                    "character_variable": 1,
                    "flag": 4,
                    "is_success": 1,
                    "result": 1,
                    "result_flag": 1,
                    "status": 5,
                    "temp_var2": 2,
                    "temp_variable_2": 1,
                    "temporary_variable_two": 1
                },
                "lVar7": {
                    "index": 3,
                    "long_result": 1,
                    "long_var": 1,
                    "long_var7": 1,
                    "long_variable": 1,
                    "loop_counter": 10,
                    "loop_var": 5,
                    "loop_variable": 3,
                    "loop_variable_one": 1,
                    "temp_var7": 2,
                    "temp_variable_6": 1
                },
                "local_1e8": {
                    "array": 1,
                    "array1": 4,
                    "array_1": 1,
                    "array_ptr": 1,
                    "array_variable": 1,
                    "hash_table3": 1,
                    "int_array": 1,
                    "local_array": 1,
                    "local_array2": 2,
                    "local_array3": 2,
                    "local_array_2": 2,
                    "local_array_three": 1,
                    "local_array_var3": 1,
                    "local_buffer_2": 1,
                    "local_var1e8": 1,
                    "local_variable_3": 1,
                    "local_variable_8": 1,
                    "result_array2": 1,
                    "results_array": 1,
                    "temp9": 1,
                    "temp_array_3": 1,
                    "temp_buffer3": 1,
                    "var_array": 1,
                    "variable_array": 1
                },
                "local_1f0": {
                    "auxiliary_variable8": 1,
                    "int_var_11": 1,
                    "local_long4": 2,
                    "local_long_4": 1,
                    "local_var1f0": 1,
                    "local_var4": 2,
                    "local_var7": 1,
                    "local_var_7": 1,
                    "local_var_8": 1,
                    "local_variable_7": 2,
                    "local_variable_five": 1,
                    "temp_param_3": 1,
                    "temp_value2": 1,
                    "temp_var19": 1,
                    "temp_variable7": 1,
                    "temp_variable_14": 1,
                    "value1": 1,
                    "value7": 1,
                    "var7": 5,
                    "var8": 1,
                    "variable3": 1,
                    "variable4": 1,
                    "variable_6": 1
                },
                "local_1f8": {
                    "auxiliary_variable7": 1,
                    "flag4": 1,
                    "int_var_12": 1,
                    "local_long3": 2,
                    "local_long_3": 1,
                    "local_var1f8": 1,
                    "local_var3": 2,
                    "local_var6": 1,
                    "local_var_6": 1,
                    "local_var_7": 1,
                    "local_variable_6": 2,
                    "local_variable_four": 1,
                    "temp_param_2": 1,
                    "temp_value1": 1,
                    "temp_var18": 1,
                    "temp_variable6": 1,
                    "temp_variable_13": 1,
                    "value6": 1,
                    "var6": 5,
                    "var7": 1,
                    "variable2": 1,
                    "variable3": 1,
                    "variable_5": 1
                },
                "local_220": {
                    "buffer": 2,
                    "buffer2": 1,
                    "hash_buffer": 1,
                    "hash_table1": 4,
                    "hash_table2": 1,
                    "local_array1": 1,
                    "local_array2": 2,
                    "local_array_1": 2,
                    "local_array_two": 1,
                    "local_array_var2": 1,
                    "local_buffer_1": 2,
                    "local_string": 1,
                    "local_var220": 1,
                    "local_var5": 1,
                    "local_variable_2": 1,
                    "second_buffer": 1,
                    "temp8": 1,
                    "temp_array3": 1,
                    "temp_array_2": 1,
                    "temp_buffer2": 2,
                    "temp_c": 1,
                    "tmp_buffer": 1
                },
                "local_228": {
                    "auxiliary_variable6": 1,
                    "flag_variable": 1,
                    "int_var_3": 1,
                    "local_long2": 2,
                    "local_long_2": 1,
                    "local_pointer": 1,
                    "local_var2": 2,
                    "local_var228": 1,
                    "local_var4": 1,
                    "local_var_5": 1,
                    "local_var_6": 1,
                    "local_variable_5": 2,
                    "local_variable_three": 1,
                    "output_data_copy": 1,
                    "temp_param_1": 1,
                    "temp_var17": 1,
                    "temp_variable_12": 1,
                    "value": 1,
                    "value5": 1,
                    "var5": 5,
                    "var6": 1,
                    "variable1": 2
                },
                "local_238": {
                    "another_temp_array": 1,
                    "array": 1,
                    "buffer": 2,
                    "hash_table": 3,
                    "hash_table_variable": 1,
                    "local_array": 2,
                    "local_array1": 1,
                    "local_array_one": 1,
                    "local_array_var": 1,
                    "local_var238": 1,
                    "local_var3": 1,
                    "local_var_5": 1,
                    "local_variable2": 1,
                    "local_variable_1": 1,
                    "local_variable_4": 1,
                    "memory_block_copy": 1,
                    "temp7": 1,
                    "temp_array2": 1,
                    "temp_array_1": 1,
                    "temp_array_2": 1,
                    "temp_b": 1,
                    "temp_buffer": 1,
                    "temp_buffer1": 1,
                    "var5": 1,
                    "variable2": 1
                },
                "local_248": {
                    "flag1": 1,
                    "hash_param_1": 1,
                    "input3": 1,
                    "int_var_1": 1,
                    "local_hash_value": 1,
                    "local_int1": 1,
                    "local_result_1": 1,
                    "local_var": 1,
                    "local_var1": 1,
                    "local_var2": 1,
                    "local_var248": 1,
                    "local_var_1": 2,
                    "local_variable1": 1,
                    "local_variable_1": 1,
                    "local_variable_3": 1,
                    "local_variable_two": 1,
                    "start_offset": 1,
                    "temp_var13": 1,
                    "temp_variable2": 1,
                    "temp_variable_8": 1,
                    "value1": 1,
                    "var1": 7,
                    "variable_1": 1
                },
                "local_250": {
                    "alloc_size": 1,
                    "allocated_buffer": 1,
                    "allocated_memory": 3,
                    "allocated_memory_size": 2,
                    "allocated_size": 1,
                    "buffer": 1,
                    "buffer_ptr": 1,
                    "buffer_size": 4,
                    "input2": 1,
                    "local_data_size": 1,
                    "local_long": 1,
                    "local_long1": 2,
                    "local_long_1": 1,
                    "local_memory": 1,
                    "local_output_pointer_1": 1,
                    "local_size": 1,
                    "local_var1": 1,
                    "local_var250": 1,
                    "local_variable_2": 1,
                    "local_variable_one": 1,
                    "malloced_array": 1,
                    "memory_block": 1,
                    "memory_ptr": 1
                },
                "local_258": {
                    "function_data": 1,
                    "input": 1,
                    "input1": 1,
                    "input_array_ptr": 1,
                    "input_data": 2,
                    "input_data_copy": 1,
                    "input_data_ptr": 1,
                    "input_file_path": 1,
                    "input_files": 1,
                    "input_output_params": 1,
                    "input_param_ptr": 1,
                    "input_pointer": 1,
                    "input_ptr": 2,
                    "local_input_data": 1,
                    "local_input_pointer": 1,
                    "local_param": 1,
                    "local_pointer": 1,
                    "local_pointer1": 2,
                    "local_pointer_1": 1,
                    "local_pointer_one": 1,
                    "local_ptr1": 2,
                    "local_var258": 1,
                    "local_variable_1": 1,
                    "param1": 1,
                    "ptr1_copy": 1,
                    "ptr_9": 1
                },
                "local_58": {
                    "auxiliary_variable13": 1,
                    "int_var_7": 1,
                    "local_int6": 1,
                    "local_temp8": 1,
                    "local_var12": 1,
                    "local_var58": 1,
                    "local_var7": 2,
                    "local_var_10": 1,
                    "local_var_12": 1,
                    "local_variable5": 1,
                    "local_variable_10": 1,
                    "local_variable_12": 1,
                    "local_variable_7": 1,
                    "local_variable_eight": 1,
                    "temp15": 1,
                    "temp_param_4": 1,
                    "temp_value3": 1,
                    "temp_var23": 1,
                    "temp_variable12": 1,
                    "temp_variable_18": 1,
                    "value10": 1,
                    "var11": 2,
                    "var12": 3,
                    "var13": 1,
                    "variable9": 1,
                    "variable_10": 1
                },
                "local_60": {
                    "auxiliary_variable12": 1,
                    "hash_param_6": 1,
                    "int_var_6": 1,
                    "local_int5": 1,
                    "local_result_6": 1,
                    "local_temp7": 1,
                    "local_var11": 1,
                    "local_var6": 2,
                    "local_var60": 1,
                    "local_var_11": 1,
                    "local_var_9": 1,
                    "local_variable4": 1,
                    "local_variable_11": 1,
                    "local_variable_9": 1,
                    "local_variable_seven": 1,
                    "temp14": 1,
                    "temp_var22": 1,
                    "temp_variable11": 1,
                    "temp_variable_17": 1,
                    "value3": 1,
                    "value9": 1,
                    "var10": 2,
                    "var11": 3,
                    "var12": 1,
                    "variable8": 1,
                    "variable_9": 1
                },
                "local_68": {
                    "auxiliary_variable11": 1,
                    "hash_param_5": 1,
                    "int_var_5": 1,
                    "local_long6": 1,
                    "local_temp6": 1,
                    "local_var10": 1,
                    "local_var5": 2,
                    "local_var68": 1,
                    "local_var_10": 1,
                    "local_var_8": 1,
                    "local_variable3": 1,
                    "local_variable_10": 1,
                    "local_variable_6": 1,
                    "local_variable_8": 1,
                    "local_variable_six": 1,
                    "temp13": 1,
                    "temp_var21": 1,
                    "temp_variable10": 1,
                    "temp_variable_16": 1,
                    "value2": 1,
                    "value8": 1,
                    "var10": 3,
                    "var11": 1,
                    "var9": 2,
                    "variable7": 1,
                    "variable_8": 1
                },
                "local_78": {
                    "array_2": 1,
                    "auxiliary_variable9": 1,
                    "counter": 1,
                    "flag_buffer_variable": 1,
                    "fourth_buffer": 1,
                    "local_array4": 1,
                    "local_array5": 2,
                    "local_array_4": 2,
                    "local_array_five": 1,
                    "local_array_var5": 1,
                    "local_buffer_3": 1,
                    "local_buffer_4": 1,
                    "local_temp4": 1,
                    "local_var78": 1,
                    "local_var9": 1,
                    "local_variable_5": 1,
                    "max_value": 1,
                    "random_buffer": 1,
                    "temp11": 1,
                    "temp_array_5": 1,
                    "temp_buffer5": 1,
                    "temp_value": 1,
                    "temp_variable8": 1,
                    "var8": 3,
                    "variable5": 1
                },
                "local_a0": {
                    "array2": 1,
                    "buffer3": 1,
                    "buffer_ptr": 1,
                    "buffer_variable": 1,
                    "hash_buffer_2": 1,
                    "hash_table2": 3,
                    "hash_table4": 1,
                    "local_array3": 1,
                    "local_array4": 2,
                    "local_array_3": 2,
                    "local_array_four": 1,
                    "local_array_var4": 1,
                    "local_buffer_2": 1,
                    "local_buffer_3": 1,
                    "local_string2": 1,
                    "local_var8": 1,
                    "local_vara0": 1,
                    "local_variable_4": 1,
                    "random_buffer_2": 1,
                    "temp10": 1,
                    "temp_array_4": 1,
                    "temp_buffer3": 1,
                    "temp_buffer4": 1,
                    "temp_d": 1,
                    "third_buffer": 1,
                    "var9": 1
                },
                "output1": {
                    "output_files": 1
                },
                "output2": {
                    "statistics": 1
                },
                "output3": {
                    "memory_usage": 1
                },
                "output4": {
                    "hash_table_init": 1
                },
                "output5": {
                    "hash_table_init2": 1
                },
                "output6": {
                    "output_results": 1
                },
                "param_1": {
                    "config_ptr": 1,
                    "file_information_ptr": 1,
                    "function_data": 1,
                    "input1": 1,
                    "input_1": 1,
                    "input_array": 2,
                    "input_buffer": 1,
                    "input_data": 5,
                    "input_one": 1,
                    "input_param": 2,
                    "input_param1": 1,
                    "input_pointer1": 1,
                    "input_pointer_1": 1,
                    "input_ptr": 2,
                    "output1": 2,
                    "output_file": 1,
                    "output_ptr": 2,
                    "param_input": 1,
                    "param_pointer_1": 1,
                    "param_pointers": 1,
                    "ptr1": 1,
                    "result": 1
                },
                "param_2": {
                    "counter": 1,
                    "counter_ptr": 1,
                    "input2": 1,
                    "input_2": 1,
                    "input_file": 1,
                    "input_param2": 1,
                    "input_pointer2": 1,
                    "input_pointer_2": 1,
                    "input_two": 1,
                    "output2": 2,
                    "output_array": 2,
                    "output_buffer": 1,
                    "output_data": 6,
                    "output_param": 3,
                    "output_ptr": 3,
                    "param_output": 1,
                    "param_pointer_2": 1,
                    "ptr2": 1,
                    "statistics_ptr": 1,
                    "stats_ptr": 1
                },
                "param_3": {
                    "allocated_memory": 1,
                    "array_size": 1,
                    "buffer": 1,
                    "buffer_ptr": 1,
                    "buffer_size": 1,
                    "data_buffer_param": 1,
                    "data_size": 1,
                    "dynamic_memory": 1,
                    "length_param": 1,
                    "mem_address": 1,
                    "memory_address": 1,
                    "memory_buffer": 1,
                    "memory_param": 1,
                    "output": 1,
                    "output1": 1,
                    "output3": 2,
                    "output_1": 1,
                    "output_file_size_ptr": 1,
                    "output_param": 1,
                    "output_param1": 1,
                    "output_pointer1": 1,
                    "output_pointer_1": 1,
                    "param_length": 1,
                    "param_pointer_3": 1,
                    "ptr3": 1,
                    "result_ptr": 2,
                    "size_array": 1,
                    "size_ptr": 1,
                    "string_lengths": 1
                },
                "param_4": {
                    "auxiliary_data": 1,
                    "buffer1": 1,
                    "buffer_param": 1,
                    "hash_table_ptr": 1,
                    "hash_value": 1,
                    "output2": 1,
                    "output4": 2,
                    "output_2": 1,
                    "output_blocks_ptr": 1,
                    "output_param2": 1,
                    "output_param_two": 1,
                    "output_pointer2": 1,
                    "output_pointer_2": 1,
                    "output_string": 1,
                    "param_4": 2,
                    "param_a": 1,
                    "param_pointer_4": 1,
                    "param_ptr": 1,
                    "param_var4": 1,
                    "ptr1": 2,
                    "ptr4": 1,
                    "ptr_1": 1,
                    "result_param": 1,
                    "string_param_1": 1,
                    "temp_array": 1,
                    "temp_array1": 1,
                    "temp_buffer": 1,
                    "temp_ptr": 1
                },
                "param_5": {
                    "buffer2": 1,
                    "input_string": 1,
                    "output3": 1,
                    "output5": 2,
                    "output_3": 1,
                    "output_files_ptr": 1,
                    "output_param3": 1,
                    "output_param_three": 1,
                    "output_pointer3": 1,
                    "output_pointer_3": 1,
                    "param_5": 2,
                    "param_b": 1,
                    "param_pointer_5": 1,
                    "param_var5": 1,
                    "ptr2": 2,
                    "ptr5": 1,
                    "ptr_2": 1,
                    "str_array_ptr": 1,
                    "string_array": 2,
                    "string_data": 1,
                    "string_param": 2,
                    "string_param_2": 1,
                    "strings_buffer": 1,
                    "strings_ptr": 2,
                    "temp_array2": 1
                },
                "param_6": {
                    "buffer3": 1,
                    "output2_ptr": 1,
                    "output4": 1,
                    "output6": 2,
                    "output_4": 1,
                    "output_param4": 1,
                    "output_param_2": 1,
                    "output_param_four": 1,
                    "output_pointer4": 1,
                    "output_pointer_4": 1,
                    "output_result_ptr": 1,
                    "param_6": 2,
                    "param_c": 1,
                    "param_pointer_6": 1,
                    "param_var6": 1,
                    "pointer_data": 1,
                    "pointer_param": 1,
                    "ptr3": 2,
                    "ptr6": 1,
                    "ptr_3": 1,
                    "result": 1,
                    "result_array": 2,
                    "result_buffer": 1,
                    "result_param": 1,
                    "result_ptr": 1,
                    "temp2_ptr": 1,
                    "temp_string": 1
                },
                "parse_binary": {
                    "improved_parse_binary": 1
                },
                "plVar11": {
                    "current_list": 1,
                    "data_ptr": 1,
                    "linked_list_node": 1,
                    "list_ptr": 1,
                    "long_array_pointer": 1,
                    "long_pointer": 1,
                    "long_ptr": 1,
                    "next_pointer": 1,
                    "pointer_list": 2,
                    "pointer_to_long_var": 1,
                    "pointer_var5": 1,
                    "pointer_variable5": 1,
                    "pointer_variable_5": 2,
                    "pointer_variable_five": 1,
                    "ptr11": 1,
                    "ptr_8": 1,
                    "ptr_long": 1,
                    "ptr_loop_3": 1,
                    "ptr_var11": 1,
                    "ptr_var5": 1,
                    "temp6": 1,
                    "temp_long_pointer": 1,
                    "temp_pointer3": 1,
                    "temp_pointer5": 1,
                    "temp_pointer_5": 1,
                    "temp_ptr_5": 1,
                    "temp_var11": 1,
                    "temp_var12": 1
                },
                "puVar10": {
                    "auxiliary_variable3": 1,
                    "current_node": 1,
                    "linked_list": 1,
                    "pointer_array_2": 1,
                    "pointer_var4": 1,
                    "pointer_variable4": 1,
                    "pointer_variable_4": 2,
                    "pointer_variable_four": 1,
                    "ptr10": 1,
                    "ptr_7": 1,
                    "ptr_loop_2": 1,
                    "ptr_value": 1,
                    "ptr_var10": 1,
                    "ptr_var4": 1,
                    "temp5": 1,
                    "temp_pointer2": 2,
                    "temp_pointer4": 1,
                    "temp_pointer_4": 1,
                    "temp_ptr3": 2,
                    "temp_ptr_4": 1,
                    "temp_var10": 1,
                    "temp_var11": 1,
                    "tmp_pointer_2": 1
                },
                "puVar5": {
                    "allocated_memory": 3,
                    "dest_ptr": 2,
                    "malloced_pointer": 1,
                    "memory_buffer": 1,
                    "new_pointer": 2,
                    "pointer_var": 2,
                    "pointer_variable1": 1,
                    "pointer_variable_1": 2,
                    "pointer_variable_one": 1,
                    "ptr": 1,
                    "ptr5": 1,
                    "ptr_4": 1,
                    "ptr_dest": 1,
                    "ptr_var1": 1,
                    "ptr_var5": 1,
                    "str_buffer": 1,
                    "temp2": 1,
                    "temp_pointer": 1,
                    "temp_pointer1": 1,
                    "temp_pointer_1": 1,
                    "temp_ptr": 2,
                    "temp_var5": 2
                },
                "puVar8": {
                    "auxiliary_variable2": 1,
                    "loop_pointer": 3,
                    "loop_variable": 1,
                    "node_ptr": 1,
                    "pointer_var2": 2,
                    "pointer_variable": 1,
                    "pointer_variable2": 1,
                    "pointer_variable_2": 2,
                    "pointer_variable_two": 1,
                    "ptr8": 1,
                    "ptr_5": 1,
                    "ptr_data": 1,
                    "ptr_loop": 1,
                    "ptr_var2": 1,
                    "ptr_var8": 1,
                    "temp3": 1,
                    "temp_pointer": 1,
                    "temp_pointer2": 1,
                    "temp_pointer_2": 1,
                    "temp_ptr": 1,
                    "temp_ptr2": 2,
                    "temp_ptr_2": 1,
                    "temp_var8": 2,
                    "tmp_pointer": 1
                },
                "puVar9": {
                    "array_pointer": 2,
                    "array_ptr": 1,
                    "initial_array": 1,
                    "list_ptr": 1,
                    "long_array_pointer": 1,
                    "pointer_array": 2,
                    "pointer_var3": 1,
                    "pointer_variable3": 1,
                    "pointer_variable_3": 2,
                    "pointer_variable_three": 1,
                    "ptr9": 1,
                    "ptr_6": 1,
                    "ptr_array": 2,
                    "ptr_var3": 1,
                    "ptr_var9": 1,
                    "table_ptr": 1,
                    "temp4": 1,
                    "temp_array_ptr": 1,
                    "temp_pointer": 1,
                    "temp_pointer3": 1,
                    "temp_pointer_3": 1,
                    "temp_pointer_array": 1,
                    "temp_ptr_3": 1,
                    "temp_var9": 2
                },
                "sVar6": {
                    "length": 3,
                    "length_var": 1,
                    "size_result": 1,
                    "size_var": 2,
                    "size_var6": 1,
                    "size_variable": 1,
                    "str_length": 3,
                    "string_len": 1,
                    "string_length": 12,
                    "strlen_result": 1,
                    "temp_var6": 2,
                    "temp_variable_5": 1
                },
                "strcpy": {
                    "copy_string": 2
                },
                "strlen": {
                    "calculate_string_length": 1,
                    "get_string_length": 1
                },
                "thunk_FUN_0010e439": {
                    "check_func_3": 1,
                    "thunk_process_data": 1
                },
                "uStack_23c": {
                    "auxiliary_variable5": 1,
                    "constant2": 1,
                    "flag3": 1,
                    "hash_param_3": 1,
                    "input6": 1,
                    "local_int4": 1,
                    "local_result_4": 1,
                    "local_temp3": 1,
                    "local_var_4": 2,
                    "local_variable_4": 1,
                    "stack_var3": 1,
                    "stack_variable3": 1,
                    "stack_variable_three": 1,
                    "temp_stack_3": 1,
                    "temp_var16": 1,
                    "temp_variable5": 1,
                    "temp_variable_11": 1,
                    "u_stack_var23c": 1,
                    "u_stack_var3": 2,
                    "value4": 1,
                    "var4": 6,
                    "variable_4": 1
                },
                "uStack_240": {
                    "buffer_size": 1,
                    "constant1": 1,
                    "hash_size": 1,
                    "input5": 1,
                    "local_int3": 1,
                    "local_result_3": 1,
                    "local_temp2": 1,
                    "local_var_3": 2,
                    "local_variable_3": 1,
                    "maximum_size": 1,
                    "size": 1,
                    "stack_var2": 1,
                    "stack_variable2": 1,
                    "stack_variable_two": 1,
                    "temp_stack_2": 1,
                    "temp_var15": 1,
                    "temp_variable4": 1,
                    "temp_variable_10": 1,
                    "u_stack_var2": 2,
                    "u_stack_var240": 1,
                    "value3": 1,
                    "var3": 6,
                    "variable_3": 1
                },
                "uStack_244": {
                    "auxiliary_variable4": 1,
                    "flag2": 1,
                    "hash_param_2": 1,
                    "input4": 1,
                    "int_var_2": 1,
                    "local_int2": 1,
                    "local_result_2": 1,
                    "local_temp1": 1,
                    "local_var_2": 2,
                    "local_variable_2": 1,
                    "stack_var1": 1,
                    "stack_variable1": 1,
                    "stack_variable_one": 1,
                    "temp_stack_1": 1,
                    "temp_var14": 1,
                    "temp_variable3": 1,
                    "temp_variable_9": 1,
                    "u_stack_var1": 2,
                    "u_stack_var244": 1,
                    "value2": 1,
                    "var2": 7,
                    "variable_2": 1
                },
                "uStack_4c": {
                    "auxiliary_variable16": 1,
                    "int_var_10": 1,
                    "local_int9": 1,
                    "local_result_9": 1,
                    "local_temp11": 1,
                    "local_var_13": 1,
                    "local_var_15": 1,
                    "local_variable_15": 1,
                    "stack_var7": 1,
                    "stack_variable7": 1,
                    "stack_variable_seven": 1,
                    "temp18": 1,
                    "temp_param_7": 1,
                    "temp_stack_7": 1,
                    "temp_value6": 1,
                    "temp_var26": 1,
                    "temp_variable15": 1,
                    "temp_variable_21": 1,
                    "u_stack_var4c": 1,
                    "u_stack_var7": 2,
                    "value13": 1,
                    "var14": 2,
                    "var15": 3,
                    "var16": 1,
                    "variable12": 1,
                    "variable_13": 1
                },
                "uStack_50": {
                    "auxiliary_variable15": 1,
                    "int_var_9": 1,
                    "local_int8": 1,
                    "local_result_8": 1,
                    "local_temp10": 1,
                    "local_var_12": 1,
                    "local_var_14": 1,
                    "local_variable_14": 1,
                    "stack_var6": 1,
                    "stack_variable6": 1,
                    "stack_variable_six": 1,
                    "temp17": 1,
                    "temp_param_6": 1,
                    "temp_stack_6": 1,
                    "temp_value5": 1,
                    "temp_var25": 1,
                    "temp_variable14": 1,
                    "temp_variable_20": 1,
                    "u_stack_var50": 1,
                    "u_stack_var6": 2,
                    "value12": 1,
                    "var13": 2,
                    "var14": 3,
                    "var15": 1,
                    "variable11": 1,
                    "variable_12": 1
                },
                "uStack_54": {
                    "auxiliary_variable14": 1,
                    "int_var_8": 1,
                    "local_int7": 1,
                    "local_result_7": 1,
                    "local_temp9": 1,
                    "local_var_11": 1,
                    "local_var_13": 1,
                    "local_variable_13": 1,
                    "stack_var5": 1,
                    "stack_variable5": 1,
                    "stack_variable_five": 1,
                    "temp16": 1,
                    "temp_param_5": 1,
                    "temp_stack_5": 1,
                    "temp_value4": 1,
                    "temp_var24": 1,
                    "temp_variable13": 1,
                    "temp_variable_19": 1,
                    "u_stack_var5": 2,
                    "u_stack_var54": 1,
                    "value11": 1,
                    "var12": 2,
                    "var13": 3,
                    "var14": 1,
                    "variable10": 1,
                    "variable_11": 1
                },
                "uStack_70": {
                    "auxiliary_variable10": 1,
                    "hash_param_4": 1,
                    "int_ptr": 1,
                    "local_long5": 1,
                    "local_result_5": 1,
                    "local_temp5": 1,
                    "local_var_9": 1,
                    "local_variable_9": 1,
                    "stack_var4": 1,
                    "stack_variable4": 1,
                    "stack_variable_four": 1,
                    "temp1": 1,
                    "temp12": 1,
                    "temp_stack_4": 1,
                    "temp_value": 1,
                    "temp_value2": 1,
                    "temp_var20": 1,
                    "temp_variable9": 1,
                    "temp_variable_15": 1,
                    "u_stack_var4": 2,
                    "u_stack_var70": 1,
                    "var10": 1,
                    "var8": 2,
                    "var9": 3,
                    "variable6": 1,
                    "variable_7": 1
                },
                "uVar3": {
                    "error": 1,
                    "error_code": 12,
                    "error_var": 2,
                    "result": 2,
                    "result_var": 2,
                    "result_variable": 1,
                    "return_value": 4,
                    "temp_var3": 2,
                    "temp_variable_3": 1,
                    "temporary_variable_three": 1,
                    "undefined_result_1": 1
                },
                "uVar4": {
                    "aux_result_var": 1,
                    "aux_return_value": 1,
                    "auxiliary_variable2": 1,
                    "bfd_error_message": 1,
                    "errmsg_var": 2,
                    "error_message": 14,
                    "error_msg": 3,
                    "temp_var2": 1,
                    "temp_var4": 2,
                    "temp_variable_4": 1,
                    "temporary_variable_four": 1,
                    "undefined_result_2": 1
                },
                "unique0x100000e9": {
                    "constant": 1,
                    "magic_number_1": 1,
                    "unique_var_1": 1,
                    "unique_var_e9": 1,
                    "unique_variable_one": 1,
                    "var16": 2
                },
                "unique0x100000ed": {
                    "constant": 1,
                    "magic_number_2": 1,
                    "unique_var_2": 1,
                    "unique_var_ed": 1,
                    "unique_variable_two": 1,
                    "var17": 2
                },
                "xmalloc": {
                    "allocate_memory": 2
                }
            },
            "called": [
                "strlen",
                "bfd_get_error",
                "FUN_00112502",
                "FUN_0010e439",
                "strcpy",
                "FUN_0010bb52",
                "thunk_FUN_0010e439",
                "FUN_001135a5",
                "bfd_errmsg",
                "FUN_00119ed0",
                "FUN_0010e2f0",
                "bfd_hash_table_init",
                "xmalloc"
            ],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\nundefined4\nextract_function_data_0011378f(undefined8 *input_data,undefined8 *output_data,long *output3,undefined8 *output4,\n            undefined8 *strings_ptr,undefined8 *output6)\n\n{\n  undefined temp_array [16];\n  char char_var;\n  undefined4 error_code;\n  undefined8 error_message;\n  undefined *allocated_memory;\n  size_t string_length;\n  long loop_counter;\n  undefined8 *loop_pointer;\n  undefined4 *temp_var9;\n  char *destination_string;\n  undefined8 *temp_ptr3;\n  long *pointer_list;\n  byte byte_var;\n  undefined8 *input_ptr;\n  long buffer_size;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  undefined hash_table [16];\n  undefined8 var5;\n  undefined hash_table1 [40];\n  undefined8 var6;\n  undefined8 var7;\n  undefined4 array1 [82];\n  undefined hash_table2 [40];\n  undefined var8 [8];\n  undefined8 var9;\n  undefined8 var10;\n  undefined4 var11;\n  undefined4 var12;\n  undefined4 var13;\n  undefined4 var14;\n  undefined4 var15;\n  \n  byte_var = 0;\n  var1 = 0;\n  var2 = 0;\n  var3 = 500;\n  var4 = 0;\n  input_ptr = input_data;\n  buffer_size = xmalloc(500);\n  var5 = 1;\n  hash_table = ZEXT816(0);\n  char_var = bfd_hash_table_init(hash_table1,FUN_0010bb52,0x30);\n  if ((char_var == '\\0') || (char_var = bfd_hash_table_init(hash_table2,FUN_0010bb52,0x30), char_var == '\\0')) {\n    error_code = bfd_get_error();\n    error_message = bfd_errmsg(error_code);\n    FUN_00119ed0(\"bfd_hash_table_init_failed: %s\",error_message);\n  }\n  else {\n    var6 = 0;\n    var16 = 0xffffffff;\n    var8 = (undefined  [8])0xffffffffffffffff;\n    var17 = 0xffffffff;\n    temp_var9 = array1;\n    for (loop_counter = 0x52; loop_counter != 0; loop_counter = loop_counter + -1) {\n      *temp_var9 = 0;\n      temp_var9 = temp_var9 + (ulong)byte_var * -2 + 1;\n    }\n    var10 = 0;\n    var11 = 0;\n    var7 = 1;\n    var12 = 0;\n    var13 = 0;\n    var14 = 0xffffffff;\n    var15 = 0xffffffff;\n    char_var = FUN_0010e2f0(&input_ptr,0,0,0,0);\n    temp_array = _var8;\n    if (char_var != '\\0') {\n      var8._4_4_ = var2;\n      var8._0_4_ = var1;\n      var9 = temp_array._8_8_;\n      char_var = FUN_0010e2f0(&input_ptr,100,0,0,*input_data);\n      if (char_var != '\\0') {\n        *(int *)(output_data + 6) = *(int *)(output_data + 6) + 1;\n        output_data[10] = 0;\n        temp_ptr3 = (undefined8 *)*output_data;\n        *(undefined4 *)(output_data + 7) = *(undefined4 *)((long)output_data + 0x34);\n        for (; temp_ptr3 != (undefined8 *)0x0; temp_ptr3 = (undefined8 *)*temp_ptr3) {\n          output_data[8] = temp_ptr3[2];\n          *(undefined4 *)(output_data + 9) = 0;\n          char_var = thunk_FUN_0010e439(&input_ptr,*(undefined8 *)(temp_ptr3[1] + 8));\n          if (char_var == '\\0') {\n            return 0;\n          }\n          pointer_list = (long *)temp_ptr3[1];\n          if (pointer_list != (long *)0x0) {\n            while( true ) {\n              if ((undefined8 *)pointer_list[2] != (undefined8 *)0x0) {\n                for (loop_pointer = *(undefined8 **)(undefined8 *)pointer_list[2]; loop_pointer != (undefined8 *)0x0;\n                    loop_pointer = (undefined8 *)*loop_pointer) {\n                  char_var = FUN_001135a5(output_data,&input_ptr);\n                  if (char_var == '\\0') {\n                    return 0;\n                  }\n                }\n              }\n              pointer_list = (long *)*pointer_list;\n              if (pointer_list == (long *)0x0) break;\n              char_var = FUN_0010e439(&input_ptr,pointer_list[1]);\n              if (char_var == '\\0') {\n                return 0;\n              }\n            }\n          }\n          char_var = FUN_00112502(output_data,&input_ptr,0xffffffffffffffff);\n          if (char_var == '\\0') {\n            return 0;\n          }\n        }\n        if ((CONCAT44(var15,var14) == -1) &&\n           (error_code = FUN_0010e2f0(&input_ptr,100,0,var10,0), (char)error_code != '\\0')) {\n          (**(code **)(input_data[1] + 0x50))(var5,buffer_size + 8);\n          *output3 = buffer_size;\n          *output4 = CONCAT44(var2,var1);\n          *output6 = var5;\n          allocated_memory = (undefined *)xmalloc();\n          *allocated_memory = 0;\n          destination_string = allocated_memory + 1;\n          *strings_ptr = allocated_memory;\n          for (loop_counter = hash_table._0_8_; loop_counter != 0; loop_counter = *(long *)(loop_counter + 0x18)) {\n            strcpy(destination_string,*(char **)(loop_counter + 8));\n            string_length = strlen(destination_string);\n            destination_string = destination_string + string_length + 1;\n          }\n          return error_code;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "extract_function_data_0011378f",
            "entrypoint": "0x0011378f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0011378f": "extract_function_data_0011378f",
                "__dest": "destination_string",
                "auVar1": "temp_array",
                "bVar12": "byte_var",
                "bfd_errmsg": "get_bfd_error_message",
                "bfd_get_error": "get_bfd_error",
                "bfd_hash_table_init": "init_bfd_hash_table",
                "cVar2": "char_var",
                "lVar7": "loop_counter",
                "local_1e8": "array1",
                "local_1f0": "var7",
                "local_1f8": "var6",
                "local_220": "hash_table1",
                "local_228": "var5",
                "local_238": "hash_table",
                "local_248": "var1",
                "local_250": "buffer_size",
                "local_258": "input_ptr",
                "local_58": "var12",
                "local_60": "var11",
                "local_68": "var10",
                "local_78": "var8",
                "local_a0": "hash_table2",
                "param_1": "input_data",
                "param_2": "output_data",
                "param_3": "output3",
                "param_4": "output4",
                "param_5": "strings_ptr",
                "param_6": "output6",
                "plVar11": "pointer_list",
                "puVar10": "temp_ptr3",
                "puVar5": "allocated_memory",
                "puVar8": "loop_pointer",
                "puVar9": "temp_var9",
                "sVar6": "string_length",
                "strcpy": "copy_string",
                "strlen": "calculate_string_length",
                "uStack_23c": "var4",
                "uStack_240": "var3",
                "uStack_244": "var2",
                "uStack_4c": "var15",
                "uStack_50": "var14",
                "uStack_54": "var13",
                "uStack_70": "var9",
                "uVar3": "error_code",
                "uVar4": "error_message",
                "unique0x100000e9": "var16",
                "unique0x100000ed": "var17",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113a4d": {
            "additional_data": {
                "FUN_0010ec73": {
                    "check_condition2": 1,
                    "check_condition_2": 1,
                    "perform_action": 1,
                    "validate_data": 1
                },
                "FUN_0010ed2c": {
                    "calculate_result": 1,
                    "compute_result": 1,
                    "perform_operation": 1,
                    "process_data": 1
                },
                "FUN_00112502": {
                    "check_condition": 3,
                    "check_condition1": 1
                },
                "FUN_001135a5": {
                    "check_condition3": 1,
                    "check_condition_3": 1,
                    "process_ptr": 1,
                    "validate_data": 1
                },
                "FUN_00113a4d": {
                    "check_and_process_data": 1,
                    "process_data": 11,
                    "reverse_extracted_binary": 1,
                    "traverse_function": 1
                },
                "auVar4": {
                    "array": 3,
                    "aux_data": 1,
                    "auxiliary": 1,
                    "auxiliary_array": 1,
                    "auxiliary_var": 1,
                    "auxiliary_variable": 2,
                    "output": 1,
                    "output_array": 1,
                    "result2": 1,
                    "result_array": 13,
                    "status": 1,
                    "temp_array": 2,
                    "temp_buffer": 1,
                    "var_array": 1
                },
                "cVar1": {
                    "check_result": 3,
                    "flag": 4,
                    "is_valid": 1,
                    "result": 22,
                    "result_flag": 1
                },
                "param_1": {
                    "arg1": 9,
                    "arg_1": 1,
                    "first_param": 1,
                    "function_param": 1,
                    "input1": 5,
                    "input_1": 3,
                    "input_param1": 2,
                    "input_param_1": 4,
                    "input_ptr": 1,
                    "param1": 1,
                    "param_1": 2
                },
                "param_2": {
                    "arg2": 9,
                    "arg_2": 1,
                    "data_param": 1,
                    "input2": 5,
                    "input_2": 3,
                    "input_param2": 2,
                    "input_param_2": 4,
                    "output_ptr": 1,
                    "param2": 1,
                    "param_2": 2,
                    "second_param": 1
                },
                "param_3": {
                    "address": 1,
                    "arg3": 4,
                    "arg_3": 1,
                    "data": 4,
                    "data1": 2,
                    "data_1": 2,
                    "data_param": 1,
                    "data_pointer": 1,
                    "data_ptr": 6,
                    "input_param_3": 4,
                    "offset": 1,
                    "param3": 1,
                    "param_3": 1,
                    "third_param": 1
                },
                "param_4": {
                    "arg4": 9,
                    "arg_4": 1,
                    "aux_ptr": 1,
                    "fourth_param": 1,
                    "input3": 1,
                    "input4": 1,
                    "input_3": 1,
                    "input_4": 1,
                    "input_param4": 1,
                    "input_param_4": 4,
                    "param4": 3,
                    "param_4": 3,
                    "param_ptr": 1,
                    "pointer_param": 1,
                    "temp1": 1
                },
                "param_5": {
                    "arg5": 9,
                    "arg_5": 1,
                    "fifth_param": 1,
                    "input4": 1,
                    "input5": 1,
                    "input_4": 1,
                    "input_5": 1,
                    "input_param5": 1,
                    "input_param_5": 4,
                    "param5": 3,
                    "param_5": 3,
                    "param_ptr2": 1,
                    "result_param": 1,
                    "temp2": 1,
                    "temp_ptr": 1
                },
                "puVar3": {
                    "curr_pointer": 1,
                    "current_node": 1,
                    "iterator": 1,
                    "iterator_ptr": 1,
                    "list_ptr": 1,
                    "pointer": 4,
                    "pointer_var": 1,
                    "ptr": 20,
                    "ptr_var": 1
                },
                "uVar2": {
                    "output": 4,
                    "output_var": 1,
                    "result": 6,
                    "result_value": 1,
                    "return_value": 18,
                    "value": 1
                }
            },
            "called": [
                "FUN_0010ec73",
                "FUN_001135a5",
                "FUN_0010ed2c",
                "FUN_00113a4d",
                "FUN_00112502"
            ],
            "calling": [
                "FUN_001135a5",
                "FUN_00113a4d"
            ],
            "code": "\nundefined8\ncheck_and_process_data_00113a4d(undefined8 arg1,undefined8 arg2,long data_ptr,undefined8 arg4,\n            undefined8 arg5)\n\n{\n  char result;\n  undefined8 return_value;\n  undefined8 *ptr;\n  undefined result_array [16];\n  \n  result = FUN_00112502(arg1,arg2,*(undefined8 *)(data_ptr + 0x18));\n  if ((result != '\\0') &&\n     (((*(long *)(data_ptr + 0x28) == 0 && (*(long *)(data_ptr + 8) != 0)) ||\n      (result = FUN_0010ec73(arg2,*(undefined8 *)(data_ptr + 0x18)), result != '\\0')))) {\n    if (*(undefined8 **)(data_ptr + 0x28) != (undefined8 *)0x0) {\n      for (ptr = (undefined8 *)**(undefined8 **)(data_ptr + 0x28); ptr != (undefined8 *)0x0;\n          ptr = (undefined8 *)*ptr) {\n        result = FUN_001135a5(arg1,arg2,ptr);\n        if (result == '\\0') {\n          return 0;\n        }\n      }\n    }\n    for (ptr = *(undefined8 **)(data_ptr + 0x10); ptr != (undefined8 *)0x0;\n        ptr = (undefined8 *)*ptr) {\n      result = check_and_process_data_00113a4d(arg1,arg2,ptr);\n      if (result == '\\0') {\n        return 0;\n      }\n    }\n    result_array = FUN_00112502(arg1,arg2,*(undefined8 *)(data_ptr + 0x20));\n    if (result_array[0] != '\\0') {\n      if ((*(long *)(data_ptr + 0x28) == 0) && (*(long *)(data_ptr + 8) != 0)) {\n        return result_array._0_8_;\n      }\n      return_value = FUN_0010ed2c(arg2,*(undefined8 *)(data_ptr + 0x20),result_array._8_8_,arg5);\n      return return_value;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "check_and_process_data_00113a4d",
            "entrypoint": "0x00113a4d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113a4d": "check_and_process_data_00113a4d",
                "auVar4": "result_array",
                "cVar1": "result",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "data_ptr",
                "param_4": "arg4",
                "param_5": "arg5",
                "puVar3": "ptr",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113b1e": {
            "additional_data": {
                "FUN_00113b1e": {
                    "decode_data": 3,
                    "extract_and_check_value": 1,
                    "extract_data": 7,
                    "extract_data_from_binary": 3,
                    "extract_function_data": 1,
                    "extract_information": 1,
                    "extract_param_value": 1,
                    "extract_parameter_value": 1,
                    "extract_return_value": 1,
                    "extract_value_from_binary": 4,
                    "extracted_data": 1,
                    "get_selected_value": 1,
                    "reverse_and_extract_value": 1
                },
                "auVar1": {
                    "data1": 1,
                    "data_result": 1,
                    "decoded_data_zero": 1,
                    "decoded_zero": 1,
                    "default_output": 1,
                    "default_result": 2,
                    "default_return_value": 1,
                    "empty_result": 1,
                    "error_output": 1,
                    "output_1": 2,
                    "output_data": 1,
                    "output_variable": 1,
                    "processed_value": 1,
                    "result_1": 1,
                    "return_array": 1,
                    "return_value": 1,
                    "return_value_when_input_is_zero": 1,
                    "zero_result": 1
                },
                "auVar4": {
                    "data2": 1,
                    "decoded_data": 2,
                    "final_output": 1,
                    "improved_result": 1,
                    "modified_result": 1,
                    "new_value": 2,
                    "output": 5,
                    "output_2": 2,
                    "output_data_with_default": 1,
                    "output_result": 1,
                    "output_variable": 1,
                    "processed_data": 1,
                    "result": 6,
                    "result_2": 1,
                    "return_array": 1,
                    "return_value": 3,
                    "updated_result": 1
                },
                "param_1": {
                    "binary_address": 2,
                    "binary_data": 1,
                    "data_ptr": 1,
                    "input": 3,
                    "input_data": 2,
                    "input_param": 9,
                    "input_parameter": 2,
                    "input_ptr": 1,
                    "input_value": 7,
                    "param_pointer": 1,
                    "param_ptr": 1,
                    "value": 1
                },
                "param_2": {
                    "arg1": 1,
                    "data": 1,
                    "data_size": 1,
                    "param": 1,
                    "param2": 1,
                    "ptr": 1,
                    "unused": 2,
                    "unused_param": 16,
                    "unused_parameter": 5,
                    "unused_var": 1,
                    "value_ptr": 1
                },
                "param_3": {
                    "arg2": 1,
                    "data": 2,
                    "data_length": 1,
                    "data_param": 2,
                    "data_parameter": 1,
                    "data_to_return": 1,
                    "data_value": 1,
                    "default_value": 5,
                    "flag": 1,
                    "initial_value": 1,
                    "output_data": 1,
                    "output_param": 3,
                    "output_parameter": 1,
                    "output_size": 1,
                    "output_value": 2,
                    "param3": 1,
                    "param_three": 1,
                    "param_value": 1,
                    "secondary_param": 1,
                    "size": 1,
                    "value": 1,
                    "value_param": 1
                },
                "param_4": {
                    "additional_param": 2,
                    "arg3": 1,
                    "constant": 1,
                    "data_param": 1,
                    "default_value": 5,
                    "empty_value": 1,
                    "extra_param": 1,
                    "extra_value": 1,
                    "extracted_value": 1,
                    "offset": 1,
                    "output_param": 2,
                    "output_ptr": 1,
                    "output_value": 3,
                    "param4": 1,
                    "param_four": 1,
                    "result": 2,
                    "result_address": 1,
                    "result_parameter": 1,
                    "result_value": 1,
                    "secondary_output_param": 1,
                    "unused_param": 1,
                    "value": 1
                },
                "piVar2": {
                    "binary_result": 1,
                    "buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "decoded_data": 1,
                    "pointer": 1,
                    "ptr_array": 1,
                    "ptr_result": 1,
                    "ptr_to_int": 1,
                    "result": 4,
                    "result_array": 3,
                    "result_pointer": 4,
                    "result_ptr": 11
                },
                "uVar3": {
                    "data": 1,
                    "data_value": 2,
                    "extracted_result": 1,
                    "extracted_value": 10,
                    "first_value": 1,
                    "result": 7,
                    "result_value": 3,
                    "return_value": 3,
                    "selected_value": 1,
                    "value": 2
                }
            },
            "called": [
                "FUN_00112b6e"
            ],
            "calling": [
                "FUN_0010b0fa",
                "FUN_0010d559"
            ],
            "code": "\nundefined  [16] extract_data_from_binary_00113b1e(long input_param,undefined8 unused_param,ulong default_value,undefined8 default_value)\n\n{\n  undefined output_1 [16];\n  int *result_ptr;\n  undefined8 extracted_value;\n  undefined result [16];\n  \n  if (input_param != 0) {\n    result_ptr = (int *)FUN_00112b6e(input_param,0);\n    if ((result_ptr == (int *)0x0) || (3 < *result_ptr - 7U)) {\n      extracted_value = 0;\n    }\n    else {\n      extracted_value = **(undefined8 **)(result_ptr + 4);\n    }\n    result._8_8_ = default_value;\n    result._0_8_ = extracted_value;\n    return result;\n  }\n  output_1._8_8_ = 0;\n  output_1._0_8_ = default_value;\n  return output_1 << 0x40;\n}\n\n",
            "current_name": "extract_data_from_binary_00113b1e",
            "entrypoint": "0x00113b1e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113b1e": "extract_data_from_binary_00113b1e",
                "auVar1": "output_1",
                "auVar4": "result",
                "param_1": "input_param",
                "param_2": "unused_param",
                "param_3": "default_value",
                "param_4": "default_value",
                "piVar2": "result_ptr",
                "uVar3": "extracted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113b4a": {
            "additional_data": {
                "FUN_00112904": {
                    "allocate_memory": 1,
                    "call_sub_function": 1,
                    "get_value_from_subfunction": 1,
                    "initialize_data_structure": 1,
                    "initialize_object": 1,
                    "initialize_result": 3
                },
                "FUN_00113b4a": {
                    "create_data_entry": 1,
                    "extract_and_assign_param": 1,
                    "extract_and_assign_value": 1,
                    "extract_data": 1,
                    "extract_long_value": 2,
                    "extract_param": 5,
                    "extract_parameter": 3,
                    "extract_parameter_to_pointer": 1,
                    "extract_parameter_value": 1,
                    "extract_value": 1,
                    "extract_value_from_binary": 2,
                    "initialize_data_structure": 1,
                    "initialize_param": 2,
                    "initialize_pointer": 2,
                    "initialize_pointer_with_param": 1,
                    "load_parameter_into_memory": 1,
                    "map_param_to_pointer": 1,
                    "process_param": 1,
                    "process_parameter": 1,
                    "reverse_and_set_value": 1
                },
                "lVar1": {
                    "data_entry_address": 1,
                    "extracted_value": 1,
                    "function_result": 1,
                    "initialized_pointer": 1,
                    "pointer": 1,
                    "result": 21,
                    "result_ptr": 2,
                    "result_value": 2,
                    "return_value": 1
                },
                "param_1": {
                    "input": 3,
                    "input_data": 1,
                    "input_param": 4,
                    "input_value": 13,
                    "param": 2,
                    "parameter": 2,
                    "parameter_value": 1,
                    "value": 5
                }
            },
            "called": [
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010b0fa",
                "FUN_0010ee3f",
                "FUN_0010c95e"
            ],
            "code": "\nlong extract_and_assign_param_00113b4a(long input_value)\n\n{\n  long result;\n  \n  if (input_value != 0) {\n    result = FUN_00112904(0x15,0);\n    if (result == 0) {\n      result = 0;\n    }\n    else {\n      *(long *)(result + 0x10) = input_value;\n    }\n    return result;\n  }\n  return 0;\n}\n\n",
            "current_name": "extract_and_assign_param_00113b4a",
            "entrypoint": "0x00113b4a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113b4a": "extract_and_assign_param_00113b4a",
                "lVar1": "result",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113b71": {
            "additional_data": {
                "FUN_00112904": {
                    "allocate_memory": 6
                },
                "FUN_00113b71": {
                    "extract_and_set_param": 1,
                    "extract_and_set_value": 1,
                    "extract_and_store_parameter": 1,
                    "extract_data_from_binary": 1,
                    "extract_param": 1,
                    "extract_param_value": 1,
                    "extract_parameter": 1,
                    "extract_parameter_to_memory": 1,
                    "extract_value_from_param": 1,
                    "initialize_data": 3,
                    "initialize_data_structure": 3,
                    "initialize_object": 1,
                    "initialize_param": 2,
                    "initialize_pointer": 5,
                    "initialize_resource": 1,
                    "initialize_value": 3,
                    "initialize_variable": 3,
                    "reverse_and_store_param": 1
                },
                "lVar1": {
                    "allocated_memory": 4,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "data_structure": 1,
                    "data_structure_pointer": 2,
                    "extracted_value": 1,
                    "initialized_pointer": 1,
                    "initialized_variable": 1,
                    "memory_block": 1,
                    "new_pointer": 2,
                    "new_variable": 1,
                    "pointer": 1,
                    "resource_address": 1,
                    "result": 8,
                    "result_pointer": 2,
                    "result_ptr": 1,
                    "result_value": 1
                },
                "param_1": {
                    "input": 1,
                    "input_data": 1,
                    "input_param": 2,
                    "input_value": 20,
                    "param": 2,
                    "resource_size": 1,
                    "value": 3,
                    "value_to_initialize": 1
                }
            },
            "called": [
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010b0fa",
                "FUN_0010ee3f",
                "FUN_0010c95e"
            ],
            "code": "\nlong initialize_data_structure_00113b71(long input_value)\n\n{\n  long result;\n  \n  if (input_value != 0) {\n    result = FUN_00112904(0x14,0);\n    if (result == 0) {\n      result = 0;\n    }\n    else {\n      *(long *)(result + 0x10) = input_value;\n    }\n    return result;\n  }\n  return 0;\n}\n\n",
            "current_name": "initialize_data_structure_00113b71",
            "entrypoint": "0x00113b71",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113b71": "initialize_data_structure_00113b71",
                "lVar1": "result",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113b98": {
            "additional_data": {
                "FUN_00112904": {
                    "allocate_memory": 1,
                    "initialize_data": 2,
                    "initialize_entry": 2,
                    "initialize_memory": 1,
                    "initialize_object": 2
                },
                "FUN_00113b98": {
                    "allocate_and_initialize": 1,
                    "allocate_and_initialize_object": 1,
                    "create_and_initialize_object": 2,
                    "create_and_initialize_structure": 1,
                    "create_data_element": 1,
                    "create_data_entry": 4,
                    "create_data_structure": 14,
                    "create_object": 2,
                    "create_resource": 1,
                    "initialize_data_structure": 3,
                    "process_parameters": 1
                },
                "lVar1": {
                    "allocated_memory": 1,
                    "data_entry": 2,
                    "element": 1,
                    "entry_ptr": 1,
                    "function_result": 1,
                    "new_entry": 1,
                    "object": 1,
                    "object_address": 1,
                    "object_pointer": 1,
                    "pointer": 1,
                    "resource_ptr": 1,
                    "result": 19
                },
                "param_1": {
                    "data": 2,
                    "data1": 1,
                    "data_value": 1,
                    "input1": 8,
                    "input_1": 3,
                    "input_param1": 3,
                    "input_param_1": 1,
                    "input_value": 2,
                    "input_value1": 4,
                    "object_id": 2,
                    "object_value": 2,
                    "resource_id": 1,
                    "value1": 1
                },
                "param_2": {
                    "data2": 1,
                    "input2": 8,
                    "input_2": 3,
                    "input_param2": 3,
                    "input_param_2": 1,
                    "input_value2": 4,
                    "param2": 3,
                    "param_2": 2,
                    "param_2_value": 1,
                    "value1": 2,
                    "value2": 1,
                    "value_1": 2
                },
                "param_3": {
                    "data3": 1,
                    "input3": 8,
                    "input_3": 3,
                    "input_param3": 3,
                    "input_param_3": 1,
                    "input_value3": 4,
                    "param3": 3,
                    "param_3": 2,
                    "param_3_value": 1,
                    "value2": 2,
                    "value3": 1,
                    "value_2": 2
                },
                "param_4": {
                    "data4": 1,
                    "flag": 2,
                    "input4": 8,
                    "input_4": 3,
                    "input_param4": 3,
                    "input_param_4": 1,
                    "input_value4": 4,
                    "option": 1,
                    "param4": 3,
                    "param_4": 2,
                    "param_4_value": 1,
                    "undefined_value": 1,
                    "value4": 1
                },
                "plVar2": {
                    "allocated_memory": 5,
                    "allocated_object": 1,
                    "data": 1,
                    "data_element": 1,
                    "data_entry": 1,
                    "data_structure": 11,
                    "new_data_structure": 1,
                    "new_entry": 3,
                    "new_object": 1,
                    "new_object_pointer": 1,
                    "new_structure": 2,
                    "object": 1,
                    "object_ptr": 1,
                    "resource_data": 1
                },
                "xmalloc": {
                    "allocate_memory": 7
                }
            },
            "called": [
                "xmalloc",
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010ee3f",
                "FUN_0010c95e"
            ],
            "code": "\nlong create_data_structure_00113b98(long input1,long input2,long input3,undefined input4)\n\n{\n  long result;\n  long *data_structure;\n  \n  if ((input1 != 0) && (result = FUN_00112904(0x13,0), result != 0)) {\n    data_structure = (long *)xmalloc(0x20);\n    *(undefined4 *)((long)data_structure + 0x19) = 0;\n    *data_structure = input1;\n    *(undefined4 *)((long)data_structure + 0x1c) = 0;\n    data_structure[1] = input2;\n    data_structure[2] = input3;\n    *(undefined *)(data_structure + 3) = input4;\n    *(long **)(result + 0x10) = data_structure;\n    return result;\n  }\n  return 0;\n}\n\n",
            "current_name": "create_data_structure_00113b98",
            "entrypoint": "0x00113b98",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113b98": "create_data_structure_00113b98",
                "lVar1": "result",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "plVar2": "data_structure",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113bfa": {
            "additional_data": {
                "FUN_00112904": {
                    "allocate_memory": 6,
                    "initialize_data": 1,
                    "initialize_data_entry": 1,
                    "initialize_data_structure": 1,
                    "initialize_memory": 1,
                    "initialize_object": 1
                },
                "FUN_00113bfa": {
                    "allocate_and_store_params": 4,
                    "construct_object": 1,
                    "create_allocated_object": 1,
                    "create_and_store_data": 2,
                    "create_data_entry": 3,
                    "create_data_object": 2,
                    "create_data_structure": 11,
                    "create_entry_from_parameters": 1,
                    "create_object": 3,
                    "create_pointer": 1,
                    "extract_and_allocate_params": 1,
                    "extract_params_and_allocate": 1
                },
                "lVar1": {
                    "allocated_memory": 2,
                    "allocated_object": 1,
                    "data_entry": 1,
                    "data_object": 2,
                    "data_ptr": 1,
                    "data_structure_address": 1,
                    "data_structure_ptr": 1,
                    "entry_ptr": 1,
                    "memory_address": 2,
                    "new_entry": 1,
                    "object_pointer": 1,
                    "ptr_data_entry": 1,
                    "result": 13,
                    "result_ptr": 2
                },
                "param_1": {
                    "data1": 3,
                    "data_item_1": 1,
                    "input1": 7,
                    "input_1": 4,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "input_value1": 2,
                    "input_value_1": 2,
                    "parameter1": 1,
                    "source_param": 1,
                    "source_value": 1,
                    "value1": 7
                },
                "param_2": {
                    "data2": 3,
                    "data_item_2": 1,
                    "destination_param": 1,
                    "input2": 7,
                    "input_2": 4,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "input_value2": 2,
                    "input_value_2": 2,
                    "parameter2": 1,
                    "target_value": 1,
                    "value2": 7
                },
                "plVar2": {
                    "allocated_data": 3,
                    "allocated_data_ptr": 1,
                    "allocated_memory": 8,
                    "allocated_memory_block": 1,
                    "allocated_params": 2,
                    "allocated_ptr": 1,
                    "data_structure": 2,
                    "dynamic_array": 1,
                    "entry_data": 1,
                    "new_data_ptr": 1,
                    "new_entry_ptr": 1,
                    "new_object": 2,
                    "object_ptr": 1,
                    "pointer_to_object": 1,
                    "ptr": 1,
                    "ptr_data": 1,
                    "structure": 1
                },
                "xmalloc": {
                    "allocate_memory": 5
                }
            },
            "called": [
                "xmalloc",
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010ee3f",
                "FUN_0010c95e"
            ],
            "code": "\nlong create_data_structure_00113bfa(long value1,long input2)\n\n{\n  long result;\n  long *allocated_memory;\n  \n  if (((value1 != 0) && (input2 != 0)) && (result = FUN_00112904(0x12,0), result != 0)) {\n    allocated_memory = (long *)xmalloc(0x10);\n    *allocated_memory = value1;\n    allocated_memory[1] = input2;\n    *(long **)(result + 0x10) = allocated_memory;\n    return result;\n  }\n  return 0;\n}\n\n",
            "current_name": "create_data_structure_00113bfa",
            "entrypoint": "0x00113bfa",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113bfa": "create_data_structure_00113bfa",
                "lVar1": "result",
                "param_1": "value1",
                "param_2": "input2",
                "plVar2": "allocated_memory",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113c43": {
            "additional_data": {
                "FUN_00112904": {
                    "initialize_memory": 1,
                    "initialize_struct": 1
                },
                "FUN_00113c43": {
                    "allocate_and_initialize": 1,
                    "create_data_struct": 1,
                    "extract_and_initialize_data": 1,
                    "extract_and_store_data": 2,
                    "extract_and_store_params": 1,
                    "extract_data": 7,
                    "extract_function_data": 1,
                    "extract_info": 1,
                    "extract_parameters": 3,
                    "extracted_data_processor": 1,
                    "initialize_data": 1,
                    "initialize_data_structure": 4,
                    "process_data": 3,
                    "process_parameters": 1,
                    "reverse_dependency_graph": 1
                },
                "auVar3": {
                    "output": 1,
                    "output_var3": 1,
                    "result": 2,
                    "return_data": 1,
                    "return_value": 23
                },
                "lVar1": {
                    "allocated_memory": 6,
                    "allocation_result": 2,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_structure_pointer": 1,
                    "data_structure_ptr": 1,
                    "memory_block": 1,
                    "output_var1": 1,
                    "result": 13,
                    "result_address": 1,
                    "result_ptr": 1,
                    "result_value": 1,
                    "source_ptr": 1
                },
                "param_1": {
                    "data1": 3,
                    "data_1": 1,
                    "data_ptr": 1,
                    "input1": 7,
                    "input_1": 2,
                    "input_param": 1,
                    "input_param1": 9,
                    "input_param_1": 1,
                    "input_value_1": 1,
                    "source": 1,
                    "source_address": 1,
                    "source_data": 1,
                    "source_size": 1,
                    "value1": 1
                },
                "param_2": {
                    "data2": 3,
                    "data_2": 1,
                    "destination_address": 1,
                    "destination_data": 1,
                    "input2": 7,
                    "input_2": 2,
                    "input_param2": 9,
                    "input_param_2": 1,
                    "input_value_2": 1,
                    "output_param": 1,
                    "param_size": 1,
                    "target": 1,
                    "value2": 1,
                    "value_ptr": 1
                },
                "param_3": {
                    "data1": 1,
                    "data3": 3,
                    "data_3": 1,
                    "data_offset_1": 1,
                    "dependency_param_1": 1,
                    "extra_data1": 1,
                    "input3": 7,
                    "input_3": 2,
                    "input_param3": 9,
                    "input_param_3": 1,
                    "input_value_3": 1,
                    "param3": 2,
                    "value3": 1
                },
                "param_4": {
                    "data2": 1,
                    "data4": 3,
                    "data_4": 1,
                    "data_offset_2": 1,
                    "dependency_param_2": 1,
                    "extra_data2": 1,
                    "input4": 7,
                    "input_4": 2,
                    "input_param4": 9,
                    "input_param_4": 1,
                    "input_value_4": 1,
                    "param4": 2,
                    "value4": 1
                },
                "param_5": {
                    "data": 1,
                    "data3": 1,
                    "data5": 3,
                    "data_5": 1,
                    "flag": 3,
                    "input5": 5,
                    "input_5": 2,
                    "input_param5": 9,
                    "input_param_5": 1,
                    "input_value_5": 1,
                    "param5": 2,
                    "undefined_param": 1,
                    "value5": 1
                },
                "param_6": {
                    "address": 1,
                    "auxiliary_param": 1,
                    "callback": 1,
                    "data_6": 1,
                    "input6": 5,
                    "input_6": 1,
                    "input_param6": 8,
                    "input_param_6": 1,
                    "input_value_6": 1,
                    "output": 1,
                    "output_data": 1,
                    "output_param": 1,
                    "param6": 1,
                    "result": 6,
                    "result_ptr": 1
                },
                "plVar2": {
                    "allocated_data": 2,
                    "allocated_memory": 10,
                    "allocated_pointer": 1,
                    "allocated_ptr": 1,
                    "allocated_struct": 1,
                    "buffer": 1,
                    "data_array": 1,
                    "data_buffer": 1,
                    "data_ptr": 1,
                    "data_struct": 1,
                    "data_structure": 1,
                    "dynamic_array": 3,
                    "extracted_data_ptr": 1,
                    "function_data": 1,
                    "memory_pointer": 1,
                    "new_data": 1,
                    "new_data_ptr": 1,
                    "new_struct": 1,
                    "output_var2": 1
                },
                "xmalloc": {
                    "allocate_memory": 2
                }
            },
            "called": [
                "xmalloc",
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010ee3f",
                "FUN_0010c95e",
                "FUN_0010dac0"
            ],
            "code": "\nundefined  [16]\nextract_and_store_data_00113c43(long input_param1,long input_param2,long input_param3,long input_param4,undefined input_param5,\n            undefined8 input_param6)\n\n{\n  long result;\n  long *allocated_memory;\n  undefined return_value [16];\n  \n  if ((input_param1 != 0) && (input_param2 != 0)) {\n    result = FUN_00112904(0x10,0);\n    if (result != 0) {\n      allocated_memory = (long *)xmalloc(0x28);\n      *(undefined4 *)((long)allocated_memory + 0x21) = 0;\n      *allocated_memory = input_param1;\n      *(undefined4 *)((long)allocated_memory + 0x24) = 0;\n      allocated_memory[1] = input_param2;\n      allocated_memory[2] = input_param3;\n      allocated_memory[3] = input_param4;\n      *(undefined *)(allocated_memory + 4) = input_param5;\n      *(long **)(result + 0x10) = allocated_memory;\n      goto LAB_00113caa;\n    }\n  }\n  result = 0;\nLAB_00113caa:\n  return_value._8_8_ = input_param6;\n  return_value._0_8_ = result;\n  return return_value;\n}\n\n",
            "current_name": "extract_and_store_data_00113c43",
            "entrypoint": "0x00113c43",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113c43": "extract_and_store_data_00113c43",
                "auVar3": "return_value",
                "lVar1": "result",
                "param_1": "input_param1",
                "param_2": "input_param2",
                "param_3": "input_param3",
                "param_4": "input_param4",
                "param_5": "input_param5",
                "param_6": "input_param6",
                "plVar2": "allocated_memory",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113cb9": {
            "additional_data": {
                "0": {
                    "constant2": 1
                },
                "0xe": {
                    "constant1": 1
                },
                "FUN_00112904": {
                    "allocate_memory": 3,
                    "create_new_object": 1,
                    "get_memory_address": 1,
                    "initialize": 1,
                    "initialize_memory": 1,
                    "initialize_result": 2,
                    "initialize_variable": 1,
                    "initiate_process": 1
                },
                "FUN_00113cb9": {
                    "assign_parameter_value": 1,
                    "convert_to_long": 1,
                    "extract_non_null_parameter": 1,
                    "extract_number_from_binary": 1,
                    "extract_param": 2,
                    "extract_param_or_zero": 1,
                    "extract_param_pointer": 1,
                    "extract_param_value": 1,
                    "extract_parameter": 2,
                    "extract_positive_or_zero_value": 1,
                    "extracted_value": 1,
                    "initialize_data": 3,
                    "initialize_data_structure": 2,
                    "initialize_parameter": 1,
                    "initialize_parameter_value": 1,
                    "initialize_pointer": 2,
                    "initialize_value": 1,
                    "map_param_to_ptr": 1,
                    "process_input": 1,
                    "process_param": 3,
                    "process_parameter": 2,
                    "reverse_and_store_value": 1
                },
                "lVar1": {
                    "allocated_memory": 1,
                    "buffer": 1,
                    "data_pointer": 1,
                    "data_structure": 1,
                    "extracted_value": 1,
                    "function_result": 1,
                    "pointer": 1,
                    "result": 19,
                    "result_pointer": 2,
                    "result_ptr": 1,
                    "result_value": 1,
                    "result_variable": 1
                },
                "param_1": {
                    "data": 1,
                    "data_value": 1,
                    "input": 5,
                    "input_number": 1,
                    "input_param": 6,
                    "input_parameter": 2,
                    "input_value": 13,
                    "original_parameter": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010b0fa",
                "FUN_0010ee3f",
                "FUN_0010c95e"
            ],
            "code": "\nlong initialize_data_structure_00113cb9(long input_value)\n\n{\n  long result;\n  \n  if (input_value != 0) {\n    result = FUN_00112904(0xe,0);\n    if (result == 0) {\n      result = 0;\n    }\n    else {\n      *(long *)(result + 0x10) = input_value;\n    }\n    return result;\n  }\n  return 0;\n}\n\n",
            "current_name": "initialize_data_structure_00113cb9",
            "entrypoint": "0x00113cb9",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113cb9": "initialize_data_structure_00113cb9",
                "lVar1": "result",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113ce0": {
            "additional_data": {
                "FUN_00112904": {
                    "initialize_data": 1,
                    "initialize_memory": 1
                },
                "FUN_00113ce0": {
                    "allocate_and_initialize": 7,
                    "allocate_and_initialize_data": 1,
                    "allocate_and_initialize_object": 1,
                    "allocate_and_initialize_struct": 1,
                    "allocate_and_store_data": 3,
                    "allocate_memory_and_store_params": 1,
                    "allocate_resource": 1,
                    "decipher_and_allocate_memory": 1,
                    "extract_and_store_data": 2,
                    "extract_binary_data": 1,
                    "extract_data": 3,
                    "process_data": 2,
                    "process_params": 2,
                    "reverse_and_allocate_memory": 3
                },
                "auVar3": {
                    "output": 3,
                    "output_data": 1,
                    "output_value": 1,
                    "result": 2,
                    "return_value": 22
                },
                "lVar1": {
                    "allocated_memory": 2,
                    "allocation_result": 2,
                    "resource_handle": 1,
                    "result": 26
                },
                "param_1": {
                    "binary_data": 1,
                    "data1": 2,
                    "data_1": 1,
                    "input1": 3,
                    "input_1": 3,
                    "input_data_1": 1,
                    "input_param": 5,
                    "input_param1": 2,
                    "input_param_1": 4,
                    "input_parameter_1": 1,
                    "input_value": 2,
                    "input_value1": 2,
                    "input_value_1": 2,
                    "resource_id": 1,
                    "source": 1
                },
                "param_2": {
                    "data2": 2,
                    "data_2": 1,
                    "data_param": 1,
                    "input2": 3,
                    "input_2": 3,
                    "input_data_2": 1,
                    "input_param2": 2,
                    "input_param_2": 4,
                    "input_parameter_2": 1,
                    "input_value2": 2,
                    "input_value_2": 2,
                    "length_param": 2,
                    "other_value": 1,
                    "output_param": 1,
                    "param2": 1,
                    "param_2": 1,
                    "param_value": 1,
                    "secondary_param": 1,
                    "value": 1
                },
                "param_3": {
                    "additional_info": 1,
                    "data3": 1,
                    "data_3": 1,
                    "flag": 1,
                    "input3": 3,
                    "input_3": 3,
                    "input_data_3": 1,
                    "input_param3": 2,
                    "input_param_3": 4,
                    "input_parameter_3": 1,
                    "input_value3": 2,
                    "input_value_3": 2,
                    "param3": 2,
                    "param_3": 2,
                    "undefined_param": 4,
                    "unknown_param": 1
                },
                "param_4": {
                    "auxiliary_param1": 1,
                    "auxiliary_param_1": 1,
                    "data_4": 1,
                    "input4": 1,
                    "input_4": 2,
                    "input_param4": 2,
                    "input_param_4": 4,
                    "input_parameter_4": 1,
                    "input_value_4": 2,
                    "param4": 3,
                    "param_4": 6,
                    "reserved_value1": 1,
                    "unused_param": 1,
                    "unused_param4": 1,
                    "unused_param_1": 2,
                    "unused_param_4": 1,
                    "unused_parameter": 1
                },
                "param_5": {
                    "auxiliary_data": 1,
                    "auxiliary_param2": 1,
                    "auxiliary_param_2": 1,
                    "callback_function": 1,
                    "data_5": 1,
                    "input5": 1,
                    "input_5": 2,
                    "input_param5": 2,
                    "input_param_5": 4,
                    "input_parameter_5": 1,
                    "input_value_5": 2,
                    "output_param": 1,
                    "param5": 3,
                    "param_5": 5,
                    "reserved_value2": 1,
                    "result": 1,
                    "unused_param_2": 2,
                    "unused_param_5": 1
                },
                "plVar2": {
                    "allocated_array": 1,
                    "allocated_data": 1,
                    "allocated_memory": 18,
                    "allocated_object_ptr": 1,
                    "allocated_ptr": 1,
                    "allocated_struct_pointer": 1,
                    "data_ptr": 1,
                    "dynamic_array": 2,
                    "dynamic_var": 1,
                    "new_data": 1,
                    "new_pointer": 1,
                    "pointer_to_memory": 1,
                    "resource_data_ptr": 1
                },
                "xmalloc": {
                    "allocate_memory": 2
                }
            },
            "called": [
                "xmalloc",
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010b0fa",
                "FUN_0010ee3f",
                "FUN_0010c95e",
                "FUN_0011173a",
                "FUN_0010dac0"
            ],
            "code": "\nundefined  [16]\nallocate_and_initialize_struct_00113ce0(long input_param,long input_param_2,undefined undefined_param,undefined8 param_4,undefined8 param_5)\n\n{\n  long result;\n  long *allocated_memory;\n  undefined return_value [16];\n  \n  if (input_param != 0) {\n    result = FUN_00112904(0xd,0);\n    if (result != 0) {\n      allocated_memory = (long *)xmalloc(0x18);\n      *(undefined4 *)((long)allocated_memory + 0x11) = 0;\n      *allocated_memory = input_param;\n      *(undefined4 *)((long)allocated_memory + 0x14) = 0;\n      allocated_memory[1] = input_param_2;\n      *(undefined *)(allocated_memory + 2) = undefined_param;\n      *(long **)(result + 0x10) = allocated_memory;\n      goto LAB_00113d2f;\n    }\n  }\n  result = 0;\nLAB_00113d2f:\n  return_value._8_8_ = param_5;\n  return_value._0_8_ = result;\n  return return_value;\n}\n\n",
            "current_name": "allocate_and_initialize_struct_00113ce0",
            "entrypoint": "0x00113ce0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113ce0": "allocate_and_initialize_struct_00113ce0",
                "auVar3": "return_value",
                "lVar1": "result",
                "param_1": "input_param",
                "param_2": "input_param_2",
                "param_3": "undefined_param",
                "plVar2": "allocated_memory",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113d3a": {
            "additional_data": {
                "FUN_00112904": {
                    "allocate_memory": 4,
                    "allocate_node": 1,
                    "create_linked_data": 1
                },
                "FUN_00113d3a": {
                    "extract_pointer_from_offset": 1,
                    "find_first_non_null": 1,
                    "find_linked_memory": 1,
                    "find_next_node": 2,
                    "find_next_pointer": 1,
                    "find_next_value": 1,
                    "find_non_null_value": 2,
                    "find_ptr_offset": 1,
                    "find_value_in_data_structure": 1,
                    "get_linked_data": 2,
                    "get_linked_entry": 1,
                    "get_linked_list_node": 2,
                    "get_linked_value": 2,
                    "get_list_item": 1,
                    "get_next_item": 1,
                    "get_next_node": 1,
                    "get_parent": 1,
                    "get_pointer": 2,
                    "get_pointer_from_param": 1,
                    "get_pointer_value": 3,
                    "get_second_item_address": 1,
                    "reverse": 1
                },
                "lVar1": {
                    "extracted_pointer": 1,
                    "linked_address": 1,
                    "linked_data": 2,
                    "linked_entry": 1,
                    "linked_value": 2,
                    "list_item": 1,
                    "new_pointer": 1,
                    "next_item": 1,
                    "next_node": 5,
                    "next_pointer": 1,
                    "next_value": 1,
                    "parent": 1,
                    "pointer_value": 2,
                    "result": 8,
                    "result_pointer": 2,
                    "second_item_address": 1
                },
                "param_1": {
                    "current_item": 1,
                    "current_node": 3,
                    "current_pointer": 1,
                    "current_value": 1,
                    "data_pointer": 1,
                    "entry_pointer": 1,
                    "input": 2,
                    "input_address": 1,
                    "input_data": 1,
                    "input_pointer": 4,
                    "input_value": 7,
                    "item": 1,
                    "item_address": 1,
                    "node": 3,
                    "ptr": 1,
                    "start_address": 1,
                    "value": 1
                },
                "param_2": {
                    "param_2": 1
                }
            },
            "called": [
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010b0fa",
                "FUN_0010ee3f",
                "FUN_0010c95e",
                "FUN_0011173a",
                "FUN_0010dac0"
            ],
            "code": "\nlong get_pointer_value_00113d3a(long input_value)\n\n{\n  long result;\n  \n  if (input_value != 0) {\n    result = *(long *)(input_value + 8);\n    if (result == 0) {\n      result = FUN_00112904(0xc,0);\n      if (result == 0) {\n        result = 0;\n      }\n      else {\n        *(long *)(result + 0x10) = input_value;\n        *(long *)(input_value + 8) = result;\n      }\n    }\n    return result;\n  }\n  return 0;\n}\n\n",
            "current_name": "get_pointer_value_00113d3a",
            "entrypoint": "0x00113d3a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113d3a": "get_pointer_value_00113d3a",
                "lVar1": "result",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113d6e": {
            "additional_data": {
                "FUN_00112904": {
                    "allocate_memory": 1
                },
                "FUN_00113d6e": {
                    "add_to_linked_list": 1,
                    "allocate_and_store": 2,
                    "allocate_and_store_data": 7,
                    "allocate_and_store_params": 1,
                    "create_and_link_data_structure": 1,
                    "create_and_store_data": 1,
                    "create_data_entry": 3,
                    "initialize_data": 1,
                    "store_data": 1,
                    "store_param_and_return_ptr": 1,
                    "store_parameters": 2,
                    "store_parameters_and_allocate_memory": 1,
                    "store_parameters_and_return": 1,
                    "store_parameters_and_return_address": 1,
                    "store_parameters_in_global": 1,
                    "store_parameters_in_memory": 3,
                    "store_params_and_return": 1,
                    "store_params_and_return_result": 1,
                    "store_params_in_memory": 1
                },
                "lVar1": {
                    "allocated_address": 3,
                    "allocated_data": 1,
                    "allocated_memory": 1,
                    "allocated_memory_address": 1,
                    "data_entry_ptr": 1,
                    "data_entry_result": 1,
                    "data_structure_address": 1,
                    "list_head": 1,
                    "memory_address": 1,
                    "result": 17,
                    "result_ptr": 1,
                    "return_value": 1
                },
                "param_1": {
                    "data1": 3,
                    "data_1": 2,
                    "data_entry_param_1": 1,
                    "data_item1": 1,
                    "data_param": 1,
                    "first_param": 1,
                    "input1": 1,
                    "input_1": 2,
                    "input_param1": 2,
                    "input_param_1": 2,
                    "input_parameter1": 1,
                    "input_parameter_1": 2,
                    "input_value_1": 1,
                    "new_data1": 1,
                    "value1": 7,
                    "value_1": 1
                },
                "param_2": {
                    "data2": 3,
                    "data_2": 2,
                    "data_entry_param_2": 1,
                    "data_item2": 1,
                    "input2": 1,
                    "input_2": 2,
                    "input_param2": 2,
                    "input_param_2": 2,
                    "input_parameter2": 1,
                    "input_parameter_2": 2,
                    "input_value_2": 1,
                    "new_data2": 1,
                    "param_data": 1,
                    "second_param": 1,
                    "value2": 7,
                    "value_2": 1
                },
                "puVar2": {
                    "alloc_ptr": 1,
                    "allocated_data": 5,
                    "allocated_data_ptr": 1,
                    "allocated_memory": 15,
                    "allocated_memory_address": 1,
                    "allocated_ptr": 1,
                    "data_entry_ptr": 1,
                    "new_allocation": 1,
                    "new_data_entry": 1,
                    "new_entry_ptr": 1,
                    "new_node": 1,
                    "new_pointer": 1
                }
            },
            "called": [
                "xmalloc",
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010ee3f",
                "FUN_0010dac0"
            ],
            "code": "\nlong allocate_and_store_data_00113d6e(undefined8 value1,undefined8 value2)\n\n{\n  long result;\n  undefined8 *allocated_memory;\n  \n  result = FUN_00112904(0xb,0);\n  if (result != 0) {\n    allocated_memory = (undefined8 *)xmalloc(0x10);\n    *allocated_memory = value1;\n    allocated_memory[1] = value2;\n    *(undefined8 **)(result + 0x10) = allocated_memory;\n  }\n  return result;\n}\n\n",
            "current_name": "allocate_and_store_data_00113d6e",
            "entrypoint": "0x00113d6e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113d6e": "allocate_and_store_data_00113d6e",
                "lVar1": "result",
                "param_1": "value1",
                "param_2": "value2",
                "puVar2": "allocated_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113da9": {
            "additional_data": {
                "FUN_00112904": {
                    "calculate_offset": 1
                },
                "FUN_00113da9": {
                    "allocate_and_initialize_memory": 1,
                    "extract_memory_chunk": 1,
                    "initialize_array": 3,
                    "initialize_buffer": 1,
                    "initialize_byte_array": 1,
                    "initialize_data": 2,
                    "initialize_data_block": 1,
                    "initialize_data_struct": 1,
                    "initialize_data_structure": 13,
                    "initialize_memory": 4,
                    "initialize_memory_block": 1,
                    "process_bytes": 1,
                    "reverse_bytes": 1
                },
                "auVar5": {
                    "output": 1,
                    "output_array": 1,
                    "output_data": 1,
                    "result": 17,
                    "result_array": 1,
                    "result_buffer": 1,
                    "result_chunk": 1,
                    "result_data": 1,
                    "return_data": 1,
                    "return_value": 5,
                    "return_value_struct": 1
                },
                "bVar4": {
                    "bit": 1,
                    "bit_shift": 1,
                    "bit_value": 1,
                    "byte_increment": 2,
                    "byte_offset": 1,
                    "byte_value": 4,
                    "byte_var": 2,
                    "counter": 1,
                    "data_array_index": 1,
                    "increment": 1,
                    "increment_counter": 1,
                    "increment_value": 1,
                    "index": 3,
                    "initial_value": 2,
                    "iteration": 1,
                    "offset": 1,
                    "temp_byte": 6,
                    "zero_byte": 1
                },
                "lVar2": {
                    "count": 2,
                    "counter": 3,
                    "length": 1,
                    "loop_count": 2,
                    "loop_counter": 22,
                    "loop_var": 1
                },
                "param_1": {
                    "byte_count": 2,
                    "byte_index": 1,
                    "byte_offset": 11,
                    "byte_param": 1,
                    "byte_value": 3,
                    "input_byte": 6,
                    "input_length": 1,
                    "input_size": 1,
                    "offset": 2,
                    "param_byte": 1,
                    "start_position": 1
                },
                "param_2": {
                    "arg1": 2,
                    "arg2": 1,
                    "input1": 1,
                    "input_param1": 1,
                    "param2": 14,
                    "param_2": 5,
                    "param_8": 1,
                    "param_arr": 1,
                    "parameter1": 1,
                    "unused_param": 2,
                    "unused_parameter_1": 1
                },
                "param_3": {
                    "arg2": 2,
                    "data": 3,
                    "data_ptr": 1,
                    "data_value": 2,
                    "initial_value": 1,
                    "input2": 1,
                    "input_data": 2,
                    "input_param2": 1,
                    "input_value": 1,
                    "param3": 6,
                    "param8": 1,
                    "param_3": 1,
                    "param_data": 1,
                    "param_value_1": 1,
                    "parameter2": 1,
                    "source_data": 2,
                    "target_value": 1,
                    "value": 2
                },
                "param_4": {
                    "additional_data": 1,
                    "arg3": 2,
                    "data_ptr": 1,
                    "input3": 1,
                    "input_param3": 1,
                    "other_data": 1,
                    "output_data": 1,
                    "output_value": 1,
                    "param12": 1,
                    "param4": 13,
                    "param_4": 1,
                    "param_au_var": 1,
                    "param_value_2": 1,
                    "parameter3": 1,
                    "pointer_value": 1,
                    "user_data": 1,
                    "value": 1
                },
                "puVar1": {
                    "allocated_array": 1,
                    "allocated_memory": 11,
                    "allocated_memory_block": 1,
                    "allocated_ptr": 1,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "buffer": 2,
                    "byte_array": 1,
                    "data_block_ptr": 1,
                    "data_ptr": 2,
                    "data_structure": 4,
                    "data_structure_ptr": 1,
                    "dynamic_array": 1,
                    "memory_block": 1,
                    "ptr": 2
                },
                "puVar3": {
                    "array_element_pointer": 1,
                    "current_address": 2,
                    "current_element": 3,
                    "current_memory": 3,
                    "current_memory_address": 1,
                    "current_memory_ptr": 1,
                    "current_pointer": 6,
                    "current_ptr": 5,
                    "data_pointer": 1,
                    "ptr": 3,
                    "ptr_iter": 1,
                    "ptr_to_arr": 1,
                    "ptr_to_memory": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "xmalloc",
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010ee3f",
                "FUN_0010dac0",
                "FUN_0010e07c"
            ],
            "code": "\nundefined  [16] initialize_data_structure_00113da9(byte byte_offset,undefined8 param2,undefined8 param3,undefined8 param4)\n\n{\n  undefined8 *allocated_memory;\n  long loop_counter;\n  undefined8 *current_pointer;\n  byte temp_byte;\n  undefined result [16];\n  \n  temp_byte = 0;\n  result._0_8_ = FUN_00112904(8 - (uint)byte_offset);\n  if (result._0_8_ != 0) {\n    allocated_memory = (undefined8 *)xmalloc(0x28);\n    current_pointer = allocated_memory + 1;\n    for (loop_counter = 8; loop_counter != 0; loop_counter = loop_counter + -1) {\n      *(undefined4 *)current_pointer = 0;\n      current_pointer = (undefined8 *)((long)current_pointer + (ulong)temp_byte * -8 + 4);\n    }\n    *allocated_memory = param3;\n    *(undefined8 **)(result._0_8_ + 0x10) = allocated_memory;\n  }\n  result._8_8_ = param4;\n  return result;\n}\n\n",
            "current_name": "initialize_data_structure_00113da9",
            "entrypoint": "0x00113da9",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113da9": "initialize_data_structure_00113da9",
                "auVar5": "result",
                "bVar4": "temp_byte",
                "lVar2": "loop_counter",
                "param_1": "byte_offset",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "puVar1": "allocated_memory",
                "puVar3": "current_pointer",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113df2": {
            "additional_data": {
                "FUN_00112904": {
                    "call_sub_function": 15,
                    "call_subfunction": 2,
                    "perform_action": 1,
                    "print_message": 1,
                    "send_command": 1,
                    "send_data": 3,
                    "sub_function": 3
                },
                "FUN_00113df2": {
                    "call_another_function": 1,
                    "call_sub_function": 1,
                    "execute_four": 1,
                    "execute_function": 11,
                    "execute_operation": 1,
                    "initialize": 4,
                    "initialize_and_call_subfunction": 1,
                    "initialize_device": 1,
                    "initialize_function": 5,
                    "initialize_program": 1,
                    "print_hello": 1,
                    "process_data": 2
                },
                "param_1": {
                    "arg": 3,
                    "arg1": 1,
                    "argument": 3,
                    "data": 2,
                    "device_id": 1,
                    "function_address": 1,
                    "input": 4,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_value": 2,
                    "message": 1,
                    "num_iterations": 1,
                    "operation_code": 1,
                    "param": 5,
                    "value": 4
                },
                "param_2": {
                    "param": 1,
                    "parameter": 1,
                    "sub_function_arg": 1,
                    "sub_function_argument": 1,
                    "sub_function_param": 1,
                    "subfunction_arg": 1
                }
            },
            "called": [
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010b0fa",
                "FUN_0010c2d2",
                "FUN_0010ee3f",
                "FUN_0010c95e",
                "FUN_0010dac0"
            ],
            "code": "\nvoid execute_function_00113df2(undefined4 param)\n\n{\n  FUN_00112904(4,param);\n  return;\n}\n\n",
            "current_name": "execute_function_00113df2",
            "entrypoint": "0x00113df2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113df2": "execute_function_00113df2",
                "param_1": "param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113dfe": {
            "additional_data": {
                "FUN_00113dfe": {
                    "store_character": 1,
                    "store_parameter_value": 2,
                    "update_byte_value": 1,
                    "update_data": 6,
                    "update_memory": 7,
                    "update_param": 1,
                    "update_param_value": 1,
                    "update_parameter": 2,
                    "update_parameter_value": 2,
                    "update_value": 1,
                    "update_value_at_offset": 1,
                    "update_value_in_memory": 1,
                    "update_variable": 1,
                    "write_parameter_value": 1,
                    "write_value_to_memory": 3
                },
                "lVar1": {
                    "address": 1,
                    "memory_address": 4,
                    "memory_location": 1,
                    "result": 23,
                    "return_value": 1
                },
                "param_1": {
                    "count": 2,
                    "data": 1,
                    "data_size": 1,
                    "function_code": 1,
                    "input": 1,
                    "input1": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "input_val": 1,
                    "input_value": 5,
                    "num": 1,
                    "param": 1,
                    "parameter": 1,
                    "previous_value": 1,
                    "size": 2,
                    "value": 9,
                    "var1": 1
                },
                "param_2": {
                    "byte_to_update": 1,
                    "character": 1,
                    "data": 5,
                    "input2": 1,
                    "new_data": 1,
                    "new_param": 2,
                    "new_val": 1,
                    "new_value": 10,
                    "value": 6,
                    "value_to_store": 2,
                    "var2": 1
                }
            },
            "called": [
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010b0fa",
                "FUN_0010c2d2",
                "FUN_0010ee3f",
                "FUN_0010c95e",
                "FUN_0010dac0"
            ],
            "code": "\nvoid update_value_in_memory_00113dfe(undefined4 value,undefined new_value)\n\n{\n  long result;\n  \n  result = FUN_00112904(3,value);\n  if (result != 0) {\n    *(undefined *)(result + 0x10) = new_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_value_in_memory_00113dfe",
            "entrypoint": "0x00113dfe",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113dfe": "update_value_in_memory_00113dfe",
                "lVar1": "result",
                "param_1": "value",
                "param_2": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113e17": {
            "additional_data": {
                "FUN_00112904": {
                    "call_function": 1,
                    "call_sub_function": 2,
                    "call_subfunction": 2,
                    "execute_initialization": 1,
                    "execute_subfunction": 1,
                    "execute_task": 1,
                    "handle_subsystem": 1,
                    "initialize": 1,
                    "perform_operation": 2,
                    "set_device_configuration": 1,
                    "set_module_options": 1,
                    "set_parameters": 2,
                    "set_system_parameters": 1,
                    "set_values": 1,
                    "sub_function": 1
                },
                "FUN_00113e17": {
                    "call_sub_functions": 1,
                    "execute_function": 2,
                    "execute_function2": 1,
                    "execute_initialization": 1,
                    "initialize": 2,
                    "initialize_components": 2,
                    "initialize_data": 2,
                    "initialize_device": 1,
                    "initialize_function": 7,
                    "initialize_gui": 1,
                    "initialize_module": 1,
                    "initialize_modules": 1,
                    "initialize_sub_system": 1,
                    "initialize_subroutine": 1,
                    "initialize_subsystems": 1,
                    "initialize_system": 5,
                    "initiate_function": 1
                },
                "param_1": {
                    "arg1": 3,
                    "argument_1": 1,
                    "count": 4,
                    "mode": 1,
                    "module_id": 1,
                    "num1": 1,
                    "number_of_threads": 1,
                    "operation_param1": 1,
                    "parameter1": 2,
                    "subsystem_type": 1,
                    "system_mode": 1,
                    "value1": 5,
                    "width": 1
                },
                "param_2": {
                    "arg2": 3,
                    "argument_2": 1,
                    "height": 1,
                    "initial_value": 1,
                    "num2": 1,
                    "offset": 1,
                    "operation_param2": 1,
                    "option": 2,
                    "parameter2": 2,
                    "start_value": 1,
                    "subsystem_setting": 1,
                    "value": 3,
                    "value2": 5
                }
            },
            "called": [
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010b0fa",
                "FUN_0010c2d2",
                "FUN_0010ee3f",
                "FUN_0010c95e",
                "FUN_0010dac0"
            ],
            "code": "\nvoid initialize_function_00113e17(void)\n\n{\n  FUN_00112904(2,0);\n  return;\n}\n\n",
            "current_name": "initialize_function_00113e17",
            "entrypoint": "0x00113e17",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113e17": "initialize_function_00113e17"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113e23": {
            "additional_data": {
                "FUN_00112904": {
                    "initialize_data": 1,
                    "initialize_memory": 1,
                    "initialize_object": 1
                },
                "FUN_00113e23": {
                    "add_data_to_memory": 1,
                    "add_to_linked_list": 1,
                    "allocate_and_initialize_memory": 1,
                    "allocate_and_store_data": 2,
                    "allocate_and_store_params": 1,
                    "create_and_insert_structure": 1,
                    "create_and_store_data": 2,
                    "create_data_entry": 3,
                    "create_data_structure": 1,
                    "create_dynamic_data_entry": 1,
                    "create_dynamic_object": 1,
                    "create_new_entry": 1,
                    "create_object": 1,
                    "create_or_update_data": 1,
                    "process_input": 1,
                    "save_data": 1,
                    "store_data_in_memory": 2,
                    "store_data_into_memory": 1,
                    "store_function_parameters": 1,
                    "store_parameters": 4,
                    "store_params_and_return_ptr": 1,
                    "store_params_in_memory": 2
                },
                "lVar1": {
                    "allocated_memory": 2,
                    "data_entry_address": 1,
                    "data_entry_ptr": 1,
                    "memory_address": 1,
                    "memory_pointer": 1,
                    "new_entry": 1,
                    "object_address": 2,
                    "result": 22
                },
                "param_1": {
                    "data_element_1": 1,
                    "data_entry_param_1": 1,
                    "data_param_1": 1,
                    "data_value1": 1,
                    "entry_param_1": 1,
                    "first_param": 1,
                    "input1": 5,
                    "input_1": 1,
                    "input_param1": 2,
                    "input_param_1": 1,
                    "input_value1": 1,
                    "input_value_1": 3,
                    "new_value1": 1,
                    "object_id": 1,
                    "object_param_1": 1,
                    "value1": 7,
                    "value_1": 2
                },
                "param_2": {
                    "data_element_2": 1,
                    "data_entry_param_2": 1,
                    "data_param_2": 1,
                    "data_value2": 1,
                    "entry_param_2": 1,
                    "input2": 5,
                    "input_2": 1,
                    "input_param2": 2,
                    "input_param_2": 1,
                    "input_value2": 1,
                    "input_value_2": 3,
                    "new_value2": 1,
                    "object_param_2": 1,
                    "object_value": 1,
                    "second_param": 1,
                    "value2": 7,
                    "value_2": 2
                },
                "puVar2": {
                    "allocated_data": 2,
                    "allocated_memory": 16,
                    "allocated_memory_ptr": 1,
                    "allocated_pointer": 1,
                    "data_entry_ptr": 1,
                    "data_pointer": 1,
                    "new_data_pointer": 1,
                    "new_entry_ptr": 4,
                    "new_node": 1,
                    "new_object": 1,
                    "object_pointer": 1,
                    "ptr_to_values": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "xmalloc",
                "FUN_00112904"
            ],
            "calling": [
                "FUN_0010c2d2",
                "FUN_0010dac0",
                "FUN_0010afd5"
            ],
            "code": "\nlong store_function_parameters_00113e23(undefined8 value1,undefined8 value2)\n\n{\n  long result;\n  undefined8 *allocated_memory;\n  \n  result = FUN_00112904(1,0);\n  if (result != 0) {\n    allocated_memory = (undefined8 *)xmalloc(0x10);\n    *allocated_memory = value1;\n    allocated_memory[1] = value2;\n    *(undefined8 **)(result + 0x10) = allocated_memory;\n  }\n  return result;\n}\n\n",
            "current_name": "store_function_parameters_00113e23",
            "entrypoint": "0x00113e23",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113e23": "store_function_parameters_00113e23",
                "lVar1": "result",
                "param_1": "value1",
                "param_2": "value2",
                "puVar2": "allocated_memory",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113e5e": {
            "additional_data": {
                "FUN_00113e5e": {
                    "check_and_process_type": 1,
                    "check_and_validate_input": 1,
                    "extract_function_name": 1,
                    "parse_and_check_function": 1,
                    "parse_and_handle_type": 1,
                    "parse_code": 1,
                    "parse_function_signature": 1,
                    "parse_input": 1,
                    "parse_input_and_check": 1,
                    "parse_parameter": 1,
                    "parse_type": 2,
                    "parse_type_and_check": 1,
                    "parse_type_and_operands": 1,
                    "parse_type_string": 1,
                    "process_argument": 2,
                    "process_data": 1,
                    "process_input": 1,
                    "process_string": 2,
                    "process_type": 1,
                    "validate_and_execute_operation": 1,
                    "validate_and_parse_input": 2,
                    "validate_and_process_input": 1,
                    "validate_parameter": 1,
                    "validate_string": 1,
                    "validate_type": 2
                },
                "cVar1": {
                    "result": 16,
                    "type_check": 1,
                    "type_check_result": 1,
                    "type_result": 1
                },
                "local_20": {
                    "arg_ptr": 1,
                    "argument": 1,
                    "current": 1,
                    "current_arg": 2,
                    "current_argument": 1,
                    "current_input": 1,
                    "current_param": 1,
                    "current_pointer": 2,
                    "current_position": 2,
                    "input": 1,
                    "local_array": 1,
                    "local_strings": 1,
                    "parsed_input": 1,
                    "parsed_parameter": 1,
                    "string": 1,
                    "stripped_str": 1,
                    "substring": 2,
                    "temp": 2,
                    "temp_str": 1,
                    "temp_string": 1,
                    "temp_strings": 2,
                    "type_str": 1
                },
                "param_1": {
                    "arg1": 1,
                    "function_signature": 1,
                    "input": 4,
                    "input_buffer": 1,
                    "input_param": 2,
                    "input_signal": 1,
                    "input_string": 2,
                    "input_value": 1,
                    "output": 4,
                    "param": 4,
                    "param_1": 1,
                    "param_ptr": 1,
                    "result": 6,
                    "str": 1,
                    "string_address": 1
                },
                "param_2": {
                    "arg2": 1,
                    "arg_list": 1,
                    "arg_ptr": 1,
                    "arguments": 2,
                    "argv": 4,
                    "command": 1,
                    "input": 7,
                    "input_string": 1,
                    "modified_param": 1,
                    "output_string": 2,
                    "param_2": 1,
                    "param_array": 1,
                    "parameter": 1,
                    "pointer_array": 1,
                    "ptr_str": 1,
                    "str": 1,
                    "string": 1,
                    "string_pointer": 1,
                    "string_ptr": 1,
                    "type_string": 1
                },
                "param_3": {
                    "arg3": 1,
                    "argc": 4,
                    "array_length": 1,
                    "length": 12,
                    "offset": 5,
                    "param_3": 1,
                    "param_length": 1,
                    "size": 1,
                    "string_length": 5
                }
            },
            "called": [
                "FUN_00113fb0",
                "FUN_0010c95e"
            ],
            "calling": [
                "FUN_0010ee3f"
            ],
            "code": "\nundefined8 check_and_process_type_00113e5e(undefined8 result,char **input,long length)\n\n{\n  char result;\n  char *current_position [2];\n  \n  current_position[0] = *input;\n  *input = (char *)(length + 2);\n  if ((((long)(char *)(length + 2) - (long)current_position[0] < 5) ||\n      (result = FUN_00113fb0(current_position[0],\"type\"), result == '\\0')) ||\n     ((current_position[0][4] != '$' && (current_position[0][4] != '.')))) {\n    if (*current_position[0] != '_') {\n      return 1;\n    }\n    if (current_position[0][1] != '_') {\n      return 1;\n    }\n    if (current_position[0][2] != 'o') {\n      return 1;\n    }\n    if (current_position[0][3] != 'p') {\n      return 1;\n    }\n    current_position[0] = current_position[0] + 4;\n  }\n  else {\n    current_position[0] = current_position[0] + 5;\n  }\n  result = FUN_0010c95e(result,current_position,0);\n  if (result != '\\0') {\n    return 1;\n  }\n  return 0;\n}\n\n",
            "current_name": "check_and_process_type_00113e5e",
            "entrypoint": "0x00113e5e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113e5e": "check_and_process_type_00113e5e",
                "cVar1": "result",
                "local_20": "current_position",
                "param_1": "result",
                "param_2": "input",
                "param_3": "length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113ede": {
            "additional_data": {
                "FUN_00113ede": {
                    "check_and_call_function": 1,
                    "check_and_process_string": 1,
                    "check_and_reverse_string": 1,
                    "check_string_length": 1,
                    "extract_and_process": 1,
                    "extract_and_process_data": 1,
                    "extract_and_process_string": 6,
                    "extract_and_process_substring": 1,
                    "extract_last_four_characters": 4,
                    "extract_last_four_chars": 2,
                    "extract_relevant_string": 1,
                    "extract_string_and_reverse": 1,
                    "extract_substring_from_parameter": 1,
                    "reverse_and_validate_string": 1,
                    "reverse_str_if_longer_than_4": 1,
                    "reverse_str_length_check": 1,
                    "reverse_string_check": 1,
                    "validate_string_length": 1
                },
                "FUN_00113fb0": {
                    "process_string_with_pattern": 1,
                    "process_substring": 1
                },
                "__s": {
                    "current_string": 5,
                    "first_string": 2,
                    "input_string": 6,
                    "str": 1,
                    "str_ptr": 1,
                    "string": 10,
                    "string_ptr": 3,
                    "string_to_process": 1,
                    "substring": 2
                },
                "param_1": {
                    "data": 1,
                    "input_array": 1,
                    "input_string": 8,
                    "input_strings": 3,
                    "string_array": 14,
                    "string_ptr": 1,
                    "strings": 2,
                    "substring": 1
                },
                "param_2": {
                    "pattern": 1
                },
                "sVar1": {
                    "input_length": 1,
                    "length": 1,
                    "string_len": 2,
                    "string_length": 25,
                    "substring_length": 2
                },
                "strlen": {
                    "get_string_length": 2
                },
                "uVar2": {
                    "extracted_value": 1,
                    "function_result": 1,
                    "result": 28,
                    "reversed_string": 1
                }
            },
            "called": [
                "strlen",
                "FUN_00113fb0"
            ],
            "calling": [
                "FUN_0010829e",
                "FUN_001082b3"
            ],
            "code": "\nundefined8 extract_and_process_string_00113ede(char **string_array)\n\n{\n  char *string;\n  size_t string_length;\n  undefined8 result;\n  \n  if (string_array == (char **)0x0) {\n    return 0;\n  }\n  string = *string_array;\n  if (string != (char *)0x0) {\n    string_length = strlen(string);\n    if (4 < (int)string_length) {\n      result = FUN_00113fb0(string + (long)(int)string_length + -4,&DAT_0012142b);\n      return result;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "extract_and_process_string_00113ede",
            "entrypoint": "0x00113ede",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113ede": "extract_and_process_string_00113ede",
                "__s": "string",
                "param_1": "string_array",
                "sVar1": "string_length",
                "strlen": "get_string_length",
                "uVar2": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113f20": {
            "additional_data": {
                "FUN_00113f20": {
                    "create_hash_table": 7,
                    "create_hashtable": 2,
                    "initialize_hash_tab": 2,
                    "initialize_hash_table": 17,
                    "initialize_hashtable": 3
                },
                "free": {
                    "dealloca_memory": 1,
                    "deallocate_memory": 6,
                    "deallocation_function": 1,
                    "release_memory": 23
                },
                "hTabCreateAlloc": {
                    "create_hash_table": 1
                },
                "htab_create_alloc": {
                    "allocate_and_create_hash_table": 1,
                    "allocate_and_initialize_hash_table": 1,
                    "allocate_hash_table": 2,
                    "allocate_hashtable": 2,
                    "create_allocated_hash_table": 1,
                    "create_hash_table": 18,
                    "create_hashtable": 2,
                    "initialize_hash_table": 2
                },
                "htab_eq_string": {
                    "are_strings_equal": 2,
                    "check_equality": 1,
                    "compare_string": 5,
                    "compare_strings": 11,
                    "equal_strings": 1,
                    "is_equal_string": 5,
                    "is_equal_to": 1,
                    "string_equal": 1
                },
                "htab_hash_string": {
                    "calculate_hash": 2,
                    "calculate_hash_value": 1,
                    "hash_string": 27,
                    "string_hash": 1
                },
                "void": {
                    "void": 1
                },
                "xcalloc": {
                    "allocate_memory": 28,
                    "allocate_memory_with_zero": 1,
                    "memory_allocation": 1,
                    "zero_allocate": 1
                }
            },
            "called": [
                "free",
                "xcalloc",
                "htab_eq_string",
                "htab_create_alloc",
                "htab_hash_string"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nvoid initialize_hash_table_00113f20(void)\n\n{\n  htab_create_alloc(0x10,htab_hash_string,compare_strings,0,xcalloc,free);\n  return;\n}\n\n",
            "current_name": "initialize_hash_table_00113f20",
            "entrypoint": "0x00113f20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113f20": "initialize_hash_table_00113f20",
                "free": "release_memory",
                "htab_create_alloc": "create_hash_table",
                "htab_eq_string": "compare_strings",
                "htab_hash_string": "hash_string",
                "xcalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113f50": {
            "additional_data": {
                "FUN_00113f50": {
                    "check_file": 17,
                    "check_file_info": 1,
                    "check_file_information": 1,
                    "check_file_properties": 1,
                    "check_file_stat": 1,
                    "check_file_stats": 1,
                    "check_file_status": 5,
                    "get_file_information": 3,
                    "get_file_stats": 1
                },
                "FUN_00119ed0": {
                    "print_error_message": 3,
                    "print_warning": 2
                },
                "dcgettext": {
                    "get_error_message": 1,
                    "get_message": 1,
                    "get_translation": 1,
                    "gettext": 1,
                    "translate_message": 1
                },
                "iVar1": {
                    "result": 3,
                    "stat_error": 1,
                    "stat_result": 4,
                    "status": 23
                },
                "param_1": {
                    "file_path": 23,
                    "filename": 8
                },
                "pcVar4": {
                    "errno_message": 1,
                    "error": 1,
                    "error_description": 1,
                    "error_message": 4,
                    "error_msg": 1,
                    "error_reason": 13,
                    "error_str": 1,
                    "error_string": 5,
                    "reason": 3,
                    "str_error_message": 1
                },
                "piVar2": {
                    "errno_location": 6,
                    "errno_pointer": 1,
                    "errno_ptr": 14,
                    "errnum": 1,
                    "error_code": 2,
                    "error_code_ptr": 2,
                    "error_number": 1,
                    "error_ptr": 4
                },
                "sStack_a8": {
                    "file_info": 6,
                    "file_stat": 9,
                    "file_stat_info": 1,
                    "file_stats": 10,
                    "file_status": 5
                },
                "stat": {
                    "get_file_stats": 3,
                    "get_file_status": 2
                },
                "uVar3": {
                    "error_message": 17,
                    "error_msg": 1,
                    "localized_msg": 1,
                    "message": 10,
                    "warning_message": 2
                }
            },
            "called": [
                "dcgettext",
                "stat",
                "FUN_00119ed0",
                "FUN_00104966"
            ],
            "calling": [
                "FUN_00116b90",
                "FUN_00114690",
                "FUN_00114460"
            ],
            "code": "\nlong check_file_status_00113f50(char *file_path)\n\n{\n  int status;\n  int *errno_ptr;\n  undefined8 error_message;\n  char *error_reason;\n  get_file_stats file_stats;\n  \n  if (file_path != (char *)0x0) {\n    status = get_file_stats(file_path,&file_stats);\n    if (status < 0) {\n      errno_ptr = __errno_location();\n      if (*errno_ptr == 2) {\n        error_message = dcgettext(0,\"\\'%s\\': No such file\",5);\n        FUN_00119ed0(error_message,file_path);\n      }\n      else {\n        error_reason = strerror(*errno_ptr);\n        error_message = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n        FUN_00119ed0(error_message,file_path,error_reason);\n      }\n    }\n    else if ((file_stats.st_mode & 0xf000) == 0x4000) {\n      error_message = dcgettext(0,\"Warning: \\'%s\\' is a directory\",5);\n      FUN_00119ed0(error_message,file_path);\n    }\n    else if ((file_stats.st_mode & 0xf000) == 0x8000) {\n      if (-1 < file_stats.st_size) {\n        return file_stats.st_size;\n      }\n      error_message = dcgettext(0,\"Warning: \\'%s\\' has negative size, probably it is too large\",5);\n      FUN_00119ed0(error_message,file_path);\n    }\n    else {\n      error_message = dcgettext(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n      FUN_00119ed0(error_message,file_path);\n    }\n  }\n  return -1;\n}\n\n",
            "current_name": "check_file_status_00113f50",
            "entrypoint": "0x00113f50",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113f50": "check_file_status_00113f50",
                "dcgettext": "get_message",
                "iVar1": "status",
                "param_1": "file_path",
                "pcVar4": "error_reason",
                "piVar2": "errno_ptr",
                "sStack_a8": "file_stats",
                "stat": "get_file_stats",
                "uVar3": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113fb0": {
            "additional_data": {
                "FUN_00113fb0": {
                    "compare_and_return_equal": 1,
                    "compare_strings": 13,
                    "compare_strings_with_length": 1,
                    "reverse_comparison": 1,
                    "string_comparison": 14,
                    "validate_string": 1
                },
                "__n": {
                    "comparison_length": 1,
                    "length": 22,
                    "length_of_string2": 1,
                    "size": 1,
                    "str2_length": 1,
                    "string2_length": 4,
                    "target_length": 1
                },
                "auVar2": {
                    "comparison_data": 1,
                    "comparison_result": 6,
                    "comparison_result_bits": 1,
                    "output": 3,
                    "result": 15,
                    "return_data": 1,
                    "return_value": 1
                },
                "extraout_var": {
                    "additional_result": 1,
                    "comparison_result": 3,
                    "extra": 1,
                    "extra_output": 1,
                    "extra_output_var": 1,
                    "extra_result": 1,
                    "extra_var": 2,
                    "extra_variable": 2,
                    "result": 2,
                    "trailing_character_comparison": 1,
                    "unused_variable": 1
                },
                "iVar1": {
                    "comparison": 1,
                    "comparison_result": 19,
                    "result": 4,
                    "strcmp_result": 1,
                    "string_comparison": 1,
                    "string_comparison_result": 2,
                    "strncmp_result": 1
                },
                "in_RAX": {
                    "auxiliary_value": 1,
                    "return_address": 1,
                    "return_value": 3
                },
                "param_1": {
                    "first_string": 1,
                    "input_string": 2,
                    "str1": 3,
                    "string1": 25
                },
                "param_2": {
                    "comparison_string": 1,
                    "second_string": 1,
                    "str2": 3,
                    "string2": 25,
                    "target_string": 1
                }
            },
            "called": [
                "strlen",
                "strncmp"
            ],
            "calling": [
                "FUN_00114c20",
                "FUN_0010ee3f",
                "FUN_00108c86",
                "FUN_00113e5e",
                "FUN_00116b90",
                "FUN_00113ede",
                "FUN_0010554f",
                "FUN_00107880",
                "FUN_00115f50"
            ],
            "code": "\nundefined  [16] validate_string_00113fb0(char *string1,char *string2)\n\n{\n  int comparison_result;\n  undefined8 return_value;\n  size_t length;\n  undefined4 comparison_result;\n  undefined result [16];\n  \n  length = strlen(string2);\n  comparison_result = strncmp(string1,string2,length);\n  result._1_7_ = (undefined7)(CONCAT44(comparison_result,comparison_result) >> 8);\n  result[0] = comparison_result == 0;\n  result._8_8_ = return_value;\n  return result;\n}\n\n",
            "current_name": "validate_string_00113fb0",
            "entrypoint": "0x00113fb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113fb0": "validate_string_00113fb0",
                "__n": "length",
                "auVar2": "result",
                "extraout_var": "comparison_result",
                "iVar1": "comparison_result",
                "in_RAX": "return_value",
                "param_1": "string1",
                "param_2": "string2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00113fe0": {
            "additional_data": {
                "FUN_00113fe0": {
                    "decode_section_flags": 1,
                    "extract_section_flags": 1,
                    "parse_section_flag": 1,
                    "parse_section_flags": 27,
                    "section_flags": 1
                },
                "auVar8": {
                    "parsed_result": 1,
                    "result": 9,
                    "result_container": 1,
                    "result_object": 1,
                    "result_struct": 5,
                    "result_value": 1,
                    "return_val": 3,
                    "return_value": 9,
                    "section_info": 1
                },
                "dcgettext": {
                    "get_translated_message": 1
                },
                "iVar1": {
                    "cmp_result": 2,
                    "comparison_result": 8,
                    "result": 17,
                    "string_comparison_result": 2,
                    "strncasecmp_result": 1
                },
                "iVar6": {
                    "comparison_length": 1,
                    "comparison_result": 1,
                    "flag_comparison": 1,
                    "flag_index": 12,
                    "flag_length": 1,
                    "flag_string_difference": 1,
                    "length_without_comma": 1,
                    "section_flag_diff": 1,
                    "section_flag_index": 2,
                    "section_flag_length": 2,
                    "section_length": 1,
                    "section_length_int": 1,
                    "section_name_length": 2,
                    "str_len": 1,
                    "string_length": 1,
                    "strlen_result": 1,
                    "token_length_int": 1
                },
                "param_1": {
                    "flag_string": 4,
                    "flags": 2,
                    "flags_string": 2,
                    "input_string": 4,
                    "section_flag": 2,
                    "section_flag_string": 2,
                    "section_flags": 15
                },
                "param_2": {
                    "arg2": 1,
                    "param2": 17,
                    "param_2": 9,
                    "unknown1": 1,
                    "unused1": 1,
                    "unused_param_1": 1,
                    "unused_param_2": 1
                },
                "param_3": {
                    "arg3": 1,
                    "param3": 17,
                    "param_3": 9,
                    "unknown2": 1,
                    "unused2": 1,
                    "unused_param_2": 1,
                    "unused_param_3": 1
                },
                "param_4": {
                    "arg4": 1,
                    "param4": 16,
                    "param_4": 8,
                    "result": 1,
                    "section_data": 1,
                    "section_name": 2,
                    "undefined": 1,
                    "unused_param_3": 1
                },
                "pcVar3": {
                    "comma": 2,
                    "comma_index": 2,
                    "comma_location": 1,
                    "comma_pointer": 1,
                    "comma_pos": 8,
                    "comma_position": 10,
                    "comma_ptr": 2,
                    "delimiter": 2,
                    "delimiter_position": 2,
                    "flag": 1
                },
                "pcVar4": {
                    "next_delimiter": 1,
                    "next_flag": 14,
                    "next_flag_string": 3,
                    "next_position": 1,
                    "next_section": 1,
                    "next_section_flag": 8,
                    "next_section_flag_string": 1,
                    "next_section_flags": 1,
                    "next_token": 1
                },
                "sVar5": {
                    "flag_length": 17,
                    "flag_string_length": 3,
                    "input_length": 1,
                    "input_string_length": 1,
                    "length": 1,
                    "num_chars": 1,
                    "section_flag_length": 4,
                    "section_length": 1,
                    "string_length": 1,
                    "token_length": 1
                },
                "uVar2": {
                    "err_msg": 4,
                    "error_message": 13,
                    "error_msg": 2,
                    "error_string": 2,
                    "message": 5,
                    "translated_string": 1
                },
                "uVar7": {
                    "combined_flags": 1,
                    "decoded_flags": 1,
                    "flags": 1,
                    "parsed_flags": 7,
                    "parsed_section_flags": 1,
                    "section_flag": 3,
                    "section_flag_enum": 1,
                    "section_flags": 11,
                    "section_flags_value": 2,
                    "updated_flags": 3
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nundefined  [16] parse_section_flags_00113fe0(char *section_flags,undefined8 param2,undefined8 param3,undefined8 param4)\n\n{\n  int result;\n  undefined8 error_message;\n  char *comma_position;\n  char *next_flag;\n  size_t flag_length;\n  int flag_index;\n  uint section_flags;\n  undefined return_value [16];\n  \n  section_flags = 0;\n  do {\n    comma_position = strchr(section_flags,0x2c);\n    if (comma_position == (char *)0x0) {\n      flag_length = strlen(section_flags);\n      flag_index = (int)flag_length;\n      next_flag = (char *)0x0;\n    }\n    else {\n      next_flag = comma_position + 1;\n      flag_index = (int)comma_position - (int)section_flags;\n    }\n    flag_length = (size_t)flag_index;\n    result = strncasecmp(\"alloc\",section_flags,flag_length);\n    if (result == 0) {\n      section_flags = section_flags | 1;\n    }\n    else {\n      result = strncasecmp(\"load\",section_flags,flag_length);\n      if (result == 0) {\n        section_flags = section_flags | 2;\n      }\n      else {\n        result = strncasecmp(\"noload\",section_flags,flag_length);\n        if (result == 0) {\n          section_flags = section_flags | 0x200;\n        }\n        else {\n          result = strncasecmp(\"readonly\",section_flags,flag_length);\n          if (result == 0) {\n            section_flags = section_flags | 8;\n          }\n          else {\n            result = strncasecmp(\"debug\",section_flags,flag_length);\n            if (result == 0) {\n              section_flags = section_flags | 0x2000;\n            }\n            else {\n              result = strncasecmp(\"code\",section_flags,flag_length);\n              if (result == 0) {\n                section_flags = section_flags | 0x10;\n              }\n              else {\n                result = strncasecmp(\"data\",section_flags,flag_length);\n                if (result == 0) {\n                  section_flags = section_flags | 0x20;\n                }\n                else {\n                  result = strncasecmp(\"rom\",section_flags,flag_length);\n                  if (result == 0) {\n                    section_flags = section_flags | 0x40;\n                  }\n                  else {\n                    result = strncasecmp(\"exclude\",section_flags,flag_length);\n                    if (result == 0) {\n                      section_flags = section_flags | 0x8000;\n                    }\n                    else {\n                      result = strncasecmp(\"share\",section_flags,flag_length);\n                      if (result == 0) {\n                        section_flags = section_flags | 0x8000000;\n                      }\n                      else {\n                        result = strncasecmp(\"contents\",section_flags,flag_length);\n                        if (result == 0) {\n                          section_flags = section_flags | 0x100;\n                        }\n                        else {\n                          result = strncasecmp(\"merge\",section_flags,flag_length);\n                          if (result == 0) {\n                            section_flags = section_flags | 0x800000;\n                          }\n                          else {\n                            result = strncasecmp(\"strings\",section_flags,flag_length);\n                            if (result != 0) {\n                              comma_position = (char *)xmalloc((long)(flag_index + 1));\n                              strncpy(comma_position,section_flags,flag_length);\n                              comma_position[flag_length] = '\\0';\n                              error_message = dcgettext(0,\"unrecognized section flag `%s\\'\",5);\n                              FUN_00119ed0(error_message,comma_position);\n                              error_message = dcgettext(0,\"supported flags: %s\",5);\n                    \n                              FUN_00119dd0(error_message,\n                                           \"alloc, load, noload, readonly, debug, code, data, rom, exclude, share, contents, merge, strings\"\n                                          );\n                            }\n                            section_flags = section_flags | 0x1000000;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    section_flags = next_flag;\n  } while (next_flag != (char *)0x0);\n  return_value._4_4_ = 0;\n  return_value._0_4_ = section_flags;\n  return_value._8_8_ = param4;\n  return return_value;\n}\n\n",
            "current_name": "parse_section_flags_00113fe0",
            "entrypoint": "0x00113fe0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00113fe0": "parse_section_flags_00113fe0",
                "auVar8": "return_value",
                "dcgettext": "get_translated_message",
                "iVar1": "result",
                "iVar6": "flag_index",
                "param_1": "section_flags",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "pcVar3": "comma_position",
                "pcVar4": "next_flag",
                "sVar5": "flag_length",
                "uVar2": "error_message",
                "uVar7": "section_flags",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00114190": {
            "additional_data": {
                "FUN_00114190": {
                    "check_and_alter_permissions": 1,
                    "check_permission": 1,
                    "find_and_modify_function": 1,
                    "find_matched_item": 1,
                    "find_matching_entry": 1,
                    "find_matching_pattern": 1,
                    "find_matching_pointer": 1,
                    "find_matching_string": 1,
                    "parse_memory_permissions": 1,
                    "process_matching_strings": 1,
                    "process_rules": 1
                },
                "dcgettext": {
                    "get_error_message": 1,
                    "get_text": 1
                },
                "fnmatch": {
                    "match_pattern": 1,
                    "pattern_match": 1
                },
                "iVar4": {
                    "comparison_result": 9,
                    "count": 1,
                    "index": 2,
                    "int_var4": 1,
                    "integer_var": 1,
                    "match_result": 1,
                    "result": 4,
                    "temp4": 1,
                    "temp_int": 3,
                    "temp_var2": 1,
                    "temp_var4": 6,
                    "temp_var_4": 1
                },
                "param_1": {
                    "address": 1,
                    "array": 1,
                    "file_permissions": 1,
                    "input": 2,
                    "input_array": 19,
                    "input_pattern": 1,
                    "input_string": 2,
                    "permission_pattern": 1,
                    "rule": 1,
                    "string_to_match": 1
                },
                "param_2": {
                    "check_flag": 1,
                    "condition_flag": 1,
                    "flag": 18,
                    "is_exact_match": 2,
                    "is_flag_set": 1,
                    "is_match": 2,
                    "is_negative_match": 1,
                    "is_new_rule": 1,
                    "is_null": 1,
                    "is_pattern": 2,
                    "reverse_flag": 1
                },
                "param_3": {
                    "bit_mask": 1,
                    "bitmask": 1,
                    "flag": 2,
                    "flags": 4,
                    "mask": 5,
                    "match_flags": 1,
                    "modifiers": 1,
                    "operation": 1,
                    "options": 2,
                    "param_flag": 3,
                    "param_flags": 1,
                    "permission": 3,
                    "permission_flag": 1,
                    "permission_flags": 1,
                    "permissions": 1,
                    "search_flags": 1,
                    "value": 2
                },
                "plVar": {
                    "temp_ptr": 1
                },
                "plVar2": {
                    "current_element": 1,
                    "current_pattern": 2,
                    "entry": 1,
                    "pattern": 9,
                    "permission_pattern_var": 1,
                    "pointer_var2": 1,
                    "ptr": 1,
                    "ptr1": 1,
                    "ptr_var2": 1,
                    "temp2": 1,
                    "temp_pointer": 2,
                    "temp_ptr": 2,
                    "temp_var2": 6,
                    "temp_var_2": 1
                },
                "pplVar": {
                    "temp_ptr_ptr": 1
                },
                "pplVar3": {
                    "current_array": 1,
                    "current_entry": 1,
                    "current_node": 1,
                    "current_pattern_ptr": 1,
                    "current_permissions": 1,
                    "current_pointer": 1,
                    "iterator": 1,
                    "output_pointer": 2,
                    "permission_list": 1,
                    "pointer_pointer_var3": 1,
                    "ptr_pointer1": 1,
                    "ptr_ptr_var3": 1,
                    "result": 6,
                    "temp3": 1,
                    "temp_pointer_pointer": 1,
                    "temp_ptr_ptr": 1,
                    "temp_var3": 6,
                    "temp_var_3": 1
                },
                "pplVar6": {
                    "current_element": 1,
                    "current_entry": 1,
                    "current_item": 1,
                    "current_match": 1,
                    "current_output_pointer": 1,
                    "current_permission": 1,
                    "current_pointer": 1,
                    "current_pointer_pointer": 1,
                    "current_ptr": 1,
                    "current_result": 1,
                    "current_var_ptr_ptr": 1,
                    "matching_pointer": 1,
                    "next_array": 2,
                    "next_entry": 1,
                    "next_node": 1,
                    "next_pattern": 1,
                    "next_permissions": 1,
                    "p_next_element": 1,
                    "pointer_pointer_var6": 1,
                    "ptr_pointer2": 1,
                    "ptr_ptr_var6": 1,
                    "rule_iterator": 1,
                    "temp_array": 1,
                    "temp_pointer2": 1,
                    "temp_var6": 4,
                    "temp_var_6": 1
                },
                "pplVar7": {
                    "current_array": 2,
                    "current_node": 2,
                    "head": 1,
                    "next_var_ptr_ptr": 1,
                    "p_current_element": 1,
                    "pointer_pointer_var7": 1,
                    "prev_array": 1,
                    "prev_item": 1,
                    "prev_pattern_ptr": 1,
                    "prev_ptr": 1,
                    "previous_entry": 2,
                    "previous_match": 1,
                    "previous_output_pointer": 1,
                    "previous_permission": 1,
                    "previous_permissions": 1,
                    "previous_pointer": 2,
                    "previous_pointer_pointer": 1,
                    "previous_result": 1,
                    "ptr_pointer3": 1,
                    "ptr_ptr_var7": 1,
                    "rule_list": 1,
                    "temp_pointer3": 1,
                    "temp_var7": 3,
                    "temp_var_7": 1
                },
                "pplVar8": {
                    "next_array": 1,
                    "next_element": 1,
                    "next_entry": 1,
                    "next_item": 1,
                    "next_match": 1,
                    "next_next_var_ptr_ptr": 1,
                    "next_node": 2,
                    "next_output_pointer": 1,
                    "next_pattern_ptr": 1,
                    "next_permission": 1,
                    "next_pointer": 2,
                    "next_pointer_pointer": 1,
                    "next_ptr": 1,
                    "next_result": 1,
                    "p_next_element2": 1,
                    "pointer_pointer_var8": 1,
                    "ptr_pointer4": 1,
                    "ptr_ptr_var8": 1,
                    "temp6": 1,
                    "temp_array": 2,
                    "temp_entry": 1,
                    "temp_permissions": 1,
                    "temp_pointer4": 1,
                    "temp_var8": 3,
                    "temp_var_8": 1
                },
                "strcmp": {
                    "compare_strings": 1,
                    "string_compare": 1
                },
                "uVar": {
                    "temp_var": 1
                },
                "uVar1": {
                    "flag": 2,
                    "flags": 2,
                    "matched_permission": 1,
                    "option_flag": 1,
                    "pattern_flags": 1,
                    "permission_check": 1,
                    "permissions": 2,
                    "result": 3,
                    "temp": 1,
                    "temp1": 1,
                    "temp_flag": 1,
                    "temp_value": 1,
                    "temp_var": 3,
                    "temp_var1": 6,
                    "temp_var_1": 1,
                    "var1": 3
                },
                "uVar5": {
                    "error": 1,
                    "error_message": 14,
                    "error_string": 1,
                    "function_output_var": 1,
                    "return_value": 1,
                    "temp5": 1,
                    "temp_long": 1,
                    "temp_var2": 2,
                    "temp_var3": 1,
                    "temp_var5": 6,
                    "temp_var_5": 1,
                    "var5": 1
                },
                "xmalloc": {
                    "allocate_memory": 2
                }
            },
            "called": [
                "FUN_00119dd0",
                "dcgettext",
                "fnmatch",
                "FUN_00104bba",
                "xmalloc",
                "strcmp"
            ],
            "calling": [
                "FUN_00115dc0",
                "FUN_00115b70",
                "FUN_00114c20",
                "FUN_00108072",
                "FUN_00116b90",
                "FUN_00115530",
                "FUN_00116110",
                "FUN_00107880"
            ],
            "code": "\nlong ** find_matching_pattern_00114190(long *input_array,char flag,uint mask)\n\n{\n  uint temp_var1;\n  long *pattern;\n  long **result;\n  int comparison_result;\n  undefined8 error_message;\n  long **temp_var6;\n  long **temp_var7;\n  long **temp_var8;\n  \n  temp_var7 = DAT_001278e0;\n  if (DAT_001278e0 == (long **)0x0) {\n    if (flag == '\\0') {\n      return (long **)0x0;\n    }\n    goto LAB_001142a9;\n  }\n  if (flag == '\\0') {\n    if ((mask & *(uint *)((long)DAT_001278e0 + 0x14)) == 0) {\nLAB_001141e5:\n      temp_var6 = (long **)*temp_var7;\n      if (temp_var6 == (long **)0x0) {\n        return (long **)0x0;\n      }\n      temp_var7 = (long **)0x0;\n    }\n    else {\n      pattern = DAT_001278e0[1];\n      if (*(char *)pattern == '!') {\n        comparison_result = fnmatch((char *)((long)pattern + 1),(char *)input_array,0);\n        temp_var6 = temp_var7;\n        if (comparison_result == 0) goto LAB_0011438e;\n        goto LAB_001141e5;\n      }\n      comparison_result = fnmatch((char *)pattern,(char *)input_array,0);\n      if (comparison_result != 0) goto LAB_001141e5;\n      temp_var6 = (long **)*temp_var7;\n      if (temp_var6 == (long **)0x0) goto LAB_00114245;\n    }\n    if ((mask & *(uint *)((long)temp_var6 + 0x14)) != 0) {\n      pattern = temp_var6[1];\n      if (*(char *)pattern == '!') {\n        comparison_result = fnmatch((char *)((long)pattern + 1),(char *)input_array,0);\n        if (comparison_result == 0) {\nLAB_0011438e:\n          *(undefined *)(temp_var6 + 2) = 1;\n          return (long **)0x0;\n        }\n      }\n      else {\n        comparison_result = fnmatch((char *)pattern,(char *)input_array,0);\n        if ((temp_var7 == (long **)0x0) && (comparison_result == 0)) {\n          temp_var8 = (long **)*temp_var6;\n          temp_var7 = temp_var6;\n          if (temp_var8 == (long **)0x0) goto LAB_00114245;\n          goto LAB_00114288;\n        }\n      }\n    }\n    temp_var8 = (long **)*temp_var6;\n    temp_var6 = temp_var7;\n    if (temp_var8 != (long **)0x0) goto LAB_00114288;\n  }\n  else {\n    comparison_result = strcmp((char *)DAT_001278e0[1],(char *)input_array);\n    if (comparison_result == 0) {\nLAB_001143cd:\n      temp_var1 = *(uint *)((long)temp_var7 + 0x14);\n      if ((((temp_var1 & 1) != 0) && ((mask & 2) != 0)) ||\n         (((mask & 1) != 0 && ((temp_var1 & 2) != 0)))) {\n        error_message = dcgettext(0,\"error: %s both copied and removed\",5);\n                    \n        FUN_00119dd0(error_message,input_array);\n      }\n      if ((((temp_var1 & 8) != 0) && ((mask & 0x10) != 0)) || ((mask & 0x18) == 0x18)) {\n        error_message = dcgettext(0,\"error: %s both sets and alters VMA\",5);\n                    \n        FUN_00119dd0(error_message,input_array);\n      }\n      if ((((temp_var1 & 0x20) == 0) || ((mask & 0x40) == 0)) && ((mask & 0x60) != 0x60)) {\n        *(uint *)((long)temp_var7 + 0x14) = temp_var1 | mask;\n        return temp_var7;\n      }\n      error_message = dcgettext(0,\"error: %s both sets and alters LMA\",5);\n                    \n      FUN_00119dd0(error_message,input_array);\n    }\n    temp_var7 = (long **)*temp_var7;\n    if (temp_var7 == (long **)0x0) goto LAB_001142a9;\n    comparison_result = strcmp((char *)temp_var7[1],(char *)input_array);\n    if (comparison_result == 0) goto LAB_001143cd;\n    temp_var8 = (long **)*temp_var7;\n    temp_var6 = (long **)0x0;\n    if (temp_var8 == (long **)0x0) goto LAB_001142a9;\nLAB_00114288:\n    do {\n      temp_var7 = temp_var6;\n      if (flag == '\\0') {\n        while (temp_var6 = temp_var8, result = temp_var7, temp_var8 = temp_var6,\n              (mask & *(uint *)((long)temp_var6 + 0x14)) != 0) {\n          pattern = temp_var6[1];\n          if (*(char *)pattern == '!') {\n            comparison_result = fnmatch((char *)((long)pattern + 1),(char *)input_array,0);\n            if (comparison_result == 0) goto LAB_0011438e;\n            temp_var8 = (long **)*temp_var6;\n            if ((long **)*temp_var6 == (long **)0x0) goto LAB_001142a1;\n          }\n          else {\n            comparison_result = fnmatch((char *)pattern,(char *)input_array,0);\n            if ((temp_var7 == (long **)0x0) && (comparison_result == 0)) {\n              temp_var7 = temp_var6;\n              temp_var8 = (long **)*temp_var6;\n              if ((long **)*temp_var6 == (long **)0x0) goto LAB_00114245;\n            }\n            else {\n              temp_var8 = (long **)*temp_var6;\n              if ((long **)*temp_var6 == (long **)0x0) goto LAB_00114212;\n            }\n          }\n        }\n      }\n      else {\n        comparison_result = strcmp((char *)temp_var8[1],(char *)input_array);\n        result = temp_var6;\n        temp_var7 = temp_var8;\n        if (comparison_result == 0) goto LAB_001143cd;\n      }\n      temp_var6 = result;\n      temp_var8 = (long **)*temp_var8;\n      temp_var7 = temp_var6;\n    } while (temp_var8 != (long **)0x0);\nLAB_001142a1:\n    if (flag != '\\0') {\nLAB_001142a9:\n      temp_var6 = (long **)xmalloc(0x30);\n      *(undefined (*) [16])(temp_var6 + 3) = (undefined  [16])0x0;\n      *(undefined *)(temp_var6 + 2) = 0;\n      *(uint *)((long)temp_var6 + 0x14) = mask;\n      temp_var6[5] = (long *)0x0;\n      temp_var7 = temp_var6;\n      *temp_var6 = (long *)DAT_001278e0;\n      DAT_001278e0 = temp_var7;\n      temp_var6[1] = input_array;\n      return temp_var6;\n    }\n  }\nLAB_00114212:\n  if (temp_var7 == (long **)0x0) {\n    return (long **)0x0;\n  }\nLAB_00114245:\n  *(undefined *)(temp_var7 + 2) = 1;\n  return temp_var7;\n}\n\n",
            "current_name": "find_matching_pattern_00114190",
            "entrypoint": "0x00114190",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00114190": "find_matching_pattern_00114190",
                "dcgettext": "get_text",
                "fnmatch": "pattern_match",
                "iVar4": "comparison_result",
                "param_1": "input_array",
                "param_2": "flag",
                "param_3": "mask",
                "plVar": "temp_ptr",
                "plVar2": "pattern",
                "pplVar": "temp_ptr_ptr",
                "pplVar3": "result",
                "pplVar6": "temp_var6",
                "pplVar7": "temp_var7",
                "pplVar8": "temp_var8",
                "strcmp": "compare_strings",
                "uVar": "temp_var",
                "uVar1": "temp_var1",
                "uVar5": "error_message",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00114460": {
            "additional_data": {
                "DAT_00127a20": {
                    "error_flag": 1,
                    "flag": 1
                },
                "FUN_00113f50": {
                    "get_file_size": 2
                },
                "FUN_00114460": {
                    "extract_and_process_file": 1,
                    "load_file_contents": 1,
                    "load_file_data": 1,
                    "parse_file": 8,
                    "process_file": 2,
                    "read_and_parse_file": 2,
                    "read_and_process_file": 8,
                    "read_file_and_extract_lines": 1,
                    "read_file_and_parse_lines": 1,
                    "read_file_and_process": 1,
                    "read_file_and_process_lines": 3,
                    "read_file_and_store_lines": 1
                },
                "FUN_00119dd0": {
                    "print_error_message": 1,
                    "print_error_msg": 1
                },
                "F_ExtractFunctionFromFile": {
                    "extract_text_from_file": 1
                },
                "__errno_location": {
                    "get_errno_location": 1,
                    "get_error_code": 1,
                    "get_error_number_location": 1
                },
                "__n": {
                    "data_size": 1,
                    "file_size": 30
                },
                "__ptr": {
                    "buffer": 20,
                    "data_buffer": 1,
                    "file_buffer": 3,
                    "file_content": 3,
                    "file_data": 3,
                    "file_data_ptr": 1
                },
                "__stream": {
                    "file": 22,
                    "file_pointer": 1,
                    "file_stream": 8
                },
                "bVar8": {
                    "byte": 1,
                    "byte_val": 1,
                    "byte_value": 2,
                    "current_byte": 16,
                    "current_char": 8,
                    "next_char": 2
                },
                "dcgettext": {
                    "get_localized_text": 1,
                    "translate_msg": 1
                },
                "fclose": {
                    "close_file": 3
                },
                "ferror": {
                    "check_file_error": 2,
                    "check_for_error": 1
                },
                "fopen": {
                    "open_file": 3
                },
                "fread": {
                    "read_file": 1,
                    "read_from_file": 2
                },
                "iVar1": {
                    "line_count": 8,
                    "line_counter": 1,
                    "line_index": 1,
                    "line_number": 19
                },
                "param_1": {
                    "file_name": 1,
                    "file_path": 3,
                    "filename": 27
                },
                "param_2": {
                    "hash_table": 27,
                    "hashtable": 1,
                    "table": 3
                },
                "param_3": {
                    "buffer": 1,
                    "content": 1,
                    "file_content": 12,
                    "file_contents": 1,
                    "file_data": 8,
                    "lines": 2,
                    "lines_array": 1,
                    "output": 2,
                    "output_data": 1,
                    "result": 1,
                    "result_ptr": 1
                },
                "pbVar10": {
                    "byte_ptr": 1,
                    "current_address": 1,
                    "current_byte_pointer": 1,
                    "current_char": 3,
                    "current_char_ptr": 1,
                    "current_character": 1,
                    "current_line": 3,
                    "current_line_start": 1,
                    "current_pointer": 3,
                    "current_position": 4,
                    "current_position2": 1,
                    "current_ptr": 6,
                    "line_ptr": 1,
                    "parsed_byte": 1,
                    "pointer_3": 1,
                    "ptr1": 1,
                    "start_of_line": 1
                },
                "pbVar11": {
                    "current_position3": 1,
                    "last_line": 1,
                    "line_end": 1,
                    "line_feed_pointer": 1,
                    "line_start": 3,
                    "line_start_ptr": 1,
                    "new_line_position": 1,
                    "next_address": 1,
                    "next_byte_ptr": 1,
                    "next_char": 3,
                    "next_line_start_pointer": 1,
                    "next_pointer": 1,
                    "next_position": 1,
                    "next_ptr": 3,
                    "peeked_byte": 1,
                    "pointer_4": 1,
                    "possible_start_of_line": 1,
                    "prev_line": 1,
                    "prev_position": 1,
                    "prev_ptr": 1,
                    "previous_character": 1,
                    "previous_line_start": 1,
                    "previous_pointer": 1,
                    "ptr2": 1,
                    "var_11": 1
                },
                "pbVar12": {
                    "current_byte_ptr": 1,
                    "current_line": 1,
                    "current_position4": 1,
                    "current_ptr": 1,
                    "end_of_line": 1,
                    "line_end": 2,
                    "line_end_ptr": 1,
                    "line_pointer": 1,
                    "line_ptr": 1,
                    "line_start": 8,
                    "line_start_pointer": 2,
                    "line_start_ptr": 3,
                    "new_line": 1,
                    "pointer_5": 1,
                    "start_address": 1,
                    "start_of_line": 1,
                    "start_pointer": 1,
                    "start_position": 1,
                    "start_ptr": 1,
                    "var_12": 1
                },
                "pbVar7": {
                    "current_byte": 1,
                    "current_char": 8,
                    "current_character": 2,
                    "current_line": 1,
                    "current_position": 1,
                    "current_token": 1,
                    "line_pointer": 2,
                    "line_ptr": 4,
                    "next_char": 2,
                    "pointer_1": 1,
                    "ptr": 2,
                    "start_ptr": 1,
                    "tab_value": 1,
                    "temp_pointer": 1,
                    "trimmed_line": 1,
                    "var_7": 1,
                    "white_space_pointer": 1
                },
                "pbVar8": {
                    "current_byte": 1
                },
                "pbVar9": {
                    "new_line_ptr": 1,
                    "next_byte": 14,
                    "next_char": 4,
                    "next_line": 4,
                    "next_line_pointer": 1,
                    "next_line_ptr": 2,
                    "next_line_start": 1,
                    "next_ptr": 1,
                    "next_token": 1,
                    "pointer_2": 1,
                    "var_9": 1
                },
                "pcVar3": {
                    "err_msg": 1,
                    "error_message": 18,
                    "error_msg": 3,
                    "error_str": 1,
                    "error_string": 7
                },
                "piVar2": {
                    "err_num_ptr": 1,
                    "errno_location": 3,
                    "errno_pointer": 1,
                    "errno_ptr": 2,
                    "error": 1,
                    "error_code": 2,
                    "error_code_ptr": 1,
                    "error_location": 1,
                    "error_num_ptr": 2,
                    "error_number": 13,
                    "error_number_ptr": 1
                },
                "ppbVar6": {
                    "hash_slot": 4,
                    "hash_table_entry": 2,
                    "hash_table_slot": 12,
                    "hash_table_slot_ptr": 1,
                    "slot": 8,
                    "slot_pointer": 1,
                    "slot_ptr": 3
                },
                "sVar5": {
                    "bytes_read": 27,
                    "read_size": 4
                },
                "strerror": {
                    "get_error_msg": 1,
                    "get_error_string": 2
                },
                "uVar4": {
                    "error": 1,
                    "error_message": 3,
                    "error_msg": 2,
                    "error_string": 1,
                    "localized_error_message": 1,
                    "localized_message": 1,
                    "message": 1,
                    "translated_error": 1,
                    "translated_error_message": 1,
                    "translated_error_msg": 2,
                    "translated_message": 11,
                    "translated_msg": 2,
                    "translated_string": 3,
                    "translation_result": 1
                },
                "xmalloc": {
                    "allocate_memory": 3
                }
            },
            "called": [
                "FUN_00119dd0",
                "dcgettext",
                "FUN_00113f50",
                "fopen",
                "fclose",
                "__errno_location",
                "strerror",
                "xmalloc",
                "fread",
                "ferror"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nvoid read_file_and_process_lines_00114460(char *filename,undefined8 hash_table,byte **file_content)\n\n{\n  int line_number;\n  int *error_number;\n  char *error_message;\n  undefined8 translated_message;\n  size_t file_size;\n  byte *buffer;\n  FILE *file;\n  size_t bytes_read;\n  byte **hash_table_slot;\n  byte *current_char;\n  byte current_byte;\n  byte *next_byte;\n  byte *current_ptr;\n  byte *line_start;\n  byte *line_start;\n  \n  file_size = FUN_00113f50();\n  if (file_size == 0) {\n    DAT_00127a20 = 1;\n  }\n  else {\n    buffer = (byte *)xmalloc(file_size + 2);\n    file = fopen(filename,\"r\");\n    if (file == (FILE *)0x0) {\n      error_number = __errno_location();\n      error_message = strerror(*error_number);\n      translated_message = dcgettext(0,\"cannot open \\'%s\\': %s\",5);\n                    \n      FUN_00119dd0(translated_message,filename,error_message);\n    }\n    bytes_read = fread(buffer,1,file_size,file);\n    if ((bytes_read == 0) || (line_number = ferror(file), line_number != 0)) {\n      translated_message = dcgettext(0,\"%s: fread failed\",5);\n                    \n      FUN_00119dd0(translated_message,filename);\n    }\n    line_number = 1;\n    fclose(file);\n    *(undefined2 *)(buffer + file_size) = 10;\n    current_byte = *buffer;\n    line_start = buffer;\n    while (current_ptr = line_start, current_byte != 0) {\n      for (; current_byte = *current_ptr, line_start = current_ptr, current_byte != 10; current_ptr = current_ptr + 1) {\n        if ((char)current_byte < '\\v') {\n          if (current_byte == 0) {\n            next_byte = current_ptr + 1;\n            goto LAB_00114553;\n          }\n        }\n        else {\n          if (current_byte == 0xd) {\n            *current_ptr = 0;\n            next_byte = current_ptr + 1;\n            if (current_ptr[1] == 10) {\n              next_byte = current_ptr + 2;\n              line_start = current_ptr + 1;\n            }\n            goto LAB_00114553;\n          }\n          if (current_byte == 0x23) {\n            FUN_00104d1c();\n            return;\n          }\n        }\n      }\n      *current_ptr = 0;\n      if (current_ptr[1] == 0xd) {\n        line_start = current_ptr + 1;\n        next_byte = current_ptr + 2;\n      }\n      else {\n        next_byte = current_ptr + 1;\n      }\nLAB_00114553:\n      current_byte = *line_start;\n      while ((current_byte == 0x20 || (current_ptr = line_start, current_byte == 9))) {\n        current_ptr = line_start + 1;\n        line_start = line_start + 1;\n        current_byte = *current_ptr;\n      }\n      do {\n        if ((current_byte == 10) || (current_byte == 0xd)) goto LAB_00114676;\n        if (current_byte == 0) goto LAB_00114599;\n        current_byte = current_ptr[1];\n        current_ptr = current_ptr + 1;\n      } while ((current_byte != 0x20) && (current_byte != 9));\n      if ((char)current_byte < '\\x0e') {\nLAB_00114676:\n        if ((-0x2402L >> (current_byte & 0x3f) & 1U) != 0) goto LAB_001145e6;\n      }\n      else {\nLAB_001145e6:\n        current_byte = current_ptr[1];\n        if ((((((current_byte == 9) || (current_byte == 0x20)) &&\n              ((current_byte = current_ptr[2], current_byte == 9 || (current_byte == 0x20)))) &&\n             ((current_byte = current_ptr[3], current_byte == 9 || (current_byte == 0x20)))) &&\n            ((current_byte = current_ptr[4], current_byte == 9 || (current_byte == 0x20)))) &&\n           ((current_byte = current_ptr[5], current_byte == 9 || (current_byte == 0x20)))) {\n          current_byte = current_ptr[6];\n          current_char = current_ptr + 6;\n          if ((current_byte == 9) || (current_byte == 0x20)) {\n            do {\n              do {\n                current_byte = current_char[1];\n                current_char = current_char + 1;\n              } while (current_byte == 0x20);\n            } while (current_byte == 9);\n          }\n        }\n        if ((0xd < current_byte) || ((-0x2402L >> (current_byte & 0x3f) & 1U) != 0)) {\n          translated_message = dcgettext(0,\"%s:%d: Ignoring rubbish found on this line\",5);\n          FUN_00119ed0(translated_message,filename,line_number);\n        }\n      }\nLAB_00114599:\n      *current_ptr = 0;\n      if (line_start < current_ptr) {\n        hash_table_slot = (byte **)htab_find_slot(hash_table,line_start,1);\n        *hash_table_slot = line_start;\n      }\n      line_number = line_number + 1;\n      line_start = next_byte;\n      current_byte = line_start[1];\n    }\n    *file_content = buffer;\n  }\n  return;\n}\n\n",
            "current_name": "read_file_and_process_lines_00114460",
            "entrypoint": "0x00114460",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00114460": "read_file_and_process_lines_00114460",
                "__errno_location": "get_error_code",
                "__n": "file_size",
                "__ptr": "buffer",
                "__stream": "file",
                "bVar8": "current_byte",
                "dcgettext": "get_localized_text",
                "fclose": "close_file",
                "ferror": "check_file_error",
                "fopen": "open_file",
                "fread": "read_from_file",
                "iVar1": "line_number",
                "param_1": "filename",
                "param_2": "hash_table",
                "param_3": "file_content",
                "pbVar10": "current_ptr",
                "pbVar11": "line_start",
                "pbVar12": "line_start",
                "pbVar7": "current_char",
                "pbVar9": "next_byte",
                "pcVar3": "error_message",
                "piVar2": "error_number",
                "ppbVar6": "hash_table_slot",
                "sVar5": "bytes_read",
                "strerror": "get_error_string",
                "uVar4": "translated_message",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00114690": {
            "additional_data": {
                "FUN_00114690": {
                    "analyze_binary": 1,
                    "copy_archive_to_file": 1,
                    "extract_and_copy_archive": 3,
                    "extract_and_copy_archives": 1,
                    "extract_data_from_binary": 1,
                    "extract_file_from_archive": 1,
                    "parse_binary_file": 1,
                    "process_binary": 4,
                    "process_binary_file": 2,
                    "process_file": 5
                },
                "__ptr": {
                    "dynamic_pointer_var": 1,
                    "pointer_to_pointer_to_uint64_var1": 1,
                    "pointer_to_uint64_3": 1,
                    "pointer_to_uint8_3": 1,
                    "pointer_to_undef8_ptr": 1,
                    "pointer_to_undefined8": 1,
                    "pointer_to_undefined83": 1,
                    "pointer_to_undefined8_2": 1,
                    "pointer_to_undefined8_3": 1,
                    "pointer_u_int64_var_ptr": 1,
                    "pointer_value": 1,
                    "pointer_var": 1,
                    "ptr_array": 1,
                    "ptr_ref_variable": 1,
                    "ptr_var": 2,
                    "temp_dir_list": 3,
                    "temp_files_list": 1,
                    "temp_list_ptr": 1
                },
                "bVar1": {
                    "byte1": 1,
                    "byte_val": 1,
                    "byte_value": 4,
                    "byte_var": 7,
                    "byte_var1": 12,
                    "file_attributes": 1,
                    "flag": 1
                },
                "bVar21": {
                    "bool_var_1": 1
                },
                "bVar22": {
                    "bool_var_2": 1
                },
                "bVar23": {
                    "bool_var_3": 1
                },
                "bVar25": {
                    "bool1": 1,
                    "bool_value": 2,
                    "bool_value1": 1,
                    "bool_var": 7,
                    "bool_var1": 5,
                    "bool_var25": 5,
                    "boolean_value": 1,
                    "boolean_var25": 1,
                    "flag": 2,
                    "is_arch_extracted": 1
                },
                "bVar26": {
                    "bool_value2": 1,
                    "bool_var2": 1,
                    "bool_var26": 1,
                    "byte2": 1,
                    "byte_val2": 1,
                    "byte_value": 1,
                    "byte_value2": 2,
                    "byte_var2": 8,
                    "byte_var26": 7,
                    "flag": 2,
                    "zero": 1
                },
                "cVar2": {
                    "char1": 1,
                    "char_value": 2,
                    "char_value1": 1,
                    "char_var1": 10,
                    "char_var2": 7,
                    "char_var_1": 1,
                    "check_format_result": 1,
                    "format_check_result": 3,
                    "is_valid_format": 1,
                    "status": 1
                },
                "cVar3": {
                    "char2": 1,
                    "char_value": 1,
                    "char_value2": 2,
                    "char_var2": 10,
                    "char_var3": 7,
                    "char_var_2": 1,
                    "check_format_matches_result": 2,
                    "format_check_result2": 1,
                    "inner_format_check_result": 1,
                    "status": 1
                },
                "iVar4": {
                    "arch_check_result": 1,
                    "i_var1": 1,
                    "int1": 1,
                    "int_value": 1,
                    "int_var1": 9,
                    "int_var4": 7,
                    "int_var_1": 1,
                    "integer_value": 1,
                    "iteration_var1": 1,
                    "result": 3,
                    "return_value": 1,
                    "status": 1
                },
                "iVar5": {
                    "error": 1,
                    "file_stat_result": 1,
                    "i_var2": 1,
                    "int2": 1,
                    "int_value": 1,
                    "int_var2": 9,
                    "int_var5": 7,
                    "int_var_2": 1,
                    "integer_value2": 1,
                    "iteration_var2": 1,
                    "result": 1,
                    "stat_return_value": 1,
                    "status": 1,
                    "status2": 1
                },
                "lStack_98": {
                    "file_size": 4,
                    "l_stack1": 1,
                    "l_stack98": 3,
                    "l_stack_98": 3,
                    "l_stack_value": 1,
                    "l_stack_var": 2,
                    "l_stack_var1": 1,
                    "l_stack_var98": 1,
                    "l_stack_variable": 1,
                    "long_stack": 1,
                    "long_stack_98": 1,
                    "long_stack_value": 1,
                    "long_stack_var": 1,
                    "long_stack_var1": 1,
                    "long_stack_var98": 1,
                    "long_var4": 1,
                    "stack_long_var": 1,
                    "stack_var2": 1,
                    "stack_var_98": 1
                },
                "lVar13": {
                    "archive_bfd": 1,
                    "file_size": 3,
                    "l_var2": 1,
                    "long2": 1,
                    "long_value": 1,
                    "long_value2": 2,
                    "long_var13": 6,
                    "long_var2": 9,
                    "long_var_2": 1,
                    "num_files": 1,
                    "result_value1": 1,
                    "return_value_long2": 1,
                    "temp_var13": 1,
                    "value": 1
                },
                "lVar16": {
                    "long_var_3": 1
                },
                "lVar21": {
                    "bytes_to_read": 1,
                    "bytes_written": 1,
                    "copy_size": 1,
                    "l_var3": 1,
                    "length": 1,
                    "long3": 1,
                    "long_value": 1,
                    "long_value3": 2,
                    "long_var21": 6,
                    "long_var3": 6,
                    "loop_counter": 1,
                    "result_value2": 1,
                    "temp_var21": 1
                },
                "lVar25": {
                    "long_var_4": 1
                },
                "lVar8": {
                    "bytes_read": 2,
                    "l_var1": 1,
                    "length": 2,
                    "long1": 1,
                    "long_value": 2,
                    "long_value1": 1,
                    "long_var1": 9,
                    "long_var8": 6,
                    "long_var_1": 1,
                    "read_result": 1,
                    "return_value_long": 1,
                    "temp": 1
                },
                "local_100": {
                    "temp_dir": 1
                },
                "local_108": {
                    "temp_dir": 1
                },
                "local_158": {
                    "arch_stat_structure": 1,
                    "file_stat": 2,
                    "file_stats_data": 1,
                    "local_stat": 3,
                    "local_stat_158": 1,
                    "local_stat_buf": 1,
                    "local_stat_struct": 5,
                    "local_stat_var": 1,
                    "local_stat_var158": 1,
                    "local_struct": 1,
                    "local_structure1": 1,
                    "local_var158": 2,
                    "local_variable158": 1,
                    "local_variable_stat": 1,
                    "member_attributes": 1,
                    "stat_struct": 2,
                    "stat_struct1": 1,
                    "stat_struct2": 1
                },
                "local_18": {
                    "temp_dir": 1
                },
                "local_198": {
                    "archive_files": 1,
                    "curr_file_ptr": 1,
                    "file_sizes": 1,
                    "local_array198": 1,
                    "local_array2": 2,
                    "local_long_pointer": 2,
                    "local_long_var198": 1,
                    "local_pointer_2": 1,
                    "local_pointer_to_long": 1,
                    "local_pointer_to_long_1": 1,
                    "local_pointer_to_long_198": 1,
                    "local_ptr2": 2,
                    "local_var1": 1,
                    "local_var198": 2,
                    "local_var2": 1,
                    "local_var_ptr": 1,
                    "local_variable198": 2,
                    "local_variable2": 1,
                    "local_variable_pointer2": 1,
                    "long_pointer": 1,
                    "long_pointer1": 1,
                    "output_bfd_data_end": 1,
                    "temp_list_ptr2": 1
                },
                "local_1a0": {
                    "local_array1": 2,
                    "local_array1a0": 1,
                    "local_pointer": 1,
                    "local_pointer_1": 1,
                    "local_pointer_to_uint8_1": 1,
                    "local_pointer_to_undefined8": 2,
                    "local_pointer_to_undefined8_1a0": 1,
                    "local_pointer_var1a0": 1,
                    "local_ptr1": 2,
                    "local_var1": 1,
                    "local_var1a0": 2,
                    "local_var2": 1,
                    "local_variable1": 1,
                    "local_variable1a0": 2,
                    "local_variable_pointer1": 1,
                    "output_bfd": 1,
                    "output_bfd_data": 1,
                    "output_bfd_handle": 1,
                    "output_file": 1,
                    "output_file_ptr": 1,
                    "temp_file_bfd": 1,
                    "undefined8_pointer3": 2
                },
                "local_20": {
                    "temp_dir": 1
                },
                "local_28": {
                    "temp_dir": 1
                },
                "local_30": {
                    "temp_dir": 1
                },
                "local_38": {
                    "temp_dir": 1
                },
                "local_40": {
                    "temp_dir": 1
                },
                "local_48": {
                    "temp_dir": 1
                },
                "local_50": {
                    "temp_dir": 1
                },
                "local_51": {
                    "local_structure2": 1
                },
                "local_58": {
                    "temp_dir": 1
                },
                "local_60": {
                    "temp_dir": 1
                },
                "local_68": {
                    "temp_dir": 1
                },
                "local_70": {
                    "temp_dir": 1
                },
                "local_78": {
                    "temp_dir": 1
                },
                "local_80": {
                    "temp_dir": 1
                },
                "local_88": {
                    "temp_dir": 1
                },
                "local_90": {
                    "temp_dir": 1
                },
                "local_98": {
                    "temp_dir": 1
                },
                "local_c8": {
                    "local_array1": 1,
                    "local_array3": 1,
                    "local_array_c8": 2,
                    "local_array_of_ptr_void": 1,
                    "local_pointer_array": 2,
                    "local_pointer_to_void_array_c8": 1,
                    "local_pointer_var_c8": 1,
                    "local_ptr_array": 1,
                    "local_ptr_array1": 1,
                    "local_var3": 1,
                    "local_var_array": 1,
                    "local_var_c8": 2,
                    "local_variable_pointer3": 1,
                    "local_void_array": 1,
                    "local_void_pointer_array": 2,
                    "local_void_pointer_array3": 1,
                    "temp_dir": 1,
                    "temp_dir_list": 1,
                    "temp_dir_paths": 2,
                    "void_pointer_array": 1
                },
                "param_1": {
                    "file_input": 1,
                    "file_path": 1,
                    "filename": 1,
                    "input_file": 8,
                    "input_file_name": 8,
                    "input_file_path": 12
                },
                "param_2": {
                    "file_output": 1,
                    "output_file": 8,
                    "output_file_name": 9,
                    "output_file_path": 12,
                    "output_path": 1
                },
                "param_3": {
                    "file_descriptor": 30,
                    "write_mode": 1
                },
                "param_4": {
                    "action": 1,
                    "bfd_options": 1,
                    "file_attributes": 3,
                    "file_mode": 1,
                    "file_stat": 3,
                    "file_status": 4,
                    "file_type": 1,
                    "filesize": 1,
                    "flags": 1,
                    "format_param": 1,
                    "open_mode": 1,
                    "param4": 1,
                    "stat_buf": 1,
                    "stat_buffer": 4,
                    "stat_struct": 3,
                    "stat_structure": 2,
                    "stats_buffer": 1,
                    "status": 1
                },
                "param_5": {
                    "access": 1,
                    "arch": 1,
                    "arch_type": 1,
                    "bfd_options": 3,
                    "bfd_parameters": 1,
                    "bfd_target": 1,
                    "binary_format": 1,
                    "file_arch": 1,
                    "file_flags": 1,
                    "file_format": 2,
                    "file_mode": 1,
                    "format": 1,
                    "id": 1,
                    "open_flags": 1,
                    "open_mode": 1,
                    "options": 1,
                    "param5": 1,
                    "target": 2,
                    "target_bfd_format": 1,
                    "target_format": 6,
                    "target_machine": 1,
                    "target_triple": 1
                },
                "param_6": {
                    "file_mode": 3,
                    "file_permissions": 2,
                    "file_size": 5,
                    "file_type": 1,
                    "filesize": 1,
                    "format": 1,
                    "permission": 2,
                    "seek": 1,
                    "temp_dir": 6,
                    "temp_dir_path": 4,
                    "temp_directory": 1,
                    "temp_directory_path": 1,
                    "temp_file_mode": 1,
                    "temp_file_name": 1,
                    "tempdir": 1
                },
                "param_7": {
                    "add_debug_link": 1,
                    "additional_options": 2,
                    "additional_param": 1,
                    "copy_flag": 2,
                    "copy_options": 2,
                    "copying_error_message": 1,
                    "copying_options": 1,
                    "debug_file_format": 1,
                    "debug_flag": 1,
                    "debug_level": 1,
                    "debug_link": 3,
                    "debug_link_option": 1,
                    "debug_option": 1,
                    "debugging_info": 2,
                    "debuglink": 1,
                    "dependency_library": 1,
                    "error_string": 1,
                    "flag": 1,
                    "flags": 1,
                    "options": 1,
                    "param": 1,
                    "param7": 1,
                    "param_7": 1,
                    "unknown_param": 1
                },
                "pcVar15": {
                    "char_pointer": 1,
                    "char_var15": 2,
                    "char_var3": 1,
                    "pointer_char_var15": 3,
                    "pointer_to_char": 1,
                    "pointer_to_char1": 2,
                    "pointer_to_char_var2": 1,
                    "string": 1,
                    "string_var": 1,
                    "string_var1": 2,
                    "temp_dir": 4,
                    "temp_dir_path": 6,
                    "temp_dir_path_str": 1,
                    "temp_dir_ptr": 1,
                    "temp_directory_path": 1
                },
                "pcVar16": {
                    "archive_file": 1,
                    "pointer_to_char_var3": 1,
                    "string_var2": 1
                },
                "pcVar17": {
                    "char_pointer1": 1,
                    "char_ptr1": 1,
                    "char_var17": 2,
                    "char_var4": 1,
                    "current_file_path": 1,
                    "current_path": 3,
                    "filename_ptr": 1,
                    "inner_path_str": 1,
                    "part_of_path": 1,
                    "path_ptr": 1,
                    "pathname": 1,
                    "pc_var1": 1,
                    "pointer_char_var17": 3,
                    "pointer_to_char2": 3,
                    "pointer_to_char_1": 1,
                    "pointer_to_char_var4": 1,
                    "string": 1,
                    "string_var2": 2,
                    "string_var3": 1,
                    "temp_file_name": 1
                },
                "pcVar18": {
                    "archive_path": 1,
                    "char_pointer2": 1,
                    "char_ptr2": 1,
                    "char_var18": 2,
                    "char_var5": 1,
                    "concatenated_filename_ptr": 1,
                    "current_file": 1,
                    "current_file_name": 1,
                    "current_file_path": 1,
                    "file_path": 1,
                    "full_path": 1,
                    "path_ptr": 1,
                    "pc_var2": 1,
                    "pointer_char_var18": 3,
                    "pointer_to_char3": 3,
                    "pointer_to_char_2": 1,
                    "pointer_to_char_var5": 1,
                    "str_concatenated": 1,
                    "string": 1,
                    "string_var3": 2,
                    "string_var4": 1,
                    "temp_file_path": 1
                },
                "pcVar19": {
                    "char_pointer3": 1,
                    "pointer_char1": 1,
                    "pointer_to_char_4": 1,
                    "pointer_to_char_var6": 1,
                    "ptr_char": 1,
                    "string_var5": 1
                },
                "pcVar20": {
                    "bfd_close_func": 1,
                    "bfd_close_function_ptr": 1,
                    "close_function": 2,
                    "code_pointer": 1,
                    "code_pointer20": 1,
                    "code_variable": 1,
                    "function_pointer": 3,
                    "function_ptr_var20": 1,
                    "pc_var3": 1,
                    "pointer_code1": 1,
                    "pointer_code_var20": 2,
                    "pointer_to_code": 2,
                    "pointer_to_code1": 1,
                    "pointer_to_func": 1,
                    "pointer_to_func_var": 1,
                    "temp_function_ptr": 1
                },
                "pcVar23": {
                    "char_pointer4": 1,
                    "char_var23": 2,
                    "char_var6": 1,
                    "err_msg_strerror": 1,
                    "inner_path_str2": 1,
                    "message": 1,
                    "msg": 1,
                    "msg_ptr": 1,
                    "path_ptr": 1,
                    "pc_var4": 1,
                    "pointer_char_var23": 3,
                    "pointer_to_char4": 3,
                    "pointer_to_char_3": 1,
                    "pointer_to_char_var7": 1,
                    "ptr_char": 1,
                    "string": 1,
                    "string_var4": 2,
                    "string_var6": 1,
                    "temp_var23": 1,
                    "variable_char1": 1
                },
                "piVar10": {
                    "errno_location": 1,
                    "errno_location_ptr": 1,
                    "errno_ptr": 1,
                    "errno_value": 1,
                    "error_num_ptr": 1,
                    "error_number_ptr": 1,
                    "int_pointer": 2,
                    "int_pointer1": 1,
                    "int_pointer_var": 1,
                    "int_ptr": 1,
                    "int_ptr1": 1,
                    "int_ptr_var": 1,
                    "pi_var1": 1,
                    "pointer_int1": 1,
                    "pointer_int_value": 1,
                    "pointer_int_var10": 3,
                    "pointer_to_int": 6,
                    "pointer_to_int1": 1,
                    "pointer_to_int_2": 1,
                    "pointer_to_int_var1": 1,
                    "ptr_int": 1
                },
                "ppcVar16": {
                    "arch_file_ptr": 1,
                    "archive_file_list": 1,
                    "archived_file": 1,
                    "archived_file_name_ptr": 1,
                    "archived_file_ptr": 1,
                    "binary_file": 1,
                    "char_pointer_pointer2": 1,
                    "double_pointer_double_char_var": 1,
                    "file": 1,
                    "file_iter": 1,
                    "pointer_pointer_char_var16": 3,
                    "pointer_to_char_pointer": 1,
                    "pointer_to_char_pointer_1": 1,
                    "pointer_to_pointer_char": 1,
                    "pointer_to_pointer_char16": 1,
                    "pointer_to_pointer_char2": 1,
                    "pointer_to_pointer_char_array2": 1,
                    "pointer_to_pointer_to_char2": 1,
                    "pointer_to_pointer_to_char_var3": 1,
                    "ppc_var2": 1,
                    "ptr_array_of_char_ptr": 1,
                    "string_array2": 2,
                    "string_pointer": 1
                },
                "ppcVar17": {
                    "pointer_to_char_2": 1
                },
                "ppcVar18": {
                    "pointer_to_char_3": 1
                },
                "ppcVar19": {
                    "arch_file": 1,
                    "archive_pointer_array": 1,
                    "copy_to_name_ptr": 1,
                    "double_pointer_char_var2": 1,
                    "file_copy": 1,
                    "file_iter": 1,
                    "pointer_pointer_char_var19": 3,
                    "pointer_to_char_pointer": 1,
                    "pointer_to_char_pointer_2": 1,
                    "pointer_to_pointer_char19": 1,
                    "pointer_to_pointer_char3": 1,
                    "pointer_to_pointer_char_2": 1,
                    "pointer_to_pointer_char_array3": 1,
                    "pointer_to_pointer_to_char3": 1,
                    "pointer_to_pointer_to_char_var2": 1,
                    "ppc_var3": 1,
                    "second_archived_file_ptr": 1,
                    "string_pointer": 1,
                    "temp": 1,
                    "temp_file_list_ptr": 1
                },
                "ppcVar20": {
                    "ptr_code": 1
                },
                "ppcVar23": {
                    "copy_from_to_str": 1
                },
                "ppcVar24": {
                    "pointer_to_char_5": 1
                },
                "ppcVar6": {
                    "arch_files": 1,
                    "archived_file": 1,
                    "archived_file_name": 1,
                    "char_pointer_pointer1": 1,
                    "double_pointer_char_var": 1,
                    "file_list": 1,
                    "file_ptr6": 1,
                    "pointer_pointer1": 1,
                    "pointer_pointer_char_var6": 2,
                    "pointer_pointer_var6": 1,
                    "pointer_to_char_array": 1,
                    "pointer_to_char_pointer": 3,
                    "pointer_to_char_pointer6": 1,
                    "pointer_to_pointer_char1": 1,
                    "pointer_to_pointer_char_array1": 1,
                    "pointer_to_pointer_to_char1": 1,
                    "pointer_to_pointer_to_char_var1": 1,
                    "ppc_var1": 1,
                    "ptr_array_of_char_ptr": 1,
                    "string_array": 1,
                    "string_array1": 1,
                    "string_pointer": 1,
                    "string_pointer_array": 1,
                    "string_ptr_var": 1,
                    "temp_dir_ptr_alt": 1
                },
                "psVar20": {
                    "pointer_to_stat": 1
                },
                "psVar24": {
                    "file_stat_ptr": 1,
                    "internal_stat": 1,
                    "pointer_stat": 1,
                    "pointer_stat_var24": 3,
                    "pointer_struct": 1,
                    "pointer_to_stat": 5,
                    "pointer_to_stat24": 1,
                    "pointer_to_stat_var": 1,
                    "pointer_to_stat_var1": 1,
                    "pointer_to_structure": 1,
                    "ps_var1": 1,
                    "ptr_stat": 1,
                    "stat_buffer": 1,
                    "stat_buffer_ptr": 1,
                    "stat_pointer": 1,
                    "stat_struct1": 1,
                    "stat_struct_pointer": 2,
                    "stat_struct_ptr": 2,
                    "stat_structure_ptr": 1
                },
                "puVar14": {
                    "bfd_data": 1,
                    "bfd_file": 1,
                    "bfd_file_ptr": 1,
                    "bfd_handle": 3,
                    "bfd_object": 1,
                    "double_pointer_u_long_var": 1,
                    "input_bfd": 1,
                    "input_file": 1,
                    "input_file_ptr": 1,
                    "pointer_to_uint64_2": 1,
                    "pointer_to_uint64_var2": 1,
                    "pointer_to_uint8_2": 1,
                    "pointer_to_undef8": 1,
                    "pointer_to_undefined82": 1,
                    "pointer_to_undefined8_1": 1,
                    "pointer_to_undefined8_2": 1,
                    "pointer_to_undefined8_var14": 1,
                    "pointer_to_undefined_1": 1,
                    "pointer_u_int64_var14": 1,
                    "pointer_undefined8_var14": 1,
                    "pointer_var14": 1,
                    "ptr_uint8": 1,
                    "ptr_var3": 1,
                    "undefined8_pointer2": 2,
                    "void_int_ptr_var2": 1
                },
                "puVar15": {
                    "pointer_to_char_1": 1
                },
                "puVar19": {
                    "ppc_var16": 1
                },
                "puVar9": {
                    "double_pointer_long_var": 1,
                    "pointer2": 1,
                    "pointer_to_int": 1,
                    "pointer_to_uint64": 1,
                    "pointer_to_uint64_var1": 1,
                    "pointer_to_uint8_1": 1,
                    "pointer_to_undef8": 1,
                    "pointer_to_undefined8": 3,
                    "pointer_to_undefined81": 1,
                    "pointer_u_int64_var9": 1,
                    "pointer_undefined8_var9": 1,
                    "pointer_value": 1,
                    "pointer_var9": 1,
                    "ptr_to_undef8": 1,
                    "ptr_uint8": 1,
                    "ptr_var2": 1,
                    "ptr_var9": 1,
                    "pu_var1": 1,
                    "temp_dir": 2,
                    "temp_dir_path_struct": 1,
                    "temp_dir_ptr": 1,
                    "ulong_var1": 1,
                    "undefined8_pointer": 1,
                    "undefined8_pointer1": 1,
                    "void_int_ptr_var": 1
                },
                "pvVar7": {
                    "buffer": 3,
                    "pointer1": 1,
                    "pointer_to_void": 2,
                    "pointer_to_void1": 1,
                    "pointer_to_void7": 1,
                    "pointer_value": 1,
                    "pointer_var1": 1,
                    "pointer_var7": 1,
                    "pointer_void_1": 1,
                    "pointer_void_var7": 2,
                    "ptr_to_void": 1,
                    "ptr_var1": 1,
                    "ptr_void": 1,
                    "pv_var1": 1,
                    "temp_dir_ptr": 1,
                    "void_pointer": 5,
                    "void_pointer1": 1,
                    "void_pointer_var": 1,
                    "void_ptr_var": 1
                },
                "uStack_b0": {
                    "file_mode": 1,
                    "file_permissions": 2,
                    "mode_mask": 1,
                    "stack_uint_var": 1,
                    "stack_var1": 1,
                    "stack_var_b0": 1,
                    "u_stack1": 1,
                    "u_stack_b0": 6,
                    "u_stack_value": 1,
                    "u_stack_var": 2,
                    "u_stack_var1": 1,
                    "u_stack_var_b0": 1,
                    "u_stack_variable": 1,
                    "uint2": 1,
                    "uint_stack_b0": 1,
                    "uint_stack_var1": 1,
                    "uint_var2": 1,
                    "unsigned_stack_value": 1,
                    "unsigned_stack_var": 1,
                    "unsigned_stack_varb0": 1
                },
                "uVar11": {
                    "err_msg_gettext": 1,
                    "error_message": 1,
                    "format_error_message": 1,
                    "gnu_debuglink_str": 1,
                    "return_value": 1,
                    "temp_var11": 1,
                    "u_var1": 1,
                    "uint64_var11": 1,
                    "uint_value": 1,
                    "uint_var1": 3,
                    "uint_var11": 1,
                    "ulong_var11": 1,
                    "ulong_var2": 1,
                    "undef8_var1": 1,
                    "undefined8_1": 1,
                    "undefined8_value": 1,
                    "undefined8_value1": 1,
                    "undefined8_var1": 5,
                    "undefined8_var11": 2,
                    "undefined_value1": 1,
                    "undefined_var_1": 1,
                    "unsigned_var11": 1
                },
                "uVar12": {
                    "error_message": 4,
                    "error_msg": 1,
                    "temp_var12": 1,
                    "translation_string": 1,
                    "u_var2": 1,
                    "uint64_var12": 1,
                    "uint_value2": 1,
                    "uint_var12": 1,
                    "uint_var2": 3,
                    "ulong_var12": 1,
                    "ulong_var3": 1,
                    "undef8_var2": 1,
                    "undefined8_2": 1,
                    "undefined8_value": 1,
                    "undefined8_value2": 1,
                    "undefined8_var12": 2,
                    "undefined8_var2": 4,
                    "undefined_value2": 1,
                    "undefined_var_2": 1,
                    "unsigned_var12": 1
                },
                "uVar22": {
                    "arch_check_flag": 1,
                    "flag": 1,
                    "format_flag": 1,
                    "is_thin_archive": 1,
                    "temp_var22": 1,
                    "u_var3": 1,
                    "uint1": 1,
                    "uint_value": 1,
                    "uint_value3": 1,
                    "uint_var": 4,
                    "uint_var1": 1,
                    "uint_var22": 4,
                    "uint_var3": 2,
                    "ulong_var22": 1,
                    "unsigned_value": 2,
                    "unsigned_var22": 1
                },
                "uVar26": {
                    "undefined_var_3": 1
                }
            },
            "called": [
                "FUN_00114d50",
                "FUN_0011256b",
                "free",
                "FUN_00119dd0",
                "FUN_0011a0e0",
                "bfd_close_all_done",
                "FUN_00119ed0",
                "bfd_stat",
                "strerror",
                "bfd_openw",
                "bfd_fdopenw",
                "dcgettext",
                "bfd_openr",
                "FUN_00113f50",
                "bfd_openr_next_archived_file",
                "close",
                "FUN_001126c0",
                "bfd_get_error",
                "bfd_check_format",
                "bfd_close",
                "FUN_00104d25",
                "FUN_00114e50",
                "bfd_set_format",
                "__errno_location",
                "bfd_set_error",
                "bfd_check_format_matches"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\n\n\nvoid process_binary_file_00114690(undefined8 input_file_path,undefined8 output_file_path,int file_descriptor,undefined8 stat_buffer,\n                 undefined8 target_format,long temp_dir,undefined8 debug_link)\n\n{\n  byte byte_var1;\n  char char_var1;\n  char char_var2;\n  int int_var1;\n  int int_var2;\n  char **pointer_to_char_pointer;\n  void *void_pointer;\n  long long_var1;\n  undefined8 *pointer_to_undefined8;\n  int *pointer_to_int;\n  undefined8 undefined8_var1;\n  undefined8 undefined8_var2;\n  long long_var2;\n  undefined8 *bfd_handle;\n  char *temp_dir_path;\n  char **pointer_pointer_char_var16;\n  char *pointer_char_var17;\n  char *pointer_char_var18;\n  undefined8 *temp_dir_list;\n  char **pointer_pointer_char_var19;\n  code *function_pointer;\n  long long_var21;\n  uint uint_var;\n  char *pointer_char_var23;\n  stat *pointer_to_stat;\n  bool bool_var;\n  byte byte_var2;\n  undefined8 *local_pointer_to_undefined8;\n  long *local_long_pointer;\n  stat local_stat_struct;\n  void *local_var_c8 [3];\n  uint u_stack_b0;\n  long file_size;\n  \n  byte_var2 = 0;\n  long_var2 = FUN_00113f50();\n  if (long_var2 < 1) {\n    if (long_var2 == 0) {\n      undefined8_var2 = dcgettext(0,\"error: the input file \\'%s\\' is empty\",5);\n      FUN_00119ed0(undefined8_var2,input_file_path);\n    }\n    DAT_00127a20 = 1;\n    return;\n  }\n  bfd_handle = (undefined8 *)bfd_openr(input_file_path,target_format);\n  if ((bfd_handle == (undefined8 *)0x0) || (int_var2 = bfd_stat(bfd_handle,stat_buffer), int_var2 != 0)) {\n    FUN_001126c0(input_file_path,0,0,0);\n    DAT_00127a20 = 1;\n    return;\n  }\n  switch(DAT_00127984) {\n  case 1:\n  case 3:\n  case 9:\n    *(uint *)((long)bfd_handle + 0x44) = *(uint *)((long)bfd_handle + 0x44) | 0x24000;\n    break;\n  case 5:\n    *(uint *)((long)bfd_handle + 0x44) = *(uint *)((long)bfd_handle + 0x44) | 0x4000;\n    break;\n  case 0x11:\n    *(uint *)((long)bfd_handle + 0x44) = *(uint *)((long)bfd_handle + 0x44) | 0x424000;\n    break;\n  case 0x20:\n    *(uint *)((long)bfd_handle + 0x44) = *(uint *)((long)bfd_handle + 0x44) | 0x8000;\n  }\n  if (DAT_0012797c == 1) {\n    *(uint *)((long)bfd_handle + 0x44) = *(uint *)((long)bfd_handle + 0x44) | 0xc0000;\n  }\n  else if (DAT_0012797c == 2) {\n    *(uint *)((long)bfd_handle + 0x44) = *(uint *)((long)bfd_handle + 0x44) | 0x40000;\n  }\n  char_var1 = bfd_check_format(bfd_handle,2);\n  if (char_var1 != '\\0') {\n    if (temp_dir == 0) {\n      char_var1 = '\\0';\n      temp_dir = *(long *)bfd_handle[1];\n    }\n    if (file_descriptor < 0) {\n      local_pointer_to_undefined8 = (undefined8 *)bfd_openw(output_file_path,temp_dir);\n    }\n    else {\n      local_pointer_to_undefined8 = (undefined8 *)bfd_fdopenw(output_file_path,temp_dir,file_descriptor);\n    }\n    if (local_pointer_to_undefined8 != (undefined8 *)0x0) {\n      if (DAT_00127a10 != 0) {\n        undefined8_var2 = *bfd_handle;\n        undefined8_var1 = dcgettext(0,\"--add-gnu-debuglink ignored for archive %s\",5);\n        FUN_00119ed0(undefined8_var1,undefined8_var2);\n        DAT_00127a10 = 0;\n      }\n      FUN_00114d50(local_pointer_to_undefined8,bfd_handle,DAT_001264b4);\n      local_long_pointer = local_pointer_to_undefined8 + 0x1f;\n      if ((*(byte *)((long)bfd_handle + 0x49) & 0x10) != 0) {\n        DAT_00127a20 = 1;\n        bfd_set_error(5);\n        undefined8_var2 = dcgettext(0,\"sorry: copying thin archives is not currently supported\",5);\n        FUN_001126c0(0,bfd_handle,0,undefined8_var2);\n        return;\n      }\n      temp_dir_path = (char *)FUN_0011a0e0(*local_pointer_to_undefined8);\n      if (temp_dir_path == (char *)0x0) {\n        pointer_to_int = __errno_location();\n        temp_dir_path = strerror(*pointer_to_int);\n        undefined8_var2 = dcgettext(0,\"cannot create tempdir for archive copying (error: %s)\",5);\n                    \n        FUN_00119dd0(undefined8_var2,temp_dir_path);\n      }\n      if (DAT_00127a2c == 7) {\n        byte_var1 = *(byte *)((long)bfd_handle + 0x49);\n        uint_var = 0;\n      }\n      else {\n        byte_var1 = *(byte *)((long)bfd_handle + 0x49);\n        uint_var = byte_var1 >> 3 & 1;\n      }\n      bool_var = _DAT_001264b0 != 0;\n      *(byte *)((long)local_pointer_to_undefined8 + 0x49) =\n           byte_var1 & 0x10 | (byte)(uint_var << 3) | *(byte *)((long)local_pointer_to_undefined8 + 0x49) & 0xe7;\n      if (bool_var) {\n        *(uint *)((long)local_pointer_to_undefined8 + 0x44) = *(uint *)((long)local_pointer_to_undefined8 + 0x44) | 0x2000;\n      }\n      temp_dir_list = (undefined8 *)0x0;\n      pointer_pointer_char_var16 = (char **)bfd_openr_next_archived_file(bfd_handle,0);\n      char_var2 = bfd_set_format(local_pointer_to_undefined8,*(byte *)(bfd_handle + 9) & 7);\n      if (char_var2 == '\\0') {\n        DAT_00127a20 = 1;\n        FUN_001126c0(0,local_pointer_to_undefined8,0,0);\n        FUN_00114b84();\n        return;\n      }\n      while ((DAT_00127a20 == 0 && (pointer_pointer_char_var16 != (char **)0x0))) {\n        pointer_char_var18 = *pointer_pointer_char_var16;\n        pointer_char_var17 = pointer_char_var18;\n        if (*pointer_char_var18 == '/') {\nLAB_0010527d:\n          undefined8_var2 = dcgettext(0,\"illegal pathname found in archive member: %s\",5);\n          FUN_00119ed0(undefined8_var2,pointer_char_var18);\nLAB_00104e93:\n          DAT_00127a20 = 1;\n          goto LAB_00114b4b;\n        }\n        while (*pointer_char_var17 != '\\0') {\n          pointer_char_var23 = pointer_char_var17;\n          if ((*pointer_char_var17 == '.') && (pointer_char_var23 = pointer_char_var17 + 1, pointer_char_var17[1] == '.')) {\n            pointer_char_var23 = pointer_char_var17 + 2;\n            if ((pointer_char_var17[2] == '\\0') || (pointer_char_var17[2] == '/')) goto LAB_0010527d;\n          }\n          for (; (*pointer_char_var23 != '\\0' && (*pointer_char_var23 != '/')); pointer_char_var23 = pointer_char_var23 + 1) {\n          }\n          pointer_char_var17 = pointer_char_var23;\n          if (*pointer_char_var23 == '/') {\n            FUN_001052a2();\n            return;\n          }\n        }\n        pointer_char_var18 = (char *)concat(temp_dir_path,&DAT_0011b47d);\n        int_var2 = stat(pointer_char_var18,&local_stat_struct);\n        pointer_to_undefined8 = temp_dir_list;\n        if (-1 < int_var2) {\n          long_var2 = FUN_0011a0e0(pointer_char_var18);\n          free(pointer_char_var18);\n          if (long_var2 == 0) {\n            pointer_to_int = __errno_location();\n            pointer_char_var18 = strerror(*pointer_to_int);\n            undefined8_var2 = dcgettext(0,\"cannot create tempdir for archive copying (error: %s)\",5);\n            FUN_00119ed0(undefined8_var2,pointer_char_var18);\n            goto LAB_00104e93;\n          }\n          pointer_to_undefined8 = (undefined8 *)xmalloc(0x18);\n          pointer_char_var18 = *pointer_pointer_char_var16;\n          *pointer_to_undefined8 = temp_dir_list;\n          pointer_to_undefined8[2] = 0;\n          pointer_to_undefined8[1] = long_var2;\n          pointer_char_var18 = (char *)concat(long_var2,&DAT_0011b47d,pointer_char_var18);\n        }\n        int_var2 = 0;\n        if (DAT_001279cb != '\\0') {\n          pointer_to_stat = &local_stat_struct;\n          for (long_var2 = 0x24; long_var2 != 0; long_var2 = long_var2 + -1) {\n            *(undefined4 *)&pointer_to_stat->st_dev = 0;\n            pointer_to_stat = (stat *)((long)pointer_to_stat + (ulong)byte_var2 * -8 + 4);\n          }\n          pointer_pointer_char_var19 = (char **)pointer_pointer_char_var16[0x1d];\n          if ((char **)pointer_pointer_char_var16[0x1d] == (char **)0x0) {\n            pointer_pointer_char_var19 = pointer_pointer_char_var16;\n          }\n          int_var2 = (**(code **)(pointer_pointer_char_var19[1] + 0x1e8))(pointer_pointer_char_var16,&local_stat_struct);\n          if (int_var2 != 0) {\n            pointer_char_var17 = *pointer_pointer_char_var16;\n            undefined8_var2 = dcgettext(0,\"internal stat error on %s\",5);\n            FUN_00119ed0(undefined8_var2,pointer_char_var17);\n          }\n        }\n        temp_dir_list = (undefined8 *)xmalloc(0x18);\n        temp_dir_list[1] = pointer_char_var18;\n        *temp_dir_list = pointer_to_undefined8;\n        temp_dir_list[2] = 0;\n        char_var2 = bfd_check_format(pointer_pointer_char_var16,1);\n        if (char_var2 == '\\0') {\n          undefined8_var2 = dcgettext(0,\"Unable to recognise the format of file\",5);\n          FUN_001126c0(0,pointer_pointer_char_var16,0,undefined8_var2);\n          pointer_pointer_char_var19 = (char **)bfd_openw(pointer_char_var18,temp_dir);\n          if (pointer_pointer_char_var19 == (char **)0x0) {\nLAB_00104e80:\n            FUN_001126c0(pointer_char_var18,0,0,0);\n            goto LAB_00104e93;\n          }\nLAB_00104d75:\n          pointer_to_char_pointer = (char **)pointer_pointer_char_var16[0x1d];\n          if ((char **)pointer_pointer_char_var16[0x1d] == (char **)0x0) {\n            pointer_to_char_pointer = pointer_pointer_char_var16;\n          }\n          int_var1 = (**(code **)(pointer_to_char_pointer[1] + 0x1e8))(pointer_pointer_char_var16);\n          long_var2 = file_size;\n          if (int_var1 == 0) {\n            if (file_size < 0) {\n              FUN_001125fa(pointer_pointer_char_var16);\n              undefined8_var2 = dcgettext(0,\"stat returns negative size for `%s\\'\",5);\n              FUN_00119ed0(undefined8_var2);\n            }\n            else {\n              int_var1 = bfd_seek(pointer_pointer_char_var16,0,0);\n              if (int_var1 == 0) {\n                if (DAT_001279c9 != '\\0') {\n                  pointer_char_var17 = *pointer_pointer_char_var19;\n                  undefined8_var2 = FUN_001125fa(pointer_pointer_char_var16);\n                  pointer_char_var23 = (char *)dcgettext(0,\"copy from `%s\\' [unknown] to `%s\\' [unknown]\\n\",5);\n                  printf(pointer_char_var23,undefined8_var2,pointer_char_var17);\n                }\n                void_pointer = (void *)xmalloc(0x2000);\n                for (; long_var2 != 0; long_var2 = long_var2 - long_var21) {\n                  long_var21 = 0x2000;\n                  if (long_var2 < 0x2001) {\n                    long_var21 = long_var2;\n                  }\n                  long_var1 = bfd_bread(void_pointer,long_var21,pointer_pointer_char_var16);\n                  pointer_to_char_pointer = pointer_pointer_char_var16;\n                  if ((long_var21 != long_var1) ||\n                     (long_var1 = bfd_bwrite(void_pointer,long_var21,pointer_pointer_char_var19), pointer_to_char_pointer = pointer_pointer_char_var19,\n                     long_var21 != long_var1)) {\n                    FUN_001126c0(0,pointer_to_char_pointer,0,0);\n                    free(void_pointer);\n                    goto LAB_00104f00;\n                  }\n                }\n                chmod(*pointer_pointer_char_var19,u_stack_b0 | 0x100);\n                free(void_pointer);\n                char_var2 = bfd_close_all_done(pointer_pointer_char_var19);\n                if (char_var2 == '\\0') {\n                  FUN_001126c0(pointer_char_var18,0,0,0);\n                  DAT_00127a20 = 1;\n                }\n                goto LAB_00114a86;\n              }\n              undefined8_var2 = FUN_001125fa(pointer_pointer_char_var16);\n              FUN_0011a110(undefined8_var2);\n            }\n          }\n          else {\n            FUN_001126c0(0,pointer_pointer_char_var16,0,0);\n          }\nLAB_00104f00:\n          char_var2 = bfd_close_all_done(pointer_pointer_char_var19);\n          if (char_var2 == '\\0') {\n            FUN_001126c0(pointer_char_var18,0,0,0);\n          }\nLAB_00104ec9:\n          unlink(pointer_char_var18);\n          DAT_00127a20 = 1;\n        }\n        else {\n          if (char_var1 == '\\0') {\n            pointer_pointer_char_var19 = (char **)bfd_openw(pointer_char_var18,*(undefined8 *)pointer_pointer_char_var16[1]);\n          }\n          else {\n            pointer_pointer_char_var19 = (char **)bfd_openw(pointer_char_var18,temp_dir);\n          }\n          if (pointer_pointer_char_var19 == (char **)0x0) goto LAB_00104e80;\n          char_var2 = FUNC_00114e50(pointer_pointer_char_var16,pointer_pointer_char_var19,debug_link);\n          if (char_var2 == '\\0') {\n            int_var1 = bfd_get_arch(pointer_pointer_char_var16);\n            if (int_var1 == 0) goto LAB_00104d75;\n            char_var2 = bfd_close_all_done(pointer_pointer_char_var19);\n            if (char_var2 == '\\0') {\n              FUN_001126c0(pointer_char_var18,0,0,0);\n            }\n            goto LAB_00104ec9;\n          }\n          char_var2 = bfd_close(pointer_pointer_char_var19);\n          if (char_var2 == '\\0') {\n            FUN_001126c0(pointer_char_var18,0,0,0);\n            DAT_00127a20 = 1;\n          }\nLAB_00114a86:\n          if ((DAT_001279cb != '\\0') && (int_var2 == 0)) {\n            FUN_0011a350(pointer_char_var18,&local_stat_struct);\n          }\n          long_var2 = bfd_openr(pointer_char_var18,temp_dir);\n          temp_dir_list[2] = long_var2;\n          *local_long_pointer = long_var2;\n          local_long_pointer = (long *)(long_var2 + 0xf0);\n          pointer_pointer_char_var19 = (char **)bfd_openr_next_archived_file(bfd_handle);\n          bfd_close(pointer_pointer_char_var16);\n          pointer_pointer_char_var16 = pointer_pointer_char_var19;\n        }\n      }\n      *local_long_pointer = 0;\n      void_pointer = (void *)xstrdup(*local_pointer_to_undefined8);\n      if (DAT_00127a20 == 0) {\n        function_pointer = bfd_close;\n      }\n      else {\n        function_pointer = bfd_close_all_done;\n      }\n      char_var1 = (*function_pointer)(local_pointer_to_undefined8);\n      if (char_var1 == '\\0') {\n        DAT_00127a20 = 1;\n        FUN_001126c0(void_pointer,0,0,0);\n      }\n      free(void_pointer);\n      void_pointer = (void *)xstrdup(*bfd_handle);\n      char_var1 = bfd_close(bfd_handle);\n      if (char_var1 == '\\0') {\n        DAT_00127a20 = 1;\n        FUN_001126c0(void_pointer,0,0,0);\n      }\n      free(void_pointer);\nLAB_00114b4b:\n      while (temp_dir_list != (undefined8 *)0x0) {\n        if (temp_dir_list[2] == 0) {\n          rmdir((char *)temp_dir_list[1]);\n        }\n        else {\n          bfd_close();\n          unlink((char *)temp_dir_list[1]);\n        }\n        free((void *)temp_dir_list[1]);\n        bfd_handle = (undefined8 *)*temp_dir_list;\n        free(temp_dir_list);\n        temp_dir_list = bfd_handle;\n      }\n      rmdir(temp_dir_path);\n      free(temp_dir_path);\n      return;\n    }\nLAB_00105231:\n    close(file_descriptor);\n    FUN_001126c0(output_file_path,0,0,0);\n    DAT_00127a20 = 1;\n    return;\n  }\n  char_var1 = bfd_check_format_matches(bfd_handle,1,local_var_c8);\n  if (char_var1 == '\\0') {\n    int_var2 = bfd_get_error();\n    char_var1 = bfd_check_format_matches(bfd_handle,3,&local_stat_struct);\n    if (char_var1 == '\\0') {\n      int_var1 = bfd_get_error();\n      if (int_var2 != int_var1) {\n        bfd_set_error(int_var2);\n      }\n      FUN_001126c0(input_file_path,0,0,0);\n      if (int_var2 == 0xd) {\n        FUN_0011256b(local_var_c8[0]);\n      }\n      if (int_var1 != 0xd) {\n        DAT_00127a20 = 1;\n        return;\n      }\n      FUN_0011256b(local_stat_struct.st_dev);\n      DAT_00127a20 = 1;\n      return;\n    }\n    if (int_var2 == 0xd) {\n      free(local_var_c8[0]);\n    }\n  }\n  if (temp_dir == 0) {\n    temp_dir = *(long *)bfd_handle[1];\n  }\n  if (file_descriptor < 0) {\n    long_var2 = bfd_openw(output_file_path,temp_dir);\n  }\n  else {\n    long_var2 = bfd_fdopenw(output_file_path,temp_dir,file_descriptor);\n  }\n  if (long_var2 == 0) goto LAB_00105231;\n  FUN_00114d50(long_var2,bfd_handle,DAT_001264b4);\n  char_var1 = FUNC_00114e50(bfd_handle,long_var2,debug_link);\n  if (char_var1 == '\\0') {\n    DAT_00127a20 = 1;\n  }\n  else if (DAT_00127a20 == 0) {\n    char_var1 = bfd_close(long_var2);\n    goto LAB_001147d5;\n  }\n  char_var1 = bfd_close_all_done(long_var2);\nLAB_001147d5:\n  if (char_var1 != '\\x01') {\n    DAT_00127a20 = 1;\n    FUN_001126c0(output_file_path,0,0,0);\n    return;\n  }\n  char_var1 = bfd_close(bfd_handle);\n  if (char_var1 == '\\0') {\n    DAT_00127a20 = 1;\n    FUN_001126c0(input_file_path,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "process_binary_file_00114690",
            "entrypoint": "0x00114690",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00114690": "process_binary_file_00114690",
                "__ptr": "temp_dir_list",
                "bVar1": "byte_var1",
                "bVar25": "bool_var",
                "bVar26": "byte_var2",
                "cVar2": "char_var1",
                "cVar3": "char_var2",
                "iVar4": "int_var1",
                "iVar5": "int_var2",
                "lStack_98": "file_size",
                "lVar13": "long_var2",
                "lVar21": "long_var21",
                "lVar8": "long_var1",
                "local_158": "local_stat_struct",
                "local_198": "local_long_pointer",
                "local_1a0": "local_pointer_to_undefined8",
                "local_c8": "local_var_c8",
                "param_1": "input_file_path",
                "param_2": "output_file_path",
                "param_3": "file_descriptor",
                "param_4": "stat_buffer",
                "param_5": "target_format",
                "param_6": "temp_dir",
                "param_7": "debug_link",
                "pcVar15": "temp_dir_path",
                "pcVar16": "pointer_to_char_var3",
                "pcVar17": "pointer_char_var17",
                "pcVar18": "pointer_char_var18",
                "pcVar19": "pointer_char1",
                "pcVar20": "function_pointer",
                "pcVar23": "pointer_char_var23",
                "piVar10": "pointer_to_int",
                "ppcVar16": "pointer_pointer_char_var16",
                "ppcVar19": "pointer_pointer_char_var19",
                "ppcVar6": "pointer_to_char_pointer",
                "psVar24": "pointer_to_stat",
                "puVar14": "bfd_handle",
                "puVar9": "pointer_to_undefined8",
                "pvVar7": "void_pointer",
                "uStack_b0": "u_stack_b0",
                "uVar11": "undefined8_var1",
                "uVar12": "undefined8_var2",
                "uVar22": "uint_var"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00114b84": {
            "additional_data": {
                "FUN_00114b84": {
                    "delete_directory": 1,
                    "remove_and_free_directory": 17,
                    "remove_directory": 12,
                    "remove_directory_and_free_memory": 1
                },
                "param_9": {
                    "directory_path": 30,
                    "path": 1
                }
            },
            "called": [
                "rmdir",
                "free"
            ],
            "calling": [
                "FUN_00104d25",
                "FUN_00104ea2"
            ],
            "code": "\nvoid remove_directory_and_free_memory_00114b84(void)\n\n{\n  char *directory_path;\n  \n  rmdir(directory_path);\n  free(directory_path);\n  return;\n}\n\n",
            "current_name": "remove_directory_and_free_memory_00114b84",
            "entrypoint": "0x00114b84",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00114b84": "remove_directory_and_free_memory_00114b84",
                "param_9": "directory_path"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00114c20": {
            "additional_data": {
                "DAT_0011b499": {
                    "character_array": 1,
                    "pattern": 1
                },
                "DAT_001278b8": {
                    "flag_value": 1,
                    "flag_variable": 1,
                    "initialized": 1
                },
                "FUN_001114c20": {
                    "initialize_and_process_data": 1
                },
                "FUN_00113fb0": {
                    "check_character": 6,
                    "check_condition": 13,
                    "check_flag_validity": 1,
                    "check_validity": 7,
                    "search_pattern": 1
                },
                "FUN_00114190": {
                    "configure_data": 1,
                    "copy_data": 2,
                    "execute_sub_function": 2,
                    "initialize": 1,
                    "initialize_array": 1,
                    "initialize_data_segment": 1,
                    "initialize_memory": 3,
                    "initialize_pointer": 2,
                    "initialize_values": 1,
                    "modify_data": 1,
                    "process_data": 10,
                    "set_data": 1,
                    "set_initial_value": 1,
                    "set_pointer_value": 1,
                    "set_up_data": 1,
                    "set_values": 1
                },
                "FUN_00114c20": {
                    "execute_function": 2,
                    "initialize": 1,
                    "initialize_and_process_data": 1,
                    "initialize_application": 1,
                    "initialize_data": 21,
                    "initialize_data_and_flags": 1,
                    "initialize_function": 1,
                    "initialize_processor": 1,
                    "run_function": 1
                },
                "cVar1": {
                    "condition_result": 1,
                    "flag": 3,
                    "result": 24,
                    "result_char": 2
                },
                "param_1": {
                    "char_array1": 1,
                    "char_param1": 1,
                    "char_pointer1": 1,
                    "data": 8,
                    "data_pointer": 12,
                    "data_ptr": 1,
                    "input": 2,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_pointer": 1,
                    "processor": 1
                },
                "param_2": {
                    "char_array2": 1,
                    "char_param2": 1,
                    "char_parameter": 1,
                    "char_pointer2": 1,
                    "char_to_copy": 1,
                    "char_value": 1,
                    "character": 1,
                    "data_pointer": 1,
                    "flag": 14,
                    "flag1": 1,
                    "option": 1,
                    "sub_param1": 1,
                    "value": 1
                },
                "param_3": {
                    "copy_length": 1,
                    "flag2": 1,
                    "input_value": 1,
                    "length": 1,
                    "size": 20,
                    "sub_param2": 1,
                    "value": 1
                },
                "pcVar2": {
                    "char_pointer": 12,
                    "char_ptr": 1,
                    "character_pointer": 3,
                    "pointer": 10,
                    "pointer_char": 1,
                    "pointer_variable": 1,
                    "ptr": 2
                }
            },
            "called": [
                "FUN_00114190",
                "FUN_00113fb0"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nvoid initialize_data_and_flags_00114c20(long data_pointer)\n\n{\n  char result;\n  char *char_pointer;\n  \n  FUN_00114190(data_pointer,1,1);\n  result = FUN_00113fb0(data_pointer,&DAT_0011b499);\n  if (result != '\\0') {\n    char_pointer = (char *)(data_pointer + 5);\n    if (*(char *)(data_pointer + 4) != 'a') {\n      char_pointer = (char *)(data_pointer + 4);\n    }\n    if (*char_pointer != '\\0') {\n      FUN_00114190(char_pointer,1,0x100);\n    }\n  }\n  DAT_001278b8 = 1;\n  return;\n}\n\n",
            "current_name": "initialize_data_and_flags_00114c20",
            "entrypoint": "0x00114c20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00114c20": "initialize_data_and_flags_00114c20",
                "cVar1": "result",
                "param_1": "data_pointer",
                "pcVar2": "char_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00114c80": {
            "additional_data": {
                "0x30": {
                    "parsed_data_size": 1
                },
                "0x3d": {
                    "equal_sign": 1
                },
                "FUN_001053b5": {
                    "initialize": 1,
                    "initialize_function": 1,
                    "some_function": 1
                },
                "FUN_00114c80": {
                    "parse_assignment": 3,
                    "parse_assignment_string": 1,
                    "parse_input": 2,
                    "parse_param": 4,
                    "parse_param_string": 2,
                    "parse_parameter": 10,
                    "parse_parameter_string": 2,
                    "parse_parameters": 1,
                    "parse_query_string": 5,
                    "process_param_string": 1
                },
                "FUN_00119dd0": {
                    "print_error_message": 2
                },
                "FUN_0011a480": {
                    "extract_substring": 1,
                    "get_substring": 4,
                    "parse_value": 1,
                    "substring": 1,
                    "substring_length": 2
                },
                "auVar3": {
                    "data_array": 1,
                    "parsed_assignment": 3,
                    "parsed_data": 7,
                    "parsed_data_struct": 1,
                    "parsed_input": 1,
                    "parsed_parameter": 2,
                    "parsed_params": 4,
                    "parsed_query": 1,
                    "parsed_result": 2,
                    "parsed_values": 1,
                    "result": 6,
                    "result_array": 2
                },
                "dcgettext": {
                    "get_error_message": 3
                },
                "fun_001053b5": {
                    "perform_some_action": 1
                },
                "param_1": {
                    "assignment_string": 1,
                    "input_string": 21,
                    "param_string": 2,
                    "parameter_string": 2,
                    "query_string": 5
                },
                "param_2": {
                    "arg1": 1,
                    "default_value": 5,
                    "input_1": 1,
                    "param2": 2,
                    "param_2": 1,
                    "param_2_value": 2,
                    "param_value_1": 1,
                    "value": 2,
                    "value1": 8,
                    "value_1": 8
                },
                "param_3": {
                    "arg2": 1,
                    "context_message": 1,
                    "error_message": 16,
                    "error_msg": 2,
                    "format_string": 2,
                    "input_2": 1,
                    "message": 1,
                    "param3": 2,
                    "param_3_value": 1,
                    "value_2": 1
                },
                "param_4": {
                    "arg3": 1,
                    "extra_data": 2,
                    "input_3": 1,
                    "optional_value": 1,
                    "other_data": 1,
                    "param4": 2,
                    "param_4": 2,
                    "param_4_value": 2,
                    "param_value_2": 1,
                    "result": 1,
                    "user_data": 1,
                    "value2": 8,
                    "value_2": 7,
                    "value_3": 1
                },
                "pcVar1": {
                    "equal_sign": 6,
                    "equal_sign_index": 1,
                    "equal_sign_pos": 3,
                    "equal_sign_position": 11,
                    "equal_sign_ptr": 4,
                    "equals_position": 1,
                    "equals_sign_pos": 1,
                    "equals_sign_position": 3,
                    "equals_sign_ptr": 1
                },
                "strchr": {
                    "find_char": 1,
                    "find_character": 6
                },
                "uVar2": {
                    "error_message": 3,
                    "error_msg": 1,
                    "format_error_msg": 1,
                    "message": 2,
                    "parsed_length": 1,
                    "parsed_value": 2,
                    "result": 15,
                    "return_value": 1,
                    "str_length": 1,
                    "string_length": 1,
                    "sub_result": 1,
                    "substring": 1,
                    "translated_error_message": 1
                },
                "xmalloc": {
                    "allocate_memory": 7
                }
            },
            "called": [
                "FUN_0011a480",
                "FUN_001053b5",
                "xmalloc",
                "strchr"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nundefined  [16] parse_parameter_string_00114c80(char *input_string,undefined8 value1,undefined8 error_message,undefined8 value2)\n\n{\n  char *equal_sign_position;\n  undefined8 result;\n  undefined parsed_data [16];\n  \n  equal_sign_position = strchr(input_string,0x3d);\n  if (equal_sign_position != (char *)0x0) {\n    parsed_data._0_8_ = (undefined8 *)xmalloc(0x30);\n    result = FUN_0011a480(input_string,(long)equal_sign_position - (long)input_string);\n    parsed_data._0_8_[2] = equal_sign_position + 1;\n    parsed_data._0_8_[1] = result;\n    parsed_data._0_8_[4] = 0;\n    parsed_data._0_8_[3] = 0;\n    *parsed_data._0_8_ = value1;\n    parsed_data._8_8_ = value2;\n    return parsed_data;\n  }\n  result = dcgettext(0,\"bad format for %s\",5);\n                    \n  FUN_00119dd0(result,error_message);\n}\n\n",
            "current_name": "parse_parameter_string_00114c80",
            "entrypoint": "0x00114c80",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00114c80": "parse_parameter_string_00114c80",
                "auVar3": "parsed_data",
                "dcgettext": "get_error_message",
                "param_1": "input_string",
                "param_2": "value1",
                "param_3": "error_message",
                "param_4": "value2",
                "pcVar1": "equal_sign_position",
                "strchr": "find_character",
                "uVar2": "result",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00114cf0": {
            "additional_data": {
                "FUN_00114cf0": {
                    "allocate_and_initialize_directory": 1,
                    "allocate_file_path": 2,
                    "allocate_last_folder_name": 1,
                    "create_directory_path": 2,
                    "create_file_path": 12,
                    "create_file_structure": 1,
                    "create_filepath": 1,
                    "extract_directory": 1,
                    "extract_directory_name": 1,
                    "extract_file_name": 3,
                    "extract_filename": 1,
                    "extract_last_directory": 3,
                    "generate_file_path": 1,
                    "get_directory_name": 1
                },
                "bVar6": {
                    "backslash_count": 1,
                    "flag": 1,
                    "found_slash": 12,
                    "is_first_char": 1,
                    "is_null": 1,
                    "is_slash": 9,
                    "is_slash_found": 1,
                    "is_slash_present": 3,
                    "reverse_dir": 1,
                    "slash_found": 1
                },
                "lVar2": {
                    "current_char": 1,
                    "current_index": 1,
                    "current_position": 1,
                    "distance": 1,
                    "index": 10,
                    "length": 10,
                    "length_remaining": 1,
                    "loop_index": 1,
                    "path_len": 1,
                    "path_length": 4
                },
                "lVar3": {
                    "dir_length": 1,
                    "dir_name_len": 1,
                    "dir_path_length": 1,
                    "file_length": 1,
                    "file_path_length": 2,
                    "filename_start": 1,
                    "filename_start_index": 1,
                    "folder_length": 1,
                    "len": 1,
                    "length": 1,
                    "new_directory_length": 1,
                    "offset": 7,
                    "path_length": 4,
                    "path_offset": 1,
                    "prefix_length": 6,
                    "start": 1
                },
                "lVar4": {
                    "directory_length": 1,
                    "filename_end_index": 1,
                    "filename_length": 1,
                    "last_slash_index": 3,
                    "last_slash_offset": 1,
                    "length": 1,
                    "occurrence_index": 1,
                    "path_length": 1,
                    "pos": 1,
                    "slash_index": 11,
                    "slash_offset": 1,
                    "slash_position": 4,
                    "suffix_length": 4
                },
                "param_1": {
                    "file_path": 12,
                    "filepath": 1,
                    "input_path": 1,
                    "path": 17
                },
                "pcVar1": {
                    "last_forward_slash": 1,
                    "last_occurrence": 2,
                    "last_slash": 25,
                    "last_slash_position": 3
                },
                "pcVar5": {
                    "copy_ptr": 1,
                    "dest": 1,
                    "dest_ptr": 1,
                    "file_path_iterator": 1,
                    "filename_copy": 1,
                    "new_dir_name": 1,
                    "new_directory": 1,
                    "new_file_path": 7,
                    "new_filename": 1,
                    "new_filepath": 1,
                    "new_folder_name": 1,
                    "new_path": 14
                },
                "strrchr": {
                    "find_last_slash": 9,
                    "search_last_char": 1
                },
                "xmalloc": {
                    "allocate_memory": 10
                }
            },
            "called": [
                "strrchr",
                "xmalloc"
            ],
            "calling": [
                "FUN_0011a0e0",
                "FUN_00116b90"
            ],
            "code": "\nvoid create_file_path_00114cf0(char *path)\n\n{\n  char *last_slash;\n  long index;\n  long offset;\n  long slash_index;\n  char *new_path;\n  byte found_slash;\n  \n  found_slash = 0;\n  last_slash = strrchr(path,0x2f);\n  if (last_slash == (char *)0x0) {\n    last_slash = (char *)xmalloc(9);\n    offset = 0;\n  }\n  else {\n    slash_index = (long)last_slash - (long)path;\n    last_slash = (char *)xmalloc(slash_index + 0xb);\n    offset = slash_index + 1;\n    new_path = last_slash;\n    for (index = slash_index; index != 0; index = index + -1) {\n      *new_path = *path;\n      path = path + (ulong)found_slash * -2 + 1;\n      new_path = new_path + (ulong)found_slash * -2 + 1;\n    }\n    last_slash[slash_index] = '/';\n  }\n  *(undefined8 *)(last_slash + offset) = 0x5858585858587473;\n  *(undefined *)((long)(last_slash + offset) + 8) = 0;\n  return;\n}\n\n",
            "current_name": "create_file_path_00114cf0",
            "entrypoint": "0x00114cf0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00114cf0": "create_file_path_00114cf0",
                "bVar6": "found_slash",
                "lVar2": "index",
                "lVar3": "offset",
                "lVar4": "slash_index",
                "param_1": "path",
                "pcVar1": "last_slash",
                "pcVar5": "new_path",
                "strrchr": "find_last_slash",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00114d50": {
            "additional_data": {
                "0x0010540e": {
                    "func": 1,
                    "function_address": 1
                },
                "0x0010540e_param_1": {
                    "param_func_arg1": 1
                },
                "0x0010540e_param_2": {
                    "param_func_arg2": 1
                },
                "0x0010540e_param_3": {
                    "param_func_arg3": 1
                },
                "0x00105422": {
                    "branch_address": 1,
                    "jump_table_addr": 1
                },
                "0x380": {
                    "offset": 1
                },
                "0x71": {
                    "offset_3": 1
                },
                "0x78": {
                    "offset_2": 1
                },
                "FUNK_Reverse_Engineer": {
                    "improved_func": 1
                },
                "FUN_0010540e": {
                    "call_sub_function": 1,
                    "execute_function_with_data": 1,
                    "execute_sub_function": 4,
                    "invoke_sub_function": 1,
                    "perform_action": 5,
                    "process_input_data": 1,
                    "process_sub_function": 1,
                    "sub_function": 3
                },
                "FUN_00114d50": {
                    "execute_action": 2,
                    "execute_conditional_action": 2,
                    "execute_conditional_function": 1,
                    "execute_conditional_operation": 1,
                    "execute_function": 11,
                    "execute_function_if_condition_two": 1,
                    "execute_function_if_needed": 1,
                    "execute_function_with_condition": 2,
                    "execute_if_condition_met": 1,
                    "process_data": 4,
                    "process_function": 1
                },
                "byte": {
                    "byte_value": 1,
                    "data_byte": 2,
                    "value": 1
                },
                "byte_val": {
                    "action_byte": 1
                },
                "code": {
                    "function_pointer": 1
                },
                "local_1": {
                    "value1": 1
                },
                "local_2": {
                    "value2": 1
                },
                "param_1": {
                    "action_param1": 1,
                    "arg1": 7,
                    "data1": 3,
                    "first_arg": 1,
                    "first_param": 1,
                    "function_arg1": 1,
                    "function_param1": 2,
                    "function_param_1": 1,
                    "function_pointer1": 2,
                    "input1": 3,
                    "input_1": 2,
                    "input_data1": 2,
                    "input_param1": 2,
                    "input_parameter_1": 1,
                    "source": 1,
                    "source_param": 1
                },
                "param_2": {
                    "action_param2": 1,
                    "arg2": 7,
                    "data2": 3,
                    "destination_param": 1,
                    "function_arg2": 1,
                    "function_param2": 2,
                    "function_param_2": 1,
                    "function_pointer2": 2,
                    "input2": 3,
                    "input_2": 2,
                    "input_data2": 2,
                    "input_param2": 2,
                    "input_parameter_2": 1,
                    "second_arg": 1,
                    "second_param": 1,
                    "target": 1
                },
                "param_3": {
                    "action": 1,
                    "action_param3": 1,
                    "arg3": 3,
                    "condition": 9,
                    "condition_param": 1,
                    "flag": 7,
                    "flags": 1,
                    "function_param3": 2,
                    "function_param_3": 1,
                    "input_param3": 2,
                    "input_parameter_3": 1,
                    "mode": 1,
                    "sub_function_arg3": 1
                }
            },
            "called": [
                "FUN_0010540e"
            ],
            "calling": [
                "FUN_00114690"
            ],
            "code": "\nvoid execute_function_with_condition_00114d50(long arg1,long arg2,uint condition)\n\n{\n  if (*(int *)(*(long *)(arg1 + 8) + 8) != 2) {\n    return;\n  }\n  if ((condition == 2) && (*(int *)(*(long *)(arg2 + 8) + 8) == 2)) {\n    condition = (uint)*(data_byte *)(*(long *)(*(long *)(arg2 + 8) + 0x380) + 0x71);\n  }\n                    /* WARNING: Could not recover jumptable at 0x00105422. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (**(function_pointer **)(*(long *)(*(long *)(arg1 + 8) + 0x380) + 0x78))(arg1,condition != 0);\n  return;\n}\n\n",
            "current_name": "execute_function_with_condition_00114d50",
            "entrypoint": "0x00114d50",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00114d50": "execute_function_with_condition_00114d50",
                "byte": "data_byte",
                "code": "function_pointer",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "condition"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00114d60": {
            "additional_data": {
                "FUN_00114d60": {
                    "read_and_store_file_content": 2,
                    "read_and_store_file_contents": 3,
                    "read_and_store_file_data": 6,
                    "read_file": 5,
                    "read_file_and_store": 2,
                    "read_file_and_store_content": 2,
                    "read_file_and_store_contents": 2,
                    "read_file_and_store_data": 2,
                    "read_file_and_store_in_buffer": 1,
                    "read_file_content": 2,
                    "read_file_contents": 2,
                    "read_file_into_buffer": 1
                },
                "F_UNPACK_BINARY": {
                    "unpack_binary_data": 1
                },
                "__filename": {
                    "filename": 1
                },
                "__modes": {
                    "modes": 1
                },
                "__stream": {
                    "file": 6,
                    "file_pointer": 16,
                    "file_ptr": 2,
                    "file_stream": 7
                },
                "iVar1": {
                    "end_of_file": 7,
                    "end_of_file_indicator": 1,
                    "eof_flag": 1,
                    "eof_indicator": 10,
                    "eof_status": 3,
                    "feof_check": 1,
                    "feof_result": 1,
                    "file_end": 1,
                    "is_end_of_file": 4,
                    "is_eof": 1
                },
                "lVar7": {
                    "bytes_read": 1,
                    "current_data_size": 1,
                    "current_file_size": 1,
                    "current_offset": 4,
                    "current_position": 2,
                    "current_size": 13,
                    "data_offset": 2,
                    "total_bytes_read": 6,
                    "total_size": 1
                },
                "lVar8": {
                    "allocated_size": 3,
                    "buffer_size": 14,
                    "current_buffer_size": 1,
                    "current_capacity": 1,
                    "current_size": 1,
                    "data_size": 1,
                    "max_data_size": 1,
                    "max_file_size": 1,
                    "max_size": 8
                },
                "param_1": {
                    "binary_data_path": 1,
                    "data_pointer": 1,
                    "file_data": 1,
                    "file_descriptor": 3,
                    "file_info": 13,
                    "file_param": 1,
                    "file_path": 8,
                    "file_ptr": 1,
                    "filename": 1,
                    "input_file_path": 1
                },
                "pcVar3": {
                    "err_msg": 2,
                    "error_message": 14,
                    "error_msg": 4,
                    "error_string": 11
                },
                "piVar2": {
                    "err_num_pointer": 1,
                    "errno_location": 10,
                    "errno_pointer": 1,
                    "errno_ptr": 5,
                    "error_indicator": 2,
                    "error_location": 4,
                    "error_location_pointer": 1,
                    "error_location_ptr": 1,
                    "error_number": 5,
                    "error_number_ptr": 1
                },
                "sVar6": {
                    "bytes_read": 23,
                    "read_size": 8
                },
                "uVar4": {
                    "error_format": 7,
                    "error_format_string": 1,
                    "error_message": 4,
                    "error_msg": 2,
                    "error_msg_format": 1,
                    "error_string": 5,
                    "error_text": 2,
                    "format_string": 3,
                    "formatted_error_message": 1,
                    "localized_error_message": 3,
                    "localized_error_string": 1,
                    "translated_error_message": 1
                },
                "uVar5": {
                    "allocated_memory": 12,
                    "buffer": 2,
                    "buffer_pointer": 2,
                    "dynamic_memory": 3,
                    "file_descriptor": 1,
                    "file_name": 1,
                    "file_pointer2": 1,
                    "memory_allocation": 2,
                    "memory_pointer": 1,
                    "memory_ptr": 1,
                    "new_data_pointer": 1,
                    "temp": 1,
                    "temp_pointer": 1,
                    "tmp_allocation": 1
                }
            },
            "called": [
                "FUN_0010543c",
                "fopen",
                "xmalloc"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nvoid read_file_and_store_data_00114d60(long file_info)\n\n{\n  int eof_indicator;\n  int *errno_location;\n  char *error_message;\n  undefined8 error_format;\n  FILE *file_pointer;\n  undefined8 allocated_memory;\n  size_t bytes_read;\n  long current_size;\n  long buffer_size;\n  \n  file_pointer = fopen(*(char **)(file_info + 0x10),\"r\");\n  if (file_pointer == (FILE *)0x0) {\n    errno_location = __errno_location();\n    error_message = strerror(*errno_location);\n    allocated_memory = *(undefined8 *)(file_info + 0x10);\n    error_format = dcgettext(0,\"cannot open: %s: %s\",5);\n                    \n    FUN_00119dd0(error_format,allocated_memory,error_message);\n  }\n  buffer_size = 0x1000;\n  current_size = 0;\n  allocated_memory = xmalloc(0x1000);\n  *(undefined8 *)(file_info + 0x20) = allocated_memory;\n  while( true ) {\n    eof_indicator = feof(file_pointer);\n    if (eof_indicator != 0) {\n      *(long *)(file_info + 0x18) = current_size;\n      fclose(file_pointer);\n      return;\n    }\n    if (current_size == buffer_size) {\n      buffer_size = current_size * 2;\n      allocated_memory = xrealloc(*(undefined8 *)(file_info + 0x20),buffer_size);\n      *(undefined8 *)(file_info + 0x20) = allocated_memory;\n    }\n    bytes_read = fread((void *)(*(long *)(file_info + 0x20) + current_size),1,buffer_size - current_size,file_pointer);\n    eof_indicator = ferror(file_pointer);\n    if (eof_indicator != 0) break;\n    current_size = current_size + bytes_read;\n  }\n  allocated_memory = *(undefined8 *)(file_info + 0x10);\n  error_format = dcgettext(0,\"%s: fread failed\",5);\n                    \n  FUN_00119dd0(error_format,allocated_memory);\n}\n\n",
            "current_name": "read_file_and_store_data_00114d60",
            "entrypoint": "0x00114d60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00114d60": "read_file_and_store_data_00114d60",
                "__stream": "file_pointer",
                "iVar1": "eof_indicator",
                "lVar7": "current_size",
                "lVar8": "buffer_size",
                "param_1": "file_info",
                "pcVar3": "error_message",
                "piVar2": "errno_location",
                "sVar6": "bytes_read",
                "uVar4": "error_format",
                "uVar5": "allocated_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00114dc7": {
            "additional_data": {
                "FUN_00114dc7": {
                    "read_and_allocate_memory": 1,
                    "read_and_enlarge_buffer": 1,
                    "read_and_expand_buffer": 4,
                    "read_and_expand_data": 1,
                    "read_and_extend_buffer": 1,
                    "read_and_process_data": 1,
                    "read_and_process_file": 2,
                    "read_and_resize_array": 1,
                    "read_and_resize_buffer": 8,
                    "read_and_resize_data": 3,
                    "read_and_resize_file": 1,
                    "read_and_resize_file_buffer": 1,
                    "read_and_store_data": 2,
                    "read_file": 3,
                    "read_file_and_resize": 1
                },
                "FUN_00119dd0": {
                    "display_error": 1,
                    "handle_error": 1,
                    "handle_error_message": 1,
                    "print_error": 3
                },
                "dcgettext": {
                    "get_error_message": 2,
                    "get_translation": 1,
                    "translate_error_message": 1
                },
                "fclose": {
                    "close_file": 5,
                    "close_file_stream": 1
                },
                "feof": {
                    "check_end_of_file": 4,
                    "end_of_file": 1,
                    "is_end_of_file": 1,
                    "is_eof": 1
                },
                "ferror": {
                    "check_error": 4,
                    "check_error_status": 1,
                    "check_file_error": 1,
                    "file_error": 1,
                    "get_error": 1,
                    "has_error": 1
                },
                "fread": {
                    "read": 1,
                    "read_bytes": 1,
                    "read_from_file": 7
                },
                "iVar1": {
                    "error": 13,
                    "error_flag": 4,
                    "error_status": 4
                },
                "sVar4": {
                    "bytes_read": 25,
                    "read_size": 4
                },
                "uVar2": {
                    "error_message": 20,
                    "error_msg": 3,
                    "error_msg1": 1,
                    "error_string": 5
                },
                "uVar3": {
                    "category": 1,
                    "dcc_text": 1,
                    "error_context": 1,
                    "error_domain": 1,
                    "error_message": 1,
                    "error_msg2": 1,
                    "error_string": 1,
                    "fread_error_message": 1,
                    "localized_error_message": 1,
                    "localized_error_string": 1,
                    "localized_message": 1,
                    "message": 1,
                    "message_buffer": 1,
                    "msg_format": 1,
                    "source_string": 1,
                    "translated_error_message": 8,
                    "translated_error_msg": 1,
                    "translated_message": 3,
                    "translation": 2
                },
                "unaff_R12": {
                    "buffer_start": 2,
                    "current_offset": 3,
                    "current_pos": 1,
                    "current_position": 3,
                    "read_offset": 2,
                    "read_ptr": 1,
                    "read_start": 1,
                    "start": 1,
                    "start_index": 1,
                    "start_offset": 7,
                    "start_pos": 2,
                    "start_position": 7
                },
                "unaff_R14": {
                    "buffer_end": 2,
                    "buffer_size": 4,
                    "end": 1,
                    "end_index": 1,
                    "end_offset": 7,
                    "end_pos": 3,
                    "end_position": 10,
                    "max_offset": 2,
                    "read_end": 1
                },
                "unaff_RBP": {
                    "array_base_pointer": 1,
                    "base_pointer": 2,
                    "buffer": 7,
                    "buffer_address": 2,
                    "buffer_pointer": 8,
                    "buffer_ptr": 8,
                    "context": 1,
                    "data_buffer": 1,
                    "offset": 1
                },
                "unaff_RBX": {
                    "file": 15,
                    "file_pointer": 10,
                    "file_ptr": 5,
                    "file_stream": 1
                },
                "xrealloc": {
                    "expand_buffer": 1,
                    "realloc": 1,
                    "resize_buffer": 4
                }
            },
            "called": [
                "FUN_00114dc7",
                "FUN_00119dd0",
                "dcgettext",
                "xrealloc",
                "fclose",
                "feof",
                "ferror",
                "fread"
            ],
            "calling": [
                "FUN_00114dc7"
            ],
            "code": "\nvoid read_and_resize_file_buffer_00114dc7(void)\n\n{\n  int error;\n  undefined8 error_message;\n  undefined8 translated_error_message;\n  size_t bytes_read;\n  FILE *file;\n  long buffer_pointer;\n  long start_position;\n  long end_position;\n  \n  while( true ) {\n    bytes_read = fread((void *)(*(long *)(buffer_pointer + 0x20) + start_position),1,end_position - start_position,\n                  file);\n    error = ferror(file);\n    if (error != 0) {\n      translated_error_message = *(undefined8 *)(buffer_pointer + 0x10);\n      error_message = dcgettext(0,\"%s: fread failed\",5);\n                    \n      FUN_00119dd0(error_message,translated_error_message);\n    }\n    start_position = start_position + bytes_read;\n    error = feof(file);\n    if (error != 0) break;\n    if (start_position == end_position) {\n      end_position = start_position * 2;\n      translated_error_message = xrealloc(*(undefined8 *)(buffer_pointer + 0x20),end_position);\n      *(undefined8 *)(buffer_pointer + 0x20) = translated_error_message;\n    }\n  }\n  *(long *)(buffer_pointer + 0x18) = start_position;\n  fclose(file);\n  return;\n}\n\n",
            "current_name": "read_and_resize_file_buffer_00114dc7",
            "entrypoint": "0x00114dc7",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00114dc7": "read_and_resize_file_buffer_00114dc7",
                "dcgettext": "get_error_message",
                "fclose": "close_file",
                "feof": "check_end_of_file",
                "ferror": "check_error",
                "fread": "read_from_file",
                "iVar1": "error",
                "sVar4": "bytes_read",
                "uVar2": "error_message",
                "uVar3": "translated_error_message",
                "unaff_R12": "start_position",
                "unaff_R14": "end_position",
                "unaff_RBP": "buffer_pointer",
                "unaff_RBX": "file",
                "xrealloc": "resize_buffer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00114e00": {
            "additional_data": {
                "FUN_00114e00": {
                    "check_endianness": 1,
                    "get_endianness": 8,
                    "get_endianness_description": 1,
                    "get_endianness_string": 3,
                    "identify_endianness": 1,
                    "print_endianness": 17
                },
                "dcgettext": {
                    "display_endianness": 1,
                    "display_text": 1,
                    "get_endianness": 1,
                    "get_endianness_message": 2,
                    "get_endianness_string": 2,
                    "get_endianness_text": 1,
                    "translate": 3,
                    "translate_and_print": 1,
                    "translate_endianness": 1,
                    "translate_message": 4,
                    "translate_text": 2
                },
                "param_1": {
                    "endianness": 22,
                    "endianness_code": 1,
                    "endianness_flag": 2,
                    "endianness_status": 1,
                    "endianness_type": 2,
                    "endianness_value": 3
                }
            },
            "called": [
                "dcgettext"
            ],
            "calling": [
                "FUN_00119f70"
            ],
            "code": "\nvoid print_endianness_00114e00(int endianness)\n\n{\n  if (endianness == 0) {\n    dcgettext(0,\"big endian\",5);\n    return;\n  }\n  if (endianness == 1) {\n    dcgettext(0,\"little endian\",5);\n    return;\n  }\n  dcgettext(0,\"endianness unknown\",5);\n  return;\n}\n\n",
            "current_name": "print_endianness_00114e00",
            "entrypoint": "0x00114e00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00114e00": "print_endianness_00114e00",
                "dcgettext": "translate_message",
                "param_1": "endianness"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00114e50": {
            "called": [
                "dcgettext",
                "bfd_set_format",
                "FUN_00119ed0",
                "FUN_001125fa",
                "FUN_001126c0",
                "FUN_00107976"
            ],
            "calling": [
                "FUN_00104ea2",
                "FUN_00114690"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x001062da) */\n/* WARNING: Removing unreachable block (ram,0x001062e7) */\n/* WARNING: Removing unreachable block (ram,0x001062eb) */\n/* WARNING: Removing unreachable block (ram,0x00106314) */\n/* WARNING: Removing unreachable block (ram,0x00106316) */\n/* WARNING: Removing unreachable block (ram,0x00106323) */\n/* WARNING: Removing unreachable block (ram,0x00106331) */\n/* WARNING: Removing unreachable block (ram,0x0010633b) */\n/* WARNING: Removing unreachable block (ram,0x00106354) */\n/* WARNING: Removing unreachable block (ram,0x00106358) */\n/* WARNING: Removing unreachable block (ram,0x001075c4) */\n/* WARNING: Removing unreachable block (ram,0x0010636d) */\n/* WARNING: Removing unreachable block (ram,0x00106375) */\n/* WARNING: Removing unreachable block (ram,0x00106490) */\n/* WARNING: Type propagation algorithm not settling */\n\n\nulong FUNC_00114e50(undefined8 *param_1,long param_2,long param_3)\n\n{\n  uint *puVar1;\n  byte bVar2;\n  undefined *puVar3;\n  long *plVar4;\n  code *pcVar5;\n  long *plVar6;\n  ulong uVar7;\n  ulong uVar8;\n  char *__s;\n  ushort uVar9;\n  char cVar10;\n  char cVar11;\n  int iVar12;\n  int iVar13;\n  undefined4 uVar14;\n  long *plVar15;\n  long lVar16;\n  undefined8 uVar17;\n  undefined8 uVar18;\n  size_t sVar19;\n  size_t sVar20;\n  char *pcVar21;\n  void *__ptr;\n  void *__ptr_00;\n  ulong uVar22;\n  long lVar23;\n  ulong uVar24;\n  int *piVar25;\n  ulong uVar26;\n  FILE *__s_00;\n  long **pplVar27;\n  uint uVar28;\n  long **__ptr_01;\n  char *pcVar29;\n  undefined8 *puVar30;\n  ulong uVar31;\n  int iVar32;\n  long **pplVar33;\n  char *pcVar34;\n  long lVar35;\n  undefined4 *puVar36;\n  ulong *puVar37;\n  undefined8 *puVar38;\n  uint uVar39;\n  char **ppcVar40;\n  void *pvVar41;\n  undefined **ppuVar42;\n  bool bVar43;\n  byte bVar44;\n  ulong uStack_1f8;\n  ulong local_1f0;\n  undefined4 *puStack_1e8;\n  char *pcStack_1d0;\n  int *piStack_1c0;\n  long lStack_190;\n  long lStack_180;\n  char *pcStack_178;\n  long lStack_168;\n  long *plStack_148;\n  ulong uStack_140;\n  long lStack_138;\n  long lStack_130;\n  void *apvStack_128 [2];\n  long lStack_118;\n  ushort uStack_10a;\n  byte bStack_108;\n  byte bStack_107;\n  undefined8 uStack_f8;\n  ushort uStack_f0;\n  char *pcStack_c8;\n  ulong uStack_c0;\n  char *pcStack_b8;\n  undefined uStack_b0;\n  short sStack_ae;\n  \n  bVar44 = 0;\n  iVar13 = *(int *)(*(long *)(param_2 + 8) + 0xc);\n  local_1f0._0_1_ =\n       (*(int *)(param_1[1] + 0xc) != iVar13 && *(int *)(param_1[1] + 0xc) != 2) && iVar13 != 2;\n  if ((bool)(char)local_1f0) {\n    uVar18 = FUN_001125fa();\n    uVar17 = dcgettext(0,\"unable to change endianness of \\'%s\\'\",5);\n    FUN_00119ed0(uVar17,uVar18);\n    return 0;\n  }\n  if ((*(byte *)((long)param_1 + 0x4a) & 0x20) != 0) {\n    uVar18 = FUN_001125fa();\n    uVar17 = dcgettext(0,\"unable to modify \\'%s\\' due to errors\",5);\n    FUN_00119ed0(uVar17,uVar18);\n    return 0;\n  }\n  cVar11 = bfd_set_format(param_2,*(byte *)(param_1 + 9) & 7);\n  if (cVar11 == '\\0') {\n    FUN_001126c0(0,param_2,0,0);\n    return 0;\n  }\n  if (param_1[0x12] == 0) {\n    uVar18 = FUN_001125fa(param_1);\n    uVar17 = dcgettext(0,\"error: the input file \\'%s\\' has no sections\",5);\n    FUN_00119ed0(uVar17,uVar18);\n    return 0;\n  }\n  _VerilogDataEndianness = *(undefined4 *)(param_1[1] + 0xc);\n  if (*(int *)(param_1[1] + 8) == 5) {\n    if (DAT_001279c9 != '\\0') {\n      uVar26 = FUNC_00107976();\n      return uVar26;\n    }\n  }\n  else {\n    if ((DAT_00127984 != 1) && ((DAT_00127984 & 1) != 0)) {\n      uVar18 = FUN_001125fa(param_1);\n      uVar17 = dcgettext(0,\n                         \"--compress-debug-sections=[zlib|zlib-gnu|zlib-gabi|zstd] is unsupported on `%s\\'\"\n                         ,5);\n      FUN_00119ed0(uVar17,uVar18);\n      return 0;\n    }\n    if (DAT_0012797c != 0) {\n      uVar18 = FUN_001125fa(param_1);\n      uVar17 = dcgettext(0,\"--elf-stt-common=[yes|no] is unsupported on `%s\\'\",5);\n      FUN_00119ed0(uVar17,uVar18);\n      return 0;\n    }\n    if (DAT_001279c9 != '\\0') {\n      uVar26 = FUNC_00107976();\n      return uVar26;\n    }\n  }\n  if (DAT_001278ec == '\\0') {\n    if (DAT_00127958 == '\\0') {\n      lVar35 = DAT_00127998 + param_1[0x17];\n    }\n    else {\n      lVar35 = DAT_00127998 + _DAT_00127960;\n    }\n  }\n  else {\n    lVar35 = 0;\n  }\n  if ((*(byte *)(param_2 + 0x48) & 7) == 3) {\n    iVar13 = bfd_get_arch(param_1,lVar35);\n    uVar14 = bfd_get_mach(param_1);\n    if (param_3 != 0) {\n      uVar26 = FUNC_001152b6();\n      return uVar26;\n    }\n    goto LAB_00114f9a;\n  }\n  uVar28 = ~DAT_001278f0 & *(uint *)(*(long *)(param_2 + 8) + 0x14) &\n           (DAT_001278f4 | *(uint *)((long)param_1 + 0x44));\n  if (DAT_00127a2c == 7) {\n    uVar28 = uVar28 & 0xfffffffe;\n    cVar11 = bfd_set_start_address(param_2);\n  }\n  else {\n    cVar11 = bfd_set_start_address(param_2);\n  }\n  if ((cVar11 == '\\0') || (cVar11 = bfd_set_file_flags(param_2,uVar28), cVar11 == '\\0'))\n  goto LAB_00107a82;\n  iVar13 = bfd_get_arch(param_1);\n  uVar14 = bfd_get_mach(param_1);\n  if (param_3 == 0) {\nLAB_00114f9a:\n    if (((iVar13 == 0) && (*(int *)(param_1[1] + 8) != 5)) &&\n       (*(int *)(*(long *)(param_2 + 8) + 8) == 5)) {\n      uVar26 = FUNC_00107880();\n      return uVar26;\n    }\n  }\n  else {\n    if (iVar13 == 0) {\n      iVar13 = *(int *)(param_3 + 0xc);\n      uVar14 = *(undefined4 *)(param_3 + 0x10);\n      goto LAB_00114f9a;\n    }\n    uVar18 = FUN_001125fa(param_1);\n    uVar17 = dcgettext(0,\"Input file `%s\\' ignores binary architecture parameter.\",5);\n    FUN_00119ed0(uVar17,uVar18);\n  }\n  cVar11 = (**(code **)(*(long *)(param_2 + 8) + 0x2a0))(param_2,iVar13,uVar14);\n  if (cVar11 == '\\0') {\n    if ((*(byte *)(param_1 + 9) & 0x40) != 0) {\n      iVar13 = bfd_get_arch(param_1);\n      if (iVar13 == 0) {\n        uVar18 = FUN_001125fa(param_1);\n        uVar17 = dcgettext(0,\"Unable to recognise the format of the input file `%s\\'\",5);\n        FUN_00119ed0(uVar17,uVar18);\n        return 0;\n      }\n      uVar18 = bfd_get_mach(param_1);\n      uVar14 = bfd_get_arch(param_1);\n      uVar18 = bfd_printable_arch_mach(uVar14,uVar18);\n      uVar17 = dcgettext(0,\"Output file cannot represent architecture `%s\\'\",5);\n      FUN_00119ed0(uVar17,uVar18);\n      return 0;\n    }\n    iVar13 = bfd_get_arch(param_1);\n    iVar32 = bfd_get_arch(param_2);\n    if (iVar13 != iVar32) {\n      uVar26 = FUN_00105828();\n      return uVar26;\n    }\n  }\n  cVar11 = bfd_set_format(param_2,*(byte *)(param_1 + 9) & 7);\n  if (cVar11 == '\\0') {\nLAB_00107a82:\n    FUN_001126c0(0,param_1,0,0);\n    return 0;\n  }\n  if ((*(int *)(*(undefined8 **)(param_2 + 8) + 1) == 2) &&\n     (cVar11 = FUN_00113fb0(**(undefined8 **)(param_2 + 8),&DAT_0011b503), cVar11 != '\\0')) {\n    lVar35 = *(long *)(param_2 + 0x110);\n    if ((*(int *)((undefined8 *)param_1[1] + 1) == 2) &&\n       (cVar11 = FUN_00113fb0(*(undefined8 *)param_1[1],&DAT_0011b503), cVar11 != '\\0')) {\n      lVar16 = param_1[0x22];\n      bVar43 = DAT_001279cb == '\\0';\n      puVar30 = (undefined8 *)(lVar16 + 200);\n      puVar38 = (undefined8 *)(lVar35 + 200);\n      for (lVar23 = 0x32; lVar23 != 0; lVar23 = lVar23 + -1) {\n        *puVar38 = *puVar30;\n        puVar30 = puVar30 + (ulong)bVar44 * -2 + 1;\n        puVar38 = puVar38 + (ulong)bVar44 * -2 + 1;\n      }\n      if (bVar43) {\n        *(undefined4 *)(lVar35 + 0x2a4) = 0xffffffff;\n      }\n      else {\n        *(int *)(lVar35 + 0x2a4) = (int)*(undefined8 *)(lVar16 + 0xa8);\n      }\n    }\n    uVar26 = DAT_001264a8;\n    if (DAT_001264a8 == 0xffffffffffffffff) {\n      DAT_001264a8 = 0x200;\n      uVar26 = 0x200;\n    }\n    else {\n      *(int *)(lVar35 + 0x10c) = (int)DAT_001264a8;\n    }\n    if (DAT_00126498 != -1) {\n      *(long *)(lVar35 + 0x148) = DAT_00126498;\n    }\n    if (DAT_001264a0 != -1) {\n      *(long *)(lVar35 + 0x148) = DAT_001264a0;\n    }\n    if (DAT_00126490 != -1) {\n      *(long *)(lVar35 + 0x100) = DAT_00126490;\n    }\n    uVar22 = DAT_00126488;\n    if (DAT_00126488 == 0xffffffffffffffff) {\n      DAT_00126488 = 0x1000;\n      uVar22 = 0x1000;\n    }\n    else {\n      *(int *)(lVar35 + 0x108) = (int)DAT_00126488;\n    }\n    if (DAT_00126478 != -1) {\n      *(long *)(lVar35 + 0x138) = DAT_00126478;\n    }\n    if (DAT_00126480 != -1) {\n      *(long *)(lVar35 + 0x138) = DAT_00126480;\n    }\n    if (DAT_00126474 != -1) {\n      *(short *)(lVar35 + 300) = DAT_00126474;\n    }\n    if (DAT_00126472 != -1) {\n      *(short *)(lVar35 + 0x118) = DAT_00126472;\n    }\n    if (DAT_00126470 != -1) {\n      *(short *)(lVar35 + 0x11a) = DAT_00126470;\n    }\n    if (uVar22 < uVar26) {\n      uVar18 = dcgettext(0,\"warning: file alignment (0x%lx) > section alignment (0x%lx)\",5);\n      FUN_00119ed0(uVar18,uVar26,uVar22);\n    }\n  }\n  plVar6 = DAT_001278b0;\n  free(DAT_001278b0);\n  if (plVar6 == DAT_001278a8) {\n    DAT_001278b0 = (long *)0x0;\n    DAT_001278a8 = (long *)0x0;\n    lVar35 = (**(code **)(param_1[1] + 0x1f8))(param_1);\n  }\n  else {\n    free(DAT_001278a8);\n    DAT_001278b0 = (long *)0x0;\n    DAT_001278a8 = (long *)0x0;\n    lVar35 = (**(code **)(param_1[1] + 0x1f8))(param_1);\n  }\n  if (lVar35 < 0) goto LAB_00107a82;\n  DAT_001278a8 = (long *)xmalloc();\n  DAT_001278b0 = DAT_001278a8;\n  uStack_1f8 = (**(code **)(param_1[1] + 0x200))(param_1,DAT_001278a8);\n  if ((long)uStack_1f8 < 0) goto LAB_00107a82;\n  if (uStack_1f8 == 0) {\n    free(DAT_001278b0);\n    DAT_001278b0 = (long *)0x0;\n    DAT_001278a8 = (long *)0x0;\n  }\n  bfd_map_over_sections(param_1,FUN_00115530,param_2);\n  puVar30 = DAT_001279c0;\n  if ((DAT_001278ec == '\\0') &&\n     (cVar11 = (**(code **)(*(long *)(param_2 + 8) + 0x168))(param_1), puVar30 = DAT_001279c0,\n     cVar11 == '\\0')) {\n    DAT_00127a20 = 1;\n    dcgettext(0,\"error in private header data\",5);\n    FUN_001126c0(0,param_1,0);\n    puVar30 = DAT_001279c0;\n  }\n  for (; puVar38 = DAT_001279b8, puVar30 != (undefined8 *)0x0; puVar30 = (undefined8 *)*puVar30) {\n    uVar28 = 0x128;\n    lVar35 = FUN_00114190(puVar30[1],0,0x80);\n    if (lVar35 != 0) {\n      uVar28 = FUN_00115f30(*(uint *)(lVar35 + 0x28) | 0x100,param_2,puVar30[1]);\n    }\n    lVar35 = bfd_get_section_by_name(param_2,puVar30[1]);\n    if (lVar35 != 0) {\n      uVar18 = puVar30[1];\n      uVar17 = dcgettext(0,\"can\\'t add section \\'%s\\'\",5);\n      FUN_001126c0(0,param_2,0,uVar17,uVar18);\n      return 0;\n    }\n    lVar35 = bfd_make_section_with_flags(param_2,puVar30[1],uVar28 | 0x100000);\n    puVar30[5] = lVar35;\n    if (lVar35 == 0) {\n      uVar18 = puVar30[1];\n      uVar17 = dcgettext(0,\"can\\'t create section `%s\\'\",5);\n      FUN_001126c0(0,param_2,0,uVar17,uVar18);\n      return 0;\n    }\n    cVar11 = bfd_set_section_size();\n    if (cVar11 == '\\0') {\n      FUN_001126c0(0,param_2,puVar30[5],0);\n      return 0;\n    }\n    lVar35 = FUN_00114190(puVar30[1],0,0x18);\n    if (lVar35 != 0) {\n      uVar18 = *(undefined8 *)(lVar35 + 0x18);\n      lVar35 = puVar30[5];\n      *(byte *)(lVar35 + 0x28) = *(byte *)(lVar35 + 0x28) | 1;\n      *(undefined8 *)(lVar35 + 0x30) = uVar18;\n      *(undefined8 *)(lVar35 + 0x38) = uVar18;\n    }\n    lVar35 = FUN_00114190(puVar30[1],0,0x60);\n    if (lVar35 != 0) {\n      lVar16 = puVar30[5];\n      *(undefined8 *)(lVar16 + 0x38) = *(undefined8 *)(lVar35 + 0x20);\n      if (0x3e < *(uint *)(lVar16 + 0x7c)) {\n        FUN_001126c0(0,param_2,lVar16,0);\n        return 0;\n      }\n    }\n  }\n  for (; puVar38 != (undefined8 *)0x0; puVar38 = (undefined8 *)*puVar38) {\n    lVar35 = bfd_get_section_by_name(param_1,puVar38[1]);\n    puVar38[5] = lVar35;\n    if (lVar35 == 0) {\n      uVar18 = puVar38[1];\n      uVar17 = dcgettext(0,\"error: %s not found, can\\'t be updated\",5);\n      FUN_00119ed0(uVar17,uVar18);\n      return 0;\n    }\n    uVar18 = *(undefined8 *)(lVar35 + 0x60);\n    cVar11 = bfd_set_section_size(uVar18);\n    if (cVar11 == '\\0') {\n      FUN_001126c0(0,param_2,uVar18,0);\n      return 0;\n    }\n  }\n  puVar30 = DAT_001279b0;\n  if (DAT_00127a00 == '\\0') {\n    __ptr_01 = (long **)0x0;\n  }\n  else {\n    pplVar33 = (long **)param_1[0x12];\n    __ptr_01 = pplVar33;\n    if (pplVar33 != (long **)0x0) {\n      __ptr_01 = (long **)0x0;\nLAB_001151ab:\n      if (DAT_00127a00 != '\\0') goto LAB_00115187;\n      for (plVar6 = pplVar33[1]; puVar30 = DAT_001279b0, plVar6 != (long *)0x0;\n          plVar6 = (long *)plVar6[1]) {\n      }\n    }\n  }\njoined_r0x001151c7:\n  for (; puVar30 != (undefined8 *)0x0; puVar30 = (undefined8 *)*puVar30) {\n    lVar35 = bfd_get_section_by_name(param_1,puVar30[1]);\n    if (lVar35 == 0) {\n      dcgettext(0,\"can\\'t dump section \\'%s\\' - it does not exist\",5);\n      FUN_001126c0(0,param_1,0);\n    }\n    else if ((*(byte *)(lVar35 + 0x25) & 1) == 0) {\n      dcgettext(0,\"can\\'t dump section - it has no contents\",5);\n      FUN_001126c0(0,param_1,lVar35);\n    }\n    else {\n      sVar19 = *(size_t *)(lVar35 + 0x40);\n      __s_00 = fopen((char *)puVar30[2],\"w\");\n      if (__s_00 == (FILE *)0x0) {\n        dcgettext(0,\"could not open section dump file\",5);\n        FUN_001126c0(puVar30[2],0,0);\n      }\n      else {\n        cVar11 = bfd_malloc_and_get_section(param_1,lVar35,&pcStack_c8);\n        if (cVar11 == '\\0') {\n          dcgettext(0,\"could not retrieve section contents\",5);\n          FUN_001126c0(0,param_1,lVar35);\n        }\n        else if ((sVar19 != 0) && (sVar20 = fwrite(pcStack_c8,1,sVar19,__s_00), sVar20 != sVar19)) {\n          piVar25 = __errno_location();\n          pcVar34 = strerror(*piVar25);\n          uVar18 = puVar30[2];\n          uVar17 = dcgettext(0,\"error writing section contents to %s (error: %s)\",5);\n          FUN_00119ed0(uVar17,uVar18,pcVar34);\n          free(pcStack_c8);\n          fclose(__s_00);\n          return 0;\n        }\n        fclose(__s_00);\n        free(pcStack_c8);\n      }\n    }\n  }\n  if (DAT_00127a10 == 0) {\nLAB_0010790a:\n    lStack_190 = 0;\n  }\n  else {\n    lVar35 = bfd_get_section_by_name(param_2,\".gnu_debuglink\");\n    if (lVar35 != 0) {\n      uVar18 = dcgettext(0,\"%s: debuglink section already exists\",5);\n      FUN_00119ed0(uVar18);\n      DAT_00127a10 = 0;\n      goto LAB_0010790a;\n    }\n    lStack_190 = bfd_create_gnu_debuglink_section(param_2);\n    lVar35 = DAT_00127a10;\n    if (lStack_190 == 0) {\n      uVar18 = dcgettext(0,\"cannot create debug link section `%s\\'\",5);\n      FUN_001126c0(0,param_2,0,uVar18,lVar35);\n      return 0;\n    }\n    if (*(int *)(*(long *)(param_2 + 8) + 8) == 2) {\n      uVar22 = 0;\n      for (uVar26 = *(ulong *)(param_2 + 0x90); uVar26 != 0; uVar26 = *(ulong *)(uVar26 + 8)) {\n        uVar24 = *(ulong *)(uVar26 + 0x30);\n        uVar31 = uVar22;\n        uVar7 = uVar26;\n        uVar8 = uVar22;\n        if (uVar24 != 0) {\n          while ((uVar31 = uVar7, uVar8 != 0 &&\n                 (uVar31 = uVar26, uVar24 <= *(ulong *)(uVar22 + 0x30)))) {\n            uVar26 = *(ulong *)(uVar26 + 8);\n            if (uVar26 == 0) goto LAB_00107db8;\n            uVar24 = *(ulong *)(uVar26 + 0x30);\n            uVar7 = uVar22;\n            uVar8 = uVar24;\n          }\n        }\n        uVar22 = uVar31;\n      }\nLAB_00107db8:\n      if (uVar22 == 0) {\n        uVar26 = 0x1000;\n      }\n      else {\n        uVar22 = *(long *)(uVar22 + 0x40) + *(long *)(uVar22 + 0x30);\n        uVar26 = 0xffffffffffffffff;\n        if (uVar22 < 0xfffffffffffff001) {\n          uVar26 = uVar22 + 0xfff & 0xfffffffffffff000;\n        }\n      }\n      *(byte *)(lStack_190 + 0x28) = *(byte *)(lStack_190 + 0x28) | 1;\n      *(ulong *)(lStack_190 + 0x30) = uVar26;\n      *(ulong *)(lStack_190 + 0x38) = uVar26;\n    }\n  }\n  plVar6 = DAT_001278b0;\n  if (*(int *)(param_2 + 0xa0) != 0) {\n    uVar26 = FUN_0010554f();\n    return uVar26;\n  }\n  if (DAT_00127980 == '\\0') {\nLAB_00105588:\n    puStack_1e8 = (undefined4 *)0x0;\n  }\n  else {\n    ppuVar42 = &PTR_s__stab_00125c60;\n    puStack_1e8 = (undefined4 *)xmalloc(0x60);\n    puVar36 = puStack_1e8;\n    for (lVar35 = 0x18; lVar35 != 0; lVar35 = lVar35 + -1) {\n      *puVar36 = 0;\n      puVar36 = puVar36 + (ulong)bVar44 * -2 + 1;\n    }\n    pcStack_1d0 = (char *)0x0;\n    do {\n      puVar3 = *ppuVar42;\n      lVar35 = bfd_get_section_by_name(param_1,puVar3);\n      lVar16 = bfd_get_section_by_name();\n      if ((lVar35 != 0) && (lVar16 != 0)) {\n        lVar23 = *(long *)(lVar35 + 0x40);\n        __ptr = (void *)xmalloc(lVar23);\n        cVar11 = bfd_get_section_contents(param_1,lVar35,__ptr,0,lVar23);\n        if (cVar11 == '\\0') {\n          uVar14 = bfd_get_error();\n          bfd_errmsg(uVar14);\n          fprintf(_stderr,\"%s: %s: %s\\n\",*param_1);\n          free(pcStack_1d0);\n          free(__ptr);\n        }\n        else {\n          uVar26 = *(ulong *)(lVar16 + 0x40);\n          __ptr_00 = (void *)xmalloc(uVar26 + 1);\n          local_1f0._0_1_ = bfd_get_section_contents(param_1,lVar16,__ptr_00,0);\n          if ((char)local_1f0 == '\\0') {\n            uVar14 = bfd_get_error();\n            bfd_errmsg(uVar14);\n            fprintf(_stderr,\"%s: %s: %s\\n\",*param_1);\n            free(pcStack_1d0);\n          }\n          else {\n            *(undefined *)((long)__ptr_00 + uVar26) = 0;\n            if ((pcStack_1d0 != (char *)0x0) ||\n               (pcStack_1d0 = (char *)FUN_00112894(param_1,1,plVar6), pcStack_1d0 != (char *)0x0)) {\n              lStack_168 = 0;\n              lStack_180 = 0;\n              for (pvVar41 = __ptr; pvVar41 <= (void *)((long)__ptr + lVar23 + -0xc);\n                  pvVar41 = (void *)((long)pvVar41 + 0xc)) {\n                uVar22 = (**(code **)(param_1[1] + 0x40))(pvVar41);\n                bVar2 = *(byte *)((long)pvVar41 + 4);\n                uVar14 = (**(code **)(param_1[1] + 0x58))((long)pvVar41 + 6);\n                lVar35 = (**(code **)(param_1[1] + 0x40))((long)pvVar41 + 8);\n                if (bVar2 == 0) {\n                  lStack_180 = lStack_168;\n                  lStack_168 = lStack_168 + lVar35;\n                }\n                else {\n                  uVar24 = (uVar22 & 0xffffffff) + lStack_180;\n                  if (uVar24 < uVar26) {\n                    pcVar34 = (char *)((long)__ptr_00 + uVar24);\n                    pcStack_178 = (char *)0x0;\n                    while( true ) {\n                      sVar19 = strlen(pcVar34);\n                      if (((sVar19 == 0) || (pcVar29 = pcVar34 + (sVar19 - 1), *pcVar29 != '\\\\')) ||\n                         ((ulong)((long)__ptr + lVar23) < (long)pvVar41 + 0x10U)) goto LAB_001077fb;\n                      *pcVar29 = '\\0';\n                      pvVar41 = (void *)((long)pvVar41 + 0xc);\n                      iVar13 = (**(code **)(param_1[1] + 0x40))(pvVar41);\n                      uVar22 = (ulong)(uint)(iVar13 + (int)lStack_180);\n                      if (uVar26 <= uVar22) break;\n                      pcVar34 = (char *)concat(pcVar34,(long)__ptr_00 + uVar22,0);\n                      *pcVar29 = '\\\\';\n                      free(pcStack_178);\n                      pcStack_178 = pcVar34;\n                    }\n                    uVar18 = *param_1;\n                    pcVar29 = (char *)dcgettext(0,\"%s: %s: stab entry %ld is corrupt\\n\",5);\n                    fprintf(_stderr,pcVar29,uVar18,puVar3,((long)pvVar41 - (long)__ptr) / 0xc);\nLAB_001077fb:\n                    FUN_001088ae((ulong)bVar2,uVar14,lVar35,pcVar34);\n                    cVar11 = FUN_0011173a(puStack_1e8,pcStack_1d0,bVar2);\n                    if (cVar11 == '\\0') {\n                      FUN_00108b3e();\n                      FUN_00108863();\n                      free(pcStack_178);\n                      free(pcStack_1d0);\n                      free(__ptr);\n                      free(__ptr_00);\n                      goto LAB_00105981;\n                    }\n                  }\n                  else {\n                    uVar18 = *param_1;\n                    pcVar34 = (char *)dcgettext(0,\n                                                \"%s: %s: stab entry %ld is corrupt, strx = 0x%x, type = %d\\n\"\n                                                ,5);\n                    fprintf(_stderr,pcVar34,uVar18,puVar3,((long)pvVar41 - (long)__ptr) / 0xc,\n                            uVar22 & 0xffffffff,(ulong)bVar2,((long)pvVar41 - (long)__ptr) % 0xc);\n                  }\n                }\n              }\n              FUN_00108863();\n              free(__ptr);\n              goto LAB_001058eb;\n            }\n          }\n          free(__ptr_00);\n          free(__ptr);\n        }\n        goto LAB_00105981;\n      }\nLAB_001058eb:\n      ppuVar42 = ppuVar42 + 2;\n    } while (ppuVar42 != (undefined **)&DAT_00125c90);\n    if ((pcStack_1d0 != (char *)0x0) && (cVar11 = FUN_0010c892(), cVar11 == '\\0')) {\nLAB_00105981:\n      free(puStack_1e8);\n      goto LAB_00105588;\n    }\n    if (*(int *)(param_1[1] + 8) == 1) {\n      lVar35 = 0;\n      for (plVar15 = plVar6; plVar15 < plVar6 + uStack_1f8; plVar15 = plVar15 + 1) {\n        (**(code **)(param_1[1] + 0x218))(param_1,*plVar15,&pcStack_c8);\n        if ((char)uStack_c0 == '-') {\n          if (((lVar35 == 0) && (lVar35 = FUN_00112894(param_1,0,plVar6), lVar35 == 0)) ||\n             ((pcStack_b8 == (char *)0x0 || (*pcStack_b8 == '\\0')))) goto LAB_00105981;\n          pcVar34 = (char *)0x0;\n          pcVar29 = pcStack_b8;\n          while (((*pcVar29 != '\\0' && (sVar19 = strlen(pcVar29), pcVar29[sVar19 - 1] == '\\\\')) &&\n                 (plVar15 + 1 < plVar6 + uStack_1f8))) {\n            pcVar21 = (char *)xstrdup(pcVar29);\n            sVar19 = strlen(pcVar21);\n            pcVar21[sVar19 - 1] = '\\0';\n            pcVar29 = (char *)concat(pcVar21,*(undefined8 *)(plVar15[1] + 8),0);\n            free(pcVar21);\n            free(pcVar34);\n            plVar15 = plVar15 + 1;\n            pcVar34 = pcVar29;\n          }\n          FUN_001088ae(uStack_b0,(int)sStack_ae,pcStack_c8,pcVar29);\n          local_1f0._0_1_ = FUN_0011173a(puStack_1e8,lVar35,uStack_b0);\n          if ((char)local_1f0 == '\\0') {\n            FUN_00108b3e();\n            FUN_00108863();\n            goto LAB_00105981;\n          }\n        }\n      }\n      FUN_00108863();\n      if ((lVar35 != 0) && (cVar11 = FUN_0010c892(), cVar11 == '\\0')) goto LAB_00105981;\n    }\n    if ((char)local_1f0 == '\\0') {\n      if ((*(int *)(param_1[1] + 8) == 2) && (uStack_1f8 != 0)) {\n        pcStack_c8 = (char *)0x0;\n        plStack_148 = plVar6;\n        lStack_138 = 0;\n        lStack_130 = 0;\n        puVar37 = &uStack_c0;\n        for (lVar35 = 0x22; lVar35 != 0; lVar35 = lVar35 + -1) {\n          *(undefined4 *)puVar37 = 0;\n          puVar37 = (ulong *)((long)puVar37 + (ulong)bVar44 * -8 + 4);\n        }\n        cVar11 = '\\0';\n        piStack_1c0 = (int *)0x0;\n        uVar28 = 0;\n        pcStack_1d0 = (char *)0x0;\n        pcStack_178 = (char *)0xffffffffffffffff;\n        uStack_140 = uStack_1f8;\nswitchD_00106e1a_caseD_68:\n        do {\n          while( true ) {\n            if ((long)uStack_1f8 <= lStack_138) goto LAB_00105590;\n            lVar35 = plVar6[lStack_138];\n            cVar10 = bfd_coff_get_syment(param_1,lVar35,apvStack_128);\n            lVar16 = lStack_130;\n            if (cVar10 == '\\0') {\n              uVar14 = bfd_get_error();\n              bfd_errmsg(uVar14);\n              pcVar34 = \"bfd_coff_get_syment failed: %s\";\n              goto LAB_00105968;\n            }\n            pcVar34 = *(char **)(lVar35 + 8);\n            puVar30 = (undefined8 *)0x0;\n            lStack_138 = lStack_138 + 1;\n            lStack_130 = (ulong)bStack_107 + 1 + lStack_130;\n            if (bStack_107 != 0) {\n              puVar30 = &uStack_f8;\n              cVar10 = bfd_coff_get_auxent(param_1,lVar35,0);\n              if (cVar10 == '\\0') {\n                uVar14 = bfd_get_error();\n                bfd_errmsg(uVar14);\n                pcVar34 = \"bfd_coff_get_auxent failed: %s\";\n                goto LAB_00105968;\n              }\n            }\n            if (pcStack_178 != (char *)lVar16) break;\n            if (bStack_108 != 0x67) {\n              cVar10 = FUN_0010bbd3(puStack_1e8);\n              if (cVar10 != '\\0') break;\n              goto LAB_00105981;\n            }\nswitchD_00106e1a_caseD_67:\n            pcStack_178 = (char *)lStack_118;\n            cVar10 = FUN_0010bbd3(puStack_1e8);\n            if (cVar10 == '\\0') goto LAB_00105981;\n          }\n          uVar9 = uStack_10a;\n          if ((char)bStack_108 < '\\0') {\n            if (bStack_108 == 0xff) goto switchD_00106e1a_caseD_68;\nLAB_0010700a:\n            lVar23 = FUN_0010dac0(param_1,&plStack_148,&pcStack_c8);\n            if (lVar23 == 0) break;\n            cVar10 = FUN_00112a33(&pcStack_c8,lVar35,lVar16);\n          }\n          else {\n            if (bStack_108 < 100) {\n              switch(bStack_108) {\n              case 3:\n                if (uStack_10a == 0) goto switchD_00106e1a_caseD_68;\n              case 2:\nswitchD_00106e1a_caseD_7f:\n                if ((ulong)((uint)uStack_10a & *(uint *)(param_1[0x22] + 0x40)) !=\n                    2L << ((byte)*(undefined4 *)(param_1[0x22] + 0x3c) & 0x3f)) goto LAB_0010700a;\n                piStack_1c0 = (int *)(**(code **)(param_1[1] + 0x238))(param_1);\n                uVar28 = (uint)uVar9;\n                pcStack_1d0 = pcVar34;\n                goto switchD_00106e1a_caseD_68;\n              default:\n                goto LAB_0010700a;\n              case 5:\n              case 7:\n              case 0xe:\n                goto switchD_00106e1a_caseD_68;\n              }\n            }\n            switch(bStack_108) {\n            case 100:\n              iVar13 = strcmp(pcVar34,\".bb\");\n              if (iVar13 == 0) {\n                cVar10 = FUN_0010be88(puStack_1e8);\n              }\n              else {\n                iVar13 = strcmp(pcVar34,\".eb\");\n                if (iVar13 != 0) goto switchD_00106e1a_caseD_68;\n                cVar10 = FUN_0010bf20(puStack_1e8);\n              }\n              break;\n            case 0x65:\n              iVar13 = strcmp(pcVar34,\".bf\");\n              if (iVar13 == 0) {\n                if (pcStack_1d0 != (char *)0x0) {\n                  uVar39 = (int)uVar28 >> ((byte)*(undefined4 *)(param_1[0x22] + 0x44) & 0x1f);\n                  lVar16 = FUN_0010dac0(param_1,&plStack_148,&pcStack_c8,lVar16,\n                                        uVar39 ^ (uVar28 ^ uVar39) & *(uint *)(param_1[0x22] + 0x38)\n                                        ,puVar30,0,puStack_1e8);\n                  if ((lVar16 == 0) || (cVar11 = FUN_0010bc80(puStack_1e8), cVar11 == '\\0'))\n                  goto LAB_00105981;\n                  if (piStack_1c0 != (int *)0x0) {\n                    iVar13 = 0;\n                    if (bStack_107 != 0) {\n                      iVar13 = uStack_f0 - 1;\n                    }\n                    lVar35 = *(long *)(*(long *)(lVar35 + 0x20) + 0x30);\n                    while( true ) {\n                      iVar32 = piStack_1c0[4];\n                      if (iVar32 == 0) break;\n                      cVar10 = FUN_0010bf86(puStack_1e8,iVar13 + iVar32,\n                                            *(long *)(piStack_1c0 + 6) + lVar35);\n                      piStack_1c0 = piStack_1c0 + 4;\n                      if (cVar10 == '\\0') goto LAB_00105981;\n                    }\n                  }\n                  uVar28 = 0;\n                  piStack_1c0 = (int *)0x0;\n                  pcStack_1d0 = (char *)0x0;\n                  goto switchD_00106e1a_caseD_68;\n                }\n                pcVar34 = \"%ld: .bf without preceding function\";\n              }\n              else {\n                iVar13 = strcmp(pcVar34,\".ef\");\n                if (iVar13 != 0) goto switchD_00106e1a_caseD_68;\n                if (cVar11 != '\\0') {\n                  cVar11 = FUN_0010be1a(puStack_1e8);\n                  if (cVar11 == '\\0') goto LAB_00105981;\n                  cVar11 = '\\0';\n                  goto switchD_00106e1a_caseD_68;\n                }\n                pcVar34 = \"%ld: unexpected .ef\\n\";\n              }\n              uVar18 = dcgettext(0,pcVar34,5);\n              FUN_00119ed0(uVar18);\n              goto LAB_00105981;\n            default:\n              goto LAB_0010700a;\n            case 0x67:\n              goto switchD_00106e1a_caseD_67;\n            case 0x68:\n            case 0x69:\n            case 0x6a:\n              goto switchD_00106e1a_caseD_68;\n            case 0x7f:\n              goto switchD_00106e1a_caseD_7f;\n            }\n          }\n        } while (cVar10 != '\\0');\n      }\n      else {\n        pcVar34 = \"%s: no recognized debugging information\";\nLAB_00105968:\n        uVar18 = dcgettext(0,pcVar34,5);\n        FUN_00119ed0(uVar18);\n      }\n      goto LAB_00105981;\n    }\n  }\nLAB_00105590:\n  if (((*(uint *)(param_2 + 0x44) & 0x42) != 0) && ((*(uint *)(param_2 + 0x44) & 1) == 0)) {\n    if ((*(char *)(*(long *)(param_2 + 8) + 0x20) == '\\0') && (DAT_00127939 == '\\0')) {\n      if (uStack_1f8 != 0) {\n        plVar6 = DAT_001278b0 + uStack_1f8;\n        plVar15 = DAT_001278b0;\n        do {\n          uVar28 = *(uint *)(*plVar15 + 0x18);\n          if ((uVar28 & 0x1000000) != 0) {\n            *(uint *)(*plVar15 + 0x18) = uVar28 & 0xfeffffff;\n          }\n          plVar15 = plVar15 + 1;\n        } while (plVar6 != plVar15);\n      }\n    }\n    else {\n      for (lVar35 = *(long *)(param_2 + 0x90); lVar35 != 0; lVar35 = *(long *)(lVar35 + 8)) {\n        if (*(long *)(lVar35 + 0xe8) != 0) {\n          puVar1 = (uint *)(*(long *)(lVar35 + 0xe8) + 0x18);\n          *puVar1 = *puVar1 | 0x1000000;\n        }\n      }\n    }\n  }\n  if ((DAT_00127a2c == 2) || (DAT_00127a2c == 7)) {\nLAB_001059fe:\n    if (DAT_00127a2c == 7) {\nLAB_00105a3b:\n      plVar15 = (long *)xmalloc();\n      plVar6 = DAT_001278b0;\n      piStack_1c0._0_4_ = *(uint *)((long)param_1 + 0x44) & 0x42;\n      DAT_001278a8 = plVar15;\n      if (uStack_1f8 == 0) {\n        uVar26 = 0;\n      }\n      else {\n        uVar26 = 0;\n        local_1f0 = 0;\n        do {\n          iVar13 = DAT_001279a0;\n          plVar4 = (long *)plVar6[local_1f0];\n          pcVar5 = (code *)plVar4[4];\n          uVar28 = *(uint *)(plVar4 + 3);\n          pcVar34 = (char *)plVar4[1];\n          pcVar29 = pcVar34;\n          if (DAT_001279a8 != (undefined8 *)0x0) {\n            iVar32 = 0;\n            puVar30 = DAT_001279a8;\n            while ((iVar32 < iVar13 && (pcVar21 = (char *)puVar30[5], pcVar21 != (char *)0x0))) {\n              if (pcVar21 != \"\") {\n                iVar12 = strcmp(pcVar21,pcVar34);\n                if (iVar12 == 0) {\n                  free(pcVar21);\n                  uVar22 = uVar26 + 1;\n                  puVar30[5] = \"\";\n                  lVar35 = FUN_0011a2e0(puVar30);\n                  uVar18 = DAT_001278d0;\n                  plVar15[uVar26] = lVar35;\n                  lVar35 = htab_elements(uVar18);\n                  if ((lVar35 != 0) || (DAT_001278d8 != (char **)0x0)) goto LAB_001064eb;\n                  goto LAB_00105af8;\n                }\n                puVar30 = (undefined8 *)*puVar30;\n              }\n              iVar32 = iVar32 + 1;\n            }\n          }\n          lVar35 = htab_elements(DAT_001278d0);\n          uVar22 = uVar26;\n          if ((lVar35 != 0) || (DAT_001278d8 != (char **)0x0)) {\n            if (pcVar34 != (char *)0x0) {\nLAB_001064eb:\n              if (((*pcVar34 == '_') && (pcVar34[1] == '_')) &&\n                 (iVar13 = strcmp(pcVar34 + (pcVar34[2] == '_'),\"__gnu_lto_slim\"), iVar13 == 0)) {\n                uVar18 = dcgettext(0,\"redefining symbols does not work on LTO-compiled object files\"\n                                   ,5);\n                    \n                FUN_00119dd0(uVar18);\n              }\n            }\n            uStack_c0 = 0;\n            pcStack_c8 = pcVar34;\n            lVar35 = htab_find(DAT_001278d0);\n            if (((lVar35 == 0) || (pcVar29 = *(char **)(lVar35 + 8), pcVar34 == pcVar29)) &&\n               (pcVar29 = pcVar34, ppcVar40 = DAT_001278d8, (uVar28 & 0x100) != 0)) {\n              for (; ppcVar40 != (char **)0x0; ppcVar40 = (char **)ppcVar40[3]) {\n                iVar13 = strcmp(*ppcVar40,pcVar34);\n                if (iVar13 == 0) {\n                  pcVar29 = ppcVar40[1];\n                  break;\n                }\n              }\n            }\n            plVar4[1] = (long)pcVar29;\n            cVar11 = *pcVar29;\n            if (cVar11 != '\\0') goto LAB_00105b11;\nLAB_00106557:\n            pcVar34 = DAT_00127908;\n            if ((DAT_00127988 != '\\0') && (*(char *)(*(long *)(param_2 + 8) + 0x1c) != '\\0')) {\n              lVar35 = param_1[1];\n              cVar11 = '\\0';\n              goto LAB_0010668d;\n            }\n            goto joined_r0x00106565;\n          }\nLAB_00105af8:\n          cVar11 = *pcVar34;\n          if (cVar11 == '\\0') goto LAB_00106557;\nLAB_00105b11:\n          pcVar34 = DAT_00127908;\n          lVar35 = param_1[1];\n          if (*(char *)(lVar35 + 0x1c) == cVar11) {\n            if (DAT_00127988 == '\\0') {\n              if ((DAT_00127968 == '\\0') ||\n                 ((((uVar28 & 0x82) == 0 && (pcVar5 != bfd_map_over_sections)) &&\n                  ((*(byte *)(plVar4[4] + 0x25) & 0x10) == 0)))) goto joined_r0x00106565;\nLAB_0010677d:\n              pcVar29 = pcVar29 + 1;\n              plVar4[1] = (long)pcVar29;\n              goto joined_r0x00106565;\n            }\n            cVar11 = *(char *)(*(long *)(param_2 + 8) + 0x1c);\n            if (cVar11 == '\\0') goto LAB_0010677d;\n            if (DAT_00127908 != (char *)0x0) {\n              pcVar29 = pcVar29 + 1;\n              plVar4[1] = (long)pcVar29;\n              sVar19 = strlen(pcVar29);\n              lVar35 = sVar19 + 2;\nLAB_001066bc:\n              sVar19 = strlen(pcVar34);\n              pcVar34 = (char *)xmalloc(sVar19 + lVar35);\n              goto LAB_001066d0;\n            }\n            *pcVar29 = cVar11;\n            plVar4[1] = (long)pcVar29;\n            uVar26 = uVar22;\n          }\n          else {\n            if ((DAT_00127988 == '\\0') || (*(char *)(*(long *)(param_2 + 8) + 0x1c) == '\\0')) {\njoined_r0x00106565:\n              uVar26 = uVar22;\n              if (pcVar34 == (char *)0x0) goto LAB_00105b32;\n              sVar19 = strlen(pcVar29);\n              sVar20 = strlen(pcVar34);\n              pcVar21 = (char *)xmalloc(sVar20 + sVar19 + 1);\n              pcVar34 = pcVar21;\n            }\n            else {\nLAB_0010668d:\n              pcVar34 = DAT_00127908;\n              if ((*(char *)(lVar35 + 0x1c) != '\\0') && (cVar11 != *(char *)(lVar35 + 0x1c)))\n              goto joined_r0x00106565;\n              sVar19 = strlen(pcVar29);\n              lVar35 = sVar19 + 2;\n              if (pcVar34 != (char *)0x0) goto LAB_001066bc;\n              pcVar34 = (char *)xmalloc(lVar35);\nLAB_001066d0:\n              pcVar21 = pcVar34 + 1;\n              *pcVar34 = *(char *)(*(long *)(param_2 + 8) + 0x1c);\n            }\n            __s = DAT_00127908;\n            if (DAT_00127908 != (char *)0x0) {\n              strcpy(pcVar21,DAT_00127908);\n              sVar19 = strlen(__s);\n              pcVar21 = pcVar21 + sVar19;\n            }\n            strcpy(pcVar21,pcVar29);\n            plVar4[1] = (long)pcVar34;\n            pcVar29 = pcVar34;\n            uVar26 = uVar22;\n          }\nLAB_00105b32:\n          if (DAT_00127a2c == 7) goto LAB_001067a8;\n          if (((uVar28 & 0x20) == 0) &&\n             (((uVar28 & 0x100) == 0 ||\n              ((*(byte *)(**(long **)(plVar4[4] + 0xf0) + 0x18) & 0x20) == 0)))) {\n            if ((((uint)piStack_1c0 == 0) &&\n                (((uVar28 & 0x82) != 0 || ((*(byte *)(plVar4[4] + 0x25) & 0x10) != 0)))) ||\n               (iVar13 = bfd_decode_symclass(plVar4), iVar13 == 0x49)) {\nLAB_00105be2:\n              if (DAT_001279ca == '\\0') {\n                lVar35 = htab_find();\n                if (lVar35 == 0) goto LAB_00105c07;\n              }\n              else {\n                uStack_c0 = uStack_c0 & 0xffffffffffffff00;\n                pcStack_c8 = pcVar29;\n                htab_traverse(DAT_001279f8,FUN_0011a170,&pcStack_c8);\n                if ((char)uStack_c0 == '\\0') goto LAB_00105c07;\n              }\n            }\n            else if ((((uVar28 & 0x82) == 0) && (pcVar5 != bfd_map_over_sections)) &&\n                    ((*(byte *)(plVar4[4] + 0x25) & 0x10) == 0)) {\n              if ((uVar28 & 4) == 0) {\n                if (((*(int *)(param_1[1] + 8) != 2) ||\n                    (lVar35 = *(long *)(plVar4[4] + 0xd0), lVar35 == 0)) ||\n                   (*(long *)(lVar35 + 0x40) == 0)) {\n                  if ((DAT_00127a2c == 3) || (DAT_00127a28 == 2)) goto LAB_001067a8;\n                  if (DAT_00127a28 == 1) {\n                    cVar11 = bfd_is_local_label(param_1);\n                    goto joined_r0x00106a11;\n                  }\n                }\n                goto LAB_00105be2;\n              }\n              cVar11 = DAT_00127980;\n              if (1 < DAT_00127a2c - 2U) {\njoined_r0x00106a11:\n                if (cVar11 == '\\0') goto LAB_00105be2;\n              }\n            }\n            else if (DAT_00127a2c != 3) goto LAB_00105be2;\n            goto LAB_001067a8;\n          }\n          if (DAT_001279ca == '\\0') {\n            lVar35 = htab_find();\n            if (lVar35 != 0) {\nLAB_0010687f:\n              uVar18 = dcgettext(0,\"not stripping symbol `%s\\' because it is named in a relocation\",\n                                 5);\n              FUN_00119ed0(uVar18);\n              DAT_00127a20 = 1;\n            }\n          }\n          else {\n            uStack_c0 = uStack_c0 & 0xffffffffffffff00;\n            pcStack_c8 = pcVar29;\n            htab_traverse(DAT_001279f8,FUN_0011a170,&pcStack_c8);\n            if ((char)uStack_c0 != '\\0') goto LAB_0010687f;\n          }\n          if ((uVar28 & 0x20) == 0) {\nLAB_00105c07:\n            if (DAT_001279ca != '\\0') {\n              uStack_c0 = uStack_c0 & 0xffffffffffffff00;\n              pcStack_c8 = pcVar29;\n              htab_traverse(DAT_001279f0,FUN_0011a170,&pcStack_c8);\n              if ((char)uStack_c0 != '\\0') goto LAB_001067a8;\n              goto LAB_00105c2c;\n            }\n            lVar35 = htab_find();\n            if (lVar35 == 0) goto LAB_00105c2c;\nLAB_001067a8:\n            if ((DAT_00127a18 != '\\0') && ((uVar28 & 0x4000) != 0)) goto LAB_00105c2c;\n            if (DAT_001279ca == '\\0') {\n              lVar35 = htab_find();\n              if (lVar35 != 0) goto LAB_00105c2c;\n            }\n            else {\n              uStack_c0 = uStack_c0 & 0xffffffffffffff00;\n              pcStack_c8 = pcVar29;\n              htab_traverse(DAT_00127a08,FUN_0011a170,&pcStack_c8);\n              if ((char)uStack_c0 != '\\0') goto LAB_00105c2c;\n            }\n          }\n          else {\nLAB_00105c2c:\n            cVar11 = FUN_001159d0(plVar4[4]);\n            if (cVar11 == '\\0') {\n              if (((uVar28 & 0x800002) == 0) && (pcVar5 != bfd_map_over_sections)) {\nLAB_00105c5f:\n                if ((uVar28 & 0x82) != 0) {\n                  cVar11 = FUN_00115d70(pcVar29);\n                  if ((cVar11 == '\\0') &&\n                     ((lVar35 = htab_elements(DAT_001279d8), lVar35 == 0 ||\n                      (cVar11 = FUN_00115d70(pcVar29), cVar11 != '\\0')))) {\n                    if (((((DAT_00127938 == '\\0') ||\n                          (uVar39 = *(uint *)(plVar4 + 3), (uVar39 & 0x200000) != 0)) ||\n                         (lVar35 = *plVar4, lVar35 == 0)) ||\n                        ((*(int *)(*(long *)(lVar35 + 8) + 8) != 5 ||\n                         (*(long *)(lVar35 + 0x110) == 0)))) ||\n                       (1 < (*(byte *)((long)plVar4 + 0x49) & 3) - 1)) goto joined_r0x00105ca2;\n                  }\n                  else {\n                    uVar39 = *(uint *)(plVar4 + 3);\n                  }\n                  *(uint *)(plVar4 + 3) = uVar39 & 0xffffff7d | 1;\n                }\njoined_r0x00105ca2:\n                if (((uVar28 & 1) != 0) && (cVar11 = FUN_00115d70(pcVar29), cVar11 != '\\0')) {\n                  *(uint *)(plVar4 + 3) = *(uint *)(plVar4 + 3) & 0xfffffffe | 2;\n                }\n              }\n              else {\n                if ((DAT_001279c8 != '\\0') || (cVar11 = FUN_00115d70(pcVar29), cVar11 != '\\0')) {\n                  *(uint *)(plVar4 + 3) = *(uint *)(plVar4 + 3) & 0xff7ffffd | 0x80;\n                }\n                if (pcVar5 != bfd_map_over_sections) goto LAB_00105c5f;\n              }\n              plVar15[uVar26] = (long)plVar4;\n              uVar26 = uVar26 + 1;\n            }\n          }\n          local_1f0 = local_1f0 + 1;\n        } while (uStack_1f8 != local_1f0);\n      }\n      if (DAT_001279a8 != (undefined8 *)0x0) {\n        puVar30 = DAT_001279a8;\n        iVar13 = DAT_001279a0;\n        for (lVar35 = 0; lVar35 < iVar13; lVar35 = lVar35 + 1) {\n          pcVar34 = (char *)puVar30[5];\n          if (pcVar34 == (char *)0x0) {\n            plVar6 = plVar15 + uVar26;\n            uVar26 = uVar26 + 1;\n            lVar16 = FUN_0011a2e0(puVar30,param_2);\n            *plVar6 = lVar16;\n            iVar13 = DAT_001279a0;\n          }\n          else if (pcVar34 != \"\") {\n            uVar18 = dcgettext(0,\"\\'before=%s\\' not found\",5);\n                    \n            FUN_00119dd0(uVar18,pcVar34);\n          }\n          puVar30 = (undefined8 *)*puVar30;\n        }\n      }\n      bVar43 = DAT_00127980 == '\\0';\n      plVar15[uVar26] = 0;\n      if ((bVar43) || (puStack_1e8 == (undefined4 *)0x0)) {\nLAB_00105cfa:\n        uStack_1f8 = uVar26 & 0xffffffff;\n        goto LAB_00105710;\n      }\n      iVar13 = *(int *)(*(undefined8 **)(param_2 + 8) + 1);\n      if ((iVar13 == 5) || (iVar13 == 2)) {\n        apvStack_128[0] = (void *)0x0;\n        cVar11 = FUN_0011378f(param_2,puStack_1e8,&plStack_148,&uStack_f8,apvStack_128,&pcStack_c8);\n        if (cVar11 != '\\0') {\n          lVar35 = bfd_make_section_with_flags(param_2,\".stab\",0x2108);\n          lVar16 = bfd_make_section_with_flags(param_2,\".stabstr\",0x2108);\n          if ((((lVar35 == 0) || (lVar16 == 0)) ||\n              (cVar11 = bfd_set_section_size(lVar35,uStack_f8), cVar11 == '\\0')) ||\n             (cVar11 = bfd_set_section_size(lVar16,pcStack_c8), cVar11 == '\\0')) {\n            pcVar34 = \"can\\'t create debugging section\";\n          }\n          else {\n            *(undefined4 *)(lVar35 + 0x7c) = 2;\n            *(undefined4 *)(lVar16 + 0x7c) = 0;\n            cVar11 = bfd_set_section_contents(param_2,lVar35,plStack_148,0,uStack_f8);\n            if ((cVar11 != '\\0') &&\n               (cVar11 = bfd_set_section_contents(param_2,lVar16,apvStack_128[0],0,pcStack_c8),\n               cVar11 != '\\0')) {\n              free(puStack_1e8);\n              goto LAB_00105cfa;\n            }\n            pcVar34 = \"can\\'t set debugging section contents\";\n          }\n          uVar18 = dcgettext(0,pcVar34,5);\n          FUN_001126c0(0,param_2,0,uVar18);\n          free(apvStack_128[0]);\n          free(puStack_1e8);\n          goto LAB_00105d96;\n        }\n      }\n      else {\n        uVar18 = **(undefined8 **)(param_2 + 8);\n        uVar17 = dcgettext(0,\"don\\'t know how to write debugging information for %s\",5);\n        FUN_001126c0(0,param_2,0,uVar17,uVar18);\n      }\n      free(puStack_1e8);\n    }\n    else {\nLAB_00105a07:\n      bfd_set_error(0);\n      bfd_map_over_sections(param_1,FUN_00116030,DAT_001278b0);\n      iVar13 = bfd_get_error();\n      if (iVar13 == 0) goto LAB_00105a3b;\n    }\nLAB_00105d96:\n    DAT_00127a20 = 1;\n  }\n  else {\n    if ((DAT_00127a2c - 3U < 4) || ((DAT_00127a28 != 0 || (DAT_00127938 != '\\0'))))\n    goto LAB_00105a07;\n    lVar35 = htab_elements(DAT_001279f8);\n    if (((lVar35 != 0) ||\n        (((((((lVar35 = htab_elements(DAT_00127a08), lVar35 != 0 ||\n              (lVar35 = htab_elements(DAT_001279e8), lVar35 != 0)) ||\n             (lVar35 = htab_elements(DAT_001279e0), lVar35 != 0)) ||\n            ((lVar35 = htab_elements(DAT_001279d8), lVar35 != 0 ||\n             (lVar35 = htab_elements(DAT_001279d0), lVar35 != 0)))) ||\n           (lVar35 = htab_elements(DAT_001278d0), lVar35 != 0)) ||\n          (((DAT_00127908 != (char *)0x0 || (DAT_001278b8 != '\\0')) ||\n           ((DAT_00127a19 != '\\0' ||\n            (((DAT_00127980 != '\\0' || (DAT_00127988 != '\\0')) || (DAT_00127968 != '\\0')))))))) ||\n         ((DAT_001278d8 != (char **)0x0 || (DAT_001279c8 != '\\0')))))) || (DAT_001279a0 != 0))\n    goto LAB_001059fe;\nLAB_00105710:\n    bfd_set_symtab(param_2,DAT_001278a8,uStack_1f8 & 0xffffffff);\n    bfd_map_over_sections(param_1,FUN_00115dc0,param_2);\n    bfd_map_over_sections(param_1,FUN_00116110,param_2);\n    for (puVar30 = DAT_001279c0; puVar38 = DAT_001279b8, puVar30 != (undefined8 *)0x0;\n        puVar30 = (undefined8 *)*puVar30) {\n      cVar11 = bfd_set_section_contents(param_2,puVar30[5],puVar30[4],0,puVar30[3]);\n      if (cVar11 == '\\0') {\n        FUN_001126c0(0,param_2,puVar30[5],0);\n        return 0;\n      }\n    }\n    for (; puVar38 != (undefined8 *)0x0; puVar38 = (undefined8 *)*puVar38) {\n      uVar18 = *(undefined8 *)(puVar38[5] + 0x60);\n      cVar11 = bfd_set_section_contents(param_2,uVar18,puVar38[4],0,puVar38[3]);\n      if (cVar11 == '\\0') {\n        FUN_001126c0(0,param_2,uVar18,0);\n        return 0;\n      }\n    }\n    if (__ptr_01 == (long **)0x0) {\n      if ((DAT_00127a00 != '\\0') && (_DAT_00127a24 == 0)) {\n        uVar18 = *param_1;\n        uVar17 = dcgettext(0,\"%s: Could not find any mergeable note sections\",5);\n        FUN_00119ed0(uVar17,uVar18);\n      }\n    }\n    else {\n      pplVar33 = (long **)0x0;\n      for (puVar30 = *(undefined8 **)(param_2 + 0x90); puVar30 != (undefined8 *)0x0;\n          puVar30 = (undefined8 *)puVar30[1]) {\n        if (((DAT_00127a00 != '\\0') && (*(int *)(*(long *)(param_2 + 8) + 8) == 5)) &&\n           ((*(int *)(puVar30[0x1a] + 4) == 7 &&\n            (cVar11 = FUN_00113fb0(*puVar30,\".gnu.build.attributes\"), cVar11 != '\\0')))) {\n          if (pplVar33 == (long **)0x0) {\n            pplVar33 = __ptr_01;\n          }\n          pplVar27 = __ptr_01;\n          if ((undefined8 *)(*pplVar33)[0xc] == puVar30) {\nLAB_0010625f:\n            pcVar34 = \"error: failed to merge notes\";\n            if (pplVar33[1] != (long *)0x0) {\n              cVar11 = bfd_set_section_contents(param_2,puVar30,pplVar33[1],0,pplVar33[2]);\n              if (cVar11 == '\\0') {\n                uVar18 = dcgettext(0,\"error: failed to copy merged notes into output\",5);\n                FUN_001126c0(0,param_2,puVar30,uVar18);\n                return 0;\n              }\n              pplVar33 = (long **)pplVar33[3];\n              goto LAB_001061be;\n            }\n          }\n          else {\n            do {\n              pplVar33 = pplVar27;\n              if ((undefined8 *)(*pplVar27)[0xc] == puVar30) goto LAB_0010625f;\n              pplVar33 = (long **)pplVar27[3];\n              pplVar27 = pplVar33;\n            } while (pplVar33 != (long **)0x0);\n            pcVar34 = \"error: failed to locate merged notes\";\n          }\n          uVar18 = dcgettext(0,pcVar34,5);\n          FUN_001126c0(0,param_2,puVar30,uVar18);\n        }\nLAB_001061be:\n      }\n      do {\n        pplVar33 = (long **)__ptr_01[3];\n        free(__ptr_01[1]);\n        free(__ptr_01);\n        __ptr_01 = pplVar33;\n      } while (pplVar33 != (long **)0x0);\n    }\n    if ((DAT_00127a10 == 0) ||\n       (cVar11 = bfd_fill_in_gnu_debuglink_section(param_2,lStack_190), lVar35 = DAT_00127a10,\n       cVar11 != '\\0')) {\n      uVar28 = (**(code **)(*(long *)(param_2 + 8) + 0x140))(param_1);\n      uVar26 = (ulong)uVar28;\n      if ((char)uVar28 != '\\0') {\n        if (DAT_00127910 == 0) {\n          return uVar26;\n        }\n        cVar11 = bfd_alt_mach_code(param_2,DAT_00127910 & 0xffffffff);\n        uVar22 = DAT_00127910;\n        if (cVar11 == '\\0') {\n          uVar18 = dcgettext(0,\"this target does not support %lu alternative machine codes\",5);\n          FUN_00119ed0(uVar18,uVar22);\n          if (*(int *)(*(long *)(param_2 + 8) + 8) == 5) {\n            uVar18 = dcgettext(0,\"treating that number as an absolute e_machine value instead\",5);\n            FUN_00119ed0(uVar18);\n            *(short *)(*(long *)(param_2 + 0x110) + 0x3a) = (short)DAT_00127910;\n            return uVar26;\n          }\n          uVar18 = dcgettext(0,\"ignoring the alternative value\",5);\n          FUN_00119ed0(uVar18);\n          return uVar26;\n        }\n        return uVar26;\n      }\n      uVar18 = dcgettext(0,\"error copying private BFD data\",5);\n      FUN_001126c0(0,param_2,0,uVar18);\n    }\n    else {\n      uVar18 = dcgettext(0,\"cannot fill debug link section `%s\\'\",5);\n      FUN_001126c0(0,param_2,0,uVar18,lVar35);\n    }\n  }\n  return 0;\nLAB_00115187:\n  if ((((*(int *)(param_1[1] + 8) == 5) && (*(int *)((long)pplVar33[0x1a] + 4) == 7)) &&\n      (cVar11 = FUN_00113fb0(*pplVar33), cVar11 != '\\0')) &&\n     ((pplVar33[0xc] != (long *)0x0 && (plVar6 = pplVar33[8], plVar6 != (long *)0x0)))) {\n    pplVar27 = (long **)xmalloc(0x20);\n    pplVar27[1] = (long *)0x0;\n    cVar11 = bfd_get_full_section_contents(param_1,pplVar33,pplVar27 + 1);\n    if (cVar11 == '\\0') {\n      dcgettext(0,\"warning: could not load note section\",5);\n      FUN_001126c0(0,param_1,pplVar33);\n      free(pplVar27);\n    }\n    else {\n      plVar15 = (long *)FUN_001163d0(param_1,pplVar33,plVar6);\n      pplVar27[2] = plVar15;\n      if ((plVar15 == plVar6) || (cVar11 = bfd_set_section_size(pplVar33[0xc]), cVar11 != '\\0')) {\n        pplVar27[3] = (long *)__ptr_01;\n        *pplVar27 = (long *)pplVar33;\n        __ptr_01 = pplVar27;\n      }\n      else {\n        dcgettext(0,\"warning: failed to set merged notes size\",5);\n        FUN_001126c0(0,param_2,pplVar33);\n        free(pplVar27[1]);\n        free(pplVar27);\n      }\n    }\n  }\n  pplVar33 = (long **)pplVar33[1];\n  puVar30 = DAT_001279b0;\n  if (pplVar33 == (long **)0x0) goto joined_r0x001151c7;\n  goto LAB_001151ab;\n}\n\n",
            "current_name": "FUNC_00114e50",
            "entrypoint": "0x00114e50",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00114e50": "FUNC_00114e50"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_001152b6": {
            "called": [
                "dcgettext",
                "FUN_00119ed0",
                "FUN_001125fa",
                "FUN_00107880"
            ],
            "calling": [
                "FUN_00107976"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x001062da) */\n/* WARNING: Removing unreachable block (ram,0x001062e7) */\n/* WARNING: Removing unreachable block (ram,0x001062eb) */\n/* WARNING: Removing unreachable block (ram,0x00106314) */\n/* WARNING: Removing unreachable block (ram,0x00106316) */\n/* WARNING: Removing unreachable block (ram,0x00106323) */\n/* WARNING: Removing unreachable block (ram,0x00106331) */\n/* WARNING: Removing unreachable block (ram,0x0010633b) */\n/* WARNING: Removing unreachable block (ram,0x00106354) */\n/* WARNING: Removing unreachable block (ram,0x00106358) */\n/* WARNING: Removing unreachable block (ram,0x001075c4) */\n/* WARNING: Removing unreachable block (ram,0x0010636d) */\n/* WARNING: Removing unreachable block (ram,0x00106375) */\n/* WARNING: Removing unreachable block (ram,0x00106490) */\n/* WARNING: Type propagation algorithm not settling */\n\n\nulong FUNC_001152b6(void)\n\n{\n  uint *puVar1;\n  byte bVar2;\n  undefined *puVar3;\n  long *plVar4;\n  code *pcVar5;\n  long *plVar6;\n  ulong uVar7;\n  ulong uVar8;\n  char *__s;\n  char cVar9;\n  char cVar10;\n  uint uVar11;\n  int iVar12;\n  uint uVar13;\n  undefined4 uVar14;\n  int iVar15;\n  long *plVar16;\n  long lVar17;\n  undefined8 uVar18;\n  undefined8 uVar19;\n  size_t sVar20;\n  size_t sVar21;\n  char *pcVar22;\n  void *__ptr;\n  void *__ptr_00;\n  ulong uVar23;\n  long lVar24;\n  ulong uVar25;\n  int *piVar26;\n  long lVar27;\n  ulong uVar28;\n  FILE *__s_00;\n  long **pplVar29;\n  undefined4 unaff_EBX;\n  long **__ptr_01;\n  char *pcVar30;\n  undefined8 *puVar31;\n  ulong uVar32;\n  int iVar33;\n  long **pplVar34;\n  long unaff_RBP;\n  char *pcVar35;\n  undefined4 *puVar36;\n  undefined8 *puVar37;\n  int unaff_R12D;\n  char **ppcVar38;\n  void *pvVar39;\n  undefined8 *unaff_R14;\n  undefined **ppuVar40;\n  bool bVar41;\n  byte bVar42;\n  long param_7;\n  ulong uStack0000000000000010;\n  char in_stack_00000018;\n  undefined4 *puStack0000000000000020;\n  char *pcStack0000000000000038;\n  uint uStack0000000000000048;\n  int iStack000000000000006c;\n  long lStack0000000000000078;\n  long lStack0000000000000088;\n  char *pcStack0000000000000090;\n  long lStack00000000000000a0;\n  long *in_stack_000000c0;\n  ulong in_stack_000000c8;\n  long in_stack_000000d0;\n  long in_stack_000000d8;\n  void *in_stack_000000e0;\n  long in_stack_000000f0;\n  undefined8 in_stack_000000f8;\n  byte bStack0000000000000100;\n  byte bStack0000000000000101;\n  undefined8 in_stack_00000110;\n  ushort in_stack_00000118;\n  char *in_stack_00000140;\n  char cStack0000000000000148;\n  char *in_stack_00000150;\n  undefined uStack0000000000000158;\n  short sStack000000000000015a;\n  \n  bVar42 = 0;\n  if (unaff_R12D == 0) {\n    unaff_R12D = *(int *)(unaff_RBP + 0xc);\n    unaff_EBX = *(undefined4 *)(unaff_RBP + 0x10);\n    if (((unaff_R12D == 0) && (*(int *)(unaff_R14[1] + 8) != 5)) &&\n       (*(int *)(*(long *)(param_7 + 8) + 8) == 5)) {\n      uVar28 = FUNC_00107880();\n      return uVar28;\n    }\n  }\n  else {\n    uVar19 = FUN_001125fa();\n    uVar18 = dcgettext(0,\"Input file `%s\\' ignores binary architecture parameter.\",5);\n    FUN_00119ed0(uVar18,uVar19);\n  }\n  cVar10 = (**(code **)(*(long *)(param_7 + 8) + 0x2a0))(param_7,unaff_R12D,unaff_EBX);\n  if (cVar10 == '\\0') {\n    if ((*(byte *)(unaff_R14 + 9) & 0x40) != 0) {\n      iVar12 = bfd_get_arch();\n      if (iVar12 == 0) {\n        uVar19 = FUN_001125fa();\n        uVar18 = dcgettext(0,\"Unable to recognise the format of the input file `%s\\'\",5);\n        FUN_00119ed0(uVar18,uVar19);\n        return 0;\n      }\n      uVar19 = bfd_get_mach();\n      uVar14 = bfd_get_arch();\n      uVar19 = bfd_printable_arch_mach(uVar14,uVar19);\n      uVar18 = dcgettext(0,\"Output file cannot represent architecture `%s\\'\",5);\n      FUN_00119ed0(uVar18,uVar19);\n      return 0;\n    }\n    iVar12 = bfd_get_arch();\n    iVar33 = bfd_get_arch(param_7);\n    if (iVar12 != iVar33) {\n      uVar28 = FUN_00105828();\n      return uVar28;\n    }\n  }\n  cVar10 = bfd_set_format(param_7,*(byte *)(unaff_R14 + 9) & 7);\n  if (cVar10 == '\\0') {\nLAB_00107a82:\n    FUN_001126c0(0);\n    return 0;\n  }\n  if ((*(int *)(*(undefined8 **)(param_7 + 8) + 1) == 2) &&\n     (cVar10 = FUN_00113fb0(**(undefined8 **)(param_7 + 8),&DAT_0011b503), cVar10 != '\\0')) {\n    lVar27 = *(long *)(param_7 + 0x110);\n    if ((*(int *)((undefined8 *)unaff_R14[1] + 1) == 2) &&\n       (cVar10 = FUN_00113fb0(*(undefined8 *)unaff_R14[1],&DAT_0011b503), cVar10 != '\\0')) {\n      lVar17 = unaff_R14[0x22];\n      bVar41 = DAT_001279cb == '\\0';\n      puVar31 = (undefined8 *)(lVar17 + 200);\n      puVar37 = (undefined8 *)(lVar27 + 200);\n      for (lVar24 = 0x32; lVar24 != 0; lVar24 = lVar24 + -1) {\n        *puVar37 = *puVar31;\n        puVar31 = puVar31 + (ulong)bVar42 * -2 + 1;\n        puVar37 = puVar37 + (ulong)bVar42 * -2 + 1;\n      }\n      if (bVar41) {\n        *(undefined4 *)(lVar27 + 0x2a4) = 0xffffffff;\n      }\n      else {\n        *(int *)(lVar27 + 0x2a4) = (int)*(undefined8 *)(lVar17 + 0xa8);\n      }\n    }\n    uVar28 = DAT_001264a8;\n    if (DAT_001264a8 == 0xffffffffffffffff) {\n      DAT_001264a8 = 0x200;\n      uVar28 = 0x200;\n    }\n    else {\n      *(int *)(lVar27 + 0x10c) = (int)DAT_001264a8;\n    }\n    if (DAT_00126498 != -1) {\n      *(long *)(lVar27 + 0x148) = DAT_00126498;\n    }\n    if (DAT_001264a0 != -1) {\n      *(long *)(lVar27 + 0x148) = DAT_001264a0;\n    }\n    if (DAT_00126490 != -1) {\n      *(long *)(lVar27 + 0x100) = DAT_00126490;\n    }\n    uVar23 = DAT_00126488;\n    if (DAT_00126488 == 0xffffffffffffffff) {\n      DAT_00126488 = 0x1000;\n      uVar23 = 0x1000;\n    }\n    else {\n      *(int *)(lVar27 + 0x108) = (int)DAT_00126488;\n    }\n    if (DAT_00126478 != -1) {\n      *(long *)(lVar27 + 0x138) = DAT_00126478;\n    }\n    if (DAT_00126480 != -1) {\n      *(long *)(lVar27 + 0x138) = DAT_00126480;\n    }\n    if (DAT_00126474 != -1) {\n      *(short *)(lVar27 + 300) = DAT_00126474;\n    }\n    if (DAT_00126472 != -1) {\n      *(short *)(lVar27 + 0x118) = DAT_00126472;\n    }\n    if (DAT_00126470 != -1) {\n      *(short *)(lVar27 + 0x11a) = DAT_00126470;\n    }\n    if (uVar23 < uVar28) {\n      uVar19 = dcgettext(0,\"warning: file alignment (0x%lx) > section alignment (0x%lx)\",5);\n      FUN_00119ed0(uVar19,uVar28,uVar23);\n    }\n  }\n  plVar6 = DAT_001278b0;\n  free(DAT_001278b0);\n  if (plVar6 == DAT_001278a8) {\n    DAT_001278b0 = (long *)0x0;\n    DAT_001278a8 = (long *)0x0;\n    lVar27 = (**(code **)(unaff_R14[1] + 0x1f8))();\n  }\n  else {\n    free(DAT_001278a8);\n    DAT_001278b0 = (long *)0x0;\n    DAT_001278a8 = (long *)0x0;\n    lVar27 = (**(code **)(unaff_R14[1] + 0x1f8))();\n  }\n  if (lVar27 < 0) goto LAB_00107a82;\n  DAT_001278a8 = (long *)xmalloc();\n  DAT_001278b0 = DAT_001278a8;\n  uStack0000000000000010 = (**(code **)(unaff_R14[1] + 0x200))();\n  if ((long)uStack0000000000000010 < 0) goto LAB_00107a82;\n  if (uStack0000000000000010 == 0) {\n    free(DAT_001278b0);\n    DAT_001278b0 = (long *)0x0;\n    DAT_001278a8 = (long *)0x0;\n  }\n  bfd_map_over_sections();\n  puVar31 = DAT_001279c0;\n  if ((DAT_001278ec == '\\0') &&\n     (cVar10 = (**(code **)(*(long *)(param_7 + 8) + 0x168))(), puVar31 = DAT_001279c0,\n     cVar10 == '\\0')) {\n    DAT_00127a20 = 1;\n    dcgettext(0,\"error in private header data\",5);\n    FUN_001126c0(0);\n    puVar31 = DAT_001279c0;\n  }\n  for (; puVar37 = DAT_001279b8, puVar31 != (undefined8 *)0x0; puVar31 = (undefined8 *)*puVar31) {\n    uVar11 = 0x128;\n    lVar27 = FUN_00114190(puVar31[1],0,0x80);\n    if (lVar27 != 0) {\n      uVar11 = FUN_00115f30(*(uint *)(lVar27 + 0x28) | 0x100,param_7,puVar31[1]);\n    }\n    lVar27 = bfd_get_section_by_name(param_7,puVar31[1]);\n    if (lVar27 != 0) {\n      uVar19 = puVar31[1];\n      uVar18 = dcgettext(0,\"can\\'t add section \\'%s\\'\",5);\n      FUN_001126c0(0,param_7,0,uVar18,uVar19);\n      return 0;\n    }\n    lVar27 = bfd_make_section_with_flags(param_7,puVar31[1],uVar11 | 0x100000);\n    puVar31[5] = lVar27;\n    if (lVar27 == 0) {\n      uVar19 = puVar31[1];\n      uVar18 = dcgettext(0,\"can\\'t create section `%s\\'\",5);\n      FUN_001126c0(0,param_7,0,uVar18,uVar19);\n      return 0;\n    }\n    cVar10 = bfd_set_section_size();\n    if (cVar10 == '\\0') {\n      FUN_001126c0(0,param_7,puVar31[5],0);\n      return 0;\n    }\n    lVar27 = FUN_00114190(puVar31[1],0,0x18);\n    if (lVar27 != 0) {\n      uVar19 = *(undefined8 *)(lVar27 + 0x18);\n      lVar27 = puVar31[5];\n      *(byte *)(lVar27 + 0x28) = *(byte *)(lVar27 + 0x28) | 1;\n      *(undefined8 *)(lVar27 + 0x30) = uVar19;\n      *(undefined8 *)(lVar27 + 0x38) = uVar19;\n    }\n    lVar27 = FUN_00114190(puVar31[1],0,0x60);\n    if (lVar27 != 0) {\n      lVar17 = puVar31[5];\n      *(undefined8 *)(lVar17 + 0x38) = *(undefined8 *)(lVar27 + 0x20);\n      if (0x3e < *(uint *)(lVar17 + 0x7c)) {\n        FUN_001126c0(0,param_7,lVar17,0);\n        return 0;\n      }\n    }\n  }\n  for (; puVar37 != (undefined8 *)0x0; puVar37 = (undefined8 *)*puVar37) {\n    lVar27 = bfd_get_section_by_name();\n    puVar37[5] = lVar27;\n    if (lVar27 == 0) {\n      uVar19 = puVar37[1];\n      uVar18 = dcgettext(0,\"error: %s not found, can\\'t be updated\",5);\n      FUN_00119ed0(uVar18,uVar19);\n      return 0;\n    }\n    uVar19 = *(undefined8 *)(lVar27 + 0x60);\n    cVar10 = bfd_set_section_size(uVar19);\n    if (cVar10 == '\\0') {\n      FUN_001126c0(0,param_7,uVar19,0);\n      return 0;\n    }\n  }\n  puVar31 = DAT_001279b0;\n  if (DAT_00127a00 == '\\0') {\n    __ptr_01 = (long **)0x0;\n  }\n  else {\n    pplVar34 = (long **)unaff_R14[0x12];\n    __ptr_01 = pplVar34;\n    if (pplVar34 != (long **)0x0) {\n      __ptr_01 = (long **)0x0;\nLAB_001151ab:\n      if (DAT_00127a00 != '\\0') goto LAB_00115187;\n      for (plVar6 = pplVar34[1]; puVar31 = DAT_001279b0, plVar6 != (long *)0x0;\n          plVar6 = (long *)plVar6[1]) {\n      }\n    }\n  }\njoined_r0x001151c7:\n  for (; puVar31 != (undefined8 *)0x0; puVar31 = (undefined8 *)*puVar31) {\n    lVar27 = bfd_get_section_by_name();\n    if (lVar27 == 0) {\n      dcgettext(0,\"can\\'t dump section \\'%s\\' - it does not exist\",5);\n      FUN_001126c0(0);\n    }\n    else if ((*(byte *)(lVar27 + 0x25) & 1) == 0) {\n      dcgettext(0,\"can\\'t dump section - it has no contents\",5);\n      FUN_001126c0(0);\n    }\n    else {\n      sVar20 = *(size_t *)(lVar27 + 0x40);\n      __s_00 = fopen((char *)puVar31[2],\"w\");\n      if (__s_00 == (FILE *)0x0) {\n        dcgettext(0,\"could not open section dump file\",5);\n        FUN_001126c0(puVar31[2],0,0);\n      }\n      else {\n        cVar10 = bfd_malloc_and_get_section();\n        if (cVar10 == '\\0') {\n          dcgettext(0,\"could not retrieve section contents\",5);\n          FUN_001126c0(0);\n        }\n        else if ((sVar20 != 0) &&\n                (sVar21 = fwrite(in_stack_00000140,1,sVar20,__s_00), sVar21 != sVar20)) {\n          piVar26 = __errno_location();\n          pcVar35 = strerror(*piVar26);\n          uVar19 = puVar31[2];\n          uVar18 = dcgettext(0,\"error writing section contents to %s (error: %s)\",5);\n          FUN_00119ed0(uVar18,uVar19,pcVar35);\n          free(in_stack_00000140);\n          fclose(__s_00);\n          return 0;\n        }\n        fclose(__s_00);\n        free(in_stack_00000140);\n      }\n    }\n  }\n  if (DAT_00127a10 == 0) {\nLAB_0010790a:\n    lStack0000000000000078 = 0;\n  }\n  else {\n    lVar27 = bfd_get_section_by_name(param_7,\".gnu_debuglink\");\n    if (lVar27 != 0) {\n      uVar19 = dcgettext(0,\"%s: debuglink section already exists\",5);\n      FUN_00119ed0(uVar19);\n      DAT_00127a10 = 0;\n      goto LAB_0010790a;\n    }\n    lStack0000000000000078 = bfd_create_gnu_debuglink_section(param_7);\n    lVar27 = DAT_00127a10;\n    if (lStack0000000000000078 == 0) {\n      uVar19 = dcgettext(0,\"cannot create debug link section `%s\\'\",5);\n      FUN_001126c0(0,param_7,0,uVar19,lVar27);\n      return 0;\n    }\n    if (*(int *)(*(long *)(param_7 + 8) + 8) == 2) {\n      uVar23 = 0;\n      for (uVar28 = *(ulong *)(param_7 + 0x90); uVar28 != 0; uVar28 = *(ulong *)(uVar28 + 8)) {\n        uVar25 = *(ulong *)(uVar28 + 0x30);\n        uVar32 = uVar23;\n        uVar7 = uVar28;\n        uVar8 = uVar23;\n        if (uVar25 != 0) {\n          while ((uVar32 = uVar7, uVar8 != 0 &&\n                 (uVar32 = uVar28, uVar25 <= *(ulong *)(uVar23 + 0x30)))) {\n            uVar28 = *(ulong *)(uVar28 + 8);\n            if (uVar28 == 0) goto LAB_00107db8;\n            uVar25 = *(ulong *)(uVar28 + 0x30);\n            uVar7 = uVar23;\n            uVar8 = uVar25;\n          }\n        }\n        uVar23 = uVar32;\n      }\nLAB_00107db8:\n      if (uVar23 == 0) {\n        uVar28 = 0x1000;\n      }\n      else {\n        uVar23 = *(long *)(uVar23 + 0x40) + *(long *)(uVar23 + 0x30);\n        uVar28 = 0xffffffffffffffff;\n        if (uVar23 < 0xfffffffffffff001) {\n          uVar28 = uVar23 + 0xfff & 0xfffffffffffff000;\n        }\n      }\n      *(byte *)(lStack0000000000000078 + 0x28) = *(byte *)(lStack0000000000000078 + 0x28) | 1;\n      *(ulong *)(lStack0000000000000078 + 0x30) = uVar28;\n      *(ulong *)(lStack0000000000000078 + 0x38) = uVar28;\n    }\n  }\n  plVar6 = DAT_001278b0;\n  iStack000000000000006c = *(int *)(param_7 + 0xa0);\n  if (iStack000000000000006c != 0) {\n    uVar28 = FUN_0010554f();\n    return uVar28;\n  }\n  if (DAT_00127980 == '\\0') {\nLAB_00105588:\n    puStack0000000000000020 = (undefined4 *)0x0;\n  }\n  else {\n    ppuVar40 = &PTR_s__stab_00125c60;\n    puStack0000000000000020 = (undefined4 *)xmalloc(0x60);\n    puVar36 = puStack0000000000000020;\n    for (lVar27 = 0x18; lVar27 != 0; lVar27 = lVar27 + -1) {\n      *puVar36 = 0;\n      puVar36 = puVar36 + (ulong)bVar42 * -2 + 1;\n    }\n    pcStack0000000000000038 = (char *)0x0;\n    do {\n      puVar3 = *ppuVar40;\n      lVar27 = bfd_get_section_by_name();\n      lVar17 = bfd_get_section_by_name();\n      if ((lVar27 != 0) && (lVar17 != 0)) {\n        lVar27 = *(long *)(lVar27 + 0x40);\n        __ptr = (void *)xmalloc(lVar27);\n        cVar10 = bfd_get_section_contents();\n        if (cVar10 == '\\0') {\n          uVar14 = bfd_get_error();\n          bfd_errmsg(uVar14);\n          fprintf(_stderr,\"%s: %s: %s\\n\",*unaff_R14);\n          free(pcStack0000000000000038);\n          free(__ptr);\n        }\n        else {\n          uVar28 = *(ulong *)(lVar17 + 0x40);\n          __ptr_00 = (void *)xmalloc(uVar28 + 1);\n          in_stack_00000018 = bfd_get_section_contents();\n          if (in_stack_00000018 == '\\0') {\n            uVar14 = bfd_get_error();\n            bfd_errmsg(uVar14);\n            fprintf(_stderr,\"%s: %s: %s\\n\",*unaff_R14);\n            free(pcStack0000000000000038);\n          }\n          else {\n            *(undefined *)((long)__ptr_00 + uVar28) = 0;\n            if ((pcStack0000000000000038 != (char *)0x0) ||\n               (pcStack0000000000000038 = (char *)FUN_00112894(),\n               pcStack0000000000000038 != (char *)0x0)) {\n              lStack00000000000000a0 = 0;\n              lStack0000000000000088 = 0;\n              for (pvVar39 = __ptr; pvVar39 <= (void *)((long)__ptr + lVar27 + -0xc);\n                  pvVar39 = (void *)((long)pvVar39 + 0xc)) {\n                uVar23 = (**(code **)(unaff_R14[1] + 0x40))(pvVar39);\n                bVar2 = *(byte *)((long)pvVar39 + 4);\n                uVar14 = (**(code **)(unaff_R14[1] + 0x58))((long)pvVar39 + 6);\n                lVar17 = (**(code **)(unaff_R14[1] + 0x40))((long)pvVar39 + 8);\n                if (bVar2 == 0) {\n                  lStack0000000000000088 = lStack00000000000000a0;\n                  lStack00000000000000a0 = lStack00000000000000a0 + lVar17;\n                }\n                else {\n                  uVar25 = (uVar23 & 0xffffffff) + lStack0000000000000088;\n                  if (uVar25 < uVar28) {\n                    pcVar35 = (char *)((long)__ptr_00 + uVar25);\n                    pcStack0000000000000090 = (char *)0x0;\n                    while( true ) {\n                      sVar20 = strlen(pcVar35);\n                      if (((sVar20 == 0) || (pcVar30 = pcVar35 + (sVar20 - 1), *pcVar30 != '\\\\')) ||\n                         ((ulong)((long)__ptr + lVar27) < (long)pvVar39 + 0x10U)) goto LAB_001077fb;\n                      *pcVar30 = '\\0';\n                      pvVar39 = (void *)((long)pvVar39 + 0xc);\n                      iVar12 = (**(code **)(unaff_R14[1] + 0x40))(pvVar39);\n                      uVar23 = (ulong)(uint)(iVar12 + (int)lStack0000000000000088);\n                      if (uVar28 <= uVar23) break;\n                      pcVar35 = (char *)concat(pcVar35,(long)__ptr_00 + uVar23,0);\n                      *pcVar30 = '\\\\';\n                      free(pcStack0000000000000090);\n                      pcStack0000000000000090 = pcVar35;\n                    }\n                    uVar19 = *unaff_R14;\n                    pcVar30 = (char *)dcgettext(0,\"%s: %s: stab entry %ld is corrupt\\n\",5);\n                    fprintf(_stderr,pcVar30,uVar19,puVar3,((long)pvVar39 - (long)__ptr) / 0xc);\nLAB_001077fb:\n                    FUN_001088ae((ulong)bVar2,uVar14,lVar17,pcVar35);\n                    cVar10 = FUN_0011173a(puStack0000000000000020,pcStack0000000000000038,bVar2);\n                    if (cVar10 == '\\0') {\n                      FUN_00108b3e();\n                      FUN_00108863();\n                      free(pcStack0000000000000090);\n                      free(pcStack0000000000000038);\n                      free(__ptr);\n                      free(__ptr_00);\n                      goto LAB_00105981;\n                    }\n                  }\n                  else {\n                    uVar19 = *unaff_R14;\n                    pcVar35 = (char *)dcgettext(0,\n                                                \"%s: %s: stab entry %ld is corrupt, strx = 0x%x, type = %d\\n\"\n                                                ,5);\n                    fprintf(_stderr,pcVar35,uVar19,puVar3,((long)pvVar39 - (long)__ptr) / 0xc,\n                            uVar23 & 0xffffffff,(ulong)bVar2,((long)pvVar39 - (long)__ptr) % 0xc);\n                  }\n                }\n              }\n              FUN_00108863();\n              free(__ptr);\n              goto LAB_001058eb;\n            }\n          }\n          free(__ptr_00);\n          free(__ptr);\n        }\n        goto LAB_00105981;\n      }\nLAB_001058eb:\n      ppuVar40 = ppuVar40 + 2;\n    } while (ppuVar40 != (undefined **)&DAT_00125c90);\n    if ((pcStack0000000000000038 != (char *)0x0) && (cVar10 = FUN_0010c892(), cVar10 == '\\0')) {\nLAB_00105981:\n      free(puStack0000000000000020);\n      goto LAB_00105588;\n    }\n    if (*(int *)(unaff_R14[1] + 8) == 1) {\n      lVar27 = 0;\n      for (plVar16 = plVar6; plVar16 < plVar6 + uStack0000000000000010; plVar16 = plVar16 + 1) {\n        (**(code **)(unaff_R14[1] + 0x218))();\n        if (cStack0000000000000148 == '-') {\n          if (((lVar27 == 0) && (lVar27 = FUN_00112894(), lVar27 == 0)) ||\n             ((in_stack_00000150 == (char *)0x0 || (*in_stack_00000150 == '\\0'))))\n          goto LAB_00105981;\n          pcVar35 = (char *)0x0;\n          pcVar30 = in_stack_00000150;\n          while (((*pcVar30 != '\\0' && (sVar20 = strlen(pcVar30), pcVar30[sVar20 - 1] == '\\\\')) &&\n                 (plVar16 + 1 < plVar6 + uStack0000000000000010))) {\n            pcVar22 = (char *)xstrdup(pcVar30);\n            sVar20 = strlen(pcVar22);\n            pcVar22[sVar20 - 1] = '\\0';\n            pcVar30 = (char *)concat(pcVar22,*(undefined8 *)(plVar16[1] + 8),0);\n            free(pcVar22);\n            free(pcVar35);\n            plVar16 = plVar16 + 1;\n            pcVar35 = pcVar30;\n          }\n          FUN_001088ae(uStack0000000000000158,(int)sStack000000000000015a,in_stack_00000140,pcVar30)\n          ;\n          in_stack_00000018 = FUN_0011173a(puStack0000000000000020,lVar27,uStack0000000000000158);\n          if (in_stack_00000018 == '\\0') {\n            FUN_00108b3e();\n            FUN_00108863();\n            goto LAB_00105981;\n          }\n        }\n      }\n      FUN_00108863();\n      if ((lVar27 != 0) && (cVar10 = FUN_0010c892(), cVar10 == '\\0')) goto LAB_00105981;\n    }\n    if (in_stack_00000018 == '\\0') {\n      if ((*(int *)(unaff_R14[1] + 8) == 2) && (uStack0000000000000010 != 0)) {\n        in_stack_00000140 = (char *)0x0;\n        in_stack_000000c0 = plVar6;\n        in_stack_000000d0 = 0;\n        in_stack_000000d8 = 0;\n        puVar31 = (undefined8 *)&stack0x00000148;\n        for (lVar27 = 0x22; lVar27 != 0; lVar27 = lVar27 + -1) {\n          *(undefined4 *)puVar31 = 0;\n          puVar31 = (undefined8 *)((long)puVar31 + (ulong)bVar42 * -8 + 4);\n        }\n        cVar10 = '\\0';\n        _uStack0000000000000048 = (int *)0x0;\n        pcStack0000000000000038 = (char *)0x0;\n        pcStack0000000000000090 = (char *)0xffffffffffffffff;\n        in_stack_000000c8 = uStack0000000000000010;\nswitchD_00106e1a_caseD_68:\n        do {\n          while( true ) {\n            if ((long)uStack0000000000000010 <= in_stack_000000d0) goto LAB_00105590;\n            lVar27 = plVar6[in_stack_000000d0];\n            cVar9 = bfd_coff_get_syment();\n            lVar17 = in_stack_000000d8;\n            if (cVar9 == '\\0') {\n              uVar14 = bfd_get_error();\n              bfd_errmsg(uVar14);\n              pcVar35 = \"bfd_coff_get_syment failed: %s\";\n              goto LAB_00105968;\n            }\n            pcVar35 = *(char **)(lVar27 + 8);\n            in_stack_000000d0 = in_stack_000000d0 + 1;\n            in_stack_000000d8 = (ulong)bStack0000000000000101 + 1 + in_stack_000000d8;\n            if ((bStack0000000000000101 != 0) && (cVar9 = bfd_coff_get_auxent(), cVar9 == '\\0')) {\n              uVar14 = bfd_get_error();\n              bfd_errmsg(uVar14);\n              pcVar35 = \"bfd_coff_get_auxent failed: %s\";\n              goto LAB_00105968;\n            }\n            if (pcStack0000000000000090 != (char *)lVar17) break;\n            if (bStack0000000000000100 != 0x67) {\n              cVar9 = FUN_0010bbd3(puStack0000000000000020);\n              if (cVar9 != '\\0') break;\n              goto LAB_00105981;\n            }\nswitchD_00106e1a_caseD_67:\n            pcStack0000000000000090 = (char *)in_stack_000000f0;\n            cVar9 = FUN_0010bbd3(puStack0000000000000020);\n            if (cVar9 == '\\0') goto LAB_00105981;\n          }\n          if ((char)bStack0000000000000100 < '\\0') {\n            if (bStack0000000000000100 == 0xff) goto switchD_00106e1a_caseD_68;\nLAB_0010700a:\n            lVar24 = FUN_0010dac0();\n            if (lVar24 == 0) break;\n            cVar9 = FUN_00112a33(&stack0x00000140,lVar27,lVar17);\n          }\n          else {\n            if (bStack0000000000000100 < 100) {\n              switch(bStack0000000000000100) {\n              case 3:\n                if (in_stack_000000f8._6_2_ == 0) goto switchD_00106e1a_caseD_68;\n              case 2:\nswitchD_00106e1a_caseD_7f:\n                if ((ulong)((uint)in_stack_000000f8._6_2_ & *(uint *)(unaff_R14[0x22] + 0x40)) !=\n                    2L << ((byte)*(undefined4 *)(unaff_R14[0x22] + 0x3c) & 0x3f)) goto LAB_0010700a;\n                _uStack0000000000000048 = (int *)(**(code **)(unaff_R14[1] + 0x238))();\n                pcStack0000000000000038 = pcVar35;\n                goto switchD_00106e1a_caseD_68;\n              default:\n                goto LAB_0010700a;\n              case 5:\n              case 7:\n              case 0xe:\n                goto switchD_00106e1a_caseD_68;\n              }\n            }\n            switch(bStack0000000000000100) {\n            case 100:\n              iVar12 = strcmp(pcVar35,\".bb\");\n              if (iVar12 == 0) {\n                cVar9 = FUN_0010be88(puStack0000000000000020);\n              }\n              else {\n                iVar12 = strcmp(pcVar35,\".eb\");\n                if (iVar12 != 0) goto switchD_00106e1a_caseD_68;\n                cVar9 = FUN_0010bf20(puStack0000000000000020);\n              }\n              break;\n            case 0x65:\n              iVar12 = strcmp(pcVar35,\".bf\");\n              if (iVar12 == 0) {\n                if (pcStack0000000000000038 != (char *)0x0) {\n                  lVar17 = FUN_0010dac0();\n                  if ((lVar17 == 0) ||\n                     (cVar10 = FUN_0010bc80(puStack0000000000000020), cVar10 == '\\0'))\n                  goto LAB_00105981;\n                  if (_uStack0000000000000048 != (int *)0x0) {\n                    iVar12 = 0;\n                    if (bStack0000000000000101 != 0) {\n                      iVar12 = in_stack_00000118 - 1;\n                    }\n                    lVar27 = *(long *)(*(long *)(lVar27 + 0x20) + 0x30);\n                    while( true ) {\n                      iVar33 = _uStack0000000000000048[4];\n                      if (iVar33 == 0) break;\n                      cVar9 = FUN_0010bf86(puStack0000000000000020,iVar12 + iVar33,\n                                           *(long *)(_uStack0000000000000048 + 6) + lVar27);\n                      _uStack0000000000000048 = _uStack0000000000000048 + 4;\n                      if (cVar9 == '\\0') goto LAB_00105981;\n                    }\n                  }\n                  _uStack0000000000000048 = (int *)0x0;\n                  pcStack0000000000000038 = (char *)0x0;\n                  goto switchD_00106e1a_caseD_68;\n                }\n                pcVar35 = \"%ld: .bf without preceding function\";\n              }\n              else {\n                iVar12 = strcmp(pcVar35,\".ef\");\n                if (iVar12 != 0) goto switchD_00106e1a_caseD_68;\n                if (cVar10 != '\\0') {\n                  cVar10 = FUN_0010be1a(puStack0000000000000020);\n                  if (cVar10 == '\\0') goto LAB_00105981;\n                  cVar10 = '\\0';\n                  goto switchD_00106e1a_caseD_68;\n                }\n                pcVar35 = \"%ld: unexpected .ef\\n\";\n              }\n              uVar19 = dcgettext(0,pcVar35,5);\n              FUN_00119ed0(uVar19);\n              goto LAB_00105981;\n            default:\n              goto LAB_0010700a;\n            case 0x67:\n              goto switchD_00106e1a_caseD_67;\n            case 0x68:\n            case 0x69:\n            case 0x6a:\n              goto switchD_00106e1a_caseD_68;\n            case 0x7f:\n              goto switchD_00106e1a_caseD_7f;\n            }\n          }\n        } while (cVar9 != '\\0');\n      }\n      else {\n        pcVar35 = \"%s: no recognized debugging information\";\nLAB_00105968:\n        uVar19 = dcgettext(0,pcVar35,5);\n        FUN_00119ed0(uVar19);\n      }\n      goto LAB_00105981;\n    }\n  }\nLAB_00105590:\n  if (((*(uint *)(param_7 + 0x44) & 0x42) != 0) && ((*(uint *)(param_7 + 0x44) & 1) == 0)) {\n    if ((*(char *)(*(long *)(param_7 + 8) + 0x20) == '\\0') && (DAT_00127939 == '\\0')) {\n      if (uStack0000000000000010 != 0) {\n        plVar6 = DAT_001278b0 + uStack0000000000000010;\n        plVar16 = DAT_001278b0;\n        do {\n          uVar11 = *(uint *)(*plVar16 + 0x18);\n          if ((uVar11 & 0x1000000) != 0) {\n            *(uint *)(*plVar16 + 0x18) = uVar11 & 0xfeffffff;\n          }\n          plVar16 = plVar16 + 1;\n        } while (plVar6 != plVar16);\n      }\n    }\n    else {\n      for (lVar27 = *(long *)(param_7 + 0x90); lVar27 != 0; lVar27 = *(long *)(lVar27 + 8)) {\n        if (*(long *)(lVar27 + 0xe8) != 0) {\n          puVar1 = (uint *)(*(long *)(lVar27 + 0xe8) + 0x18);\n          *puVar1 = *puVar1 | 0x1000000;\n        }\n      }\n    }\n  }\n  if ((DAT_00127a2c == 2) || (DAT_00127a2c == 7)) {\nLAB_001059fe:\n    if (DAT_00127a2c == 7) {\nLAB_00105a3b:\n      plVar16 = (long *)xmalloc();\n      plVar6 = DAT_001278b0;\n      uStack0000000000000048 = *(uint *)((long)unaff_R14 + 0x44) & 0x42;\n      DAT_001278a8 = plVar16;\n      if (uStack0000000000000010 == 0) {\n        uVar28 = 0;\n      }\n      else {\n        uVar28 = 0;\n        _in_stack_00000018 = 0;\n        do {\n          iVar12 = DAT_001279a0;\n          plVar4 = (long *)plVar6[_in_stack_00000018];\n          pcVar5 = (code *)plVar4[4];\n          uVar11 = *(uint *)(plVar4 + 3);\n          pcVar35 = (char *)plVar4[1];\n          pcVar30 = pcVar35;\n          if (DAT_001279a8 != (undefined8 *)0x0) {\n            iVar33 = 0;\n            puVar31 = DAT_001279a8;\n            while ((iVar33 < iVar12 && (pcVar22 = (char *)puVar31[5], pcVar22 != (char *)0x0))) {\n              if (pcVar22 != \"\") {\n                iVar15 = strcmp(pcVar22,pcVar35);\n                if (iVar15 == 0) {\n                  free(pcVar22);\n                  uVar23 = uVar28 + 1;\n                  puVar31[5] = \"\";\n                  lVar27 = FUN_0011a2e0(puVar31);\n                  uVar19 = DAT_001278d0;\n                  plVar16[uVar28] = lVar27;\n                  lVar27 = htab_elements(uVar19);\n                  if ((lVar27 != 0) || (DAT_001278d8 != (char **)0x0)) goto LAB_001064eb;\n                  goto LAB_00105af8;\n                }\n                puVar31 = (undefined8 *)*puVar31;\n              }\n              iVar33 = iVar33 + 1;\n            }\n          }\n          lVar27 = htab_elements(DAT_001278d0);\n          uVar23 = uVar28;\n          if ((lVar27 != 0) || (DAT_001278d8 != (char **)0x0)) {\n            if (pcVar35 != (char *)0x0) {\nLAB_001064eb:\n              if (((*pcVar35 == '_') && (pcVar35[1] == '_')) &&\n                 (iVar12 = strcmp(pcVar35 + (pcVar35[2] == '_'),\"__gnu_lto_slim\"), iVar12 == 0)) {\n                uVar19 = dcgettext(0,\"redefining symbols does not work on LTO-compiled object files\"\n                                   ,5);\n                    \n                FUN_00119dd0(uVar19);\n              }\n            }\n            _cStack0000000000000148 = 0;\n            in_stack_00000140 = pcVar35;\n            lVar27 = htab_find(DAT_001278d0);\n            if (((lVar27 == 0) || (pcVar30 = *(char **)(lVar27 + 8), pcVar35 == pcVar30)) &&\n               (pcVar30 = pcVar35, ppcVar38 = DAT_001278d8, (uVar11 & 0x100) != 0)) {\n              for (; ppcVar38 != (char **)0x0; ppcVar38 = (char **)ppcVar38[3]) {\n                iVar12 = strcmp(*ppcVar38,pcVar35);\n                if (iVar12 == 0) {\n                  pcVar30 = ppcVar38[1];\n                  break;\n                }\n              }\n            }\n            plVar4[1] = (long)pcVar30;\n            cVar10 = *pcVar30;\n            if (cVar10 != '\\0') goto LAB_00105b11;\nLAB_00106557:\n            pcVar35 = DAT_00127908;\n            if ((DAT_00127988 != '\\0') && (*(char *)(*(long *)(param_7 + 8) + 0x1c) != '\\0')) {\n              lVar27 = unaff_R14[1];\n              cVar10 = '\\0';\n              goto LAB_0010668d;\n            }\n            goto joined_r0x00106565;\n          }\nLAB_00105af8:\n          cVar10 = *pcVar35;\n          if (cVar10 == '\\0') goto LAB_00106557;\nLAB_00105b11:\n          pcVar35 = DAT_00127908;\n          lVar27 = unaff_R14[1];\n          if (*(char *)(lVar27 + 0x1c) == cVar10) {\n            if (DAT_00127988 == '\\0') {\n              if ((DAT_00127968 == '\\0') ||\n                 ((((uVar11 & 0x82) == 0 && (pcVar5 != bfd_map_over_sections)) &&\n                  ((*(byte *)(plVar4[4] + 0x25) & 0x10) == 0)))) goto joined_r0x00106565;\nLAB_0010677d:\n              pcVar30 = pcVar30 + 1;\n              plVar4[1] = (long)pcVar30;\n              goto joined_r0x00106565;\n            }\n            cVar10 = *(char *)(*(long *)(param_7 + 8) + 0x1c);\n            if (cVar10 == '\\0') goto LAB_0010677d;\n            if (DAT_00127908 != (char *)0x0) {\n              pcVar30 = pcVar30 + 1;\n              plVar4[1] = (long)pcVar30;\n              sVar20 = strlen(pcVar30);\n              lVar27 = sVar20 + 2;\nLAB_001066bc:\n              sVar20 = strlen(pcVar35);\n              pcVar35 = (char *)xmalloc(sVar20 + lVar27);\n              goto LAB_001066d0;\n            }\n            *pcVar30 = cVar10;\n            plVar4[1] = (long)pcVar30;\n            uVar28 = uVar23;\n          }\n          else {\n            if ((DAT_00127988 == '\\0') || (*(char *)(*(long *)(param_7 + 8) + 0x1c) == '\\0')) {\njoined_r0x00106565:\n              uVar28 = uVar23;\n              if (pcVar35 == (char *)0x0) goto LAB_00105b32;\n              sVar20 = strlen(pcVar30);\n              sVar21 = strlen(pcVar35);\n              pcVar22 = (char *)xmalloc(sVar21 + sVar20 + 1);\n              pcVar35 = pcVar22;\n            }\n            else {\nLAB_0010668d:\n              pcVar35 = DAT_00127908;\n              if ((*(char *)(lVar27 + 0x1c) != '\\0') && (cVar10 != *(char *)(lVar27 + 0x1c)))\n              goto joined_r0x00106565;\n              sVar20 = strlen(pcVar30);\n              lVar27 = sVar20 + 2;\n              if (pcVar35 != (char *)0x0) goto LAB_001066bc;\n              pcVar35 = (char *)xmalloc(lVar27);\nLAB_001066d0:\n              pcVar22 = pcVar35 + 1;\n              *pcVar35 = *(char *)(*(long *)(param_7 + 8) + 0x1c);\n            }\n            __s = DAT_00127908;\n            if (DAT_00127908 != (char *)0x0) {\n              strcpy(pcVar22,DAT_00127908);\n              sVar20 = strlen(__s);\n              pcVar22 = pcVar22 + sVar20;\n            }\n            strcpy(pcVar22,pcVar30);\n            plVar4[1] = (long)pcVar35;\n            pcVar30 = pcVar35;\n            uVar28 = uVar23;\n          }\nLAB_00105b32:\n          if (DAT_00127a2c == 7) goto LAB_001067a8;\n          if (((uVar11 & 0x20) == 0) &&\n             (((uVar11 & 0x100) == 0 ||\n              ((*(byte *)(**(long **)(plVar4[4] + 0xf0) + 0x18) & 0x20) == 0)))) {\n            if (((uStack0000000000000048 == 0) &&\n                (((uVar11 & 0x82) != 0 || ((*(byte *)(plVar4[4] + 0x25) & 0x10) != 0)))) ||\n               (iVar12 = bfd_decode_symclass(plVar4), iVar12 == 0x49)) {\nLAB_00105be2:\n              if (DAT_001279ca == '\\0') {\n                lVar27 = htab_find();\n                if (lVar27 == 0) goto LAB_00105c07;\n              }\n              else {\n                _cStack0000000000000148 = _cStack0000000000000148 & 0xffffffffffffff00;\n                in_stack_00000140 = pcVar30;\n                htab_traverse(DAT_001279f8,FUN_0011a170,&stack0x00000140);\n                if (cStack0000000000000148 == '\\0') goto LAB_00105c07;\n              }\n            }\n            else if ((((uVar11 & 0x82) == 0) && (pcVar5 != bfd_map_over_sections)) &&\n                    ((*(byte *)(plVar4[4] + 0x25) & 0x10) == 0)) {\n              if ((uVar11 & 4) == 0) {\n                if (((*(int *)(unaff_R14[1] + 8) != 2) ||\n                    (lVar27 = *(long *)(plVar4[4] + 0xd0), lVar27 == 0)) ||\n                   (*(long *)(lVar27 + 0x40) == 0)) {\n                  if ((DAT_00127a2c == 3) || (DAT_00127a28 == 2)) goto LAB_001067a8;\n                  if (DAT_00127a28 == 1) {\n                    cVar10 = bfd_is_local_label(unaff_R14);\n                    goto joined_r0x00106a11;\n                  }\n                }\n                goto LAB_00105be2;\n              }\n              cVar10 = DAT_00127980;\n              if (1 < DAT_00127a2c - 2U) {\njoined_r0x00106a11:\n                if (cVar10 == '\\0') goto LAB_00105be2;\n              }\n            }\n            else if (DAT_00127a2c != 3) goto LAB_00105be2;\n            goto LAB_001067a8;\n          }\n          if (DAT_001279ca == '\\0') {\n            lVar27 = htab_find();\n            if (lVar27 != 0) {\nLAB_0010687f:\n              uVar19 = dcgettext(0,\"not stripping symbol `%s\\' because it is named in a relocation\",\n                                 5);\n              FUN_00119ed0(uVar19);\n              DAT_00127a20 = 1;\n            }\n          }\n          else {\n            _cStack0000000000000148 = _cStack0000000000000148 & 0xffffffffffffff00;\n            in_stack_00000140 = pcVar30;\n            htab_traverse(DAT_001279f8,FUN_0011a170,&stack0x00000140);\n            if (cStack0000000000000148 != '\\0') goto LAB_0010687f;\n          }\n          if ((uVar11 & 0x20) == 0) {\nLAB_00105c07:\n            if (DAT_001279ca != '\\0') {\n              _cStack0000000000000148 = _cStack0000000000000148 & 0xffffffffffffff00;\n              in_stack_00000140 = pcVar30;\n              htab_traverse(DAT_001279f0,FUN_0011a170,&stack0x00000140);\n              if (cStack0000000000000148 != '\\0') goto LAB_001067a8;\n              goto LAB_00105c2c;\n            }\n            lVar27 = htab_find();\n            if (lVar27 == 0) goto LAB_00105c2c;\nLAB_001067a8:\n            if ((DAT_00127a18 != '\\0') && ((uVar11 & 0x4000) != 0)) goto LAB_00105c2c;\n            if (DAT_001279ca == '\\0') {\n              lVar27 = htab_find();\n              if (lVar27 != 0) goto LAB_00105c2c;\n            }\n            else {\n              _cStack0000000000000148 = _cStack0000000000000148 & 0xffffffffffffff00;\n              in_stack_00000140 = pcVar30;\n              htab_traverse(DAT_00127a08,FUN_0011a170,&stack0x00000140);\n              if (cStack0000000000000148 != '\\0') goto LAB_00105c2c;\n            }\n          }\n          else {\nLAB_00105c2c:\n            cVar10 = FUN_001159d0(plVar4[4]);\n            if (cVar10 == '\\0') {\n              if (((uVar11 & 0x800002) == 0) && (pcVar5 != bfd_map_over_sections)) {\nLAB_00105c5f:\n                if ((uVar11 & 0x82) != 0) {\n                  cVar10 = FUN_00115d70(pcVar30);\n                  if ((cVar10 == '\\0') &&\n                     ((lVar27 = htab_elements(DAT_001279d8), lVar27 == 0 ||\n                      (cVar10 = FUN_00115d70(pcVar30), cVar10 != '\\0')))) {\n                    if (((((DAT_00127938 == '\\0') ||\n                          (uVar13 = *(uint *)(plVar4 + 3), (uVar13 & 0x200000) != 0)) ||\n                         (lVar27 = *plVar4, lVar27 == 0)) ||\n                        ((*(int *)(*(long *)(lVar27 + 8) + 8) != 5 ||\n                         (*(long *)(lVar27 + 0x110) == 0)))) ||\n                       (1 < (*(byte *)((long)plVar4 + 0x49) & 3) - 1)) goto joined_r0x00105ca2;\n                  }\n                  else {\n                    uVar13 = *(uint *)(plVar4 + 3);\n                  }\n                  *(uint *)(plVar4 + 3) = uVar13 & 0xffffff7d | 1;\n                }\njoined_r0x00105ca2:\n                if (((uVar11 & 1) != 0) && (cVar10 = FUN_00115d70(pcVar30), cVar10 != '\\0')) {\n                  *(uint *)(plVar4 + 3) = *(uint *)(plVar4 + 3) & 0xfffffffe | 2;\n                }\n              }\n              else {\n                if ((DAT_001279c8 != '\\0') || (cVar10 = FUN_00115d70(pcVar30), cVar10 != '\\0')) {\n                  *(uint *)(plVar4 + 3) = *(uint *)(plVar4 + 3) & 0xff7ffffd | 0x80;\n                }\n                if (pcVar5 != bfd_map_over_sections) goto LAB_00105c5f;\n              }\n              plVar16[uVar28] = (long)plVar4;\n              uVar28 = uVar28 + 1;\n            }\n          }\n          _in_stack_00000018 = _in_stack_00000018 + 1;\n        } while (uStack0000000000000010 != _in_stack_00000018);\n      }\n      if (DAT_001279a8 != (undefined8 *)0x0) {\n        puVar31 = DAT_001279a8;\n        iVar12 = DAT_001279a0;\n        for (lVar27 = 0; lVar27 < iVar12; lVar27 = lVar27 + 1) {\n          pcVar35 = (char *)puVar31[5];\n          if (pcVar35 == (char *)0x0) {\n            plVar6 = plVar16 + uVar28;\n            uVar28 = uVar28 + 1;\n            lVar17 = FUN_0011a2e0(puVar31,param_7);\n            *plVar6 = lVar17;\n            iVar12 = DAT_001279a0;\n          }\n          else if (pcVar35 != \"\") {\n            uVar19 = dcgettext(0,\"\\'before=%s\\' not found\",5);\n                    \n            FUN_00119dd0(uVar19,pcVar35);\n          }\n          puVar31 = (undefined8 *)*puVar31;\n        }\n      }\n      bVar41 = DAT_00127980 == '\\0';\n      plVar16[uVar28] = 0;\n      if ((bVar41) || (puStack0000000000000020 == (undefined4 *)0x0)) {\nLAB_00105cfa:\n        uStack0000000000000010 = uVar28 & 0xffffffff;\n        goto LAB_00105710;\n      }\n      iVar12 = *(int *)(*(undefined8 **)(param_7 + 8) + 1);\n      if ((iVar12 == 5) || (iVar12 == 2)) {\n        in_stack_000000e0 = (void *)0x0;\n        cVar10 = FUN_0011378f(param_7,puStack0000000000000020,&stack0x000000c0,&stack0x00000110,\n                              &stack0x000000e0,&stack0x00000140);\n        if (cVar10 != '\\0') {\n          lVar27 = bfd_make_section_with_flags(param_7,\".stab\",0x2108);\n          lVar17 = bfd_make_section_with_flags(param_7,\".stabstr\",0x2108);\n          if ((((lVar27 == 0) || (lVar17 == 0)) ||\n              (cVar10 = bfd_set_section_size(lVar27,in_stack_00000110), cVar10 == '\\0')) ||\n             (cVar10 = bfd_set_section_size(lVar17,in_stack_00000140), cVar10 == '\\0')) {\n            pcVar35 = \"can\\'t create debugging section\";\n          }\n          else {\n            *(undefined4 *)(lVar27 + 0x7c) = 2;\n            *(undefined4 *)(lVar17 + 0x7c) = 0;\n            cVar10 = bfd_set_section_contents(param_7,lVar27,in_stack_000000c0,0,in_stack_00000110);\n            if ((cVar10 != '\\0') &&\n               (cVar10 = bfd_set_section_contents\n                                   (param_7,lVar17,in_stack_000000e0,0,in_stack_00000140),\n               cVar10 != '\\0')) {\n              free(puStack0000000000000020);\n              goto LAB_00105cfa;\n            }\n            pcVar35 = \"can\\'t set debugging section contents\";\n          }\n          uVar19 = dcgettext(0,pcVar35,5);\n          FUN_001126c0(0,param_7,0,uVar19);\n          free(in_stack_000000e0);\n          free(puStack0000000000000020);\n          goto LAB_00105d96;\n        }\n      }\n      else {\n        uVar19 = **(undefined8 **)(param_7 + 8);\n        uVar18 = dcgettext(0,\"don\\'t know how to write debugging information for %s\",5);\n        FUN_001126c0(0,param_7,0,uVar18,uVar19);\n      }\n      free(puStack0000000000000020);\n    }\n    else {\nLAB_00105a07:\n      bfd_set_error(0);\n      bfd_map_over_sections();\n      iVar12 = bfd_get_error();\n      if (iVar12 == 0) goto LAB_00105a3b;\n    }\nLAB_00105d96:\n    DAT_00127a20 = 1;\n  }\n  else {\n    if ((DAT_00127a2c - 3U < 4) || ((DAT_00127a28 != 0 || (DAT_00127938 != '\\0'))))\n    goto LAB_00105a07;\n    lVar27 = htab_elements(DAT_001279f8);\n    if (((lVar27 != 0) ||\n        (((((((lVar27 = htab_elements(DAT_00127a08), lVar27 != 0 ||\n              (lVar27 = htab_elements(DAT_001279e8), lVar27 != 0)) ||\n             (lVar27 = htab_elements(DAT_001279e0), lVar27 != 0)) ||\n            ((lVar27 = htab_elements(DAT_001279d8), lVar27 != 0 ||\n             (lVar27 = htab_elements(DAT_001279d0), lVar27 != 0)))) ||\n           (lVar27 = htab_elements(DAT_001278d0), lVar27 != 0)) ||\n          (((DAT_00127908 != (char *)0x0 || (DAT_001278b8 != '\\0')) ||\n           ((DAT_00127a19 != '\\0' ||\n            (((DAT_00127980 != '\\0' || (DAT_00127988 != '\\0')) || (DAT_00127968 != '\\0')))))))) ||\n         ((DAT_001278d8 != (char **)0x0 || (DAT_001279c8 != '\\0')))))) || (DAT_001279a0 != 0))\n    goto LAB_001059fe;\nLAB_00105710:\n    bfd_set_symtab(param_7,DAT_001278a8,uStack0000000000000010 & 0xffffffff);\n    bfd_map_over_sections(unaff_R14,FUN_00115dc0,param_7);\n    bfd_map_over_sections(unaff_R14,FUN_00116110,param_7);\n    for (puVar31 = DAT_001279c0; puVar37 = DAT_001279b8, puVar31 != (undefined8 *)0x0;\n        puVar31 = (undefined8 *)*puVar31) {\n      cVar10 = bfd_set_section_contents(param_7,puVar31[5],puVar31[4],0,puVar31[3]);\n      if (cVar10 == '\\0') {\n        FUN_001126c0(0,param_7,puVar31[5],0);\n        return 0;\n      }\n    }\n    for (; puVar37 != (undefined8 *)0x0; puVar37 = (undefined8 *)*puVar37) {\n      uVar19 = *(undefined8 *)(puVar37[5] + 0x60);\n      cVar10 = bfd_set_section_contents(param_7,uVar19,puVar37[4],0,puVar37[3]);\n      if (cVar10 == '\\0') {\n        FUN_001126c0(0,param_7,uVar19,0);\n        return 0;\n      }\n    }\n    if (__ptr_01 == (long **)0x0) {\n      if ((DAT_00127a00 != '\\0') && (_DAT_00127a24 == 0)) {\n        uVar19 = *unaff_R14;\n        uVar18 = dcgettext(0,\"%s: Could not find any mergeable note sections\",5);\n        FUN_00119ed0(uVar18,uVar19);\n      }\n    }\n    else {\n      pplVar34 = (long **)0x0;\n      for (puVar31 = *(undefined8 **)(param_7 + 0x90); puVar31 != (undefined8 *)0x0;\n          puVar31 = (undefined8 *)puVar31[1]) {\n        if (((DAT_00127a00 != '\\0') && (*(int *)(*(long *)(param_7 + 8) + 8) == 5)) &&\n           ((*(int *)(puVar31[0x1a] + 4) == 7 &&\n            (cVar10 = FUN_00113fb0(*puVar31,\".gnu.build.attributes\"), cVar10 != '\\0')))) {\n          if (pplVar34 == (long **)0x0) {\n            pplVar34 = __ptr_01;\n          }\n          pplVar29 = __ptr_01;\n          if ((undefined8 *)(*pplVar34)[0xc] == puVar31) {\nLAB_0010625f:\n            pcVar35 = \"error: failed to merge notes\";\n            if (pplVar34[1] != (long *)0x0) {\n              cVar10 = bfd_set_section_contents(param_7,puVar31,pplVar34[1],0,pplVar34[2]);\n              if (cVar10 == '\\0') {\n                uVar19 = dcgettext(0,\"error: failed to copy merged notes into output\",5);\n                FUN_001126c0(0,param_7,puVar31,uVar19);\n                return 0;\n              }\n              pplVar34 = (long **)pplVar34[3];\n              goto LAB_001061be;\n            }\n          }\n          else {\n            do {\n              pplVar34 = pplVar29;\n              if ((undefined8 *)(*pplVar29)[0xc] == puVar31) goto LAB_0010625f;\n              pplVar34 = (long **)pplVar29[3];\n              pplVar29 = pplVar34;\n            } while (pplVar34 != (long **)0x0);\n            pcVar35 = \"error: failed to locate merged notes\";\n          }\n          uVar19 = dcgettext(0,pcVar35,5);\n          FUN_001126c0(0,param_7,puVar31,uVar19);\n        }\nLAB_001061be:\n      }\n      do {\n        pplVar34 = (long **)__ptr_01[3];\n        free(__ptr_01[1]);\n        free(__ptr_01);\n        __ptr_01 = pplVar34;\n      } while (pplVar34 != (long **)0x0);\n    }\n    if ((DAT_00127a10 == 0) ||\n       (cVar10 = bfd_fill_in_gnu_debuglink_section(param_7,lStack0000000000000078),\n       lVar27 = DAT_00127a10, cVar10 != '\\0')) {\n      uVar11 = (**(code **)(*(long *)(param_7 + 8) + 0x140))(unaff_R14);\n      uVar28 = (ulong)uVar11;\n      if ((char)uVar11 != '\\0') {\n        if (DAT_00127910 == 0) {\n          return uVar28;\n        }\n        cVar10 = bfd_alt_mach_code(param_7,DAT_00127910 & 0xffffffff);\n        uVar23 = DAT_00127910;\n        if (cVar10 == '\\0') {\n          uVar19 = dcgettext(0,\"this target does not support %lu alternative machine codes\",5);\n          FUN_00119ed0(uVar19,uVar23);\n          if (*(int *)(*(long *)(param_7 + 8) + 8) == 5) {\n            uVar19 = dcgettext(0,\"treating that number as an absolute e_machine value instead\",5);\n            FUN_00119ed0(uVar19);\n            *(short *)(*(long *)(param_7 + 0x110) + 0x3a) = (short)DAT_00127910;\n            return uVar28;\n          }\n          uVar19 = dcgettext(0,\"ignoring the alternative value\",5);\n          FUN_00119ed0(uVar19);\n          return uVar28;\n        }\n        return uVar28;\n      }\n      uVar19 = dcgettext(0,\"error copying private BFD data\",5);\n      FUN_001126c0(0,param_7,0,uVar19);\n    }\n    else {\n      uVar19 = dcgettext(0,\"cannot fill debug link section `%s\\'\",5);\n      FUN_001126c0(0,param_7,0,uVar19,lVar27);\n    }\n  }\n  return 0;\nLAB_00115187:\n  if ((((*(int *)(unaff_R14[1] + 8) == 5) && (*(int *)((long)pplVar34[0x1a] + 4) == 7)) &&\n      (cVar10 = FUN_00113fb0(*pplVar34), cVar10 != '\\0')) &&\n     ((pplVar34[0xc] != (long *)0x0 && (plVar6 = pplVar34[8], plVar6 != (long *)0x0)))) {\n    pplVar29 = (long **)xmalloc(0x20);\n    pplVar29[1] = (long *)0x0;\n    cVar10 = bfd_get_full_section_contents();\n    if (cVar10 == '\\0') {\n      dcgettext(0,\"warning: could not load note section\",5);\n      FUN_001126c0(0);\n      free(pplVar29);\n    }\n    else {\n      plVar16 = (long *)FUN_001163d0();\n      pplVar29[2] = plVar16;\n      if ((plVar16 == plVar6) || (cVar10 = bfd_set_section_size(pplVar34[0xc]), cVar10 != '\\0')) {\n        pplVar29[3] = (long *)__ptr_01;\n        *pplVar29 = (long *)pplVar34;\n        __ptr_01 = pplVar29;\n      }\n      else {\n        dcgettext(0,\"warning: failed to set merged notes size\",5);\n        FUN_001126c0(0,param_7,pplVar34);\n        free(pplVar29[1]);\n        free(pplVar29);\n      }\n    }\n  }\n  pplVar34 = (long **)pplVar34[1];\n  puVar31 = DAT_001279b0;\n  if (pplVar34 == (long **)0x0) goto joined_r0x001151c7;\n  goto LAB_001151ab;\n}\n\n",
            "current_name": "FUNC_001152b6",
            "entrypoint": "0x001152b6",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_001152b6": "FUNC_001152b6"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00115530": {
            "additional_data": {
                "DAT_001264b8": {
                    "int4": 1
                },
                "DAT_001274bc": {
                    "int3": 1
                },
                "DAT_001278d8": {
                    "data1": 1
                },
                "DAT_001278ec": {
                    "bool1": 1
                },
                "DAT_001278f8": {
                    "string3": 1
                },
                "DAT_00127900": {
                    "string2": 1
                },
                "DAT_00127990": {
                    "int2": 1
                },
                "DAT_00127a2c": {
                    "int1": 1
                },
                "FUN_00108072": {
                    "handle_error": 1
                },
                "FUN_00114190": {
                    "extract_data": 1,
                    "get_pointer": 1
                },
                "FUN_00115530": {
                    "create_output_section": 7,
                    "optimized_function": 1,
                    "process_binary_code": 1,
                    "process_binary_function": 6,
                    "process_input": 1
                },
                "FUN_001159d0": {
                    "check_condition": 1,
                    "is_string_empty": 1
                },
                "FUN_00115f30": {
                    "modify_data": 1,
                    "modify_value": 1
                },
                "bVar14": {
                    "b_var": 1,
                    "bool_var": 3,
                    "bool_var14": 2,
                    "bool_variable": 1,
                    "boolean": 1,
                    "boolean_result": 1,
                    "condition": 1,
                    "flag": 6,
                    "is_alignment_set": 1,
                    "temp13": 1,
                    "temp14": 1,
                    "temp_bool": 2,
                    "temp_bool_var14": 1,
                    "temp_bool_var_14": 1,
                    "temp_var14": 5,
                    "temp_var_14": 1,
                    "temporary_variable_14": 1
                },
                "bfd_convert_section_setup": {
                    "configure_section": 1,
                    "convert_section_setup": 1
                },
                "bfd_make_section_anyway_with_flags": {
                    "create_section": 1,
                    "make_section_with_flags": 1
                },
                "bfd_set_section_size": {
                    "set_section_size": 1,
                    "set_size_of_section": 1
                },
                "cVar4": {
                    "c_var": 1,
                    "char_var": 2,
                    "char_var4": 2,
                    "char_variable": 1,
                    "character": 1,
                    "flag": 2,
                    "result": 8,
                    "return_value": 1,
                    "section_setup_result": 1,
                    "temp4": 1,
                    "temp_char": 1,
                    "temp_char_var4": 1,
                    "temp_char_var_4": 1,
                    "temp_var4": 5,
                    "temp_var_4": 1,
                    "temporary_variable_4": 1
                },
                "dcgettext": {
                    "get_translated_string": 1,
                    "translate_text": 1
                },
                "iVar5": {
                    "comparison": 2,
                    "comparison_result": 6,
                    "i_var": 1,
                    "index": 2,
                    "int_var": 2,
                    "int_var5": 2,
                    "int_variable": 1,
                    "result": 1,
                    "temp4": 1,
                    "temp5": 1,
                    "temp_index": 1,
                    "temp_int": 1,
                    "temp_int_var5": 1,
                    "temp_int_var_5": 1,
                    "temp_var5": 5,
                    "temp_var_5": 1,
                    "temporary_variable_5": 1
                },
                "lVar1": {
                    "l_var": 1,
                    "length": 3,
                    "length_1": 1,
                    "list_var1": 1,
                    "local_var1": 1,
                    "local_variable_1": 1,
                    "loop_variable1": 1,
                    "section_producer": 1,
                    "size": 2,
                    "temp1": 4,
                    "temp_1": 1,
                    "temp_length": 1,
                    "temp_long_var1": 1,
                    "temp_long_var_1": 1,
                    "temp_var": 1,
                    "temp_var1": 5,
                    "temp_var_1": 1,
                    "temporary_variable_1": 1,
                    "value": 1
                },
                "lVar9": {
                    "allocation_result": 1,
                    "l_var": 1,
                    "length": 1,
                    "length_2": 1,
                    "list_var9": 1,
                    "local_var9": 1,
                    "local_variable_3": 1,
                    "long_var": 1,
                    "loop_variable2": 1,
                    "result": 1,
                    "section": 2,
                    "section_header": 1,
                    "section_size": 1,
                    "temp4": 2,
                    "temp8": 1,
                    "temp9": 1,
                    "temp_4": 1,
                    "temp_length_2": 1,
                    "temp_long": 1,
                    "temp_long_var9": 1,
                    "temp_long_var_9": 1,
                    "temp_var9": 5,
                    "temp_var_9": 1,
                    "temporary_variable_9": 1
                },
                "local_40": {
                    "array": 1,
                    "array1": 1,
                    "local_array": 2,
                    "local_array40": 2,
                    "local_long_array_var_40": 1,
                    "local_temp1": 1,
                    "local_var3": 1,
                    "local_var_40": 1,
                    "local_variable_9": 1,
                    "section_size": 2,
                    "section_sizes": 1,
                    "size_array": 2,
                    "sizes_array": 1,
                    "str2": 1,
                    "temp_array": 6,
                    "temp_buffer": 1,
                    "temp_long_arr_var40": 1,
                    "temp_long_array_var": 1,
                    "temp_var_17": 1,
                    "temp_var_local_40": 1,
                    "temporary_variable_17": 1
                },
                "local_48": {
                    "binary_string": 1,
                    "concatenated_string": 1,
                    "file_name2": 1,
                    "local_char_var_48": 1,
                    "local_string": 1,
                    "local_temp2": 1,
                    "local_var2": 2,
                    "local_var48": 1,
                    "local_var_48": 1,
                    "local_variable48": 1,
                    "local_variable_8": 1,
                    "result_string": 1,
                    "section_path_temp": 1,
                    "source_string": 1,
                    "str1": 1,
                    "str_concat": 1,
                    "string1": 1,
                    "string_pointer": 1,
                    "string_ptr2": 1,
                    "temp_char_var48": 1,
                    "temp_output": 1,
                    "temp_ptr": 1,
                    "temp_string": 2,
                    "temp_string_4": 1,
                    "temp_string_var": 1,
                    "temp_var_16": 1,
                    "temp_var_local_48": 1,
                    "temporary_variable_16": 1
                },
                "local_50": {
                    "error": 4,
                    "error_code": 3,
                    "error_message": 6,
                    "error_string": 2,
                    "local_buffer": 1,
                    "local_error_var": 1,
                    "local_long_var_50": 1,
                    "local_result": 1,
                    "local_var": 1,
                    "local_var1": 1,
                    "local_var50": 1,
                    "local_var_50": 1,
                    "local_variable50": 1,
                    "local_variable_7": 1,
                    "output_error": 1,
                    "temp_long_var50": 1,
                    "temp_var_15": 1,
                    "temp_var_local_50": 1,
                    "temporary_variable_15": 1
                },
                "param_1": {
                    "arg1": 1,
                    "binary": 1,
                    "binary_address": 1,
                    "binary_function_param1": 1,
                    "binary_param": 1,
                    "first_param": 1,
                    "first_parameter": 1,
                    "input": 4,
                    "input_1": 1,
                    "input_param": 3,
                    "input_param_1": 1,
                    "input_parameter_1": 1,
                    "input_section": 1,
                    "param": 1,
                    "param1": 4,
                    "param_1": 4,
                    "param_a": 1,
                    "param_buffer": 1,
                    "value": 1
                },
                "param_2": {
                    "arg2": 1,
                    "arguments": 1,
                    "argv": 1,
                    "binary_function_param2": 1,
                    "binary_string": 1,
                    "char_array": 1,
                    "input_2": 1,
                    "input_array": 2,
                    "input_data": 1,
                    "input_files": 1,
                    "input_param_2": 1,
                    "input_parameter_2": 1,
                    "param2": 4,
                    "param_2": 1,
                    "param_array": 1,
                    "param_b": 1,
                    "param_strings": 1,
                    "second_param": 1,
                    "second_parameter": 1,
                    "string_array_param": 2,
                    "strings": 5
                },
                "param_3": {
                    "arg3": 1,
                    "bfd": 1,
                    "binary_function_param3": 1,
                    "binary_length": 1,
                    "input_3": 1,
                    "input_param_3": 1,
                    "input_parameter_3": 1,
                    "length": 4,
                    "length_param": 1,
                    "long_param": 1,
                    "output_bfd": 1,
                    "output_format": 1,
                    "output_param": 2,
                    "param3": 4,
                    "param_3": 3,
                    "param_c": 1,
                    "param_length": 1,
                    "param_size": 1,
                    "third_param": 1,
                    "third_parameter": 1
                },
                "pcVar10": {
                    "char_var10": 1,
                    "local_variable_4": 1,
                    "new_section_path": 1,
                    "output_section_name": 1,
                    "output_string": 1,
                    "pc_var": 1,
                    "pointer1": 1,
                    "pointer3": 1,
                    "pointer_char2": 1,
                    "pointer_variable10": 1,
                    "ptr_2": 1,
                    "ptr_var10": 1,
                    "section_name": 1,
                    "str": 1,
                    "string_1": 1,
                    "string_ptr": 1,
                    "temp10": 1,
                    "temp5": 2,
                    "temp9": 1,
                    "temp_char_ptr_var10": 1,
                    "temp_char_var_10": 1,
                    "temp_ptr": 1,
                    "temp_var10": 5,
                    "temp_var_10": 1,
                    "temporary_variable_10": 1
                },
                "pcVar11": {
                    "char_var11": 1,
                    "local_variable_5": 1,
                    "pc_var": 1,
                    "pointer2": 1,
                    "pointer4": 1,
                    "pointer_char3": 1,
                    "pointer_variable11": 1,
                    "ptr_3": 1,
                    "ptr_var11": 1,
                    "section_name": 1,
                    "section_producer2": 1,
                    "str1": 1,
                    "string_2": 1,
                    "sub_array": 1,
                    "temp10": 1,
                    "temp11": 1,
                    "temp6": 2,
                    "temp_char_ptr_var11": 1,
                    "temp_char_var_11": 1,
                    "temp_ptr": 1,
                    "temp_ptr2": 1,
                    "temp_string_2": 1,
                    "temp_var11": 5,
                    "temp_var_11": 1,
                    "temporary_variable_11": 1
                },
                "pcVar12": {
                    "char_var12": 1,
                    "local_variable_6": 1,
                    "output_section_name2": 1,
                    "pc_var": 1,
                    "pointer3": 1,
                    "pointer5": 1,
                    "pointer_char4": 1,
                    "pointer_variable12": 1,
                    "ptr_4": 1,
                    "ptr_var12": 1,
                    "section_producer3": 1,
                    "str2": 1,
                    "string_3": 1,
                    "temp11": 1,
                    "temp12": 1,
                    "temp7": 2,
                    "temp_char_ptr_var12": 1,
                    "temp_char_var_12": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "temp_ptr3": 1,
                    "temp_string_3": 1,
                    "temp_var12": 5,
                    "temp_var_12": 1,
                    "temporary_variable_12": 1
                },
                "pcVar2": {
                    "char_var2": 1,
                    "file_name": 1,
                    "local_variable_2": 1,
                    "pc_var": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "pointer_char": 1,
                    "pointer_variable2": 1,
                    "ptr_1": 1,
                    "ptr_var2": 1,
                    "section_path": 1,
                    "string1": 1,
                    "temp2": 4,
                    "temp_2": 1,
                    "temp_char_ptr_var2": 1,
                    "temp_char_var_2": 1,
                    "temp_ptr": 2,
                    "temp_string": 1,
                    "temp_var2": 5,
                    "temp_var_2": 1,
                    "temporary_variable_2": 1
                },
                "ppcVar3": {
                    "data_array": 1,
                    "pointer2": 1,
                    "pointer_pointer_char": 2,
                    "pointer_pointer_var3": 1,
                    "pointer_pointer_variable3": 1,
                    "ppc_var_array": 1,
                    "ptr_ptr": 1,
                    "ptr_ptr_var3": 1,
                    "ptr_to_strings": 1,
                    "section_entry": 1,
                    "sections": 1,
                    "string_ptr": 1,
                    "strings_list": 1,
                    "temp3": 4,
                    "temp_3": 1,
                    "temp_char_ptr_ptr_var3": 1,
                    "temp_ptr_ptr": 1,
                    "temp_string_array_var_3": 1,
                    "temp_var3": 5,
                    "temp_var_3": 1,
                    "temporary_variable_3": 1
                },
                "sVar7": {
                    "len1": 2,
                    "length1": 5,
                    "length_1": 2,
                    "s_var": 1,
                    "size1": 2,
                    "size_1": 1,
                    "size_var7": 2,
                    "size_var_1": 1,
                    "size_variable1": 1,
                    "src_length": 1,
                    "str_len1": 1,
                    "temp6": 1,
                    "temp7": 1,
                    "temp_size_t_var_7": 1,
                    "temp_size_var7": 1,
                    "temp_var7": 5,
                    "temp_var_7": 1,
                    "temporary_variable_7": 1
                },
                "sVar8": {
                    "dest_length": 1,
                    "len2": 2,
                    "length2": 5,
                    "length_2": 2,
                    "s_var": 1,
                    "size2": 2,
                    "size_2": 1,
                    "size_var8": 2,
                    "size_var_2": 1,
                    "size_variable2": 1,
                    "str_len2": 1,
                    "temp7": 1,
                    "temp8": 1,
                    "temp_size_t_var_8": 1,
                    "temp_size_var8": 1,
                    "temp_var8": 5,
                    "temp_var_8": 1,
                    "temporary_variable_8": 1
                },
                "strcat": {
                    "concatenate_strings": 2
                },
                "strcmp": {
                    "compare_strings": 2
                },
                "strcpy": {
                    "copy_string": 2
                },
                "strlen": {
                    "get_string_length": 2
                },
                "uVar13": {
                    "flag_var": 1,
                    "flags": 3,
                    "state": 1,
                    "temp12": 1,
                    "temp13": 1,
                    "temp8": 1,
                    "temp_u_int_var13": 1,
                    "temp_uint_2": 1,
                    "temp_uint_var_13": 1,
                    "temp_value": 2,
                    "temp_var13": 5,
                    "temp_var_13": 1,
                    "temporary_variable_13": 1,
                    "u_var": 1,
                    "u_variable2": 1,
                    "uint_var13": 2,
                    "uint_var2": 1,
                    "uint_var_2": 1,
                    "uint_variable2": 1,
                    "value": 2,
                    "value_2": 1
                },
                "uVar6": {
                    "bitwise_and_result": 1,
                    "mask": 6,
                    "temp5": 1,
                    "temp6": 1,
                    "temp_u_int_var6": 1,
                    "temp_uint": 1,
                    "temp_uint_var_6": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "temp_var6": 5,
                    "temp_var_6": 1,
                    "temporary_variable_6": 1,
                    "u_var": 1,
                    "u_variable": 1,
                    "uint_var": 2,
                    "uint_var6": 2,
                    "uint_variable": 1,
                    "updated_value": 1,
                    "value": 1
                },
                "xmalloc": {
                    "allocate_memory": 2
                }
            },
            "called": [
                "strlen",
                "FUN_00114190",
                "dcgettext",
                "bfd_make_section_anyway_with_flags",
                "strcat",
                "strcmp",
                "bfd_convert_section_setup",
                "bfd_set_section_size",
                "strcpy",
                "FUN_00115f30",
                "FUN_00108072",
                "FUN_001159d0",
                "xmalloc"
            ],
            "calling": [
                "FUN_00107880"
            ],
            "code": "\n/* WARNING: Type propagation algorithm not settling */\n\n\nvoid create_output_section_00115530(long input,char **strings,long param3)\n\n{\n  long temp_var1;\n  char *temp_var2;\n  char **temp_var3;\n  char result;\n  int comparison_result;\n  uint mask;\n  size_t temp_var7;\n  size_t length2;\n  long temp_var9;\n  char *temp_var10;\n  char *temp_var11;\n  char *temp_var12;\n  uint temp_var13;\n  bool flag;\n  long error_message;\n  char *temp_string;\n  long temp_array [2];\n  \n  result = FUN_001159d0(strings);\n  if (result != '\\0') {\n    return;\n  }\n  temp_var10 = *strings;\n  temp_var13 = *(uint *)((long)strings + 0x24);\n  temp_string = temp_var10;\n  temp_var3 = DAT_001278d8;\n  if (*(int *)(*(long *)(input + 8) + 8) != *(int *)(*(long *)(param3 + 8) + 8)) {\n    temp_var13 = temp_var13 & *(uint *)(*(long *)(input + 8) + 0x18) &\n             *(uint *)(*(long *)(param3 + 8) + 0x18);\n  }\n  for (; temp_var3 != (char **)0x0; temp_var3 = (char **)temp_var3[3]) {\n    comparison_result = strcmp(*temp_var3,temp_var10);\n    if (comparison_result == 0) {\n      if (*(uint *)(temp_var3 + 2) != 0xffffffff) {\n        temp_var13 = *(uint *)(temp_var3 + 2);\n      }\n      if (temp_var10 != temp_var3[1]) {\n        temp_string = temp_var3[1];\n        temp_var13 = FUN_00115f30(temp_var13,param3);\n      }\n      break;\n    }\n  }\n  if (((DAT_001278f8 != (char *)0x0) &&\n      (temp_var10 = DAT_001278f8, (*(byte *)((long)strings + 0x24) & 1) != 0)) ||\n     (temp_var10 = DAT_00127900, DAT_00127900 != (char *)0x0)) {\n    temp_var7 = strlen(temp_var10);\n    length2 = strlen(temp_string);\n    temp_var12 = (char *)xmalloc(temp_var7 + 1 + length2);\n    temp_var10 = strcpy(temp_var12,temp_var10);\n    temp_string = strcat(temp_var10,temp_string);\n  }\n  temp_var9 = FUN_00114190(*strings,0,0x80);\n  flag = false;\n  if (temp_var9 == 0) {\n    if ((DAT_00127a2c == 4) && ((temp_var13 & 0x2000001) != 0)) {\n      comparison_result = *(int *)(*(long *)(input + 8) + 8);\n      if (comparison_result == 5) {\n        if (*(int *)(strings[0x1a] + 4) != 7) {\nLAB_00115771:\n          if (*(int *)(*(long *)(param3 + 8) + 8) == 5) {\n            flag = (temp_var13 & 0x2000000) == 0;\n            mask = ~((-(uint)((temp_var13 & 0x2000000) == 0) & 0x2000100) + 2);\n            *(uint *)((long)strings + 0x24) = *(uint *)((long)strings + 0x24) & mask;\n          }\n          else {\n            mask = 0xfdfffefd;\n          }\n          temp_var13 = temp_var13 & mask;\n        }\n      }\n      else if ((comparison_result != 2) || (comparison_result = strcmp(*strings,\".buildid\"), comparison_result != 0)) goto LAB_00115771;\n    }\n  }\n  else {\n    temp_var13 = FUN_00115f30(temp_var13 & 0x104 | *(uint *)(temp_var9 + 0x28),param3,*strings);\n  }\n  result = bfd_convert_section_setup(input,strings,param3,&temp_string,temp_array);\n  if (result == '\\0') {\n    temp_var10 = (char *)0x0;\n    error_message = dcgettext(0,\"failed to create output section\",5);\n    goto LAB_001080d1;\n  }\n  temp_var10 = (char *)bfd_make_section_anyway_with_flags(param3,temp_string,temp_var13);\n  if (temp_var10 == (char *)0x0) {\n    error_message = dcgettext(0,\"failed to create output section\",5);\n    goto LAB_001080d1;\n  }\n  if (DAT_001264bc < 0) {\n    if (DAT_001278ec != '\\0') {\n      temp_array[0] = 0;\n      goto LAB_001158e7;\n    }\n    result = bfd_set_section_size(temp_var10,temp_array[0]);\n    if (result == '\\0') {\n      FUN_00108072();\n      return;\n    }\n  }\n  else {\n    temp_array[0] = ((((long)DAT_00127a1c - 1U) + temp_array[0]) / (ulong)(long)DAT_00127a1c) *\n                  (long)DAT_001264b8;\nLAB_001158e7:\n    result = bfd_set_section_size(temp_var10);\n    if (result == '\\0') {\n      FUN_00108072();\n      return;\n    }\n  }\n  error_message = 0;\n  temp_var12 = strings[6];\n  temp_var9 = FUN_00114190(*strings,0,0x18);\n  if (temp_var9 == 0) {\n    temp_var10[0x28] = temp_var10[0x28] | 1;\n    temp_var11 = *strings;\n    temp_var12 = temp_var12 + _DAT_00127990;\n    *(char **)(temp_var10 + 0x30) = temp_var12;\n    *(char **)(temp_var10 + 0x38) = temp_var12;\n    temp_var12 = strings[7];\n    temp_var9 = FUN_00114190(temp_var11,0,0x60);\n    if (temp_var9 == 0) goto LAB_00115695;\nLAB_00115860:\n    temp_var11 = *(char **)(temp_var9 + 0x20);\n    if ((*(byte *)(temp_var9 + 0x14) & 0x40) != 0) {\n      temp_var11 = temp_var11 + (long)temp_var12;\n    }\n    *(char **)(temp_var10 + 0x38) = temp_var11;\n    temp_var9 = FUN_00114190(*strings,0,0x200);\n    if (temp_var9 != 0) goto LAB_00115889;\nLAB_001156b8:\n    temp_var13 = *(uint *)((long)strings + 0x7c);\n    if (temp_var13 < 0x3f) goto LAB_001156c4;\n    error_message = dcgettext(0,\"failed to set alignment\",5);\n    *(undefined4 *)(temp_var10 + 0xb4) = *(undefined4 *)((long)strings + 0xb4);\n    temp_var10[0x28] = temp_var10[0x28] & 0xcfU | *(byte *)(strings + 5) & 0x30;\n    strings[0xc] = temp_var10;\n    strings[0xb] = (char *)0x0;\n    if ((*(byte *)((long)strings + 0x27) & 2) != 0) goto LAB_001157c8;\nLAB_00115700:\n    result = (**(code **)(*(long *)(param3 + 8) + 0x158))(input,strings,param3,temp_var10);\n    if (result == '\\0') {\n      FUN_0010808f();\n      return;\n    }\n  }\n  else {\n    temp_var11 = *(char **)(temp_var9 + 0x18);\n    if ((*(byte *)(temp_var9 + 0x14) & 8) == 0) {\n      temp_var11 = temp_var11 + (long)temp_var12;\n    }\n    temp_var10[0x28] = temp_var10[0x28] | 1;\n    temp_var2 = *strings;\n    *(char **)(temp_var10 + 0x30) = temp_var11;\n    *(char **)(temp_var10 + 0x38) = temp_var11;\n    temp_var12 = strings[7];\n    temp_var9 = FUN_00114190(temp_var2,0,0x60);\n    if (temp_var9 != 0) goto LAB_00115860;\nLAB_00115695:\n    temp_var11 = *strings;\n    *(char **)(temp_var10 + 0x38) = temp_var12 + _DAT_00127990;\n    temp_var9 = FUN_00114190(temp_var11,0,0x200);\n    if (temp_var9 == 0) goto LAB_001156b8;\nLAB_00115889:\n    temp_var13 = *(uint *)(temp_var9 + 0x2c);\n    if (0x3e < temp_var13) {\n      FUN_00108179();\n      return;\n    }\nLAB_001156c4:\n    *(uint *)(temp_var10 + 0x7c) = temp_var13;\n    *(undefined4 *)(temp_var10 + 0xb4) = *(undefined4 *)((long)strings + 0xb4);\n    temp_var10[0x28] = temp_var10[0x28] & 0xcfU | *(byte *)(strings + 5) & 0x30;\n    strings[0xc] = temp_var10;\n    strings[0xb] = (char *)0x0;\n    if ((*(byte *)((long)strings + 0x27) & 2) == 0) goto LAB_00115700;\nLAB_001157c8:\n    temp_var12 = strings[0x1a];\n    temp_var9 = FUN_00115d00(temp_var12,strings[0x1c]);\n    if ((temp_var9 == 0) ||\n       (temp_var1 = *(long *)(input + 8), *(uint *)(temp_var9 + 0x18) = *(uint *)(temp_var9 + 0x18) | 0x20,\n       *(int *)(temp_var1 + 8) != 5)) goto LAB_00115700;\n    *(long *)(temp_var12 + 0xb0) = temp_var9;\n    result = (**(code **)(*(long *)(param3 + 8) + 0x158))(input,strings,param3,temp_var10);\n    if (result == '\\0') {\n      FUN_0010808f();\n      return;\n    }\n  }\n  if (flag) {\n    *(undefined4 *)(*(long *)(temp_var10 + 0xd0) + 4) = 8;\n  }\n  if (error_message == 0) {\n    return;\n  }\nLAB_001080d1:\n  DAT_00127a20 = 1;\n  FUN_001126c0(0,param3,temp_var10,error_message);\n  return;\n}\n\n",
            "current_name": "create_output_section_00115530",
            "entrypoint": "0x00115530",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00115530": "create_output_section_00115530",
                "bVar14": "flag",
                "bfd_convert_section_setup": "convert_section_setup",
                "bfd_make_section_anyway_with_flags": "create_section",
                "bfd_set_section_size": "set_section_size",
                "cVar4": "result",
                "dcgettext": "translate_text",
                "iVar5": "comparison_result",
                "lVar1": "temp_var1",
                "lVar9": "temp_var9",
                "local_40": "temp_array",
                "local_48": "temp_string",
                "local_50": "error_message",
                "param_1": "input",
                "param_2": "strings",
                "param_3": "param3",
                "pcVar10": "temp_var10",
                "pcVar11": "temp_var11",
                "pcVar12": "temp_var12",
                "pcVar2": "temp_var2",
                "ppcVar3": "temp_var3",
                "sVar7": "temp_var7",
                "sVar8": "length2",
                "strcat": "concatenate_strings",
                "strcmp": "compare_strings",
                "strcpy": "copy_string",
                "strlen": "get_string_length",
                "uVar13": "temp_var13",
                "uVar6": "mask",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00115970": {
            "additional_data": {
                "FUM_00119ed0": {
                    "print_error": 1
                },
                "FUN_00115970": {
                    "copy_and_delete_file": 9,
                    "copy_and_remove_file": 1,
                    "copy_and_rename_file": 1,
                    "copy_and_replace_file": 1,
                    "copy_and_unlink_file": 14,
                    "copy_file": 3,
                    "copy_file_with_reason": 2
                },
                "FUN_00115a90": {
                    "copy_file": 1
                },
                "auVar6": {
                    "result": 7,
                    "result_data": 1,
                    "result_struct": 3,
                    "result_tuple": 1,
                    "result_value": 1,
                    "return_array": 1,
                    "return_value": 14,
                    "return_values": 2
                },
                "dcgettext": {
                    "get_error_message": 1
                },
                "param_1": {
                    "destination_file_name": 1,
                    "source_file": 9,
                    "source_file_path": 18,
                    "source_filepath": 1,
                    "source_path": 2
                },
                "param_2": {
                    "dest_file_path": 1,
                    "dest_filepath": 1,
                    "destination_file": 9,
                    "destination_file_path": 17,
                    "destination_path": 2,
                    "source_file_name": 1
                },
                "param_3": {
                    "copy_flags": 1,
                    "copy_mode": 1,
                    "copy_permissions": 1,
                    "error_code": 2,
                    "file_permissions": 1,
                    "flag": 2,
                    "flags": 20,
                    "param": 1
                },
                "param_4": {
                    "buffer_size": 1,
                    "error_message_size": 1,
                    "file_info": 1,
                    "file_mode": 1,
                    "file_permission": 1,
                    "file_permissions": 7,
                    "mode": 11,
                    "permission": 1,
                    "permissions": 5,
                    "size": 1
                },
                "param_5": {
                    "copy_file_flag": 1,
                    "copy_symbolic_links": 1,
                    "delete_destination": 1,
                    "delete_source": 4,
                    "remove_source": 2,
                    "remove_source_file": 1,
                    "reverse_file_operation": 1,
                    "should_copy": 5,
                    "should_copy_permissions": 1,
                    "should_remove_source": 1,
                    "should_replace": 1,
                    "should_reverse": 8,
                    "should_reverse_file": 1,
                    "unlink_after_copy": 1,
                    "unlink_source": 2
                },
                "param_6": {
                    "additional_info": 2,
                    "copy_result": 1,
                    "error_code": 1,
                    "execution_status": 1,
                    "file_size": 1,
                    "result": 21,
                    "result_array": 1,
                    "return_value": 2,
                    "timestamp": 1
                },
                "pcVar3": {
                    "errno_message": 1,
                    "errno_string": 1,
                    "error_message": 19,
                    "error_str": 1,
                    "error_string": 9
                },
                "piVar2": {
                    "errno_location": 9,
                    "errno_ptr": 11,
                    "error": 1,
                    "error_location": 4,
                    "error_location_ptr": 1,
                    "error_number": 1,
                    "error_number_pointer": 1,
                    "error_pointer": 3
                },
                "uVar1": {
                    "copy_result": 28,
                    "copy_status": 1,
                    "copy_success": 2
                },
                "uVar4": {
                    "error": 1,
                    "error_localized_string": 1,
                    "error_message": 10,
                    "error_message_id": 1,
                    "error_string": 4,
                    "localized_error_message": 6,
                    "translated_error": 2,
                    "translated_error_message": 4,
                    "translated_message": 2
                },
                "uVar5": {
                    "copy_success": 2,
                    "error_code": 5,
                    "error_flag": 1,
                    "unlink_result": 21,
                    "unlink_return": 1,
                    "unlink_status": 1
                },
                "unlink": {
                    "remove_file": 1
                }
            },
            "called": [
                "FUN_00108200",
                "FUN_00115a90"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nundefined  [16]\ncopy_and_unlink_file_00115970(char *source_file_path,char *destination_file_path,undefined4 flags,undefined8 mode,char should_reverse,\n            undefined8 result)\n\n{\n  uint copy_result;\n  int *errno_ptr;\n  char *error_message;\n  undefined8 error_message;\n  ulong unlink_result;\n  undefined return_value [16];\n  \n  if (destination_file_path == source_file_path) {\n    unlink_result = 0;\n  }\n  else {\n    copy_result = FUN_00115a90(flags,destination_file_path,mode);\n    unlink_result = (ulong)copy_result;\n    if (copy_result != 0) {\n      errno_ptr = __errno_location();\n      error_message = strerror(*errno_ptr);\n      error_message = dcgettext(0,\"unable to copy file \\'%s\\'; reason: %s\",5);\n      FUN_00119ed0(error_message,destination_file_path,error_message);\n    }\n    remove_file(source_file_path);\n  }\n  if (should_reverse != '\\0') {\n    FUN_0011a350(destination_file_path,mode);\n  }\n  return_value._8_8_ = result;\n  return_value._0_8_ = unlink_result;\n  return return_value;\n}\n\n",
            "current_name": "copy_and_unlink_file_00115970",
            "entrypoint": "0x00115970",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00115970": "copy_and_unlink_file_00115970",
                "auVar6": "return_value",
                "dcgettext": "get_error_message",
                "param_1": "source_file_path",
                "param_2": "destination_file_path",
                "param_3": "flags",
                "param_4": "mode",
                "param_5": "should_reverse",
                "param_6": "result",
                "pcVar3": "error_message",
                "piVar2": "errno_ptr",
                "uVar1": "copy_result",
                "uVar4": "error_message",
                "uVar5": "unlink_result",
                "unlink": "remove_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001159d0": {
            "additional_data": {
                "FUN_001159d0": {
                    "check_and_process_data": 5,
                    "check_and_process_function": 1,
                    "check_condition": 1,
                    "check_conditions_and_process": 1,
                    "check_data_validity": 2,
                    "check_flag_and_process": 1,
                    "check_flag_validity": 1,
                    "check_function": 11,
                    "check_function_validity": 1,
                    "check_param": 1,
                    "check_parameter_validity": 1,
                    "check_permissions": 1,
                    "check_something": 1,
                    "check_valid_condition": 1,
                    "check_validity": 1,
                    "process_data": 1
                },
                "FUN_00115b70": {
                    "check_condition": 1,
                    "check_ptr_validity": 1
                },
                "FUN_00115d00": {
                    "calculate_value": 1,
                    "find_data": 1
                },
                "FUN_00115d70": {
                    "check_validity": 1,
                    "verify_data": 1
                },
                "cVar2": {
                    "char_flag": 1,
                    "char_value": 1,
                    "char_var": 1,
                    "check_result": 4,
                    "condition": 1,
                    "flag": 12,
                    "is_flag_valid": 1,
                    "is_successful": 1,
                    "is_valid": 5,
                    "result": 1,
                    "result_flag": 1,
                    "status_var": 1,
                    "temp_var2": 1
                },
                "lVar4": {
                    "child_address": 1,
                    "data": 1,
                    "function_ptr": 1,
                    "ptr1": 5,
                    "result1": 2,
                    "temp1": 5,
                    "temp_address1": 1,
                    "temp_value1": 1,
                    "temp_var1": 8,
                    "temp_var2": 1,
                    "temp_var4": 2,
                    "value1": 2,
                    "value2": 1
                },
                "lVar5": {
                    "current_ptr": 1,
                    "ptr2": 5,
                    "result2": 2,
                    "temp2": 5,
                    "temp_address": 1,
                    "temp_address2": 1,
                    "temp_data": 1,
                    "temp_value2": 1,
                    "temp_var2": 8,
                    "temp_var3": 1,
                    "temp_var5": 2,
                    "value2": 2,
                    "value3": 1
                },
                "param_1": {
                    "data": 3,
                    "data_address": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "flag": 1,
                    "input": 7,
                    "input_data": 1,
                    "input_param": 8,
                    "input_parameter": 1,
                    "object_address": 1,
                    "param": 3,
                    "parameter": 2
                },
                "uVar1": {
                    "object": 1,
                    "result": 11,
                    "result1": 1,
                    "result_var1": 1,
                    "return_value": 9,
                    "return_value1": 1,
                    "temp_var": 1,
                    "temp_var1": 3,
                    "value1": 1
                },
                "uVar3": {
                    "function_result": 1,
                    "output": 1,
                    "result": 10,
                    "return_value": 10,
                    "return_value2": 1,
                    "status": 8
                }
            },
            "called": [
                "FUN_00115b70",
                "FUN_00115d70",
                "FUN_00115d00"
            ],
            "calling": [
                "FUN_00115530",
                "FUN_0010554f",
                "FUN_00115f50"
            ],
            "code": "\nundefined4 check_and_process_function_001159d0(long input_param)\n\n{\n  undefined8 result;\n  char flag;\n  undefined4 return_value;\n  long temp_var1;\n  long temp_var2;\n  \n  return_value = FUN_00115b70();\n  if ((char)return_value == '\\0') {\n    if ((*(byte *)(input_param + 0x27) & 2) == 0) {\n      return return_value;\n    }\n    temp_var1 = FUN_00115d00(*(undefined8 *)(input_param + 0xd0),*(undefined8 *)(input_param + 0xe0));\n    if ((temp_var1 != 0) &&\n       (((result = *(undefined8 *)(temp_var1 + 8), DAT_00127a2c != 7 ||\n         (flag = FUN_00115d70(result,DAT_00127a08), flag != '\\0')) &&\n        (flag = FUN_00115d70(result,DAT_001279f8), flag == '\\0')))) {\n      temp_var1 = *(long *)(*(long *)(input_param + 0xd0) + 0xc0);\n      temp_var2 = temp_var1;\n      do {\n        if (temp_var2 == 0) {\n          return 1;\n        }\n        flag = FUN_00115b70(temp_var2);\n        if (flag == '\\0') {\n          return return_value;\n        }\n        temp_var2 = *(long *)(*(long *)(temp_var2 + 0xd0) + 0xc0);\n      } while (temp_var1 != temp_var2);\n    }\n  }\n  return 1;\n}\n\n",
            "current_name": "check_and_process_function_001159d0",
            "entrypoint": "0x001159d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001159d0": "check_and_process_function_001159d0",
                "cVar2": "flag",
                "lVar4": "temp_var1",
                "lVar5": "temp_var2",
                "param_1": "input_param",
                "uVar1": "result",
                "uVar3": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00115a90": {
            "additional_data": {
                "FUN_00108237": {
                    "get_error_message": 1,
                    "get_original_error": 1
                },
                "FUN_00115a90": {
                    "copy_and_close_file": 1,
                    "copy_file": 14,
                    "copy_file_and_set_permissions": 1,
                    "copy_file_contents": 1,
                    "copy_file_data": 1,
                    "extract_and_save_data": 4,
                    "extract_file_contents": 1,
                    "file_copy": 1,
                    "read_and_write_file": 1,
                    "reverse_and_copy_file": 2,
                    "reverse_and_save_file": 2,
                    "reverse_and_save_to_file": 1,
                    "reverse_and_write_file": 1
                },
                "_Var3": {
                    "current_offset": 4,
                    "file_offset": 7,
                    "file_pointer": 1,
                    "file_position": 1,
                    "file_size": 1,
                    "lseek_result": 1,
                    "offset": 2,
                    "seek_position": 1,
                    "seek_result": 9,
                    "source_file_length": 1,
                    "source_file_offset": 1,
                    "source_file_pointer": 1,
                    "source_offset": 1
                },
                "__errno_location": {
                    "get_errno_location": 2,
                    "get_error_code_pointer": 1,
                    "get_error_pointer": 1
                },
                "__fd": {
                    "dest_file_descriptor": 3,
                    "destination_fd": 3,
                    "destination_file": 1,
                    "destination_file_descriptor": 15,
                    "extracted_file_descriptor": 1,
                    "file_descriptor_destination": 2,
                    "file_descriptor_out": 1,
                    "output_fd": 3,
                    "output_file_descriptor": 2
                },
                "_lseek": {
                    "file_seek": 1
                },
                "close": {
                    "close_file": 1
                },
                "fchmod": {
                    "set_file_permissions": 1
                },
                "iVar1": {
                    "close_error": 1,
                    "errno": 2,
                    "errno_temp": 1,
                    "errno_value": 6,
                    "error_before_cleanup": 1,
                    "error_code": 2,
                    "error_number": 1,
                    "original_errno": 12,
                    "original_error": 3,
                    "original_error_code": 2
                },
                "iVar2": {
                    "bytes_read": 2,
                    "bytes_remaining": 1,
                    "current_errno": 2,
                    "error_code": 1,
                    "num_bytes_read": 1,
                    "read_bytes": 2,
                    "read_result": 15,
                    "read_return_value": 1,
                    "result": 2,
                    "return_value": 2,
                    "temp_value": 1
                },
                "local_2038": {
                    "buffer": 30
                },
                "open": {
                    "open_destination_file": 1
                },
                "param_1": {
                    "file_descriptor": 4,
                    "file_descriptor_in": 1,
                    "file_descriptor_source": 2,
                    "input_fd": 2,
                    "input_file_descriptor": 2,
                    "source_fd": 2,
                    "source_file": 3,
                    "source_file_descriptor": 15
                },
                "param_2": {
                    "destination_file": 5,
                    "destination_file_name": 5,
                    "destination_file_path": 6,
                    "destination_filename": 1,
                    "destination_path": 3,
                    "file_path": 5,
                    "file_path_destination": 2,
                    "output_file": 1,
                    "output_file_name": 1,
                    "output_file_path": 2
                },
                "param_3": {
                    "destination_file_attribute_pointer": 1,
                    "destination_file_info": 1,
                    "file_info": 2,
                    "file_metadata": 2,
                    "file_permission": 1,
                    "file_permissions": 4,
                    "file_permissions_pointer": 1,
                    "file_stat": 3,
                    "file_stat_address": 2,
                    "file_stat_ptr": 1,
                    "metadata_address": 1,
                    "mode": 1,
                    "permission_data": 2,
                    "permissions": 3,
                    "permissions_path": 1,
                    "permissions_pointer": 1,
                    "source_file_stat": 1,
                    "source_stat_buffer": 1,
                    "stat_buffer": 1,
                    "stat_info": 1
                },
                "piVar6": {
                    "errno_address": 1,
                    "errno_location": 7,
                    "errno_location_ptr": 1,
                    "errno_location_result": 2,
                    "errno_pointer": 6,
                    "errno_ptr": 4,
                    "error_code": 1,
                    "error_code_location": 1,
                    "error_code_pointer": 1,
                    "error_code_ptr": 1,
                    "error_location": 1,
                    "error_pointer": 3,
                    "error_ptr": 1
                },
                "read": {
                    "read_source_file": 1
                },
                "sVar5": {
                    "bytes_written": 15,
                    "bytes_written_check": 1,
                    "write_result": 11,
                    "write_return_value": 1,
                    "write_size": 2
                },
                "uVar4": {
                    "bytes_copied": 3,
                    "bytes_read": 12,
                    "bytes_written": 2,
                    "read_result": 1,
                    "read_size": 1,
                    "read_write_result": 1,
                    "return_value": 6,
                    "total_bytes_copied": 2,
                    "total_bytes_read": 1,
                    "total_bytes_written": 1,
                    "write_result": 1
                },
                "write": {
                    "write_destination_file": 1
                }
            },
            "called": [
                "read",
                "fchmod",
                "__errno_location",
                "FUN_00108237",
                "close",
                "lseek",
                "write",
                "open"
            ],
            "calling": [
                "FUN_00115970"
            ],
            "code": "\nulong reverse_and_copy_file_00115a90(int source_file_descriptor,char *destination_file_path,long file_permissions)\n\n{\n  int original_errno;\n  int destination_file_descriptor;\n  int read_result;\n  __off_t seek_result;\n  ulong bytes_read;\n  size_t bytes_written;\n  int *errno_location;\n  undefined buffer [8200];\n  \n  if ((-1 < source_file_descriptor) && (seek_result = lseek(source_file_descriptor,0,0), seek_result == 0)) {\n    destination_file_descriptor = open_destination_file(destination_file_path,0x201);\n    if (destination_file_descriptor < 0) {\n      bytes_read = FUN_00108237();\n      return bytes_read;\n    }\n    do {\n      bytes_read = read_source_file(source_file_descriptor,buffer,0x2000);\n      read_result = (int)bytes_read;\n      if (read_result < 1) {\n        errno_location = __errno_location();\n        original_errno = *errno_location;\n        fchmod(destination_file_descriptor,*(__mode_t *)(file_permissions + 0x18));\n        close_file(source_file_descriptor);\n        close_file(destination_file_descriptor);\n        if (read_result != 0) {\n          *errno_location = original_errno;\n          return 0xffffffff;\n        }\n        return bytes_read & 0xffffffff;\n      }\n      bytes_written = write_destination_file(destination_file_descriptor,buffer,(long)read_result);\n    } while (bytes_written == (long)read_result);\n    errno_location = __errno_location();\n    read_result = *errno_location;\n    close_file(source_file_descriptor);\n    close_file(destination_file_descriptor);\n    *errno_location = read_result;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "reverse_and_copy_file_00115a90",
            "entrypoint": "0x00115a90",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00115a90": "reverse_and_copy_file_00115a90",
                "_Var3": "seek_result",
                "__errno_location": "get_errno_location",
                "__fd": "destination_file_descriptor",
                "close": "close_file",
                "fchmod": "set_file_permissions",
                "iVar1": "original_errno",
                "iVar2": "read_result",
                "local_2038": "buffer",
                "open": "open_destination_file",
                "param_1": "source_file_descriptor",
                "param_2": "destination_file_path",
                "param_3": "file_permissions",
                "piVar6": "errno_location",
                "read": "read_source_file",
                "sVar5": "bytes_written",
                "uVar4": "bytes_read",
                "write": "write_destination_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00115b70": {
            "additional_data": {
                "DAT_001278b8": {
                    "remove_option_enabled": 1
                },
                "DAT_00127980": {
                    "reloc_option": 1
                },
                "DAT_001279b8": {
                    "update_option_list": 1
                },
                "DAT_00127a19": {
                    "copy_option_enabled": 1
                },
                "DAT_00127a28": {
                    "debug_option": 1
                },
                "DAT_00127a2c": {
                    "section_index": 1
                },
                "FUN_0010829e": {
                    "process_reloc_section": 1
                },
                "FUN_001082b3": {
                    "process_other_sections": 1
                },
                "FUN_00113ede": {
                    "update_section": 1
                },
                "FUN_00114190": {
                    "get_section_info": 1
                },
                "FUN_00115b70": {
                    "check_matching_sections": 1,
                    "check_section": 3,
                    "check_section_compatibility": 1,
                    "check_section_conflict": 3,
                    "check_section_conflicts": 1,
                    "check_section_match": 2,
                    "check_section_options": 13,
                    "check_section_validity": 1,
                    "process_section": 1,
                    "validate_section": 1,
                    "validate_section_options": 4
                },
                "FUN_00119dd0": {
                    "display_error_message": 1
                },
                "dcgettext": {
                    "get_error_message": 1
                },
                "iVar2": {
                    "cmp_result": 1,
                    "comparison_result": 9,
                    "result": 3,
                    "section_cmp_result": 1,
                    "section_compare_result": 1,
                    "section_comparison": 5,
                    "section_comparison_result": 4,
                    "section_name_comparison": 1,
                    "strcmp_result": 5,
                    "string_comparison_result": 1
                },
                "iVar3": {
                    "data_type": 1,
                    "option": 1,
                    "option_type": 1,
                    "section_index": 8,
                    "section_option": 7,
                    "section_type": 13
                },
                "lVar4": {
                    "first_char": 1,
                    "result1": 4,
                    "section_length": 6,
                    "section_match1": 1,
                    "section_match_remove": 3,
                    "section_matches_remove": 1,
                    "section_name_length": 1,
                    "section_option1": 1,
                    "section_param_1": 1,
                    "section_remove_check_result": 1,
                    "section_remove_option": 1,
                    "section_result_1": 1,
                    "section_size": 6,
                    "section_size1": 1,
                    "section_start": 1,
                    "section_type": 1
                },
                "lVar5": {
                    "option_length": 1,
                    "result2": 4,
                    "second_char": 1,
                    "section_copy_option": 1,
                    "section_end": 1,
                    "section_flags": 2,
                    "section_index": 1,
                    "section_index2": 1,
                    "section_info": 1,
                    "section_length2": 1,
                    "section_match2": 1,
                    "section_match_copy": 3,
                    "section_matches_copy": 1,
                    "section_name_hash": 1,
                    "section_offset": 4,
                    "section_option2": 1,
                    "section_order": 1,
                    "section_param_2": 1,
                    "section_result_2": 1,
                    "section_size2": 1,
                    "section_type_with_flag": 1,
                    "section_update_check_result": 1
                },
                "param_1": {
                    "section": 1,
                    "section_list": 1,
                    "section_name": 6,
                    "section_names": 4,
                    "section_ptr": 1,
                    "sections": 16
                },
                "pcVar1": {
                    "current_section": 18,
                    "current_section_name": 1,
                    "section": 2,
                    "section_name": 10
                },
                "plVar7": {
                    "current_section": 1,
                    "linked_list_pointer": 1,
                    "linked_sections": 1,
                    "section_list": 23,
                    "section_list_pointer": 1,
                    "section_options_list": 1,
                    "section_ptr": 2,
                    "update_remove_sections": 1
                },
                "strcmp": {
                    "compare_strings": 1
                },
                "uVar6": {
                    "error": 3,
                    "error_code": 3,
                    "error_message": 3,
                    "error_string": 3,
                    "result": 8,
                    "return_val": 2,
                    "return_value": 9
                }
            },
            "called": [
                "FUN_00119dd0",
                "FUN_00114190",
                "FUN_0010829e",
                "dcgettext",
                "FUN_0010827b",
                "strcmp"
            ],
            "calling": [
                "FUN_001159d0"
            ],
            "code": "\nundefined8 check_section_options_00115b70(char **sections)\n\n{\n  char *current_section;\n  int comparison_result;\n  int section_type;\n  long section_length;\n  long section_offset;\n  undefined8 return_value;\n  long *section_list;\n  \n  section_length = FUN_00114190(*sections,0,4);\n  if (section_length == 0) {\n    if ((DAT_001278b8 != '\\0') || (DAT_00127a19 != '\\0')) {\n      section_length = FUN_00114190(*sections,0,1);\n      section_offset = FUN_00114190(*sections,0,2);\n      if (section_length != 0) {\n        if (section_offset != 0) {\n          current_section = *sections;\n          return_value = dcgettext(0,\"error: section %s matches both remove and copy options\",5);\n                    \n          FUN_00119dd0(return_value,current_section);\n        }\n        if (section_length != 0) {\n          if (DAT_001279b8 == (long *)0x0) {\n            return 1;\n          }\n          current_section = *sections;\n          section_list = DAT_001279b8;\n          do {\n            section_type = strcmp(current_section,(char *)section_list[1]);\n            if (section_type == 0) {\n              return_value = dcgettext(0,\"error: section %s matches both update and remove options\",5);\n                    \n              FUN_00119dd0(return_value,current_section);\n            }\n            section_list = (long *)*section_list;\n          } while (section_list != (long *)0x0);\n          return 1;\n        }\n      }\n      if ((DAT_00127a19 != '\\0') && (section_offset == 0)) {\n        return 1;\n      }\n    }\n    section_type = DAT_00127a2c;\n    if ((*(byte *)((long)sections + 0x25) & 0x20) != 0) {\n      if ((((DAT_00127a2c - 2U < 2) || (DAT_00127a2c == 7)) || (DAT_00127a28 == 2)) ||\n         (DAT_00127980 != '\\0')) {\n        current_section = *sections;\n        comparison_result = strcmp(current_section,\".gnu_debugaltlink\");\n        if ((comparison_result != 0) && (comparison_result = strcmp(current_section,\".gnu_debuglink\"), comparison_result != 0)) {\n          section_type = strcmp(current_section,\".reloc\");\n          if (section_type != 0) {\n            return 1;\n          }\n          return_value = FUN_0010829e();\n          return return_value;\n        }\n      }\n      if (section_type == 5) {\n        return_value = FUN_00113ede(sections);\n        return return_value;\n      }\n      if (section_type == 4) {\n        return 0;\n      }\n    }\n    if (section_type == 6) {\n      return_value = FUN_001082b3();\n      return return_value;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "check_section_options_00115b70",
            "entrypoint": "0x00115b70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00115b70": "check_section_options_00115b70",
                "dcgettext": "get_error_message",
                "iVar2": "comparison_result",
                "iVar3": "section_type",
                "lVar4": "section_length",
                "lVar5": "section_offset",
                "param_1": "sections",
                "pcVar1": "current_section",
                "plVar7": "section_list",
                "strcmp": "compare_strings",
                "uVar6": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00115d00": {
            "additional_data": {
                "FUN_001082c3": {
                    "check_condition": 1,
                    "get_info": 1,
                    "get_magic_number": 1,
                    "get_subfunction_result": 1,
                    "retrieve_value": 1,
                    "sub_function": 1
                },
                "FUN_00115d00": {
                    "extract_data_from_binary": 2,
                    "extract_value": 2,
                    "find_data": 1,
                    "find_matching_value": 9,
                    "find_related_value": 2,
                    "find_value_based_on_conditions": 1,
                    "find_value_based_on_criteria": 1,
                    "find_value_from_params": 1,
                    "find_value_in_table": 1,
                    "get_corresponding_value": 1,
                    "get_data": 1,
                    "get_data_from_param": 1,
                    "get_matching_value": 4,
                    "get_selected_value": 1,
                    "get_value_from_binary": 1,
                    "process_params": 1,
                    "retrieve_data": 1
                },
                "lVar2": {
                    "found_value": 1,
                    "matched_value": 2,
                    "matching_value": 5,
                    "output_value": 2,
                    "related_value": 2,
                    "result": 18
                },
                "param_1": {
                    "data1": 1,
                    "data_address": 1,
                    "data_array": 1,
                    "data_pointer1": 1,
                    "data_ptr": 1,
                    "input_data": 1,
                    "input_param": 6,
                    "input_param1": 1,
                    "input_value": 11,
                    "some_value": 1,
                    "table_identity": 1,
                    "value1": 4,
                    "value_to_check": 1
                },
                "param_2": {
                    "binary_context": 1,
                    "binary_data": 7,
                    "binary_param": 6,
                    "context_address": 1,
                    "data2": 1,
                    "data_pointer2": 1,
                    "data_struct": 3,
                    "data_structure": 3,
                    "data_structure_address": 1,
                    "info_struct": 1,
                    "input_param2": 1,
                    "struct_ptr": 1,
                    "value2": 4
                },
                "uVar1": {
                    "comparison_value": 1,
                    "computed_value": 1,
                    "condition_result": 1,
                    "count": 3,
                    "counter": 1,
                    "data_count": 1,
                    "data_size": 1,
                    "element_count": 1,
                    "index": 2,
                    "num_iterations": 1,
                    "param3": 1,
                    "selected_element": 1,
                    "size": 1,
                    "temp": 2,
                    "temp_val": 2,
                    "temp_value": 1,
                    "temp_var": 2,
                    "threshold": 2,
                    "value": 3,
                    "value_count": 1,
                    "value_to_compare": 1
                }
            },
            "called": [
                "FUN_001082c3"
            ],
            "calling": [
                "FUN_001159d0",
                "FUN_00108179"
            ],
            "code": "\nlong find_matching_value_00115d00(long input_value,long binary_data)\n\n{\n  uint count;\n  long result;\n  \n  result = DAT_001278b0;\n  if (DAT_001278b0 != 0) {\n    if (*(int *)(*(long *)(binary_data + 8) + 8) == 5) {\n      if (*(int *)(input_value + 0x28) == *(int *)(*(long *)(binary_data + 0x110) + 0xd40)) {\n        count = *(uint *)(input_value + 0x2c);\n        if (count == 0) {\n          result = 0;\n        }\n        else if ((ulong)count <\n                 *(ulong *)(*(long *)(binary_data + 0x110) + 0x88) /\n                 (ulong)*(byte *)(*(long *)(*(long *)(*(long *)(binary_data + 8) + 0x380) + 0x340) + 5))\n        {\n          result = *(long *)(DAT_001278b0 + (ulong)(count - 1) * 8);\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "find_matching_value_00115d00",
            "entrypoint": "0x00115d00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00115d00": "find_matching_value_00115d00",
                "lVar2": "result",
                "param_1": "input_value",
                "param_2": "binary_data",
                "uVar1": "count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00115d70": {
            "additional_data": {
                "FUN_00115d70": {
                    "check_data_presence": 1,
                    "check_element_presence": 1,
                    "check_hash_table": 3,
                    "check_htab_entry": 3,
                    "check_if_element_exists": 1,
                    "check_if_exists": 1,
                    "check_if_exists_in_hash_table": 1,
                    "check_if_in_table": 1,
                    "check_if_key_exists": 2,
                    "check_if_param_in_hash_table": 1,
                    "check_if_present": 1,
                    "check_if_value_exists": 1,
                    "check_key_existence": 2,
                    "check_key_in_hashtable": 1,
                    "check_lookup_result": 1,
                    "check_presence": 1,
                    "check_presence_or_traverse_hash_table": 1,
                    "check_value": 2,
                    "check_value_exists": 1,
                    "check_value_in_hash_table": 1,
                    "check_value_in_table": 1,
                    "find_or_traverse": 1,
                    "find_value_in_table": 1,
                    "lookup_value": 1
                },
                "FUN_0011a170": {
                    "compare_strings": 1
                },
                "htab_find": {
                    "find_element_in_table": 1
                },
                "htab_traverse": {
                    "traverse_table": 1
                },
                "lVar1": {
                    "element_found": 1,
                    "entry_address": 1,
                    "entry_found": 1,
                    "found_value": 2,
                    "hash_result": 1,
                    "hash_table_result": 1,
                    "lookup_result": 1,
                    "result": 13,
                    "search_result": 1,
                    "value": 1
                },
                "local_10": {
                    "entry_found": 1,
                    "exists": 1,
                    "found": 2,
                    "found_entry": 1,
                    "found_value": 2,
                    "is_element_found": 1,
                    "is_entry_found": 1,
                    "is_found": 4,
                    "is_in_table": 1,
                    "is_key_exist": 2,
                    "is_key_present": 2,
                    "is_present": 6,
                    "key_exists": 2,
                    "key_found": 1,
                    "lookup_success": 1,
                    "result": 1,
                    "value_exists": 2
                },
                "local_18": {
                    "callback_context": 1,
                    "context": 1,
                    "current_entry": 1,
                    "current_key": 2,
                    "current_value": 5,
                    "element_copy": 1,
                    "entry_ptr": 1,
                    "found_element": 1,
                    "found_key": 2,
                    "found_value": 1,
                    "key_copy": 1,
                    "key_to_find": 1,
                    "modified_input_value": 1,
                    "result": 1,
                    "search_element": 1,
                    "search_key": 3,
                    "search_result": 2,
                    "target": 1,
                    "target_data": 1,
                    "target_value": 1,
                    "temp": 1,
                    "value_ptr": 1
                },
                "param_1": {
                    "data": 2,
                    "element": 2,
                    "entry_key": 1,
                    "entry_value": 2,
                    "input1": 1,
                    "input_1": 1,
                    "input_param": 1,
                    "input_value": 4,
                    "key": 11,
                    "lookup_key": 1,
                    "param1": 1,
                    "value": 4
                },
                "param_2": {
                    "dictionary": 1,
                    "hash_table": 10,
                    "hashtable": 2,
                    "htab": 1,
                    "input2": 1,
                    "input_2": 1,
                    "lookup_table": 1,
                    "param2": 1,
                    "table": 12,
                    "table_param": 1
                }
            },
            "called": [
                "FUN_0011a170",
                "htab_find",
                "htab_traverse"
            ],
            "calling": [
                "FUN_001159d0",
                "FUN_001082df",
                "FUN_0010554f"
            ],
            "code": "\nundefined check_if_exists_in_hash_table_00115d70(undefined8 key,undefined8 table)\n\n{\n  long result;\n  undefined8 current_value;\n  undefined is_present;\n  \n  if (DAT_001279ca == '\\0') {\n    result = htab_find(table,key);\n    is_present = result != 0;\n  }\n  else {\n    is_present = 0;\n    current_value = key;\n    htab_traverse(table,FUN_0011a170,&current_value);\n  }\n  return is_present;\n}\n\n",
            "current_name": "check_if_exists_in_hash_table_00115d70",
            "entrypoint": "0x00115d70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00115d70": "check_if_exists_in_hash_table_00115d70",
                "htab_find": "find_element_in_table",
                "htab_traverse": "traverse_table",
                "lVar1": "result",
                "local_10": "is_present",
                "local_18": "current_value",
                "param_1": "key",
                "param_2": "table"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00115dc0": {
            "additional_data": {
                "DAT_0011a110": {
                    "exit_function": 1
                },
                "DAT_001278b0": {
                    "canonicalization_mode": 1,
                    "constant3": 1,
                    "constant4": 1,
                    "global_data2": 1,
                    "reloc_type": 1,
                    "yet_another_constant_value": 1
                },
                "DAT_00127a08": {
                    "another_constant_value": 1,
                    "constant3": 1,
                    "global_data1": 1,
                    "reloc_condition": 1
                },
                "DAT_00127a20": {
                    "constant2": 2,
                    "data_flag": 1,
                    "error_flag": 1,
                    "global_flag": 1,
                    "is_negative": 1
                },
                "DAT_00127a2c": {
                    "constant1": 2,
                    "data_const": 1,
                    "flag_value": 1,
                    "global_constant": 1,
                    "some_constant_value": 1
                },
                "FUN_001082df": {
                    "another_function": 1,
                    "unused": 1
                },
                "FUN_001126c0": {
                    "call_function_with_data": 1,
                    "print_error_message": 1,
                    "process_reloc": 1,
                    "process_result": 1
                },
                "FUN_00114190": {
                    "get_reloc_bound": 1,
                    "get_reloc_upper_bound": 2,
                    "get_upper_bound": 1
                },
                "FUN_00115d70": {
                    "parse_reloc": 1
                },
                "FUN_00115dc0": {
                    "analyze_and_execute": 1,
                    "analyze_function": 1,
                    "process_binary": 4,
                    "process_binary_data": 2,
                    "process_binary_function": 9,
                    "process_data": 3,
                    "process_relocation": 1,
                    "reengineered_function": 1,
                    "relocate_objects": 1,
                    "relocated_function": 1
                },
                "FUN_00115f50": {
                    "check_condition": 2,
                    "check_flag": 1,
                    "check_input_data": 1
                },
                "FUN_0011a110": {
                    "exit_with_error": 1,
                    "handle_allocation": 1,
                    "handle_error": 1,
                    "handle_memory_error": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "jump_table": 15,
                    "jump_table_func": 1,
                    "jump_table_function": 3,
                    "jumptable": 6,
                    "jumptable_func": 2,
                    "jumptable_function": 2,
                    "reloc_jumptable": 1
                },
                "bfd_alloc": {
                    "alloc_memory": 1,
                    "allocate_buffer": 1,
                    "allocate_memory": 2
                },
                "bfd_canonicalize_reloc": {
                    "canonicalize_reloc": 4
                },
                "bfd_get_error": {
                    "get_bfd_error": 2,
                    "get_error": 2
                },
                "bfd_get_reloc_upper_bound": {
                    "get_reloc_upper_bound": 2,
                    "get_up_reloc_bound": 1,
                    "get_upper_bound_error": 1
                },
                "cVar1": {
                    "check_result": 2,
                    "flag": 2,
                    "is_binary_valid": 1,
                    "is_error": 1,
                    "is_flagged": 1,
                    "is_placeholder": 1,
                    "is_success": 2,
                    "is_successful": 1,
                    "result": 16,
                    "result_char": 1,
                    "result_check": 1,
                    "status": 2
                },
                "dcgettext": {
                    "get_error_message": 1,
                    "localized_text": 1
                },
                "iVar2": {
                    "error": 11,
                    "error_code": 17,
                    "error_status": 2,
                    "error_value": 1
                },
                "lVar4": {
                    "alloc_size": 1,
                    "buffer_size": 1,
                    "length": 1,
                    "reloc_bound": 4,
                    "reloc_check": 1,
                    "reloc_result": 3,
                    "reloc_size": 3,
                    "reloc_ubound": 1,
                    "reloc_upper_bound": 6,
                    "result": 2,
                    "size": 2,
                    "temp_value": 1,
                    "temp_var2": 1,
                    "upper_bound": 4
                },
                "param_1": {
                    "address": 1,
                    "arg1": 3,
                    "binary_handle": 1,
                    "input_arg_1": 1,
                    "input_data": 1,
                    "input_param": 4,
                    "param": 3,
                    "param1": 12,
                    "param_1": 4,
                    "ptr_param": 1
                },
                "param_2": {
                    "arg2": 3,
                    "array": 1,
                    "binary_data": 2,
                    "binary_params": 1,
                    "data": 1,
                    "data_param": 1,
                    "input_arg_2": 1,
                    "input_array": 1,
                    "param2": 12,
                    "param_2": 4,
                    "param_array": 1,
                    "params": 1,
                    "ptr_param_array": 1,
                    "relocation_args": 1
                },
                "param_3": {
                    "arg3": 3,
                    "binary_data": 1,
                    "binary_info": 1,
                    "data_size": 2,
                    "input_arg_3": 1,
                    "input_length": 1,
                    "length": 1,
                    "length_param": 1,
                    "long_param": 1,
                    "param3": 13,
                    "param_3": 4,
                    "param_size": 2
                },
                "puVar5": {
                    "allocation": 1,
                    "pointer": 1,
                    "pointer_array": 1,
                    "ptr_result_array": 1,
                    "realloc_array": 1,
                    "reloc_array": 10,
                    "reloc_buffer": 5,
                    "reloc_data": 5,
                    "reloc_ptr": 1,
                    "reloc_table": 2,
                    "relocation_array": 1,
                    "relocations": 1,
                    "temp_reloc_array": 1
                },
                "puVar7": {
                    "current_pointer": 1,
                    "current_reloc": 4,
                    "current_relocation": 1,
                    "dest_array": 1,
                    "dest_pointer": 1,
                    "destination": 2,
                    "filtered_reloc_data": 1,
                    "initialized_reloc_array": 1,
                    "new_reloc_array": 1,
                    "output_array": 1,
                    "processed_reloc_array": 1,
                    "ptr_result": 1,
                    "pu_var7": 1,
                    "reloc_array_ptr": 1,
                    "reloc_buffer_ptr": 1,
                    "reloc_copy": 1,
                    "reloc_dest": 1,
                    "reloc_output": 1,
                    "reloc_target": 1,
                    "result_array": 1,
                    "result_buffer": 1,
                    "temp_pointer1": 1,
                    "temp_ptr1": 2,
                    "temp_ptr_1": 2
                },
                "puVar8": {
                    "current_dest": 1,
                    "current_pointer": 2,
                    "filtered_reloc_data_ptr": 1,
                    "new_reloc": 1,
                    "new_reloc_array_ptr": 2,
                    "next_pointer": 1,
                    "next_reloc": 3,
                    "next_relocation": 1,
                    "ptr_result2": 1,
                    "pu_var8": 1,
                    "reloc_buffer_ptr2": 1,
                    "reloc_dest_next": 1,
                    "reloc_destination": 1,
                    "reloc_dst": 1,
                    "reloc_output_next": 1,
                    "result_buffer_pointer": 1,
                    "temp": 1,
                    "temp_array": 2,
                    "temp_pointer2": 1,
                    "temp_ptr2": 2,
                    "temp_ptr_2": 2,
                    "temp_reloc_array": 1,
                    "temp_reloc_array2": 1
                },
                "uStack_38": {
                    "placeholder": 1,
                    "register": 1,
                    "reserved_space": 1,
                    "reserved_stack": 1,
                    "reserved_stack_space": 1,
                    "stack_value": 1,
                    "stack_var": 4,
                    "stack_variable": 4,
                    "temp_stack_var": 4,
                    "temp_value": 1,
                    "temp_var": 1,
                    "temp_variable": 1,
                    "temporary_stack": 1,
                    "tmp_stack": 1,
                    "u_stack38": 1,
                    "u_stack_38": 2,
                    "unknown_stack_value": 1,
                    "unused": 2,
                    "unused_stack_var": 1,
                    "unused_var": 1
                },
                "uVar3": {
                    "output_result": 1,
                    "output_value": 1,
                    "param2_c": 1,
                    "reloc_address": 1,
                    "reloc_bound": 2,
                    "reloc_count": 1,
                    "reloc_data": 1,
                    "reloc_info": 1,
                    "reloc_offset": 2,
                    "reloc_result": 1,
                    "reloc_size": 1,
                    "reloc_upper_bound": 2,
                    "result": 8,
                    "result2": 2,
                    "return_value": 1,
                    "temp_var1": 1,
                    "value": 3,
                    "var3": 1
                },
                "uVar6": {
                    "count": 3,
                    "num_relocs": 1,
                    "reloc_count": 25,
                    "reloc_size": 1,
                    "relocation_count": 1
                },
                "uVar9": {
                    "counter": 1,
                    "current_index": 1,
                    "index": 9,
                    "iteration_count": 1,
                    "iterator": 2,
                    "loop_counter": 4,
                    "loop_index": 1,
                    "loop_var": 2,
                    "reloc_index": 3,
                    "temp_count": 1,
                    "temp_var": 2,
                    "u_var9": 1
                },
                "xexit": {
                    "exit_program": 2,
                    "terminate_program": 2
                }
            },
            "called": [
                "FUN_00114190",
                "dcgettext",
                "bfd_get_reloc_upper_bound",
                "bfd_canonicalize_reloc",
                "FUN_0011a110",
                "FUN_001082df",
                "FUN_001126c0",
                "bfd_alloc",
                "bfd_get_error",
                "xexit",
                "FUN_00115f50"
            ],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\nvoid process_binary_function_00115dc0(undefined8 param1,undefined8 *param2,long param3)\n\n{\n  char result;\n  int error_code;\n  undefined8 result;\n  long reloc_upper_bound;\n  undefined8 *reloc_array;\n  ulong reloc_count;\n  code *jump_table;\n  undefined8 *current_reloc;\n  undefined8 *next_reloc;\n  ulong index;\n  undefined8 temp_stack_var;\n  \n  result = FUN_00115f50(param1,param2,0);\n  if (result != '\\0') {\n    return;\n  }\n  result = param2[0xc];\n  if ((((*(byte *)(param3 + 0x48) & 7) != 3) && (DAT_00127a2c != 6)) &&\n     (reloc_upper_bound = FUN_00114190(*param2,0,0x100), reloc_upper_bound == 0)) {\n    reloc_upper_bound = bfd_get_reloc_upper_bound(param1,param2);\n    if (reloc_upper_bound < 0) {\n      if ((reloc_upper_bound != -1) || (error_code = bfd_get_error(), error_code != 5)) {\n        DAT_00127a20 = 1;\n        result = 0;\nLAB_00108315:\n        FUN_001126c0(0,param1,param2,result,temp_stack_var);\n        return;\n      }\n    }\n    else if (reloc_upper_bound != 0) {\n      reloc_array = (undefined8 *)param2[0xe];\n      if (reloc_array == (undefined8 *)0x0) {\n        reloc_array = (undefined8 *)bfd_alloc(param3);\n        if (reloc_array == (undefined8 *)0x0) {\n          FUN_0011a110(0);\n                    \n          xexit(1);\n        }\n        reloc_count = bfd_canonicalize_reloc(param1,param2,reloc_array,DAT_001278b0);\n        if ((long)reloc_count < 0) {\n          DAT_00127a20 = 1;\n          result = dcgettext(0,\"relocation count is negative\",5);\n          goto LAB_00108315;\n        }\n      }\n      else {\n        reloc_count = (ulong)*(uint *)(param2 + 0xf);\n      }\n      if (DAT_00127a2c == 7) {\n        current_reloc = reloc_array;\n        for (index = 0; index != reloc_count; index = index + 1) {\n          next_reloc = current_reloc;\n          if (((*(long **)reloc_array[index] != (long *)0x0) &&\n              (reloc_upper_bound = **(long **)reloc_array[index], reloc_upper_bound != 0)) &&\n             (result = FUN_00115d70(*(undefined8 *)(reloc_upper_bound + 8),DAT_00127a08), result != '\\0')) {\n            next_reloc = current_reloc + 1;\n            *current_reloc = reloc_array[index];\n          }\n          current_reloc = next_reloc;\n        }\n        *current_reloc = 0;\n        reloc_count = (long)current_reloc - (long)reloc_array >> 3;\n      }\n      jump_table = *(code **)(*(long *)(param3 + 8) + 0x288);\n      if (reloc_count == 0) {\n        reloc_count = 0;\n        reloc_array = (undefined8 *)0x0;\n      }\n      else {\n        reloc_count = reloc_count & 0xffffffff;\n      }\n      goto LAB_00115e9a;\n    }\n  }\n  reloc_count = 0;\n  reloc_array = (undefined8 *)0x0;\n  jump_table = *(code **)(*(long *)(param3 + 8) + 0x288);\nLAB_00115e9a:\n                    /* WARNING: Could not recover jumptable at 0x00115eae. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)(param3,result,reloc_array,reloc_count);\n  return;\n}\n\n",
            "current_name": "process_binary_function_00115dc0",
            "entrypoint": "0x00115dc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00115dc0": "process_binary_function_00115dc0",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "bfd_alloc": "allocate_memory",
                "bfd_canonicalize_reloc": "canonicalize_reloc",
                "bfd_get_error": "get_bfd_error",
                "bfd_get_reloc_upper_bound": "get_reloc_upper_bound",
                "cVar1": "result",
                "dcgettext": "localized_text",
                "iVar2": "error_code",
                "lVar4": "reloc_upper_bound",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "puVar5": "reloc_array",
                "puVar7": "current_reloc",
                "puVar8": "next_reloc",
                "uStack_38": "temp_stack_var",
                "uVar3": "result",
                "uVar6": "reloc_count",
                "uVar9": "index",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00115f30": {
            "additional_data": {
                "FUN_00108375": {
                    "reverse_something": 1
                },
                "FUN_00115f30": {
                    "drop_share_flag": 2,
                    "drop_share_flag_if_needed": 1,
                    "drop_share_flag_if_not_coff": 21,
                    "process_flag": 1,
                    "remove_share_flag": 2,
                    "remove_share_flag_if_needed": 1,
                    "remove_share_flag_if_not_coff": 2,
                    "update_flags_if_not_coff_format": 1
                },
                "FUN_00119ed0": {
                    "display_note": 1,
                    "print_error": 1,
                    "print_message": 2,
                    "print_note": 4
                },
                "dcgettext": {
                    "get_localized_message": 1,
                    "get_localized_text": 1,
                    "get_note_string": 1,
                    "get_translated_message": 1
                },
                "param_1": {
                    "flag": 2,
                    "flags": 19,
                    "input_flag": 3,
                    "input_flags": 7
                },
                "param_2": {
                    "args": 2,
                    "arguments": 3,
                    "param_array": 5,
                    "parameters": 6,
                    "params": 10,
                    "params_array": 2,
                    "pointers": 3
                },
                "param_3": {
                    "additional_param": 1,
                    "data": 1,
                    "flag_value": 1,
                    "format": 1,
                    "output": 8,
                    "output_format": 13,
                    "param": 2,
                    "value": 4
                },
                "uVar1": {
                    "arg1": 1,
                    "first_arg": 2,
                    "first_param": 10,
                    "first_param_value": 3,
                    "first_pointer": 1,
                    "flag_value": 1,
                    "func_ptr": 1,
                    "param": 1,
                    "param1_value": 1,
                    "param_2_0": 2,
                    "value": 1,
                    "value1": 1,
                    "var1": 6
                },
                "uVar2": {
                    "dcgettext_result": 1,
                    "descriptive_text": 1,
                    "err_msg": 1,
                    "error_message": 4,
                    "error_str": 1,
                    "error_string": 1,
                    "localized_message": 1,
                    "localized_string": 1,
                    "message": 6,
                    "note_message": 1,
                    "note_string": 2,
                    "translated_string": 1,
                    "translation": 2,
                    "value2": 1,
                    "var2": 6,
                    "warning_message": 1
                }
            },
            "called": [
                "FUN_00108375"
            ],
            "calling": [
                "FUN_00115530",
                "FUN_00107880"
            ],
            "code": "\nuint drop_share_flag_if_not_coff_00115f30(uint flags,undefined8 *params,undefined8 output_format)\n\n{\n  undefined8 first_param;\n  undefined8 var2;\n  \n  if (((flags & 0x8000000) != 0) && (*(int *)(params[1] + 8) != 2)) {\n    first_param = *params;\n    flags = flags & 0xf7ffffff;\n    var2 = dcgettext(0,\"%s[%s]: Note - dropping \\'share\\' flag as output format is not COFF\",5);\n    FUN_00119ed0(var2,first_param,output_format);\n  }\n  return flags;\n}\n\n",
            "current_name": "drop_share_flag_if_not_coff_00115f30",
            "entrypoint": "0x00115f30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00115f30": "drop_share_flag_if_not_coff_00115f30",
                "dcgettext": "get_translated_message",
                "param_1": "flags",
                "param_2": "params",
                "param_3": "output_format",
                "uVar1": "first_param",
                "uVar2": "var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00115f50": {
            "additional_data": {
                "DAT_001278ec": {
                    "second_condition": 1
                },
                "DAT_001279b8": {
                    "linked_lists_pointer": 1
                },
                "DAT_00127a00": {
                    "third_condition": 1
                },
                "DAT_00127a20": {
                    "first_condition": 1
                },
                "FUN_00113fb0": {
                    "find_string_attribute": 1,
                    "find_substring": 2,
                    "search_attribute": 2
                },
                "FUN_001159d0": {
                    "check_array_empty": 1,
                    "check_empty_string": 2,
                    "get_comparison_result_and_attributes": 1,
                    "get_first_attribute": 1,
                    "get_return_value": 1,
                    "get_string_length": 2
                },
                "FUN_00115f50": {
                    "check_conditions": 1,
                    "check_duplicate": 2,
                    "check_duplicate_and_attributes": 1,
                    "check_duplicate_and_build_attributes": 1,
                    "check_duplicate_and_conditions": 1,
                    "check_duplicate_binary": 1,
                    "check_duplicate_entry": 3,
                    "check_duplicate_string": 8,
                    "check_duplicate_strings": 2,
                    "check_for_duplicate_string": 1,
                    "check_for_duplicate_strings": 1,
                    "check_if_duplicate": 1,
                    "check_if_duplicate_entry": 1,
                    "check_if_duplicate_exists": 1,
                    "check_if_function_exists": 1,
                    "check_if_string_exists": 1,
                    "check_if_unique": 1,
                    "check_param_validity": 1,
                    "check_string_validity": 1,
                    "check_validity": 1
                },
                "__s1": {
                    "arg_string": 1,
                    "current_file_name": 1,
                    "current_input": 1,
                    "current_str": 2,
                    "current_string": 20,
                    "str1": 3,
                    "string": 1,
                    "string1": 1,
                    "string_to_check": 1
                },
                "auVar4": {
                    "attribute_var": 1,
                    "auxiliary_var": 1,
                    "auxiliary_variable": 1,
                    "comparison_result": 4,
                    "comparison_result_and_attributes": 1,
                    "comparison_result_array": 2,
                    "function_result": 1,
                    "result": 1,
                    "result_array": 5,
                    "return_values": 1,
                    "temp": 2,
                    "temp_array": 3,
                    "temp_result": 1,
                    "temp_var": 2,
                    "temp_variable": 4,
                    "var_array": 1
                },
                "extraout_EDX": {
                    "extra_output_edx": 1,
                    "extra_value": 2
                },
                "param_1": {
                    "address": 2,
                    "arg1": 1,
                    "array_size": 1,
                    "data": 1,
                    "file_handle": 1,
                    "file_size": 1,
                    "function_address": 1,
                    "input": 6,
                    "input_length": 2,
                    "input_number": 1,
                    "input_ptr": 1,
                    "input_string": 1,
                    "input_value": 1,
                    "length": 1,
                    "num_strings": 2,
                    "param": 2,
                    "param1": 1,
                    "param_pointer": 1,
                    "param_size": 1,
                    "string_array_size": 1,
                    "string_buffer": 1,
                    "string_length": 1
                },
                "param_2": {
                    "arg2": 1,
                    "arguments": 1,
                    "array": 1,
                    "file_contents": 1,
                    "file_names": 1,
                    "input_array": 2,
                    "input_str": 1,
                    "input_strings": 1,
                    "param2": 1,
                    "str_array": 1,
                    "string_array": 10,
                    "strings": 10
                },
                "param_3": {
                    "arg3": 1,
                    "char_to_check": 1,
                    "check_attribute": 1,
                    "flag": 25,
                    "input_char": 1,
                    "input_flag": 1,
                    "param3": 1
                },
                "plVar3": {
                    "array_ptr": 1,
                    "attribute_list": 1,
                    "current_element": 1,
                    "current_entry": 3,
                    "current_pointer": 2,
                    "current_ptr": 1,
                    "data_array": 1,
                    "linked_function_ptr": 1,
                    "linked_list": 4,
                    "linked_lists": 1,
                    "list_pointer": 2,
                    "list_ptr": 1,
                    "matched_strings": 1,
                    "next_string": 1,
                    "pointer": 1,
                    "pointer_array": 1,
                    "pointer_list": 1,
                    "ptr": 1,
                    "ptr_list": 1,
                    "str_list": 1,
                    "string_list": 2,
                    "string_list_pointer": 1,
                    "temp_pointer": 1
                },
                "strcmp": {
                    "compare_strings": 7
                },
                "uVar1": {
                    "compare_result": 1,
                    "comparison_result": 11,
                    "result": 5,
                    "strcmp_result": 3,
                    "string_compare_result": 1,
                    "string_comparison_result": 10
                },
                "uVar2": {
                    "attribute_flag": 1,
                    "extra_data": 1,
                    "extra_info": 2,
                    "extra_result": 4,
                    "extra_return_value": 2,
                    "extra_var": 2,
                    "extraout_edx": 1,
                    "extraout_value": 1,
                    "function_result": 1,
                    "int_result": 1,
                    "result": 1,
                    "return_value": 6,
                    "second_check_result": 1,
                    "secondary_flag": 1,
                    "status": 1,
                    "temp_result": 1,
                    "temp_value": 2,
                    "temp_var": 2
                }
            },
            "called": [
                "FUN_00113fb0",
                "FUN_001159d0",
                "strcmp"
            ],
            "calling": [
                "FUN_00115dc0",
                "FUN_00116110"
            ],
            "code": "\nuint check_for_duplicate_string_00115f50(long input,char **string_array,char flag)\n\n{\n  char *current_string;\n  uint comparison_result;\n  undefined4 return_value;\n  undefined4 extra_value;\n  long *linked_list;\n  undefined result_array [12];\n  \n  if ((DAT_00127a20 != 0) || (DAT_001278ec != '\\0')) {\n    return 1;\n  }\n  result_array = FUN_001159d0(string_array);\n  if (result_array[0] == '\\0') {\n    if (DAT_001279b8 != (long *)0x0) {\n      current_string = *string_array;\n      linked_list = DAT_001279b8;\n      do {\n        comparison_result = strcmp(current_string,(char *)linked_list[1]);\n        result_array._4_4_ = 0;\n        result_array._0_4_ = comparison_result;\n        result_array._8_4_ = extra_value;\n        if (comparison_result == 0) {\n          return 1;\n        }\n        linked_list = (long *)*linked_list;\n      } while (linked_list != (long *)0x0);\n    }\n    return_value = result_array._8_4_;\n    if (((((flag == '\\0') || (DAT_00127a00 == '\\0')) ||\n         (result_array._8_4_ = return_value, result_array._0_8_ = *(long *)(input + 8),\n         *(int *)(*(long *)(input + 8) + 8) != 5)) ||\n        ((result_array._0_8_ = (ulong)string_array[0x1a], *(int *)(string_array[0x1a] + 4) != 7 ||\n         (result_array = FUN_00113fb0(*string_array,\".gnu.build.attributes\"), result_array[0] == '\\0')))) &&\n       ((*(byte *)((long)string_array + 0x27) & 2) == 0)) {\n      return (uint)CONCAT71(result_array._1_7_,string_array[8] == (char *)0x0) |\n             CONCAT31(result_array._9_3_,string_array[0xc] == (char *)0x0);\n    }\n  }\n  return 1;\n}\n\n",
            "current_name": "check_for_duplicate_string_00115f50",
            "entrypoint": "0x00115f50",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00115f50": "check_for_duplicate_string_00115f50",
                "__s1": "current_string",
                "auVar4": "result_array",
                "extraout_EDX": "extra_value",
                "param_1": "input",
                "param_2": "string_array",
                "param_3": "flag",
                "plVar3": "linked_list",
                "strcmp": "compare_strings",
                "uVar1": "comparison_result",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00116030": {
            "additional_data": {
                "FUN_001083b7": {
                    "get_error": 1
                },
                "FUN_00116030": {
                    "process_reloc": 1,
                    "process_reloc_data": 2,
                    "process_reloc_entries": 2,
                    "process_reloc_info": 1,
                    "process_reloc_table": 4,
                    "process_relocation": 14,
                    "process_relocation_data": 1,
                    "process_relocation_entries": 1,
                    "process_relocation_information": 1,
                    "process_relocations": 2,
                    "process_relocs": 2
                },
                "FUN_0011a110": {
                    "handle_error": 2
                },
                "__ptr": {
                    "reloc_array": 4,
                    "reloc_buf": 1,
                    "reloc_buffer": 14,
                    "reloc_canon_ptr": 1,
                    "reloc_data": 5,
                    "reloc_entries": 2,
                    "reloc_entries_ptr": 1,
                    "reloc_info": 1,
                    "reloc_ptr": 2
                },
                "_fwrite": {
                    "write_to_file": 1
                },
                "bfd_canonicalize_reloc": {
                    "canonicalize_reloc": 2
                },
                "bfd_get_reloc_upper_bound": {
                    "get_reloc_table_upper_bound": 1,
                    "get_upper_bound": 1
                },
                "extraout_RAX": {
                    "exit_code": 2,
                    "extra_return_value": 5,
                    "final_return_value": 1,
                    "output": 1,
                    "result": 4,
                    "result2": 1,
                    "return_val": 2,
                    "return_value": 7,
                    "return_value_2": 1
                },
                "free": {
                    "free_memory": 1,
                    "release_memory": 1
                },
                "fwrite": {
                    "write_to_file": 1
                },
                "iVar3": {
                    "error_code": 1
                },
                "iVar5": {
                    "bfd_error": 11,
                    "bfd_error_code": 2,
                    "error": 1,
                    "error_code": 15
                },
                "in_RAX": {
                    "default_return_value": 2,
                    "result": 9,
                    "return_value": 12,
                    "retval": 1
                },
                "lVar1": {
                    "reloc_length": 1,
                    "reloc_size": 1,
                    "upper_bound": 3
                },
                "lVar2": {
                    "current_reloc": 1,
                    "current_value": 1,
                    "data_value": 1,
                    "reloc_addr": 3,
                    "reloc_address": 1,
                    "reloc_entry": 6,
                    "reloc_entry_addr": 1,
                    "reloc_entry_value": 1,
                    "reloc_index": 1,
                    "reloc_offset": 2,
                    "reloc_result": 2,
                    "reloc_value": 9,
                    "result": 1,
                    "value": 1
                },
                "lVar3": {
                    "code_vaddr": 1,
                    "constant_1": 1,
                    "constant_value_1": 2,
                    "count": 1,
                    "current_reloc": 1,
                    "dat_00128568": 1,
                    "file_data_1": 1,
                    "first_reloc": 1,
                    "fwrite_entry": 1,
                    "fwrite_param_1": 1,
                    "global_data_addr": 1,
                    "l_var3": 2,
                    "original_value": 1,
                    "previous_reloc_section_start": 1,
                    "ptr_dat_00128568": 1,
                    "rel_addend": 1,
                    "rel_offset": 1,
                    "reloc_data_1": 1,
                    "reloc_entry": 1,
                    "reloc_offset_end": 1,
                    "special_value_1": 1,
                    "stack_chk_fail_ptr": 1,
                    "text_section_upper_bound": 1,
                    "upper_bound": 1,
                    "value_1": 2,
                    "var1": 1,
                    "x86_register1": 1
                },
                "lVar4": {
                    "constant_2": 1,
                    "constant_value_2": 2,
                    "dat_00128680": 1,
                    "data_vaddr": 1,
                    "external_data_addr": 1,
                    "fd_entry": 1,
                    "file_data_2": 1,
                    "fwrite": 2,
                    "fwrite_address": 1,
                    "fwrite_param_2": 1,
                    "fwrite_result": 1,
                    "l_var4": 2,
                    "malloc_fail_ptr": 1,
                    "new_value": 1,
                    "previous_reloc_section_end": 1,
                    "ptr_dat_00128680": 1,
                    "rel_addr": 1,
                    "rel_offset": 1,
                    "reloc_data_2": 1,
                    "rodata_section_upper_bound": 1,
                    "second_reloc": 1,
                    "special_value_2": 1,
                    "temp_var_1": 1,
                    "total_entries": 1,
                    "value_2": 2,
                    "var2": 1,
                    "x86_register2": 1
                },
                "lVar5": {
                    "temp_var_2": 1
                },
                "lVar6": {
                    "buffer": 1,
                    "file_write_ptr": 1,
                    "fwrite": 1,
                    "fwrite_addr": 4,
                    "fwrite_address": 1,
                    "fwrite_func": 2,
                    "fwrite_func_ptr": 1,
                    "fwrite_function": 3,
                    "fwrite_ptr": 2,
                    "reloc_canon_size": 1,
                    "reloc_count": 3,
                    "reloc_data_3": 1,
                    "reloc_function": 1,
                    "reloc_upper_bound": 4,
                    "temp_var_3": 1,
                    "upper_bound": 2,
                    "write_function": 1
                },
                "lVar7": {
                    "canonicalize_result": 2,
                    "canonicalized_count": 3,
                    "canonicalized_size": 1,
                    "entries_canonicalized": 1,
                    "num_entries": 1,
                    "num_reloc_entries": 1,
                    "num_relocs": 9,
                    "rel_size": 1,
                    "reloc_count": 7,
                    "reloc_entries": 1,
                    "reloc_entries_count": 1,
                    "reloc_entry_count": 2,
                    "reloc_result": 1
                },
                "lVar8": {
                    "counter": 1,
                    "entry_index": 1,
                    "i": 7,
                    "index": 7,
                    "loop_counter": 4,
                    "loop_index": 3,
                    "reloc_index": 8
                },
                "param_1": {
                    "arguments": 1,
                    "array": 1,
                    "buffer": 1,
                    "data_ptr": 1,
                    "file": 1,
                    "file_buffer": 1,
                    "file_data": 5,
                    "file_handle": 2,
                    "file_header": 1,
                    "file_info": 1,
                    "file_path": 1,
                    "file_pointer": 1,
                    "file_ptr": 1,
                    "input": 1,
                    "input_pointer": 1,
                    "param": 3,
                    "param_array": 2,
                    "param_data": 1,
                    "program_headers": 1,
                    "reloc_arr": 1,
                    "reloc_ptr": 1,
                    "reloc_table": 1
                },
                "param_2": {
                    "bfd_handle": 1,
                    "count": 1,
                    "data_length": 1,
                    "data_offset": 1,
                    "data_size": 1,
                    "elf_header": 1,
                    "entry_point": 1,
                    "file_size": 6,
                    "input_length": 1,
                    "input_param": 1,
                    "length": 1,
                    "offset": 1,
                    "param_length": 2,
                    "param_value": 1,
                    "reloc_offset": 1,
                    "reloc_section_address": 1,
                    "reloc_size": 1,
                    "reloc_table_size": 1,
                    "section_base": 1,
                    "section_offset": 3,
                    "size": 3
                },
                "plVar1": {
                    "current_ptr": 1,
                    "current_reloc_entry": 1,
                    "pointer": 1,
                    "ptr_data": 1,
                    "reloc_entry": 11,
                    "reloc_ptr": 2
                },
                "plVar9": {
                    "reloc_entry": 1
                },
                "uStack_28": {
                    "default_result": 1,
                    "default_return_val": 1,
                    "default_return_value": 3,
                    "empty_value": 1,
                    "error_result": 1,
                    "return_value": 3,
                    "return_value_3": 1,
                    "stack_value": 1,
                    "stack_variable": 6,
                    "u_stack_28": 3,
                    "uninitialized_value": 1
                },
                "xexit": {
                    "exit_program": 2
                },
                "xmalloc": {
                    "allocate_memory": 2
                }
            },
            "called": [
                "bfd_get_reloc_upper_bound",
                "FUN_001083b7",
                "bfd_canonicalize_reloc",
                "FUN_0011a110",
                "free",
                "xmalloc",
                "xexit",
                "fwrite"
            ],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\n\n\nundefined8 process_relocation_entries_00116030(undefined8 *file_data,long file_size)\n\n{\n  long *reloc_entry;\n  long reloc_value;\n  long value_1;\n  long fwrite;\n  int error_code;\n  undefined8 return_value;\n  long reloc_upper_bound;\n  void *reloc_buffer;\n  long num_relocs;\n  undefined8 return_value;\n  long reloc_index;\n  undefined8 stack_variable;\n  \n  if (*(long *)(file_size + 0x60) == 0) {\n    return return_value;\n  }\n  reloc_upper_bound = bfd_get_reloc_upper_bound();\n  if (reloc_upper_bound < 0) {\n    if ((reloc_upper_bound != -1) || (error_code = bfd_get_error(), error_code != 5)) {\n      FUN_0011a110(*file_data);\n                    \n      xexit(1);\n    }\n  }\n  else if (reloc_upper_bound != 0) {\n    reloc_buffer = (void *)xmalloc();\n    num_relocs = bfd_canonicalize_reloc(file_data,file_size,reloc_buffer);\n    fwrite = _DAT_00128680;\n    value_1 = _DAT_00128568;\n    reloc_upper_bound = write_to_file;\n    if (num_relocs < 0) {\n      FUN_0011a110(*file_data);\n                    \n      xexit(1);\n    }\n    if (num_relocs != 0) {\n      reloc_index = 0;\n      do {\n        reloc_entry = **(long ***)((long)reloc_buffer + reloc_index * 8);\n        if ((((reloc_entry != (long *)0x0) && (reloc_value = *reloc_entry, reloc_value != 0)) && (reloc_value != reloc_upper_bound)) &&\n           ((reloc_value != fwrite && (reloc_value != value_1)))) {\n          *(uint *)(reloc_value + 0x18) = *(uint *)(reloc_value + 0x18) | 0x20;\n        }\n        reloc_index = reloc_index + 1;\n      } while (num_relocs != reloc_index);\n    }\n    free(reloc_buffer);\n    return return_value;\n  }\n  return stack_variable;\n}\n\n",
            "current_name": "process_relocation_entries_00116030",
            "entrypoint": "0x00116030",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00116030": "process_relocation_entries_00116030",
                "__ptr": "reloc_buffer",
                "_fwrite": "write_to_file",
                "bfd_canonicalize_reloc": "canonicalize_reloc",
                "bfd_get_reloc_upper_bound": "get_reloc_table_upper_bound",
                "extraout_RAX": "return_value",
                "free": "release_memory",
                "fwrite": "write_to_file",
                "iVar5": "error_code",
                "in_RAX": "return_value",
                "lVar1": "upper_bound",
                "lVar2": "reloc_value",
                "lVar3": "value_1",
                "lVar4": "fwrite",
                "lVar6": "reloc_upper_bound",
                "lVar7": "num_relocs",
                "lVar8": "reloc_index",
                "param_1": "file_data",
                "param_2": "file_size",
                "plVar1": "reloc_entry",
                "uStack_28": "stack_variable",
                "xexit": "exit_program",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00116110": {
            "additional_data": {
                "FUN_00116110": {
                    "copy_section": 1,
                    "process_section": 7,
                    "reorder_section_contents": 1,
                    "reverse_section": 4,
                    "reverse_section_and_convert_contents": 1,
                    "reverse_section_and_free": 1,
                    "reverse_section_contents": 6,
                    "reverse_section_data": 1,
                    "update_section_contents": 1
                },
                "__ptr": {
                    "allocated_buffer": 2,
                    "allocated_mem": 1,
                    "allocated_memory": 5,
                    "buf_ptr": 1,
                    "buffer": 10,
                    "data_buffer": 1,
                    "dynamic_array": 1,
                    "new_array": 1,
                    "new_contents": 1,
                    "new_section_contents": 1,
                    "ptr": 4,
                    "ptr1": 2,
                    "section_contents": 1
                },
                "bVar20": {
                    "bool1": 1,
                    "bool_var": 1,
                    "byte_flag": 1,
                    "byte_var": 5,
                    "byte_var1": 1,
                    "byte_var2": 1,
                    "byte_var20": 1,
                    "flag": 12,
                    "flag2": 1,
                    "temp20": 4,
                    "temp_byte2": 1,
                    "temp_var20": 1,
                    "var13": 1
                },
                "cVar6": {
                    "char_val": 1,
                    "char_var": 5,
                    "char_var1": 1,
                    "condition_var": 1,
                    "flag": 1,
                    "is_section_empty": 1,
                    "result": 9,
                    "return_value": 3,
                    "status": 3,
                    "temp6": 2,
                    "temp_var6": 2,
                    "var4": 1
                },
                "cVar7": {
                    "char1": 1
                },
                "iVar10": {
                    "copy_size": 1,
                    "count": 1,
                    "counter3": 1,
                    "division_factor": 1,
                    "even_divisible": 1,
                    "half_size": 1,
                    "i_var10": 1,
                    "i_var2": 1,
                    "i_var3": 2,
                    "int_val3": 1,
                    "int_var": 1,
                    "int_var10": 1,
                    "int_var3": 2,
                    "loop_limit": 1,
                    "loop_size": 1,
                    "loop_var_2": 1,
                    "temp10": 4,
                    "temp4": 1,
                    "temp_var10": 2,
                    "temp_var7": 1,
                    "var10": 1,
                    "var5": 1,
                    "var7": 1,
                    "variable10": 1
                },
                "iVar4": {
                    "byte_index": 1,
                    "byte_size": 1,
                    "half": 1,
                    "i_var": 1,
                    "i_var1": 3,
                    "i_var4": 1,
                    "index1": 1,
                    "index2": 1,
                    "int_val1": 1,
                    "int_var": 1,
                    "int_var1": 2,
                    "int_var4": 1,
                    "loop_counter1": 1,
                    "num1": 1,
                    "offset": 1,
                    "temp4": 4,
                    "temp_var3": 1,
                    "temp_var4": 2,
                    "var2": 2,
                    "var4": 1,
                    "variable1": 1,
                    "variable4": 1
                },
                "iVar5": {
                    "byte_limit": 1,
                    "byte_offset": 1,
                    "i_var1": 1,
                    "i_var2": 3,
                    "i_var5": 1,
                    "index1": 1,
                    "index2": 1,
                    "index3": 1,
                    "int_val2": 1,
                    "int_var2": 3,
                    "int_var5": 1,
                    "loop_counter2": 1,
                    "modulus": 1,
                    "num2": 1,
                    "size": 1,
                    "temp5": 4,
                    "temp_var4": 1,
                    "temp_var5": 2,
                    "var3": 2,
                    "var5": 1,
                    "variable2": 1,
                    "variable5": 1
                },
                "iVar6": {
                    "index2": 1
                },
                "lVar13": {
                    "buffer_size": 1,
                    "bytes_remaining": 2,
                    "diff": 1,
                    "length": 1,
                    "length3": 1,
                    "length_var2": 1,
                    "long_val3": 1,
                    "long_var13": 1,
                    "long_var3": 4,
                    "remaining_bytes": 3,
                    "remaining_length": 1,
                    "remaining_size": 3,
                    "temp13": 4,
                    "temp8": 1,
                    "temp_var13": 2,
                    "var13": 1,
                    "var6": 1,
                    "var9": 1,
                    "variable13": 1
                },
                "lVar3": {
                    "index1": 1,
                    "length": 1,
                    "length_var": 1,
                    "long_val": 1,
                    "long_var": 4,
                    "long_var1": 1,
                    "section_address": 1,
                    "section_length": 1,
                    "section_offset": 3,
                    "section_param1": 1,
                    "section_size": 3,
                    "section_vma": 1,
                    "temp3": 5,
                    "temp_var3": 2,
                    "var1": 2,
                    "var3": 1,
                    "variable3": 1
                },
                "lVar4": {
                    "length1": 1
                },
                "lVar8": {
                    "buffer_offset": 2,
                    "copy_offset": 1,
                    "count1": 1,
                    "counter": 1,
                    "counter1": 1,
                    "index": 1,
                    "index4": 1,
                    "inner_loop_counter": 1,
                    "long_val2": 1,
                    "long_var2": 4,
                    "long_var8": 1,
                    "loop_index1": 1,
                    "loop_var": 1,
                    "temp3": 1,
                    "temp5": 1,
                    "temp8": 4,
                    "temp_var5": 1,
                    "temp_var8": 2,
                    "var4": 1,
                    "var5": 1,
                    "var8": 1,
                    "variable8": 1
                },
                "lVar9": {
                    "length2": 1
                },
                "local_30": {
                    "content": 1,
                    "contents": 1,
                    "data": 1,
                    "local_buffer": 1,
                    "local_contents": 1,
                    "local_value2": 1,
                    "local_var2": 3,
                    "local_var30": 1,
                    "ptr_var5": 1,
                    "section_content": 3,
                    "section_contents": 8,
                    "section_contents_ptr": 1,
                    "section_data": 6,
                    "void_ptr1": 1,
                    "void_ptr2": 1
                },
                "local_38": {
                    "data_size": 1,
                    "local_size": 1,
                    "local_value1": 1,
                    "local_var1": 3,
                    "local_var38": 1,
                    "section_length": 2,
                    "section_size": 13,
                    "section_size_aligned": 1,
                    "size": 5,
                    "ulong_var6": 3
                },
                "param_1": {
                    "bfd_handle": 1,
                    "input_param": 1,
                    "param": 6,
                    "param1": 16,
                    "param_1": 5,
                    "param_addr": 1,
                    "param_buffer": 1
                },
                "param_2": {
                    "param2": 13,
                    "param2_array": 1,
                    "param_2": 3,
                    "param_array": 2,
                    "param_list": 1,
                    "param_ptr": 1,
                    "section": 1,
                    "section_array": 1,
                    "section_data": 1,
                    "section_headers": 1,
                    "section_info": 3,
                    "section_parameters": 1,
                    "section_params": 2
                },
                "param_3": {
                    "bfd_handle": 1,
                    "bfd_handler": 1,
                    "new_section": 1,
                    "output_bfd": 1,
                    "output_section": 5,
                    "param3": 15,
                    "param_3": 4,
                    "param_size": 1,
                    "param_value": 1,
                    "section_param": 1
                },
                "puVar10": {
                    "pointer1": 1
                },
                "puVar11": {
                    "pointer2": 1
                },
                "puVar12": {
                    "buffer_pointer": 1,
                    "byte_ptr": 1,
                    "pointer": 2,
                    "pointer3": 1,
                    "pointer_var": 3,
                    "ptr": 4,
                    "ptr1": 3,
                    "ptr2": 2,
                    "ptr_var": 3,
                    "ptr_var12": 1,
                    "source_ptr": 1,
                    "temp12": 1,
                    "temp_ptr": 4,
                    "temp_var12": 2,
                    "undefined_ptr": 1,
                    "undefined_ptr1": 1
                },
                "puVar14": {
                    "buffer_ptr": 1,
                    "buffer_ptr2": 1,
                    "copy_ptr": 1,
                    "current_pointer1": 1,
                    "new_ptr": 1,
                    "pointer4": 1,
                    "pointer_var2": 3,
                    "ptr": 1,
                    "ptr1": 2,
                    "ptr2": 6,
                    "ptr3": 2,
                    "ptr_var1": 2,
                    "ptr_var14": 1,
                    "ptr_var2": 1,
                    "temp14": 1,
                    "temp_ptr1": 2,
                    "temp_ptr2": 1,
                    "temp_var14": 1,
                    "unaligned_ptr": 1,
                    "undefined8_ptr": 1
                },
                "puVar15": {
                    "buf_ptr_iter": 1,
                    "buffer_ptr3": 1,
                    "buffer_ptr_2": 1,
                    "current_pointer2": 1,
                    "pointer5": 1,
                    "pointer_var3": 3,
                    "ptr": 2,
                    "ptr1": 1,
                    "ptr2": 2,
                    "ptr3": 6,
                    "ptr4": 2,
                    "ptr_var15": 1,
                    "ptr_var2": 2,
                    "ptr_var3": 1,
                    "temp15": 1,
                    "temp_ptr2": 2,
                    "temp_ptr3": 1,
                    "temp_var15": 1,
                    "undefined8_ptr2": 1
                },
                "pvVar16": {
                    "buffer_ptr4": 1,
                    "dest_ptr": 1,
                    "output_ptr": 2,
                    "pointer": 1,
                    "pointer1": 1,
                    "pointer2": 1,
                    "pointer6": 1,
                    "pointer_var4": 2,
                    "ptr": 1,
                    "ptr4": 4,
                    "ptr5": 2,
                    "ptr_var16": 1,
                    "ptr_var3": 2,
                    "ptr_var4": 1,
                    "ptr_void": 1,
                    "temp16": 1,
                    "temp_pointer1": 1,
                    "temp_ptr3": 1,
                    "temp_ptr4": 1,
                    "temp_var": 1,
                    "temp_var16": 1,
                    "void_ptr": 1,
                    "void_var": 1,
                    "void_var1": 1
                },
                "uVar1": {
                    "byte": 1,
                    "byte1": 2,
                    "byte_val": 2,
                    "byte_value": 1,
                    "byte_var": 1,
                    "data": 1,
                    "temp": 2,
                    "temp1": 9,
                    "temp_byte": 1,
                    "temp_var1": 2,
                    "undefined_var": 1,
                    "undefined_var1": 2,
                    "unknown_var1": 1,
                    "unsigned_var1": 1,
                    "value": 1,
                    "value1": 1,
                    "var1": 1,
                    "variable1": 1
                },
                "uVar11": {
                    "counter4": 1,
                    "current_offset": 1,
                    "index6": 1,
                    "loop_var": 1,
                    "loop_var2": 1,
                    "loop_var_3": 1,
                    "offset": 2,
                    "outer_loop_index": 1,
                    "source_offset": 1,
                    "start": 1,
                    "temp11": 4,
                    "temp5": 2,
                    "temp7": 1,
                    "temp_var11": 2,
                    "temp_var8": 1,
                    "ulong_val2": 1,
                    "ulong_var2": 4,
                    "unsigned_var11": 1,
                    "var11": 1,
                    "var8": 1,
                    "variable11": 1
                },
                "uVar17": {
                    "dest_offset": 1,
                    "increment": 1,
                    "index7": 1,
                    "loop_var2": 1,
                    "loop_var3": 1,
                    "loop_var_4": 1,
                    "target_offset": 1,
                    "temp": 1,
                    "temp17": 4,
                    "temp4": 1,
                    "temp6": 2,
                    "temp9": 1,
                    "temp_index": 1,
                    "temp_var17": 2,
                    "temp_var9": 1,
                    "ulong_val3": 1,
                    "ulong_var3": 4,
                    "unsigned_var17": 1,
                    "value3": 1,
                    "value4": 1,
                    "var10": 1,
                    "var17": 1,
                    "variable17": 1
                },
                "uVar18": {
                    "alignment": 1,
                    "buffer_size": 1,
                    "copy_unit_size": 1,
                    "divider": 1,
                    "division_factor": 2,
                    "divisor": 3,
                    "loop_var4": 1,
                    "temp10": 1,
                    "temp18": 4,
                    "temp7": 2,
                    "temp_var10": 1,
                    "temp_var18": 2,
                    "ulong_val4": 1,
                    "ulong_var4": 4,
                    "unsigned_var18": 1,
                    "value4": 1,
                    "value5": 1,
                    "var11": 1,
                    "var18": 1,
                    "variable18": 1
                },
                "uVar19": {
                    "loop_var3": 1,
                    "loop_var5": 1,
                    "loop_var_5": 1,
                    "outer_loop_limit": 1,
                    "prev_offset": 1,
                    "target_index": 1,
                    "temp": 1,
                    "temp11": 1,
                    "temp19": 4,
                    "temp2": 1,
                    "temp3": 1,
                    "temp5": 1,
                    "temp8": 2,
                    "temp_var11": 1,
                    "temp_var19": 2,
                    "ulong_val5": 1,
                    "ulong_var5": 4,
                    "unsigned_var19": 1,
                    "value5": 1,
                    "value6": 1,
                    "var12": 1,
                    "var19": 1,
                    "variable19": 1
                },
                "uVar2": {
                    "return_value": 1,
                    "section_addr": 1,
                    "start_addr": 1,
                    "temp1": 1,
                    "temp2": 10,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "temp_var2": 2,
                    "undefined8_var": 1,
                    "undefined_val": 1,
                    "undefined_var2": 2,
                    "unknown_var2": 1,
                    "unsigned_var2": 1,
                    "value": 1,
                    "value1": 1,
                    "value2": 1,
                    "var2": 3,
                    "variable2": 1
                },
                "uVar3": {
                    "value2": 1
                },
                "uVar7": {
                    "error_message": 1,
                    "error_msg": 2,
                    "error_string": 1,
                    "message": 3,
                    "temp2": 1,
                    "temp3": 3,
                    "temp4": 1,
                    "temp7": 4,
                    "temp_var2": 2,
                    "temp_var7": 2,
                    "undefined8_var2": 1,
                    "undefined_val2": 1,
                    "undefined_var3": 2,
                    "unknown_var3": 1,
                    "unsigned_var7": 1,
                    "var7": 3,
                    "variable7": 1
                },
                "uVar8": {
                    "value3": 1
                },
                "uVar9": {
                    "copy_index": 1,
                    "count2": 1,
                    "counter2": 2,
                    "i": 1,
                    "index": 1,
                    "index5": 1,
                    "inner_loop_index": 1,
                    "loop_index": 1,
                    "loop_index2": 1,
                    "loop_var1": 1,
                    "loop_var_1": 1,
                    "temp4": 1,
                    "temp6": 1,
                    "temp9": 4,
                    "temp_var6": 1,
                    "temp_var9": 2,
                    "ulong_val1": 1,
                    "ulong_var": 1,
                    "ulong_var1": 3,
                    "unsigned_var9": 1,
                    "var6": 1,
                    "var9": 1,
                    "variable9": 1
                }
            },
            "called": [
                "FUN_00114190",
                "FUN_00108466",
                "bfd_convert_section_contents",
                "free",
                "xmalloc",
                "FUN_001126c0",
                "bfd_get_full_section_contents",
                "bfd_set_section_size",
                "FUN_001083de",
                "bfd_set_section_contents",
                "FUN_00115f50"
            ],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\nvoid reverse_section_and_convert_contents_00116110(undefined8 param1,undefined8 *param2,undefined8 param3)\n\n{\n  undefined temp1;\n  undefined8 temp2;\n  long temp3;\n  int temp4;\n  int temp5;\n  char result;\n  undefined8 temp7;\n  undefined8 *buffer;\n  long long_var2;\n  ulong temp9;\n  int temp10;\n  ulong temp11;\n  undefined *ptr;\n  long temp13;\n  undefined8 *ptr2;\n  undefined8 *ptr3;\n  void *ptr4;\n  ulong ulong_var3;\n  ulong temp18;\n  ulong ulong_var5;\n  byte flag;\n  ulong section_size;\n  void *section_contents;\n  \n  flag = 0;\n  result = FUN_00115f50(param1,param2,1);\n  if (result != '\\0') {\n    return;\n  }\n  section_size = param2[8];\n  temp3 = param2[0xc];\n  if (((*(byte *)((long)param2 + 0x25) & 1) == 0) || ((*(byte *)(temp3 + 0x25) & 1) == 0)) {\n    temp13 = FUN_00114190(*param2,0,0x80);\n    if (temp13 == 0) {\n      return;\n    }\n    if ((*(byte *)(temp13 + 0x29) & 1) == 0) {\n      return;\n    }\n    buffer = (undefined8 *)xmalloc(section_size);\n    ptr3 = buffer;\n    if (7 < section_size) {\n      for (temp18 = section_size >> 3; temp18 != 0; temp18 = temp18 - 1) {\n        *ptr3 = 0;\n        ptr3 = ptr3 + (ulong)flag * -2 + 1;\n      }\n    }\n    ptr2 = ptr3;\n    if ((section_size & 4) != 0) {\n      ptr2 = (undefined8 *)((long)ptr3 + (ulong)flag * -8 + 4);\n      *(undefined4 *)ptr3 = 0;\n    }\n    ptr3 = ptr2;\n    if ((section_size & 2) != 0) {\n      ptr3 = (undefined8 *)((long)ptr2 + (ulong)flag * -4 + 2);\n      *(undefined2 *)ptr2 = 0;\n    }\n    if ((section_size & 1) != 0) {\n      *(undefined *)ptr3 = 0;\n    }\n    result = bfd_set_section_contents(param3,temp3,buffer,0);\n    if (result != '\\0') {\n      free(buffer);\n      return;\n    }\n    DAT_00127a20 = 1;\n    FUN_001126c0(0,param3,temp3,0);\n    free(buffer);\n    return;\n  }\n  section_contents = (void *)0x0;\n  result = bfd_get_full_section_contents(param1,param2,&section_contents);\n  if ((result == '\\0') ||\n     (result = bfd_convert_section_contents(param1,param2,param3,&section_contents,&section_size),\n     temp10 = DAT_001278e8, result == '\\0')) {\n    bfd_set_section_size(temp3,0);\n    DAT_00127a20 = 1;\n    FUN_001126c0(0,param1,param2,0);\n    free(section_contents);\n    return;\n  }\n  temp4 = DAT_001264b8;\n  temp5 = DAT_001264bc;\n  if (DAT_001278e8 != 0) {\n    temp18 = (ulong)DAT_001278e8;\n    if (section_size % temp18 != 0) {\n      temp2 = *param2;\n      temp7 = dcgettext(0,\n                        \"cannot reverse bytes: length of section %s must be evenly divisible by %d\",\n                        5);\n                    \n      FUN_00119dd0(temp7,temp2,temp10);\n    }\n    temp10 = DAT_001278e8 / 2;\n    temp11 = 0;\n    while (ulong_var5 = temp11, temp4 = DAT_001264b8, temp5 = DAT_001264bc, ulong_var5 < section_size) {\n      temp11 = temp18 + ulong_var5;\n      ulong_var3 = temp11;\n      for (temp9 = 0; temp9 < (ulong)(long)temp10; temp9 = temp9 + 1) {\n        ulong_var3 = ulong_var3 - 1;\n        ptr = (undefined *)(ulong_var5 + temp9 + (long)section_contents);\n        temp1 = *ptr;\n        *ptr = *(undefined *)((long)section_contents + ulong_var3);\n        *(undefined *)((long)section_contents + ulong_var3) = temp1;\n      }\n    }\n  }\n  DAT_001264b8 = temp4;\n  DAT_001264bc = temp5;\n  if (-1 < temp5) {\n    temp18 = (ulong)DAT_00127a1c;\n    temp10 = (int)((ulong)param2[7] % temp18);\n    temp11 = ((long)temp5 - (long)temp10) + (long)section_contents;\n    if (temp5 < temp10) {\n      temp11 = temp11 + temp18;\n    }\n    temp13 = (section_size + (long)section_contents) - temp11;\n    ptr4 = section_contents;\n    for (; temp11 < section_size + (long)section_contents; temp11 = temp11 + temp18) {\n      for (long_var2 = 0; ((int)long_var2 < temp4 && (long_var2 != temp13)); long_var2 = long_var2 + 1) {\n        *(undefined *)((long)ptr4 + long_var2) = *(undefined *)(temp11 + long_var2);\n      }\n      ptr4 = (void *)((long)ptr4 + long_var2);\n      temp13 = temp13 - temp18;\n    }\n    section_size = ((((temp18 - 1) + section_size) - (long)temp5) / temp18) * (long)temp4;\n    temp18 = *(ulong *)(temp3 + 0x38) / temp18;\n    *(ulong *)(temp3 + 0x38) = temp18;\n    if (temp5 < temp10) {\n      *(ulong *)(temp3 + 0x38) = temp18 + 1;\n      result = bfd_set_section_contents(param3,temp3,section_contents,0,section_size);\n      if (result == '\\0') {\n        FUN_00108466();\n        return;\n      }\n      goto LAB_001161d8;\n    }\n  }\n  result = bfd_set_section_contents(param3,temp3,section_contents,0,section_size);\n  if (result == '\\0') {\n    FUN_00108466();\n    return;\n  }\nLAB_001161d8:\n  free(section_contents);\n  return;\n}\n\n",
            "current_name": "reverse_section_and_convert_contents_00116110",
            "entrypoint": "0x00116110",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00116110": "reverse_section_and_convert_contents_00116110",
                "__ptr": "buffer",
                "bVar20": "flag",
                "cVar6": "result",
                "iVar10": "temp10",
                "iVar4": "temp4",
                "iVar5": "temp5",
                "lVar13": "temp13",
                "lVar3": "temp3",
                "lVar8": "long_var2",
                "local_30": "section_contents",
                "local_38": "section_size",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "puVar12": "ptr",
                "puVar14": "ptr2",
                "puVar15": "ptr3",
                "pvVar16": "ptr4",
                "uVar1": "temp1",
                "uVar11": "temp11",
                "uVar17": "ulong_var3",
                "uVar18": "temp18",
                "uVar19": "ulong_var5",
                "uVar2": "temp2",
                "uVar7": "temp7",
                "uVar9": "temp9"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001163d0": {
            "additional_data": {
                "BFD_get_reloc_upper_bound": {
                    "get_reloc_upper_bound": 1
                },
                "FUN_001086af": {
                    "calculate_value": 1
                },
                "FUN_001163d0": {
                    "merge_attributes": 1,
                    "merge_build_attributes": 1,
                    "merge_relocations": 1,
                    "process_build_attribute_notes": 1,
                    "process_build_attributes": 3,
                    "process_gnu_build_attr_notes": 1,
                    "process_gnu_build_attributes": 1,
                    "reengineered_function": 1,
                    "reverse_merge_attributes": 1
                },
                "FUN_00116490": {
                    "process_note": 1
                },
                "FUN_00119ed0": {
                    "display_error": 1,
                    "print_warning": 1
                },
                "__nmemb": {
                    "array_length": 1,
                    "buffer_size": 1,
                    "chunks": 1,
                    "count": 4,
                    "element_amount": 1,
                    "nmemb": 1,
                    "num_attributes": 2,
                    "num_elements": 6,
                    "number_of_elements": 1,
                    "qsort_len": 1,
                    "size": 1,
                    "size_of_element": 1,
                    "size_value": 1,
                    "temp_nmemb": 1,
                    "temp_size": 1,
                    "temp_var1": 1,
                    "temp_var_31": 1,
                    "temp_var_nmemb": 1,
                    "var_nmemb": 1
                },
                "__ptr": {
                    "buffer": 5,
                    "buffer_ptr": 1,
                    "buffer_variable": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "pointer_var_1": 1,
                    "ptr": 1,
                    "ptr_var": 1,
                    "reloc_buffer": 3,
                    "reloc_data": 1,
                    "reloc_ptr": 3,
                    "reloc_upper_bound_ptr": 1,
                    "temp_buffer": 2,
                    "temp_pointer": 1,
                    "temp_ptr": 7
                },
                "__ptr_00": {
                    "buffer2": 2,
                    "pointer2": 1,
                    "pointer_var_2": 1,
                    "ptr_value_2": 1,
                    "ptr_var_00": 1,
                    "temp_buffer": 1,
                    "temp_ptr_00": 1,
                    "temp_ptr_2": 2
                },
                "bVar26": {
                    "alignment": 1,
                    "bool_val": 1,
                    "boolean_value": 2,
                    "boolean_var": 1,
                    "byte_flag": 2,
                    "byte_value": 2,
                    "byte_var": 7,
                    "constant_value": 1,
                    "flag": 4,
                    "flag26": 1,
                    "is64_bit": 1,
                    "is_linux": 1,
                    "temp_flag": 1,
                    "temp_var26": 1,
                    "temp_var_30": 1,
                    "zero": 1,
                    "zero_byte": 1
                },
                "bVar4": {
                    "bool_var": 1,
                    "boolean_value": 1,
                    "boolean_var": 1,
                    "check_bool": 1,
                    "condition": 8,
                    "flag": 4,
                    "is_condition_met": 3,
                    "is_condition_true": 1,
                    "is_corrupt": 1,
                    "is_equal": 1,
                    "is_true": 1,
                    "is_valid": 4,
                    "temp_var4": 1,
                    "temp_var_3": 1
                },
                "bfd_canonicalize_reloc": {
                    "canonicalize_reloc": 2
                },
                "bfd_get_reloc_upper_bound": {
                    "get_reloc_upper_bound": 1
                },
                "cVar19": {
                    "attr_version": 1,
                    "char_value": 1,
                    "char_var": 12,
                    "character": 3,
                    "character_value": 2,
                    "condition": 2,
                    "name_char": 1,
                    "note_version": 2,
                    "temp_var19": 1,
                    "temp_var_18": 1,
                    "version": 1
                },
                "dcgettext": {
                    "get_text": 1,
                    "translate_message": 1
                },
                "free": {
                    "deallocate_memory": 1,
                    "release_memory": 1
                },
                "iVar21": {
                    "counter": 4,
                    "counter_2": 1,
                    "index2": 1,
                    "int_var2": 1,
                    "integer_value": 1,
                    "integer_var2": 1,
                    "integer_var_2": 1,
                    "iteration": 1,
                    "loop_count": 1,
                    "loop_counter": 3,
                    "loop_counter2": 1,
                    "loop_counter_2": 1,
                    "loop_counter_3": 1,
                    "loop_index": 2,
                    "loop_var": 1,
                    "temp_counter": 1,
                    "temp_var21": 1,
                    "temp_var_21": 1,
                    "var21": 4,
                    "var_21": 1
                },
                "iVar6": {
                    "cmp_result": 1,
                    "compare_result": 1,
                    "comparison_result": 6,
                    "count": 1,
                    "counter": 1,
                    "index": 4,
                    "index_counter": 1,
                    "int_var": 1,
                    "integer_value": 1,
                    "integer_var": 2,
                    "loop_counter": 3,
                    "memcmp_result": 1,
                    "temp_var6": 1,
                    "temp_var_5": 1,
                    "var6": 4,
                    "var_6": 1
                },
                "lVar8": {
                    "buffer_size": 1,
                    "error": 1,
                    "error_buffer_size": 1,
                    "error_code": 3,
                    "error_message_len": 1,
                    "length": 7,
                    "length_value": 1,
                    "length_var": 1,
                    "long_var": 2,
                    "loop_var": 1,
                    "message": 1,
                    "message_length": 2,
                    "result_long": 1,
                    "result_size": 1,
                    "size": 2,
                    "temp_var8": 1,
                    "temp_var_7": 1,
                    "var8": 1,
                    "var_8": 1
                },
                "local_60": {
                    "alloc_ptr": 1,
                    "attr_buffer": 1,
                    "attr_notes_ptr": 1,
                    "attributes_array": 1,
                    "dynamic_array": 1,
                    "local_array": 3,
                    "local_array1": 1,
                    "local_buffer": 1,
                    "local_ptr": 1,
                    "local_ptr60": 2,
                    "local_var60": 1,
                    "local_var_5": 1,
                    "local_var_60": 1,
                    "merged_attributes": 1,
                    "notes": 1,
                    "ptr8": 1,
                    "ptr_array": 1,
                    "reloc_array": 1,
                    "reloc_result": 1,
                    "relocation_buffer": 1,
                    "relocs": 1,
                    "sorted_notes": 1,
                    "temp_buffer_2": 1,
                    "temp_output_array": 1,
                    "temp_ptr": 1,
                    "temp_var_29": 1,
                    "var_local_60": 1
                },
                "local_68": {
                    "adjusted_input_size": 1,
                    "local_value_3": 1,
                    "local_var3": 1,
                    "local_var4": 6,
                    "local_var68": 3,
                    "local_var_4": 2,
                    "local_var_68": 1,
                    "local_variable_4": 1,
                    "merged_size": 1,
                    "new_section_size": 1,
                    "original_function_parameter": 1,
                    "output_size": 2,
                    "remaining_length": 1,
                    "result_len": 1,
                    "result_size": 2,
                    "temp_var_28": 1,
                    "updated_file_size": 1,
                    "var16": 1,
                    "var68": 1,
                    "var_local_68": 1
                },
                "local_70": {
                    "attr_value1_unique": 1,
                    "current_version": 1,
                    "local_temp3": 1,
                    "local_value_2": 1,
                    "local_var2": 1,
                    "local_var3": 6,
                    "local_var70": 3,
                    "local_var_3": 2,
                    "local_var_70": 1,
                    "local_variable_3": 1,
                    "loop_var_2": 1,
                    "non_zero_attr": 1,
                    "note_data3": 1,
                    "note_size": 1,
                    "temp_stack": 1,
                    "temp_value_8": 1,
                    "temp_var_27": 1,
                    "value3": 1,
                    "value_c": 1,
                    "var15": 1,
                    "var70": 1,
                    "var_local_70": 1
                },
                "local_88": {
                    "attr_value1_total": 1,
                    "local_temp1": 1,
                    "local_value_1": 1,
                    "local_var1": 7,
                    "local_var88": 3,
                    "local_var_1": 2,
                    "local_var_88": 1,
                    "local_variable_1": 1,
                    "note_data1": 1,
                    "note_size": 1,
                    "temp_88": 1,
                    "temp_section_size": 1,
                    "temp_value_6": 1,
                    "temp_var_25": 1,
                    "value1": 1,
                    "value_a": 1,
                    "var13": 1,
                    "var88": 1,
                    "var_local_88": 1,
                    "version3_count": 1,
                    "zero_attr": 1
                },
                "param_1": {
                    "file1": 1,
                    "input1": 1,
                    "input_array": 2,
                    "input_data1": 1,
                    "input_param1": 2,
                    "input_param_1": 5,
                    "param1": 1,
                    "param_1": 2,
                    "param_array1": 2,
                    "param_source": 1,
                    "parameter1": 1,
                    "reloc_array_pointer": 1,
                    "reloc_upper_bound": 1,
                    "section1": 1,
                    "section_name": 1,
                    "section_name_ptr": 1,
                    "sections_array": 1,
                    "source_file": 1,
                    "source_section": 3
                },
                "param_2": {
                    "canonicalize_reloc": 1,
                    "destination_section": 2,
                    "file2": 1,
                    "file_name": 1,
                    "input2": 1,
                    "input_array2": 1,
                    "input_data2": 1,
                    "input_param2": 2,
                    "input_param_2": 5,
                    "output_array": 1,
                    "param2": 1,
                    "param_2": 2,
                    "param_array2": 2,
                    "param_destination": 1,
                    "parameter2": 1,
                    "reloc_size_pointer": 1,
                    "section2": 1,
                    "section_name_ptr_2": 1,
                    "sections_name_array": 1,
                    "target_file": 1,
                    "target_section": 1
                },
                "param_3": {
                    "array_size": 1,
                    "attribute_size": 1,
                    "data_size": 1,
                    "file_size": 1,
                    "input_length": 2,
                    "input_param3": 1,
                    "input_param_3": 4,
                    "input_size": 4,
                    "note_size": 1,
                    "param3": 1,
                    "param_3": 1,
                    "param_count": 1,
                    "param_size": 2,
                    "parameter3": 1,
                    "section_size": 4,
                    "sections_size": 1,
                    "size": 1,
                    "total_size": 1
                },
                "param_4": {
                    "attribute_array": 1,
                    "attribute_data": 2,
                    "attribute_notes": 1,
                    "data": 1,
                    "description": 3,
                    "input_param4": 1,
                    "input_param_4": 4,
                    "output": 1,
                    "output_array": 2,
                    "output_buffer": 4,
                    "output_data": 1,
                    "output_param": 1,
                    "param4": 1,
                    "param_4": 1,
                    "param_buffer": 1,
                    "param_data": 1,
                    "parameter4": 1,
                    "result": 1,
                    "section_data_ptr": 1
                },
                "puVar17": {
                    "array_pointer": 1,
                    "array_ptr1": 1,
                    "attr_ptr": 2,
                    "attribute_ptr": 1,
                    "attributes": 1,
                    "attributes_ptr_1": 1,
                    "current_note": 1,
                    "note": 1,
                    "pointer2": 1,
                    "pointer3": 1,
                    "pointer_2": 1,
                    "pointer_var_3": 1,
                    "ptr17": 5,
                    "ptr2": 2,
                    "ptr_17": 1,
                    "ptr_value_3": 1,
                    "ptr_var2": 1,
                    "reloc_ptr": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "temp_ptr1": 2,
                    "temp_ptr17": 1,
                    "temp_var_17": 1
                },
                "puVar18": {
                    "array_ptr2": 1,
                    "attributes_ptr_2": 1,
                    "description_end": 1,
                    "dest_ptr": 1,
                    "name_ptr": 3,
                    "pointer3": 1,
                    "pointer4": 1,
                    "pointer_3": 1,
                    "pointer_var_4": 1,
                    "ptr18": 5,
                    "ptr3": 2,
                    "ptr_18": 1,
                    "ptr_value_4": 1,
                    "ptr_var3": 1,
                    "temp_buffer": 1,
                    "temp_pointer": 1,
                    "temp_pointer1": 1,
                    "temp_ptr": 1,
                    "temp_ptr18": 1,
                    "temp_ptr2": 2,
                    "temp_ptr_2": 1,
                    "temp_var_19": 1
                },
                "puVar20": {
                    "array_ptr3": 1,
                    "byte_pointer": 1,
                    "dest_ptr": 1,
                    "entry_ptr": 1,
                    "next_ptr": 1,
                    "pointer4": 1,
                    "pointer5": 1,
                    "pointer_4": 1,
                    "pointer_var_5": 1,
                    "ptr20": 5,
                    "ptr4": 2,
                    "ptr_20": 1,
                    "ptr_temp": 1,
                    "ptr_value_5": 1,
                    "ptr_var4": 1,
                    "temp_buffer2": 1,
                    "temp_pointer": 1,
                    "temp_pointer2": 1,
                    "temp_ptr": 1,
                    "temp_ptr20": 1,
                    "temp_ptr3": 2,
                    "temp_ptr_1": 1,
                    "temp_ptr_3": 1,
                    "temp_var_20": 1
                },
                "puVar22": {
                    "array_ptr4": 1,
                    "attr_desc_ptr": 1,
                    "attribute_ptr": 1,
                    "buffer_ptr": 2,
                    "current_pos": 1,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "pointer5": 1,
                    "pointer6": 1,
                    "pointer_var_6": 1,
                    "ptr22": 5,
                    "ptr5": 1,
                    "ptr_22": 1,
                    "reloc_data_ptr": 1,
                    "section_data_ptr_2": 1,
                    "temp_pointer": 1,
                    "temp_pointer3": 1,
                    "temp_ptr": 1,
                    "temp_ptr22": 1,
                    "temp_ptr4": 1,
                    "temp_ptr_2": 1,
                    "temp_ptr_4": 1,
                    "temp_var_22": 1
                },
                "puVar23": {
                    "attr_entry": 1,
                    "attr_note_ptr": 1,
                    "attribute_pointer": 1,
                    "attributes_buffer_ptr": 1,
                    "build_attributes": 1,
                    "data_ptr1": 1,
                    "local_ptr": 1,
                    "note_array": 1,
                    "note_buffer": 1,
                    "output_array_pointer": 1,
                    "output_buffer_pointer": 1,
                    "pointer6": 1,
                    "pointer7": 1,
                    "pointer_var_7": 1,
                    "ptr23": 5,
                    "ptr6": 1,
                    "ptr_23": 1,
                    "ptr_array_1": 1,
                    "ptr_var2": 1,
                    "ptr_var5": 1,
                    "realloc_ptr": 1,
                    "reloc_array_ptr": 1,
                    "reloc_entry_ptr": 1,
                    "temp_pointer": 1,
                    "temp_ptr23": 1,
                    "temp_var_32": 1
                },
                "puVar25": {
                    "attr_entry": 1,
                    "attribute_ptr_2": 1,
                    "attributes_temp_ptr": 1,
                    "data_ptr2": 1,
                    "found_attribute": 1,
                    "found_note": 1,
                    "pointer7": 1,
                    "pointer8": 1,
                    "pointer_5": 1,
                    "ptr25": 5,
                    "ptr5": 1,
                    "ptr7": 1,
                    "ptr_25": 1,
                    "ptr_array_2": 1,
                    "ptr_value_6": 1,
                    "ptr_var3": 1,
                    "ptr_var6": 1,
                    "reloc_array_ptr_2": 1,
                    "sorted_ptr": 1,
                    "temp_note_buffer": 1,
                    "temp_pointer": 1,
                    "temp_pointer4": 1,
                    "temp_ptr25": 1,
                    "temp_ptr5": 1,
                    "temp_var_24": 1
                },
                "puVar5": {
                    "current_attribute": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "pointer_1": 1,
                    "pointer_var": 4,
                    "ptr": 4,
                    "ptr1": 2,
                    "ptr5": 4,
                    "ptr_5": 1,
                    "ptr_value": 1,
                    "ptr_var": 1,
                    "ptr_var1": 1,
                    "ptr_var_5": 1,
                    "ptr_variable": 1,
                    "pu_var": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "temp_ptr5": 1,
                    "temp_var_4": 1
                },
                "uStack_80": {
                    "attr_value2_total": 1,
                    "attr_version": 1,
                    "local_temp2": 1,
                    "local_var2": 6,
                    "local_var80": 1,
                    "local_var_2": 2,
                    "local_var_stack_80": 1,
                    "local_variable_2": 1,
                    "note_data2": 1,
                    "note_type": 1,
                    "stack_var1": 1,
                    "stack_var80": 2,
                    "temp_80": 1,
                    "temp_section_size_stack": 1,
                    "temp_value_7": 1,
                    "temp_var_26": 1,
                    "u_stack80": 1,
                    "u_stack_value": 1,
                    "value2": 1,
                    "value_b": 1,
                    "var14": 1,
                    "var_u_stack_80": 1,
                    "version2_count": 1
                },
                "uVar1": {
                    "result": 27,
                    "size": 1,
                    "temp_value": 1,
                    "temp_var1": 1
                },
                "uVar10": {
                    "attr_value1": 1,
                    "note_type": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp_u_var2": 1,
                    "temp_value": 1,
                    "temp_value_2": 3,
                    "temp_var10": 1,
                    "temp_var2": 2,
                    "temp_var_10": 1,
                    "temp_var_3": 1,
                    "temp_var_9": 1,
                    "tmp_var2": 1,
                    "ulong_var_2": 1,
                    "value2": 1,
                    "value_1": 1,
                    "value_2": 1,
                    "var10": 7,
                    "var2": 1,
                    "var5": 1,
                    "var_10": 1
                },
                "uVar11": {
                    "attr_value2": 1,
                    "loop_counter_1": 1,
                    "note_type": 1,
                    "temp2": 2,
                    "temp3": 1,
                    "temp_u_var3": 1,
                    "temp_value": 1,
                    "temp_value_3": 2,
                    "temp_var11": 1,
                    "temp_var3": 2,
                    "temp_var_10": 1,
                    "temp_var_11": 1,
                    "temp_var_4": 1,
                    "tmp_var3": 1,
                    "ulong_var_3": 1,
                    "value3": 1,
                    "value_2": 1,
                    "var11": 7,
                    "var3": 1,
                    "var6": 1,
                    "var_11": 1
                },
                "uVar12": {
                    "attr_size": 1,
                    "desc_size": 1,
                    "description_size": 2,
                    "loop_counter_2": 1,
                    "temp4": 1,
                    "temp_u_var4": 1,
                    "temp_value": 1,
                    "temp_value_1": 1,
                    "temp_value_4": 2,
                    "temp_var12": 1,
                    "temp_var4": 2,
                    "temp_var_11": 1,
                    "temp_var_12": 1,
                    "temp_var_5": 1,
                    "tmp_var4": 1,
                    "ulong_var_4": 1,
                    "value4": 1,
                    "var12": 7,
                    "var4": 1,
                    "var7": 1,
                    "var_12": 1
                },
                "uVar13": {
                    "adjusted_size": 1,
                    "align_size": 1,
                    "aligned_size": 1,
                    "aligned_value_1": 1,
                    "alignment": 1,
                    "attr_name_size_aligned": 1,
                    "rounded_desc_size": 1,
                    "rounded_value": 1,
                    "rounded_value_1": 1,
                    "temp_u_var5": 1,
                    "temp_value": 1,
                    "temp_value_5": 1,
                    "temp_var13": 1,
                    "temp_var5": 2,
                    "temp_var_12": 1,
                    "temp_var_13": 1,
                    "tmp_var5": 1,
                    "ulong_var_5": 1,
                    "value5": 1,
                    "var13": 7,
                    "var5": 1,
                    "var8": 1,
                    "var_13": 1
                },
                "uVar14": {
                    "attr_value2_": 1,
                    "temp3": 2,
                    "temp5": 1,
                    "temp_u_var6": 1,
                    "temp_value": 1,
                    "temp_value_2": 1,
                    "temp_value_3": 1,
                    "temp_value_5": 1,
                    "temp_value_6": 1,
                    "temp_var14": 1,
                    "temp_var6": 2,
                    "temp_var_13": 1,
                    "temp_var_14": 1,
                    "temp_var_6": 1,
                    "temporary_value": 1,
                    "tmp_var6": 1,
                    "ulong_var_6": 1,
                    "value6": 1,
                    "var14": 7,
                    "var6": 1,
                    "var9": 1,
                    "var_14": 1
                },
                "uVar15": {
                    "attr_value1_": 1,
                    "temp4": 2,
                    "temp6": 1,
                    "temp_u_var7": 1,
                    "temp_value": 1,
                    "temp_value_3": 1,
                    "temp_value_4": 1,
                    "temp_value_6": 1,
                    "temp_value_7": 1,
                    "temp_var15": 1,
                    "temp_var7": 2,
                    "temp_var_14": 1,
                    "temp_var_15": 1,
                    "temp_var_7": 1,
                    "tmp_var7": 1,
                    "ulong_var_7": 1,
                    "value7": 1,
                    "value_3": 1,
                    "var10": 1,
                    "var15": 7,
                    "var7": 1,
                    "var_15": 1
                },
                "uVar16": {
                    "remaining_size": 3,
                    "temp5": 1,
                    "temp7": 1,
                    "temp_size": 1,
                    "temp_u_var8": 1,
                    "temp_value": 1,
                    "temp_value_4": 1,
                    "temp_value_7": 1,
                    "temp_value_8": 1,
                    "temp_var16": 1,
                    "temp_var8": 2,
                    "temp_var_15": 1,
                    "temp_var_16": 1,
                    "temp_var_8": 1,
                    "tmp_var8": 1,
                    "ulong_var_8": 1,
                    "value8": 1,
                    "var11": 1,
                    "var16": 7,
                    "var8": 1,
                    "var_16": 1
                },
                "uVar2": {
                    "file1_ptr": 1,
                    "input_var1": 1,
                    "param1": 1,
                    "param1_value": 1,
                    "param_1_copy": 1,
                    "param_1_value": 2,
                    "param_1_var": 1,
                    "param_array1_val": 1,
                    "section": 1,
                    "section1_ptr": 1,
                    "section_entry": 1,
                    "source": 1,
                    "source_param1": 1,
                    "source_pointer": 1,
                    "source_section_value": 1,
                    "temp_value": 1,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "temp_var_1": 2,
                    "var1": 1,
                    "var2": 6,
                    "var_2": 2
                },
                "uVar24": {
                    "attr_size": 1,
                    "attr_size2": 1,
                    "temp6": 1,
                    "temp8": 1,
                    "temp_u_var9": 1,
                    "temp_value": 2,
                    "temp_value_5": 2,
                    "temp_value_9": 1,
                    "temp_var24": 1,
                    "temp_var9": 2,
                    "temp_var_16": 1,
                    "temp_var_24": 1,
                    "temp_var_9": 1,
                    "ulong_var_9": 1,
                    "value9": 1,
                    "var12": 1,
                    "var24": 7,
                    "var9": 1,
                    "var_24": 1
                },
                "uVar26": {
                    "byte_var": 1
                },
                "uVar3": {
                    "destination": 1,
                    "destination_section_value": 1,
                    "file": 1,
                    "file2_ptr": 1,
                    "input_var2": 1,
                    "param2": 1,
                    "param2_value": 1,
                    "param_2_copy": 1,
                    "param_2_value": 2,
                    "param_2_var": 1,
                    "param_array2_val": 1,
                    "section2_ptr": 1,
                    "section_name_entry": 1,
                    "source_param2": 1,
                    "target_pointer": 1,
                    "temp_value": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var_2": 2,
                    "var2": 1,
                    "var3": 6,
                    "var_3": 2
                },
                "uVar4": {
                    "flag": 1
                },
                "uVar5": {
                    "ptr1": 1
                },
                "uVar7": {
                    "error_message": 9,
                    "error_msg": 1,
                    "error_var": 1,
                    "message": 2,
                    "param_3_var": 1,
                    "string_var": 1,
                    "temp_value": 1,
                    "temp_var3": 1,
                    "temp_var7": 1,
                    "temp_var_6": 1,
                    "var3": 1,
                    "var7": 6,
                    "var_7": 2,
                    "warning_message": 2
                },
                "uVar9": {
                    "attribute_size_aligned": 1,
                    "size_value": 1,
                    "size_var_1": 1,
                    "temp1": 2,
                    "temp_size": 1,
                    "temp_u_var1": 1,
                    "temp_value": 2,
                    "temp_value_1": 2,
                    "temp_var1": 2,
                    "temp_var9": 1,
                    "temp_var_8": 1,
                    "temp_var_9": 1,
                    "tmp_var1": 1,
                    "ulong_var_1": 1,
                    "value1": 1,
                    "value_1": 1,
                    "var1": 1,
                    "var4": 1,
                    "var9": 7,
                    "var_9": 1
                },
                "xcalloc": {
                    "allocate_memory": 2
                },
                "xmalloc": {
                    "allocate_memory": 1,
                    "allocate_memory2": 1
                }
            },
            "called": [
                "dcgettext",
                "bfd_get_reloc_upper_bound",
                "xcalloc",
                "FUN_00119ed0",
                "bfd_canonicalize_reloc",
                "free",
                "xmalloc"
            ],
            "calling": [
                "FUN_00107880"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x001166ef) */\n/* WARNING: Removing unreachable block (ram,0x001166df) */\n/* WARNING: Removing unreachable block (ram,0x001166d7) */\n/* WARNING: Removing unreachable block (ram,0x001166ea) */\n/* WARNING: Removing unreachable block (ram,0x00116716) */\n/* WARNING: Removing unreachable block (ram,0x0010858b) */\n\n\nulong process_gnu_build_attributes_001163d0(undefined8 *input_param_1,undefined8 *input_param_2,ulong input_size,undefined *output_buffer)\n\n{\n  ulong result;\n  undefined8 var2;\n  undefined8 var3;\n  bool condition;\n  ulong *pointer_var;\n  int comparison_result;\n  undefined8 error_message;\n  long length;\n  void *temp_ptr;\n  ulong var9;\n  ulong var10;\n  ulong var11;\n  ulong var12;\n  undefined *temp_ptr_2;\n  ulong var13;\n  ulong var14;\n  ulong var15;\n  ulong var16;\n  ulong *ptr17;\n  undefined *ptr18;\n  char char_var;\n  undefined *ptr20;\n  int counter;\n  undefined *ptr22;\n  ulong *ptr23;\n  ulong var24;\n  size_t num_elements;\n  ulong *ptr25;\n  byte byte_var;\n  ulong local_var1;\n  ulong local_var2;\n  ulong local_var3;\n  ulong local_var4;\n  ulong *local_array;\n  \n  byte_var = 0;\n  length = bfd_get_reloc_upper_bound();\n  local_var4 = input_size;\n  if (0 < length) {\n    temp_ptr = (void *)xcalloc(length);\n    length = bfd_canonicalize_reloc(input_param_1,input_param_2,temp_ptr,DAT_001278b0);\n    free(temp_ptr);\n    if (length != 0) {\n      if (_DAT_00127a24 == 0) {\n        var2 = *input_param_1;\n        var3 = *input_param_2;\n        error_message = dcgettext(0,\"%s[%s]: Cannot merge - there are relocations against this section\",5);\n        FUN_00119ed0(error_message,var2,var3);\n      }\n      local_array = (ulong *)0x0;\n      goto LAB_001166f8;\n    }\n  }\n  local_array = (ulong *)xmalloc(input_size / 0xc,0x48,input_size % 0xc);\n  local_var1 = 0;\n  local_var3 = 0;\n  var16 = input_size;\n  var15 = 0;\n  ptr23 = local_array;\n  var14 = 0;\n  ptr22 = output_buffer;\n  while (0xb < var16) {\n    var10 = (**(code **)(input_param_1[1] + 0x40))(ptr22);\n    *ptr23 = var10;\n    var10 = (**(code **)(input_param_1[1] + 0x40))(ptr22 + 4);\n    ptr23[1] = var10;\n    var11 = (**(code **)(input_param_1[1] + 0x40))(ptr22 + 8);\n    var10 = *ptr23;\n    ptr23[2] = var11;\n    var12 = ptr23[1];\n    var13 = var10 + 3 & 0xfffffffffffffffc;\n    ptr23[6] = var13;\n    if (var12 != (var12 + 3 & 0xfffffffffffffffc)) {\n      length = dcgettext(0,\"corrupt GNU build attribute note: description size not a factor of 4\",5);\n      goto LAB_0010849a;\n    }\n    if (1 < var11 - 0x100) {\n      length = dcgettext(0,\"corrupt GNU build attribute note: wrong note type\",5);\n      goto LAB_0010849a;\n    }\n    result = var13 + var12 + 0xc;\n    if (var16 < result) {\n      length = dcgettext(0,\"corrupt GNU build attribute note: note too big\",5);\n      goto LAB_0010849a;\n    }\n    if (var10 < 2) {\n      length = dcgettext(0,\"corrupt GNU build attribute note: name too small\",5);\n      goto LAB_0010849a;\n    }\n    ptr23[3] = (ulong)(ptr22 + 0xc);\n    ptr23[4] = (ulong)(ptr22 + var13 + 0xc);\n    var16 = var16 + (-0xc - (var13 + var12));\n    if (var10 != 2) {\n      if (ptr22[0xc] == '$') {\n        if ((ptr22[0xd] == '\\x01') && (ptr22[0xe] == '1')) {\n          var16 = FUN_00116490();\n          return var16;\n        }\n      }\n      else if ((((4 < var10) && (ptr22[0xc] == 'G')) && (ptr22[0xd] == 'A')) &&\n              ((ptr22[0xe] == '$' && (ptr22[0xf] == '\\x01')))) {\n        if (ptr22[0x10] == '2') {\n          var16 = FUN_00116490();\n          return var16;\n        }\n        if (ptr22[0x10] == '3') {\n          var16 = FUN_00116490();\n          return var16;\n        }\n        length = dcgettext(0,\"corrupt GNU build attribute note: unsupported version\",5);\n        goto LAB_0010849a;\n      }\n    }\n    var9 = var15;\n    var24 = var14;\n    if (var12 == 0) {\n      if (var11 == 0x100) {\n        ptr23[7] = local_var1;\nLAB_001164af:\n        var12 = var14;\n        var24 = var14;\n      }\n      else {\n        ptr23[7] = local_var3;\nLAB_0011669e:\n        var9 = var15;\n        var12 = var15;\n      }\n    }\n    else {\n      if (var12 != 0x10) {\n        if (var12 < 0x11) {\n          if (var12 == 4) {\n            var11 = (**(code **)(input_param_1[1] + 0x40))();\n            var12 = 0xffffffffffffffff;\n            goto LAB_00116631;\n          }\n          if (var12 == 8) {\n            var16 = FUN_001086af();\n            return var16;\n          }\n        }\n        length = dcgettext(0,\"corrupt GNU build attribute note: bad description size\",5);\n        goto LAB_0010849a;\n      }\n      var11 = (**(code **)(input_param_1[1] + 0x28))(ptr22 + var13 + 0xc);\n      var12 = (**(code **)(input_param_1[1] + 0x28))();\n      if (var12 < var11) {\n        var11 = var12;\n      }\nLAB_00116631:\n      if (ptr23[2] == 0x100) {\n        if (var11 == 0) {\n          var11 = local_var1;\n        }\n        var10 = *ptr23;\n        ptr23[7] = var11;\n        var24 = var12;\n        local_var1 = var11;\n        if (var12 == 0) goto LAB_001164af;\n      }\n      else {\n        if (var11 == 0) {\n          var11 = local_var3;\n        }\n        var10 = *ptr23;\n        ptr23[7] = var11;\n        var9 = var12;\n        local_var3 = var11;\n        if (var12 == 0) goto LAB_0011669e;\n      }\n    }\n    ptr23[8] = var12;\n    if (*(char *)((ptr23[3] - 1) + var10) != '\\0') {\n      length = dcgettext(0,\"corrupt GNU build attribute note: name not NUL terminated\",5);\n      goto LAB_0010849a;\n    }\n    ptr23 = ptr23 + 9;\n    var15 = var9;\n    var14 = var24;\n    ptr22 = ptr22 + result;\n  }\n  if (var16 == 0) {\n    var2 = *input_param_1;\n    var3 = *input_param_2;\n    error_message = dcgettext(0,\"%s[%s]: Warning: version note missing - assuming version 3\",5);\n    FUN_00119ed0(error_message,var2,var3);\n    num_elements = ((long)ptr23 - (long)local_array >> 3) * -0x71c71c71c71c71c7;\n    qsort(local_array,num_elements,0x48,FUN_0011a1b0);\n    for (ptr17 = local_array; ptr17 < ptr23; ptr17 = ptr17 + 9) {\n      var16 = ptr17[2];\n      if (var16 != 0) {\n        var15 = ptr17[7];\n        var14 = ptr17[8];\n        ptr25 = ptr17;\n        counter = 0;\n        if (var15 == var14) {\n          ptr17[2] = 0;\n        }\n        else {\n          do {\n            do {\n              pointer_var = ptr25;\n              ptr25 = pointer_var + -9;\n              if (ptr25 < local_array) goto LAB_001167f5;\n              var10 = pointer_var[-7];\n            } while (var10 == 0);\n            if ((*ptr25 != *ptr17) ||\n               (comparison_result = memcmp((void *)pointer_var[-6],(void *)ptr17[3],*ptr17), comparison_result != 0)) break;\n            var12 = pointer_var[-2];\n            var11 = pointer_var[-1];\n            if (var15 == var12) {\n              if (var14 == var11) {\n                ptr17[2] = 0;\n                break;\n              }\nLAB_001167a6:\n              if (var14 <= var11) {\n                ptr17[2] = 0;\n                break;\n              }\n              if (var11 < var15) {\nLAB_0010852c:\n                if ((0xfffffffffffffff0 < var11) || (var15 <= (var11 + 0xf & 0xfffffffffffffff0))\n                   ) goto FUN_00116852;\n              }\nLAB_001167b8:\n              if ((var16 == 0x101) == (var10 == 0x101)) {\n                if (var11 <= var14) {\n                  var11 = var14;\n                }\n                if (var12 < var15) {\n                  var15 = var12;\n                }\n                pointer_var[-1] = var11;\n                pointer_var[-2] = var15;\n                ptr17[2] = 0;\n                break;\n              }\n            }\n            else {\n              if (var12 <= var15) goto LAB_001167a6;\n              if (var11 < var15) goto LAB_0010852c;\n              if (var14 < var15) {\n                if ((0xfffffffffffffff0 < var14) || (var12 <= (var14 + 0xf & 0xfffffffffffffff0))\n                   ) goto FUN_00116852;\n                goto LAB_001167b8;\n              }\n              if (var14 != var11) goto LAB_001167b8;\n            }\nFUN_00116852:\n            condition = counter < 0x11;\n            counter = counter + 1;\n          } while (condition);\n        }\n      }\nLAB_001167f5:\n    }\n    qsort(local_array,num_elements,0x48,FUN_0011a250);\n    temp_ptr_2 = (undefined *)allocate_memory(input_size * 2);\n    local_var2 = 0;\n    local_var3 = 0;\n    ptr22 = temp_ptr_2;\n    for (ptr17 = local_array; ptr17 < ptr23; ptr17 = ptr17 + 9) {\n      if (ptr17[2] != 0) {\n        ptr18 = ptr22 + 0xc;\n        if ((ptr17[7] == local_var3) && (ptr17[8] == local_var2)) {\n          (**(code **)(input_param_1[1] + 0x50))(*ptr17,ptr22);\n          (**(code **)(input_param_1[1] + 0x50))(0,ptr22 + 4);\n          (**(code **)(input_param_1[1] + 0x50))(ptr17[2],ptr22 + 8);\n          var15 = ptr17[6];\n          var16 = *ptr17;\n          ptr22 = (undefined *)ptr17[3];\n          ptr20 = ptr18;\n          for (var14 = var16; var14 != 0; var14 = var14 - 1) {\n            *ptr20 = *ptr22;\n            ptr22 = ptr22 + (ulong)byte_var * -2 + 1;\n            ptr20 = ptr20 + (ulong)byte_var * -2 + 1;\n          }\n          if (var16 < var15) {\n            for (length = var15 - var16; length != 0; length = length + -1) {\n              *ptr20 = 0;\n              ptr20 = ptr20 + (ulong)byte_var * -2 + 1;\n            }\n          }\n          ptr22 = ptr18 + var15;\n        }\n        else {\n          (**(code **)(input_param_1[1] + 0x50))();\n          if (*(int *)(input_param_1[1] + 8) == 5) {\n            char_var = (*(char *)(input_param_1[0x22] + 4) == '\\x02') * '\\b' + '\\b';\n          }\n          else {\n            char_var = '\\b';\n          }\n          (**(code **)(input_param_1[1] + 0x50))(char_var,ptr22 + 4);\n          (**(code **)(input_param_1[1] + 0x50))(ptr17[2],ptr22 + 8);\n          var16 = *ptr17;\n          ptr22 = (undefined *)ptr17[3];\n          ptr20 = ptr18;\n          for (var15 = var16; var15 != 0; var15 = var15 - 1) {\n            *ptr20 = *ptr22;\n            ptr22 = ptr22 + (ulong)byte_var * -2 + 1;\n            ptr20 = ptr20 + (ulong)byte_var * -2 + 1;\n          }\n          var15 = ptr17[6];\n          if (var16 < var15) {\n            for (length = var15 - var16; length != 0; length = length + -1) {\n              *ptr20 = 0;\n              ptr20 = ptr20 + (ulong)byte_var * -2 + 1;\n            }\n          }\n          length = input_param_1[1];\n          ptr18 = ptr18 + var15;\n          ptr22 = ptr18 + 8;\n          if ((*(int *)(length + 8) == 5) && (*(char *)(input_param_1[0x22] + 4) == '\\x02')) {\n            (**(code **)(length + 0x38))(ptr17[7],ptr18);\n            (**(code **)(input_param_1[1] + 0x38))(ptr17[8],ptr22);\n            ptr22 = ptr18 + 0x10;\n          }\n          else {\n            (**(code **)(length + 0x50))(ptr17[7],ptr18);\n            (**(code **)(input_param_1[1] + 0x50))(ptr17[8],ptr18 + 4);\n          }\n          local_var3 = ptr17[7];\n          local_var2 = ptr17[8];\n        }\n      }\n    }\n    var15 = (long)ptr22 - (long)temp_ptr_2;\n    var16 = var15;\n    ptr22 = temp_ptr_2;\n    local_var4 = input_size;\n    if (var15 < input_size) {\n      for (; local_var4 = var15, var16 != 0; var16 = var16 - 1) {\n        *output_buffer = *ptr22;\n        ptr22 = ptr22 + (ulong)byte_var * -2 + 1;\n        output_buffer = output_buffer + (ulong)byte_var * -2 + 1;\n      }\n    }\n    free(temp_ptr_2);\n  }\n  else {\n    length = dcgettext(0,\"corrupt GNU build attribute notes: excess data at end\",5);\nLAB_0010849a:\n    if (length != 0) {\n      bfd_set_error(0x11);\n      FUN_001126c0(0,input_param_1,input_param_2,length);\n      DAT_00127a20 = 1;\n    }\n  }\nLAB_001166f8:\n  free(local_array);\n  return local_var4;\n}\n\n",
            "current_name": "process_gnu_build_attributes_001163d0",
            "entrypoint": "0x001163d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001163d0": "process_gnu_build_attributes_001163d0",
                "__nmemb": "num_elements",
                "__ptr": "temp_ptr",
                "__ptr_00": "temp_ptr_2",
                "bVar26": "byte_var",
                "bVar4": "condition",
                "bfd_canonicalize_reloc": "canonicalize_reloc",
                "bfd_get_reloc_upper_bound": "get_reloc_upper_bound",
                "cVar19": "char_var",
                "dcgettext": "translate_message",
                "free": "release_memory",
                "iVar21": "counter",
                "iVar6": "comparison_result",
                "lVar8": "length",
                "local_60": "local_array",
                "local_68": "local_var4",
                "local_70": "local_var3",
                "local_88": "local_var1",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_size",
                "param_4": "output_buffer",
                "puVar17": "ptr17",
                "puVar18": "ptr18",
                "puVar20": "ptr20",
                "puVar22": "ptr22",
                "puVar23": "ptr23",
                "puVar25": "ptr25",
                "puVar5": "pointer_var",
                "uStack_80": "local_var2",
                "uVar1": "result",
                "uVar10": "var10",
                "uVar11": "var11",
                "uVar12": "var12",
                "uVar13": "var13",
                "uVar14": "var14",
                "uVar15": "var15",
                "uVar16": "var16",
                "uVar2": "var2",
                "uVar24": "var24",
                "uVar3": "var3",
                "uVar5": "ptr1",
                "uVar7": "error_message",
                "uVar9": "var9",
                "xcalloc": "allocate_memory",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00116490": {
            "additional_data": {
                "FUN_001086af": {
                    "reverse_bits": 1
                },
                "FUN_00116490": {
                    "greatest_common_divisor": 1,
                    "parse_build_attribute_notes": 1,
                    "process_build_attribute_note": 1
                },
                "__nmemb": {
                    "array_size": 1,
                    "count": 1,
                    "data_size": 1,
                    "loop_counter": 1,
                    "nmemb": 5,
                    "nmemb_size": 1,
                    "nmemb_var": 1,
                    "num_attributes": 1,
                    "num_elements": 3,
                    "num_members": 1,
                    "num_notes": 2,
                    "number_of_attributes": 1,
                    "number_of_members": 1,
                    "size": 1,
                    "size2": 2,
                    "size_var": 1,
                    "sizeof_array": 1,
                    "var_7": 1
                },
                "__ptr": {
                    "attribute_data": 1,
                    "buffer": 5,
                    "description": 1,
                    "dynamic_array": 1,
                    "dynamic_memory": 5,
                    "pointer_var": 1,
                    "ptr": 3,
                    "ptr8": 1,
                    "ptr_var": 5,
                    "ptr_var2": 1,
                    "result_ptr": 1,
                    "temp_pointer": 1
                },
                "bVar21": {
                    "boolean_var": 1,
                    "byte": 1,
                    "byte_val": 1,
                    "byte_value": 1,
                    "byte_var": 13,
                    "byte_var21": 2,
                    "increment_value": 1,
                    "is_gzip_mode": 1,
                    "overflow_flag": 1,
                    "temp_byte": 3,
                    "var21": 1
                },
                "bVar4": {
                    "b_var4": 1,
                    "bool_flag": 2,
                    "bool_var": 4,
                    "boolean_var": 1,
                    "check_var": 1,
                    "flag": 10,
                    "is_condition_true": 1,
                    "is_corrupt": 1,
                    "is_less_than": 1,
                    "is_note_complete": 1,
                    "is_true": 3,
                    "valid": 1,
                    "var4": 1
                },
                "cVar16": {
                    "c": 1,
                    "c_var16": 1,
                    "char1": 1,
                    "char_var": 14,
                    "char_var16": 2,
                    "character": 1,
                    "character_var": 1,
                    "condition_var": 1,
                    "note_type_char": 1,
                    "temp_char": 2,
                    "var16": 1,
                    "version": 2
                },
                "dcgettext": {
                    "get_string": 1
                },
                "iVar22": {
                    "counter2": 2,
                    "i_var22": 2,
                    "index2": 1,
                    "index_var2": 2,
                    "int_var": 1,
                    "int_var1": 1,
                    "int_var2": 7,
                    "int_var22": 1,
                    "int_var_2": 1,
                    "iter_var2": 1,
                    "loop_counter": 1,
                    "loop_variable2": 1,
                    "temp_index": 1,
                    "temp_int": 3,
                    "var22": 1,
                    "variable7": 1
                },
                "iVar6": {
                    "compare_result": 1,
                    "counter": 2,
                    "i": 1,
                    "i_var": 1,
                    "i_var6": 1,
                    "index": 5,
                    "index_var": 2,
                    "int_var": 8,
                    "int_var1": 1,
                    "int_var6": 1,
                    "iter_var": 1,
                    "loop_variable": 1,
                    "memcmp_result": 1,
                    "var6": 1,
                    "variable6": 1
                },
                "in_R11": {
                    "address2": 1,
                    "arg_6": 1,
                    "attribute_data": 1,
                    "current_offset": 1,
                    "description": 1,
                    "description_size": 3,
                    "in_r11": 2,
                    "in_reg11": 1,
                    "in_var2": 1,
                    "length2": 1,
                    "loop_register2": 1,
                    "name_ptr": 1,
                    "name_size": 1,
                    "param_6": 1,
                    "r11_value": 1,
                    "reg_val3": 1,
                    "register4": 1,
                    "register_r11": 1,
                    "temp_value": 1,
                    "value13": 1,
                    "value_in_r11": 1,
                    "value_of_r11": 1,
                    "var_in_r11": 1
                },
                "in_RAX": {
                    "arg_5": 1,
                    "attr_note_type": 1,
                    "build_note_type": 1,
                    "flag": 1,
                    "in_rax": 2,
                    "in_reg_ax": 1,
                    "in_var1": 1,
                    "note_type": 5,
                    "note_version": 1,
                    "param_5": 1,
                    "rax_value": 1,
                    "register1": 1,
                    "register_ax": 1,
                    "temp_register1": 1,
                    "type": 3,
                    "val1": 1,
                    "value5": 1,
                    "value_in_rax": 2,
                    "var_in_rax": 1,
                    "version": 1
                },
                "in_stack_00000020": {
                    "buffer_size": 3,
                    "final_output_size": 1,
                    "in_stack20": 1,
                    "local_variable": 1,
                    "max_description_length": 1,
                    "memory_size": 1,
                    "output": 1,
                    "output_size": 3,
                    "param_10": 2,
                    "result_size": 1,
                    "size": 1,
                    "stack_val1": 1,
                    "stack_value1": 2,
                    "stack_var1": 6,
                    "stack_var2": 1,
                    "temp_stack_data": 1,
                    "temp_value3": 1,
                    "var1": 1,
                    "var_8": 1,
                    "var_in_stack00000020": 1
                },
                "in_stack_00000028": {
                    "array": 1,
                    "array_pointer": 1,
                    "attribute_array": 1,
                    "in_stack28": 1,
                    "local_array1": 1,
                    "note_array": 1,
                    "note_data_ptr": 1,
                    "note_sorted": 1,
                    "notes": 3,
                    "notes_array": 1,
                    "notes_array_copy": 1,
                    "param_11": 1,
                    "ptr_var11": 1,
                    "ptr_var7": 1,
                    "ptr_var_in_stack00000028": 1,
                    "sorted_attributes": 1,
                    "stack_pointer1": 1,
                    "stack_ptr": 1,
                    "stack_ptr1": 1,
                    "stack_value2": 1,
                    "stack_var2": 5,
                    "stack_var3": 1,
                    "stack_var_1": 1,
                    "temp_ptr_4": 1,
                    "temp_stack_pointer": 1
                },
                "in_stack_00000030": {
                    "attribute_name_ptr": 1,
                    "desc_buffer": 1,
                    "in_stack30": 1,
                    "in_stack_ptr_var": 1,
                    "local_pointer": 1,
                    "note_buffer": 1,
                    "output": 2,
                    "output_buffer": 2,
                    "output_string": 1,
                    "param_12": 1,
                    "ptr_var12": 1,
                    "ptr_var_in_stack00000030": 1,
                    "result_data": 1,
                    "stack_pointer2": 1,
                    "stack_ptr2": 2,
                    "stack_value3": 1,
                    "stack_var": 1,
                    "stack_var3": 5,
                    "stack_var_2": 1,
                    "temp_buffer_pointer": 1,
                    "temp_pointer": 1,
                    "temp_ptr5": 1,
                    "temp_ptr_5": 1,
                    "temp_stack_pointer2": 1
                },
                "in_stack_00000038": {
                    "flag2": 1,
                    "flag3": 2,
                    "flag_3": 1,
                    "has_name_note": 1,
                    "has_version_note": 2,
                    "in_stack38": 1,
                    "in_stack_arg": 1,
                    "local_variable": 1,
                    "multiple_versions": 1,
                    "param_13": 1,
                    "stack_flag1": 1,
                    "stack_val2": 1,
                    "stack_value2": 1,
                    "stack_value4": 1,
                    "stack_var4": 4,
                    "stack_var_3": 1,
                    "temp_stack_value": 1,
                    "temp_uint1": 1,
                    "type_flag": 1,
                    "var1": 1,
                    "var2": 1,
                    "var_in_stack00000038": 1,
                    "version2_present": 1,
                    "version_note_missing": 1,
                    "version_present": 1
                },
                "in_stack_00000040": {
                    "excess_data": 1,
                    "flag3": 1,
                    "flag4": 2,
                    "flag_4": 1,
                    "has_attribute_notes": 1,
                    "has_data_note": 1,
                    "has_no_version_note": 1,
                    "in_stack40": 1,
                    "in_stack_arg": 1,
                    "local_variable": 1,
                    "note_type_present": 1,
                    "param_14": 1,
                    "size_flag": 1,
                    "stack_flag2": 1,
                    "stack_val3": 1,
                    "stack_value3": 1,
                    "stack_value5": 1,
                    "stack_var5": 4,
                    "stack_var_4": 1,
                    "temp_stack_value2": 1,
                    "temp_uint2": 1,
                    "var2": 1,
                    "var3": 1,
                    "var_in_stack00000040": 1,
                    "version1_present": 1,
                    "version_note_missing": 1
                },
                "in_stack_00000048": {
                    "arg2": 1,
                    "data": 1,
                    "error_handler": 1,
                    "function_pointer": 1,
                    "in_stack48": 1,
                    "in_stack_ptr_var1": 1,
                    "local_pointer": 1,
                    "message": 3,
                    "message_ptr": 1,
                    "param_15": 1,
                    "ptr_var13": 1,
                    "ptr_var_in_stack00000048": 1,
                    "stack_param": 1,
                    "stack_pointer3": 1,
                    "stack_ptr3": 2,
                    "stack_value6": 1,
                    "stack_var4": 1,
                    "stack_var6": 4,
                    "stack_var_5": 1,
                    "temp_ptr6": 1,
                    "temp_ptr_6": 1,
                    "temp_stack_pointer3": 1,
                    "warning_message": 1,
                    "warning_message_ptr": 1,
                    "warnings": 1
                },
                "lVar7": {
                    "data_ptr": 1,
                    "error_msg": 1,
                    "index": 1,
                    "length": 3,
                    "length_var": 1,
                    "long_var": 7,
                    "long_var7": 1,
                    "loop_var": 3,
                    "output_var": 1,
                    "result": 4,
                    "result_length": 1,
                    "temp": 1,
                    "temp_long": 1,
                    "temp_var": 1,
                    "var7": 2
                },
                "param_1": {
                    "arg1": 5,
                    "arg_1": 1,
                    "argument1": 1,
                    "input1": 1,
                    "input_param": 1,
                    "input_parameter": 1,
                    "num1": 1,
                    "param": 1,
                    "param1": 12,
                    "param_1": 5,
                    "param_pointer": 1,
                    "param_unused": 1
                },
                "param_2": {
                    "arg2": 3,
                    "arg_2": 1,
                    "array_size": 1,
                    "attribute_note": 1,
                    "attribute_note_size": 1,
                    "attribute_note_type": 1,
                    "attribute_size": 1,
                    "note_size": 1,
                    "num2": 1,
                    "num_attributes": 1,
                    "param2": 10,
                    "param_size": 1,
                    "size": 7,
                    "size_of_param": 1
                },
                "param_3": {
                    "arg3": 3,
                    "arg_3": 1,
                    "array_data": 1,
                    "attrib_name": 1,
                    "attribute": 1,
                    "attribute_note": 1,
                    "attribute_note_name": 1,
                    "attribute_notes": 1,
                    "data": 1,
                    "name": 3,
                    "note": 2,
                    "note_name": 4,
                    "param3": 10,
                    "str": 1
                },
                "param_4": {
                    "arg4": 3,
                    "arg_4": 1,
                    "array_index": 1,
                    "attrib_description": 1,
                    "attribute_data_size": 1,
                    "count": 1,
                    "data_pointer": 1,
                    "description_index": 1,
                    "length": 5,
                    "length_attribute_data": 1,
                    "note_data": 2,
                    "note_description": 1,
                    "num_bytes": 1,
                    "param4": 10,
                    "size_t": 1
                },
                "param_7": {
                    "arg5": 2,
                    "arg7": 1,
                    "arg_7": 1,
                    "attribs_count": 1,
                    "final_data_size": 1,
                    "note_version": 1,
                    "output_param": 1,
                    "output_size": 2,
                    "param": 1,
                    "param7": 10,
                    "param_7": 1,
                    "param_value": 1,
                    "result": 2,
                    "result10": 1,
                    "result_size": 1,
                    "return_value1": 1,
                    "value7": 1
                },
                "param_8": {
                    "arg6": 2,
                    "arg8": 1,
                    "arg_8": 1,
                    "flag": 1,
                    "flag1": 1,
                    "flag2": 2,
                    "flag_2": 1,
                    "has_version_note": 1,
                    "missing_version_note": 1,
                    "param8": 11,
                    "param_8": 2,
                    "param_type": 1,
                    "param_value2": 1,
                    "parameter_flag1": 1,
                    "value8": 1,
                    "version1": 1,
                    "version_note_missing": 1
                },
                "param_9": {
                    "arg7": 2,
                    "arg9": 1,
                    "arg_9": 1,
                    "base_address": 1,
                    "default_version": 1,
                    "default_version_note": 1,
                    "note_address": 1,
                    "output": 1,
                    "param9": 10,
                    "param_9": 1,
                    "param_size": 1,
                    "param_value3": 1,
                    "parameter_flag2": 1,
                    "start_addr_2": 1,
                    "temp_value8": 1,
                    "val": 1,
                    "value9": 1,
                    "version2": 1,
                    "version_note_result": 1
                },
                "puVa18": {
                    "ptr4": 1
                },
                "puVar14": {
                    "array_ptr": 1,
                    "attributes": 1,
                    "current_note_ptr": 1,
                    "data_pointer": 1,
                    "note": 1,
                    "note_ptr": 1,
                    "notes_array": 1,
                    "pointer1": 1,
                    "pointer2": 1,
                    "pointer_var14": 1,
                    "pointer_var2": 4,
                    "ptr2": 3,
                    "ptr_var1": 2,
                    "ptr_var14": 2,
                    "ptr_var2": 3,
                    "ptr_var3": 2,
                    "ptr_var_2": 1,
                    "var_ptr2": 1
                },
                "puVar15": {
                    "current_attribute": 1,
                    "desc": 1,
                    "name_ptr": 1,
                    "new_data_pointer": 1,
                    "pointer2": 1,
                    "pointer3": 1,
                    "pointer_var15": 1,
                    "pointer_var3": 4,
                    "ptr2": 1,
                    "ptr3": 1,
                    "ptr_var15": 2,
                    "ptr_var2": 2,
                    "ptr_var3": 3,
                    "ptr_var4": 2,
                    "ptr_var_3": 1,
                    "temp_ptr1": 2,
                    "var_ptr3": 1
                },
                "puVar17": {
                    "desc_ptr": 1,
                    "pointer3": 1,
                    "pointer4": 1,
                    "pointer_var17": 1,
                    "pointer_var4": 4,
                    "ptr3": 2,
                    "ptr4": 1,
                    "ptr_1": 1,
                    "ptr_var17": 2,
                    "ptr_var3": 2,
                    "ptr_var4": 3,
                    "ptr_var5": 1,
                    "ptr_var_4": 1,
                    "temp_pointer": 1,
                    "temp_ptr1": 2,
                    "temp_ptr2": 2,
                    "var_ptr4": 1
                },
                "puVar18": {
                    "pointer4": 1,
                    "pointer5": 1,
                    "pointer_var18": 1,
                    "pointer_var5": 4,
                    "ptr4": 1,
                    "ptr5": 1,
                    "ptr_2": 1,
                    "ptr_var18": 2,
                    "ptr_var4": 2,
                    "ptr_var5": 3,
                    "ptr_var6": 1,
                    "ptr_var_5": 1,
                    "str_ptr": 1,
                    "temp_pointer2": 1,
                    "temp_ptr2": 2,
                    "temp_ptr3": 2,
                    "var_ptr5": 1
                },
                "puVar19": {
                    "attrib_ptr": 1,
                    "attribute_pointer2": 1,
                    "current_note": 1,
                    "note_array": 1,
                    "pointer5": 1,
                    "pointer6": 1,
                    "pointer_var19": 1,
                    "pointer_var6": 3,
                    "pointer_var7": 1,
                    "ptr5": 1,
                    "ptr6": 1,
                    "ptr_var19": 2,
                    "ptr_var2": 1,
                    "ptr_var5": 2,
                    "ptr_var6": 3,
                    "ptr_var8": 1,
                    "ptr_var_6": 1,
                    "temp_note": 1,
                    "temp_ptr": 1,
                    "temp_ptr3": 1,
                    "temp_ptr4": 2,
                    "var_ptr6": 1
                },
                "puVar20": {
                    "attrib_entry_ptr": 1,
                    "pointer6": 1,
                    "pointer7": 1,
                    "pointer_var20": 1,
                    "pointer_var7": 2,
                    "pointer_var8": 1,
                    "pointer_var9": 1,
                    "ptr6": 1,
                    "ptr7": 1,
                    "ptr_var10": 1,
                    "ptr_var20": 2,
                    "ptr_var6": 2,
                    "ptr_var7": 3,
                    "ptr_var_7": 1,
                    "temp_note": 1,
                    "temp_pointer3": 1,
                    "temp_ptr4": 1,
                    "temp_ptr5": 1,
                    "temp_ptr_3": 1,
                    "temp_var2": 1,
                    "var_ptr7": 1
                },
                "puVar21": {
                    "ptr7": 1
                },
                "puVar23": {
                    "ptr9": 1
                },
                "puVar5": {
                    "p": 1,
                    "pointer": 3,
                    "pointer1": 1,
                    "pointer_var": 3,
                    "pointer_var1": 1,
                    "pointer_var5": 1,
                    "ptr": 4,
                    "ptr1": 2,
                    "ptr_var": 5,
                    "ptr_var1": 1,
                    "ptr_var5": 2,
                    "ptr_var_1": 1,
                    "temp_ptr": 1,
                    "var_ptr": 1
                },
                "uVar1": {
                    "message1": 1,
                    "result": 4,
                    "result1": 6,
                    "result_1": 1,
                    "result_var1": 1,
                    "temp1": 1,
                    "temp_var1": 3,
                    "u_var1": 1,
                    "value1": 2,
                    "var1": 7,
                    "var_1": 1,
                    "variable1": 1
                },
                "uVar10": {
                    "end_addr": 1,
                    "result10": 1,
                    "result6": 4,
                    "result_6": 1,
                    "temp2": 1,
                    "temp6": 1,
                    "temp_data3": 1,
                    "temp_value": 1,
                    "temp_value3": 1,
                    "temp_var10": 2,
                    "temp_var2": 1,
                    "temp_var6": 1,
                    "val2": 1,
                    "val3": 1,
                    "value2": 1,
                    "value6": 1,
                    "value7": 1,
                    "var10": 5,
                    "var6": 1,
                    "var_10": 1
                },
                "uVar11": {
                    "address": 1,
                    "result11": 1,
                    "result7": 4,
                    "result_7": 1,
                    "retaddr": 1,
                    "temp3": 1,
                    "temp7": 1,
                    "temp_addr": 1,
                    "temp_data4": 1,
                    "temp_retaddr": 1,
                    "temp_value4": 1,
                    "temp_var11": 2,
                    "temp_var3": 1,
                    "temp_var7": 1,
                    "val4": 1,
                    "value7": 1,
                    "value8": 1,
                    "var11": 5,
                    "var7": 1,
                    "var_11": 1
                },
                "uVar12": {
                    "result12": 1,
                    "result8": 4,
                    "result_8": 1,
                    "size": 1,
                    "temp4": 1,
                    "temp8": 1,
                    "temp_data5": 1,
                    "temp_rbp": 1,
                    "temp_value": 1,
                    "temp_value5": 1,
                    "temp_var12": 2,
                    "temp_var4": 1,
                    "temp_var8": 1,
                    "val5": 1,
                    "value3": 1,
                    "value8": 1,
                    "value9": 1,
                    "var12": 5,
                    "var8": 1,
                    "var_12": 1
                },
                "uVar13": {
                    "attribute_size": 1,
                    "note_type": 1,
                    "result13": 1,
                    "result9": 4,
                    "result_9": 1,
                    "temp5": 1,
                    "temp9": 1,
                    "temp_data6": 1,
                    "temp_r13": 1,
                    "temp_value6": 1,
                    "temp_var13": 2,
                    "temp_var5": 1,
                    "temp_var9": 1,
                    "val6": 1,
                    "value10": 1,
                    "value4": 1,
                    "value9": 1,
                    "var13": 5,
                    "var9": 1,
                    "var_13": 1
                },
                "uVar2": {
                    "message2": 1,
                    "result2": 6,
                    "result_2": 1,
                    "result_var2": 1,
                    "temp": 2,
                    "temp2": 1,
                    "temp_result": 2,
                    "temp_var2": 3,
                    "u_var2": 1,
                    "value2": 2,
                    "var2": 7,
                    "var_2": 1,
                    "variable2": 1
                },
                "uVar20": {
                    "var20": 1
                },
                "uVar3": {
                    "gcd": 1,
                    "result3": 6,
                    "result_3": 1,
                    "result_var3": 1,
                    "temp": 1,
                    "temp3": 1,
                    "temp_data1": 1,
                    "temp_value": 1,
                    "temp_var3": 3,
                    "u_var3": 1,
                    "value": 1,
                    "value3": 2,
                    "var3": 7,
                    "var_3": 1,
                    "variable3": 1
                },
                "uVar8": {
                    "error": 1,
                    "message": 1,
                    "message3": 1,
                    "new_version_note": 1,
                    "result4": 5,
                    "result8": 1,
                    "result_4": 1,
                    "temp4": 1,
                    "temp_var": 2,
                    "temp_var4": 1,
                    "temp_var8": 2,
                    "u_var8": 1,
                    "value4": 2,
                    "var4": 1,
                    "var8": 6,
                    "variable8": 1
                },
                "uVar9": {
                    "result5": 4,
                    "result9": 1,
                    "result_5": 1,
                    "start_addr": 1,
                    "temp1": 1,
                    "temp5": 1,
                    "temp_data2": 1,
                    "temp_value2": 1,
                    "temp_var1": 1,
                    "temp_var5": 1,
                    "temp_var9": 2,
                    "val1": 1,
                    "val2": 1,
                    "value": 1,
                    "value1": 1,
                    "value5": 1,
                    "value6": 1,
                    "var5": 1,
                    "var9": 5,
                    "version_note_size": 1
                },
                "unaff_R11": {
                    "description_ptr": 1,
                    "name": 1,
                    "note_description_ptr": 1
                },
                "unaff_R12": {
                    "attr": 1,
                    "attribute": 1,
                    "attribute_note_pointer": 1,
                    "attribute_note_ptr": 1,
                    "attribute_pointer": 1,
                    "current_note": 2,
                    "data_array": 1,
                    "note": 2,
                    "note_info_ptr": 1,
                    "note_ptr": 2,
                    "note_structure": 1,
                    "pointer_to_r12": 1,
                    "pointer_var6": 1,
                    "ptr_var5": 1,
                    "ptr_var7": 1,
                    "ptr_var_unaff_r12": 1,
                    "r12_value": 1,
                    "reg_ptr1": 1,
                    "register5": 1,
                    "register_array1": 1,
                    "unaff_r12": 4,
                    "unaff_reg_r12": 1,
                    "unaffected_r12": 1,
                    "unaffected_var_3": 1,
                    "value_unaff_r12": 1
                },
                "unaff_R13": {
                    "attr_end": 1,
                    "attribute_data_pointer": 1,
                    "data_start_address": 1,
                    "note_data_size": 1,
                    "note_description_ptr": 1,
                    "note_description_size": 1,
                    "note_size": 1,
                    "original_value": 1,
                    "param6": 1,
                    "prev_offset": 1,
                    "r13_value": 1,
                    "reg_val4": 1,
                    "register3": 1,
                    "register6": 1,
                    "temp_addr_2": 1,
                    "temp_value2": 1,
                    "temp_var11": 1,
                    "unaff_r13": 5,
                    "unaff_reg_r13": 1,
                    "unaffected_r13": 1,
                    "unaffected_var_4": 1,
                    "value14": 1,
                    "value6": 1,
                    "value_of_r13": 1,
                    "value_unaff_r13": 1,
                    "var_unaff_r13": 1
                },
                "unaff_R14": {
                    "args": 1,
                    "func_pointers": 1,
                    "func_ptrs": 1,
                    "function_ptrs": 1,
                    "handler": 1,
                    "locale_info": 1,
                    "messages": 1,
                    "pointer_to_r14": 1,
                    "pointer_var7": 1,
                    "pointer_var8": 1,
                    "ptr_var9": 1,
                    "ptr_var_unaff_r14": 1,
                    "r14_value": 1,
                    "reg_ptr2": 1,
                    "register7": 1,
                    "register_array2": 1,
                    "strings_array": 1,
                    "temp_ptr_2": 1,
                    "unaff_r14": 4,
                    "unaff_reg_r14": 1,
                    "unaffected_r14": 1,
                    "unaffected_var_5": 1,
                    "value_unaff_r14": 1
                },
                "unaff_RAX": {
                    "note_type": 1
                },
                "unaff_RBP": {
                    "base": 1,
                    "base_addr": 1,
                    "base_pointer": 1,
                    "base_register": 1,
                    "default_version": 1,
                    "entry_address": 1,
                    "note_type_size": 1,
                    "note_version": 1,
                    "param5": 1,
                    "param_ptr": 1,
                    "rbp_value": 1,
                    "reg_val2": 1,
                    "register3": 1,
                    "retaddr": 1,
                    "temp_var10": 1,
                    "unaff_rbp": 5,
                    "unaff_reg_bp": 1,
                    "unaffected_rbp": 1,
                    "unaffected_var_6": 1,
                    "value12": 1,
                    "value5": 1,
                    "value_of_rbp": 1,
                    "value_unaff_rbp": 1,
                    "var_unaff_rbp": 1,
                    "version": 2
                },
                "unaff_RBX": {
                    "array_size": 1,
                    "attr_note_size": 1,
                    "counter": 1,
                    "data_remaining": 1,
                    "loop_counter": 1,
                    "loop_register": 1,
                    "note_size": 4,
                    "note_size_remaining": 1,
                    "rbx_value": 1,
                    "reg_val1": 1,
                    "register2": 1,
                    "remaining": 1,
                    "remaining_bytes": 2,
                    "remaining_note_size": 1,
                    "remaining_notes_size": 1,
                    "unaff_rbx": 4,
                    "unaff_reg_bx": 1,
                    "unaffected_rbx": 1,
                    "unaffected_var_1": 1,
                    "value11": 1,
                    "value_of_rbx": 1,
                    "value_unaff_rbx": 1,
                    "var_unaff_rbx": 1
                },
                "unaff_retaddr": {
                    "register8": 1,
                    "ret_addr": 2,
                    "retaddr": 1,
                    "return_addr": 3,
                    "return_address": 8,
                    "temp_r11": 1,
                    "temp_value7": 1,
                    "temp_var12": 1,
                    "unaff_ret_addr": 1,
                    "unaff_retaddr": 4,
                    "unaffected_retaddr": 1,
                    "unaffected_var_7": 1,
                    "value15": 1,
                    "value_unaff_retaddr": 1,
                    "var_unaff_ret_addr": 1
                }
            },
            "called": [
                "dcgettext",
                "FUN_001086af"
            ],
            "calling": [
                "FUN_0010847a",
                "FUN_001086af"
            ],
            "code": "\nulong process_build_attribute_note_00116490(undefined8 param1,ulong param2,ulong param3,long param4)\n\n{\n  undefined8 var1;\n  undefined8 var2;\n  ulong var3;\n  bool flag;\n  ulong *ptr_var;\n  int int_var;\n  long long_var;\n  undefined8 var8;\n  ulong note_type;\n  ulong var9;\n  ulong var10;\n  ulong var11;\n  ulong var12;\n  undefined *dynamic_memory;\n  ulong var13;\n  ulong unaff_rbx;\n  ulong unaff_rbp;\n  ulong *pointer_var2;\n  undefined *pointer_var3;\n  char char_var;\n  undefined *pointer_var4;\n  undefined *pointer_var5;\n  ulong description_size;\n  ulong *unaff_r12;\n  ulong *ptr_var6;\n  ulong unaff_r13;\n  size_t nmemb;\n  undefined8 *unaff_r14;\n  ulong *ptr_var7;\n  byte byte_var;\n  int int_var2;\n  ulong return_address;\n  ulong param7;\n  uint param8;\n  ulong param9;\n  ulong stack_var1;\n  ulong *stack_var2;\n  undefined *stack_var3;\n  uint stack_var4;\n  uint stack_var5;\n  undefined8 *stack_var6;\n  \n  byte_var = 0;\ncode_r0x00116490:\n  long_var = param4;\n  var10 = unaff_rbp;\n  var13 = unaff_r13;\n  if (note_type == 0) {\n    if (param2 == 0x100) {\n      unaff_r12[7] = return_address;\n      var11 = return_address;\nLAB_001164af:\n      var9 = unaff_r13;\n      var13 = unaff_r13;\n      return_address = var11;\n    }\n    else {\n      unaff_r12[7] = param9;\nLAB_0011669e:\n      var10 = unaff_rbp;\n      var9 = unaff_rbp;\n    }\nLAB_001164bb:\n    unaff_r12[8] = var9;\n    if (*(char *)((unaff_r12[3] - 1) + param3) != '\\0') {\n      long_var = dcgettext(0,\"corrupt GNU build attribute note: name not NUL terminated\",5);\n      goto LAB_0010849a;\n    }\n    ptr_var6 = unaff_r12 + 9;\n    if (0xb < unaff_rbx) {\n      var9 = (**(code **)(unaff_r14[1] + 0x40))(long_var);\n      *ptr_var6 = var9;\n      var9 = (**(code **)(unaff_r14[1] + 0x40))(long_var + 4);\n      unaff_r12[10] = var9;\n      param2 = (**(code **)(unaff_r14[1] + 0x40))(long_var + 8);\n      param3 = *ptr_var6;\n      unaff_r12[0xb] = param2;\n      note_type = unaff_r12[10];\n      var9 = param3 + 3 & 0xfffffffffffffffc;\n      unaff_r12[0xf] = var9;\n      if (note_type != (note_type + 3 & 0xfffffffffffffffc)) {\n        long_var = dcgettext(0,\"corrupt GNU build attribute note: description size not a factor of 4\",5\n                         );\n        goto LAB_0010849a;\n      }\n      if (1 < param2 - 0x100) {\n        long_var = dcgettext(0,\"corrupt GNU build attribute note: wrong note type\",5);\n        goto LAB_0010849a;\n      }\n      var11 = var9 + note_type + 0xc;\n      if (unaff_rbx < var11) {\n        long_var = dcgettext(0,\"corrupt GNU build attribute note: note too big\",5);\n        goto LAB_0010849a;\n      }\n      if (param3 < 2) {\n        long_var = dcgettext(0,\"corrupt GNU build attribute note: name too small\",5);\n        goto LAB_0010849a;\n      }\n      unaff_r12[0xc] = long_var + 0xc;\n      description_size = long_var + 0xc + var9;\n      unaff_r12[0xd] = description_size;\n      unaff_rbx = unaff_rbx + (-0xc - (var9 + note_type));\n      param4 = long_var + var11;\n      unaff_rbp = var10;\n      unaff_r12 = ptr_var6;\n      unaff_r13 = var13;\n      if (param3 != 2) {\n        if (*(char *)(long_var + 0xc) == '$') {\n          if ((*(char *)(long_var + 0xd) == '\\x01') && (*(char *)(long_var + 0xe) == '1')) {\n            var10 = process_build_attribute_note_00116490();\n            return var10;\n          }\n        }\n        else if ((((4 < param3) && (*(char *)(long_var + 0xc) == 'G')) &&\n                 (*(char *)(long_var + 0xd) == 'A')) &&\n                ((*(char *)(long_var + 0xe) == '$' && (*(char *)(long_var + 0xf) == '\\x01')))) {\n          if (*(char *)(long_var + 0x10) == '2') {\n            var10 = process_build_attribute_note_00116490();\n            return var10;\n          }\n          if (*(char *)(long_var + 0x10) == '3') {\n            var10 = process_build_attribute_note_00116490();\n            return var10;\n          }\n          long_var = dcgettext(0,\"corrupt GNU build attribute note: unsupported version\",5);\n          goto LAB_0010849a;\n        }\n      }\n      goto code_r0x00116490;\n    }\n    if (unaff_rbx != 0) {\n      long_var = dcgettext(0,\"corrupt GNU build attribute notes: excess data at end\",5);\n      goto LAB_0010849a;\n    }\n    if ((stack_var4 | stack_var5 | param8) == 0) {\n      var1 = *unaff_r14;\n      var2 = *stack_var6;\n      var8 = dcgettext(0,\"%s[%s]: Warning: version note missing - assuming version 3\",5);\n      FUN_00119ed0(var8,var1,var2);\nLAB_0011671b:\n      nmemb = ((long)ptr_var6 - (long)stack_var2 >> 3) * -0x71c71c71c71c71c7;\n      qsort(stack_var2,nmemb,0x48,FUN_0011a1b0);\n      for (pointer_var2 = stack_var2; pointer_var2 < ptr_var6; pointer_var2 = pointer_var2 + 9) {\n        var10 = pointer_var2[2];\n        if (var10 != 0) {\n          var13 = pointer_var2[7];\n          var9 = pointer_var2[8];\n          ptr_var7 = pointer_var2;\n          int_var2 = 0;\n          if (var13 == var9) {\n            pointer_var2[2] = 0;\n          }\n          else {\n            do {\n              do {\n                ptr_var = ptr_var7;\n                ptr_var7 = ptr_var + -9;\n                if (ptr_var7 < stack_var2) goto LAB_001167f5;\n                var11 = ptr_var[-7];\n              } while (var11 == 0);\n              if ((*ptr_var7 != *pointer_var2) ||\n                 (int_var = memcmp((void *)ptr_var[-6],(void *)pointer_var2[3],*pointer_var2), int_var != 0))\n              break;\n              var3 = ptr_var[-2];\n              var12 = ptr_var[-1];\n              if (var13 == var3) {\n                if (var9 == var12) {\n                  pointer_var2[2] = 0;\n                  break;\n                }\nLAB_001167a6:\n                if (var9 <= var12) {\n                  pointer_var2[2] = 0;\n                  break;\n                }\n                if (var12 < var13) {\nLAB_0010852c:\n                  if ((0xfffffffffffffff0 < var12) ||\n                     (var13 <= (var12 + 0xf & 0xfffffffffffffff0))) goto FUN_00116852;\n                }\nLAB_001167b8:\n                if ((var10 == 0x101) == (var11 == 0x101)) {\n                  if (var12 <= var9) {\n                    var12 = var9;\n                  }\n                  if (var3 < var13) {\n                    var13 = var3;\n                  }\n                  ptr_var[-1] = var12;\n                  ptr_var[-2] = var13;\n                  pointer_var2[2] = 0;\n                  break;\n                }\n              }\n              else {\n                if (var3 <= var13) goto LAB_001167a6;\n                if (var12 < var13) goto LAB_0010852c;\n                if (var9 < var13) {\n                  if ((0xfffffffffffffff0 < var9) || (var3 <= (var9 + 0xf & 0xfffffffffffffff0)))\n                  goto FUN_00116852;\n                  goto LAB_001167b8;\n                }\n                if (var9 != var12) goto LAB_001167b8;\n              }\nFUN_00116852:\n              flag = int_var2 < 0x11;\n              int_var2 = int_var2 + 1;\n            } while (flag);\n          }\n        }\nLAB_001167f5:\n      }\n      qsort(stack_var2,nmemb,0x48,FUN_0011a250);\n      dynamic_memory = (undefined *)xmalloc(stack_var1 * 2);\n      param7 = 0;\n      param9 = 0;\n      pointer_var5 = dynamic_memory;\n      for (pointer_var2 = stack_var2; pointer_var2 < ptr_var6; pointer_var2 = pointer_var2 + 9) {\n        if (pointer_var2[2] != 0) {\n          pointer_var4 = pointer_var5 + 4;\n          pointer_var3 = pointer_var5 + 0xc;\n          if ((pointer_var2[7] == param9) && (pointer_var2[8] == param7)) {\n            (**(code **)(unaff_r14[1] + 0x50))(*pointer_var2,pointer_var5);\n            (**(code **)(unaff_r14[1] + 0x50))(0,pointer_var4);\n            (**(code **)(unaff_r14[1] + 0x50))(pointer_var2[2],pointer_var5 + 8);\n            var13 = pointer_var2[6];\n            var10 = *pointer_var2;\n            pointer_var5 = (undefined *)pointer_var2[3];\n            pointer_var4 = pointer_var3;\n            for (var9 = var10; var9 != 0; var9 = var9 - 1) {\n              *pointer_var4 = *pointer_var5;\n              pointer_var5 = pointer_var5 + (ulong)byte_var * -2 + 1;\n              pointer_var4 = pointer_var4 + (ulong)byte_var * -2 + 1;\n            }\n            if (var10 < var13) {\n              for (long_var = var13 - var10; long_var != 0; long_var = long_var + -1) {\n                *pointer_var4 = 0;\n                pointer_var4 = pointer_var4 + (ulong)byte_var * -2 + 1;\n              }\n            }\n            pointer_var5 = pointer_var3 + var13;\n          }\n          else {\n            (**(code **)(unaff_r14[1] + 0x50))();\n            if (*(int *)(unaff_r14[1] + 8) == 5) {\n              char_var = (*(char *)(unaff_r14[0x22] + 4) == '\\x02') * '\\b' + '\\b';\n            }\n            else {\n              char_var = '\\b';\n            }\n            (**(code **)(unaff_r14[1] + 0x50))(char_var,pointer_var4);\n            (**(code **)(unaff_r14[1] + 0x50))(pointer_var2[2],pointer_var5 + 8);\n            var10 = *pointer_var2;\n            pointer_var5 = (undefined *)pointer_var2[3];\n            pointer_var4 = pointer_var3;\n            for (var13 = var10; var13 != 0; var13 = var13 - 1) {\n              *pointer_var4 = *pointer_var5;\n              pointer_var5 = pointer_var5 + (ulong)byte_var * -2 + 1;\n              pointer_var4 = pointer_var4 + (ulong)byte_var * -2 + 1;\n            }\n            var13 = pointer_var2[6];\n            if (var10 < var13) {\n              for (long_var = var13 - var10; long_var != 0; long_var = long_var + -1) {\n                *pointer_var4 = 0;\n                pointer_var4 = pointer_var4 + (ulong)byte_var * -2 + 1;\n              }\n            }\n            long_var = unaff_r14[1];\n            pointer_var3 = pointer_var3 + var13;\n            pointer_var5 = pointer_var3 + 8;\n            if ((*(int *)(long_var + 8) == 5) && (*(char *)(unaff_r14[0x22] + 4) == '\\x02')) {\n              (**(code **)(long_var + 0x38))(pointer_var2[7],pointer_var3);\n              (**(code **)(unaff_r14[1] + 0x38))(pointer_var2[8],pointer_var5);\n              pointer_var5 = pointer_var3 + 0x10;\n            }\n            else {\n              (**(code **)(long_var + 0x50))(pointer_var2[7],pointer_var3);\n              (**(code **)(unaff_r14[1] + 0x50))(pointer_var2[8],pointer_var3 + 4);\n            }\n            param9 = pointer_var2[7];\n            param7 = pointer_var2[8];\n          }\n        }\n      }\n      var13 = (long)pointer_var5 - (long)dynamic_memory;\n      var10 = var13;\n      pointer_var5 = dynamic_memory;\n      if (var13 < stack_var1) {\n        for (; stack_var1 = var13, var10 != 0; var10 = var10 - 1) {\n          *stack_var3 = *pointer_var5;\n          pointer_var5 = pointer_var5 + (ulong)byte_var * -2 + 1;\n          stack_var3 = stack_var3 + (ulong)byte_var * -2 + 1;\n        }\n      }\n      free(dynamic_memory);\nLAB_001166f8:\n      free(stack_var2);\n      return stack_var1;\n    }\n    if (((stack_var5 | param8) == 0) || (stack_var4 == 0)) {\n      if (stack_var5 == 0) {\n        if (param8 != 0) goto LAB_0011671b;\n        goto LAB_001166f8;\n      }\n      if (param8 == 0) goto LAB_001166f8;\n    }\n    long_var = dcgettext(0,\"bad GNU build attribute notes: multiple different versions\",5);\n  }\n  else {\n    if (note_type == 0x10) {\n      var11 = (**(code **)(unaff_r14[1] + 0x28))(description_size);\n      var9 = (**(code **)(unaff_r14[1] + 0x28))(unaff_r12[4] + 8);\n      if (var9 < var11) {\n        var11 = var9;\n      }\nLAB_00116631:\n      if (unaff_r12[2] == 0x100) {\n        if (var11 == 0) {\n          var11 = return_address;\n        }\n        param3 = *unaff_r12;\n        unaff_r12[7] = var11;\n        var13 = var9;\n        return_address = var11;\n        if (var9 == 0) goto LAB_001164af;\n      }\n      else {\n        if (var11 == 0) {\n          var11 = param9;\n        }\n        param3 = *unaff_r12;\n        unaff_r12[7] = var11;\n        var10 = var9;\n        param9 = var11;\n        if (var9 == 0) goto LAB_0011669e;\n      }\n      goto LAB_001164bb;\n    }\n    if (note_type < 0x11) {\n      if (note_type == 4) {\n        var11 = (**(code **)(unaff_r14[1] + 0x40))(description_size);\n        var9 = 0xffffffffffffffff;\n        goto LAB_00116631;\n      }\n      if (note_type == 8) {\n        var10 = FUN_001086af();\n        return var10;\n      }\n    }\n    long_var = dcgettext(0,\"corrupt GNU build attribute note: bad description size\",5);\n  }\nLAB_0010849a:\n  if (long_var != 0) {\n    bfd_set_error(0x11);\n    FUN_001126c0(0,unaff_r14,stack_var6,long_var);\n    DAT_00127a20 = 1;\n  }\n  goto LAB_001166f8;\n}\n\n",
            "current_name": "process_build_attribute_note_00116490",
            "entrypoint": "0x00116490",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00116490": "process_build_attribute_note_00116490",
                "__nmemb": "nmemb",
                "__ptr": "dynamic_memory",
                "bVar21": "byte_var",
                "bVar4": "flag",
                "cVar16": "char_var",
                "dcgettext": "get_string",
                "iVar22": "int_var2",
                "iVar6": "int_var",
                "in_R11": "description_size",
                "in_RAX": "note_type",
                "in_stack_00000020": "stack_var1",
                "in_stack_00000028": "stack_var2",
                "in_stack_00000030": "stack_var3",
                "in_stack_00000038": "stack_var4",
                "in_stack_00000040": "stack_var5",
                "in_stack_00000048": "stack_var6",
                "lVar7": "long_var",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9",
                "puVar14": "pointer_var2",
                "puVar15": "pointer_var3",
                "puVar17": "pointer_var4",
                "puVar18": "pointer_var5",
                "puVar19": "ptr_var6",
                "puVar20": "ptr_var7",
                "puVar5": "ptr_var",
                "uVar1": "var1",
                "uVar10": "var10",
                "uVar11": "var11",
                "uVar12": "var12",
                "uVar13": "var13",
                "uVar2": "var2",
                "uVar20": "var20",
                "uVar3": "var3",
                "uVar8": "var8",
                "uVar9": "var9",
                "unaff_R12": "unaff_r12",
                "unaff_R13": "unaff_r13",
                "unaff_R14": "unaff_r14",
                "unaff_RBP": "unaff_rbp",
                "unaff_RBX": "unaff_rbx",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00116852": {
            "additional_data": {
                "FUN_00116852": {
                    "analyze_data": 2,
                    "decode_and_process_data": 1,
                    "decompiled_function": 1,
                    "extract_and_process_data": 1,
                    "find_and_sort_records": 1,
                    "optimized_code": 1,
                    "process_data": 10,
                    "search_and_modify_data": 1
                },
                "FUN_0011a250": {
                    "compare": 1,
                    "compare_data": 1,
                    "compare_function": 1
                },
                "__base": {
                    "base_pointer": 2
                },
                "__compar": {
                    "compare_function": 1
                },
                "__compar_fn_t": {
                    "compare_function_ptr": 1,
                    "comparison_function": 1
                },
                "__n": {
                    "num_bytes": 1,
                    "size": 1
                },
                "__nmemb": {
                    "item_count": 1,
                    "num_members": 1
                },
                "__ptr": {
                    "allocated_memory": 1,
                    "buffer": 3,
                    "dynamic_array": 3,
                    "dynamic_array_ptr": 1,
                    "dynamic_memory": 1,
                    "dynamic_memory_pointer": 1,
                    "dynamic_ptr": 1,
                    "malloced_pointer": 1,
                    "memory": 1,
                    "memory_pointer": 1,
                    "new_array": 1,
                    "result_ptr": 1,
                    "temp_buffer": 2,
                    "temp_data_ptr": 1,
                    "temp_pointer": 2,
                    "temp_ptr": 3,
                    "void_ptr": 1
                },
                "__s1": {
                    "array1": 1,
                    "str1": 1
                },
                "__s2": {
                    "array2": 1,
                    "str2": 1
                },
                "__size": {
                    "size": 2
                },
                "bVar14": {
                    "bool_var": 1,
                    "bool_variable": 1,
                    "byte_flag": 1,
                    "byte_value": 4,
                    "byte_var": 3,
                    "comparison": 1,
                    "counter_byte": 1,
                    "counter_flag": 1,
                    "flag": 5,
                    "flag_byte": 1,
                    "flag_var": 1,
                    "loop_flag": 1,
                    "loop_var": 1,
                    "temp_byte": 3,
                    "temp_flag": 1,
                    "zero": 1
                },
                "cVar10": {
                    "additional_value": 1,
                    "char_flag": 1,
                    "char_value": 3,
                    "char_var": 8,
                    "char_var1": 1,
                    "char_variable": 1,
                    "character": 3,
                    "character_var": 1,
                    "comparison_char": 1,
                    "comparison_flag": 1,
                    "comparison_result_char": 1,
                    "condition": 2,
                    "temp_char": 2
                },
                "free": {
                    "free_memory": 1,
                    "release_memory": 2
                },
                "iVar3": {
                    "comp_result": 2,
                    "compare_result": 4,
                    "comparison_result": 11,
                    "memcmp_result": 2,
                    "result": 5,
                    "temp_result": 1
                },
                "in_R10": {
                    "count": 1,
                    "counter": 13,
                    "current_element_count": 1,
                    "current_index": 1,
                    "current_iteration": 1,
                    "index": 1,
                    "index1": 1,
                    "loop_counter": 6,
                    "loop_counter1": 1,
                    "loop_index": 1,
                    "record_counter": 1,
                    "temp_value": 1
                },
                "in_R11": {
                    "array_length": 1,
                    "comparison_value": 2,
                    "condition": 1,
                    "condition_flag": 1,
                    "condition_value": 1,
                    "current_element_size": 1,
                    "flag": 1,
                    "flag1": 1,
                    "flag2": 1,
                    "index2": 1,
                    "loop_counter_2": 1,
                    "record_flag": 1,
                    "s_var1": 1,
                    "size": 1,
                    "some_value": 1,
                    "start_index": 1,
                    "string1": 1,
                    "value1": 1,
                    "value_flag": 1
                },
                "in_R13": {
                    "array_ptr": 1,
                    "data_array_iterator": 1,
                    "loop_counter2": 1,
                    "start_pointer": 1
                },
                "in_R14": {
                    "data_iterator": 1,
                    "temp_ptr": 1
                },
                "in_R15": {
                    "flag2": 1,
                    "lower_bound": 1
                },
                "in_RBX": {
                    "first_value": 1,
                    "unaff_rbx": 1
                },
                "in_RCX": {
                    "array": 1,
                    "array_end": 1,
                    "array_pointer": 1,
                    "array_size": 4,
                    "data": 1,
                    "data_array": 2,
                    "data_ptr_array": 1,
                    "data_size": 1,
                    "end_of_data": 1,
                    "end_pointer": 2,
                    "end_ptr": 1,
                    "ending_index": 1,
                    "input_array": 1,
                    "total_items": 1,
                    "total_size": 1
                },
                "lVar7": {
                    "counter": 1,
                    "difference": 2,
                    "j": 1,
                    "length_var": 1,
                    "loop_counter": 5,
                    "loop_counter2": 1,
                    "loop_counter_2": 1,
                    "loop_var": 4,
                    "loop_var2": 1,
                    "loop_variable": 1,
                    "remaining_bytes": 1,
                    "temp_long": 1,
                    "temp_value_3": 1,
                    "temp_var3": 1,
                    "temp_var_3": 1
                },
                "memcmp": {
                    "compare_function2": 1,
                    "compare_memory": 2
                },
                "param_1": {
                    "compare_param1": 1
                },
                "param_10": {
                    "max_size": 1,
                    "modified_data_size": 1,
                    "output_length": 1,
                    "output_size": 2,
                    "param10": 5,
                    "param2": 1,
                    "param3": 9,
                    "param_10": 1,
                    "param_5": 1,
                    "parameter3": 1,
                    "result_length": 1,
                    "result_size": 2,
                    "search_param2": 1
                },
                "param_11": {
                    "array": 2,
                    "array1": 1,
                    "array_param": 1,
                    "array_pointer": 1,
                    "data_array": 1,
                    "dynamic_array": 2,
                    "input_array": 2,
                    "input_data": 2,
                    "original_data": 1,
                    "original_data_ptr_array": 1,
                    "param11": 3,
                    "param4": 4,
                    "param_6": 1,
                    "param_array": 3,
                    "param_array1": 1,
                    "records": 1,
                    "size_array": 1
                },
                "param_12": {
                    "array2": 1,
                    "dest": 1,
                    "modified_data": 1,
                    "output_array": 4,
                    "output_array_pointer": 1,
                    "output_buffer": 3,
                    "output_data": 2,
                    "output_param": 1,
                    "param12": 1,
                    "param5": 4,
                    "param_array2": 1,
                    "ptr_param": 1,
                    "result": 1,
                    "result_array": 1,
                    "result_data_ptr_array": 1,
                    "result_pointer": 1,
                    "result_ptr": 3
                },
                "param_13": {
                    "array_size": 1,
                    "buffer_address": 1,
                    "context": 3,
                    "memory": 1,
                    "memory_param": 1,
                    "memory_ptr": 1,
                    "param13": 2,
                    "param3": 1,
                    "param4": 3,
                    "param6": 4,
                    "param_13": 2,
                    "param_ptr": 1,
                    "parameter_array": 1,
                    "pointer": 1,
                    "ptr": 1,
                    "ptr_param": 1,
                    "some_data": 1,
                    "some_parameter": 1,
                    "temp_ptr": 1
                },
                "param_14": {
                    "array_length": 1,
                    "array_size": 8,
                    "data_size": 1,
                    "input_array_size": 1,
                    "input_size": 1,
                    "num_elements": 1,
                    "num_params": 1,
                    "original_data_length": 1,
                    "original_data_size": 1,
                    "param14": 3,
                    "param7": 4,
                    "param_14": 1,
                    "param_array_size": 1,
                    "param_size": 1,
                    "record_size": 1,
                    "size_param": 1
                },
                "param_15": {
                    "temp_param_1": 1
                },
                "param_2": {
                    "compare_param2": 1
                },
                "param_7": {
                    "input_size": 1,
                    "input_value": 1,
                    "param1": 9,
                    "param2": 1,
                    "param7": 7,
                    "param_3": 1,
                    "param_7": 3,
                    "param_size": 1,
                    "parameter1": 1,
                    "record_count": 1
                },
                "param_9": {
                    "param1": 1,
                    "param2": 10,
                    "param3": 1,
                    "param9": 7,
                    "param_4": 1,
                    "param_9": 3,
                    "param_offset": 1,
                    "parameter2": 1,
                    "search_param1": 1
                },
                "pcVar2": {
                    "callback": 1,
                    "callback_fn": 1,
                    "comparison_function": 2,
                    "func_ptr": 1,
                    "function_pointer": 9,
                    "function_ptr": 6
                },
                "psVar13": {
                    "array_pointer2": 1,
                    "array_ptr2": 1,
                    "cur_record_ptr": 1,
                    "current_array_element": 1,
                    "current_array_ptr": 1,
                    "current_data": 2,
                    "current_data_info": 1,
                    "current_element": 1,
                    "current_element_pointer": 1,
                    "current_element_ptr": 1,
                    "current_item_data": 1,
                    "current_item_pointer": 1,
                    "current_param": 1,
                    "current_sub_array": 1,
                    "param_2": 1,
                    "param_array": 1,
                    "param_var": 1,
                    "pointer4": 1,
                    "pointer_array": 2,
                    "ptr_var13": 1,
                    "temp_array4": 1,
                    "temp_data_ptr": 1,
                    "temp_struct_pointer": 1
                },
                "puVar11": {
                    "copy_destination": 1,
                    "item_destination2": 1,
                    "pointer1": 2,
                    "pointer2": 3,
                    "ptr2": 3,
                    "ptr_2": 1,
                    "ptr_var": 1,
                    "ptr_var11": 1,
                    "target_pointer2": 1,
                    "temp4": 1,
                    "temp_buffer1": 1,
                    "temp_pointer": 1,
                    "temp_pointer1": 1,
                    "temp_ptr2": 3,
                    "temp_ptr3": 1,
                    "temp_var_6": 1,
                    "temporary_buffer_2": 1
                },
                "puVar12": {
                    "copy_destination": 1,
                    "copy_src": 1,
                    "item_data": 1,
                    "pointer2": 2,
                    "pointer3": 3,
                    "ptr3": 3,
                    "ptr_3": 1,
                    "ptr_var12": 1,
                    "ptr_var2": 1,
                    "target_pointer3": 1,
                    "temp5": 1,
                    "temp_pointer": 1,
                    "temp_pointer1": 1,
                    "temp_pointer2": 1,
                    "temp_ptr3": 3,
                    "temp_ptr4": 1,
                    "temp_var_7": 1,
                    "temporary_buffer_3": 1
                },
                "puVar9": {
                    "copy_dest": 1,
                    "copy_destination": 1,
                    "dest_pointer": 2,
                    "item_destination": 1,
                    "pointer1": 3,
                    "ptr1": 3,
                    "ptr_1": 1,
                    "ptr_var9": 1,
                    "target_pointer1": 1,
                    "temp3": 1,
                    "temp_pointer2": 3,
                    "temp_ptr": 1,
                    "temp_ptr1": 3,
                    "temp_ptr2": 1,
                    "temp_var_5": 1,
                    "temporary_buffer_1": 1
                },
                "qsort": {
                    "sort": 1,
                    "sort_data": 1,
                    "sort_function": 1
                },
                "sVar1": {
                    "array_size": 2,
                    "array_value": 2,
                    "compare_result": 1,
                    "compare_value": 1,
                    "comparison_result": 1,
                    "current_data_size": 1,
                    "current_element_size": 1,
                    "current_size": 1,
                    "elem_size": 1,
                    "item_size": 1,
                    "record_size": 1,
                    "s_var": 1,
                    "s_var1": 1,
                    "size": 6,
                    "size_var": 1,
                    "size_var1": 1,
                    "temp_size": 2,
                    "temp_value": 1,
                    "var1": 1
                },
                "uVar4": {
                    "counter": 5,
                    "counter_plus_one": 1,
                    "current_element_count": 1,
                    "i": 2,
                    "increment": 3,
                    "incremented_counter": 1,
                    "index": 3,
                    "iteration": 1,
                    "loop_count": 1,
                    "loop_increment": 1,
                    "loop_var": 1,
                    "temp_var": 3,
                    "temp_var4": 1
                },
                "uVar5": {
                    "comparison_value2": 1,
                    "copied_bytes": 1,
                    "current_min_index": 1,
                    "item_end": 1,
                    "loop_index": 1,
                    "lower_bound": 1,
                    "max_value": 1,
                    "min_data_value": 1,
                    "min_output_length": 1,
                    "min_value": 5,
                    "temp1": 2,
                    "temp_value": 1,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "temp_var5": 1,
                    "temp_var_1": 1,
                    "u_var5": 1,
                    "value1": 1,
                    "var3": 1
                },
                "uVar6": {
                    "comparison_value3": 1,
                    "current_max_index": 1,
                    "item_start": 1,
                    "max_data_value": 1,
                    "max_output_length": 1,
                    "max_value": 5,
                    "min_value": 1,
                    "record_value": 1,
                    "temp2": 2,
                    "temp_max": 1,
                    "temp_value": 1,
                    "temp_value_2": 1,
                    "temp_var2": 2,
                    "temp_var3": 2,
                    "temp_var6": 1,
                    "temp_var_2": 1,
                    "u_var6": 1,
                    "upper_bound": 1,
                    "value2": 1,
                    "var4": 1
                },
                "uVar8": {
                    "array_element": 1,
                    "current_item_value": 1,
                    "item_size_diff": 1,
                    "loop_counter_3": 1,
                    "record_index": 1,
                    "temp3": 2,
                    "temp_index": 1,
                    "temp_size": 1,
                    "temp_value": 4,
                    "temp_value_4": 1,
                    "temp_var": 2,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var4": 2,
                    "temp_var8": 1,
                    "temp_var_4": 1,
                    "u_var8": 1,
                    "value": 1,
                    "value3": 1,
                    "var5": 1
                },
                "unaff_R11": {
                    "check_value": 1,
                    "condition": 1
                },
                "unaff_R13": {
                    "array": 2,
                    "array_pointer1": 1,
                    "array_ptr": 1,
                    "array_start": 1,
                    "current_item": 1,
                    "data_array": 2,
                    "data_array2": 1,
                    "data_pointer": 1,
                    "end_location": 1,
                    "ending_index": 1,
                    "last_data_pointer": 1,
                    "lower_bound": 1,
                    "param2": 1,
                    "ptr_array_end": 1,
                    "source_ptr": 1,
                    "start_address": 1,
                    "start_index": 2,
                    "start_pointer": 4,
                    "start_ptr": 1,
                    "temp_array1": 1,
                    "temp_array2": 1
                },
                "unaff_R14": {
                    "array": 1,
                    "array_ptr": 1,
                    "current_array": 1,
                    "current_data": 4,
                    "current_data_pointer": 1,
                    "current_data_ptr": 1,
                    "current_element": 1,
                    "current_index": 2,
                    "current_item": 3,
                    "current_location": 1,
                    "current_pointer": 3,
                    "current_ptr": 3,
                    "current_record": 1,
                    "data_pointer": 1,
                    "next_item": 1,
                    "param3": 1,
                    "temp_array2": 1,
                    "temp_ptr": 1,
                    "unaff_r14_value": 1
                },
                "unaff_R15": {
                    "comparison_value1": 1,
                    "current_max": 1,
                    "current_max_value": 1,
                    "end_address": 1,
                    "end_index": 1,
                    "last_value": 1,
                    "lower_bound": 1,
                    "max_range": 1,
                    "max_value": 4,
                    "max_value2": 1,
                    "min_value": 1,
                    "min_value2": 1,
                    "param1": 1,
                    "param_1": 1,
                    "param_7": 1,
                    "prev_element_size": 1,
                    "record_value2": 1,
                    "temp_array3": 1,
                    "temp_r15": 1,
                    "unaff_r15_value": 1,
                    "upper_bound": 2,
                    "value2": 2,
                    "var2": 1
                },
                "unaff_RBP": {
                    "array_end_pointer": 1,
                    "base_ptr": 1,
                    "comparing_array": 1,
                    "comparison_item": 1,
                    "comparison_pointer": 1,
                    "current_element": 2,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "items": 1,
                    "next_data_pointer": 1,
                    "next_item": 1,
                    "param": 1,
                    "previous_data": 1,
                    "ptr_array": 1,
                    "range_array": 1,
                    "sorted_data_ptr_array": 1,
                    "target_ptr": 1,
                    "temp": 1,
                    "temp2": 1,
                    "temp_array": 2,
                    "temp_pointer": 3,
                    "unaff_rbp": 1,
                    "unaff_rbp_pointer": 1
                },
                "unaff_RBX": {
                    "current_min": 1,
                    "current_min_value": 1,
                    "element_size": 1,
                    "limit1": 1,
                    "lower_bound": 2,
                    "max_end_address": 1,
                    "max_size": 1,
                    "max_value": 1,
                    "max_value2": 1,
                    "min_range": 1,
                    "min_value": 4,
                    "min_value2": 1,
                    "param_9": 1,
                    "param_size": 1,
                    "record_value1": 1,
                    "temp1": 1,
                    "temp_rbx": 1,
                    "unaff_rbx_limiter": 1,
                    "upper_bound": 2,
                    "value1": 1,
                    "value3": 1,
                    "var1": 1
                },
                "xmalloc": {
                    "allocate_memory": 3
                }
            },
            "called": [
                "FUN_00116852",
                "FUN_0011a250",
                "qsort",
                "memcmp",
                "free",
                "xmalloc"
            ],
            "calling": [
                "FUN_00116852"
            ],
            "code": "\nulong extract_and_process_data_00116852(void)\n\n{\n  size_t size;\n  code *function_pointer;\n  int comparison_result;\n  uint counter;\n  undefined *temp_ptr;\n  size_t *array_size;\n  ulong min_value;\n  ulong max_value;\n  long loop_counter;\n  ulong temp_value;\n  size_t min_value;\n  size_t *temp_pointer;\n  undefined *temp_pointer2;\n  char char_var;\n  undefined *pointer2;\n  ulong counter;\n  undefined *pointer3;\n  size_t comparison_value;\n  size_t *start_pointer;\n  size_t *current_data;\n  size_t max_value;\n  size_t *current_data;\n  byte flag;\n  size_t param1;\n  size_t param2;\n  ulong param3;\n  size_t *param4;\n  undefined *output_array;\n  long param6;\n  size_t array_size;\n  \n  flag = 0;\ncode_r0x00116852:\n  counter = (int)counter + 1;\n  if (0x10 < (int)counter) goto LAB_001167f5;\nLAB_00116863:\n  current_data = current_data + -9;\n  do {\n    if (start_pointer <= current_data) {\n      size = current_data[2];\n      if (size == 0) goto LAB_00116863;\n      temp_value = (ulong)counter;\n      if ((*current_data == *temp_pointer) &&\n         (comparison_result = memcmp((void *)current_data[3],(void *)temp_pointer[3],*temp_pointer), comparison_result == 0)) {\n        max_value = current_data[7];\n        min_value = current_data[8];\n        counter = temp_value & 0xffffffff;\n        if (max_value == max_value) {\n          if (min_value != min_value) goto LAB_001167a6;\n          temp_pointer[2] = 0;\n        }\n        else {\n          if (max_value < max_value) {\n            if (min_value < max_value) {\nLAB_0010852c:\n              if ((0xfffffffffffffff0 < min_value) || (max_value <= (min_value + 0xf & 0xfffffffffffffff0)))\n              goto code_r0x00116852;\n            }\n            else if (min_value < max_value) {\n              if ((0xfffffffffffffff0 < min_value) ||\n                 (max_value <= (min_value + 0xf & 0xfffffffffffffff0))) goto code_r0x00116852;\n            }\n            else if (min_value == min_value) goto code_r0x00116852;\n          }\n          else {\nLAB_001167a6:\n            if (min_value <= min_value) {\n              temp_pointer[2] = 0;\n              goto LAB_001167f5;\n            }\n            if (min_value < max_value) goto LAB_0010852c;\n          }\n          if ((comparison_value == 0x101) != (size == 0x101)) goto code_r0x00116852;\n          if (min_value <= min_value) {\n            min_value = min_value;\n          }\n          if (max_value < max_value) {\n            max_value = max_value;\n          }\n          current_data[8] = min_value;\n          current_data[7] = max_value;\n          temp_pointer[2] = 0;\n        }\n      }\n    }\nLAB_001167f5:\n    while( true ) {\n      do {\n        current_data = temp_pointer;\n        temp_pointer = current_data + 9;\n        if (array_size <= temp_pointer) {\n          qsort(param4,array_size,0x48,FUN_0011a250);\n          temp_ptr = (undefined *)xmalloc(param3 * 2);\n          param1 = 0;\n          pointer3 = temp_ptr;\n          for (current_data = param4; current_data < array_size; current_data = current_data + 9) {\n            if (current_data[2] != 0) {\n              pointer2 = pointer3 + 4;\n              temp_pointer2 = pointer3 + 0xc;\n              function_pointer = *(code **)(*(long *)(param6 + 8) + 0x50);\n              if ((current_data[7] == param2) && (current_data[8] == param1)) {\n                (*function_pointer)(*current_data,pointer3);\n                (**(code **)(*(long *)(param6 + 8) + 0x50))(0,pointer2);\n                (**(code **)(*(long *)(param6 + 8) + 0x50))(current_data[2],pointer3 + 8);\n                max_value = current_data[6];\n                temp_value = *current_data;\n                pointer3 = (undefined *)current_data[3];\n                pointer2 = temp_pointer2;\n                for (min_value = temp_value; min_value != 0; min_value = min_value - 1) {\n                  *pointer2 = *pointer3;\n                  pointer3 = pointer3 + (ulong)flag * -2 + 1;\n                  pointer2 = pointer2 + (ulong)flag * -2 + 1;\n                }\n                if (temp_value < max_value) {\n                  for (loop_counter = max_value - temp_value; loop_counter != 0; loop_counter = loop_counter + -1) {\n                    *pointer2 = 0;\n                    pointer2 = pointer2 + (ulong)flag * -2 + 1;\n                  }\n                }\n                pointer3 = temp_pointer2 + max_value;\n              }\n              else {\n                (*function_pointer)();\n                if (*(int *)(*(long *)(param6 + 8) + 8) == 5) {\n                  char_var = (*(char *)(*(long *)(param6 + 0x110) + 4) == '\\x02') * '\\b' + '\\b';\n                }\n                else {\n                  char_var = '\\b';\n                }\n                (**(code **)(*(long *)(param6 + 8) + 0x50))(char_var,pointer2);\n                (**(code **)(*(long *)(param6 + 8) + 0x50))(current_data[2],pointer3 + 8);\n                temp_value = *current_data;\n                pointer3 = (undefined *)current_data[3];\n                pointer2 = temp_pointer2;\n                for (max_value = temp_value; max_value != 0; max_value = max_value - 1) {\n                  *pointer2 = *pointer3;\n                  pointer3 = pointer3 + (ulong)flag * -2 + 1;\n                  pointer2 = pointer2 + (ulong)flag * -2 + 1;\n                }\n                max_value = current_data[6];\n                if (temp_value < max_value) {\n                  for (loop_counter = max_value - temp_value; loop_counter != 0; loop_counter = loop_counter + -1) {\n                    *pointer2 = 0;\n                    pointer2 = pointer2 + (ulong)flag * -2 + 1;\n                  }\n                }\n                loop_counter = *(long *)(param6 + 8);\n                temp_pointer2 = temp_pointer2 + max_value;\n                pointer3 = temp_pointer2 + 8;\n                if ((*(int *)(loop_counter + 8) == 5) &&\n                   (*(char *)(*(long *)(param6 + 0x110) + 4) == '\\x02')) {\n                  (**(code **)(loop_counter + 0x38))(current_data[7],temp_pointer2);\n                  (**(code **)(*(long *)(param6 + 8) + 0x38))(current_data[8],pointer3);\n                  pointer3 = temp_pointer2 + 0x10;\n                }\n                else {\n                  (**(code **)(loop_counter + 0x50))(current_data[7],temp_pointer2);\n                  (**(code **)(*(long *)(param6 + 8) + 0x50))(current_data[8],temp_pointer2 + 4);\n                }\n                param2 = current_data[7];\n                param1 = current_data[8];\n              }\n            }\n          }\n          max_value = (long)pointer3 - (long)temp_ptr;\n          temp_value = max_value;\n          pointer3 = temp_ptr;\n          if (max_value < param3) {\n            for (; param3 = max_value, temp_value != 0; temp_value = temp_value - 1) {\n              *output_array = *pointer3;\n              pointer3 = pointer3 + (ulong)flag * -2 + 1;\n              output_array = output_array + (ulong)flag * -2 + 1;\n            }\n          }\n          free(temp_ptr);\n          free(param4);\n          return param3;\n        }\n        comparison_value = current_data[0xb];\n      } while (comparison_value == 0);\n      max_value = current_data[0x10];\n      min_value = current_data[0x11];\n      counter = 0;\n      if (max_value != min_value) break;\n      current_data[0xb] = 0;\n    }\n  } while( true );\n}\n\n",
            "current_name": "extract_and_process_data_00116852",
            "entrypoint": "0x00116852",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00116852": "extract_and_process_data_00116852",
                "__ptr": "temp_ptr",
                "bVar14": "flag",
                "cVar10": "char_var",
                "free": "release_memory",
                "iVar3": "comparison_result",
                "in_R10": "counter",
                "in_R11": "comparison_value",
                "in_RCX": "array_size",
                "lVar7": "loop_counter",
                "memcmp": "compare_memory",
                "param_1": "compare_param1",
                "param_10": "param3",
                "param_11": "param4",
                "param_12": "output_array",
                "param_13": "param6",
                "param_14": "array_size",
                "param_7": "param1",
                "param_9": "param2",
                "pcVar2": "function_pointer",
                "psVar13": "current_data",
                "puVar11": "pointer2",
                "puVar12": "pointer3",
                "puVar9": "temp_pointer2",
                "qsort": "sort_data",
                "sVar1": "size",
                "uVar4": "counter",
                "uVar5": "min_value",
                "uVar6": "max_value",
                "uVar8": "temp_value",
                "unaff_R13": "start_pointer",
                "unaff_R14": "current_data",
                "unaff_R15": "max_value",
                "unaff_RBP": "temp_pointer",
                "unaff_RBX": "min_value",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00116ad0": {
            "called": [
                "_ITM_deregisterTMCloneTable"
            ],
            "calling": [
                "_FINI_0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00116ae3) */\n/* WARNING: Removing unreachable block (ram,0x00116aef) */\n\nvoid FUNC_00116ad0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00116ad0",
            "entrypoint": "0x00116ad0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00116ad0": "FUNC_00116ad0"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00116b00": {
            "called": [
                "_ITM_registerTMCloneTable"
            ],
            "calling": [
                "_INIT_0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00116b24) */\n/* WARNING: Removing unreachable block (ram,0x00116b30) */\n\nvoid FUNC_00116b00(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00116b00",
            "entrypoint": "0x00116b00",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00116b00": "FUNC_00116b00"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00116b90": {
            "called": [
                "FUN_00114190",
                "FUN_00108c86",
                "stat",
                "FUN_00108898",
                "free",
                "FUN_001199d0",
                "FUN_00114c80",
                "FUN_00108916",
                "free",
                "xcalloc",
                "bfd_set_error_program_name",
                "htab_find_slot",
                "FUN_00119ed0",
                "xmalloc_set_program_name",
                "strerror",
                "textdomain",
                "getopt_long",
                "dcgettext",
                "FUN_00114d60",
                "FUN_00113f50",
                "FUN_00119940",
                "bfd_init",
                "FUN_00113fe0",
                "strtoul",
                "close",
                "strcmp",
                "FUN_001126c0",
                "fprintf",
                "xexit",
                "bfd_get_error",
                "FUN_00114460",
                "xrealloc",
                "fclose",
                "FUN_00113f20",
                "ftell",
                "xstrdup",
                "FUN_00108800",
                "strcasecmp",
                "mkstemp",
                "FUN_00115970",
                "FUN_00108d9a",
                "strlen",
                "dup",
                "bfd_scan_arch",
                "strtol",
                "getc",
                "FUN_00119dd0",
                "filename_cmp",
                "FUN_0011a390",
                "strcpy",
                "FUN_0011a480",
                "FUN_00114cf0",
                "bfd_errmsg",
                "FUN_00114690",
                "htab_create_alloc",
                "htab_elements",
                "strncpy",
                "bindtextdomain",
                "FUN_00114c20",
                "FUN_00108a2a",
                "setlocale",
                "memmove",
                "unlink_if_ordinary",
                "strncasecmp",
                "bfd_set_default_target",
                "strchr",
                "fread",
                "FUN_00119970",
                "fseek",
                "FUN_00113fb0",
                "fopen",
                "FUN_001054af",
                "__errno_location",
                "xmalloc",
                "malloc",
                "memcpy",
                "ferror"
            ],
            "calling": [
                "entry"
            ],
            "code": "\n\n\nuint FUNC_00116b90(uint param_1,char **param_2)\n\n{\n  byte *pbVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  bool bVar4;\n  bool bVar5;\n  undefined *puVar6;\n  byte bVar7;\n  char cVar8;\n  int iVar9;\n  uint uVar10;\n  int iVar11;\n  undefined4 uVar12;\n  int iVar13;\n  FILE *pFVar14;\n  size_t sVar15;\n  byte *__s;\n  size_t sVar16;\n  byte *__ptr;\n  long lVar17;\n  char **ppcVar18;\n  long *__src;\n  char **ppcVar19;\n  undefined8 *puVar20;\n  char *__template;\n  FILE *pFVar21;\n  undefined8 uVar22;\n  FILE **ppFVar23;\n  undefined8 uVar24;\n  int *piVar25;\n  char *pcVar26;\n  ulong uVar27;\n  byte *pbVar28;\n  undefined **ppuVar29;\n  long lVar30;\n  byte *pbVar31;\n  char *pcVar32;\n  FILE *pFVar33;\n  char *pcVar34;\n  FILE *unaff_R12;\n  int iVar35;\n  uint uVar36;\n  char *unaff_R13;\n  byte bVar37;\n  FILE *pFVar38;\n  bool bVar39;\n  FILE *local_130;\n  FILE *local_120;\n  size_t local_118;\n  ulong local_110;\n  long *local_108;\n  FILE *local_d8;\n  FILE *local_d0;\n  undefined local_c8 [152];\n  \n  setlocale(5,\"\");\n  setlocale(0,\"\");\n  bindtextdomain(\"binutils\",\"/usr/share/locale\");\n  textdomain(\"binutils\");\n  DAT_001275e0 = *param_2;\n  xmalloc_set_program_name();\n  ppcVar18 = param_2;\n  if (1 < (int)param_1) {\n    local_120 = (FILE *)0x7d0;\n    unaff_R13 = (char *)(ulong)param_1;\n    unaff_R12 = (FILE *)0x1;\n    iVar11 = 0;\n    do {\n      iVar13 = (int)unaff_R12;\n      lVar30 = (long)iVar13;\n      iVar35 = (int)unaff_R13;\n      if (*ppcVar18[lVar30] == '@') {\n        uVar10 = (int)local_120 - 1;\n        local_120 = (FILE *)(ulong)uVar10;\n        if (uVar10 == 0) {\n          pcVar32 = *ppcVar18;\n          pcVar26 = \"%s: error: too many @-files encountered\\n\";\nLAB_00118365:\n          fprintf(_stderr,pcVar26,pcVar32);\n                    \n          xexit(1);\n        }\n        pcVar32 = ppcVar18[lVar30] + 1;\n        iVar9 = stat(pcVar32,(stat *)local_c8);\n        if (iVar9 < 0) goto LAB_00116fd0;\n        if ((local_c8._24_4_ & 0xf000) == 0x4000) {\n          pcVar32 = *ppcVar18;\n          pcVar26 = \"%s: error: @-file refers to a directory\\n\";\n          goto LAB_00118365;\n        }\n        pFVar14 = fopen(pcVar32,\"r\");\n        if (pFVar14 == (FILE *)0x0) goto LAB_00116fd0;\n        iVar9 = fseek(pFVar14,0,2);\n        if (((iVar9 == -1) || (sVar15 = ftell(pFVar14), sVar15 == 0xffffffffffffffff)) ||\n           (iVar9 = fseek(pFVar14,0,0), iVar9 == -1)) {\nLAB_00117070:\n          fclose(pFVar14);\n          if (iVar13 + 1 < iVar35) goto LAB_00116fde;\n          goto LAB_00117086;\n        }\n        __s = (byte *)xmalloc(sVar15 + 1);\n        sVar16 = fread(__s,1,sVar15,pFVar14);\n        if ((sVar15 != sVar16) && (iVar9 = ferror(pFVar14), iVar9 != 0)) {\n          free(__s);\n          goto LAB_00117070;\n        }\n        __s[sVar16] = 0;\n        bVar7 = *__s;\n        pbVar28 = __s;\n        if (bVar7 != 0) {\nLAB_00116d58:\n          if (((&_sch_istable)[(ulong)bVar7 * 2] & 0x40) != 0) goto LAB_00116d48;\n          sVar15 = strlen((char *)__s);\n          __ptr = (byte *)xmalloc(sVar15 + 1);\n          __src = (long *)0x0;\n          iVar9 = 0;\n          bVar39 = false;\n          bVar5 = false;\n          bVar4 = false;\n          local_110 = 0;\n          pbVar28 = __s;\n          do {\n            while (((&_sch_istable)[(ulong)*pbVar28 * 2] & 0x40) != 0) {\n              pbVar28 = pbVar28 + 1;\n            }\n            if ((iVar9 == 0) || (iVar9 + -1 <= (int)local_110)) {\n              if (__src == (long *)0x0) {\n                iVar9 = 8;\n                __src = (long *)xmalloc(0x40);\n                local_108 = __src + local_110;\n                *local_108 = 0;\n              }\n              else {\n                iVar9 = iVar9 * 2;\n                __src = (long *)xrealloc(__src,(long)iVar9 << 3);\n                local_108 = __src + local_110;\n                *local_108 = 0;\n              }\n            }\n            else {\n              local_108 = __src + local_110;\n            }\n            bVar7 = *pbVar28;\n            pbVar31 = __ptr;\n            while (bVar7 != 0) {\n              while( true ) {\n                if ((((&_sch_istable)[(ulong)bVar7 * 2] & 0x40) != 0) &&\n                   (!(bool)(bVar5 | bVar4 | bVar39))) {\n                  bVar4 = false;\n                  bVar39 = false;\n                  bVar5 = false;\n                  goto LAB_00116e3f;\n                }\n                if (!bVar4) break;\n                pbVar28 = pbVar28 + 1;\n                *pbVar31 = bVar7;\n                pbVar31 = pbVar31 + 1;\n                bVar4 = false;\n                bVar7 = *pbVar28;\n                if (bVar7 == 0) goto LAB_00116e3f;\n              }\n              if (bVar7 == 0x5c) {\n                bVar4 = true;\n              }\n              else if (bVar5) {\n                if (bVar7 == 0x27) {\n                  bVar5 = false;\n                }\n                else {\nLAB_00116fb1:\n                  *pbVar31 = bVar7;\n                  pbVar31 = pbVar31 + 1;\n                }\n              }\n              else if (bVar39) {\n                if (bVar7 != 0x22) goto LAB_00116fb1;\n                bVar39 = false;\n              }\n              else if (bVar7 == 0x27) {\n                bVar5 = true;\n              }\n              else {\n                if (bVar7 != 0x22) goto LAB_00116fb1;\n                bVar39 = true;\n              }\n              pbVar1 = pbVar28 + 1;\n              pbVar28 = pbVar28 + 1;\n              bVar7 = *pbVar1;\n            }\nLAB_00116e3f:\n            *pbVar31 = 0;\n            lVar17 = xstrdup(__ptr);\n            *local_108 = lVar17;\n            __src[local_110 + 1] = 0;\n            bVar7 = *pbVar28;\n            bVar2 = (&_sch_istable)[(ulong)bVar7 * 2];\n            while ((bVar2 & 0x40) != 0) {\n              bVar7 = pbVar28[1];\n              pbVar28 = pbVar28 + 1;\n              bVar2 = (&_sch_istable)[(ulong)bVar7 * 2];\n            }\n            local_110 = local_110 + 1;\n          } while (bVar7 != 0);\n          free(__ptr);\n          ppcVar19 = ppcVar18;\n          if (param_2 == ppcVar18) goto LAB_001172ad;\n          goto LAB_00116ed7;\n        }\nLAB_0011728f:\n        __src = (long *)xmalloc(8);\n        *__src = 0;\n        if (param_2 == ppcVar18) {\nLAB_001172ad:\n          if (*ppcVar18 == (char *)0x0) {\n            iVar9 = 0;\n          }\n          else {\n            lVar17 = 1;\n            do {\n              iVar9 = (int)lVar17;\n              ppcVar19 = ppcVar18 + lVar17;\n              lVar17 = lVar17 + 1;\n            } while (*ppcVar19 != (char *)0x0);\n          }\n          lVar17 = 0;\n          ppcVar19 = (char **)xmalloc((long)(iVar9 + 1) << 3);\n          pcVar32 = *ppcVar18;\n          while (pcVar32 != (char *)0x0) {\n            uVar24 = xstrdup();\n            *(undefined8 *)((long)ppcVar19 + lVar17) = uVar24;\n            lVar17 = lVar17 + 8;\n            pcVar32 = *(char **)((long)ppcVar18 + lVar17);\n          }\n          *(undefined8 *)((long)ppcVar19 + lVar17) = 0;\nLAB_00116ed7:\n          ppcVar18 = ppcVar19;\n          if (*__src == 0) goto LAB_00117768;\n          lVar17 = 0;\n          do {\n            lVar17 = lVar17 + 1;\n          } while (__src[lVar17] != 0);\n          local_118 = lVar17 * 8;\n        }\n        else {\nLAB_00117768:\n          lVar17 = 0;\n          local_118 = 0;\n        }\n        free(ppcVar18[lVar30]);\n        ppcVar18 = (char **)xrealloc(ppcVar18,(lVar17 + 1 + (long)iVar35) * 8);\n        uVar36 = iVar35 + -1 + (int)lVar17;\n        unaff_R13 = (char *)(ulong)uVar36;\n        memmove(ppcVar18 + lVar30 + lVar17,ppcVar18 + 1 + lVar30,(long)(iVar35 - iVar13) << 3);\n        memcpy(ppcVar18 + lVar30,__src,local_118);\n        free(__src);\n        free(__s);\n        fclose(pFVar14);\n        uVar10 = iVar11 + 1;\n        unaff_R12 = (FILE *)(lVar30 * 8);\n        if ((int)uVar36 <= (int)uVar10) goto LAB_00117086;\n      }\n      else {\nLAB_00116fd0:\n        if (iVar35 <= iVar13 + 1) goto LAB_00117086;\nLAB_00116fde:\n        uVar10 = iVar13 + 1;\n        iVar11 = iVar13;\n      }\n      unaff_R12 = (FILE *)(ulong)uVar10;\n    } while( true );\n  }\nLAB_0011708b:\n  DAT_00127a2c = 0;\n  DAT_00127a28 = 0;\n  iVar11 = bfd_init();\n  pcVar32 = \"fatal error: libbfd ABI mismatch\";\n  if (iVar11 != 0x118) {\nLAB_00117aed:\n    uVar24 = dcgettext(0,pcVar32,5);\n                    \n    FUN_00119dd0(uVar24);\n  }\n  pcVar32 = \"x86_64-pc-linux-gnu\";\n  bVar7 = bfd_set_default_target(\"x86_64-pc-linux-gnu\",\"fatal error: libbfd ABI mismatch\",5);\n  pcVar26 = DAT_001275e0;\n  if (bVar7 == 0) {\n    uVar12 = bfd_get_error();\n    pcVar26 = (char *)bfd_errmsg(uVar12);\n    pcVar34 = \"can\\'t set BFD default target to `%s\\': %s\";\nLAB_00118de6:\n    uVar24 = dcgettext(0,pcVar34,5);\n                    \n    FUN_00119dd0(uVar24,pcVar32,pcVar26);\n  }\n  uVar10 = _DAT_00127a24;\n  if ((int)_DAT_00127a24 < 0) {\n    sVar15 = strlen(DAT_001275e0);\n    uVar10 = 0;\n    if (4 < (int)sVar15) {\n      iVar11 = filename_cmp(pcVar26 + (long)(int)sVar15 + -5,\"strip\");\n      uVar10 = (uint)(iVar11 == 0);\n    }\n  }\n  _DAT_00127a24 = uVar10;\n  DAT_001279f8 = FUN_00113f20();\n  DAT_001279f0 = FUN_00113f20();\n  DAT_00127a08 = FUN_00113f20();\n  DAT_001279e8 = FUN_00113f20();\n  DAT_001279e0 = FUN_00113f20();\n  DAT_001279d8 = FUN_00113f20();\n  DAT_001279d0 = FUN_00113f20();\n  DAT_001278d0 = htab_create_alloc(0x10,FUN_00108800,FUN_00108898);\n  DAT_001278c8 = FUN_00113f20();\n  puVar6 = PTR_DAT_001264c0;\n  if (__xexit_cleanup == (code *)0x0) {\n    __xexit_cleanup = FUN_0011a390;\n  }\n  if (0x1f < *(int *)(PTR_DAT_001264c0 + 8)) {\n    puVar20 = (undefined8 *)malloc(0x110);\n    if (puVar20 == (undefined8 *)0x0) goto LAB_001171a7;\n    *puVar20 = puVar6;\n    *(undefined4 *)(puVar20 + 1) = 0;\n    PTR_DAT_001264c0 = (undefined *)puVar20;\n  }\n  puVar6 = PTR_DAT_001264c0;\n  iVar11 = *(int *)(PTR_DAT_001264c0 + 8);\n  *(int *)(PTR_DAT_001264c0 + 8) = iVar11 + 1;\n  *(code **)(puVar6 + (long)iVar11 * 8 + 0x10) = FUN_001054af;\nLAB_001171a7:\n  bfd_set_error_program_name(*ppcVar18);\n  if (_DAT_00127a24 != 0) {\n    local_130 = (FILE *)0x0;\n    unaff_R12 = (FILE *)0x0;\n    ppuVar29 = (undefined **)(FILE *)0x0;\n    pFVar14 = (FILE *)0x0;\n    bVar37 = 0;\n    bVar2 = 0;\nswitchD_001177df_caseD_0:\n    do {\n      uVar12 = getopt_long(param_1,ppcVar18,\"I:O:F:K:MN:R:o:sSpdgxXHhVvwDU\",\n                           &PTR_s_disable_deterministic_archives_001264e0);\n      pFVar21 = _optarg;\n      switch(uVar12) {\n      case 0x44:\n        _DAT_001264b0 = 1;\n        break;\n      case 0x48:\n      case 0x68:\n        FUN_00108a2a(_stdout,0);\n      case 0x46:\n        local_130 = _optarg;\n        pFVar14 = _optarg;\n        break;\n      case 0x49:\n        local_130 = _optarg;\n        break;\n      case 0x4b:\n        local_120 = _optarg;\n        ppFVar23 = (FILE **)htab_find_slot(DAT_00127a08,_optarg,1);\n        *ppFVar23 = pFVar21;\n        break;\n      case 0x4d:\n        DAT_00127a00 = bVar7;\n        bVar2 = bVar7;\n        break;\n      case 0x4e:\n        local_120 = _optarg;\n        ppFVar23 = (FILE **)htab_find_slot(DAT_001279f8,_optarg,1);\n        *ppFVar23 = pFVar21;\n        break;\n      case 0x4f:\n        pFVar14 = _optarg;\n        break;\n      case 0x52:\n        FUN_00114c20(_optarg);\n        break;\n      case 0x53:\n      case 100:\n      case 0x67:\n        DAT_00127a2c = 2;\n        break;\n      case 0x55:\n        _DAT_001264b0 = 0;\n        break;\n      case 0x56:\n        unaff_R12 = (FILE *)(ulong)bVar7;\n        break;\n      case 0x58:\n        DAT_00127a28 = 1;\n        break;\n      case 0x6f:\n        ppuVar29 = (undefined **)_optarg;\n        break;\n      case 0x70:\n        DAT_001279cb = 1;\n        break;\n      case 0x73:\n        DAT_00127a2c = 7;\n        break;\n      case 0x76:\n        DAT_001279c9 = 1;\n        break;\n      case 0x77:\n        DAT_001279ca = 1;\n        break;\n      case 0x78:\n        DAT_00127a28 = 2;\n        break;\n      case 0xa9:\n        bVar37 = bVar7;\n        break;\n      case 0xb2:\n        DAT_00127a18 = 1;\n        break;\n      case 0xb3:\n        FUN_00114190(_optarg,1,4);\n        break;\n      case 0xb5:\n        DAT_00127939 = 1;\n        break;\n      case 0xba:\n        DAT_00127a00 = 0;\n        bVar2 = bVar7;\n        break;\n      case 0xbc:\n        DAT_00127a2c = 4;\n        break;\n      case 0xc6:\n        FUN_00114190(_optarg,1,0x100);\n        break;\n      case 0xd0:\n        DAT_00127a2c = 5;\n        break;\n      case 0xd2:\n        goto switchD_001177df_caseD_d2;\n      default:\n        if (((bVar2 == 0) && (DAT_00127a2c < 8)) &&\n           ((-0xdaL >> ((byte)DAT_00127a2c & 0x3f) & 1U) == 0)) {\n          DAT_00127a00 = 1;\n        }\n        if (bVar37 != 0) goto LAB_00118a4c;\n        if ((char)unaff_R12 != '\\0') {\n          FUN_00119970(\"strip\");\n          goto LAB_001189a2;\n        }\n        if (_DAT_001264b0 < 0) {\n          _DAT_001264b0 = 1;\n        }\n        if (((DAT_00127a2c | DAT_00127a28) == 0) &&\n           (lVar30 = htab_elements(DAT_001279f8), lVar30 == 0)) {\n          DAT_00127a2c = 7;\n        }\n        if (pFVar14 == (FILE *)0x0) {\n          pFVar14 = local_130;\n        }\n        unaff_R12 = (FILE *)(long)(int)_optind;\n        if ((_optind != param_1) &&\n           (((FILE *)ppuVar29 == (FILE *)0x0 || ((int)param_1 <= (int)(_optind + 1)))))\n        goto LAB_00117888;\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 5:\n      case 6:\n      case 7:\n      case 8:\n      case 9:\n      case 10:\n      case 0xb:\n      case 0xc:\n      case 0xd:\n      case 0xe:\n      case 0xf:\n      case 0x10:\n      case 0x11:\n      case 0x12:\n      case 0x13:\n      case 0x14:\n      case 0x15:\n      case 0x16:\n      case 0x17:\n      case 0x18:\n      case 0x19:\n      case 0x1a:\n      case 0x1b:\n      case 0x1c:\n      case 0x1d:\n      case 0x1e:\n      case 0x1f:\n      case 0x20:\n      case 0x21:\n      case 0x22:\n      case 0x23:\n      case 0x24:\n      case 0x25:\n      case 0x26:\n      case 0x27:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x3f:\n      case 0x40:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x45:\n      case 0x47:\n      case 0x4a:\n      case 0x4c:\n      case 0x50:\n      case 0x51:\n      case 0x54:\n      case 0x57:\n      case 0x59:\n      case 0x5a:\n      case 0x5b:\n      case 0x5c:\n      case 0x5d:\n      case 0x5e:\n      case 0x5f:\n      case 0x60:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 0x65:\n      case 0x66:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x71:\n      case 0x72:\n      case 0x74:\n      case 0x75:\n      case 0x79:\n      case 0x7a:\n      case 0x7b:\n      case 0x7c:\n      case 0x7d:\n      case 0x7e:\n      case 0x7f:\n      case 0x80:\n      case 0x81:\n      case 0x82:\n      case 0x83:\n      case 0x84:\n      case 0x85:\n      case 0x86:\n      case 0x87:\n      case 0x88:\n      case 0x89:\n      case 0x8a:\n      case 0x8b:\n      case 0x8c:\n      case 0x8d:\n      case 0x8e:\n      case 0x8f:\n      case 0x90:\n      case 0x91:\n      case 0x92:\n      case 0x93:\n      case 0x94:\n      case 0x95:\n      case 0x96:\n      case 0x97:\n      case 0x98:\n      case 0x99:\n      case 0x9a:\n      case 0x9b:\n      case 0x9c:\n      case 0x9d:\n      case 0x9e:\n      case 0x9f:\n      case 0xa0:\n      case 0xa1:\n      case 0xa2:\n      case 0xa3:\n      case 0xa4:\n      case 0xa5:\n      case 0xa6:\n      case 0xa7:\n      case 0xa8:\n      case 0xaa:\n      case 0xab:\n      case 0xac:\n      case 0xad:\n      case 0xae:\n      case 0xaf:\n      case 0xb0:\n      case 0xb1:\n      case 0xb4:\n      case 0xb6:\n      case 0xb7:\n      case 0xb8:\n      case 0xb9:\n      case 0xbb:\n      case 0xbd:\n      case 0xbe:\n      case 0xbf:\n      case 0xc0:\n      case 0xc1:\n      case 0xc2:\n      case 0xc3:\n      case 0xc4:\n      case 0xc5:\n      case 199:\n      case 200:\n      case 0xc9:\n      case 0xca:\n      case 0xcb:\n      case 0xcc:\n      case 0xcd:\n      case 0xce:\n      case 0xcf:\n      case 0xd1:\n        FUN_00108a2a(_stderr,1);\n        unaff_R13 = (char *)&PTR_s_disable_deterministic_archives_001264e0;\n        goto switchD_00117234_caseD_c1;\n      }\n    } while( true );\n  }\n  local_108 = (long *)0x0;\n  local_d8 = (FILE *)0x0;\n  local_d0 = (FILE *)0x0;\n  local_130 = (FILE *)(ulong)bVar7;\n  local_120 = (FILE *)0x0;\n  local_118 = 0;\n  local_110 = 0;\n  ppuVar29 = (undefined **)(FILE *)0x0;\n  bVar2 = 0;\nswitchD_00117234_caseD_0:\n  uVar36 = getopt_long(param_1,ppcVar18,\"b:B:i:I:j:K:MN:s:O:d:F:L:G:R:SpgxXHhVvW:wDU\",\n                       &PTR_s_add_gnu_debuglink_001268e0);\n  pFVar14 = _optarg;\n  uVar10 = DAT_001278e8;\n  pcVar26 = (char *)(ulong)uVar36;\n  if (uVar36 != 0xffffffff) goto code_r0x00117223;\n  if (bVar2 != 0) {\n    pcVar32 = \"--globalize-symbol(s) is incompatible with -G/--keep-global-symbol(s)\";\n    if ((char)local_108 != '\\0') goto LAB_00117aed;\n  }\n  if ((char)local_118 != '\\0') {\nLAB_00118a4c:\n    FUN_001199d0();\n    return DAT_00127a20;\n  }\n  if ((char)local_110 != '\\0') {\n    FUN_00119970(\"objcopy\");\n    goto LAB_00118398;\n  }\n  if ((DAT_00127a1c != 0) && (DAT_001264bc == -1)) {\n    pcVar32 = \"interleave start byte must be set with --byte\";\n    goto LAB_00117aed;\n  }\n  if (DAT_00127a1c <= DAT_001264bc) {\n    pcVar32 = \"byte number must be less than interleave\";\n    goto LAB_00117aed;\n  }\n  pcVar32 = \"interleave width must be less than or equal to interleave - byte`\";\n  if (DAT_00127a1c - DAT_001264bc < DAT_001264b8) goto LAB_00117aed;\n  if ((_optind == param_1) || ((int)(_optind + 2) < (int)param_1)) goto switchD_00117234_caseD_1;\n  pcVar32 = ppcVar18[(int)_optind];\n  if ((int)(_optind + 1) < (int)param_1) {\n    pcVar34 = ppcVar18[(long)(int)_optind + 1];\n  }\n  else {\n    pcVar34 = (char *)0x0;\n  }\n  if (_DAT_001264b0 < 0) {\n    _DAT_001264b0 = 1;\n  }\n  if ((DAT_00127a2c | DAT_00127a28) == 0) {\n    DAT_00127a2c = 1;\n  }\n  if (local_d0 == (FILE *)0x0) {\n    local_d0 = local_d8;\n    if (local_d8 != (FILE *)0x0) {\nLAB_00117661:\n      cVar8 = FUN_00113fb0(local_d8,&DAT_0011b300);\n      if (cVar8 != '\\0') {\n        iVar11 = FUN_00108c86(&local_d8);\n        if (iVar11 < 0) {\n          pcVar32 = \"unknown input EFI target: %s\";\n          pFVar14 = local_d8;\n          goto LAB_001176c2;\n        }\n        if (local_d0 == (FILE *)0x0) goto LAB_0011743e;\n      }\n      goto LAB_001175b1;\n    }\n  }\n  else {\n    if (local_d8 != (FILE *)0x0) goto LAB_00117661;\nLAB_001175b1:\n    cVar8 = FUN_00113fb0(local_d0,&DAT_0011b300);\n    if (cVar8 != '\\0') {\n      iVar11 = FUN_00108c86(&local_d0);\n      if (iVar11 < 0) {\n        pcVar32 = \"unknown output EFI target: %s\";\n        pFVar14 = local_d0;\n        goto LAB_001176c2;\n      }\n      if (DAT_00126474 == -1) {\n        DAT_00126474 = (short)iVar11;\n      }\n      if (DAT_001264a8 == -1) {\n        DAT_001264a8 = 0x200;\n      }\n      if (DAT_00126488 == -1) {\n        DAT_00126488 = 0x1000;\n      }\n    }\n  }\nLAB_0011743e:\n  if ((pcVar34 == (char *)0x0) || (uVar10 = filename_cmp(pcVar32,pcVar34), uVar10 == 0)) {\n    __template = (char *)FUN_00114cf0(pcVar32);\n    uVar36 = mkstemp(__template);\n    if (uVar36 == 0xffffffff) {\n      free(__template);\n      piVar25 = __errno_location();\n      pcVar26 = strerror(*piVar25);\n      pcVar34 = \"warning: could not create temporary file whilst copying \\'%s\\', (error: %s)\";\n      goto LAB_00118de6;\n    }\n    uVar10 = uVar36;\n    if (-1 < (int)uVar36) {\n      uVar10 = dup(uVar36);\n      pcVar26 = (char *)(ulong)uVar10;\n    }\n  }\n  else {\n    uVar36 = 0xffffffff;\n    __template = pcVar34;\n  }\n  FUN_00114690(pcVar32,__template,uVar36,local_c8,local_d8,local_d0,local_120,uVar10);\n  if (DAT_00127a20 == 0) {\n    if (pcVar34 != (char *)0x0) {\n      pcVar32 = pcVar34;\n    }\n    iVar11 = FUN_00115970(__template,pcVar32,pcVar26,local_c8,DAT_001279cb);\n    DAT_00127a20 = (uint)(iVar11 != 0);\n  }\n  else {\n    if (-1 < (int)pcVar26) {\n      close((int)pcVar26);\n    }\n    unlink_if_ordinary(__template);\n  }\n  if (pcVar34 != __template) {\n    free(__template);\n  }\n  puVar20 = DAT_001278e0;\n  if ((char)local_130 != '\\0') {\n    for (; puVar20 != (undefined8 *)0x0; puVar20 = (undefined8 *)*puVar20) {\n      if (*(char *)(puVar20 + 2) == '\\0') {\n        uVar10 = *(uint *)((long)puVar20 + 0x14);\n        if ((uVar10 & 0x18) != 0) {\n          uVar24 = puVar20[3];\n          uVar3 = puVar20[1];\n          uVar22 = dcgettext(0,\"%s %s%c0x%lx never used\",5);\n          FUN_00119ed0(uVar22,\"--change-section-vma\",uVar3,\n                       (-(uint)((uVar10 & 8) == 0) & 0xffffffee) + 0x3d,uVar24);\n          uVar10 = *(uint *)((long)puVar20 + 0x14);\n        }\n        if ((uVar10 & 0x60) != 0) {\n          uVar24 = puVar20[4];\n          uVar3 = puVar20[1];\n          uVar22 = dcgettext(0,\"%s %s%c0x%lx never used\",5);\n          FUN_00119ed0(uVar22,\"--change-section-lma\",uVar3,\n                       (-(uint)((uVar10 & 0x20) == 0) & 0xffffffee) + 0x3d,uVar24);\n        }\n      }\n    }\n  }\n  free(DAT_00127950);\n  free(DAT_00127948);\n  free(DAT_00127940);\n  free(DAT_00127930);\n  free(DAT_00127928);\n  free(DAT_00127920);\n  free(DAT_00127918);\n  return DAT_00127a20;\nLAB_00116d48:\n  bVar7 = pbVar28[1];\n  pbVar28 = pbVar28 + 1;\n  if (bVar7 == 0) goto LAB_0011728f;\n  goto LAB_00116d58;\nLAB_00117086:\n  param_1 = (uint)unaff_R13;\n  goto LAB_0011708b;\nLAB_00117888:\n  uVar10 = DAT_00127a20;\n  if ((int)param_1 <= (int)unaff_R12) {\n    return DAT_00127a20;\n  }\n  lVar30 = FUN_00113f50(ppcVar18[(long)unaff_R12]);\n  if (lVar30 < 1) {\nLAB_00118edb:\n    DAT_00127a20 = 1;\n  }\n  else {\n    pcVar32 = ppcVar18[(long)unaff_R12];\n    if ((FILE *)ppuVar29 == (FILE *)0x0) {\nLAB_001178b9:\n      pFVar21 = (FILE *)FUN_00114cf0(pcVar32);\n      iVar11 = mkstemp((char *)pFVar21);\n      if (iVar11 == -1) {\n        free(pFVar21);\n        uVar24 = dcgettext(0,\"could not create temporary file to hold stripped copy\",5);\n        FUN_001126c0(ppcVar18[(long)unaff_R12],0,0,uVar24);\n        goto LAB_00118edb;\n      }\n      iVar13 = -1;\n      if (-1 < iVar11) {\n        iVar13 = dup(iVar11);\n      }\n    }\n    else {\n      iVar11 = filename_cmp(pcVar32,ppuVar29);\n      if (iVar11 == 0) {\n        pcVar32 = ppcVar18[(long)unaff_R12];\n        goto LAB_001178b9;\n      }\n      iVar11 = -1;\n      iVar13 = -1;\n      pFVar21 = (FILE *)ppuVar29;\n    }\n    DAT_00127a20 = 0;\n    FUN_00114690(ppcVar18[(long)unaff_R12],pFVar21,iVar11,local_c8,local_130,pFVar14,0);\n    if (DAT_00127a20 == 0) {\n      pFVar33 = (FILE *)ppuVar29;\n      if ((FILE *)ppuVar29 == (FILE *)0x0) {\n        pFVar33 = (FILE *)ppcVar18[(long)unaff_R12];\n      }\n      iVar11 = FUN_00115970(pFVar21,pFVar33,iVar13,local_c8,DAT_001279cb);\n      DAT_00127a20 = uVar10;\n      if (iVar11 != 0) {\n        DAT_00127a20 = 1;\n      }\n    }\n    else {\n      if (-1 < iVar13) {\n        close(iVar13);\n      }\n      unlink_if_ordinary(pFVar21);\n    }\n    if ((FILE *)ppuVar29 != pFVar21) {\n      free(pFVar21);\n    }\n  }\n  unaff_R12 = (FILE *)((long)&unaff_R12->_flags + 1);\n  goto LAB_00117888;\nswitchD_001177df_caseD_d2:\n  DAT_00127a2c = 3;\n  goto switchD_001177df_caseD_0;\nLAB_001189a2:\n  pcVar32 = \"bad format for --set-section-alignment: numeric argument needed\";\n  goto LAB_00117aed;\nLAB_00119858:\n  if (iVar13 == 10) goto LAB_0011902d;\n  if (iVar13 == 0xd) goto LAB_00119866;\n  if (iVar13 + 1U < 2) goto LAB_001198cd;\n  if ((iVar13 != 0x20) && (iVar13 != 9)) {\n    if (iVar13 != 0x23) goto LAB_001198d6;\n    goto LAB_001198ec;\n  }\n  iVar13 = getc((FILE *)ppuVar29);\n  goto LAB_00119858;\nLAB_0011902d:\n  if (iVar13 == 0xd) {\nLAB_00119866:\n    iVar13 = getc((FILE *)ppuVar29);\n    if (iVar13 == 10) {\n      if (*(char *)(int *)unaff_R13 != '\\0') {\n        FUN_00108d9a(pFVar14,unaff_R13,\n                     (undefined *)((long)&unaff_R12->_flags + (long)(int *)unaff_R13));\n      }\n      goto LAB_0011988e;\n    }\nLAB_001198cd:\n    if (iVar13 != -1) {\nLAB_001198d6:\n      pcVar32 = \"%s:%d: garbage found at end of line\";\nLAB_00119756:\n      uVar24 = dcgettext(0,pcVar32,5);\n                    \n      FUN_00119dd0(uVar24,pFVar14,iVar11 + -1);\n    }\n  }\n  else {\n    iVar13 = 10;\n  }\nLAB_0011903b:\n  if (*(char *)(int *)unaff_R13 != '\\0') {\n    FUN_00108d9a(pFVar14,unaff_R13,(undefined *)((long)&unaff_R12->_flags + (long)(int *)unaff_R13))\n    ;\n  }\n  unaff_R12 = (FILE *)ppuVar29;\n  if (iVar13 == -1) goto LAB_00119065;\nLAB_0011988e:\n  iVar13 = getc((FILE *)ppuVar29);\n  iVar11 = iVar11 + 1;\n  goto LAB_00118ace;\nswitchD_00117234_caseD_c7:\n  pcVar32 = strchr((char *)_optarg,0x3d);\n  if ((pcVar32 != (char *)0x0) && ((int)pcVar32 != iVar11)) {\n    uVar27 = (long)pcVar32 - (long)pFVar14 & 0xffffffff;\n    pcVar34 = pcVar32 + 1;\n    pcVar26 = (char *)xmalloc((int)((long)pcVar32 - (long)pFVar14) + 1);\n    strncpy(pcVar26,(char *)_optarg,uVar27);\n    pcVar26[uVar27] = '\\0';\n    pcVar32 = strchr(pcVar34,0x2c);\n    if (pcVar32 == (char *)0x0) {\n      unaff_R12 = (FILE *)0xffffffff;\n      sVar15 = strlen(pcVar34);\n      sVar15 = sVar15 & 0xffffffff;\n    }\n    else {\n      sVar15 = (size_t)(uint)((int)pcVar32 - (int)pcVar34);\n      uVar10 = FUN_00113fe0(pcVar32 + 1);\n      unaff_R12 = (FILE *)(ulong)uVar10;\n    }\n    if ((int)sVar15 != 0) {\n      unaff_R13 = (char *)xmalloc((int)sVar15 + 1);\n      strncpy(unaff_R13,pcVar34,sVar15);\n      *(undefined *)((long)(int *)unaff_R13 + sVar15) = 0;\n      ppuVar29 = (undefined **)DAT_001278d8;\n      goto LAB_00117f6f;\n    }\n  }\n  uVar24 = dcgettext(0,\"bad format for %s\",5);\n                    \n  FUN_00119dd0(uVar24,\"--rename-section\");\ncode_r0x00117223:\n  iVar11 = (int)_optarg;\n  switch(pcVar26) {\n  case (char *)0x0:\n    goto switchD_00117234_caseD_0;\n  default:\nswitchD_00117234_caseD_1:\n    FUN_00108916(_stderr,1);\n    do {\n      iVar11 = strcmp(*ppuVar29,pcVar26);\n      if (iVar11 == 0) {\n        iVar11 = strcmp(*(char **)((long)ppuVar29 + 8),unaff_R13);\n        if ((iVar11 != 0) || ((int)unaff_R12 != *(int *)((long)ppuVar29 + 0x10))) {\n          uVar24 = dcgettext(0,\"Multiple renames of section %s\",5);\n                    \n          FUN_00119dd0(uVar24,pcVar26);\n        }\n        goto switchD_00117234_caseD_0;\n      }\n      ppuVar29 = (undefined **)*(FILE **)((long)ppuVar29 + 0x18);\nLAB_00117f6f:\n    } while ((FILE *)ppuVar29 != (FILE *)0x0);\n    pFVar14 = (FILE *)xmalloc(0x20);\n    *(char **)pFVar14 = pcVar26;\n    pFVar14->_IO_read_ptr = unaff_R13;\n    *(int *)&pFVar14->_IO_read_end = (int)unaff_R12;\n    pFVar14->_IO_read_base = (char *)DAT_001278d8;\n    DAT_001278d8 = pFVar14;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x42:\n    ppuVar29 = (undefined **)&optarg;\n    local_120 = (FILE *)bfd_scan_arch(_optarg);\n    if (local_120 != (FILE *)0x0) goto switchD_00117234_caseD_0;\n    pcVar32 = \"architecture %s unknown\";\n    pFVar14 = _optarg;\n    break;\n  case (char *)0x44:\n    _DAT_001264b0 = 1;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x46:\n    local_d0 = _optarg;\n    local_d8 = _optarg;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x47:\n    ppFVar23 = (FILE **)htab_find_slot(DAT_001279d8,_optarg,1);\n    *ppFVar23 = pFVar14;\n    local_108 = (long *)(ulong)bVar7;\n    ppuVar29 = (undefined **)pFVar14;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x48:\n  case (char *)0x68:\n    FUN_00108916(_stdout,0);\n  case (char *)0xcd:\n    _bfd_srec_forceS3 = 1;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x49:\n  case (char *)0x73:\n    local_d8 = _optarg;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x4b:\n    ppFVar23 = (FILE **)htab_find_slot(DAT_00127a08,_optarg,1);\n    *ppFVar23 = pFVar14;\n    ppuVar29 = (undefined **)pFVar14;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x4c:\n    ppFVar23 = (FILE **)htab_find_slot(DAT_001279e8,_optarg,1);\n    *ppFVar23 = pFVar14;\n    ppuVar29 = (undefined **)pFVar14;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x4d:\n    DAT_00127a00 = 1;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x4e:\n    ppFVar23 = (FILE **)htab_find_slot(DAT_001279f8,_optarg,1);\n    *ppFVar23 = pFVar14;\n    ppuVar29 = (undefined **)pFVar14;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x4f:\n  case (char *)0x64:\n    local_d0 = _optarg;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x52:\n    FUN_00114c20(_optarg);\n    goto switchD_00117234_caseD_0;\n  case (char *)0x53:\n    DAT_00127a2c = 7;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x55:\n    _DAT_001264b0 = 0;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x56:\n    local_110 = (ulong)bVar7;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x57:\n    ppFVar23 = (FILE **)htab_find_slot(DAT_001279d0,_optarg,1);\n    *ppFVar23 = pFVar14;\n    ppuVar29 = (undefined **)pFVar14;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x58:\n    DAT_00127a28 = 1;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x62:\n    lVar30 = strtol((char *)_optarg,(char **)0x0,10);\n    DAT_001264bc = (int)lVar30;\n    if (DAT_001264bc < 0) {\n      pcVar32 = \"byte number must be non-negative\";\n      goto LAB_00117aed;\n    }\n    goto switchD_00117234_caseD_0;\n  case (char *)0x67:\n    DAT_00127a2c = 2;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x69:\n    if (_optarg == (FILE *)0x0) {\n      DAT_00127a1c = 4;\n    }\n    else {\n      lVar30 = strtol((char *)_optarg,(char **)0x0,10);\n      DAT_00127a1c = (int)lVar30;\n      if (DAT_00127a1c < 1) {\n        pcVar32 = \"interleave must be positive\";\n        goto LAB_00117aed;\n      }\n    }\n    goto switchD_00117234_caseD_0;\n  case (char *)0x6a:\n    FUN_00114190(_optarg,1,2);\n    DAT_00127a19 = 1;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x70:\n    DAT_001279cb = 1;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x76:\n    DAT_001279c9 = 1;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x77:\n    DAT_001279ca = 1;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x78:\n    DAT_00127a28 = 2;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x96:\n    DAT_001279c0 = FUN_00114c80(_optarg,DAT_001279c0,\"--add-section\");\n    FUN_00114d60(DAT_001279c0);\n    goto switchD_00117234_caseD_0;\n  case (char *)0x97:\n    DAT_001264b4 = 1;\n    DAT_00127a10 = _optarg;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x98:\n    puVar20 = (undefined8 *)xmalloc(0x30);\n    *puVar20 = 0;\n    unaff_R13 = (char *)_optarg;\n    pcVar32 = strchr((char *)_optarg,0x3d);\n    if (pcVar32 == (char *)0x0) {\n      uVar24 = dcgettext(0,\"bad format for %s\",5);\n                    \n      FUN_00119dd0(uVar24,\"--add-symbol\");\n    }\n    ppuVar29 = (undefined **)(pcVar32 + 1);\n    pcVar32 = strchr((char *)ppuVar29,0x3a);\n    uVar24 = FUN_0011a480(unaff_R13);\n    puVar20[1] = uVar24;\n    if (pcVar32 == (char *)0x0) {\n      puVar20[4] = 0;\n      lVar30 = strtol((char *)ppuVar29,(char **)0x0,0);\n    }\n    else {\n      uVar24 = FUN_0011a480(ppuVar29);\n      puVar20[4] = uVar24;\n      lVar30 = strtol((char *)(FILE *)(pcVar32 + 1),(char **)0x0,0);\n      ppuVar29 = (undefined **)(FILE *)(pcVar32 + 1);\n    }\n    puVar20[2] = lVar30;\n    pcVar32 = strchr((char *)ppuVar29,0x2c);\n    puVar20[5] = 0;\n    if (pcVar32 == (char *)0x0) {\n      *(undefined4 *)(puVar20 + 3) = 2;\n      unaff_R12 = (FILE *)0x0;\n    }\n    else {\n      ppuVar29 = (undefined **)0x0;\n      pFVar14 = (FILE *)(pcVar32 + 1);\n      do {\n        unaff_R12 = pFVar14;\n        pcVar32 = strchr((char *)unaff_R12,0x2c);\n        if (pcVar32 == (char *)0x0) {\n          sVar15 = strlen((char *)unaff_R12);\n          pFVar14 = (FILE *)0x0;\n        }\n        else {\n          pFVar14 = (FILE *)(pcVar32 + 1);\n          sVar15 = (long)pcVar32 - (long)unaff_R12;\n        }\n        uVar10 = (uint)ppuVar29;\n        if (sVar15 == 5) {\n          iVar11 = strncasecmp(\"local\",(char *)unaff_R12,5);\n          if (iVar11 == 0) {\n            ppuVar29 = (undefined **)(ulong)(uVar10 | 1);\n          }\n          else {\n            iVar11 = strncasecmp(\"debug\",(char *)unaff_R12,5);\n            if (iVar11 != 0) goto LAB_001186b2;\n            ppuVar29 = (undefined **)(ulong)(uVar10 | 4);\n          }\n        }\n        else if (sVar15 == 6) {\n          iVar11 = strncasecmp(\"global\",(char *)unaff_R12,6);\n          if ((iVar11 == 0) || (iVar11 = strncasecmp(\"export\",(char *)unaff_R12,6), iVar11 == 0)) {\n            ppuVar29 = (undefined **)(ulong)(uVar10 | 2);\n          }\n          else {\n            iVar11 = strncasecmp(\"object\",(char *)unaff_R12,6);\n            if (iVar11 != 0) goto LAB_001186b2;\n            ppuVar29 = (undefined **)(ulong)(uVar10 | 0x10000);\n          }\n        }\n        else if (sVar15 == 8) {\n          iVar11 = strncasecmp(\"function\",(char *)unaff_R12,8);\n          if (iVar11 == 0) {\n            ppuVar29 = (undefined **)(ulong)(uVar10 | 8);\n          }\n          else {\n            iVar11 = strncasecmp(\"indirect\",(char *)unaff_R12,8);\n            if (iVar11 != 0) goto LAB_0011862f;\n            ppuVar29 = (undefined **)((ulong)ppuVar29 | 0x2000);\n          }\n        }\n        else if (sVar15 == 4) {\n          iVar11 = strncasecmp(\"weak\",(char *)unaff_R12,4);\n          if (iVar11 == 0) {\n            ppuVar29 = (undefined **)((ulong)ppuVar29 | 0x80);\n          }\n          else {\n            iVar11 = strncasecmp(\"file\",(char *)unaff_R12,4);\n            if (iVar11 != 0) goto LAB_001186b2;\n            ppuVar29 = (undefined **)((ulong)ppuVar29 | 0x4000);\n          }\n        }\n        else if (sVar15 == 7) {\n          iVar11 = strncasecmp(\"section\",(char *)unaff_R12,7);\n          if (iVar11 == 0) {\n            ppuVar29 = (undefined **)((ulong)ppuVar29 | 0x100);\n          }\n          else {\n            iVar11 = strncasecmp(\"warning\",(char *)unaff_R12,7);\n            if (iVar11 != 0) goto LAB_001186b2;\n            ppuVar29 = (undefined **)((ulong)ppuVar29 | 0x1000);\n          }\n        }\n        else {\n          if (sVar15 == 0xb) {\n            iVar11 = strncasecmp(\"constructor\",(char *)unaff_R12,0xb);\n            if (iVar11 == 0) {\n              ppuVar29 = (undefined **)((ulong)ppuVar29 | 0x800);\n              goto LAB_00117e3d;\n            }\n          }\n          else if (sVar15 == 9) {\n            iVar11 = strncasecmp(\"synthetic\",(char *)unaff_R12,9);\n            if (iVar11 == 0) {\n              ppuVar29 = (undefined **)(ulong)(uVar10 | 0x200000);\n              goto LAB_00117e3d;\n            }\n          }\n          else if (sVar15 == 0x11) {\n            iVar11 = strncasecmp(\"indirect-function\",(char *)unaff_R12,0x11);\n            if (iVar11 == 0) {\n              ppuVar29 = (undefined **)(ulong)(uVar10 | 0x400008);\n              goto LAB_00117e3d;\n            }\n          }\n          else if (sVar15 == 0xd) {\n            iVar11 = strncasecmp(\"unique-object\",(char *)unaff_R12,0xd);\n            if (iVar11 == 0) {\n              ppuVar29 = (undefined **)(ulong)(uVar10 | 0x810000);\n              goto LAB_00117e3d;\n            }\n          }\n          else if (sVar15 < 8) goto LAB_001186b2;\nLAB_0011862f:\n          iVar11 = strncasecmp(\"before=\",(char *)unaff_R12,7);\n          if (iVar11 != 0) {\nLAB_001186b2:\n            pcVar32 = (char *)xmalloc(sVar15 + 1);\n            strncpy(pcVar32,(char *)unaff_R12,sVar15);\n            pcVar32[sVar15] = '\\0';\n            uVar24 = dcgettext(0,\"unrecognized symbol flag `%s\\'\",5);\n            FUN_00119ed0(uVar24,pcVar32);\n            uVar24 = dcgettext(0,\"supported flags: %s\",5);\n                    \n            FUN_00119dd0(uVar24,\n                         \"local, global, export, debug, function, weak, section, constructor, warning, indirect, file, object, synthetic, indirect-function, unique-object, before=<othersym>\"\n                        );\n          }\n          uVar24 = FUN_0011a480(&unaff_R12->field_0x7,sVar15 - 7);\n          puVar20[5] = uVar24;\n        }\nLAB_00117e3d:\n      } while (pFVar14 != (FILE *)0x0);\n      *(int *)(puVar20 + 3) = (int)ppuVar29;\n      unaff_R13 = (char *)0x0;\n      if (puVar20[5] != 0) {\n        *puVar20 = DAT_001279a8;\n        bVar39 = DAT_001279a8 == (undefined8 *)0x0;\n        DAT_001279a8 = puVar20;\n        if (bVar39) {\n          PTR_DAT_001275a0 = (undefined *)puVar20;\n        }\n        goto LAB_00117e65;\n      }\n    }\n    *(undefined8 **)PTR_DAT_001275a0 = puVar20;\n    PTR_DAT_001275a0 = (undefined *)puVar20;\nLAB_00117e65:\n    DAT_001279a0 = DAT_001279a0 + 1;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x99:\n    DAT_00127910 = strtoul((char *)_optarg,(char **)0x0,0);\n    if (DAT_00127910 == 0) {\n      pcVar32 = \"unable to parse alternative machine code\";\n      goto LAB_00117aed;\n    }\n    goto switchD_00117234_caseD_0;\n  case (char *)0x9a:\n    _DAT_00127990 = FUN_00119940(_optarg,\"--change-addresses\");\n    DAT_00127998 = _DAT_00127990;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x9b:\n    DAT_00127988 = 1;\n    goto switchD_00117234_caseD_0;\n  case (char *)0x9c:\n  case (char *)0x9d:\n  case (char *)0x9e:\n    ppuVar29 = (undefined **)strchr((char *)_optarg,0x3d);\n    if (uVar36 == 0x9d) {\n      uVar12 = 0x40;\n      unaff_R13 = \"--change-section-lma\";\n      if ((FILE *)ppuVar29 != (FILE *)0x0) {\n        uVar12 = 0x20;\n        goto LAB_00117a19;\n      }\n    }\n    else if (uVar36 == 0x9e) {\n      if ((FILE *)ppuVar29 != (FILE *)0x0) {\n        unaff_R13 = \"--change-section-vma\";\n        uVar12 = 8;\n        goto LAB_00117a19;\n      }\n      uVar12 = 0x10;\n      unaff_R13 = \"--change-section-vma\";\n    }\n    else {\n      unaff_R13 = \"--change-section-address\";\n      uVar12 = 0x28;\n      if ((FILE *)ppuVar29 != (FILE *)0x0) goto LAB_00117a19;\n      uVar12 = 0x50;\n    }\n    ppuVar29 = (undefined **)strchr((char *)pFVar14,0x2b);\n    if (((FILE *)ppuVar29 == (FILE *)0x0) &&\n       (ppuVar29 = (undefined **)strchr((char *)pFVar14,0x2d), (FILE *)ppuVar29 == (FILE *)0x0)) {\n      uVar24 = dcgettext(0,\"bad format for %s\",5);\n                    \n      FUN_00119dd0(uVar24,unaff_R13);\n    }\nLAB_00117a19:\n    iVar11 = (int)ppuVar29 - iVar11;\n    pcVar32 = (char *)xmalloc((long)(iVar11 + 1));\n    unaff_R12 = (FILE *)(long)iVar11;\n    pcVar32 = strncpy(pcVar32,(char *)_optarg,(size_t)unaff_R12);\n    pcVar32[(long)unaff_R12] = '\\0';\n    lVar30 = FUN_00114190(pcVar32,1,uVar12);\n    lVar17 = FUN_00119940((undefined *)((long)(int *)ppuVar29 + 1),unaff_R13);\n    if (*(char *)(int *)ppuVar29 == '-') {\n      lVar17 = -lVar17;\n    }\n    if ((uVar36 == 0x9d) || (*(long *)(lVar30 + 0x18) = lVar17, uVar36 != 0x9e)) {\n      *(long *)(lVar30 + 0x20) = lVar17;\n    }\n    goto switchD_00117234_caseD_0;\n  case (char *)0x9f:\n    DAT_00127998 = FUN_00119940(_optarg,\"--change-start\");\n    goto switchD_00117234_caseD_0;\n  case (char *)0xa0:\n    local_130 = (FILE *)(ulong)bVar7;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xa1:\n    ppuVar29 = (undefined **)_optarg;\n    if (_optarg == (FILE *)0x0) {\nLAB_00118398:\n      DAT_00127984 = 1;\n      goto switchD_00117234_caseD_0;\n    }\n    iVar11 = strcasecmp((char *)_optarg,\"none\");\n    if (iVar11 == 0) {\n      DAT_00127984 = 0x20;\n      ppuVar29 = (undefined **)pFVar14;\n      goto switchD_00117234_caseD_0;\n    }\n    iVar11 = strcasecmp((char *)pFVar14,\"zlib\");\n    if (iVar11 == 0) {\n      DAT_00127984 = 3;\n      ppuVar29 = (undefined **)pFVar14;\n      goto switchD_00117234_caseD_0;\n    }\n    iVar11 = strcasecmp((char *)pFVar14,\"zlib-gnu\");\n    if (iVar11 == 0) {\n      DAT_00127984 = 5;\n      ppuVar29 = (undefined **)pFVar14;\n      goto switchD_00117234_caseD_0;\n    }\n    iVar11 = strcasecmp((char *)pFVar14,\"zlib-gabi\");\n    if (iVar11 == 0) {\n      DAT_00127984 = 9;\n      ppuVar29 = (undefined **)pFVar14;\n      goto switchD_00117234_caseD_0;\n    }\n    iVar11 = strcasecmp((char *)pFVar14,\"zstd\");\n    if (iVar11 == 0) {\n      DAT_00127984 = 0x11;\n      ppuVar29 = (undefined **)pFVar14;\n      goto switchD_00117234_caseD_0;\n    }\n    pcVar32 = \"unrecognized --compress-debug-sections type `%s\\'\";\n    break;\n  case (char *)0xa2:\n    DAT_00127980 = 1;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xa3:\n    DAT_00127984 = 0x20;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xa4:\n    DAT_001279b0 = FUN_00114c80(_optarg,DAT_001279b0,\"--dump-section\");\n    goto switchD_00117234_caseD_0;\n  case (char *)0xa5:\n    iVar11 = strcasecmp((char *)_optarg,\"yes\");\n    if (iVar11 == 0) {\n      DAT_0012797c = 1;\n      ppuVar29 = (undefined **)pFVar14;\n      goto switchD_00117234_caseD_0;\n    }\n    iVar11 = strcasecmp((char *)pFVar14,\"no\");\n    if (iVar11 == 0) {\n      DAT_0012797c = 2;\n      ppuVar29 = (undefined **)pFVar14;\n      goto switchD_00117234_caseD_0;\n    }\n    pcVar32 = \"unrecognized --elf-stt-common= option `%s\\'\";\n    break;\n  case (char *)0xa6:\n    DAT_00127a2c = 6;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xa7:\n    DAT_001278ec = 1;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xa8:\n    DAT_001264a8 = FUN_00119940(_optarg,\"--file-alignment\");\n    goto switchD_00117234_caseD_0;\n  case (char *)0xa9:\n    local_118 = (size_t)bVar7;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xaa:\n    ppuVar29 = (undefined **)FUN_00119940(_optarg,\"--gap-fill\");\n    DAT_00127979 = SUB81(ppuVar29,0);\n    if ((FILE *)0xff < ppuVar29) {\n      uVar24 = dcgettext(0,\"Warning: truncating gap-fill from 0x%lx to 0x%x\",5);\n      FUN_00119ed0(uVar24,ppuVar29,(ulong)ppuVar29 & 0xff);\n    }\n    DAT_00127978 = 1;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xab:\n    ppFVar23 = (FILE **)htab_find_slot(DAT_001279e0,_optarg,1);\n    *ppFVar23 = pFVar14;\n    ppuVar29 = (undefined **)pFVar14;\n    bVar2 = bVar7;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xac:\n    FUN_00114460(_optarg,DAT_001279e0,&DAT_00127928);\n    bVar2 = bVar7;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xad:\n    DAT_001264a0 = strtoul((char *)_optarg,(char **)(FILE *)local_c8,0);\n    unaff_R12 = _optarg;\n    ppuVar29 = (undefined **)(FILE *)local_c8;\n    if ((FILE *)local_c8._0_8_ != _optarg) {\n      if (*(char *)(int *)local_c8._0_8_ == '.') {\n        DAT_00126498 = strtoul((char *)((long)(int *)local_c8._0_8_ + 1),(char **)(FILE *)local_c8,0\n                              );\n        pFVar14 = _optarg;\n        if (*(char *)(int *)local_c8._0_8_ != '\\0') {\n          uVar24 = dcgettext(0,\"%s: invalid commit value for --heap\",5);\n          FUN_00119ed0(uVar24,pFVar14);\n          ppuVar29 = (undefined **)pFVar14;\n        }\n        goto switchD_00117234_caseD_0;\n      }\n      if (*(char *)(int *)local_c8._0_8_ == '\\0') goto switchD_00117234_caseD_0;\n    }\n    uVar24 = dcgettext(0,\"%s: invalid reserve value for --heap\",5);\n    FUN_00119ed0(uVar24,unaff_R12);\n    goto switchD_00117234_caseD_0;\n  case (char *)0xae:\n    DAT_00126490 = FUN_00119940(_optarg,\"--image-base\");\n    goto switchD_00117234_caseD_0;\n  case (char *)0xaf:\n    DAT_001278f0 = DAT_001278f0 | 0x100;\n    DAT_001278f4 = DAT_001278f4 & 0xfffffeff;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xb0:\n    lVar30 = strtol((char *)_optarg,(char **)0x0,10);\n    DAT_001264b8 = (int)lVar30;\n    if (DAT_001264b8 < 1) {\n      pcVar32 = \"interleave width must be positive\";\n      goto LAB_00117aed;\n    }\n    goto switchD_00117234_caseD_0;\n  case (char *)0xb1:\n    FUN_00114460(_optarg,DAT_001279d8,&DAT_00127920);\n    local_108 = (long *)(ulong)bVar7;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xb2:\n    DAT_00127a18 = 1;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xb3:\n    FUN_00114190(_optarg,1,4);\n    goto switchD_00117234_caseD_0;\n  case (char *)0xb4:\n    FUN_00114460(_optarg,DAT_00127a08,&DAT_00127940);\n    goto switchD_00117234_caseD_0;\n  case (char *)0xb5:\n    DAT_00127939 = 1;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xb6:\n    DAT_00127938 = 1;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xb7:\n    FUN_00114460(_optarg,DAT_001279e8,&DAT_00127930);\n    goto switchD_00117234_caseD_0;\n  case (char *)0xb8:\n    iVar11 = strcmp(\"enable\",(char *)_optarg);\n    if (iVar11 == 0) {\n      DAT_001264b4 = 1;\n      ppuVar29 = (undefined **)pFVar14;\n      goto switchD_00117234_caseD_0;\n    }\n    iVar11 = strcmp(\"disable\",(char *)pFVar14);\n    if (iVar11 == 0) {\n      DAT_001264b4 = 0;\n      ppuVar29 = (undefined **)pFVar14;\n      goto switchD_00117234_caseD_0;\n    }\n    iVar11 = strcmp(\"keep\",(char *)pFVar14);\n    if (iVar11 == 0) {\n      DAT_001264b4 = 2;\n      ppuVar29 = (undefined **)pFVar14;\n      goto switchD_00117234_caseD_0;\n    }\n    pcVar32 = \"unknown long section names option \\'%s\\'\";\n    break;\n  case (char *)0xba:\n    DAT_00127a00 = 0;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xbb:\n    local_130 = (FILE *)0x0;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xbc:\n    DAT_00127a2c = 4;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xbd:\n    DAT_00127970 = FUN_00119940(_optarg,\"--pad-to\");\n    DAT_00127969 = 1;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xbe:\n    DAT_001278f8 = _optarg;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xbf:\n    DAT_00127900 = _optarg;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xc0:\n    DAT_00127908 = _optarg;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xc1:\nswitchD_00117234_caseD_c1:\n    DAT_001278f4 = DAT_001278f4 | 0x100;\n    DAT_001278f0 = DAT_001278f0 & 0xfffffeff;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xc2:\n    DAT_001278f4 = DAT_001278f4 | 0x80;\n    DAT_001278f0 = DAT_001278f0 & 0xffffff7f;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xc3:\n    unaff_R13 = &optarg;\n    pcVar32 = strchr((char *)_optarg,0x3d);\n    if (pcVar32 == (char *)0x0) {\n      uVar24 = dcgettext(0,\"bad format for %s\",5);\n                    \n      FUN_00119dd0(uVar24,\"--redefine-sym\");\n    }\n    ppuVar29 = (undefined **)(pcVar32 + 1);\n    iVar11 = (int)pcVar32 - iVar11;\n    pcVar32 = (char *)xmalloc((long)(iVar11 + 1));\n    strncpy(pcVar32,(char *)_optarg,(long)iVar11);\n    pcVar32[iVar11] = '\\0';\n    sVar15 = strlen((char *)ppuVar29);\n    unaff_R12 = (FILE *)xmalloc((long)((int)sVar15 + 1));\n    strcpy((char *)unaff_R12,(char *)ppuVar29);\n    FUN_00108d9a(\"--redefine-sym\",pcVar32,unaff_R12);\n    free(pcVar32);\n    free(unaff_R12);\n    goto switchD_00117234_caseD_0;\n  case (char *)0xc4:\n    ppuVar29 = (undefined **)fopen((char *)_optarg,\"r\");\n    if ((FILE *)ppuVar29 == (FILE *)0x0) {\n      piVar25 = __errno_location();\n      pcVar32 = strerror(*piVar25);\n      uVar24 = dcgettext(0,\"couldn\\'t open symbol redefinition file %s (error: %s)\",5);\n                    \n      FUN_00119dd0(uVar24,pFVar14,pcVar32);\n    }\n    pFVar21 = (FILE *)0x64;\n    unaff_R13 = (char *)xmalloc(0x65);\n    iVar13 = getc((FILE *)ppuVar29);\n    iVar11 = 2;\nLAB_00118ace:\n    unaff_R12 = (FILE *)ppuVar29;\n    if (iVar13 != -1) {\n      pFVar33 = (FILE *)0x0;\n      while ((iVar13 != 0x20 && (iVar13 != 9))) {\n        if ((iVar13 == 10) || (iVar13 == 0xd)) {\n          *(undefined *)((long)&pFVar33->_flags + (long)(int *)unaff_R13) = 0;\n          goto LAB_00118faa;\n        }\n        if (iVar13 == 0) break;\n        if (iVar13 == -1) {\n          *(undefined *)((long)&pFVar33->_flags + (long)(int *)unaff_R13) = 0;\n          unaff_R12 = (FILE *)((long)&pFVar33->_flags + 1);\n          goto LAB_00119803;\n        }\n        unaff_R12 = pFVar33;\n        if (iVar13 == 0x23) goto LAB_00119745;\n        pFVar38 = (FILE *)((long)&pFVar33->_flags + 1);\n        *(char *)((long)&pFVar33->_flags + (long)(int *)unaff_R13) = (char)iVar13;\n        if (pFVar21 <= pFVar38) {\n          pFVar21 = (FILE *)((long)pFVar21 * 2);\n          unaff_R13 = (char *)xrealloc(unaff_R13,(undefined *)((long)&pFVar21->_flags + 1));\n        }\n        iVar13 = getc((FILE *)ppuVar29);\n        pFVar33 = pFVar38;\n      }\n      unaff_R12 = (FILE *)((long)&pFVar33->_flags + 1);\n      *(undefined *)((long)&pFVar33->_flags + (long)(int *)unaff_R13) = 0;\n      while ((iVar13 == 0x20 || (iVar13 == 9))) {\n        iVar13 = getc((FILE *)ppuVar29);\n      }\n      if (iVar13 == 0x23) {\nLAB_00119745:\n        if (unaff_R12 != (FILE *)0x0) goto LAB_0011974a;\n        pFVar33 = (FILE *)0x0;\n        unaff_R12 = (FILE *)0x0;\nLAB_001197ca:\n        *(undefined *)((long)&pFVar33->_flags + (long)(int *)unaff_R13) = 0;\n        while ((iVar13 != 10 && (iVar13 != -1))) {\n          iVar13 = getc((FILE *)ppuVar29);\n        }\n        goto LAB_0011903b;\n      }\nLAB_00118faa:\n      unaff_R12 = (FILE *)((long)&pFVar33->_flags + 1);\n      if (((iVar13 == 10) || (iVar13 == 0xd)) || (iVar13 == 0)) goto LAB_00119745;\n      pFVar38 = unaff_R12;\n      if (iVar13 != -1) {\n        do {\n          pFVar33 = (FILE *)((long)&pFVar38->_flags + 1);\n          *(char *)((long)&pFVar38->_flags + (long)(int *)unaff_R13) = (char)iVar13;\n          if (pFVar21 <= pFVar33) {\n            pFVar21 = (FILE *)((long)pFVar21 * 2);\n            unaff_R13 = (char *)xrealloc(unaff_R13,(undefined *)((long)&pFVar21->_flags + 1));\n          }\n          iVar13 = getc((FILE *)ppuVar29);\n          if ((iVar13 == 0x20) || (iVar13 == 9)) {\nLAB_001198b6:\n            *(undefined *)((long)&pFVar33->_flags + (long)(int *)unaff_R13) = 0;\n            pFVar33 = (FILE *)((long)&pFVar38->_flags + 2);\n            goto LAB_00119858;\n          }\n          if ((iVar13 == 10) || (iVar13 == 0xd)) {\n            *(undefined *)((long)&pFVar33->_flags + (long)(int *)unaff_R13) = 0;\n            goto LAB_0011902d;\n          }\n          if (iVar13 == 0) goto LAB_001198b6;\n          if (iVar13 == -1) {\n            *(undefined *)((long)&pFVar33->_flags + (long)(int *)unaff_R13) = 0;\n            unaff_R12 = (FILE *)((long)&pFVar38->_flags + 2);\n            goto LAB_00119803;\n          }\n          pFVar38 = pFVar33;\n        } while (iVar13 != 0x23);\nLAB_001198ec:\n        if ((pFVar33 == (FILE *)0x0) || ((unaff_R12 != (FILE *)0x0 && (unaff_R12 != pFVar33)))) {\n          iVar13 = 0x23;\n          goto LAB_001197ca;\n        }\nLAB_0011974a:\n        pcVar32 = \"%s:%d: missing new symbol name\";\n        goto LAB_00119756;\n      }\nLAB_00119803:\n      if (unaff_R12 != (FILE *)0x0) {\n        pcVar32 = \"%s:%d: premature end of file\";\n        goto LAB_00119756;\n      }\n    }\nLAB_00119065:\n    free(unaff_R13);\n    fclose((FILE *)ppuVar29);\n    goto switchD_00117234_caseD_0;\n  case (char *)0xc5:\n    DAT_00127968 = 1;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xc6:\n    FUN_00114190(_optarg,1,0x100);\n    goto switchD_00117234_caseD_0;\n  case (char *)0xc7:\n    goto switchD_00117234_caseD_c7;\n  case (char *)0xc8:\n    ppuVar29 = (undefined **)(ulong)DAT_001278e8;\n    uVar27 = strtol((char *)_optarg,(char **)0x0,10);\n    DAT_001278e8 = (uint)uVar27;\n    if (((int)DAT_001278e8 < 1) || ((uVar27 & 1) != 0)) {\n      pcVar32 = \"number of bytes to reverse must be positive and even\";\n      goto LAB_00117aed;\n    }\n    if ((uVar10 != DAT_001278e8) && (uVar10 != 0)) {\n      uVar24 = dcgettext(0,\"Warning: ignoring previous --reverse-bytes value of %d\",5);\n      FUN_00119ed0(uVar24,uVar10);\n    }\n    goto switchD_00117234_caseD_0;\n  case (char *)0xc9:\n    DAT_00126488 = FUN_00119940(_optarg,\"--section-alignment\");\n    goto switchD_00117234_caseD_0;\n  case (char *)0xca:\n    unaff_R12 = (FILE *)strchr((char *)_optarg,0x3d);\n    if (unaff_R12 == (FILE *)0x0) {\n      uVar24 = dcgettext(0,\"bad format for %s\",5);\n                    \n      FUN_00119dd0(uVar24,\"--set-section-flags\");\n    }\n    iVar11 = (int)unaff_R12 - iVar11;\n    pcVar32 = (char *)xmalloc((long)(iVar11 + 1));\n    pcVar32 = strncpy(pcVar32,(char *)_optarg,(long)iVar11);\n    pcVar32[iVar11] = '\\0';\n    ppuVar29 = (undefined **)FUN_00114190(pcVar32,1,0x80);\n    uVar12 = FUN_00113fe0((undefined *)((long)&unaff_R12->_flags + 1));\n    *(undefined4 *)((long)ppuVar29 + 0x28) = uVar12;\n    unaff_R13 = (char *)pFVar14;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xcb:\n    pcVar32 = strchr((char *)_optarg,0x3d);\n    if (pcVar32 == (char *)0x0) {\n      pcVar32 = \"bad format for --set-section-alignment: argument needed\";\n      goto LAB_00117aed;\n    }\n    uVar27 = strtol(pcVar32 + 1,(char **)0x0,10);\n    if ((int)uVar27 < 1) goto LAB_001189a2;\n    unaff_R12 = (FILE *)0x0;\n    while( true ) {\n      if ((uVar27 & 1) != 0) break;\n      uVar27 = (ulong)(uint)((int)uVar27 >> 1);\n      unaff_R12 = (FILE *)(ulong)((int)unaff_R12 + 1);\n    }\n    if ((int)uVar27 != 1) {\n      pcVar32 = \"bad format for --set-section-alignment: alignment is not a power of two\";\n      goto LAB_00117aed;\n    }\n    iVar11 = (int)pcVar32 - (int)_optarg;\n    ppuVar29 = (undefined **)(long)iVar11;\n    pcVar32 = (char *)xmalloc((long)(iVar11 + 1));\n    pcVar32 = strncpy(pcVar32,(char *)_optarg,(size_t)ppuVar29);\n    pcVar32[(long)ppuVar29] = '\\0';\n    lVar30 = FUN_00114190(pcVar32,1,0x200);\n    if (lVar30 != 0) {\n      *(int *)(lVar30 + 0x2c) = (int)unaff_R12;\n    }\n    goto switchD_00117234_caseD_0;\n  case (char *)0xcc:\n    _DAT_00127960 = FUN_00119940(_optarg,\"--set-start\");\n    DAT_00127958 = 1;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xce:\n    __bfd_srec_len = FUN_00119940(_optarg,\"--srec-len\");\n    goto switchD_00117234_caseD_0;\n  case (char *)0xcf:\n    DAT_00126480 = strtoul((char *)_optarg,(char **)(FILE *)local_c8,0);\n    unaff_R12 = _optarg;\n    ppuVar29 = (undefined **)(FILE *)local_c8;\n    if ((FILE *)local_c8._0_8_ != _optarg) {\n      if (*(char *)(int *)local_c8._0_8_ == '.') {\n        DAT_00126478 = strtoul((char *)((long)(int *)local_c8._0_8_ + 1),(char **)(FILE *)local_c8,0\n                              );\n        pFVar14 = _optarg;\n        if (*(char *)(int *)local_c8._0_8_ != '\\0') {\n          uVar24 = dcgettext(0,\"%s: invalid commit value for --stack\",5);\n          FUN_00119ed0(uVar24,pFVar14);\n          ppuVar29 = (undefined **)pFVar14;\n        }\n        goto switchD_00117234_caseD_0;\n      }\n      if (*(char *)(int *)local_c8._0_8_ == '\\0') goto switchD_00117234_caseD_0;\n    }\n    uVar24 = dcgettext(0,\"%s: invalid reserve value for --stack\",5);\n    FUN_00119ed0(uVar24,unaff_R12);\n    goto switchD_00117234_caseD_0;\n  case (char *)0xd0:\n    DAT_00127a2c = 5;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xd1:\n    FUN_00114460(_optarg,DAT_001279f8,&DAT_00127950);\n    goto switchD_00117234_caseD_0;\n  case (char *)0xd2:\n    DAT_00127a2c = 3;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xd3:\n    ppFVar23 = (FILE **)htab_find_slot(DAT_001279f0,_optarg,1);\n    *ppFVar23 = pFVar14;\n    ppuVar29 = (undefined **)pFVar14;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xd4:\n    FUN_00114460(_optarg,DAT_001279f0,&DAT_00127948);\n    goto switchD_00117234_caseD_0;\n  case (char *)0xd5:\n    pcVar32 = strchr((char *)_optarg,0x3a);\n    pFVar21 = pFVar14;\n    if (pcVar32 != (char *)0x0) {\n      pFVar21 = (FILE *)xstrdup(pFVar14);\n      lVar30 = (long)((int)pcVar32 - iVar11);\n      *(undefined *)((long)&pFVar21->_flags + lVar30) = 0;\n      local_c8._0_8_ = pFVar21;\n      uVar27 = strtoul((char *)((long)&pFVar21->_flags + lVar30 + 1),(char **)local_c8,0);\n      DAT_00126472 = (undefined2)uVar27;\n      if (*(char *)(int *)local_c8._0_8_ == '.') {\n        uVar27 = strtoul((char *)((long)(int *)local_c8._0_8_ + 1),(char **)local_c8,0);\n        DAT_00126470 = (undefined2)uVar27;\n      }\n      if (*(char *)(int *)local_c8._0_8_ != '\\0') {\n        uVar24 = dcgettext(0,\"%s: bad version in PE subsystem\",5);\n        FUN_00119ed0(uVar24,pFVar14);\n      }\n    }\n    lVar30 = strtol((char *)pFVar21,(char **)local_c8,0);\n    if (*(char *)(int *)local_c8._0_8_ == '\\0') {\n      lVar17 = 0;\n      while ((short)lVar30 != (&DAT_00125caa)[lVar17 * 8]) {\n        lVar17 = lVar17 + 1;\n        if (lVar17 == 10) goto LAB_00119248;\n      }\n      ppuVar29 = &PTR_s_native_00125ca0;\n      cVar8 = (&DAT_00125ca8)[lVar17 * 0x10];\n      DAT_00126474 = (short)lVar30;\n    }\n    else {\n      unaff_R13 = (char *)0x0;\n      while( true ) {\n        iVar11 = strcmp((char *)pFVar21,(&PTR_s_native_00125ca0)[(long)unaff_R13 * 2]);\n        if (iVar11 == 0) break;\n        unaff_R13 = (char *)((long)(int *)unaff_R13 + 1);\n        if ((FILE *)unaff_R13 == (FILE *)0xa) goto LAB_00119248;\n      }\n      ppuVar29 = &PTR_s_native_00125ca0 + (long)unaff_R13 * 2;\n      DAT_00126474 = (&DAT_00125caa)[(long)unaff_R13 * 8];\n      cVar8 = (&DAT_00125ca8)[(long)unaff_R13 * 0x10];\n    }\n    if (cVar8 == -1) {\nLAB_00119248:\n      uVar24 = dcgettext(0,\"unknown PE subsystem: %s\",5);\n                    \n      FUN_00119dd0(uVar24,pFVar14);\n    }\n    if (cVar8 != '\\0') {\n      if (DAT_001264a8 == -1) {\n        DAT_001264a8 = 0x200;\n      }\n      if (DAT_00126488 == -1) {\n        DAT_00126488 = 0x1000;\n      }\n    }\n    unaff_R12 = pFVar14;\n    if (pFVar14 != pFVar21) {\n      free(pFVar21);\n    }\n    goto switchD_00117234_caseD_0;\n  case (char *)0xd6:\n    DAT_001279b8 = FUN_00114c80(_optarg,DAT_001279b8,\"--update-section\");\n    FUN_00114d60(DAT_001279b8);\n    goto switchD_00117234_caseD_0;\n  case (char *)0xd7:\n    _VerilogDataWidth = FUN_00119940(_optarg,\"--verilog-data-width\");\n    if ((0x10 < _VerilogDataWidth) || ((0x10116UL >> ((byte)_VerilogDataWidth & 0x3f) & 1) == 0)) {\n      pcVar32 = \"error: verilog data width must be 1, 2, 4, 8 or 16\";\n      goto LAB_00117aed;\n    }\n    goto switchD_00117234_caseD_0;\n  case (char *)0xd8:\n    DAT_001279c8 = 1;\n    goto switchD_00117234_caseD_0;\n  case (char *)0xd9:\n    FUN_00114460(_optarg,DAT_001279d0,&DAT_00127918);\n    goto switchD_00117234_caseD_0;\n  case (char *)0xda:\n    DAT_001278f0 = DAT_001278f0 | 0x80;\n    DAT_001278f4 = DAT_001278f4 & 0xffffff7f;\n    goto switchD_00117234_caseD_0;\n  }\nLAB_001176c2:\n  uVar24 = dcgettext(0,pcVar32,5);\n                    \n  FUN_00119dd0(uVar24,pFVar14);\n}\n\n",
            "current_name": "FUNC_00116b90",
            "entrypoint": "0x00116b90",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00116b90": "FUNC_00116b90"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00119940": {
            "additional_data": {
                "FUN_00119940": {
                    "check_and_display_bad_number": 1,
                    "check_and_display_error_message": 1,
                    "check_and_print_bad_number": 1,
                    "check_and_print_error": 1,
                    "check_and_print_error_message": 8,
                    "check_and_process_number": 1,
                    "parse_and_log_bad_number": 1,
                    "parse_and_validate_input": 1,
                    "process_param": 2,
                    "process_scan_vma": 1,
                    "process_vma": 1,
                    "scan_and_validate_number": 2,
                    "scan_vma_and_check_number": 1,
                    "validate_and_convert_param": 1,
                    "validate_and_display_error": 1,
                    "validate_and_handle_param": 1,
                    "validate_and_log": 1,
                    "validate_and_log_number": 1,
                    "validate_and_print_error": 1,
                    "validate_and_print_number": 1,
                    "validate_and_process_input": 1,
                    "validate_input": 1
                },
                "FUN_00119dd0": {
                    "handle_bad_number_error": 1
                },
                "bfd_scan_vma": {
                    "scan_virtual_memory_address": 1
                },
                "dcgettext": {
                    "get_translated_error_message": 1
                },
                "local_20": {
                    "buffer": 1,
                    "error_message": 1,
                    "error_message_buffer": 1,
                    "error_string": 1,
                    "local_strings": 1,
                    "output_message": 1,
                    "result_buffer": 1,
                    "scan_result": 11,
                    "scan_results": 3,
                    "scanned_address": 1,
                    "scanned_input": 1,
                    "scanned_number": 1,
                    "scanned_result": 1,
                    "scanned_value": 2,
                    "scanned_values": 1,
                    "scanned_vma_result": 1,
                    "vma_scan_result": 1
                },
                "param_1": {
                    "address": 2,
                    "file_offset": 1,
                    "input": 1,
                    "input_address": 1,
                    "input_number": 2,
                    "input_param": 3,
                    "input_param1": 2,
                    "input_parameter": 1,
                    "input_value": 5,
                    "number": 3,
                    "param1": 1,
                    "param_address": 1,
                    "param_vma": 1,
                    "scan_address": 1,
                    "value_to_check": 1,
                    "vma": 4,
                    "vma_address": 1
                },
                "param_2": {
                    "additional_info": 1,
                    "bad_number": 2,
                    "error_message": 12,
                    "input_param2": 2,
                    "input_string": 1,
                    "log_message": 1,
                    "message": 3,
                    "number": 3,
                    "output_param": 2,
                    "output_parameter": 1,
                    "param2": 1,
                    "param_msg": 1,
                    "param_string": 1
                },
                "uVar1": {
                    "error_message": 10,
                    "error_msg": 1,
                    "localized_error_message": 1,
                    "message": 1,
                    "translated_error": 3,
                    "translated_error_message": 1,
                    "translation": 1
                }
            },
            "called": [
                "bfd_scan_vma",
                "FUN_00104920"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nvoid check_and_print_error_message_00119940(undefined8 input_value,undefined8 error_message)\n\n{\n  undefined8 error_message;\n  char *scan_result [2];\n  \n  bfd_scan_vma(input_value,scan_result,0);\n  if (*scan_result[0] == '\\0') {\n    return;\n  }\n  error_message = dcgettext(0,\"%s: bad number: %s\",5);\n                    \n  FUN_00119dd0(error_message,error_message,input_value);\n}\n\n",
            "current_name": "check_and_print_error_message_00119940",
            "entrypoint": "0x00119940",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00119940": "check_and_print_error_message_00119940",
                "bfd_scan_vma": "scan_virtual_memory_address",
                "dcgettext": "get_translated_error_message",
                "local_20": "scan_result",
                "param_1": "input_value",
                "param_2": "error_message",
                "uVar1": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00119970": {
            "additional_data": {
                "FUN_00119970": {
                    "print_binutils_info": 3,
                    "print_binutils_version": 1,
                    "print_gnu_info": 3,
                    "print_gnu_version_info": 1,
                    "print_license_info": 1,
                    "print_program_details": 1,
                    "print_program_info": 2,
                    "print_program_information": 1,
                    "print_software_info": 1,
                    "print_version_info": 15,
                    "print_version_information": 1,
                    "print_welcome_message": 1
                },
                "param_1": {
                    "binutils_version": 1,
                    "distribution": 1,
                    "distribution_name": 2,
                    "gcc_version": 1,
                    "os_name": 1,
                    "package_name": 1,
                    "program_name": 4,
                    "tool_name": 3,
                    "version": 11,
                    "version_info": 1,
                    "version_number": 2,
                    "version_string": 3
                },
                "pcVar1": {
                    "copy_right_message": 1,
                    "copy_right_string": 1,
                    "copy_right_text": 1,
                    "copyright": 1,
                    "copyright_message": 16,
                    "copyright_msg": 3,
                    "copyright_notice": 2,
                    "copyright_text": 1,
                    "license_text": 1,
                    "message": 4
                }
            },
            "called": [
                "dcgettext",
                "printf",
                "exit"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nvoid print_gnu_version_info_00119970(undefined8 version)\n\n{\n  char *copyright_message;\n  \n  printf(\"GNU %s %s\\n\",version,\"(GNU Binutils for Debian) 2.40\");\n  copyright_message = (char *)dcgettext(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n  printf(copyright_message);\n  copyright_message = (char *)dcgettext(0,\n                             \"This program is free software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                             ,5);\n  printf(copyright_message);\n                    \n  exit(0);\n}\n\n",
            "current_name": "print_gnu_version_info_00119970",
            "entrypoint": "0x00119970",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00119970": "print_gnu_version_info_00119970",
                "param_1": "version",
                "pcVar1": "copyright_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001199d0": {
            "additional_data": {
                "COLUMNS": {
                    "num_columns": 1,
                    "terminal_columns": 1
                },
                "DAT_0011b39a": {
                    "default_dir": 1,
                    "default_temp_dir_path": 1
                },
                "DAT_0011b4a1": {
                    "empty_string": 1
                },
                "DAT_00120324": {
                    "default_temp_file_path": 1,
                    "fallback_dir": 1
                },
                "DAT_001278c0": {
                    "default_tmp_dir": 1,
                    "temp_dir": 1,
                    "temp_dir_path": 1,
                    "temp_directory": 1,
                    "temp_directory_path": 1,
                    "temp_path": 1
                },
                "DISCARDED_FUNCTION_NAME": {
                    "discarded_function": 1
                },
                "FUN_0011283f": {
                    "append_env": 1,
                    "append_path": 1
                },
                "FUN_001199d0": {
                    "print_arch_machines": 1,
                    "print_architectures": 1,
                    "print_bfd_header": 2,
                    "print_bfd_header_and_architectures": 1,
                    "print_bfd_header_info": 1,
                    "print_bfd_header_version": 2,
                    "print_bfd_headers": 1,
                    "print_binary_info": 2,
                    "print_executable_info": 1,
                    "print_formatted_bfd_version": 1,
                    "print_supported_architectures": 2,
                    "print_target_info": 3
                },
                "FUN_00119f70": {
                    "iterate_callback": 2
                },
                "PUT32": {
                    "write32_bits": 1
                },
                "PUT8": {
                    "write8_bits": 1
                },
                "_LibraryCall": {
                    "library_call": 1
                },
                "__errno_location": {
                    "errno_location": 1,
                    "get_errno_location": 1,
                    "get_error_code_location": 1
                },
                "__errnum": {
                    "error_number": 1
                },
                "__fd": {
                    "file_descriptor": 1
                },
                "__format": {
                    "format": 1
                },
                "__name": {
                    "name": 1
                },
                "__ptr": {
                    "pointer": 1
                },
                "__s": {
                    "string": 1
                },
                "__stderr": {
                    "standard_error": 1
                },
                "__stdin": {
                    "standard_input": 1
                },
                "__stdio_write": {
                    "write_to_standard_output": 1
                },
                "__stdio_write_char": {
                    "write_char": 1
                },
                "__stream": {
                    "stream": 1
                },
                "__suffixlen": {
                    "suffix_length": 1
                },
                "__template": {
                    "template": 1
                },
                "_stderr": {
                    "error_output": 1,
                    "error_stream": 2,
                    "standard_error": 2,
                    "stderr": 1,
                    "stderr_stream": 1
                },
                "_stdout": {
                    "output_stream": 1,
                    "standard_output": 3,
                    "stdout": 1,
                    "stdout_stream": 1
                },
                "abort": {
                    "exit_process": 1,
                    "terminate_program": 1
                },
                "aborted": {
                    "aborted": 1
                },
                "bfd_iterate_over_targets": {
                    "iterate_over_targets": 2
                },
                "bfd_printable_arch_mach": {
                    "get_arch_mach": 1,
                    "get_arch_machine": 1
                },
                "cVar15": {
                    "temp_dir_error": 1
                },
                "close": {
                    "close_file": 1,
                    "close_file_descriptor": 1
                },
                "dcgettext": {
                    "get_binary_version": 1,
                    "get_translated_str": 1
                },
                "fprintf": {
                    "print_error_message": 2
                },
                "free": {
                    "free_memory": 2
                },
                "getenv": {
                    "get_env": 1,
                    "get_environment_variable": 1
                },
                "iVar1": {
                    "arch_index": 1,
                    "column_width": 4,
                    "columns": 3,
                    "header_length": 1,
                    "index": 1,
                    "max_column_size": 1,
                    "max_column_width": 1,
                    "max_columns": 2,
                    "num_columns": 2,
                    "num_spaces": 1,
                    "target_width": 1,
                    "temp_file_length": 1,
                    "terminal_columns": 1,
                    "terminal_width": 1,
                    "tmp_length": 1
                },
                "iVar2": {
                    "arch": 1,
                    "arch_count": 1,
                    "arch_index": 4,
                    "arch_mach_index": 1,
                    "arch_mach_iter": 1,
                    "arch_num": 1,
                    "architecture_index": 1,
                    "counter": 2,
                    "file_descriptor": 3,
                    "k": 1,
                    "target": 1,
                    "target_index": 7
                },
                "iVar3": {
                    "arch_compare_result": 1,
                    "arch_comparison": 2,
                    "arch_index": 3,
                    "arch_mach_index": 1,
                    "cmp_result": 1,
                    "compare_result": 1,
                    "comparison_result": 8,
                    "strcmp_result": 4
                },
                "iVar9": {
                    "arch_count": 1,
                    "arch_index2": 3,
                    "arch_info": 1,
                    "arch_mach": 1,
                    "arch_mach_index": 3,
                    "arch_machine_counter": 1,
                    "bfd_target_type": 1,
                    "file_descriptor": 3,
                    "i": 1,
                    "iter_index": 1,
                    "iteration_index": 1,
                    "loop_counter": 1,
                    "loop_index": 2,
                    "loop_var": 1,
                    "loop_variable": 1,
                    "target_counter": 1,
                    "target_index": 2,
                    "target_iter": 2,
                    "target_num": 1,
                    "temp_file_descriptor": 3
                },
                "lVar10": {
                    "arch_index": 1,
                    "arch_index_length": 1,
                    "arch_length": 1,
                    "file_counter": 1,
                    "header_file_len_long": 1,
                    "header_path_length": 1,
                    "header_str_len": 1,
                    "header_string_length": 1,
                    "index": 2,
                    "iter_index": 1,
                    "iterator": 1,
                    "len1": 1,
                    "length": 4,
                    "length_counter": 1,
                    "long_variable1": 1,
                    "loop_index": 1,
                    "path_length": 1,
                    "size_of_string": 1,
                    "temp": 1,
                    "temp_file_len": 1,
                    "temp_file_name_length": 1,
                    "temp_file_path_len": 1,
                    "temp_file_path_length": 1,
                    "temp_length": 1,
                    "temp_path_len": 1,
                    "temporary_path_length": 1
                },
                "lVar11": {
                    "arch_index": 2,
                    "arch_index2": 1,
                    "arch_len": 2,
                    "arch_mach_counter": 1,
                    "arch_mach_index": 1,
                    "column_index": 1,
                    "current": 1,
                    "current_architecture_index": 1,
                    "current_index": 1,
                    "file_index": 1,
                    "i": 1,
                    "index": 3,
                    "len2": 1,
                    "long_variable2": 1,
                    "loop_counter": 1,
                    "loop_index": 1,
                    "loop_str_len": 1,
                    "outer_index": 1,
                    "printable_arch_length": 1,
                    "start_index": 2,
                    "temp_file_counter": 1,
                    "temp_file_index": 1,
                    "temp_index": 1,
                    "temp_string_length": 1,
                    "temp_var": 1
                },
                "local_70": {
                    "arch_index": 1,
                    "arch_index3": 1,
                    "arch_mach_index": 1,
                    "arch_mach_string_index": 1,
                    "count": 1,
                    "current_column": 1,
                    "current_index": 1,
                    "exit_condition": 2,
                    "file_index": 1,
                    "i": 1,
                    "index": 1,
                    "j": 1,
                    "line_counter": 1,
                    "loop_counter": 2,
                    "loop_counter2": 1,
                    "loop_index2": 1,
                    "loop_variable2": 1,
                    "negative_counter": 1,
                    "negative_loop_counter": 1,
                    "print_width": 1,
                    "return_value": 2,
                    "stop_condition": 1,
                    "target_index": 1,
                    "temp_file_descriptor": 3,
                    "temp_index": 1,
                    "temp_var2": 1
                },
                "mkstemps": {
                    "create_temp_file_with_suffix": 1,
                    "create_temporary_file": 1
                },
                "pcVar4": {
                    "header": 3,
                    "header_file": 1,
                    "header_file_version": 1,
                    "header_file_version_string": 1,
                    "header_format": 3,
                    "header_message": 6,
                    "header_str": 1,
                    "header_string": 5,
                    "header_version": 4,
                    "message": 2,
                    "temp_string": 2,
                    "text": 1,
                    "tmpdir": 1
                },
                "pcVar6": {
                    "path_to_tmp_file": 1,
                    "temp_dir": 11,
                    "temp_directory": 2,
                    "temp_file_name": 1,
                    "temp_file_path": 7,
                    "temp_path": 2,
                    "temp_string": 1,
                    "temp_string2": 1,
                    "temporary_directory": 1,
                    "temporary_file_path": 1,
                    "temporary_path": 1,
                    "tmp_dir": 1
                },
                "piVar8": {
                    "err_no": 1,
                    "errno_loc": 2,
                    "errno_location": 6,
                    "errno_pointer": 2,
                    "errno_ptr": 2,
                    "error_code": 4,
                    "error_location": 3,
                    "error_num": 1,
                    "error_number": 7,
                    "error_number_ptr": 1,
                    "p_errno": 1
                },
                "ppcVar12": {
                    "arch_and_mach": 1,
                    "arch_array": 2,
                    "arch_data": 1,
                    "arch_mach": 1,
                    "arch_mach_array": 5,
                    "arch_mach_list": 3,
                    "arch_mach_names": 1,
                    "arch_mach_ppc": 1,
                    "arch_mach_ptr": 4,
                    "arch_mach_values": 1,
                    "arch_machine_array": 1,
                    "arch_machines": 1,
                    "arch_name": 1,
                    "arch_names": 1,
                    "arch_ptr": 1,
                    "architectures": 1,
                    "current_arch": 1,
                    "loop_str_array": 1,
                    "string_array": 1,
                    "string_array_ptr": 1,
                    "target_arch": 1
                },
                "printf": {
                    "print_formatted_output": 1,
                    "print_text": 1
                },
                "putchar": {
                    "write_character": 1
                },
                "sVar5": {
                    "header_file_len": 1,
                    "header_file_size": 1,
                    "header_file_version_string_length": 1,
                    "header_len": 1,
                    "header_length": 7,
                    "header_message_length": 2,
                    "header_str_length": 1,
                    "header_string_len": 1,
                    "header_string_length": 1,
                    "header_version_length": 3,
                    "length": 2,
                    "string_length": 6,
                    "temp_path_length": 1,
                    "text_length": 1,
                    "tmpdir_length": 1,
                    "version_length": 1
                },
                "stderr": {
                    "standard_error": 1
                },
                "stdin": {
                    "standard_input": 1
                },
                "strcmp": {
                    "compare_strings": 1
                },
                "strcpy": {
                    "copy_string": 2
                },
                "strerror": {
                    "get_error_message": 1,
                    "get_error_str": 1
                },
                "strlen": {
                    "get_str_length": 1,
                    "get_string_length": 1
                },
                "uVar13": {
                    "max_arch_len": 2,
                    "max_arch_length": 5,
                    "max_arch_mach_len": 1,
                    "max_arch_mach_length": 8,
                    "max_arch_name_length": 2,
                    "max_arch_size": 1,
                    "max_architecture_name_length": 1,
                    "max_length": 6,
                    "max_loop_str_length": 1,
                    "max_string_length": 4
                },
                "uVar14": {
                    "arch_data_len": 1,
                    "arch_length": 4,
                    "arch_mach_length": 3,
                    "arch_mach_string_length": 1,
                    "arch_name_length": 4,
                    "array_index": 1,
                    "char_len": 1,
                    "length": 2,
                    "loop_count": 1,
                    "loop_length": 1,
                    "loop_str_array_len": 1,
                    "loop_variable": 1,
                    "name_length": 1,
                    "str_len": 1,
                    "str_length": 2,
                    "string_length": 4,
                    "temp_length": 1,
                    "temp_variable": 1
                },
                "uVar7": {
                    "arch_mach": 1,
                    "combined_path": 1,
                    "env_append_result": 1,
                    "res": 1,
                    "result": 10,
                    "result_string": 1,
                    "return_value": 1,
                    "temp": 1,
                    "temp_dir_result": 1,
                    "temp_directory_length": 1,
                    "temp_file_path_result": 1,
                    "temp_path": 2,
                    "temp_path_length": 1,
                    "temp_path_result": 1,
                    "temp_result": 2,
                    "temp_var": 1,
                    "updated_directory": 1,
                    "updated_temp_dir": 3
                },
                "unlink": {
                    "delete_file": 1,
                    "remove_file": 1
                },
                "xmalloc": {
                    "allocate_memory": 2
                }
            },
            "called": [
                "strlen",
                "FUN_0011283f",
                "dcgettext",
                "unlink",
                "getenv",
                "bfd_iterate_over_targets",
                "free",
                "close",
                "fprintf",
                "FUN_00119f70",
                "strcpy",
                "mkstemps",
                "bfd_printable_arch_mach",
                "__errno_location",
                "strerror",
                "xmalloc",
                "abort",
                "printf",
                "FUN_00104943"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\n\n\nvoid print_bfd_header_version_001199d0(void)\n\n{\n  int column_width;\n  int target_index;\n  int comparison_result;\n  char *header_message;\n  size_t header_length;\n  char *temp_dir;\n  undefined8 result;\n  int *error_number;\n  int file_descriptor;\n  long length;\n  long index;\n  char **arch_mach_array;\n  uint max_arch_mach_length;\n  ulong string_length;\n  int temp_file_descriptor;\n  \n  header_message = (char *)dcgettext(0,\"BFD header file version %s\\n\",5);\n  printf(header_message,\"(GNU Binutils for Debian) 2.40\");\n  if (DAT_001278c0 == (char *)0x0) {\n    header_message = getenv(\"TMPDIR\");\n    result = FUN_0011283f(header_message,0);\n    header_message = getenv(\"TMP\");\n    result = FUN_0011283f(header_message,result);\n    header_message = getenv(\"TEMP\");\n    result = FUN_0011283f(header_message,result);\n    result = FUN_0011283f(&DAT_0011b39a,result);\n    result = FUN_0011283f(\"/var/tmp\",result);\n    header_message = (char *)FUN_0011283f(&DAT_00120324,result);\n    if (header_message == (char *)0x0) {\n      header_message = \".\";\n    }\n    header_length = strlen(header_message);\n    temp_dir = (char *)xmalloc((int)header_length + 2);\n    DAT_001278c0 = strcpy(temp_dir,header_message);\n    DAT_001278c0[header_length & 0xffffffff] = '/';\n    DAT_001278c0[(int)header_length + 1] = '\\0';\n  }\n  header_message = DAT_001278c0;\n  header_length = strlen(DAT_001278c0);\n  length = (long)(int)header_length;\n  temp_dir = (char *)xmalloc(length + 9);\n  strcpy(temp_dir,header_message);\n  *(undefined2 *)(temp_dir + length) = 0x6363;\n  *(undefined4 *)(temp_dir + length + 2) = 0x58585858;\n  *(undefined4 *)((long)(temp_dir + length + 2) + 3) = 0x585858;\n  temp_dir[length + 8] = '\\0';\n  target_index = mkstemps(temp_dir,0);\n  if (target_index == -1) {\n    error_number = __errno_location();\n    temp_dir = strerror(*error_number);\n    fprintf(standard_error,\"Cannot create temporary file in %s: %s\\n\",header_message,temp_dir);\n                    \n    abort();\n  }\n  target_index = close_file_descriptor(target_index);\n  if (target_index != 0) {\n                    \n    abort();\n  }\n  max_arch_mach_length = 0;\n  target_index = 2;\n  bfd_iterate_over_targets(FUN_00119f70);\n  unlink(temp_dir);\n  free_memory(temp_dir);\n  temp_file_descriptor = 0;\n  do {\n    header_message = (char *)bfd_printable_arch_mach(target_index);\n    header_length = strlen(header_message);\n    if ((int)max_arch_mach_length < (int)(uint)header_length) {\n      max_arch_mach_length = (uint)header_length;\n    }\n    target_index = target_index + 1;\n  } while (target_index != 0x57);\n  header_message = getenv(\"num_columns\");\n  target_index = temp_file_descriptor;\n  if (header_message != (char *)0x0) {\n    length = strtol(header_message,(char **)0x0,10);\n    column_width = (int)length;\n    if (column_width != 0) goto LAB_00119b11;\n  }\n  column_width = 0x50;\nLAB_00119b11:\n  do {\n    temp_file_descriptor = target_index;\n    if (-1 < temp_file_descriptor) {\n      return;\n    }\n    index = (long)temp_file_descriptor;\n    file_descriptor = (column_width - max_arch_mach_length) + -1;\n    length = index;\n    do {\n      target_index = (int)length;\n      if (-1 < target_index) break;\n      header_length = strlen(*(char **)(length * 0x60));\n      length = length + 1;\n      file_descriptor = (file_descriptor - (int)header_length) + -1;\n    } while (-1 < file_descriptor);\n    printf(\"\\n%*s\",(ulong)(max_arch_mach_length + 1),&DAT_0011b4a1);\n    for (arch_mach_array = (char **)(index * 0x60);\n        ((ulong)(uint)(target_index - temp_file_descriptor) + index) * 0x60 - (long)arch_mach_array != 0;\n        arch_mach_array = arch_mach_array + 0xc) {\n      printf(\"%s \",*arch_mach_array);\n    }\n    file_descriptor = 2;\n    putc(10,standard_output);\n    do {\n      header_message = (char *)bfd_printable_arch_mach(file_descriptor,0);\n      comparison_result = strcmp(header_message,\"UNKNOWN!\");\n      if (comparison_result != 0) {\n        result = bfd_printable_arch_mach(file_descriptor,0);\n        printf(\"%*s \",(ulong)max_arch_mach_length,result);\n        arch_mach_array = (char **)(index * 0x60);\n        comparison_result = temp_file_descriptor;\n        while (target_index != comparison_result) {\n          if (*(char *)((long)arch_mach_array + (ulong)(file_descriptor - 2) + 8) == '\\0') {\n            header_length = strlen(*arch_mach_array);\n            for (string_length = header_length & 0xffffffff; (int)string_length != 0; string_length = (ulong)((int)string_length - 1)) {\n              putc(0x2d,standard_output);\n            }\n          }\n          else {\n            fputs(*arch_mach_array,standard_output);\n          }\n          comparison_result = comparison_result + 1;\n          if (target_index != comparison_result) {\n            putc(0x20,standard_output);\n          }\n          arch_mach_array = arch_mach_array + 0xc;\n        }\n        putc(10,standard_output);\n      }\n      file_descriptor = file_descriptor + 1;\n    } while (file_descriptor != 0x57);\n  } while( true );\n}\n\n",
            "current_name": "print_bfd_header_version_001199d0",
            "entrypoint": "0x001199d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "COLUMNS": "num_columns",
                "FUN_001199d0": "print_bfd_header_version_001199d0",
                "__errno_location": "get_error_code_location",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "abort": "exit_process",
                "bfd_iterate_over_targets": "iterate_over_targets",
                "bfd_printable_arch_mach": "get_arch_mach",
                "close": "close_file_descriptor",
                "dcgettext": "get_binary_version",
                "fprintf": "print_error_message",
                "free": "free_memory",
                "getenv": "get_environment_variable",
                "iVar1": "column_width",
                "iVar2": "target_index",
                "iVar3": "comparison_result",
                "iVar9": "file_descriptor",
                "lVar10": "length",
                "lVar11": "index",
                "local_70": "temp_file_descriptor",
                "mkstemps": "create_temp_file_with_suffix",
                "pcVar4": "header_message",
                "pcVar6": "temp_dir",
                "piVar8": "error_number",
                "ppcVar12": "arch_mach_array",
                "printf": "print_formatted_output",
                "sVar5": "header_length",
                "stderr": "standard_error",
                "strcmp": "compare_strings",
                "strcpy": "copy_string",
                "strerror": "get_error_message",
                "strlen": "get_str_length",
                "uVar13": "max_arch_mach_length",
                "uVar14": "string_length",
                "uVar7": "result",
                "unlink": "delete_file",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00119dd0": {
            "additional_data": {
                "FUN_00119dd0": {
                    "extract_and_exit": 1,
                    "extract_data_and_exit": 1,
                    "process_data": 10,
                    "reverse_and_exit": 3
                },
                "FUN_00119e70": {
                    "format_and_copy_data": 1,
                    "helper_function": 1,
                    "perform_action": 1,
                    "process_data": 3,
                    "process_data_subfunction": 1,
                    "process_params": 1,
                    "process_sub_function": 1
                },
                "in_AL": {
                    "character_input": 1,
                    "condition": 6,
                    "condition_check": 1,
                    "flag": 10,
                    "input_flag": 2,
                    "input_variable": 1,
                    "is_condition_true": 2,
                    "is_enabled": 1,
                    "is_non_null": 1,
                    "is_not_null": 1,
                    "some_flag": 1
                },
                "local_18": {
                    "cond8": 1,
                    "eighth_local": 1,
                    "input8_copy": 5,
                    "input8_value": 1,
                    "input_8_new": 1,
                    "input_param_8": 1,
                    "local_18": 1,
                    "local_input8": 1,
                    "local_input_param8": 1,
                    "local_input_param_8": 2,
                    "local_param_8": 1,
                    "local_value_8": 1,
                    "local_var8": 2,
                    "local_var_20": 1,
                    "only_when_flag_true_8": 1,
                    "param_8": 2,
                    "param_8_copy": 1,
                    "temp_8": 1,
                    "temp_param_8": 1,
                    "temp_var_eight": 1,
                    "value6": 1,
                    "var8": 1
                },
                "local_28": {
                    "cond7": 1,
                    "input7_copy": 5,
                    "input7_value": 1,
                    "input_7_new": 1,
                    "input_param_7": 1,
                    "local_28": 1,
                    "local_input7": 1,
                    "local_input_param7": 1,
                    "local_input_param_7": 2,
                    "local_param_7": 1,
                    "local_value_7": 1,
                    "local_var7": 2,
                    "local_var_19": 1,
                    "only_when_flag_true_7": 1,
                    "param_7": 2,
                    "param_7_copy": 1,
                    "seventh_local": 1,
                    "temp_7": 1,
                    "temp_param_7": 1,
                    "temp_var_seven": 1,
                    "value5": 1,
                    "var7": 1
                },
                "local_38": {
                    "cond6": 1,
                    "input6_copy": 5,
                    "input6_value": 1,
                    "input_6_new": 1,
                    "input_param_6": 1,
                    "local_38": 1,
                    "local_input6": 1,
                    "local_input_param6": 1,
                    "local_input_param_6": 2,
                    "local_param_6": 1,
                    "local_value_6": 1,
                    "local_var6": 2,
                    "local_var_18": 1,
                    "only_when_flag_true_6": 1,
                    "param_6": 2,
                    "param_6_copy": 1,
                    "sixth_local": 1,
                    "temp_6": 1,
                    "temp_param_6": 1,
                    "temp_var_six": 1,
                    "value4": 1,
                    "var6": 1
                },
                "local_48": {
                    "cond5": 1,
                    "fifth_local": 1,
                    "input5_copy": 5,
                    "input5_value": 1,
                    "input_5_new": 1,
                    "input_param_5": 1,
                    "local_48": 1,
                    "local_input5": 1,
                    "local_input_param5": 1,
                    "local_input_param_5": 2,
                    "local_param_5": 1,
                    "local_value_5": 1,
                    "local_var5": 2,
                    "local_var_17": 1,
                    "only_when_flag_true_5": 1,
                    "param_5": 2,
                    "param_5_copy": 1,
                    "temp_5": 1,
                    "temp_param_5": 1,
                    "temp_var_five": 1,
                    "value3": 1,
                    "var5": 1
                },
                "local_58": {
                    "cond4": 1,
                    "fourth_local": 1,
                    "input4_copy": 5,
                    "input4_value": 1,
                    "input_4_new": 1,
                    "input_param_4": 1,
                    "local_58": 1,
                    "local_input4": 1,
                    "local_input_param4": 1,
                    "local_input_param_4": 2,
                    "local_param_4": 1,
                    "local_value_4": 1,
                    "local_var4": 2,
                    "local_var_16": 1,
                    "only_when_flag_true_4": 1,
                    "param_4": 2,
                    "param_4_copy": 1,
                    "temp_4": 1,
                    "temp_param_4": 1,
                    "temp_var_four": 1,
                    "value2": 1,
                    "var4": 1
                },
                "local_68": {
                    "cond3": 1,
                    "input3_copy": 5,
                    "input3_value": 1,
                    "input_3_new": 1,
                    "input_param_3": 1,
                    "local_68": 1,
                    "local_input3": 1,
                    "local_input_param3": 1,
                    "local_input_param_3": 2,
                    "local_param_3": 1,
                    "local_value_3": 1,
                    "local_var3": 2,
                    "local_var_15": 1,
                    "only_when_flag_true_3": 1,
                    "param_3": 2,
                    "param_3_copy": 1,
                    "temp_3": 1,
                    "temp_param_3": 1,
                    "temp_var_three": 1,
                    "third_local": 1,
                    "value1": 1,
                    "var3": 1
                },
                "local_78": {
                    "cond2": 1,
                    "condition": 1,
                    "input2_copy": 5,
                    "input2_value": 1,
                    "input_2_new": 1,
                    "input_param_2": 1,
                    "local_78": 1,
                    "local_input2": 1,
                    "local_input_param2": 1,
                    "local_input_param_2": 2,
                    "local_param_2": 1,
                    "local_value_2": 1,
                    "local_var2": 2,
                    "local_var_14": 1,
                    "only_when_flag_true_2": 1,
                    "param_2": 2,
                    "param_2_copy": 1,
                    "second_local": 1,
                    "temp_2": 1,
                    "temp_param_2": 1,
                    "temp_var_two": 1,
                    "var2": 1
                },
                "local_88": {
                    "cond1": 1,
                    "first_local": 1,
                    "initial_value": 1,
                    "input1_copy": 5,
                    "input1_value": 1,
                    "input_1_new": 1,
                    "input_param_1": 1,
                    "local_88": 1,
                    "local_input1": 1,
                    "local_input_param1": 1,
                    "local_input_param_1": 2,
                    "local_param_1": 1,
                    "local_value_1": 1,
                    "local_var1": 2,
                    "local_var_13": 1,
                    "only_when_flag_true_1": 1,
                    "param_1": 2,
                    "param_1_copy": 1,
                    "temp_1": 1,
                    "temp_param_1": 1,
                    "temp_var_one": 1,
                    "var1": 1
                },
                "local_90": {
                    "arg5": 1,
                    "arg6_copy": 1,
                    "arg_ptr_6": 1,
                    "data5": 1,
                    "exit_param_5": 1,
                    "local_90": 1,
                    "local_address5": 1,
                    "local_data5": 1,
                    "local_param6": 1,
                    "local_param_14": 2,
                    "local_pointer_7": 1,
                    "local_var14": 1,
                    "local_var_12": 1,
                    "param14": 1,
                    "param14_copy": 2,
                    "param6": 2,
                    "param6_value": 1,
                    "param_14": 2,
                    "param_14_copy": 2,
                    "param_14_new": 1,
                    "param_six_copy": 1,
                    "pointer6_value": 1,
                    "temp_param_14": 1,
                    "value6_copy": 1,
                    "var14": 1,
                    "variable_5": 1
                },
                "local_98": {
                    "arg4": 1,
                    "arg5_copy": 1,
                    "arg_ptr_5": 1,
                    "data4": 1,
                    "exit_param_4": 1,
                    "local_98": 1,
                    "local_address4": 1,
                    "local_data4": 1,
                    "local_param5": 1,
                    "local_param_13": 2,
                    "local_pointer_6": 1,
                    "local_var13": 1,
                    "local_var_11": 1,
                    "param13": 1,
                    "param13_copy": 2,
                    "param5": 2,
                    "param5_value": 1,
                    "param_13": 2,
                    "param_13_copy": 2,
                    "param_13_new": 1,
                    "param_five_copy": 1,
                    "pointer5_value": 1,
                    "temp_param_13": 1,
                    "value5_copy": 1,
                    "var13": 1,
                    "variable_4": 1
                },
                "local_a0": {
                    "arg3": 1,
                    "arg4_copy": 1,
                    "arg_ptr_4": 1,
                    "data3": 1,
                    "exit_param_3": 1,
                    "local_a0": 1,
                    "local_address3": 1,
                    "local_data3": 1,
                    "local_param4": 1,
                    "local_param_12": 2,
                    "local_pointer_5": 1,
                    "local_var12": 1,
                    "local_var_10": 1,
                    "param12": 1,
                    "param12_copy": 2,
                    "param4": 2,
                    "param4_value": 1,
                    "param_12": 2,
                    "param_12_copy": 2,
                    "param_12_new": 1,
                    "param_four_copy": 1,
                    "pointer4_value": 1,
                    "temp_param_12": 1,
                    "value4_copy": 1,
                    "var12": 1,
                    "variable_3": 1
                },
                "local_a8": {
                    "arg2": 1,
                    "arg3_copy": 1,
                    "arg_ptr_3": 1,
                    "data2": 1,
                    "exit_param_2": 1,
                    "local_a8": 1,
                    "local_address2": 1,
                    "local_data2": 1,
                    "local_param3": 1,
                    "local_param_11": 2,
                    "local_pointer_4": 1,
                    "local_var11": 1,
                    "local_var_9": 1,
                    "param11": 1,
                    "param11_copy": 2,
                    "param3": 2,
                    "param3_value": 1,
                    "param_11": 2,
                    "param_11_copy": 2,
                    "param_11_new": 1,
                    "param_three_copy": 1,
                    "pointer3_value": 1,
                    "temp_param_11": 1,
                    "value3_copy": 1,
                    "var11": 1,
                    "variable_2": 1
                },
                "local_b0": {
                    "arg1": 1,
                    "arg2_copy": 1,
                    "arg_ptr_2": 1,
                    "data1": 1,
                    "exit_param_1": 1,
                    "local_address1": 1,
                    "local_b0": 1,
                    "local_data1": 1,
                    "local_param2": 1,
                    "local_param_10": 2,
                    "local_pointer_3": 1,
                    "local_var10": 1,
                    "local_var_8": 1,
                    "param10": 1,
                    "param10_copy": 2,
                    "param2": 2,
                    "param2_value": 1,
                    "param_10": 2,
                    "param_10_copy": 2,
                    "param_10_new": 1,
                    "param_two_copy": 1,
                    "pointer2_value": 1,
                    "temp_param_10": 1,
                    "value2_copy": 1,
                    "var10": 1,
                    "variable_1": 1
                },
                "local_b8": {
                    "auxiliary_buffer": 1,
                    "buffer": 3,
                    "local_array": 4,
                    "local_buffer": 5,
                    "local_variable_buffer": 1,
                    "output_buffer": 1,
                    "result": 2,
                    "small_buffer": 1,
                    "static_array": 1,
                    "temp_buffer": 3,
                    "temporary_buffer": 7
                },
                "local_c8": {
                    "array": 1,
                    "buffer": 3,
                    "buffer_pointer": 1,
                    "local_array": 2,
                    "local_buffer": 18,
                    "local_pointer_2": 2,
                    "local_variable_4": 1,
                    "output": 1,
                    "pointer2": 1,
                    "ptr_local_c8": 1
                },
                "local_d0": {
                    "array_ptr": 1,
                    "array_start": 1,
                    "buffer": 10,
                    "buffer_pointer": 1,
                    "buffer_ptr": 9,
                    "local_pointer": 1,
                    "local_pointer_1": 1,
                    "local_variable_3": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "ptr_local_d0": 1,
                    "stack_pointer": 1,
                    "stack_ptr": 1
                },
                "local_d4": {
                    "array_length": 1,
                    "buffer_size": 2,
                    "constant_value": 1,
                    "copy_size": 2,
                    "count": 3,
                    "length": 4,
                    "local_d4": 1,
                    "local_var_7": 1,
                    "local_variable_2": 2,
                    "loop_count": 1,
                    "offset": 3,
                    "size": 2,
                    "size2": 1
                },
                "local_d8": {
                    "array_length": 1,
                    "array_size": 1,
                    "buffer_size": 7,
                    "byte_count": 1,
                    "count": 3,
                    "length": 4,
                    "local_d8": 1,
                    "local_var_6": 1,
                    "local_variable_1": 2,
                    "size": 8,
                    "size1": 1,
                    "stack_size": 1
                },
                "param_1": {
                    "action_param_1": 1,
                    "arg1": 1,
                    "argument_1": 1,
                    "extracted_param_1": 1,
                    "first_param": 2,
                    "initial_value": 1,
                    "input1": 11,
                    "input_1": 3,
                    "input_param": 1,
                    "input_param1": 2,
                    "input_param_1": 5,
                    "value_1": 1
                },
                "param_10": {
                    "arg10": 1,
                    "arg2": 1,
                    "argument_ptr_2": 1,
                    "data2": 1,
                    "data_2": 1,
                    "data_param2": 1,
                    "exit_param_1": 1,
                    "extracted_param_10": 1,
                    "input_param_10": 2,
                    "local_var_1": 1,
                    "param10": 3,
                    "param2": 3,
                    "param_10": 3,
                    "param_addr1": 1,
                    "param_two": 1,
                    "pointer2": 2,
                    "pointer_2": 1,
                    "tenth_param": 1,
                    "value2": 2
                },
                "param_11": {
                    "arg11": 1,
                    "arg3": 1,
                    "argument_ptr_3": 1,
                    "data3": 1,
                    "data_3": 1,
                    "data_param3": 1,
                    "eleventh_param": 1,
                    "exit_param_2": 1,
                    "extracted_param_11": 1,
                    "input_param_11": 2,
                    "local_var_2": 1,
                    "param11": 3,
                    "param3": 3,
                    "param_11": 3,
                    "param_addr2": 1,
                    "param_three": 1,
                    "pointer3": 2,
                    "pointer_3": 1,
                    "value3": 2
                },
                "param_12": {
                    "arg12": 1,
                    "arg4": 1,
                    "argument_ptr_4": 1,
                    "data4": 1,
                    "data_4": 1,
                    "data_param4": 1,
                    "exit_param_3": 1,
                    "extracted_param_12": 1,
                    "input_param_12": 2,
                    "local_var_3": 1,
                    "param12": 3,
                    "param4": 3,
                    "param_12": 3,
                    "param_addr3": 1,
                    "param_four": 1,
                    "pointer4": 2,
                    "pointer_4": 1,
                    "twelfth_param": 1,
                    "value4": 2
                },
                "param_13": {
                    "arg13": 1,
                    "arg5": 1,
                    "argument_ptr_5": 1,
                    "data5": 1,
                    "data_5": 1,
                    "data_param5": 1,
                    "exit_param_4": 1,
                    "extracted_param_13": 1,
                    "input_param_13": 2,
                    "local_var_4": 1,
                    "param13": 3,
                    "param5": 3,
                    "param_13": 3,
                    "param_addr4": 1,
                    "param_five": 1,
                    "pointer5": 2,
                    "pointer_5": 1,
                    "thirteenth_param": 1,
                    "value5": 2
                },
                "param_14": {
                    "arg14": 1,
                    "arg6": 1,
                    "argument_ptr_6": 1,
                    "data6": 1,
                    "data_6": 1,
                    "data_param6": 1,
                    "exit_param_5": 1,
                    "extracted_param_14": 1,
                    "fourteenth_param": 1,
                    "input_param_14": 2,
                    "local_var_5": 1,
                    "param14": 3,
                    "param6": 3,
                    "param_14": 3,
                    "param_addr5": 1,
                    "param_six": 1,
                    "pointer6": 2,
                    "pointer_6": 1,
                    "value6": 2
                },
                "param_2": {
                    "arg2": 1,
                    "argument_2": 1,
                    "condition": 1,
                    "extracted_param_2": 1,
                    "input2": 11,
                    "input_2": 3,
                    "input_param2": 2,
                    "input_param_2": 6,
                    "output_param": 1,
                    "second_param": 2,
                    "value_2": 1
                },
                "param_3": {
                    "arg3": 1,
                    "argument_3": 1,
                    "extracted_param_3": 1,
                    "flag_param": 1,
                    "input3": 11,
                    "input_3": 3,
                    "input_param3": 2,
                    "input_param_3": 6,
                    "third_param": 2,
                    "value1": 1,
                    "value_3": 1
                },
                "param_4": {
                    "arg4": 1,
                    "argument_4": 1,
                    "config_param": 1,
                    "extracted_param_4": 1,
                    "fourth_param": 2,
                    "input4": 11,
                    "input_4": 3,
                    "input_param4": 2,
                    "input_param_4": 6,
                    "value2": 1,
                    "value_4": 1
                },
                "param_5": {
                    "arg5": 1,
                    "argument_5": 1,
                    "extracted_param_5": 1,
                    "fifth_param": 2,
                    "input5": 11,
                    "input_5": 3,
                    "input_param5": 2,
                    "input_param_5": 6,
                    "value3": 1,
                    "value_5": 1
                },
                "param_6": {
                    "arg6": 1,
                    "argument_6": 1,
                    "extracted_param_6": 1,
                    "input6": 11,
                    "input_6": 3,
                    "input_param6": 2,
                    "input_param_6": 6,
                    "sixth_param": 2,
                    "value4": 1,
                    "value_6": 1
                },
                "param_7": {
                    "arg7": 1,
                    "argument_7": 1,
                    "extracted_param_7": 1,
                    "input7": 11,
                    "input_7": 3,
                    "input_param7": 2,
                    "input_param_7": 6,
                    "seventh_param": 2,
                    "value5": 1,
                    "value_7": 1
                },
                "param_8": {
                    "arg8": 1,
                    "argument_8": 1,
                    "eighth_param": 2,
                    "extracted_param_8": 1,
                    "input8": 11,
                    "input_8": 3,
                    "input_param8": 2,
                    "input_param_8": 6,
                    "value6": 1,
                    "value_8": 1
                },
                "param_9": {
                    "arg1": 1,
                    "argument_ptr_1": 1,
                    "data1": 1,
                    "data_1": 1,
                    "data_param1": 1,
                    "data_ptr": 1,
                    "extracted_param_9": 1,
                    "function_address": 1,
                    "input_param_9": 3,
                    "param1": 3,
                    "param9": 3,
                    "param_9": 4,
                    "param_handle": 1,
                    "param_one": 1,
                    "pointer1": 2,
                    "pointer_1": 1,
                    "value1": 2
                },
                "xexit": {
                    "exit_function": 1,
                    "exit_program": 8
                }
            },
            "called": [
                "FUN_00119e70",
                "xexit"
            ],
            "calling": [
                "FUN_00108d9a",
                "FUN_00114190",
                "FUN_00115b70",
                "FUN_0010543c",
                "FUN_00104920",
                "FUN_0010da0b",
                "FUN_00104ad6",
                "FUN_0010554f",
                "FUN_001083de",
                "FUN_00114460",
                "FUN_00114dc7",
                "FUN_0010827b",
                "FUN_00116b90",
                "FUN_00114690",
                "FUN_001053b5",
                "FUN_00108808"
            ],
            "code": "\nvoid process_data_00119dd0(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 input5,undefined4 input6,undefined4 input7,undefined4 input8,\n                 undefined8 param_9,undefined8 input10,undefined8 param11,undefined8 param4,\n                 undefined8 param13,undefined8 input14)\n\n{\n  char flag;\n  undefined4 size;\n  undefined4 length;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined temporary_buffer [8];\n  undefined8 local_param_10;\n  undefined8 local_param_11;\n  undefined8 param4;\n  undefined8 param13_copy;\n  undefined8 param_14;\n  undefined4 input1_copy;\n  undefined4 input2_copy;\n  undefined4 input3_copy;\n  undefined4 input4_copy;\n  undefined4 input5_copy;\n  undefined4 input6_copy;\n  undefined4 input7_copy;\n  undefined4 input8_copy;\n  \n  if (flag != '\\0') {\n    input1_copy = input1;\n    input2_copy = input2;\n    input3_copy = input3;\n    input4_copy = input4;\n    input5_copy = input5;\n    input6_copy = input6;\n    input7_copy = input7;\n    input8_copy = input8;\n  }\n  buffer = &stack0x00000008;\n  size = 8;\n  local_buffer = temporary_buffer;\n  length = 0x30;\n  local_param_10 = input10;\n  local_param_11 = param11;\n  param4 = param4;\n  param13_copy = param13;\n  param_14 = input14;\n  FUN_00119e70(param_9,&size);\n                    \n  xexit(1);\n}\n\n",
            "current_name": "process_data_00119dd0",
            "entrypoint": "0x00119dd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00119dd0": "process_data_00119dd0",
                "in_AL": "flag",
                "local_18": "input8_copy",
                "local_28": "input7_copy",
                "local_38": "input6_copy",
                "local_48": "input5_copy",
                "local_58": "input4_copy",
                "local_68": "input3_copy",
                "local_78": "input2_copy",
                "local_88": "input1_copy",
                "local_90": "param_14",
                "local_98": "param13_copy",
                "local_a0": "param4",
                "local_a8": "local_param_11",
                "local_b0": "local_param_10",
                "local_b8": "temporary_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "length",
                "local_d8": "size",
                "param_1": "input1",
                "param_11": "param11",
                "param_12": "param4",
                "param_13": "param13",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "param_7": "input7",
                "param_8": "input8",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00119e70": {
            "additional_data": {
                "FUN_00119e70": {
                    "print_error_formatted": 1,
                    "print_error_message": 26,
                    "print_formatted_error_message": 2,
                    "print_formatted_message": 1,
                    "print_formatted_string_to_stderr": 1
                },
                "__arg": {
                    "arg": 1,
                    "argument": 1,
                    "arguments": 7
                },
                "__c": {
                    "character": 13
                },
                "__format": {
                    "format": 9,
                    "format_string": 4
                },
                "__gnuc_va_list": {
                    "arg_list": 1,
                    "args": 1,
                    "varargs": 1,
                    "variable_argument_list": 1,
                    "variadic_args": 1
                },
                "__s": {
                    "destination": 1,
                    "file": 2,
                    "file_stream": 1,
                    "file_stream_ptr": 1,
                    "file_to_print": 1,
                    "output_stream": 3,
                    "stream": 4
                },
                "__stream": {
                    "file": 4,
                    "file_stream": 3,
                    "output": 1,
                    "output_stream": 2,
                    "stream": 3
                },
                "_stderr": {
                    "error_stream": 2,
                    "standard_error": 6,
                    "standard_error_stream": 1,
                    "stderr": 4,
                    "stderr_stream": 2
                },
                "_stdout": {
                    "standard_output": 6,
                    "standard_output_stream": 1,
                    "stdout": 4,
                    "stdout_stream": 2
                },
                "fflush": {
                    "flush_buffer": 1,
                    "flush_file": 2,
                    "flush_output": 2,
                    "flush_output_stream": 1,
                    "flush_stream": 3
                },
                "fllush": {
                    "flush_output": 1
                },
                "fprintf": {
                    "format_error_message": 1,
                    "format_print": 1,
                    "formatted_print": 1,
                    "print_output": 1,
                    "print_to_stream": 5,
                    "stream_print": 1,
                    "write_formatted": 1
                },
                "param_1": {
                    "error_message": 18,
                    "error_msg": 1,
                    "error_string": 1,
                    "format_string": 1,
                    "formatted_string": 1,
                    "message": 9
                },
                "param_2": {
                    "arg_list": 2,
                    "args": 13,
                    "arguments": 10,
                    "format_args": 1,
                    "format_arguments": 2
                },
                "put": {
                    "write_character": 1
                },
                "putc": {
                    "put_character": 6,
                    "write_char": 1,
                    "write_character": 3
                },
                "vfprintf": {
                    "format_and_print": 1,
                    "format_print": 1,
                    "print_formatted": 4,
                    "print_formatted_error_message": 1,
                    "print_formatted_output": 1,
                    "variable_format_print": 2
                }
            },
            "called": [
                "putc",
                "fflush",
                "vfprintf",
                "fprintf"
            ],
            "calling": [
                "FUN_00119dd0",
                "FUN_00119ed0"
            ],
            "code": "\n\n\nvoid print_formatted_error_message_00119e70(char *error_message,variable_argument_list args)\n\n{\n  fflush(standard_output);\n  fprintf(standard_error,\"%s: \",DAT_001275e0);\n  vfprintf(standard_error,error_message,args);\n  putc(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_formatted_error_message_00119e70",
            "entrypoint": "0x00119e70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00119e70": "print_formatted_error_message_00119e70",
                "__gnuc_va_list": "variable_argument_list",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "fflush": "flush_stream",
                "fprintf": "print_to_stream",
                "param_1": "error_message",
                "param_2": "args",
                "put": "write_character",
                "putc": "put_character",
                "vfprintf": "print_formatted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00119ed0": {
            "additional_data": {
                "FUN_00119e70": {
                    "helper_function": 1,
                    "process_data": 3,
                    "process_string": 1
                },
                "FUN_00119ed0": {
                    "decompiled_function": 1,
                    "extract_and_process_data": 1,
                    "extract_data": 1,
                    "extract_data_from_binary": 2,
                    "initialize_data": 1,
                    "parse_parameters": 1,
                    "process_data": 8
                },
                "in_AL": {
                    "boolean_input": 1,
                    "condition": 6,
                    "condition_flag": 2,
                    "flag": 9,
                    "flag_byte": 1,
                    "input_condition": 1,
                    "input_flag": 3,
                    "is_condition_met": 1,
                    "is_true": 1,
                    "is_valid": 1
                },
                "local_18": {
                    "arg8_copy": 1,
                    "eighth_local": 1,
                    "input8": 2,
                    "input8_copy": 3,
                    "input_8_copy": 1,
                    "input_8_value": 1,
                    "input_arg8": 1,
                    "input_param_8": 1,
                    "input_param_8_copy": 2,
                    "local8": 1,
                    "local_arg8": 1,
                    "local_eighth_param": 1,
                    "local_input_8": 1,
                    "local_input_param_8": 1,
                    "local_value7": 1,
                    "local_value8": 1,
                    "local_var10": 1,
                    "local_var8": 2,
                    "result_8": 1,
                    "temp8": 1,
                    "temp_input8": 1,
                    "var19": 1,
                    "var_18": 1
                },
                "local_28": {
                    "arg7_copy": 1,
                    "input7": 2,
                    "input7_copy": 3,
                    "input_7_copy": 1,
                    "input_7_value": 1,
                    "input_arg7": 1,
                    "input_param_7": 1,
                    "input_param_7_copy": 2,
                    "local7": 1,
                    "local_arg7": 1,
                    "local_input_7": 1,
                    "local_input_param_7": 1,
                    "local_seventh_param": 1,
                    "local_value6": 1,
                    "local_value7": 1,
                    "local_var7": 2,
                    "local_var9": 1,
                    "result_7": 1,
                    "seventh_local": 1,
                    "temp7": 1,
                    "temp_input7": 1,
                    "var18": 1,
                    "var_28": 1
                },
                "local_38": {
                    "arg6_copy": 1,
                    "input6": 2,
                    "input6_copy": 3,
                    "input_6_copy": 1,
                    "input_6_value": 1,
                    "input_arg6": 1,
                    "input_param_6": 1,
                    "input_param_6_copy": 2,
                    "local6": 1,
                    "local_arg6": 1,
                    "local_input_6": 1,
                    "local_input_param_6": 1,
                    "local_sixth_param": 1,
                    "local_value5": 1,
                    "local_value6": 1,
                    "local_var6": 2,
                    "local_var8": 1,
                    "result_6": 1,
                    "sixth_local": 1,
                    "temp6": 1,
                    "temp_input6": 1,
                    "var17": 1,
                    "var_38": 1
                },
                "local_48": {
                    "arg5_copy": 1,
                    "fifth_local": 1,
                    "input5": 2,
                    "input5_copy": 3,
                    "input_5_copy": 1,
                    "input_5_value": 1,
                    "input_arg5": 1,
                    "input_param_5": 1,
                    "input_param_5_copy": 2,
                    "local5": 1,
                    "local_arg5": 1,
                    "local_fifth_param": 1,
                    "local_input_5": 1,
                    "local_input_param_5": 1,
                    "local_value4": 1,
                    "local_value5": 1,
                    "local_var5": 2,
                    "local_var7": 1,
                    "result_5": 1,
                    "temp5": 1,
                    "temp_input5": 1,
                    "var16": 1,
                    "var_48": 1
                },
                "local_58": {
                    "arg4_copy": 1,
                    "fourth_local": 1,
                    "input4": 2,
                    "input4_copy": 3,
                    "input_4_copy": 1,
                    "input_4_value": 1,
                    "input_arg4": 1,
                    "input_param_4": 1,
                    "input_param_4_copy": 2,
                    "local4": 1,
                    "local_arg4": 1,
                    "local_fourth_param": 1,
                    "local_input_4": 1,
                    "local_input_param_4": 1,
                    "local_value3": 1,
                    "local_value4": 1,
                    "local_var4": 2,
                    "local_var6": 1,
                    "result_4": 1,
                    "temp4": 1,
                    "temp_input4": 1,
                    "var15": 1,
                    "var_58": 1
                },
                "local_68": {
                    "arg3_copy": 1,
                    "destination_option": 1,
                    "input3": 2,
                    "input3_copy": 3,
                    "input_3_copy": 1,
                    "input_3_value": 1,
                    "input_arg3": 1,
                    "input_param_3": 1,
                    "input_param_3_copy": 2,
                    "local3": 1,
                    "local_arg3": 1,
                    "local_input_3": 1,
                    "local_input_param_3": 1,
                    "local_third_param": 1,
                    "local_value2": 1,
                    "local_value3": 1,
                    "local_var3": 2,
                    "local_var5": 1,
                    "result_3": 1,
                    "temp3": 1,
                    "temp_input3": 1,
                    "third_local": 1,
                    "var14": 1,
                    "var_68": 1
                },
                "local_78": {
                    "arg2_copy": 1,
                    "destination_value": 1,
                    "input2": 2,
                    "input2_copy": 3,
                    "input_2_copy": 1,
                    "input_2_value": 1,
                    "input_arg2": 1,
                    "input_param_2": 1,
                    "input_param_2_copy": 2,
                    "local2": 1,
                    "local_arg2": 1,
                    "local_input_2": 1,
                    "local_input_param_2": 1,
                    "local_second_param": 1,
                    "local_value1": 1,
                    "local_value2": 1,
                    "local_var2": 2,
                    "local_var4": 1,
                    "result_2": 1,
                    "second_local": 1,
                    "temp2": 1,
                    "temp_input2": 1,
                    "var13": 1,
                    "var_78": 1
                },
                "local_88": {
                    "arg1_copy": 1,
                    "destination_count": 1,
                    "first_local": 1,
                    "input1": 2,
                    "input1_copy": 3,
                    "input_1_copy": 1,
                    "input_1_value": 1,
                    "input_arg1": 1,
                    "input_param_1": 1,
                    "input_param_1_copy": 2,
                    "local1": 1,
                    "local_arg1": 1,
                    "local_first_param": 1,
                    "local_flag": 1,
                    "local_input_1": 1,
                    "local_input_param_1": 1,
                    "local_value1": 1,
                    "local_var1": 2,
                    "local_var3": 1,
                    "result_1": 1,
                    "temp1": 1,
                    "temp_input1": 1,
                    "var12": 1,
                    "var_88": 1
                },
                "local_90": {
                    "arg5": 1,
                    "buffer_arg5": 1,
                    "data6": 1,
                    "data_param_6_copy": 1,
                    "destination_length": 1,
                    "extra_param_5_value": 1,
                    "input_param_14_copy": 1,
                    "local_arg14": 1,
                    "local_arg6": 1,
                    "local_param14": 1,
                    "local_param_14": 5,
                    "local_param_f": 1,
                    "local_ptr7": 1,
                    "local_ptr_5": 1,
                    "param14": 1,
                    "param6": 1,
                    "param6_copy": 1,
                    "param_14": 1,
                    "param_14_copy": 3,
                    "temp_arg6": 1,
                    "value5": 1,
                    "var11": 1,
                    "var5": 1,
                    "var_90": 1
                },
                "local_98": {
                    "arg4": 1,
                    "buffer_arg4": 1,
                    "data5": 1,
                    "data_param_5_copy": 1,
                    "destination_offset": 1,
                    "extra_param_4_value": 1,
                    "input_param_13_copy": 1,
                    "local_arg13": 1,
                    "local_arg5": 1,
                    "local_param13": 1,
                    "local_param_13": 5,
                    "local_param_e": 1,
                    "local_ptr6": 1,
                    "local_ptr_4": 1,
                    "param13": 1,
                    "param5": 1,
                    "param5_copy": 1,
                    "param_13": 1,
                    "param_13_copy": 3,
                    "temp_arg5": 1,
                    "value4": 1,
                    "var10": 1,
                    "var4": 1,
                    "var_98": 1
                },
                "local_a0": {
                    "arg3": 1,
                    "buffer_arg3": 1,
                    "data4": 1,
                    "data_param_4_copy": 1,
                    "destination_data": 1,
                    "extra_param_3_value": 1,
                    "input_param_12_copy": 1,
                    "local_arg12": 1,
                    "local_arg4": 1,
                    "local_param12": 1,
                    "local_param_12": 5,
                    "local_param_d": 1,
                    "local_ptr5": 1,
                    "local_ptr_3": 1,
                    "param12": 1,
                    "param4": 1,
                    "param4_copy": 1,
                    "param_12": 1,
                    "param_12_copy": 3,
                    "temp_arg4": 1,
                    "value3": 1,
                    "var3": 1,
                    "var9": 1,
                    "var_a0": 1
                },
                "local_a8": {
                    "arg2": 1,
                    "buffer_arg2": 1,
                    "data3": 1,
                    "data_param_3_copy": 1,
                    "destination_size": 1,
                    "extra_param_2_value": 1,
                    "input_param_11_copy": 1,
                    "local_arg11": 1,
                    "local_arg3": 1,
                    "local_param11": 1,
                    "local_param_11": 5,
                    "local_param_c": 1,
                    "local_ptr4": 1,
                    "local_ptr_2": 1,
                    "param11": 1,
                    "param3": 1,
                    "param3_copy": 1,
                    "param_11": 1,
                    "param_11_copy": 3,
                    "temp_arg3": 1,
                    "value2": 1,
                    "var2": 1,
                    "var8": 1,
                    "var_a8": 1
                },
                "local_b0": {
                    "arg1": 1,
                    "buffer_arg1": 1,
                    "data2": 1,
                    "data_param_2_copy": 1,
                    "destination_address": 1,
                    "extra_param_1_value": 1,
                    "input_param_10_copy": 1,
                    "local_arg10": 1,
                    "local_arg2": 1,
                    "local_param10": 1,
                    "local_param_10": 5,
                    "local_param_b": 1,
                    "local_ptr3": 1,
                    "local_ptr_1": 1,
                    "param10": 1,
                    "param2": 1,
                    "param2_copy": 1,
                    "param_10": 1,
                    "param_10_copy": 3,
                    "temp_arg2": 1,
                    "value1": 1,
                    "var1": 1,
                    "var7": 1,
                    "var_b0": 1
                },
                "local_b8": {
                    "buffer": 6,
                    "local_array": 4,
                    "local_buffer": 5,
                    "local_buffer_arr": 1,
                    "local_data_array": 1,
                    "local_var": 1,
                    "small_buffer": 1,
                    "temp_buffer": 4,
                    "temporary_buffer": 1
                },
                "local_c8": {
                    "buffer": 1,
                    "formatted_buffer_ptr": 1,
                    "local_array": 1,
                    "local_buffer": 19,
                    "local_buffer_2": 1,
                    "local_buffer_ptr": 1,
                    "local_copy_buffer": 1,
                    "local_ptr2": 1,
                    "local_var2": 1,
                    "pointer2": 1,
                    "ptr2": 1,
                    "temp_buffer": 1
                },
                "local_d0": {
                    "array_pointer": 1,
                    "buffer": 8,
                    "buffer_address": 1,
                    "buffer_pointer": 2,
                    "buffer_ptr": 7,
                    "local_buffer_1": 1,
                    "local_buffer_ptr": 1,
                    "local_ptr": 1,
                    "local_ptr1": 1,
                    "pointer1": 1,
                    "pointer_to_buffer": 1,
                    "ptr1": 1,
                    "stack_buffer": 1,
                    "stack_pointer": 1,
                    "stack_ptr": 2
                },
                "local_d4": {
                    "buffer_length": 2,
                    "buffer_limit": 1,
                    "buffer_size": 2,
                    "constant": 2,
                    "constant_48": 1,
                    "constant_value": 1,
                    "copy_size": 1,
                    "length": 6,
                    "local_buffer_size": 2,
                    "local_var": 1,
                    "local_var1": 1,
                    "local_var2": 1,
                    "offset": 2,
                    "size": 2,
                    "str_length": 1,
                    "substring_length": 1,
                    "temp_var": 1
                },
                "local_d8": {
                    "array_length": 1,
                    "array_size": 1,
                    "buffer_length": 1,
                    "buffer_size": 11,
                    "count_ptr": 1,
                    "length": 2,
                    "local_size": 1,
                    "local_var1": 1,
                    "size": 10,
                    "stack_size": 2
                },
                "param_1": {
                    "address_param": 1,
                    "arg1": 3,
                    "data1": 1,
                    "data_1": 1,
                    "first_param": 2,
                    "flag": 1,
                    "input1": 10,
                    "input_1": 3,
                    "input_param1": 2,
                    "input_param_1": 5,
                    "input_value1": 1,
                    "value1": 1
                },
                "param_10": {
                    "arg1": 1,
                    "arg10": 1,
                    "arg2": 2,
                    "data2": 1,
                    "data_param_2": 1,
                    "destination_ptr1": 1,
                    "extra_param_1": 1,
                    "input_param10": 1,
                    "input_param_10": 3,
                    "param2": 4,
                    "param_10": 8,
                    "param_b": 1,
                    "param_ptr2": 1,
                    "param_ptr_2": 1,
                    "parameter2": 1,
                    "var2": 1,
                    "var_10": 1
                },
                "param_11": {
                    "arg11": 1,
                    "arg2": 1,
                    "arg3": 2,
                    "data3": 1,
                    "data_param_3": 1,
                    "destination_ptr2": 1,
                    "extra_param_2": 1,
                    "input_param11": 1,
                    "input_param_11": 3,
                    "param3": 4,
                    "param_11": 8,
                    "param_c": 1,
                    "param_ptr3": 1,
                    "param_ptr_3": 1,
                    "parameter3": 1,
                    "var3": 1,
                    "var_11": 1
                },
                "param_12": {
                    "arg12": 1,
                    "arg3": 1,
                    "arg4": 2,
                    "data4": 1,
                    "data_param_4": 1,
                    "destination_ptr3": 1,
                    "extra_param_3": 1,
                    "input_param12": 1,
                    "input_param_12": 3,
                    "param4": 4,
                    "param_12": 8,
                    "param_d": 1,
                    "param_ptr4": 1,
                    "param_ptr_4": 1,
                    "parameter4": 1,
                    "var4": 1,
                    "var_12": 1
                },
                "param_13": {
                    "arg13": 1,
                    "arg4": 1,
                    "arg5": 2,
                    "data5": 1,
                    "data_param_5": 1,
                    "destination_ptr4": 1,
                    "extra_param_4": 1,
                    "input_param13": 1,
                    "input_param_13": 3,
                    "param5": 4,
                    "param_13": 8,
                    "param_e": 1,
                    "param_ptr5": 1,
                    "param_ptr_5": 1,
                    "parameter5": 1,
                    "var5": 1,
                    "var_13": 1
                },
                "param_14": {
                    "arg14": 1,
                    "arg5": 1,
                    "arg6": 2,
                    "data6": 1,
                    "data_param_6": 1,
                    "destination_ptr5": 1,
                    "extra_param_5": 1,
                    "input_param14": 1,
                    "input_param_14": 3,
                    "param6": 4,
                    "param_14": 8,
                    "param_f": 1,
                    "param_ptr6": 1,
                    "param_ptr_6": 1,
                    "parameter6": 1,
                    "var6": 1,
                    "var_14": 1
                },
                "param_2": {
                    "arg2": 3,
                    "data2": 1,
                    "data_2": 1,
                    "input2": 10,
                    "input_2": 3,
                    "input_param2": 2,
                    "input_param_2": 5,
                    "input_value2": 1,
                    "second_param": 2,
                    "size_param": 1,
                    "value1": 1,
                    "value2": 1
                },
                "param_3": {
                    "arg3": 3,
                    "data3": 1,
                    "data_3": 1,
                    "data_param": 1,
                    "input3": 10,
                    "input_3": 3,
                    "input_param3": 2,
                    "input_param_3": 5,
                    "input_value3": 1,
                    "third_param": 2,
                    "value2": 1,
                    "value3": 1
                },
                "param_4": {
                    "arg4": 3,
                    "data4": 1,
                    "data_4": 1,
                    "fourth_param": 2,
                    "input4": 10,
                    "input_4": 3,
                    "input_param4": 2,
                    "input_param_4": 5,
                    "input_value4": 1,
                    "offset_param": 1,
                    "value3": 1,
                    "value4": 1
                },
                "param_5": {
                    "arg5": 3,
                    "data5": 1,
                    "data_5": 1,
                    "fifth_param": 2,
                    "input5": 10,
                    "input_5": 3,
                    "input_param5": 2,
                    "input_param_5": 5,
                    "input_value5": 1,
                    "length_param": 1,
                    "value4": 1,
                    "value5": 1
                },
                "param_6": {
                    "arg6": 3,
                    "count_param": 1,
                    "data6": 1,
                    "data_6": 1,
                    "input6": 10,
                    "input_6": 3,
                    "input_param6": 2,
                    "input_param_6": 5,
                    "input_value6": 1,
                    "sixth_param": 2,
                    "value5": 1,
                    "value6": 1
                },
                "param_7": {
                    "arg7": 3,
                    "data7": 1,
                    "data_7": 1,
                    "input7": 10,
                    "input_7": 3,
                    "input_param7": 2,
                    "input_param_7": 5,
                    "input_value7": 1,
                    "seventh_param": 2,
                    "value6": 1,
                    "value7": 1,
                    "value_param": 1
                },
                "param_8": {
                    "arg8": 3,
                    "data8": 1,
                    "data_8": 1,
                    "eighth_param": 2,
                    "input8": 10,
                    "input_8": 3,
                    "input_param8": 2,
                    "input_param_8": 5,
                    "input_value8": 1,
                    "option_param": 1,
                    "value7": 1,
                    "value8": 1
                },
                "param_9": {
                    "arg1": 2,
                    "arg9": 1,
                    "data": 1,
                    "data1": 1,
                    "data_param_1": 1,
                    "data_ptr": 3,
                    "input_9": 2,
                    "input_param9": 1,
                    "input_param_9": 3,
                    "param": 1,
                    "param1": 4,
                    "param_9": 4,
                    "param_a": 1,
                    "param_ptr1": 1,
                    "param_ptr_1": 1,
                    "parameter1": 1,
                    "source_ptr": 1,
                    "var1": 1
                }
            },
            "called": [
                "FUN_00119e70"
            ],
            "calling": [
                "FUN_00104cc1",
                "FUN_00108375",
                "FUN_0010b800",
                "FUN_00113f50",
                "FUN_00104ea2",
                "FUN_001086af",
                "FUN_00105828",
                "FUN_0010e6a8",
                "FUN_00104ad6",
                "FUN_001152b6",
                "FUN_00107880",
                "FUN_0010554f",
                "FUN_0010e07c",
                "FUN_00104966",
                "FUN_0010882c",
                "FUN_00114e50",
                "FUN_001163d0",
                "FUN_0010ba08",
                "FUN_0011378f",
                "FUN_00116b90",
                "FUN_00114690",
                "FUN_00108200",
                "FUN_0010e2f0",
                "FUN_0010dac0"
            ],
            "code": "\nvoid extract_and_process_data_00119ed0(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 input5,undefined4 input6,undefined4 input7,undefined4 input8,\n                 undefined8 param1,undefined8 input10,undefined8 input11,undefined8 input12,\n                 undefined8 input13,undefined8 input14)\n\n{\n  char flag;\n  undefined4 buffer_size;\n  undefined4 length;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined buffer [8];\n  undefined8 local_param_10;\n  undefined8 local_param_11;\n  undefined8 local_param_12;\n  undefined8 local_param_13;\n  undefined8 local_param_14;\n  undefined4 input1_copy;\n  undefined4 input2_copy;\n  undefined4 input3_copy;\n  undefined4 input4_copy;\n  undefined4 input5_copy;\n  undefined4 input6_copy;\n  undefined4 input7_copy;\n  undefined4 input8_copy;\n  \n  if (flag != '\\0') {\n    input1_copy = input1;\n    input2_copy = input2;\n    input3_copy = input3;\n    input4_copy = input4;\n    input5_copy = input5;\n    input6_copy = input6;\n    input7_copy = input7;\n    input8_copy = input8;\n  }\n  buffer = &stack0x00000008;\n  buffer_size = 8;\n  local_buffer = buffer;\n  length = 0x30;\n  local_param_10 = input10;\n  local_param_11 = input11;\n  local_param_12 = input12;\n  local_param_13 = input13;\n  local_param_14 = input14;\n  FUN_00119e70(param1,&buffer_size);\n  return;\n}\n\n",
            "current_name": "extract_and_process_data_00119ed0",
            "entrypoint": "0x00119ed0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00119ed0": "extract_and_process_data_00119ed0",
                "in_AL": "flag",
                "local_18": "input8_copy",
                "local_28": "input7_copy",
                "local_38": "input6_copy",
                "local_48": "input5_copy",
                "local_58": "input4_copy",
                "local_68": "input3_copy",
                "local_78": "input2_copy",
                "local_88": "input1_copy",
                "local_90": "local_param_14",
                "local_98": "local_param_13",
                "local_a0": "local_param_12",
                "local_a8": "local_param_11",
                "local_b0": "local_param_10",
                "local_b8": "buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "length",
                "local_d8": "buffer_size",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "param_7": "input7",
                "param_8": "input8",
                "param_9": "param1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00119f70": {
            "additional_data": {
                "FUM_CENTRALIZED_FUNCTION": {
                    "centralized_function": 1
                },
                "FUN_001053d5": {
                    "get_default_value": 1,
                    "unknown_function": 2,
                    "unrelated_function": 1,
                    "unspecified_function": 1
                },
                "FUN_00114e00": {
                    "convert_format": 2,
                    "convert_format_info": 1,
                    "convert_status_to_string": 1,
                    "format_data": 1,
                    "get_format_string": 1,
                    "get_printable_format": 1,
                    "get_string_from_int": 1,
                    "reverse_algorithm": 1,
                    "transform_status": 1,
                    "translate_header_data": 1
                },
                "FUN_00119f70": {
                    "open_and_print_bfd_info": 1,
                    "parse_and_print_header": 1,
                    "parse_header_data": 1,
                    "process_binary": 2,
                    "process_binary_data": 2,
                    "process_file": 1,
                    "reverse_and_print_binary": 1
                },
                "FUN_0011a110": {
                    "cleanup_and_exit": 2,
                    "cleanup_function": 1,
                    "cleanup_operation": 1,
                    "cleanup_output": 1,
                    "free_resource": 1,
                    "handle_error": 3,
                    "print_error": 1
                },
                "__format": {
                    "": 1,
                    "format_str": 1,
                    "format_string": 17,
                    "message": 1,
                    "message_format": 6,
                    "output_format": 1,
                    "print_format": 3,
                    "printed_string": 1
                },
                "bfd_close_all_done": {
                    "cleanup_and_close": 1,
                    "cleanup_and_done": 1,
                    "cleanup_and_exit": 1,
                    "close_all_done": 1,
                    "close_all_files": 2,
                    "close_all_handles": 1,
                    "close_all_handles_and_cleanup": 1,
                    "close_bfd_handle": 1,
                    "close_binary": 2
                },
                "bfd_get_error": {
                    "get_bfd_error": 4,
                    "get_error": 4,
                    "get_error_code": 2,
                    "get_error_message": 1
                },
                "bfd_openw": {
                    "open_bfd_file": 1,
                    "open_binary": 2,
                    "open_binary_file": 1,
                    "open_file": 1,
                    "open_file_to_write": 1,
                    "open_file_write_mode": 1,
                    "open_output_file": 3,
                    "open_write": 1
                },
                "bfd_printable_arch_mach": {
                    "format_printable_arch_mach": 1,
                    "get_architecture": 2,
                    "get_architecture_info": 1,
                    "get_printable_arch": 1,
                    "get_printable_arch_mach": 2,
                    "get_printable_arch_mach_info": 1,
                    "get_printable_architecture": 1,
                    "printable_architecture_machine": 2
                },
                "bfd_set_format": {
                    "set_bfd_format": 1,
                    "set_binary_format": 2,
                    "set_file_format": 2,
                    "set_format": 1,
                    "set_output_format": 2
                },
                "cVar2": {
                    "": 1,
                    "char_value": 2,
                    "char_var": 2,
                    "check_variable": 1,
                    "flag": 4,
                    "format_check": 1,
                    "format_error": 3,
                    "format_result": 3,
                    "result": 10,
                    "status": 2,
                    "success": 1,
                    "success_flag": 1
                },
                "dcgettext": {
                    "get_locale_string": 1,
                    "get_localized_string": 1,
                    "get_text": 1,
                    "get_translated_string": 2,
                    "get_translated_text": 1,
                    "get_translation": 1,
                    "gettext": 1,
                    "translate_message": 1,
                    "translate_string": 2
                },
                "fun_0011a110": {
                    "cleanup_after_error": 1
                },
                "iVar3": {
                    "arch_index": 1,
                    "arch_mach": 1,
                    "arch_mach_value": 1,
                    "count": 3,
                    "counter": 7,
                    "format_index": 1,
                    "format_version": 1,
                    "header_index": 1,
                    "index": 8,
                    "iteration": 4,
                    "iteration_counter": 1,
                    "iterator": 1,
                    "loop_counter": 1
                },
                "lVar6": {
                    "allocated_memory_size": 1,
                    "allocated_size": 6,
                    "allocation_size": 5,
                    "buffer_size": 14,
                    "data_size": 2,
                    "memory_size": 1,
                    "size": 2
                },
                "lVar8": {
                    "alloc_result": 1,
                    "allocated_buffer": 4,
                    "allocated_data": 1,
                    "allocated_data_ptr": 1,
                    "allocated_data_size": 1,
                    "allocated_memory": 2,
                    "allocation_ptr": 1,
                    "buffer": 1,
                    "buffer_address": 1,
                    "current_allocation": 1,
                    "new_allocated_size": 1,
                    "new_allocation": 1,
                    "new_buffer": 5,
                    "new_data_size": 1,
                    "new_ptr": 1,
                    "realloc_memory": 1,
                    "realloc_result": 6,
                    "reallocated_memory": 1
                },
                "memset": {
                    "clear_memory": 2,
                    "fill_memory": 1,
                    "initialize_buffer": 1,
                    "initialize_memory": 4,
                    "set_memory": 2,
                    "zero_initialize_memory": 1
                },
                "param_1": {
                    "header": 4,
                    "header_array": 1,
                    "header_data": 9,
                    "header_info": 2,
                    "headers": 2,
                    "input_data": 7,
                    "input_header": 2,
                    "input_parameters": 1,
                    "param_array": 1,
                    "param_list": 1,
                    "source": 1
                },
                "param_2": {
                    "binary": 1,
                    "binary_data": 3,
                    "binary_info": 2,
                    "data": 2,
                    "data_array": 1,
                    "destination": 1,
                    "file_data": 2,
                    "file_info": 2,
                    "output_data": 9,
                    "output_file": 3,
                    "output_parameters": 1,
                    "output_params": 1,
                    "param_data": 1,
                    "param_ptr": 1,
                    "parsing_info": 1
                },
                "printf": {
                    "print": 2,
                    "print_formatted": 2,
                    "print_formatted_output": 2,
                    "print_formatted_string": 1,
                    "print_message": 1,
                    "print_output": 2,
                    "print_with_format": 1
                },
                "uVar1": {
                    "": 1,
                    "format": 2,
                    "format1": 1,
                    "format_header": 1,
                    "format_index": 1,
                    "format_input_data": 1,
                    "header_format": 4,
                    "header_info": 2,
                    "header_length": 3,
                    "header_size": 2,
                    "header_value": 4,
                    "result": 3,
                    "source_length": 1,
                    "status": 5
                },
                "uVar4": {
                    "": 1,
                    "converted_header": 1,
                    "format1": 1,
                    "format2": 1,
                    "format_header_data": 1,
                    "format_u_var1": 1,
                    "formatted_data1": 1,
                    "formatted_header": 2,
                    "func_value_1": 1,
                    "header_data": 2,
                    "header_data1": 1,
                    "header_data_format": 1,
                    "header_format": 5,
                    "header_format_result": 1,
                    "header_info_1": 1,
                    "header_info_2": 1,
                    "header_result": 3,
                    "header_return_value": 1,
                    "header_status": 2,
                    "header_value2": 1,
                    "processed_data1": 1,
                    "transformed_status_1": 1
                },
                "uVar5": {
                    "": 1,
                    "converted_data": 1,
                    "data": 1,
                    "data_format": 6,
                    "data_format_result": 1,
                    "data_info": 2,
                    "data_result": 3,
                    "data_return_value": 1,
                    "data_status": 2,
                    "data_value": 1,
                    "format2": 1,
                    "format3": 1,
                    "format_data": 1,
                    "format_param_1": 1,
                    "formatted_data": 2,
                    "formatted_data2": 1,
                    "func_value_2": 1,
                    "header_data2": 1,
                    "header_info_2": 1,
                    "processed_data2": 1,
                    "transformed_status_2": 1
                },
                "uVar7": {
                    "": 1,
                    "arch_mach": 6,
                    "arch_mach_data": 1,
                    "arch_mach_info": 2,
                    "arch_mach_string": 1,
                    "arch_value": 1,
                    "current_header": 2,
                    "format_output_data": 1,
                    "header": 4,
                    "header_data": 3,
                    "header_info": 2,
                    "header_value": 1,
                    "info": 1,
                    "parameter": 1,
                    "printable_arch": 1,
                    "printable_value": 1,
                    "temp_value": 1,
                    "value": 1
                },
                "xrealloc": {
                    "reallocate_memory": 4,
                    "reallocation_method": 1,
                    "realocate_memory": 1,
                    "resize_buffer": 5
                }
            },
            "called": [
                "dcgettext",
                "bfd_set_format",
                "FUN_00114e00",
                "xrealloc",
                "bfd_printable_arch_mach",
                "bfd_close_all_done",
                "FUN_0011a110",
                "bfd_openw",
                "memset",
                "printf",
                "bfd_get_error",
                "FUN_001053d5"
            ],
            "calling": [
                "FUN_001199d0"
            ],
            "code": "\nundefined4 process_binary_data_00119f70(undefined8 *header_data,undefined8 *output_data)\n\n{\n  undefined4 status;\n  char result;\n  int index;\n  undefined8 header_format;\n  undefined8 data_format;\n  char *format_string;\n  long buffer_size;\n  undefined8 arch_mach;\n  long realloc_result;\n  \n  index = *(int *)((long)output_data + 0xc) + 1;\n  *(int *)((long)output_data + 0xc) = index;\n  if ((ulong)output_data[2] < (ulong)((long)index * 0x60)) {\n    buffer_size = 0x3000;\n    if (0x3f < index) {\n      buffer_size = (long)index * 0xc0;\n    }\n    realloc_result = xrealloc(output_data[3]);\n    output_data[3] = realloc_result;\n    memset((void *)(realloc_result + output_data[2]),0,buffer_size - output_data[2]);\n    output_data[2] = buffer_size;\n  }\n  status = *(undefined4 *)((long)header_data + 0xc);\n  *(undefined8 *)((long)*(int *)((long)output_data + 0xc) * 0x60 + output_data[3] + -0x60) = *header_data;\n  header_format = FUN_00114e00(status);\n  data_format = FUN_00114e00(*(undefined4 *)(header_data + 2));\n  arch_mach = *header_data;\n  format_string = (char *)dcgettext(0,\"%s\\n (header %s, data %s)\\n\",5);\n  printf(format_string,arch_mach,data_format,header_format);\n  buffer_size = bfd_openw(*output_data,*header_data);\n  if (buffer_size == 0) {\n    FUN_0011a110(*output_data);\n    *(undefined4 *)(output_data + 1) = 1;\n  }\n  else {\n    index = 2;\n    result = bfd_set_format(buffer_size,1);\n    if (result == '\\0') {\n      index = bfd_get_error();\n      if (index != 5) {\n        FUN_0011a110(*header_data);\n        *(undefined4 *)(output_data + 1) = 1;\n      }\n    }\n    else {\n      do {\n        result = (**(code **)(*(long *)(buffer_size + 8) + 0x2a0))(buffer_size,index,0);\n        if (result != '\\0') {\n          arch_mach = bfd_printable_arch_mach(index,0);\n          printf(\"  %s\\n\",arch_mach);\n          *(undefined *)\n           ((long)*(int *)((long)output_data + 0xc) * 0x60 + output_data[3] + -0x58 + (ulong)(index - 2)) =\n               1;\n        }\n        index = index + 1;\n      } while (index != 0x57);\n    }\n    bfd_close_all_done(buffer_size);\n  }\n  return *(undefined4 *)(output_data + 1);\n}\n\n",
            "current_name": "process_binary_data_00119f70",
            "entrypoint": "0x00119f70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00119f70": "process_binary_data_00119f70",
                "__format": "format_string",
                "bfd_close_all_done": "close_binary",
                "bfd_get_error": "get_bfd_error",
                "bfd_openw": "open_output_file",
                "bfd_printable_arch_mach": "get_architecture",
                "bfd_set_format": "set_binary_format",
                "cVar2": "result",
                "dcgettext": "get_translated_string",
                "iVar3": "index",
                "lVar6": "buffer_size",
                "lVar8": "realloc_result",
                "memset": "initialize_memory",
                "param_1": "header_data",
                "param_2": "output_data",
                "printf": "print",
                "uVar1": "status",
                "uVar4": "header_format",
                "uVar5": "data_format",
                "uVar7": "arch_mach",
                "xrealloc": "resize_buffer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0011a0e0": {
            "additional_data": {
                "FUN_001081e9": {
                    "generate_random_number": 1,
                    "generate_random_value": 1,
                    "get_random_value": 1
                },
                "FUN_00114cf0": {
                    "create_temporary_directory_template": 1,
                    "initialize_directory_template": 2,
                    "initialize_template": 2,
                    "initialize_template_path": 3,
                    "initialize_temporary_directory_template": 1,
                    "remove_directory": 1,
                    "set_template": 1
                },
                "FUN_0011a0e0": {
                    "create_directory": 1,
                    "create_temp_directory": 17,
                    "create_temporary_directory": 6,
                    "create_unique_directory": 1,
                    "create_unique_temp_directory": 1,
                    "generate_temp_directory": 1,
                    "generate_temporary_directory": 4
                },
                "__param_1": {
                    "template": 1
                },
                "__pcVar1": {
                    "directory_path": 1
                },
                "__template": {
                    "directory_template": 4,
                    "temp_directory_path": 1,
                    "temp_directory_template": 2,
                    "template": 16,
                    "template_path": 7,
                    "temporary_directory_template": 1
                },
                "free": {
                    "deallocate_memory": 2,
                    "release_memory": 2
                },
                "mkdtemp": {
                    "create_temporary_directory": 2,
                    "create_unique_temp_directory": 1,
                    "generate_unique_directory": 1,
                    "make_temp_directory": 6,
                    "make_temporary_directory": 1
                },
                "param_1": {
                    "directory_path": 1,
                    "template": 2
                },
                "pcVar1": {
                    "created_directory": 1,
                    "directory_path": 1,
                    "result": 18,
                    "result_directory": 1,
                    "result_path": 1,
                    "temp_directory": 6,
                    "temporary_dir": 1,
                    "temporary_directory": 1,
                    "temporary_directory_path": 1
                }
            },
            "called": [
                "FUN_00114cf0",
                "mkdtemp",
                "FUN_001081e9"
            ],
            "calling": [
                "FUN_00104ea2",
                "FUN_00114690"
            ],
            "code": "\nchar * create_unique_temp_directory_0011a0e0(void)\n\n{\n  char *template;\n  char *result;\n  \n  template = (char *)FUN_00114cf0();\n  result = mkdtemp(template);\n  if (result == (char *)0x0) {\n    free(template);\n  }\n  return result;\n}\n\n",
            "current_name": "create_unique_temp_directory_0011a0e0",
            "entrypoint": "0x0011a0e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0011a0e0": "create_unique_temp_directory_0011a0e0",
                "__template": "template",
                "free": "release_memory",
                "mkdtemp": "make_temp_directory",
                "pcVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0011a110": {
            "additional_data": {
                "DAT_001275e0": {
                    "program_name": 2
                },
                "FUN_0011a110": {
                    "display_error_message": 1,
                    "print_bfd_error_message": 2,
                    "print_error": 6,
                    "print_error_message": 22
                },
                "_stderr": {
                    "standard_error": 1
                },
                "_stdout": {
                    "standard_output": 1
                },
                "iVar1": {
                    "bfd_error": 2,
                    "error": 16,
                    "error_code": 5,
                    "error_number": 1,
                    "error_status": 5,
                    "error_type": 1,
                    "error_value": 1
                },
                "in_R10": {
                    "additional_info": 6,
                    "additional_message": 1,
                    "missing_info": 1,
                    "unknown_value": 4,
                    "unknown_variable": 1,
                    "unmodified_argument": 1,
                    "unused_var": 1,
                    "unused_variable": 1
                },
                "param_1": {
                    "error_cause": 2,
                    "error_code": 1,
                    "error_description": 1,
                    "error_flag": 2,
                    "error_id": 1,
                    "error_message": 11,
                    "error_param": 1,
                    "error_string": 2,
                    "error_type": 6,
                    "file_name": 3,
                    "filename": 1
                },
                "uVar2": {
                    "error_message": 19,
                    "error_message_text": 3,
                    "error_msg": 5,
                    "error_string": 3,
                    "message": 1
                }
            },
            "called": [
                "bfd_errmsg",
                "FUN_0010871c",
                "bfd_get_error"
            ],
            "calling": [
                "FUN_00115dc0",
                "FUN_00116030",
                "FUN_001083b7",
                "FUN_00104ea2",
                "FUN_001053d5",
                "FUN_00119f70"
            ],
            "code": "\n\n\nvoid print_bfd_error_message_0011a110(long error_message)\n\n{\n  int error;\n  undefined8 error_message;\n  undefined8 additional_info;\n  \n  error = bfd_get_error();\n  if (error == 0) {\n    error_message = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    error_message = bfd_errmsg(error);\n  }\n  fflush(standard_output);\n  if (error_message != 0) {\n    fprintf(standard_error,\"%s: %s: %s\\n\",DAT_001275e0,error_message,error_message,additional_info);\n    return;\n  }\n  fprintf(standard_error,\"%s: %s\\n\",DAT_001275e0,error_message,additional_info);\n  return;\n}\n\n",
            "current_name": "print_bfd_error_message_0011a110",
            "entrypoint": "0x0011a110",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0011a110": "print_bfd_error_message_0011a110",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "iVar1": "error",
                "in_R10": "additional_info",
                "param_1": "error_message",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0011a170": {
            "additional_data": {
                "FUN_0011a170": {
                    "check_pattern_match": 1,
                    "match_pattern": 19,
                    "pattern_match": 7,
                    "pattern_matching": 2,
                    "perform_pattern_matching": 1,
                    "reverse_fnmatch": 1
                },
                "__name": {
                    "current_name": 1
                },
                "__pattern": {
                    "current_pattern": 9,
                    "patt": 1,
                    "pattern": 2,
                    "pattern_ptr": 4,
                    "pattern_str": 8,
                    "pattern_string": 2
                },
                "iVar1": {
                    "match_result": 11,
                    "result": 15
                },
                "param_1": {
                    "pattern": 31
                },
                "param_2": {
                    "input_string": 1,
                    "name": 30
                }
            },
            "called": [
                "fnmatch"
            ],
            "calling": [
                "FUN_00115d70",
                "FUN_0010554f"
            ],
            "code": "\nint check_pattern_match_0011a170(char **pattern,char **name)\n\n{\n  char *current_pattern;\n  int result;\n  \n  current_pattern = *pattern;\n  if (*current_pattern == '!') {\n    result = fnmatch(current_pattern + 1,*name,0);\n    if (result == 0) {\n      *(undefined *)(name + 1) = 0;\n      return result;\n    }\n  }\n  else {\n    result = fnmatch(current_pattern,*name,0);\n    if (result == 0) {\n      *(undefined *)(name + 1) = 1;\n    }\n  }\n  return 1;\n}\n\n",
            "current_name": "check_pattern_match_0011a170",
            "entrypoint": "0x0011a170",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0011a170": "check_pattern_match_0011a170",
                "__pattern": "current_pattern",
                "iVar1": "result",
                "param_1": "pattern",
                "param_2": "name"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0011a1b0": {
            "additional_data": {
                "FUN_001087da": {
                    "initialize": 1
                },
                "FUN_0011a1b0": {
                    "compare_and_return": 1,
                    "compare_and_return_result": 2,
                    "compare_and_select": 2,
                    "compare_data": 1,
                    "compare_memory": 7,
                    "compare_memory_and_sizes": 1,
                    "compare_memory_blocks": 5,
                    "compare_memory_regions": 6,
                    "compare_memory_segments": 1,
                    "compare_params": 1,
                    "compare_records": 4
                },
                "auVar5": {
                    "output": 5,
                    "result": 13,
                    "result_container": 1,
                    "return_result": 1,
                    "return_val": 2,
                    "return_value": 8
                },
                "extraout_var": {
                    "additional_info": 1,
                    "extra": 1,
                    "extra_output": 1,
                    "extra_result": 2,
                    "extra_var": 3,
                    "extraout": 1,
                    "extraout_var": 1,
                    "result": 1
                },
                "iVar3": {
                    "comparison": 1,
                    "comparison_result": 17,
                    "mem_compare_result": 1,
                    "memcmp_result": 5,
                    "result": 7
                },
                "memcmp": {
                    "compare_memory_blocks": 1
                },
                "param_1": {
                    "array1": 5,
                    "block1": 3,
                    "block_1_pointer": 1,
                    "buffer1": 1,
                    "data1": 2,
                    "first_buffer": 1,
                    "input1": 3,
                    "length1": 1,
                    "memory_block1": 2,
                    "pointer1": 1,
                    "record1": 3,
                    "record_1": 1,
                    "region_1": 1,
                    "segment1": 1,
                    "size1": 1,
                    "size1_array": 1,
                    "source": 2,
                    "value1": 1
                },
                "param_2": {
                    "array2": 5,
                    "block2": 3,
                    "block_2_pointer": 1,
                    "buffer2": 1,
                    "data2": 2,
                    "destination": 2,
                    "input2": 3,
                    "length2": 1,
                    "memory_block2": 2,
                    "pointer2": 1,
                    "record2": 3,
                    "record_2": 1,
                    "region_2": 1,
                    "second_buffer": 1,
                    "segment2": 1,
                    "size2": 1,
                    "size2_array": 1,
                    "value2": 1
                },
                "param_3": {
                    "buffer_length_1": 1,
                    "data1": 2,
                    "param1": 7,
                    "param3": 5,
                    "param_3": 3,
                    "param_var1": 1,
                    "size1": 5,
                    "unknown1": 1,
                    "value1": 3,
                    "value_1": 1,
                    "var1": 2
                },
                "param_4": {
                    "buffer_length_2": 1,
                    "data2": 2,
                    "param2": 7,
                    "param4": 5,
                    "param_4": 3,
                    "param_var2": 1,
                    "size2": 5,
                    "unknown2": 1,
                    "value2": 3,
                    "value_2": 1,
                    "var2": 2
                },
                "uVar1": {
                    "array1_index": 1,
                    "array1_size": 1,
                    "block1_length": 1,
                    "block1_size": 2,
                    "block_1_size": 1,
                    "buffer1_size": 1,
                    "data1_size": 1,
                    "first_buffer_size": 1,
                    "input1_length": 1,
                    "input1_offset": 1,
                    "len_array1": 1,
                    "param1_index": 1,
                    "record1_size": 2,
                    "record1_var1": 1,
                    "record_1_length": 1,
                    "region_1_end": 1,
                    "segment1_size": 1,
                    "size1": 2,
                    "size1_2": 1,
                    "size1_offset8": 1,
                    "size1_sub_size": 1,
                    "size_of_array1": 1,
                    "source_length": 1,
                    "source_size": 1,
                    "value1": 3,
                    "value1_index8": 1
                },
                "uVar2": {
                    "array2_index": 1,
                    "array2_size": 1,
                    "block2_length": 1,
                    "block2_size": 2,
                    "block_2_size": 1,
                    "buffer2_size": 1,
                    "data2_size": 1,
                    "dest_size": 1,
                    "destination_length": 1,
                    "input2_length": 1,
                    "input2_offset": 1,
                    "len_array2": 1,
                    "param2_index": 1,
                    "record2_size": 2,
                    "record2_var1": 1,
                    "record_2_length": 1,
                    "region_2_end": 1,
                    "second_buffer_size": 1,
                    "segment2_size": 1,
                    "size2": 2,
                    "size2_1": 1,
                    "size2_offset8": 1,
                    "size2_sub_size": 1,
                    "size_of_array2": 1,
                    "value2": 3,
                    "value2_index8": 1
                },
                "uVar4": {
                    "combined_result": 7,
                    "comparison_result": 6,
                    "final_result": 11,
                    "overall_result": 1,
                    "result": 6
                }
            },
            "called": [
                "FUN_001087da",
                "memcmp"
            ],
            "calling": [
                "FUN_001086af"
            ],
            "code": "\nundefined  [16] compare_memory_regions_0011a1b0(ulong *array1,ulong *array2,undefined8 param1,undefined8 param2)\n\n{\n  ulong value1;\n  ulong value2;\n  int comparison_result;\n  undefined4 extra_var;\n  ulong final_result;\n  undefined result [16];\n  \n  final_result = *array1;\n  if (*array2 <= *array1) {\n    final_result = *array2;\n  }\n  comparison_result = memcmp((void *)(array1[3] + 3),(void *)(array2[3] + 3),final_result - 3);\n  final_result = CONCAT44(extra_var,comparison_result);\n  if (comparison_result == 0) {\n    value1 = array1[8];\n    if (value1 < array2[7]) {\n      final_result = 0xffffffff;\n    }\n    else {\n      value2 = array2[8];\n      if (value2 < array1[7]) {\n        final_result = 1;\n      }\n      else {\n        final_result = 0xffffffff;\n        if (array2[7] <= array1[7]) {\n          if (value2 < value1) {\n            final_result = 1;\n          }\n          else {\n            final_result = 0xffffffff;\n            if (value2 <= value1) {\n              if (array1[2] == 0x100) {\n                final_result = (ulong)-(uint)(array2[2] != 0x100);\n              }\n              else {\n                final_result = (ulong)(array2[2] == 0x100);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  result._8_8_ = param2;\n  result._0_8_ = final_result;\n  return result;\n}\n\n",
            "current_name": "compare_memory_regions_0011a1b0",
            "entrypoint": "0x0011a1b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0011a1b0": "compare_memory_regions_0011a1b0",
                "auVar5": "result",
                "extraout_var": "extra_var",
                "iVar3": "comparison_result",
                "memcmp": "compare_memory_blocks",
                "param_1": "array1",
                "param_2": "array2",
                "param_3": "param1",
                "param_4": "param2",
                "uVar1": "value1",
                "uVar2": "value2",
                "uVar4": "final_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0011a250": {
            "additional_data": {
                "0x100": {
                    "constant": 1
                },
                "1": {
                    "error": 1
                },
                "3": {
                    "constant3": 1,
                    "field_index": 1,
                    "record3": 1
                },
                "4": {
                    "constant4": 1,
                    "min_field_size": 1,
                    "record4": 1
                },
                "7": {
                    "record7": 1
                },
                "8": {
                    "record8": 1
                },
                "FUN_001087fd": {
                    "get_value": 1
                },
                "FUN_0011a250": {
                    "compare_param_values": 1,
                    "compare_parameters": 3,
                    "compare_records": 26
                },
                "char": {
                    "character": 1
                },
                "param_1": {
                    "first_parameter": 3,
                    "param_1_values": 1,
                    "record1": 21,
                    "record_1": 4
                },
                "param_2": {
                    "param_2_values": 1,
                    "record2": 21,
                    "record_2": 4,
                    "second_parameter": 3
                },
                "record1": {
                    "record1": 1
                },
                "record1_field2": {
                    "record1_field2": 1
                },
                "record1_field3": {
                    "record1_field3": 1
                },
                "record1_field7": {
                    "record1_field7": 1
                },
                "record1_field8": {
                    "record1_field8": 1
                },
                "record2": {
                    "record2": 1
                },
                "record2_field2": {
                    "record2_field2": 1
                },
                "record2_field3": {
                    "record2_field3": 1
                },
                "record2_field7": {
                    "record2_field7": 1
                },
                "record2_field8": {
                    "record2_field8": 1
                },
                "uVar1": {
                    "field1_value": 1,
                    "first_param_index_2": 1,
                    "first_param_value": 1,
                    "param_1_value": 1,
                    "record1_field2": 8,
                    "record1_field_value": 1,
                    "record1_flag": 2,
                    "record1_second_field": 1,
                    "record1_size": 1,
                    "record1_timestamp": 4,
                    "record1_type": 1,
                    "record1_value": 1,
                    "record1_value2": 2,
                    "record_1_flag": 1,
                    "record_1_id": 1,
                    "record_1_value": 2,
                    "value_param1_2": 1
                }
            },
            "called": [
                "FUN_001087fd"
            ],
            "calling": [
                "FUN_00116852"
            ],
            "code": "\nint compare_records_0011a250(ulong *record1,ulong *record2)\n\n{\n  ulong record1_field2;\n  \n  record1_field2 = record1[2];\n  if (record1_field2 == record2[2]) {\n    if (record2[7] <= record1[7]) {\n      if (record1[7] <= record2[7]) {\n        if (record2[8] < record1[8]) {\n          return -1;\n        }\n        if (record2[8] <= record1[8]) {\n          if ((4 < *record1) && (4 < *record2)) {\n            if (*(character *)(record1[3] + 3) != *(character *)(record2[3] + 3)) {\n              return (int)*(character *)(record1[3] + 3) - (int)*(character *)(record2[3] + 3);\n            }\n          }\n          return 0;\n        }\n      }\n      return 1;\n    }\n  }\n  else if ((record1_field2 == 0) || ((record1_field2 != 0x100 && (record2[2] != 0)))) {\n    return 1;\n  }\n  return -1;\n}\n\n",
            "current_name": "compare_records_0011a250",
            "entrypoint": "0x0011a250",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0011a250": "compare_records_0011a250",
                "char": "character",
                "param_1": "record1",
                "param_2": "record2",
                "uVar1": "record1_field2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0011a2e0": {
            "additional_data": {
                "FUN_00108808": {
                    "display_error_message": 1,
                    "print_error_message": 1
                },
                "FUN_00119dd0": {
                    "display_error_message": 1,
                    "handle_error": 1,
                    "print_error_message": 2,
                    "report_section_not_found": 1
                },
                "FUN_0011a2e0": {
                    "extract_and_copy_section": 1,
                    "extract_and_copy_section_data": 2,
                    "extract_section": 4,
                    "extract_section_data": 5,
                    "extract_section_from_binary": 1,
                    "extract_section_info": 8,
                    "extract_section_information": 4,
                    "populate_section_data": 1,
                    "process_params": 1,
                    "update_section": 1,
                    "update_section_info": 2,
                    "update_section_information": 1
                },
                "bfd_get_section_by_name": {
                    "find_section_by_name": 3,
                    "get_section_by_name": 9
                },
                "dcgettext": {
                    "get_error_message": 1,
                    "get_localized_message": 1
                },
                "lVar3": {
                    "destination_section": 1,
                    "extracted_section": 3,
                    "extracted_section_data": 2,
                    "new_section": 2,
                    "new_section_info": 1,
                    "result": 1,
                    "section": 1,
                    "section_data": 4,
                    "section_data_ptr": 2,
                    "section_handle": 1,
                    "section_info": 7,
                    "section_info_ptr": 2,
                    "section_ptr": 4
                },
                "lVar4": {
                    "section": 4,
                    "section_handle": 1,
                    "section_id": 1,
                    "section_info": 1,
                    "section_name": 5,
                    "section_name_ptr": 2,
                    "section_offset": 1,
                    "section_ptr": 14,
                    "section_reference": 2
                },
                "param_1": {
                    "binary_data": 2,
                    "binary_header": 3,
                    "binary_info": 1,
                    "data_to_extract": 1,
                    "info_struct_ptr": 1,
                    "input_params": 1,
                    "original_data": 1,
                    "param_info": 1,
                    "section_data": 4,
                    "section_data_ptr": 2,
                    "section_header": 1,
                    "section_info": 4,
                    "section_info1": 1,
                    "section_info_ptr": 3,
                    "source_data": 1,
                    "source_section": 2,
                    "source_struct": 1,
                    "target_binary": 1
                },
                "param_2": {
                    "bfd_handle": 3,
                    "bfd_ptr": 2,
                    "binary": 5,
                    "binary_data": 6,
                    "binary_file": 3,
                    "binary_info": 1,
                    "binary_ptr": 3,
                    "binary_struct": 1,
                    "param": 1,
                    "param_data": 1,
                    "param_info": 1,
                    "param_ptr": 2,
                    "section_info2": 1,
                    "section_name": 1
                },
                "uVar1": {
                    "param_1_temp": 1,
                    "section_header_value": 1,
                    "section_info_ptr_2": 1,
                    "section_name": 4,
                    "section_name_copy": 1,
                    "section_name_ptr": 1,
                    "section_offset": 1,
                    "section_pointer": 1,
                    "section_ptr_str": 1,
                    "section_size": 1,
                    "temp_var1": 1
                },
                "uVar2": {
                    "error_message": 10,
                    "error_message_ptr": 1,
                    "error_msg": 1,
                    "error_msg_ptr": 1,
                    "temp_var2": 1
                }
            },
            "called": [
                "bfd_get_section_by_name",
                "FUN_00108808"
            ],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\nlong extract_section_info_0011a2e0(long section_info,long binary_data)\n\n{\n  undefined8 section_name;\n  undefined8 error_message;\n  long section_info;\n  long section_ptr;\n  \n  section_info = (**(code **)(*(long *)(binary_data + 8) + 0x208))(binary_data);\n  section_ptr = *(long *)(section_info + 0x20);\n  *(undefined8 *)(section_info + 8) = *(undefined8 *)(section_info + 8);\n  *(undefined8 *)(section_info + 0x10) = *(undefined8 *)(section_info + 0x10);\n  *(undefined4 *)(section_info + 0x18) = *(undefined4 *)(section_info + 0x18);\n  if (section_ptr == 0) {\n    section_ptr = 0x128598;\n  }\n  else {\n    section_ptr = bfd_get_section_by_name(binary_data);\n    if (section_ptr == 0) {\n      section_name = *(undefined8 *)(section_info + 0x20);\n      error_message = dcgettext(0,\"Section %s not found\",5);\n                    \n      FUN_00119dd0(error_message,section_name);\n    }\n  }\n  *(long *)(section_info + 0x20) = section_ptr;\n  return section_info;\n}\n\n",
            "current_name": "extract_section_info_0011a2e0",
            "entrypoint": "0x0011a2e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0011a2e0": "extract_section_info_0011a2e0",
                "bfd_get_section_by_name": "get_section_by_name",
                "dcgettext": "get_localized_message",
                "lVar3": "section_info",
                "lVar4": "section_ptr",
                "param_1": "section_info",
                "param_2": "binary_data",
                "uVar1": "section_name",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0011a350": {
            "additional_data": {
                "FUN_00119ed0": {
                    "handle_error_message": 1
                },
                "FUN_0011a350": {
                    "set_and_log_time": 1,
                    "set_file_modification_time": 2,
                    "set_file_modified_time": 1,
                    "set_file_time": 20,
                    "set_file_timestamp": 6,
                    "set_time_for_file": 1
                },
                "dcgettext": {
                    "translate_error_message": 1
                },
                "iVar1": {
                    "result": 25,
                    "result_code": 1,
                    "return_value": 1
                },
                "local_28": {
                    "alt_access_time": 1,
                    "backup_access_time": 1,
                    "mod_time_sec": 1,
                    "modification_time2": 1,
                    "old_timestamp": 1,
                    "param1": 1,
                    "time5": 1
                },
                "local_38": {
                    "access_time": 9,
                    "access_time_sec": 1,
                    "atime": 1,
                    "create_time": 1,
                    "creation_time": 1,
                    "file_time1": 1,
                    "modification_time1": 1,
                    "modification_time_sec": 1,
                    "time1": 2,
                    "time_param1": 1,
                    "time_spec1": 4,
                    "timestamp": 1,
                    "timestamp1": 1,
                    "timestamp_1": 1
                },
                "param_1": {
                    "file_path": 30
                },
                "param_2": {
                    "file_info": 23,
                    "file_info_addr": 1,
                    "file_info_address": 1,
                    "file_info_ptr": 2,
                    "metadata_address": 1,
                    "metadata_ptr": 1,
                    "params_struct": 1,
                    "struct_ptr": 1
                },
                "pcVar3": {
                    "err_msg": 2,
                    "error_message": 13,
                    "error_msg": 6,
                    "error_str": 2,
                    "error_string": 5
                },
                "piVar2": {
                    "errno": 1,
                    "errno_addr": 1,
                    "errno_loc": 1,
                    "errno_location": 4,
                    "errno_pointer": 2,
                    "errno_ptr": 6,
                    "error": 5,
                    "error_code_ptr": 2,
                    "error_location": 1,
                    "error_number": 2,
                    "error_ptr": 2,
                    "p_errno": 1
                },
                "strerror": {
                    "get_error_message": 1
                },
                "uStack_1c": {
                    "backup_status_change_time": 1,
                    "param4": 1
                },
                "uStack_20": {
                    "backup_creation_time": 1,
                    "param3": 1
                },
                "uStack_24": {
                    "backup_modification_time": 1,
                    "param2": 1
                },
                "uStack_2c": {
                    "access_time_nsec": 1,
                    "backup_time": 1,
                    "birth_time": 2,
                    "btime": 1,
                    "change_time": 1,
                    "changed_time": 1,
                    "create_time": 1,
                    "creation_time": 2,
                    "file_time4": 1,
                    "status_change_time": 2,
                    "time4": 2,
                    "time_param4": 1,
                    "time_spec4": 4,
                    "timestamp4": 1,
                    "timestamp_4": 1
                },
                "uStack_30": {
                    "access_time_sec": 1,
                    "change_time": 7,
                    "creation_time": 1,
                    "ctime": 1,
                    "file_time3": 1,
                    "modification_time": 1,
                    "modified_time": 1,
                    "modify_time": 1,
                    "time3": 2,
                    "time_param3": 1,
                    "time_spec3": 4,
                    "timestamp3": 1,
                    "timestamp_3": 1
                },
                "uStack_34": {
                    "access_time": 2,
                    "file_descriptor": 1,
                    "file_time2": 1,
                    "mod_time": 2,
                    "modification_time": 5,
                    "modification_time_nsec": 1,
                    "modified_time": 1,
                    "mtime": 1,
                    "time2": 2,
                    "time_param2": 1,
                    "time_spec2": 4,
                    "timestamp2": 1,
                    "timestamp_2": 1
                },
                "uVar4": {
                    "error_message": 4,
                    "error_msg": 2,
                    "error_string": 2,
                    "formatted_error_message": 1,
                    "localized_error": 1,
                    "localized_error_message": 3,
                    "localized_error_string": 1,
                    "message": 1,
                    "translated_err_msg": 1,
                    "translated_error": 1,
                    "translated_error_message": 5,
                    "translated_error_msg": 3,
                    "translated_message": 3,
                    "translated_string": 1
                },
                "utimensat": {
                    "update_file_timestamp": 1
                }
            },
            "called": [
                "utimensat",
                "FUN_0010882c"
            ],
            "calling": [
                "FUN_00104ea2",
                "FUN_00108200"
            ],
            "code": "\nvoid set_file_modification_time_0011a350(char *file_path,long file_info)\n\n{\n  int result;\n  int *errno_ptr;\n  char *error_message;\n  undefined8 translated_error_message;\n  undefined4 access_time;\n  undefined4 modification_time;\n  undefined4 change_time;\n  undefined4 time_spec4;\n  undefined4 modification_time2;\n  undefined4 backup_modification_time;\n  undefined4 backup_creation_time;\n  undefined4 param4;\n  \n  modification_time2 = *(undefined4 *)(file_info + 0x58);\n  backup_modification_time = *(undefined4 *)(file_info + 0x5c);\n  backup_creation_time = *(undefined4 *)(file_info + 0x60);\n  param4 = *(undefined4 *)(file_info + 100);\n  access_time = *(undefined4 *)(file_info + 0x48);\n  modification_time = *(undefined4 *)(file_info + 0x4c);\n  change_time = *(undefined4 *)(file_info + 0x50);\n  time_spec4 = *(undefined4 *)(file_info + 0x54);\n  result = utimensat(-100,file_path,(timespec *)&access_time,0);\n  if (result != 0) {\n    errno_ptr = __errno_location();\n    error_message = strerror(*errno_ptr);\n    translated_error_message = dcgettext(0,\"%s: cannot set time: %s\",5);\n    FUN_00119ed0(translated_error_message,file_path,error_message);\n  }\n  return;\n}\n\n",
            "current_name": "set_file_modification_time_0011a350",
            "entrypoint": "0x0011a350",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0011a350": "set_file_modification_time_0011a350",
                "dcgettext": "translate_error_message",
                "iVar1": "result",
                "local_28": "modification_time2",
                "local_38": "access_time",
                "param_1": "file_path",
                "param_2": "file_info",
                "pcVar3": "error_message",
                "piVar2": "errno_ptr",
                "strerror": "get_error_message",
                "uStack_1c": "param4",
                "uStack_20": "backup_creation_time",
                "uStack_24": "backup_modification_time",
                "uStack_2c": "time_spec4",
                "uStack_30": "change_time",
                "uStack_34": "modification_time",
                "uVar4": "translated_error_message",
                "utimensat": "update_file_timestamp"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0011a390": {
            "additional_data": {
                "FUN_0011a390": {
                    "execute_callbacks": 1,
                    "execute_function_chain": 9,
                    "execute_function_set": 1,
                    "execute_functions": 9,
                    "execute_nested_functions": 1
                },
                "PTR_DAT_001264c0": {
                    "function_chain_pointer": 1
                },
                "lVar1": {
                    "counter": 1,
                    "current_execution_index": 1,
                    "current_function_index": 1,
                    "current_index": 9,
                    "i": 1,
                    "index": 10,
                    "index1": 2,
                    "last_index": 3,
                    "loop_index": 1,
                    "loop_index1": 1,
                    "num_iterations": 1
                },
                "lVar2": {
                    "count": 1,
                    "current": 1,
                    "current_index": 2,
                    "index2": 2,
                    "inner_loop_index": 1,
                    "j": 1,
                    "loop_index2": 1,
                    "nested_loop_index": 1,
                    "prev_execution_index": 1,
                    "prev_index": 9,
                    "previous_function_index": 1,
                    "previous_index": 8,
                    "temp_counter": 1,
                    "temp_index": 1
                },
                "lVar3": {
                    "current_index": 1,
                    "current_index_minus8": 1,
                    "index3": 2,
                    "inner_count": 1,
                    "inner_index": 2,
                    "inner_loop_counter": 1,
                    "iterator": 1,
                    "k": 1,
                    "loop_index3": 1,
                    "nested_loop_index_temp": 1,
                    "outer_loop_index": 1,
                    "prev_index2": 1,
                    "previous": 1,
                    "temp_index": 16
                },
                "plVar4": {
                    "callback_list": 1,
                    "function_array": 2,
                    "function_chain": 7,
                    "function_list": 6,
                    "function_pointer": 5,
                    "function_pointer_array": 1,
                    "function_pointer_list": 2,
                    "function_pointers": 4,
                    "function_ptr": 1,
                    "function_ptr_array": 1,
                    "function_set": 1
                },
                "uVar5": {
                    "callback_index": 1,
                    "count": 6,
                    "counter": 7,
                    "decrement_counter": 1,
                    "func_index": 1,
                    "function_index": 2,
                    "index": 4,
                    "iteration_count": 2,
                    "length": 1,
                    "loop_index": 1,
                    "num_calls": 1,
                    "num_functions": 2,
                    "number_of_functions": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nvoid execute_nested_functions_0011a390(void)\n\n{\n  long index;\n  long prev_index;\n  long temp_index;\n  long *function_chain;\n  uint counter;\n  \n  function_chain = (long *)PTR_DAT_001264c0;\n  if (PTR_DAT_001264c0 != (undefined *)0x0) {\n    do {\n      counter = *(int *)(function_chain + 1) - 1;\n      if (-1 < (int)counter) {\n        index = (long)(int)counter;\n        counter = counter & 7;\n        (*(code *)function_chain[index + 2])();\n        prev_index = index + -1;\n        if (-1 < (int)prev_index) {\n          temp_index = prev_index;\n          if (counter != 0) {\n            if (counter != 1) {\n              if (counter != 2) {\n                if (counter != 3) {\n                  if (counter != 4) {\n                    if (counter != 5) {\n                      if (counter != 6) {\n                        (*(code *)function_chain[index + 1])();\n                        prev_index = index + -2;\n                      }\n                      (*(code *)function_chain[prev_index + 2])();\n                      prev_index = prev_index + -1;\n                    }\n                    (*(code *)function_chain[prev_index + 2])();\n                    prev_index = prev_index + -1;\n                  }\n                  (*(code *)function_chain[prev_index + 2])();\n                  prev_index = prev_index + -1;\n                }\n                (*(code *)function_chain[prev_index + 2])();\n                prev_index = prev_index + -1;\n              }\n              (*(code *)function_chain[prev_index + 2])();\n              prev_index = prev_index + -1;\n            }\n            (*(code *)function_chain[prev_index + 2])();\n            temp_index = prev_index + -1;\n            if ((int)(prev_index + -1) < 0) goto LAB_0011a466;\n          }\n          do {\n            (*(code *)function_chain[temp_index + 2])();\n            index = temp_index + -1;\n            (*(code *)function_chain[temp_index + 1])();\n            (*(code *)function_chain[temp_index])();\n            (*(code *)function_chain[index])();\n            (*(code *)function_chain[temp_index + -2])();\n            (*(code *)function_chain[temp_index + -3])();\n            (*(code *)function_chain[temp_index + -4])();\n            (*(code *)function_chain[temp_index + -5])();\n            temp_index = temp_index + -8;\n          } while (-1 < (int)index + -7);\n        }\n      }\nLAB_0011a466:\n      function_chain = (long *)*function_chain;\n    } while (function_chain != (long *)0x0);\n  }\n  return;\n}\n\n",
            "current_name": "execute_nested_functions_0011a390",
            "entrypoint": "0x0011a390",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0011a390": "execute_nested_functions_0011a390",
                "lVar1": "index",
                "lVar2": "prev_index",
                "lVar3": "temp_index",
                "plVar4": "function_chain",
                "uVar5": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0011a480": {
            "additional_data": {
                "FUN_0011a480": {
                    "copy_and_allocate_string": 1,
                    "copy_and_null_terminate_string": 4,
                    "copy_and_terminate_string": 1,
                    "copy_and_zero_terminate_string": 1,
                    "copy_string": 15,
                    "copy_string_to_destination": 1,
                    "copy_string_with_null_terminator": 6,
                    "copy_string_with_padding": 1,
                    "reverse_string": 1
                },
                "__dest": {
                    "allocated_string": 1,
                    "buffer": 1,
                    "copied_string": 8,
                    "copy_buffer": 1,
                    "destination_string": 10,
                    "new_string": 8,
                    "output_string": 2
                },
                "__n": {
                    "length": 3,
                    "string_length": 28
                },
                "memcpy": {
                    "copy_memory": 1
                },
                "param_1": {
                    "input_string": 13,
                    "original_string": 1,
                    "source_string": 17
                },
                "param_2": {
                    "max_len": 3,
                    "max_length": 26,
                    "max_size": 2
                },
                "strnlen": {
                    "get_length": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "strnlen",
                "xmalloc",
                "memcpy"
            ],
            "calling": [
                "FUN_00116b90",
                "FUN_00114c80"
            ],
            "code": "\nvoid copy_string_with_null_terminator_0011a480(char *source_string,size_t max_length)\n\n{\n  size_t string_length;\n  void *destination_string;\n  \n  string_length = strnlen(source_string,max_length);\n  destination_string = (void *)xmalloc(string_length + 1);\n  *(undefined *)((long)destination_string + string_length) = 0;\n  memcpy(destination_string,source_string,string_length);\n  return;\n}\n\n",
            "current_name": "copy_string_with_null_terminator_0011a480",
            "entrypoint": "0x0011a480",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0011a480": "copy_string_with_null_terminator_0011a480",
                "__dest": "destination_string",
                "__n": "string_length",
                "memcpy": "copy_memory",
                "param_1": "source_string",
                "param_2": "max_length",
                "strnlen": "get_length",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "_DT_FINI": {
            "called": [],
            "calling": [],
            "code": "\nvoid _DT_FINI(void)\n\n{\n  return;\n}\n\n",
            "current_name": "_DT_FINI",
            "entrypoint": "0x0011a4b4",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_DT_INIT": {
            "called": [
                "__gmon_start__"
            ],
            "calling": [],
            "code": "\nvoid _DT_INIT(void)\n\n{\n  __gmon_start__();\n  return;\n}\n\n",
            "current_name": "_DT_INIT",
            "entrypoint": "0x00104000",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_FINI_0": {
            "called": [
                "FUN_00116ad0",
                "__cxa_finalize"
            ],
            "calling": [],
            "code": "\nvoid _FINI_0(void)\n\n{\n  if (DAT_001275c0 != '\\0') {\n    return;\n  }\n  __cxa_finalize(PTR_LOOP_00126468);\n  FUNC_00116ad0();\n  DAT_001275c0 = 1;\n  return;\n}\n\n",
            "current_name": "_FINI_0",
            "entrypoint": "0x00116b40",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_INIT_0": {
            "called": [
                "FUN_00116b00"
            ],
            "calling": [],
            "code": "\nvoid _INIT_0(void)\n\n{\n  FUNC_00116b00();\n  return;\n}\n\n",
            "current_name": "_INIT_0",
            "entrypoint": "0x00116b80",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "__assert_fail": {
            "called": [
                "__assert_fail"
            ],
            "calling": [
                "FUN_00112c1f",
                "FUN_0010c7a0",
                "FUN_0010bbd3",
                "FUN_001125fa"
            ],
            "code": "\n\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n                    \n  __assert_fail(__assertion,__file,__line,__function);\n}\n\n",
            "current_name": "__assert_fail",
            "entrypoint": "0x00104300",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "__cxa_finalize": {
            "called": [
                "__cxa_finalize"
            ],
            "calling": [
                "_FINI_0"
            ],
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n",
            "current_name": "__cxa_finalize",
            "entrypoint": "0x00104910",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "__errno_location": {
            "called": [
                "__errno_location"
            ],
            "calling": [
                "FUN_00104ea2",
                "FUN_0010543c",
                "FUN_00108237",
                "FUN_00109a32",
                "FUN_001199d0",
                "FUN_00107880",
                "FUN_00104966",
                "FUN_0010882c",
                "FUN_00114460",
                "FUN_00116b90",
                "FUN_00114690",
                "FUN_00108200",
                "FUN_00115a90"
            ],
            "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  return piVar1;\n}\n\n",
            "current_name": "__errno_location",
            "entrypoint": "0x001040b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "abort": {
            "called": [
                "abort"
            ],
            "calling": [
                "FUN_00112c1f",
                "FUN_0010b0fa",
                "FUN_0010ba08",
                "FUN_0010d21c",
                "FUN_0010922b",
                "FUN_0010e9a0",
                "FUN_001135a5",
                "FUN_0010aa53",
                "FUN_0010abdd",
                "FUN_0010ebb0",
                "FUN_001199d0",
                "FUN_0010a94e"
            ],
            "code": "\n\n\nvoid abort(void)\n\n{\n                    \n  abort();\n}\n\n",
            "current_name": "abort",
            "entrypoint": "0x001040a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "access": {
            "called": [
                "access"
            ],
            "calling": [
                "FUN_0011283f"
            ],
            "code": "\n\n\nint access(char *__name,int __type)\n\n{\n  int iVar1;\n  \n  iVar1 = access(__name,__type);\n  return iVar1;\n}\n\n",
            "current_name": "access",
            "entrypoint": "0x00104740",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_alloc": {
            "called": [
                "bfd_alloc"
            ],
            "calling": [
                "FUN_00115dc0"
            ],
            "code": "\nvoid bfd_alloc(void)\n\n{\n  bfd_alloc();\n  return;\n}\n\n",
            "current_name": "bfd_alloc",
            "entrypoint": "0x00104250",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_alt_mach_code": {
            "called": [
                "bfd_alt_mach_code"
            ],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\nvoid bfd_alt_mach_code(void)\n\n{\n  bfd_alt_mach_code();\n  return;\n}\n\n",
            "current_name": "bfd_alt_mach_code",
            "entrypoint": "0x00104590",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_bread": {
            "called": [
                "bfd_bread"
            ],
            "calling": [
                "FUN_00104ea2"
            ],
            "code": "\nvoid bfd_bread(void)\n\n{\n  bfd_bread();\n  return;\n}\n\n",
            "current_name": "bfd_bread",
            "entrypoint": "0x00104870",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_bwrite": {
            "called": [
                "bfd_bwrite"
            ],
            "calling": [
                "FUN_00104ea2"
            ],
            "code": "\nvoid bfd_bwrite(void)\n\n{\n  bfd_bwrite();\n  return;\n}\n\n",
            "current_name": "bfd_bwrite",
            "entrypoint": "0x00104530",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_canonicalize_reloc": {
            "called": [
                "bfd_canonicalize_reloc"
            ],
            "calling": [
                "FUN_00115dc0",
                "FUN_00116030",
                "FUN_001163d0"
            ],
            "code": "\nvoid bfd_canonicalize_reloc(void)\n\n{\n  bfd_canonicalize_reloc();\n  return;\n}\n\n",
            "current_name": "bfd_canonicalize_reloc",
            "entrypoint": "0x001047b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_check_format": {
            "called": [
                "bfd_check_format"
            ],
            "calling": [
                "FUN_00104ea2",
                "FUN_00114690"
            ],
            "code": "\nvoid bfd_check_format(void)\n\n{\n  bfd_check_format();\n  return;\n}\n\n",
            "current_name": "bfd_check_format",
            "entrypoint": "0x00104810",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_check_format_matches": {
            "called": [
                "bfd_check_format_matches"
            ],
            "calling": [
                "FUN_00114690"
            ],
            "code": "\nvoid bfd_check_format_matches(void)\n\n{\n  bfd_check_format_matches();\n  return;\n}\n\n",
            "current_name": "bfd_check_format_matches",
            "entrypoint": "0x00104780",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_close": {
            "called": [
                "bfd_close"
            ],
            "calling": [
                "FUN_00104ea2",
                "FUN_00114690"
            ],
            "code": "\nvoid bfd_close(void)\n\n{\n  bfd_close();\n  return;\n}\n\n",
            "current_name": "bfd_close",
            "entrypoint": "0x00104908",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_close_all_done": {
            "called": [
                "bfd_close_all_done"
            ],
            "calling": [
                "FUN_00104ea2",
                "FUN_00114690",
                "FUN_00119f70"
            ],
            "code": "\nvoid bfd_close_all_done(void)\n\n{\n  bfd_close_all_done();\n  return;\n}\n\n",
            "current_name": "bfd_close_all_done",
            "entrypoint": "0x00104900",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_coff_get_auxent": {
            "called": [
                "bfd_coff_get_auxent"
            ],
            "calling": [
                "FUN_0010554f",
                "FUN_0010e07c"
            ],
            "code": "\nvoid bfd_coff_get_auxent(void)\n\n{\n  bfd_coff_get_auxent();\n  return;\n}\n\n",
            "current_name": "bfd_coff_get_auxent",
            "entrypoint": "0x001045b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_coff_get_syment": {
            "called": [
                "bfd_coff_get_syment"
            ],
            "calling": [
                "FUN_0010dac0",
                "FUN_0010554f",
                "FUN_0010e07c"
            ],
            "code": "\nvoid bfd_coff_get_syment(void)\n\n{\n  bfd_coff_get_syment();\n  return;\n}\n\n",
            "current_name": "bfd_coff_get_syment",
            "entrypoint": "0x001046a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_convert_section_contents": {
            "called": [
                "bfd_convert_section_contents"
            ],
            "calling": [
                "FUN_00116110"
            ],
            "code": "\nvoid bfd_convert_section_contents(void)\n\n{\n  bfd_convert_section_contents();\n  return;\n}\n\n",
            "current_name": "bfd_convert_section_contents",
            "entrypoint": "0x001042f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_convert_section_setup": {
            "called": [
                "bfd_convert_section_setup"
            ],
            "calling": [
                "FUN_00115530"
            ],
            "code": "\nvoid bfd_convert_section_setup(void)\n\n{\n  bfd_convert_section_setup();\n  return;\n}\n\n",
            "current_name": "bfd_convert_section_setup",
            "entrypoint": "0x001040f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_create_gnu_debuglink_section": {
            "called": [
                "bfd_create_gnu_debuglink_section"
            ],
            "calling": [
                "FUN_00107880"
            ],
            "code": "\nvoid bfd_create_gnu_debuglink_section(void)\n\n{\n  bfd_create_gnu_debuglink_section();\n  return;\n}\n\n",
            "current_name": "bfd_create_gnu_debuglink_section",
            "entrypoint": "0x00104180",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_decode_symclass": {
            "called": [
                "bfd_decode_symclass"
            ],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\nvoid bfd_decode_symclass(void)\n\n{\n  bfd_decode_symclass();\n  return;\n}\n\n",
            "current_name": "bfd_decode_symclass",
            "entrypoint": "0x00104490",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_errmsg": {
            "called": [
                "bfd_errmsg"
            ],
            "calling": [
                "FUN_0011378f",
                "FUN_00116b90",
                "FUN_0011a110",
                "FUN_0010e2f0",
                "FUN_001126c0",
                "FUN_0010e6a8",
                "FUN_0010dac0",
                "FUN_0010554f",
                "FUN_0010e07c"
            ],
            "code": "\nvoid bfd_errmsg(void)\n\n{\n  bfd_errmsg();\n  return;\n}\n\n",
            "current_name": "bfd_errmsg",
            "entrypoint": "0x001047a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_fdopenw": {
            "called": [
                "bfd_fdopenw"
            ],
            "calling": [
                "FUN_00114690"
            ],
            "code": "\nvoid bfd_fdopenw(void)\n\n{\n  bfd_fdopenw();\n  return;\n}\n\n",
            "current_name": "bfd_fdopenw",
            "entrypoint": "0x001048d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_fill_in_gnu_debuglink_section": {
            "called": [
                "bfd_fill_in_gnu_debuglink_section"
            ],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\nvoid bfd_fill_in_gnu_debuglink_section(void)\n\n{\n  bfd_fill_in_gnu_debuglink_section();\n  return;\n}\n\n",
            "current_name": "bfd_fill_in_gnu_debuglink_section",
            "entrypoint": "0x00104600",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_arch": {
            "called": [
                "bfd_get_arch"
            ],
            "calling": [
                "FUN_00104ea2",
                "FUN_00105828",
                "FUN_00107976",
                "FUN_00107880"
            ],
            "code": "\nvoid bfd_get_arch(void)\n\n{\n  bfd_get_arch();\n  return;\n}\n\n",
            "current_name": "bfd_get_arch",
            "entrypoint": "0x00104570",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_error": {
            "called": [
                "bfd_get_error"
            ],
            "calling": [
                "FUN_00115dc0",
                "FUN_001126c0",
                "FUN_0010e6a8",
                "FUN_0010554f",
                "FUN_0010e07c",
                "FUN_00119f70",
                "FUN_001083b7",
                "FUN_0011378f",
                "FUN_00116b90",
                "FUN_00114690",
                "FUN_0011a110",
                "FUN_0010e2f0",
                "FUN_0010dac0"
            ],
            "code": "\nvoid bfd_get_error(void)\n\n{\n  bfd_get_error();\n  return;\n}\n\n",
            "current_name": "bfd_get_error",
            "entrypoint": "0x00104370",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_full_section_contents": {
            "called": [
                "bfd_get_full_section_contents"
            ],
            "calling": [
                "FUN_00116110",
                "FUN_00107880"
            ],
            "code": "\nvoid bfd_get_full_section_contents(void)\n\n{\n  bfd_get_full_section_contents();\n  return;\n}\n\n",
            "current_name": "bfd_get_full_section_contents",
            "entrypoint": "0x00104440",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_mach": {
            "called": [
                "bfd_get_mach"
            ],
            "calling": [
                "FUN_00105828",
                "FUN_00107976"
            ],
            "code": "\nvoid bfd_get_mach(void)\n\n{\n  bfd_get_mach();\n  return;\n}\n\n",
            "current_name": "bfd_get_mach",
            "entrypoint": "0x00104650",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_reloc_upper_bound": {
            "called": [
                "bfd_get_reloc_upper_bound"
            ],
            "calling": [
                "FUN_00115dc0",
                "FUN_00116030",
                "FUN_001163d0"
            ],
            "code": "\nvoid bfd_get_reloc_upper_bound(void)\n\n{\n  bfd_get_reloc_upper_bound();\n  return;\n}\n\n",
            "current_name": "bfd_get_reloc_upper_bound",
            "entrypoint": "0x00104840",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_section_by_name": {
            "called": [
                "bfd_get_section_by_name"
            ],
            "calling": [
                "FUN_0011a2e0",
                "FUN_00107880",
                "FUN_0010554f"
            ],
            "code": "\nvoid bfd_get_section_by_name(void)\n\n{\n  bfd_get_section_by_name();\n  return;\n}\n\n",
            "current_name": "bfd_get_section_by_name",
            "entrypoint": "0x00104400",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_section_contents": {
            "called": [
                "bfd_get_section_contents"
            ],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\nvoid bfd_get_section_contents(void)\n\n{\n  bfd_get_section_contents();\n  return;\n}\n\n",
            "current_name": "bfd_get_section_contents",
            "entrypoint": "0x00104260",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_stab_name": {
            "called": [
                "bfd_get_stab_name"
            ],
            "calling": [
                "FUN_00108b3e"
            ],
            "code": "\nvoid bfd_get_stab_name(void)\n\n{\n  bfd_get_stab_name();\n  return;\n}\n\n",
            "current_name": "bfd_get_stab_name",
            "entrypoint": "0x00104110",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_hash_allocate": {
            "called": [
                "bfd_hash_allocate"
            ],
            "calling": [
                "FUN_0010bb52"
            ],
            "code": "\nvoid bfd_hash_allocate(void)\n\n{\n  bfd_hash_allocate();\n  return;\n}\n\n",
            "current_name": "bfd_hash_allocate",
            "entrypoint": "0x00104450",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_hash_lookup": {
            "called": [
                "bfd_hash_lookup"
            ],
            "calling": [
                "FUN_0010bba1",
                "FUN_0010e2f0",
                "FUN_0010e6a8"
            ],
            "code": "\nvoid bfd_hash_lookup(void)\n\n{\n  bfd_hash_lookup();\n  return;\n}\n\n",
            "current_name": "bfd_hash_lookup",
            "entrypoint": "0x00104560",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_hash_newfunc": {
            "called": [
                "bfd_hash_newfunc"
            ],
            "calling": [
                "FUN_0010bb52"
            ],
            "code": "\nvoid bfd_hash_newfunc(void)\n\n{\n  bfd_hash_newfunc();\n  return;\n}\n\n",
            "current_name": "bfd_hash_newfunc",
            "entrypoint": "0x00104200",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_hash_table_init": {
            "called": [
                "bfd_hash_table_init"
            ],
            "calling": [
                "FUN_0011378f"
            ],
            "code": "\nvoid bfd_hash_table_init(void)\n\n{\n  bfd_hash_table_init();\n  return;\n}\n\n",
            "current_name": "bfd_hash_table_init",
            "entrypoint": "0x00104830",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_init": {
            "called": [
                "bfd_init"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nvoid bfd_init(void)\n\n{\n  bfd_init();\n  return;\n}\n\n",
            "current_name": "bfd_init",
            "entrypoint": "0x00104430",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_is_local_label": {
            "called": [
                "bfd_is_local_label"
            ],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\nvoid bfd_is_local_label(void)\n\n{\n  bfd_is_local_label();\n  return;\n}\n\n",
            "current_name": "bfd_is_local_label",
            "entrypoint": "0x001048a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_iterate_over_targets": {
            "called": [
                "bfd_iterate_over_targets"
            ],
            "calling": [
                "FUN_001199d0"
            ],
            "code": "\nvoid bfd_iterate_over_targets(void)\n\n{\n  bfd_iterate_over_targets();\n  return;\n}\n\n",
            "current_name": "bfd_iterate_over_targets",
            "entrypoint": "0x00104620",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_make_section_anyway_with_flags": {
            "called": [
                "bfd_make_section_anyway_with_flags"
            ],
            "calling": [
                "FUN_00115530"
            ],
            "code": "\nvoid bfd_make_section_anyway_with_flags(void)\n\n{\n  bfd_make_section_anyway_with_flags();\n  return;\n}\n\n",
            "current_name": "bfd_make_section_anyway_with_flags",
            "entrypoint": "0x00104190",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_make_section_with_flags": {
            "called": [
                "bfd_make_section_with_flags"
            ],
            "calling": [
                "FUN_0010554f",
                "FUN_00107880"
            ],
            "code": "\nvoid bfd_make_section_with_flags(void)\n\n{\n  bfd_make_section_with_flags();\n  return;\n}\n\n",
            "current_name": "bfd_make_section_with_flags",
            "entrypoint": "0x00104120",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_malloc_and_get_section": {
            "called": [
                "bfd_malloc_and_get_section"
            ],
            "calling": [
                "FUN_00107880"
            ],
            "code": "\nvoid bfd_malloc_and_get_section(void)\n\n{\n  bfd_malloc_and_get_section();\n  return;\n}\n\n",
            "current_name": "bfd_malloc_and_get_section",
            "entrypoint": "0x001041e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_map_over_sections": {
            "called": [
                "bfd_map_over_sections"
            ],
            "calling": [
                "FUN_0010554f",
                "FUN_00107880"
            ],
            "code": "\nvoid bfd_map_over_sections(void)\n\n{\n  bfd_map_over_sections();\n  return;\n}\n\n",
            "current_name": "bfd_map_over_sections",
            "entrypoint": "0x00104850",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_octets_per_byte": {
            "called": [
                "bfd_octets_per_byte"
            ],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\nvoid bfd_octets_per_byte(void)\n\n{\n  bfd_octets_per_byte();\n  return;\n}\n\n",
            "current_name": "bfd_octets_per_byte",
            "entrypoint": "0x00104520",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_openr": {
            "called": [
                "bfd_openr"
            ],
            "calling": [
                "FUN_00104ea2",
                "FUN_00114690"
            ],
            "code": "\nvoid bfd_openr(void)\n\n{\n  bfd_openr();\n  return;\n}\n\n",
            "current_name": "bfd_openr",
            "entrypoint": "0x001041f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_openr_next_archived_file": {
            "called": [
                "bfd_openr_next_archived_file"
            ],
            "calling": [
                "FUN_00104ea2",
                "FUN_00114690"
            ],
            "code": "\nvoid bfd_openr_next_archived_file(void)\n\n{\n  bfd_openr_next_archived_file();\n  return;\n}\n\n",
            "current_name": "bfd_openr_next_archived_file",
            "entrypoint": "0x00104820",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_openw": {
            "called": [
                "bfd_openw"
            ],
            "calling": [
                "FUN_00104ea2",
                "FUN_00114690",
                "FUN_00119f70"
            ],
            "code": "\nvoid bfd_openw(void)\n\n{\n  bfd_openw();\n  return;\n}\n\n",
            "current_name": "bfd_openw",
            "entrypoint": "0x00104690",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_printable_arch_mach": {
            "called": [
                "bfd_printable_arch_mach"
            ],
            "calling": [
                "FUN_00105828",
                "FUN_001199d0",
                "FUN_00104943",
                "FUN_00119f70"
            ],
            "code": "\nvoid bfd_printable_arch_mach(void)\n\n{\n  bfd_printable_arch_mach();\n  return;\n}\n\n",
            "current_name": "bfd_printable_arch_mach",
            "entrypoint": "0x001045a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_scan_arch": {
            "called": [
                "bfd_scan_arch"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nvoid bfd_scan_arch(void)\n\n{\n  bfd_scan_arch();\n  return;\n}\n\n",
            "current_name": "bfd_scan_arch",
            "entrypoint": "0x00104710",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_scan_vma": {
            "called": [
                "bfd_scan_vma"
            ],
            "calling": [
                "FUN_00119940"
            ],
            "code": "\nvoid bfd_scan_vma(void)\n\n{\n  bfd_scan_vma();\n  return;\n}\n\n",
            "current_name": "bfd_scan_vma",
            "entrypoint": "0x00104070",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_seek": {
            "called": [
                "bfd_seek"
            ],
            "calling": [
                "FUN_00104ea2"
            ],
            "code": "\nvoid bfd_seek(void)\n\n{\n  bfd_seek();\n  return;\n}\n\n",
            "current_name": "bfd_seek",
            "entrypoint": "0x001048e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_default_target": {
            "called": [
                "bfd_set_default_target"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nvoid bfd_set_default_target(void)\n\n{\n  bfd_set_default_target();\n  return;\n}\n\n",
            "current_name": "bfd_set_default_target",
            "entrypoint": "0x00104150",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_error": {
            "called": [
                "bfd_set_error"
            ],
            "calling": [
                "FUN_001086af",
                "FUN_00114690",
                "FUN_0010554f"
            ],
            "code": "\nvoid bfd_set_error(void)\n\n{\n  bfd_set_error();\n  return;\n}\n\n",
            "current_name": "bfd_set_error",
            "entrypoint": "0x001043a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_error_program_name": {
            "called": [
                "bfd_set_error_program_name"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n",
            "current_name": "bfd_set_error_program_name",
            "entrypoint": "0x001046e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_file_flags": {
            "called": [
                "bfd_set_file_flags"
            ],
            "calling": [
                "FUN_00107976"
            ],
            "code": "\nvoid bfd_set_file_flags(void)\n\n{\n  bfd_set_file_flags();\n  return;\n}\n\n",
            "current_name": "bfd_set_file_flags",
            "entrypoint": "0x00104630",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_format": {
            "called": [
                "bfd_set_format"
            ],
            "calling": [
                "FUN_00114e50",
                "FUN_00114690",
                "FUN_00107880",
                "FUN_00119f70"
            ],
            "code": "\nvoid bfd_set_format(void)\n\n{\n  bfd_set_format();\n  return;\n}\n\n",
            "current_name": "bfd_set_format",
            "entrypoint": "0x00104500",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_section_contents": {
            "called": [
                "bfd_set_section_contents"
            ],
            "calling": [
                "FUN_00116110",
                "FUN_0010554f"
            ],
            "code": "\nvoid bfd_set_section_contents(void)\n\n{\n  bfd_set_section_contents();\n  return;\n}\n\n",
            "current_name": "bfd_set_section_contents",
            "entrypoint": "0x00104330",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_section_size": {
            "called": [
                "bfd_set_section_size"
            ],
            "calling": [
                "FUN_00115530",
                "FUN_00116110",
                "FUN_0010554f",
                "FUN_00107880"
            ],
            "code": "\nvoid bfd_set_section_size(void)\n\n{\n  bfd_set_section_size();\n  return;\n}\n\n",
            "current_name": "bfd_set_section_size",
            "entrypoint": "0x001045f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_start_address": {
            "called": [
                "bfd_set_start_address"
            ],
            "calling": [
                "FUN_00107976"
            ],
            "code": "\nvoid bfd_set_start_address(void)\n\n{\n  bfd_set_start_address();\n  return;\n}\n\n",
            "current_name": "bfd_set_start_address",
            "entrypoint": "0x00104860",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_symtab": {
            "called": [
                "bfd_set_symtab"
            ],
            "calling": [
                "FUN_0010554f"
            ],
            "code": "\nvoid bfd_set_symtab(void)\n\n{\n  bfd_set_symtab();\n  return;\n}\n\n",
            "current_name": "bfd_set_symtab",
            "entrypoint": "0x00104460",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_stat": {
            "called": [
                "bfd_stat"
            ],
            "calling": [
                "FUN_00114690"
            ],
            "code": "\nvoid bfd_stat(void)\n\n{\n  bfd_stat();\n  return;\n}\n\n",
            "current_name": "bfd_stat",
            "entrypoint": "0x001041b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_target_list": {
            "called": [
                "bfd_target_list"
            ],
            "calling": [
                "FUN_00104a35"
            ],
            "code": "\nvoid bfd_target_list(void)\n\n{\n  bfd_target_list();\n  return;\n}\n\n",
            "current_name": "bfd_target_list",
            "entrypoint": "0x00104350",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bindtextdomain": {
            "called": [
                "bindtextdomain"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n",
            "current_name": "bindtextdomain",
            "entrypoint": "0x00104220",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "chmod": {
            "called": [
                "chmod"
            ],
            "calling": [
                "FUN_00104ea2"
            ],
            "code": "\n\n\nint chmod(char *__file,__mode_t __mode)\n\n{\n  int iVar1;\n  \n  iVar1 = chmod(__file,__mode);\n  return iVar1;\n}\n\n",
            "current_name": "chmod",
            "entrypoint": "0x001046d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "close": {
            "called": [
                "close"
            ],
            "calling": [
                "FUN_00116b90",
                "FUN_00108237",
                "FUN_00114690",
                "FUN_001199d0",
                "FUN_00115a90"
            ],
            "code": "\n\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = close(__fd);\n  return iVar1;\n}\n\n",
            "current_name": "close",
            "entrypoint": "0x001043c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "concat": {
            "called": [
                "concat"
            ],
            "calling": [
                "FUN_00104ea2",
                "FUN_0010ee3f",
                "FUN_0010d21c",
                "FUN_0011173a",
                "FUN_0010554f"
            ],
            "code": "\nvoid concat(void)\n\n{\n  concat();\n  return;\n}\n\n",
            "current_name": "concat",
            "entrypoint": "0x00104320",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "cplus_demangle": {
            "called": [
                "cplus_demangle"
            ],
            "calling": [
                "FUN_0010d21c"
            ],
            "code": "\nvoid cplus_demangle(void)\n\n{\n  cplus_demangle();\n  return;\n}\n\n",
            "current_name": "cplus_demangle",
            "entrypoint": "0x001046b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "cplus_demangle_init_info": {
            "called": [
                "cplus_demangle_init_info"
            ],
            "calling": [
                "FUN_0010ee3f"
            ],
            "code": "\nvoid cplus_demangle_init_info(void)\n\n{\n  cplus_demangle_init_info();\n  return;\n}\n\n",
            "current_name": "cplus_demangle_init_info",
            "entrypoint": "0x00104550",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "cplus_demangle_mangled_name": {
            "called": [
                "cplus_demangle_mangled_name"
            ],
            "calling": [
                "FUN_0010ee3f"
            ],
            "code": "\nvoid cplus_demangle_mangled_name(void)\n\n{\n  cplus_demangle_mangled_name();\n  return;\n}\n\n",
            "current_name": "cplus_demangle_mangled_name",
            "entrypoint": "0x00104700",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "cplus_demangle_print": {
            "called": [
                "cplus_demangle_print"
            ],
            "calling": [
                "FUN_0010b0fa"
            ],
            "code": "\nvoid cplus_demangle_print(void)\n\n{\n  cplus_demangle_print();\n  return;\n}\n\n",
            "current_name": "cplus_demangle_print",
            "entrypoint": "0x00104050",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "dcgettext": {
            "called": [
                "dcgettext"
            ],
            "calling": [
                "FUN_00114190",
                "FUN_00108375",
                "FUN_0010b800",
                "FUN_00104ea2",
                "FUN_0010c05d",
                "FUN_00108fe8",
                "FUN_0011173a",
                "FUN_00105828",
                "FUN_00109a32",
                "FUN_001199d0",
                "FUN_0010871c",
                "FUN_00107880",
                "FUN_00108916",
                "FUN_0010882c",
                "FUN_00112b6e",
                "FUN_001163d0",
                "FUN_00108072",
                "FUN_0010e2f0",
                "FUN_0010c6be",
                "FUN_0010bf86",
                "FUN_00104cc1",
                "FUN_0010b0fa",
                "FUN_00115dc0",
                "FUN_0010ee3f",
                "FUN_00113f50",
                "FUN_0010543c",
                "FUN_00104920",
                "FUN_001086af",
                "FUN_00115530",
                "FUN_0010da0b",
                "FUN_001126c0",
                "FUN_001152b6",
                "FUN_0010e07c",
                "FUN_00104966",
                "FUN_00114460",
                "FUN_00114dc7",
                "FUN_0010c2d2",
                "FUN_00108fb9",
                "FUN_0010c218",
                "FUN_001053b5",
                "FUN_00108d9a",
                "FUN_0010c892",
                "FUN_0010bc80",
                "FUN_0011256b",
                "FUN_0010e6a8",
                "FUN_00116490",
                "FUN_001083de",
                "FUN_00112c1f",
                "FUN_00108f08",
                "FUN_0010ba08",
                "FUN_0010827b",
                "FUN_0010bf20",
                "FUN_0010bd62",
                "FUN_00116b90",
                "FUN_00114690",
                "FUN_00108808",
                "FUN_00108b3e",
                "FUN_00108179",
                "FUN_00115b70",
                "FUN_00114e00",
                "FUN_00108a2a",
                "FUN_0010808f",
                "FUN_00104ad6",
                "FUN_00107976",
                "FUN_0010554f",
                "FUN_00112996",
                "FUN_00104a35",
                "FUN_00119f70",
                "FUN_0010551d",
                "FUN_00119970",
                "FUN_0010be88",
                "FUN_00114e50",
                "FUN_0010be1a",
                "FUN_0010911f",
                "FUN_00109022",
                "FUN_00108200",
                "FUN_0010914e",
                "FUN_0010b6ea",
                "FUN_0010dac0"
            ],
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n",
            "current_name": "dcgettext",
            "entrypoint": "0x00104240",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "dup": {
            "called": [
                "dup"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\n\n\nint dup(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = dup(__fd);\n  return iVar1;\n}\n\n",
            "current_name": "dup",
            "entrypoint": "0x001042d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "entry": {
            "called": [
                "FUN_00116b90",
                "__libc_start_main"
            ],
            "calling": [],
            "code": "\nvoid processEntry entry(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined auStack_8 [8];\n  \n  __libc_start_main(FUNC_00116b90,param_2,&stack0x00000008,0,0,param_1,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "entry",
            "entrypoint": "0x00116aa0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "exit": {
            "called": [
                "exit"
            ],
            "calling": [
                "FUN_00119970",
                "FUN_00108a2a",
                "FUN_00108916"
            ],
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n",
            "current_name": "exit",
            "entrypoint": "0x001047f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fchmod": {
            "called": [
                "fchmod"
            ],
            "calling": [
                "FUN_00115a90"
            ],
            "code": "\n\n\nint fchmod(int __fd,__mode_t __mode)\n\n{\n  int iVar1;\n  \n  iVar1 = fchmod(__fd,__mode);\n  return iVar1;\n}\n\n",
            "current_name": "fchmod",
            "entrypoint": "0x001046c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fclose": {
            "called": [
                "fclose"
            ],
            "calling": [
                "FUN_00114dc7",
                "FUN_00116b90",
                "FUN_00107880",
                "FUN_00114460"
            ],
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fclose",
            "entrypoint": "0x00104210",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "feof": {
            "called": [
                "feof"
            ],
            "calling": [
                "FUN_00114dc7"
            ],
            "code": "\n\n\nint feof(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = feof(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "feof",
            "entrypoint": "0x001044d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "ferror": {
            "called": [
                "ferror"
            ],
            "calling": [
                "FUN_00114dc7",
                "FUN_00116b90",
                "FUN_00114460"
            ],
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "ferror",
            "entrypoint": "0x00104130",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fflush": {
            "called": [
                "fflush"
            ],
            "calling": [
                "FUN_00119e70",
                "FUN_0011256b",
                "FUN_001126c0",
                "FUN_0010871c"
            ],
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fflush",
            "entrypoint": "0x001045e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "filename_cmp": {
            "called": [
                "filename_cmp"
            ],
            "calling": [
                "FUN_00108f08",
                "FUN_00116b90",
                "FUN_0010edb4"
            ],
            "code": "\nvoid filename_cmp(void)\n\n{\n  filename_cmp();\n  return;\n}\n\n",
            "current_name": "filename_cmp",
            "entrypoint": "0x001041a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fnmatch": {
            "called": [
                "fnmatch"
            ],
            "calling": [
                "FUN_00114190",
                "FUN_0011a170"
            ],
            "code": "\n\n\nint fnmatch(char *__pattern,char *__name,int __flags)\n\n{\n  int iVar1;\n  \n  iVar1 = fnmatch(__pattern,__name,__flags);\n  return iVar1;\n}\n\n",
            "current_name": "fnmatch",
            "entrypoint": "0x00104340",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fopen": {
            "called": [
                "fopen"
            ],
            "calling": [
                "FUN_00114d60",
                "FUN_00116b90",
                "FUN_00107880",
                "FUN_00114460"
            ],
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n",
            "current_name": "fopen",
            "entrypoint": "0x00104750",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fprintf": {
            "called": [
                "fprintf"
            ],
            "calling": [
                "FUN_0010c892",
                "FUN_0010c05d",
                "FUN_0010bc80",
                "FUN_00108fe8",
                "FUN_0011256b",
                "FUN_0011173a",
                "FUN_001199d0",
                "FUN_00108916",
                "FUN_0010871c",
                "FUN_00112b6e",
                "FUN_00112c1f",
                "FUN_00108f08",
                "FUN_0010bf20",
                "FUN_0010bd62",
                "FUN_00116b90",
                "FUN_0010c6be",
                "FUN_0010bf86",
                "FUN_00108b3e",
                "FUN_0010b0fa",
                "FUN_0010ee3f",
                "FUN_00108a2a",
                "FUN_001126c0",
                "FUN_0010554f",
                "FUN_00112996",
                "FUN_00104a35",
                "FUN_0010be88",
                "FUN_0010be1a",
                "FUN_0010c2d2",
                "FUN_0010911f",
                "FUN_00119e70",
                "FUN_00109022",
                "FUN_00108fb9",
                "FUN_0010c218",
                "FUN_0010914e",
                "FUN_0010b6ea"
            ],
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n",
            "current_name": "fprintf",
            "entrypoint": "0x001044b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fputc": {
            "called": [
                "fputc"
            ],
            "calling": [
                "FUN_0011256b",
                "FUN_00104a35",
                "FUN_00108b3e"
            ],
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fputc",
            "entrypoint": "0x001043f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fputs": {
            "called": [
                "fputs"
            ],
            "calling": [
                "FUN_001126c0",
                "FUN_00104943"
            ],
            "code": "\n\n\nint fputs(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputs(__s,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fputs",
            "entrypoint": "0x00104310",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fread": {
            "called": [
                "fread"
            ],
            "calling": [
                "FUN_00114dc7",
                "FUN_00116b90",
                "FUN_00114460"
            ],
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n",
            "current_name": "fread",
            "entrypoint": "0x00104160",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "free": {
            "called": [
                "free"
            ],
            "calling": [
                "FUN_00104ea2",
                "FUN_0010c95e",
                "FUN_0011173a",
                "FUN_0010a377",
                "FUN_0010eafe",
                "FUN_0010abdd",
                "FUN_001199d0",
                "FUN_00107880",
                "FUN_0010c1c6",
                "FUN_0010ae0e",
                "FUN_0010b948",
                "FUN_001163d0",
                "FUN_00114b84",
                "FUN_00108863",
                "FUN_0010aa53",
                "FUN_0010b0fa",
                "FUN_0010ee3f",
                "FUN_0010a77a",
                "FUN_0010a0e9",
                "FUN_0010e07c",
                "FUN_0010ebb0",
                "FUN_00116110",
                "FUN_001088ae",
                "FUN_001081e9",
                "FUN_0010a2b9",
                "FUN_00116852",
                "FUN_00108466",
                "FUN_0010e9a0",
                "FUN_0011256b",
                "FUN_0010e453",
                "FUN_0010e6a8",
                "FUN_0010afd5",
                "FUN_0010e5db",
                "FUN_0010e7c2",
                "FUN_0010d559",
                "FUN_0010e8a9",
                "FUN_0010a424",
                "FUN_0010ba08",
                "FUN_00116b90",
                "FUN_00114690",
                "FUN_0010e918",
                "FUN_0010a83e",
                "FUN_00116030",
                "FUN_001125fa",
                "FUN_0010554f",
                "FUN_00104a35",
                "FUN_0010551d",
                "FUN_0010a181",
                "FUN_0010d21c",
                "FUN_0010e842",
                "FUN_00109b2f",
                "FUN_0010b6ea",
                "FUN_00109ed3",
                "FUN_0010dac0",
                "FUN_0010a94e"
            ],
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n",
            "current_name": "free",
            "entrypoint": "0x001048f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fseek": {
            "called": [
                "fseek"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n",
            "current_name": "fseek",
            "entrypoint": "0x00104660",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "ftell": {
            "called": [
                "ftell"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n",
            "current_name": "ftell",
            "entrypoint": "0x001044c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fwrite": {
            "called": [
                "fwrite"
            ],
            "calling": [
                "FUN_001126c0",
                "FUN_00107880",
                "FUN_00108b3e"
            ],
            "code": "\n\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fwrite(__ptr,__size,__n,__s);\n  return sVar1;\n}\n\n",
            "current_name": "fwrite",
            "entrypoint": "0x00104800",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "getc": {
            "called": [
                "getc"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\n\n\nint getc(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = getc(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "getc",
            "entrypoint": "0x001048b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "getenv": {
            "called": [
                "getenv"
            ],
            "calling": [
                "FUN_001199d0"
            ],
            "code": "\n\n\nchar * getenv(char *__name)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = getenv(__name);\n  return pcVar1;\n}\n\n",
            "current_name": "getenv",
            "entrypoint": "0x00104040",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "getopt_long": {
            "called": [
                "getopt_long"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n",
            "current_name": "getopt_long",
            "entrypoint": "0x00104280",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "htab_create_alloc": {
            "called": [
                "htab_create_alloc"
            ],
            "calling": [
                "FUN_00113f20",
                "FUN_00116b90"
            ],
            "code": "\nvoid htab_create_alloc(void)\n\n{\n  htab_create_alloc();\n  return;\n}\n\n",
            "current_name": "htab_create_alloc",
            "entrypoint": "0x00104720",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "htab_delete": {
            "called": [
                "htab_delete"
            ],
            "calling": [
                "FUN_001054af"
            ],
            "code": "\nvoid htab_delete(void)\n\n{\n  htab_delete();\n  return;\n}\n\n",
            "current_name": "htab_delete",
            "entrypoint": "0x00104090",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "htab_elements": {
            "called": [
                "htab_elements"
            ],
            "calling": [
                "FUN_00116b90",
                "FUN_0010554f"
            ],
            "code": "\nvoid htab_elements(void)\n\n{\n  htab_elements();\n  return;\n}\n\n",
            "current_name": "htab_elements",
            "entrypoint": "0x001044e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "htab_find": {
            "called": [
                "htab_find"
            ],
            "calling": [
                "FUN_00108d9a",
                "FUN_00115d70",
                "FUN_0010554f"
            ],
            "code": "\nvoid htab_find(void)\n\n{\n  htab_find();\n  return;\n}\n\n",
            "current_name": "htab_find",
            "entrypoint": "0x001047d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "htab_find_slot": {
            "called": [
                "htab_find_slot"
            ],
            "calling": [
                "FUN_00104cc1",
                "FUN_00108d9a",
                "FUN_00116b90"
            ],
            "code": "\nvoid htab_find_slot(void)\n\n{\n  htab_find_slot();\n  return;\n}\n\n",
            "current_name": "htab_find_slot",
            "entrypoint": "0x001044a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "htab_hash_string": {
            "called": [
                "htab_hash_string"
            ],
            "calling": [
                "FUN_00108800"
            ],
            "code": "\nvoid htab_hash_string(void)\n\n{\n  htab_hash_string();\n  return;\n}\n\n",
            "current_name": "htab_hash_string",
            "entrypoint": "0x001048f8",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "htab_traverse": {
            "called": [
                "htab_traverse"
            ],
            "calling": [
                "FUN_00115d70",
                "FUN_0010554f"
            ],
            "code": "\nvoid htab_traverse(void)\n\n{\n  htab_traverse();\n  return;\n}\n\n",
            "current_name": "htab_traverse",
            "entrypoint": "0x00104580",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "lseek": {
            "called": [
                "lseek"
            ],
            "calling": [
                "FUN_00115a90"
            ],
            "code": "\n\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = lseek(__fd,__offset,__whence);\n  return _Var1;\n}\n\n",
            "current_name": "lseek",
            "entrypoint": "0x001042e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "malloc": {
            "called": [
                "malloc"
            ],
            "calling": [
                "FUN_0010ee3f",
                "FUN_00116b90"
            ],
            "code": "\n\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(__size);\n  return pvVar1;\n}\n\n",
            "current_name": "malloc",
            "entrypoint": "0x001045c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "memcmp": {
            "called": [
                "memcmp"
            ],
            "calling": [
                "FUN_00116852",
                "FUN_0011a1b0"
            ],
            "code": "\n\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = memcmp(__s1,__s2,__n);\n  return iVar1;\n}\n\n",
            "current_name": "memcmp",
            "entrypoint": "0x00104420",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "memcpy": {
            "called": [
                "memcpy"
            ],
            "calling": [
                "FUN_0011a480",
                "FUN_00116b90"
            ],
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "memcpy",
            "entrypoint": "0x00104540",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "memmove": {
            "called": [
                "memmove"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "memmove",
            "entrypoint": "0x001046f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "memset": {
            "called": [
                "memset"
            ],
            "calling": [
                "FUN_00119f70"
            ],
            "code": "\n\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memset(__s,__c,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "memset",
            "entrypoint": "0x00104360",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "mkdtemp": {
            "called": [
                "mkdtemp"
            ],
            "calling": [
                "FUN_0011a0e0"
            ],
            "code": "\n\n\nchar * mkdtemp(char *__template)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = mkdtemp(__template);\n  return pcVar1;\n}\n\n",
            "current_name": "mkdtemp",
            "entrypoint": "0x00104670",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "mkstemp": {
            "called": [
                "mkstemp"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\n\n\nint mkstemp(char *__template)\n\n{\n  int iVar1;\n  \n  iVar1 = mkstemp(__template);\n  return iVar1;\n}\n\n",
            "current_name": "mkstemp",
            "entrypoint": "0x00104640",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "mkstemps": {
            "called": [
                "mkstemps"
            ],
            "calling": [
                "FUN_001199d0"
            ],
            "code": "\n\n\nint mkstemps(char *__template,int __suffixlen)\n\n{\n  int iVar1;\n  \n  iVar1 = mkstemps(__template,__suffixlen);\n  return iVar1;\n}\n\n",
            "current_name": "mkstemps",
            "entrypoint": "0x00104030",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "open": {
            "called": [
                "open"
            ],
            "calling": [
                "FUN_00115a90"
            ],
            "code": "\n\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = open(__file,__oflag);\n  return iVar1;\n}\n\n",
            "current_name": "open",
            "entrypoint": "0x00104730",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "printf": {
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_00119970",
                "FUN_00104ea2",
                "FUN_001199d0",
                "FUN_00107976",
                "FUN_00104943",
                "FUN_00119f70"
            ],
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n",
            "current_name": "printf",
            "entrypoint": "0x001042a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "putc": {
            "called": [
                "putc"
            ],
            "calling": [
                "FUN_00119e70",
                "FUN_00104943"
            ],
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "putc",
            "entrypoint": "0x00104480",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "qsort": {
            "called": [
                "qsort"
            ],
            "calling": [
                "FUN_00116852",
                "FUN_001086af",
                "FUN_0010554f"
            ],
            "code": "\n\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n  qsort(__base,__nmemb,__size,__compar);\n  return;\n}\n\n",
            "current_name": "qsort",
            "entrypoint": "0x00104140",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "read": {
            "called": [
                "read"
            ],
            "calling": [
                "FUN_00115a90"
            ],
            "code": "\n\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = read(__fd,__buf,__nbytes);\n  return sVar1;\n}\n\n",
            "current_name": "read",
            "entrypoint": "0x00104410",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "rmdir": {
            "called": [
                "rmdir"
            ],
            "calling": [
                "FUN_00104ea2",
                "FUN_00114b84"
            ],
            "code": "\n\n\nint rmdir(char *__path)\n\n{\n  int iVar1;\n  \n  iVar1 = rmdir(__path);\n  return iVar1;\n}\n\n",
            "current_name": "rmdir",
            "entrypoint": "0x00104230",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "setlocale": {
            "called": [
                "setlocale"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = setlocale(__category,__locale);\n  return pcVar1;\n}\n\n",
            "current_name": "setlocale",
            "entrypoint": "0x00104680",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "sprintf": {
            "called": [
                "sprintf"
            ],
            "calling": [
                "FUN_0010a2b9",
                "FUN_0010b800",
                "FUN_0010e9a0",
                "FUN_00109dfe",
                "FUN_0010e453",
                "FUN_0010a377",
                "FUN_0010eafe",
                "FUN_0010abdd",
                "FUN_00109cf4",
                "FUN_0010e6a8",
                "FUN_0010ab4d",
                "FUN_0010e5db",
                "FUN_0010e7c2",
                "FUN_0010ae0e",
                "FUN_0010b948",
                "FUN_0010e8a9",
                "FUN_0010a424",
                "FUN_0010ba08",
                "FUN_0010aa53",
                "FUN_0010e918",
                "FUN_00109d97",
                "FUN_0010a69a",
                "FUN_0010a83e",
                "FUN_00109e76",
                "FUN_0010ee3f",
                "FUN_001125fa",
                "FUN_0010a77a",
                "FUN_0010a0e9",
                "FUN_0010a181",
                "FUN_0010e842",
                "FUN_0010ebb0",
                "FUN_00109ed3",
                "FUN_0010a94e"
            ],
            "code": "\n\n\nint sprintf(char *__s,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = sprintf(__s,__format);\n  return iVar1;\n}\n\n",
            "current_name": "sprintf",
            "entrypoint": "0x001047e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "stat": {
            "called": [
                "stat"
            ],
            "calling": [
                "FUN_0011283f",
                "FUN_00113f50",
                "FUN_00104ea2",
                "FUN_00116b90"
            ],
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n",
            "current_name": "stat",
            "entrypoint": "0x001044f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strcasecmp": {
            "called": [
                "strcasecmp"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\n\n\nint strcasecmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcasecmp(__s1,__s2);\n  return iVar1;\n}\n\n",
            "current_name": "strcasecmp",
            "entrypoint": "0x00104080",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strcat": {
            "called": [
                "strcat"
            ],
            "calling": [
                "FUN_0010ee3f",
                "FUN_00115530",
                "FUN_0010ae0e"
            ],
            "code": "\n\n\nchar * strcat(char *__dest,char *__src)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strcat(__dest,__src);\n  return pcVar1;\n}\n\n",
            "current_name": "strcat",
            "entrypoint": "0x001047c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strchr": {
            "called": [
                "strchr"
            ],
            "calling": [
                "FUN_0010ee3f",
                "FUN_00116b90",
                "FUN_0011173a",
                "FUN_00114c80",
                "FUN_00104ad6"
            ],
            "code": "\n\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strchr(__s,__c);\n  return pcVar1;\n}\n\n",
            "current_name": "strchr",
            "entrypoint": "0x00104290",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strcmp": {
            "called": [
                "strcmp"
            ],
            "calling": [
                "FUN_0010b0fa",
                "FUN_00115b70",
                "FUN_00114190",
                "FUN_0010c7a0",
                "FUN_0010ee3f",
                "FUN_00108c86",
                "FUN_0010922b",
                "FUN_00108898",
                "FUN_0011173a",
                "FUN_00115530",
                "FUN_0010554f",
                "FUN_0010afd5",
                "FUN_0010d559",
                "FUN_00116b90",
                "FUN_0010914e",
                "FUN_0010c6be",
                "FUN_00115f50",
                "FUN_00104943"
            ],
            "code": "\n\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcmp(__s1,__s2);\n  return iVar1;\n}\n\n",
            "current_name": "strcmp",
            "entrypoint": "0x00104470",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strcpy": {
            "called": [
                "strcpy"
            ],
            "calling": [
                "FUN_0010a424",
                "FUN_0010ee3f",
                "FUN_0011378f",
                "FUN_00116b90",
                "FUN_00115530",
                "FUN_001199d0",
                "FUN_0010554f",
                "FUN_0010ae0e"
            ],
            "code": "\n\n\nchar * strcpy(char *__dest,char *__src)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strcpy(__dest,__src);\n  return pcVar1;\n}\n\n",
            "current_name": "strcpy",
            "entrypoint": "0x00104100",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strdup": {
            "called": [
                "strdup"
            ],
            "calling": [
                "FUN_00108d9a"
            ],
            "code": "\n\n\nchar * strdup(char *__s)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strdup(__s);\n  return pcVar1;\n}\n\n",
            "current_name": "strdup",
            "entrypoint": "0x00104880",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strerror": {
            "called": [
                "strerror"
            ],
            "calling": [
                "FUN_00104ea2",
                "FUN_0010543c",
                "FUN_00116b90",
                "FUN_00114690",
                "FUN_00108200",
                "FUN_001199d0",
                "FUN_00107880",
                "FUN_00104966",
                "FUN_0010882c",
                "FUN_00114460"
            ],
            "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strerror(__errnum);\n  return pcVar1;\n}\n\n",
            "current_name": "strerror",
            "entrypoint": "0x00104890",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strlen": {
            "called": [
                "strlen"
            ],
            "calling": [
                "FUN_00109bbb",
                "FUN_0010a2b9",
                "FUN_0010b800",
                "FUN_00108c86",
                "FUN_0010e9a0",
                "FUN_0010c95e",
                "FUN_0010e453",
                "FUN_0011173a",
                "FUN_0010a377",
                "FUN_0010eafe",
                "FUN_0010abdd",
                "FUN_0010e6a8",
                "FUN_001199d0",
                "FUN_0010ab4d",
                "FUN_0010e5db",
                "FUN_0010e7c2",
                "FUN_0010ae0e",
                "FUN_0010d559",
                "FUN_0010e8a9",
                "FUN_0010a424",
                "FUN_0010ba08",
                "FUN_0010aa53",
                "FUN_00116b90",
                "FUN_0010e918",
                "FUN_0010e2f0",
                "FUN_0010a69a",
                "FUN_0010a83e",
                "FUN_0010b0fa",
                "FUN_0010ee3f",
                "FUN_00115530",
                "FUN_00113ede",
                "FUN_001125fa",
                "FUN_0010a77a",
                "FUN_00104ad6",
                "FUN_0010554f",
                "FUN_0010a0e9",
                "FUN_0010a181",
                "FUN_00113fb0",
                "FUN_0010d21c",
                "FUN_0011378f",
                "FUN_0010e842",
                "FUN_0010ebb0",
                "FUN_00109ed3",
                "FUN_0010a94e",
                "FUN_00104943"
            ],
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n",
            "current_name": "strlen",
            "entrypoint": "0x00104270",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strncasecmp": {
            "called": [
                "strncasecmp"
            ],
            "calling": [
                "FUN_00116b90",
                "FUN_00104ad6"
            ],
            "code": "\n\n\nint strncasecmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = strncasecmp(__s1,__s2,__n);\n  return iVar1;\n}\n\n",
            "current_name": "strncasecmp",
            "entrypoint": "0x001045d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strncmp": {
            "called": [
                "strncmp"
            ],
            "calling": [
                "FUN_0010b0fa",
                "FUN_00113fb0",
                "FUN_0010ee3f"
            ],
            "code": "\n\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = strncmp(__s1,__s2,__n);\n  return iVar1;\n}\n\n",
            "current_name": "strncmp",
            "entrypoint": "0x001040e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strncpy": {
            "called": [
                "strncpy"
            ],
            "calling": [
                "FUN_00116b90",
                "FUN_00104ad6"
            ],
            "code": "\n\n\nchar * strncpy(char *__dest,char *__src,size_t __n)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strncpy(__dest,__src,__n);\n  return pcVar1;\n}\n\n",
            "current_name": "strncpy",
            "entrypoint": "0x001040d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strnlen": {
            "called": [
                "strnlen"
            ],
            "calling": [
                "FUN_0011a480"
            ],
            "code": "\n\n\nsize_t strnlen(char *__string,size_t __maxlen)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strnlen(__string,__maxlen);\n  return sVar1;\n}\n\n",
            "current_name": "strnlen",
            "entrypoint": "0x00104380",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strrchr": {
            "called": [
                "strrchr"
            ],
            "calling": [
                "FUN_00114cf0"
            ],
            "code": "\n\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strrchr(__s,__c);\n  return pcVar1;\n}\n\n",
            "current_name": "strrchr",
            "entrypoint": "0x001042c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strspn": {
            "called": [
                "strspn"
            ],
            "calling": [
                "FUN_0010ee3f"
            ],
            "code": "\n\n\nsize_t strspn(char *__s,char *__accept)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strspn(__s,__accept);\n  return sVar1;\n}\n\n",
            "current_name": "strspn",
            "entrypoint": "0x001043e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strstr": {
            "called": [
                "strstr"
            ],
            "calling": [
                "FUN_0010ee3f",
                "FUN_0010d21c"
            ],
            "code": "\n\n\nchar * strstr(char *__haystack,char *__needle)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strstr(__haystack,__needle);\n  return pcVar1;\n}\n\n",
            "current_name": "strstr",
            "entrypoint": "0x001048c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strtod": {
            "called": [
                "strtod"
            ],
            "calling": [
                "FUN_0011173a"
            ],
            "code": "\n\n\ndouble strtod(char *__nptr,char **__endptr)\n\n{\n  double dVar1;\n  \n  dVar1 = strtod(__nptr,__endptr);\n  return dVar1;\n}\n\n",
            "current_name": "strtod",
            "entrypoint": "0x00104170",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strtol": {
            "called": [
                "strtol"
            ],
            "calling": [
                "FUN_0010d559",
                "FUN_0010ee3f",
                "FUN_00116b90",
                "FUN_0011173a",
                "FUN_00104943"
            ],
            "code": "\n\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n  long lVar1;\n  \n  lVar1 = strtol(__nptr,__endptr,__base);\n  return lVar1;\n}\n\n",
            "current_name": "strtol",
            "entrypoint": "0x00104510",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strtoul": {
            "called": [
                "strtoul"
            ],
            "calling": [
                "FUN_00116b90",
                "FUN_00109a32"
            ],
            "code": "\n\n\nulong strtoul(char *__nptr,char **__endptr,int __base)\n\n{\n  ulong uVar1;\n  \n  uVar1 = strtoul(__nptr,__endptr,__base);\n  return uVar1;\n}\n\n",
            "current_name": "strtoul",
            "entrypoint": "0x00104790",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "textdomain": {
            "called": [
                "textdomain"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n",
            "current_name": "textdomain",
            "entrypoint": "0x001041d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "thunk_FUN_0010e439": {
            "additional_data": {
                "0x210": {
                    "offset": 1
                },
                "FUN_0010e2f0": {
                    "another_function": 1,
                    "call_another_function": 1,
                    "call_function": 2,
                    "call_other_function": 1,
                    "call_sub_function": 1,
                    "call_subfunction": 1,
                    "execute_function": 1,
                    "invoke_function": 1,
                    "invoke_sub_function": 1,
                    "perform_action": 1,
                    "perform_operation": 3,
                    "perform_update": 1
                },
                "param_1": {
                    "base_address": 17,
                    "data_ptr": 3,
                    "function_address": 1,
                    "input_value": 1,
                    "memory_address": 1,
                    "object_address": 4,
                    "param_address": 1,
                    "pointer": 1,
                    "struct_ptr": 1,
                    "target_address": 1
                },
                "param_2": {
                    "data": 1,
                    "function_value": 1,
                    "new_param": 2,
                    "new_param_2": 1,
                    "new_param_value": 1,
                    "new_value": 7,
                    "param_to_set": 1,
                    "param_value": 4,
                    "parameter_value": 1,
                    "value": 11,
                    "value_to_store": 1
                },
                "param_3": {
                    "param_3": 1
                },
                "thunk_FUN_0010e439": {
                    "assign_parameter_and_call_function": 1,
                    "set_function_parameter": 1,
                    "set_param_2": 1,
                    "set_param_and_call": 2,
                    "set_param_and_call_func": 1,
                    "set_param_and_call_function": 8,
                    "set_param_and_invoke_function": 1,
                    "set_param_value": 1,
                    "set_parameter_and_call_function": 3,
                    "set_value_and_call_function": 1,
                    "store_param_and_call_fun_0010e2f0": 2,
                    "store_param_and_call_function": 1,
                    "update_data_and_call_function": 2,
                    "update_function_parameter": 1,
                    "update_param_and_call": 1,
                    "update_param_and_call_function": 1,
                    "update_param_value": 2,
                    "update_value": 1
                }
            },
            "called": [
                "FUN_0010e439"
            ],
            "calling": [
                "FUN_0011378f"
            ],
            "code": "\nvoid set_param_and_call_function_thunk_0010e439(long base_address,undefined8 value)\n\n{\n  *(undefined8 *)(base_address + 0x210) = value;\n  FUN_0010e2f0(base_address,0x84,0,0,value);\n  return;\n}\n\n",
            "current_name": "set_param_and_call_function_thunk_0010e439",
            "entrypoint": "0x0010e451",
            "imported": false,
            "improved": true,
            "renaming": {
                "param_1": "base_address",
                "param_2": "value",
                "thunk_FUN_0010e439": "set_param_and_call_function_thunk_0010e439"
            },
            "skipped": false,
            "tags": []
        },
        "unlink": {
            "called": [
                "unlink"
            ],
            "calling": [
                "FUN_00104ea2",
                "FUN_00108200",
                "FUN_001199d0"
            ],
            "code": "\n\n\nint unlink(char *__name)\n\n{\n  int iVar1;\n  \n  iVar1 = unlink(__name);\n  return iVar1;\n}\n\n",
            "current_name": "unlink",
            "entrypoint": "0x001040c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "unlink_if_ordinary": {
            "called": [
                "unlink_if_ordinary"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nvoid unlink_if_ordinary(void)\n\n{\n  unlink_if_ordinary();\n  return;\n}\n\n",
            "current_name": "unlink_if_ordinary",
            "entrypoint": "0x00104610",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "utimensat": {
            "called": [
                "utimensat"
            ],
            "calling": [
                "FUN_0011a350"
            ],
            "code": "\n\n\nint utimensat(int __fd,char *__path,timespec *__times,int __flags)\n\n{\n  int iVar1;\n  \n  iVar1 = utimensat(__fd,__path,__times,__flags);\n  return iVar1;\n}\n\n",
            "current_name": "utimensat",
            "entrypoint": "0x00104060",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "vfprintf": {
            "called": [
                "vfprintf"
            ],
            "calling": [
                "FUN_00119e70",
                "FUN_001126c0"
            ],
            "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 = vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n",
            "current_name": "vfprintf",
            "entrypoint": "0x00104770",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "write": {
            "called": [
                "write"
            ],
            "calling": [
                "FUN_00115a90"
            ],
            "code": "\n\n\nssize_t write(int __fd,void *__buf,size_t __n)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = write(__fd,__buf,__n);\n  return sVar1;\n}\n\n",
            "current_name": "write",
            "entrypoint": "0x001041c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xcalloc": {
            "called": [
                "xcalloc"
            ],
            "calling": [
                "FUN_001163d0"
            ],
            "code": "\nvoid xcalloc(void)\n\n{\n  xcalloc();\n  return;\n}\n\n",
            "current_name": "xcalloc",
            "entrypoint": "0x00104918",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xexit": {
            "called": [
                "xexit"
            ],
            "calling": [
                "FUN_00119dd0",
                "FUN_00115dc0",
                "FUN_00116030",
                "FUN_001083b7",
                "FUN_00116b90"
            ],
            "code": "\nvoid xexit(void)\n\n{\n                    \n  xexit();\n}\n\n",
            "current_name": "xexit",
            "entrypoint": "0x00104760",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xmalloc": {
            "called": [
                "xmalloc"
            ],
            "calling": [
                "FUN_00114190",
                "FUN_00104ea2",
                "FUN_0010c05d",
                "FUN_00108c86",
                "FUN_0010c139",
                "FUN_0011173a",
                "FUN_0010a377",
                "FUN_0010eafe",
                "FUN_00114c80",
                "FUN_001199d0",
                "FUN_00113da9",
                "FUN_00107880",
                "FUN_0010ae0e",
                "FUN_00113d6e",
                "FUN_001163d0",
                "FUN_0010aa53",
                "FUN_00113bfa",
                "FUN_0010c6be",
                "FUN_0010bf86",
                "FUN_00114d60",
                "FUN_0010ee3f",
                "FUN_00115530",
                "FUN_0010da0b",
                "FUN_0010a77a",
                "FUN_0010a0e9",
                "FUN_0010e07c",
                "FUN_00114460",
                "FUN_0010d882",
                "FUN_00109a0b",
                "FUN_0011378f",
                "FUN_0010bbd3",
                "FUN_0010c218",
                "FUN_0010ebb0",
                "FUN_00116110",
                "FUN_00112894",
                "FUN_00108d9a",
                "FUN_00109b52",
                "FUN_0010a2b9",
                "FUN_00113b98",
                "FUN_00112925",
                "FUN_00116852",
                "FUN_0010c7a0",
                "FUN_0010bc80",
                "FUN_0010e9a0",
                "FUN_0010e453",
                "FUN_0010e6a8",
                "FUN_0010ab4d",
                "FUN_0010afd5",
                "FUN_0010e5db",
                "FUN_0010e7c2",
                "FUN_00113e23",
                "FUN_00108f08",
                "FUN_0010e8a9",
                "FUN_0011a480",
                "FUN_0010a424",
                "FUN_0010ba08",
                "FUN_00114cf0",
                "FUN_0010bd62",
                "FUN_00116b90",
                "FUN_0010e918",
                "FUN_0010a69a",
                "FUN_0010a83e",
                "FUN_00116030",
                "FUN_001125fa",
                "FUN_00113ce0",
                "FUN_00104ad6",
                "FUN_0010554f",
                "FUN_0010a181",
                "FUN_0010be88",
                "FUN_00109022",
                "FUN_0010e842",
                "FUN_0010b6ea",
                "FUN_00109ed3",
                "FUN_0010dac0",
                "FUN_00113c43",
                "FUN_0010a94e",
                "FUN_00112904"
            ],
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n",
            "current_name": "xmalloc",
            "entrypoint": "0x00104390",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xmalloc_set_program_name": {
            "called": [
                "xmalloc_set_program_name"
            ],
            "calling": [
                "FUN_00116b90"
            ],
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n",
            "current_name": "xmalloc_set_program_name",
            "entrypoint": "0x001043b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xrealloc": {
            "called": [
                "xrealloc"
            ],
            "calling": [
                "FUN_00109c2e",
                "FUN_0010ee3f",
                "FUN_0011173a",
                "FUN_0010abdd",
                "FUN_0010ab4d",
                "FUN_0010e07c",
                "FUN_00119f70",
                "FUN_00114dc7",
                "FUN_00109be3",
                "FUN_0010aa53",
                "FUN_00116b90",
                "FUN_0010e2f0",
                "FUN_0010b6ea",
                "FUN_00109ed3",
                "FUN_0010dac0",
                "FUN_0010d7d4"
            ],
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n",
            "current_name": "xrealloc",
            "entrypoint": "0x001042b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xstrdup": {
            "called": [
                "xstrdup"
            ],
            "calling": [
                "FUN_00109b52",
                "FUN_00104ea2",
                "FUN_00116b90",
                "FUN_0011173a",
                "FUN_001088ae",
                "FUN_0010554f"
            ],
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n",
            "current_name": "xstrdup",
            "entrypoint": "0x001043d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_00104020",
            "FUN_00104920",
            "FUN_00104943",
            "FUN_00104966",
            "FUN_00104a35",
            "FUN_00104ad6",
            "FUN_00104bba",
            "FUN_00104c36",
            "FUN_00104cc1",
            "FUN_00104d1c",
            "FUN_00104d25",
            "FUN_00104ea2",
            "FUN_001052a2",
            "FUN_001053b5",
            "FUN_001053d5",
            "FUN_0010540e",
            "FUN_0010543c",
            "FUN_001054af",
            "FUN_0010551d",
            "FUN_0010554f",
            "FUN_00105828",
            "FUN_00108072",
            "FUN_0010808f",
            "FUN_00108179",
            "FUN_001081e9",
            "FUN_00108200",
            "FUN_00108237",
            "FUN_0010827b",
            "FUN_0010829e",
            "FUN_001082b3",
            "FUN_001082c3",
            "FUN_001082df",
            "FUN_00108375",
            "FUN_001083b7",
            "FUN_001083de",
            "FUN_00108466",
            "FUN_0010847a",
            "FUN_001086af",
            "FUN_0010870e",
            "FUN_0010871c",
            "FUN_0010875d",
            "FUN_001087da",
            "FUN_001087fd",
            "FUN_00108800",
            "FUN_00108808",
            "FUN_0010882c",
            "FUN_00108863",
            "FUN_00108898",
            "FUN_001088ae",
            "FUN_00108916",
            "FUN_00108a2a",
            "FUN_00108b3e",
            "FUN_00108c86",
            "FUN_00108d9a",
            "FUN_00108e76",
            "FUN_00108ea1",
            "FUN_00108f05",
            "FUN_00108f08",
            "FUN_00108fb9",
            "FUN_00108fe8",
            "FUN_00109022",
            "FUN_0010911f",
            "FUN_0010914e",
            "FUN_0010922b",
            "FUN_00109a0b",
            "FUN_00109a32",
            "FUN_00109ab1",
            "FUN_00109b2f",
            "FUN_00109b52",
            "FUN_00109bbb",
            "FUN_00109be3",
            "FUN_00109c2e",
            "FUN_00109cf4",
            "FUN_00109d3e",
            "FUN_00109d5c",
            "FUN_00109d97",
            "FUN_00109dfe",
            "FUN_00109e76",
            "FUN_00109ed3",
            "FUN_0010a083",
            "FUN_0010a0a0",
            "FUN_0010a0bd",
            "FUN_0010a0d3",
            "FUN_0010a0e9",
            "FUN_0010a181",
            "FUN_0010a2b9",
            "FUN_0010a377",
            "FUN_0010a424",
            "FUN_0010a69a",
            "FUN_0010a77a",
            "FUN_0010a83e",
            "FUN_0010a94e",
            "FUN_0010aa53",
            "FUN_0010ab4d",
            "FUN_0010abdd",
            "FUN_0010add5",
            "FUN_0010adf2",
            "FUN_0010ae0e",
            "FUN_0010afd5",
            "FUN_0010b0fa",
            "FUN_0010b6ea",
            "FUN_0010b800",
            "FUN_0010b948",
            "FUN_0010ba08",
            "FUN_0010bb52",
            "FUN_0010bba1",
            "FUN_0010bbd3",
            "FUN_0010bc80",
            "FUN_0010bd62",
            "FUN_0010be1a",
            "FUN_0010be88",
            "FUN_0010bf20",
            "FUN_0010bf86",
            "FUN_0010c05d",
            "FUN_0010c139",
            "FUN_0010c1c6",
            "FUN_0010c218",
            "FUN_0010c2d2",
            "FUN_0010c6be",
            "FUN_0010c7a0",
            "FUN_0010c892",
            "FUN_0010c95e",
            "FUN_0010d21c",
            "FUN_0010d559",
            "FUN_0010d7d4",
            "FUN_0010d882",
            "FUN_0010da0b",
            "FUN_0010dac0",
            "FUN_0010e07c",
            "FUN_0010e2f0",
            "FUN_0010e439",
            "thunk_FUN_0010e439",
            "FUN_0010e453",
            "FUN_0010e5db",
            "FUN_0010e6a8",
            "FUN_0010e7c2",
            "FUN_0010e842",
            "FUN_0010e8a9",
            "FUN_0010e918",
            "FUN_0010e9a0",
            "FUN_0010eafe",
            "FUN_0010ebb0",
            "FUN_0010ec73",
            "FUN_0010ed2c",
            "FUN_0010edb4",
            "FUN_0011173a",
            "FUN_00112502",
            "FUN_0011256b",
            "FUN_001125fa",
            "FUN_001126c0",
            "FUN_0011283f",
            "FUN_00112894",
            "FUN_00112904",
            "FUN_00112925",
            "FUN_00112996",
            "FUN_001129f4",
            "FUN_00112a33",
            "FUN_00112b6e",
            "FUN_00112c1f",
            "FUN_001135a5",
            "FUN_0011378f",
            "FUN_00113a4d",
            "FUN_00113b1e",
            "FUN_00113b4a",
            "FUN_00113b71",
            "FUN_00113b98",
            "FUN_00113bfa",
            "FUN_00113c43",
            "FUN_00113cb9",
            "FUN_00113ce0",
            "FUN_00113d3a",
            "FUN_00113d6e",
            "FUN_00113da9",
            "FUN_00113df2",
            "FUN_00113dfe",
            "FUN_00113e17",
            "FUN_00113e23",
            "FUN_00113e5e",
            "FUN_00113ede",
            "FUN_00113f20",
            "FUN_00113f50",
            "FUN_00113fb0",
            "FUN_00113fe0",
            "FUN_00114190",
            "FUN_00114460",
            "FUN_00114690",
            "FUN_00114b84",
            "FUN_00114c20",
            "FUN_00114c80",
            "FUN_00114cf0",
            "FUN_00114d50",
            "FUN_00114d60",
            "FUN_00114dc7",
            "FUN_00114e00",
            "FUN_00115530",
            "FUN_00115970",
            "FUN_001159d0",
            "FUN_00115a90",
            "FUN_00115b70",
            "FUN_00115d00",
            "FUN_00115d70",
            "FUN_00115dc0",
            "FUN_00115f30",
            "FUN_00115f50",
            "FUN_00116030",
            "FUN_00116110",
            "FUN_001163d0",
            "FUN_00116490",
            "FUN_00116852",
            "FUN_00119940",
            "FUN_00119970",
            "FUN_001199d0",
            "FUN_00119dd0",
            "FUN_00119e70",
            "FUN_00119ed0",
            "FUN_00119f70",
            "FUN_0011a0e0",
            "FUN_0011a110",
            "FUN_0011a170",
            "FUN_0011a1b0",
            "FUN_0011a250",
            "FUN_0011a2e0",
            "FUN_0011a350",
            "FUN_0011a390",
            "FUN_0011a480"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 1235945
}