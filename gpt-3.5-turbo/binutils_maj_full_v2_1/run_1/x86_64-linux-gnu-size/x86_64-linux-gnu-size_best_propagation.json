{
    "functions": {
        "FUN_00102000": {
            "additional_data": {
                "": {
                    "": 1
                },
                "FUN_00102000": {
                    "initialize": 5,
                    "initialize_application": 1,
                    "initialize_global_monitor": 1,
                    "initialize_gmon": 1,
                    "initialize_monitoring": 3,
                    "initialize_profiler": 3,
                    "initialize_program": 15,
                    "start_monitoring": 1,
                    "start_program_execution": 1
                },
                "__gmon_start__": {
                    "__initialize_gmon": 1,
                    "initialize_monitor": 1,
                    "initialize_monitoring": 1,
                    "initialize_performance_measurement": 1,
                    "initialize_performance_monitor": 1,
                    "initialize_performance_monitoring": 2,
                    "initialize_profiler": 2,
                    "initialize_profiling": 2,
                    "monitor_program": 1,
                    "monitor_start": 1,
                    "performance_analysis_start": 1,
                    "start_global_monitor": 1,
                    "start_monitoring": 5,
                    "start_performance_measurement": 1,
                    "start_performance_monitor": 1,
                    "start_performance_monitoring": 3,
                    "start_profiling": 2
                },
                "void": {
                    "nothing_returned": 1
                }
            },
            "called": [
                "FUN_00108118"
            ],
            "calling": [],
            "code": "\nnothing_returned initialize_program_00102000(nothing_returned)\n\n{\n  start_monitoring();\n  return;\n}\n\n",
            "current_name": "initialize_program_00102000",
            "entrypoint": "0x00102000",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102000": "initialize_program_00102000",
                "__gmon_start__": "start_monitoring",
                "void": "nothing_returned"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102020": {
            "additional_data": {
                "DAT_": {
                    "unchanged": 1
                },
                "FUN_00102020": {
                    "call_indirect": 1,
                    "call_indirect_jump": 2,
                    "execute_dynamic_function": 1,
                    "execute_external_function": 1,
                    "execute_function": 2,
                    "execute_function_at_address": 3,
                    "execute_function_at_memory_address": 1,
                    "execute_function_indirectly": 1,
                    "execute_indirect_call": 2,
                    "execute_indirect_function": 4,
                    "execute_indirect_jump": 11,
                    "execute_jump_function": 1,
                    "execute_main_function": 1
                },
                "PTR_": {
                    "unchanged": 1
                },
                "PTR_00102020": {
                    "indirect_jump_pointer": 1
                },
                "PTR_UNDEFINED": {
                    "function_pointer": 1
                },
                "PTR_undefined": {
                    "function_address": 1,
                    "undefined_pointer_type": 1
                },
                "code": {
                    "function_pointer": 3,
                    "indirect_function": 2,
                    "indirect_function_pointer": 1
                },
                "undefined": {
                    "base_address": 1,
                    "function_address": 1,
                    "function_pointer": 4,
                    "indirect_address": 2,
                    "jump_address": 1,
                    "jump_target_address": 1,
                    "target_address": 2
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_indirect_jump_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(function_pointer *)(function_pointer *)0x0)();\n  return;\n}\n\n",
            "current_name": "execute_indirect_jump_00102020",
            "entrypoint": "0x00102020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102020": "execute_indirect_jump_00102020",
                "code": "function_pointer",
                "undefined": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102030": {
            "called": [
                "FUN_00108000"
            ],
            "calling": [
                "FUN_00102a90",
                "FUN_0010278c",
                "FUN_0010281b",
                "FUN_00103130"
            ],
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n",
            "current_name": "FUN_00102030",
            "entrypoint": "0x00102030",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102040": {
            "called": [
                "FUN_00108008"
            ],
            "calling": [
                "FUN_00102a40",
                "FUN_00102fe0"
            ],
            "code": "\n\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = putchar(__c);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102040",
            "entrypoint": "0x00102040",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102050": {
            "called": [
                "FUN_00108018"
            ],
            "calling": [
                "FUN_00102360"
            ],
            "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  return piVar1;\n}\n\n",
            "current_name": "FUN_00102050",
            "entrypoint": "0x00102050",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102060": {
            "called": [
                "FUN_00108030"
            ],
            "calling": [
                "FUN_001024d2"
            ],
            "code": "\nvoid bfd_core_file_failing_command(void)\n\n{\n  bfd_core_file_failing_command();\n  return;\n}\n\n",
            "current_name": "FUN_00102060",
            "entrypoint": "0x00102060",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102070": {
            "called": [
                "FUN_00108038"
            ],
            "calling": [
                "FUN_00102a90",
                "FUN_001024d2"
            ],
            "code": "\n\n\nint puts(char *__s)\n\n{\n  int iVar1;\n  \n  iVar1 = puts(__s);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102070",
            "entrypoint": "0x00102070",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102080": {
            "called": [
                "FUN_00108040"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102080",
            "entrypoint": "0x00102080",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102090": {
            "called": [
                "FUN_00108048"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid bfd_set_default_target(void)\n\n{\n  bfd_set_default_target();\n  return;\n}\n\n",
            "current_name": "FUN_00102090",
            "entrypoint": "0x00102090",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020a0": {
            "called": [
                "FUN_00108050"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_001020a0",
            "entrypoint": "0x001020a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020b0": {
            "called": [
                "FUN_00108058"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n",
            "current_name": "FUN_001020b0",
            "entrypoint": "0x001020b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020c0": {
            "called": [
                "FUN_00108060"
            ],
            "calling": [
                "FUN_00102980"
            ],
            "code": "\nvoid bfd_openr(void)\n\n{\n  bfd_openr();\n  return;\n}\n\n",
            "current_name": "FUN_001020c0",
            "entrypoint": "0x001020c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020d0": {
            "called": [
                "FUN_00108068"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001020d0",
            "entrypoint": "0x001020d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020e0": {
            "called": [
                "FUN_00108078"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n",
            "current_name": "FUN_001020e0",
            "entrypoint": "0x001020e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020f0": {
            "called": [
                "FUN_00108080"
            ],
            "calling": [
                "FUN_0010278c",
                "FUN_0010281b",
                "FUN_00103130",
                "FUN_00102980",
                "FUN_0010274b",
                "FUN_00102360"
            ],
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n",
            "current_name": "FUN_001020f0",
            "entrypoint": "0x001020f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102100": {
            "called": [
                "FUN_00108088"
            ],
            "calling": [
                "FUN_00103c50",
                "FUN_00103130",
                "FUN_00102e50"
            ],
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_00102100",
            "entrypoint": "0x00102100",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102110": {
            "called": [
                "FUN_00108090"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n",
            "current_name": "FUN_00102110",
            "entrypoint": "0x00102110",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102120": {
            "called": [
                "FUN_00108098"
            ],
            "calling": [
                "FUN_00102710",
                "FUN_00102a90",
                "FUN_00102e90",
                "FUN_00103130",
                "FUN_00102fe0",
                "FUN_001024d2",
                "FUN_0010259c"
            ],
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102120",
            "entrypoint": "0x00102120",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102130": {
            "called": [
                "FUN_001080a0"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n",
            "current_name": "FUN_00102130",
            "entrypoint": "0x00102130",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102140": {
            "called": [
                "FUN_001080a8"
            ],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\n\n\nint fputs(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputs(__s,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102140",
            "entrypoint": "0x00102140",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102150": {
            "called": [
                "FUN_001080b8"
            ],
            "calling": [
                "FUN_0010281b"
            ],
            "code": "\nvoid bfd_target_list(void)\n\n{\n  bfd_target_list();\n  return;\n}\n\n",
            "current_name": "FUN_00102150",
            "entrypoint": "0x00102150",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102160": {
            "called": [
                "FUN_001080c0"
            ],
            "calling": [
                "FUN_001023b6",
                "FUN_00103130",
                "FUN_001024d2",
                "FUN_00103d20"
            ],
            "code": "\nvoid bfd_get_error(void)\n\n{\n  bfd_get_error();\n  return;\n}\n\n",
            "current_name": "FUN_00102160",
            "entrypoint": "0x00102160",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102170": {
            "called": [
                "FUN_001080c8"
            ],
            "calling": [
                "FUN_00102a90",
                "FUN_00103130"
            ],
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n",
            "current_name": "FUN_00102170",
            "entrypoint": "0x00102170",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102180": {
            "called": [
                "FUN_001080d0"
            ],
            "calling": [
                "FUN_001023b6"
            ],
            "code": "\nvoid bfd_set_error(void)\n\n{\n  bfd_set_error();\n  return;\n}\n\n",
            "current_name": "FUN_00102180",
            "entrypoint": "0x00102180",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102190": {
            "called": [
                "FUN_001080d8"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n",
            "current_name": "FUN_00102190",
            "entrypoint": "0x00102190",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021a0": {
            "called": [
                "FUN_001080e0"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n",
            "current_name": "FUN_001021a0",
            "entrypoint": "0x001021a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021b0": {
            "called": [
                "FUN_001080e8"
            ],
            "calling": [
                "FUN_0010278c",
                "FUN_0010281b"
            ],
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001021b0",
            "entrypoint": "0x001021b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021c0": {
            "called": [
                "FUN_001080f0"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid bfd_init(void)\n\n{\n  bfd_init();\n  return;\n}\n\n",
            "current_name": "FUN_001021c0",
            "entrypoint": "0x001021c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021d0": {
            "called": [
                "FUN_001080f8"
            ],
            "calling": [
                "FUN_00102a90",
                "FUN_00103130",
                "FUN_00102ee0"
            ],
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001021d0",
            "entrypoint": "0x001021d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021e0": {
            "called": [
                "FUN_00108108"
            ],
            "calling": [
                "FUN_0010278c",
                "FUN_0010281b",
                "FUN_00103130",
                "FUN_00102ee0",
                "FUN_0010274b"
            ],
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001021e0",
            "entrypoint": "0x001021e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021f0": {
            "called": [
                "FUN_00108110"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n",
            "current_name": "FUN_001021f0",
            "entrypoint": "0x001021f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102200": {
            "called": [
                "FUN_00108120"
            ],
            "calling": [
                "FUN_00103130",
                "FUN_00102980"
            ],
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102200",
            "entrypoint": "0x00102200",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102210": {
            "called": [
                "FUN_00108128"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n  long lVar1;\n  \n  lVar1 = strtol(__nptr,__endptr,__base);\n  return lVar1;\n}\n\n",
            "current_name": "FUN_00102210",
            "entrypoint": "0x00102210",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102220": {
            "called": [
                "FUN_00108130"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_00102220",
            "entrypoint": "0x00102220",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102230": {
            "called": [
                "FUN_00108138"
            ],
            "calling": [
                "FUN_0010278c",
                "FUN_00102ee0",
                "FUN_0010274b"
            ],
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102230",
            "entrypoint": "0x00102230",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102240": {
            "called": [
                "FUN_00108148"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102240",
            "entrypoint": "0x00102240",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102250": {
            "called": [
                "FUN_00108150"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = setlocale(__category,__locale);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_00102250",
            "entrypoint": "0x00102250",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102260": {
            "called": [
                "FUN_00108158"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n",
            "current_name": "FUN_00102260",
            "entrypoint": "0x00102260",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102270": {
            "called": [
                "FUN_00108160"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_00102270",
            "entrypoint": "0x00102270",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102280": {
            "called": [
                "FUN_00108168"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n",
            "current_name": "FUN_00102280",
            "entrypoint": "0x00102280",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102290": {
            "called": [
                "FUN_00108170"
            ],
            "calling": [
                "FUN_00102db0",
                "FUN_00102a90",
                "FUN_00103130"
            ],
            "code": "\nvoid xexit(void)\n\n{\n  xexit();\n  return;\n}\n\n",
            "current_name": "FUN_00102290",
            "entrypoint": "0x00102290",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022a0": {
            "called": [
                "FUN_00108178"
            ],
            "calling": [
                "FUN_001023b6"
            ],
            "code": "\nvoid bfd_close(void)\n\n{\n  bfd_close();\n  return;\n}\n\n",
            "current_name": "FUN_001022a0",
            "entrypoint": "0x001022a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022b0": {
            "called": [
                "FUN_00108180"
            ],
            "calling": [
                "FUN_00102ee0"
            ],
            "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 = vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001022b0",
            "entrypoint": "0x001022b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022c0": {
            "called": [
                "FUN_00108188"
            ],
            "calling": [
                "FUN_00102a40",
                "FUN_001024d2"
            ],
            "code": "\nvoid bfd_check_format_matches(void)\n\n{\n  bfd_check_format_matches();\n  return;\n}\n\n",
            "current_name": "FUN_001022c0",
            "entrypoint": "0x001022c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022d0": {
            "called": [
                "FUN_00108190"
            ],
            "calling": [
                "FUN_00103130",
                "FUN_00103d20"
            ],
            "code": "\nvoid bfd_errmsg(void)\n\n{\n  bfd_errmsg();\n  return;\n}\n\n",
            "current_name": "FUN_001022d0",
            "entrypoint": "0x001022d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022e0": {
            "called": [
                "FUN_00108198"
            ],
            "calling": [
                "FUN_00102710",
                "FUN_00102e90",
                "FUN_00102e50"
            ],
            "code": "\n\n\nint sprintf(char *__s,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = sprintf(__s,__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001022e0",
            "entrypoint": "0x001022e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022f0": {
            "called": [
                "FUN_001081a0"
            ],
            "calling": [
                "FUN_0010281b",
                "FUN_00103130"
            ],
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n",
            "current_name": "FUN_001022f0",
            "entrypoint": "0x001022f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102300": {
            "called": [
                "FUN_001081a8"
            ],
            "calling": [
                "FUN_00103130",
                "FUN_001024d2"
            ],
            "code": "\n\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fwrite(__ptr,__size,__n,__s);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_00102300",
            "entrypoint": "0x00102300",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102310": {
            "called": [
                "FUN_001081b0"
            ],
            "calling": [
                "FUN_00102a40",
                "FUN_00102980"
            ],
            "code": "\nvoid bfd_check_format(void)\n\n{\n  bfd_check_format();\n  return;\n}\n\n",
            "current_name": "FUN_00102310",
            "entrypoint": "0x00102310",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102320": {
            "called": [
                "FUN_001081b8"
            ],
            "calling": [
                "FUN_001023b6"
            ],
            "code": "\nvoid bfd_openr_next_archived_file(void)\n\n{\n  bfd_openr_next_archived_file();\n  return;\n}\n\n",
            "current_name": "FUN_00102320",
            "entrypoint": "0x00102320",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102330": {
            "called": [
                "FUN_001081c8"
            ],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\nvoid bfd_map_over_sections(void)\n\n{\n  bfd_map_over_sections();\n  return;\n}\n\n",
            "current_name": "FUN_00102330",
            "entrypoint": "0x00102330",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102340": {
            "called": [
                "FUN_001081d0"
            ],
            "calling": [
                "FUN_00102360"
            ],
            "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strerror(__errnum);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_00102340",
            "entrypoint": "0x00102340",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102350": {
            "called": [
                "FUN_001081e0"
            ],
            "calling": [
                "FUN_001030e0"
            ],
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n",
            "current_name": "FUN_00102350",
            "entrypoint": "0x00102350",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102360": {
            "additional_data": {
                "DAT_00107314": {
                    "file_error_code": 1,
                    "file_error_occured": 1,
                    "file_located": 1,
                    "flag_file_existence": 1
                },
                "FUN_00102360": {
                    "check_file_error": 1,
                    "check_file_existence": 5,
                    "file_locate_warning": 1,
                    "file_not_found_error": 2,
                    "find_file": 1,
                    "handle_error": 5,
                    "handle_file_error": 12,
                    "handle_file_not_found": 1,
                    "handle_file_not_found_error": 1,
                    "locate_and_warn_file": 1,
                    "read_file_warning": 1
                },
                "__errno_location": {
                    "get_errno_location": 1,
                    "get_error_pointer": 1
                },
                "dcgettext": {
                    "get_error_message": 1,
                    "get_localized_error_message": 1,
                    "get_localized_message": 1,
                    "get_localized_text": 1,
                    "get_translated_message": 1,
                    "get_translation": 1
                },
                "non_fatal": {
                    "display_error": 1,
                    "handle_non_fatal_error": 2,
                    "report_error": 4,
                    "report_non_fatal_error": 1
                },
                "piVar1": {
                    "errno_location": 3,
                    "errno_pointer": 1,
                    "errno_ptr": 14,
                    "error_code": 3,
                    "error_code_ptr": 1,
                    "error_indicator": 1,
                    "error_location": 2,
                    "error_pointer": 3,
                    "error_ptr": 3
                },
                "uVar2": {
                    "error_message": 27,
                    "error_msg": 4
                }
            },
            "called": [
                "FUN_00102340",
                "FUN_001020f0",
                "FUN_00102f40",
                "FUN_00102050"
            ],
            "calling": [
                "FUN_00102980"
            ],
            "code": "\nvoid handle_file_not_found_error_00102360(void)\n\n{\n  int *errno_ptr;\n  undefined8 error_message;\n  \n  errno_ptr = get_error_pointer();\n  if (*errno_ptr == 2) {\n    error_message = get_localized_error_message(0,\"\\'%s\\': No such file\",5);\n    report_error(error_message);\n  }\n  else {\n    strerror(*errno_ptr);\n    error_message = get_localized_error_message(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n    report_error(error_message);\n  }\n  DAT_00107314 = 1;\n  return;\n}\n\n",
            "current_name": "handle_file_not_found_error_00102360",
            "entrypoint": "0x00102360",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102360": "handle_file_not_found_error_00102360",
                "__errno_location": "get_error_pointer",
                "dcgettext": "get_localized_error_message",
                "non_fatal": "report_error",
                "piVar1": "errno_ptr",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001023b6": {
            "additional_data": {
                "BFD_ERROR": {
                    "bfd_error": 1
                },
                "BFD_FATAL": {
                    "bfd_fatal_error": 1
                },
                "FUN_001023b6": {
                    "analyze_archived_files": 1,
                    "extract_archived_files": 9,
                    "process_archived_files": 20
                },
                "FUN_00102a40": {
                    "display_bfd": 4
                },
                "FUN_00103d20": {
                    "bfd_close": 2,
                    "bfd_nonfatal": 1,
                    "bfd_set_error": 1
                },
                "bfd_close": {
                    "close_file": 1
                },
                "bfd_get_error": {
                    "get_bfd_error": 1
                },
                "bfd_nonfatal": {
                    "report_error": 1
                },
                "bfd_openr_next_archived_file": {
                    "get_next_archived_file": 1
                },
                "bfd_set_error": {
                    "set_bfd_error": 1
                },
                "cVar1": {
                    "close_error": 1,
                    "close_result": 7,
                    "close_status": 11,
                    "close_success": 8,
                    "success_flag": 1
                },
                "display_bfd": {
                    "show_file_information": 1
                },
                "iVar2": {
                    "bfd_error_code": 2,
                    "error_code": 22,
                    "error_status": 1
                },
                "lVar3": {
                    "archived_file": 1,
                    "archived_file_ptr": 1,
                    "current_bfd": 1,
                    "current_file": 14,
                    "current_file_handle": 4,
                    "current_file_ptr": 1,
                    "file_count": 1,
                    "file_handle": 5,
                    "file_index": 1
                },
                "lVar4": {
                    "prev_file_handle": 3,
                    "previous_archived_file": 1,
                    "previous_bfd": 1,
                    "previous_file": 15,
                    "previous_file_handle": 6,
                    "previous_file_index": 1,
                    "previous_file_ptr": 2
                },
                "param_1": {
                    "archived_files": 1,
                    "archived_files_list": 1,
                    "error_output": 1,
                    "unaff_rbx": 1
                },
                "unaff_RBX": {
                    "archive_files": 1,
                    "archived_files": 4,
                    "bfd_error_ptr": 1,
                    "bfd_file_handles": 1,
                    "bfd_handle": 3,
                    "bfd_handler": 1,
                    "bfd_options": 1,
                    "error_container": 1,
                    "error_handle": 1,
                    "error_message": 1,
                    "error_ptr": 1,
                    "file_error": 1,
                    "file_handles": 7,
                    "file_list": 1,
                    "file_ptr": 1,
                    "files_to_process": 1,
                    "output_file": 2
                }
            },
            "called": [
                "FUN_00102160",
                "FUN_00102a40",
                "FUN_001022a0",
                "FUN_00102180",
                "FUN_00102320",
                "FUN_00103d20"
            ],
            "calling": [
                "FUN_00102980"
            ],
            "code": "\nvoid process_archived_files_001023b6(void)\n\n{\n  char close_status;\n  int error_code;\n  long current_file;\n  undefined8 *file_handles;\n  long previous_file;\n  \n  current_file = 0;\n  do {\n    previous_file = current_file;\n    set_bfd_error(0);\n    current_file = get_next_archived_file();\n    if (current_file == 0) {\n      error_code = get_bfd_error();\n      if (error_code != 9) {\n        report_error(*file_handles);\n        DAT_00107314 = 2;\n      }\n      if (previous_file != 0) {\n        close_file(previous_file);\n      }\n      break;\n    }\n    show_file_information();\n  } while ((previous_file == 0) || (close_file(), previous_file != current_file));\n  close_status = close_file();\n  if (close_status == '\\0') {\n    report_error();\n    DAT_00107314 = 1;\n  }\n  return;\n}\n\n",
            "current_name": "process_archived_files_001023b6",
            "entrypoint": "0x001023b6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001023b6": "process_archived_files_001023b6",
                "bfd_close": "close_file",
                "bfd_get_error": "get_bfd_error",
                "bfd_nonfatal": "report_error",
                "bfd_openr_next_archived_file": "get_next_archived_file",
                "bfd_set_error": "set_bfd_error",
                "cVar1": "close_status",
                "display_bfd": "show_file_information",
                "iVar2": "error_code",
                "lVar3": "current_file",
                "lVar4": "previous_file",
                "unaff_RBX": "file_handles"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001024d2": {
            "additional_data": {
                "FUN_001024d2": {
                    "analyze_bfd_error": 1,
                    "analyze_binary": 1,
                    "check_bfd_error": 1,
                    "check_error_and_handle_formats": 1,
                    "handle_bfd_error": 13,
                    "handle_bfd_errors": 1,
                    "handle_bfd_format_check": 1,
                    "handle_bfd_format_error": 1,
                    "handle_error": 2,
                    "identify_error": 1,
                    "process_bfd": 1,
                    "process_bfd_error": 4,
                    "process_bfd_errors": 1,
                    "process_bfd_object": 1,
                    "process_core_file": 1
                },
                "FUN_0010278c": {
                    "handle_print_sizes": 1,
                    "print_error_codes": 1,
                    "print_error_message": 1,
                    "print_sizes": 2
                },
                "FUN_00102a90": {
                    "extract_format_arch": 1,
                    "handle_list_matching_formats": 1,
                    "list_matching_formats": 1,
                    "print_error_messages": 1
                },
                "FUN_00103d20": {
                    "get_failing_command": 1,
                    "handle_bfd_core_file_cmd": 1,
                    "handle_core_file": 1,
                    "print_failing_command": 1,
                    "print_invoked_command": 1
                },
                "_stdout": {
                    "output_stream": 1
                },
                "cVar1": {
                    "format_match": 3,
                    "format_match_result": 1,
                    "format_matched": 1,
                    "format_matches": 15,
                    "is_format_match": 2,
                    "is_format_matched": 1,
                    "is_format_matching": 2,
                    "is_format_valid": 3
                },
                "iVar2": {
                    "bfd_error": 2,
                    "bfd_error_code": 2,
                    "error": 4,
                    "error_code": 17
                },
                "lVar3": {
                    "core_file_cmd": 1,
                    "failing_cmd": 1,
                    "failing_command": 25
                },
                "list_matching_formats": {
                    "print_matching_formats": 1
                },
                "param_1": {
                    "command_ptr": 1,
                    "formats_list": 1
                },
                "param_7": {
                    "additional_info": 1,
                    "bfd_handle": 1,
                    "cmd_param": 1,
                    "command": 2,
                    "command_name": 1,
                    "file_formats": 2,
                    "file_name": 1,
                    "format": 5,
                    "format_descriptor": 1,
                    "format_list": 4,
                    "format_name": 3,
                    "format_options": 2,
                    "format_patterns": 1,
                    "formats": 3,
                    "input_binary": 1,
                    "matching_formats_array": 1
                },
                "unaff_RBX": {
                    "bfd_file": 1,
                    "bfd_handle": 10,
                    "bfd_object_ptr": 1,
                    "bfd_ptr": 3
                }
            },
            "called": [
                "FUN_00102070",
                "FUN_00102120",
                "FUN_00102160",
                "FUN_00102a90",
                "FUN_00102300",
                "FUN_0010278c",
                "FUN_00102060",
                "FUN_001022c0",
                "FUN_00103d20"
            ],
            "calling": [
                "FUN_00102a40"
            ],
            "code": "\n\n\nvoid handle_bfd_format_error_001024d2(void)\n\n{\n  char format_matches;\n  int error_code;\n  long failing_command;\n  undefined8 *bfd_handle;\n  undefined8 format;\n  \n  error_code = bfd_get_error();\n  if (error_code == 0xd) {\n    bfd_nonfatal(*bfd_handle);\n    print_matching_formats(format);\n    DAT_00107314 = 3;\n  }\n  else {\n    format_matches = bfd_check_format_matches();\n    if (format_matches == '\\0') {\n      bfd_nonfatal(*bfd_handle);\n      error_code = bfd_get_error();\n      if (error_code == 0xd) {\n        print_matching_formats(format);\n      }\n      DAT_00107314 = 3;\n    }\n    else {\n      print_sizes();\n      fwrite(\" (core file\",1,0xb,output_stream);\n      failing_command = bfd_core_file_failing_command();\n      if (failing_command != 0) {\n        printf(\" invoked as %s\",failing_command);\n      }\n      puts(\")\\n\");\n    }\n  }\n  return;\n}\n\n",
            "current_name": "handle_bfd_format_error_001024d2",
            "entrypoint": "0x001024d2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001024d2": "handle_bfd_format_error_001024d2",
                "_stdout": "output_stream",
                "cVar1": "format_matches",
                "iVar2": "error_code",
                "lVar3": "failing_command",
                "list_matching_formats": "print_matching_formats",
                "param_7": "format",
                "unaff_RBX": "bfd_handle"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010259c": {
            "additional_data": {
                "FUN_0010259c": {
                    "display_ex_string": 1,
                    "print_error_message": 2,
                    "print_ex": 1,
                    "print_ex_message": 2,
                    "print_ex_string": 22,
                    "print_message": 2,
                    "print_string_with_prefix": 1
                },
                "in_RAX": {
                    "error_message": 1,
                    "error_string": 1,
                    "ex_string": 11,
                    "ex_string_ptr": 5,
                    "input_string": 3,
                    "message": 1,
                    "message_pointer": 1,
                    "message_ptr": 1,
                    "string_address": 2,
                    "string_pointer": 2,
                    "string_ptr": 3
                }
            },
            "called": [
                "FUN_00102120"
            ],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\nvoid print_ex_string_0010259c(void)\n\n{\n  undefined8 *ex_string;\n  \n  printf(\" (ex %s)\",*ex_string);\n  return;\n}\n\n",
            "current_name": "print_ex_string_0010259c",
            "entrypoint": "0x0010259c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010259c": "print_ex_string_0010259c",
                "in_RAX": "ex_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001026ea": {
            "additional_data": {
                "FUN_001026ea": {
                    "initialize": 4,
                    "initialize_context": 1,
                    "initialize_data": 8,
                    "initialize_function": 5,
                    "initialize_global_data": 1,
                    "initialize_memory": 2,
                    "initialize_program": 1,
                    "initialize_registers": 2,
                    "initialize_return": 1,
                    "initialize_return_address": 1,
                    "initialize_return_value": 4,
                    "initialize_variables": 1
                },
                "in_RAX": {
                    "data": 1,
                    "function_return_value": 1,
                    "initial_value": 1,
                    "input": 2,
                    "input_return_value": 2,
                    "input_value": 9,
                    "return_address": 1,
                    "return_value": 10
                },
                "unaff_retaddr": {
                    "new_return_address": 1,
                    "return_address": 23,
                    "return_value": 1,
                    "unused_return_address": 1,
                    "unused_variable": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00103c50"
            ],
            "code": "\nundefined8 initialize_global_data_001026ea(void)\n\n{\n  undefined8 return_value;\n  undefined8 return_address;\n  \n  DAT_001072d8 = return_value;\n  return return_address;\n}\n\n",
            "current_name": "initialize_global_data_001026ea",
            "entrypoint": "0x001026ea",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001026ea": "initialize_global_data_001026ea",
                "in_RAX": "return_value",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001026f6": {
            "additional_data": {
                "FUN_001026f6": {
                    "display_formatted_value": 1,
                    "format_and_print": 2,
                    "format_and_print_hex_value": 1,
                    "format_and_print_number": 2,
                    "format_and_print_value": 2,
                    "format_print": 1,
                    "format_string_output": 1,
                    "print_formatted_number": 12,
                    "print_formatted_value": 9
                },
                "__format": {
                    "format_specifier": 1,
                    "format_string": 29,
                    "output_format": 1
                },
                "in_EAX": {
                    "format_option": 1,
                    "format_type": 4,
                    "input_value": 6,
                    "number": 2,
                    "number_base": 1,
                    "number_format": 2,
                    "number_type": 7,
                    "option": 1,
                    "output_mode": 1,
                    "value": 6
                }
            },
            "called": [],
            "calling": [
                "FUN_00102e50"
            ],
            "code": "\nvoid print_formatted_number_001026f6(void)\n\n{\n  int number_type;\n  char *format_string;\n  \n  format_string = \"0x%lx\";\n  if (number_type == 1) {\n    format_string = \"0%lo\";\n  }\n  sprintf(&stack0x00000000,format_string);\n  strlen(&stack0x00000000);\n  return;\n}\n\n",
            "current_name": "print_formatted_number_001026f6",
            "entrypoint": "0x001026f6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001026f6": "print_formatted_number_001026f6",
                "__format": "format_string",
                "in_EAX": "number_type"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102710": {
            "additional_data": {
                "FUN_00102710": {
                    "format_and_print_value": 1,
                    "print_formatted_number": 10,
                    "print_formatted_output": 7,
                    "print_formatted_value": 12,
                    "print_with_padding": 1
                },
                "__format": {
                    "format": 1,
                    "format_specifier": 5,
                    "format_string": 25
                },
                "in_EAX": {
                    "flag": 1,
                    "format_code": 1,
                    "format_option": 1,
                    "format_type": 1,
                    "input_code": 1,
                    "input_flag": 1,
                    "input_mode": 1,
                    "input_number": 4,
                    "input_value": 9,
                    "number_format_option": 1,
                    "number_format_specifier": 1,
                    "number_type": 4,
                    "status": 1,
                    "user_choice": 1,
                    "value": 2,
                    "value_type": 1
                },
                "unaff_EBX": {
                    "field_width": 18,
                    "padding": 1,
                    "padding_width": 2,
                    "width": 10
                }
            },
            "called": [
                "FUN_00102120",
                "FUN_001022e0"
            ],
            "calling": [
                "FUN_00102e90"
            ],
            "code": "\nvoid print_formatted_value_00102710(void)\n\n{\n  int input_value;\n  uint field_width;\n  char *format_string;\n  \n  format_string = \"0x%lx\";\n  if (input_value == 1) {\n    format_string = \"0%lo\";\n  }\n  sprintf(&stack0x00000000,format_string);\n  printf(\"%*s\",(ulong)field_width);\n  return;\n}\n\n",
            "current_name": "print_formatted_value_00102710",
            "entrypoint": "0x00102710",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102710": "print_formatted_value_00102710",
                "__format": "format_string",
                "in_EAX": "input_value",
                "unaff_EBX": "field_width"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010274a": {
            "called": [],
            "calling": [
                "FUN_00103cc0"
            ],
            "code": "\nvoid FUNC_0010274a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0010274a",
            "entrypoint": "0x0010274a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0010274a": "FUNC_0010274a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0010274b": {
            "additional_data": {
                "FUN_0010274b": {
                    "print_error": 2,
                    "print_error_info": 1,
                    "print_error_message": 27,
                    "print_unknown_error": 1
                },
                "_stderr": {
                    "standard_error": 1,
                    "stderr_stream": 1
                },
                "_stdout": {
                    "standard_output": 1,
                    "stdout_stream": 1
                },
                "dcgettext": {
                    "get_localized_message": 1
                },
                "uVar1": {
                    "error_message": 25,
                    "error_msg": 1,
                    "error_string": 2,
                    "error_text": 1,
                    "unknown_cause": 1
                },
                "unaff_RB": {
                    "error_flag": 1
                },
                "unaff_RBX": {
                    "error_cause": 1,
                    "error_code": 17,
                    "error_flag": 9,
                    "error_message_flag": 1,
                    "error_number": 1,
                    "error_status": 1
                },
                "unaff_retaddr": {
                    "return_address": 31
                }
            },
            "called": [
                "FUN_001021e0",
                "FUN_001020f0",
                "FUN_00102230"
            ],
            "calling": [
                "FUN_00103d20"
            ],
            "code": "\n\n\nvoid print_error_message_0010274b(void)\n\n{\n  undefined8 error_message;\n  long error_code;\n  undefined8 return_address;\n  \n  error_message = get_localized_message(0,\"cause of error unknown\",5);\n  fflush(stdout_stream);\n  if (error_code != 0) {\n    fprintf(standard_error,\"%s: %s: %s\\n\",DAT_00107350);\n    return;\n  }\n  fprintf(standard_error,\"%s: %s\\n\",DAT_00107350,error_message,return_address);\n  return;\n}\n\n",
            "current_name": "print_error_message_0010274b",
            "entrypoint": "0x0010274b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010274b": "print_error_message_0010274b",
                "_stderr": "standard_error",
                "_stdout": "stdout_stream",
                "dcgettext": "get_localized_message",
                "uVar1": "error_message",
                "unaff_RB": "error_flag",
                "unaff_RBX": "error_code",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010278c": {
            "additional_data": {
                "FUN_0010278c": {
                    "print_matching_formats": 31
                },
                "__format": {
                    "error_message_format": 1,
                    "format_message": 7,
                    "format_string": 17,
                    "message_format": 2
                },
                "_stderr": {
                    "error_stream": 1,
                    "standard_error": 3,
                    "stderr": 2
                },
                "_stdout": {
                    "standard_output": 3,
                    "stdout": 2
                },
                "dcgettext": {
                    "get_translated_string": 1
                },
                "fflush": {
                    "flush_output_buffer": 1
                },
                "fprintf": {
                    "print_formatted": 1,
                    "print_to_stderr": 1
                },
                "fputc": {
                    "write_char_to_stderr": 1,
                    "write_character": 1
                },
                "free": {
                    "deallocate": 1,
                    "free_memory": 1
                },
                "param_1": {
                    "format_list": 5,
                    "format_strings": 13,
                    "formats": 9,
                    "matching_formats": 4
                },
                "plVar2": {
                    "curr_format_string": 1,
                    "current_format": 20,
                    "current_format_string": 1,
                    "current_string": 2,
                    "format_ptr": 1,
                    "iterator": 1,
                    "string_iterator": 1
                },
                "uVar1": {
                    "current_locale": 2,
                    "data": 7,
                    "data_value": 4,
                    "default_format": 1,
                    "default_locale": 1,
                    "default_value": 1,
                    "language": 1,
                    "local_variable": 1,
                    "matching_formats": 3,
                    "matching_formats_message": 1,
                    "message": 1,
                    "user_data": 1
                }
            },
            "called": [
                "FUN_001021e0",
                "FUN_001021b0",
                "FUN_001020f0",
                "FUN_00102030",
                "FUN_00102230"
            ],
            "calling": [
                "FUN_001024d2"
            ],
            "code": "\n\n\nvoid print_matching_formats_0010278c(long *format_strings)\n\n{\n  undefined8 data;\n  char *format_string;\n  long *current_format;\n  \n  flush_output_buffer(standard_output);\n  data = DAT_00107350;\n  format_string = (char *)get_translated_string(0,\"%s: Matching formats:\",5);\n  print_to_stderr(standard_error,format_string,data);\n  for (current_format = format_strings; *current_format != 0; current_format = current_format + 1) {\n    print_to_stderr(standard_error,\" %s\");\n  }\n  deallocate(format_strings);\n  write_character(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_matching_formats_0010278c",
            "entrypoint": "0x0010278c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010278c": "print_matching_formats_0010278c",
                "__format": "format_string",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "dcgettext": "get_translated_string",
                "fflush": "flush_output_buffer",
                "fprintf": "print_to_stderr",
                "fputc": "write_character",
                "free": "deallocate",
                "param_1": "format_strings",
                "plVar2": "current_format",
                "uVar1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010281b": {
            "additional_data": {
                "FUN_0010281b": {
                    "display_section_sizes": 12,
                    "print_section_sizes": 18,
                    "print_stats": 1
                },
                "__ptr": {
                    "bfd_target_list": 1,
                    "target_list": 30
                },
                "bfd_target_list": {
                    "get_target_list": 1
                },
                "dcgettext": {
                    "get_localized_message": 1,
                    "get_message": 3,
                    "gettext": 1,
                    "translate_text": 1
                },
                "exit": {
                    "exit_program": 4,
                    "terminate": 1,
                    "terminate_program": 2
                },
                "fprintf": {
                    "print_formatted": 3,
                    "write_formatted": 4,
                    "write_formatted_output": 1,
                    "write_to_file": 1
                },
                "fputc": {
                    "print_char": 1,
                    "write_char": 1,
                    "write_char_to_file": 1,
                    "write_character": 5
                },
                "free": {
                    "deallocate_memory": 2,
                    "release_memory": 5
                },
                "lVar1": {
                    "default_format": 2,
                    "default_size": 2,
                    "default_style": 4,
                    "default_target": 2,
                    "default_target_name": 1,
                    "lang_id": 1,
                    "language": 2,
                    "language_code": 2,
                    "language_version": 4,
                    "section_size": 1,
                    "supported_targets": 3,
                    "target": 1,
                    "target_name": 4,
                    "target_string": 1
                },
                "param_1": {
                    "file": 5,
                    "output_file": 26
                },
                "param_2": {
                    "error_code": 1,
                    "exit_code": 30
                },
                "pcVar2": {
                    "message": 30,
                    "translation": 1
                },
                "plVar3": {
                    "current_target": 8,
                    "ptr": 9,
                    "ptr_target": 1,
                    "target": 7,
                    "target_pointer": 2,
                    "target_ptr": 4
                }
            },
            "called": [
                "FUN_001021e0",
                "FUN_001021b0",
                "FUN_001020f0",
                "FUN_00102030",
                "FUN_001022f0",
                "FUN_00102150"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid print_section_sizes_0010281b(FILE *output_file,int exit_code)\n\n{\n  long default_style;\n  char *message;\n  long *target_list;\n  long *ptr;\n  \n  default_style = DAT_00107350;\n  message = (char *)get_message(0,\"Usage: %s [option(s)] [file(s)]\\n\",5);\n  write_formatted(output_file,message,default_style);\n  message = (char *)get_message(0,\" Displays the sizes of sections inside binary files\\n\",5);\n  write_formatted(output_file,message);\n  message = (char *)get_message(0,\" If no input file(s) are specified, a.out is assumed\\n\",5);\n  write_formatted(output_file,message);\n  message = (char *)get_message(0,\n                             \" The options are:\\n  -A|-B|-G  --format={sysv|berkeley|gnu}  Select output style (default is %s)\\n  -o|-d|-x  --radix={8|10|16}         Display numbers in octal, decimal or hex\\n  -t        --totals                  Display the total sizes (Berkeley only)\\n  -f                                  Ignored.\\n            --common                  Display total size for *COM* syms\\n            --target=<bfdname>        Set the binary file format\\n            @<file>                   Read options from <file>\\n  -h|-H|-?  --help                    Display this information\\n  -v|-V     --version                 Display the program\\'s version\\n\\n\"\n                             ,5);\n  write_formatted(output_file,message,\"berkeley\");\n  default_style = DAT_00107350;\n  if (DAT_00107350 == 0) {\n    message = (char *)get_message(0,\"Supported targets:\",5);\n    write_formatted(output_file,message);\n  }\n  else {\n    message = (char *)get_message(0,\"%s: supported targets:\",5);\n    write_formatted(output_file,message,default_style);\n  }\n  target_list = (long *)get_target_list();\n  ptr = target_list;\n  while( true ) {\n    default_style = *ptr;\n    ptr = ptr + 1;\n    if (default_style == 0) break;\n    write_formatted(output_file,\" %s\");\n  }\n  write_character(10,output_file);\n  release_memory(target_list);\n  if (exit_code == 0) {\n    message = (char *)get_message(0,\"Report bugs to %s\\n\",5);\n    write_formatted(output_file,message,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  exit_program(exit_code);\n}\n\n",
            "current_name": "print_section_sizes_0010281b",
            "entrypoint": "0x0010281b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010281b": "print_section_sizes_0010281b",
                "__ptr": "target_list",
                "bfd_target_list": "get_target_list",
                "dcgettext": "get_message",
                "exit": "exit_program",
                "fprintf": "write_formatted",
                "fputc": "write_character",
                "free": "release_memory",
                "lVar1": "default_style",
                "param_1": "output_file",
                "param_2": "exit_code",
                "pcVar2": "message",
                "plVar3": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102980": {
            "additional_data": {
                "FUN_00102980": {
                    "check_file": 18,
                    "check_file_info": 2,
                    "check_file_information": 3,
                    "check_file_stat": 1,
                    "check_file_stats": 2,
                    "check_file_status": 4,
                    "validate_and_process_file": 1
                },
                "bfd_check_format": {
                    "check_file_format": 1
                },
                "bfd_close": {
                    "close_file": 1
                },
                "bfd_nonfatal": {
                    "handle_bfd_nonfatal_error": 1,
                    "nonfatal_error": 1
                },
                "bfd_openr": {
                    "open_file": 1
                },
                "cVar1": {
                    "check_result": 7,
                    "file_format": 1,
                    "format_check": 7,
                    "format_check_result": 8,
                    "format_result": 1,
                    "format_valid": 6,
                    "is_valid": 1
                },
                "check_and_print_formats_00102a40": {
                    "check_and_print_formats": 1
                },
                "display_bfd": {
                    "display_bfd_info": 1,
                    "display_file": 1
                },
                "handle_file_not_found_error_00102360": {
                    "handle_file_not_found_error": 1
                },
                "iVar2": {
                    "error_code": 1,
                    "stat_result": 20,
                    "status": 9,
                    "status_code": 1
                },
                "lVar6": {
                    "bfd_file": 2,
                    "bfd_handle": 13,
                    "file_handle": 16
                },
                "param_1": {
                    "file_path": 20,
                    "filename": 10,
                    "filepath": 1
                },
                "pcVar5": {
                    "errno_str": 1,
                    "error_description": 2,
                    "error_message": 9,
                    "error_msg": 3,
                    "error_reason": 6,
                    "error_str": 1,
                    "error_string": 4,
                    "error_text": 1,
                    "reason": 1,
                    "str_error": 1,
                    "str_error_message": 1,
                    "str_error_output": 1
                },
                "piVar3": {
                    "errno": 1,
                    "errno_location": 3,
                    "errno_location_result": 2,
                    "errno_pointer": 1,
                    "errno_ptr": 10,
                    "error": 3,
                    "error_code_ptr": 1,
                    "error_location": 1,
                    "error_num": 1,
                    "error_number": 5,
                    "error_number_pointer": 1,
                    "error_ptr": 2
                },
                "process_archived_files_001023b6": {
                    "process_archived_files": 3
                },
                "report_and_process_data_00102f40": {
                    "report_and_process_data": 1
                },
                "sStack_b8": {
                    "file_info": 7,
                    "file_stat": 12,
                    "file_stats": 9,
                    "file_status": 2
                },
                "uVar4": {
                    "error_message": 13,
                    "error_msg": 3,
                    "gettext_result": 1,
                    "localized_error": 2,
                    "localized_error_message": 1,
                    "localized_error_msg": 1,
                    "localized_message": 4,
                    "localized_msg": 1,
                    "localized_string": 1,
                    "translated_message": 2,
                    "translation": 1,
                    "warning_message": 1
                }
            },
            "called": [
                "FUN_001023b6",
                "FUN_00102310",
                "FUN_00102200",
                "FUN_001020f0",
                "FUN_00102f40",
                "FUN_00102a40",
                "FUN_001020c0",
                "FUN_00102360"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid check_file_status_00102980(char *file_path)\n\n{\n  char format_check_result;\n  int stat_result;\n  int *errno_ptr;\n  undefined8 error_message;\n  char *error_message;\n  long file_handle;\n  stat file_stat;\n  \n  if (file_path != (char *)0x0) {\n    stat_result = stat(file_path,&file_stat);\n    if (stat_result < 0) {\n      errno_ptr = __errno_location();\n      if (*errno_ptr == 2) {\n        error_message = dcgettext(0,\"\\'%s\\': No such file\",5);\n        non_fatal(error_message,file_path);\n      }\n      else {\n        error_message = strerror(*errno_ptr);\n        error_message = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n        non_fatal(error_message,file_path,error_message);\n      }\n    }\n    else if ((file_stat.st_mode & 0xf000) == 0x4000) {\n      error_message = dcgettext(0,\"Warning: \\'%s\\' is a directory\",5);\n      non_fatal(error_message,file_path);\n    }\n    else if ((file_stat.st_mode & 0xf000) == 0x8000) {\n      if (file_stat.st_size < 0) {\n        error_message = dcgettext(0,\"Warning: \\'%s\\' has negative size, probably it is too large\",5);\n        non_fatal(error_message,file_path);\n      }\n      else if (file_stat.st_size != 0) {\n        file_handle = open_file(file_path,DAT_00107340);\n        if (file_handle != 0) {\n          format_check_result = check_file_format(file_handle,2);\n          if (format_check_result != '\\0') {\n            process_archived_files();\n            return;\n          }\n          display_file(file_handle);\n          format_check_result = close_file(file_handle);\n          if (format_check_result != '\\0') {\n            return;\n          }\n        }\n        handle_bfd_nonfatal_error(file_path);\n        DAT_00107314 = 1;\n        return;\n      }\n    }\n    else {\n      error_message = dcgettext(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n      non_fatal(error_message,file_path);\n    }\n  }\n  DAT_00107314 = 1;\n  return;\n}\n\n",
            "current_name": "check_file_status_00102980",
            "entrypoint": "0x00102980",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102980": "check_file_status_00102980",
                "bfd_check_format": "check_file_format",
                "bfd_close": "close_file",
                "bfd_nonfatal": "handle_bfd_nonfatal_error",
                "bfd_openr": "open_file",
                "cVar1": "format_check_result",
                "display_bfd": "display_file",
                "iVar2": "stat_result",
                "lVar6": "file_handle",
                "param_1": "file_path",
                "pcVar5": "error_message",
                "piVar3": "errno_ptr",
                "process_archived_files_001023b6": "process_archived_files",
                "sStack_b8": "file_stat",
                "uVar4": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102a40": {
            "additional_data": {
                "DAT_00107314": {
                    "analysis_status": 1,
                    "dat_variable": 1,
                    "result": 1,
                    "status": 1,
                    "status_code": 2
                },
                "FUN_001024d2": {
                    "list_matching_formats": 1,
                    "nonfatal_error": 1
                },
                "FUN_00102a40": {
                    "analyze_binary": 3,
                    "analyze_binary_format": 1,
                    "analyze_binary_formats": 1,
                    "check_and_list_formats": 1,
                    "check_and_print_file_info": 1,
                    "check_and_print_format": 1,
                    "check_and_print_format_info": 1,
                    "check_and_print_formats": 7,
                    "check_and_process_file": 1,
                    "check_bfd_file": 1,
                    "check_bfd_format": 1,
                    "check_file_format": 3,
                    "check_format_and_print": 1,
                    "identify_and_print_file_format": 1,
                    "identify_and_print_file_info": 1,
                    "identify_file": 1,
                    "identify_file_format": 3,
                    "process_binary_format": 1
                },
                "FUN_00102a90": {
                    "process_matching_formats": 1
                },
                "_stdout": {
                    "standard_output": 5,
                    "stdout": 1
                },
                "cVar1": {
                    "binary_format_valid": 1,
                    "check_format_result": 1,
                    "check_result": 1,
                    "format_check": 5,
                    "format_check_result": 7,
                    "format_matched": 2,
                    "format_result": 1,
                    "format_valid": 5,
                    "is_bfd_format_valid": 1,
                    "is_binary_format": 1,
                    "is_valid_format": 6
                },
                "fwrite": {
                    "write_stdout": 1,
                    "write_to_stdout": 1
                },
                "iVar2": {
                    "bfd_error": 1,
                    "bfd_error_code": 1,
                    "error_code": 29
                },
                "lVar3": {
                    "command": 1,
                    "command_name": 2,
                    "command_string": 1,
                    "failing_command": 25
                },
                "list_matching_formats": {
                    "display_matching_formats": 1,
                    "print_matching_formats": 2
                },
                "local_20": {
                    "format_match_results": 1,
                    "format_matches": 2,
                    "formats": 1,
                    "matching_formats": 27
                },
                "param_1": {
                    "bfd_file": 2,
                    "bfd_handle": 2,
                    "bfd_param": 1,
                    "binary_file": 5,
                    "binary_formats": 1,
                    "file": 4,
                    "file_buffer": 1,
                    "file_formats": 1,
                    "file_handle": 5,
                    "format": 1,
                    "format_file_ptr": 1,
                    "format_files": 2,
                    "formats": 2,
                    "input_file": 1,
                    "input_formats": 1,
                    "param": 1
                },
                "print_sizes": {
                    "display_file_sizes": 1,
                    "display_sizes": 1,
                    "print_binary_sizes": 1,
                    "print_file_sizes": 2,
                    "print_format_sizes": 2
                },
                "printf": {
                    "print_string_with_format": 1,
                    "print_with_format": 1
                },
                "putchar": {
                    "print_newline": 2
                },
                "puts": {
                    "print_newline_string": 1
                }
            },
            "called": [
                "FUN_00102310",
                "FUN_00102a90",
                "FUN_001022c0",
                "FUN_001024d2",
                "FUN_00102040"
            ],
            "calling": [
                "FUN_001023b6",
                "FUN_00102980"
            ],
            "code": "\n\n\nvoid check_and_print_formats_00102a40(undefined8 *file_handle)\n\n{\n  char format_check_result;\n  int error_code;\n  long failing_command;\n  undefined8 matching_formats [2];\n  \n  format_check_result = bfd_check_format(file_handle,2);\n  if (format_check_result == '\\0') {\n    format_check_result = bfd_check_format_matches(file_handle,1,matching_formats);\n    if (format_check_result == '\\0') {\n      error_code = bfd_get_error();\n      if (error_code == 0xd) {\n        bfd_nonfatal(*file_handle);\n        print_matching_formats(matching_formats[0]);\n        DAT_00107314 = 3;\n      }\n      else {\n        format_check_result = bfd_check_format_matches(file_handle,3,matching_formats);\n        if (format_check_result == '\\0') {\n          bfd_nonfatal(*file_handle);\n          error_code = bfd_get_error();\n          if (error_code == 0xd) {\n            print_matching_formats(matching_formats[0]);\n          }\n          DAT_00107314 = 3;\n        }\n        else {\n          print_format_sizes(file_handle);\n          write_to_stdout(\" (core file\",1,0xb,standard_output);\n          failing_command = bfd_core_file_failing_command(file_handle);\n          if (failing_command != 0) {\n            print_string_with_format(\" invoked as %s\",failing_command);\n          }\n          print_newline_string(\")\\n\");\n        }\n      }\n    }\n    else {\n      print_format_sizes(file_handle);\n      print_newline(10);\n    }\n  }\n  return;\n}\n\n",
            "current_name": "check_and_print_formats_00102a40",
            "entrypoint": "0x00102a40",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102a40": "check_and_print_formats_00102a40",
                "_stdout": "standard_output",
                "cVar1": "format_check_result",
                "fwrite": "write_to_stdout",
                "iVar2": "error_code",
                "lVar3": "failing_command",
                "list_matching_formats": "print_matching_formats",
                "local_20": "matching_formats",
                "param_1": "file_handle",
                "print_sizes": "print_format_sizes",
                "printf": "print_string_with_format",
                "putchar": "print_newline",
                "puts": "print_newline_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102a90": {
            "additional_data": {
                "DAT_001072cc": {
                    "section_size_display_length": 1
                },
                "DAT_001072d0": {
                    "data_size3": 1,
                    "section_name_length": 1
                },
                "DAT_001072d8": {
                    "data_section_size": 1,
                    "data_size2": 1
                },
                "DAT_001072e0": {
                    "data_size1": 1,
                    "total_code_size": 1
                },
                "DAT_001072f0": {
                    "extra_data": 1,
                    "global_flag2": 1,
                    "total": 1
                },
                "DAT_001072f8": {
                    "data_section_size": 1,
                    "text_size": 1
                },
                "DAT_00107300": {
                    "bss_section_size": 1,
                    "data_size": 1
                },
                "DAT_00107308": {
                    "text_section_size": 1,
                    "total_size": 1
                },
                "DAT_00107310": {
                    "is_section_empty": 1
                },
                "DAT_00107318": {
                    "total_bss_size": 2,
                    "total_executable_size": 1
                },
                "DAT_00107320": {
                    "total_data_size": 2,
                    "total_writable_size": 1
                },
                "DAT_00107328": {
                    "total_readable_size": 1,
                    "total_text_size": 2
                },
                "DAT_00107348": {
                    "global_flag3": 1,
                    "is_type1": 1,
                    "is_verbose": 1,
                    "use_hex": 1
                },
                "FUN_0010259c": {
                    "xexit": 1
                },
                "FUN_00102a90": {
                    "analyze_binary": 1,
                    "analyze_sections": 1,
                    "calculate_section_sizes": 2,
                    "print_and_summarize_sections": 1,
                    "print_binary_file_summary": 3,
                    "print_binary_sections": 1,
                    "print_binary_sections_summary": 1,
                    "print_binary_size": 1,
                    "print_binary_summary": 3,
                    "print_file_sections_summary": 1,
                    "print_program_sections_summary": 1,
                    "print_section_information": 1,
                    "print_section_sizes": 5,
                    "print_section_statistics": 2,
                    "print_section_summary": 3,
                    "print_sections_and_sizes": 1,
                    "print_sections_summary": 3
                },
                "FUN_00102d70": {
                    "berkeley_or_gnu_sum": 1
                },
                "FUN_00102e50": {
                    "bfd_nonfatal": 1
                },
                "FUN_00102e90": {
                    "sysv_one_line": 1
                },
                "FUN_00102fe0": {
                    "sysv_internal_sizer": 1
                },
                "FUN_00103c50": {
                    "size_number": 1
                },
                "FUN_00103cc0": {
                    "sysv_internal_printer": 1
                },
                "FUN_00103d20": {
                    "rprint_number": 1
                },
                "_DAT_00107310": {
                    "global_flag1": 1,
                    "global_var1": 1,
                    "is_condition_met": 1
                },
                "_DAT_00107318": {
                    "global_var7": 1
                },
                "_DAT_00107320": {
                    "global_var6": 1
                },
                "_DAT_00107328": {
                    "global_var5": 1
                },
                "_DAT_00107334": {
                    "accumulate_size": 1,
                    "global_var4": 1,
                    "is_condition_satisfied": 1,
                    "is_sum_enabled": 1
                },
                "_DAT_0010733c": {
                    "global_var3": 1
                },
                "_DAT_00107348": {
                    "global_var2": 1,
                    "use_oct": 1
                },
                "__ptr": {
                    "allocated_memory": 2,
                    "buffer": 2,
                    "malloc_ptr": 1,
                    "malloced_pointer": 1,
                    "memory_ptr": 1,
                    "section_addresses": 1,
                    "section_array": 1,
                    "section_data": 2,
                    "section_header": 1,
                    "section_info": 1,
                    "section_list": 1,
                    "section_pointer": 3,
                    "section_pointers": 2,
                    "section_sizes": 10
                },
                "_stdout": {
                    "standard_output": 3
                },
                "bVar10": {
                    "bool_value1": 1,
                    "boolean_var1": 1,
                    "check_sections": 1,
                    "condition": 4,
                    "condition1": 1,
                    "condition_flag": 1,
                    "has_entry": 1,
                    "has_section": 1,
                    "has_sections": 2,
                    "has_size": 1,
                    "is_loop_running": 1,
                    "is_non_zero": 1,
                    "is_nonzero": 1,
                    "is_not_empty": 1,
                    "is_not_zero": 4,
                    "loop_condition": 5,
                    "loop_flag": 1,
                    "not_empty": 1
                },
                "bVar11": {
                    "bool_value2": 1,
                    "boolean_var2": 1,
                    "check_condition": 1,
                    "check_flag": 1,
                    "condition": 1,
                    "condition2": 2,
                    "condition_flag_2": 1,
                    "first_iteration": 2,
                    "first_section": 1,
                    "has_sections": 1,
                    "initial_flag": 1,
                    "is_first_entry": 2,
                    "is_first_file": 1,
                    "is_first_iteration": 3,
                    "is_first_section": 1,
                    "is_new_entry": 1,
                    "is_new_section": 1,
                    "is_not_zero2": 1,
                    "is_zero": 4,
                    "logic_condition": 1,
                    "loop_flag2": 1
                },
                "berkeley_or_gnu_sum": {
                    "calculate_sum": 1
                },
                "bfd_nonfatal": {
                    "handle_fatal_errors": 1,
                    "non_fatal": 1,
                    "non_fatal_error": 1
                },
                "cVar5": {
                    "flag": 9,
                    "found_flag": 1,
                    "found_section": 1,
                    "has_changed": 3,
                    "has_data": 1,
                    "has_executable": 1,
                    "has_executable_sections": 3,
                    "has_modified_sections": 1,
                    "has_section": 3,
                    "has_text_section": 1,
                    "is_modified": 1,
                    "is_section_updated": 1,
                    "section_flag": 1,
                    "section_found": 2
                },
                "extraout_RDX": {
                    "ex_filename": 1,
                    "ex_str": 1,
                    "exit_code": 1,
                    "explanation": 2,
                    "extra1": 1,
                    "extra_info": 1,
                    "extra_output": 1,
                    "extra_output1": 1,
                    "extra_output_rdx": 1,
                    "extra_rdx": 1,
                    "file_size": 1,
                    "section_size": 5,
                    "section_size_1": 1,
                    "size_of_section": 1,
                    "tmp": 1,
                    "total_size": 2,
                    "unused": 2,
                    "unused1": 2,
                    "unused_parameter": 1
                },
                "extraout_RDX_00": {
                    "error_code": 1,
                    "explanation2": 1,
                    "extra2": 1,
                    "extra_info_2": 1,
                    "extra_output2": 2,
                    "extra_output_rdx": 1,
                    "extra_rdx2": 1,
                    "l_var2": 1,
                    "result": 2,
                    "return_val": 1,
                    "return_value": 1,
                    "section_size_2": 1,
                    "size": 1,
                    "status": 1,
                    "temp": 2,
                    "tmp2": 1,
                    "unused": 2,
                    "unused2": 2,
                    "unused_parameter_2": 1
                },
                "extraout_RDX_01": {
                    "ex_section_size": 1,
                    "ex_size": 1,
                    "ex_size_temp": 1,
                    "executable_file": 1,
                    "explanation3": 1,
                    "extension": 1,
                    "extra3": 1,
                    "extra_data": 2,
                    "extra_filename": 1,
                    "extra_info": 1,
                    "extra_info_3": 1,
                    "extra_output": 1,
                    "extra_output3": 2,
                    "extra_output_rdx": 1,
                    "extra_rdx3": 1,
                    "section_data_ptr": 1,
                    "tmp3": 1,
                    "unused": 2,
                    "unused3": 2,
                    "unused_parameter_3": 1
                },
                "free": {
                    "deallocate_memory": 1,
                    "free_memory": 1
                },
                "fun_0010259c": {
                    "do_something2": 1
                },
                "fun_00102d70": {
                    "do_something8": 1
                },
                "fun_00102e50": {
                    "do_something3": 1
                },
                "fun_00102e90": {
                    "do_something6": 1
                },
                "fun_00102fe0": {
                    "do_something1": 1
                },
                "fun_00103c50": {
                    "do_something5": 1
                },
                "fun_00103cc0": {
                    "do_something7": 1
                },
                "fun_00103d20": {
                    "do_something4": 1
                },
                "iVar4": {
                    "count": 2,
                    "counter": 2,
                    "i": 4,
                    "indentation": 1,
                    "index": 8,
                    "iteration_var": 1,
                    "iterator": 2,
                    "loop_counter": 5,
                    "section_count": 3,
                    "size_count": 1,
                    "temp_size": 1
                },
                "iVar8": {
                    "column_width": 1,
                    "count": 1,
                    "format_length": 1,
                    "i_var": 1,
                    "indent": 1,
                    "indent_size": 2,
                    "indent_space": 1,
                    "indentation": 3,
                    "indentation_width": 1,
                    "int_value": 1,
                    "int_var": 1,
                    "loop_counter_2": 1,
                    "number_length": 1,
                    "output_length": 1,
                    "pad_length": 1,
                    "padding": 2,
                    "padding_length": 1,
                    "padding_size": 3,
                    "padding_value": 1,
                    "spacing": 1,
                    "width": 4
                },
                "lVar1": {
                    "file_size": 1,
                    "section": 3,
                    "section_addr": 2,
                    "section_address": 4,
                    "section_count": 2,
                    "section_entry": 1,
                    "section_header": 1,
                    "section_header_address": 1,
                    "section_info": 2,
                    "section_offset": 1,
                    "section_pointer": 2,
                    "section_ptr": 3,
                    "section_size": 7,
                    "size": 1
                },
                "lVar2": {
                    "section_size": 1,
                    "total_file_size": 1,
                    "total_section_size": 1,
                    "total_size": 26,
                    "total_size_temp": 1
                },
                "lVar9": {
                    "count": 5,
                    "counter": 2,
                    "iteration_count": 1,
                    "loop_counter": 2,
                    "loop_index": 3,
                    "loop_var": 2,
                    "num_sections": 2,
                    "section_count": 2,
                    "section_counter": 1,
                    "size": 4,
                    "temp_size": 2,
                    "total": 1,
                    "total_size": 2
                },
                "param_1": {
                    "arguments": 6,
                    "binary_file": 1,
                    "binary_files": 2,
                    "binary_name": 2,
                    "command_line_args": 1,
                    "file_paths": 3,
                    "filename": 3,
                    "input_files": 2,
                    "input_params": 1,
                    "param": 2,
                    "parameters": 3,
                    "params": 2,
                    "program_name": 1,
                    "section_name": 1
                },
                "param_2": {
                    "section_names": 1
                },
                "pcVar7": {
                    "char_var": 1,
                    "file_name": 1,
                    "filename": 4,
                    "format": 1,
                    "format_str": 1,
                    "format_string": 3,
                    "header_string": 1,
                    "header_text": 1,
                    "message": 1,
                    "output_format": 1,
                    "output_string": 1,
                    "print_format": 5,
                    "print_var": 1,
                    "section_name": 2,
                    "string": 1,
                    "temp_string": 1,
                    "text": 3,
                    "unused5": 1
                },
                "printf": {
                    "custom_print": 1,
                    "print": 1,
                    "print_formatted": 1
                },
                "puVar12": {
                    "data_pointer": 2,
                    "format_specifier": 5,
                    "format_string": 1,
                    "header_format": 1,
                    "header_pointer": 1,
                    "padding": 4,
                    "padding_pointer": 1,
                    "pointer": 5,
                    "pointer_var": 1,
                    "prefix": 1,
                    "prompt": 1,
                    "ptr_to_var": 1,
                    "section_name": 1,
                    "separator": 1,
                    "separator_string": 1,
                    "string_pointer": 1,
                    "sysv_section": 1,
                    "unused6": 1
                },
                "puts": {
                    "print_string": 2,
                    "print_with_newline": 1
                },
                "pvVar6": {
                    "null": 1,
                    "pointer": 3,
                    "pointer_to_void": 1,
                    "pointer_var": 1,
                    "ptr": 9,
                    "ptr_var": 2,
                    "ptr_variable": 1,
                    "ptr_volatile": 1,
                    "section_pointer": 1,
                    "section_pointer2": 1,
                    "section_ptr": 1,
                    "section_sizes": 1,
                    "temp_address": 1,
                    "temp_pointer": 3,
                    "temp_ptr": 3
                },
                "rprint_number": {
                    "format_number": 1,
                    "print_number_with_padding": 1,
                    "recursive_print_number": 1
                },
                "size_number": {
                    "get_size_number": 1
                },
                "sysv_internal_printer": {
                    "section_printer": 1
                },
                "sysv_internal_sizer": {
                    "section_sizer": 1
                },
                "sysv_one_line": {
                    "print_one_line": 2
                },
                "uVar3": {
                    "data": 1,
                    "ex_section_ptr": 1,
                    "ex_size": 1,
                    "ex_size_alt": 1,
                    "explanation4": 1,
                    "extra": 1,
                    "extra4": 1,
                    "extra_data": 1,
                    "extra_info": 2,
                    "extra_output": 1,
                    "extra_output_u_var": 1,
                    "extra_param": 1,
                    "extra_u_var": 1,
                    "extra_value": 1,
                    "format": 1,
                    "result": 1,
                    "unused": 3,
                    "unused4": 2,
                    "unused_var": 2,
                    "unused_variable": 1,
                    "value": 1
                },
                "xexit": {
                    "exit": 1,
                    "exit_function": 1,
                    "exit_program": 1
                },
                "xmalloc": {
                    "allocate_memory": 3
                }
            },
            "called": [
                "FUN_00102070",
                "FUN_00102170",
                "FUN_00102330",
                "FUN_00102fe0",
                "FUN_00102290",
                "FUN_0010259c",
                "FUN_00102e50",
                "FUN_00103d20",
                "FUN_00102120",
                "FUN_00103c50",
                "FUN_00102e90",
                "FUN_00102030",
                "FUN_00103cc0",
                "FUN_001021d0",
                "FUN_00102140",
                "FUN_00102d70"
            ],
            "calling": [
                "FUN_00102a40",
                "FUN_001024d2"
            ],
            "code": "\n\n\nvoid print_binary_file_summary_00102a90(char **arguments)\n\n{\n  long section_size;\n  undefined8 section_size;\n  long total_size;\n  long extra_output2;\n  undefined8 unused3;\n  undefined8 unused;\n  void *section_sizes;\n  int index;\n  char flag;\n  void *ptr;\n  char *print_format;\n  int width;\n  long count;\n  bool loop_condition;\n  bool is_zero;\n  undefined *format_specifier;\n  \n  if ((_DAT_00107310 == 0) || (DAT_001072f0 = 0, (*(uint *)((long)arguments + 0x44) & 0x52) != 0x10))\n  goto LAB_00102aa8;\n  count = (**(code **)(arguments[1] + 0x1f8))();\n  if (count < 0) {\n    non_fatal(*arguments);\n    exit_program(1);\nLAB_001026b4:\n    section_sizes = (void *)allocate_memory();\n  }\n  else {\n    section_sizes = (void *)0x0;\n    if (count != 0) goto LAB_001026b4;\n  }\n  ptr = section_sizes;\n  count = (**(code **)(arguments[1] + 0x200))(arguments);\n  flag = (char)ptr;\n  if (count < 0) {\n    non_fatal(*arguments);\n    exit_program(1);\n    total_size = extra_output2;\n  }\n  else {\n    flag = '\\0';\n    total_size = DAT_001072f0;\n    while (loop_condition = count != 0, count = count + -1, loop_condition) {\n      section_size = *(long *)((long)section_sizes + count * 8);\n      if (((*(byte *)(*(long *)(section_size + 0x20) + 0x25) & 0x10) != 0) &&\n         ((*(byte *)(section_size + 0x19) & 1) == 0)) {\n        total_size = total_size + *(long *)(section_size + 0x10);\n        flag = '\\x01';\n      }\n    }\n  }\n  if (flag != '\\0') {\n    DAT_001072f0 = total_size;\n  }\n  free_memory(section_sizes);\nLAB_00102aa8:\n  if (DAT_00107348 == 1) {\n    DAT_001072e0 = 0;\n    DAT_001072d8 = 0;\n    DAT_001072d0 = 0;\n    bfd_map_over_sections(arguments,section_sizer,0);\n    if (_DAT_00107310 != 0) {\n      if ((int)DAT_001072d0 < 5) {\n        DAT_001072d0 = 5;\n      }\n      DAT_001072e0 = DAT_001072e0 + DAT_001072f0;\n    }\n    DAT_001072cc = get_size_number(DAT_001072d8);\n    if (DAT_001072cc < 4) {\n      DAT_001072cc = 4;\n    }\n    DAT_001072c8 = get_size_number();\n    if (DAT_001072c8 < 4) {\n      DAT_001072c8 = 4;\n    }\n    DAT_001072e0 = 0;\n    print(\"%s  \",*arguments);\n    unused = unused3;\n    if ((undefined8 *)arguments[0x1d] != (undefined8 *)0x0) {\n      print(\" (ex %s)\",*(undefined8 *)arguments[0x1d]);\n      unused = section_size;\n    }\n    format_specifier = &DAT_001040fc;\n    print(\":\\n%-*s   %*s   %*s\\n\",(ulong)DAT_001072d0,\"section\",(ulong)DAT_001072c8,&DAT_00104067,\n           (ulong)DAT_001072cc,&DAT_001040fc,unused);\n    bfd_map_over_sections(arguments,section_printer,0);\n    if (_DAT_00107310 != 0) {\n      DAT_001072e0 = DAT_001072e0 + DAT_001072f0;\n      print_one_line(\"*COM*\",DAT_001072f0,0,format_specifier);\n    }\n    print(\"%-*s   \",(ulong)DAT_001072d0,\"Total\");\n    format_number(DAT_001072c8,DAT_001072e0);\n    print_string(\"\\n\");\n    return;\n  }\n  width = (-(uint)(DAT_00107348 == 0) & 0xfffffffd) + 10;\n  loop_condition = DAT_00107348 == 0;\n  DAT_00107308 = 0;\n  DAT_00107300 = 0;\n  DAT_001072f8 = 0;\n  bfd_map_over_sections(arguments,calculate_sum,0);\n  DAT_00107308 = DAT_00107308 + DAT_001072f0;\n  index = DAT_001072e8 + 1;\n  is_zero = DAT_001072e8 == 0;\n  DAT_001072e8 = index;\n  if (is_zero) {\n    if (DAT_00107348 == 0) {\n      print_format = \"   text\\t   data\\t    bss\\t    dec\\t    hex\\tfilename\";\n      if (DAT_0010733c == 1) {\n        print_format = \"   text\\t   data\\t    bss\\t    oct\\t    hex\\tfilename\";\n      }\n      print_string(print_format);\n    }\n    else {\n      print_string(\"      text       data        bss      total filename\");\n    }\n  }\n  count = DAT_001072f8 + DAT_00107300 + DAT_00107308;\n  if (_DAT_00107334 != 0) {\n    DAT_00107328 = DAT_00107328 + DAT_001072f8;\n    DAT_00107320 = DAT_00107320 + DAT_00107300;\n    DAT_00107318 = DAT_00107318 + DAT_00107308;\n  }\n  index = (int)(char)((-loop_condition & 0xe9U) + 0x20);\n  format_number(width);\n  putc(index,standard_output);\n  format_number(width,DAT_00107300);\n  putc(index,standard_output);\n  format_number(width,DAT_00107308);\n  putc(index,standard_output);\n  if (DAT_00107348 == 0) {\n    print_format = \"%7lu\\t%7lx\";\n    if (DAT_0010733c == 1) {\n      print_format = \"%7lo\\t%7lx\";\n    }\n    print(print_format,count,count);\n  }\n  else {\n    format_number(width,count);\n  }\n  putc(index,standard_output);\n  fprint_string(*arguments,standard_output);\n  if ((undefined8 *)arguments[0x1d] == (undefined8 *)0x0) {\n    return;\n  }\n  print(\" (ex %s)\",*(undefined8 *)arguments[0x1d]);\n  return;\n}\n\n",
            "current_name": "print_binary_file_summary_00102a90",
            "entrypoint": "0x00102a90",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102a90": "print_binary_file_summary_00102a90",
                "__ptr": "section_sizes",
                "_stdout": "standard_output",
                "bVar10": "loop_condition",
                "bVar11": "is_zero",
                "berkeley_or_gnu_sum": "calculate_sum",
                "bfd_nonfatal": "non_fatal",
                "cVar5": "flag",
                "extraout_RDX": "section_size",
                "extraout_RDX_00": "extra_output2",
                "extraout_RDX_01": "unused3",
                "free": "free_memory",
                "iVar4": "index",
                "iVar8": "width",
                "lVar1": "section_size",
                "lVar2": "total_size",
                "lVar9": "count",
                "param_1": "arguments",
                "pcVar7": "print_format",
                "printf": "print",
                "puVar12": "format_specifier",
                "puts": "print_string",
                "pvVar6": "ptr",
                "rprint_number": "format_number",
                "size_number": "get_size_number",
                "sysv_internal_printer": "section_printer",
                "sysv_internal_sizer": "section_sizer",
                "sysv_one_line": "print_one_line",
                "uVar3": "unused",
                "xexit": "exit_program",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102d70": {
            "additional_data": {
                "FUN_00102d70": {
                    "update_count_based_on_flags": 1,
                    "update_data": 24,
                    "update_data_based_on_flag": 1,
                    "update_data_based_on_flags": 2,
                    "update_values": 2,
                    "update_variable_based_on_flags": 1
                },
                "lVar2": {
                    "data_value": 3,
                    "offset": 3,
                    "value": 16,
                    "value_to_add": 5,
                    "value_to_update": 1,
                    "var2": 2
                },
                "param_1": {
                    "arg1": 2,
                    "data": 4,
                    "input": 1,
                    "input_data": 1,
                    "param": 4,
                    "param1": 16,
                    "param_ptr": 1,
                    "undefined": 1,
                    "undefined_value": 1
                },
                "param_2": {
                    "address": 1,
                    "arg2": 2,
                    "data": 4,
                    "data_address": 1,
                    "data_offset": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "param2": 16,
                    "ptr": 3
                },
                "uVar1": {
                    "data_flag": 2,
                    "flag": 4,
                    "flags": 19,
                    "status": 1,
                    "status_flag": 1,
                    "updated_value": 1,
                    "var1": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\nvoid update_data_based_on_flags_00102d70(undefined8 param1,long param2)\n\n{\n  uint flags;\n  long value;\n  \n  flags = *(uint *)(param2 + 0x24);\n  if ((flags & 1) != 0) {\n    value = *(long *)(param2 + 0x40);\n    if (((flags & 0x10) != 0) || ((DAT_00107348 == 0 && ((flags & 8) != 0)))) {\n      DAT_001072f8 = DAT_001072f8 + value;\n      return;\n    }\n    if ((flags & 0x100) != 0) {\n      DAT_00107300 = DAT_00107300 + value;\n      return;\n    }\n    DAT_00107308 = DAT_00107308 + value;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_based_on_flags_00102d70",
            "entrypoint": "0x00102d70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102d70": "update_data_based_on_flags_00102d70",
                "lVar2": "value",
                "param_1": "param1",
                "param_2": "param2",
                "uVar1": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102db0": {
            "additional_data": {
                "DAT_0010733c": {
                    "data_flag": 1,
                    "data_variable": 2,
                    "format_flag": 1,
                    "format_type": 4
                },
                "FUN_00102db0": {
                    "extract_and_report_data": 1,
                    "format_and_report": 1,
                    "generate_report": 1,
                    "print_and_exit": 1,
                    "process_data": 1,
                    "process_report": 2,
                    "process_report_and_exit": 1,
                    "report_and_exit": 18
                },
                "FUN_00102ee0": {
                    "format_string": 1,
                    "print_formatted_output": 1
                },
                "__format": {
                    "format": 1,
                    "format_specifier": 5,
                    "format_str": 3,
                    "format_string": 21,
                    "output_format": 1
                },
                "acStack_110": {
                    "buffer": 4,
                    "format_buffer": 1,
                    "formatted_output": 3,
                    "formatted_str": 1,
                    "formatted_string": 4,
                    "output": 1,
                    "output_buffer": 5,
                    "output_str": 1,
                    "output_string": 6,
                    "output_string_array": 1,
                    "result": 1,
                    "result_string": 2,
                    "stack_array": 1
                },
                "in_AL": {
                    "boolean_flag": 1,
                    "condition": 3,
                    "flag": 9,
                    "input_flag": 3,
                    "is_condition_true": 1,
                    "is_error": 3,
                    "is_flag_set": 1,
                    "is_not_null": 1,
                    "is_set": 2,
                    "is_true": 2,
                    "is_truthy": 1
                },
                "local_18": {
                    "arg8": 2,
                    "arg8_copy": 1,
                    "buffer8": 1,
                    "data8_copy": 1,
                    "eighth_copy": 1,
                    "error8": 1,
                    "flag8_copy": 1,
                    "input8_copy": 2,
                    "input_param8_copy": 1,
                    "local_arg8": 1,
                    "local_data_8": 1,
                    "local_error_code8": 1,
                    "local_input_8": 1,
                    "local_param8": 4,
                    "local_param_8": 2,
                    "optional_output8": 1,
                    "param8": 1,
                    "param8_copy": 2,
                    "temp8": 1,
                    "value8": 1,
                    "value8_copy": 1,
                    "value_8_copy": 1,
                    "var13": 1
                },
                "local_28": {
                    "arg7": 2,
                    "arg7_copy": 1,
                    "buffer7": 1,
                    "data7_copy": 1,
                    "error7": 1,
                    "flag7_copy": 1,
                    "input7_copy": 2,
                    "input_param7_copy": 1,
                    "local_arg7": 1,
                    "local_data_7": 1,
                    "local_error_code7": 1,
                    "local_input_7": 1,
                    "local_param7": 4,
                    "local_param_7": 2,
                    "optional_output7": 1,
                    "param7": 1,
                    "param7_copy": 2,
                    "seventh_copy": 1,
                    "temp7": 1,
                    "value7": 1,
                    "value7_copy": 1,
                    "value_7_copy": 1,
                    "var12": 1
                },
                "local_38": {
                    "arg6": 2,
                    "arg6_copy": 1,
                    "buffer6": 1,
                    "data6_copy": 1,
                    "error6": 1,
                    "flag6_copy": 1,
                    "input6_copy": 2,
                    "input_param6_copy": 1,
                    "local_arg6": 1,
                    "local_data_6": 1,
                    "local_error_code6": 1,
                    "local_input_6": 1,
                    "local_param6": 4,
                    "local_param_6": 2,
                    "optional_output6": 1,
                    "param6": 1,
                    "param6_copy": 2,
                    "sixth_copy": 1,
                    "temp6": 1,
                    "value6": 1,
                    "value6_copy": 1,
                    "value_6_copy": 1,
                    "var11": 1
                },
                "local_48": {
                    "arg5": 2,
                    "arg5_copy": 1,
                    "buffer5": 1,
                    "data5_copy": 1,
                    "error5": 1,
                    "fifth_copy": 1,
                    "flag5_copy": 1,
                    "input5_copy": 2,
                    "input_param5_copy": 1,
                    "local_arg5": 1,
                    "local_data_5": 1,
                    "local_error_code5": 1,
                    "local_input_5": 1,
                    "local_param5": 4,
                    "local_param_5": 2,
                    "optional_output5": 1,
                    "param5": 1,
                    "param5_copy": 2,
                    "temp5": 1,
                    "value5": 1,
                    "value5_copy": 1,
                    "value_5_copy": 1,
                    "var10": 1
                },
                "local_58": {
                    "arg4": 2,
                    "arg4_copy": 1,
                    "buffer4": 1,
                    "data4_copy": 1,
                    "error4": 1,
                    "flag4_copy": 1,
                    "fourth_copy": 1,
                    "input4_copy": 2,
                    "input_param4_copy": 1,
                    "local_arg4": 1,
                    "local_data_4": 1,
                    "local_error_code4": 1,
                    "local_input_4": 1,
                    "local_param4": 4,
                    "local_param_4": 2,
                    "optional_output4": 1,
                    "param4": 1,
                    "param4_copy": 2,
                    "temp4": 1,
                    "value4": 1,
                    "value4_copy": 1,
                    "value_4_copy": 1,
                    "var9": 1
                },
                "local_68": {
                    "arg3": 2,
                    "arg3_copy": 1,
                    "buffer3": 1,
                    "data3_copy": 1,
                    "error3": 1,
                    "flag3_copy": 1,
                    "input3_copy": 2,
                    "input_param3_copy": 1,
                    "local_arg3": 1,
                    "local_data_3": 1,
                    "local_error_code3": 1,
                    "local_input_3": 1,
                    "local_param3": 4,
                    "local_param_3": 2,
                    "optional_output3": 1,
                    "param3": 1,
                    "param3_copy": 2,
                    "temp3": 1,
                    "third_copy": 1,
                    "value3": 1,
                    "value3_copy": 1,
                    "value_3_copy": 1,
                    "var8": 1
                },
                "local_78": {
                    "arg2": 2,
                    "arg2_copy": 1,
                    "buffer2": 1,
                    "data2_copy": 1,
                    "error2": 1,
                    "flag2_copy": 1,
                    "input2_copy": 2,
                    "input_param2_copy": 1,
                    "local_arg2": 1,
                    "local_data_2": 1,
                    "local_error_code2": 1,
                    "local_input_2": 1,
                    "local_param2": 4,
                    "local_param_2": 2,
                    "optional_output2": 1,
                    "param2": 1,
                    "param2_copy": 2,
                    "second_copy": 1,
                    "temp2": 1,
                    "value2": 1,
                    "value2_copy": 1,
                    "value_2_copy": 1,
                    "var7": 1
                },
                "local_88": {
                    "arg1": 2,
                    "arg1_copy": 1,
                    "buffer1": 1,
                    "data1_copy": 1,
                    "error1": 1,
                    "error_code_copy": 1,
                    "first_copy": 1,
                    "flag1_copy": 1,
                    "input1_copy": 2,
                    "input_param1_copy": 1,
                    "local_arg1": 1,
                    "local_data_1": 1,
                    "local_error_code1": 1,
                    "local_input_1": 1,
                    "local_param1": 4,
                    "local_param_1": 2,
                    "optional_output1": 1,
                    "param1": 1,
                    "param1_copy": 1,
                    "temp1": 1,
                    "value1": 1,
                    "value1_copy": 1,
                    "value_1_copy": 1,
                    "var6": 1
                },
                "local_90": {
                    "arg5": 1,
                    "data6": 1,
                    "formatted_output6": 1,
                    "input_param14": 1,
                    "local_output_6": 1,
                    "local_param14": 4,
                    "local_param_14": 3,
                    "local_variable7": 1,
                    "param14": 3,
                    "param14_copy": 1,
                    "param14_value": 1,
                    "param6": 2,
                    "param6_copy": 2,
                    "param_14": 1,
                    "param_14_copy": 2,
                    "param_f_copy": 1,
                    "ptr5": 1,
                    "value6": 1,
                    "var5": 1,
                    "variable5": 1
                },
                "local_98": {
                    "arg4": 1,
                    "data5": 1,
                    "formatted_output5": 1,
                    "input_param13": 1,
                    "local_output_5": 1,
                    "local_param13": 4,
                    "local_param_13": 3,
                    "local_variable6": 1,
                    "param13": 3,
                    "param13_copy": 1,
                    "param13_value": 1,
                    "param5": 2,
                    "param5_copy": 2,
                    "param_13": 1,
                    "param_13_copy": 2,
                    "param_e_copy": 1,
                    "ptr4": 1,
                    "value5": 1,
                    "var4": 1,
                    "variable4": 1
                },
                "local_a0": {
                    "arg3": 1,
                    "data4": 1,
                    "formatted_output4": 1,
                    "input_param12": 1,
                    "local_output_4": 1,
                    "local_param12": 4,
                    "local_param_12": 3,
                    "local_variable5": 1,
                    "param12": 3,
                    "param12_copy": 1,
                    "param12_value": 1,
                    "param4": 2,
                    "param4_copy": 2,
                    "param_12": 1,
                    "param_12_copy": 2,
                    "param_d_copy": 1,
                    "ptr3": 1,
                    "value4": 1,
                    "var3": 1,
                    "variable3": 1
                },
                "local_a8": {
                    "arg2": 1,
                    "data3": 1,
                    "formatted_output3": 1,
                    "input_param11": 1,
                    "local_output_3": 1,
                    "local_param11": 4,
                    "local_param_11": 3,
                    "local_variable4": 1,
                    "param11": 3,
                    "param11_copy": 1,
                    "param11_value": 1,
                    "param3": 2,
                    "param3_copy": 2,
                    "param_11": 1,
                    "param_11_copy": 2,
                    "param_c_copy": 1,
                    "ptr2": 1,
                    "value3": 1,
                    "var2": 1,
                    "variable2": 1
                },
                "local_b0": {
                    "arg1": 1,
                    "data2": 1,
                    "formatted_output2": 1,
                    "input_param10": 1,
                    "local_output_2": 1,
                    "local_param10": 4,
                    "local_param_10": 3,
                    "local_variable3": 1,
                    "param10": 3,
                    "param10_copy": 1,
                    "param10_value": 1,
                    "param2": 2,
                    "param2_copy": 2,
                    "param_10": 1,
                    "param_10_copy": 2,
                    "param_b_copy": 1,
                    "ptr1": 1,
                    "value2": 1,
                    "var1": 1,
                    "variable1": 1
                },
                "local_b8": {
                    "buffer": 3,
                    "data": 1,
                    "local_array": 2,
                    "local_array_data": 1,
                    "local_buffer": 12,
                    "local_data": 3,
                    "temp_buffer": 2,
                    "temporary_buffer": 2,
                    "unused_buffer": 3
                },
                "local_c8": {
                    "buffer": 3,
                    "buffer_address": 1,
                    "buffer_ptr": 1,
                    "copy_destination": 1,
                    "local_arg": 1,
                    "local_array": 2,
                    "local_buffer": 12,
                    "local_buffer_pointer": 1,
                    "local_pointer2": 1,
                    "local_variable2": 1,
                    "pointer_to_output_buffer": 1,
                    "source": 1,
                    "string_buffer": 1
                },
                "local_d0": {
                    "args_pointer": 1,
                    "buffer": 1,
                    "buffer_pointer": 2,
                    "buffer_ptr": 1,
                    "copy_source": 1,
                    "destination": 1,
                    "format_ptr": 1,
                    "local_address": 1,
                    "local_pointer": 1,
                    "local_pointer1": 1,
                    "local_variable1": 1,
                    "pointer": 3,
                    "pointer_to_buffer": 1,
                    "pointer_to_output_length": 1,
                    "pointer_to_stack": 1,
                    "pointer_to_stack_value": 1,
                    "stack_address": 1,
                    "stack_pointer": 2,
                    "va_list": 1
                },
                "local_d4": {
                    "buffer_length": 1,
                    "constant_value": 1,
                    "copy_length": 1,
                    "element_size": 1,
                    "length": 2,
                    "local_var": 1,
                    "max_length": 1,
                    "size": 1
                },
                "local_d8": {
                    "array_size": 1,
                    "buffer_size": 13,
                    "count": 1,
                    "length": 2,
                    "num_elements": 1,
                    "number_of_chars": 1,
                    "output_length": 1,
                    "size": 6,
                    "size_of_local_array": 1,
                    "stack_size": 3,
                    "string_length": 1
                },
                "param_1": {
                    "arg1": 5,
                    "data1": 1,
                    "data_1": 1,
                    "error_code": 4,
                    "error_code1": 1,
                    "first_param": 3,
                    "flag1": 1,
                    "input1": 3,
                    "input_1": 1,
                    "input_param1": 2,
                    "output_string": 2,
                    "param1": 1,
                    "param_1": 1,
                    "report_param1": 1,
                    "source1": 1,
                    "value1": 2,
                    "value_1": 1
                },
                "param_10": {
                    "arg10": 1,
                    "data2": 1,
                    "data_10": 1,
                    "output2": 2,
                    "output_2": 1,
                    "output_param2": 2,
                    "param1": 1,
                    "param10": 6,
                    "param2": 4,
                    "param_10": 2,
                    "param_b": 1,
                    "ptr1": 1,
                    "report_param10": 1,
                    "report_param2": 1,
                    "value1": 4,
                    "value10": 1,
                    "value_10": 1
                },
                "param_11": {
                    "arg11": 1,
                    "data3": 1,
                    "data_11": 1,
                    "output3": 2,
                    "output_3": 1,
                    "output_param3": 2,
                    "param11": 6,
                    "param2": 1,
                    "param3": 4,
                    "param_11": 2,
                    "param_c": 1,
                    "ptr2": 1,
                    "report_param11": 1,
                    "report_param3": 1,
                    "value11": 1,
                    "value2": 4,
                    "value_11": 1
                },
                "param_12": {
                    "arg12": 1,
                    "data4": 1,
                    "data_12": 1,
                    "output4": 2,
                    "output_4": 1,
                    "output_param4": 2,
                    "param12": 6,
                    "param3": 1,
                    "param4": 4,
                    "param_12": 2,
                    "param_d": 1,
                    "ptr3": 1,
                    "report_param12": 1,
                    "report_param4": 1,
                    "value12": 1,
                    "value3": 4,
                    "value_12": 1
                },
                "param_13": {
                    "arg13": 1,
                    "data5": 1,
                    "data_13": 1,
                    "output5": 2,
                    "output_5": 1,
                    "output_param5": 2,
                    "param13": 6,
                    "param4": 1,
                    "param5": 4,
                    "param_13": 2,
                    "param_e": 1,
                    "ptr4": 1,
                    "report_param13": 1,
                    "report_param5": 1,
                    "value13": 1,
                    "value4": 4,
                    "value_13": 1
                },
                "param_14": {
                    "arg14": 1,
                    "data6": 1,
                    "data_14": 1,
                    "output6": 2,
                    "output_6": 1,
                    "output_param6": 2,
                    "param14": 6,
                    "param5": 1,
                    "param6": 4,
                    "param_14": 2,
                    "param_f": 1,
                    "ptr5": 1,
                    "report_param14": 1,
                    "report_param6": 1,
                    "value14": 1,
                    "value5": 4,
                    "value_14": 1
                },
                "param_2": {
                    "additional_params": 1,
                    "arg2": 5,
                    "args": 1,
                    "data2": 1,
                    "data_2": 1,
                    "error_code2": 1,
                    "error_message": 1,
                    "flag2": 1,
                    "input2": 3,
                    "input_2": 1,
                    "input_param2": 2,
                    "param2": 4,
                    "param_2": 1,
                    "report_param2": 1,
                    "second_param": 3,
                    "source2": 1,
                    "value2": 2,
                    "value_2": 1
                },
                "param_3": {
                    "arg3": 5,
                    "data3": 1,
                    "data_3": 1,
                    "error_code3": 1,
                    "file_path": 1,
                    "flag3": 1,
                    "input3": 3,
                    "input_3": 1,
                    "input_param3": 2,
                    "param3": 5,
                    "param_3": 1,
                    "report_param3": 1,
                    "source3": 1,
                    "third_param": 3,
                    "value3": 2,
                    "value_3": 1
                },
                "param_4": {
                    "arg4": 5,
                    "data4": 1,
                    "data_4": 1,
                    "error_code4": 1,
                    "flag4": 1,
                    "fourth_param": 3,
                    "input4": 3,
                    "input_4": 1,
                    "input_param4": 2,
                    "line_number": 1,
                    "param4": 5,
                    "param_4": 1,
                    "report_param4": 1,
                    "source4": 1,
                    "value4": 2,
                    "value_4": 1
                },
                "param_5": {
                    "arg5": 5,
                    "data5": 1,
                    "data_5": 1,
                    "error_code5": 1,
                    "fifth_param": 3,
                    "flag5": 1,
                    "function_name": 1,
                    "input5": 3,
                    "input_5": 1,
                    "input_param5": 2,
                    "param5": 5,
                    "param_5": 1,
                    "report_param5": 1,
                    "source5": 1,
                    "value5": 2,
                    "value_5": 1
                },
                "param_6": {
                    "arg6": 5,
                    "data6": 1,
                    "data_6": 1,
                    "error_code6": 1,
                    "flag6": 1,
                    "input6": 3,
                    "input_6": 1,
                    "input_param6": 2,
                    "param6": 5,
                    "param_6": 2,
                    "report_param6": 1,
                    "sixth_param": 3,
                    "source6": 1,
                    "value6": 2,
                    "value_6": 1
                },
                "param_7": {
                    "arg7": 5,
                    "data7": 1,
                    "data_7": 1,
                    "error_code7": 1,
                    "flag7": 1,
                    "input7": 3,
                    "input_7": 1,
                    "input_param7": 2,
                    "param7": 5,
                    "param_7": 2,
                    "report_param7": 1,
                    "seventh_param": 3,
                    "source7": 1,
                    "value7": 2,
                    "value_7": 1
                },
                "param_8": {
                    "arg8": 5,
                    "data8": 1,
                    "data_8": 1,
                    "eighth_param": 3,
                    "error_code8": 1,
                    "flag8": 1,
                    "input8": 3,
                    "input_8": 1,
                    "input_param8": 2,
                    "param8": 5,
                    "param_8": 2,
                    "report_param8": 1,
                    "source8": 1,
                    "value8": 2,
                    "value_8": 1
                },
                "param_9": {
                    "address": 1,
                    "arg9": 1,
                    "callback": 1,
                    "data1": 1,
                    "data_9": 1,
                    "error_string": 1,
                    "message": 1,
                    "output1": 2,
                    "output_1": 1,
                    "output_file": 1,
                    "output_param1": 2,
                    "param1": 4,
                    "param9": 4,
                    "param_9": 2,
                    "param_a": 1,
                    "report_data": 1,
                    "report_id": 2,
                    "report_param1": 1,
                    "report_param9": 1,
                    "timestamp": 1,
                    "value9": 1
                },
                "strlen": {
                    "calculate_string_length": 1
                },
                "uVar1": {
                    "format_value": 1,
                    "formatted_value": 9,
                    "number": 1,
                    "output": 1,
                    "result": 5,
                    "value": 11,
                    "value_to_format": 1
                }
            },
            "called": [
                "FUN_00102290",
                "FUN_00102ee0"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid process_report_and_exit_00102db0(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4,\n                 undefined4 arg5,undefined4 arg6,undefined4 param7,undefined4 param8,\n                 undefined8 param9,undefined8 param10,undefined8 param11,undefined8 param12,\n                 undefined8 param13,undefined8 param14)\n\n{\n  char flag;\n  char *format_string;\n  undefined8 value;\n  char output_string [48];\n  undefined4 buffer_size;\n  undefined4 length;\n  undefined *pointer;\n  undefined *local_buffer;\n  undefined local_buffer [8];\n  undefined8 local_param10;\n  undefined8 local_param11;\n  undefined8 local_param12;\n  undefined8 local_param13;\n  undefined8 local_param14;\n  undefined4 local_param1;\n  undefined4 local_param2;\n  undefined4 local_param3;\n  undefined4 local_param4;\n  undefined4 local_param5;\n  undefined4 local_param6;\n  undefined4 local_param7;\n  undefined4 local_param8;\n  \n  if (flag != '\\0') {\n    local_param1 = arg1;\n    local_param2 = arg2;\n    local_param3 = arg3;\n    local_param4 = arg4;\n    local_param5 = arg5;\n    local_param6 = arg6;\n    local_param7 = param7;\n    local_param8 = param8;\n  }\n  pointer = &stack0x00000008;\n  buffer_size = 8;\n  local_buffer = local_buffer;\n  length = 0x30;\n  local_param10 = param10;\n  local_param11 = param11;\n  local_param12 = param12;\n  local_param13 = param13;\n  local_param14 = param14;\n  report(param9,&buffer_size);\n  value = 1;\n  xexit(1);\n  if (DAT_0010733c == 0) {\n    format_string = \"%lu\";\n  }\n  else {\n    format_string = \"0x%lx\";\n    if (DAT_0010733c == 1) {\n      format_string = \"0%lo\";\n    }\n  }\n  sprintf(output_string,format_string,value);\n  calculate_string_length(output_string);\n  return;\n}\n\n",
            "current_name": "process_report_and_exit_00102db0",
            "entrypoint": "0x00102db0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102db0": "process_report_and_exit_00102db0",
                "__format": "format_string",
                "acStack_110": "output_string",
                "in_AL": "flag",
                "local_18": "local_param8",
                "local_28": "local_param7",
                "local_38": "local_param6",
                "local_48": "local_param5",
                "local_58": "local_param4",
                "local_68": "local_param3",
                "local_78": "local_param2",
                "local_88": "local_param1",
                "local_90": "local_param14",
                "local_98": "local_param13",
                "local_a0": "local_param12",
                "local_a8": "local_param11",
                "local_b0": "local_param10",
                "local_b8": "local_buffer",
                "local_c8": "local_buffer",
                "local_d0": "pointer",
                "local_d4": "length",
                "local_d8": "buffer_size",
                "param_1": "arg1",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13",
                "param_14": "param14",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "param_5": "arg5",
                "param_6": "arg6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9",
                "strlen": "calculate_string_length",
                "uVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102e50": {
            "additional_data": {
                "FUN_00102e50": {
                    "convert_to_formatted_string": 1,
                    "convert_to_hex_string": 1,
                    "format_and_print": 4,
                    "format_and_print_number": 14,
                    "format_and_print_param": 1,
                    "format_and_print_value": 8,
                    "print_formatted_number": 1,
                    "print_formatted_parameter": 1
                },
                "__format": {
                    "format_specifier": 3,
                    "format_string": 28
                },
                "acStack_38": {
                    "buffer": 5,
                    "formatted_number": 3,
                    "formatted_string": 1,
                    "output_buffer": 12,
                    "output_string": 10
                },
                "param_1": {
                    "input_number": 1,
                    "input_value": 3,
                    "number": 15,
                    "value": 12
                }
            },
            "called": [
                "FUN_001022e0",
                "FUN_00102100",
                "FUN_001026f6"
            ],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\nvoid format_and_print_number_00102e50(undefined8 number)\n\n{\n  char *format_string;\n  char output_buffer [48];\n  \n  if (DAT_0010733c == 0) {\n    format_string = \"%lu\";\n  }\n  else {\n    format_string = \"0x%lx\";\n    if (DAT_0010733c == 1) {\n      format_string = \"0%lo\";\n    }\n  }\n  sprintf(output_buffer,format_string,number);\n  strlen(output_buffer);\n  return;\n}\n\n",
            "current_name": "format_and_print_number_00102e50",
            "entrypoint": "0x00102e50",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102e50": "format_and_print_number_00102e50",
                "__format": "format_string",
                "acStack_38": "output_buffer",
                "param_1": "number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102e90": {
            "additional_data": {
                "FUN_00102e90": {
                    "format_and_print_number": 1,
                    "format_and_print_param": 1,
                    "print_formatted_number": 17,
                    "print_formatted_output": 2,
                    "print_formatted_value": 10
                },
                "__format": {
                    "format": 7,
                    "format_specifier": 5,
                    "format_str": 1,
                    "format_string": 17
                },
                "acStack_48": {
                    "buffer": 9,
                    "formatted_number": 12,
                    "formatted_output": 1,
                    "formatted_string": 3,
                    "formatted_value": 3,
                    "output_string": 2
                },
                "param_1": {
                    "format_width": 5,
                    "indentation": 1,
                    "length": 1,
                    "padding": 2,
                    "padding_length": 1,
                    "width": 21
                },
                "param_2": {
                    "number": 18,
                    "value": 13
                }
            },
            "called": [
                "FUN_00102120",
                "FUN_00102710",
                "FUN_001022e0"
            ],
            "calling": [
                "FUN_00102a90",
                "FUN_00103130",
                "FUN_00102fe0"
            ],
            "code": "\nvoid print_formatted_number_00102e90(ulong width,undefined8 number)\n\n{\n  char *format_string;\n  char formatted_number [56];\n  \n  if (DAT_0010733c == 0) {\n    sprintf(formatted_number,\"%lu\",number);\n    printf(\"%*s\",width & 0xffffffff,formatted_number);\n  }\n  else {\n    format_string = \"0x%lx\";\n    if (DAT_0010733c == 1) {\n      format_string = \"0%lo\";\n    }\n    sprintf(formatted_number,format_string,number);\n    printf(\"%*s\",width & 0xffffffff,formatted_number);\n  }\n  return;\n}\n\n",
            "current_name": "print_formatted_number_00102e90",
            "entrypoint": "0x00102e90",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102e90": "print_formatted_number_00102e90",
                "__format": "format_string",
                "acStack_48": "formatted_number",
                "param_1": "width",
                "param_2": "number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102ee0": {
            "additional_data": {
                "FUN_00102ee0": {
                    "log_error_message": 1,
                    "print_error_message": 27,
                    "print_formatted_error_message": 1,
                    "print_formatted_message": 1
                },
                "__gnuc_va_list": {
                    "arg_list": 1,
                    "varargs": 1,
                    "variable_argument_list": 1
                },
                "_stderr": {
                    "_stderr": 1,
                    "error_buffer": 1,
                    "error_output": 2,
                    "error_stream": 1,
                    "standard_error": 8,
                    "stderr": 3,
                    "stderr_buffer": 1,
                    "stderr_stream": 2
                },
                "_stdout": {
                    "_stdout": 1,
                    "output": 1,
                    "output_buffer": 1,
                    "output_stream": 1,
                    "standard_output": 7,
                    "stdout": 3,
                    "stdout_buffer": 1,
                    "stdout_stream": 2
                },
                "fflush": {
                    "clear_standard_output": 1,
                    "flush_output": 1,
                    "flush_standard_output": 2,
                    "flush_stdout": 1
                },
                "fprintf": {
                    "print_formatted": 3,
                    "print_to_error_stream": 1,
                    "print_to_standard_error": 2,
                    "print_to_stderr": 1
                },
                "param_1": {
                    "error_message": 12,
                    "error_message_format": 1,
                    "format_string": 5,
                    "message": 12,
                    "message_format": 1
                },
                "param_2": {
                    "arg_list": 1,
                    "args": 12,
                    "args_list": 3,
                    "arguments": 8,
                    "format_args": 1,
                    "var_args": 2,
                    "variable_arguments": 2
                },
                "putc": {
                    "print_new_line": 3,
                    "put_character_to_standard_error": 1,
                    "write_character": 2,
                    "write_character_to_error_stream": 1
                },
                "putchar": {
                    "write_character": 1
                },
                "stderr": {
                    "standard_error": 1
                },
                "stdout": {
                    "standard_output": 1
                },
                "vfprintf": {
                    "print_formatted_to_stderr": 1,
                    "print_variable_arguments_to_standard_error": 1
                }
            },
            "called": [
                "FUN_001021e0",
                "FUN_001021d0",
                "FUN_001022b0",
                "FUN_00102230"
            ],
            "calling": [
                "FUN_00102db0",
                "FUN_00102f40"
            ],
            "code": "\n\n\nvoid print_formatted_error_message_00102ee0(char *error_message,varargs args)\n\n{\n  flush_standard_output(standard_output);\n  print_formatted(standard_error,\"%s: \",DAT_00107350);\n  print_formatted_to_stderr(standard_error,error_message,args);\n  print_new_line(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_formatted_error_message_00102ee0",
            "entrypoint": "0x00102ee0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102ee0": "print_formatted_error_message_00102ee0",
                "__gnuc_va_list": "varargs",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "fflush": "flush_standard_output",
                "fprintf": "print_formatted",
                "param_1": "error_message",
                "param_2": "args",
                "putc": "print_new_line",
                "stderr": "standard_error",
                "stdout": "standard_output",
                "vfprintf": "print_formatted_to_stderr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f40": {
            "additional_data": {
                "FUN_00102ee0": {
                    "process_report": 1
                },
                "FUN_00102f40": {
                    "process_report": 2,
                    "report_and_process_data": 2,
                    "report_and_store_data": 1,
                    "report_data": 22,
                    "report_function": 1,
                    "report_to_server": 1,
                    "send_report": 1
                },
                "in_AL": {
                    "condition": 7,
                    "condition_flag": 1,
                    "flag": 14,
                    "input_flag": 1,
                    "is_condition_true": 2,
                    "is_enabled": 1,
                    "is_report": 1
                },
                "local_18": {
                    "copy8": 1,
                    "data8_copy": 3,
                    "input_8_copy": 1,
                    "input_param_8_copy": 1,
                    "internal_input_8": 1,
                    "local_param8": 2,
                    "local_param_8": 1,
                    "modified_input8": 1,
                    "param8": 1,
                    "param_8_value": 1,
                    "parameter7": 1,
                    "position": 1,
                    "report_param8": 2,
                    "report_param_8": 1,
                    "report_var8": 1,
                    "saved_input8": 1,
                    "stored_input8": 1,
                    "temp8": 1,
                    "temp_data8": 1,
                    "temp_input8": 3,
                    "value16": 1,
                    "value8_copy": 1
                },
                "local_28": {
                    "address": 1,
                    "copy7": 1,
                    "data7_copy": 3,
                    "input_7_copy": 1,
                    "input_param_7_copy": 1,
                    "internal_input_7": 1,
                    "local_param7": 2,
                    "local_param_7": 1,
                    "modified_input7": 1,
                    "param7": 1,
                    "param_7_value": 1,
                    "parameter6": 1,
                    "report_param7": 2,
                    "report_param_7": 1,
                    "report_var7": 1,
                    "saved_input7": 1,
                    "stored_input7": 1,
                    "temp7": 1,
                    "temp_data7": 1,
                    "temp_input7": 3,
                    "value15": 1,
                    "value7_copy": 1
                },
                "local_38": {
                    "copy6": 1,
                    "data6_copy": 3,
                    "input_6_copy": 1,
                    "input_param_6_copy": 1,
                    "internal_input_6": 1,
                    "local_param6": 2,
                    "local_param_6": 1,
                    "modified_input6": 1,
                    "param6": 1,
                    "param_6_value": 1,
                    "parameter5": 1,
                    "report_param6": 2,
                    "report_param_6": 1,
                    "report_var6": 1,
                    "saved_input6": 1,
                    "stored_input6": 1,
                    "temp6": 1,
                    "temp_data6": 1,
                    "temp_input6": 3,
                    "value": 1,
                    "value14": 1,
                    "value6_copy": 1
                },
                "local_48": {
                    "copy5": 1,
                    "data5_copy": 3,
                    "input_5_copy": 1,
                    "input_param_5_copy": 1,
                    "internal_input_5": 1,
                    "local_param5": 2,
                    "local_param_5": 1,
                    "modified_input5": 1,
                    "offset": 1,
                    "param5": 1,
                    "param_5_value": 1,
                    "parameter4": 1,
                    "report_param5": 2,
                    "report_param_5": 1,
                    "report_var5": 1,
                    "saved_input5": 1,
                    "stored_input5": 1,
                    "temp5": 1,
                    "temp_data5": 1,
                    "temp_input5": 3,
                    "value13": 1,
                    "value5_copy": 1
                },
                "local_58": {
                    "copy4": 1,
                    "data4_copy": 3,
                    "index": 1,
                    "input_4_copy": 1,
                    "input_param_4_copy": 1,
                    "internal_input_4": 1,
                    "local_param4": 2,
                    "local_param_4": 1,
                    "modified_input4": 1,
                    "param4": 1,
                    "param_4_value": 1,
                    "parameter3": 1,
                    "password": 1,
                    "report_param4": 2,
                    "report_param_4": 1,
                    "report_var4": 1,
                    "saved_input4": 1,
                    "stored_input4": 1,
                    "temp4": 1,
                    "temp_data4": 1,
                    "temp_input4": 3,
                    "value12": 1,
                    "value4_copy": 1
                },
                "local_68": {
                    "copy3": 1,
                    "count": 1,
                    "data3_copy": 3,
                    "input_3_copy": 1,
                    "input_param_3_copy": 1,
                    "internal_input_3": 1,
                    "local_param3": 2,
                    "local_param_3": 1,
                    "modified_input3": 1,
                    "param3": 1,
                    "param_3_value": 1,
                    "parameter2": 1,
                    "report_param3": 2,
                    "report_param_3": 1,
                    "report_var3": 1,
                    "saved_input3": 1,
                    "stored_input3": 1,
                    "temp3": 1,
                    "temp_data3": 1,
                    "temp_input3": 3,
                    "username": 1,
                    "value11": 1,
                    "value3_copy": 1
                },
                "local_78": {
                    "copy2": 1,
                    "data2_copy": 3,
                    "input_2_copy": 1,
                    "input_param_2_copy": 1,
                    "internal_input_2": 1,
                    "length": 1,
                    "local_param2": 2,
                    "local_param_2": 1,
                    "modified_input2": 1,
                    "param2": 1,
                    "param_2_value": 1,
                    "parameter1": 1,
                    "port": 1,
                    "report_param2": 2,
                    "report_param_2": 1,
                    "report_var2": 1,
                    "saved_input2": 1,
                    "stored_input2": 1,
                    "temp2": 1,
                    "temp_data2": 1,
                    "temp_input2": 3,
                    "value10": 1,
                    "value2_copy": 1
                },
                "local_88": {
                    "address": 1,
                    "copy1": 1,
                    "data1_copy": 3,
                    "input_1_copy": 1,
                    "input_param_1_copy": 1,
                    "internal_input_1": 1,
                    "local_param1": 2,
                    "local_param_1": 1,
                    "modified_input1": 1,
                    "param1": 1,
                    "param_1_value": 1,
                    "report_param1": 2,
                    "report_param_1": 1,
                    "report_var1": 1,
                    "saved_input1": 1,
                    "service_name": 1,
                    "size": 1,
                    "stored_input1": 1,
                    "temp1": 1,
                    "temp_data1": 1,
                    "temp_input1": 3,
                    "value1_copy": 1,
                    "value9": 1
                },
                "local_90": {
                    "argument6": 1,
                    "data5": 1,
                    "data_param_6": 1,
                    "internal_output_5": 1,
                    "local_param14": 1,
                    "param14": 5,
                    "param14_copy": 1,
                    "param6": 1,
                    "param6_copy": 1,
                    "param_14": 4,
                    "param_14_value": 1,
                    "param_f": 1,
                    "param_value6_copy": 1,
                    "parameter5": 1,
                    "report_param14": 1,
                    "report_param_6_copy": 1,
                    "temp5": 3,
                    "temp_output6": 1,
                    "val5": 1,
                    "value5": 1,
                    "var14": 1
                },
                "local_98": {
                    "argument5": 1,
                    "data4": 1,
                    "data_param_5": 1,
                    "internal_output_4": 1,
                    "local_param13": 1,
                    "param13": 5,
                    "param13_copy": 1,
                    "param5": 1,
                    "param5_copy": 1,
                    "param_13": 4,
                    "param_13_value": 1,
                    "param_e": 1,
                    "param_value5_copy": 1,
                    "parameter4": 1,
                    "report_param13": 1,
                    "report_param_5_copy": 1,
                    "temp4": 3,
                    "temp_output5": 1,
                    "val4": 1,
                    "value4": 1,
                    "var13": 1
                },
                "local_a0": {
                    "argument4": 1,
                    "data3": 1,
                    "data_param_4": 1,
                    "internal_output_3": 1,
                    "local_param12": 1,
                    "param12": 5,
                    "param12_copy": 1,
                    "param4": 1,
                    "param4_copy": 1,
                    "param_12": 4,
                    "param_12_value": 1,
                    "param_d": 1,
                    "param_value4_copy": 1,
                    "parameter3": 1,
                    "report_param12": 1,
                    "report_param_4_copy": 1,
                    "temp3": 3,
                    "temp_output4": 1,
                    "val3": 1,
                    "value3": 1,
                    "var12": 1
                },
                "local_a8": {
                    "argument3": 1,
                    "data2": 1,
                    "data_param_3": 1,
                    "internal_output_2": 1,
                    "local_param11": 1,
                    "param11": 5,
                    "param11_copy": 1,
                    "param3": 1,
                    "param3_copy": 1,
                    "param_11": 4,
                    "param_11_value": 1,
                    "param_c": 1,
                    "param_value3_copy": 1,
                    "parameter2": 1,
                    "report_param11": 1,
                    "report_param_3_copy": 1,
                    "temp2": 3,
                    "temp_output3": 1,
                    "val2": 1,
                    "value2": 1,
                    "var11": 1
                },
                "local_b0": {
                    "argument2": 1,
                    "data1": 1,
                    "data_param_2": 1,
                    "internal_output_1": 1,
                    "local_param10": 1,
                    "param10": 5,
                    "param10_copy": 1,
                    "param2": 1,
                    "param2_copy": 1,
                    "param_10": 4,
                    "param_10_value": 1,
                    "param_b": 1,
                    "param_value2_copy": 1,
                    "parameter1": 1,
                    "report_param10": 1,
                    "report_param_2_copy": 1,
                    "temp1": 3,
                    "temp_output2": 1,
                    "val1": 1,
                    "value1": 1,
                    "var10": 1
                },
                "local_b8": {
                    "buffer": 5,
                    "local_array": 1,
                    "local_buffer": 5,
                    "local_data": 3,
                    "local_data_buffer": 1,
                    "output_buffer": 2,
                    "stack_buffer": 1,
                    "temp": 1,
                    "temp_buffer": 3,
                    "temporary_buffer": 6,
                    "unused_buffer": 1
                },
                "local_c8": {
                    "buffer": 5,
                    "buffer_ptr": 1,
                    "copy_destination": 1,
                    "local_array": 1,
                    "local_b8": 1,
                    "local_b8_ptr": 1,
                    "local_buffer": 13,
                    "local_buffer_ptr": 1,
                    "local_data_buffer": 1,
                    "local_variable3": 1,
                    "temp_buffer": 2,
                    "variable_pointer": 1
                },
                "local_d0": {
                    "address_ptr": 1,
                    "buffer": 9,
                    "buffer_pointer": 1,
                    "buffer_ptr": 5,
                    "copy_source": 1,
                    "local_buffer": 1,
                    "local_buffer_pointer": 1,
                    "local_pointer": 1,
                    "local_variable2": 1,
                    "pointer": 2,
                    "pointer_to_stack": 1,
                    "stack_address": 1,
                    "stack_data": 1,
                    "stack_pointer": 2,
                    "stack_ptr": 3
                },
                "local_d4": {
                    "buffer_length": 1,
                    "buffer_size": 1,
                    "constant": 1,
                    "copy_length": 1,
                    "data_size": 1,
                    "length": 6,
                    "local_b8_size": 1,
                    "local_buffer_length": 1,
                    "local_buffer_size": 1,
                    "local_variable1": 1,
                    "loop_count": 1,
                    "offset": 3,
                    "size": 1
                },
                "local_d8": {
                    "array_size": 1,
                    "buffer_size": 5,
                    "byte_count": 1,
                    "length": 4,
                    "local_size": 2,
                    "size": 12,
                    "stack_size": 5
                },
                "param_1": {
                    "address": 1,
                    "client_id": 1,
                    "data1": 4,
                    "error_code": 2,
                    "input1": 9,
                    "input_1": 3,
                    "input_param_1": 1,
                    "local_param_1": 1,
                    "report_data1": 1,
                    "report_data_1": 1,
                    "report_param1": 2,
                    "report_param_1": 1,
                    "size": 1,
                    "value1": 2
                },
                "param_10": {
                    "arg1": 1,
                    "data1": 1,
                    "data2": 3,
                    "data_param_2": 1,
                    "output2": 2,
                    "output_2": 1,
                    "param1": 1,
                    "param10": 3,
                    "param2": 2,
                    "param_10": 1,
                    "param_a": 1,
                    "param_b": 1,
                    "param_value2": 1,
                    "report_data10": 1,
                    "report_data_10": 1,
                    "report_param10": 2,
                    "report_param_10": 1,
                    "report_param_2": 1,
                    "value1": 3
                },
                "param_11": {
                    "arg2": 1,
                    "data2": 1,
                    "data3": 3,
                    "data_param_3": 1,
                    "output3": 2,
                    "output_3": 1,
                    "param11": 3,
                    "param2": 1,
                    "param3": 2,
                    "param_11": 1,
                    "param_b": 1,
                    "param_c": 1,
                    "param_value3": 1,
                    "report_data11": 1,
                    "report_data_11": 1,
                    "report_param11": 2,
                    "report_param_11": 1,
                    "report_param_3": 1,
                    "value2": 3
                },
                "param_12": {
                    "arg3": 1,
                    "data3": 1,
                    "data4": 3,
                    "data_param_4": 1,
                    "output4": 2,
                    "output_4": 1,
                    "param12": 3,
                    "param3": 1,
                    "param4": 2,
                    "param_12": 1,
                    "param_c": 1,
                    "param_d": 1,
                    "param_value4": 1,
                    "report_data12": 1,
                    "report_data_12": 1,
                    "report_param12": 2,
                    "report_param_12": 1,
                    "report_param_4": 1,
                    "value3": 3
                },
                "param_13": {
                    "arg4": 1,
                    "data4": 1,
                    "data5": 3,
                    "data_param_5": 1,
                    "output5": 2,
                    "output_5": 1,
                    "param13": 3,
                    "param4": 1,
                    "param5": 2,
                    "param_13": 1,
                    "param_d": 1,
                    "param_e": 1,
                    "param_value5": 1,
                    "report_data13": 1,
                    "report_data_13": 1,
                    "report_param13": 2,
                    "report_param_13": 1,
                    "report_param_5": 1,
                    "value4": 3
                },
                "param_14": {
                    "arg5": 1,
                    "data5": 1,
                    "data6": 3,
                    "data_param_6": 1,
                    "output6": 2,
                    "output_6": 1,
                    "param14": 3,
                    "param5": 1,
                    "param6": 2,
                    "param_14": 1,
                    "param_e": 1,
                    "param_f": 1,
                    "param_value6": 1,
                    "report_data14": 1,
                    "report_data_14": 1,
                    "report_param14": 2,
                    "report_param_14": 1,
                    "report_param_6": 1,
                    "value5": 3
                },
                "param_2": {
                    "data2": 4,
                    "flag": 1,
                    "input2": 9,
                    "input_2": 3,
                    "input_param_2": 1,
                    "length": 1,
                    "local_param_2": 1,
                    "param2": 1,
                    "port": 1,
                    "report_data2": 1,
                    "report_data_2": 1,
                    "report_param2": 2,
                    "report_param_2": 1,
                    "server_ip": 1,
                    "value2": 2
                },
                "param_3": {
                    "count": 1,
                    "data3": 4,
                    "input3": 9,
                    "input_3": 3,
                    "input_param_3": 1,
                    "local_param_3": 1,
                    "param3": 1,
                    "report_data3": 1,
                    "report_data_3": 1,
                    "report_param3": 2,
                    "report_param_3": 1,
                    "server_port": 1,
                    "username": 1,
                    "value1": 1,
                    "value3": 2
                },
                "param_4": {
                    "data4": 4,
                    "index": 1,
                    "input4": 9,
                    "input_4": 3,
                    "input_param_4": 1,
                    "local_param_4": 1,
                    "param4": 1,
                    "password": 1,
                    "report_data4": 1,
                    "report_data_4": 1,
                    "report_param4": 2,
                    "report_param_4": 1,
                    "user_id": 1,
                    "value2": 1,
                    "value4": 2
                },
                "param_5": {
                    "data5": 4,
                    "input5": 9,
                    "input_5": 3,
                    "input_param_5": 1,
                    "local_param_5": 1,
                    "offset": 1,
                    "param5": 1,
                    "report_data5": 1,
                    "report_data_5": 1,
                    "report_param5": 2,
                    "report_param_5": 1,
                    "session_id": 1,
                    "value3": 1,
                    "value5": 2
                },
                "param_6": {
                    "data6": 4,
                    "input6": 9,
                    "input_6": 3,
                    "input_param_6": 1,
                    "local_param_6": 1,
                    "param6": 1,
                    "report_data6": 1,
                    "report_data_6": 1,
                    "report_param6": 2,
                    "report_param_6": 1,
                    "timestamp": 1,
                    "value": 1,
                    "value4": 1,
                    "value6": 2
                },
                "param_7": {
                    "address": 1,
                    "data7": 4,
                    "input7": 9,
                    "input_7": 3,
                    "input_param_7": 1,
                    "local_param_7": 1,
                    "param7": 1,
                    "report_data7": 1,
                    "report_data_7": 1,
                    "report_param7": 2,
                    "report_param_7": 1,
                    "status": 1,
                    "value5": 1,
                    "value7": 2
                },
                "param_8": {
                    "data8": 4,
                    "error_code": 1,
                    "input8": 9,
                    "input_8": 3,
                    "input_param_8": 1,
                    "local_param_8": 1,
                    "param8": 1,
                    "position": 1,
                    "report_data8": 1,
                    "report_data_8": 1,
                    "report_param8": 2,
                    "report_param_8": 1,
                    "value6": 1,
                    "value8": 2
                },
                "param_9": {
                    "data": 4,
                    "data1": 3,
                    "data_param_1": 1,
                    "data_ptr": 2,
                    "output1": 2,
                    "output_1": 1,
                    "param1": 2,
                    "param_a": 1,
                    "param_value1": 1,
                    "report_callback": 1,
                    "report_data9": 1,
                    "report_data_9": 1,
                    "report_func": 1,
                    "report_function": 2,
                    "report_handle": 1,
                    "report_param9": 2,
                    "report_param_1": 1,
                    "report_param_9": 1
                }
            },
            "called": [
                "FUN_00102ee0"
            ],
            "calling": [
                "FUN_00103130",
                "FUN_00102980",
                "FUN_00102360"
            ],
            "code": "\nvoid report_and_process_data_00102f40(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 input5,undefined4 input6,undefined4 input7,undefined4 input8,\n                 undefined8 data,undefined8 param10,undefined8 value2,undefined8 data4,\n                 undefined8 param13,undefined8 param14)\n\n{\n  char flag;\n  undefined4 size;\n  undefined4 length;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined temporary_buffer [8];\n  undefined8 param10;\n  undefined8 param11;\n  undefined8 param12;\n  undefined8 param13;\n  undefined8 param14;\n  undefined4 temp_input1;\n  undefined4 data2_copy;\n  undefined4 temp_input3;\n  undefined4 temp_input4;\n  undefined4 temp_input5;\n  undefined4 temp_input6;\n  undefined4 data7_copy;\n  undefined4 temp_input8;\n  \n  if (flag != '\\0') {\n    temp_input1 = input1;\n    data2_copy = input2;\n    temp_input3 = input3;\n    temp_input4 = input4;\n    temp_input5 = input5;\n    temp_input6 = input6;\n    data7_copy = input7;\n    temp_input8 = input8;\n  }\n  buffer = &stack0x00000008;\n  size = 8;\n  local_buffer = temporary_buffer;\n  length = 0x30;\n  param10 = param10;\n  param11 = value2;\n  param12 = data4;\n  param13 = param13;\n  param14 = param14;\n  report(data,&size);\n  return;\n}\n\n",
            "current_name": "report_and_process_data_00102f40",
            "entrypoint": "0x00102f40",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f40": "report_and_process_data_00102f40",
                "in_AL": "flag",
                "local_18": "temp_input8",
                "local_28": "data7_copy",
                "local_38": "temp_input6",
                "local_48": "temp_input5",
                "local_58": "temp_input4",
                "local_68": "temp_input3",
                "local_78": "data2_copy",
                "local_88": "temp_input1",
                "local_90": "param14",
                "local_98": "param13",
                "local_a0": "param12",
                "local_a8": "param11",
                "local_b0": "param10",
                "local_b8": "temporary_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "length",
                "local_d8": "size",
                "param_1": "input1",
                "param_10": "param10",
                "param_11": "value2",
                "param_12": "data4",
                "param_13": "param13",
                "param_14": "param14",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "param_7": "input7",
                "param_8": "input8",
                "param_9": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102fe0": {
            "additional_data": {
                "FUN_00102fe0": {
                    "print_aligned_numbers": 1,
                    "print_data": 2,
                    "print_formatted_data": 4,
                    "print_formatted_numbers": 6,
                    "print_formatted_output": 1,
                    "print_numbers": 10,
                    "print_param_with_numbers": 1,
                    "print_parameters": 2,
                    "print_three_values": 2,
                    "print_values": 2
                },
                "param_1": {
                    "format": 1,
                    "header": 2,
                    "header_string": 1,
                    "label": 7,
                    "message": 2,
                    "param_name": 1,
                    "param_string": 1,
                    "str": 1,
                    "str_param": 1,
                    "string": 1,
                    "string_param": 4,
                    "text": 8,
                    "title": 1
                },
                "param_2": {
                    "first_value": 2,
                    "num_1": 1,
                    "num_param1": 1,
                    "number1": 9,
                    "number_1": 12,
                    "number_param1": 1,
                    "number_param_1": 3,
                    "value1": 2
                },
                "param_3": {
                    "num_2": 1,
                    "num_param2": 1,
                    "number2": 9,
                    "number_2": 12,
                    "number_param2": 1,
                    "number_param_2": 3,
                    "second_value": 2,
                    "value2": 2
                },
                "printf": {
                    "print": 4,
                    "print_formatted": 2,
                    "print_string": 1
                },
                "putchar": {
                    "output_newline": 1,
                    "print_new_line": 2,
                    "print_newline": 4
                },
                "rprint_number": {
                    "print_reverse_number": 1,
                    "print_reversed_number": 1,
                    "reverse_print_number": 7
                }
            },
            "called": [
                "FUN_00102120",
                "FUN_00102e90",
                "FUN_00102040"
            ],
            "calling": [
                "FUN_00102a90",
                "FUN_00103cc0"
            ],
            "code": "\nvoid print_formatted_numbers_00102fe0(undefined8 text,undefined8 number_1,undefined8 number_2)\n\n{\n  print(\"%-*s   \",(ulong)DAT_001072d0,text);\n  reverse_print_number(DAT_001072c8,number_1);\n  print(\"   \");\n  reverse_print_number(DAT_001072cc,number_2);\n  print_newline(10);\n  return;\n}\n\n",
            "current_name": "print_formatted_numbers_00102fe0",
            "entrypoint": "0x00102fe0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102fe0": "print_formatted_numbers_00102fe0",
                "param_1": "text",
                "param_2": "number_1",
                "param_3": "number_2",
                "printf": "print",
                "putchar": "print_newline",
                "rprint_number": "reverse_print_number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103040": {
            "additional_data": {
                "FUN_00103040": {
                    "execute_main_function": 1,
                    "process_main_entry": 1,
                    "start_main": 2,
                    "start_main_entry": 1,
                    "start_main_function": 1,
                    "start_main_loop": 5,
                    "start_main_process": 1,
                    "start_program": 1
                },
                "FUN_00103130": {
                    "process_data": 3,
                    "process_param": 1
                },
                "auStack_8": {
                    "aux_stack": 1,
                    "dummy_stack": 1,
                    "stack": 6,
                    "stack_8": 1,
                    "stack_buffer": 5,
                    "stack_frame": 1,
                    "stack_initialization": 1,
                    "stack_space": 1,
                    "stack_vars": 1
                },
                "param_1": {
                    "arg1": 8,
                    "arg_1": 2,
                    "argc": 6,
                    "argument1": 1,
                    "entry_param": 1,
                    "entry_point": 3,
                    "entry_point_arg1": 1,
                    "param1": 4,
                    "param_1": 4,
                    "unused_param1": 1
                },
                "param_2": {
                    "arg": 1,
                    "arg2": 8,
                    "arg_2": 2,
                    "argc": 1,
                    "argc_argv": 1,
                    "argument2": 1,
                    "argv": 6,
                    "entry_point_arg2": 1,
                    "entry_ptr": 1,
                    "param2": 4,
                    "param_2": 4,
                    "unused_param2": 1
                },
                "processEntry": {
                    "initialize_program": 3,
                    "start_main": 2,
                    "start_main_loop": 11,
                    "start_process": 1,
                    "start_program": 1
                }
            },
            "called": [
                "FUN_00108010",
                "FUN_00103130"
            ],
            "calling": [],
            "code": "\nvoid start_main_loop_00103040 start_main_loop_00103040(undefined8 arg1,undefined8 arg2)\n\n{\n  undefined stack [8];\n  \n  __libc_start_main(main,arg2,&stack0x00000008,0,0,arg1,stack);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "start_main_loop_00103040",
            "entrypoint": "0x00103040",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103040": "start_main_loop_00103040",
                "auStack_8": "stack",
                "param_1": "arg1",
                "param_2": "arg2",
                "processEntry": "start_main_loop"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103070": {
            "called": [
                "FUN_00108020"
            ],
            "calling": [
                "FUN_001030e0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00103083) */\n/* WARNING: Removing unreachable block (ram,0x0010308f) */\n\nvoid FUNC_00103070(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103070",
            "entrypoint": "0x00103070",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103070": "FUNC_00103070"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_001030a0": {
            "called": [
                "FUN_001081c0"
            ],
            "calling": [
                "FUN_00103120"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x001030c4) */\n/* WARNING: Removing unreachable block (ram,0x001030d0) */\n\nvoid FUNC_001030a0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_001030a0",
            "entrypoint": "0x001030a0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_001030a0": "FUNC_001030a0"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_001030e0": {
            "additional_data": {
                "FUNC_00103070": {
                    "clean_up_resources": 2,
                    "cleanup": 3,
                    "cleanup_application": 2,
                    "cleanup_before_exit": 1,
                    "cleanup_function": 2,
                    "cleanup_resources": 5,
                    "do_additional_processing": 1,
                    "do_something": 1,
                    "execute_initialization": 1,
                    "perform_cleanup": 10,
                    "process_data": 1,
                    "some_helper_function": 1,
                    "update_configuration": 1
                },
                "FUN_001030e0": {
                    "execute_initialization": 1,
                    "initialize": 4,
                    "initialize_app": 1,
                    "initialize_application": 9,
                    "initialize_function": 1,
                    "initialize_if_needed": 1,
                    "initialize_if_not_already": 1,
                    "initialize_if_not_done": 1,
                    "initialize_library": 1,
                    "initialize_program": 11
                },
                "PTR_LOOP_001071a8": {
                    "loop_pointer": 1
                }
            },
            "called": [
                "FUN_00102350",
                "FUN_00103070"
            ],
            "calling": [],
            "code": "\nvoid initialize_program_001030e0(void)\n\n{\n  if (DAT_001072c0 != '\\0') {\n    return;\n  }\n  __cxa_finalize(PTR_LOOP_001071a8);\n  deregister_tm_clones();\n  DAT_001072c0 = 1;\n  return;\n}\n\n",
            "current_name": "initialize_program_001030e0",
            "entrypoint": "0x001030e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001030e0": "initialize_program_001030e0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103120": {
            "called": [
                "FUN_001030a0"
            ],
            "calling": [],
            "code": "\nvoid register_tm_clones(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n",
            "current_name": "FUN_00103120",
            "entrypoint": "0x00103120",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00103130": {
            "additional_data": {
                "FUN_00103130": {
                    "decompile_and_improve": 1,
                    "extract_at_files": 1,
                    "extract_contents_from_file": 1,
                    "parse_and_process_files": 1,
                    "parse_command_line": 2,
                    "parse_command_line_arguments": 2,
                    "parse_files": 1,
                    "parse_input_files": 1,
                    "process_files": 2,
                    "reverse_binary": 1
                },
                "_DAT_00107330": {
                    "flag_i": 1,
                    "opt_help_flag": 1
                },
                "_DAT_00107334": {
                    "flag_t": 1
                },
                "_DAT_00107338": {
                    "flag_d": 1,
                    "opt_version_flag": 1
                },
                "_DAT_0010733c": {
                    "flag_o": 1
                },
                "_DAT_00107340": {
                    "flag_m": 1
                },
                "_DAT_00107348": {
                    "flag_a": 1
                },
                "__ptr": {
                    "allocated_memory": 1,
                    "buffer": 1,
                    "byte_array2": 1,
                    "byte_list": 1,
                    "byte_pointer": 1,
                    "byte_pointer3": 3,
                    "byte_ptr": 1,
                    "byte_ptr2": 2,
                    "byte_ptr3": 10,
                    "byte_ptr_3": 1,
                    "new_buffer": 1,
                    "output_buffer_pointer": 1,
                    "ptr_byte2": 1,
                    "ptr_byte3": 1,
                    "ptr_stream": 1,
                    "temporary_buffer": 1,
                    "token_buffer": 1,
                    "word_buffer": 1
                },
                "__s": {
                    "buffer": 5,
                    "buffer_pointer": 1,
                    "byte_array": 1,
                    "byte_array1": 1,
                    "byte_pointer2": 4,
                    "byte_ptr": 1,
                    "byte_ptr1": 1,
                    "byte_ptr2": 10,
                    "byte_ptr_2": 1,
                    "byte_stream": 2,
                    "file_content": 1,
                    "ptr_byte2": 1,
                    "str": 1
                },
                "__src": {
                    "long_array1": 1,
                    "long_list": 1,
                    "long_pointer1": 3,
                    "long_pointer_array": 1,
                    "long_ptr": 4,
                    "long_ptr1": 10,
                    "ptr_long1": 2,
                    "ptr_src": 1,
                    "source": 1,
                    "source_files": 1,
                    "src_buffer": 1,
                    "string_array": 1,
                    "strings_array": 1,
                    "tokens": 1,
                    "word_array_pointer": 1
                },
                "__stream": {
                    "file": 4,
                    "file_pointer": 6,
                    "file_ptr": 4,
                    "file_stream": 16
                },
                "__xstat": {
                    "get_file_attribute": 1
                },
                "_optarg": {
                    "opt_arg": 1,
                    "option_argument": 1
                },
                "_optind": {
                    "opt_index": 1,
                    "option_index": 2
                },
                "_stderr": {
                    "error_stream": 1,
                    "standard_error": 1,
                    "stderr_ptr": 1
                },
                "_stdout": {
                    "standard_output": 2,
                    "stdout_ptr": 1
                },
                "bVar2": {
                    "binary_mode": 1,
                    "bool_var1": 4,
                    "byte_val": 1,
                    "byte_var": 3,
                    "byte_var1": 1,
                    "byte_var2": 16,
                    "byte_var_2": 1,
                    "current_byte": 1,
                    "is_directory": 1,
                    "var_byte": 1
                },
                "bVar23": {
                    "bool3": 2,
                    "bool_var23": 3,
                    "bool_var3": 13,
                    "bool_var4": 4,
                    "bool_var5": 3,
                    "error": 1,
                    "is_double_quoted": 1,
                    "reset": 1
                },
                "bVar3": {
                    "backslash_escape": 1,
                    "bool1": 2,
                    "bool_var1": 14,
                    "bool_var2": 4,
                    "bool_var3": 6,
                    "bool_var_3": 1,
                    "escaped": 1,
                    "is_escaped": 1
                },
                "bVar4": {
                    "bool2": 2,
                    "bool_var2": 14,
                    "bool_var3": 4,
                    "bool_var4": 6,
                    "bool_var_4": 1,
                    "is_single_quoted": 1,
                    "single_quote_string": 1,
                    "single_quoted": 1
                },
                "bVar6": {
                    "byte1": 1,
                    "byte_temp": 1,
                    "byte_value": 1,
                    "byte_var1": 3,
                    "byte_var2": 4,
                    "byte_var3": 10,
                    "byte_var6": 6,
                    "byte_var_6": 1,
                    "current_char": 3
                },
                "bfd_set_error_program_name": {
                    "set_error_program_name": 2
                },
                "bindtextdomain": {
                    "bind_text_domain": 2
                },
                "cVar7": {
                    "char_temp": 1,
                    "char_value": 1,
                    "char_var": 8,
                    "char_var1": 11,
                    "char_var7": 6,
                    "char_var_7": 1,
                    "operation": 1,
                    "target_set_success": 1
                },
                "dcgettext": {
                    "get_text_domain": 1
                },
                "display_file": {
                    "display_file": 2
                },
                "exit": {
                    "end_program": 1,
                    "exit_program": 1
                },
                "fatal": {
                    "fatal_error": 1,
                    "print_fatal_error": 1,
                    "serious_error": 1
                },
                "fclose": {
                    "close_file": 1,
                    "file_close": 1
                },
                "ferror": {
                    "file_error": 1,
                    "get_error": 1
                },
                "fgetws": {
                    "read_wide_string": 1
                },
                "fopen": {
                    "file_open": 1,
                    "open_file": 1
                },
                "fprintf": {
                    "formatted_print": 1,
                    "print_formatted": 1
                },
                "fread": {
                    "file_read": 1,
                    "read_file": 1
                },
                "free": {
                    "free_memory": 1
                },
                "freopen": {
                    "file_reopen": 1
                },
                "fseek": {
                    "file_seek": 1,
                    "set_file_position": 1
                },
                "fstat": {
                    "get_file_information": 1
                },
                "ftell": {
                    "file_tell": 1,
                    "get_file_position": 1
                },
                "fwrite": {
                    "write_file": 1
                },
                "getopt_long": {
                    "get_long_option": 2
                },
                "gettext": {
                    "get_text": 1
                },
                "iVar21": {
                    "command_line_index": 1,
                    "counter1": 1,
                    "counter2": 1,
                    "i_var1": 1,
                    "index": 1,
                    "index2": 12,
                    "index_2": 1,
                    "index_var1": 1,
                    "index_var2": 2,
                    "iter_var2": 2,
                    "loop_index2": 1,
                    "loop_var": 1,
                    "loop_var1": 1,
                    "loop_var2": 1,
                    "option": 1
                },
                "iVar22": {
                    "command_line_index": 1,
                    "counter2": 1,
                    "counter3": 1,
                    "i_var2": 1,
                    "index": 1,
                    "index3": 12,
                    "index_3": 1,
                    "index_var2": 1,
                    "index_var3": 2,
                    "iter_var3": 2,
                    "loop_index3": 1,
                    "loop_var": 1,
                    "loop_var2": 1,
                    "loop_var3": 1,
                    "option": 1
                },
                "iVar8": {
                    "counter": 1,
                    "current_index": 1,
                    "i": 1,
                    "index": 18,
                    "index_var1": 2,
                    "iter_var": 1,
                    "iter_var1": 1,
                    "iteration_var_8": 1,
                    "iterator": 1,
                    "loop_counter": 1,
                    "loop_index": 1,
                    "loop_var1": 1
                },
                "lVar12": {
                    "allocated_length": 1,
                    "file_size": 1,
                    "long_val": 1,
                    "long_var": 5,
                    "long_var1": 17,
                    "long_var12": 2,
                    "long_var_12": 1,
                    "ptr_to_duplicate": 1,
                    "token": 1
                },
                "lVar19": {
                    "file_size": 1,
                    "i": 2,
                    "long_val_2": 1,
                    "long_var19": 2,
                    "long_var2": 20,
                    "long_var3": 1,
                    "loop_var": 1
                },
                "local_108": {
                    "content_size": 1,
                    "file_name_length": 1,
                    "filename_length": 1,
                    "local_size": 11,
                    "local_var108": 1,
                    "local_var3": 10,
                    "local_var_108": 1,
                    "local_var_3": 1,
                    "size_t_var108": 1,
                    "token_length": 1
                },
                "local_10c": {
                    "counter4": 1,
                    "local_counter2": 1,
                    "local_index2": 6,
                    "local_index_var2": 1,
                    "local_int2": 2,
                    "local_var10c": 1,
                    "local_var2": 11,
                    "local_var_10c": 1,
                    "local_var_2": 1,
                    "max_directories": 1,
                    "max_iterations": 1,
                    "option_index": 1,
                    "remaining_options": 1
                },
                "local_110": {
                    "counter3": 1,
                    "current_index": 1,
                    "iterator": 1,
                    "last_directory_index": 1,
                    "local_counter1": 1,
                    "local_index1": 6,
                    "local_index_var1": 1,
                    "local_int1": 2,
                    "local_var1": 11,
                    "local_var110": 1,
                    "local_var_1": 1,
                    "local_var_110": 1,
                    "num_options": 1
                },
                "local_c8": {
                    "file_info": 1,
                    "file_stat": 3,
                    "file_status": 1,
                    "local_stat": 6,
                    "local_var4": 2,
                    "local_var_4": 1,
                    "stat_buffer": 1,
                    "stat_data": 2,
                    "stat_struct": 8,
                    "stat_var": 3,
                    "stat_var1": 1
                },
                "memcmp": {
                    "memory_compare": 1
                },
                "memcpy": {
                    "copy_memory": 1,
                    "memory_copy": 1
                },
                "non_fatal": {
                    "non_fatal_error": 1,
                    "not_fatal": 1,
                    "print_non_fatal": 1
                },
                "opt": {
                    "option_value": 1
                },
                "opt_long": {
                    "get_option_long": 1
                },
                "optarg": {
                    "option_argument": 2
                },
                "param_1": {
                    "argc": 14,
                    "count": 3,
                    "num_files": 5,
                    "num_params": 7,
                    "size": 1
                },
                "param_2": {
                    "args_array": 1,
                    "argv": 14,
                    "file_list": 1,
                    "file_names": 3,
                    "file_paths": 4,
                    "files": 2,
                    "param_array": 4,
                    "params": 1
                },
                "pbVar1": {
                    "byte_pointer": 1,
                    "byte_pointer1": 5,
                    "byte_ptr": 2,
                    "byte_ptr1": 11,
                    "current_byte": 1,
                    "current_char": 2,
                    "current_ptr": 1,
                    "ptr_byte": 1,
                    "ptr_byte1": 4,
                    "ptr_byte_1": 1
                },
                "pbVar18": {
                    "byte_pointer2": 2,
                    "byte_pointer3": 1,
                    "byte_pointer4": 3,
                    "byte_ptr": 1,
                    "byte_ptr2": 2,
                    "byte_ptr3": 2,
                    "byte_ptr4": 10,
                    "byte_ptr_18": 1,
                    "byte_ptr_4": 1,
                    "current_char": 2,
                    "current_ptr": 1,
                    "current_string_pos": 1,
                    "ptr_byte2": 1,
                    "ptr_byte4": 2
                },
                "pbVar20": {
                    "byte_pointer3": 1,
                    "byte_pointer4": 1,
                    "byte_pointer5": 3,
                    "byte_ptr2": 1,
                    "byte_ptr3": 2,
                    "byte_ptr4": 2,
                    "byte_ptr5": 10,
                    "byte_ptr_5": 1,
                    "current_byte": 1,
                    "current_char": 2,
                    "ptr_byte3": 1,
                    "ptr_byte5": 2,
                    "ptr_to_char": 1
                },
                "pcVar10": {
                    "char_pointer2": 5,
                    "char_ptr10": 1,
                    "char_ptr2": 12,
                    "char_ptr_2": 1,
                    "char_var_10": 1,
                    "file_char": 1,
                    "file_name": 2,
                    "file_path": 1,
                    "file_ptr": 1,
                    "filename": 2,
                    "ptr_char2": 3
                },
                "pcVar17": {
                    "char_pointer3": 3,
                    "char_ptr17": 1,
                    "char_ptr3": 8,
                    "char_ptr_3": 1,
                    "char_var_17": 1,
                    "error_message": 1,
                    "locale": 1,
                    "message": 3,
                    "option_string": 1,
                    "path_char": 1,
                    "program_name": 1,
                    "ptr_char3": 3,
                    "str": 2,
                    "string": 1,
                    "string_ptr1": 1,
                    "string_var1": 1
                },
                "pcVar5": {
                    "char_pointer1": 5,
                    "char_ptr": 4,
                    "char_ptr1": 10,
                    "char_ptr5": 1,
                    "char_var_5": 1,
                    "error_message": 2,
                    "format_specifier": 1,
                    "last_char_pos": 1,
                    "ptr_char": 2,
                    "ptr_char1": 2,
                    "string_pointer": 1
                },
                "pcbVar1": {
                    "byte_ptr1": 1
                },
                "plVar13": {
                    "argv": 2,
                    "file_list": 1,
                    "file_names": 1,
                    "file_paths_ptr": 2,
                    "input_file_list": 1,
                    "long_pointer1": 1,
                    "long_pointer2": 1,
                    "long_ptr2": 6,
                    "long_ptr_arr": 1,
                    "long_var_pointer1": 1,
                    "param2_ptr": 1,
                    "param_2": 1,
                    "param_array": 1,
                    "param_array_ptr": 1,
                    "param_pointer": 1,
                    "param_ptr1": 1,
                    "parameters_array": 1,
                    "pointer_long_13": 1,
                    "ptr_long": 1,
                    "ptr_long2": 2,
                    "ptr_to_long1": 1,
                    "token_array": 1
                },
                "plVar14": {
                    "argv": 1,
                    "file_names_copy": 1,
                    "file_paths_ptr2": 2,
                    "long_pointer2": 3,
                    "long_pointer3": 1,
                    "long_ptr1": 1,
                    "long_ptr2": 2,
                    "long_ptr3": 6,
                    "long_var_pointer2": 1,
                    "new_file_list": 1,
                    "new_token_array": 1,
                    "output_file_list": 1,
                    "param_array_ptr_2": 1,
                    "param_ptr2": 1,
                    "pointer_long_14": 1,
                    "ptr_long2": 1,
                    "ptr_long3": 2,
                    "ptr_to_long2": 1,
                    "string_array": 1,
                    "temp_params_array": 1
                },
                "print_number": {
                    "print_number": 1
                },
                "printf": {
                    "print": 1,
                    "print_format": 1,
                    "print_formatted": 1
                },
                "putc": {
                    "write_character": 1
                },
                "putchar": {
                    "print_char": 2
                },
                "rprint_number": {
                    "print_number": 1
                },
                "sVar11": {
                    "buffer_size": 1,
                    "file_size": 2,
                    "length": 3,
                    "size": 15,
                    "size_t_var1": 1,
                    "size_t_var11": 1,
                    "size_var": 1,
                    "size_var1": 2,
                    "size_var_11": 1,
                    "stream_size": 1,
                    "string_length": 1,
                    "string_size": 1
                },
                "setlocale": {
                    "set_locale": 2
                },
                "strerror": {
                    "get_error_description": 1
                },
                "strlen": {
                    "string_length": 1
                },
                "strncpy": {
                    "string_copy": 1
                },
                "strtol": {
                    "parse_long": 1,
                    "str_to_long": 1
                },
                "textdomain": {
                    "text_domain": 2
                },
                "time": {
                    "get_current_time": 1
                },
                "uVar15": {
                    "error_number": 1,
                    "format_flags": 1,
                    "permission_mask": 1,
                    "total_size": 1,
                    "ulong_val": 1,
                    "ulong_var": 10,
                    "ulong_var1": 11,
                    "ulong_var15": 2,
                    "ulong_var_15": 1,
                    "un_var2": 1
                },
                "uVar16": {
                    "error": 1,
                    "error_message": 2,
                    "error_msg": 1,
                    "error_string": 1,
                    "long_var2": 1,
                    "return_value2": 1,
                    "ulong_val_2": 1,
                    "ulong_var2": 6,
                    "un_var3": 1,
                    "undefined8_var": 3,
                    "undefined8_var1": 4,
                    "undefined8_var_16": 1,
                    "undefined_var": 1,
                    "undefined_var1": 1,
                    "undefined_var16": 2,
                    "undefined_var2": 3
                },
                "uVar9": {
                    "result": 10,
                    "result_var": 1,
                    "return_val": 2,
                    "return_value": 5,
                    "uint_var1": 1,
                    "un_var1": 1,
                    "undefined4_var": 2,
                    "undefined4_var1": 2,
                    "undefined_var": 1,
                    "undefined_var1": 2,
                    "undefined_var9": 2,
                    "undefined_var_9": 1
                },
                "unaff_RBP": {
                    "additional_options": 1,
                    "arg_list": 1,
                    "pointer": 1,
                    "pointer_register": 1,
                    "program_args": 1,
                    "ptr_to_undefined": 1,
                    "ptr_undefined": 1,
                    "ptr_unk1": 1,
                    "unaff_ptr": 3,
                    "unaff_rbp": 1,
                    "undefined_pointer": 3,
                    "undefined_pointer1": 1,
                    "undefined_ptr": 7,
                    "undefined_ptr1": 3,
                    "undefined_var_pointer": 1
                },
                "usage": {
                    "print_usage": 1,
                    "show_usage": 2
                },
                "xdcgettext": {
                    "get_x_dc_gettext": 1
                },
                "xexit": {
                    "cleanup_and_exit": 1,
                    "exit_program": 1
                },
                "xmalloc_set_program_name": {
                    "set_program_name": 2
                },
                "xrealloc": {
                    "realloc_memory": 1
                },
                "xstrdup": {
                    "duplicate_string": 1,
                    "str_duplicate": 1
                }
            },
            "called": [
                "FUN_00102200",
                "FUN_00102170",
                "FUN_00102160",
                "FUN_001020b0",
                "FUN_001022d0",
                "FUN_00102190",
                "FUN_00102250",
                "FUN_0010281b",
                "FUN_00102210",
                "FUN_001020a0",
                "FUN_00102290",
                "FUN_00102980",
                "FUN_00102110",
                "FUN_001021e0",
                "FUN_00102030",
                "FUN_00102e90",
                "FUN_001021d0",
                "FUN_00102270",
                "FUN_001022f0",
                "FUN_00102240",
                "FUN_00102220",
                "FUN_001021a0",
                "FUN_00102db0",
                "FUN_001020e0",
                "FUN_00102f40",
                "FUN_00102300",
                "FUN_001020d0",
                "FUN_00102090",
                "FUN_001021c0",
                "FUN_00102120",
                "FUN_001021f0",
                "FUN_001020f0",
                "FUN_00102130",
                "FUN_00102260",
                "FUN_00102280",
                "FUN_00102080",
                "FUN_00102100"
            ],
            "calling": [
                "FUN_00103040"
            ],
            "code": "\n\n\nundefined4 parse_and_process_files_00103130(int argc,long *argv)\n\n{\n  byte *byte_ptr1;\n  byte byte_var2;\n  bool bool_var1;\n  bool bool_var2;\n  char *char_ptr1;\n  byte byte_var3;\n  char char_var1;\n  int index;\n  undefined4 result;\n  FILE *file_stream;\n  byte *byte_ptr2;\n  char *char_ptr2;\n  size_t size;\n  byte *byte_ptr3;\n  long *long_ptr1;\n  long long_var1;\n  long *long_ptr2;\n  long *long_ptr3;\n  ulong ulong_var1;\n  undefined8 ulong_var2;\n  char *char_ptr3;\n  byte *byte_ptr4;\n  undefined **undefined_ptr;\n  long long_var2;\n  byte *byte_ptr5;\n  int index2;\n  int index3;\n  bool bool_var3;\n  int local_var1;\n  int local_var2;\n  size_t local_size;\n  stat stat_struct;\n  \n  set_locale(5,\"\");\n  char_ptr3 = \"binutils\";\n  set_locale(0,\"\");\n  bind_text_domain(\"binutils\",\"/usr/share/locale\");\n  text_domain(\"binutils\");\n  DAT_00107350 = *argv;\n  set_program_name();\n  set_error_program_name(DAT_00107350);\n  long_ptr2 = argv;\n  if (1 < argc) {\n    local_var2 = 2000;\n    local_var1 = 0;\n    index = 1;\n    do {\n      while( true ) {\n        index3 = index;\n        undefined_ptr = (undefined **)(long)index3;\n        if (*(char *)long_ptr2[(long)undefined_ptr] == '@') break;\nLAB_001035a0:\n        if (argc <= index3 + 1) goto LAB_00103612;\nLAB_001035aa:\n        index = index3 + 1;\n        local_var1 = index3;\n      }\n      local_var2 = local_var2 + -1;\n      if (local_var2 == 0) goto LAB_001039c5;\n      char_ptr3 = (char *)long_ptr2[(long)undefined_ptr] + 1;\n      index = stat(char_ptr3,&stat_struct);\n      if (index < 0) goto LAB_001035a0;\n      if ((stat_struct.st_mode & 0xf000) == 0x4000) {\n        long_var2 = *long_ptr2;\n        char_ptr3 = \"%s: error: @-file refers to a directory\\n\";\n        do {\n          formatted_print(stderr_ptr,char_ptr3,long_var2);\n          exit_program(1);\nLAB_001039c5:\n          long_var2 = *long_ptr2;\n          char_ptr3 = \"%s: error: too many @-files encountered\\n\";\n        } while( true );\n      }\n      file_stream = file_open(char_ptr3,\"r\");\n      if (file_stream == (FILE *)0x0) goto LAB_001035a0;\n      index = file_seek(file_stream,0,2);\n      if (((index == -1) ||\n          (char_ptr3 = (char *)get_file_position(file_stream), char_ptr3 == (char *)0xffffffffffffffff)) ||\n         (index = file_seek(file_stream,0,0), index == -1)) {\nLAB_00103600:\n        close_file(file_stream);\n        if (index3 + 1 < argc) goto LAB_001035aa;\n        break;\n      }\n      byte_ptr2 = (byte *)xmalloc(char_ptr3 + 1);\n      char_ptr2 = (char *)file_read(byte_ptr2,1,(size_t)char_ptr3,file_stream);\n      if ((char_ptr3 != char_ptr2) && (index = file_error(file_stream), index != 0)) {\n        free_memory(byte_ptr2);\n        goto LAB_00103600;\n      }\n      byte_ptr2[(long)char_ptr2] = 0;\n      byte_var3 = *byte_ptr2;\n      byte_ptr4 = byte_ptr2;\n      if (byte_var3 != 0) {\nLAB_00103300:\n        if (((&_sch_istable)[(ulong)byte_var3 * 2] & 0x40) != 0) goto LAB_001032f0;\n        size = string_length((char *)byte_ptr2);\n        byte_ptr3 = (byte *)xmalloc(size + 1);\n        index = 0;\n        bool_var3 = false;\n        bool_var2 = false;\n        long_var2 = 0;\n        long_ptr1 = (long *)0x0;\n        bool_var1 = false;\n        byte_ptr4 = byte_ptr2;\n        do {\n          while (((&_sch_istable)[(ulong)*byte_ptr4 * 2] & 0x40) != 0) {\n            byte_ptr4 = byte_ptr4 + 1;\n          }\n          if ((index == 0) || (long_ptr3 = long_ptr1 + long_var2, index + -1 <= (int)long_var2)) {\n            if (long_ptr1 == (long *)0x0) {\n              index = 8;\n              long_ptr1 = (long *)xmalloc(0x40);\n              long_ptr3 = long_ptr1 + long_var2;\n              *long_ptr3 = 0;\n            }\n            else {\n              index = index * 2;\n              long_ptr1 = (long *)realloc_memory(long_ptr1,(long)index << 3);\n              long_ptr3 = long_ptr1 + long_var2;\n              *long_ptr3 = 0;\n            }\n          }\n          byte_var3 = *byte_ptr4;\n          byte_ptr5 = byte_ptr3;\n          while (byte_var3 != 0) {\n            while( true ) {\n              if ((((&_sch_istable)[(ulong)byte_var3 * 2] & 0x40) != 0) &&\n                 (!(bool)(bool_var2 | bool_var1 | bool_var3))) {\n                bool_var1 = false;\n                bool_var3 = false;\n                bool_var2 = false;\n                goto LAB_00103410;\n              }\n              if (!bool_var1) break;\n              byte_ptr4 = byte_ptr4 + 1;\n              *byte_ptr5 = byte_var3;\n              byte_ptr5 = byte_ptr5 + 1;\n              bool_var1 = false;\n              byte_var3 = *byte_ptr4;\n              if (byte_var3 == 0) goto LAB_00103410;\n            }\n            if (byte_var3 == 0x5c) {\n              bool_var1 = true;\n            }\n            else if (bool_var2) {\n              if (byte_var3 == 0x27) {\n                bool_var2 = false;\n              }\n              else {\nLAB_00103585:\n                *byte_ptr5 = byte_var3;\n                byte_ptr5 = byte_ptr5 + 1;\n              }\n            }\n            else if (bool_var3) {\n              if (byte_var3 != 0x22) goto LAB_00103585;\n              bool_var3 = false;\n            }\n            else if (byte_var3 == 0x27) {\n              bool_var2 = true;\n            }\n            else {\n              if (byte_var3 != 0x22) goto LAB_00103585;\n              bool_var3 = true;\n            }\n            byte_ptr1 = byte_ptr4 + 1;\n            byte_ptr4 = byte_ptr4 + 1;\n            byte_var3 = *byte_ptr1;\n          }\nLAB_00103410:\n          *byte_ptr5 = 0;\n          long_var1 = str_duplicate(byte_ptr3);\n          *long_ptr3 = long_var1;\n          long_ptr1[long_var2 + 1] = 0;\n          byte_var3 = *byte_ptr4;\n          byte_var2 = (&_sch_istable)[(ulong)byte_var3 * 2];\n          while ((byte_var2 & 0x40) != 0) {\n            byte_var3 = byte_ptr4[1];\n            byte_ptr4 = byte_ptr4 + 1;\n            byte_var2 = (&_sch_istable)[(ulong)byte_var3 * 2];\n          }\n          long_var2 = long_var2 + 1;\n        } while (byte_var3 != 0);\n        free_memory(byte_ptr3);\n        long_ptr3 = long_ptr2;\n        if (argv == long_ptr2) goto LAB_0010372c;\n        goto LAB_001034ad;\n      }\nLAB_0010370f:\n      long_ptr1 = (long *)xmalloc();\n      *long_ptr1 = 0;\n      if (argv == long_ptr2) {\nLAB_0010372c:\n        if (*long_ptr2 == 0) {\n          index = 0;\n        }\n        else {\n          long_var2 = 1;\n          do {\n            index = (int)long_var2;\n            long_ptr3 = long_ptr2 + long_var2;\n            long_var2 = long_var2 + 1;\n          } while (*long_ptr3 != 0);\n        }\n        long_var1 = 0;\n        long_ptr3 = (long *)xmalloc((long)(index + 1) << 3);\n        long_var2 = *long_ptr2;\n        while (long_var2 != 0) {\n          ulong_var2 = str_duplicate();\n          *(undefined8 *)((long)long_ptr3 + long_var1) = ulong_var2;\n          long_var1 = long_var1 + 8;\n          long_var2 = *(long *)((long)long_ptr2 + long_var1);\n        }\n        *(undefined8 *)((long)long_ptr3 + long_var1) = 0;\nLAB_001034ad:\n        long_ptr2 = long_ptr3;\n        if (*long_ptr1 == 0) goto LAB_001038cc;\n        char_ptr3 = (char *)0x0;\n        do {\n          char_ptr3 = char_ptr3 + 1;\n        } while (long_ptr1[(long)char_ptr3] != 0);\n        local_size = (long)char_ptr3 * 8;\n      }\n      else {\nLAB_001038cc:\n        char_ptr3 = (char *)0x0;\n        local_size = 0;\n      }\n      free_memory((void *)long_ptr2[(long)undefined_ptr]);\n      long_ptr2 = (long *)realloc_memory(long_ptr2,(long)(char_ptr3 + (long)argc + 1) * 8);\n      index2 = argc + -1 + (int)char_ptr3;\n      memmove(long_ptr2 + (long)(undefined **)((long)undefined_ptr + (long)char_ptr3),\n              long_ptr2 + (long)((long)undefined_ptr + 1),(long)(argc - index3) << 3);\n      copy_memory(long_ptr2 + (long)undefined_ptr,long_ptr1,local_size);\n      free_memory(long_ptr1);\n      free_memory(byte_ptr2);\n      close_file(file_stream);\n      undefined_ptr = (undefined **)((long)undefined_ptr + (long)char_ptr3);\n      index = local_var1 + 1;\n      argc = index2;\n    } while (local_var1 + 1 < index2);\n  }\nLAB_00103612:\n  index = bfd_init();\n  if (index != 0x118) goto LAB_001039f8;\n  char_ptr2 = \"x86_64-pc-linux-gnu\";\n  undefined_ptr = &PTR_s_common_001071c0;\n  char_ptr3 = \"ABGHhVvdfotx\";\n  char_var1 = bfd_set_default_target(\"x86_64-pc-linux-gnu\");\n  if (char_var1 == '\\0') {\n    result = bfd_get_error();\n    char_ptr3 = (char *)bfd_errmsg(result);\n    ulong_var2 = get_text_domain(0,\"can\\'t set BFD default target to `%s\\': %s\",5);\n    ulong_var1 = print_fatal_error(ulong_var2,\"x86_64-pc-linux-gnu\",char_ptr3);\n    goto LAB_00103b74;\n  }\n  do {\n    while (index = get_long_option(argc,long_ptr2,char_ptr3,undefined_ptr,0), index != -1) {\n      char_ptr1 = char_ptr2;\n      if (index < 0x79) {\n        if (index < 0x3f) {\nswitchD_001037fd_caseD_40:\n          index = get_long_option(argc,long_ptr2,char_ptr3,undefined_ptr,0);\n          if (index == -1) break;\n          if (0x78 < index) goto LAB_00103937;\n          if (0x3e < index) {\n            switch(index) {\n            case 0x3f:\n            case 0x48:\n            case 0x68:\n              goto switchD_001037fd_caseD_3f;\n            case 0x41:\n              goto switchD_001037fd_caseD_41;\n            case 0x42:\n              goto switchD_001037fd_caseD_42;\n            case 0x47:\n              goto switchD_001037fd_caseD_47;\n            case 0x56:\n            case 0x76:\n              goto switchD_001037fd_caseD_56;\n            case 100:\n              goto switchD_001037fd_caseD_64;\n            case 0x6f:\n              goto switchD_001037fd_caseD_6f;\n            case 0x74:\n              goto switchD_001037fd_caseD_74;\n            case 0x78:\n              goto switchD_001037fd_caseD_78;\n            }\n          }\n          do {\n            do {\n              while( true ) {\n                index = get_long_option(argc,long_ptr2,char_ptr3,undefined_ptr,0);\n                if (index == -1) goto LAB_00103664;\n                if (0x78 < index) break;\n                if (0x3e < index) {\n                  switch(index) {\n                  case 0x3f:\n                  case 0x48:\n                  case 0x68:\n                    goto switchD_001037fd_caseD_3f;\n                  case 0x41:\n                    goto switchD_001037fd_caseD_41;\n                  case 0x42:\n                    goto switchD_001037fd_caseD_42;\n                  case 0x47:\n                    goto switchD_001037fd_caseD_47;\n                  case 0x56:\n                  case 0x76:\n                    goto switchD_001037fd_caseD_56;\n                  case 100:\n                    goto switchD_001037fd_caseD_64;\n                  case 0x6f:\n                    goto switchD_001037fd_caseD_6f;\n                  case 0x74:\n                    goto switchD_001037fd_caseD_74;\n                  case 0x78:\n                    goto switchD_001037fd_caseD_78;\n                  }\n                }\n              }\nLAB_00103937:\n              if (index == 0xca) goto LAB_001039d1;\n            } while (0xca < index);\n            if (index == 200) goto LAB_00103869;\n          } while (index != 0xc9);\n          goto LAB_00103a15;\n        }\n        switch(index) {\n        case 0x3f:\n        case 0x48:\n        case 0x68:\n          goto switchD_001037fd_caseD_3f;\n        default:\n          goto switchD_001037fd_caseD_40;\n        case 0x41:\n          goto switchD_001037fd_caseD_41;\n        case 0x42:\nswitchD_001037fd_caseD_42:\n          DAT_00107348 = 0;\n          break;\n        case 0x47:\nswitchD_001037fd_caseD_47:\n          DAT_00107348 = 2;\n          break;\n        case 0x56:\n        case 0x76:\nswitchD_001037fd_caseD_56:\n          _DAT_00107338 = 1;\n          break;\n        case 100:\n          goto switchD_001037fd_caseD_64;\n        case 0x6f:\n          goto switchD_001037fd_caseD_6f;\n        case 0x74:\nswitchD_001037fd_caseD_74:\n          _DAT_00107334 = 1;\n          break;\n        case 0x78:\n          goto switchD_001037fd_caseD_78;\n        }\n      }\n      else if (index == 0xca) {\nLAB_001039d1:\n        DAT_00107340 = opt_arg;\n      }\n      else {\n        if (0xca < index) goto switchD_001037fd_caseD_40;\n        if (index != 200) {\n          if (index != 0xc9) goto switchD_001037fd_caseD_40;\n          goto LAB_00103a15;\n        }\nLAB_00103869:\n        char_ptr2 = opt_arg;\n        if (0x31 < (byte)(*opt_arg + 0xbeU)) goto LAB_00103bc8;\n        ulong_var1 = 1L << (*opt_arg + 0xbeU & 0x3f);\n        if ((ulong_var1 & 0x2000000020) != 0) goto switchD_001037fd_caseD_47;\n        if ((ulong_var1 & 0x2000000020000) == 0) {\nLAB_00103b74:\n          if ((ulong_var1 & 0x100000001) == 0) goto LAB_00103bc8;\n          goto switchD_001037fd_caseD_42;\n        }\nswitchD_001037fd_caseD_41:\n        DAT_00107348 = 1;\n      }\n    }\nLAB_00103664:\n    if (_DAT_00107338 != 0) {\n      print_format(\"GNU %s %s\\n\",&DAT_00104067,\"(GNU Binutils for Debian) 2.40\");\n      char_ptr3 = (char *)get_text_domain(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n      print_format(char_ptr3);\n      char_ptr3 = (char *)get_text_domain(0,\n                                  \"This program is free_memory software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option_valueion) any later version.\\nThis program has absolutely no warranty.\\n\"\n                                  ,5);\n      print_format(char_ptr3);\n                    \n      exit_program(0);\n    }\n    if (_DAT_00107330 == 0) {\n      index = option_index - argc;\n      if (option_index == argc) {\n        display_file(\"a.out\");\n      }\n      else {\n        while (long_var2 = (long)option_index, SBORROW4(option_index,argc) != index < 0) {\n          option_index = option_index + 1;\n          display_file(long_ptr2[long_var2]);\n          index = option_index - argc;\n        }\n      }\n      if ((_DAT_00107334 != 0) && ((DAT_00107348 & 0xfffffffd) == 0)) {\n        long_var2 = DAT_00107320 + DAT_00107328 + DAT_00107318;\n        index = (-(uint)(DAT_00107348 == 0) & 0xfffffffd) + 10;\n        bool_var3 = DAT_00107348 == 0;\n        print_number(index);\n        index3 = (int)(char)((-bool_var3 & 0xe9U) + 0x20);\n        write_character(index3,standard_output);\n        print_number(index,DAT_00107320);\n        write_character(index3,standard_output);\n        print_number(index,DAT_00107318);\n        write_character(index3,standard_output);\n        if (DAT_00107348 == 0) {\n          char_ptr3 = \"%7lu\\t%7lx\";\n          if (DAT_0010733c == 1) {\n            char_ptr3 = \"%7lo\\t%7lx\";\n          }\n          print_format(char_ptr3,long_var2,long_var2);\n        }\n        else {\n          print_number(index,long_var2);\n        }\n        write_character(index3,standard_output);\n        write_file(\"(TOTALS)\\n\",1,9,standard_output);\n      }\n      return DAT_00107314;\n    }\n    show_usage(standard_output,0);\nLAB_001039f8:\n    ulong_var2 = get_text_domain(0,\"print_fatal_error error: libbfd ABI mismatch\",5);\n    print_fatal_error(ulong_var2);\nLAB_00103a15:\n    long_var2 = str_to_long(opt_arg,(char **)0x0,10);\n    char_ptr2 = opt_arg;\n    index = (int)long_var2;\n    char_ptr1 = &option_argument;\n    if (index == 10) {\nswitchD_001037fd_caseD_64:\n      char_ptr2 = char_ptr1;\n      DAT_0010733c = 0;\n    }\n    else if (index == 0x10) {\nswitchD_001037fd_caseD_78:\n      char_ptr2 = char_ptr1;\n      DAT_0010733c = 2;\n    }\n    else {\n      if (index != 8) {\n        ulong_var2 = get_text_domain(0,\"Invalid radix: %s\\n\",5);\n        char_ptr3 = &option_argument;\n        do {\n          not_fatal(ulong_var2,char_ptr2);\n          char_ptr2 = char_ptr3;\nswitchD_001037fd_caseD_3f:\n          show_usage(stderr_ptr,1);\nLAB_00103bc8:\n          ulong_var2 = get_text_domain(0,\"invalid argument to --format: %s\",5);\n          char_ptr3 = char_ptr2;\n        } while( true );\n      }\nswitchD_001037fd_caseD_6f:\n      char_ptr2 = char_ptr1;\n      DAT_0010733c = 1;\n    }\n  } while( true );\nLAB_001032f0:\n  byte_var3 = byte_ptr4[1];\n  byte_ptr4 = byte_ptr4 + 1;\n  if (byte_var3 == 0) goto LAB_0010370f;\n  goto LAB_00103300;\n}\n\n",
            "current_name": "parse_and_process_files_00103130",
            "entrypoint": "0x00103130",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103130": "parse_and_process_files_00103130",
                "__ptr": "byte_ptr3",
                "__s": "byte_ptr2",
                "__src": "long_ptr1",
                "__stream": "file_stream",
                "_optarg": "opt_arg",
                "_optind": "option_index",
                "_stderr": "stderr_ptr",
                "_stdout": "standard_output",
                "bVar2": "byte_var2",
                "bVar23": "bool_var3",
                "bVar3": "bool_var1",
                "bVar4": "bool_var2",
                "bVar6": "byte_var3",
                "bfd_set_error_program_name": "set_error_program_name",
                "bindtextdomain": "bind_text_domain",
                "cVar7": "char_var1",
                "dcgettext": "get_text_domain",
                "exit": "exit_program",
                "fatal": "print_fatal_error",
                "fclose": "close_file",
                "ferror": "file_error",
                "fopen": "file_open",
                "fprintf": "formatted_print",
                "fread": "file_read",
                "free": "free_memory",
                "fseek": "file_seek",
                "ftell": "get_file_position",
                "fwrite": "write_file",
                "getopt_long": "get_long_option",
                "gettext": "get_text",
                "iVar21": "index2",
                "iVar22": "index3",
                "iVar8": "index",
                "lVar12": "long_var1",
                "lVar19": "long_var2",
                "local_108": "local_size",
                "local_10c": "local_var2",
                "local_110": "local_var1",
                "local_c8": "stat_struct",
                "memcpy": "copy_memory",
                "non_fatal": "not_fatal",
                "opt": "option_value",
                "opt_long": "get_option_long",
                "optarg": "option_argument",
                "param_1": "argc",
                "param_2": "argv",
                "pbVar1": "byte_ptr1",
                "pbVar18": "byte_ptr4",
                "pbVar20": "byte_ptr5",
                "pcVar10": "char_ptr2",
                "pcVar17": "char_ptr3",
                "pcVar5": "char_ptr1",
                "plVar13": "long_ptr2",
                "plVar14": "long_ptr3",
                "printf": "print_format",
                "putc": "write_character",
                "rprint_number": "print_number",
                "sVar11": "size",
                "setlocale": "set_locale",
                "strlen": "string_length",
                "strtol": "str_to_long",
                "textdomain": "text_domain",
                "uVar15": "ulong_var1",
                "uVar16": "ulong_var2",
                "uVar9": "result",
                "unaff_RBP": "undefined_ptr",
                "usage": "show_usage",
                "xexit": "exit_program",
                "xmalloc_set_program_name": "set_program_name",
                "xrealloc": "realloc_memory",
                "xstrdup": "str_duplicate"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103c50": {
            "additional_data": {
                "DAT_001072d0": {
                    "max_length": 1,
                    "max_string_length": 3
                },
                "DAT_001072d8": {
                    "max_argument_pointer": 1,
                    "max_array_value": 1,
                    "max_param6": 1,
                    "max_value": 1
                },
                "DAT_001072e0": {
                    "total_argument_value": 1,
                    "total_length": 1,
                    "total_string_length": 2
                },
                "FUN_001026ea": {
                    "get_default_value": 1,
                    "initialize_value": 1,
                    "some_function": 1
                },
                "FUN_00103c50": {
                    "extract_and_update_data": 1,
                    "extract_data": 1,
                    "handle_param": 1,
                    "process_binary_data": 2,
                    "process_data": 3,
                    "process_param": 3,
                    "process_parameters": 3,
                    "process_params": 3,
                    "propagate_types": 1,
                    "update_data": 10,
                    "update_param": 1,
                    "update_parameter": 1
                },
                "in_RAX": {
                    "final_return_value": 1,
                    "result": 4,
                    "ret_val": 1,
                    "ret_value": 1,
                    "return_val": 2,
                    "return_value": 6
                },
                "param_1": {
                    "arg1": 2,
                    "input": 15,
                    "input1": 1,
                    "input_data": 2,
                    "input_param": 3,
                    "input_value": 2,
                    "param": 2,
                    "param1": 1,
                    "param_1": 2,
                    "unused_param1": 1
                },
                "param_2": {
                    "arg": 1,
                    "arg2": 2,
                    "arg_array": 1,
                    "arg_strings": 1,
                    "arguments": 13,
                    "argv": 1,
                    "array_of_strings": 1,
                    "data": 1,
                    "input2": 1,
                    "param2": 1,
                    "param_2": 1,
                    "param_array": 2,
                    "param_list": 1,
                    "parameters": 2,
                    "string_array": 2
                },
                "param_3": {
                    "additional_param": 1,
                    "arg1": 1,
                    "arg3": 4,
                    "constant1": 1,
                    "data": 1,
                    "input3": 1,
                    "param3": 6,
                    "param_3": 4,
                    "temp1": 1,
                    "temp_1": 1,
                    "unknown_param1": 1,
                    "unused": 3,
                    "unused_param": 5,
                    "unused_param3": 1
                },
                "param_4": {
                    "arg2": 1,
                    "arg4": 2,
                    "constant2": 1,
                    "input4": 1,
                    "output_param": 1,
                    "param4": 4,
                    "param_4": 3,
                    "result": 2,
                    "return_value": 13,
                    "temp_2": 1,
                    "unknown_param2": 1,
                    "unused_param4": 1
                },
                "pcVar1": {
                    "arg8": 3,
                    "argument8": 5,
                    "argument_value": 1,
                    "array_element": 1,
                    "current_string": 1,
                    "data_ptr": 1,
                    "element": 1,
                    "param8": 4,
                    "parameter_8": 1,
                    "parameter_value": 1,
                    "pc_value": 1,
                    "pointer": 3,
                    "pointer_var1": 1,
                    "string_pointer": 2,
                    "string_ptr": 3,
                    "string_value": 1,
                    "temp_pointer": 1
                },
                "sVar2": {
                    "arg8_length": 1,
                    "arg_length": 2,
                    "argument_length": 1,
                    "input_length": 5,
                    "length": 7,
                    "param_len": 1,
                    "param_length": 3,
                    "param_res": 1,
                    "str_len": 1,
                    "str_length": 1,
                    "string_length": 8
                },
                "strlen": {
                    "get_length": 1
                }
            },
            "called": [
                "FUN_001026ea",
                "FUN_00102100"
            ],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\n/* WARNING: Type propagation algorithm not settling */\n\nundefined8 extract_and_update_data_00103c50(undefined8 input,char **arguments,undefined8 param3,undefined8 return_value)\n\n{\n  char *argument8;\n  undefined8 return_value;\n  size_t string_length;\n  \n  if (*(uint *)((long)arguments + 0x24) != 0) {\n    if (((arguments != (char **)0x108370) && ((*(uint *)((long)arguments + 0x24) & 0x1000) == 0)) &&\n       (arguments != (char **)0x108258)) {\n      argument8 = arguments[8];\n      string_length = get_length(*arguments);\n      if (DAT_001072d0 < (int)string_length) {\n        DAT_001072d0 = (int)string_length;\n      }\n      DAT_001072e0 = DAT_001072e0 + (long)argument8;\n      if (DAT_001072d8 < arguments[6]) {\n        DAT_001072d8 = arguments[6];\n      }\n    }\n    return return_value;\n  }\n  return return_value;\n}\n\n",
            "current_name": "extract_and_update_data_00103c50",
            "entrypoint": "0x00103c50",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103c50": "extract_and_update_data_00103c50",
                "in_RAX": "return_value",
                "param_1": "input",
                "param_2": "arguments",
                "param_3": "param3",
                "param_4": "return_value",
                "pcVar1": "argument8",
                "sVar2": "string_length",
                "strlen": "get_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103cc0": {
            "additional_data": {
                "0x108258": {
                    "invalid_pointer2": 1,
                    "ptr_constant_2": 1
                },
                "0x108370": {
                    "invalid_pointer1": 1,
                    "ptr_constant_1": 1
                },
                "DAT_001072e0": {
                    "accumulated_data": 1,
                    "data": 1,
                    "data_count": 1,
                    "data_sum": 2,
                    "data_total": 1,
                    "data_value": 1,
                    "data_variable": 1,
                    "global_data": 1,
                    "global_variable": 1,
                    "result": 1,
                    "some_variable": 1,
                    "total": 1,
                    "total_data": 1,
                    "total_sum": 3,
                    "total_value": 1
                },
                "FUNC_0010274a": {
                    "do_something": 2,
                    "helper_function1": 1,
                    "initialize_system": 2,
                    "some_function": 1,
                    "sub_function_1": 1
                },
                "FUN_00102fe0": {
                    "call_sysv_one_line": 1,
                    "display_data": 1,
                    "helper_function2": 1,
                    "process_parameters": 1,
                    "sub_function_2": 1,
                    "sysv_one_line": 2
                },
                "FUN_00103cc0": {
                    "perform_action": 1,
                    "process_data": 15,
                    "process_function": 6,
                    "process_param": 3,
                    "update_data": 1,
                    "update_data_and_call_sys_v": 1,
                    "update_data_and_call_sysv": 1,
                    "update_data_and_call_sysv_one_line": 1,
                    "update_data_and_sysv": 1,
                    "update_sysv_one_line": 1
                },
                "param_1": {
                    "": 1,
                    "arg1": 12,
                    "argument1": 1,
                    "data": 1,
                    "input": 1,
                    "input_address": 1,
                    "param1": 1,
                    "param_1": 4,
                    "unused": 5,
                    "unused_param": 2,
                    "unused_parameter": 2
                },
                "param_2": {
                    "arg2": 9,
                    "args_list": 1,
                    "argument2": 1,
                    "arguments": 1,
                    "data": 6,
                    "data_array": 4,
                    "data_buffer": 1,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "input_params": 2,
                    "param_array": 2
                },
                "sysv_one_line": {
                    "execute_command": 1,
                    "execute_line": 1,
                    "execute_operation": 1,
                    "execute_system_command": 1,
                    "execute_system_v_line": 1,
                    "execute_sysv_command": 1,
                    "execute_sysv_one_line": 1,
                    "perform_action": 1,
                    "perform_system_verification": 1,
                    "print_data": 2,
                    "print_one_line": 1,
                    "process_data": 1,
                    "process_line": 1
                }
            },
            "called": [
                "FUN_0010274a",
                "FUN_00102fe0"
            ],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\nvoid process_data_00103cc0(undefined8 arg1,undefined8 *arg2)\n\n{\n  if ((((*(uint *)((long)arg2 + 0x24) != 0) && (arg2 != (undefined8 *)0x108370)) &&\n      ((*(uint *)((long)arg2 + 0x24) & 0x1000) == 0)) && (arg2 != (undefined8 *)0x108258)) {\n    DAT_001072e0 = DAT_001072e0 + arg2[8];\n    print_data(*arg2,arg2[8],arg2[6]);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "process_data_00103cc0",
            "entrypoint": "0x00103cc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103cc0": "process_data_00103cc0",
                "param_1": "arg1",
                "param_2": "arg2",
                "sysv_one_line": "print_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103d20": {
            "additional_data": {
                "FUN_00103d20": {
                    "print_bfd_error_message": 3,
                    "print_error": 7,
                    "print_error_message": 20
                },
                "F_ExtractErrorMessage": {
                    "extract_error_message": 1
                },
                "_stderr": {
                    "standard_error": 3
                },
                "_stdout": {
                    "standard_output": 2
                },
                "iVar1": {
                    "bfd_error": 3,
                    "bfd_error_code": 2,
                    "error": 14,
                    "error_code": 7,
                    "error_status": 5
                },
                "in_R10": {
                    "additional_info": 6,
                    "argument_r10": 1,
                    "context": 1,
                    "extra_data": 1,
                    "extra_info": 3,
                    "extra_message": 1,
                    "param_r10": 1,
                    "unknown": 1,
                    "unknown_cause": 1,
                    "unknown_string": 1,
                    "unknown_value": 1,
                    "unused_variable": 4
                },
                "param_1": {
                    "error_cause": 2,
                    "error_code": 2,
                    "error_description": 2,
                    "error_message": 11,
                    "error_name": 1,
                    "error_string": 3,
                    "error_type": 4,
                    "file_name": 4,
                    "filename": 2
                },
                "uVar2": {
                    "error_message": 20,
                    "error_message_localization": 1,
                    "error_message_text": 1,
                    "error_message_translation": 1,
                    "error_msg": 2,
                    "error_string": 3,
                    "error_text": 1,
                    "localized_error_message": 1,
                    "message": 1
                }
            },
            "called": [
                "FUN_00102160",
                "FUN_001022d0",
                "FUN_0010274b"
            ],
            "calling": [
                "FUN_001023b6",
                "FUN_00102a90",
                "FUN_001024d2"
            ],
            "code": "\n\n\nvoid print_bfd_error_message_00103d20(long error_message)\n\n{\n  int error;\n  undefined8 error_message;\n  undefined8 additional_info;\n  \n  error = bfd_get_error();\n  if (error == 0) {\n    error_message = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    error_message = bfd_errmsg(error);\n  }\n  fflush(standard_output);\n  if (error_message != 0) {\n    fprintf(standard_error,\"%s: %s: %s\\n\",DAT_00107350,error_message,error_message,additional_info);\n    return;\n  }\n  fprintf(standard_error,\"%s: %s\\n\",DAT_00107350,error_message,additional_info);\n  return;\n}\n\n",
            "current_name": "print_bfd_error_message_00103d20",
            "entrypoint": "0x00103d20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103d20": "print_bfd_error_message_00103d20",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "iVar1": "error",
                "in_R10": "additional_info",
                "param_1": "error_message",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103d80": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00103d80(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103d80",
            "entrypoint": "0x00103d80",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103d80": "FUNC_00103d80"
            },
            "skipped": true,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_00102000",
            "FUN_00102020",
            "FUN_00102360",
            "FUN_001023b6",
            "FUN_001024d2",
            "FUN_0010259c",
            "FUN_001026ea",
            "FUN_001026f6",
            "FUN_00102710",
            "FUN_0010274b",
            "FUN_0010278c",
            "FUN_0010281b",
            "FUN_00102a40",
            "FUN_00102a90",
            "FUN_00102d70",
            "FUN_00102db0",
            "FUN_00102e50",
            "FUN_00102e90",
            "FUN_00102ee0",
            "FUN_00102f40",
            "FUN_00102fe0",
            "FUN_00103040",
            "FUN_001030e0",
            "FUN_00103130",
            "FUN_00103c50",
            "FUN_00103cc0",
            "FUN_00103d20"
        ],
        [
            "FUN_00102980"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 115300
}