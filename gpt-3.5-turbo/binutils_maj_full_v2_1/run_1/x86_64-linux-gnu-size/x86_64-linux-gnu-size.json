{
    "functions": {
        "FUN_00102020": {
            "additional_data": {
                "FUN_00102020": {
                    "call_indirect_jump": 1,
                    "execute_code": 1,
                    "execute_first_indirect_call": 1,
                    "execute_function": 3,
                    "execute_function_indirectly": 1,
                    "execute_indirect_call": 3,
                    "execute_indirect_function": 3,
                    "execute_indirect_function_call": 1,
                    "execute_indirect_jump": 16,
                    "execute_undefined_function": 1
                },
                "PTR_0": {
                    "function_pointer": 1
                },
                "PTR_undefined": {
                    "indirect_function_pointer": 1
                },
                "code": {
                    "function": 1,
                    "function_pointer": 1,
                    "function_to_execute": 1,
                    "indirect_jump_function": 1,
                    "jump_target": 1,
                    "pointer_to_code": 1
                },
                "undefined": {
                    "func_ptr": 2,
                    "function_address": 1,
                    "jump_address": 1,
                    "target_address": 2
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_indirect_jump_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(function_to_execute *)(target_address *)0x0)();\n  return;\n}\n\n",
            "current_name": "execute_indirect_jump_00102020",
            "entrypoint": "0x00102020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102020": "execute_indirect_jump_00102020",
                "code": "function_to_execute",
                "undefined": "target_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102360": {
            "additional_data": {
                "DAT_00107314": {
                    "flag": 1
                },
                "FUN_00102360": {
                    "check_file_existence": 1,
                    "handle_file_error": 9,
                    "handle_file_not_found_error": 3,
                    "print_error_message": 3,
                    "print_error_or_warning": 1,
                    "print_file_error": 4,
                    "print_file_error_message": 9,
                    "print_file_not_found_error": 1
                },
                "__errno_location": {
                    "get_errno_location": 3
                },
                "dcgettext": {
                    "get_error_message": 2,
                    "get_localized_message": 2,
                    "get_message": 1,
                    "get_translated_message": 1,
                    "translate": 1,
                    "translate_error_message": 1
                },
                "i": {
                    "error_code": 1
                },
                "piVar1": {
                    "err_location": 1,
                    "err_ptr": 2,
                    "errno_location": 1,
                    "errno_location_ptr": 2,
                    "errno_ptr": 16,
                    "errno_value": 1,
                    "error_code": 1,
                    "error_location": 2,
                    "error_number_ptr": 1,
                    "error_pointer": 1,
                    "error_ptr": 3
                },
                "print_error_message_00102f40": {
                    "print_error_message": 21
                },
                "strerror": {
                    "get_error_message": 2,
                    "get_error_string": 1
                },
                "uVar2": {
                    "err_msg": 1,
                    "error_message": 27,
                    "error_msg": 1,
                    "error_string": 1,
                    "localized_error": 1
                }
            },
            "called": [
                "dcgettext",
                "FUN_00102f40",
                "strerror",
                "__errno_location"
            ],
            "calling": [
                "FUN_00102980"
            ],
            "code": "\nvoerror_coded print_file_error_message_00102360(voerror_coded)\n\n{\n  error_codent *errno_ptr;\n  undeferror_codened8 error_message;\n  \n  errno_ptr = __errno_location();\n  error_codef (*errno_ptr == 2) {\n    error_message = dcgettext(0,\"\\'%s\\': No such ferror_codele\",5);\n    print_error_message(error_message);\n  }\n  else {\n    strerror(*errno_ptr);\n    error_message = dcgettext(0,\"Warnerror_codeng: could not locate \\'%s\\'.  reason: %s\",5);\n    print_error_message(error_message);\n  }\n  DAT_00107314 = 1;\n  return;\n}\n\n",
            "current_name": "print_file_error_message_00102360",
            "entrypoint": "0x00102360",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102360": "print_file_error_message_00102360",
                "__errno_location": "get_errno_location",
                "dcgettext": "get_localized_message",
                "i": "error_code",
                "piVar1": "errno_ptr",
                "print_error_message_00102f40": "print_error_message",
                "strerror": "get_error_message",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001023b6": {
            "additional_data": {
                "DAT_00107314": {
                    "error_code": 1
                },
                "FUN_001023b6": {
                    "extract_and_print_archived_files": 1,
                    "extract_archived_files": 5,
                    "find_and_print_archived_files": 1,
                    "process_archived_files": 24
                },
                "bfd_close": {
                    "close_file": 2
                },
                "bfd_get_error": {
                    "get_bfd_error": 1,
                    "get_error_code": 1
                },
                "bfd_openr_next_archived_file": {
                    "open_next_archived_file": 2
                },
                "bfd_set_error": {
                    "set_bfd_error": 1,
                    "set_error_code": 1
                },
                "cVar1": {
                    "bfd_close_result": 1,
                    "bfd_closed": 1,
                    "close_failure": 1,
                    "close_result": 8,
                    "close_status": 7,
                    "close_success": 6,
                    "is_close_successful": 1
                },
                "check_and_print_bfd_format_info_00102a40": {
                    "check_and_print_format_info": 2
                },
                "iVar2": {
                    "bfd_error": 2,
                    "error": 2,
                    "error_code": 17,
                    "error_status": 1
                },
                "lVar3": {
                    "archive_file_ptr": 1,
                    "archived_file": 1,
                    "archived_file_ptr": 1,
                    "current_archived_file": 1,
                    "current_file": 15,
                    "current_file_handle": 3,
                    "current_file_offset": 1,
                    "file_count": 1,
                    "file_descriptor": 1,
                    "file_handle": 3
                },
                "lVar4": {
                    "previous_archived_file": 1,
                    "previous_file": 17,
                    "previous_file_descriptor": 1,
                    "previous_file_handle": 6,
                    "previous_file_offset": 1,
                    "previous_file_ptr": 2
                },
                "print_bfd_error_message_00103d20": {
                    "print_error_message": 2
                },
                "unaff_RBX": {
                    "archive_file_paths": 1,
                    "archive_handle": 2,
                    "archived_files": 3,
                    "archived_files_ptr": 1,
                    "bfd_context": 1,
                    "bfd_handle": 4,
                    "bfd_object": 1,
                    "bfd_ptr": 1,
                    "error_log": 1,
                    "error_message": 3,
                    "error_ptr": 1,
                    "file_error_ptr": 1,
                    "output": 1,
                    "output_file": 5,
                    "output_file_pointer": 1,
                    "output_file_ptr": 1,
                    "output_files": 1,
                    "output_stream": 1,
                    "result_ptr": 1
                }
            },
            "called": [
                "bfd_openr_next_archived_file",
                "FUN_00102a40",
                "FUN_00103d20",
                "bfd_set_error",
                "bfd_get_error",
                "bfd_close"
            ],
            "calling": [
                "FUN_00102980"
            ],
            "code": "\nvoid process_archived_files_001023b6(void)\n\n{\n  char close_result;\n  int error_code;\n  long current_file;\n  undefined8 *output_file;\n  long previous_file;\n  \n  current_file = 0;\n  do {\n    previous_file = current_file;\n    bfd_set_error(0);\n    current_file = bfd_openr_next_archived_file();\n    if (current_file == 0) {\n      error_code = bfd_get_error();\n      if (error_code != 9) {\n        print_error_message(*output_file);\n        DAT_00107314 = 2;\n      }\n      if (previous_file != 0) {\n        bfd_close(previous_file);\n      }\n      break;\n    }\n    check_and_print_format_info();\n  } while ((previous_file == 0) || (bfd_close(), previous_file != current_file));\n  close_result = bfd_close();\n  if (close_result == '\\0') {\n    print_error_message();\n    DAT_00107314 = 1;\n  }\n  return;\n}\n\n",
            "current_name": "process_archived_files_001023b6",
            "entrypoint": "0x001023b6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001023b6": "process_archived_files_001023b6",
                "bfd_close": "close_file",
                "bfd_get_error": "get_bfd_error",
                "bfd_openr_next_archived_file": "open_next_archived_file",
                "bfd_set_error": "set_error_code",
                "cVar1": "close_result",
                "check_and_print_bfd_format_info_00102a40": "check_and_print_format_info",
                "iVar2": "error_code",
                "lVar3": "current_file",
                "lVar4": "previous_file",
                "print_bfd_error_message_00103d20": "print_error_message",
                "unaff_RBX": "output_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001024d2": {
            "additional_data": {
                "FUN_001024d2": {
                    "analyze_binary": 1,
                    "check_bfd_format_and_print_info": 1,
                    "check_binary_format": 1,
                    "handle_bfd_error": 12,
                    "handle_bfd_format": 1,
                    "handle_bfd_format_error": 1,
                    "handle_bfd_operation": 1,
                    "handle_bfd_process": 1,
                    "handle_format_check": 1,
                    "print_core_file_info": 1,
                    "print_debug_info": 1,
                    "print_executable_info": 3,
                    "print_section_info": 1,
                    "process_bfd_format_match": 1,
                    "process_binary": 1,
                    "process_binary_file": 1,
                    "process_binary_function": 1
                },
                "_stdout": {
                    "output_stream": 1,
                    "standard_output": 1
                },
                "cVar1": {
                    "format_match": 1,
                    "format_match_flag": 1,
                    "format_matched": 1,
                    "format_matches": 11,
                    "is_format_match": 2,
                    "is_format_matched": 3,
                    "is_format_matching": 1,
                    "is_format_valid": 2,
                    "is_match": 4,
                    "is_matched_format": 1,
                    "is_matching_format": 1
                },
                "iVar2": {
                    "bfd_error": 6,
                    "bfd_error_code": 3,
                    "error": 9,
                    "error_code": 10,
                    "error_type": 1,
                    "get_error_value": 1
                },
                "lVar3": {
                    "command": 1,
                    "command_name": 2,
                    "core_command": 1,
                    "core_file_command": 5,
                    "failing_command": 22
                },
                "param_7": {
                    "bfd_param": 2,
                    "command": 1,
                    "command_param": 1,
                    "current_bfd_handle": 1,
                    "error_code": 1,
                    "error_message": 3,
                    "format": 11,
                    "format_match": 1,
                    "format_param": 2,
                    "format_specifier": 1,
                    "format_string": 1,
                    "matching_formats": 5,
                    "param": 1
                },
                "unaff_RBX": {
                    "bfd": 1,
                    "bfd_handle": 6,
                    "bfd_handles": 1,
                    "bfd_handles_array": 1,
                    "bfd_pointer": 2,
                    "bfd_ptr": 3,
                    "binary_file_ptr": 1,
                    "file_pointer": 1,
                    "format": 1,
                    "format_ptr": 1,
                    "input_formats": 1,
                    "param": 1,
                    "param_ptr": 1,
                    "ptr": 1
                }
            },
            "called": [
                "puts",
                "fwrite",
                "FUN_00103d20",
                "FUN_00102a90",
                "FUN_0010278c",
                "bfd_core_file_failing_command",
                "bfd_get_error",
                "bfd_check_format_matches",
                "printf"
            ],
            "calling": [
                "FUN_00102a40"
            ],
            "code": "\n\n\nvoid handle_bfd_format_error_001024d2(void)\n\n{\n  char format_matches;\n  int error_code;\n  long failing_command;\n  undefined8 *bfd_handle;\n  undefined8 format;\n  \n  error_code = bfd_get_error();\n  if (error_code == 0xd) {\n    print_bfd_error_message_00103d20(*bfd_handle);\n    print_matching_formats_0010278c(format);\n    DAT_00107314 = 3;\n  }\n  else {\n    format_matches = bfd_check_format_matches();\n    if (format_matches == '\\0') {\n      print_bfd_error_message_00103d20(*bfd_handle);\n      error_code = bfd_get_error();\n      if (error_code == 0xd) {\n        print_matching_formats_0010278c(format);\n      }\n      DAT_00107314 = 3;\n    }\n    else {\n      print_executable_section_info_00102a90();\n      fwrite(\" (core file\",1,0xb,output_stream);\n      failing_command = bfd_core_file_failing_command();\n      if (failing_command != 0) {\n        printf(\" invoked as %s\",failing_command);\n      }\n      puts(\")\\n\");\n    }\n  }\n  return;\n}\n\n",
            "current_name": "handle_bfd_format_error_001024d2",
            "entrypoint": "0x001024d2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001024d2": "handle_bfd_format_error_001024d2",
                "_stdout": "output_stream",
                "cVar1": "format_matches",
                "iVar2": "error_code",
                "lVar3": "failing_command",
                "param_7": "format",
                "unaff_RBX": "bfd_handle"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010259c": {
            "additional_data": {
                "FUN_0010259C": {
                    "print_ex_string": 1
                },
                "FUN_0010259c": {
                    "print_error_message": 1,
                    "print_ex_message": 4,
                    "print_ex_parameter": 1,
                    "print_ex_string": 21,
                    "print_extracted_parameter": 1,
                    "print_extracted_string": 1,
                    "print_message": 1
                },
                "in_RAX": {
                    "error_message_ptr": 1,
                    "ex_message": 1,
                    "ex_parameter": 1,
                    "ex_string": 8,
                    "ex_string_ptr": 8,
                    "extracted_parameter": 1,
                    "extracted_string": 1,
                    "input_string": 2,
                    "message": 2,
                    "message_ptr": 3,
                    "string_pointer": 3
                }
            },
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\nvoid print_ex_string_0010259c(void)\n\n{\n  undefined8 *ex_string_ptr;\n  \n  printf(\" (ex %s)\",*ex_string_ptr);\n  return;\n}\n\n",
            "current_name": "print_ex_string_0010259c",
            "entrypoint": "0x0010259c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010259c": "print_ex_string_0010259c",
                "in_RAX": "ex_string_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001026ea": {
            "additional_data": {
                "FUN_001026ea": {
                    "initialize": 2,
                    "initialize_data": 13,
                    "initialize_function": 2,
                    "initialize_memory": 3,
                    "initialize_program": 1,
                    "initialize_registers": 1,
                    "initialize_return_address": 2,
                    "initialize_return_value": 6,
                    "set_next_instruction": 1
                },
                "in_RAX": {
                    "input_parameter": 1,
                    "input_value": 14,
                    "return_value": 12,
                    "value": 1
                },
                "unaff_retaddr": {
                    "return_address": 26,
                    "return_value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_00103c50"
            ],
            "code": "\nundefined8 initialize_data_001026ea(void)\n\n{\n  undefined8 input_value;\n  undefined8 return_address;\n  \n  DAT_001072d8 = input_value;\n  return return_address;\n}\n\n",
            "current_name": "initialize_data_001026ea",
            "entrypoint": "0x001026ea",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001026ea": "initialize_data_001026ea",
                "in_RAX": "input_value",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001026f6": {
            "additional_data": {
                "FUN_001026f6": {
                    "format_and_count_string": 1,
                    "format_and_print": 3,
                    "format_and_print_number": 2,
                    "print_formatted": 1,
                    "print_formatted_number": 22,
                    "print_formatted_value": 2
                },
                "__format": {
                    "format_string": 31
                },
                "in_EAX": {
                    "display_option": 1,
                    "format_option": 3,
                    "input": 1,
                    "input_number": 1,
                    "input_value": 3,
                    "number": 2,
                    "number_base": 1,
                    "number_flag": 1,
                    "number_format": 2,
                    "number_in_decimal": 1,
                    "number_to_print": 1,
                    "number_type": 11,
                    "number_type_flag": 1,
                    "operand": 1,
                    "printing_option": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00102e50"
            ],
            "code": "\nvoid print_formatted_number_001026f6(void)\n\n{\n  int number_type;\n  char *format_string;\n  \n  format_string = \"0x%lx\";\n  if (number_type == 1) {\n    format_string = \"0%lo\";\n  }\n  sprintf(&stack0x00000000,format_string);\n  strlen(&stack0x00000000);\n  return;\n}\n\n",
            "current_name": "print_formatted_number_001026f6",
            "entrypoint": "0x001026f6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001026f6": "print_formatted_number_001026f6",
                "__format": "format_string",
                "in_EAX": "number_type"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102710": {
            "additional_data": {
                "FUN_00102710": {
                    "format_and_print_number": 2,
                    "format_and_print_value": 1,
                    "print_formatted": 1,
                    "print_formatted_hex_value": 1,
                    "print_formatted_number": 8,
                    "print_formatted_output": 3,
                    "print_formatted_value": 15
                },
                "__format": {
                    "format": 1,
                    "format_specifier": 1,
                    "format_string": 28
                },
                "in_EAX": {
                    "format_option": 2,
                    "format_type": 2,
                    "input": 1,
                    "input_argument": 1,
                    "input_number": 1,
                    "input_value": 12,
                    "number_type": 6,
                    "value": 5,
                    "value_type": 1
                },
                "printf": {
                    "print_with_width": 1
                },
                "sprintf": {
                    "format_value": 1
                },
                "unaff_EBX": {
                    "buffer_width": 1,
                    "desired_width": 1,
                    "field_length": 1,
                    "field_width": 12,
                    "format_width": 1,
                    "indentation": 1,
                    "indentation_width": 2,
                    "output_width": 1,
                    "padding": 2,
                    "printed_length": 1,
                    "width": 8
                }
            },
            "called": [
                "sprintf",
                "printf"
            ],
            "calling": [
                "FUN_00102e90"
            ],
            "code": "\nvoid print_formatted_hex_value_00102710(void)\n\n{\n  int input_value;\n  uint field_width;\n  char *format_string;\n  \n  format_string = \"0x%lx\";\n  if (input_value == 1) {\n    format_string = \"0%lo\";\n  }\n  sprintf(&stack0x00000000,format_string);\n  printf(\"%*s\",(ulong)field_width);\n  return;\n}\n\n",
            "current_name": "print_formatted_hex_value_00102710",
            "entrypoint": "0x00102710",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102710": "print_formatted_hex_value_00102710",
                "__format": "format_string",
                "in_EAX": "input_value",
                "printf": "print_with_width",
                "sprintf": "format_value",
                "unaff_EBX": "field_width"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010274a": {
            "called": [],
            "calling": [
                "FUN_00103cc0"
            ],
            "code": "\nvoid FUNC_0010274a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0010274a",
            "entrypoint": "0x0010274a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0010274a": "FUNC_0010274a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0010274b": {
            "additional_data": {
                "FUN_0010274b": {
                    "display_error": 1,
                    "print_error": 6,
                    "print_error_cause": 1,
                    "print_error_details": 1,
                    "print_error_info": 1,
                    "print_error_message": 21
                },
                "uVar1": {
                    "error_description": 1,
                    "error_message": 22,
                    "error_msg": 1,
                    "error_string": 3,
                    "error_text": 1
                },
                "unaff_RBX": {
                    "check_flag": 1,
                    "error_cause": 2,
                    "error_code": 14,
                    "error_flag": 7,
                    "error_status": 2,
                    "error_type": 2,
                    "file_descriptor": 1,
                    "is_error": 1,
                    "is_error_set": 1
                },
                "unaff_retaddr": {
                    "return_addr": 1,
                    "return_address": 30
                }
            },
            "called": [
                "fflush",
                "dcgettext",
                "fprintf"
            ],
            "calling": [
                "FUN_00103d20"
            ],
            "code": "\n\n\nvoid print_error_message_0010274b(void)\n\n{\n  undefined8 error_message;\n  long error_code;\n  undefined8 return_address;\n  \n  error_message = dcgettext(0,\"cause of error unknown\",5);\n  fflush(_stdout);\n  if (error_code != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",DAT_00107350);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",DAT_00107350,error_message,return_address);\n  return;\n}\n\n",
            "current_name": "print_error_message_0010274b",
            "entrypoint": "0x0010274b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010274b": "print_error_message_0010274b",
                "uVar1": "error_message",
                "unaff_RBX": "error_code",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010278c": {
            "additional_data": {
                "FUN_0010278c": {
                    "print_matching_formats": 31
                },
                "__format": {
                    "error_format": 1,
                    "error_message": 1,
                    "error_message_format": 1,
                    "format_message": 4,
                    "format_string": 18,
                    "locale_string": 1,
                    "localized_format_string": 1,
                    "translation": 1
                },
                "_stderr": {
                    "_stderr": 1,
                    "error_stream": 1,
                    "standard_error": 6,
                    "stderr": 2,
                    "stderr_stream": 1
                },
                "_stdout": {
                    "_stdout": 1,
                    "output_stream": 1,
                    "standard_output": 6,
                    "standard_output_file": 1,
                    "stdout": 3,
                    "stdout_stream": 1
                },
                "fprintf": {
                    "print_error": 1
                },
                "fputc": {
                    "put_character": 1
                },
                "free": {
                    "release_memory": 1
                },
                "param_1": {
                    "format_array": 2,
                    "format_list": 5,
                    "format_strings": 13,
                    "formats": 8,
                    "formats_array": 1,
                    "matching_formats": 2
                },
                "plVar2": {
                    "current_format": 17,
                    "current_format_string": 5,
                    "current_string": 2,
                    "format_ptr": 1,
                    "format_string_ptr": 1,
                    "p_formats": 1,
                    "ptr": 1
                },
                "uVar1": {
                    "current_locale": 1,
                    "data": 2,
                    "data_variable": 1,
                    "default_format": 3,
                    "default_translation": 1,
                    "default_value": 1,
                    "format_message": 1,
                    "format_specifier": 1,
                    "format_string": 3,
                    "language": 1,
                    "locale": 1,
                    "matching_format": 2,
                    "matching_formats": 2,
                    "translation": 1,
                    "translation_context": 1
                }
            },
            "called": [
                "fflush",
                "dcgettext",
                "fputc",
                "fprintf",
                "free"
            ],
            "calling": [
                "FUN_001024d2"
            ],
            "code": "\n\n\nvoid print_matching_formats_0010278c(long *format_strings)\n\n{\n  undefined8 format_string;\n  char *format_string;\n  long *current_format;\n  \n  fflush(standard_output);\n  format_string = DAT_00107350;\n  format_string = (char *)dcgettext(0,\"%s: Matching formats:\",5);\n  fprintf(standard_error,format_string,format_string);\n  for (current_format = format_strings; *current_format != 0; current_format = current_format + 1) {\n    fprintf(standard_error,\" %s\");\n  }\n  free(format_strings);\n  fputc(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_matching_formats_0010278c",
            "entrypoint": "0x0010278c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010278c": "print_matching_formats_0010278c",
                "__format": "format_string",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "fprintf": "print_error",
                "fputc": "put_character",
                "free": "release_memory",
                "param_1": "format_strings",
                "plVar2": "current_format",
                "uVar1": "format_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010281b": {
            "additional_data": {
                "DAT_00107350": {
                    "default_target": 2
                },
                "FUN_0010281b": {
                    "display_binary_sections_sizes": 1,
                    "display_binary_sizes": 1,
                    "display_section_sizes": 14,
                    "print_file_size_info": 1,
                    "print_section_sizes": 14
                },
                "__ptr": {
                    "target_list": 30,
                    "target_list_ptr": 1
                },
                "bfd_target_list": {
                    "list_target_formats": 1
                },
                "dcgettext": {
                    "get_locale_text": 1,
                    "get_message": 1,
                    "get_translated_text": 2,
                    "gettext": 1
                },
                "exit": {
                    "end_execution": 1,
                    "exit_program": 3,
                    "terminate_program": 2
                },
                "fprintf": {
                    "print": 1,
                    "print_formatted": 4,
                    "write_formatted": 1,
                    "write_to_output": 2
                },
                "fputc": {
                    "put_character": 2,
                    "write_char": 2,
                    "write_character": 4
                },
                "free": {
                    "deallocate_memory": 1,
                    "release_memory": 4
                },
                "lVar1": {
                    "default_format": 4,
                    "default_output_style": 1,
                    "default_size": 1,
                    "default_style": 3,
                    "default_target": 4,
                    "language": 3,
                    "language_code": 2,
                    "language_id": 2,
                    "language_value": 1,
                    "language_var": 1,
                    "language_version": 3,
                    "support_check": 1,
                    "supported_target": 1,
                    "supported_targets_text": 1,
                    "target": 1,
                    "target_name": 1,
                    "target_string": 1
                },
                "param_1": {
                    "file": 13,
                    "output_file": 16,
                    "output_stream": 2
                },
                "param_2": {
                    "error_code": 4,
                    "exit_code": 25,
                    "exit_status": 2
                },
                "pcVar2": {
                    "localized_text": 2,
                    "message": 19,
                    "message_ptr": 1,
                    "text": 6,
                    "translation": 2,
                    "usage_message": 1
                },
                "plVar3": {
                    "current_target": 6,
                    "list_pointer": 1,
                    "ptr": 5,
                    "ptr_target": 2,
                    "target": 6,
                    "target_item": 1,
                    "target_list_item": 1,
                    "target_pointer": 4,
                    "target_ptr": 5
                }
            },
            "called": [
                "dcgettext",
                "bfd_target_list",
                "fputc",
                "fprintf",
                "free",
                "exit"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid display_binary_sections_sizes_0010281b(FILE *output_file,int exit_code)\n\n{\n  long default_target;\n  char *message;\n  long *target_list;\n  long *target;\n  \n  default_target = DAT_00107350;\n  message = (char *)dcgettext(0,\"Usage: %s [option(s)] [file(s)]\\n\",5);\n  fprintf(output_file,message,default_target);\n  message = (char *)dcgettext(0,\" Displays the sizes of sections inside binary files\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\" If no input file(s) are specified, a.out is assumed\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \" The options are:\\n  -A|-B|-G  --format={sysv|berkeley|gnu}  Select output style (default is %s)\\n  -o|-d|-x  --radix={8|10|16}         Display numbers in octal, decimal or hex\\n  -t        --totals                  Display the total sizes (Berkeley only)\\n  -f                                  Ignored.\\n            --common                  Display total size for *COM* syms\\n            --target=<bfdname>        Set the binary file format\\n            @<file>                   Read options from <file>\\n  -h|-H|-?  --help                    Display this information\\n  -v|-V     --version                 Display the program\\'s version\\n\\n\"\n                             ,5);\n  fprintf(output_file,message,\"berkeley\");\n  default_target = DAT_00107350;\n  if (DAT_00107350 == 0) {\n    message = (char *)dcgettext(0,\"Supported targets:\",5);\n    fprintf(output_file,message);\n  }\n  else {\n    message = (char *)dcgettext(0,\"%s: supported targets:\",5);\n    fprintf(output_file,message,default_target);\n  }\n  target_list = (long *)bfd_target_list();\n  target = target_list;\n  while( true ) {\n    default_target = *target;\n    target = target + 1;\n    if (default_target == 0) break;\n    fprintf(output_file,\" %s\");\n  }\n  fputc(10,output_file);\n  free(target_list);\n  if (exit_code == 0) {\n    message = (char *)dcgettext(0,\"Report bugs to %s\\n\",5);\n    fprintf(output_file,message,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  exit_program(exit_code);\n}\n\n",
            "current_name": "display_binary_sections_sizes_0010281b",
            "entrypoint": "0x0010281b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010281b": "display_binary_sections_sizes_0010281b",
                "__ptr": "target_list",
                "bfd_target_list": "list_target_formats",
                "dcgettext": "get_translated_text",
                "exit": "exit_program",
                "fprintf": "print_formatted",
                "fputc": "write_character",
                "free": "release_memory",
                "lVar1": "default_target",
                "param_1": "output_file",
                "param_2": "exit_code",
                "pcVar2": "message",
                "plVar3": "target"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102980": {
            "additional_data": {
                "FUN_00102980": {
                    "check_file": 14,
                    "check_file_and_print_warnings": 1,
                    "check_file_and_process": 1,
                    "check_file_info": 2,
                    "check_file_information": 2,
                    "check_file_properties": 2,
                    "check_file_stat": 1,
                    "check_file_stats": 2,
                    "check_file_status": 1,
                    "handle_file": 1,
                    "process_file": 1,
                    "validate_and_process_file": 1,
                    "validate_file": 2
                },
                "cVar1": {
                    "check_result": 1,
                    "file_format": 1,
                    "format": 1,
                    "format_check": 8,
                    "format_check_result": 13,
                    "format_result": 1,
                    "format_valid": 4,
                    "is_valid_format": 1,
                    "result": 1
                },
                "iVar2": {
                    "result": 4,
                    "stat_result": 12,
                    "status": 13,
                    "status_code": 1
                },
                "lVar6": {
                    "bfd_file": 2,
                    "bfd_file_descriptor": 1,
                    "bfd_file_handle": 1,
                    "bfd_handle": 22,
                    "bfd_handler": 1,
                    "file_descriptor": 2,
                    "file_handle": 2
                },
                "param_1": {
                    "file_path": 25,
                    "filename": 6
                },
                "pcVar5": {
                    "error_message": 11,
                    "error_msg": 1,
                    "error_reason": 12,
                    "error_str": 1,
                    "error_string": 2,
                    "reason": 1,
                    "str_error": 3
                },
                "piVar3": {
                    "errno_location": 3,
                    "errno_pointer": 1,
                    "errno_ptr": 11,
                    "error_code": 4,
                    "error_code_ptr": 3,
                    "error_num": 1,
                    "error_num_ptr": 1,
                    "error_number": 6,
                    "error_number_ptr": 1
                },
                "sStack_b8": {
                    "file_info": 5,
                    "file_stat": 12,
                    "file_stats": 12,
                    "file_status": 1
                },
                "uVar4": {
                    "error_message": 18,
                    "error_msg": 1,
                    "error_msg_text": 1,
                    "error_string": 1,
                    "localized_error_message": 2,
                    "localized_message": 4,
                    "localized_string": 1,
                    "translated_error_message": 1,
                    "translated_message": 1
                }
            },
            "called": [
                "dcgettext",
                "FUN_00102a40",
                "FUN_00102f40",
                "bfd_openr",
                "FUN_001023b6",
                "stat",
                "FUN_00102360",
                "bfd_check_format"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid check_file_info_00102980(char *file_path)\n\n{\n  char format_check_result;\n  int status;\n  int *errno_ptr;\n  undefined8 error_message;\n  char *error_reason;\n  long bfd_handle;\n  stat file_stats;\n  \n  if (file_path != (char *)0x0) {\n    status = stat(file_path,&file_stats);\n    if (status < 0) {\n      errno_ptr = __errno_location();\n      if (*errno_ptr == 2) {\n        error_message = dcgettext(0,\"\\'%s\\': No such file\",5);\n        print_error_message_00102f40(error_message,file_path);\n      }\n      else {\n        error_reason = strerror(*errno_ptr);\n        error_message = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n        print_error_message_00102f40(error_message,file_path,error_reason);\n      }\n    }\n    else if ((file_stats.st_mode & 0xf000) == 0x4000) {\n      error_message = dcgettext(0,\"Warning: \\'%s\\' is a directory\",5);\n      print_error_message_00102f40(error_message,file_path);\n    }\n    else if ((file_stats.st_mode & 0xf000) == 0x8000) {\n      if (file_stats.st_size < 0) {\n        error_message = dcgettext(0,\"Warning: \\'%s\\' has negative size, probably it is too large\",5);\n        print_error_message_00102f40(error_message,file_path);\n      }\n      else if (file_stats.st_size != 0) {\n        bfd_handle = bfd_openr(file_path,DAT_00107340);\n        if (bfd_handle != 0) {\n          format_check_result = bfd_check_format(bfd_handle,2);\n          if (format_check_result != '\\0') {\n            process_archived_files_001023b6();\n            return;\n          }\n          check_and_print_bfd_format_info_00102a40(bfd_handle);\n          format_check_result = bfd_close(bfd_handle);\n          if (format_check_result != '\\0') {\n            return;\n          }\n        }\n        print_bfd_error_message_00103d20(file_path);\n        DAT_00107314 = 1;\n        return;\n      }\n    }\n    else {\n      error_message = dcgettext(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n      print_error_message_00102f40(error_message,file_path);\n    }\n  }\n  DAT_00107314 = 1;\n  return;\n}\n\n",
            "current_name": "check_file_info_00102980",
            "entrypoint": "0x00102980",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102980": "check_file_info_00102980",
                "cVar1": "format_check_result",
                "iVar2": "status",
                "lVar6": "bfd_handle",
                "param_1": "file_path",
                "pcVar5": "error_reason",
                "piVar3": "errno_ptr",
                "sStack_b8": "file_stats",
                "uVar4": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102a40": {
            "additional_data": {
                "DAT_00107314": {
                    "data_code": 1,
                    "data_variable": 1
                },
                "FUN_00102a40": {
                    "analyze_and_print_binary_format": 1,
                    "analyze_binary_file": 1,
                    "check_and_print_bfd_error": 2,
                    "check_and_print_bfd_format_info": 1,
                    "check_and_print_bfd_info": 3,
                    "check_and_print_executable_info": 3,
                    "check_and_print_file_info": 4,
                    "check_and_print_format_info": 1,
                    "check_and_print_formats": 1,
                    "check_and_print_section_info": 1,
                    "check_bfd_format": 1,
                    "check_bfd_formats": 3,
                    "check_binary_file_format": 1,
                    "check_binary_format": 2,
                    "check_executable_format": 3,
                    "check_format": 1,
                    "identify_binary_format": 1,
                    "process_binary_formats": 1
                },
                "cVar1": {
                    "check_result": 2,
                    "format_check": 6,
                    "format_check_pass": 1,
                    "format_check_result": 5,
                    "format_found": 1,
                    "format_valid": 5,
                    "is_binary_file": 1,
                    "is_valid": 1,
                    "is_valid_format": 7,
                    "valid_format": 2
                },
                "iVar2": {
                    "bfd_error_code": 1,
                    "error": 1,
                    "error_code": 28,
                    "error_status": 1
                },
                "lVar3": {
                    "command": 1,
                    "command_name": 1,
                    "failing_command": 25
                },
                "local_20": {
                    "compatible_formats": 1,
                    "format_match_info": 1,
                    "format_matches": 1,
                    "matched_formats": 1,
                    "matching_formats": 26
                },
                "param_1": {
                    "bfd_data": 1,
                    "bfd_file": 3,
                    "bfd_handle": 4,
                    "bfd_object": 1,
                    "binary": 1,
                    "binary_file": 7,
                    "file": 1,
                    "file_handle": 3,
                    "file_param": 1,
                    "file_path": 1,
                    "files": 1,
                    "format_data": 1,
                    "format_param": 2,
                    "input_file": 2,
                    "parameter": 1
                },
                "print_bfd_error_message_00103d20": {
                    "print_bfd_error_message": 1,
                    "print_error_message": 1
                },
                "print_executable_section_info_00102a90": {
                    "print_executable_section_info": 1,
                    "print_section_info": 1
                },
                "print_matching_formats_0010278c": {
                    "print_formats": 1,
                    "print_matching_formats": 1
                }
            },
            "called": [
                "FUN_001024d2",
                "FUN_00102a90",
                "putchar",
                "bfd_check_format_matches",
                "bfd_check_format"
            ],
            "calling": [
                "FUN_00102980",
                "FUN_001023b6"
            ],
            "code": "\n\n\nvoid check_and_print_bfd_format_info_00102a40(undefined8 *binary_file)\n\n{\n  char is_valid_format;\n  int error_code;\n  long failing_command;\n  undefined8 matching_formats [2];\n  \n  is_valid_format = bfd_check_format(binary_file,2);\n  if (is_valid_format == '\\0') {\n    is_valid_format = bfd_check_format_matches(binary_file,1,matching_formats);\n    if (is_valid_format == '\\0') {\n      error_code = bfd_get_error();\n      if (error_code == 0xd) {\n        print_error_message(*binary_file);\n        print_formats(matching_formats[0]);\n        DAT_00107314 = 3;\n      }\n      else {\n        is_valid_format = bfd_check_format_matches(binary_file,3,matching_formats);\n        if (is_valid_format == '\\0') {\n          print_error_message(*binary_file);\n          error_code = bfd_get_error();\n          if (error_code == 0xd) {\n            print_formats(matching_formats[0]);\n          }\n          DAT_00107314 = 3;\n        }\n        else {\n          print_section_info(binary_file);\n          fwrite(\" (core file\",1,0xb,_stdout);\n          failing_command = bfd_core_file_failing_command(binary_file);\n          if (failing_command != 0) {\n            printf(\" invoked as %s\",failing_command);\n          }\n          puts(\")\\n\");\n        }\n      }\n    }\n    else {\n      print_section_info(binary_file);\n      putchar(10);\n    }\n  }\n  return;\n}\n\n",
            "current_name": "check_and_print_bfd_format_info_00102a40",
            "entrypoint": "0x00102a40",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102a40": "check_and_print_bfd_format_info_00102a40",
                "cVar1": "is_valid_format",
                "iVar2": "error_code",
                "lVar3": "failing_command",
                "local_20": "matching_formats",
                "param_1": "binary_file",
                "print_bfd_error_message_00103d20": "print_error_message",
                "print_executable_section_info_00102a90": "print_section_info",
                "print_matching_formats_0010278c": "print_formats"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102a90": {
            "additional_data": {
                "DAT_001072c8": {
                    "format_output2": 1,
                    "min_total_size": 1
                },
                "DAT_001072cc": {
                    "format_output1": 1,
                    "min_section_size": 1
                },
                "DAT_001072d0": {
                    "constant3": 1,
                    "dat_001072d0": 1,
                    "section_name_padding": 1
                },
                "DAT_001072d8": {
                    "dat_001072d8": 1,
                    "data_size": 1
                },
                "DAT_001072e0": {
                    "total_section_internal_size": 1,
                    "total_size_of_sections": 1
                },
                "DAT_001072e8": {
                    "num_executed_sections": 1
                },
                "DAT_001072f0": {
                    "constant2": 1,
                    "section_flag_mask": 1,
                    "total_data_size": 1
                },
                "DAT_001072f8": {
                    "executed_bss_size": 1
                },
                "DAT_00107300": {
                    "executed_data_size": 1
                },
                "DAT_00107308": {
                    "total_executed_size": 1
                },
                "DAT_00107310": {
                    "has_sections": 1,
                    "is_bfd_valid": 1
                },
                "DAT_00107318": {
                    "output_bss_size": 1
                },
                "DAT_00107320": {
                    "output_data_size": 1
                },
                "DAT_00107328": {
                    "output_text_size": 1
                },
                "DAT_00107334": {
                    "has_output_symbols": 1
                },
                "DAT_00107348": {
                    "is_print_enabled": 1,
                    "is_verbose": 1
                },
                "FUN_00102a90": {
                    "analyze_and_print_sections_info": 1,
                    "analyze_binary": 3,
                    "analyze_binary_file": 1,
                    "calculate_section_sizes": 2,
                    "calculate_sections_size": 1,
                    "print_binary_file_summary": 1,
                    "print_executable_info": 1,
                    "print_executable_section_info": 1,
                    "print_file_statistics": 1,
                    "print_section_data": 1,
                    "print_section_info": 2,
                    "print_section_information": 2,
                    "print_section_sizes": 1,
                    "print_section_statistics": 2,
                    "print_section_summary": 1,
                    "print_sections_details": 1,
                    "print_sections_info": 1,
                    "print_sections_information": 1,
                    "print_sections_statistics": 1,
                    "print_sections_summary": 3,
                    "print_statistics": 1,
                    "process_binary_data": 1
                },
                "_DAT_001072f8": {
                    "total_bss_size": 1
                },
                "_DAT_00107310": {
                    "constant4": 1,
                    "has_executed_sections": 1,
                    "is_initialized": 1
                },
                "_DAT_00107318": {
                    "total_output_bss_size": 1
                },
                "_DAT_00107320": {
                    "total_output_data_size": 1
                },
                "_DAT_00107328": {
                    "total_output_text_size": 1
                },
                "__ptr": {
                    "allocated_memory": 13,
                    "buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "malloced_memory": 1,
                    "memory_buffer": 2,
                    "memory_pointer": 1,
                    "section_array": 2,
                    "section_data": 5,
                    "section_pointer_array": 1,
                    "section_sizes": 2
                },
                "_stdout": {
                    "output_stream": 1,
                    "standard_output": 2
                },
                "bVar10": {
                    "boolean_var1": 1,
                    "condition": 2,
                    "condition1": 2,
                    "flag": 1,
                    "flag2": 1,
                    "has_sections": 1,
                    "has_size": 1,
                    "has_valid_data": 1,
                    "is_data_valid": 1,
                    "is_executable": 1,
                    "is_loop_end": 1,
                    "is_not_empty": 1,
                    "is_section_valid": 2,
                    "is_summary_enabled": 1,
                    "is_true": 2,
                    "is_valid": 3,
                    "is_valid_flag": 1,
                    "is_zero": 3,
                    "loop_condition": 2,
                    "loop_flag1": 1,
                    "section_found": 1
                },
                "bVar11": {
                    "boolean_var2": 1,
                    "condition2": 2,
                    "first_execution": 1,
                    "first_section": 1,
                    "flag2": 1,
                    "flag3": 1,
                    "flag_condition": 1,
                    "has_extended_data": 1,
                    "is_false": 1,
                    "is_first": 2,
                    "is_first_iteration": 5,
                    "is_first_loop": 1,
                    "is_first_section": 2,
                    "is_first_time": 2,
                    "is_new_binary": 1,
                    "is_new_section": 1,
                    "is_zero": 1,
                    "is_zero_2": 1,
                    "loop_condition_00": 1,
                    "loop_flag2": 1,
                    "not_empty": 1,
                    "unused": 1
                },
                "bfd_map_over_sections": {
                    "map_over_sections": 1
                },
                "cVar5": {
                    "flag": 8,
                    "found_section": 2,
                    "found_valid_section": 2,
                    "has_changed": 2,
                    "has_executable_sections": 1,
                    "has_modified_section": 1,
                    "has_valid_data": 1,
                    "has_valid_section": 2,
                    "has_valid_section_data": 1,
                    "is_modified": 1,
                    "is_new": 1,
                    "is_section_change": 1,
                    "is_section_valid": 2,
                    "section_flag": 3,
                    "section_updated": 1
                },
                "extraout_RDX": {
                    "additional_data": 1,
                    "error_code": 1,
                    "exit_code": 1,
                    "extra_data": 1,
                    "extra_output": 1,
                    "extra_output1": 2,
                    "extra_output_rdx": 3,
                    "extra_rdx": 1,
                    "file_name": 1,
                    "format_str": 1,
                    "output": 1,
                    "section_size": 5,
                    "temp1": 1,
                    "unused": 1,
                    "unused1": 1
                },
                "extraout_RDX_00": {
                    "error_code": 1,
                    "error_code2": 1,
                    "extra_data": 1,
                    "extra_data2": 1,
                    "extra_output2": 2,
                    "extra_output_0": 1,
                    "extra_output_rdx0": 1,
                    "extra_output_rdx2": 1,
                    "extra_output_rdx_00": 1,
                    "extra_rdx_00": 1,
                    "format_str_oct": 1,
                    "output_2": 1,
                    "result": 1,
                    "section_address": 1,
                    "section_size": 1,
                    "section_size_2": 1,
                    "size": 1,
                    "temp2": 1,
                    "unused": 2,
                    "unused2": 1
                },
                "extraout_RDX_01": {
                    "additional_info": 1,
                    "extra_data3": 1,
                    "extra_info": 1,
                    "extra_message": 1,
                    "extra_output": 1,
                    "extra_output3": 2,
                    "extra_output_1": 1,
                    "extra_output_rdx1": 1,
                    "extra_output_rdx3": 1,
                    "extra_output_rdx_01": 1,
                    "extra_rdx_01": 1,
                    "file_extension": 1,
                    "format_str_hex": 1,
                    "formatted_output": 1,
                    "output_3": 1,
                    "prefix": 1,
                    "section_info": 1,
                    "section_size_3": 1,
                    "temp3": 1,
                    "unused": 1,
                    "unused3": 1
                },
                "format_and_print_number_00102e50": {
                    "format_and_print_number1": 1
                },
                "iVar4": {
                    "count": 3,
                    "counter": 5,
                    "flag": 2,
                    "indent_char": 1,
                    "index": 9,
                    "iterator": 1,
                    "loop_counter": 2,
                    "padding": 1,
                    "padding_char": 1,
                    "padding_size": 1,
                    "section_counter": 1,
                    "section_index": 1
                },
                "iVar8": {
                    "column_width": 2,
                    "index": 1,
                    "integer": 1,
                    "integer_var": 1,
                    "num_digits": 1,
                    "padding": 12,
                    "padding_amount": 1,
                    "padding_length": 2,
                    "padding_size": 4,
                    "padding_value": 1,
                    "padding_width": 2,
                    "size_var": 1,
                    "value": 1
                },
                "idata_001072e8": {
                    "section_count": 1
                },
                "idata_001072f0": {
                    "static_data_size": 1
                },
                "idata_001072f8": {
                    "total_uninitialized_data_size": 1
                },
                "idata_00107300": {
                    "total_initialized_data_size": 1
                },
                "idata_00107308": {
                    "total_dynamic_data_size": 1
                },
                "ivalues_100": {
                    "section_size": 1
                },
                "ivalues_101": {
                    "text_size": 1
                },
                "ivalues_102": {
                    "data_size": 1
                },
                "ivalues_105": {
                    "bss_size": 1
                },
                "ivalues_107": {
                    "total_size": 1
                },
                "ivalues_110": {
                    "total_data_size": 1
                },
                "lVar1": {
                    "current_section": 2,
                    "current_section_size": 1,
                    "section": 2,
                    "section_address": 9,
                    "section_base_address": 1,
                    "section_data_offset": 1,
                    "section_entry": 1,
                    "section_offset": 3,
                    "section_pointer": 3,
                    "section_ptr": 2,
                    "section_size": 4,
                    "size_value": 1
                },
                "lVar2": {
                    "section_size": 1,
                    "total_instructions": 1,
                    "total_section_size": 3,
                    "total_size": 25
                },
                "lVar9": {
                    "count": 1,
                    "index": 1,
                    "iterator": 1,
                    "length": 2,
                    "loop_counter": 2,
                    "loop_var": 1,
                    "number_of_sections": 1,
                    "result": 1,
                    "section_count": 1,
                    "section_size": 2,
                    "sections_remaining": 1,
                    "size": 7,
                    "temp_var": 1,
                    "total": 2,
                    "total_size": 4,
                    "total_size_2": 1,
                    "value": 1
                },
                "laVar9": {
                    "total_size": 1
                },
                "param_1": {
                    "arguments": 4,
                    "binary_data": 1,
                    "binary_file": 3,
                    "command_line_arguments": 1,
                    "executable_name": 1,
                    "executable_path": 1,
                    "file_paths": 2,
                    "input_files": 1,
                    "input_parameters": 2,
                    "param": 1,
                    "parameters": 5,
                    "section_name": 1,
                    "section_names": 2,
                    "sections": 5,
                    "sections_array": 1
                },
                "pcVar7": {
                    "character": 1,
                    "display_text": 1,
                    "file_name_part": 1,
                    "filename": 2,
                    "format_specifier": 1,
                    "format_string": 3,
                    "message": 5,
                    "print_variable": 1,
                    "ptr_var2": 1,
                    "section_details": 1,
                    "section_name": 6,
                    "string": 1,
                    "string_var": 1,
                    "string_variable": 1,
                    "temp_char_pointer": 1,
                    "text": 2,
                    "text_data_bss_filename": 1,
                    "unused": 1
                },
                "print_bfd_error_message_00103d20": {
                    "print_error_message": 1
                },
                "print_formatted_number_00102e90": {
                    "print_formatted_number": 1
                },
                "print_formatted_numbers_with_padding_00102fe0": {
                    "print_formatted_numbers": 1
                },
                "printf": {
                    "print_formatted_output": 1
                },
                "process_data_and_print_00103cc0": {
                    "process_and_print_data": 1
                },
                "puVar12": {
                    "data_pointer": 1,
                    "format": 1,
                    "format_args": 1,
                    "format_specifier": 1,
                    "format_string": 1,
                    "number_format": 1,
                    "pad_character": 1,
                    "padding": 1,
                    "padding_character": 2,
                    "padding_chars": 1,
                    "padding_pattern": 1,
                    "padding_pointer": 1,
                    "padding_ptr": 1,
                    "padding_string": 3,
                    "padding_symbol": 1,
                    "padding_text": 1,
                    "padding_value": 1,
                    "pointer": 3,
                    "pointer_var": 1,
                    "pointer_variable": 2,
                    "print_format": 1,
                    "ptr_var3": 1,
                    "unused": 1
                },
                "puts": {
                    "print_string": 1
                },
                "pvVar6": {
                    "allocated_memory": 1,
                    "buffer": 1,
                    "data_pointer": 2,
                    "dynamic_memory": 1,
                    "pointer": 2,
                    "pointer_to_memory": 1,
                    "ptr_var": 2,
                    "ptr_variable": 1,
                    "result": 1,
                    "section_data": 2,
                    "section_data_pointer": 1,
                    "section_info": 1,
                    "section_sizes_temp": 1,
                    "some_pointer": 1,
                    "temp_pointer": 6,
                    "temp_ptr": 4,
                    "temp_var": 1,
                    "temp_variable": 1,
                    "unused": 1
                },
                "stdout_": {
                    "stdout": 1
                },
                "uVar3": {
                    "extension_string": 1,
                    "extra_data": 1,
                    "extra_format_arg": 1,
                    "extra_info": 1,
                    "extra_output": 1,
                    "formatted_number": 1,
                    "formatted_output": 1,
                    "info": 1,
                    "output_data": 1,
                    "output_value": 1,
                    "output_variable": 1,
                    "padding": 1,
                    "result": 2,
                    "result_var": 1,
                    "section_data": 1,
                    "suffix": 1,
                    "temp4": 1,
                    "temp_var": 1,
                    "unused": 1,
                    "unused4": 1,
                    "unused_var3": 1,
                    "unused_variable": 1,
                    "uvar3": 1,
                    "variable": 1
                },
                "update_data_if_valid_00103c50": {
                    "update_valid_data": 1
                },
                "xexit": {
                    "exit_program": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "FUN_00102e50",
                "putc",
                "fputs",
                "free",
                "FUN_0010259c",
                "FUN_00102fe0",
                "FUN_00103c50",
                "bfd_map_over_sections",
                "puts",
                "xexit",
                "xmalloc",
                "FUN_00103d20",
                "FUN_00103cc0",
                "FUN_00102e90",
                "FUN_00102d70",
                "printf"
            ],
            "calling": [
                "FUN_00102a40",
                "FUN_001024d2"
            ],
            "code": "\n\n\nvoid print_executable_section_info_00102a90(char **parameters)\n\n{\n  long section_address;\n  undefined8 section_size;\n  long total_size;\n  long extra_output2;\n  undefined8 extra_output3;\n  undefined8 result;\n  void *allocated_memory;\n  int index;\n  char flag;\n  void *temp_pointer;\n  char *section_name;\n  int padding;\n  long size;\n  bool is_valid;\n  bool is_first_iteration;\n  undefined *pointer;\n  \n  if ((_DAT_00107310 == 0) || (DAT_001072f0 = 0, (*(uint *)((long)parameters + 0x44) & 0x52) != 0x10))\n  goto LAB_00102aa8;\n  size = (**(code **)(parameters[1] + 0x1f8))();\n  if (size < 0) {\n    print_error_message(*parameters);\n    xexit(1);\nLAB_001026b4:\n    allocated_memory = (void *)xmalloc();\n  }\n  else {\n    allocated_memory = (void *)0x0;\n    if (size != 0) goto LAB_001026b4;\n  }\n  temp_pointer = allocated_memory;\n  size = (**(code **)(parameters[1] + 0x200))(parameters);\n  flag = (char)temp_pointer;\n  if (size < 0) {\n    print_error_message(*parameters);\n    xexit(1);\n    total_size = extra_output2;\n  }\n  else {\n    flag = '\\0';\n    total_size = DAT_001072f0;\n    while (is_valid = size != 0, size = size + -1, is_valid) {\n      section_address = *(long *)((long)allocated_memory + size * 8);\n      if (((*(byte *)(*(long *)(section_address + 0x20) + 0x25) & 0x10) != 0) &&\n         ((*(byte *)(section_address + 0x19) & 1) == 0)) {\n        total_size = total_size + *(long *)(section_address + 0x10);\n        flag = '\\x01';\n      }\n    }\n  }\n  if (flag != '\\0') {\n    DAT_001072f0 = total_size;\n  }\n  free(allocated_memory);\nLAB_00102aa8:\n  if (DAT_00107348 == 1) {\n    DAT_001072e0 = 0;\n    DAT_001072d8 = 0;\n    DAT_001072d0 = 0;\n    bfd_map_over_sections(parameters,update_valid_data,0);\n    if (_DAT_00107310 != 0) {\n      if ((int)DAT_001072d0 < 5) {\n        DAT_001072d0 = 5;\n      }\n      DAT_001072e0 = DAT_001072e0 + DAT_001072f0;\n    }\n    DAT_001072cc = format_and_print_number1(DAT_001072d8);\n    if (DAT_001072cc < 4) {\n      DAT_001072cc = 4;\n    }\n    DAT_001072c8 = format_and_print_number1();\n    if (DAT_001072c8 < 4) {\n      DAT_001072c8 = 4;\n    }\n    DAT_001072e0 = 0;\n    printf(\"%s  \",*parameters);\n    result = extra_output3;\n    if ((undefined8 *)parameters[0x1d] != (undefined8 *)0x0) {\n      printf(\" (ex %s)\",*(undefined8 *)parameters[0x1d]);\n      result = section_size;\n    }\n    pointer = &DAT_001040fc;\n    printf(\":\\n%-*s   %*s   %*s\\n\",(ulong)DAT_001072d0,\"section\",(ulong)DAT_001072c8,&DAT_00104067,\n           (ulong)DAT_001072cc,&DAT_001040fc,result);\n    bfd_map_over_sections(parameters,process_and_print_data,0);\n    if (_DAT_00107310 != 0) {\n      DAT_001072e0 = DAT_001072e0 + DAT_001072f0;\n      print_formatted_numbers(\"*COM*\",DAT_001072f0,0,pointer);\n    }\n    printf(\"%-*s   \",(ulong)DAT_001072d0,\"Total\");\n    print_formatted_number(DAT_001072c8,DAT_001072e0);\n    puts(\"\\n\");\n    return;\n  }\n  padding = (-(uint)(DAT_00107348 == 0) & 0xfffffffd) + 10;\n  is_valid = DAT_00107348 == 0;\n  DAT_00107308 = 0;\n  DAT_00107300 = 0;\n  DAT_001072f8 = 0;\n  bfd_map_over_sections(parameters,update_data_based_on_flags_00102d70,0);\n  DAT_00107308 = DAT_00107308 + DAT_001072f0;\n  index = DAT_001072e8 + 1;\n  is_first_iteration = DAT_001072e8 == 0;\n  DAT_001072e8 = index;\n  if (is_first_iteration) {\n    if (DAT_00107348 == 0) {\n      section_name = \"   text\\t   data\\t    bss\\t    dec\\t    hex\\tfilename\";\n      if (DAT_0010733c == 1) {\n        section_name = \"   text\\t   data\\t    bss\\t    oct\\t    hex\\tfilename\";\n      }\n      puts(section_name);\n    }\n    else {\n      puts(\"      text       data        bss      total filename\");\n    }\n  }\n  size = DAT_001072f8 + DAT_00107300 + DAT_00107308;\n  if (_DAT_00107334 != 0) {\n    DAT_00107328 = DAT_00107328 + DAT_001072f8;\n    DAT_00107320 = DAT_00107320 + DAT_00107300;\n    DAT_00107318 = DAT_00107318 + DAT_00107308;\n  }\n  index = (int)(char)((-is_valid & 0xe9U) + 0x20);\n  print_formatted_number(padding);\n  putc(index,standard_output);\n  print_formatted_number(padding,DAT_00107300);\n  putc(index,standard_output);\n  print_formatted_number(padding,DAT_00107308);\n  putc(index,standard_output);\n  if (DAT_00107348 == 0) {\n    section_name = \"%7lu\\t%7lx\";\n    if (DAT_0010733c == 1) {\n      section_name = \"%7lo\\t%7lx\";\n    }\n    printf(section_name,size,size);\n  }\n  else {\n    print_formatted_number(padding,size);\n  }\n  putc(index,standard_output);\n  fputs(*parameters,standard_output);\n  if ((undefined8 *)parameters[0x1d] == (undefined8 *)0x0) {\n    return;\n  }\n  printf(\" (ex %s)\",*(undefined8 *)parameters[0x1d]);\n  return;\n}\n\n",
            "current_name": "print_executable_section_info_00102a90",
            "entrypoint": "0x00102a90",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102a90": "print_executable_section_info_00102a90",
                "__ptr": "allocated_memory",
                "_stdout": "standard_output",
                "bVar10": "is_valid",
                "bVar11": "is_first_iteration",
                "bfd_map_over_sections": "map_over_sections",
                "cVar5": "flag",
                "extraout_RDX": "section_size",
                "extraout_RDX_00": "extra_output2",
                "extraout_RDX_01": "extra_output3",
                "format_and_print_number_00102e50": "format_and_print_number1",
                "iVar4": "index",
                "iVar8": "padding",
                "lVar1": "section_address",
                "lVar2": "total_size",
                "lVar9": "size",
                "param_1": "parameters",
                "pcVar7": "section_name",
                "print_bfd_error_message_00103d20": "print_error_message",
                "print_formatted_number_00102e90": "print_formatted_number",
                "print_formatted_numbers_with_padding_00102fe0": "print_formatted_numbers",
                "printf": "print_formatted_output",
                "process_data_and_print_00103cc0": "process_and_print_data",
                "puVar12": "pointer",
                "puts": "print_string",
                "pvVar6": "temp_pointer",
                "uVar3": "result",
                "update_data_if_valid_00103c50": "update_valid_data",
                "xexit": "exit_program",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102d70": {
            "additional_data": {
                "FUN_00102d70": {
                    "calculate_data_modification": 1,
                    "process_data": 1,
                    "update_data": 25,
                    "update_data_based_on_flags": 2,
                    "update_data_counters": 1,
                    "update_values": 1
                },
                "lVar2": {
                    "data_val": 1,
                    "data_value": 4,
                    "offset": 5,
                    "value": 17,
                    "value_to_add": 4
                },
                "param_1": {
                    "arg1": 2,
                    "data": 1,
                    "data_array": 1,
                    "data_pointer": 2,
                    "data_to_update": 1,
                    "entry_pointer": 1,
                    "param": 2,
                    "param1": 19,
                    "param_1": 1,
                    "ptr1": 1
                },
                "param_2": {
                    "arg2": 2,
                    "data": 1,
                    "data_address": 3,
                    "data_offset": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_struct": 1,
                    "param2": 19,
                    "pointer": 1,
                    "ptr2": 1
                },
                "uVar1": {
                    "data_flag": 5,
                    "flag": 3,
                    "flags": 19,
                    "status": 1,
                    "status_flag": 2,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\nvoid update_data_based_on_flags_00102d70(undefined8 param1,long param2)\n\n{\n  uint flags;\n  long value;\n  \n  flags = *(uint *)(param2 + 0x24);\n  if ((flags & 1) != 0) {\n    value = *(long *)(param2 + 0x40);\n    if (((flags & 0x10) != 0) || ((DAT_00107348 == 0 && ((flags & 8) != 0)))) {\n      DAT_001072f8 = DAT_001072f8 + value;\n      return;\n    }\n    if ((flags & 0x100) != 0) {\n      DAT_00107300 = DAT_00107300 + value;\n      return;\n    }\n    DAT_00107308 = DAT_00107308 + value;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_based_on_flags_00102d70",
            "entrypoint": "0x00102d70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102d70": "update_data_based_on_flags_00102d70",
                "lVar2": "value",
                "param_1": "param1",
                "param_2": "param2",
                "uVar1": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102db0": {
            "additional_data": {
                "DAT_0010733c": {
                    "format_specifier": 1,
                    "format_type": 4
                },
                "FUN_00102db0": {
                    "print_and_exit": 3,
                    "print_and_exit_error": 1,
                    "print_error_and_exit": 1,
                    "print_error_message": 3,
                    "print_error_message_and_exit": 1,
                    "print_formatted_error": 2,
                    "print_formatted_error_message": 9,
                    "print_formatted_number": 6,
                    "print_formatted_value": 5
                },
                "__format": {
                    "format": 1,
                    "format_specifier": 4,
                    "format_str": 1,
                    "format_string": 20
                },
                "acStack_110": {
                    "buffer": 3,
                    "formatted_error_message": 1,
                    "formatted_number": 2,
                    "formatted_number_string": 1,
                    "formatted_output": 6,
                    "formatted_string": 9,
                    "formatted_value": 2,
                    "output_buffer": 3,
                    "output_string": 4
                },
                "in_AL": {
                    "condition": 4,
                    "condition_flag": 2,
                    "flag": 6,
                    "is_decimal": 1,
                    "is_error": 1,
                    "is_true": 1,
                    "should_print": 1
                },
                "local_18": {
                    "arg8": 2,
                    "backup8": 1,
                    "error_code8_copy": 1,
                    "flag8_copy": 1,
                    "input8": 1,
                    "local_param8": 2,
                    "local_param_8": 1,
                    "number8_copy": 1,
                    "param8": 2,
                    "param8_copy": 6,
                    "param_8": 2,
                    "param_8_2": 1,
                    "param_8_copy": 3,
                    "parameter8": 1,
                    "value8_copy": 1,
                    "var13": 1,
                    "var_18": 1
                },
                "local_28": {
                    "arg7": 2,
                    "backup7": 1,
                    "error_code7_copy": 1,
                    "flag7_copy": 1,
                    "input7": 1,
                    "local_param7": 2,
                    "local_param_7": 1,
                    "number7_copy": 1,
                    "param7": 2,
                    "param7_copy": 6,
                    "param_7": 2,
                    "param_7_2": 1,
                    "param_7_copy": 3,
                    "parameter7": 1,
                    "value7_copy": 1,
                    "var12": 1,
                    "var_28": 1
                },
                "local_38": {
                    "arg6": 2,
                    "backup6": 1,
                    "error_code6_copy": 1,
                    "flag6_copy": 1,
                    "input6": 1,
                    "local_param6": 2,
                    "local_param_6": 1,
                    "number6_copy": 1,
                    "param6": 2,
                    "param6_copy": 6,
                    "param_6": 2,
                    "param_6_2": 1,
                    "param_6_copy": 3,
                    "parameter6": 1,
                    "value6_copy": 1,
                    "var11": 1,
                    "var_38": 1
                },
                "local_48": {
                    "arg5": 2,
                    "backup5": 1,
                    "error_code5_copy": 1,
                    "flag5_copy": 1,
                    "input5": 1,
                    "local_param5": 2,
                    "local_param_5": 1,
                    "number5_copy": 1,
                    "param5": 2,
                    "param5_copy": 6,
                    "param_5": 2,
                    "param_5_2": 1,
                    "param_5_copy": 3,
                    "parameter5": 1,
                    "value5_copy": 1,
                    "var10": 1,
                    "var_48": 1
                },
                "local_58": {
                    "arg4": 2,
                    "backup4": 1,
                    "error_code4_copy": 1,
                    "flag4_copy": 1,
                    "input4": 1,
                    "local_param4": 2,
                    "local_param_4": 1,
                    "number4_copy": 1,
                    "param4": 2,
                    "param4_copy": 6,
                    "param_4": 2,
                    "param_4_2": 1,
                    "param_4_copy": 4,
                    "parameter4": 1,
                    "value4_copy": 1,
                    "var9": 1,
                    "var_58": 1
                },
                "local_68": {
                    "arg3": 2,
                    "backup3": 1,
                    "error_code3_copy": 1,
                    "flag3_copy": 1,
                    "input3": 1,
                    "local_param3": 2,
                    "local_param_3": 1,
                    "number3_copy": 1,
                    "param3": 2,
                    "param3_copy": 6,
                    "param_3": 2,
                    "param_3_2": 1,
                    "param_3_copy": 4,
                    "parameter3": 1,
                    "value3_copy": 1,
                    "var8": 1,
                    "var_68": 1
                },
                "local_78": {
                    "arg2": 2,
                    "backup2": 1,
                    "error_code2_copy": 1,
                    "flag2_copy": 1,
                    "input2": 1,
                    "local_param2": 2,
                    "local_param_2": 1,
                    "number2_copy": 1,
                    "param2": 2,
                    "param2_copy": 6,
                    "param_2": 2,
                    "param_2_2": 1,
                    "param_2_copy": 4,
                    "parameter2": 1,
                    "value2_copy": 1,
                    "var7": 1,
                    "var_78": 1
                },
                "local_88": {
                    "arg1": 2,
                    "backup1": 1,
                    "error_code": 2,
                    "error_code1_copy": 1,
                    "error_code_copy": 7,
                    "flag1_copy": 1,
                    "input1": 1,
                    "local_param1": 2,
                    "local_param_1": 1,
                    "number1_copy": 1,
                    "param1": 1,
                    "param1_copy": 1,
                    "param_1": 1,
                    "param_1_2": 1,
                    "param_1_copy": 2,
                    "parameter1": 1,
                    "value1_copy": 1,
                    "var6": 1,
                    "var_88": 1
                },
                "local_90": {
                    "address_of_number5": 1,
                    "local_param14": 1,
                    "local_param_14": 1,
                    "number5": 1,
                    "number5_copy": 1,
                    "param14": 1,
                    "param14_copy": 5,
                    "param_14": 3,
                    "param_14_2": 1,
                    "param_14_copy": 1,
                    "val5": 1,
                    "value10": 1,
                    "value14": 1,
                    "value19": 1,
                    "value5": 2,
                    "value5_copy": 3,
                    "value6_copy": 1,
                    "value_e": 1,
                    "var5": 1,
                    "var_90": 1
                },
                "local_98": {
                    "address_of_number4": 1,
                    "local_param13": 1,
                    "local_param_13": 1,
                    "number4": 1,
                    "number4_copy": 1,
                    "param13": 1,
                    "param13_copy": 5,
                    "param_13": 3,
                    "param_13_2": 1,
                    "param_13_copy": 1,
                    "val4": 1,
                    "value13": 1,
                    "value18": 1,
                    "value4": 2,
                    "value4_copy": 3,
                    "value5_copy": 1,
                    "value9": 1,
                    "value_d": 1,
                    "var4": 1,
                    "var_98": 1
                },
                "local_a0": {
                    "address_of_number3": 1,
                    "local_param12": 1,
                    "local_param_12": 1,
                    "number3": 1,
                    "number3_copy": 1,
                    "param12": 1,
                    "param12_copy": 5,
                    "param_12": 3,
                    "param_12_2": 1,
                    "param_12_copy": 1,
                    "val3": 1,
                    "value12": 1,
                    "value17": 1,
                    "value3": 2,
                    "value3_copy": 3,
                    "value4_copy": 1,
                    "value8": 1,
                    "value_c": 1,
                    "var3": 1,
                    "var_a0": 1
                },
                "local_a8": {
                    "address_of_number2": 1,
                    "local_param11": 1,
                    "local_param_11": 1,
                    "number2": 1,
                    "number2_copy": 1,
                    "param11": 1,
                    "param11_copy": 5,
                    "param_11": 3,
                    "param_11_2": 1,
                    "param_11_copy": 1,
                    "val2": 1,
                    "value11": 1,
                    "value16": 1,
                    "value2": 2,
                    "value2_copy": 3,
                    "value3_copy": 1,
                    "value7": 1,
                    "value_b": 1,
                    "var2": 1,
                    "var_a8": 1
                },
                "local_b0": {
                    "address_of_number1": 1,
                    "local_param10": 1,
                    "local_param_10": 1,
                    "number1": 1,
                    "number1_copy": 1,
                    "param10": 1,
                    "param10_copy": 5,
                    "param_10": 3,
                    "param_10_2": 1,
                    "param_10_copy": 1,
                    "val1": 1,
                    "value1": 2,
                    "value10": 1,
                    "value15": 1,
                    "value1_copy": 3,
                    "value2_copy": 1,
                    "value6": 1,
                    "value_a": 1,
                    "var1": 1,
                    "var_b0": 1
                },
                "local_b8": {
                    "buffer": 4,
                    "buffer_data": 1,
                    "error_buffer": 1,
                    "local_array": 1,
                    "local_buffer": 8,
                    "local_buffer_2": 1,
                    "local_var": 1,
                    "local_variable": 3,
                    "local_variables": 1,
                    "temp_buffer": 1,
                    "temporary_buffer": 1
                },
                "local_c8": {
                    "address_of_local_buffer": 1,
                    "buffer": 5,
                    "data_ptr2": 1,
                    "local_array": 1,
                    "local_buffer": 8,
                    "local_ptr_2": 1,
                    "local_variable2": 1,
                    "ptr_to_local_b8": 1,
                    "stack_buffer": 1,
                    "temp_buffer": 1,
                    "var_c8": 1
                },
                "local_d0": {
                    "address_of_buffer_size": 1,
                    "arg_buffer": 1,
                    "buffer": 5,
                    "buffer_address": 2,
                    "buffer_pointer": 2,
                    "buffer_ptr": 1,
                    "buffer_start": 1,
                    "data_ptr": 1,
                    "local_pointer": 2,
                    "local_ptr": 1,
                    "local_variable1": 1,
                    "pointer": 1,
                    "ptr_to_output": 1,
                    "stack_pointer": 2,
                    "stack_ptr": 1,
                    "var_d0": 1
                },
                "local_d4": {
                    "buffer_length": 2,
                    "buffer_size": 1,
                    "format_length": 3,
                    "stack_size": 1,
                    "string_length": 1
                },
                "local_d8": {
                    "buffer_length": 1,
                    "buffer_size": 20,
                    "format_length": 1,
                    "len": 1,
                    "length": 1,
                    "output_length": 1,
                    "output_size": 1,
                    "output_string_size": 1,
                    "size": 1,
                    "string_length": 3
                },
                "param_1": {
                    "err_code": 1,
                    "error_code": 22,
                    "error_code1": 1,
                    "error_code_1": 2,
                    "flag1": 1,
                    "input1": 1,
                    "number1": 1,
                    "value1": 2
                },
                "param_10": {
                    "data_2": 1,
                    "error_param_1": 1,
                    "num1": 1,
                    "number1": 3,
                    "param10": 8,
                    "param_10": 6,
                    "val1": 1,
                    "value1": 7,
                    "value10": 1,
                    "value2": 1,
                    "var_10": 1
                },
                "param_11": {
                    "data_3": 1,
                    "error_param_2": 1,
                    "num2": 1,
                    "number2": 3,
                    "param11": 8,
                    "param_11": 6,
                    "val2": 1,
                    "value11": 1,
                    "value2": 7,
                    "value3": 1,
                    "var_11": 1
                },
                "param_12": {
                    "data_4": 1,
                    "error_param_3": 1,
                    "num3": 1,
                    "number3": 3,
                    "param12": 8,
                    "param_12": 6,
                    "val3": 1,
                    "value12": 1,
                    "value3": 7,
                    "value4": 1,
                    "var_12": 1
                },
                "param_13": {
                    "data_5": 1,
                    "error_param_4": 1,
                    "num4": 1,
                    "number4": 3,
                    "param13": 8,
                    "param_13": 6,
                    "val4": 1,
                    "value13": 1,
                    "value4": 7,
                    "value5": 1,
                    "var_13": 1
                },
                "param_14": {
                    "data_6": 1,
                    "error_param_5": 1,
                    "num5": 1,
                    "number5": 3,
                    "param14": 8,
                    "param_14": 6,
                    "val5": 1,
                    "value14": 1,
                    "value5": 7,
                    "value6": 1,
                    "var_14": 1
                },
                "param_2": {
                    "arg2": 2,
                    "error_code2": 1,
                    "error_code_2": 2,
                    "flag2": 1,
                    "input2": 1,
                    "number2": 1,
                    "param2": 13,
                    "param_2": 8,
                    "value2": 2
                },
                "param_3": {
                    "arg3": 2,
                    "error_code3": 1,
                    "error_code_3": 2,
                    "flag3": 1,
                    "input3": 1,
                    "number3": 1,
                    "param3": 13,
                    "param_3": 8,
                    "value3": 2
                },
                "param_4": {
                    "arg4": 2,
                    "error_code4": 1,
                    "error_code_4": 2,
                    "flag4": 1,
                    "input4": 1,
                    "number4": 1,
                    "param4": 13,
                    "param_4": 8,
                    "value4": 2
                },
                "param_5": {
                    "arg5": 2,
                    "error_code5": 1,
                    "error_code_5": 2,
                    "flag5": 1,
                    "input5": 1,
                    "number5": 1,
                    "param5": 13,
                    "param_5": 8,
                    "value5": 2
                },
                "param_6": {
                    "arg6": 2,
                    "error_code6": 1,
                    "error_code_6": 2,
                    "flag6": 1,
                    "input6": 1,
                    "number6": 1,
                    "param6": 13,
                    "param_6": 8,
                    "value6": 2
                },
                "param_7": {
                    "arg7": 2,
                    "error_code7": 1,
                    "error_code_7": 2,
                    "flag7": 1,
                    "input7": 1,
                    "number7": 1,
                    "param7": 13,
                    "param_7": 8,
                    "value7": 2
                },
                "param_8": {
                    "arg8": 2,
                    "error_code8": 1,
                    "error_code_8": 2,
                    "flag8": 1,
                    "input8": 1,
                    "number8": 1,
                    "param8": 13,
                    "param_8": 8,
                    "value8": 2
                },
                "param_9": {
                    "data_1": 1,
                    "error_message": 8,
                    "exit_code": 1,
                    "file_descriptor": 3,
                    "file_ptr": 2,
                    "file_stream": 1,
                    "format_specifier": 2,
                    "format_string": 1,
                    "formatted_message": 1,
                    "message": 3,
                    "param9": 3,
                    "param_9": 2,
                    "value": 2,
                    "value1": 1
                },
                "uVar1": {
                    "error_value": 2,
                    "formatted_data": 1,
                    "formatted_error_code": 1,
                    "formatted_number": 3,
                    "formatted_result": 1,
                    "formatted_value": 8,
                    "number": 1,
                    "number_value": 1,
                    "result": 2,
                    "return_value": 1,
                    "value": 3
                }
            },
            "called": [
                "xexit",
                "FUN_00102ee0"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid print_formatted_error_message_00102db0(undefined4 error_code,undefined4 param2,undefined4 param3,undefined4 param4,\n                 undefined4 param5,undefined4 param6,undefined4 param7,undefined4 param8,\n                 undefined8 error_message,undefined8 param10,undefined8 param11,undefined8 param12,\n                 undefined8 param13,undefined8 param14)\n\n{\n  char flag;\n  char *format_string;\n  undefined8 formatted_value;\n  char formatted_string [48];\n  undefined4 buffer_size;\n  undefined4 format_length;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined local_buffer [8];\n  undefined8 param10_copy;\n  undefined8 param11_copy;\n  undefined8 param12_copy;\n  undefined8 param13_copy;\n  undefined8 param14_copy;\n  undefined4 error_code_copy;\n  undefined4 param2_copy;\n  undefined4 param3_copy;\n  undefined4 param4_copy;\n  undefined4 param5_copy;\n  undefined4 param6_copy;\n  undefined4 param7_copy;\n  undefined4 param8_copy;\n  \n  if (flag != '\\0') {\n    error_code_copy = error_code;\n    param2_copy = param2;\n    param3_copy = param3;\n    param4_copy = param4;\n    param5_copy = param5;\n    param6_copy = param6;\n    param7_copy = param7;\n    param8_copy = param8;\n  }\n  buffer = &stack0x00000008;\n  buffer_size = 8;\n  local_buffer = local_buffer;\n  format_length = 0x30;\n  param10_copy = param10;\n  param11_copy = param11;\n  param12_copy = param12;\n  param13_copy = param13;\n  param14_copy = param14;\n  print_error_message_00102ee0(error_message,&buffer_size);\n  formatted_value = 1;\n  xexit(1);\n  if (DAT_0010733c == 0) {\n    format_string = \"%lu\";\n  }\n  else {\n    format_string = \"0x%lx\";\n    if (DAT_0010733c == 1) {\n      format_string = \"0%lo\";\n    }\n  }\n  sprintf(formatted_string,format_string,formatted_value);\n  strlen(formatted_string);\n  return;\n}\n\n",
            "current_name": "print_formatted_error_message_00102db0",
            "entrypoint": "0x00102db0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102db0": "print_formatted_error_message_00102db0",
                "__format": "format_string",
                "acStack_110": "formatted_string",
                "in_AL": "flag",
                "local_18": "param8_copy",
                "local_28": "param7_copy",
                "local_38": "param6_copy",
                "local_48": "param5_copy",
                "local_58": "param4_copy",
                "local_68": "param3_copy",
                "local_78": "param2_copy",
                "local_88": "error_code_copy",
                "local_90": "param14_copy",
                "local_98": "param13_copy",
                "local_a0": "param12_copy",
                "local_a8": "param11_copy",
                "local_b0": "param10_copy",
                "local_b8": "local_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "format_length",
                "local_d8": "buffer_size",
                "param_1": "error_code",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13",
                "param_14": "param14",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "error_message",
                "uVar1": "formatted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102e50": {
            "additional_data": {
                "FUC_00102e50": {
                    "print_number": 1
                },
                "FUN_00102e50": {
                    "format_and_print": 13,
                    "format_and_print_number": 12,
                    "format_parameter": 1,
                    "print_formatted_number": 2,
                    "print_formatted_value": 2
                },
                "__format": {
                    "format_specifier": 3,
                    "format_string": 27
                },
                "acStack_38": {
                    "buffer": 3,
                    "format_string": 1,
                    "formatted_number": 1,
                    "output_buffer": 18,
                    "output_string": 7,
                    "result_buffer": 1
                },
                "param_1": {
                    "input": 1,
                    "input_value": 6,
                    "number": 17,
                    "value": 7
                }
            },
            "called": [
                "strlen",
                "sprintf",
                "FUN_001026f6"
            ],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\nvoid format_and_print_number_00102e50(undefined8 number)\n\n{\n  char *format_string;\n  char output_buffer [48];\n  \n  if (DAT_0010733c == 0) {\n    format_string = \"%lu\";\n  }\n  else {\n    format_string = \"0x%lx\";\n    if (DAT_0010733c == 1) {\n      format_string = \"0%lo\";\n    }\n  }\n  sprintf(output_buffer,format_string,number);\n  strlen(output_buffer);\n  return;\n}\n\n",
            "current_name": "format_and_print_number_00102e50",
            "entrypoint": "0x00102e50",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102e50": "format_and_print_number_00102e50",
                "__format": "format_string",
                "acStack_38": "output_buffer",
                "param_1": "number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102e90": {
            "additional_data": {
                "FUN_00102e90": {
                    "format_and_print_number": 3,
                    "format_and_print_value": 2,
                    "print_aligned_number": 1,
                    "print_formatted_number": 13,
                    "print_formatted_value": 12
                },
                "__format": {
                    "format": 4,
                    "format_pattern": 1,
                    "format_specifier": 4,
                    "format_str": 2,
                    "format_string": 15,
                    "output_format": 1
                },
                "acStack_48": {
                    "buffer": 2,
                    "format_string": 1,
                    "formatted_number": 13,
                    "formatted_number_buffer": 1,
                    "formatted_string": 2,
                    "formatted_value": 6,
                    "output": 2,
                    "output_buffer": 2
                },
                "param_1": {
                    "alignment": 1,
                    "padding_length": 1,
                    "width": 29
                },
                "param_2": {
                    "number": 16,
                    "value": 15
                }
            },
            "called": [
                "FUN_00102710",
                "sprintf",
                "printf"
            ],
            "calling": [
                "FUN_00103130",
                "FUN_00102a90",
                "FUN_00102fe0"
            ],
            "code": "\nvoid print_formatted_number_00102e90(ulong width,undefined8 number)\n\n{\n  char *format_string;\n  char formatted_number [56];\n  \n  if (DAT_0010733c == 0) {\n    sprintf(formatted_number,\"%lu\",number);\n    printf(\"%*s\",width & 0xffffffff,formatted_number);\n  }\n  else {\n    format_string = \"0x%lx\";\n    if (DAT_0010733c == 1) {\n      format_string = \"0%lo\";\n    }\n    sprintf(formatted_number,format_string,number);\n    printf(\"%*s\",width & 0xffffffff,formatted_number);\n  }\n  return;\n}\n\n",
            "current_name": "print_formatted_number_00102e90",
            "entrypoint": "0x00102e90",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102e90": "print_formatted_number_00102e90",
                "__format": "format_string",
                "acStack_48": "formatted_number",
                "param_1": "width",
                "param_2": "number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102ee0": {
            "additional_data": {
                "DAT_00107350": {
                    "file_error_message": 1
                },
                "FUN_00102ee0": {
                    "print_error": 1,
                    "print_error_message": 29,
                    "print_formatted_message": 1
                },
                "__gnuc_va_list": {
                    "arg_list": 1,
                    "args": 1,
                    "arguments": 1,
                    "var_arg_list": 1,
                    "varargs": 2,
                    "variable_arguments": 1
                },
                "_stderr": {
                    "": 1,
                    "error_stream": 1,
                    "standard_error": 13,
                    "standard_error_stream": 1,
                    "stderr": 1,
                    "stderr_buffer": 2,
                    "stderr_ptr": 1,
                    "stderr_stream": 3
                },
                "_stdout": {
                    "": 1,
                    "standard_output": 13,
                    "standard_output_stream": 1,
                    "stdout": 1,
                    "stdout_buffer": 2,
                    "stdout_ptr": 1,
                    "stdout_stream": 3
                },
                "fflush": {
                    "flush_output": 3
                },
                "fprintf": {
                    "format_print": 1,
                    "formatted_print": 1,
                    "print_to_stderr": 1,
                    "write_error": 1
                },
                "param_1": {
                    "error_message": 10,
                    "format": 1,
                    "format_string": 4,
                    "message": 14,
                    "message_format": 2
                },
                "param_2": {
                    "arg_list": 1,
                    "args": 6,
                    "args_list": 1,
                    "arguments": 14,
                    "format_args": 1,
                    "message_arguments": 1,
                    "var_args": 1
                },
                "putc": {
                    "": 1,
                    "put_char_to_err_stream": 1,
                    "put_character": 1,
                    "write_char": 1,
                    "write_character": 2
                },
                "putchar": {
                    "output_character": 1
                },
                "stderr": {
                    "standard_error": 1
                },
                "stdout": {
                    "standard_output": 1
                },
                "vfprintf": {
                    "print_to_err_stream": 1,
                    "write_error_formatted": 1
                }
            },
            "called": [
                "fflush",
                "putc",
                "vfprintf",
                "fprintf"
            ],
            "calling": [
                "FUN_00102db0",
                "FUN_00102f40"
            ],
            "code": "\n\n\nvoid print_error_message_00102ee0(char *message,varargs arguments)\n\n{\n  fflush(standard_output);\n  fprintf(standard_error,\"%s: \",DAT_00107350);\n  vfprintf(standard_error,message,arguments);\n  putc(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_error_message_00102ee0",
            "entrypoint": "0x00102ee0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102ee0": "print_error_message_00102ee0",
                "__gnuc_va_list": "varargs",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "fflush": "flush_output",
                "fprintf": "write_error",
                "param_1": "message",
                "param_2": "arguments",
                "putc": "write_character",
                "stderr": "standard_error",
                "stdout": "standard_output",
                "vfprintf": "write_error_formatted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f40": {
            "additional_data": {
                "FUN_00102f40": {
                    "print_error": 1,
                    "print_error_message": 30
                },
                "in_AL": {
                    "condition": 7,
                    "flag": 20,
                    "input_flag": 1,
                    "is_error": 1,
                    "should_print_error_message": 1
                },
                "local_18": {
                    "error_param8": 1,
                    "error_param8_copy": 1,
                    "local8": 1,
                    "local_18": 2,
                    "local_param8": 2,
                    "local_param_8": 1,
                    "option3_copy": 1,
                    "param8": 3,
                    "param8_copy": 12,
                    "param8_local": 2,
                    "param_8": 1,
                    "param_8_copy": 1
                },
                "local_28": {
                    "error_param7": 1,
                    "error_param7_copy": 1,
                    "local7": 1,
                    "local_28": 2,
                    "local_param7": 2,
                    "local_param_7": 1,
                    "option2_copy": 1,
                    "param7": 3,
                    "param7_copy": 12,
                    "param7_local": 2,
                    "param_7": 1,
                    "param_7_copy": 1
                },
                "local_38": {
                    "error_param6": 1,
                    "error_param6_copy": 1,
                    "local6": 1,
                    "local_38": 2,
                    "local_param6": 2,
                    "local_param_6": 1,
                    "option1_copy": 1,
                    "param6": 3,
                    "param6_copy": 12,
                    "param6_local": 2,
                    "param_6": 1,
                    "param_6_copy": 1
                },
                "local_48": {
                    "error_param5": 1,
                    "error_param5_copy": 1,
                    "length_copy": 1,
                    "local5": 1,
                    "local_48": 2,
                    "local_param5": 2,
                    "local_param_5": 1,
                    "param5": 3,
                    "param5_copy": 12,
                    "param5_local": 2,
                    "param_5": 1,
                    "param_5_copy": 1
                },
                "local_58": {
                    "buffer_copy": 1,
                    "error_param4": 1,
                    "error_param4_copy": 1,
                    "local4": 1,
                    "local_58": 2,
                    "local_param4": 2,
                    "local_param_4": 1,
                    "param4": 3,
                    "param4_copy": 12,
                    "param4_local": 2,
                    "param_4": 1,
                    "param_4_copy": 1
                },
                "local_68": {
                    "error_param3": 1,
                    "error_param3_copy": 1,
                    "local3": 1,
                    "local_68": 2,
                    "local_param3": 2,
                    "local_param_3": 1,
                    "output_copy": 1,
                    "param3": 3,
                    "param3_copy": 12,
                    "param3_local": 2,
                    "param_3": 1,
                    "param_3_copy": 1
                },
                "local_78": {
                    "error_param2": 1,
                    "error_param2_copy": 1,
                    "input_copy": 1,
                    "local2": 1,
                    "local_78": 2,
                    "local_param2": 2,
                    "local_param_2": 1,
                    "param2": 3,
                    "param2_copy": 12,
                    "param2_local": 2,
                    "param_2": 1,
                    "param_2_copy": 1
                },
                "local_8": {
                    "param9_copy": 1
                },
                "local_88": {
                    "error_code": 3,
                    "error_code_copy": 14,
                    "error_code_local": 2,
                    "error_param1": 1,
                    "error_param1_copy": 1,
                    "local1": 1,
                    "local_88": 2,
                    "local_error_code": 1,
                    "local_param1": 1,
                    "local_param_1": 1,
                    "param_1": 1,
                    "param_1_copy": 1
                },
                "local_90": {
                    "local_90": 1,
                    "local_param14": 2,
                    "local_param_14": 1,
                    "param14": 4,
                    "param14_copy": 10,
                    "param14_local": 1,
                    "param14_value": 1,
                    "param15_copy": 1,
                    "param_14": 1,
                    "param_14_copy": 3,
                    "param_15": 1,
                    "parameter14": 1,
                    "unused_copy": 1,
                    "value5": 1
                },
                "local_98": {
                    "local_98": 1,
                    "local_param13": 2,
                    "local_param_13": 1,
                    "param13": 4,
                    "param13_copy": 10,
                    "param13_local": 1,
                    "param13_value": 1,
                    "param14_copy": 2,
                    "param_13": 1,
                    "param_13_copy": 3,
                    "param_14": 1,
                    "parameter13": 1,
                    "value4": 1
                },
                "local_a0": {
                    "local_a0": 1,
                    "local_param12": 2,
                    "local_param_12": 1,
                    "param12": 4,
                    "param12_copy": 10,
                    "param12_local": 1,
                    "param12_value": 1,
                    "param13_copy": 2,
                    "param_12": 1,
                    "param_12_copy": 3,
                    "param_13": 1,
                    "parameter12": 1,
                    "value3": 1
                },
                "local_a8": {
                    "local_a8": 1,
                    "local_param11": 2,
                    "local_param_11": 1,
                    "param11": 4,
                    "param11_copy": 10,
                    "param11_local": 1,
                    "param11_value": 1,
                    "param12_copy": 2,
                    "param_11": 1,
                    "param_11_copy": 3,
                    "param_12": 1,
                    "parameter11": 1,
                    "value2": 1
                },
                "local_b0": {
                    "local_b0": 1,
                    "local_param10": 2,
                    "local_param_10": 1,
                    "param10": 4,
                    "param10_copy": 10,
                    "param10_local": 1,
                    "param10_value": 1,
                    "param11_copy": 2,
                    "param_10": 1,
                    "param_10_copy": 3,
                    "param_11": 1,
                    "parameter10": 1,
                    "value1": 1
                },
                "local_b8": {
                    "buffer": 3,
                    "data": 1,
                    "error_buffer": 2,
                    "error_message": 1,
                    "error_msg": 1,
                    "error_string": 1,
                    "local_array": 2,
                    "local_b8": 1,
                    "local_buffer": 6,
                    "local_buffer2": 1,
                    "local_data": 1,
                    "local_data_array": 1,
                    "message_buffer": 1,
                    "temporary_buffer": 3
                },
                "local_c8": {
                    "buffer": 5,
                    "buffer_pointer": 1,
                    "copy_ptr": 1,
                    "local_array": 2,
                    "local_b8_ptr": 1,
                    "local_buffer": 17,
                    "local_c8": 1,
                    "local_variable_1": 1,
                    "ptr_to_local_buffer": 1
                },
                "local_d0": {
                    "address": 1,
                    "array_pointer": 1,
                    "array_start_address": 1,
                    "buffer": 6,
                    "buffer_pointer": 2,
                    "buffer_ptr": 4,
                    "error_buffer": 1,
                    "local_array": 1,
                    "local_array_ptr": 1,
                    "local_variable_0": 1,
                    "message_pointer": 1,
                    "pointer_to_array": 1,
                    "pointer_to_stack": 2,
                    "ptr_to_size": 1,
                    "stack_pointer": 2,
                    "stack_ptr": 2
                },
                "local_d4": {
                    "array_size": 1,
                    "buffer_size": 4,
                    "byte_count": 1,
                    "constant": 1,
                    "constant_value": 1,
                    "copy_size": 1,
                    "data_size": 1,
                    "length": 2,
                    "local_array_size": 1,
                    "local_d4": 1,
                    "local_variable_4": 1,
                    "local_variable_d4": 1,
                    "maximum_size": 1,
                    "offset": 1,
                    "size_of_array": 1,
                    "size_of_buffer": 1
                },
                "local_d8": {
                    "array_size": 2,
                    "buffer_length": 3,
                    "buffer_size": 7,
                    "error_code_length": 1,
                    "error_length": 1,
                    "length": 2,
                    "length_of_array": 1,
                    "local_arg_count": 1,
                    "local_size": 1,
                    "size": 7,
                    "size_of_stack": 1,
                    "stack_size": 3
                },
                "param_1": {
                    "error_code": 29,
                    "error_param1": 2
                },
                "param_10": {
                    "buffer1": 1,
                    "error_message": 1,
                    "message": 1,
                    "param10": 20,
                    "param_10": 8
                },
                "param_11": {
                    "buffer2": 1,
                    "param11": 22,
                    "param_11": 8
                },
                "param_12": {
                    "buffer3": 1,
                    "param12": 22,
                    "param_12": 8
                },
                "param_13": {
                    "buffer4": 1,
                    "param13": 22,
                    "param_13": 8
                },
                "param_14": {
                    "buffer5": 1,
                    "param14": 22,
                    "param_14": 8
                },
                "param_2": {
                    "arg1": 1,
                    "error_param2": 2,
                    "error_type": 1,
                    "input": 1,
                    "param2": 21,
                    "param_2": 5
                },
                "param_3": {
                    "arg2": 1,
                    "error_category": 1,
                    "error_param3": 2,
                    "output": 1,
                    "param3": 21,
                    "param_3": 5
                },
                "param_4": {
                    "arg3": 1,
                    "buffer": 1,
                    "error_param4": 2,
                    "error_severity": 1,
                    "param4": 21,
                    "param_4": 5
                },
                "param_5": {
                    "arg4": 1,
                    "error_message": 1,
                    "error_param5": 2,
                    "length": 1,
                    "param5": 21,
                    "param_5": 5
                },
                "param_6": {
                    "arg5": 1,
                    "error_data": 1,
                    "error_param6": 2,
                    "option1": 1,
                    "param6": 21,
                    "param_6": 5
                },
                "param_7": {
                    "arg6": 1,
                    "error_param7": 2,
                    "option2": 1,
                    "param7": 21,
                    "param_7": 6
                },
                "param_8": {
                    "arg7": 1,
                    "error_param8": 2,
                    "option3": 1,
                    "param8": 21,
                    "param_8": 6
                },
                "param_9": {
                    "error_address": 1,
                    "error_context": 1,
                    "error_description": 1,
                    "error_message": 16,
                    "error_msg": 1,
                    "error_string": 1,
                    "file_descriptor": 1,
                    "file_stream": 1,
                    "message": 1,
                    "param9": 6,
                    "param_ptr": 1
                }
            },
            "called": [
                "FUN_00102ee0"
            ],
            "calling": [
                "FUN_00102980",
                "FUN_00103130",
                "FUN_00102360"
            ],
            "code": "\nvoid print_error_message_00102f40(undefined4 error_code,undefined4 param2,undefined4 param3,undefined4 param4,\n                 undefined4 param5,undefined4 param6,undefined4 param7,undefined4 param8,\n                 undefined8 error_message,undefined8 param10,undefined8 param11,undefined8 param12,\n                 undefined8 param13,undefined8 param14)\n\n{\n  char flag;\n  undefined4 buffer_size;\n  undefined4 buffer_size;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined local_buffer [8];\n  undefined8 param10_copy;\n  undefined8 param11_copy;\n  undefined8 param12_copy;\n  undefined8 param13_copy;\n  undefined8 param14_copy;\n  undefined4 error_code_copy;\n  undefined4 param2_copy;\n  undefined4 param3_copy;\n  undefined4 param4_copy;\n  undefined4 param5_copy;\n  undefined4 param6_copy;\n  undefined4 param7_copy;\n  undefined4 param8_copy;\n  \n  if (flag != '\\0') {\n    error_code_copy = error_code;\n    param2_copy = param2;\n    param3_copy = param3;\n    param4_copy = param4;\n    param5_copy = param5;\n    param6_copy = param6;\n    param7_copy = param7;\n    param8_copy = param8;\n  }\n  buffer = &stack0x00000008;\n  buffer_size = 8;\n  local_buffer = local_buffer;\n  buffer_size = 0x30;\n  param10_copy = param10;\n  param11_copy = param11;\n  param12_copy = param12;\n  param13_copy = param13;\n  param14_copy = param14;\n  print_error_message_00102f40_00102ee0(error_message,&buffer_size);\n  return;\n}\n\n",
            "current_name": "print_error_message_00102f40",
            "entrypoint": "0x00102f40",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f40": "print_error_message_00102f40",
                "in_AL": "flag",
                "local_18": "param8_copy",
                "local_28": "param7_copy",
                "local_38": "param6_copy",
                "local_48": "param5_copy",
                "local_58": "param4_copy",
                "local_68": "param3_copy",
                "local_78": "param2_copy",
                "local_8": "param9_copy",
                "local_88": "error_code_copy",
                "local_90": "param14_copy",
                "local_98": "param13_copy",
                "local_a0": "param12_copy",
                "local_a8": "param11_copy",
                "local_b0": "param10_copy",
                "local_b8": "local_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "buffer_size",
                "local_d8": "buffer_size",
                "param_1": "error_code",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13",
                "param_14": "param14",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102fe0": {
            "additional_data": {
                "FUN_00102fe0": {
                    "formatted_print": 1,
                    "print_formatted_numbers": 28,
                    "print_formatted_numbers_with_padding": 1,
                    "print_formatted_output": 1
                },
                "param_1": {
                    "description": 1,
                    "format_string": 2,
                    "header": 4,
                    "label": 15,
                    "message": 2,
                    "msg": 1,
                    "string": 1,
                    "string1": 1,
                    "string_parameter": 2,
                    "text": 1,
                    "title": 1
                },
                "param_2": {
                    "num1": 1,
                    "number1": 17,
                    "number_1": 9,
                    "number_parameter_1": 2,
                    "value1": 2
                },
                "param_3": {
                    "num2": 1,
                    "number2": 17,
                    "number_2": 9,
                    "number_parameter_2": 2,
                    "value2": 2
                },
                "printf": {
                    "print_with_label": 1
                },
                "putchar": {
                    "print_newline": 1
                }
            },
            "called": [
                "FUN_00102e90",
                "putchar",
                "printf"
            ],
            "calling": [
                "FUN_00103cc0",
                "FUN_00102a90"
            ],
            "code": "\nvoid print_formatted_numbers_with_padding_00102fe0(undefined8 label,undefined8 number1,undefined8 number2)\n\n{\n  printf(\"%-*s   \",(ulong)DAT_001072d0,label);\n  print_formatted_number_00102e90(DAT_001072c8,number1);\n  printf(\"   \");\n  print_formatted_number_00102e90(DAT_001072cc,number2);\n  putchar(10);\n  return;\n}\n\n",
            "current_name": "print_formatted_numbers_with_padding_00102fe0",
            "entrypoint": "0x00102fe0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102fe0": "print_formatted_numbers_with_padding_00102fe0",
                "param_1": "label",
                "param_2": "number1",
                "param_3": "number2",
                "printf": "print_with_label",
                "putchar": "print_newline"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103070": {
            "called": [
                "_ITM_deregisterTMCloneTable"
            ],
            "calling": [
                "_FINI_0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00103083) */\n/* WARNING: Removing unreachable block (ram,0x0010308f) */\n\nvoid FUNC_00103070(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103070",
            "entrypoint": "0x00103070",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103070": "FUNC_00103070"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_001030a0": {
            "called": [
                "_ITM_registerTMCloneTable"
            ],
            "calling": [
                "_INIT_0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x001030c4) */\n/* WARNING: Removing unreachable block (ram,0x001030d0) */\n\nvoid FUNC_001030a0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_001030a0",
            "entrypoint": "0x001030a0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_001030a0": "FUNC_001030a0"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103130": {
            "additional_data": {
                "DAT_00107318": {
                    "data_long3": 1
                },
                "DAT_00107320": {
                    "data_long1": 1
                },
                "DAT_00107328": {
                    "data_long2": 1
                },
                "DAT_0010733c": {
                    "data_int": 1
                },
                "DAT_00107340": {
                    "data_str": 1
                },
                "DAT_00107348": {
                    "data_bool": 1
                },
                "DAT_00107350": {
                    "data_var": 1
                },
                "FUN_00103130": {
                    "decompile_and_improve": 1,
                    "improve_and_readability": 1,
                    "improved_binary_processing": 1,
                    "parse_command_line_args": 1,
                    "parse_command_line_arguments": 3,
                    "parse_input_files": 1,
                    "process_files": 3,
                    "read_and_process_files": 1,
                    "read_files_from_arguments": 1
                },
                "OPTION_FORMAT": {
                    "option_format": 1
                },
                "OPTION_FORMAT_TEXT": {
                    "option_format_text": 1
                },
                "OPTION_FORMAT_VALUE": {
                    "option_format_value": 1
                },
                "OPTION_HELP": {
                    "option_help": 1
                },
                "OPTION_HELP_TEXT": {
                    "option_help_text": 1
                },
                "OPTION_INPUT_FILE": {
                    "option_input_file": 1
                },
                "OPTION_INPUT_FILE_TEXT": {
                    "option_input_file_text": 1
                },
                "OPTION_MAX_DEPTH": {
                    "option_max_depth": 1
                },
                "OPTION_MAX_DEPTH_TEXT": {
                    "option_max_depth_text": 1
                },
                "OPTION_OUTPUT_STYLE": {
                    "option_output_style": 1
                },
                "OPTION_OUTPUT_STYLE_TEXT": {
                    "option_output_style_text": 1
                },
                "OPTION_VERSION": {
                    "option_version": 1
                },
                "_DAT_00107330": {
                    "data_bool4": 1
                },
                "_DAT_00107334": {
                    "data_bool3": 1
                },
                "_DAT_00107338": {
                    "data_bool2": 1
                },
                "__ptr": {
                    "byte_pointer2": 2,
                    "byte_pointer3": 2,
                    "byte_ptr2": 1,
                    "byte_ptr3": 8,
                    "byte_ptr_3": 4,
                    "current_token": 1,
                    "new_data": 1,
                    "output_array": 1,
                    "parsed_string": 1,
                    "ptr_byte": 1,
                    "ptr_byte2": 1,
                    "ptr_byte3": 1,
                    "str_buffer": 1,
                    "string_buffer": 1,
                    "token": 1,
                    "token_buffer": 1,
                    "valid_string": 1
                },
                "__s": {
                    "byte_array": 3,
                    "byte_pointer2": 2,
                    "byte_ptr": 2,
                    "byte_ptr2": 8,
                    "byte_ptr_2": 3,
                    "file_buffer": 3,
                    "file_content": 4,
                    "file_content_buffer": 1,
                    "file_contents": 1,
                    "file_data": 1,
                    "ptr_byte2": 1
                },
                "__src": {
                    "file_array": 1,
                    "file_lines": 1,
                    "line_buffer": 1,
                    "long_array": 2,
                    "long_pointer": 2,
                    "long_ptr": 4,
                    "long_ptr1": 7,
                    "long_ptr_1": 2,
                    "parsed_strings_arr": 1,
                    "ptr_long": 2,
                    "ptr_long1": 1,
                    "source_array": 1,
                    "source_data": 1,
                    "token_array": 1,
                    "tokens": 1,
                    "tokens_array": 1
                },
                "__stream": {
                    "file_pointer": 2,
                    "file_ptr": 4,
                    "file_ptr1": 1,
                    "file_stream": 21,
                    "file_var": 1
                },
                "_stderr": {
                    "stderr_file": 1
                },
                "_stdout": {
                    "stdout_file": 1
                },
                "bVar2": {
                    "bit_var2": 1,
                    "bool1": 1,
                    "bool_var": 1,
                    "bool_var1": 3,
                    "bool_var2": 2,
                    "byte_val2": 1,
                    "byte_value": 1,
                    "byte_var": 5,
                    "byte_var1": 2,
                    "byte_var2": 4,
                    "byte_var_2": 2,
                    "byte_variable": 1,
                    "is_table": 1,
                    "is_table_char": 1,
                    "is_table_data": 1,
                    "table_value": 1,
                    "temp_byte": 1
                },
                "bVar23": {
                    "bool4": 1,
                    "bool_val23": 1,
                    "bool_var3": 12,
                    "bool_var4": 2,
                    "bool_var5": 2,
                    "bool_var_23": 1,
                    "bool_var_3": 3,
                    "bool_variable3": 1,
                    "is_double_quote": 1,
                    "is_literal_token": 1,
                    "is_option": 1,
                    "temp_bool": 2
                },
                "bVar3": {
                    "backslash_escape": 1,
                    "bool2": 1,
                    "bool_val3": 1,
                    "bool_var1": 11,
                    "bool_var2": 2,
                    "bool_var3": 2,
                    "bool_var_1": 3,
                    "bool_var_3": 1,
                    "bool_variable1": 1,
                    "continue_loop": 1,
                    "escape": 1,
                    "is_escape_char": 2,
                    "is_escape_character": 1,
                    "is_escaped": 1
                },
                "bVar4": {
                    "bool3": 1,
                    "bool_val4": 1,
                    "bool_var2": 12,
                    "bool_var3": 2,
                    "bool_var4": 2,
                    "bool_var_2": 3,
                    "bool_var_4": 1,
                    "bool_variable2": 1,
                    "is_in_single_quote": 1,
                    "is_single_quote": 3,
                    "single_quote": 1,
                    "single_quote_escape": 1
                },
                "bVar6": {
                    "byte1": 1,
                    "byte_val6": 1,
                    "byte_value": 1,
                    "byte_var": 3,
                    "byte_var1": 5,
                    "byte_var2": 6,
                    "byte_var3": 4,
                    "byte_var_2": 1,
                    "byte_var_6": 1,
                    "byte_variable2": 1,
                    "curr_char": 1,
                    "current_byte": 1,
                    "current_byte_value": 1,
                    "current_char": 2
                },
                "cVar7": {
                    "char1": 1,
                    "char_result": 1,
                    "char_val7": 1,
                    "char_value": 1,
                    "char_var": 9,
                    "char_var1": 9,
                    "char_var2": 1,
                    "char_var_7": 1,
                    "char_variable": 1,
                    "result": 1,
                    "return_code": 1,
                    "set_default_target_status": 1,
                    "temp_char": 1
                },
                "iVar21": {
                    "arguments_count": 1,
                    "index2": 7,
                    "index_2": 1,
                    "index_var2": 4,
                    "index_var_2": 1,
                    "int_val21": 1,
                    "int_var2": 2,
                    "int_var_2": 1,
                    "int_var_21": 1,
                    "iterator2": 1,
                    "j": 1,
                    "loop_counter2": 1,
                    "loop_var2": 1,
                    "temp_index": 1,
                    "temp_int1": 1,
                    "temp_var1": 1,
                    "total_files": 1
                },
                "iVar22": {
                    "current_file_index": 1,
                    "current_index_copy": 1,
                    "i_var22": 1,
                    "index3": 7,
                    "index_3": 1,
                    "index_var3": 3,
                    "index_var_3": 1,
                    "int_val22": 1,
                    "int_var3": 2,
                    "int_var_22": 1,
                    "int_var_3": 1,
                    "iterator3": 1,
                    "k": 1,
                    "loop_index": 1,
                    "loop_var": 1,
                    "loop_var3": 1,
                    "temp_index": 1,
                    "temp_int2": 1,
                    "temp_var2": 1
                },
                "iVar8": {
                    "current_index": 1,
                    "i": 1,
                    "index": 14,
                    "index_var": 4,
                    "index_var1": 1,
                    "int_var": 3,
                    "int_var_8": 1,
                    "iterator": 1,
                    "loop_counter": 2,
                    "loop_var1": 1
                },
                "lVar12": {
                    "current_token_length": 1,
                    "file_offset": 1,
                    "long1": 1,
                    "long_val": 1,
                    "long_val12": 1,
                    "long_var": 7,
                    "long_var1": 11,
                    "long_var_12": 1,
                    "long_variable": 1,
                    "str_length": 1,
                    "temp_long": 1,
                    "token_length": 1,
                    "token_string": 1
                },
                "lVar19": {
                    "current_file_index": 1,
                    "i": 1,
                    "long2": 1,
                    "long_val19": 1,
                    "long_val_2": 1,
                    "long_var2": 16,
                    "long_var_19": 1,
                    "long_var_2": 2,
                    "long_variable1": 1,
                    "temp_long": 1,
                    "temp_long1": 1,
                    "token_index": 1
                },
                "local_108": {
                    "chars_count": 1,
                    "current_token_size": 1,
                    "local_size": 8,
                    "local_size_t": 1,
                    "local_size_t108": 1,
                    "local_size_t_108": 1,
                    "local_size_var": 1,
                    "local_var3": 9,
                    "local_var_3": 2,
                    "parsed_string_length": 1,
                    "string_length": 1,
                    "temp_local_3": 1,
                    "total_size": 1
                },
                "local_10c": {
                    "current_file": 1,
                    "file_capacity": 1,
                    "local_counter2": 1,
                    "local_index2": 5,
                    "local_index_2": 1,
                    "local_int10c": 1,
                    "local_int2": 1,
                    "local_int_10c": 1,
                    "local_int_var2": 1,
                    "local_var2": 10,
                    "local_var_2": 2,
                    "max_attempts": 1,
                    "max_num_args": 1,
                    "remaining_files": 1,
                    "temp_local_2": 1
                },
                "local_110": {
                    "inner_index": 1,
                    "last_file_index": 1,
                    "last_processed_index": 1,
                    "local_counter1": 1,
                    "local_index1": 5,
                    "local_index_1": 1,
                    "local_int1": 1,
                    "local_int110": 1,
                    "local_int_110": 1,
                    "local_int_var1": 1,
                    "local_var1": 10,
                    "local_var_1": 2,
                    "max_files": 1,
                    "num_args_index": 1,
                    "temp_local_1": 1
                },
                "local_c8": {
                    "file_info": 2,
                    "file_stat": 1,
                    "file_stats": 2,
                    "local_stat": 10,
                    "local_stat_info": 1,
                    "stat1": 1,
                    "stat_info": 1,
                    "stat_struct": 4,
                    "stat_structure": 1,
                    "stat_var": 5,
                    "stat_var1": 1
                },
                "param_1": {
                    "argc": 9,
                    "count": 1,
                    "num_args": 2,
                    "num_files": 4,
                    "num_iterations": 1,
                    "num_of_params": 1,
                    "num_params": 11
                },
                "param_2": {
                    "args": 2,
                    "argv": 9,
                    "array_ptr": 1,
                    "file_list": 1,
                    "file_names": 3,
                    "file_paths": 3,
                    "param_arr": 1,
                    "param_array": 4,
                    "param_list": 3,
                    "param_values": 1,
                    "params_array": 1
                },
                "pbVar1": {
                    "byte_pointer": 4,
                    "byte_pointer1": 1,
                    "byte_ptr": 4,
                    "byte_ptr1": 7,
                    "byte_ptr_1": 3,
                    "curr_byte": 1,
                    "current_byte": 4,
                    "p_byte1": 1,
                    "ptr_byte1": 4
                },
                "pbVar18": {
                    "byte_pointer3": 2,
                    "byte_pointer4": 2,
                    "byte_ptr": 1,
                    "byte_ptr2": 1,
                    "byte_ptr3": 1,
                    "byte_ptr4": 8,
                    "byte_ptr_4": 4,
                    "content_pointer": 1,
                    "current_file_data": 1,
                    "current_pos": 1,
                    "file_buffer_ptr": 1,
                    "file_data_ptr": 1,
                    "ptr_byte18": 1,
                    "ptr_byte2": 1,
                    "ptr_byte3": 1,
                    "ptr_byte4": 1
                },
                "pbVar20": {
                    "buffer_pointer": 1,
                    "byte_pointer4": 2,
                    "byte_pointer5": 2,
                    "byte_ptr": 1,
                    "byte_ptr1": 1,
                    "byte_ptr3": 1,
                    "byte_ptr4": 1,
                    "byte_ptr5": 8,
                    "byte_ptr_5": 4,
                    "current_byte_data": 1,
                    "dest_pos": 1,
                    "ptr_byte20": 1,
                    "ptr_byte3": 1,
                    "ptr_byte4": 1,
                    "ptr_byte5": 1,
                    "temp_buffer_ptr": 1
                },
                "pcVar10": {
                    "char_pointer2": 4,
                    "char_ptr1": 1,
                    "char_ptr2": 8,
                    "char_ptr_2": 4,
                    "current_filename": 1,
                    "file_err_msg": 1,
                    "file_name": 1,
                    "file_path": 2,
                    "file_path_ptr": 1,
                    "param_str": 1,
                    "ptr_char10": 1,
                    "ptr_char2": 3,
                    "temp_char_ptr": 1
                },
                "pcVar17": {
                    "char_pointer3": 3,
                    "char_ptr2": 1,
                    "char_ptr3": 7,
                    "char_ptr_3": 3,
                    "current_file_path": 1,
                    "err_msg": 1,
                    "error_string": 1,
                    "format_message": 1,
                    "format_specifier": 1,
                    "format_str": 1,
                    "ptr_char17": 1,
                    "ptr_char3": 3,
                    "str_ptr": 1,
                    "str_var2": 1,
                    "string_ptr": 1,
                    "text_domain": 1
                },
                "pcVar5": {
                    "char_pointer": 4,
                    "char_pointer1": 1,
                    "char_ptr": 5,
                    "char_ptr1": 7,
                    "char_ptr_1": 2,
                    "current_char": 2,
                    "current_string": 1,
                    "err_msg": 1,
                    "ptr_char": 1,
                    "ptr_char1": 2,
                    "ptr_char5": 1,
                    "str_var1": 1,
                    "temp_string": 1
                },
                "plVar13": {
                    "argv_ptr": 1,
                    "current_arg": 1,
                    "file_array_pointer": 1,
                    "file_list_ptr": 1,
                    "file_names_ptr": 2,
                    "file_paths": 2,
                    "file_paths_ptr": 2,
                    "long_array_ptr1": 1,
                    "long_list": 1,
                    "long_ptr1": 1,
                    "long_ptr2": 2,
                    "long_ptr_2": 1,
                    "param": 1,
                    "param_array": 1,
                    "param_array2": 2,
                    "param_array_pointer": 1,
                    "param_array_var": 1,
                    "param_list_ptr": 1,
                    "param_ptr": 3,
                    "param_values_ptr": 1,
                    "ptr_long1": 1,
                    "ptr_long2": 1
                },
                "plVar14": {
                    "argv_ptr2": 1,
                    "file_list_ptr2": 1,
                    "file_names_ptr_2": 1,
                    "file_paths_ptr2": 1,
                    "long_array_ptr2": 1,
                    "long_list2": 1,
                    "long_ptr2": 1,
                    "long_ptr3": 2,
                    "long_ptr_3": 1,
                    "modified_file_paths": 1,
                    "new_file_paths": 1,
                    "new_param": 1,
                    "output_array2": 1,
                    "param_array2_2": 1,
                    "param_array3": 1,
                    "param_array_pointer2": 1,
                    "param_array_var_2": 1,
                    "param_ptr2": 3,
                    "param_values_ptr_2": 1,
                    "parsed_strings_arr": 1,
                    "ptr_long2": 1,
                    "ptr_long3": 1,
                    "temp_file_names_ptr": 1,
                    "temp_long_ptr": 1,
                    "temp_ptr1": 1
                },
                "sVar11": {
                    "content_size": 1,
                    "file_buffer_size": 1,
                    "file_size": 6,
                    "size": 9,
                    "size_t_var": 1,
                    "size_t_var_11": 1,
                    "size_t_variable": 1,
                    "size_var": 6,
                    "size_var1": 1,
                    "string_len": 1,
                    "string_length": 1
                },
                "uVar15": {
                    "flags": 1,
                    "parsed_string_index": 1,
                    "permission": 1,
                    "permission_flags": 1,
                    "temp_ulong": 1,
                    "ulong1": 1,
                    "ulong_val": 1,
                    "ulong_val1": 1,
                    "ulong_val15": 1,
                    "ulong_var": 9,
                    "ulong_var1": 8,
                    "ulong_var_15": 1,
                    "ulong_variable": 1
                },
                "uVar16": {
                    "error_message": 4,
                    "formatted_error_msg": 2,
                    "formatted_message": 1,
                    "result2": 1,
                    "return_var": 1,
                    "str_var1": 1,
                    "temp_ulong_long": 1,
                    "uint_var2": 1,
                    "ulong_val16": 1,
                    "ulong_val2": 1,
                    "ulong_var2": 5,
                    "undefined8_var": 1,
                    "undefined8_variable": 1,
                    "undefined_var2": 3,
                    "undefined_var_2": 1,
                    "unknown_val": 1,
                    "unknown_var1": 1,
                    "unknown_var_16": 1
                },
                "uVar9": {
                    "result": 11,
                    "return_val": 2,
                    "return_value": 7,
                    "return_var": 1,
                    "uint_var": 1,
                    "uint_var1": 1,
                    "undefined4_variable": 1,
                    "undefined_var": 3,
                    "undefined_var1": 1,
                    "unknown_var_9": 1
                },
                "unaff_RBP": {
                    "arg_list": 1,
                    "arguments_list": 1,
                    "program_arguments": 1,
                    "ptr_undef": 1,
                    "ptr_undefined": 1,
                    "rbp": 1,
                    "unaff_ptr": 3,
                    "unaff_rbp": 4,
                    "unaff_rbp_ptr": 1,
                    "unaff_register": 1,
                    "unaff_var": 1,
                    "unaff_var1": 1,
                    "undefined_pointer": 1,
                    "undefined_ptr": 6,
                    "undefined_ptr1": 3,
                    "undefined_rp": 1
                }
            },
            "called": [
                "FUN_00102db0",
                "memcpy",
                "FUN_00102f40",
                "fprintf",
                "fseek",
                "free",
                "strlen",
                "textdomain",
                "dcgettext",
                "getopt_long",
                "strtol",
                "bindtextdomain",
                "xstrdup",
                "bfd_set_error_program_name",
                "fopen",
                "putc",
                "FUN_00102980",
                "bfd_errmsg",
                "stat",
                "bfd_get_error",
                "bfd_init",
                "FUN_0010281b",
                "memmove",
                "setlocale",
                "xexit",
                "xmalloc",
                "fwrite",
                "fclose",
                "ftell",
                "xrealloc",
                "xmalloc_set_program_name",
                "FUN_00102e90",
                "ferror",
                "bfd_set_default_target",
                "fread",
                "printf",
                "exit"
            ],
            "calling": [
                "entry"
            ],
            "code": "\n\n\nundefined4 read_and_process_files_00103130(int num_params,long *argv)\n\n{\n  byte *byte_ptr1;\n  byte byte_var;\n  bool bool_var1;\n  bool bool_var2;\n  char *char_ptr1;\n  byte byte_var2;\n  char char_var;\n  int index;\n  undefined4 result;\n  FILE *file_stream;\n  byte *byte_ptr2;\n  char *char_ptr2;\n  size_t size;\n  byte *byte_ptr3;\n  long *long_ptr1;\n  long long_var1;\n  long *param_ptr;\n  long *param_ptr2;\n  ulong ulong_var;\n  undefined8 ulong_var2;\n  char *char_ptr3;\n  byte *byte_ptr4;\n  undefined **undefined_ptr;\n  long long_var2;\n  byte *byte_ptr5;\n  int index2;\n  int index3;\n  bool bool_var3;\n  int local_var1;\n  int local_var2;\n  size_t local_var3;\n  stat local_stat;\n  \n  setlocale(5,\"\");\n  char_ptr3 = \"binutils\";\n  setlocale(0,\"\");\n  bindtextdomain(\"binutils\",\"/usr/share/locale\");\n  textdomain(\"binutils\");\n  DAT_00107350 = *argv;\n  xmalloc_set_program_name();\n  bfd_set_error_program_name(DAT_00107350);\n  param_ptr = argv;\n  if (1 < num_params) {\n    local_var2 = 2000;\n    local_var1 = 0;\n    index = 1;\n    do {\n      while( true ) {\n        index3 = index;\n        undefined_ptr = (undefined **)(long)index3;\n        if (*(char *)param_ptr[(long)undefined_ptr] == '@') break;\nLAB_001035a0:\n        if (num_params <= index3 + 1) goto LAB_00103612;\nLAB_001035aa:\n        index = index3 + 1;\n        local_var1 = index3;\n      }\n      local_var2 = local_var2 + -1;\n      if (local_var2 == 0) goto LAB_001039c5;\n      char_ptr3 = (char *)param_ptr[(long)undefined_ptr] + 1;\n      index = stat(char_ptr3,&local_stat);\n      if (index < 0) goto LAB_001035a0;\n      if ((local_stat.st_mode & 0xf000) == 0x4000) {\n        long_var2 = *param_ptr;\n        char_ptr3 = \"%s: error: @-file refers to a directory\\n\";\n        do {\n          fprintf(stderr_file,char_ptr3,long_var2);\n          xexit(1);\nLAB_001039c5:\n          long_var2 = *param_ptr;\n          char_ptr3 = \"%s: error: too many @-files encountered\\n\";\n        } while( true );\n      }\n      file_stream = fopen(char_ptr3,\"r\");\n      if (file_stream == (FILE *)0x0) goto LAB_001035a0;\n      index = fseek(file_stream,0,2);\n      if (((index == -1) ||\n          (char_ptr3 = (char *)ftell(file_stream), char_ptr3 == (char *)0xffffffffffffffff)) ||\n         (index = fseek(file_stream,0,0), index == -1)) {\nLAB_00103600:\n        fclose(file_stream);\n        if (index3 + 1 < num_params) goto LAB_001035aa;\n        break;\n      }\n      byte_ptr2 = (byte *)xmalloc(char_ptr3 + 1);\n      char_ptr2 = (char *)fread(byte_ptr2,1,(size_t)char_ptr3,file_stream);\n      if ((char_ptr3 != char_ptr2) && (index = ferror(file_stream), index != 0)) {\n        free(byte_ptr2);\n        goto LAB_00103600;\n      }\n      byte_ptr2[(long)char_ptr2] = 0;\n      byte_var2 = *byte_ptr2;\n      byte_ptr4 = byte_ptr2;\n      if (byte_var2 != 0) {\nLAB_00103300:\n        if (((&_sch_istable)[(ulong)byte_var2 * 2] & 0x40) != 0) goto LAB_001032f0;\n        size = strlen((char *)byte_ptr2);\n        byte_ptr3 = (byte *)xmalloc(size + 1);\n        index = 0;\n        bool_var3 = false;\n        bool_var2 = false;\n        long_var2 = 0;\n        long_ptr1 = (long *)0x0;\n        bool_var1 = false;\n        byte_ptr4 = byte_ptr2;\n        do {\n          while (((&_sch_istable)[(ulong)*byte_ptr4 * 2] & 0x40) != 0) {\n            byte_ptr4 = byte_ptr4 + 1;\n          }\n          if ((index == 0) || (param_ptr2 = long_ptr1 + long_var2, index + -1 <= (int)long_var2)) {\n            if (long_ptr1 == (long *)0x0) {\n              index = 8;\n              long_ptr1 = (long *)xmalloc(0x40);\n              param_ptr2 = long_ptr1 + long_var2;\n              *param_ptr2 = 0;\n            }\n            else {\n              index = index * 2;\n              long_ptr1 = (long *)xrealloc(long_ptr1,(long)index << 3);\n              param_ptr2 = long_ptr1 + long_var2;\n              *param_ptr2 = 0;\n            }\n          }\n          byte_var2 = *byte_ptr4;\n          byte_ptr5 = byte_ptr3;\n          while (byte_var2 != 0) {\n            while( true ) {\n              if ((((&_sch_istable)[(ulong)byte_var2 * 2] & 0x40) != 0) &&\n                 (!(bool)(bool_var2 | bool_var1 | bool_var3))) {\n                bool_var1 = false;\n                bool_var3 = false;\n                bool_var2 = false;\n                goto LAB_00103410;\n              }\n              if (!bool_var1) break;\n              byte_ptr4 = byte_ptr4 + 1;\n              *byte_ptr5 = byte_var2;\n              byte_ptr5 = byte_ptr5 + 1;\n              bool_var1 = false;\n              byte_var2 = *byte_ptr4;\n              if (byte_var2 == 0) goto LAB_00103410;\n            }\n            if (byte_var2 == 0x5c) {\n              bool_var1 = true;\n            }\n            else if (bool_var2) {\n              if (byte_var2 == 0x27) {\n                bool_var2 = false;\n              }\n              else {\nLAB_00103585:\n                *byte_ptr5 = byte_var2;\n                byte_ptr5 = byte_ptr5 + 1;\n              }\n            }\n            else if (bool_var3) {\n              if (byte_var2 != 0x22) goto LAB_00103585;\n              bool_var3 = false;\n            }\n            else if (byte_var2 == 0x27) {\n              bool_var2 = true;\n            }\n            else {\n              if (byte_var2 != 0x22) goto LAB_00103585;\n              bool_var3 = true;\n            }\n            byte_ptr1 = byte_ptr4 + 1;\n            byte_ptr4 = byte_ptr4 + 1;\n            byte_var2 = *byte_ptr1;\n          }\nLAB_00103410:\n          *byte_ptr5 = 0;\n          long_var1 = xstrdup(byte_ptr3);\n          *param_ptr2 = long_var1;\n          long_ptr1[long_var2 + 1] = 0;\n          byte_var2 = *byte_ptr4;\n          byte_var = (&_sch_istable)[(ulong)byte_var2 * 2];\n          while ((byte_var & 0x40) != 0) {\n            byte_var2 = byte_ptr4[1];\n            byte_ptr4 = byte_ptr4 + 1;\n            byte_var = (&_sch_istable)[(ulong)byte_var2 * 2];\n          }\n          long_var2 = long_var2 + 1;\n        } while (byte_var2 != 0);\n        free(byte_ptr3);\n        param_ptr2 = param_ptr;\n        if (argv == param_ptr) goto LAB_0010372c;\n        goto LAB_001034ad;\n      }\nLAB_0010370f:\n      long_ptr1 = (long *)xmalloc();\n      *long_ptr1 = 0;\n      if (argv == param_ptr) {\nLAB_0010372c:\n        if (*param_ptr == 0) {\n          index = 0;\n        }\n        else {\n          long_var2 = 1;\n          do {\n            index = (int)long_var2;\n            param_ptr2 = param_ptr + long_var2;\n            long_var2 = long_var2 + 1;\n          } while (*param_ptr2 != 0);\n        }\n        long_var1 = 0;\n        param_ptr2 = (long *)xmalloc((long)(index + 1) << 3);\n        long_var2 = *param_ptr;\n        while (long_var2 != 0) {\n          ulong_var2 = xstrdup();\n          *(undefined8 *)((long)param_ptr2 + long_var1) = ulong_var2;\n          long_var1 = long_var1 + 8;\n          long_var2 = *(long *)((long)param_ptr + long_var1);\n        }\n        *(undefined8 *)((long)param_ptr2 + long_var1) = 0;\nLAB_001034ad:\n        param_ptr = param_ptr2;\n        if (*long_ptr1 == 0) goto LAB_001038cc;\n        char_ptr3 = (char *)0x0;\n        do {\n          char_ptr3 = char_ptr3 + 1;\n        } while (long_ptr1[(long)char_ptr3] != 0);\n        local_var3 = (long)char_ptr3 * 8;\n      }\n      else {\nLAB_001038cc:\n        char_ptr3 = (char *)0x0;\n        local_var3 = 0;\n      }\n      free((void *)param_ptr[(long)undefined_ptr]);\n      param_ptr = (long *)xrealloc(param_ptr,(long)(char_ptr3 + (long)num_params + 1) * 8);\n      index2 = num_params + -1 + (int)char_ptr3;\n      memmove(param_ptr + (long)(undefined **)((long)undefined_ptr + (long)char_ptr3),\n              param_ptr + (long)((long)undefined_ptr + 1),(long)(num_params - index3) << 3);\n      memcpy(param_ptr + (long)undefined_ptr,long_ptr1,local_var3);\n      free(long_ptr1);\n      free(byte_ptr2);\n      fclose(file_stream);\n      undefined_ptr = (undefined **)((long)undefined_ptr + (long)char_ptr3);\n      index = local_var1 + 1;\n      num_params = index2;\n    } while (local_var1 + 1 < index2);\n  }\nLAB_00103612:\n  index = bfd_init();\n  if (index != 0x118) goto LAB_001039f8;\n  char_ptr2 = \"x86_64-pc-linux-gnu\";\n  undefined_ptr = &PTR_s_common_001071c0;\n  char_ptr3 = \"ABGHhVvdfotx\";\n  char_var = bfd_set_default_target(\"x86_64-pc-linux-gnu\");\n  if (char_var == '\\0') {\n    result = bfd_get_error();\n    char_ptr3 = (char *)bfd_errmsg(result);\n    ulong_var2 = dcgettext(0,\"can\\'t set BFD default target to `%s\\': %s\",5);\n    ulong_var = print_formatted_error_message_00102db0(ulong_var2,\"x86_64-pc-linux-gnu\",char_ptr3);\n    goto LAB_00103b74;\n  }\n  do {\n    while (index = getopt_long(num_params,param_ptr,char_ptr3,undefined_ptr,0), index != -1) {\n      char_ptr1 = char_ptr2;\n      if (index < 0x79) {\n        if (index < 0x3f) {\nswitchD_001037fd_caseD_40:\n          index = getopt_long(num_params,param_ptr,char_ptr3,undefined_ptr,0);\n          if (index == -1) break;\n          if (0x78 < index) goto LAB_00103937;\n          if (0x3e < index) {\n            switch(index) {\n            case 0x3f:\n            case 0x48:\n            case 0x68:\n              goto switchD_001037fd_caseD_3f;\n            case 0x41:\n              goto switchD_001037fd_caseD_41;\n            case 0x42:\n              goto switchD_001037fd_caseD_42;\n            case 0x47:\n              goto switchD_001037fd_caseD_47;\n            case 0x56:\n            case 0x76:\n              goto switchD_001037fd_caseD_56;\n            case 100:\n              goto switchD_001037fd_caseD_64;\n            case 0x6f:\n              goto switchD_001037fd_caseD_6f;\n            case 0x74:\n              goto switchD_001037fd_caseD_74;\n            case 0x78:\n              goto switchD_001037fd_caseD_78;\n            }\n          }\n          do {\n            do {\n              while( true ) {\n                index = getopt_long(num_params,param_ptr,char_ptr3,undefined_ptr,0);\n                if (index == -1) goto LAB_00103664;\n                if (0x78 < index) break;\n                if (0x3e < index) {\n                  switch(index) {\n                  case 0x3f:\n                  case 0x48:\n                  case 0x68:\n                    goto switchD_001037fd_caseD_3f;\n                  case 0x41:\n                    goto switchD_001037fd_caseD_41;\n                  case 0x42:\n                    goto switchD_001037fd_caseD_42;\n                  case 0x47:\n                    goto switchD_001037fd_caseD_47;\n                  case 0x56:\n                  case 0x76:\n                    goto switchD_001037fd_caseD_56;\n                  case 100:\n                    goto switchD_001037fd_caseD_64;\n                  case 0x6f:\n                    goto switchD_001037fd_caseD_6f;\n                  case 0x74:\n                    goto switchD_001037fd_caseD_74;\n                  case 0x78:\n                    goto switchD_001037fd_caseD_78;\n                  }\n                }\n              }\nLAB_00103937:\n              if (index == 0xca) goto LAB_001039d1;\n            } while (0xca < index);\n            if (index == 200) goto LAB_00103869;\n          } while (index != 0xc9);\n          goto LAB_00103a15;\n        }\n        switch(index) {\n        case 0x3f:\n        case 0x48:\n        case 0x68:\n          goto switchD_001037fd_caseD_3f;\n        default:\n          goto switchD_001037fd_caseD_40;\n        case 0x41:\n          goto switchD_001037fd_caseD_41;\n        case 0x42:\nswitchD_001037fd_caseD_42:\n          DAT_00107348 = 0;\n          break;\n        case 0x47:\nswitchD_001037fd_caseD_47:\n          DAT_00107348 = 2;\n          break;\n        case 0x56:\n        case 0x76:\nswitchD_001037fd_caseD_56:\n          _DAT_00107338 = 1;\n          break;\n        case 100:\n          goto switchD_001037fd_caseD_64;\n        case 0x6f:\n          goto switchD_001037fd_caseD_6f;\n        case 0x74:\nswitchD_001037fd_caseD_74:\n          _DAT_00107334 = 1;\n          break;\n        case 0x78:\n          goto switchD_001037fd_caseD_78;\n        }\n      }\n      else if (index == 0xca) {\nLAB_001039d1:\n        DAT_00107340 = _optarg;\n      }\n      else {\n        if (0xca < index) goto switchD_001037fd_caseD_40;\n        if (index != 200) {\n          if (index != 0xc9) goto switchD_001037fd_caseD_40;\n          goto LAB_00103a15;\n        }\nLAB_00103869:\n        char_ptr2 = _optarg;\n        if (0x31 < (byte)(*_optarg + 0xbeU)) goto LAB_00103bc8;\n        ulong_var = 1L << (*_optarg + 0xbeU & 0x3f);\n        if ((ulong_var & 0x2000000020) != 0) goto switchD_001037fd_caseD_47;\n        if ((ulong_var & 0x2000000020000) == 0) {\nLAB_00103b74:\n          if ((ulong_var & 0x100000001) == 0) goto LAB_00103bc8;\n          goto switchD_001037fd_caseD_42;\n        }\nswitchD_001037fd_caseD_41:\n        DAT_00107348 = 1;\n      }\n    }\nLAB_00103664:\n    if (_DAT_00107338 != 0) {\n      printf(\"GNU %s %s\\n\",&DAT_00104067,\"(GNU Binutils for Debian) 2.40\");\n      char_ptr3 = (char *)dcgettext(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n      printf(char_ptr3);\n      char_ptr3 = (char *)dcgettext(0,\n                                  \"This program is free software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                                  ,5);\n      printf(char_ptr3);\n                    \n      exit(0);\n    }\n    if (_DAT_00107330 == 0) {\n      index = _optind - num_params;\n      if (_optind == num_params) {\n        check_file_info_00102980(\"a.out\");\n      }\n      else {\n        while (long_var2 = (long)_optind, SBORROW4(_optind,num_params) != index < 0) {\n          _optind = _optind + 1;\n          check_file_info_00102980(param_ptr[long_var2]);\n          index = _optind - num_params;\n        }\n      }\n      if ((_DAT_00107334 != 0) && ((DAT_00107348 & 0xfffffffd) == 0)) {\n        long_var2 = DAT_00107320 + DAT_00107328 + DAT_00107318;\n        index = (-(uint)(DAT_00107348 == 0) & 0xfffffffd) + 10;\n        bool_var3 = DAT_00107348 == 0;\n        print_formatted_number_00102e90(index);\n        index3 = (int)(char)((-bool_var3 & 0xe9U) + 0x20);\n        putc(index3,stdout_file);\n        print_formatted_number_00102e90(index,DAT_00107320);\n        putc(index3,stdout_file);\n        print_formatted_number_00102e90(index,DAT_00107318);\n        putc(index3,stdout_file);\n        if (DAT_00107348 == 0) {\n          char_ptr3 = \"%7lu\\t%7lx\";\n          if (DAT_0010733c == 1) {\n            char_ptr3 = \"%7lo\\t%7lx\";\n          }\n          printf(char_ptr3,long_var2,long_var2);\n        }\n        else {\n          print_formatted_number_00102e90(index,long_var2);\n        }\n        putc(index3,stdout_file);\n        fwrite(\"(TOTALS)\\n\",1,9,stdout_file);\n      }\n      return DAT_00107314;\n    }\n    display_binary_sections_sizes_0010281b(stdout_file,0);\nLAB_001039f8:\n    ulong_var2 = dcgettext(0,\"fatal error: libbfd ABI mismatch\",5);\n    print_formatted_error_message_00102db0(ulong_var2);\nLAB_00103a15:\n    long_var2 = strtol(_optarg,(char **)0x0,10);\n    char_ptr2 = _optarg;\n    index = (int)long_var2;\n    char_ptr1 = &optarg;\n    if (index == 10) {\nswitchD_001037fd_caseD_64:\n      char_ptr2 = char_ptr1;\n      DAT_0010733c = 0;\n    }\n    else if (index == 0x10) {\nswitchD_001037fd_caseD_78:\n      char_ptr2 = char_ptr1;\n      DAT_0010733c = 2;\n    }\n    else {\n      if (index != 8) {\n        ulong_var2 = dcgettext(0,\"Invalid radix: %s\\n\",5);\n        char_ptr3 = &optarg;\n        do {\n          print_error_message_00102f40(ulong_var2,char_ptr2);\n          char_ptr2 = char_ptr3;\nswitchD_001037fd_caseD_3f:\n          display_binary_sections_sizes_0010281b(stderr_file,1);\nLAB_00103bc8:\n          ulong_var2 = dcgettext(0,\"invalid argument to --format: %s\",5);\n          char_ptr3 = char_ptr2;\n        } while( true );\n      }\nswitchD_001037fd_caseD_6f:\n      char_ptr2 = char_ptr1;\n      DAT_0010733c = 1;\n    }\n  } while( true );\nLAB_001032f0:\n  byte_var2 = byte_ptr4[1];\n  byte_ptr4 = byte_ptr4 + 1;\n  if (byte_var2 == 0) goto LAB_0010370f;\n  goto LAB_00103300;\n}\n\n",
            "current_name": "read_and_process_files_00103130",
            "entrypoint": "0x00103130",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103130": "read_and_process_files_00103130",
                "__ptr": "byte_ptr3",
                "__s": "byte_ptr2",
                "__src": "long_ptr1",
                "__stream": "file_stream",
                "_stderr": "stderr_file",
                "_stdout": "stdout_file",
                "bVar2": "byte_var",
                "bVar23": "bool_var3",
                "bVar3": "bool_var1",
                "bVar4": "bool_var2",
                "bVar6": "byte_var2",
                "cVar7": "char_var",
                "iVar21": "index2",
                "iVar22": "index3",
                "iVar8": "index",
                "lVar12": "long_var1",
                "lVar19": "long_var2",
                "local_108": "local_var3",
                "local_10c": "local_var2",
                "local_110": "local_var1",
                "local_c8": "local_stat",
                "param_1": "num_params",
                "param_2": "argv",
                "pbVar1": "byte_ptr1",
                "pbVar18": "byte_ptr4",
                "pbVar20": "byte_ptr5",
                "pcVar10": "char_ptr2",
                "pcVar17": "char_ptr3",
                "pcVar5": "char_ptr1",
                "plVar13": "param_ptr",
                "plVar14": "param_ptr2",
                "sVar11": "size",
                "uVar15": "ulong_var",
                "uVar16": "ulong_var2",
                "uVar9": "result",
                "unaff_RBP": "undefined_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103c50": {
            "additional_data": {
                "DAT_001072d0": {
                    "max_string_length": 3
                },
                "DAT_001072d8": {
                    "max_argument6": 1,
                    "max_argument_value": 1,
                    "max_element": 1
                },
                "DAT_001072e0": {
                    "sum_of_pointers": 1,
                    "sum_of_ptrs": 1,
                    "total_string_length": 1
                },
                "FUN_00103c50": {
                    "calculate_data_metrics": 3,
                    "parse_input": 1,
                    "process_binary": 2,
                    "process_command": 1,
                    "process_data": 1,
                    "process_input": 1,
                    "process_param": 1,
                    "process_param_array": 1,
                    "process_params": 1,
                    "update_and_return_value": 1,
                    "update_data": 14,
                    "update_data_and_return": 1,
                    "update_data_if_valid": 1,
                    "update_statistics": 1,
                    "update_stats": 1
                },
                "in_RAX": {
                    "result": 5,
                    "return_val": 2,
                    "return_value": 9
                },
                "param_1": {
                    "arg1": 2,
                    "arg_1": 1,
                    "data": 1,
                    "input": 18,
                    "input1": 1,
                    "input_data": 2,
                    "input_value": 1,
                    "old_data": 1,
                    "param1": 1,
                    "param_1": 2,
                    "value": 1
                },
                "param_2": {
                    "arg2": 2,
                    "arg_2": 1,
                    "args": 2,
                    "arguments": 10,
                    "argv": 3,
                    "array": 2,
                    "array_of_pointers": 2,
                    "input2": 1,
                    "param2": 1,
                    "param_2": 1,
                    "param_array": 2,
                    "params": 2,
                    "string_array": 1,
                    "strings": 1
                },
                "param_3": {
                    "arg1": 1,
                    "arg3": 3,
                    "arg_3": 1,
                    "input3": 1,
                    "param3": 3,
                    "param_3": 5,
                    "unknown_value": 1,
                    "unused": 3,
                    "unused1": 2,
                    "unused_param": 4,
                    "unused_param1": 2,
                    "unused_param_1": 1,
                    "value1": 1,
                    "var1": 1
                },
                "param_4": {
                    "arg2": 1,
                    "arg4": 2,
                    "arg_4": 1,
                    "output": 2,
                    "param4": 1,
                    "param_4": 3,
                    "result": 1,
                    "return_value": 14,
                    "unused2": 1,
                    "unused_param2": 2,
                    "unused_param_2": 1,
                    "value2": 1,
                    "var2": 1
                },
                "pcVar1": {
                    "arg8": 2,
                    "argument_pointer": 1,
                    "current_argument": 1,
                    "current_string": 1,
                    "elem": 1,
                    "element": 1,
                    "param_2_8": 2,
                    "param_8": 1,
                    "pointer": 4,
                    "pointer_to_char": 1,
                    "pointer_to_element": 2,
                    "pointer_to_string": 2,
                    "pointer_value": 2,
                    "ptr1": 1,
                    "ptr_to_argument8": 1,
                    "ptr_var1": 1,
                    "str_ptr": 1,
                    "string_pointer": 4,
                    "string_ptr": 1,
                    "string_value": 1
                },
                "sVar2": {
                    "arg_length": 1,
                    "argument_length": 1,
                    "data_size": 1,
                    "input1_length": 1,
                    "input_length": 3,
                    "input_size": 1,
                    "length": 7,
                    "length_of_string": 1,
                    "param_2_length": 1,
                    "param_length": 2,
                    "size": 1,
                    "str_length": 1,
                    "string_length": 10
                },
                "strlen": {
                    "get_length": 1
                }
            },
            "called": [
                "FUN_001026ea",
                "strlen"
            ],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\n/* WARNING: Type propagation algorithm not settling */\n\nundefined8 update_data_if_valid_00103c50(undefined8 input,char **arguments,undefined8 param_3,undefined8 return_value)\n\n{\n  char *pointer;\n  undefined8 return_value;\n  size_t string_length;\n  \n  if (*(uint *)((long)arguments + 0x24) != 0) {\n    if (((arguments != (char **)0x108370) && ((*(uint *)((long)arguments + 0x24) & 0x1000) == 0)) &&\n       (arguments != (char **)0x108258)) {\n      pointer = arguments[8];\n      string_length = strlen(*arguments);\n      if (DAT_001072d0 < (int)string_length) {\n        DAT_001072d0 = (int)string_length;\n      }\n      DAT_001072e0 = DAT_001072e0 + (long)pointer;\n      if (DAT_001072d8 < arguments[6]) {\n        DAT_001072d8 = arguments[6];\n      }\n    }\n    return return_value;\n  }\n  return return_value;\n}\n\n",
            "current_name": "update_data_if_valid_00103c50",
            "entrypoint": "0x00103c50",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103c50": "update_data_if_valid_00103c50",
                "in_RAX": "return_value",
                "param_1": "input",
                "param_2": "arguments",
                "param_4": "return_value",
                "pcVar1": "pointer",
                "sVar2": "string_length",
                "strlen": "get_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103cc0": {
            "additional_data": {
                "0x1000": {
                    "flag": 2,
                    "flag_check": 1,
                    "flag_mask": 1
                },
                "0x108258": {
                    "excluded_address_2": 1,
                    "ptr_const2": 1,
                    "special_value2": 1
                },
                "0x108370": {
                    "excluded_address_1": 1,
                    "ptr_const1": 1,
                    "special_value1": 1
                },
                "0x24": {
                    "offset": 2
                },
                "DAT_001072e0": {
                    "data_offset": 1,
                    "global_sum": 2,
                    "result": 2,
                    "total": 2,
                    "total_data": 1,
                    "total_sum": 10
                },
                "FUN_00103cc0": {
                    "format_and_print_numbers": 1,
                    "print_and_update": 1,
                    "print_and_update_numbers": 1,
                    "print_formatted_numbers": 6,
                    "print_numbers_with_padding": 2,
                    "process_and_print_numbers": 1,
                    "process_data": 17,
                    "process_data_and_print": 1,
                    "process_formatted_numbers": 1
                },
                "arg1": {
                    "argument1": 1
                },
                "arg2": {
                    "argument2": 1
                },
                "param_1": {
                    "address": 1,
                    "arg1": 5,
                    "data": 1,
                    "handle": 1,
                    "input": 2,
                    "input1": 1,
                    "input_data": 1,
                    "param": 3,
                    "param1": 1,
                    "param_1": 1,
                    "undefined_param": 1,
                    "unused": 3,
                    "unused_param": 8,
                    "unused_parameter": 2
                },
                "param_2": {
                    "arg2": 5,
                    "arguments": 1,
                    "data": 6,
                    "data_array": 7,
                    "data_ptr": 3,
                    "input2": 1,
                    "input_array": 4,
                    "number_info": 1,
                    "param_array": 1,
                    "parameter": 1,
                    "parameters": 1
                },
                "print_formatted_numbers_with_padding_00102fe0": {
                    "print_formatted_numbers": 6,
                    "print_formatted_numbers_with_padding": 3,
                    "print_numbers": 1,
                    "print_numbers_with_padding": 5,
                    "print_padded_numbers": 1,
                    "print_with_padding": 1
                }
            },
            "called": [
                "FUN_0010274a",
                "FUN_00102fe0"
            ],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\nvoid process_data_and_print_00103cc0(undefined8 unused_param,undefined8 *data_array)\n\n{\n  if ((((*(uint *)((long)data_array + 0x24) != 0) && (data_array != (undefined8 *)0x108370)) &&\n      ((*(uint *)((long)data_array + 0x24) & 0x1000) == 0)) && (data_array != (undefined8 *)0x108258)) {\n    DAT_001072e0 = DAT_001072e0 + data_array[8];\n    print_formatted_numbers(*data_array,data_array[8],data_array[6]);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "process_data_and_print_00103cc0",
            "entrypoint": "0x00103cc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103cc0": "process_data_and_print_00103cc0",
                "param_1": "unused_param",
                "param_2": "data_array",
                "print_formatted_numbers_with_padding_00102fe0": "print_formatted_numbers"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103d20": {
            "additional_data": {
                "FUN_00103d20": {
                    "print_bfd_error_message": 1,
                    "print_error": 5,
                    "print_error_details": 1,
                    "print_error_info": 1,
                    "print_error_message": 23
                },
                "iVar1": {
                    "error": 14,
                    "error_code": 9,
                    "error_status": 6,
                    "error_type": 1
                },
                "in_R10": {
                    "additional_data": 1,
                    "additional_info": 7,
                    "unknown_cause": 1,
                    "unknown_parameter": 1,
                    "unknown_value": 1,
                    "unused_argument": 1
                },
                "param_1": {
                    "error_cause": 2,
                    "error_description": 5,
                    "error_details": 1,
                    "error_message": 13,
                    "error_string": 1,
                    "error_type": 5,
                    "file_name": 2,
                    "file_path": 1,
                    "filename": 1
                },
                "uVar2": {
                    "error_message": 16,
                    "error_message_text": 7,
                    "error_msg": 5,
                    "error_string": 3
                }
            },
            "called": [
                "bfd_errmsg",
                "FUN_0010274b",
                "bfd_get_error"
            ],
            "calling": [
                "FUN_001024d2",
                "FUN_001023b6",
                "FUN_00102a90"
            ],
            "code": "\n\n\nvoid print_bfd_error_message_00103d20(long error_message)\n\n{\n  int error;\n  undefined8 error_message;\n  undefined8 additional_info;\n  \n  error = bfd_get_error();\n  if (error == 0) {\n    error_message = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    error_message = bfd_errmsg(error);\n  }\n  fflush(_stdout);\n  if (error_message != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",DAT_00107350,error_message,error_message,additional_info);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",DAT_00107350,error_message,additional_info);\n  return;\n}\n\n",
            "current_name": "print_bfd_error_message_00103d20",
            "entrypoint": "0x00103d20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103d20": "print_bfd_error_message_00103d20",
                "iVar1": "error",
                "in_R10": "additional_info",
                "param_1": "error_message",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "_DT_FINI": {
            "called": [],
            "calling": [],
            "code": "\nvoid _DT_FINI(void)\n\n{\n  return;\n}\n\n",
            "current_name": "_DT_FINI",
            "entrypoint": "0x00103d80",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_DT_INIT": {
            "called": [
                "__gmon_start__"
            ],
            "calling": [],
            "code": "\nvoid _DT_INIT(void)\n\n{\n  __gmon_start__();\n  return;\n}\n\n",
            "current_name": "_DT_INIT",
            "entrypoint": "0x00102000",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_FINI_0": {
            "called": [
                "FUN_00103070",
                "__cxa_finalize"
            ],
            "calling": [],
            "code": "\nvoid _FINI_0(void)\n\n{\n  if (DAT_001072c0 != '\\0') {\n    return;\n  }\n  __cxa_finalize(PTR_LOOP_001071a8);\n  FUNC_00103070();\n  DAT_001072c0 = 1;\n  return;\n}\n\n",
            "current_name": "_FINI_0",
            "entrypoint": "0x001030e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_INIT_0": {
            "called": [
                "FUN_001030a0"
            ],
            "calling": [],
            "code": "\nvoid _INIT_0(void)\n\n{\n  FUNC_001030a0();\n  return;\n}\n\n",
            "current_name": "_INIT_0",
            "entrypoint": "0x00103120",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "__cxa_finalize": {
            "called": [
                "__cxa_finalize"
            ],
            "calling": [
                "_FINI_0"
            ],
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n",
            "current_name": "__cxa_finalize",
            "entrypoint": "0x00102350",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "__errno_location": {
            "called": [
                "__errno_location"
            ],
            "calling": [
                "FUN_00102360"
            ],
            "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  return piVar1;\n}\n\n",
            "current_name": "__errno_location",
            "entrypoint": "0x00102050",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_check_format": {
            "called": [
                "bfd_check_format"
            ],
            "calling": [
                "FUN_00102980",
                "FUN_00102a40"
            ],
            "code": "\nvoid bfd_check_format(void)\n\n{\n  bfd_check_format();\n  return;\n}\n\n",
            "current_name": "bfd_check_format",
            "entrypoint": "0x00102310",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_check_format_matches": {
            "called": [
                "bfd_check_format_matches"
            ],
            "calling": [
                "FUN_00102a40",
                "FUN_001024d2"
            ],
            "code": "\nvoid bfd_check_format_matches(void)\n\n{\n  bfd_check_format_matches();\n  return;\n}\n\n",
            "current_name": "bfd_check_format_matches",
            "entrypoint": "0x001022c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_close": {
            "called": [
                "bfd_close"
            ],
            "calling": [
                "FUN_001023b6"
            ],
            "code": "\nvoid bfd_close(void)\n\n{\n  bfd_close();\n  return;\n}\n\n",
            "current_name": "bfd_close",
            "entrypoint": "0x001022a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_core_file_failing_command": {
            "called": [
                "bfd_core_file_failing_command"
            ],
            "calling": [
                "FUN_001024d2"
            ],
            "code": "\nvoid bfd_core_file_failing_command(void)\n\n{\n  bfd_core_file_failing_command();\n  return;\n}\n\n",
            "current_name": "bfd_core_file_failing_command",
            "entrypoint": "0x00102060",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_errmsg": {
            "called": [
                "bfd_errmsg"
            ],
            "calling": [
                "FUN_00103130",
                "FUN_00103d20"
            ],
            "code": "\nvoid bfd_errmsg(void)\n\n{\n  bfd_errmsg();\n  return;\n}\n\n",
            "current_name": "bfd_errmsg",
            "entrypoint": "0x001022d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_error": {
            "called": [
                "bfd_get_error"
            ],
            "calling": [
                "FUN_00103130",
                "FUN_00103d20",
                "FUN_001024d2",
                "FUN_001023b6"
            ],
            "code": "\nvoid bfd_get_error(void)\n\n{\n  bfd_get_error();\n  return;\n}\n\n",
            "current_name": "bfd_get_error",
            "entrypoint": "0x00102160",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_init": {
            "called": [
                "bfd_init"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid bfd_init(void)\n\n{\n  bfd_init();\n  return;\n}\n\n",
            "current_name": "bfd_init",
            "entrypoint": "0x001021c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_map_over_sections": {
            "called": [
                "bfd_map_over_sections"
            ],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\nvoid bfd_map_over_sections(void)\n\n{\n  bfd_map_over_sections();\n  return;\n}\n\n",
            "current_name": "bfd_map_over_sections",
            "entrypoint": "0x00102330",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_openr": {
            "called": [
                "bfd_openr"
            ],
            "calling": [
                "FUN_00102980"
            ],
            "code": "\nvoid bfd_openr(void)\n\n{\n  bfd_openr();\n  return;\n}\n\n",
            "current_name": "bfd_openr",
            "entrypoint": "0x001020c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_openr_next_archived_file": {
            "called": [
                "bfd_openr_next_archived_file"
            ],
            "calling": [
                "FUN_001023b6"
            ],
            "code": "\nvoid bfd_openr_next_archived_file(void)\n\n{\n  bfd_openr_next_archived_file();\n  return;\n}\n\n",
            "current_name": "bfd_openr_next_archived_file",
            "entrypoint": "0x00102320",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_default_target": {
            "called": [
                "bfd_set_default_target"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid bfd_set_default_target(void)\n\n{\n  bfd_set_default_target();\n  return;\n}\n\n",
            "current_name": "bfd_set_default_target",
            "entrypoint": "0x00102090",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_error": {
            "called": [
                "bfd_set_error"
            ],
            "calling": [
                "FUN_001023b6"
            ],
            "code": "\nvoid bfd_set_error(void)\n\n{\n  bfd_set_error();\n  return;\n}\n\n",
            "current_name": "bfd_set_error",
            "entrypoint": "0x00102180",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_error_program_name": {
            "called": [
                "bfd_set_error_program_name"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n",
            "current_name": "bfd_set_error_program_name",
            "entrypoint": "0x00102260",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_target_list": {
            "called": [
                "bfd_target_list"
            ],
            "calling": [
                "FUN_0010281b"
            ],
            "code": "\nvoid bfd_target_list(void)\n\n{\n  bfd_target_list();\n  return;\n}\n\n",
            "current_name": "bfd_target_list",
            "entrypoint": "0x00102150",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bindtextdomain": {
            "called": [
                "bindtextdomain"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n",
            "current_name": "bindtextdomain",
            "entrypoint": "0x001020e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "dcgettext": {
            "called": [
                "dcgettext"
            ],
            "calling": [
                "FUN_0010281b",
                "FUN_00102980",
                "FUN_00103130",
                "FUN_0010274b",
                "FUN_0010278c",
                "FUN_00102360"
            ],
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n",
            "current_name": "dcgettext",
            "entrypoint": "0x001020f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "entry": {
            "called": [
                "FUN_00103130",
                "__libc_start_main"
            ],
            "calling": [],
            "code": "\nvoid processEntry entry(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined auStack_8 [8];\n  \n  __libc_start_main(read_and_process_files_00103130,param_2,&stack0x00000008,0,0,param_1,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "entry",
            "entrypoint": "0x00103040",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "exit": {
            "called": [
                "exit"
            ],
            "calling": [
                "FUN_0010281b",
                "FUN_00103130"
            ],
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n",
            "current_name": "exit",
            "entrypoint": "0x001022f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fclose": {
            "called": [
                "fclose"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fclose",
            "entrypoint": "0x001020d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "ferror": {
            "called": [
                "ferror"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "ferror",
            "entrypoint": "0x00102080",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fflush": {
            "called": [
                "fflush"
            ],
            "calling": [
                "FUN_0010274b",
                "FUN_0010278c",
                "FUN_00102ee0"
            ],
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fflush",
            "entrypoint": "0x00102230",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fopen": {
            "called": [
                "fopen"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n",
            "current_name": "fopen",
            "entrypoint": "0x00102280",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fprintf": {
            "called": [
                "fprintf"
            ],
            "calling": [
                "FUN_0010281b",
                "FUN_00103130",
                "FUN_0010274b",
                "FUN_0010278c",
                "FUN_00102ee0"
            ],
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n",
            "current_name": "fprintf",
            "entrypoint": "0x001021e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fputc": {
            "called": [
                "fputc"
            ],
            "calling": [
                "FUN_0010281b",
                "FUN_0010278c"
            ],
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fputc",
            "entrypoint": "0x001021b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fputs": {
            "called": [
                "fputs"
            ],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\n\n\nint fputs(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputs(__s,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fputs",
            "entrypoint": "0x00102140",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fread": {
            "called": [
                "fread"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n",
            "current_name": "fread",
            "entrypoint": "0x001020a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "free": {
            "called": [
                "free"
            ],
            "calling": [
                "FUN_0010281b",
                "FUN_00103130",
                "FUN_00102a90",
                "FUN_0010278c"
            ],
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n",
            "current_name": "free",
            "entrypoint": "0x00102030",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fseek": {
            "called": [
                "fseek"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n",
            "current_name": "fseek",
            "entrypoint": "0x00102240",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "ftell": {
            "called": [
                "ftell"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n",
            "current_name": "ftell",
            "entrypoint": "0x001021f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fwrite": {
            "called": [
                "fwrite"
            ],
            "calling": [
                "FUN_00103130",
                "FUN_001024d2"
            ],
            "code": "\n\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fwrite(__ptr,__size,__n,__s);\n  return sVar1;\n}\n\n",
            "current_name": "fwrite",
            "entrypoint": "0x00102300",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "getopt_long": {
            "called": [
                "getopt_long"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n",
            "current_name": "getopt_long",
            "entrypoint": "0x00102110",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "memcpy": {
            "called": [
                "memcpy"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "memcpy",
            "entrypoint": "0x00102220",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "memmove": {
            "called": [
                "memmove"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "memmove",
            "entrypoint": "0x00102270",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "printf": {
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_00103130",
                "FUN_00102710",
                "FUN_001024d2",
                "FUN_00102a90",
                "FUN_0010259c",
                "FUN_00102e90",
                "FUN_00102fe0"
            ],
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n",
            "current_name": "printf",
            "entrypoint": "0x00102120",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "putc": {
            "called": [
                "putc"
            ],
            "calling": [
                "FUN_00103130",
                "FUN_00102a90",
                "FUN_00102ee0"
            ],
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "putc",
            "entrypoint": "0x001021d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "putchar": {
            "called": [
                "putchar"
            ],
            "calling": [
                "FUN_00102a40",
                "FUN_00102fe0"
            ],
            "code": "\n\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = putchar(__c);\n  return iVar1;\n}\n\n",
            "current_name": "putchar",
            "entrypoint": "0x00102040",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "puts": {
            "called": [
                "puts"
            ],
            "calling": [
                "FUN_001024d2",
                "FUN_00102a90"
            ],
            "code": "\n\n\nint puts(char *__s)\n\n{\n  int iVar1;\n  \n  iVar1 = puts(__s);\n  return iVar1;\n}\n\n",
            "current_name": "puts",
            "entrypoint": "0x00102070",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "setlocale": {
            "called": [
                "setlocale"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = setlocale(__category,__locale);\n  return pcVar1;\n}\n\n",
            "current_name": "setlocale",
            "entrypoint": "0x00102250",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "sprintf": {
            "called": [
                "sprintf"
            ],
            "calling": [
                "FUN_00102e50",
                "FUN_00102710",
                "FUN_00102e90"
            ],
            "code": "\n\n\nint sprintf(char *__s,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = sprintf(__s,__format);\n  return iVar1;\n}\n\n",
            "current_name": "sprintf",
            "entrypoint": "0x001022e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "stat": {
            "called": [
                "stat"
            ],
            "calling": [
                "FUN_00102980",
                "FUN_00103130"
            ],
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n",
            "current_name": "stat",
            "entrypoint": "0x00102200",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strerror": {
            "called": [
                "strerror"
            ],
            "calling": [
                "FUN_00102360"
            ],
            "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strerror(__errnum);\n  return pcVar1;\n}\n\n",
            "current_name": "strerror",
            "entrypoint": "0x00102340",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strlen": {
            "called": [
                "strlen"
            ],
            "calling": [
                "FUN_00102e50",
                "FUN_00103130",
                "FUN_00103c50"
            ],
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n",
            "current_name": "strlen",
            "entrypoint": "0x00102100",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strtol": {
            "called": [
                "strtol"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n  long lVar1;\n  \n  lVar1 = strtol(__nptr,__endptr,__base);\n  return lVar1;\n}\n\n",
            "current_name": "strtol",
            "entrypoint": "0x00102210",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "textdomain": {
            "called": [
                "textdomain"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n",
            "current_name": "textdomain",
            "entrypoint": "0x001020b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "vfprintf": {
            "called": [
                "vfprintf"
            ],
            "calling": [
                "FUN_00102ee0"
            ],
            "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 = vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n",
            "current_name": "vfprintf",
            "entrypoint": "0x001022b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xexit": {
            "called": [
                "xexit"
            ],
            "calling": [
                "FUN_00102db0",
                "FUN_00103130",
                "FUN_00102a90"
            ],
            "code": "\nvoid xexit(void)\n\n{\n  xexit();\n  return;\n}\n\n",
            "current_name": "xexit",
            "entrypoint": "0x00102290",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xmalloc": {
            "called": [
                "xmalloc"
            ],
            "calling": [
                "FUN_00103130",
                "FUN_00102a90"
            ],
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n",
            "current_name": "xmalloc",
            "entrypoint": "0x00102170",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xmalloc_set_program_name": {
            "called": [
                "xmalloc_set_program_name"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n",
            "current_name": "xmalloc_set_program_name",
            "entrypoint": "0x00102190",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xrealloc": {
            "called": [
                "xrealloc"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n",
            "current_name": "xrealloc",
            "entrypoint": "0x00102130",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xstrdup": {
            "called": [
                "xstrdup"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n",
            "current_name": "xstrdup",
            "entrypoint": "0x001021a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_00102020",
            "FUN_0010259c",
            "FUN_001026ea",
            "FUN_001026f6",
            "FUN_00102710",
            "FUN_0010274b",
            "FUN_0010278c",
            "FUN_0010281b",
            "FUN_00102d70",
            "FUN_00102e50",
            "FUN_00102e90",
            "FUN_00102ee0",
            "FUN_00103c50",
            "FUN_00103d20"
        ],
        [
            "FUN_00102db0",
            "FUN_00102f40",
            "FUN_00102fe0"
        ],
        [
            "FUN_00102360",
            "FUN_00103cc0"
        ],
        [
            "FUN_00102a90"
        ],
        [
            "FUN_001024d2",
            "FUN_00102a40"
        ],
        [
            "FUN_001023b6"
        ],
        [
            "FUN_00102980"
        ],
        [
            "FUN_00103130"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 107938
}