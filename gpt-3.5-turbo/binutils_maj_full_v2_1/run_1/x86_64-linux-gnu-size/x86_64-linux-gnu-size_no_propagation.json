{
    "functions": {
        "FUN_00102020": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "DAT_00102020": {
                    "dat": 1
                },
                "FUN_00102020": {
                    "call_function_at_address": 1,
                    "call_indirect_function": 1,
                    "call_indirect_jump": 1,
                    "execute_external_function": 1,
                    "execute_function": 3,
                    "execute_function_at_address": 1,
                    "execute_indirect_call": 3,
                    "execute_indirect_function": 3,
                    "execute_indirect_jump": 17
                },
                "PTR_": {
                    "": 1
                },
                "PTR_0": {
                    "jump_target": 1
                },
                "PTR_00102020": {
                    "ptr": 1
                },
                "code": {
                    "function_pointer": 3,
                    "indirect_function": 1,
                    "indirect_jump_function": 1
                },
                "codePointer": {
                    "func_ptr": 1
                },
                "undefined": {
                    "func_ptr": 1,
                    "function_address": 1,
                    "function_pointer": 4,
                    "function_ptr": 1,
                    "jump_target": 2,
                    "target_address": 3
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_indirect_jump_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(function_pointer *)(function_pointer *)0x0)();\n  return;\n}\n\n",
            "current_name": "execute_indirect_jump_00102020",
            "entrypoint": "0x00102020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102020": "execute_indirect_jump_00102020",
                "code": "function_pointer",
                "undefined": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102360": {
            "additional_data": {
                "FUN_00102360": {
                    "check_file_access": 1,
                    "check_file_existence": 7,
                    "file_localization_warning": 1,
                    "handle_file_error": 16,
                    "handle_file_not_found": 2,
                    "handle_file_not_found_error": 3,
                    "process_file_not_found_error": 1
                },
                "FUN_00102f40": {
                    "display_error_message": 2,
                    "log_error_message": 1,
                    "output_error": 1,
                    "output_error_message": 1,
                    "print_error": 2,
                    "print_error_message": 13,
                    "print_message": 1,
                    "print_warning": 1
                },
                "__errno_location": {
                    "get_errno_location": 12,
                    "get_errno_pointer": 1,
                    "get_error_code": 1,
                    "get_error_code_pointer": 1,
                    "get_error_location": 6,
                    "get_error_number": 3
                },
                "dcgettext": {
                    "fetch_localization": 1,
                    "get_error_message": 5,
                    "get_localized_error": 2,
                    "get_localized_error_message": 2,
                    "get_localized_message": 7,
                    "get_localized_string": 1,
                    "get_localized_text": 1,
                    "get_string": 1,
                    "get_translated_error": 1,
                    "get_translated_string": 1,
                    "gettext": 1,
                    "translate": 1,
                    "translate_text": 2
                },
                "piVar1": {
                    "errno_location": 4,
                    "errno_pointer": 4,
                    "errno_ptr": 10,
                    "error_code": 3,
                    "error_code_ptr": 1,
                    "error_location": 1,
                    "error_number": 2,
                    "error_number_ptr": 2,
                    "error_pointer": 1,
                    "error_ptr": 2,
                    "p_errno": 1
                },
                "strerror": {
                    "get_error_description": 5,
                    "get_error_message": 2,
                    "get_error_string": 20
                },
                "uVar2": {
                    "error_message": 22,
                    "error_msg": 1,
                    "error_string": 2,
                    "error_text": 2,
                    "localized_string": 1,
                    "translated_error_message": 1,
                    "translated_message": 1,
                    "translated_string": 1
                }
            },
            "called": [
                "dcgettext",
                "FUN_00102f40",
                "strerror",
                "__errno_location"
            ],
            "calling": [
                "FUN_00102980"
            ],
            "code": "\nvoid handle_file_not_found_error_00102360(void)\n\n{\n  int *errno_ptr;\n  undefined8 error_message;\n  \n  errno_ptr = __errno_location();\n  if (*errno_ptr == 2) {\n    error_message = dcgettext(0,\"\\'%s\\': No such file\",5);\n    FUN_00102f40(error_message);\n  }\n  else {\n    strerror(*errno_ptr);\n    error_message = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n    FUN_00102f40(error_message);\n  }\n  DAT_00107314 = 1;\n  return;\n}\n\n",
            "current_name": "handle_file_not_found_error_00102360",
            "entrypoint": "0x00102360",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102360": "handle_file_not_found_error_00102360",
                "__errno_location": "get_errno_location",
                "dcgettext": "get_localized_message",
                "piVar1": "errno_ptr",
                "strerror": "get_error_string",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001023b6": {
            "additional_data": {
                "DAT_00107314": {
                    "file_status": 1
                },
                "FUNC_00103d20": {
                    "handle_error": 1
                },
                "FUN_001023b6": {
                    "extract_archive": 1,
                    "extract_archived_files": 8,
                    "find_and_process_archived_files": 1,
                    "process_archived_files": 20,
                    "read_archived_files": 1
                },
                "FUN_00102a40": {
                    "perform_additional_operations": 1,
                    "perform_additional_processing": 1,
                    "perform_operation": 2,
                    "process_archived_file": 1,
                    "process_data": 1,
                    "process_file": 6
                },
                "FUN_00103d20": {
                    "handle_archived_file": 1,
                    "handle_error": 8,
                    "perform_action": 1,
                    "perform_cleanup_operations": 1
                },
                "bfd_close": {
                    "close_bfd": 5,
                    "close_file": 6,
                    "close_file_handle": 1
                },
                "bfd_get_error": {
                    "get_bfd_error": 4,
                    "get_error": 6,
                    "get_error_code": 1
                },
                "bfd_openr_next_archived_file": {
                    "get_next_archived_file": 1,
                    "open_next_archived_file": 11
                },
                "bfd_set_error": {
                    "set_bfd_error": 5,
                    "set_error": 6,
                    "set_error_flag": 1
                },
                "cVar1": {
                    "close_error": 2,
                    "close_result": 3,
                    "close_status": 5,
                    "close_success": 15,
                    "status": 1
                },
                "iVar2": {
                    "bfd_error_code": 1,
                    "error": 1,
                    "error_code": 14
                },
                "lVar3": {
                    "archived_file_handle": 1,
                    "current_file": 14,
                    "current_file_handle": 2,
                    "file_count": 1,
                    "file_descriptor": 1,
                    "file_handle": 5,
                    "file_ptr": 1,
                    "iteration_count": 1
                },
                "lVar4": {
                    "last_file": 1,
                    "prev_file_count": 1,
                    "prev_file_handle": 3,
                    "previous_archived_file_handle": 1,
                    "previous_file": 13,
                    "previous_file_descriptor": 1,
                    "previous_file_handle": 4,
                    "previous_file_ptr": 1,
                    "previous_iteration_count": 1
                },
                "unaff_RBX": {
                    "archive_files": 1,
                    "archived_files": 4,
                    "bfd_handler": 1,
                    "error_ptr": 1,
                    "file_descriptors": 1,
                    "file_handles": 3,
                    "file_list": 2,
                    "file_list_ptr": 1,
                    "file_names_array": 1,
                    "file_pointer": 1,
                    "file_ptr": 1,
                    "files_to_extract": 1,
                    "files_to_process": 1,
                    "output": 1,
                    "output_file": 2,
                    "output_files": 1,
                    "output_pointer": 1,
                    "output_ptr": 1,
                    "output_stream": 1,
                    "target_file": 1
                }
            },
            "called": [
                "FUN_00103d20",
                "bfd_set_error",
                "bfd_get_error",
                "bfd_close",
                "bfd_openr_next_archived_file",
                "FUN_00102a40"
            ],
            "calling": [
                "FUN_00102980"
            ],
            "code": "\nvoid find_and_process_archived_files_001023b6(void)\n\n{\n  char close_success;\n  int error_code;\n  long current_file;\n  undefined8 *archived_files;\n  long previous_file;\n  \n  current_file = 0;\n  do {\n    previous_file = current_file;\n    bfd_set_error(0);\n    current_file = bfd_openr_next_archived_file();\n    if (current_file == 0) {\n      error_code = bfd_get_error();\n      if (error_code != 9) {\n        FUN_00103d20(*archived_files);\n        DAT_00107314 = 2;\n      }\n      if (previous_file != 0) {\n        bfd_close(previous_file);\n      }\n      break;\n    }\n    FUN_00102a40();\n  } while ((previous_file == 0) || (bfd_close(), previous_file != current_file));\n  close_success = bfd_close();\n  if (close_success == '\\0') {\n    FUN_00103d20();\n    DAT_00107314 = 1;\n  }\n  return;\n}\n\n",
            "current_name": "find_and_process_archived_files_001023b6",
            "entrypoint": "0x001023b6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001023b6": "find_and_process_archived_files_001023b6",
                "bfd_close": "close_file",
                "bfd_get_error": "get_error",
                "bfd_openr_next_archived_file": "open_next_archived_file",
                "bfd_set_error": "set_error",
                "cVar1": "close_success",
                "iVar2": "error_code",
                "lVar3": "current_file",
                "lVar4": "previous_file",
                "unaff_RBX": "archived_files"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001024d2": {
            "additional_data": {
                "DAT_00107314": {
                    "error_code": 1,
                    "status": 2
                },
                "FUN_001024d2": {
                    "analyze_binary": 1,
                    "analyze_core_file": 1,
                    "check_and_print_file_format": 1,
                    "check_bfd_error": 1,
                    "handle_bfd_error": 1,
                    "handle_bfd_operation": 1,
                    "handle_core_file": 1,
                    "handle_error": 1,
                    "process_bfd": 2,
                    "process_bfd_data": 1,
                    "process_bfd_file": 1,
                    "process_bfd_result": 1,
                    "process_binary": 7,
                    "process_binary_file": 3,
                    "process_binary_function": 1,
                    "process_core_file": 4,
                    "process_error": 1,
                    "process_file": 1
                },
                "FUN_0010278c": {
                    "close_file": 1,
                    "handle_error2": 1,
                    "print_warning": 1
                },
                "FUN_00102a90": {
                    "analyze_command": 1,
                    "process_core_file": 1,
                    "reverse_data": 1
                },
                "FUN_00103d20": {
                    "handle_core_file": 1,
                    "handle_error": 1,
                    "print_error_message": 1
                },
                "_stdout": {
                    "output_stream": 2,
                    "standard_output": 2
                },
                "bfd_check_format_matches": {
                    "check_bfd_format_matches": 1,
                    "check_format_matches": 1
                },
                "bfd_core_file_failing_command": {
                    "get_core_file_failing_command": 1,
                    "get_failing_command": 1
                },
                "bfd_get_error": {
                    "get_bfd_error": 1,
                    "get_error": 1
                },
                "cVar1": {
                    "format_match": 1,
                    "format_matches": 11,
                    "is_format_match": 7,
                    "is_format_matched": 2,
                    "is_format_matches": 1,
                    "is_format_matching": 1,
                    "is_valid_format": 1,
                    "match_found": 1
                },
                "fwrite": {
                    "write_data": 1,
                    "write_to_stream": 1
                },
                "iVar2": {
                    "bfd_error": 1,
                    "error": 13,
                    "error_code": 11,
                    "error_status": 1
                },
                "lVar3": {
                    "command": 1,
                    "command_ptr": 1,
                    "failing_command": 25
                },
                "param_7": {
                    "command": 2,
                    "command_error": 1,
                    "command_name": 1,
                    "core_file_handle": 1,
                    "core_file_path": 3,
                    "error_callback": 1,
                    "error_code": 1,
                    "error_description": 1,
                    "error_info": 1,
                    "file": 1,
                    "file_contents": 1,
                    "file_handle": 1,
                    "file_info": 1,
                    "file_name": 1,
                    "file_param": 1,
                    "file_ptr": 2,
                    "output": 1,
                    "output_file": 2,
                    "param": 1,
                    "param2": 1,
                    "param7": 2,
                    "param_7": 1,
                    "param_status": 1,
                    "param_value": 1,
                    "status": 1
                },
                "printf": {
                    "print_formatted_string": 1,
                    "print_formatted_text": 1
                },
                "puts": {
                    "print_string": 1,
                    "print_text": 1
                },
                "unaff_RBX": {
                    "bfd_data": 1,
                    "binary_data": 1,
                    "binary_pointer": 1,
                    "core_file": 1,
                    "core_file_content": 1,
                    "core_file_ptr": 1,
                    "core_files": 1,
                    "file": 1,
                    "file_array": 1,
                    "file_handle": 1,
                    "file_list": 1,
                    "file_path": 1,
                    "file_pointer": 5,
                    "file_ptr": 2,
                    "files": 1,
                    "input": 1,
                    "input_data": 1,
                    "param1": 1,
                    "param_list": 1,
                    "ptr_data": 1,
                    "ptr_to_param": 1,
                    "ptr_value": 1,
                    "unaff_rbx": 1
                }
            },
            "called": [
                "puts",
                "FUN_00103d20",
                "printf",
                "bfd_get_error",
                "FUN_0010278c",
                "bfd_core_file_failing_command",
                "fwrite",
                "FUN_00102a90",
                "bfd_check_format_matches"
            ],
            "calling": [
                "FUN_00102a40"
            ],
            "code": "\n\n\nvoid process_binary_file_001024d2(void)\n\n{\n  char format_matches;\n  int error;\n  long failing_command;\n  undefined8 *file_pointer;\n  undefined8 core_file_path;\n  \n  error = bfd_get_error();\n  if (error == 0xd) {\n    FUN_00103d20(*file_pointer);\n    FUN_0010278c(core_file_path);\n    DAT_00107314 = 3;\n  }\n  else {\n    format_matches = bfd_check_format_matches();\n    if (format_matches == '\\0') {\n      FUN_00103d20(*file_pointer);\n      error = bfd_get_error();\n      if (error == 0xd) {\n        FUN_0010278c(core_file_path);\n      }\n      DAT_00107314 = 3;\n    }\n    else {\n      FUN_00102a90();\n      fwrite(\" (core file\",1,0xb,output_stream);\n      failing_command = bfd_core_file_failing_command();\n      if (failing_command != 0) {\n        printf(\" invoked as %s\",failing_command);\n      }\n      puts(\")\\n\");\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_binary_file_001024d2",
            "entrypoint": "0x001024d2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001024d2": "process_binary_file_001024d2",
                "_stdout": "output_stream",
                "bfd_check_format_matches": "check_format_matches",
                "bfd_core_file_failing_command": "get_failing_command",
                "bfd_get_error": "get_bfd_error",
                "cVar1": "format_matches",
                "fwrite": "write_data",
                "iVar2": "error",
                "lVar3": "failing_command",
                "param_7": "core_file_path",
                "printf": "print_formatted_text",
                "puts": "print_string",
                "unaff_RBX": "file_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010259c": {
            "additional_data": {
                "FUN_0010259c": {
                    "print_ex_from_rax": 1,
                    "print_ex_function": 1,
                    "print_ex_message": 5,
                    "print_ex_name": 2,
                    "print_ex_string": 15,
                    "print_extracted_data": 1,
                    "print_extraction": 2,
                    "print_formatted_string": 1,
                    "print_message": 1,
                    "print_string_with_format": 2
                },
                "in_RAX": {
                    "ex_name": 1,
                    "ex_name_ptr": 1,
                    "ex_string": 10,
                    "ex_string_param": 1,
                    "ex_string_pointer": 1,
                    "ex_string_ptr": 3,
                    "extracted_data": 1,
                    "extraction": 2,
                    "format_string": 1,
                    "format_string_pointer": 1,
                    "input_string": 1,
                    "message": 4,
                    "message_ptr": 2,
                    "print_ex_input": 1,
                    "string_ptr": 1
                },
                "printf": {
                    "print_formatted": 1
                }
            },
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\nvoid print_ex_string_0010259c(void)\n\n{\n  undefined8 *ex_string;\n  \n  printf(\" (ex %s)\",*ex_string);\n  return;\n}\n\n",
            "current_name": "print_ex_string_0010259c",
            "entrypoint": "0x0010259c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010259c": "print_ex_string_0010259c",
                "in_RAX": "ex_string",
                "printf": "print_formatted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001026ea": {
            "additional_data": {
                "FUN_001026ea": {
                    "extract_register_value": 1,
                    "extract_return_value": 1,
                    "initialize_data": 14,
                    "initialize_function": 4,
                    "initialize_global_value": 1,
                    "initialize_global_variable": 1,
                    "initialize_memory": 4,
                    "initialize_return_address": 1,
                    "initialize_return_pointer": 1,
                    "initialize_return_value": 2,
                    "initialize_settings": 1
                },
                "in_RAX": {
                    "initial_value": 1,
                    "input_data": 2,
                    "input_rax": 1,
                    "input_value": 13,
                    "input_value1": 1,
                    "new_settings": 1,
                    "register_value": 1,
                    "return_val": 1,
                    "return_value": 7
                },
                "unaff_retaddr": {
                    "return_address": 24,
                    "return_value": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_00103c50"
            ],
            "code": "\nundefined8 initialize_data_001026ea(void)\n\n{\n  undefined8 input_value;\n  undefined8 return_address;\n  \n  DAT_001072d8 = input_value;\n  return return_address;\n}\n\n",
            "current_name": "initialize_data_001026ea",
            "entrypoint": "0x001026ea",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001026ea": "initialize_data_001026ea",
                "in_RAX": "input_value",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001026f6": {
            "additional_data": {
                "FUN_001026f6": {
                    "format_and_print": 2,
                    "format_and_print_number": 2,
                    "format_and_print_value": 2,
                    "print_formatted": 1,
                    "print_formatted_address": 1,
                    "print_formatted_data": 1,
                    "print_formatted_integer": 1,
                    "print_formatted_number": 11,
                    "print_formatted_output": 1,
                    "print_formatted_value": 7,
                    "print_number": 1,
                    "print_number_in_hex_or_octal": 1
                },
                "__format": {
                    "address_format": 1,
                    "format_specifier": 1,
                    "format_string": 29
                },
                "in_EAX": {
                    "address_format_1": 1,
                    "condition": 1,
                    "flag": 2,
                    "format_option": 4,
                    "format_type": 2,
                    "input_number": 1,
                    "input_value": 1,
                    "integer_flag": 1,
                    "num_base": 1,
                    "num_to_print": 1,
                    "number": 2,
                    "number_format": 4,
                    "number_string_type": 1,
                    "number_type": 3,
                    "option": 1,
                    "value": 4,
                    "value_type": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00102e50"
            ],
            "code": "\nvoid print_formatted_number_001026f6(void)\n\n{\n  int number_format;\n  char *format_string;\n  \n  format_string = \"0x%lx\";\n  if (number_format == 1) {\n    format_string = \"0%lo\";\n  }\n  sprintf(&stack0x00000000,format_string);\n  strlen(&stack0x00000000);\n  return;\n}\n\n",
            "current_name": "print_formatted_number_001026f6",
            "entrypoint": "0x001026f6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001026f6": "print_formatted_number_001026f6",
                "__format": "format_string",
                "in_EAX": "number_format"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102710": {
            "additional_data": {
                "FUN_00102710": {
                    "format_and_print": 1,
                    "format_and_print_number": 1,
                    "format_print": 1,
                    "print_formatted_number": 13,
                    "print_formatted_output": 6,
                    "print_formatted_value": 9
                },
                "__format": {
                    "format": 1,
                    "format_specifier": 2,
                    "format_string": 28
                },
                "in_EAX": {
                    "format_indicator": 1,
                    "format_option": 1,
                    "format_type": 1,
                    "input_number": 2,
                    "input_parameter": 1,
                    "input_value": 9,
                    "number": 4,
                    "number_format": 1,
                    "number_format_code": 1,
                    "number_type": 5,
                    "value": 4,
                    "value_mode": 1
                },
                "stack0x00000000": {
                    "buffer": 1
                },
                "unaff_EBX": {
                    "alignment": 1,
                    "field_width": 11,
                    "output_width": 3,
                    "padding": 1,
                    "width": 15
                }
            },
            "called": [
                "printf",
                "sprintf"
            ],
            "calling": [
                "FUN_00102e90"
            ],
            "code": "\nvoid print_formatted_number_00102710(void)\n\n{\n  int input_value;\n  uint width;\n  char *format_string;\n  \n  format_string = \"0x%lx\";\n  if (input_value == 1) {\n    format_string = \"0%lo\";\n  }\n  sprintf(&buffer,format_string);\n  printf(\"%*s\",(ulong)width);\n  return;\n}\n\n",
            "current_name": "print_formatted_number_00102710",
            "entrypoint": "0x00102710",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102710": "print_formatted_number_00102710",
                "__format": "format_string",
                "in_EAX": "input_value",
                "stack0x00000000": "buffer",
                "unaff_EBX": "width"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010274a": {
            "called": [],
            "calling": [
                "FUN_00103cc0"
            ],
            "code": "\nvoid FUNC_0010274a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0010274a",
            "entrypoint": "0x0010274a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0010274a": "FUNC_0010274a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0010274b": {
            "additional_data": {
                "FUN_0010274b": {
                    "handle_error": 3,
                    "print_error": 2,
                    "print_error_and_retval": 1,
                    "print_error_details": 4,
                    "print_error_message": 21
                },
                "uVar1": {
                    "error_description": 1,
                    "error_message": 16,
                    "error_msg": 1,
                    "error_string": 2
                },
                "unaff_RBX": {
                    "error_cause": 2,
                    "error_code": 13,
                    "error_flag": 14,
                    "error_type": 1,
                    "return_value": 1
                },
                "unaff_retaddr": {
                    "return_address": 30,
                    "return_value": 1
                }
            },
            "called": [
                "fprintf",
                "dcgettext",
                "fflush"
            ],
            "calling": [
                "FUN_00103d20"
            ],
            "code": "\n\n\nvoid print_error_message_0010274b(void)\n\n{\n  undefined8 error_message;\n  long error_flag;\n  undefined8 return_address;\n  \n  error_message = dcgettext(0,\"cause of error unknown\",5);\n  fflush(_stdout);\n  if (error_flag != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",DAT_00107350);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",DAT_00107350,error_message,return_address);\n  return;\n}\n\n",
            "current_name": "print_error_message_0010274b",
            "entrypoint": "0x0010274b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010274b": "print_error_message_0010274b",
                "uVar1": "error_message",
                "unaff_RBX": "error_flag",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010278c": {
            "additional_data": {
                "FUN_0010278c": {
                    "print_matched_formats": 2,
                    "print_matching_formats": 29
                },
                "__c": {
                    "char_to_print": 1,
                    "character": 9,
                    "newline_char": 1,
                    "newline_character": 1
                },
                "__format": {
                    "error_format": 1,
                    "format_message": 4,
                    "format_msg": 1,
                    "format_string": 18,
                    "localized_format": 1,
                    "message": 1,
                    "message_format": 2
                },
                "__ptr": {
                    "pointer": 3,
                    "ptr": 2
                },
                "__stream": {
                    "error_stream": 1,
                    "output_file": 1,
                    "output_stream": 9,
                    "stderr": 2,
                    "stream": 1
                },
                "_stderr": {
                    "error_stream": 1,
                    "standard_error": 4,
                    "stderr_stream": 1
                },
                "_stdout": {
                    "output_stream": 1,
                    "standard_output": 4,
                    "stdout_stream": 1
                },
                "param_1": {
                    "format_array": 1,
                    "format_list": 6,
                    "format_strings": 7,
                    "formats": 12,
                    "formats_array": 2,
                    "matching_formats": 2,
                    "strings": 1
                },
                "plVar2": {
                    "current_format": 20,
                    "current_string": 5,
                    "format_ptr": 2,
                    "ptr": 1
                },
                "uVar1": {
                    "data": 1,
                    "data_value": 1,
                    "default_format": 1,
                    "default_locale": 1,
                    "locale_string": 1,
                    "localized_string": 1,
                    "matching_formats": 2,
                    "message": 1,
                    "translation": 1
                }
            },
            "called": [
                "fprintf",
                "dcgettext",
                "fflush",
                "free",
                "fputc"
            ],
            "calling": [
                "FUN_001024d2"
            ],
            "code": "\n\n\nvoid print_matching_formats_0010278c(long *formats)\n\n{\n  undefined8 matching_formats;\n  char *format_string;\n  long *current_format;\n  \n  fflush(standard_output);\n  matching_formats = DAT_00107350;\n  format_string = (char *)dcgettext(0,\"%s: Matching formats:\",5);\n  fprintf(standard_error,format_string,matching_formats);\n  for (current_format = formats; *current_format != 0; current_format = current_format + 1) {\n    fprintf(standard_error,\" %s\");\n  }\n  free(formats);\n  fputc(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_matching_formats_0010278c",
            "entrypoint": "0x0010278c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010278c": "print_matching_formats_0010278c",
                "__format": "format_string",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "param_1": "formats",
                "plVar2": "current_format",
                "uVar1": "matching_formats"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010281b": {
            "additional_data": {
                "FUN_0010281b": {
                    "display_binary_file_section_sizes": 1,
                    "display_binary_file_sections": 1,
                    "display_file_size_sections": 1,
                    "display_section_sizes": 15,
                    "print_file_section_sizes": 1,
                    "print_section_sizes": 11,
                    "print_usage_and_exit": 1
                },
                "__c": {
                    "character": 3
                },
                "__format": {
                    "format": 1,
                    "format_specifier": 1,
                    "format_string": 2
                },
                "__ptr": {
                    "bfd_target_list": 1,
                    "bfd_targets": 3,
                    "memory_block": 1,
                    "pointer": 1,
                    "ptr": 1,
                    "target_list": 23,
                    "targets": 1
                },
                "__status": {
                    "status_code": 3
                },
                "__stream": {
                    "output_stream": 3,
                    "stream": 1
                },
                "bfd_target_list": {
                    "get_available_targets": 2,
                    "get_bfd_targets": 1,
                    "get_listof_supported_targets": 1,
                    "get_target_list": 4,
                    "list_available_targets": 1
                },
                "dcgettext": {
                    "get_locale_text": 1,
                    "get_localized_message": 3,
                    "get_localized_text": 1,
                    "get_translated_text": 2,
                    "get_translation": 1,
                    "gettext": 1
                },
                "exit": {
                    "end_program": 1,
                    "exit_program": 3,
                    "terminate_program": 5
                },
                "fprintf": {
                    "print_formatted_output": 1,
                    "print_to_file": 5,
                    "write_to_file": 2,
                    "write_to_output": 1
                },
                "fputc": {
                    "write_char": 1,
                    "write_character": 4,
                    "write_character_to_file": 3,
                    "write_character_to_output": 1
                },
                "free": {
                    "deallocate_memory": 2,
                    "free_memory": 1,
                    "release_memory": 6
                },
                "lVar1": {
                    "data_address": 1,
                    "default_format": 4,
                    "default_language_var": 1,
                    "default_output_style": 1,
                    "default_style": 3,
                    "default_target": 6,
                    "lang_var": 1,
                    "language_code": 2,
                    "language_id": 1,
                    "language_var": 1,
                    "language_version": 2,
                    "section_size": 2,
                    "supported_target_count": 1,
                    "target": 3,
                    "target_name": 1,
                    "target_size": 1
                },
                "main": {
                    "main": 1
                },
                "param_1": {
                    "file": 6,
                    "file_pointer": 1,
                    "output_file": 24
                },
                "param_2": {
                    "exit_code": 10,
                    "exit_status": 14,
                    "status": 7
                },
                "pcVar2": {
                    "format_string": 1,
                    "localized_string": 1,
                    "message": 20,
                    "message_string": 1,
                    "string": 1,
                    "text": 4,
                    "translated_text": 1,
                    "usage_message": 1,
                    "usage_string": 1
                },
                "plVar3": {
                    "curr_target": 1,
                    "current_target": 6,
                    "list_pointer": 1,
                    "ptr": 4,
                    "ptr_target": 1,
                    "ptr_to_target": 2,
                    "ptr_to_target_list": 1,
                    "target": 4,
                    "target_pointer": 2,
                    "target_ptr": 9
                }
            },
            "called": [
                "fprintf",
                "dcgettext",
                "free",
                "exit",
                "fputc",
                "bfd_target_list"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid display_binary_file_section_sizes_0010281b(FILE *output_file,int exit_status)\n\n{\n  long default_target;\n  char *message;\n  long *target_list;\n  long *target_ptr;\n  \n  default_target = DAT_00107350;\n  message = (char *)dcgettext(0,\"Usage: %s [option(s)] [file(s)]\\n\",5);\n  fprintf(output_file,message,default_target);\n  message = (char *)dcgettext(0,\" Displays the sizes of sections inside binary files\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\" If no input file(s) are specified, a.out is assumed\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \" The options are:\\n  -A|-B|-G  --format={sysv|berkeley|gnu}  Select output style (default is %s)\\n  -o|-d|-x  --radix={8|10|16}         Display numbers in octal, decimal or hex\\n  -t        --totals                  Display the total sizes (Berkeley only)\\n  -f                                  Ignored.\\n            --common                  Display total size for *COM* syms\\n            --target=<bfdname>        Set the binary file format\\n            @<file>                   Read options from <file>\\n  -h|-H|-?  --help                    Display this information\\n  -v|-V     --version                 Display the program\\'s version\\n\\n\"\n                             ,5);\n  fprintf(output_file,message,\"berkeley\");\n  default_target = DAT_00107350;\n  if (DAT_00107350 == 0) {\n    message = (char *)dcgettext(0,\"Supported targets:\",5);\n    fprintf(output_file,message);\n  }\n  else {\n    message = (char *)dcgettext(0,\"%s: supported targets:\",5);\n    fprintf(output_file,message,default_target);\n  }\n  target_list = (long *)bfd_target_list();\n  target_ptr = target_list;\n  while( true ) {\n    default_target = *target_ptr;\n    target_ptr = target_ptr + 1;\n    if (default_target == 0) break;\n    fprintf(output_file,\" %s\");\n  }\n  fputc(10,output_file);\n  free(target_list);\n  if (exit_status == 0) {\n    message = (char *)dcgettext(0,\"Report bugs to %s\\n\",5);\n    fprintf(output_file,message,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  terminate_program(exit_status);\n}\n\n",
            "current_name": "display_binary_file_section_sizes_0010281b",
            "entrypoint": "0x0010281b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010281b": "display_binary_file_section_sizes_0010281b",
                "__ptr": "target_list",
                "bfd_target_list": "get_target_list",
                "dcgettext": "get_localized_message",
                "exit": "terminate_program",
                "fprintf": "print_to_file",
                "fputc": "write_character",
                "free": "release_memory",
                "lVar1": "default_target",
                "param_1": "output_file",
                "param_2": "exit_status",
                "pcVar2": "message",
                "plVar3": "target_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102980": {
            "additional_data": {
                "DAT_00107314": {
                    "exit_flag": 1,
                    "flag": 2
                },
                "DAT_00107340": {
                    "bfd_open_flags": 1,
                    "flags": 1
                },
                "FUN_001023b6": {
                    "reverse_binary": 1
                },
                "FUN_00102980": {
                    "check_and_process_file": 1,
                    "check_file": 21,
                    "check_file_information": 1,
                    "check_file_properties": 1,
                    "check_file_stat": 2,
                    "check_file_status": 2,
                    "handle_file": 1,
                    "process_file": 2
                },
                "FUN_00102f40": {
                    "display_warning": 1,
                    "print_warning": 1
                },
                "bfd_openr": {
                    "open_binary_file": 1
                },
                "cVar1": {
                    "bfd_result": 1,
                    "check_result": 4,
                    "file_format": 1,
                    "file_format_check": 1,
                    "format_check": 9,
                    "format_check_result": 5,
                    "format_valid": 9
                },
                "dcgettext": {
                    "get_translated_text": 1
                },
                "iVar2": {
                    "result": 1,
                    "stat_result": 9,
                    "status": 21
                },
                "lVar6": {
                    "bfd_file": 3,
                    "bfd_file_handle": 1,
                    "bfd_file_ptr": 1,
                    "bfd_handle": 13,
                    "file_descriptor": 10,
                    "file_handle": 2,
                    "handle": 1
                },
                "param_1": {
                    "file_name": 1,
                    "file_path": 19,
                    "filename": 11
                },
                "pcVar5": {
                    "err_reason": 1,
                    "err_str": 1,
                    "error_message": 8,
                    "error_msg": 8,
                    "error_reason": 6,
                    "error_string": 2,
                    "reason": 1,
                    "str_error": 3,
                    "str_error_msg": 1
                },
                "piVar3": {
                    "err_no_location": 1,
                    "err_num_ptr": 2,
                    "errno_addr": 1,
                    "errno_loc": 2,
                    "errno_location": 4,
                    "errno_pointer": 2,
                    "errno_ptr": 8,
                    "error": 2,
                    "error_code": 2,
                    "error_number": 3,
                    "error_pointer": 1,
                    "error_ptr": 3
                },
                "sStack_b8": {
                    "file_info": 5,
                    "file_stat": 13,
                    "file_stats": 11
                },
                "stat": {
                    "get_stats": 1
                },
                "uVar4": {
                    "error_message": 10,
                    "error_msg": 3,
                    "error_msg_id": 1,
                    "localized_message": 4,
                    "localized_msg": 2,
                    "localized_text": 1,
                    "message": 2,
                    "translated_message": 1,
                    "translated_msg": 1,
                    "translated_string": 1,
                    "warning_message": 2,
                    "warning_msg": 1,
                    "warning_text": 1
                }
            },
            "called": [
                "bfd_openr",
                "FUN_00102360",
                "dcgettext",
                "FUN_001023b6",
                "FUN_00102f40",
                "stat",
                "bfd_check_format",
                "FUN_00102a40"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid check_file_status_00102980(char *file_path)\n\n{\n  char format_check;\n  int status;\n  int *errno_ptr;\n  undefined8 error_message;\n  char *error_msg;\n  long bfd_handle;\n  get_stats file_stat;\n  \n  if (file_path != (char *)0x0) {\n    status = get_stats(file_path,&file_stat);\n    if (status < 0) {\n      errno_ptr = __errno_location();\n      if (*errno_ptr == 2) {\n        error_message = dcgettext(0,\"\\'%s\\': No such file\",5);\n        FUN_00102f40(error_message,file_path);\n      }\n      else {\n        error_msg = strerror(*errno_ptr);\n        error_message = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n        FUN_00102f40(error_message,file_path,error_msg);\n      }\n    }\n    else if ((file_stat.st_mode & 0xf000) == 0x4000) {\n      error_message = dcgettext(0,\"Warning: \\'%s\\' is a directory\",5);\n      FUN_00102f40(error_message,file_path);\n    }\n    else if ((file_stat.st_mode & 0xf000) == 0x8000) {\n      if (file_stat.st_size < 0) {\n        error_message = dcgettext(0,\"Warning: \\'%s\\' has negative size, probably it is too large\",5);\n        FUN_00102f40(error_message,file_path);\n      }\n      else if (file_stat.st_size != 0) {\n        bfd_handle = bfd_openr(file_path,DAT_00107340);\n        if (bfd_handle != 0) {\n          format_check = bfd_check_format(bfd_handle,2);\n          if (format_check != '\\0') {\n            FUN_001023b6();\n            return;\n          }\n          FUN_00102a40(bfd_handle);\n          format_check = bfd_close(bfd_handle);\n          if (format_check != '\\0') {\n            return;\n          }\n        }\n        FUN_00103d20(file_path);\n        DAT_00107314 = 1;\n        return;\n      }\n    }\n    else {\n      error_message = dcgettext(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n      FUN_00102f40(error_message,file_path);\n    }\n  }\n  DAT_00107314 = 1;\n  return;\n}\n\n",
            "current_name": "check_file_status_00102980",
            "entrypoint": "0x00102980",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102980": "check_file_status_00102980",
                "bfd_openr": "open_binary_file",
                "cVar1": "format_check",
                "dcgettext": "get_translated_text",
                "iVar2": "status",
                "lVar6": "bfd_handle",
                "param_1": "file_path",
                "pcVar5": "error_msg",
                "piVar3": "errno_ptr",
                "sStack_b8": "file_stat",
                "stat": "get_stats",
                "uVar4": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102a40": {
            "additional_data": {
                "DAT_00107314": {
                    "binary_status": 2,
                    "data_flag": 1,
                    "data_value": 1,
                    "execution_state": 1,
                    "file_status": 1,
                    "process_status": 1,
                    "result": 2,
                    "result_status": 1,
                    "status": 4
                },
                "FUN_0010278c": {
                    "clean_up_format_matches": 1,
                    "execute_additional_processing": 1,
                    "handle_error": 1,
                    "handle_format": 2,
                    "handle_format_match": 2,
                    "handle_match": 1,
                    "handle_matching_format": 1,
                    "handle_matching_format_1": 1,
                    "perform_bfd_check_format_matches_operation": 1,
                    "process_bfd_format": 1,
                    "process_format": 3,
                    "process_matches": 1
                },
                "FUN_00102a40": {
                    "analyze_binary": 4,
                    "analyze_binary_file": 1,
                    "check_and_handle_bfd_file": 1,
                    "check_and_handle_binary": 1,
                    "check_and_print_binary_formats": 1,
                    "check_and_print_core_file_information": 1,
                    "check_and_print_info": 1,
                    "check_bfd_format": 1,
                    "check_binary": 2,
                    "check_binary_file": 1,
                    "check_binary_file_format": 1,
                    "check_binary_format": 5,
                    "check_file_and_print_info": 1,
                    "handle_binary_file": 1,
                    "identify_bfd_format": 1,
                    "identify_binary": 1,
                    "process_binary": 5,
                    "process_binary_file": 1,
                    "process_binary_format": 1
                },
                "FUN_00102a90": {
                    "analyze_core_file": 1,
                    "check_binary_format": 1,
                    "check_format_match": 1,
                    "handle_failed_bfd_check_format": 1,
                    "handle_invalid_format": 1,
                    "handle_matching_format_2": 1,
                    "handle_unknown_format": 1,
                    "handle_unsupported_format": 1,
                    "perform_additional_checks": 1,
                    "process_param": 1,
                    "reverse_bfd_format": 1,
                    "reverse_binary": 1,
                    "reverse_core_binary": 1
                },
                "FUN_00103d20": {
                    "cleanup_processing": 1,
                    "execute_processing": 1,
                    "handle_bfd_error": 2,
                    "handle_error": 5,
                    "handle_error_code": 1,
                    "handle_invalid_format": 1,
                    "perform_action_on_binary": 1,
                    "perform_bfd_check_format_operation": 1,
                    "perform_cleanup": 1,
                    "print_error": 1,
                    "process_error": 1
                },
                "__c": {
                    "character": 1
                },
                "_stdout": {
                    "output_stream": 1,
                    "standard_output": 13
                },
                "bfd_check_format": {
                    "check_binary_format": 1
                },
                "bfd_check_format_matches": {
                    "check_matching_formats": 1
                },
                "bfd_core_file_failing_command": {
                    "get_failing_command": 2
                },
                "bfd_get_error": {
                    "get_binary_error": 1
                },
                "cVar1": {
                    "check_result": 1,
                    "format_check": 2,
                    "format_check_passed": 2,
                    "format_check_result": 5,
                    "format_checked": 1,
                    "format_supported": 1,
                    "format_valid": 5,
                    "is_bfd_format_valid": 1,
                    "is_binary_valid": 1,
                    "is_elf": 1,
                    "is_valid_binary": 3,
                    "is_valid_format": 8
                },
                "fwrite": {
                    "write_data": 1,
                    "write_file": 1,
                    "write_string": 1,
                    "write_to_file": 1,
                    "write_to_stdout": 1,
                    "write_to_stream": 2
                },
                "iVar2": {
                    "bfd_error_code": 2,
                    "error_code": 28,
                    "error_num": 1
                },
                "lVar3": {
                    "command": 1,
                    "command_string": 1,
                    "failing_command": 26,
                    "failing_command_address": 1,
                    "failing_command_ptr": 1
                },
                "local_20": {
                    "file_formats": 1,
                    "format_check_results": 1,
                    "format_identifiers": 1,
                    "format_info": 1,
                    "format_match_results": 1,
                    "format_matches": 12,
                    "format_matches_array": 1,
                    "format_options_array": 1,
                    "format_patterns": 1,
                    "formats": 1,
                    "matched_formats": 1,
                    "matches": 3,
                    "matching_formats": 6
                },
                "param_1": {
                    "binary_data": 2,
                    "binary_file": 19,
                    "binary_file_ptr": 1,
                    "binary_path": 1,
                    "file_path": 1,
                    "file_ptr": 1,
                    "input": 1,
                    "input_binary": 1,
                    "input_file": 2
                },
                "printf": {
                    "print_formatted": 2
                },
                "putchar": {
                    "output_character": 1,
                    "print_character": 3,
                    "print_single_char": 1
                },
                "puts": {
                    "print_string": 2
                }
            },
            "called": [
                "bfd_check_format",
                "putchar",
                "FUN_00102a90",
                "FUN_001024d2",
                "bfd_check_format_matches"
            ],
            "calling": [
                "FUN_001023b6",
                "FUN_00102980"
            ],
            "code": "\n\n\nvoid check_binary_file_format_00102a40(undefined8 *binary_file)\n\n{\n  char is_valid_format;\n  int error_code;\n  long failing_command;\n  undefined8 format_matches [2];\n  \n  is_valid_format = bfd_check_format(binary_file,2);\n  if (is_valid_format == '\\0') {\n    is_valid_format = bfd_check_format_matches(binary_file,1,format_matches);\n    if (is_valid_format == '\\0') {\n      error_code = bfd_get_error();\n      if (error_code == 0xd) {\n        FUN_00103d20(*binary_file);\n        FUN_0010278c(format_matches[0]);\n        DAT_00107314 = 3;\n      }\n      else {\n        is_valid_format = bfd_check_format_matches(binary_file,3,format_matches);\n        if (is_valid_format == '\\0') {\n          FUN_00103d20(*binary_file);\n          error_code = bfd_get_error();\n          if (error_code == 0xd) {\n            FUN_0010278c(format_matches[0]);\n          }\n          DAT_00107314 = 3;\n        }\n        else {\n          FUN_00102a90(binary_file);\n          fwrite(\" (core file\",1,0xb,standard_output);\n          failing_command = bfd_core_file_failing_command(binary_file);\n          if (failing_command != 0) {\n            printf(\" invoked as %s\",failing_command);\n          }\n          puts(\")\\n\");\n        }\n      }\n    }\n    else {\n      FUN_00102a90(binary_file);\n      putchar(10);\n    }\n  }\n  return;\n}\n\n",
            "current_name": "check_binary_file_format_00102a40",
            "entrypoint": "0x00102a40",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102a40": "check_binary_file_format_00102a40",
                "_stdout": "standard_output",
                "bfd_check_format": "check_binary_format",
                "bfd_check_format_matches": "check_matching_formats",
                "bfd_core_file_failing_command": "get_failing_command",
                "bfd_get_error": "get_binary_error",
                "cVar1": "is_valid_format",
                "fwrite": "write_to_stream",
                "iVar2": "error_code",
                "lVar3": "failing_command",
                "local_20": "format_matches",
                "param_1": "binary_file",
                "printf": "print_formatted",
                "putchar": "print_character",
                "puts": "print_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102a90": {
            "additional_data": {
                "DAT_001072f0": {
                    "init_value": 1
                },
                "FUN_0010259c": {
                    "print_file_details": 1
                },
                "FUN_00102a90": {
                    "analyze_binary": 4,
                    "analyze_sections": 3,
                    "calculate_section_size": 4,
                    "calculate_section_sizes": 18,
                    "calculate_section_summary": 1,
                    "calculate_sections_size": 1
                },
                "FUN_00102d70": {
                    "iterate_and_accumulate_size": 1,
                    "size_callback": 1
                },
                "FUN_00102e50": {
                    "calculate_size": 2
                },
                "FUN_00102e90": {
                    "print_section_size": 1,
                    "print_size": 1
                },
                "FUN_00103c50": {
                    "iterate_and_print_section": 1,
                    "section_callback": 1
                },
                "FUN_00103cc0": {
                    "process_section": 1
                },
                "FUN_00103d20": {
                    "cleanup": 1,
                    "handle_error": 1
                },
                "_DAT_00107310": {
                    "flag": 1
                },
                "__ptr": {
                    "allocated_memory": 9,
                    "buffer": 2,
                    "buffer_pointer": 1,
                    "malloc_buffer": 1,
                    "memory": 1,
                    "memory_pointer": 1,
                    "pointer": 2,
                    "ptr": 8,
                    "section_pointer": 1,
                    "section_ptr": 1,
                    "section_sizes": 1,
                    "section_table": 1
                },
                "bVar10": {
                    "b_flag1": 1,
                    "bool_flag": 1,
                    "bool_var": 3,
                    "bool_var1": 4,
                    "bool_variable1": 1,
                    "boolean_variable1": 2,
                    "boolean_variable_b_var10": 1,
                    "check": 1,
                    "condition": 1,
                    "has_section": 1,
                    "has_section2": 1,
                    "is_data_present": 1,
                    "is_loop_condition_true": 1,
                    "is_looping": 1,
                    "is_non_zero": 1,
                    "is_nonzero": 1,
                    "is_not_empty": 1,
                    "is_not_zero": 2,
                    "is_section_flag_set": 1,
                    "loop_condition": 2,
                    "loop_flag1": 1,
                    "section_exists": 1,
                    "temp_bool1": 1
                },
                "bVar11": {
                    "b_flag2": 1,
                    "bool_flag2": 1,
                    "bool_var2": 6,
                    "bool_var_temp": 1,
                    "bool_variable2": 1,
                    "boolean_variable2": 2,
                    "boolean_variable_b_var11": 1,
                    "check2": 1,
                    "condition2": 1,
                    "first_entry": 1,
                    "first_section": 1,
                    "flag2": 1,
                    "is_first_iteration": 2,
                    "is_first_loop": 1,
                    "is_first_time": 2,
                    "is_new_section": 1,
                    "is_zero": 4,
                    "loop_flag2": 1,
                    "temp_bool2": 1,
                    "unused_var5": 1
                },
                "bfd_map_over_sections": {
                    "iterate_sections": 2
                },
                "cVar5": {
                    "char_var": 2,
                    "character_variable": 1,
                    "check_var": 1,
                    "flag": 9,
                    "flag_c_var5": 1,
                    "flag_variable": 1,
                    "found_flag": 1,
                    "found_section": 1,
                    "has_changed": 1,
                    "has_changes": 1,
                    "has_executable_section": 1,
                    "has_match": 1,
                    "has_section": 1,
                    "is_section_data_found": 1,
                    "is_section_present": 1,
                    "is_size_calculated": 1,
                    "section_flag": 3,
                    "set_flag": 1,
                    "temp_char1": 1,
                    "var2": 1
                },
                "extraout_RDX": {
                    "exit_code": 2,
                    "extra": 2,
                    "extra_data": 1,
                    "extra_info": 1,
                    "extra_out_rdx": 1,
                    "extra_output": 1,
                    "extra_output1": 3,
                    "extra_output_rdx": 3,
                    "extra_output_register_rdx": 1,
                    "extra_value1": 1,
                    "extraout_var1": 1,
                    "modx": 1,
                    "result": 1,
                    "return_val": 1,
                    "temp_extra1": 1,
                    "temporary_value": 1,
                    "total_sections": 1,
                    "unused_extraout_rdx": 1,
                    "unused_variable1": 2
                },
                "extraout_RDX_00": {
                    "exit_code": 1,
                    "exit_code1": 1,
                    "extra": 1,
                    "extra1": 2,
                    "extra_data2": 1,
                    "extra_out_rdx": 1,
                    "extra_output2": 4,
                    "extra_output_rdx00": 1,
                    "extra_output_rdx_00": 2,
                    "extra_output_register_rdx_00": 1,
                    "extra_value2": 1,
                    "extraout_var2": 1,
                    "lvar2_temp": 1,
                    "modx1": 1,
                    "result": 1,
                    "result_2": 1,
                    "section_length_extraout_rdx": 1,
                    "temp_extra2": 1,
                    "temporary_value2": 1,
                    "unused_variable2": 2
                },
                "extraout_RDX_01": {
                    "ex_str": 1,
                    "extra": 1,
                    "extra2": 2,
                    "extra_data3": 1,
                    "extra_info": 2,
                    "extra_out_rdx2": 1,
                    "extra_output3": 4,
                    "extra_output_rdx01": 1,
                    "extra_output_rdx_01": 2,
                    "extra_output_register_rdx_01": 1,
                    "extra_value3": 1,
                    "extraout_var3": 1,
                    "modx2": 1,
                    "printf_extraout_rdx": 1,
                    "result_3": 1,
                    "return_val_temp": 1,
                    "temp_extra3": 1,
                    "temporary_value3": 1,
                    "unused_variable3": 2
                },
                "fputs": {
                    "write_to_file": 1
                },
                "free": {
                    "deallocate": 1,
                    "deallocate_memory": 1
                },
                "iVar4": {
                    "character": 1,
                    "count": 1,
                    "counter": 2,
                    "format_specifier": 1,
                    "i": 3,
                    "index": 4,
                    "int_var": 1,
                    "integer_variable1": 1,
                    "iteration_var": 1,
                    "iteration_variable": 1,
                    "iterator": 1,
                    "loop_counter": 4,
                    "loop_counter_i_var4": 1,
                    "loop_variable": 1,
                    "result": 2,
                    "secondary_variable": 1,
                    "temp_var2": 1,
                    "temp_var4": 1,
                    "unused_var2": 1,
                    "var1": 1
                },
                "iVar8": {
                    "alignment": 1,
                    "counter": 2,
                    "counter_2": 1,
                    "counter_i_var8": 1,
                    "i_var": 1,
                    "i_var8": 1,
                    "indent_size": 2,
                    "indentation": 4,
                    "indentation_level": 2,
                    "int_value": 2,
                    "int_var2": 1,
                    "integer_variable": 2,
                    "integer_variable2": 1,
                    "length": 1,
                    "loop_index": 1,
                    "section_count": 1,
                    "section_index": 1,
                    "string_counter": 1,
                    "temp_var3": 1,
                    "temp_var5": 1,
                    "unused_var4": 1,
                    "var1": 1,
                    "var3": 1
                },
                "lVar1": {
                    "current_section": 2,
                    "current_section_size": 1,
                    "file_size": 1,
                    "loop_counter": 1,
                    "section_address": 2,
                    "section_index": 1,
                    "section_length": 1,
                    "section_offset": 1,
                    "section_pointer": 2,
                    "section_size": 10,
                    "section_start": 1,
                    "size": 1,
                    "temp_long1": 1,
                    "temp_value": 1,
                    "temp_var1": 2,
                    "tmp_var1": 1,
                    "total_size": 1,
                    "value": 1
                },
                "lVar2": {
                    "current_size": 1,
                    "section_size": 1,
                    "size": 1,
                    "temp_long2": 1,
                    "temp_value2": 1,
                    "temp_var2": 2,
                    "total_section_size": 4,
                    "total_size": 19
                },
                "lVar9": {
                    "count": 2,
                    "counter": 1,
                    "file_size": 1,
                    "iterate_var": 1,
                    "length": 1,
                    "long_var": 1,
                    "long_variable": 2,
                    "loop_var": 3,
                    "loop_variable1": 1,
                    "num_sections": 1,
                    "section_count": 4,
                    "section_index": 1,
                    "size": 2,
                    "size_counter": 1,
                    "size_l_var9": 1,
                    "temp_long3": 1,
                    "temp_value3": 1,
                    "temp_var4": 1,
                    "temp_var6": 1,
                    "total_size": 1,
                    "value_2": 1,
                    "var2": 1,
                    "var9": 1
                },
                "param_1": {
                    "args": 1,
                    "arguments": 6,
                    "binary_file_path": 1,
                    "binary_files": 1,
                    "binary_sections": 1,
                    "command_line_args": 1,
                    "filename": 1,
                    "param": 1,
                    "parameters": 13,
                    "params": 2,
                    "section_info_ptr": 1,
                    "sections": 2
                },
                "pcVar7": {
                    "char_pointer_var": 1,
                    "char_ptr_var": 2,
                    "character_pointer_variable": 1,
                    "file_description": 1,
                    "file_info": 1,
                    "file_name": 1,
                    "file_section": 1,
                    "format_specifier": 1,
                    "format_str": 1,
                    "pointer_variable2": 1,
                    "pointer_variable_pc_var7": 1,
                    "print_var": 1,
                    "print_variable": 1,
                    "printf_format": 1,
                    "ptr_text": 1,
                    "section_header": 1,
                    "section_name": 2,
                    "str": 2,
                    "str_val": 1,
                    "string": 2,
                    "string_pointer": 1,
                    "string_var": 1,
                    "temp_char_ptr": 1,
                    "temp_string_ptr": 1,
                    "text": 1,
                    "text_info": 1,
                    "unused_var3": 1
                },
                "printf": {
                    "print_formatted": 2
                },
                "puVar12": {
                    "data_pointer": 1,
                    "format_specifier": 2,
                    "line": 1,
                    "output_pointer": 1,
                    "padding": 3,
                    "padding_str": 1,
                    "pointer": 2,
                    "pointer3": 1,
                    "pointer_var2": 2,
                    "pointer_variable": 1,
                    "pointer_variable2": 1,
                    "pointer_variable3": 1,
                    "pointer_variable_pu_var12": 1,
                    "print_label": 1,
                    "print_var": 1,
                    "ptr2": 1,
                    "ptr_3": 1,
                    "ptr_var": 1,
                    "ptr_var2": 3,
                    "pu_var12": 1,
                    "section_title": 1,
                    "separator": 1,
                    "string_pointer": 1,
                    "temp_ptr1": 1
                },
                "putc": {
                    "print_character": 1,
                    "write_character": 1
                },
                "puts": {
                    "print_string": 2
                },
                "pvVar6": {
                    "allocated_memory": 2,
                    "memory_pointer2": 1,
                    "pointer2": 1,
                    "pointer_var": 3,
                    "pointer_variable": 1,
                    "pointer_variable1": 1,
                    "pointer_variable_pv_var6": 1,
                    "ptr": 2,
                    "ptr2": 1,
                    "ptr_2": 1,
                    "ptr_value": 1,
                    "ptr_var": 3,
                    "section_data": 2,
                    "section_pointer": 1,
                    "section_ptr": 1,
                    "temp_pointer": 3,
                    "temp_ptr": 3,
                    "temp_var": 1,
                    "temp_variable": 1,
                    "temporary_memory": 1
                },
                "uVar3": {
                    "extra_info": 3,
                    "filename": 1,
                    "output": 1,
                    "output_variable": 2,
                    "output_variable_u_var3": 1,
                    "param": 1,
                    "print_value": 1,
                    "printf_extraout_rdx": 1,
                    "result": 3,
                    "return_value": 3,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "temp_var3": 2,
                    "u_var": 1,
                    "undefined_var": 1,
                    "undefined_variable": 1,
                    "unknown_variable": 1,
                    "unused_var": 1,
                    "unused_variable4": 2,
                    "variable": 1
                },
                "xexit": {
                    "exit_program": 2
                },
                "xmalloc": {
                    "allocate_memory": 2
                }
            },
            "called": [
                "FUN_00102fe0",
                "xexit",
                "FUN_0010259c",
                "fputs",
                "free",
                "putc",
                "FUN_00103cc0",
                "puts",
                "FUN_00103d20",
                "printf",
                "bfd_map_over_sections",
                "FUN_00102e90",
                "xmalloc",
                "FUN_00103c50",
                "FUN_00102d70",
                "FUN_00102e50"
            ],
            "calling": [
                "FUN_00102a40",
                "FUN_001024d2"
            ],
            "code": "\n\n\nvoid calculate_section_sizes_00102a90(char **parameters)\n\n{\n  long section_size;\n  undefined8 extra_output_rdx;\n  long total_size;\n  long extra_output2;\n  undefined8 extra_output3;\n  undefined8 result;\n  void *allocated_memory;\n  int index;\n  char flag;\n  void *ptr_var;\n  char *str;\n  int indentation;\n  long section_count;\n  bool bool_var1;\n  bool bool_var2;\n  undefined *padding;\n  \n  if ((_DAT_00107310 == 0) || (DAT_001072f0 = 0, (*(uint *)((long)parameters + 0x44) & 0x52) != 0x10))\n  goto LAB_00102aa8;\n  section_count = (**(code **)(parameters[1] + 0x1f8))();\n  if (section_count < 0) {\n    FUN_00103d20(*parameters);\n    xexit(1);\nLAB_001026b4:\n    allocated_memory = (void *)xmalloc();\n  }\n  else {\n    allocated_memory = (void *)0x0;\n    if (section_count != 0) goto LAB_001026b4;\n  }\n  ptr_var = allocated_memory;\n  section_count = (**(code **)(parameters[1] + 0x200))(parameters);\n  flag = (char)ptr_var;\n  if (section_count < 0) {\n    FUN_00103d20(*parameters);\n    xexit(1);\n    total_size = extra_output2;\n  }\n  else {\n    flag = '\\0';\n    total_size = DAT_001072f0;\n    while (bool_var1 = section_count != 0, section_count = section_count + -1, bool_var1) {\n      section_size = *(long *)((long)allocated_memory + section_count * 8);\n      if (((*(byte *)(*(long *)(section_size + 0x20) + 0x25) & 0x10) != 0) &&\n         ((*(byte *)(section_size + 0x19) & 1) == 0)) {\n        total_size = total_size + *(long *)(section_size + 0x10);\n        flag = '\\x01';\n      }\n    }\n  }\n  if (flag != '\\0') {\n    DAT_001072f0 = total_size;\n  }\n  free(allocated_memory);\nLAB_00102aa8:\n  if (DAT_00107348 == 1) {\n    DAT_001072e0 = 0;\n    DAT_001072d8 = 0;\n    DAT_001072d0 = 0;\n    bfd_map_over_sections(parameters,FUN_00103c50,0);\n    if (_DAT_00107310 != 0) {\n      if ((int)DAT_001072d0 < 5) {\n        DAT_001072d0 = 5;\n      }\n      DAT_001072e0 = DAT_001072e0 + DAT_001072f0;\n    }\n    DAT_001072cc = FUN_00102e50(DAT_001072d8);\n    if (DAT_001072cc < 4) {\n      DAT_001072cc = 4;\n    }\n    DAT_001072c8 = FUN_00102e50();\n    if (DAT_001072c8 < 4) {\n      DAT_001072c8 = 4;\n    }\n    DAT_001072e0 = 0;\n    printf(\"%s  \",*parameters);\n    result = extra_output3;\n    if ((undefined8 *)parameters[0x1d] != (undefined8 *)0x0) {\n      printf(\" (ex %s)\",*(undefined8 *)parameters[0x1d]);\n      result = extra_output_rdx;\n    }\n    padding = &DAT_001040fc;\n    printf(\":\\n%-*s   %*s   %*s\\n\",(ulong)DAT_001072d0,\"section\",(ulong)DAT_001072c8,&DAT_00104067,\n           (ulong)DAT_001072cc,&DAT_001040fc,result);\n    bfd_map_over_sections(parameters,FUN_00103cc0,0);\n    if (_DAT_00107310 != 0) {\n      DAT_001072e0 = DAT_001072e0 + DAT_001072f0;\n      FUN_00102fe0(\"*COM*\",DAT_001072f0,0,padding);\n    }\n    printf(\"%-*s   \",(ulong)DAT_001072d0,\"Total\");\n    FUN_00102e90(DAT_001072c8,DAT_001072e0);\n    puts(\"\\n\");\n    return;\n  }\n  indentation = (-(uint)(DAT_00107348 == 0) & 0xfffffffd) + 10;\n  bool_var1 = DAT_00107348 == 0;\n  DAT_00107308 = 0;\n  DAT_00107300 = 0;\n  DAT_001072f8 = 0;\n  bfd_map_over_sections(parameters,FUN_00102d70,0);\n  DAT_00107308 = DAT_00107308 + DAT_001072f0;\n  index = DAT_001072e8 + 1;\n  bool_var2 = DAT_001072e8 == 0;\n  DAT_001072e8 = index;\n  if (bool_var2) {\n    if (DAT_00107348 == 0) {\n      str = \"   text\\t   data\\t    bss\\t    dec\\t    hex\\tfilename\";\n      if (DAT_0010733c == 1) {\n        str = \"   text\\t   data\\t    bss\\t    oct\\t    hex\\tfilename\";\n      }\n      puts(str);\n    }\n    else {\n      puts(\"      text       data        bss      total filename\");\n    }\n  }\n  section_count = DAT_001072f8 + DAT_00107300 + DAT_00107308;\n  if (_DAT_00107334 != 0) {\n    DAT_00107328 = DAT_00107328 + DAT_001072f8;\n    DAT_00107320 = DAT_00107320 + DAT_00107300;\n    DAT_00107318 = DAT_00107318 + DAT_00107308;\n  }\n  index = (int)(char)((-bool_var1 & 0xe9U) + 0x20);\n  FUN_00102e90(indentation);\n  putc(index,_stdout);\n  FUN_00102e90(indentation,DAT_00107300);\n  putc(index,_stdout);\n  FUN_00102e90(indentation,DAT_00107308);\n  putc(index,_stdout);\n  if (DAT_00107348 == 0) {\n    str = \"%7lu\\t%7lx\";\n    if (DAT_0010733c == 1) {\n      str = \"%7lo\\t%7lx\";\n    }\n    printf(str,section_count,section_count);\n  }\n  else {\n    FUN_00102e90(indentation,section_count);\n  }\n  putc(index,_stdout);\n  fputs(*parameters,_stdout);\n  if ((undefined8 *)parameters[0x1d] == (undefined8 *)0x0) {\n    return;\n  }\n  printf(\" (ex %s)\",*(undefined8 *)parameters[0x1d]);\n  return;\n}\n\n",
            "current_name": "calculate_section_sizes_00102a90",
            "entrypoint": "0x00102a90",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102a90": "calculate_section_sizes_00102a90",
                "__ptr": "allocated_memory",
                "bVar10": "bool_var1",
                "bVar11": "bool_var2",
                "bfd_map_over_sections": "iterate_sections",
                "cVar5": "flag",
                "extraout_RDX": "extra_output_rdx",
                "extraout_RDX_00": "extra_output2",
                "extraout_RDX_01": "extra_output3",
                "fputs": "write_to_file",
                "free": "deallocate",
                "iVar4": "index",
                "iVar8": "indentation",
                "lVar1": "section_size",
                "lVar2": "total_size",
                "lVar9": "section_count",
                "param_1": "parameters",
                "pcVar7": "str",
                "printf": "print_formatted",
                "puVar12": "padding",
                "putc": "write_character",
                "puts": "print_string",
                "pvVar6": "ptr_var",
                "uVar3": "result",
                "xexit": "exit_program",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102d70": {
            "additional_data": {
                "FUN_00102d70": {
                    "accumulate_function": 1,
                    "adjust_data": 1,
                    "increase_value_based_on_flag": 1,
                    "process_data": 1,
                    "update_counts": 1,
                    "update_data": 23,
                    "update_data_based_on_flags": 1,
                    "update_metric": 1,
                    "update_value_based_on_flags": 1
                },
                "lVar2": {
                    "data_value": 3,
                    "metric_value": 1,
                    "offset": 5,
                    "value": 18,
                    "value_to_add": 4
                },
                "param_1": {
                    "arg1": 3,
                    "arg_1": 1,
                    "data": 2,
                    "param": 4,
                    "param1": 15,
                    "param_1": 5,
                    "target": 1
                },
                "param_2": {
                    "address": 1,
                    "arg2": 3,
                    "arg_2": 1,
                    "data": 7,
                    "data_ptr": 1,
                    "data_struct": 1,
                    "param2": 15,
                    "param_2": 1,
                    "pointer": 1
                },
                "uVar1": {
                    "data_flag": 3,
                    "data_value": 1,
                    "flag": 6,
                    "flags": 19,
                    "metric_flags": 1,
                    "status": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\nvoid update_data_based_on_flags_00102d70(undefined8 param1,long param2)\n\n{\n  uint flags;\n  long value;\n  \n  flags = *(uint *)(param2 + 0x24);\n  if ((flags & 1) != 0) {\n    value = *(long *)(param2 + 0x40);\n    if (((flags & 0x10) != 0) || ((DAT_00107348 == 0 && ((flags & 8) != 0)))) {\n      DAT_001072f8 = DAT_001072f8 + value;\n      return;\n    }\n    if ((flags & 0x100) != 0) {\n      DAT_00107300 = DAT_00107300 + value;\n      return;\n    }\n    DAT_00107308 = DAT_00107308 + value;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_based_on_flags_00102d70",
            "entrypoint": "0x00102d70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102d70": "update_data_based_on_flags_00102d70",
                "lVar2": "value",
                "param_1": "param1",
                "param_2": "param2",
                "uVar1": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102db0": {
            "additional_data": {
                "DAT_0010733c": {
                    "conversion_type": 1,
                    "data_variable": 1,
                    "format_specifier": 1,
                    "global_variable": 1
                },
                "FUN_00102db0": {
                    "calculate_length": 1,
                    "convert_and_print_number": 1,
                    "decode_and_print_result": 1,
                    "decode_and_print_value": 1,
                    "format_and_display_number": 1,
                    "format_and_print": 3,
                    "format_and_print_number": 3,
                    "format_and_print_value": 1,
                    "process_data": 3,
                    "reverse_and_format": 1,
                    "reverse_and_format_data": 1,
                    "reverse_and_print": 1,
                    "reverse_and_print_number": 2,
                    "reverse_and_print_value": 2,
                    "reverse_decompiled_code": 1
                },
                "FUN_00102ee0": {
                    "perform_some_action": 1,
                    "reverse_string": 1
                },
                "__format": {
                    "format_specifier": 5,
                    "format_str": 2,
                    "format_string": 21
                },
                "_format": {
                    "format_string": 1
                },
                "acStack_110": {
                    "char_stack": 1,
                    "formatted_number": 4,
                    "formatted_output": 2,
                    "formatted_string": 2,
                    "number_string": 1,
                    "output": 1,
                    "output_buffer": 4,
                    "output_str": 1,
                    "output_string": 7,
                    "print_buffer": 1,
                    "result_buffer": 1,
                    "result_string": 4,
                    "stack_buffer": 1,
                    "string_buffer": 1
                },
                "in_AL": {
                    "binary_flag": 1,
                    "boolean_flag": 1,
                    "character_condition": 1,
                    "character_value": 1,
                    "condition": 3,
                    "condition_flag": 1,
                    "condition_met": 1,
                    "condition_variable": 1,
                    "enable_hex_string": 1,
                    "flag": 6,
                    "input_flag": 2,
                    "is_condition_met": 1,
                    "is_condition_true": 1,
                    "is_decimal": 2,
                    "is_hex_format": 1,
                    "is_true": 1,
                    "some_char": 1
                },
                "local_18": {
                    "condition8": 1,
                    "copy_of_input8": 1,
                    "decimal_part8_copy": 1,
                    "eighth_local_variable": 1,
                    "flag8_copy": 1,
                    "input8_copy": 2,
                    "input8_modified": 1,
                    "input_8_copy": 1,
                    "input_param8_copy": 1,
                    "integer_param8_copy": 1,
                    "local_18": 1,
                    "local_arg8": 1,
                    "local_input_8": 1,
                    "local_int_8": 1,
                    "local_int_value10": 1,
                    "local_param8": 1,
                    "number8": 1,
                    "number8_copy": 1,
                    "param14": 1,
                    "param_8": 1,
                    "param_8_copy": 1,
                    "saved_param8": 2,
                    "some_param8_copy": 1,
                    "value8_on_stack": 1,
                    "value_8_copy": 1,
                    "var8": 1
                },
                "local_28": {
                    "condition7": 1,
                    "copy_of_input7": 1,
                    "decimal_part7_copy": 1,
                    "flag7_copy": 1,
                    "input7_copy": 2,
                    "input7_modified": 1,
                    "input_7_copy": 1,
                    "input_param7_copy": 1,
                    "integer_param7_copy": 1,
                    "local_28": 1,
                    "local_arg7": 1,
                    "local_input_7": 1,
                    "local_int_7": 1,
                    "local_int_value9": 1,
                    "local_param7": 1,
                    "number7": 1,
                    "number7_copy": 1,
                    "param13": 1,
                    "param_7": 1,
                    "param_7_copy": 1,
                    "saved_param7": 2,
                    "seventh_local_variable": 1,
                    "some_param7_copy": 1,
                    "value7_on_stack": 1,
                    "value_7_copy": 1,
                    "var7": 1
                },
                "local_38": {
                    "condition6": 1,
                    "copy_of_input6": 1,
                    "decimal_part6_copy": 1,
                    "flag6_copy": 1,
                    "input6_copy": 2,
                    "input6_modified": 1,
                    "input_6_copy": 1,
                    "input_param6_copy": 1,
                    "integer_param6_copy": 1,
                    "local_38": 1,
                    "local_arg6": 1,
                    "local_input_6": 1,
                    "local_int_6": 1,
                    "local_int_value8": 1,
                    "local_param6": 1,
                    "number6": 1,
                    "number6_copy": 1,
                    "param12": 1,
                    "param_6": 1,
                    "param_6_copy": 1,
                    "saved_param6": 2,
                    "sixth_local_variable": 1,
                    "some_param6_copy": 1,
                    "value6_on_stack": 1,
                    "value_6_copy": 1,
                    "var6": 1
                },
                "local_48": {
                    "condition5": 1,
                    "copy_of_input5": 1,
                    "decimal_part5_copy": 1,
                    "fifth_local_variable": 1,
                    "flag5_copy": 1,
                    "input5_copy": 2,
                    "input5_modified": 1,
                    "input_5_copy": 1,
                    "input_param5_copy": 1,
                    "integer_param5_copy": 1,
                    "local_48": 1,
                    "local_arg5": 1,
                    "local_input_5": 1,
                    "local_int_5": 1,
                    "local_int_value7": 1,
                    "local_param5": 1,
                    "number5": 1,
                    "number5_copy": 1,
                    "param11": 1,
                    "param_5": 1,
                    "param_5_copy": 1,
                    "saved_param5": 2,
                    "some_param5_copy": 1,
                    "value5_on_stack": 1,
                    "value_5_copy": 1,
                    "var5": 1
                },
                "local_58": {
                    "binary_val": 1,
                    "condition4": 1,
                    "copy_of_input4": 1,
                    "decimal_part4_copy": 1,
                    "flag4_copy": 1,
                    "fourth_local_variable": 1,
                    "input4_copy": 2,
                    "input4_modified": 1,
                    "input_4_copy": 1,
                    "input_param4_copy": 1,
                    "integer_param4_copy": 1,
                    "local_58": 1,
                    "local_arg4": 1,
                    "local_input_4": 1,
                    "local_int_4": 1,
                    "local_int_value6": 1,
                    "local_param4": 1,
                    "number4": 1,
                    "number4_copy": 1,
                    "param10": 1,
                    "param_4_copy": 1,
                    "saved_param4": 2,
                    "some_param4_copy": 1,
                    "value4_on_stack": 1,
                    "value_4_copy": 1,
                    "var4": 1
                },
                "local_68": {
                    "condition3": 1,
                    "copy_of_input3": 1,
                    "decimal_part3_copy": 1,
                    "flag3_copy": 1,
                    "hex_format_flag": 1,
                    "hex_val": 1,
                    "hexadecimal_value_local": 1,
                    "input3_copy": 2,
                    "input3_modified": 1,
                    "input_3_copy": 1,
                    "input_param3_copy": 1,
                    "integer_param3_copy": 1,
                    "local_arg3": 1,
                    "local_input_3": 1,
                    "local_int_3": 1,
                    "local_int_value5": 1,
                    "local_param3": 1,
                    "number3": 1,
                    "number3_copy": 1,
                    "param9": 1,
                    "saved_param3": 2,
                    "some_param3_copy": 1,
                    "third_local_variable": 1,
                    "value3_on_stack": 1,
                    "value_3_copy": 1,
                    "var3": 1
                },
                "local_78": {
                    "condition2": 1,
                    "copy_of_input2": 1,
                    "decimal_part2_copy": 1,
                    "flag2_copy": 1,
                    "input2_copy": 2,
                    "input2_modified": 1,
                    "input_2_copy": 1,
                    "input_param2_copy": 1,
                    "integer_param2_copy": 1,
                    "local_arg2": 1,
                    "local_input_2": 1,
                    "local_int_2": 1,
                    "local_int_value4": 1,
                    "local_param2": 1,
                    "number2": 1,
                    "number2_copy": 1,
                    "octal_format_flag": 1,
                    "octal_val": 1,
                    "octal_value_local": 1,
                    "param8": 1,
                    "saved_param2": 2,
                    "second_local_variable": 1,
                    "some_param2_copy": 1,
                    "value2_on_stack": 1,
                    "value_2_copy": 1,
                    "var2": 1
                },
                "local_88": {
                    "condition1": 1,
                    "copy_of_input1": 1,
                    "decimal_format_flag": 1,
                    "decimal_part1_copy": 1,
                    "decimal_val": 1,
                    "decimal_value_local": 1,
                    "first_local_variable": 1,
                    "flag1_copy": 1,
                    "input1_copy": 2,
                    "input1_modified": 1,
                    "input_1_copy": 1,
                    "input_param1_copy": 1,
                    "integer_param1_copy": 1,
                    "local_arg1": 1,
                    "local_input_1": 1,
                    "local_int_1": 1,
                    "local_int_value3": 1,
                    "local_param1": 1,
                    "number1": 1,
                    "number1_copy": 1,
                    "param7": 1,
                    "saved_param1": 2,
                    "some_param1_copy": 1,
                    "value1_on_stack": 1,
                    "value_1_copy": 1,
                    "var1": 1
                },
                "local_90": {
                    "buffer6": 1,
                    "converted_val5": 1,
                    "local_data6": 1,
                    "local_long_5": 1,
                    "local_long_value5": 1,
                    "local_param5": 1,
                    "local_param_14": 1,
                    "num_var6": 1,
                    "number6": 1,
                    "number6_copy": 1,
                    "param14": 1,
                    "param14_copy": 3,
                    "param5_copy": 1,
                    "param6": 1,
                    "param6_copy": 1,
                    "param6_modified": 1,
                    "param6_value": 1,
                    "param_14": 1,
                    "param_14_copy": 4,
                    "param_14_on_stack": 1,
                    "pointer11": 1,
                    "some_param14_copy": 1,
                    "value14": 1
                },
                "local_98": {
                    "buffer5": 1,
                    "converted_val4": 1,
                    "local_data5": 1,
                    "local_long_4": 1,
                    "local_long_value4": 1,
                    "local_param4": 1,
                    "local_param_13": 1,
                    "num_var5": 1,
                    "number5": 1,
                    "number5_copy": 1,
                    "param13": 1,
                    "param13_copy": 3,
                    "param4_copy": 1,
                    "param5": 1,
                    "param5_copy": 1,
                    "param5_modified": 1,
                    "param5_value": 1,
                    "param_13": 1,
                    "param_13_copy": 4,
                    "param_13_on_stack": 1,
                    "pointer10": 1,
                    "some_param13_copy": 1,
                    "value13": 1
                },
                "local_a0": {
                    "buffer4": 1,
                    "converted_val3": 1,
                    "local_data4": 1,
                    "local_long_3": 1,
                    "local_long_value3": 1,
                    "local_param3": 1,
                    "local_param_12": 1,
                    "num_var4": 1,
                    "number4": 1,
                    "number4_copy": 1,
                    "param12": 1,
                    "param12_copy": 3,
                    "param3_copy": 1,
                    "param4": 1,
                    "param4_copy": 1,
                    "param4_modified": 1,
                    "param4_value": 1,
                    "param_12": 1,
                    "param_12_copy": 4,
                    "param_12_on_stack": 1,
                    "pointer9": 1,
                    "some_param12_copy": 1,
                    "value12": 1
                },
                "local_a8": {
                    "buffer3": 1,
                    "converted_val2": 1,
                    "local_data3": 1,
                    "local_long_2": 1,
                    "local_long_value2": 1,
                    "local_param2": 1,
                    "local_param_11": 1,
                    "num_var3": 1,
                    "number3": 1,
                    "number3_copy": 1,
                    "param11": 1,
                    "param11_copy": 3,
                    "param2_copy": 1,
                    "param3": 1,
                    "param3_copy": 1,
                    "param3_modified": 1,
                    "param3_value": 1,
                    "param_11": 1,
                    "param_11_copy": 4,
                    "param_11_on_stack": 1,
                    "pointer8": 1,
                    "some_param11_copy": 1,
                    "value11": 1
                },
                "local_b0": {
                    "buffer2": 1,
                    "converted_val1": 1,
                    "local_data2": 1,
                    "local_long_1": 1,
                    "local_long_value1": 1,
                    "local_param1": 1,
                    "local_param_10": 1,
                    "num_var2": 1,
                    "number2": 1,
                    "number2_copy": 1,
                    "param10": 1,
                    "param10_copy": 3,
                    "param1_copy": 1,
                    "param2": 1,
                    "param2_copy": 1,
                    "param2_modified": 1,
                    "param2_value": 1,
                    "param_10": 1,
                    "param_10_copy": 4,
                    "param_10_on_stack": 1,
                    "pointer7": 1,
                    "some_param10_copy": 1,
                    "value10": 1
                },
                "local_b8": {
                    "buffer": 4,
                    "buffer1": 1,
                    "local_array": 4,
                    "local_array1": 1,
                    "local_array_3": 1,
                    "local_b8": 2,
                    "local_buf": 1,
                    "local_buffer": 9,
                    "local_data": 1,
                    "stack_buffer": 2,
                    "temporary_buffer": 2,
                    "unused_buffer": 1
                },
                "local_c8": {
                    "buffer": 7,
                    "buffer_pointer": 1,
                    "local_array_2": 1,
                    "local_buf_ptr": 1,
                    "local_buffer": 7,
                    "local_buffer_ptr": 1,
                    "local_bytes": 1,
                    "local_c8": 1,
                    "local_pointer2": 1,
                    "local_ptr2": 1,
                    "local_var3": 1,
                    "local_variable3": 1,
                    "pointer2": 3,
                    "stack_buffer": 1
                },
                "local_d0": {
                    "address": 1,
                    "buffer_pointer": 1,
                    "buffer_ptr": 1,
                    "format_specifier": 1,
                    "local_array_1": 1,
                    "local_buffer": 1,
                    "local_d0": 1,
                    "local_pointer": 1,
                    "local_pointer1": 1,
                    "local_ptr1": 1,
                    "local_var2": 1,
                    "local_variable2": 1,
                    "pointer": 3,
                    "pointer1": 3,
                    "pointer_to_byte": 1,
                    "ptr_bytes": 1,
                    "stack_pointer": 4,
                    "stack_ptr": 1,
                    "va_list_ptr": 1
                },
                "local_d4": {
                    "buffer_size": 1,
                    "format_flag": 1,
                    "length": 3,
                    "local_d4": 1,
                    "local_int_value2": 1,
                    "local_size2": 1,
                    "local_var1": 1,
                    "local_variable1": 1,
                    "local_variable_2": 1,
                    "num_digits": 1,
                    "size2": 1,
                    "stack_size": 1,
                    "start_index": 1,
                    "string_length": 1
                },
                "local_d8": {
                    "array_size": 1,
                    "buffer_length": 1,
                    "buffer_size": 7,
                    "byte_count": 1,
                    "format_length": 1,
                    "format_specifier_length": 1,
                    "length": 4,
                    "local_counter": 1,
                    "local_int_value1": 1,
                    "local_size1": 1,
                    "local_variable_1": 1,
                    "num_bytes": 1,
                    "size": 6,
                    "size1": 1,
                    "stack_size": 1,
                    "string_length": 2
                },
                "param_1": {
                    "decimal_format_specifier": 1,
                    "decimal_part1": 1,
                    "decimal_val": 1,
                    "decimal_value": 1,
                    "first_param": 1,
                    "flag1": 4,
                    "input1": 8,
                    "input_1": 2,
                    "input_param": 1,
                    "input_param1": 1,
                    "int_value1": 1,
                    "integer_param1": 1,
                    "number1": 4,
                    "some_param1": 1,
                    "value1": 2,
                    "value_1": 1
                },
                "param_10": {
                    "converted_val1": 1,
                    "data2": 2,
                    "input_param10": 1,
                    "long_param2": 1,
                    "long_param_2": 1,
                    "long_value2": 1,
                    "num_var2": 1,
                    "number10": 1,
                    "number2": 2,
                    "param1": 1,
                    "param10": 3,
                    "param2": 4,
                    "param_10": 4,
                    "pointer2": 1,
                    "ptr2": 1,
                    "some_param10": 1,
                    "val_2": 1,
                    "value10": 1,
                    "value2": 3
                },
                "param_11": {
                    "converted_val2": 1,
                    "data3": 2,
                    "input_param11": 1,
                    "long_param3": 1,
                    "long_param_3": 1,
                    "long_value3": 1,
                    "num_var3": 1,
                    "number11": 1,
                    "number3": 2,
                    "param11": 3,
                    "param2": 1,
                    "param3": 4,
                    "param_11": 4,
                    "pointer3": 1,
                    "ptr3": 1,
                    "some_param11": 1,
                    "val_3": 1,
                    "value11": 1,
                    "value3": 3
                },
                "param_12": {
                    "converted_val3": 1,
                    "data4": 2,
                    "input_param12": 1,
                    "long_param4": 1,
                    "long_param_4": 1,
                    "long_value4": 1,
                    "num_var4": 1,
                    "number12": 1,
                    "number4": 2,
                    "param12": 3,
                    "param3": 1,
                    "param4": 4,
                    "param_12": 4,
                    "pointer4": 1,
                    "ptr4": 1,
                    "some_param12": 1,
                    "val_4": 1,
                    "value12": 1,
                    "value4": 3
                },
                "param_13": {
                    "converted_val4": 1,
                    "data5": 2,
                    "input_param13": 1,
                    "long_param5": 1,
                    "long_param_5": 1,
                    "long_value5": 1,
                    "num_var5": 1,
                    "number13": 1,
                    "number5": 2,
                    "param13": 3,
                    "param4": 1,
                    "param5": 4,
                    "param_13": 4,
                    "pointer5": 1,
                    "ptr5": 1,
                    "some_param13": 1,
                    "val_5": 1,
                    "value13": 1,
                    "value5": 3
                },
                "param_14": {
                    "converted_val5": 1,
                    "data6": 2,
                    "input_param14": 1,
                    "long_param6": 1,
                    "long_param_6": 1,
                    "long_value6": 1,
                    "num_var6": 1,
                    "number14": 1,
                    "number6": 2,
                    "param14": 3,
                    "param5": 1,
                    "param6": 4,
                    "param_14": 4,
                    "pointer6": 1,
                    "ptr6": 1,
                    "some_param14": 1,
                    "val_6": 1,
                    "value14": 1,
                    "value6": 3
                },
                "param_2": {
                    "decimal_part2": 1,
                    "flag2": 4,
                    "input2": 8,
                    "input_2": 2,
                    "input_param2": 1,
                    "int_value2": 1,
                    "integer_param2": 1,
                    "number2": 4,
                    "octal_format_specifier": 1,
                    "octal_val": 1,
                    "octal_value": 1,
                    "output_param": 1,
                    "second_param": 1,
                    "some_param2": 1,
                    "value2": 2,
                    "value_2": 1
                },
                "param_3": {
                    "decimal_part3": 1,
                    "flag3": 4,
                    "hex_format_specifier": 1,
                    "hex_val": 1,
                    "hexadecimal_value": 1,
                    "input3": 8,
                    "input_3": 2,
                    "input_param3": 1,
                    "int_value3": 1,
                    "integer_param3": 1,
                    "number3": 4,
                    "some_param3": 1,
                    "temporary_param_1": 1,
                    "third_param": 1,
                    "value3": 2,
                    "value_3": 1
                },
                "param_4": {
                    "binary_val": 1,
                    "decimal_part4": 1,
                    "flag4": 4,
                    "fourth_param": 1,
                    "input4": 8,
                    "input_4": 2,
                    "input_param4": 1,
                    "int_value4": 1,
                    "integer_param4": 1,
                    "number4": 4,
                    "param_4": 2,
                    "some_param4": 1,
                    "temporary_param_2": 1,
                    "value4": 2,
                    "value_4": 1
                },
                "param_5": {
                    "decimal_part5": 1,
                    "fifth_param": 1,
                    "flag5": 4,
                    "input5": 8,
                    "input_5": 2,
                    "input_param5": 1,
                    "int_value5": 1,
                    "integer_param5": 1,
                    "number5": 4,
                    "param_5": 3,
                    "some_param5": 1,
                    "temporary_param_3": 1,
                    "value5": 2,
                    "value_5": 1
                },
                "param_6": {
                    "decimal_part6": 1,
                    "flag6": 4,
                    "input6": 8,
                    "input_6": 2,
                    "input_param6": 1,
                    "int_value6": 1,
                    "integer_param6": 1,
                    "number6": 4,
                    "param_6": 3,
                    "sixth_param": 1,
                    "some_param6": 1,
                    "temporary_param_4": 1,
                    "value6": 2,
                    "value_6": 1
                },
                "param_7": {
                    "decimal_part7": 1,
                    "flag7": 4,
                    "input7": 8,
                    "input_7": 2,
                    "input_param7": 1,
                    "int_value7": 1,
                    "integer_param7": 1,
                    "number7": 4,
                    "param_7": 3,
                    "seventh_param": 1,
                    "some_param7": 1,
                    "temporary_param_5": 1,
                    "value7": 2,
                    "value_7": 1
                },
                "param_8": {
                    "decimal_part8": 1,
                    "eighth_param": 1,
                    "flag8": 4,
                    "input8": 8,
                    "input_8": 2,
                    "input_param8": 1,
                    "int_value8": 1,
                    "integer_param8": 1,
                    "number8": 4,
                    "param_8": 3,
                    "some_param8": 1,
                    "temporary_param_6": 1,
                    "value8": 2,
                    "value_8": 1
                },
                "param_9": {
                    "data1": 2,
                    "format_string": 1,
                    "input_param9": 1,
                    "long_param1": 1,
                    "long_param_1": 1,
                    "long_value1": 1,
                    "num_var1": 1,
                    "number1": 2,
                    "number9": 1,
                    "param1": 4,
                    "param9": 3,
                    "param_9": 2,
                    "param_list1": 1,
                    "pointer1": 1,
                    "pointer_to_list": 1,
                    "ptr1": 1,
                    "some_param9": 1,
                    "unconverted_val": 1,
                    "val_1": 1,
                    "value1": 3,
                    "value9": 1
                },
                "sprintf": {
                    "format_string_and_assign_to_buffer": 1
                },
                "strlen": {
                    "calculate_string_length": 1
                },
                "uVar1": {
                    "converted_value": 2,
                    "formatted_data": 1,
                    "formatted_value": 7,
                    "number": 1,
                    "number_to_print": 1,
                    "number_value": 1,
                    "output": 1,
                    "result": 5,
                    "result_value": 1,
                    "return_value": 1,
                    "value": 7,
                    "value1": 1
                },
                "xexit": {
                    "exit_program": 1
                }
            },
            "called": [
                "xexit",
                "FUN_00102ee0"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid format_and_print_number_00102db0(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 input5,undefined4 input6,undefined4 input7,undefined4 input8,\n                 undefined8 param1,undefined8 input10,undefined8 param3,undefined8 param4,\n                 undefined8 input13,undefined8 input14)\n\n{\n  char flag;\n  char *format_string;\n  undefined8 formatted_value;\n  char output_string [48];\n  undefined4 buffer_size;\n  undefined4 length;\n  undefined *stack_pointer;\n  undefined *local_buffer;\n  undefined local_buffer [8];\n  undefined8 param_10_copy;\n  undefined8 param_11_copy;\n  undefined8 param_12_copy;\n  undefined8 param_13_copy;\n  undefined8 param_14_copy;\n  undefined4 saved_param1;\n  undefined4 saved_param2;\n  undefined4 saved_param3;\n  undefined4 saved_param4;\n  undefined4 saved_param5;\n  undefined4 input6_copy;\n  undefined4 input7_copy;\n  undefined4 saved_param8;\n  \n  if (flag != '\\0') {\n    saved_param1 = input1;\n    saved_param2 = input2;\n    saved_param3 = input3;\n    saved_param4 = input4;\n    saved_param5 = input5;\n    input6_copy = input6;\n    input7_copy = input7;\n    saved_param8 = input8;\n  }\n  stack_pointer = &stack0x00000008;\n  buffer_size = 8;\n  local_buffer = local_buffer;\n  length = 0x30;\n  param_10_copy = input10;\n  param_11_copy = param3;\n  param_12_copy = param4;\n  param_13_copy = input13;\n  param_14_copy = input14;\n  FUN_00102ee0(param1,&buffer_size);\n  formatted_value = 1;\n  xexit(1);\n  if (DAT_0010733c == 0) {\n    format_string = \"%lu\";\n  }\n  else {\n    format_string = \"0x%lx\";\n    if (DAT_0010733c == 1) {\n      format_string = \"0%lo\";\n    }\n  }\n  sprintf(output_string,format_string,formatted_value);\n  strlen(output_string);\n  return;\n}\n\n",
            "current_name": "format_and_print_number_00102db0",
            "entrypoint": "0x00102db0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102db0": "format_and_print_number_00102db0",
                "__format": "format_string",
                "_format": "format_string",
                "acStack_110": "output_string",
                "in_AL": "flag",
                "local_18": "saved_param8",
                "local_28": "input7_copy",
                "local_38": "input6_copy",
                "local_48": "saved_param5",
                "local_58": "saved_param4",
                "local_68": "saved_param3",
                "local_78": "saved_param2",
                "local_88": "saved_param1",
                "local_90": "param_14_copy",
                "local_98": "param_13_copy",
                "local_a0": "param_12_copy",
                "local_a8": "param_11_copy",
                "local_b0": "param_10_copy",
                "local_b8": "local_buffer",
                "local_c8": "local_buffer",
                "local_d0": "stack_pointer",
                "local_d4": "length",
                "local_d8": "buffer_size",
                "param_1": "input1",
                "param_11": "param3",
                "param_12": "param4",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "param_7": "input7",
                "param_8": "input8",
                "param_9": "param1",
                "sprintf": "format_string_and_assign_to_buffer",
                "strlen": "calculate_string_length",
                "uVar1": "formatted_value",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102e50": {
            "additional_data": {
                "FUN_00102e50": {
                    "convert_to_formatted_string": 1,
                    "convert_value_to_hex_or_octal": 1,
                    "format_and_print": 6,
                    "format_and_print_number": 7,
                    "format_and_print_value": 3,
                    "format_output": 1,
                    "print_formatted_number": 2,
                    "print_formatted_value": 9,
                    "print_in_formatted_way": 1
                },
                "__format": {
                    "format": 3,
                    "format_specifier": 3,
                    "format_string": 24,
                    "output_format": 1
                },
                "acStack_38": {
                    "buffer": 6,
                    "formatted_number": 1,
                    "formatted_output": 1,
                    "output_buffer": 13,
                    "output_string": 10
                },
                "param_1": {
                    "input": 1,
                    "input_value": 1,
                    "number": 10,
                    "value": 18
                }
            },
            "called": [
                "sprintf",
                "FUN_001026f6",
                "strlen"
            ],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\nvoid format_and_print_number_00102e50(undefined8 value)\n\n{\n  char *format_string;\n  char output_buffer [48];\n  \n  if (DAT_0010733c == 0) {\n    format_string = \"%lu\";\n  }\n  else {\n    format_string = \"0x%lx\";\n    if (DAT_0010733c == 1) {\n      format_string = \"0%lo\";\n    }\n  }\n  sprintf(output_buffer,format_string,value);\n  strlen(output_buffer);\n  return;\n}\n\n",
            "current_name": "format_and_print_number_00102e50",
            "entrypoint": "0x00102e50",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102e50": "format_and_print_number_00102e50",
                "__format": "format_string",
                "acStack_38": "output_buffer",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102e90": {
            "additional_data": {
                "DAT_0010733c": {
                    "format_type": 1
                },
                "FUN_00102710": {
                    "initialize": 1
                },
                "FUN_00102e90": {
                    "format_and_print": 2,
                    "format_and_print_number": 2,
                    "format_and_print_value": 1,
                    "print_formatted_number": 9,
                    "print_formatted_output": 1,
                    "print_formatted_value": 16
                },
                "__format": {
                    "format": 10,
                    "format_specifier": 9,
                    "format_string": 10
                },
                "acStack_48": {
                    "buffer": 10,
                    "formatted_number": 7,
                    "formatted_string": 2,
                    "formatted_value": 4,
                    "output_buffer": 6,
                    "output_string": 2
                },
                "param_1": {
                    "format_width": 3,
                    "indentation": 1,
                    "padding": 1,
                    "width": 26
                },
                "param_2": {
                    "number": 11,
                    "value": 20
                },
                "printf": {
                    "print_formatted": 1
                },
                "sprintf": {
                    "format_string": 1
                }
            },
            "called": [
                "printf",
                "sprintf",
                "FUN_00102710"
            ],
            "calling": [
                "FUN_00102fe0",
                "FUN_00103130",
                "FUN_00102a90"
            ],
            "code": "\nvoid print_formatted_value_00102e90(ulong width,undefined8 value)\n\n{\n  char *sprintf;\n  char buffer [56];\n  \n  if (DAT_0010733c == 0) {\n    format_string(buffer,\"%lu\",value);\n    printf(\"%*s\",width & 0xffffffff,buffer);\n  }\n  else {\n    format_string = \"0x%lx\";\n    if (DAT_0010733c == 1) {\n      format_string = \"0%lo\";\n    }\n    format_string(buffer,format_string,value);\n    printf(\"%*s\",width & 0xffffffff,buffer);\n  }\n  return;\n}\n\n",
            "current_name": "print_formatted_value_00102e90",
            "entrypoint": "0x00102e90",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102e90": "print_formatted_value_00102e90",
                "__format": "format_string",
                "acStack_48": "buffer",
                "param_1": "width",
                "param_2": "value",
                "printf": "print_formatted",
                "sprintf": "format_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102ee0": {
            "additional_data": {
                "DAT_00107350": {
                    "program_name": 1
                },
                "FUN_00102ee0": {
                    "print_error_message": 30,
                    "print_formatted_message": 1
                },
                "__arg": {
                    "arg": 2,
                    "arg_list": 1,
                    "args": 2,
                    "argument_list": 2,
                    "arguments": 9,
                    "variable_arguments": 1
                },
                "__c": {
                    "character": 16
                },
                "__format": {
                    "format": 5,
                    "format_string": 12
                },
                "__gnuc_va_list": {
                    "arg_list": 1,
                    "args": 2,
                    "arguments": 3,
                    "varargs": 1,
                    "variable_argument_list": 1
                },
                "__s": {
                    "error_stream": 2,
                    "output_file": 1,
                    "output_stream": 4,
                    "s": 2,
                    "stream": 5,
                    "stream_pointer": 1,
                    "string_stream": 1
                },
                "__stderr": {
                    "error_stream": 1
                },
                "__stdout": {
                    "output_stream": 1
                },
                "__stream": {
                    "file_pointer": 1,
                    "output_file": 1,
                    "output_stream": 11,
                    "stream": 4
                },
                "_stderr": {
                    "error_stream": 1,
                    "standard_error": 5,
                    "standard_error_file": 1,
                    "stderr": 1
                },
                "_stdout": {
                    "standard_output": 5,
                    "standard_output_file": 1,
                    "stdout": 1
                },
                "fflush": {
                    "flush": 1,
                    "flush_buffer": 1,
                    "flush_file": 1,
                    "flush_output": 5,
                    "flush_stream": 2
                },
                "fprintf": {
                    "format_and_print": 1,
                    "format_and_print_to_file": 1,
                    "format_print": 1,
                    "formatted_print": 2,
                    "print_formatted": 2,
                    "print_formatted_to_stream": 1,
                    "print_to_error_stream": 1,
                    "print_to_file": 1
                },
                "param_1": {
                    "error_format": 1,
                    "error_message": 8,
                    "format_string": 1,
                    "message": 21
                },
                "param_2": {
                    "args": 6,
                    "argument_list": 1,
                    "arguments": 14,
                    "variable_arguments": 2
                },
                "putc": {
                    "put_char": 1,
                    "put_char_to_error_stream": 1,
                    "put_character": 2,
                    "put_character_to_file": 1,
                    "put_character_to_stream": 1,
                    "write_character": 3,
                    "write_character_to_file": 1
                },
                "vfprintf": {
                    "format_and_print_variable_arguments_to_file": 1,
                    "formatted_v_print": 1,
                    "print_formatted_arguments": 1,
                    "print_formatted_to_error_stream": 1,
                    "print_formatted_var_args_to_stream": 1,
                    "print_formatted_varargs": 1,
                    "print_variable_arguments_to_file": 1,
                    "variable_format_print": 1,
                    "variable_formatted_print": 1,
                    "vformat_and_print": 1
                }
            },
            "called": [
                "fprintf",
                "fflush",
                "vfprintf",
                "putc"
            ],
            "calling": [
                "FUN_00102f40",
                "FUN_00102db0"
            ],
            "code": "\n\n\nvoid print_error_message_00102ee0(char *message,arguments arguments)\n\n{\n  fflush(standard_output);\n  fprintf(standard_error,\"%s: \",DAT_00107350);\n  vfprintf(standard_error,message,arguments);\n  putc(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_error_message_00102ee0",
            "entrypoint": "0x00102ee0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102ee0": "print_error_message_00102ee0",
                "__gnuc_va_list": "arguments",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "fflush": "flush_output",
                "fprintf": "formatted_print",
                "param_1": "message",
                "param_2": "arguments",
                "putc": "write_character",
                "vfprintf": "vformat_and_print"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f40": {
            "additional_data": {
                "FUN_00102ee0": {
                    "copy_data": 1,
                    "helper_function": 1,
                    "process_data": 5,
                    "process_data_helper": 1,
                    "sub_function": 1
                },
                "FUN_00102f40": {
                    "copy_parameters": 1,
                    "decode_and_process_data": 1,
                    "decompiled_function": 1,
                    "decrypt_data": 1,
                    "extract_and_process_data": 1,
                    "extract_data": 3,
                    "extract_data_from_binary": 1,
                    "extract_params_and_call_function": 1,
                    "initialize_data": 1,
                    "initialize_function": 1,
                    "parse_and_process_data": 1,
                    "process_data": 8,
                    "process_input_data": 1,
                    "reverse_and_print_string": 1
                },
                "in_AL": {
                    "check_condition": 1,
                    "condition": 7,
                    "condition_flag": 1,
                    "condition_met": 1,
                    "conditional_flag": 1,
                    "enable_option": 1,
                    "flag": 12,
                    "input_al": 1,
                    "input_flag": 4
                },
                "local_18": {
                    "copy8": 1,
                    "copy_of_param8": 1,
                    "data8_copy": 1,
                    "flag8": 1,
                    "input8_copy": 2,
                    "input_copy_8": 1,
                    "input_param8_val": 1,
                    "input_param_8_copy": 1,
                    "local_arg8": 3,
                    "local_data8": 1,
                    "local_input8": 1,
                    "local_input_8": 1,
                    "local_param_8_copy": 1,
                    "local_var8": 1,
                    "option8_result": 1,
                    "option_8_copy": 1,
                    "output8": 1,
                    "output_8": 1,
                    "param14": 1,
                    "param8_copy": 1,
                    "param_8_copy": 1,
                    "processed_param8": 1,
                    "temp_param8": 1,
                    "value8_copy": 2,
                    "value_8": 1,
                    "var_18": 1
                },
                "local_28": {
                    "copy7": 1,
                    "copy_of_param7": 1,
                    "data7_copy": 1,
                    "flag7": 1,
                    "input7_copy": 2,
                    "input_copy_7": 1,
                    "input_param7_val": 1,
                    "input_param_7_copy": 1,
                    "local_arg7": 3,
                    "local_data7": 1,
                    "local_input7": 1,
                    "local_input_7": 1,
                    "local_param_7_copy": 1,
                    "local_var7": 1,
                    "option7_result": 1,
                    "option_7_copy": 1,
                    "output7": 1,
                    "output_7": 1,
                    "param13": 1,
                    "param7_copy": 1,
                    "param_7_copy": 1,
                    "processed_param7": 1,
                    "temp_param7": 1,
                    "value7_copy": 2,
                    "value_7": 1,
                    "var_28": 1
                },
                "local_38": {
                    "copy6": 1,
                    "copy_of_param6": 1,
                    "data6_copy": 1,
                    "flag6": 1,
                    "input6_copy": 2,
                    "input_copy_6": 1,
                    "input_param6_val": 1,
                    "input_param_6_copy": 1,
                    "local_arg6": 3,
                    "local_data6": 1,
                    "local_input6": 1,
                    "local_input_6": 1,
                    "local_param_6_copy": 1,
                    "local_var6": 1,
                    "option6_result": 1,
                    "option_6_copy": 1,
                    "output6": 1,
                    "output_6": 1,
                    "param12": 1,
                    "param6_copy": 1,
                    "param_6_copy": 1,
                    "processed_param6": 1,
                    "temp_param6": 1,
                    "value6_copy": 2,
                    "value_6": 1,
                    "var_38": 1
                },
                "local_48": {
                    "copy5": 1,
                    "copy_of_param5": 1,
                    "data5_copy": 1,
                    "flag5": 1,
                    "input5_copy": 2,
                    "input_copy_5": 1,
                    "input_param5_val": 1,
                    "input_param_5_copy": 1,
                    "local_arg5": 3,
                    "local_data5": 1,
                    "local_input5": 1,
                    "local_input_5": 1,
                    "local_param_5_copy": 1,
                    "local_var5": 1,
                    "option5_result": 1,
                    "option_5_copy": 1,
                    "output5": 1,
                    "output_5": 1,
                    "param11": 1,
                    "param5_copy": 1,
                    "param_5_copy": 1,
                    "processed_param5": 1,
                    "temp_param5": 1,
                    "value5_copy": 2,
                    "value_5": 1,
                    "var_48": 1
                },
                "local_58": {
                    "copy4": 1,
                    "copy_of_param4": 1,
                    "data4_copy": 1,
                    "flag4": 1,
                    "input4_copy": 2,
                    "input_copy_4": 1,
                    "input_param4_val": 1,
                    "input_param_4_copy": 1,
                    "local_arg4": 3,
                    "local_data4": 1,
                    "local_input4": 1,
                    "local_input_4": 1,
                    "local_param_4_copy": 1,
                    "local_var4": 1,
                    "option4_result": 1,
                    "option_4_copy": 1,
                    "output4": 1,
                    "output_4": 1,
                    "param10": 1,
                    "param4_copy": 1,
                    "param_4_copy": 1,
                    "processed_param4": 1,
                    "temp_param4": 1,
                    "value4_copy": 2,
                    "value_4": 1,
                    "var_58": 1
                },
                "local_68": {
                    "copy3": 1,
                    "copy_of_param3": 1,
                    "data3_copy": 1,
                    "flag3": 1,
                    "input3_copy": 2,
                    "input_copy_3": 1,
                    "input_param3_val": 1,
                    "input_param_3_copy": 1,
                    "local_arg3": 3,
                    "local_data3": 1,
                    "local_input3": 1,
                    "local_input_3": 1,
                    "local_param_3_copy": 1,
                    "local_var3": 1,
                    "option3_result": 1,
                    "option_3_copy": 1,
                    "output3": 1,
                    "output_3": 1,
                    "param3_copy": 1,
                    "param9": 1,
                    "processed_param3": 1,
                    "str_size_copy": 1,
                    "temp_param3": 1,
                    "value3_copy": 2,
                    "value_3": 1,
                    "var_68": 1
                },
                "local_78": {
                    "copy2": 1,
                    "copy_of_param2": 1,
                    "data2_copy": 1,
                    "flag2": 1,
                    "input2_copy": 2,
                    "input_copy_2": 1,
                    "input_param2_val": 1,
                    "input_param_2_copy": 1,
                    "local_arg2": 3,
                    "local_data2": 1,
                    "local_input2": 1,
                    "local_input_2": 1,
                    "local_param_2_copy": 1,
                    "local_var2": 1,
                    "option2_result": 1,
                    "option_2_copy": 1,
                    "output2": 1,
                    "output_2": 1,
                    "param2_copy": 1,
                    "param8": 1,
                    "processed_param2": 1,
                    "str_cap_copy": 1,
                    "temp_param2": 1,
                    "value2_copy": 2,
                    "value_2": 1,
                    "var_78": 1
                },
                "local_88": {
                    "copy1": 1,
                    "copy_of_param1": 1,
                    "data1_copy": 1,
                    "flag1": 1,
                    "input1_copy": 2,
                    "input_copy_1": 1,
                    "input_flag_copy": 1,
                    "input_param1_val": 1,
                    "input_param_1_copy": 1,
                    "local_arg1": 3,
                    "local_data1": 1,
                    "local_input1": 1,
                    "local_input_1": 1,
                    "local_param_1_copy": 1,
                    "local_var1": 1,
                    "option1_result": 1,
                    "option_1_copy": 1,
                    "output1": 1,
                    "output_1": 1,
                    "param7": 1,
                    "processed_param1": 1,
                    "str_len_copy": 1,
                    "temp_param1": 1,
                    "value1_copy": 2,
                    "value_1": 1,
                    "var_88": 1
                },
                "local_90": {
                    "additional_param5": 1,
                    "arg5_copy": 1,
                    "arg6_copy": 1,
                    "arg_6_copy": 1,
                    "argument_5": 1,
                    "buffer_value5": 1,
                    "data_param6_val": 1,
                    "input_param_14_copy": 1,
                    "local_arg14": 2,
                    "local_arg5": 1,
                    "local_param14": 2,
                    "local_param_14": 1,
                    "local_var_7": 1,
                    "local_variable7": 1,
                    "param14_copy": 2,
                    "param6": 1,
                    "param6_copy": 2,
                    "param_14_copy": 3,
                    "temp_param6": 1,
                    "value14_copy": 1,
                    "value5": 2,
                    "value_14": 1,
                    "var_90": 1
                },
                "local_98": {
                    "additional_param4": 1,
                    "arg4_copy": 1,
                    "arg5_copy": 1,
                    "arg_5_copy": 1,
                    "argument_4": 1,
                    "buffer_value4": 1,
                    "data_param5_val": 1,
                    "input_param_13_copy": 1,
                    "local_arg13": 2,
                    "local_arg4": 1,
                    "local_param13": 2,
                    "local_param_13": 1,
                    "local_var_6": 1,
                    "local_variable6": 1,
                    "param13_copy": 2,
                    "param5": 1,
                    "param5_copy": 2,
                    "param_13_copy": 3,
                    "temp_param5": 1,
                    "value13_copy": 1,
                    "value4": 2,
                    "value_13": 1,
                    "var_98": 1
                },
                "local_a0": {
                    "additional_param3": 1,
                    "arg3_copy": 1,
                    "arg4_copy": 1,
                    "arg_4_copy": 1,
                    "argument_3": 1,
                    "buffer_value3": 1,
                    "data_param4_val": 1,
                    "input_param_12_copy": 1,
                    "local_arg12": 2,
                    "local_arg3": 1,
                    "local_param12": 2,
                    "local_param_12": 1,
                    "local_var_5": 1,
                    "local_variable5": 1,
                    "param12_copy": 2,
                    "param4": 1,
                    "param4_copy": 2,
                    "param_12_copy": 3,
                    "temp_param4": 1,
                    "value12_copy": 1,
                    "value3": 2,
                    "value_12": 1,
                    "var_a0": 1
                },
                "local_a8": {
                    "additional_param2": 1,
                    "arg2_copy": 1,
                    "arg3_copy": 1,
                    "arg_3_copy": 1,
                    "argument_2": 1,
                    "buffer_value2": 1,
                    "data_param3_val": 1,
                    "input_param_11_copy": 1,
                    "local_arg11": 2,
                    "local_arg2": 1,
                    "local_param11": 2,
                    "local_param_11": 1,
                    "local_var_4": 1,
                    "local_variable4": 1,
                    "param11_copy": 2,
                    "param3": 1,
                    "param3_copy": 2,
                    "param_11_copy": 3,
                    "temp_param3": 1,
                    "value11_copy": 1,
                    "value2": 2,
                    "value_11": 1,
                    "var_a8": 1
                },
                "local_b0": {
                    "additional_param1": 1,
                    "arg1_copy": 1,
                    "arg2_copy": 1,
                    "arg_2_copy": 1,
                    "buffer_value1": 1,
                    "data_param2_val": 1,
                    "input_param_10_copy": 1,
                    "local_arg1": 1,
                    "local_arg10": 2,
                    "local_param10": 2,
                    "local_param_10": 1,
                    "local_var_3": 1,
                    "local_variable3": 1,
                    "param10_copy": 2,
                    "param2": 1,
                    "param2_copy": 2,
                    "param_10_copy": 3,
                    "temp_param2": 1,
                    "value1": 2,
                    "value10_copy": 1,
                    "value_10": 1,
                    "var_b0": 1
                },
                "local_b8": {
                    "buffer": 2,
                    "extracted_data": 1,
                    "local_array": 2,
                    "local_array1": 1,
                    "local_buffer": 7,
                    "local_buffer_data": 1,
                    "stack_buffer": 2,
                    "temp_array": 1,
                    "temp_buffer": 1,
                    "temp_data": 1,
                    "temporary_buffer": 6,
                    "unmodified_buffer": 1
                },
                "local_c8": {
                    "array": 1,
                    "buffer": 5,
                    "local_array2": 1,
                    "local_array_ptr": 1,
                    "local_b8_buf": 1,
                    "local_buffer": 16,
                    "local_buffer_ptr": 1,
                    "local_ptr2": 1,
                    "local_var_2": 1,
                    "pointer2": 1,
                    "stack_pointer2": 1
                },
                "local_d0": {
                    "buffer": 8,
                    "buffer_pointer": 2,
                    "buffer_ptr": 7,
                    "local_array": 1,
                    "local_array1": 1,
                    "local_buf": 1,
                    "local_ptr1": 1,
                    "local_var_1": 1,
                    "pointer1": 1,
                    "ptr": 1,
                    "stack_pointer": 3,
                    "stack_pointer1": 1
                },
                "local_d4": {
                    "arg2": 1,
                    "buffer_size": 2,
                    "byte_length": 1,
                    "constant": 2,
                    "copy_size": 2,
                    "length": 2,
                    "limit": 1,
                    "local_array_size": 1,
                    "local_len": 1,
                    "local_size2": 1,
                    "local_var2": 1,
                    "local_var_1_size": 1,
                    "local_variable2": 1,
                    "offset": 3,
                    "size": 1,
                    "string_length": 1,
                    "value": 2
                },
                "local_d8": {
                    "arg1": 1,
                    "array_length": 1,
                    "array_size": 3,
                    "buffer_length": 1,
                    "buffer_size": 7,
                    "count": 1,
                    "length": 1,
                    "local_size": 1,
                    "local_size1": 1,
                    "local_var1": 1,
                    "local_variable1": 1,
                    "num_bytes": 1,
                    "option_length": 1,
                    "size": 9
                },
                "param_1": {
                    "arg1": 3,
                    "data1": 2,
                    "flag1": 1,
                    "input1": 6,
                    "input_1": 4,
                    "input_flag": 1,
                    "input_param1": 4,
                    "input_param_1": 1,
                    "option1": 1,
                    "option_1": 1,
                    "param1": 1,
                    "str_len": 1,
                    "value1": 3,
                    "value_1": 1
                },
                "param_10": {
                    "arg1": 2,
                    "arg10": 2,
                    "arg2": 1,
                    "arg_2": 1,
                    "data10": 1,
                    "data2": 1,
                    "data_param2": 1,
                    "input_param10": 1,
                    "input_param_10": 1,
                    "param10": 7,
                    "param2": 3,
                    "param_10": 4,
                    "param_b": 1,
                    "param_value1": 1,
                    "pointer_param2": 1,
                    "value10": 1
                },
                "param_11": {
                    "arg11": 2,
                    "arg2": 2,
                    "arg3": 1,
                    "arg_3": 1,
                    "data11": 1,
                    "data3": 1,
                    "data_param3": 1,
                    "input_param11": 1,
                    "input_param_11": 1,
                    "param11": 7,
                    "param3": 3,
                    "param_11": 4,
                    "param_c": 1,
                    "param_value2": 1,
                    "pointer_param3": 1,
                    "value11": 1
                },
                "param_12": {
                    "arg12": 2,
                    "arg3": 2,
                    "arg4": 1,
                    "arg_4": 1,
                    "data12": 1,
                    "data4": 1,
                    "data_param4": 1,
                    "input_param12": 1,
                    "input_param_12": 1,
                    "param12": 7,
                    "param4": 3,
                    "param_12": 4,
                    "param_d": 1,
                    "param_value3": 1,
                    "pointer_param4": 1,
                    "value12": 1
                },
                "param_13": {
                    "arg13": 2,
                    "arg4": 2,
                    "arg5": 1,
                    "arg_5": 1,
                    "data13": 1,
                    "data5": 1,
                    "data_param5": 1,
                    "input_param13": 1,
                    "input_param_13": 1,
                    "param13": 7,
                    "param5": 3,
                    "param_13": 4,
                    "param_e": 1,
                    "param_value4": 1,
                    "pointer_param5": 1,
                    "value13": 1
                },
                "param_14": {
                    "arg14": 2,
                    "arg5": 2,
                    "arg6": 1,
                    "arg_6": 1,
                    "data14": 1,
                    "data6": 1,
                    "data_param6": 1,
                    "input_param14": 1,
                    "input_param_14": 1,
                    "param14": 7,
                    "param6": 3,
                    "param_14": 4,
                    "param_f": 1,
                    "param_value5": 1,
                    "pointer_param6": 1,
                    "value14": 1
                },
                "param_2": {
                    "arg2": 3,
                    "data2": 2,
                    "flag2": 1,
                    "input2": 6,
                    "input_2": 4,
                    "input_param2": 4,
                    "input_param_2": 1,
                    "option2": 1,
                    "option_2": 1,
                    "param2": 2,
                    "str_cap": 1,
                    "value2": 3,
                    "value_2": 1
                },
                "param_3": {
                    "arg3": 3,
                    "data3": 2,
                    "flag3": 1,
                    "input3": 6,
                    "input_3": 4,
                    "input_param3": 4,
                    "input_param_3": 1,
                    "option3": 1,
                    "option_3": 1,
                    "param3": 2,
                    "str_size": 1,
                    "value3": 3,
                    "value_3": 1
                },
                "param_4": {
                    "arg4": 3,
                    "data4": 2,
                    "flag4": 1,
                    "input4": 6,
                    "input_4": 4,
                    "input_param4": 4,
                    "input_param_4": 1,
                    "option4": 1,
                    "option_4": 1,
                    "param4": 2,
                    "param_4": 1,
                    "value4": 3,
                    "value_4": 1
                },
                "param_5": {
                    "arg5": 3,
                    "data5": 2,
                    "flag5": 1,
                    "input5": 6,
                    "input_5": 4,
                    "input_param5": 4,
                    "input_param_5": 1,
                    "option5": 1,
                    "option_5": 1,
                    "param5": 2,
                    "param_5": 1,
                    "value5": 3,
                    "value_5": 1
                },
                "param_6": {
                    "arg6": 3,
                    "data6": 2,
                    "flag6": 1,
                    "input6": 6,
                    "input_6": 4,
                    "input_param6": 4,
                    "input_param_6": 1,
                    "option6": 1,
                    "option_6": 1,
                    "param6": 2,
                    "param_6": 1,
                    "value6": 3,
                    "value_6": 1
                },
                "param_7": {
                    "arg7": 3,
                    "data7": 2,
                    "flag7": 1,
                    "input7": 6,
                    "input_7": 4,
                    "input_param7": 4,
                    "input_param_7": 1,
                    "option7": 1,
                    "option_7": 1,
                    "param7": 2,
                    "param_7": 1,
                    "value7": 3,
                    "value_7": 1
                },
                "param_8": {
                    "arg8": 3,
                    "data8": 2,
                    "flag8": 1,
                    "input8": 6,
                    "input_8": 4,
                    "input_param8": 4,
                    "input_param_8": 1,
                    "option8": 1,
                    "option_8": 1,
                    "param8": 2,
                    "param_8": 1,
                    "value8": 3,
                    "value_8": 1
                },
                "param_9": {
                    "arg1": 1,
                    "arg9": 2,
                    "arg_1": 1,
                    "data": 1,
                    "data1": 1,
                    "data_array": 1,
                    "data_param1": 1,
                    "data_ptr": 2,
                    "data_size": 1,
                    "function_ptr": 1,
                    "input_param9": 1,
                    "input_param_9": 1,
                    "input_ptr": 2,
                    "param1": 3,
                    "param9": 5,
                    "param_a": 1,
                    "param_name": 1,
                    "pointer_param1": 1,
                    "str": 1,
                    "value9": 1
                }
            },
            "called": [
                "FUN_00102ee0"
            ],
            "calling": [
                "FUN_00102360",
                "FUN_00103130",
                "FUN_00102980"
            ],
            "code": "\nvoid extract_and_process_data_00102f40(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 input5,undefined4 input6,undefined4 input7,undefined4 input8,\n                 undefined8 param9,undefined8 param10,undefined8 param11,undefined8 param12,\n                 undefined8 param13,undefined8 param14)\n\n{\n  char flag;\n  undefined4 size;\n  undefined4 offset;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined local_buffer [8];\n  undefined8 param_10_copy;\n  undefined8 param_11_copy;\n  undefined8 param_12_copy;\n  undefined8 param_13_copy;\n  undefined8 param_14_copy;\n  undefined4 local_arg1;\n  undefined4 local_arg2;\n  undefined4 local_arg3;\n  undefined4 local_arg4;\n  undefined4 local_arg5;\n  undefined4 local_arg6;\n  undefined4 local_arg7;\n  undefined4 local_arg8;\n  \n  if (flag != '\\0') {\n    local_arg1 = input1;\n    local_arg2 = input2;\n    local_arg3 = input3;\n    local_arg4 = input4;\n    local_arg5 = input5;\n    local_arg6 = input6;\n    local_arg7 = input7;\n    local_arg8 = input8;\n  }\n  buffer = &stack0x00000008;\n  size = 8;\n  local_buffer = local_buffer;\n  offset = 0x30;\n  param_10_copy = param10;\n  param_11_copy = param11;\n  param_12_copy = param12;\n  param_13_copy = param13;\n  param_14_copy = param14;\n  FUN_00102ee0(param9,&size);\n  return;\n}\n\n",
            "current_name": "extract_and_process_data_00102f40",
            "entrypoint": "0x00102f40",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f40": "extract_and_process_data_00102f40",
                "in_AL": "flag",
                "local_18": "local_arg8",
                "local_28": "local_arg7",
                "local_38": "local_arg6",
                "local_48": "local_arg5",
                "local_58": "local_arg4",
                "local_68": "local_arg3",
                "local_78": "local_arg2",
                "local_88": "local_arg1",
                "local_90": "param_14_copy",
                "local_98": "param_13_copy",
                "local_a0": "param_12_copy",
                "local_a8": "param_11_copy",
                "local_b0": "param_10_copy",
                "local_b8": "local_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "offset",
                "local_d8": "size",
                "param_1": "input1",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13",
                "param_14": "param14",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "param_7": "input7",
                "param_8": "input8",
                "param_9": "param9"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102fe0": {
            "additional_data": {
                "FUN_00102e90": {
                    "convert_to_string": 1,
                    "print_data": 3,
                    "print_data_with_format": 1,
                    "print_formatted_data": 1,
                    "print_formatted_value": 1,
                    "print_hex": 1,
                    "print_value": 3,
                    "print_variable_string": 1,
                    "print_with_length": 1
                },
                "FUN_00102fe0": {
                    "print_data": 1,
                    "print_formatted_data": 11,
                    "print_formatted_info": 1,
                    "print_formatted_message": 1,
                    "print_formatted_output": 4,
                    "print_formatted_strings": 8,
                    "print_formatted_text": 1,
                    "print_formatted_values": 1,
                    "print_info": 1,
                    "print_parameters": 1,
                    "print_params": 1
                },
                "param_1": {
                    "data1": 2,
                    "data_1": 3,
                    "data_string": 2,
                    "first_string": 1,
                    "formatted_string": 1,
                    "label": 2,
                    "message": 2,
                    "message_1": 1,
                    "param1_name": 1,
                    "param_1_desc": 1,
                    "param_1_value": 1,
                    "param_text": 1,
                    "str_length": 1,
                    "string1": 4,
                    "string_param": 1,
                    "text": 5,
                    "text1": 1,
                    "title": 1
                },
                "param_2": {
                    "data1": 1,
                    "data2": 2,
                    "data_1": 2,
                    "data_2": 3,
                    "data_param_1": 1,
                    "message_2": 1,
                    "param2_name": 1,
                    "param_2_desc": 1,
                    "param_2_value": 3,
                    "param_value1": 1,
                    "param_value_1": 1,
                    "second_string": 1,
                    "str_1": 1,
                    "string1": 1,
                    "string2": 4,
                    "text2": 1,
                    "value1": 4,
                    "value_1": 2
                },
                "param_3": {
                    "data2": 1,
                    "data3": 2,
                    "data_2": 2,
                    "data_3": 3,
                    "data_param_2": 1,
                    "message_3": 1,
                    "param3_name": 1,
                    "param_3_desc": 1,
                    "param_3_value": 3,
                    "param_value2": 1,
                    "param_value_2": 1,
                    "str_2": 1,
                    "string2": 1,
                    "string3": 4,
                    "text3": 1,
                    "third_string": 1,
                    "value2": 4,
                    "value_2": 2
                },
                "printf": {
                    "formatted_print": 2,
                    "print": 3,
                    "print_formatted": 3,
                    "print_formatted_string": 2,
                    "print_string": 1,
                    "print_to_console": 1,
                    "print_with_format": 1
                },
                "putchar": {
                    "print_char": 1,
                    "print_character": 5,
                    "print_newline": 7
                }
            },
            "called": [
                "printf",
                "FUN_00102e90",
                "putchar"
            ],
            "calling": [
                "FUN_00102a90",
                "FUN_00103cc0"
            ],
            "code": "\nvoid print_formatted_data_00102fe0(undefined8 text,undefined8 value1,undefined8 string3)\n\n{\n  printf(\"%-*s   \",(ulong)DAT_001072d0,text);\n  FUN_00102e90(DAT_001072c8,value1);\n  printf(\"   \");\n  FUN_00102e90(DAT_001072cc,string3);\n  putchar(10);\n  return;\n}\n\n",
            "current_name": "print_formatted_data_00102fe0",
            "entrypoint": "0x00102fe0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102fe0": "print_formatted_data_00102fe0",
                "param_1": "text",
                "param_2": "value1",
                "param_3": "string3",
                "printf": "print",
                "putchar": "print_newline"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103070": {
            "called": [
                "_ITM_deregisterTMCloneTable"
            ],
            "calling": [
                "_FINI_0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00103083) */\n/* WARNING: Removing unreachable block (ram,0x0010308f) */\n\nvoid FUNC_00103070(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103070",
            "entrypoint": "0x00103070",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103070": "FUNC_00103070"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_001030a0": {
            "called": [
                "_ITM_registerTMCloneTable"
            ],
            "calling": [
                "_INIT_0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x001030c4) */\n/* WARNING: Removing unreachable block (ram,0x001030d0) */\n\nvoid FUNC_001030a0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_001030a0",
            "entrypoint": "0x001030a0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_001030a0": "FUNC_001030a0"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103130": {
            "additional_data": {
                "DAT_00104067": {
                    "dat_00104067": 1
                },
                "DAT_00107314": {
                    "dat_00107314": 1
                },
                "DAT_00107318": {
                    "dat_00107318": 1
                },
                "DAT_00107320": {
                    "dat_00107320": 1
                },
                "DAT_00107328": {
                    "dat_00107328": 1
                },
                "DAT_0010733c": {
                    "dat_0010733c": 1
                },
                "DAT_00107340": {
                    "dat_00107340": 1
                },
                "DAT_00107348": {
                    "dat_00107348": 1
                },
                "DAT_00107350": {
                    "dat_00107350": 1
                },
                "FUN_0010281b": {
                    "print_error": 1,
                    "print_without_wrapping": 1
                },
                "FUN_00102980": {
                    "get_output_filename": 1
                },
                "FUN_00102e90": {
                    "print_formatted": 1
                },
                "FUN_00102f40": {
                    "print_invalid_argument": 1
                },
                "FUN_00103130": {
                    "decompile_and_improve": 1,
                    "extract_files": 1,
                    "parse_arguments": 1,
                    "parse_command_line_arguments": 1,
                    "parse_input_files": 1
                },
                "PTR_s_common_001071c0": {
                    "ptr_s_common_001071c0": 1
                },
                "_DAT_00107330": {
                    "dat_00107330": 1
                },
                "_DAT_00107334": {
                    "dat_00107334": 1
                },
                "_DAT_00107338": {
                    "dat_00107338": 1
                },
                "__ptr": {
                    "allocated_memory": 1,
                    "byte_array2": 2,
                    "byte_pointer3": 6,
                    "byte_pointer_2": 1,
                    "byte_ptr": 2,
                    "byte_ptr2": 2,
                    "byte_ptr3": 10,
                    "byte_ptr8": 1,
                    "byte_ptr_dest": 1,
                    "new_variable_name_e": 1,
                    "parsed_string": 1,
                    "ptr": 1,
                    "ptr2": 1,
                    "ptr_byte": 1
                },
                "__s": {
                    "byte_array": 6,
                    "byte_pointer2": 6,
                    "byte_ptr": 2,
                    "byte_ptr1": 1,
                    "byte_ptr2": 11,
                    "byte_ptr7": 1,
                    "byte_ptr_s": 1,
                    "file_contents": 1,
                    "new_variable_name_b": 1,
                    "str2": 1
                },
                "__src": {
                    "long_array": 3,
                    "long_pointer": 3,
                    "long_pointer1": 2,
                    "long_pointer2": 1,
                    "long_pointer_1": 1,
                    "long_ptr": 4,
                    "long_ptr1": 9,
                    "long_ptr7": 1,
                    "long_ptr_src": 2,
                    "new_variable_name_f": 1,
                    "parsed_strings": 1,
                    "source_array": 1,
                    "src": 1,
                    "src_ptr": 1
                },
                "__stream": {
                    "file": 1,
                    "file_pointer": 3,
                    "file_ptr": 5,
                    "file_stream": 20,
                    "new_variable_name_a": 1,
                    "stream": 1
                },
                "_optarg": {
                    "optarg": 1,
                    "optarg_var": 1
                },
                "_optind": {
                    "optind": 1,
                    "optind_var": 1
                },
                "_stderr": {
                    "stderr_ptr": 1
                },
                "_stdout": {
                    "stdout_ptr": 1
                },
                "bVar2": {
                    "bool1": 2,
                    "bool_1": 1,
                    "bool_var1": 4,
                    "bool_var2": 2,
                    "byte_var": 6,
                    "byte_var1": 4,
                    "byte_var2": 6,
                    "byte_var_2": 2,
                    "byte_variable": 1,
                    "new_variable_name_2": 1,
                    "result_byte": 1
                },
                "bVar23": {
                    "bool4": 2,
                    "bool_4": 1,
                    "bool_var": 1,
                    "bool_var23": 2,
                    "bool_var3": 13,
                    "bool_var4": 4,
                    "bool_var5": 2,
                    "bool_var_23": 1,
                    "bool_var_5": 1,
                    "bool_variable3": 1,
                    "is_condition3": 1,
                    "is_double_quote": 1,
                    "new_variable_name_1c": 1
                },
                "bVar3": {
                    "bool2": 2,
                    "bool_2": 1,
                    "bool_var1": 13,
                    "bool_var2": 4,
                    "bool_var3": 4,
                    "bool_var_3": 2,
                    "bool_variable1": 1,
                    "is_condition1": 1,
                    "is_escaped": 1,
                    "new_variable_name_3": 1
                },
                "bVar4": {
                    "bool3": 2,
                    "bool_3": 1,
                    "bool_var2": 13,
                    "bool_var3": 4,
                    "bool_var4": 4,
                    "bool_var_4": 2,
                    "bool_variable2": 1,
                    "is_condition2": 1,
                    "is_single_quote": 1,
                    "new_variable_name_4": 1
                },
                "bVar6": {
                    "byte1": 2,
                    "byte_1": 1,
                    "byte_var": 1,
                    "byte_var1": 4,
                    "byte_var2": 11,
                    "byte_var3": 3,
                    "byte_var6": 4,
                    "byte_var_6": 2,
                    "byte_variable2": 1,
                    "current_char_byte": 1,
                    "new_variable_name_6": 1
                },
                "bfd_get_error": {
                    "get_bfd_error": 2
                },
                "bfd_set_default_target": {
                    "set_default_bfd_target": 1,
                    "set_default_target": 2
                },
                "bfd_set_error_program_name": {
                    "set_error_program_name": 3
                },
                "bindtextdomain": {
                    "bind_text_domain": 3
                },
                "cVar7": {
                    "char1": 2,
                    "char_1": 1,
                    "char_var": 8,
                    "char_var1": 11,
                    "char_var7": 4,
                    "char_var_7": 2,
                    "char_variable": 1,
                    "new_variable_name_7": 1,
                    "set_locale_result": 1
                },
                "dcgettext": {
                    "get_text_translation": 1
                },
                "exit": {
                    "program_exit": 2
                },
                "fclose": {
                    "file_close": 1
                },
                "ferror": {
                    "file_error": 1
                },
                "fopen": {
                    "file_open": 2,
                    "open_file": 1
                },
                "fprintf": {
                    "file_printf": 1,
                    "format_print": 1,
                    "print_to_file": 1
                },
                "fread": {
                    "file_read": 2,
                    "read_from_file": 1
                },
                "free": {
                    "free_mem": 1,
                    "free_memory": 2
                },
                "fseek": {
                    "file_seek": 3
                },
                "ftell": {
                    "file_tell": 2,
                    "get_file_position": 1
                },
                "fun_0010281b": {
                    "print_function": 1
                },
                "fwrite": {
                    "file_write": 1,
                    "write_to_file": 1
                },
                "getopt_long": {
                    "get_long_option": 2,
                    "get_opt_long": 1
                },
                "iVar21": {
                    "counter2": 1,
                    "i_var21": 1,
                    "index2": 9,
                    "index_2": 1,
                    "index_var": 1,
                    "index_var2": 3,
                    "index_var21": 1,
                    "int2": 1,
                    "int_var2": 4,
                    "int_var_1": 1,
                    "int_var_21": 1,
                    "iter_var2": 1,
                    "loop_counter2": 1,
                    "loop_index_var1": 1,
                    "new_variable_name_1a": 1,
                    "num_input_files": 1,
                    "temp_index": 1
                },
                "iVar22": {
                    "counter3": 1,
                    "i_var22": 2,
                    "index3": 9,
                    "index_3": 1,
                    "index_var2": 1,
                    "index_var22": 1,
                    "index_var3": 3,
                    "input_file_index2": 1,
                    "int3": 1,
                    "int_var3": 4,
                    "int_var_2": 1,
                    "int_var_22": 1,
                    "iter_var3": 1,
                    "loop_index_var2": 1,
                    "new_variable_name_1b": 1,
                    "temp_index2": 1
                },
                "iVar8": {
                    "counter": 1,
                    "i": 1,
                    "index": 12,
                    "index_var": 7,
                    "int1": 1,
                    "int_var": 2,
                    "int_var1": 2,
                    "int_var_8": 1,
                    "iter_var1": 1,
                    "loop_counter": 1,
                    "loop_counter1": 1,
                    "new_variable_name_8": 1
                },
                "lVar12": {
                    "long1": 1,
                    "long_1": 1,
                    "long_var": 6,
                    "long_var1": 14,
                    "long_var12": 2,
                    "long_var3": 1,
                    "long_var_1": 1,
                    "long_var_12": 1,
                    "long_variable1": 1,
                    "new_variable_name_10": 1,
                    "parsed_string_pointer": 1
                },
                "lVar19": {
                    "input_file_index": 1,
                    "long2": 1,
                    "long_2": 1,
                    "long_var1": 1,
                    "long_var19": 2,
                    "long_var2": 20,
                    "long_var_19": 1,
                    "long_var_2": 1,
                    "long_variable2": 1,
                    "new_variable_name_18": 1
                },
                "local_108": {
                    "local_size": 9,
                    "local_size_val": 1,
                    "local_size_var": 1,
                    "local_var108": 2,
                    "local_var3": 12,
                    "local_var_108": 2,
                    "local_var_3": 2,
                    "new_variable_name_1f": 1,
                    "parsed_string_length": 1
                },
                "local_10c": {
                    "local_counter2": 1,
                    "local_index2": 6,
                    "local_int2": 1,
                    "local_int_var2": 1,
                    "local_num_elements": 1,
                    "local_var": 1,
                    "local_var10c": 2,
                    "local_var2": 12,
                    "local_var_10c": 2,
                    "local_var_2": 2,
                    "max_input_files": 1,
                    "new_variable_name_1e": 1
                },
                "local_110": {
                    "current_input_file_index": 1,
                    "local_count": 1,
                    "local_counter1": 1,
                    "local_index": 2,
                    "local_index1": 5,
                    "local_int1": 1,
                    "local_int_var1": 1,
                    "local_var1": 12,
                    "local_var110": 2,
                    "local_var_1": 2,
                    "local_var_110": 2,
                    "new_variable_name_1d": 1
                },
                "local_c8": {
                    "file_stat": 2,
                    "local_stat": 12,
                    "local_stat_struct": 2,
                    "local_var4": 2,
                    "local_var_c8": 1,
                    "new_variable_name_20": 1,
                    "stat_struct": 5,
                    "stat_var": 4,
                    "stat_var1": 2
                },
                "memcpy": {
                    "copy_memory": 1,
                    "mem_copy": 1,
                    "memory_copy": 1
                },
                "memmove": {
                    "mem_move": 1
                },
                "optarg": {
                    "current_arg": 1
                },
                "param_1": {
                    "arg1": 1,
                    "argc": 3,
                    "count": 4,
                    "new_parameter_name_1": 1,
                    "num_arguments": 1,
                    "num_elements": 1,
                    "num_files": 3,
                    "num_of_params": 1,
                    "num_params": 16
                },
                "param_2": {
                    "arg2": 1,
                    "arguments": 1,
                    "argv": 3,
                    "file_array": 1,
                    "file_names": 3,
                    "file_paths": 2,
                    "filepaths": 1,
                    "files": 1,
                    "long_array": 1,
                    "long_pointer": 1,
                    "long_ptr_array": 1,
                    "long_ptr_params": 1,
                    "new_parameter_name_2": 1,
                    "param_array": 6,
                    "param_list": 4,
                    "param_values": 1,
                    "params": 1,
                    "params_array": 1
                },
                "pbVar1": {
                    "byte_pointer": 2,
                    "byte_pointer1": 6,
                    "byte_pointer_1": 1,
                    "byte_ptr": 1,
                    "byte_ptr1": 12,
                    "byte_var1": 1,
                    "current_byte": 1,
                    "new_variable_name_1": 1,
                    "ptr1": 2,
                    "ptr_1": 1,
                    "ptr_byte1": 1,
                    "ptr_byte_1": 1
                },
                "pbVar18": {
                    "byte_pointer2": 2,
                    "byte_pointer4": 6,
                    "byte_pointer_3": 1,
                    "byte_ptr": 1,
                    "byte_ptr18": 1,
                    "byte_ptr3": 3,
                    "byte_ptr4": 11,
                    "byte_ptr_2": 1,
                    "byte_ptr_var_18": 1,
                    "current_byte_pointer": 1,
                    "new_variable_name_16": 1,
                    "ptr3": 1,
                    "ptr_byte18": 1
                },
                "pbVar20": {
                    "byte_pointer3": 2,
                    "byte_pointer5": 6,
                    "byte_pointer_4": 1,
                    "byte_ptr2": 1,
                    "byte_ptr20": 1,
                    "byte_ptr4": 3,
                    "byte_ptr5": 10,
                    "byte_ptr_3": 1,
                    "byte_var_20": 1,
                    "new_variable_name_19": 1,
                    "parsed_byte_pointer": 1,
                    "ptr4": 1,
                    "ptr_byte20": 1
                },
                "pcVar10": {
                    "char_pointer1": 1,
                    "char_pointer2": 7,
                    "char_pointer_2": 1,
                    "char_ptr10": 1,
                    "char_ptr2": 11,
                    "char_ptr6": 1,
                    "char_ptr_var_10": 1,
                    "file_name": 1,
                    "new_variable_name_c": 1,
                    "param_char_ptr": 1,
                    "ptr_char10": 1,
                    "ptr_char_var2": 1,
                    "str3": 1,
                    "str_2": 1,
                    "str_var2": 1
                },
                "pcVar17": {
                    "char_pointer2": 1,
                    "char_pointer3": 4,
                    "char_pointer_3": 1,
                    "char_ptr17": 1,
                    "char_ptr3": 9,
                    "char_ptr7": 1,
                    "char_var2": 1,
                    "new_variable_name_15": 1,
                    "ptr_char17": 1,
                    "ptr_char_var3": 1,
                    "str": 1,
                    "str4": 1,
                    "str_3": 1,
                    "str_pointer": 1,
                    "str_print": 1,
                    "str_var3": 1,
                    "str_var_17": 1,
                    "string": 1,
                    "string_var": 1,
                    "string_var1": 1
                },
                "pcVar5": {
                    "char_pointer": 7,
                    "char_pointer1": 2,
                    "char_ptr": 4,
                    "char_ptr1": 9,
                    "char_ptr5": 1,
                    "current_char": 1,
                    "new_variable_name_5": 1,
                    "ptr_char5": 1,
                    "ptr_char_var": 1,
                    "str": 1,
                    "str1": 1,
                    "str_var1": 1,
                    "str_var_5": 1
                },
                "plVar13": {
                    "file_names_pointer": 1,
                    "file_names_ptr": 1,
                    "file_paths_ptr": 1,
                    "input_files": 1,
                    "long_pointer1": 1,
                    "long_pointer2": 3,
                    "long_pointer_2": 1,
                    "long_ptr1": 3,
                    "long_ptr2": 4,
                    "long_ptr8": 1,
                    "long_ptr_1": 1,
                    "long_ptr_array1": 1,
                    "long_ptr_params": 1,
                    "new_variable_name_11": 1,
                    "param2_pointer": 1,
                    "param2_ptr": 1,
                    "param_array": 1,
                    "param_array2": 1,
                    "param_list2": 1,
                    "param_list_ptr": 1,
                    "param_ptr1": 1,
                    "params_ptr": 1,
                    "ptr_long_array": 1,
                    "ptr_long_var": 1
                },
                "plVar14": {
                    "file_names_ptr2": 1,
                    "long_pointer": 1,
                    "long_pointer2": 1,
                    "long_pointer3": 3,
                    "long_pointer_3": 1,
                    "long_ptr2": 3,
                    "long_ptr3": 4,
                    "long_ptr9": 1,
                    "long_ptr_2": 1,
                    "long_ptr_array2": 1,
                    "long_ptr_iter": 1,
                    "new_variable_name_12": 1,
                    "param2_pointer2": 1,
                    "param2_var1": 1,
                    "param_array2": 1,
                    "param_array3": 1,
                    "param_list3": 1,
                    "param_list_ptr2": 1,
                    "param_ptr2": 1,
                    "params_ptr_1": 1,
                    "parsed_string_pointer2": 1,
                    "ptr_long_array2": 1,
                    "ptr_long_var2": 1,
                    "temp_ptr": 1
                },
                "printf": {
                    "print": 1,
                    "print_formatted": 2
                },
                "putc": {
                    "put_char": 2,
                    "put_character": 1
                },
                "sVar11": {
                    "array_size": 1,
                    "file_size": 1,
                    "new_variable_name_d": 1,
                    "size": 14,
                    "size_t_var": 1,
                    "size_val": 1,
                    "size_var": 9,
                    "size_var3": 1,
                    "size_var_11": 1,
                    "string_size": 1
                },
                "setlocale": {
                    "set_locale": 3
                },
                "stat": {
                    "get_file_statistics": 1,
                    "get_file_status": 1
                },
                "stoi": {
                    "string_to_int": 1
                },
                "strlen": {
                    "str_len": 1
                },
                "strtol": {
                    "str_to_long": 1
                },
                "textdomain": {
                    "set_domain": 1,
                    "text_domain": 2
                },
                "uVar15": {
                    "new_variable_name_13": 1,
                    "result": 1,
                    "stdio_mode": 1,
                    "ulong1": 1,
                    "ulong_1": 1,
                    "ulong_var": 11,
                    "ulong_var1": 10,
                    "ulong_var15": 2,
                    "ulong_var3": 1,
                    "ulong_var_15": 1,
                    "ulong_variable": 1
                },
                "uVar16": {
                    "error_msg": 1,
                    "new_variable_name_14": 1,
                    "result2": 2,
                    "result_2": 1,
                    "result_var4": 1,
                    "return_value": 1,
                    "str_ptr": 1,
                    "temp_var": 1,
                    "u_var16": 1,
                    "ulong_var16": 1,
                    "ulong_var2": 1,
                    "undefined8_var": 4,
                    "undefined8_var1": 1,
                    "undefined8_var_16": 1,
                    "undefined8_variable": 1,
                    "undefined_var": 1,
                    "undefined_var1": 1,
                    "undefined_var16": 1,
                    "undefined_var2": 8,
                    "undefined_var_16": 1
                },
                "uVar9": {
                    "new_variable_name_9": 1,
                    "result": 4,
                    "result_var": 2,
                    "return_code": 1,
                    "return_val": 4,
                    "return_value": 3,
                    "return_var": 2,
                    "u_var9": 1,
                    "undefined4_var": 2,
                    "undefined4_var_9": 1,
                    "undefined_var": 4,
                    "undefined_var1": 4,
                    "undefined_var9": 1,
                    "undefined_var_9": 1
                },
                "unaff_RBP": {
                    "current_byte_pointer_func": 1,
                    "new_variable_name_17": 1,
                    "pointer_variable": 1,
                    "ptr_2": 1,
                    "ptr_unaff_rbp": 1,
                    "ptr_undefined": 1,
                    "unaff_ptr": 1,
                    "unaff_rbp": 3,
                    "unaffected_rbp": 1,
                    "unaffined_ptr": 1,
                    "undefined_double_pointer": 1,
                    "undefined_pointer": 5,
                    "undefined_ptr": 7,
                    "undefined_ptr1": 2,
                    "var_rbp": 1
                },
                "xbf_get_error": {
                    "bfd_get_error": 1
                },
                "xexit": {
                    "exit": 1
                },
                "xmalloc": {
                    "alloc_mem": 1,
                    "allocate_memory": 2
                },
                "xmalloc_set_program_name": {
                    "set_program_name": 3
                },
                "xrealloc": {
                    "realloc_mem": 1
                },
                "xstrdup": {
                    "duplicate_string": 1,
                    "str_dup": 1,
                    "str_duplicate": 1
                }
            },
            "called": [
                "bfd_errmsg",
                "xexit",
                "fprintf",
                "bfd_get_error",
                "xstrdup",
                "fseek",
                "free",
                "FUN_0010281b",
                "memcpy",
                "fwrite",
                "FUN_00102e90",
                "stat",
                "bindtextdomain",
                "FUN_00102db0",
                "setlocale",
                "fclose",
                "xrealloc",
                "fopen",
                "fread",
                "ftell",
                "FUN_00102f40",
                "getopt_long",
                "bfd_set_default_target",
                "exit",
                "putc",
                "xmalloc_set_program_name",
                "printf",
                "xmalloc",
                "dcgettext",
                "bfd_set_error_program_name",
                "FUN_00102980",
                "textdomain",
                "ferror",
                "memmove",
                "strtol",
                "bfd_init",
                "strlen"
            ],
            "calling": [
                "entry"
            ],
            "code": "\n\n\nundefined4 parse_command_line_arguments_00103130(int num_params,long *param_array)\n\n{\n  byte *byte_ptr1;\n  byte byte_var2;\n  bool bool_var1;\n  bool bool_var2;\n  char *char_ptr1;\n  byte byte_var2;\n  char char_var1;\n  int index;\n  undefined4 undefined_var;\n  FILE *file_stream;\n  byte *byte_ptr2;\n  char *char_ptr2;\n  size_t size;\n  byte *byte_ptr3;\n  long *long_ptr1;\n  long long_var1;\n  long *long_ptr2;\n  long *long_ptr3;\n  ulong ulong_var;\n  undefined8 undefined_var2;\n  char *char_ptr3;\n  byte *byte_ptr4;\n  undefined **undefined_ptr;\n  long long_var2;\n  byte *byte_ptr5;\n  int index2;\n  int index3;\n  bool bool_var3;\n  int local_var1;\n  int local_var2;\n  size_t local_var3;\n  get_file_status local_stat;\n  \n  setlocale(5,\"\");\n  char_ptr3 = \"binutils\";\n  setlocale(0,\"\");\n  bindtextdomain(\"binutils\",\"/usr/share/locale\");\n  textdomain(\"binutils\");\n  DAT_00107350 = *param_array;\n  xmalloc_set_program_name();\n  bfd_set_error_program_name(DAT_00107350);\n  long_ptr2 = param_array;\n  if (1 < num_params) {\n    local_var2 = 2000;\n    local_var1 = 0;\n    index = 1;\n    do {\n      while( true ) {\n        index3 = index;\n        undefined_ptr = (undefined **)(long)index3;\n        if (*(char *)long_ptr2[(long)undefined_ptr] == '@') break;\nLAB_001035a0:\n        if (num_params <= index3 + 1) goto LAB_00103612;\nLAB_001035aa:\n        index = index3 + 1;\n        local_var1 = index3;\n      }\n      local_var2 = local_var2 + -1;\n      if (local_var2 == 0) goto LAB_001039c5;\n      char_ptr3 = (char *)long_ptr2[(long)undefined_ptr] + 1;\n      index = get_file_status(char_ptr3,&local_stat);\n      if (index < 0) goto LAB_001035a0;\n      if ((local_stat.st_mode & 0xf000) == 0x4000) {\n        long_var2 = *long_ptr2;\n        char_ptr3 = \"%s: error: @-file refers to a directory\\n\";\n        do {\n          fprintf(stderr_ptr,char_ptr3,long_var2);\n          xexit(1);\nLAB_001039c5:\n          long_var2 = *long_ptr2;\n          char_ptr3 = \"%s: error: too many @-files encountered\\n\";\n        } while( true );\n      }\n      file_stream = fopen(char_ptr3,\"r\");\n      if (file_stream == (FILE *)0x0) goto LAB_001035a0;\n      index = fseek(file_stream,0,2);\n      if (((index == -1) ||\n          (char_ptr3 = (char *)ftell(file_stream), char_ptr3 == (char *)0xffffffffffffffff)) ||\n         (index = fseek(file_stream,0,0), index == -1)) {\nLAB_00103600:\n        fclose(file_stream);\n        if (index3 + 1 < num_params) goto LAB_001035aa;\n        break;\n      }\n      byte_ptr2 = (byte *)xmalloc(char_ptr3 + 1);\n      char_ptr2 = (char *)fread(byte_ptr2,1,(size_t)char_ptr3,file_stream);\n      if ((char_ptr3 != char_ptr2) && (index = ferror(file_stream), index != 0)) {\n        free_memory(byte_ptr2);\n        goto LAB_00103600;\n      }\n      byte_ptr2[(long)char_ptr2] = 0;\n      byte_var2 = *byte_ptr2;\n      byte_ptr4 = byte_ptr2;\n      if (byte_var2 != 0) {\nLAB_00103300:\n        if (((&_sch_istable)[(ulong)byte_var2 * 2] & 0x40) != 0) goto LAB_001032f0;\n        size = strlen((char *)byte_ptr2);\n        byte_ptr3 = (byte *)xmalloc(size + 1);\n        index = 0;\n        bool_var3 = false;\n        bool_var2 = false;\n        long_var2 = 0;\n        long_ptr1 = (long *)0x0;\n        bool_var1 = false;\n        byte_ptr4 = byte_ptr2;\n        do {\n          while (((&_sch_istable)[(ulong)*byte_ptr4 * 2] & 0x40) != 0) {\n            byte_ptr4 = byte_ptr4 + 1;\n          }\n          if ((index == 0) || (long_ptr3 = long_ptr1 + long_var2, index + -1 <= (int)long_var2)) {\n            if (long_ptr1 == (long *)0x0) {\n              index = 8;\n              long_ptr1 = (long *)xmalloc(0x40);\n              long_ptr3 = long_ptr1 + long_var2;\n              *long_ptr3 = 0;\n            }\n            else {\n              index = index * 2;\n              long_ptr1 = (long *)xrealloc(long_ptr1,(long)index << 3);\n              long_ptr3 = long_ptr1 + long_var2;\n              *long_ptr3 = 0;\n            }\n          }\n          byte_var2 = *byte_ptr4;\n          byte_ptr5 = byte_ptr3;\n          while (byte_var2 != 0) {\n            while( true ) {\n              if ((((&_sch_istable)[(ulong)byte_var2 * 2] & 0x40) != 0) &&\n                 (!(bool)(bool_var2 | bool_var1 | bool_var3))) {\n                bool_var1 = false;\n                bool_var3 = false;\n                bool_var2 = false;\n                goto LAB_00103410;\n              }\n              if (!bool_var1) break;\n              byte_ptr4 = byte_ptr4 + 1;\n              *byte_ptr5 = byte_var2;\n              byte_ptr5 = byte_ptr5 + 1;\n              bool_var1 = false;\n              byte_var2 = *byte_ptr4;\n              if (byte_var2 == 0) goto LAB_00103410;\n            }\n            if (byte_var2 == 0x5c) {\n              bool_var1 = true;\n            }\n            else if (bool_var2) {\n              if (byte_var2 == 0x27) {\n                bool_var2 = false;\n              }\n              else {\nLAB_00103585:\n                *byte_ptr5 = byte_var2;\n                byte_ptr5 = byte_ptr5 + 1;\n              }\n            }\n            else if (bool_var3) {\n              if (byte_var2 != 0x22) goto LAB_00103585;\n              bool_var3 = false;\n            }\n            else if (byte_var2 == 0x27) {\n              bool_var2 = true;\n            }\n            else {\n              if (byte_var2 != 0x22) goto LAB_00103585;\n              bool_var3 = true;\n            }\n            byte_ptr1 = byte_ptr4 + 1;\n            byte_ptr4 = byte_ptr4 + 1;\n            byte_var2 = *byte_ptr1;\n          }\nLAB_00103410:\n          *byte_ptr5 = 0;\n          long_var1 = xstrdup(byte_ptr3);\n          *long_ptr3 = long_var1;\n          long_ptr1[long_var2 + 1] = 0;\n          byte_var2 = *byte_ptr4;\n          byte_var2 = (&_sch_istable)[(ulong)byte_var2 * 2];\n          while ((byte_var2 & 0x40) != 0) {\n            byte_var2 = byte_ptr4[1];\n            byte_ptr4 = byte_ptr4 + 1;\n            byte_var2 = (&_sch_istable)[(ulong)byte_var2 * 2];\n          }\n          long_var2 = long_var2 + 1;\n        } while (byte_var2 != 0);\n        free_memory(byte_ptr3);\n        long_ptr3 = long_ptr2;\n        if (param_array == long_ptr2) goto LAB_0010372c;\n        goto LAB_001034ad;\n      }\nLAB_0010370f:\n      long_ptr1 = (long *)xmalloc();\n      *long_ptr1 = 0;\n      if (param_array == long_ptr2) {\nLAB_0010372c:\n        if (*long_ptr2 == 0) {\n          index = 0;\n        }\n        else {\n          long_var2 = 1;\n          do {\n            index = (int)long_var2;\n            long_ptr3 = long_ptr2 + long_var2;\n            long_var2 = long_var2 + 1;\n          } while (*long_ptr3 != 0);\n        }\n        long_var1 = 0;\n        long_ptr3 = (long *)xmalloc((long)(index + 1) << 3);\n        long_var2 = *long_ptr2;\n        while (long_var2 != 0) {\n          undefined_var2 = xstrdup();\n          *(undefined8 *)((long)long_ptr3 + long_var1) = undefined_var2;\n          long_var1 = long_var1 + 8;\n          long_var2 = *(long *)((long)long_ptr2 + long_var1);\n        }\n        *(undefined8 *)((long)long_ptr3 + long_var1) = 0;\nLAB_001034ad:\n        long_ptr2 = long_ptr3;\n        if (*long_ptr1 == 0) goto LAB_001038cc;\n        char_ptr3 = (char *)0x0;\n        do {\n          char_ptr3 = char_ptr3 + 1;\n        } while (long_ptr1[(long)char_ptr3] != 0);\n        local_var3 = (long)char_ptr3 * 8;\n      }\n      else {\nLAB_001038cc:\n        char_ptr3 = (char *)0x0;\n        local_var3 = 0;\n      }\n      free_memory((void *)long_ptr2[(long)undefined_ptr]);\n      long_ptr2 = (long *)xrealloc(long_ptr2,(long)(char_ptr3 + (long)num_params + 1) * 8);\n      index2 = num_params + -1 + (int)char_ptr3;\n      memmove(long_ptr2 + (long)(undefined **)((long)undefined_ptr + (long)char_ptr3),\n              long_ptr2 + (long)((long)undefined_ptr + 1),(long)(num_params - index3) << 3);\n      memcpy(long_ptr2 + (long)undefined_ptr,long_ptr1,local_var3);\n      free_memory(long_ptr1);\n      free_memory(byte_ptr2);\n      fclose(file_stream);\n      undefined_ptr = (undefined **)((long)undefined_ptr + (long)char_ptr3);\n      index = local_var1 + 1;\n      num_params = index2;\n    } while (local_var1 + 1 < index2);\n  }\nLAB_00103612:\n  index = bfd_init();\n  if (index != 0x118) goto LAB_001039f8;\n  char_ptr2 = \"x86_64-pc-linux-gnu\";\n  undefined_ptr = &PTR_s_common_001071c0;\n  char_ptr3 = \"ABGHhVvdfotx\";\n  char_var1 = bfd_set_default_target(\"x86_64-pc-linux-gnu\");\n  if (char_var1 == '\\0') {\n    undefined_var = bfd_get_error();\n    char_ptr3 = (char *)bfd_errmsg(undefined_var);\n    undefined_var2 = dcgettext(0,\"can\\'t set BFD default target to `%s\\': %s\",5);\n    ulong_var = FUN_00102db0(undefined_var2,\"x86_64-pc-linux-gnu\",char_ptr3);\n    goto LAB_00103b74;\n  }\n  do {\n    while (index = getopt_long(num_params,long_ptr2,char_ptr3,undefined_ptr,0), index != -1) {\n      char_ptr1 = char_ptr2;\n      if (index < 0x79) {\n        if (index < 0x3f) {\nswitchD_001037fd_caseD_40:\n          index = getopt_long(num_params,long_ptr2,char_ptr3,undefined_ptr,0);\n          if (index == -1) break;\n          if (0x78 < index) goto LAB_00103937;\n          if (0x3e < index) {\n            switch(index) {\n            case 0x3f:\n            case 0x48:\n            case 0x68:\n              goto switchD_001037fd_caseD_3f;\n            case 0x41:\n              goto switchD_001037fd_caseD_41;\n            case 0x42:\n              goto switchD_001037fd_caseD_42;\n            case 0x47:\n              goto switchD_001037fd_caseD_47;\n            case 0x56:\n            case 0x76:\n              goto switchD_001037fd_caseD_56;\n            case 100:\n              goto switchD_001037fd_caseD_64;\n            case 0x6f:\n              goto switchD_001037fd_caseD_6f;\n            case 0x74:\n              goto switchD_001037fd_caseD_74;\n            case 0x78:\n              goto switchD_001037fd_caseD_78;\n            }\n          }\n          do {\n            do {\n              while( true ) {\n                index = getopt_long(num_params,long_ptr2,char_ptr3,undefined_ptr,0);\n                if (index == -1) goto LAB_00103664;\n                if (0x78 < index) break;\n                if (0x3e < index) {\n                  switch(index) {\n                  case 0x3f:\n                  case 0x48:\n                  case 0x68:\n                    goto switchD_001037fd_caseD_3f;\n                  case 0x41:\n                    goto switchD_001037fd_caseD_41;\n                  case 0x42:\n                    goto switchD_001037fd_caseD_42;\n                  case 0x47:\n                    goto switchD_001037fd_caseD_47;\n                  case 0x56:\n                  case 0x76:\n                    goto switchD_001037fd_caseD_56;\n                  case 100:\n                    goto switchD_001037fd_caseD_64;\n                  case 0x6f:\n                    goto switchD_001037fd_caseD_6f;\n                  case 0x74:\n                    goto switchD_001037fd_caseD_74;\n                  case 0x78:\n                    goto switchD_001037fd_caseD_78;\n                  }\n                }\n              }\nLAB_00103937:\n              if (index == 0xca) goto LAB_001039d1;\n            } while (0xca < index);\n            if (index == 200) goto LAB_00103869;\n          } while (index != 0xc9);\n          goto LAB_00103a15;\n        }\n        switch(index) {\n        case 0x3f:\n        case 0x48:\n        case 0x68:\n          goto switchD_001037fd_caseD_3f;\n        default:\n          goto switchD_001037fd_caseD_40;\n        case 0x41:\n          goto switchD_001037fd_caseD_41;\n        case 0x42:\nswitchD_001037fd_caseD_42:\n          DAT_00107348 = 0;\n          break;\n        case 0x47:\nswitchD_001037fd_caseD_47:\n          DAT_00107348 = 2;\n          break;\n        case 0x56:\n        case 0x76:\nswitchD_001037fd_caseD_56:\n          _DAT_00107338 = 1;\n          break;\n        case 100:\n          goto switchD_001037fd_caseD_64;\n        case 0x6f:\n          goto switchD_001037fd_caseD_6f;\n        case 0x74:\nswitchD_001037fd_caseD_74:\n          _DAT_00107334 = 1;\n          break;\n        case 0x78:\n          goto switchD_001037fd_caseD_78;\n        }\n      }\n      else if (index == 0xca) {\nLAB_001039d1:\n        DAT_00107340 = optarg;\n      }\n      else {\n        if (0xca < index) goto switchD_001037fd_caseD_40;\n        if (index != 200) {\n          if (index != 0xc9) goto switchD_001037fd_caseD_40;\n          goto LAB_00103a15;\n        }\nLAB_00103869:\n        char_ptr2 = optarg;\n        if (0x31 < (byte)(*optarg + 0xbeU)) goto LAB_00103bc8;\n        ulong_var = 1L << (*optarg + 0xbeU & 0x3f);\n        if ((ulong_var & 0x2000000020) != 0) goto switchD_001037fd_caseD_47;\n        if ((ulong_var & 0x2000000020000) == 0) {\nLAB_00103b74:\n          if ((ulong_var & 0x100000001) == 0) goto LAB_00103bc8;\n          goto switchD_001037fd_caseD_42;\n        }\nswitchD_001037fd_caseD_41:\n        DAT_00107348 = 1;\n      }\n    }\nLAB_00103664:\n    if (_DAT_00107338 != 0) {\n      print_formatted(\"GNU %s %s\\n\",&DAT_00104067,\"(GNU Binutils for Debian) 2.40\");\n      char_ptr3 = (char *)dcgettext(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n      print_formatted(char_ptr3);\n      char_ptr3 = (char *)dcgettext(0,\n                                  \"This program is free_memory software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                                  ,5);\n      print_formatted(char_ptr3);\n                    \n      program_xexit(0);\n    }\n    if (_DAT_00107330 == 0) {\n      index = optind - num_params;\n      if (optind == num_params) {\n        FUN_00102980(\"a.out\");\n      }\n      else {\n        while (long_var2 = (long)optind, SBORROW4(optind,num_params) != index < 0) {\n          optind = optind + 1;\n          FUN_00102980(long_ptr2[long_var2]);\n          index = optind - num_params;\n        }\n      }\n      if ((_DAT_00107334 != 0) && ((DAT_00107348 & 0xfffffffd) == 0)) {\n        long_var2 = DAT_00107320 + DAT_00107328 + DAT_00107318;\n        index = (-(uint)(DAT_00107348 == 0) & 0xfffffffd) + 10;\n        bool_var3 = DAT_00107348 == 0;\n        FUN_00102e90(index);\n        index3 = (int)(char)((-bool_var3 & 0xe9U) + 0x20);\n        putc(index3,stdout_ptr);\n        FUN_00102e90(index,DAT_00107320);\n        putc(index3,stdout_ptr);\n        FUN_00102e90(index,DAT_00107318);\n        putc(index3,stdout_ptr);\n        if (DAT_00107348 == 0) {\n          char_ptr3 = \"%7lu\\t%7lx\";\n          if (DAT_0010733c == 1) {\n            char_ptr3 = \"%7lo\\t%7lx\";\n          }\n          print_formatted(char_ptr3,long_var2,long_var2);\n        }\n        else {\n          FUN_00102e90(index,long_var2);\n        }\n        putc(index3,stdout_ptr);\n        fwrite(\"(TOTALS)\\n\",1,9,stdout_ptr);\n      }\n      return DAT_00107314;\n    }\n    FUN_0010281b(stdout_ptr,0);\nLAB_001039f8:\n    undefined_var2 = dcgettext(0,\"fatal error: libbfd ABI mismatch\",5);\n    FUN_00102db0(undefined_var2);\nLAB_00103a15:\n    long_var2 = strtol(optarg,(char **)0x0,10);\n    char_ptr2 = optarg;\n    index = (int)long_var2;\n    char_ptr1 = &current_arg;\n    if (index == 10) {\nswitchD_001037fd_caseD_64:\n      char_ptr2 = char_ptr1;\n      DAT_0010733c = 0;\n    }\n    else if (index == 0x10) {\nswitchD_001037fd_caseD_78:\n      char_ptr2 = char_ptr1;\n      DAT_0010733c = 2;\n    }\n    else {\n      if (index != 8) {\n        undefined_var2 = dcgettext(0,\"Invalid radix: %s\\n\",5);\n        char_ptr3 = &current_arg;\n        do {\n          FUN_00102f40(undefined_var2,char_ptr2);\n          char_ptr2 = char_ptr3;\nswitchD_001037fd_caseD_3f:\n          FUN_0010281b(stderr_ptr,1);\nLAB_00103bc8:\n          undefined_var2 = dcgettext(0,\"invalid argument to --format: %s\",5);\n          char_ptr3 = char_ptr2;\n        } while( true );\n      }\nswitchD_001037fd_caseD_6f:\n      char_ptr2 = char_ptr1;\n      DAT_0010733c = 1;\n    }\n  } while( true );\nLAB_001032f0:\n  byte_var2 = byte_ptr4[1];\n  byte_ptr4 = byte_ptr4 + 1;\n  if (byte_var2 == 0) goto LAB_0010370f;\n  goto LAB_00103300;\n}\n\n",
            "current_name": "parse_command_line_arguments_00103130",
            "entrypoint": "0x00103130",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103130": "parse_command_line_arguments_00103130",
                "__ptr": "byte_ptr3",
                "__s": "byte_ptr2",
                "__src": "long_ptr1",
                "__stream": "file_stream",
                "_optarg": "optarg",
                "_optind": "optind",
                "_stderr": "stderr_ptr",
                "_stdout": "stdout_ptr",
                "bVar2": "byte_var2",
                "bVar23": "bool_var3",
                "bVar3": "bool_var1",
                "bVar4": "bool_var2",
                "bVar6": "byte_var2",
                "bfd_get_error": "get_bfd_error",
                "bfd_set_default_target": "set_default_target",
                "bfd_set_error_program_name": "set_error_program_name",
                "bindtextdomain": "bind_text_domain",
                "cVar7": "char_var1",
                "dcgettext": "get_text_translation",
                "exit": "program_exit",
                "fclose": "file_close",
                "ferror": "file_error",
                "fopen": "file_open",
                "fprintf": "file_printf",
                "fread": "file_read",
                "free": "free_memory",
                "fseek": "file_seek",
                "ftell": "file_tell",
                "fwrite": "write_to_file",
                "getopt_long": "get_long_option",
                "iVar21": "index2",
                "iVar22": "index3",
                "iVar8": "index",
                "lVar12": "long_var1",
                "lVar19": "long_var2",
                "local_108": "local_var3",
                "local_10c": "local_var2",
                "local_110": "local_var1",
                "local_c8": "local_stat",
                "memcpy": "copy_memory",
                "memmove": "mem_move",
                "optarg": "current_arg",
                "param_1": "num_params",
                "param_2": "param_array",
                "pbVar1": "byte_ptr1",
                "pbVar18": "byte_ptr4",
                "pbVar20": "byte_ptr5",
                "pcVar10": "char_ptr2",
                "pcVar17": "char_ptr3",
                "pcVar5": "char_ptr1",
                "plVar13": "long_ptr2",
                "plVar14": "long_ptr3",
                "printf": "print_formatted",
                "putc": "put_char",
                "sVar11": "size",
                "setlocale": "set_locale",
                "stat": "get_file_status",
                "strlen": "str_len",
                "strtol": "str_to_long",
                "textdomain": "text_domain",
                "uVar15": "ulong_var",
                "uVar16": "undefined_var2",
                "uVar9": "undefined_var",
                "unaff_RBP": "undefined_ptr",
                "xexit": "exit",
                "xmalloc": "allocate_memory",
                "xmalloc_set_program_name": "set_program_name",
                "xrealloc": "realloc_mem",
                "xstrdup": "str_dup"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103c50": {
            "additional_data": {
                "0x1000": {
                    "constant_mask1": 1
                },
                "0x108258": {
                    "constant_address2": 1
                },
                "0x108370": {
                    "constant_address1": 1
                },
                "DAT_001072d0": {
                    "max_length": 1,
                    "max_str_len": 1,
                    "max_string_length": 2
                },
                "DAT_001072d8": {
                    "max_argument": 1,
                    "max_ary_element": 1,
                    "max_param6": 1,
                    "max_value_of_arg2_element6": 1
                },
                "DAT_001072e0": {
                    "accumulated_data": 1,
                    "total_length": 2,
                    "total_string_length": 1
                },
                "FUN_00103c50": {
                    "extract_and_update_data": 1,
                    "extract_data": 2,
                    "extract_data_from_binary": 2,
                    "extract_data_from_param": 1,
                    "extract_info": 1,
                    "process_args": 1,
                    "process_binary": 1,
                    "process_binary_data": 5,
                    "process_data": 1,
                    "process_param": 3,
                    "process_parameters": 1,
                    "process_params": 4,
                    "update_data": 5,
                    "update_data_stats": 1,
                    "update_parameters": 1
                },
                "in_RAX": {
                    "result": 4,
                    "return_val": 2,
                    "return_value": 8,
                    "undefined_return_value": 1
                },
                "param_1": {
                    "arg1": 5,
                    "data": 1,
                    "data_pointer": 1,
                    "file_descriptor": 1,
                    "file_handle": 1,
                    "input": 11,
                    "input_param": 1,
                    "input_string": 1,
                    "param1": 5,
                    "param_1": 3,
                    "result": 1
                },
                "param_2": {
                    "arg2": 4,
                    "arg_list": 1,
                    "args": 3,
                    "arguments": 9,
                    "arguments_array": 1,
                    "argv": 4,
                    "param2": 4,
                    "param_array": 2,
                    "parameters": 1,
                    "string_array": 1,
                    "strings_array": 1
                },
                "param_3": {
                    "arg1": 1,
                    "arg3": 6,
                    "data1": 1,
                    "param3": 9,
                    "param_3": 5,
                    "param_len": 1,
                    "unused": 3,
                    "unused1": 1,
                    "unused_param": 1,
                    "unused_param1": 2,
                    "value1": 1
                },
                "param_4": {
                    "arg2": 1,
                    "arg4": 5,
                    "data2": 1,
                    "output": 1,
                    "param4": 7,
                    "param_4": 4,
                    "result": 2,
                    "ret_val": 1,
                    "return_value": 5,
                    "unused2": 1,
                    "unused_param2": 2,
                    "value2": 1
                },
                "pcVar1": {
                    "arg": 1,
                    "arg8": 3,
                    "argument_8": 2,
                    "argument_ptr": 1,
                    "element": 1,
                    "param2_ptr8": 1,
                    "param_2_8": 1,
                    "param_2_elem8": 1,
                    "pointer": 6,
                    "pointer_ary_element_8": 1,
                    "pointer_to_arg2_element8": 1,
                    "pointer_to_data": 1,
                    "pointer_to_str": 1,
                    "pointer_to_string": 1,
                    "pointer_to_var1": 1,
                    "pointer_var": 1,
                    "ptr": 1,
                    "ptr_to_string": 1,
                    "str_pointer": 1,
                    "str_ptr": 2,
                    "string_value": 2
                },
                "sVar2": {
                    "arg_string_length": 1,
                    "args_length": 1,
                    "argument_length": 4,
                    "data_length": 1,
                    "input_len": 1,
                    "input_length": 1,
                    "length": 7,
                    "length_of_string_arg2": 1,
                    "param_2_len": 1,
                    "param_length": 1,
                    "str_len": 5,
                    "str_length": 1,
                    "string_length": 6
                },
                "strlen": {
                    "get_str_len": 1,
                    "get_string_length": 2
                }
            },
            "called": [
                "FUN_001026ea",
                "strlen"
            ],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\n/* WARNING: Type propagation algorithm not settling */\n\nundefined8 extract_and_update_data_00103c50(undefined8 input,char **arguments,undefined8 param3,undefined8 param4)\n\n{\n  char *pointer;\n  undefined8 return_value;\n  size_t length;\n  \n  if (*(uint *)((long)arguments + 0x24) != 0) {\n    if (((arguments != (char **)0x108370) && ((*(uint *)((long)arguments + 0x24) & 0x1000) == 0)) &&\n       (arguments != (char **)0x108258)) {\n      pointer = arguments[8];\n      length = strlen(*arguments);\n      if (DAT_001072d0 < (int)length) {\n        DAT_001072d0 = (int)length;\n      }\n      DAT_001072e0 = DAT_001072e0 + (long)pointer;\n      if (DAT_001072d8 < arguments[6]) {\n        DAT_001072d8 = arguments[6];\n      }\n    }\n    return param4;\n  }\n  return return_value;\n}\n\n",
            "current_name": "extract_and_update_data_00103c50",
            "entrypoint": "0x00103c50",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103c50": "extract_and_update_data_00103c50",
                "in_RAX": "return_value",
                "param_1": "input",
                "param_2": "arguments",
                "param_3": "param3",
                "param_4": "param4",
                "pcVar1": "pointer",
                "sVar2": "length",
                "strlen": "get_string_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103cc0": {
            "additional_data": {
                "DAT_001072e0": {
                    "accumulator": 1,
                    "data": 1,
                    "total_sum": 1
                },
                "FUNC_0010274a": {
                    "cleanup": 1,
                    "do_something": 1,
                    "function3": 1,
                    "helper_function": 1,
                    "initialize": 13,
                    "initialize_data": 3,
                    "initialize_function": 1,
                    "reinitialize_data": 1,
                    "reverse_data": 2,
                    "some_function": 1,
                    "sub_function": 1
                },
                "FUN_0010274a": {
                    "initialize_state": 1
                },
                "FUN_00102fe0": {
                    "modify_data": 1,
                    "perform_action": 1,
                    "process_data": 6,
                    "process_data2": 1,
                    "process_data_element": 1,
                    "process_data_entry": 4,
                    "process_data_helper": 4,
                    "process_data_item": 2,
                    "process_sub_function": 4,
                    "update_data": 2,
                    "update_value": 2
                },
                "FUN_00103cc0": {
                    "process_data": 19,
                    "update_data": 8,
                    "update_data_and_call_function": 2,
                    "update_data_and_call_functions": 1,
                    "update_data_if_valid": 1
                },
                "param_1": {
                    "arg1": 10,
                    "data": 3,
                    "data1": 1,
                    "entry": 2,
                    "input": 3,
                    "input_param1": 1,
                    "param": 1,
                    "param1": 4,
                    "unknown_param": 1,
                    "unused": 4,
                    "unused_param": 1
                },
                "param_2": {
                    "arg2": 8,
                    "data": 10,
                    "data2": 1,
                    "data_array": 3,
                    "data_ptr": 1,
                    "input_param2": 1,
                    "param2": 3,
                    "pointer": 2,
                    "value": 2
                },
                "param_3": {
                    "arg3": 4,
                    "code": 1,
                    "data3": 1,
                    "element_param": 1,
                    "entry": 1,
                    "entry_param": 1,
                    "length": 1,
                    "value": 2
                }
            },
            "called": [
                "FUN_00102fe0",
                "FUN_0010274a"
            ],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\nvoid process_data_00103cc0(undefined8 arg1,undefined8 *data)\n\n{\n  if ((((*(uint *)((long)data + 0x24) != 0) && (data != (undefined8 *)0x108370)) &&\n      ((*(uint *)((long)data + 0x24) & 0x1000) == 0)) && (data != (undefined8 *)0x108258)) {\n    DAT_001072e0 = DAT_001072e0 + data[8];\n    FUN_00102fe0(*data,data[8],data[6]);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "process_data_00103cc0",
            "entrypoint": "0x00103cc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103cc0": "process_data_00103cc0",
                "param_1": "arg1",
                "param_2": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103d20": {
            "additional_data": {
                "DAT_00107350": {
                    "program_name": 2
                },
                "FUN_0010274b": {
                    "print_error_details": 1
                },
                "FUN_00103d20": {
                    "print_error": 5,
                    "print_error_message": 26
                },
                "_stderr": {
                    "standard_error": 2,
                    "stderr": 1
                },
                "_stdout": {
                    "standard_output": 2,
                    "stdout": 1
                },
                "bfd_get_error": {
                    "get_error_code": 1
                },
                "iVar1": {
                    "error": 18,
                    "error_code": 9,
                    "error_flag": 1,
                    "error_number": 1,
                    "error_status": 1,
                    "error_type": 1
                },
                "in_R10": {
                    "additional_info": 6,
                    "additional_message": 1,
                    "extra_info": 2,
                    "reserved_parameter": 2,
                    "unknown": 2,
                    "unknown_cause": 1,
                    "unknown_parameter": 1,
                    "unknown_value": 1,
                    "unknown_variable": 2,
                    "unused_arg": 2,
                    "unused_variable": 1
                },
                "param_1": {
                    "error_cause": 2,
                    "error_description": 6,
                    "error_message": 8,
                    "error_msg": 1,
                    "error_name": 1,
                    "error_string": 1,
                    "error_type": 5,
                    "file": 1,
                    "file_name": 3,
                    "filename": 2,
                    "message": 1
                },
                "uVar2": {
                    "error_description": 3,
                    "error_message": 19,
                    "error_msg": 4,
                    "error_string": 3,
                    "error_text": 2
                }
            },
            "called": [
                "bfd_errmsg",
                "FUN_0010274b",
                "bfd_get_error"
            ],
            "calling": [
                "FUN_001023b6",
                "FUN_00102a90",
                "FUN_001024d2"
            ],
            "code": "\n\n\nvoid print_error_message_00103d20(long error_message)\n\n{\n  int error;\n  undefined8 error_message;\n  undefined8 additional_info;\n  \n  error = bfd_get_error();\n  if (error == 0) {\n    error_message = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    error_message = bfd_errmsg(error);\n  }\n  fflush(standard_output);\n  if (error_message != 0) {\n    fprintf(standard_error,\"%s: %s: %s\\n\",DAT_00107350,error_message,error_message,additional_info);\n    return;\n  }\n  fprintf(standard_error,\"%s: %s\\n\",DAT_00107350,error_message,additional_info);\n  return;\n}\n\n",
            "current_name": "print_error_message_00103d20",
            "entrypoint": "0x00103d20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103d20": "print_error_message_00103d20",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "bfd_get_error": "get_error_code",
                "iVar1": "error",
                "in_R10": "additional_info",
                "param_1": "error_message",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "_DT_FINI": {
            "called": [],
            "calling": [],
            "code": "\nvoid _DT_FINI(void)\n\n{\n  return;\n}\n\n",
            "current_name": "_DT_FINI",
            "entrypoint": "0x00103d80",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_DT_INIT": {
            "called": [
                "__gmon_start__"
            ],
            "calling": [],
            "code": "\nvoid _DT_INIT(void)\n\n{\n  __gmon_start__();\n  return;\n}\n\n",
            "current_name": "_DT_INIT",
            "entrypoint": "0x00102000",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_FINI_0": {
            "called": [
                "__cxa_finalize",
                "FUN_00103070"
            ],
            "calling": [],
            "code": "\nvoid _FINI_0(void)\n\n{\n  if (DAT_001072c0 != '\\0') {\n    return;\n  }\n  __cxa_finalize(PTR_LOOP_001071a8);\n  FUNC_00103070();\n  DAT_001072c0 = 1;\n  return;\n}\n\n",
            "current_name": "_FINI_0",
            "entrypoint": "0x001030e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_INIT_0": {
            "called": [
                "FUN_001030a0"
            ],
            "calling": [],
            "code": "\nvoid _INIT_0(void)\n\n{\n  FUNC_001030a0();\n  return;\n}\n\n",
            "current_name": "_INIT_0",
            "entrypoint": "0x00103120",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "__cxa_finalize": {
            "called": [
                "__cxa_finalize"
            ],
            "calling": [
                "_FINI_0"
            ],
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n",
            "current_name": "__cxa_finalize",
            "entrypoint": "0x00102350",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "__errno_location": {
            "called": [
                "__errno_location"
            ],
            "calling": [
                "FUN_00102360"
            ],
            "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  return piVar1;\n}\n\n",
            "current_name": "__errno_location",
            "entrypoint": "0x00102050",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_check_format": {
            "called": [
                "bfd_check_format"
            ],
            "calling": [
                "FUN_00102980",
                "FUN_00102a40"
            ],
            "code": "\nvoid bfd_check_format(void)\n\n{\n  bfd_check_format();\n  return;\n}\n\n",
            "current_name": "bfd_check_format",
            "entrypoint": "0x00102310",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_check_format_matches": {
            "called": [
                "bfd_check_format_matches"
            ],
            "calling": [
                "FUN_00102a40",
                "FUN_001024d2"
            ],
            "code": "\nvoid bfd_check_format_matches(void)\n\n{\n  bfd_check_format_matches();\n  return;\n}\n\n",
            "current_name": "bfd_check_format_matches",
            "entrypoint": "0x001022c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_close": {
            "called": [
                "bfd_close"
            ],
            "calling": [
                "FUN_001023b6"
            ],
            "code": "\nvoid bfd_close(void)\n\n{\n  bfd_close();\n  return;\n}\n\n",
            "current_name": "bfd_close",
            "entrypoint": "0x001022a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_core_file_failing_command": {
            "called": [
                "bfd_core_file_failing_command"
            ],
            "calling": [
                "FUN_001024d2"
            ],
            "code": "\nvoid bfd_core_file_failing_command(void)\n\n{\n  bfd_core_file_failing_command();\n  return;\n}\n\n",
            "current_name": "bfd_core_file_failing_command",
            "entrypoint": "0x00102060",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_errmsg": {
            "called": [
                "bfd_errmsg"
            ],
            "calling": [
                "FUN_00103d20",
                "FUN_00103130"
            ],
            "code": "\nvoid bfd_errmsg(void)\n\n{\n  bfd_errmsg();\n  return;\n}\n\n",
            "current_name": "bfd_errmsg",
            "entrypoint": "0x001022d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_error": {
            "called": [
                "bfd_get_error"
            ],
            "calling": [
                "FUN_00103d20",
                "FUN_001023b6",
                "FUN_00103130",
                "FUN_001024d2"
            ],
            "code": "\nvoid bfd_get_error(void)\n\n{\n  bfd_get_error();\n  return;\n}\n\n",
            "current_name": "bfd_get_error",
            "entrypoint": "0x00102160",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_init": {
            "called": [
                "bfd_init"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid bfd_init(void)\n\n{\n  bfd_init();\n  return;\n}\n\n",
            "current_name": "bfd_init",
            "entrypoint": "0x001021c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_map_over_sections": {
            "called": [
                "bfd_map_over_sections"
            ],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\nvoid bfd_map_over_sections(void)\n\n{\n  bfd_map_over_sections();\n  return;\n}\n\n",
            "current_name": "bfd_map_over_sections",
            "entrypoint": "0x00102330",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_openr": {
            "called": [
                "bfd_openr"
            ],
            "calling": [
                "FUN_00102980"
            ],
            "code": "\nvoid bfd_openr(void)\n\n{\n  bfd_openr();\n  return;\n}\n\n",
            "current_name": "bfd_openr",
            "entrypoint": "0x001020c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_openr_next_archived_file": {
            "called": [
                "bfd_openr_next_archived_file"
            ],
            "calling": [
                "FUN_001023b6"
            ],
            "code": "\nvoid bfd_openr_next_archived_file(void)\n\n{\n  bfd_openr_next_archived_file();\n  return;\n}\n\n",
            "current_name": "bfd_openr_next_archived_file",
            "entrypoint": "0x00102320",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_default_target": {
            "called": [
                "bfd_set_default_target"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid bfd_set_default_target(void)\n\n{\n  bfd_set_default_target();\n  return;\n}\n\n",
            "current_name": "bfd_set_default_target",
            "entrypoint": "0x00102090",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_error": {
            "called": [
                "bfd_set_error"
            ],
            "calling": [
                "FUN_001023b6"
            ],
            "code": "\nvoid bfd_set_error(void)\n\n{\n  bfd_set_error();\n  return;\n}\n\n",
            "current_name": "bfd_set_error",
            "entrypoint": "0x00102180",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_error_program_name": {
            "called": [
                "bfd_set_error_program_name"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n",
            "current_name": "bfd_set_error_program_name",
            "entrypoint": "0x00102260",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_target_list": {
            "called": [
                "bfd_target_list"
            ],
            "calling": [
                "FUN_0010281b"
            ],
            "code": "\nvoid bfd_target_list(void)\n\n{\n  bfd_target_list();\n  return;\n}\n\n",
            "current_name": "bfd_target_list",
            "entrypoint": "0x00102150",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bindtextdomain": {
            "called": [
                "bindtextdomain"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n",
            "current_name": "bindtextdomain",
            "entrypoint": "0x001020e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "dcgettext": {
            "called": [
                "dcgettext"
            ],
            "calling": [
                "FUN_00102360",
                "FUN_0010274b",
                "FUN_00103130",
                "FUN_0010278c",
                "FUN_0010281b",
                "FUN_00102980"
            ],
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n",
            "current_name": "dcgettext",
            "entrypoint": "0x001020f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "entry": {
            "called": [
                "FUN_00103130",
                "__libc_start_main"
            ],
            "calling": [],
            "code": "\nvoid processEntry entry(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined auStack_8 [8];\n  \n  __libc_start_main(FUN_00103130,param_2,&stack0x00000008,0,0,param_1,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "entry",
            "entrypoint": "0x00103040",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "exit": {
            "called": [
                "exit"
            ],
            "calling": [
                "FUN_00103130",
                "FUN_0010281b"
            ],
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n",
            "current_name": "exit",
            "entrypoint": "0x001022f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fclose": {
            "called": [
                "fclose"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fclose",
            "entrypoint": "0x001020d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "ferror": {
            "called": [
                "ferror"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "ferror",
            "entrypoint": "0x00102080",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fflush": {
            "called": [
                "fflush"
            ],
            "calling": [
                "FUN_0010274b",
                "FUN_0010278c",
                "FUN_00102ee0"
            ],
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fflush",
            "entrypoint": "0x00102230",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fopen": {
            "called": [
                "fopen"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n",
            "current_name": "fopen",
            "entrypoint": "0x00102280",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fprintf": {
            "called": [
                "fprintf"
            ],
            "calling": [
                "FUN_0010274b",
                "FUN_00103130",
                "FUN_0010278c",
                "FUN_0010281b",
                "FUN_00102ee0"
            ],
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n",
            "current_name": "fprintf",
            "entrypoint": "0x001021e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fputc": {
            "called": [
                "fputc"
            ],
            "calling": [
                "FUN_0010281b",
                "FUN_0010278c"
            ],
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fputc",
            "entrypoint": "0x001021b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fputs": {
            "called": [
                "fputs"
            ],
            "calling": [
                "FUN_00102a90"
            ],
            "code": "\n\n\nint fputs(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputs(__s,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fputs",
            "entrypoint": "0x00102140",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fread": {
            "called": [
                "fread"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n",
            "current_name": "fread",
            "entrypoint": "0x001020a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "free": {
            "called": [
                "free"
            ],
            "calling": [
                "FUN_00103130",
                "FUN_0010278c",
                "FUN_0010281b",
                "FUN_00102a90"
            ],
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n",
            "current_name": "free",
            "entrypoint": "0x00102030",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fseek": {
            "called": [
                "fseek"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n",
            "current_name": "fseek",
            "entrypoint": "0x00102240",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "ftell": {
            "called": [
                "ftell"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n",
            "current_name": "ftell",
            "entrypoint": "0x001021f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fwrite": {
            "called": [
                "fwrite"
            ],
            "calling": [
                "FUN_00103130",
                "FUN_001024d2"
            ],
            "code": "\n\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fwrite(__ptr,__size,__n,__s);\n  return sVar1;\n}\n\n",
            "current_name": "fwrite",
            "entrypoint": "0x00102300",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "getopt_long": {
            "called": [
                "getopt_long"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n",
            "current_name": "getopt_long",
            "entrypoint": "0x00102110",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "memcpy": {
            "called": [
                "memcpy"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "memcpy",
            "entrypoint": "0x00102220",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "memmove": {
            "called": [
                "memmove"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "memmove",
            "entrypoint": "0x00102270",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "printf": {
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_00102fe0",
                "FUN_00102e90",
                "FUN_0010259c",
                "FUN_00103130",
                "FUN_00102710",
                "FUN_00102a90",
                "FUN_001024d2"
            ],
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n",
            "current_name": "printf",
            "entrypoint": "0x00102120",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "putc": {
            "called": [
                "putc"
            ],
            "calling": [
                "FUN_00103130",
                "FUN_00102ee0",
                "FUN_00102a90"
            ],
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "putc",
            "entrypoint": "0x001021d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "putchar": {
            "called": [
                "putchar"
            ],
            "calling": [
                "FUN_00102fe0",
                "FUN_00102a40"
            ],
            "code": "\n\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = putchar(__c);\n  return iVar1;\n}\n\n",
            "current_name": "putchar",
            "entrypoint": "0x00102040",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "puts": {
            "called": [
                "puts"
            ],
            "calling": [
                "FUN_00102a90",
                "FUN_001024d2"
            ],
            "code": "\n\n\nint puts(char *__s)\n\n{\n  int iVar1;\n  \n  iVar1 = puts(__s);\n  return iVar1;\n}\n\n",
            "current_name": "puts",
            "entrypoint": "0x00102070",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "setlocale": {
            "called": [
                "setlocale"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = setlocale(__category,__locale);\n  return pcVar1;\n}\n\n",
            "current_name": "setlocale",
            "entrypoint": "0x00102250",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "sprintf": {
            "called": [
                "sprintf"
            ],
            "calling": [
                "FUN_00102e90",
                "FUN_00102710",
                "FUN_00102e50"
            ],
            "code": "\n\n\nint sprintf(char *__s,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = sprintf(__s,__format);\n  return iVar1;\n}\n\n",
            "current_name": "sprintf",
            "entrypoint": "0x001022e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "stat": {
            "called": [
                "stat"
            ],
            "calling": [
                "FUN_00103130",
                "FUN_00102980"
            ],
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n",
            "current_name": "stat",
            "entrypoint": "0x00102200",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strerror": {
            "called": [
                "strerror"
            ],
            "calling": [
                "FUN_00102360"
            ],
            "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strerror(__errnum);\n  return pcVar1;\n}\n\n",
            "current_name": "strerror",
            "entrypoint": "0x00102340",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strlen": {
            "called": [
                "strlen"
            ],
            "calling": [
                "FUN_00103130",
                "FUN_00103c50",
                "FUN_00102e50"
            ],
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n",
            "current_name": "strlen",
            "entrypoint": "0x00102100",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strtol": {
            "called": [
                "strtol"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\n\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n  long lVar1;\n  \n  lVar1 = strtol(__nptr,__endptr,__base);\n  return lVar1;\n}\n\n",
            "current_name": "strtol",
            "entrypoint": "0x00102210",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "textdomain": {
            "called": [
                "textdomain"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n",
            "current_name": "textdomain",
            "entrypoint": "0x001020b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "vfprintf": {
            "called": [
                "vfprintf"
            ],
            "calling": [
                "FUN_00102ee0"
            ],
            "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 = vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n",
            "current_name": "vfprintf",
            "entrypoint": "0x001022b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xexit": {
            "called": [
                "xexit"
            ],
            "calling": [
                "FUN_00103130",
                "FUN_00102db0",
                "FUN_00102a90"
            ],
            "code": "\nvoid xexit(void)\n\n{\n  xexit();\n  return;\n}\n\n",
            "current_name": "xexit",
            "entrypoint": "0x00102290",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xmalloc": {
            "called": [
                "xmalloc"
            ],
            "calling": [
                "FUN_00103130",
                "FUN_00102a90"
            ],
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n",
            "current_name": "xmalloc",
            "entrypoint": "0x00102170",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xmalloc_set_program_name": {
            "called": [
                "xmalloc_set_program_name"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n",
            "current_name": "xmalloc_set_program_name",
            "entrypoint": "0x00102190",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xrealloc": {
            "called": [
                "xrealloc"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n",
            "current_name": "xrealloc",
            "entrypoint": "0x00102130",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xstrdup": {
            "called": [
                "xstrdup"
            ],
            "calling": [
                "FUN_00103130"
            ],
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n",
            "current_name": "xstrdup",
            "entrypoint": "0x001021a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_00102020",
            "FUN_00102360",
            "FUN_001023b6",
            "FUN_001024d2",
            "FUN_0010259c",
            "FUN_001026ea",
            "FUN_001026f6",
            "FUN_00102710",
            "FUN_0010274b",
            "FUN_0010278c",
            "FUN_0010281b",
            "FUN_00102980",
            "FUN_00102a40",
            "FUN_00102a90",
            "FUN_00102d70",
            "FUN_00102db0",
            "FUN_00102e50",
            "FUN_00102e90",
            "FUN_00102ee0",
            "FUN_00102f40",
            "FUN_00102fe0",
            "FUN_00103130",
            "FUN_00103c50",
            "FUN_00103cc0",
            "FUN_00103d20"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 115647
}