{
    "functions": {
        "FUN_00102020": {
            "additional_data": {
                "": {
                    "": 2
                },
                "FUN_00102020": {
                    "call_indirect_function": 1,
                    "call_indirect_jump": 1,
                    "execute_code": 2,
                    "execute_code_at_address": 1,
                    "execute_entry_point": 1,
                    "execute_function": 1,
                    "execute_function_at_address": 1,
                    "execute_indirect_call": 6,
                    "execute_indirect_function": 1,
                    "execute_indirect_jump": 15,
                    "execute_pointer_function": 1
                },
                "PTR_0": {
                    "jump_pointer": 1
                },
                "code": {
                    "entry_point_function": 1,
                    "function_pointer": 5,
                    "indirect_call_function": 1
                },
                "undefined": {
                    "address": 1,
                    "base_address": 1,
                    "code_address": 1,
                    "function_address": 1,
                    "function_pointer": 4,
                    "indirect_function_pointer": 1,
                    "indirect_jump_address": 1,
                    "jump_target": 1,
                    "target_address": 2
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_indirect_jump_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(function_pointer *)(function_pointer *)0x0)();\n  return;\n}\n\n",
            "current_name": "execute_indirect_jump_00102020",
            "entrypoint": "0x00102020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102020": "execute_indirect_jump_00102020",
                "code": "function_pointer",
                "undefined": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001025a0": {
            "additional_data": {
                "FUN_001025a0": {
                    "check_file": 1,
                    "check_file_existence": 1,
                    "file_not_found_error": 6,
                    "file_not_found_warning": 1,
                    "find_file": 1,
                    "find_file_error": 1,
                    "find_file_location": 2,
                    "get_error_description": 1,
                    "handle_error": 1,
                    "handle_file_error": 8,
                    "handle_file_not_found_error": 4,
                    "locate_and_print_error_message": 1,
                    "locate_file": 1,
                    "print_file_not_found_error": 1,
                    "process_error": 1
                },
                "FUN_00107920": {
                    "display_error_message": 1,
                    "log_error_message": 1,
                    "print_error_message": 2
                },
                "__errno_location": {
                    "get_errno_location": 3,
                    "get_errno_pointer": 1,
                    "get_error_code": 1,
                    "get_error_location": 2,
                    "get_error_number": 1,
                    "get_error_number_location": 1,
                    "get_error_pointer": 1
                },
                "dcgettext": {
                    "get_error_message": 1,
                    "get_localized_error_message": 1,
                    "get_localized_message": 2,
                    "get_localized_string": 1,
                    "get_message": 1,
                    "get_translated_error_message": 2,
                    "gettext": 1,
                    "translate": 1,
                    "translate_text": 1
                },
                "piVar1": {
                    "err_num_ptr": 1,
                    "err_ptr": 2,
                    "errno_pointer": 3,
                    "errno_ptr": 12,
                    "error_code": 1,
                    "error_code_pointer": 1,
                    "error_code_ptr": 2,
                    "error_location": 3,
                    "error_num_ptr": 1,
                    "error_number": 2,
                    "error_pointer": 1,
                    "error_ptr": 2
                },
                "strerror": {
                    "get_error_description": 1,
                    "get_error_string": 9
                },
                "uVar2": {
                    "err_msg": 1,
                    "error_message": 28,
                    "error_msg": 2
                }
            },
            "called": [
                "dcgettext",
                "strerror",
                "__errno_location",
                "FUN_00107920"
            ],
            "calling": [
                "FUN_001052a0"
            ],
            "code": "\nundefined8 handle_file_not_found_error_001025a0(void)\n\n{\n  int *errno_ptr;\n  undefined8 error_message;\n  \n  errno_ptr = __errno_location();\n  if (*errno_ptr == 2) {\n    error_message = dcgettext(0,\"\\'%s\\': No such file\",5);\n    FUN_00107920(error_message);\n  }\n  else {\n    strerror(*errno_ptr);\n    error_message = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n    FUN_00107920(error_message);\n  }\n  return 0xffffffffffffffff;\n}\n\n",
            "current_name": "handle_file_not_found_error_001025a0",
            "entrypoint": "0x001025a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001025a0": "handle_file_not_found_error_001025a0",
                "__errno_location": "get_errno_location",
                "dcgettext": "get_translated_error_message",
                "piVar1": "errno_ptr",
                "strerror": "get_error_string",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010266f": {
            "additional_data": {
                "FUN_0010266f": {
                    "print_supported_targets": 31
                },
                "__ptr": {
                    "target_list": 31
                },
                "fprintf": {
                    "print_formatted": 1
                },
                "fputc": {
                    "print_char": 1
                },
                "free": {
                    "free_memory": 1
                },
                "lVar1": {
                    "current_target": 10,
                    "current_target_name": 1,
                    "current_target_value": 6,
                    "current_value": 2,
                    "target": 3,
                    "target_address": 2,
                    "target_id": 2,
                    "target_list_element": 1,
                    "target_name": 2,
                    "target_ptr": 2
                },
                "param_1": {
                    "target": 23,
                    "target_name": 8
                },
                "param_2": {
                    "file": 1,
                    "output": 1,
                    "output_file": 29
                },
                "pcVar2": {
                    "localized_text": 1,
                    "message": 19,
                    "msg": 1,
                    "target_list_format": 1,
                    "target_message": 2,
                    "target_string": 2,
                    "text": 2,
                    "translation": 1
                },
                "plVar3": {
                    "current_target": 20,
                    "current_target_ptr": 3,
                    "ptr": 2,
                    "ptr_to_target_list": 1,
                    "target_list_item": 1,
                    "target_list_ptr": 1,
                    "target_pointer": 1,
                    "target_ptr": 2
                }
            },
            "called": [
                "dcgettext",
                "fprintf",
                "fputc",
                "bfd_target_list",
                "free"
            ],
            "calling": [
                "FUN_0010394a",
                "FUN_0010342d"
            ],
            "code": "\nvoid print_supported_targets_0010266f(long target,FILE *output_file)\n\n{\n  long current_target;\n  char *message;\n  long *target_list;\n  long *current_target;\n  \n  if (target == 0) {\n    message = (char *)dcgettext(0,\"Supported targets:\",5);\n    fprintf(output_file,message);\n  }\n  else {\n    message = (char *)dcgettext(0,\"%s: supported targets:\",5);\n    fprintf(output_file,message,target);\n  }\n  target_list = (long *)bfd_target_list();\n  current_target = target_list;\n  while( true ) {\n    current_target = *current_target;\n    current_target = current_target + 1;\n    if (current_target == 0) break;\n    fprintf(output_file,\" %s\");\n  }\n  fputc(10,output_file);\n  free_memory(target_list);\n  return;\n}\n\n",
            "current_name": "print_supported_targets_0010266f",
            "entrypoint": "0x0010266f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010266f": "print_supported_targets_0010266f",
                "__ptr": "target_list",
                "fprintf": "print_formatted",
                "fputc": "print_char",
                "free": "free_memory",
                "lVar1": "current_target",
                "param_1": "target",
                "param_2": "output_file",
                "pcVar2": "message",
                "plVar3": "current_target"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102710": {
            "additional_data": {
                "DAT_0010d5f0": {
                    "converted_library": 1,
                    "converted_library_data": 1,
                    "data_1": 1,
                    "existing_thin_library": 1,
                    "global_data_1": 1,
                    "global_data_pointer1": 1,
                    "global_library": 1,
                    "global_library_ptr": 1,
                    "global_variable_1": 2,
                    "library": 1,
                    "library_data": 2,
                    "loaded_library": 1,
                    "output_file": 1
                },
                "DAT_0010d5f8": {
                    "conversion_flag": 1,
                    "convert_to_thin": 1,
                    "data_2": 1,
                    "flag": 1,
                    "global_flag": 1,
                    "global_variable_2": 1,
                    "global_variable_3": 1,
                    "is_existing_library": 2,
                    "is_existing_thin_library": 1,
                    "is_thin_library": 1,
                    "normal_format_flag": 1,
                    "thin_library_conversion_flag": 1
                },
                "DAT_0010d610": {
                    "flag_value": 1,
                    "global_data_2": 1,
                    "global_value": 1,
                    "global_variable_2": 1,
                    "global_variable_3": 1,
                    "is_binary": 1,
                    "is_converting": 1,
                    "is_thin_library_conversion_enabled": 1,
                    "library_format_flag": 1
                },
                "DAT_0010d618": {
                    "archived_file_offset": 1,
                    "data_3": 1,
                    "final_library_data": 1,
                    "global_data_3": 1,
                    "global_data_pointer3": 1,
                    "global_value2": 1,
                    "global_variable": 2,
                    "global_variable_4": 2,
                    "previous_rbp_2": 1,
                    "saved_stack_variable": 1,
                    "stack_variable_data": 1,
                    "temporary_data": 1
                },
                "DAT_0010d64c": {
                    "archive_format": 1,
                    "data": 1,
                    "data_4": 1,
                    "file_format": 2,
                    "file_status": 1,
                    "format": 2,
                    "format_match": 1,
                    "global_data_4": 1,
                    "global_flag2": 1,
                    "global_value3": 1,
                    "global_variable_5": 2
                },
                "FUN_00102710": {
                    "decode_binary": 1,
                    "extract_and_convert_libraries": 1,
                    "extract_and_convert_library": 1,
                    "extract_archived_files": 9,
                    "extract_bfd_data": 1,
                    "extract_library_archives": 1,
                    "extract_library_files": 1,
                    "initialize_bfd_library": 1,
                    "load_and_convert_libraries": 1,
                    "load_library": 2,
                    "open_and_check_bfd_format": 1,
                    "open_and_check_format": 1,
                    "open_convert_and_create": 1,
                    "parse_bfd_file": 2,
                    "parse_bfd_library": 1,
                    "parse_library": 1,
                    "parse_library_file": 1,
                    "process_binary_file": 1,
                    "read_and_convert_bfd_files": 1
                },
                "FUN_00103bd1": {
                    "cleanup_and_exit": 2,
                    "handle_error": 3
                },
                "FUN_00107690": {
                    "display_error": 1,
                    "print_conversion_error": 2,
                    "print_error": 1,
                    "print_error_message": 1
                },
                "FUN_00107920": {
                    "print_message": 2,
                    "print_progress_message": 1
                },
                "FUN_00107c10": {
                    "cleanup": 1,
                    "ignore_error": 1,
                    "initialize": 1,
                    "print_error_message": 1,
                    "setup_error_handler": 1
                },
                "FUN_00107c20": {
                    "cleanup": 1,
                    "cleanup_and_exit": 1,
                    "cleanup_handler": 1,
                    "print_exit_message": 1
                },
                "LAB_00102812": {
                    "handle_error": 1
                },
                "LAB_00102826": {
                    "create_file_label": 1,
                    "create_output": 1
                },
                "LAB_001053b7": {
                    "stack_variable_label": 1
                },
                "PLT_FUN_00103bd1": {
                    "cleanup_and_exit": 1
                },
                "PLT_FUN_00107690": {
                    "print_error_message": 1
                },
                "PLT_FUN_00107920": {
                    "print_status_message": 1
                },
                "PLT_FUN_00107c10": {
                    "initialize": 1
                },
                "PLT_FUN_00107c20": {
                    "cleanup": 1
                },
                "_DAT_0010d610": {
                    "existing_library": 1,
                    "flag": 1,
                    "flag_data": 1,
                    "global_data_pointer2": 1,
                    "library_conversion_flag": 1
                },
                "_DAT_0010d618": {
                    "temp_bfd_handle": 1
                },
                "bVar3": {
                    "archive_file_flag": 1,
                    "bit3_of_byte": 1,
                    "bit_value": 1,
                    "conversion_flag": 1,
                    "convert": 1,
                    "convert_flag": 2,
                    "flag": 1,
                    "is_thin": 1,
                    "is_thin_format": 5,
                    "is_thin_library": 12,
                    "thin_library": 2,
                    "thin_library_flag": 3
                },
                "bfd_check_format": {
                    "check_file_format": 2,
                    "check_format": 2,
                    "check_library_format": 1
                },
                "bfd_check_format_matches": {
                    "check_format_matches": 1
                },
                "bfd_close": {
                    "close_bfd": 1,
                    "close_file": 2,
                    "close_file_descriptor": 1,
                    "close_library": 1
                },
                "bfd_get_error": {
                    "get_error": 1,
                    "get_error_code": 1
                },
                "bfd_openr": {
                    "open_input_file": 1,
                    "open_library": 1,
                    "open_library_file_read": 1,
                    "open_read_bfd": 1,
                    "open_read_file": 1
                },
                "bfd_openr_next_archived_file": {
                    "get_next_archived_file": 1,
                    "open_next_archived_file": 3
                },
                "bfd_openw": {
                    "create_output_library": 1,
                    "open_library_file_write": 1,
                    "open_output_file": 1,
                    "open_write_file": 1
                },
                "bfd_set_format": {
                    "set_file_format": 1,
                    "set_library_file_format": 1,
                    "set_output_library_format": 1
                },
                "cVar2": {
                    "check_format_result": 2,
                    "check_result": 2,
                    "format_check": 5,
                    "format_check_passed": 1,
                    "format_check_result": 8,
                    "format_checked": 1,
                    "format_match": 1,
                    "format_result": 1,
                    "format_valid": 6,
                    "is_bfd_check_format_successful": 1,
                    "is_valid": 1,
                    "is_valid_format": 2
                },
                "dcgettext": {
                    "get_message": 2,
                    "gettext": 1
                },
                "iVar4": {
                    "bfd_error": 5,
                    "bfd_error_code": 1,
                    "error": 1,
                    "error_code": 23,
                    "error_value": 1
                },
                "in_stack_00000008": {
                    "additional_parameter": 1,
                    "argument": 1,
                    "create_file_path_arg": 1,
                    "filename": 1,
                    "function_argument": 1,
                    "in_stack_parameter": 1,
                    "input_argument": 2,
                    "input_parameter": 2,
                    "input_path": 1,
                    "input_value": 1,
                    "library_name": 1,
                    "parameter_1": 1,
                    "parameter_2": 1,
                    "some_input_data": 1,
                    "stack_argument": 1,
                    "stack_data": 1,
                    "stack_param": 1,
                    "stack_parameter": 4,
                    "stack_value": 2,
                    "stack_variable": 4,
                    "stack_variable_2": 1
                },
                "lVar5": {
                    "archived_file": 4,
                    "archived_file_ptr": 2,
                    "bfd_file": 2,
                    "bfd_file_handle": 2,
                    "bfd_file_pointer": 1,
                    "bfd_handle": 4,
                    "current_file": 1,
                    "current_file_offset": 1,
                    "file_descriptor": 8,
                    "file_handle": 5,
                    "file_ptr": 1
                },
                "plVar1": {
                    "archived_file": 3,
                    "archived_file_handle": 1,
                    "archived_file_list": 3,
                    "archived_file_ptr": 3,
                    "archived_files": 4,
                    "current_file": 1,
                    "current_file_ptr": 3,
                    "file_offset": 1,
                    "file_pointer": 2,
                    "file_ptr": 4,
                    "pointer_to_l_var1": 1,
                    "pointer_to_next_archived_file": 1
                },
                "puVar8": {
                    "archive_file": 1,
                    "bfd_file_pointer_out": 1,
                    "bfd_handle": 2,
                    "bfd_write_handle": 1,
                    "library_descriptor": 2,
                    "library_ptr": 2,
                    "new_bfd": 1,
                    "new_bfd_file": 1,
                    "new_file_handle": 1,
                    "output_bfd": 1,
                    "output_bfd_file": 1,
                    "output_file": 7,
                    "output_file_handle": 3,
                    "output_file_ptr": 1,
                    "output_handle": 2,
                    "output_library": 2,
                    "write_bfd_handle": 2
                },
                "stack0x00000008": {
                    "archive_filename": 1,
                    "bfd_check_format_matches_arg": 1,
                    "matching_data": 1,
                    "stack_arg": 1,
                    "stack_variable": 1,
                    "stack_variable_data": 1
                },
                "uVar6": {
                    "conversion_error_message": 1,
                    "error_message": 27,
                    "library_error_message": 1
                },
                "uVar7": {
                    "conversion_message": 1,
                    "conversion_status_message": 1,
                    "error_message": 1,
                    "error_message_format": 1,
                    "file_name": 1,
                    "library_filename": 1,
                    "library_name": 16,
                    "library_path": 3,
                    "message": 1,
                    "message_argument": 1,
                    "status_message": 1,
                    "translated_text": 1
                },
                "unaff_RBP": {
                    "additional_argument": 1,
                    "additional_handle": 1,
                    "additional_information": 1,
                    "archived_file": 1,
                    "bfd_write_handle": 1,
                    "constant_value": 1,
                    "dat_0010d618": 1,
                    "extra_parameter": 2,
                    "file_name_stack": 1,
                    "initial_bfd_handle": 1,
                    "initial_path": 1,
                    "input_file": 2,
                    "original_library": 1,
                    "other_handle": 1,
                    "parameter_1": 1,
                    "preserved_register": 1,
                    "previous_rbp": 1,
                    "return_address": 2,
                    "return_value": 1,
                    "stack_parameter": 1,
                    "stack_pointer": 2,
                    "stack_variable": 3,
                    "unaff_return_value": 1,
                    "unaffected_rbp": 1
                },
                "xexit": {
                    "exit_program": 6
                }
            },
            "called": [
                "bfd_close",
                "bfd_openr",
                "bfd_check_format"
            ],
            "calling": [
                "FUN_00105300"
            ],
            "code": "\n\n\nundefined8 * extract_archived_files_00102710(void)\n\n{\n  long *file_ptr;\n  char format_check_result;\n  byte is_thin_library;\n  int error_code;\n  long file_descriptor;\n  undefined8 error_message;\n  undefined8 library_name;\n  undefined8 *output_file;\n  undefined8 stack_variable;\n  undefined8 stack_parameter;\n  \n  file_descriptor = bfd_openr();\n  if (file_descriptor != 0) {\n    format_check_result = bfd_check_format(file_descriptor,1);\n    if (format_check_result != '\\0') {\n      DAT_0010d5f0 = **(undefined8 **)(file_descriptor + 8);\n    }\n    bfd_close(file_descriptor);\n  }\n  output_file = (undefined8 *)bfd_openw();\n  if (((output_file != (undefined8 *)0x0) && (format_check_result = bfd_set_format(output_file,2), format_check_result != '\\0')) &&\n     (format_check_result = bfd_close(output_file), format_check_result != '\\0')) {\n    if (_DAT_0010d610 == 0) goto create_file_label;\n    goto stack_variable_label;\n  }\n  FUN_00107c10();\n  do {\n    is_thin_library = *(byte *)((long)output_file + 0x49) >> 4 & 1;\n    if (DAT_0010d5f8 == '\\0') {\n      if (is_thin_library != 0) {\n        library_name = *output_file;\n        error_message = dcgettext(0,\"Cannot convert existing thin library %s to normal format\",5);\n        FUN_00107690(error_message,library_name);\n        goto handle_error;\n      }\n    }\n    else if (is_thin_library == 0) {\n      library_name = *output_file;\n      error_message = dcgettext(0,\"Cannot convert existing library %s to thin format\",5);\n      FUN_00107690(error_message,library_name);\nLAB_001027cb:\n      FUN_00107c20();\n      error_code = bfd_get_error();\n      if (error_code == 0xd) {\nhandle_error:\n        FUN_00103bd1(stack_parameter);\n      }\n                    \n      xexit(1);\n    }\n    do {\n      file_ptr = output_file + 0x1e;\n      for (file_descriptor = bfd_openr_next_archived_file(output_file,0); file_descriptor != 0;\n          file_descriptor = bfd_openr_next_archived_file(output_file,file_descriptor)) {\n        *file_ptr = file_descriptor;\n        file_ptr = (long *)(file_descriptor + 0xf0);\n      }\n      *file_ptr = 0;\n      error_code = bfd_get_error();\n      if (error_code == 9) {\n        return output_file;\n      }\n      do {\n        FUN_00107c10();\ncreate_file_label:\n        library_name = dcgettext(0,\"creating %s\",5);\n        FUN_00107920(library_name);\nstack_variable_label:\n        DAT_0010d618 = stack_variable;\n        output_file = (undefined8 *)bfd_openr();\n      } while (output_file == (undefined8 *)0x0);\n      format_check_result = bfd_check_format_matches(output_file,2,&stack_variable);\n      if (format_check_result == '\\0') goto LAB_001027cb;\n    } while (((DAT_0010d64c != 2) && (DAT_0010d64c != 7)) ||\n            (file_descriptor = bfd_openr_next_archived_file(output_file,0), file_descriptor == 0));\n  } while( true );\n}\n\n",
            "current_name": "extract_archived_files_00102710",
            "entrypoint": "0x00102710",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102710": "extract_archived_files_00102710",
                "LAB_00102812": "handle_error",
                "LAB_00102826": "create_file_label",
                "LAB_001053b7": "stack_variable_label",
                "bVar3": "is_thin_library",
                "bfd_check_format": "check_file_format",
                "bfd_check_format_matches": "check_format_matches",
                "bfd_close": "close_file",
                "bfd_get_error": "get_error_code",
                "bfd_openr": "open_input_file",
                "bfd_openr_next_archived_file": "open_next_archived_file",
                "bfd_openw": "create_output_library",
                "bfd_set_format": "set_library_file_format",
                "cVar2": "format_check_result",
                "dcgettext": "get_message",
                "iVar4": "error_code",
                "in_stack_00000008": "stack_parameter",
                "lVar5": "file_descriptor",
                "plVar1": "file_ptr",
                "puVar8": "output_file",
                "stack0x00000008": "stack_variable",
                "uVar6": "error_message",
                "uVar7": "library_name",
                "unaff_RBP": "stack_variable",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010284b": {
            "additional_data": {
                "1": {
                    "true": 1
                },
                "DAT_fun_0010284b": {
                    "data_function": 1
                },
                "FUN_0010284b": {
                    "calculate_result": 1,
                    "calculate_return_value": 1,
                    "check_success": 1,
                    "get_boolean_value": 1,
                    "get_one": 12,
                    "get_result": 2,
                    "get_return_value": 8,
                    "get_true_value": 1,
                    "initialize": 1,
                    "initialize_flag": 1,
                    "initialize_value": 2
                },
                "PTR_fun_0010284b": {
                    "pointer_to_function": 1
                },
                "return": {
                    "result": 6,
                    "return_value": 1
                },
                "undefined8": {
                    "bool": 1,
                    "int": 3,
                    "int64": 1,
                    "uint64_t": 4,
                    "unsigned_long": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_00107650"
            ],
            "code": "\nuint64_t get_one_0010284b(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "get_one_0010284b",
            "entrypoint": "0x0010284b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010284b": "get_one_0010284b",
                "return": "result",
                "undefined8": "uint64_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010285f": {
            "additional_data": {
                "DAT_0010d634": {
                    "flag": 1
                },
                "FUN_0010285f": {
                    "print_archive_entry": 1,
                    "print_archive_entry_error": 2,
                    "print_archive_entry_error_message": 2,
                    "print_archive_entry_failure": 1,
                    "print_archive_entry_not_found": 9,
                    "print_archive_entry_not_found_error": 5,
                    "print_archive_error": 1,
                    "print_entry_in_archive": 1,
                    "print_entry_not_found_message": 3,
                    "print_error_message": 3,
                    "print_missing_archive_entry": 1,
                    "print_no_entry_error_message": 1,
                    "print_no_entry_message": 1
                },
                "FUN_00105830": {
                    "get_entry_name": 1
                },
                "LAB_0010553e": {
                    "loop_label": 1
                },
                "_DAT_0010d630": {
                    "limit": 1
                },
                "__format": {
                    "error_format": 2,
                    "error_message": 8,
                    "error_message_format": 10,
                    "error_msg": 1,
                    "error_msg_format": 1,
                    "format_string": 8,
                    "message_format": 1
                },
                "_stderr": {
                    "standard_error_stream": 2
                },
                "code": {
                    "callback_function": 1
                },
                "code_r0x0010285f": {
                    "handle_entry_not_found": 1,
                    "search_next_entry": 1
                },
                "dcgettext": {
                    "get_translated_string": 1,
                    "get_translated_text": 2,
                    "translate": 1
                },
                "filename_cmp": {
                    "compare_file_names": 1,
                    "compare_filenames": 1
                },
                "fprintf": {
                    "print_error_message": 1,
                    "print_to_stderr": 3
                },
                "iStack000000000000000c": {
                    "cmp_counter": 1,
                    "count": 1,
                    "counter": 3,
                    "entry_count": 4,
                    "entry_counter": 3,
                    "entry_match_count": 2,
                    "entry_match_counter": 1,
                    "loop_counter": 1,
                    "match_count": 2,
                    "matching_count": 1,
                    "matching_entries_count": 2,
                    "matching_entry_count": 3,
                    "num_entries_checked": 1,
                    "num_found_entries": 2,
                    "num_printed": 1,
                    "num_printed_entries": 1,
                    "recursive_call_count": 1,
                    "repeated_entry_count": 1
                },
                "iVar1": {
                    "comparison_result": 2,
                    "filename_comparison_result": 1
                },
                "lVar2": {
                    "archive_entry": 2,
                    "current_entry": 12,
                    "current_entry_name": 1,
                    "current_entry_path": 1,
                    "current_file": 1,
                    "entry": 2,
                    "entry_address": 2,
                    "entry_name": 1,
                    "entry_offset": 1,
                    "entry_pointer": 2,
                    "file_entry": 1,
                    "file_offset": 1,
                    "file_ptr": 1,
                    "file_size": 1
                },
                "plVar3": {
                    "alternate_entry_path": 1,
                    "current_entry": 1,
                    "default_entry_pointer": 1,
                    "dependent_entry": 1,
                    "entry_pointer": 2,
                    "fallback_entry": 3,
                    "file_descriptor": 1,
                    "next_entry": 10,
                    "next_entry_name": 1,
                    "next_file": 1,
                    "next_file_entry": 1,
                    "null_entry_pointer": 1,
                    "resolved_entry": 1,
                    "temp_ptr": 2,
                    "tmp_ptr": 1
                },
                "plVar5": {
                    "archive_entry": 3,
                    "current_entry": 11,
                    "current_entry_pointer": 3,
                    "current_entry_ptr": 2,
                    "current_file": 1,
                    "current_file_entry": 1,
                    "current_node": 1,
                    "entry": 3,
                    "entry_pointer": 2,
                    "entry_ptr": 1,
                    "file_entry_ptr": 1,
                    "next_entry": 1
                },
                "stack0x00000010": {
                    "stack_variable": 1
                },
                "uVar4": {
                    "current_entry": 1,
                    "current_entry_name": 4,
                    "current_string": 1,
                    "entry": 3,
                    "entry_name": 19,
                    "file_name": 2,
                    "filename": 1
                },
                "unaff_R12": {
                    "archive": 5,
                    "archive_address": 1,
                    "archive_base_addr": 1,
                    "archive_base_address": 2,
                    "archive_base_pointer": 1,
                    "archive_context": 1,
                    "archive_data": 1,
                    "archive_data_pointer": 2,
                    "archive_header": 1,
                    "archive_info": 2,
                    "archive_pointer": 3,
                    "archive_ptr": 8,
                    "context": 1,
                    "global_data_ptr": 1,
                    "parameter_1": 1
                },
                "unaff_R13D": {
                    "entry_count": 8,
                    "file_count": 1,
                    "num_entries": 8,
                    "num_strings": 1,
                    "number_of_entries": 2,
                    "parameter_2": 1,
                    "remaining_entries": 8,
                    "remaining_entries_count": 2
                },
                "unaff_R14": {
                    "archive_entry_list": 1,
                    "entries": 1,
                    "entries_ptr": 1,
                    "entry_arr": 1,
                    "entry_array": 1,
                    "entry_list": 1,
                    "entry_list_pointer": 1,
                    "entry_name_array": 1,
                    "entry_name_list": 3,
                    "entry_names": 10,
                    "entry_names_array": 1,
                    "entry_names_list": 1,
                    "entry_names_ptr": 1,
                    "entry_pointer": 2,
                    "entry_pointer_array": 1,
                    "entry_ptr": 1,
                    "file_names": 2,
                    "strings": 1
                },
                "unaff_RBP": {
                    "callback": 6,
                    "callback_func": 2,
                    "callback_function": 11,
                    "execute_callback": 2,
                    "execute_callbacks": 1,
                    "execute_function": 1,
                    "execute_next_function": 1,
                    "function_pointer": 3,
                    "next_function_to_execute": 1,
                    "post_function": 1,
                    "return_function": 1,
                    "reverse_callback": 1
                }
            },
            "called": [
                "dcgettext",
                "fprintf"
            ],
            "calling": [
                "FUN_00105480"
            ],
            "code": "\n\n\nvoid print_archive_entry_not_found_error_0010285f(void)\n\n{\n  int comparison_result;\n  char *error_message_format;\n  long current_entry;\n  long *next_entry;\n  undefined8 entry_name;\n  long *current_entry;\n  callback_function *callback_function;\n  long archive_ptr;\n  int num_entries;\n  undefined8 *entry_names;\n  int entry_count;\n  \nsearch_next_entry:\n  entry_name = *entry_names;\n  error_message_format = (char *)dcgettext(0,\"no entry %s in archive\\n\",5);\n  fprintf(standard_error_stream,error_message_format,entry_name);\nloop_label:\n  entry_names = entry_names + 1;\n  num_entries = num_entries + -1;\n  if (num_entries == 0) {\n    return;\n  }\n  current_entry = *(long **)(archive_ptr + 0xf0);\n  entry_count = 0;\n  do {\n    if (current_entry == (long *)0x0) goto search_next_entry;\n    if (*(int *)((long)current_entry + 0xac) == 0) {\n      current_entry = *current_entry;\n      if (current_entry == 0) {\n        next_entry = (long *)current_entry[0x1d];\n        if ((long *)current_entry[0x1d] == (long *)0x0) {\n          next_entry = current_entry;\n        }\n        (**(callback_function **)(next_entry[1] + 0x1e8))(current_entry,&stack_variable);\n      }\n      else if (((*(byte *)(archive_ptr + 0x49) & 0x10) == 0) || (current_entry = FUN_00105830(), current_entry != 0))\n      {\n        entry_name = FUN_00105830(*entry_names);\n        comparison_result = filename_cmp(entry_name,current_entry);\n        if ((comparison_result == 0) &&\n           ((DAT_0010d634 == '\\0' ||\n            (entry_count = entry_count + 1,\n            entry_count == _DAT_0010d630)))) break;\n      }\n    }\n    current_entry = (long *)current_entry[0x1e];\n  } while( true );\n  (*callback_function)();\n  *(undefined4 *)((long)current_entry + 0xac) = 1;\n  goto loop_label;\n}\n\n",
            "current_name": "print_archive_entry_not_found_error_0010285f",
            "entrypoint": "0x0010285f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010285f": "print_archive_entry_not_found_error_0010285f",
                "LAB_0010553e": "loop_label",
                "__format": "error_message_format",
                "_stderr": "standard_error_stream",
                "code": "callback_function",
                "code_r0x0010285f": "search_next_entry",
                "dcgettext": "get_translated_text",
                "filename_cmp": "compare_file_names",
                "fprintf": "print_to_stderr",
                "iStack000000000000000c": "entry_count",
                "iVar1": "comparison_result",
                "lVar2": "current_entry",
                "plVar3": "next_entry",
                "plVar5": "current_entry",
                "stack0x00000010": "stack_variable",
                "uVar4": "entry_name",
                "unaff_R12": "archive_ptr",
                "unaff_R13D": "num_entries",
                "unaff_R14": "entry_names",
                "unaff_RBP": "callback_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001028ed": {
            "additional_data": {
                "DAT_0010d620": {
                    "conditional_variable": 1
                },
                "DAT_0010d638": {
                    "constant_1": 1
                },
                "FUN_001028ed": {
                    "analyse_file": 1,
                    "analyze_files": 2,
                    "process_binary": 1,
                    "process_files": 2,
                    "reverse_binary_extraction": 1
                },
                "FUN_00102943": {
                    "allocate_memory": 1,
                    "function_h": 1
                },
                "FUN_00103172": {
                    "compare_files": 1,
                    "function_c": 1
                },
                "FUN_00105830": {
                    "function_b": 1,
                    "get_base_name_of_file": 1
                },
                "FUN_00105870": {
                    "fun105870": 1,
                    "process_file": 1
                },
                "FUN_001058b0": {
                    "fun1058b0": 1,
                    "function_j": 1,
                    "get_internal_error": 1
                },
                "FUN_00105ae0": {
                    "fun105ae0": 1,
                    "function_o": 1,
                    "process_files": 1
                },
                "FUN_00105af0": {
                    "fun105af0": 1,
                    "process_file_with_options": 1
                },
                "FUN_00107690": {
                    "fun107690": 1,
                    "function_n": 1,
                    "print_error_message": 1
                },
                "FUN_00107c10": {
                    "close_file": 1,
                    "fun107c10": 1,
                    "function_a": 1
                },
                "LAB_001028f5": {
                    "label_1": 1
                },
                "__errno_location": {
                    "function_f": 1,
                    "get_errno_location": 1,
                    "get_error_number_location": 1
                },
                "__s": {
                    "basename_entry": 1,
                    "char_pointer_3": 1,
                    "char_pointer_s": 1,
                    "char_pointer_var3": 1,
                    "char_ptr1": 1,
                    "char_ptr3": 2,
                    "char_ptr_s": 1,
                    "char_ptr_var3": 1,
                    "char_ptr_var_11": 1,
                    "char_var": 1,
                    "char_var1": 5,
                    "char_var_s": 1,
                    "current_file_basename": 1,
                    "s_var": 1,
                    "str1": 1,
                    "str_1": 2,
                    "str_var3": 1,
                    "str_var_1": 1,
                    "string1": 1,
                    "string_var1": 1,
                    "string_var_1": 1,
                    "string_var_s": 1
                },
                "__s_00": {
                    "basename2": 1,
                    "basename_file": 1,
                    "char_pointer_4": 1,
                    "char_pointer_s00": 1,
                    "char_pointer_var4": 1,
                    "char_ptr2": 1,
                    "char_ptr4": 2,
                    "char_ptr_s_00": 1,
                    "char_ptr_var3_2": 1,
                    "char_ptr_var_12": 1,
                    "char_var2": 6,
                    "char_var_s_00": 1,
                    "s_var_00": 1,
                    "str2": 1,
                    "str_2": 2,
                    "str_var4": 1,
                    "str_var_2": 1,
                    "string2": 1,
                    "string_var2": 1,
                    "string_var_2": 1,
                    "string_var_s_00": 1
                },
                "bVar16": {
                    "bool_val": 1,
                    "bool_val1": 1,
                    "bool_var": 9,
                    "bool_var1": 3,
                    "bool_var16": 9,
                    "bool_var_16": 1,
                    "bool_var_21": 1,
                    "bool_variable": 1,
                    "byte_var_16": 1,
                    "is_stat_error": 1,
                    "var16": 1
                },
                "bVar17": {
                    "bool_var2": 1,
                    "bool_var_17": 1,
                    "byte_flag": 1,
                    "byte_val2": 1,
                    "byte_val_2": 1,
                    "byte_var17": 9,
                    "byte_var2": 7,
                    "byte_var3": 1,
                    "byte_var_17": 1,
                    "byte_var_2": 1,
                    "byte_var_22": 1,
                    "byte_variable_2": 1,
                    "var17": 1
                },
                "bVar2": {
                    "byte_val": 1,
                    "byte_val1": 1,
                    "byte_value": 1,
                    "byte_var": 9,
                    "byte_var1": 1,
                    "byte_var2": 11,
                    "byte_var_2": 2,
                    "byte_variable": 1,
                    "comparison_result": 1,
                    "var2": 1
                },
                "bfd_openr": {
                    "function_e": 1,
                    "open_bfd_read": 1,
                    "open_file": 1
                },
                "byte": {
                    "byte": 1
                },
                "dcgettext": {
                    "dc_gettext": 1,
                    "function_i": 1,
                    "get_error_message": 1
                },
                "filename_cmp": {
                    "compare_filenames": 2,
                    "function_d": 1
                },
                "iVar3": {
                    "cmp_result": 1,
                    "index": 1,
                    "int_val": 1,
                    "int_val1": 1,
                    "int_var": 9,
                    "int_var3": 9,
                    "int_var_3": 1,
                    "int_variable": 1,
                    "integer_var3": 1,
                    "integer_var_3": 1,
                    "length": 1,
                    "var3": 1
                },
                "in_stack_00000078": {
                    "dynamic_memory": 1,
                    "file_count": 1,
                    "file_offset": 1,
                    "file_size": 1,
                    "in_stack_00000078": 1,
                    "in_stack_val1": 1,
                    "in_stack_var1": 3,
                    "in_stack_var_00000078": 2,
                    "in_stack_var_23": 1,
                    "long_in_stack00000078": 1,
                    "long_in_stack_variable_1": 1,
                    "long_stack_var1": 1,
                    "long_var4": 2,
                    "long_var_in_stack_00000078": 1,
                    "stack_val_1": 1,
                    "stack_var1": 6,
                    "stack_var_1": 1,
                    "stk_var1": 1
                },
                "in_stack_00000108": {
                    "dynamic_memory2": 1,
                    "file_length": 1,
                    "in_stack_00000108": 1,
                    "in_stack_val2": 1,
                    "in_stack_var2": 3,
                    "in_stack_var_00000108": 2,
                    "in_stack_var_24": 1,
                    "long_in_stack00000108": 1,
                    "long_in_stack_variable_2": 1,
                    "long_stack_var2": 1,
                    "long_var5": 2,
                    "long_var_in_stack_00000108": 1,
                    "max_files": 1,
                    "max_size": 1,
                    "stack_val_2": 1,
                    "stack_var2": 6,
                    "stack_var_2": 1,
                    "stk_var2": 1
                },
                "int": {
                    "integer": 1
                },
                "lVar10": {
                    "current_entry": 1,
                    "current_file_ptr": 1,
                    "current_file_struct": 1,
                    "current_linked_file": 1,
                    "l_var_10": 1,
                    "long_val": 1,
                    "long_val1": 1,
                    "long_var": 2,
                    "long_var1": 7,
                    "long_var10": 8,
                    "long_var_1": 1,
                    "long_var_10": 2,
                    "long_variable_1": 1,
                    "ptr_var1": 1,
                    "var10": 1
                },
                "lVar11": {
                    "current_file_ptr": 1,
                    "l_var_11": 1,
                    "long_val2": 1,
                    "long_val_2": 1,
                    "long_var11": 8,
                    "long_var2": 8,
                    "long_var_11": 2,
                    "long_var_2": 2,
                    "long_variable_2": 1,
                    "previous_entry": 1,
                    "previous_file_struct": 1,
                    "previous_linked_file": 1,
                    "ptr_var2": 1,
                    "var11": 1
                },
                "lbasename": {
                    "function_k": 1,
                    "get_base_name": 1,
                    "lbasename": 1
                },
                "param_1": {
                    "arg1": 7,
                    "arg_1": 1,
                    "first_argument": 1,
                    "input": 1,
                    "input_function": 1,
                    "input_param": 4,
                    "input_param1": 1,
                    "param": 1,
                    "param1": 3,
                    "param_1": 7,
                    "param_a": 1,
                    "unaff_rbx": 1
                },
                "param_2": {
                    "arg2": 7,
                    "arg_2": 1,
                    "file_descriptor": 1,
                    "file_size": 4,
                    "input_param2": 1,
                    "param2": 3,
                    "param_2": 9,
                    "param_b": 1,
                    "second_argument": 1,
                    "size": 1
                },
                "param_7": {
                    "arg3": 2,
                    "arg7": 1,
                    "arg_7": 1,
                    "argument_pointer": 1,
                    "char_pointer_pointer_6": 1,
                    "char_ptr_ptr_param_7": 1,
                    "file_names": 1,
                    "file_path_ptr_ptr": 1,
                    "file_paths": 1,
                    "filenames": 1,
                    "input_param7": 1,
                    "output_files": 1,
                    "output_param": 3,
                    "param3": 1,
                    "param7": 3,
                    "param_3": 1,
                    "param_7": 6,
                    "param_c": 1,
                    "ppc_var15": 1
                },
                "param_9": {
                    "arg4": 2,
                    "arg9": 1,
                    "arg_9": 1,
                    "argument_var": 1,
                    "flags": 1,
                    "input_param9": 1,
                    "modified_param_9": 1,
                    "output": 1,
                    "output_param": 1,
                    "output_param_2": 2,
                    "output_status": 1,
                    "param4": 1,
                    "param9": 3,
                    "param_4": 1,
                    "param_9": 6,
                    "param_d": 1,
                    "result": 4
                },
                "pcVar6": {
                    "char_pointer_1": 1,
                    "char_pointer_var1": 2,
                    "char_pointer_var6": 2,
                    "char_ptr1": 3,
                    "char_ptr6": 2,
                    "char_ptr_1": 2,
                    "char_ptr_var": 1,
                    "char_ptr_var1": 3,
                    "char_ptr_var6": 2,
                    "char_ptr_var_6": 1,
                    "char_var6": 1,
                    "char_var_6": 1,
                    "current_file": 2,
                    "pointer_var_6": 1,
                    "ptr6": 1,
                    "ptr_char_var6": 2,
                    "str_var1": 1
                },
                "pcVar7": {
                    "basename1": 1,
                    "basename_of_current_file": 1,
                    "char_pointer_2": 1,
                    "char_pointer_var2": 2,
                    "char_pointer_var7": 2,
                    "char_ptr2": 3,
                    "char_ptr7": 2,
                    "char_ptr_2": 2,
                    "char_ptr_var2": 4,
                    "char_ptr_var7": 2,
                    "char_ptr_var_7": 1,
                    "char_var7": 1,
                    "char_var_7": 1,
                    "pointer_var_7": 1,
                    "ptr7": 1,
                    "ptr_char_var7": 2,
                    "str_var2": 1
                },
                "piVar5": {
                    "errno_location": 2,
                    "error_ptr": 1,
                    "int_pointer": 1,
                    "int_pointer_var": 2,
                    "int_pointer_var5": 2,
                    "int_ptr": 4,
                    "int_ptr1": 1,
                    "int_ptr5": 1,
                    "int_ptr_var": 4,
                    "int_ptr_var5": 2,
                    "int_ptr_var_5": 1,
                    "pointer_var": 1,
                    "pointer_var5": 1,
                    "pointer_var_5": 2,
                    "ptr5": 1,
                    "ptr_int_var5": 2
                },
                "ppcVar14": {
                    "char_pointer_pointer_2": 1,
                    "char_pointer_pointer_var1": 2,
                    "char_pointer_pointer_var14": 2,
                    "char_ptr_ptr1": 1,
                    "char_ptr_ptr14": 1,
                    "char_ptr_ptr2": 1,
                    "char_ptr_ptr3": 1,
                    "char_ptr_ptr_1": 1,
                    "char_ptr_ptr_2": 1,
                    "char_ptr_ptr_var1": 1,
                    "char_ptr_ptr_var14": 1,
                    "char_ptr_ptr_var2": 3,
                    "char_ptr_ptr_var_15": 1,
                    "char_ptr_ptr_var_ppc_var14": 1,
                    "current_linked_file_ptr": 1,
                    "current_node": 1,
                    "file_struct_ptr_ptr": 1,
                    "pointer_pointer_var14": 1,
                    "pointer_pointer_var_14": 1,
                    "pointer_ptr_var_14": 1,
                    "ptr_ptr14": 1,
                    "ptr_ptr_char_var14": 1,
                    "ptr_ptr_char_var_ppc_var14": 1,
                    "ptr_ptr_var1": 1,
                    "str_pointer_1": 1
                },
                "ppcVar15": {
                    "char_pointer_pointer_5": 1,
                    "char_pointer_pointer_var15": 2,
                    "char_pointer_pointer_var2": 1,
                    "char_pointer_pointer_var4": 1,
                    "char_ptr_ptr15": 1,
                    "char_ptr_ptr2": 1,
                    "char_ptr_ptr3": 1,
                    "char_ptr_ptr4": 1,
                    "char_ptr_ptr_3": 1,
                    "char_ptr_ptr_4": 1,
                    "char_ptr_ptr_var15": 1,
                    "char_ptr_ptr_var4": 1,
                    "char_ptr_ptr_var5": 3,
                    "char_ptr_ptr_var_19": 1,
                    "char_ptr_ptr_var_ppc_var15": 1,
                    "file_struct_ptr_ptr2": 1,
                    "next_node": 1,
                    "pointer_pointer_var15": 1,
                    "pointer_pointer_var_15": 1,
                    "pointer_ptr_var_15": 1,
                    "previous_linked_file_ptr": 1,
                    "ptr_ptr15": 1,
                    "ptr_ptr_char_var15": 1,
                    "ptr_ptr_char_var_ppc_var15": 1,
                    "ptr_ptr_var2": 1,
                    "str_pointer_2": 1
                },
                "ppcVar8": {
                    "char_pointer_pointer": 1,
                    "char_pointer_pointer_var": 2,
                    "char_pointer_pointer_var8": 2,
                    "char_ptr_ptr": 5,
                    "char_ptr_ptr1": 1,
                    "char_ptr_ptr8": 1,
                    "char_ptr_ptr_var": 2,
                    "char_ptr_ptr_var1": 2,
                    "char_ptr_ptr_var8": 2,
                    "char_ptr_ptr_var_8": 1,
                    "current_file_ptr": 1,
                    "pointer_pointer_var8": 1,
                    "pointer_pointer_var_8": 1,
                    "pointer_ptr_var_8": 1,
                    "ptr8": 1,
                    "ptr_ptr_char_var8": 2,
                    "ptr_ptr_var": 1,
                    "search_path_list": 1,
                    "str_pointer": 1
                },
                "sVar4": {
                    "length": 1,
                    "size": 1,
                    "size_t_var_4": 1,
                    "size_t_variable": 1,
                    "size_val": 1,
                    "size_val1": 1,
                    "size_var": 9,
                    "size_var4": 10,
                    "size_var_4": 1,
                    "string_length": 1,
                    "var4": 1
                },
                "size_t": {
                    "size_type": 1
                },
                "stat": {
                    "function_l": 1,
                    "get_file_status": 1,
                    "stat_function": 1
                },
                "strlen": {
                    "function_m": 1,
                    "get_string_length": 1,
                    "string_length": 1
                },
                "uVar1": {
                    "locale_name": 1,
                    "undefined_val": 1,
                    "undefined_val1": 1,
                    "undefined_var": 5,
                    "undefined_var1": 14,
                    "undefined_var_1": 2,
                    "undefined_variable": 1,
                    "var1": 1
                },
                "uVar12": {
                    "default_lib": 1,
                    "dependency_error_string": 1,
                    "func_result": 1,
                    "string": 1,
                    "u_var_12": 1,
                    "undefined_val3": 1,
                    "undefined_val_3": 1,
                    "undefined_var12": 10,
                    "undefined_var3": 7,
                    "undefined_var_12": 2,
                    "undefined_var_3": 1,
                    "undefined_variable_3": 1,
                    "var12": 1,
                    "var_1": 1
                },
                "uVar13": {
                    "basename_length": 1,
                    "length": 1,
                    "max_string_length": 1,
                    "u_var_13": 1,
                    "ulong_val": 1,
                    "ulong_val1": 1,
                    "ulong_var": 8,
                    "ulong_var1": 1,
                    "ulong_var13": 10,
                    "ulong_var_13": 2,
                    "ulong_variable": 1,
                    "var13": 1,
                    "var_2": 1
                },
                "uVar9": {
                    "result": 2,
                    "return_val": 1,
                    "search_path": 1,
                    "u_var_9": 1,
                    "undefined_val2": 1,
                    "undefined_val_2": 1,
                    "undefined_var2": 7,
                    "undefined_var9": 10,
                    "undefined_var_2": 1,
                    "undefined_var_9": 2,
                    "undefined_variable_2": 1,
                    "var9": 1
                },
                "unaff_R12": {
                    "char_pointer_pointer_4": 1,
                    "char_pointer_pointer_unaff_r12": 1,
                    "char_pointer_pointer_var3": 1,
                    "char_ptr_ptr2": 1,
                    "char_ptr_ptr_3": 1,
                    "char_ptr_ptr_var3": 1,
                    "char_ptr_ptr_var4": 3,
                    "char_ptr_ptr_var_17": 1,
                    "char_ptr_ptr_var_r12": 1,
                    "char_ptr_ptr_var_unaff_r12": 1,
                    "current_file_ptr_list": 1,
                    "file_list": 1,
                    "file_path_ptr_ptr": 1,
                    "file_ptr_arr1": 1,
                    "linked_files": 1,
                    "list_pointer": 1,
                    "options": 1,
                    "param5": 1,
                    "ptr_ptr_char_var_unaff_r12": 1,
                    "ptr_r12": 1,
                    "r12": 1,
                    "unaff_r12": 2,
                    "unaffected_r12": 5
                },
                "unaff_R13D": {
                    "action": 1,
                    "comparison_mode": 1,
                    "counter": 1,
                    "file_count": 1,
                    "flag": 1,
                    "match_flag": 1,
                    "r13_d": 1,
                    "search_mode": 1,
                    "uint_unaff_r13_d": 1,
                    "uint_val": 1,
                    "uint_var": 6,
                    "uint_var1": 1,
                    "uint_var_18": 1,
                    "uint_var_r13_d": 1,
                    "uint_var_unaff_r13_d": 2,
                    "uint_variable": 1,
                    "unaff_r13_d": 2,
                    "unaffected_r13_d": 5,
                    "val_r13_d": 1
                },
                "unaff_R14": {
                    "file_data": 2,
                    "file_list_ptr": 1,
                    "file_path_ptr_ptr": 1,
                    "file_ptr_arr2": 1,
                    "file_struct": 1,
                    "linked_file_struct": 1,
                    "long_unaff_r14": 1,
                    "long_val_3": 1,
                    "long_var3": 6,
                    "long_var_20": 1,
                    "long_var_r14": 1,
                    "long_var_unaff_r14": 2,
                    "long_variable_3": 1,
                    "r14": 1,
                    "struct_pointer": 1,
                    "unaff_r14": 2,
                    "unaffected_r14": 5,
                    "val_r14": 1
                },
                "unaff_RBP": {
                    "arguments": 1,
                    "char_pointer_pointer_3": 1,
                    "char_pointer_pointer_unaff_rbp": 1,
                    "char_pointer_pointer_var2": 1,
                    "char_ptr_ptr1": 1,
                    "char_ptr_ptr_2": 1,
                    "char_ptr_ptr_var2": 1,
                    "char_ptr_ptr_var3": 3,
                    "char_ptr_ptr_var_16": 1,
                    "char_ptr_ptr_var_rbp": 1,
                    "char_ptr_ptr_var_unaff_rbp": 1,
                    "file_list": 1,
                    "file_path_ptr": 1,
                    "file_paths": 1,
                    "file_ptr_arr": 1,
                    "next_path": 1,
                    "param6": 1,
                    "ptr_ptr_char_var_unaff_rbp": 1,
                    "ptr_rbp": 1,
                    "rbp": 1,
                    "str_pointer_list": 1,
                    "unaff_rbp": 2,
                    "unaffected_rbp": 5
                },
                "unaff_RBX": {
                    "char_pointer_5": 1,
                    "char_pointer_unaff_rbx": 1,
                    "char_pointer_var5": 1,
                    "char_ptr": 1,
                    "char_ptr_var3": 3,
                    "char_ptr_var4": 1,
                    "char_ptr_var_14": 1,
                    "char_ptr_var_rbx": 1,
                    "char_ptr_var_unaff_rbx": 1,
                    "current_file": 1,
                    "current_file_path": 1,
                    "current_filename": 1,
                    "current_path": 1,
                    "file_path": 1,
                    "filename": 3,
                    "ptr_char_var_unaff_rbx": 1,
                    "ptr_rbx": 1,
                    "rbx": 1,
                    "str_1_pointer": 1,
                    "unaff_rbx": 2,
                    "unaffected_rbx": 5
                },
                "undefined": {
                    "u_var1": 1,
                    "undefined": 1
                },
                "xmalloc": {
                    "dynamic_memory_allocate": 1,
                    "function_g": 1
                }
            },
            "called": [
                "FUN_00105830",
                "FUN_00103172",
                "FUN_00107c10",
                "filename_cmp",
                "FUN_00105870",
                "bfd_openr",
                "__errno_location",
                "FUN_001028ed",
                "xmalloc",
                "FUN_00102943",
                "dcgettext",
                "FUN_001058b0",
                "lbasename",
                "FUN_00105af0",
                "stat",
                "strlen",
                "FUN_00107690",
                "FUN_00105ae0"
            ],
            "calling": [
                "FUN_001028ed"
            ],
            "code": "\n\n\nundefined8 reverse_binary_extraction_001028ed(undefined8 param_1,long param_2)\n\n{\n  undefined undefined_var1;\n  byte byte_var2;\n  integer int_var3;\n  size_type size_var4;\n  integer *int_ptr;\n  char *char_ptr1;\n  char *char_ptr_var2;\n  char **char_ptr_ptr;\n  undefined8 undefined_var9;\n  long long_var10;\n  char *char_var1;\n  char *char_var2;\n  long long_var2;\n  undefined8 undefined_var12;\n  ulong ulong_var13;\n  char *unaffected_rbx;\n  char **char_ptr_ptr_var2;\n  char **unaffected_rbp;\n  char **unaffected_r12;\n  uinteger uint_var;\n  char **char_ptr_ptr_var5;\n  long long_var3;\n  bool bool_var;\n  byte byte_var17;\n  char **param_7;\n  undefined8 param_9;\n  long stack_var1;\n  long stack_var2;\n  \n  byte_var17 = 0;\ncode_r0x001028ed:\n  FUN_00107c10(unaffected_rbx,param_2);\nlabel_1:\n  undefined_var12 = DAT_0010d638;\n  if (uint_var != 3) {\n    while( true ) {\n      if ((undefined8 *)*unaffected_r12 == (undefined8 *)0x0) goto LAB_0010571f;\n      int_var3 = filename_cmp(*(undefined8 *)*unaffected_r12,undefined_var12);\n      if (int_var3 == 0) break;\n      unaffected_r12 = (char **)(*unaffected_r12 + 0xf0);\n    }\n    if (uint_var != 2) goto LAB_0010571f;\n    unaffected_r12 = (char **)(*unaffected_r12 + 0xf0);\n    goto LAB_0010571f;\n  }\n  long_var10 = *(long *)(long_var3 + 0xf0);\n  if (*(long *)(long_var3 + 0xf0) == 0) goto LAB_0010571f;\nLAB_00105670:\n  do {\n    long_var2 = long_var10;\n    long_var10 = *(long *)(long_var2 + 0xf0);\n  } while (long_var10 != 0);\n  unaffected_r12 = (char **)(long_var2 + 0xf0);\n  unaffected_rbx = *unaffected_rbp;\n  if (DAT_0010d620 != 0) goto LAB_00105731;\nLAB_00105698:\n  undefined_var1 = DAT_0010d5f8;\n  uint_var = (uinteger)(DAT_0010d60c != 0);\n  param_2 = bfd_openr(unaffected_rbx,DAT_0010d5f0);\n  if (param_2 != 0) {\n    unaffected_rbp = unaffected_rbp + 1;\n    byte_var2 = FUN_00105af0(unaffected_r12,param_2,uint_var,undefined_var1);\n    param_9._6_1_ = param_9._6_1_ | byte_var2;\n    char_ptr1 = *unaffected_rbp;\n    do {\n      if (char_ptr1 == (char *)0x0) {\n        if (param_9._6_1_ == 0) {\n          DAT_0010d618 = 0;\n          return 0;\n        }\n        undefined_var12 = FUN_001058b0();\n        return undefined_var12;\n      }\n      char_ptr_ptr_var2 = *(char ***)(long_var3 + 0xf0);\n      unaffected_r12 = param_7;\n      if (param_9._7_1_ == '\\0') {\n        char_ptr_ptr_var5 = param_7;\n        if (char_ptr_ptr_var2 != (char **)0x0) {\n          do {\n            if (DAT_0010d5f9 == '\\0') {\n              char_var1 = (char *)lbasename(*char_ptr_ptr_var2);\n              char_ptr_var2 = char_var1;\n              if (DAT_0010d5fa != '\\0') {\n                size_var4 = strlen(char_var1);\n                ulong_var13 = (ulong)*(byte *)(*(long *)(long_var3 + 8) + 0x1e);\n                if (ulong_var13 < size_var4) {\n                  char_ptr_var2 = (char *)xmalloc(ulong_var13 + 1);\n                  long_var10 = *(long *)(long_var3 + 8);\n                  char_ptr1 = char_ptr_var2;\n                  for (ulong_var13 = (ulong)*(byte *)(long_var10 + 0x1e); ulong_var13 != 0; ulong_var13 = ulong_var13 - 1) {\n                    *char_ptr1 = *char_var1;\n                    char_var1 = char_var1 + (ulong)byte_var17 * -2 + 1;\n                    char_ptr1 = char_ptr1 + (ulong)byte_var17 * -2 + 1;\n                  }\n                  char_ptr_var2[*(byte *)(long_var10 + 0x1e)] = '\\0';\n                }\n                char_ptr1 = *unaffected_rbp;\n                char_var1 = char_ptr_var2;\n                if (DAT_0010d5f9 == '\\0') goto LAB_00105611;\n                goto LAB_00102980;\n              }\n              char_ptr1 = *unaffected_rbp;\n              if (DAT_0010d5f9 != '\\0') goto LAB_00102980;\nLAB_00105611:\n              char_var2 = (char *)lbasename(char_ptr1);\n              if (DAT_0010d5fa != '\\0') {\n                size_var4 = strlen(char_var2);\n                ulong_var13 = (ulong)*(byte *)(*(long *)(long_var3 + 8) + 0x1e);\n                char_ptr1 = char_var2;\n                char_var1 = char_ptr_var2;\n                if (ulong_var13 < size_var4) {\n                  char_ptr1 = (char *)xmalloc(ulong_var13 + 1);\n                  long_var10 = *(long *)(long_var3 + 8);\n                  char_ptr_var2 = char_ptr1;\n                  for (ulong_var13 = (ulong)*(byte *)(long_var10 + 0x1e); ulong_var13 != 0; ulong_var13 = ulong_var13 - 1) {\n                    *char_ptr_var2 = *char_var2;\n                    char_var2 = char_var2 + (ulong)byte_var17 * -2 + 1;\n                    char_ptr_var2 = char_ptr_var2 + (ulong)byte_var17 * -2 + 1;\n                  }\n                  char_ptr1[*(byte *)(long_var10 + 0x1e)] = '\\0';\n                }\n                goto LAB_00102980;\n              }\n              int_var3 = filename_cmp(char_var2,char_ptr_var2);\n            }\n            else {\n              char_ptr1 = *unaffected_rbp;\n              char_var1 = *char_ptr_ptr_var2;\nLAB_00102980:\n              int_var3 = filename_cmp(char_ptr1,char_var1);\n            }\n            if ((int_var3 == 0) && (char_ptr_ptr_var2[0x1c] != (char *)0x0)) {\n              if (_DAT_0010d644 != 0) {\n                int_var3 = stat_function(*unaffected_rbp,(stat_function *)&stack0x000000b0);\n                if (int_var3 != 0) {\n                  int_ptr = __errno_location();\n                  if (*int_ptr != 2) {\n                    FUN_00107c10(*unaffected_rbp);\nLAB_00102b7e:\n                    char_ptr1 = *char_ptr_ptr_var2;\n                    undefined_var12 = dcgettext(0,\"integerernal stat_function error on %s\",5);\n                    FUN_00107690(undefined_var12,char_ptr1);\n                    free(unaffected_rbp);\n                    return 0;\n                  }\n                  goto LAB_0010577e;\n                }\n                char_ptr_ptr = (char **)char_ptr_ptr_var2[0x1d];\n                if ((char **)char_ptr_ptr_var2[0x1d] == (char **)0x0) {\n                  char_ptr_ptr = char_ptr_ptr_var2;\n                }\n                int_var3 = (**(code **)(char_ptr_ptr[1] + 0x1e8))(char_ptr_ptr_var2,&stack0x00000020);\n                if (int_var3 != 0) goto LAB_00102b7e;\n                if (stack_var2 <= stack_var1) goto LAB_0010577e;\n              }\n              undefined_var12 = FUN_00105870(param_7,2,*char_ptr_ptr_var2);\n              if (DAT_0010d620 == 0) {\nLAB_00102ae2:\n                char_ptr1 = *unaffected_rbp;\n                bool_var = DAT_0010d60c != 0;\n                long_var10 = bfd_openr(char_ptr1,DAT_0010d5f0);\n                if (long_var10 == 0) {\n                  FUN_00107c10(char_ptr1,0);\n                  goto LAB_00102b3e;\n                }\n                byte_var2 = FUN_00103172(undefined_var12,long_var10,bool_var);\n              }\n              else {\n                undefined_var9 = FUN_00105830(*unaffected_rbp);\n                int_var3 = filename_cmp(undefined_var9,\"__.LIBDEP\");\n                if (int_var3 != 0) goto LAB_00102ae2;\nLAB_00102b3e:\n                byte_var2 = FUN_00103172(undefined_var12,DAT_0010d620,DAT_0010d60c != 0);\n              }\n              if (byte_var2 != 0) {\n                *char_ptr_ptr_var5 = *(char **)(*char_ptr_ptr_var5 + 0xf0);\n                param_9._6_1_ = byte_var2;\n              }\n              goto LAB_0010577e;\n            }\n            char_ptr_ptr_var5 = char_ptr_ptr_var2 + 0x1e;\n            char_ptr_ptr_var2 = (char **)char_ptr_ptr_var2[0x1e];\n          } while (char_ptr_ptr_var2 != (char **)0x0);\n          goto LAB_0010564c;\n        }\n        uint_var = DAT_0010d640;\n        if (DAT_0010d640 != 0) goto label_1;\n      }\n      else {\nLAB_0010564c:\n        uint_var = DAT_0010d640;\n        if (DAT_0010d640 != 0) goto label_1;\n        long_var10 = *(long *)(long_var3 + 0xf0);\n        if (*(long *)(long_var3 + 0xf0) != 0) goto LAB_00105670;\n      }\nLAB_0010571f:\n      unaffected_rbx = *unaffected_rbp;\n      if (DAT_0010d620 == 0) goto LAB_00105698;\nLAB_00105731:\n      undefined_var12 = FUN_00105830(unaffected_rbx);\n      int_var3 = filename_cmp(undefined_var12,\"__.LIBDEP\");\n      if (int_var3 != 0) goto code_r0x0010574f;\n      byte_var2 = FUN_00105ae0(unaffected_r12,DAT_0010d620,DAT_0010d60c != 0,DAT_0010d5f8);\n      param_9._6_1_ = byte_var2 | param_9._6_1_;\nLAB_0010577e:\n      unaffected_rbp = unaffected_rbp + 1;\n      char_ptr1 = *unaffected_rbp;\n    } while( true );\n  }\n  goto code_r0x001028ed;\ncode_r0x0010574f:\n  unaffected_rbx = *unaffected_rbp;\n  goto LAB_00105698;\n}\n\n",
            "current_name": "reverse_binary_extraction_001028ed",
            "entrypoint": "0x001028ed",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001028ed": "reverse_binary_extraction_001028ed",
                "LAB_001028f5": "label_1",
                "__errno_location": "function_f",
                "__s": "char_var1",
                "__s_00": "char_var2",
                "bVar16": "bool_var",
                "bVar17": "byte_var17",
                "bVar2": "byte_var2",
                "bfd_openr": "open_file",
                "dcgettext": "dc_gettext",
                "filename_cmp": "compare_filenames",
                "iVar3": "int_var3",
                "in_stack_00000078": "stack_var1",
                "in_stack_00000108": "stack_var2",
                "int": "integer",
                "lVar10": "long_var10",
                "lVar11": "long_var2",
                "lbasename": "get_base_name",
                "pcVar6": "char_ptr1",
                "pcVar7": "char_ptr_var2",
                "piVar5": "int_ptr",
                "ppcVar14": "char_ptr_ptr_var2",
                "ppcVar15": "char_ptr_ptr_var5",
                "ppcVar8": "char_ptr_ptr",
                "sVar4": "size_var4",
                "size_t": "size_type",
                "stat": "stat_function",
                "strlen": "function_m",
                "uVar1": "undefined_var1",
                "uVar12": "undefined_var12",
                "uVar13": "ulong_var13",
                "uVar9": "undefined_var9",
                "unaff_R12": "unaffected_r12",
                "unaff_R13D": "uint_var",
                "unaff_R14": "long_var3",
                "unaff_RBP": "unaffected_rbp",
                "unaff_RBX": "unaffected_rbx",
                "xmalloc": "function_g"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102943": {
            "additional_data": {
                "DAT_0010d618": {
                    "counter": 7,
                    "data": 1,
                    "data_counter": 6,
                    "data_flag": 1,
                    "data_initialized": 1,
                    "data_pointer": 1,
                    "data_size": 1,
                    "data_value": 2,
                    "data_variable": 4,
                    "global_variable": 1
                },
                "FUN_00102943": {
                    "clear_data": 1,
                    "initialize_counter": 4,
                    "initialize_data": 18,
                    "initialize_global_variable": 1,
                    "initialize_value_to_zero": 1,
                    "reset_counter": 4,
                    "reset_data": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_001028ed",
                "FUN_00105570"
            ],
            "code": "\nvoid initialize_data_00102943(void)\n\n{\n  DAT_0010d618 = 0;\n  return;\n}\n\n",
            "current_name": "initialize_data_00102943",
            "entrypoint": "0x00102943",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102943": "initialize_data_00102943"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102ba1": {
            "additional_data": {
                "FUN_00102ba1": {
                    "deallocate_memory": 13,
                    "decompile_and_free_memory": 3,
                    "decompile_function": 2,
                    "decompiled_function": 5,
                    "free_and_return": 3,
                    "free_and_return_address": 1,
                    "free_and_return_zero": 1,
                    "free_memory": 1,
                    "free_memory_and_return": 1,
                    "reverse_and_free_memory": 1
                },
                "__ptr": {
                    "memory_address": 1,
                    "memory_block": 1,
                    "memory_chunk": 1,
                    "memory_pointer": 1,
                    "memory_to_free": 1
                },
                "auVar1": {
                    "output_value": 1,
                    "result": 4,
                    "return_value": 4,
                    "updated_return_value": 1
                },
                "unaff_RBP": {
                    "memory_address": 3,
                    "memory_block": 7,
                    "memory_pointer": 1,
                    "memory_to_deallocate": 2,
                    "memory_to_free": 4,
                    "p_buffer": 1,
                    "pointer": 5,
                    "pointer_to_free": 3,
                    "ptr": 1,
                    "ptr_to_free": 2
                },
                "unaff_retaddr": {
                    "ret_address": 2,
                    "return_address": 27
                }
            },
            "called": [
                "free"
            ],
            "calling": [
                "FUN_001057a0"
            ],
            "code": "\nundefined  [16] deallocate_memory_00102ba1(void)\n\n{\n  undefined return_value [16];\n  void *memory_block;\n  ulong return_address;\n  \n  free(memory_block);\n  return_value._8_8_ = 0;\n  return_value._0_8_ = return_address;\n  return return_value << 0x40;\n}\n\n",
            "current_name": "deallocate_memory_00102ba1",
            "entrypoint": "0x00102ba1",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102ba1": "deallocate_memory_00102ba1",
                "auVar1": "return_value",
                "unaff_RBP": "memory_block",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102bb0": {
            "additional_data": {
                "FUN_00102bb0": {
                    "copy_limited_string": 1,
                    "copy_string_limited": 1,
                    "copy_string_with_limit": 3,
                    "copy_substring": 1,
                    "decode_string": 1,
                    "extract_string": 2,
                    "extract_substring": 1,
                    "reverse_and_copy_string": 2,
                    "reverse_c_string": 1,
                    "reverse_string": 18
                },
                "auVar7": {
                    "result": 4,
                    "return_struct": 1,
                    "return_val": 1,
                    "return_value": 17,
                    "return_variable": 1,
                    "reversed_string": 1
                },
                "bVar6": {
                    "boolean": 1,
                    "byte_counter": 1,
                    "flag": 3,
                    "increment": 3,
                    "is_backward": 1,
                    "is_first_iteration": 1,
                    "is_increasing": 1,
                    "is_negative": 6,
                    "is_reverse": 3,
                    "is_reversed": 2,
                    "loop_control": 1,
                    "loop_var": 1,
                    "reverse_flag": 2,
                    "reverse_increment": 1,
                    "reverse_state": 1
                },
                "in_RAX": {
                    "input_string": 22,
                    "original_string": 2,
                    "source_string": 1,
                    "str": 3,
                    "string": 2
                },
                "lVar1": {
                    "input_string_address": 1,
                    "input_string_ptr": 1,
                    "source_address": 1,
                    "source_pointer": 1,
                    "string_address": 1,
                    "string_length": 1,
                    "string_start": 1
                },
                "puVar3": {
                    "copied_string": 1,
                    "decoded_string": 1,
                    "destination_pointer": 1,
                    "destination_string": 1,
                    "new_str": 1,
                    "new_string": 6,
                    "output_string": 3,
                    "result_str": 1,
                    "reversed_string": 11,
                    "substring": 1
                },
                "puVar5": {
                    "current_char": 1,
                    "current_char_pointer": 1,
                    "current_destination_pointer": 1,
                    "decoded_string_ptr": 1,
                    "dest": 2,
                    "dest_ptr": 2,
                    "destination_pointer": 4,
                    "destination_ptr": 1,
                    "destination_string": 1,
                    "dst": 1,
                    "new_string_pointer": 1,
                    "output_pointer": 1,
                    "pointer": 1,
                    "reversed_char": 1,
                    "reversed_ptr": 1,
                    "reversed_string_pointer": 1,
                    "reversed_string_position": 1,
                    "reversed_string_ptr": 4,
                    "substring_end": 1
                },
                "sVar2": {
                    "input_length": 5,
                    "length": 1,
                    "original_string_length": 1,
                    "source_length": 1,
                    "str_length": 3,
                    "string_length": 16
                },
                "strlen": {
                    "get_string_length": 1
                },
                "uVar4": {
                    "copy_length": 2,
                    "length": 1,
                    "limit": 4,
                    "max_length": 14,
                    "max_reversed_length": 1,
                    "max_string_length": 2,
                    "reverse_length": 1,
                    "reversed_length": 1,
                    "substring_length": 1
                },
                "unaff_RBP": {
                    "base_pointer": 16,
                    "caller_frame": 1,
                    "frame_base_pointer": 1,
                    "frame_pointer": 5,
                    "previous_frame_pointer": 1,
                    "ptr": 1,
                    "saved_rbp": 1,
                    "saved_register": 1,
                    "stack_base": 3,
                    "stack_base_ptr": 1
                },
                "unaff_RBX": {
                    "buffer": 1,
                    "char_pointer": 1,
                    "copy_pointer": 1,
                    "current_char": 6,
                    "input_pointer": 1,
                    "output_string": 1,
                    "source": 4,
                    "source_pointer": 5,
                    "source_ptr": 2,
                    "source_string": 2,
                    "src": 2,
                    "src_ptr": 1,
                    "string_ptr": 1
                },
                "unaff_retaddr": {
                    "return_address": 20
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "xmalloc",
                "strlen"
            ],
            "calling": [
                "FUN_00105830"
            ],
            "code": "\nundefined  [16] reverse_and_copy_string_00102bb0(void)\n\n{\n  long string_length;\n  char *input_string;\n  size_t string_length;\n  undefined *reversed_string;\n  ulong max_length;\n  undefined *current_char;\n  long base_pointer;\n  undefined *destination_pointer;\n  byte is_negative;\n  undefined return_value [16];\n  undefined8 return_address;\n  \n  is_negative = 0;\n  string_length = strlen(input_string);\n  max_length = (ulong)*(byte *)(*(long *)(base_pointer + 8) + 0x1e);\n  reversed_string = current_char;\n  if (max_length < string_length) {\n    reversed_string = (undefined *)xmalloc(max_length + 1);\n    string_length = *(long *)(base_pointer + 8);\n    destination_pointer = reversed_string;\n    for (max_length = (ulong)*(byte *)(string_length + 0x1e); max_length != 0; max_length = max_length - 1) {\n      *destination_pointer = *current_char;\n      current_char = current_char + (ulong)is_negative * -2 + 1;\n      destination_pointer = destination_pointer + (ulong)is_negative * -2 + 1;\n    }\n    reversed_string[*(byte *)(string_length + 0x1e)] = 0;\n  }\n  return_value._8_8_ = return_address;\n  return_value._0_8_ = reversed_string;\n  return return_value;\n}\n\n",
            "current_name": "reverse_and_copy_string_00102bb0",
            "entrypoint": "0x00102bb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102bb0": "reverse_and_copy_string_00102bb0",
                "auVar7": "return_value",
                "bVar6": "is_negative",
                "in_RAX": "input_string",
                "lVar1": "string_length",
                "puVar3": "reversed_string",
                "puVar5": "destination_pointer",
                "sVar2": "string_length",
                "strlen": "get_string_length",
                "uVar4": "max_length",
                "unaff_RBP": "base_pointer",
                "unaff_RBX": "current_char",
                "unaff_retaddr": "return_address",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102bf5": {
            "additional_data": {
                "DAT_0010d5d8": {
                    "file_pointer": 3,
                    "file_ptr": 1
                },
                "DAT_0010d5e0": {
                    "cache_enabled": 2,
                    "cache_status": 1
                },
                "DAT_0010d618": {
                    "file_path": 3
                },
                "FUN_00102bf5": {
                    "clean_up_resources": 1,
                    "cleanup": 9,
                    "cleanup_and_close_file": 2,
                    "cleanup_and_close_files": 2,
                    "cleanup_and_remove_file": 1,
                    "cleanup_cache": 1,
                    "cleanup_files": 5,
                    "cleanup_function": 2,
                    "cleanup_resources": 3,
                    "close_and_unlink_file": 1,
                    "close_cache_and_file": 2,
                    "close_file_and_remove_cache": 1,
                    "close_file_and_unlink": 1
                },
                "__d5d8": {
                    "file_pointer": 1
                },
                "__d5e0": {
                    "bfd_cache_flag": 1,
                    "cache": 1
                },
                "__d618": {
                    "file_name": 1
                },
                "__stream": {
                    "file": 13,
                    "file_descriptor": 1,
                    "file_path": 1,
                    "file_pointer": 1,
                    "file_stream": 4,
                    "stream": 1,
                    "stream_to_close": 1
                },
                "bfd_cache_close": {
                    "cache_close": 1,
                    "clear_bf_dcache": 1,
                    "close_bfd": 1,
                    "close_bfd_cache": 20,
                    "close_cache": 4
                },
                "fclose": {
                    "close_file": 20,
                    "file_close": 1
                },
                "unlink_if_ordinary": {
                    "delete_file": 1,
                    "delete_if_ordinary": 1,
                    "remove_file": 12,
                    "remove_if_ordinary": 1,
                    "remove_ordinary": 1,
                    "unlink_file": 6,
                    "unlink_file_ordinary": 1,
                    "unlink_ordinary": 4,
                    "unlink_ordinary_file": 1
                }
            },
            "called": [
                "fclose",
                "bfd_cache_close",
                "unlink_if_ordinary"
            ],
            "calling": [
                "FUN_00107730"
            ],
            "code": "\nvoid cleanup_and_close_files_00102bf5(void)\n\n{\n  if (DAT_0010d5e0 != 0) {\n    bfd_cache_close();\n  }\n  if (DAT_0010d5d8 != (FILE *)0x0) {\n    fclose(DAT_0010d5d8);\n  }\n  unlink_if_ordinary(DAT_0010d618);\n  return;\n}\n\n",
            "current_name": "cleanup_and_close_files_00102bf5",
            "entrypoint": "0x00102bf5",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102bf5": "cleanup_and_close_files_00102bf5",
                "bfd_cache_close": "close_bfd_cache",
                "fclose": "close_file",
                "unlink_if_ordinary": "remove_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102c25": {
            "additional_data": {
                "BFD_BREAD_ERROR_STRING": {
                    "error_description": 1
                },
                "BFD_SEEK_CUR": {
                    "seek_cur": 1
                },
                "BFD_SEEK_END": {
                    "seek_end": 1
                },
                "BFD_SEEK_ERROR_STRING": {
                    "error_description": 1
                },
                "BFD_SEEK_SET": {
                    "seek_set": 1
                },
                "CHMOD_ERROR_STRING": {
                    "error_description": 1
                },
                "DAT_0010d5d8": {
                    "archive_file": 2,
                    "output_file": 2
                },
                "DAT_0010d618": {
                    "archive_filename": 2,
                    "file_name": 1,
                    "file_path": 1
                },
                "DAT_0010d638": {
                    "internal_error": 1,
                    "internal_error_message": 1,
                    "stat_error_message": 2
                },
                "DCGETTEXT_ERROR_PREFIX": {
                    "error_prefix": 1
                },
                "DCGETTEXT_ERROR_STRING": {
                    "error_description": 1
                },
                "FCLOSE_ERROR_STRING": {
                    "error_description": 1
                },
                "FOPEN_ERROR_STRING": {
                    "error_description": 1
                },
                "FUN_00102c25": {
                    "extract_and_process_archive": 1,
                    "extract_and_write_archive": 2,
                    "extract_archive": 6,
                    "extract_archived_file": 2,
                    "extract_archives": 1,
                    "extract_stat_error_file": 1,
                    "extract_valid_archive": 2,
                    "extract_valid_archive_sections": 1,
                    "find_file_in_archive": 6,
                    "find_matching_file": 2,
                    "parse_archive": 1,
                    "process_archive": 1,
                    "process_archive_file": 1
                },
                "FUN_00105a20": {
                    "get_file_pointer": 1,
                    "open_file": 4
                },
                "FUN_00107690": {
                    "handle_error": 5
                },
                "FUN_00107c80": {
                    "execute_function": 1,
                    "perform_action": 1,
                    "process_file": 2
                },
                "FWRITE_ERROR_STRING": {
                    "error_description": 1
                },
                "SEEK_CUR": {
                    "cur": 1
                },
                "SEEK_END": {
                    "end": 1
                },
                "SEEK_SET": {
                    "set": 1
                },
                "STRERROR_ERROR_PREFIX": {
                    "error_prefix": 1
                },
                "STRERROR_ERROR_STRING": {
                    "error_description": 1
                },
                "XFREE_ERROR_STRING": {
                    "error_description": 1
                },
                "XSTRDUP_ERROR_PREFIX": {
                    "error_prefix": 1
                },
                "XSTRNDUP_ERROR_PREFIX": {
                    "error_prefix": 1
                },
                "_DAT_0010d600": {
                    "flag": 2,
                    "flag_check": 1,
                    "perform_action": 2
                },
                "__errno_location": {
                    "get_errno_location": 3,
                    "get_error_number": 1
                },
                "__errnum": {
                    "err_num": 1
                },
                "__mode_t": {
                    "file_mode": 3
                },
                "__n": {
                    "buffer_size": 1,
                    "bytes_read": 22,
                    "bytes_to_read": 1,
                    "read_size": 6
                },
                "__ptr": {
                    "buffer": 27,
                    "buffer_pointer": 1,
                    "buffer_ptr": 3
                },
                "__size": {
                    "size": 1
                },
                "__stream": {
                    "file": 1
                },
                "bfd_bread": {
                    "read": 1,
                    "read_archive": 1,
                    "read_file": 1
                },
                "bfd_seek": {
                    "seek": 1,
                    "seek_archive": 1,
                    "seek_file": 1
                },
                "chmod": {
                    "change_file_permissions": 2,
                    "change_permissions": 1,
                    "set_file_permissions": 1
                },
                "dcgettext": {
                    "get_localized_string": 1,
                    "get_message": 1,
                    "get_text": 1,
                    "get_translated_message": 1
                },
                "fclose": {
                    "close_file": 4
                },
                "free": {
                    "deallocate_memory": 1,
                    "free_memory": 2
                },
                "fwrite": {
                    "write_to_file": 3
                },
                "iVar1": {
                    "cmp_result": 4,
                    "compare_result": 1,
                    "comparison_result": 15,
                    "filename_cmp_result": 2,
                    "filename_comparison": 3,
                    "filename_comparison_result": 4
                },
                "iVar2": {
                    "error_code": 5,
                    "result": 6,
                    "result_code": 1,
                    "return_value": 3,
                    "stat_error": 7,
                    "stat_result": 1,
                    "status": 6,
                    "status_code": 1
                },
                "lVar7": {
                    "count": 2,
                    "counter": 2,
                    "i": 1,
                    "index": 1,
                    "loop_count": 1,
                    "loop_counter": 18,
                    "loop_index": 2,
                    "loop_variable": 1
                },
                "label_1": {
                    "loop_label": 1
                },
                "label_2": {
                    "null_file_label": 1
                },
                "label_3": {
                    "compare_file_label": 1
                },
                "label_4": {
                    "search_file_label": 1
                },
                "param_1": {
                    "error_message1": 1,
                    "param_char": 1
                },
                "param_11": {
                    "file_mode": 3,
                    "file_permission": 6,
                    "file_permissions": 10,
                    "mode": 4,
                    "new_file_permissions": 2,
                    "new_permissions": 1,
                    "permission": 2,
                    "permissions": 3
                },
                "param_12": {
                    "archive_size": 24,
                    "file_size": 5,
                    "filesize": 1,
                    "size": 1
                },
                "param_2": {
                    "error_message2": 1,
                    "param_long": 1
                },
                "param_3": {
                    "error_message3": 1,
                    "param3": 1
                },
                "param_4": {
                    "error_message4": 1,
                    "param4": 1
                },
                "param_7": {
                    "archive_format": 1,
                    "err_codes": 1,
                    "error_codes": 3,
                    "error_messages": 1,
                    "error_string": 1,
                    "file_data": 1,
                    "file_modes": 1,
                    "file_permissions": 5,
                    "flags": 4,
                    "mode_array": 1,
                    "output": 1,
                    "output_array": 2,
                    "param_array": 2,
                    "permissions": 2,
                    "permissions_array": 1,
                    "status": 1
                },
                "pcVar4": {
                    "err_msg": 1,
                    "error_description": 1,
                    "error_message": 5,
                    "error_msg": 2,
                    "error_str": 1,
                    "error_string": 14,
                    "filename": 1,
                    "str_error": 1,
                    "strerror_result": 1
                },
                "piVar3": {
                    "errno_location": 12,
                    "errno_pointer": 1,
                    "errno_ptr": 7,
                    "errnum_ptr": 1,
                    "error_message": 1,
                    "error_number": 5
                },
                "plVar8": {
                    "archive_entry": 1,
                    "current_archive": 1,
                    "current_element": 1,
                    "current_entry": 5,
                    "current_file": 7,
                    "current_pointer": 2,
                    "current_ptr": 3,
                    "file": 1,
                    "file_pointer": 1,
                    "file_ptr": 6,
                    "pointer_to_file": 1,
                    "pointer_var": 1,
                    "section": 1
                },
                "pplVar6": {
                    "archive": 4,
                    "archive_data": 4,
                    "archive_field": 1,
                    "archive_parameters": 1,
                    "archive_pointer": 1,
                    "archive_ptr": 6,
                    "archive_ptrs": 1,
                    "archived_files": 1,
                    "current_folder": 1,
                    "entry_list": 1,
                    "file_entry": 1,
                    "file_info_ptr": 1,
                    "file_list_ptr": 1,
                    "file_ptrs": 1,
                    "function_pointer_array": 1,
                    "function_ptr": 1,
                    "pointer_array": 1,
                    "pointer_to_archive": 1,
                    "ptr_array": 1,
                    "section_list": 1
                },
                "puVar9": {
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "current_error": 1,
                    "current_flag": 1,
                    "current_mode": 1,
                    "current_param": 1,
                    "current_permission": 1,
                    "dest_ptr": 1,
                    "flag_ptr": 1,
                    "loop_pointer": 1,
                    "param_7": 2,
                    "param_7_iterator": 1,
                    "param_7_ptr": 1,
                    "param_array": 3,
                    "param_array_iterator": 1,
                    "param_pointer": 1,
                    "param_ptr": 5,
                    "param_values": 1,
                    "parameter_pointer": 1,
                    "permissions_ptr": 1,
                    "pointer": 1,
                    "pointer_to_flags": 1,
                    "status_pointer": 1
                },
                "sVar11": {
                    "buffer_size": 1,
                    "bytes_read": 2,
                    "bytes_to_process": 3,
                    "bytes_to_read": 7,
                    "bytes_to_write": 2,
                    "bytes_written": 1,
                    "num_bytes": 1,
                    "read_length": 1,
                    "read_size": 3,
                    "remaining_bytes": 1,
                    "size_var": 1,
                    "write_size": 6
                },
                "strerror": {
                    "error_description": 1,
                    "get_error_message": 1,
                    "get_error_string": 1
                },
                "uVar10": {
                    "bytes_processed": 11,
                    "bytes_read": 2,
                    "bytes_remaining": 1,
                    "bytes_written": 5,
                    "total_bytes": 1,
                    "total_bytes_read": 7,
                    "total_read": 2
                },
                "uVar5": {
                    "error_message": 15,
                    "error_msg": 3,
                    "error_string": 4,
                    "gettext_message": 1,
                    "message": 4,
                    "text": 2,
                    "translation": 1,
                    "translation_msg": 1
                },
                "unaff_RBX": {
                    "archive": 2,
                    "archive_data": 3,
                    "archive_files": 1,
                    "archive_pointer": 1,
                    "archive_ptr": 1,
                    "current_file": 1,
                    "file": 1,
                    "file_info": 1,
                    "function_args": 1,
                    "function_arguments": 1,
                    "input": 1,
                    "input_arguments": 1,
                    "input_array": 1,
                    "input_parameters": 1,
                    "input_ptr": 1,
                    "parameters": 1,
                    "pointer_rbx": 1,
                    "pointer_to_data": 1
                },
                "xmalloc": {
                    "allocate_memory": 4
                }
            },
            "called": [
                "bfd_seek",
                "bfd_bread",
                "strerror",
                "__errno_location",
                "free",
                "fwrite",
                "fclose",
                "chmod",
                "xmalloc",
                "FUN_00107c80",
                "dcgettext",
                "FUN_00107690",
                "FUN_00105a20"
            ],
            "calling": [
                "FUN_00107740"
            ],
            "code": "\n\n\nlong * extract_valid_archive_sections_00102c25(void)\n\n{\n  int comparison_result;\n  int stat_error;\n  int *errno_location;\n  char *error_string;\n  undefined8 error_message;\n  long **archive_ptr;\n  void *buffer;\n  size_t bytes_read;\n  long loop_counter;\n  long **archive_data;\n  long *current_file;\n  undefined4 *param_ptr;\n  ulong bytes_processed;\n  size_t bytes_to_read;\n  undefined4 *file_permissions;\n  file_mode file_permissions;\n  ulong archive_size;\n  \n  param_ptr = file_permissions;\n  for (loop_counter = 0x24; loop_counter != 0; loop_counter = loop_counter + -1) {\n    *param_ptr = 0;\n    param_ptr = param_ptr + 1;\n  }\n  archive_ptr = (long **)archive_data[0x1d];\n  if ((long **)archive_data[0x1d] == (long **)0x0) {\n    archive_ptr = archive_data;\n  }\n  stat_error = (*(code *)archive_ptr[1][0x3d])();\n  if (stat_error != 0) {\n    current_file = *archive_data;\n    error_message = dcgettext(0,\"internal stat error on %s\",5);\n    stat_error = FUN_00107690(error_message,current_file);\n    error_message = DAT_0010d638;\n    if (stat_error == 3) {\n      for (; *current_file != 0; current_file = (long *)(*current_file + 0xf0)) {\n      }\n    }\n    else {\n      for (; (undefined8 *)*current_file != (undefined8 *)0x0; current_file = (long *)(*current_file + 0xf0)) {\n        comparison_result = filename_cmp(*(undefined8 *)*current_file,error_message);\n        if (comparison_result == 0) {\n          if (stat_error != 2) {\n            return current_file;\n          }\n          return (long *)(*current_file + 0xf0);\n        }\n      }\n    }\n    return current_file;\n  }\n  bfd_seek();\n  DAT_0010d5d8 = (FILE *)0x0;\n  if (archive_size == 0) {\nLAB_00102ca2:\n    DAT_0010d5d8 = (FILE *)FUN_00105a20(*archive_data);\n  }\n  else {\n    bytes_processed = 0;\n    buffer = (void *)xmalloc(0x2000);\n    do {\n      bytes_to_read = archive_size - bytes_processed;\n      if (0x2000 < bytes_to_read) {\n        bytes_to_read = 0x2000;\n      }\n      bytes_read = bfd_bread(buffer,bytes_to_read);\n      if (bytes_to_read != bytes_read) {\nLAB_00102c78:\n        archive_data = (long **)*archive_data[0x1d];\n        error_message = dcgettext(0,\"%s is not a valid archive\",5);\n        FUN_00107690(error_message,archive_data);\n        goto LAB_00102ca2;\n      }\n      if (DAT_0010d5d8 == (FILE *)0x0) {\n        DAT_0010d5d8 = (FILE *)FUN_00105a20(*archive_data);\n      }\n      bytes_to_read = fwrite(buffer,1,bytes_read,DAT_0010d5d8);\n      if (bytes_to_read != bytes_read) {\n        errno_location = __errno_location();\n        error_string = strerror(*errno_location);\n        FUN_00107690(\"%s: %s\",DAT_0010d618,error_string);\n        goto LAB_00102c78;\n      }\n      bytes_processed = bytes_processed + bytes_read;\n    } while (bytes_processed < archive_size);\n    free_memory(buffer);\n  }\n  fclose(DAT_0010d5d8);\n  error_string = DAT_0010d618;\n  DAT_0010d5d8 = (FILE *)0x0;\n  chmod(DAT_0010d618,file_permissions);\n  if (_DAT_0010d600 != 0) {\n    FUN_00107c80(error_string,file_permissions);\n  }\n  DAT_0010d618 = (char *)0x0;\n  return (long *)0x0;\n}\n\n",
            "current_name": "extract_valid_archive_sections_00102c25",
            "entrypoint": "0x00102c25",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102c25": "extract_valid_archive_sections_00102c25",
                "__errno_location": "get_errno_location",
                "__mode_t": "file_mode",
                "__n": "bytes_read",
                "__ptr": "buffer",
                "bfd_bread": "read_archive",
                "bfd_seek": "seek_file",
                "chmod": "change_file_permissions",
                "dcgettext": "get_message",
                "fclose": "close_file",
                "free": "free_memory",
                "fwrite": "write_to_file",
                "iVar1": "comparison_result",
                "iVar2": "stat_error",
                "lVar7": "loop_counter",
                "param_1": "error_message1",
                "param_11": "file_permissions",
                "param_12": "archive_size",
                "param_7": "file_permissions",
                "pcVar4": "error_string",
                "piVar3": "errno_location",
                "plVar8": "current_file",
                "pplVar6": "archive_ptr",
                "puVar9": "param_ptr",
                "sVar11": "bytes_to_read",
                "strerror": "get_error_string",
                "uVar10": "bytes_processed",
                "uVar5": "error_message",
                "unaff_RBX": "archive_data",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102cd9": {
            "additional_data": {
                "FUN_00102cd9": {
                    "find_file_in_binary": 1,
                    "find_file_offset": 1,
                    "find_file_ptr": 1,
                    "find_matching_address": 5,
                    "find_matching_entry": 6,
                    "find_matching_file": 12,
                    "find_matching_record": 1,
                    "find_matching_string": 1,
                    "find_target_address": 1,
                    "search_file": 1,
                    "search_for_file": 1
                },
                "filename_cmp": {
                    "compare_filename": 1,
                    "compare_filenames": 4
                },
                "iVar1": {
                    "cmp_result": 2,
                    "comparison_result": 17,
                    "filename_comparison": 1
                },
                "in_EAX": {
                    "comparison_code": 1,
                    "comparison_type": 3,
                    "comparison_value": 3,
                    "condition": 4,
                    "file_check": 1,
                    "file_type": 3,
                    "input": 1,
                    "input_flag": 2,
                    "input_type": 1,
                    "input_value": 3,
                    "mode": 1,
                    "parameter": 2,
                    "parameter1": 1,
                    "search_mode": 4,
                    "search_type": 1
                },
                "param_7": {
                    "comparison_string": 1,
                    "desired_filename": 1,
                    "filename": 5,
                    "filename_to_compare": 1,
                    "filename_to_find": 1,
                    "search_entry": 1,
                    "search_filename": 4,
                    "search_string": 1,
                    "target_address": 3,
                    "target_file": 2,
                    "target_file_name": 2,
                    "target_filename": 8,
                    "target_string": 1
                },
                "unaff_RBX": {
                    "address": 1,
                    "address_list": 1,
                    "address_pointer": 1,
                    "addresses": 1,
                    "current_address": 2,
                    "current_entry_ptr": 1,
                    "current_file": 1,
                    "current_pointer": 1,
                    "entries": 2,
                    "entry_list": 1,
                    "entry_pointer": 2,
                    "file_array": 4,
                    "file_list": 6,
                    "file_list_pointer": 1,
                    "file_offset": 1,
                    "file_pointer": 1,
                    "file_ptr": 2,
                    "files_array": 1,
                    "record_pointer": 1
                }
            },
            "called": [
                "filename_cmp"
            ],
            "calling": [
                "FUN_00105870"
            ],
            "code": "\nlong * find_matching_file_00102cd9(void)\n\n{\n  int search_mode;\n  int comparison_result;\n  long *file_list;\n  undefined8 target_filename;\n  \n  target_filename = DAT_0010d638;\n  if (search_mode == 3) {\n    for (; *file_list != 0; file_list = (long *)(*file_list + 0xf0)) {\n    }\n  }\n  else {\n    for (; (undefined8 *)*file_list != (undefined8 *)0x0; file_list = (long *)(*file_list + 0xf0)) {\n      comparison_result = filename_cmp(*(undefined8 *)*file_list,target_filename);\n      if (comparison_result == 0) {\n        if (search_mode != 2) {\n          return file_list;\n        }\n        return (long *)(*file_list + 0xf0);\n      }\n    }\n  }\n  return file_list;\n}\n\n",
            "current_name": "find_matching_file_00102cd9",
            "entrypoint": "0x00102cd9",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102cd9": "find_matching_file_00102cd9",
                "filename_cmp": "compare_filenames",
                "iVar1": "comparison_result",
                "in_EAX": "search_mode",
                "param_7": "target_filename",
                "unaff_RBX": "file_list"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102d2f": {
            "additional_data": {
                "DAT_0010d5e0": {
                    "flag2": 1,
                    "flag_value1": 1,
                    "global_flag1": 1,
                    "var1": 1
                },
                "DAT_0010d5f8": {
                    "corrupt_time_data": 1,
                    "flag": 1,
                    "flag1": 1,
                    "is_corrupt": 1,
                    "is_corrupt_time_data": 1,
                    "is_corrupted_time": 1
                },
                "DAT_0010d618": {
                    "flag3": 1,
                    "flag_value2": 1,
                    "global_flag2": 1,
                    "var2": 1
                },
                "F0": {
                    "print_file_info": 1
                },
                "FUN_00102d2f": {
                    "format_time_data": 1,
                    "print_file_data": 1,
                    "print_file_details": 1,
                    "print_file_info": 19,
                    "print_file_information": 4,
                    "print_file_metadata": 4
                },
                "FUN_00107c10": {
                    "get_file_data": 1,
                    "get_file_permissions": 1,
                    "read_byte": 1
                },
                "__format": {
                    "corrupt_time_string": 1,
                    "error_format": 1,
                    "error_message": 1,
                    "error_msg": 1,
                    "format_str": 1,
                    "format_string": 5,
                    "time_corrupt_format": 1,
                    "time_data_corrupt_format": 2,
                    "time_error_message": 5,
                    "time_format": 3,
                    "time_msg": 1
                },
                "bVar1": {
                    "archive_flag": 1,
                    "archive_head": 1,
                    "byte_val": 1,
                    "byte_value": 4,
                    "byte_var": 2,
                    "file_status": 1,
                    "result": 2,
                    "status": 1,
                    "value": 1
                },
                "bfd_close": {
                    "close_file": 1
                },
                "bfd_set_archive_head": {
                    "set_archive_head": 1
                },
                "cStack0000000000000016": {
                    "c1": 1,
                    "char1": 1,
                    "char_stack1": 1,
                    "char_var1": 1,
                    "file_perm_char1": 1,
                    "file_permission_r": 1,
                    "file_permission_read": 1,
                    "flag1": 2,
                    "flag3": 1,
                    "flag_char2": 1,
                    "has_executable_permission": 1,
                    "is_executable": 4,
                    "is_executable_flag": 1,
                    "is_read_only": 1,
                    "is_user_readable": 1,
                    "owner_read": 2,
                    "permission1": 1,
                    "permission_char1": 3,
                    "permission_flag": 1,
                    "permission_flag1": 1,
                    "read_permission": 1,
                    "write_permission_char": 1
                },
                "cStack0000000000000017": {
                    "c2": 1,
                    "char2": 1,
                    "char_stack2": 1,
                    "char_var2": 1,
                    "file_perm_char2": 1,
                    "file_permission_w": 1,
                    "file_permission_write": 1,
                    "flag2": 2,
                    "flag4": 1,
                    "flag_char3": 1,
                    "has_write_permission": 1,
                    "is_executable": 1,
                    "is_user_writable": 1,
                    "is_writable": 4,
                    "is_writable_flag": 1,
                    "owner_write": 2,
                    "permission2": 1,
                    "permission_char2": 3,
                    "permission_flag": 1,
                    "permission_flag2": 1,
                    "read_permission_char": 1,
                    "write_permission": 1
                },
                "cStack0000000000000018": {
                    "file_permission_special_character": 1
                },
                "cStack0000000000000019": {
                    "c4": 1,
                    "char4": 1,
                    "char_stack4": 1,
                    "char_var4": 1,
                    "directory_permission_read": 1,
                    "file_perm_char4": 1,
                    "file_permission_rdir": 1,
                    "flag4": 2,
                    "flag6": 1,
                    "flag_char5": 1,
                    "group_read": 2,
                    "has_executable_permission2": 1,
                    "is_archive": 1,
                    "is_archive_flag": 1,
                    "is_archived": 1,
                    "is_executable_by_owner": 1,
                    "is_group_readable": 1,
                    "is_readable": 1,
                    "is_sticky_bit_set": 1,
                    "permission4": 1,
                    "permission_char4": 3,
                    "permission_flag": 1,
                    "permission_flag4": 1,
                    "read_permission": 1,
                    "write_permission_char": 1
                },
                "cStack000000000000001a": {
                    "c5": 1,
                    "char5": 1,
                    "char_stack5": 1,
                    "char_var5": 1,
                    "directory_permission_write": 1,
                    "file_perm_char5": 1,
                    "file_permission_wdir": 1,
                    "flag5": 2,
                    "flag7": 1,
                    "flag_char6": 1,
                    "group_write": 2,
                    "has_write_permission2": 1,
                    "is_directory_flag": 1,
                    "is_group_writable": 1,
                    "is_set_gid": 1,
                    "is_shared_library": 1,
                    "is_symbolic_link": 1,
                    "is_writable": 1,
                    "is_writable_by_owner": 1,
                    "permission5": 1,
                    "permission_char5": 3,
                    "permission_flag": 1,
                    "permission_flag5": 1,
                    "read_permission_char": 1,
                    "write_permission": 1
                },
                "cStack000000000000001b": {
                    "c6": 1,
                    "char6": 1,
                    "char_stack6": 1,
                    "char_var6": 1,
                    "directory_permission_execute": 1,
                    "execute_permission": 1,
                    "execute_permission_char": 1,
                    "file_perm_char6": 1,
                    "file_permission_xdir": 1,
                    "flag6": 2,
                    "flag8": 1,
                    "flag_char7": 1,
                    "group_execute": 2,
                    "has_read_permission2": 1,
                    "is_group_executable": 1,
                    "is_no_dump": 1,
                    "is_readable_by_owner": 1,
                    "is_set_gid": 1,
                    "is_set_uid": 1,
                    "is_symbolic_link_flag": 1,
                    "is_text_file": 1,
                    "permission6": 1,
                    "permission_char6": 3,
                    "permission_flag": 1,
                    "permission_flag6": 1
                },
                "cStack000000000000001c": {
                    "c7": 1,
                    "char7": 1,
                    "char_stack7": 1,
                    "char_var7": 1,
                    "file_perm_char7": 1,
                    "file_permission_roth": 1,
                    "flag7": 2,
                    "flag9": 1,
                    "flag_char8": 1,
                    "has_executable_permission3": 1,
                    "is_char_device_flag": 1,
                    "is_constrained_execution": 1,
                    "is_directory": 1,
                    "is_executable_by_group": 1,
                    "is_other_readable": 1,
                    "is_regular": 1,
                    "is_set_uid": 1,
                    "link_permission_read": 1,
                    "other_read": 1,
                    "others_read": 1,
                    "permission7": 1,
                    "permission_char7": 3,
                    "permission_flag": 1,
                    "permission_flag7": 1,
                    "read_permission": 1,
                    "write_permission_char": 1
                },
                "cStack000000000000001d": {
                    "c8": 1,
                    "char8": 1,
                    "char_stack8": 1,
                    "char_var8": 1,
                    "file_perm_char8": 1,
                    "file_permission_woth": 1,
                    "flag10": 1,
                    "flag8": 2,
                    "flag_char9": 1,
                    "has_write_permission3": 1,
                    "is_block_device_flag": 1,
                    "is_character_device": 1,
                    "is_directory": 1,
                    "is_immutable": 1,
                    "is_other_writable": 1,
                    "is_sticky": 1,
                    "is_writable_by_group": 1,
                    "link_permission_character": 1,
                    "other_write": 1,
                    "others_write": 1,
                    "permission8": 1,
                    "permission_char8": 3,
                    "permission_flag": 1,
                    "permission_flag8": 1,
                    "read_permission_char": 1,
                    "write_permission": 1
                },
                "cStack000000000000001e": {
                    "c9": 1,
                    "char9": 1,
                    "char_stack9": 1,
                    "char_var9": 1,
                    "execute_permission": 1,
                    "execute_permission_char": 1,
                    "file_perm_char9": 1,
                    "file_permission_xoth": 1,
                    "flag11": 1,
                    "flag9": 2,
                    "flag_char10": 1,
                    "has_read_permission3": 1,
                    "is_append_only": 1,
                    "is_block_device": 1,
                    "is_fifo": 1,
                    "is_fifo_flag": 1,
                    "is_other_executable": 1,
                    "is_other_writable": 1,
                    "is_readable_by_group": 1,
                    "link_permission_execute": 1,
                    "other_execute": 1,
                    "others_execute": 1,
                    "permission9": 1,
                    "permission_char9": 3,
                    "permission_flag": 1,
                    "permission_flag9": 1
                },
                "cStack000000000000001f": {
                    "has_attributes": 1,
                    "is_link": 1,
                    "null_flag": 1
                },
                "cVar2": {
                    "archive_head_result": 1,
                    "archive_head_status": 1,
                    "bfd_close_return": 1,
                    "char_val": 1,
                    "char_value": 2,
                    "char_var": 2,
                    "result": 4,
                    "return_value": 1,
                    "status": 2
                },
                "dcgettext": {
                    "get_translated_string": 1
                },
                "dup": {
                    "duplicate_file_descriptor": 2
                },
                "fclose": {
                    "close_file": 1
                },
                "fopen": {
                    "open_file": 1
                },
                "fprintf": {
                    "write_to_file": 1
                },
                "fputc": {
                    "write_character": 1
                },
                "fputs": {
                    "write_string": 1
                },
                "free": {
                    "free_memory": 2
                },
                "fun_00105bc0": {
                    "print_error_message": 1
                },
                "iVar3": {
                    "bfd_exit_code": 1,
                    "error": 1,
                    "file_error_code": 1,
                    "int_val": 1,
                    "int_var": 2,
                    "library_load_result": 1,
                    "return_code": 1,
                    "return_value": 4,
                    "status": 3,
                    "xexit_return": 1
                },
                "in_stack_00000018": {
                    "c3": 1,
                    "char3": 1,
                    "char_stack3": 1,
                    "char_var3": 1,
                    "execute_permission": 1,
                    "execute_permission_char": 1,
                    "file_perm_char3": 1,
                    "file_permission_execute": 1,
                    "file_permission_x": 1,
                    "flag3": 2,
                    "flag5": 1,
                    "flag_char4": 1,
                    "has_read_permission": 1,
                    "is_character_special": 1,
                    "is_directory": 1,
                    "is_readable": 4,
                    "is_readable_flag": 1,
                    "is_user_executable": 1,
                    "owner_execute": 2,
                    "permission3": 1,
                    "permission_char": 1,
                    "permission_char3": 3,
                    "permission_flag": 1,
                    "permission_flag3": 1
                },
                "in_stack_00000070": {
                    "block_size": 1,
                    "current_group_id": 1,
                    "device_number": 1,
                    "file_gid": 1,
                    "file_group_id": 1,
                    "file_size": 11,
                    "file_size2": 1,
                    "file_size_high": 1,
                    "file_size_used": 1,
                    "file_timestamp": 1,
                    "file_user_id": 1,
                    "flag_val4": 1,
                    "gid": 1,
                    "group_id": 1,
                    "owner_id": 1,
                    "size": 2,
                    "size_flag3": 1,
                    "uint_stack3": 1,
                    "uint_var3": 1,
                    "year": 1
                },
                "in_stack_00000080": {
                    "bit_mode": 1,
                    "file_modification_time": 1,
                    "file_owner": 1,
                    "file_size": 4,
                    "file_size3": 1,
                    "flag_val5": 1,
                    "last_modified": 1,
                    "last_modified_time": 1,
                    "long_stack1": 1,
                    "mod_time": 1,
                    "modification_time": 3,
                    "size": 2,
                    "size_flag4": 1,
                    "time_data": 1,
                    "time_modified": 1,
                    "time_stamp": 1,
                    "timestamp": 8,
                    "undefined8_var": 1
                },
                "sprintf": {
                    "format_string_into_variable": 1
                },
                "stack0x00000020": {
                    "error_message": 2
                },
                "uStack0000000000000015": {
                    "file_permission": 4,
                    "file_type": 11,
                    "file_type_char": 3,
                    "file_type_code": 1,
                    "file_type_flag": 2,
                    "flag_char": 1,
                    "flag_char1": 1,
                    "type_code": 1
                },
                "uStack000000000000001f": {
                    "additional_flag": 1,
                    "char10": 1,
                    "extra_flag": 1,
                    "extra_permission_char": 1,
                    "flag": 2,
                    "flag10": 2,
                    "flag12": 1,
                    "format_specifier": 1,
                    "is_compressed": 1,
                    "is_special_file": 1,
                    "is_symbolic_link": 1,
                    "print_error": 1,
                    "reserved": 1,
                    "should_print_hex_value": 1,
                    "stack_var1": 1,
                    "undef_stack": 1,
                    "undefined_val": 1,
                    "undefined_var": 1,
                    "unused_flag": 1,
                    "zero_byte": 1
                },
                "uStack0000000000000068": {
                    "file_attributes": 1,
                    "file_info_flags": 1,
                    "file_metadata": 1,
                    "file_mode": 10,
                    "file_permission_bits": 1,
                    "file_permissions": 8,
                    "file_status_flags": 1,
                    "flag_val2": 1,
                    "permission": 1,
                    "permissions": 1,
                    "size_flag1": 1,
                    "time": 1,
                    "uint_stack1": 1,
                    "uint_var1": 1
                },
                "uStack000000000000006c": {
                    "current_user_id": 1,
                    "day": 1,
                    "disk_space_used": 1,
                    "file_link_count": 1,
                    "file_links": 3,
                    "file_owner": 1,
                    "file_owner_id": 1,
                    "file_ownership": 1,
                    "file_size": 1,
                    "file_size1": 1,
                    "file_size_low": 1,
                    "file_uid": 1,
                    "flag_val3": 1,
                    "hard_links": 1,
                    "inode": 1,
                    "inode_number": 1,
                    "link_count": 1,
                    "links_count": 1,
                    "num_links": 1,
                    "number_of_hard_links": 1,
                    "number_of_link": 1,
                    "size_flag2": 1,
                    "total_links": 1,
                    "uid": 1,
                    "uint_stack2": 1,
                    "uint_var2": 1,
                    "user_id": 1
                },
                "uVar4": {
                    "file_mode": 1,
                    "file_permission": 2,
                    "file_permissions": 2,
                    "file_type": 7,
                    "flag_val": 1,
                    "flag_value": 1,
                    "uint_var": 2
                },
                "unaff_R12": {
                    "check_value": 1,
                    "file_attributes": 1,
                    "file_flags": 1,
                    "file_mode": 1,
                    "file_options": 1,
                    "file_size": 1,
                    "flag": 5,
                    "flag1": 1,
                    "flag_ptr": 1,
                    "flag_value": 1,
                    "flags": 1,
                    "has_optional_info": 1,
                    "has_value": 1,
                    "is_archive": 1,
                    "is_archived": 1,
                    "is_executable": 2,
                    "is_hex": 1,
                    "is_link": 1,
                    "is_printing_hex": 1,
                    "is_special_file": 1,
                    "is_verbose": 1,
                    "long_val": 1,
                    "option": 1,
                    "parameter3": 1,
                    "time_data": 1
                },
                "unaff_R13": {
                    "allocated_memory": 3,
                    "buffer": 9,
                    "buffer1": 2,
                    "buffer_ptr": 1,
                    "data": 2,
                    "file_buffer": 2,
                    "format_string": 1,
                    "heap_memory": 1,
                    "memory_address": 1,
                    "memory_pointer": 1,
                    "memory_ptr": 1,
                    "optional_info": 1,
                    "parameter4": 1,
                    "path_buffer": 2,
                    "ptr_val": 1,
                    "time_data": 1,
                    "uninitialized_data": 1
                },
                "unaff_R14D": {
                    "dup_fd": 1,
                    "dup_file": 1,
                    "dup_file_descriptor": 2,
                    "duplicate_fd": 2,
                    "duplicate_file_descriptor": 1,
                    "duplicate_result": 1,
                    "duplicated_fd": 1,
                    "fd": 2,
                    "file_descriptor": 17,
                    "flag2": 1,
                    "int_val": 1,
                    "parameter5": 1
                },
                "unaff_RBP": {
                    "file": 1,
                    "file_output": 1,
                    "file_pointer": 7,
                    "file_ptr": 3,
                    "file_stream": 1,
                    "output_file": 16,
                    "output_file_ptr": 1,
                    "parameter2": 1
                },
                "unaff_RBX": {
                    "args": 2,
                    "file_contents": 1,
                    "file_data": 3,
                    "file_info": 7,
                    "file_information": 1,
                    "file_lines": 1,
                    "file_names": 1,
                    "file_path": 2,
                    "file_paths": 11,
                    "parameter1": 1,
                    "string_array": 1
                },
                "xexit": {
                    "exit_program": 1
                }
            },
            "called": [
                "FUN_00105bc0",
                "FUN_00107c10",
                "FUN_00102d2f",
                "bfd_set_archive_head",
                "bfd_close",
                "xexit",
                "dup",
                "free"
            ],
            "calling": [
                "FUN_00102d2f"
            ],
            "code": "\nvoid print_file_info_00102d2f(void)\n\n{\n  byte byte_value;\n  char result;\n  int return_value;\n  char *time_error_message;\n  uint file_type;\n  char **file_paths;\n  FILE *output_file;\n  long flag;\n  void *buffer;\n  int file_descriptor;\n  undefined file_type;\n  char is_executable;\n  char is_writable;\n  char is_readable;\n  char permission_char4;\n  char permission_char5;\n  char permission_char6;\n  char permission_char7;\n  char permission_char8;\n  char permission_char9;\n  undefined flag;\n  uint file_mode;\n  uint file_links;\n  uint file_size;\n  undefined8 timestamp;\n  \n  do {\n    byte_value = FUN_00107c10();\n    *(uint *)((long)file_paths + 0x44) = *(uint *)((long)file_paths + 0x44) | 0x100000;\n    if ((DAT_0010d5f8 != '\\0') || ((*(byte *)(flag + 0x49) & 0x10) != 0)) {\n      *(byte *)((long)file_paths + 0x49) = byte_value | 0x10;\n    }\n    result = bfd_set_archive_head();\n  } while (result == '\\0');\n  duplicate_file_descriptor(file_descriptor);\n  result = bfd_close();\n  if (result != '\\0') {\n    DAT_0010d5e0 = 0;\n    DAT_0010d618 = 0;\n    bfd_close();\n    return_value = FUN_00105bc0();\n    if (return_value == 0) {\n      free_memory(buffer);\n      free_memory(output_file);\n      return;\n    }\n                    \n    xexit(1);\n  }\n  FUN_00107c10();\n  time_error_message = (char *)dcgettext(0,\"<time data corrupt>\",5);\n  sprintf(&error_message,time_error_message);\n  file_type = file_mode & 0xf000;\n  if (file_type == 0x4000) {\n    file_type = 100;\n  }\n  else if (file_type == 0xa000) {\n    file_type = 0x6c;\n  }\n  else if (file_type == 0x6000) {\n    file_type = 0x62;\n  }\n  else if (file_type == 0x2000) {\n    file_type = 99;\n  }\n  else if (file_type == 0xc000) {\n    file_type = 0x73;\n  }\n  else {\n    file_type = 0x70;\n    if (file_type != 0x1000) {\n      file_type = 0x2d;\n    }\n  }\n  is_executable = (-((file_mode & 0x100) == 0) & 0xbbU) + 0x72;\n  is_writable = (-((file_mode & 0x80) == 0) & 0xb6U) + 0x77;\n  is_readable = (-((file_mode & 0x40) == 0) & 0xb5U) + 0x78;\n  permission_char4 = (-((file_mode & 0x20) == 0) & 0xbbU) + 0x72;\n  permission_char5 = (-((file_mode & 0x10) == 0) & 0xb6U) + 0x77;\n  permission_char6 = (-((file_mode & 8) == 0) & 0xb5U) + 0x78;\n  permission_char7 = (-((file_mode & 4) == 0) & 0xbbU) + 0x72;\n  permission_char8 = (-((file_mode & 2) == 0) & 0xb6U) + 0x77;\n  permission_char9 = (-((file_mode & 1) == 0) & 0xb5U) + 0x78;\n  if ((file_mode & 0x800) != 0) {\n    if (is_readable == 'x') {\n      is_readable = 's';\n    }\n    else {\n      is_readable = 'S';\n    }\n  }\n  if ((file_mode & 0x400) != 0) {\n    if (permission_char6 == 'x') {\n      permission_char6 = 's';\n    }\n    else {\n      permission_char6 = 'S';\n    }\n  }\n  if ((file_mode & 0x200) != 0) {\n    if (permission_char9 == 'x') {\n      permission_char9 = 't';\n    }\n    else {\n      permission_char9 = 'T';\n    }\n  }\n  flag = 0;\n  fprintf(output_file,\"%s %ld/%ld %6lu %s \",&stack0x00000016,(ulong)file_links,\n          (ulong)file_size,timestamp,&error_message,(ulong)file_mode)\n  ;\n  fputs(*file_paths,output_file);\n  if ((char)flag != '\\0') {\n    if ((*(byte *)((long)file_paths + 0x49) & 0x10) == 0) {\n      if (file_paths[0xb] != (char *)0x0) {\n        fprintf(output_file,\" 0x%lx\");\n      }\n    }\n    else if (file_paths[0xc] != (char *)0x0) {\n      fprintf(output_file,\" 0x%lx\");\n    }\n  }\n  fputc(10,output_file);\n  return;\n}\n\n",
            "current_name": "print_file_info_00102d2f",
            "entrypoint": "0x00102d2f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102d2f": "print_file_info_00102d2f",
                "__format": "time_error_message",
                "bVar1": "byte_value",
                "bfd_close": "close_file",
                "bfd_set_archive_head": "set_archive_head",
                "cStack0000000000000016": "is_executable",
                "cStack0000000000000017": "is_writable",
                "cStack0000000000000019": "permission_char4",
                "cStack000000000000001a": "permission_char5",
                "cStack000000000000001b": "permission_char6",
                "cStack000000000000001c": "permission_char7",
                "cStack000000000000001d": "permission_char8",
                "cStack000000000000001e": "permission_char9",
                "cVar2": "result",
                "dcgettext": "get_translated_string",
                "dup": "duplicate_file_descriptor",
                "fprintf": "write_to_file",
                "fputc": "write_character",
                "fputs": "write_string",
                "free": "free_memory",
                "iVar3": "return_value",
                "in_stack_00000018": "is_readable",
                "in_stack_00000070": "file_size",
                "in_stack_00000080": "timestamp",
                "sprintf": "format_string_into_variable",
                "stack0x00000020": "error_message",
                "uStack0000000000000015": "file_type",
                "uStack000000000000001f": "flag",
                "uStack0000000000000068": "file_mode",
                "uStack000000000000006c": "file_links",
                "uVar4": "file_type",
                "unaff_R12": "flag",
                "unaff_R13": "buffer",
                "unaff_R14D": "file_descriptor",
                "unaff_RBP": "output_file",
                "unaff_RBX": "file_paths",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102d8c": {
            "additional_data": {
                "FUN_00102d8c": {
                    "format_and_print_file_info": 1,
                    "format_and_print_time_info": 1,
                    "print_file_data": 1,
                    "print_file_details": 1,
                    "print_file_info": 22,
                    "print_file_information": 1,
                    "print_file_metadata": 2,
                    "print_file_permissions": 2
                },
                "__STACK_CHECK__": {
                    "stack_check": 1
                },
                "__c": {
                    "character": 1
                },
                "__format": {
                    "corrupt_time_data_error_message": 1,
                    "corrupt_time_data_prompt": 1,
                    "corrupt_time_format": 4,
                    "corrupt_time_msg": 1,
                    "corrupted_time_data_string": 1,
                    "corrupted_time_string": 1,
                    "error_format": 2,
                    "error_message": 6,
                    "error_msg": 5,
                    "error_str": 1,
                    "error_string": 1,
                    "time_error_message": 7
                },
                "__s": {
                    "string": 1
                },
                "__stream": {
                    "output": 1,
                    "stream": 1
                },
                "_sPrintfArg": {
                    "error_message": 1
                },
                "_stream": {
                    "file_stream": 1
                },
                "cStack0000000000000015": {
                    "file_type_char": 1
                },
                "cStack0000000000000016": {
                    "c1": 1,
                    "char1": 1,
                    "execution_permission": 1,
                    "file_permission_letter1": 1,
                    "file_permission_owner_read": 1,
                    "file_permissions_bit6": 1,
                    "flag1": 2,
                    "flag1_char": 1,
                    "flag6": 1,
                    "flag_1": 1,
                    "group_permission": 1,
                    "has_read_permission": 2,
                    "has_set_user_id": 1,
                    "has_setuid": 1,
                    "is_executable": 1,
                    "is_hidden": 1,
                    "perm_bit1_char": 1,
                    "permission_char1": 3,
                    "permission_char2": 1,
                    "permission_symbol": 1,
                    "permission_symbol1": 1,
                    "read_permission": 2,
                    "read_permission_char": 1,
                    "second_permission": 1,
                    "user_permission": 1
                },
                "cStack0000000000000017": {
                    "c2": 1,
                    "char2": 1,
                    "file_permission_letter2": 1,
                    "file_permission_owner_write": 1,
                    "file_permissions_bit7": 1,
                    "flag2": 2,
                    "flag2_char": 1,
                    "flag7": 1,
                    "flag_2": 1,
                    "group_permission": 1,
                    "has_set_group_id": 1,
                    "has_setgid": 1,
                    "has_write_permission": 2,
                    "is_system": 1,
                    "is_writable": 1,
                    "other_permission": 1,
                    "perm_bit2_char": 1,
                    "permission_char2": 3,
                    "permission_char3": 1,
                    "permission_symbol": 1,
                    "permission_symbol2": 1,
                    "third_permission": 1,
                    "write_permission": 3,
                    "write_permission_char": 1
                },
                "cStack0000000000000019": {
                    "c4": 1,
                    "char4": 1,
                    "execute_permission": 1,
                    "execute_permission_char": 1,
                    "extra_permissions1": 1,
                    "file_permission_group_read": 1,
                    "file_permission_letter4": 1,
                    "file_permissions_bit10": 1,
                    "flag4": 2,
                    "flag4_char": 1,
                    "flag_3": 1,
                    "has_execute_permission": 1,
                    "has_read_permission_user": 1,
                    "has_sticky_bit": 2,
                    "is_archive": 1,
                    "permission_char3": 2,
                    "permission_char4": 1,
                    "permission_symbol": 1,
                    "permission_symbol4": 1,
                    "setuid_permission": 1,
                    "sticky_bit": 1
                },
                "cStack000000000000001a": {
                    "c5": 1,
                    "char5": 1,
                    "extra_permissions2": 1,
                    "file_permission_group_write": 1,
                    "file_permission_letter5": 1,
                    "file_permissions_bit11": 1,
                    "flag5": 2,
                    "flag5_char": 1,
                    "flag_4": 1,
                    "has_owner_read_permission": 1,
                    "has_read_owner_permission": 1,
                    "has_write_permission_user": 1,
                    "is_directory": 2,
                    "permission_char4": 2,
                    "permission_char5": 1,
                    "permission_symbol": 1,
                    "permission_symbol5": 1,
                    "setgid_bit": 1,
                    "setgid_permission": 1,
                    "skip1": 1,
                    "user_group_read_permission_char": 1
                },
                "cStack000000000000001b": {
                    "c6": 1,
                    "char6": 1,
                    "extra_permissions3": 1,
                    "fifth_permission": 1,
                    "file_permission_group_execute": 1,
                    "file_permission_letter6": 1,
                    "file_permissions_bit12": 1,
                    "flag11": 1,
                    "flag6": 2,
                    "flag6_char": 1,
                    "has_execute_permission_user": 1,
                    "has_group_read_permission": 1,
                    "has_write_owner_permission": 1,
                    "is_shared": 1,
                    "is_symbolic_link": 1,
                    "is_temporary": 1,
                    "perm_bit4_char": 1,
                    "permission_char4": 1,
                    "permission_char5": 2,
                    "permission_char6": 1,
                    "permission_symbol": 1,
                    "permission_symbol6": 1,
                    "setuid_bit": 1,
                    "skip2": 1,
                    "sticky_bit_permission": 1,
                    "sticky_permission": 1,
                    "user_group_write_permission_char": 1
                },
                "cStack000000000000001c": {
                    "c7": 1,
                    "char7": 1,
                    "extra_permissions4": 1,
                    "file_permission_letter7": 1,
                    "file_permission_other_read": 1,
                    "file_permissions_bit13": 1,
                    "flag7": 2,
                    "flag7_char": 1,
                    "flag_5": 1,
                    "has_execute_owner_permission": 1,
                    "has_other_read_permission": 1,
                    "has_read_permission_group": 1,
                    "is_executable": 1,
                    "is_regular_file": 1,
                    "is_sparse_file": 1,
                    "permission_char6": 2,
                    "permission_char7": 1,
                    "permission_symbol": 1,
                    "permission_symbol7": 1,
                    "skip3": 1,
                    "user_group_execute_permission_char": 1,
                    "user_read_permission": 1
                },
                "cStack000000000000001d": {
                    "c8": 1,
                    "char8": 1,
                    "extra_permissions5": 1,
                    "file_permission_letter8": 1,
                    "file_permission_other_write": 1,
                    "file_permissions_bit14": 1,
                    "flag8": 2,
                    "flag8_char": 1,
                    "flag_6": 1,
                    "has_owner_write_permission": 1,
                    "has_read_group_permission": 1,
                    "has_write_permission_group": 1,
                    "is_block_special_file": 1,
                    "is_device": 1,
                    "is_writeable": 1,
                    "others_read_permission_char": 1,
                    "permission_char7": 2,
                    "permission_char8": 1,
                    "permission_symbol": 1,
                    "permission_symbol8": 1,
                    "skip4": 1,
                    "user_write_permission": 1
                },
                "cStack000000000000001e": {
                    "c9": 1,
                    "char9": 1,
                    "extra_permissions6": 1,
                    "file_permission_letter9": 1,
                    "file_permission_other_execute": 1,
                    "file_permissions_bit15": 1,
                    "flag14": 1,
                    "flag9": 2,
                    "flag9_char": 1,
                    "flag_7": 1,
                    "has_execute_permission_group": 1,
                    "has_group_write_permission": 1,
                    "has_write_group_permission": 1,
                    "is_character_special_file": 1,
                    "is_normal": 1,
                    "is_readable": 1,
                    "is_sticky": 1,
                    "others_write_permission_char": 1,
                    "perm_bit7_char": 1,
                    "permission_char5": 1,
                    "permission_char8": 2,
                    "permission_char9": 1,
                    "permission_symbol": 1,
                    "permission_symbol9": 1,
                    "sixth_permission": 1,
                    "skip5": 1,
                    "sticky_bit_permission": 1,
                    "user_execute_permission": 1
                },
                "cStack000000000000001f": {
                    "has_alternate_form": 1,
                    "has_execute_group_permission": 1,
                    "has_other_write_permission": 1,
                    "is_fifo": 1,
                    "is_hexadecimal": 1,
                    "others_execute_permission_char": 1,
                    "skip6": 1,
                    "temp_char": 1
                },
                "dcgettext": {
                    "get_error_message": 1,
                    "get_localized_string": 1,
                    "get_localized_text": 1,
                    "get_message": 2,
                    "get_translated_string": 2
                },
                "fprintf": {
                    "print_formatted": 1,
                    "print_formatted_output": 2,
                    "write_formatted_data": 1,
                    "write_output": 1,
                    "write_to_file": 3,
                    "write_to_output_file": 1
                },
                "fputc": {
                    "output_character_to_file": 1,
                    "put_character": 1,
                    "write_char_to_file": 3,
                    "write_char_to_output_file": 1,
                    "write_character": 2,
                    "write_new_line": 1
                },
                "fputs": {
                    "output_string_to_file": 1,
                    "write_string": 1,
                    "write_string_data": 1,
                    "write_string_to_file": 3,
                    "write_to_file": 2
                },
                "param_19": {
                    "file_attributes": 1,
                    "file_flags": 2,
                    "file_metadata": 1,
                    "file_mode": 7,
                    "file_permission": 4,
                    "file_permissions": 9,
                    "file_size": 1,
                    "flags": 1,
                    "permission": 2,
                    "permissions": 3
                },
                "param_20": {
                    "block_size": 1,
                    "device": 1,
                    "error_code": 1,
                    "file_size": 20,
                    "file_time": 1,
                    "file_timestamp": 2,
                    "inode": 1,
                    "param_20": 2,
                    "timestamp": 1,
                    "value2": 1
                },
                "param_22": {
                    "creation_time": 1,
                    "date_time": 1,
                    "file_address": 4,
                    "file_creation_time": 1,
                    "file_inode": 1,
                    "file_last_changed": 1,
                    "file_modification_time": 2,
                    "file_size": 1,
                    "param_22": 2,
                    "time_data": 1,
                    "time_stamp": 1,
                    "timestamp": 13,
                    "timestamp_format": 1,
                    "value3": 1
                },
                "param_9": {
                    "c3": 1,
                    "char3": 1,
                    "execute_permission": 1,
                    "file_permission_letter3": 1,
                    "file_permission_owner_execute": 1,
                    "file_permissions_bit8": 1,
                    "flag3": 2,
                    "flag3_char": 1,
                    "flag9": 1,
                    "fourth_permission": 1,
                    "has_exec_permission": 1,
                    "has_execute_permission": 1,
                    "is_read_only": 1,
                    "is_readable": 1,
                    "last_permission_bit": 1,
                    "other_permission": 1,
                    "owner_permission": 1,
                    "permission": 3,
                    "permission1": 1,
                    "permission_9": 1,
                    "permission_char": 2,
                    "permission_char3": 1,
                    "permission_symbol": 2,
                    "permission_symbol3": 1,
                    "permissions": 1,
                    "user_permissions": 1
                },
                "sprintf": {
                    "create_formatted_string": 1,
                    "format_string": 7,
                    "set_formatted_string": 1
                },
                "stack0x00000016": {
                    "buffer1": 1,
                    "permission_str": 1
                },
                "stack0x00000020": {
                    "buffer2": 1,
                    "error_message": 1,
                    "formatted_time": 1,
                    "time_data": 1
                },
                "uStack0000000000000015": {
                    "character_code": 1,
                    "file_permission_char": 1,
                    "file_tag": 1,
                    "file_type": 3,
                    "file_type_char": 3,
                    "file_type_code": 1,
                    "file_type_indicator": 1,
                    "file_type_output": 1,
                    "file_type_symbol": 2,
                    "first_permission": 1,
                    "permission_char": 2,
                    "permission_char1": 1,
                    "permission_code": 2,
                    "type_char": 1
                },
                "uStack000000000000001f": {
                    "extra_format": 1,
                    "extra_permissions_flag": 1,
                    "flag2": 2,
                    "has_custom_flags": 1,
                    "is_executable": 1,
                    "is_executable_symbol": 1,
                    "is_hex": 1,
                    "is_hexadecimal_flag": 2,
                    "is_octal": 1,
                    "print_hex_flag": 1,
                    "should_print0x": 1,
                    "temp_flag": 1,
                    "zero": 1
                },
                "uStack000000000000006c": {
                    "access_time": 1,
                    "current_time": 1,
                    "day_of_month": 1,
                    "file_mode": 1,
                    "file_owner": 1,
                    "file_size": 6,
                    "file_user_id": 1,
                    "inode": 2,
                    "inode_number": 1,
                    "link_count": 2,
                    "num_links": 1,
                    "process_id": 1,
                    "uid": 1,
                    "unknown": 1,
                    "unknown_value": 2,
                    "unknown_var": 1,
                    "user_id": 2,
                    "value1": 1
                },
                "uVar1": {
                    "file_perm_mask": 1,
                    "file_permission": 4,
                    "file_permission_mode": 1,
                    "file_permissions": 3,
                    "file_type": 16,
                    "file_type_mask": 1,
                    "first_digit": 1,
                    "permission_mode": 1,
                    "permission_type": 2
                },
                "unaff_R12B": {
                    "check_flag": 1,
                    "extra_info_flag": 1,
                    "flag": 3,
                    "has_hex_representation": 1,
                    "include_extra_info": 1,
                    "is_binary": 1,
                    "is_debug": 2,
                    "is_executable": 5,
                    "is_flag_set": 1,
                    "is_header_present": 1,
                    "is_hexadecimal": 4,
                    "is_option_set": 1,
                    "is_verbose_output": 1,
                    "print_hex": 2,
                    "should_print_address": 1,
                    "should_print_hex": 2,
                    "use_hex": 1,
                    "use_hexadecimal": 1
                },
                "unaff_RBP": {
                    "file_output": 1,
                    "file_pointer": 5,
                    "file_ptr": 2,
                    "file_stream": 1,
                    "output_file": 19,
                    "output_file_ptr": 2,
                    "output_stream": 1
                },
                "unaff_RBX": {
                    "file_content": 18,
                    "file_contents": 3,
                    "file_data": 5,
                    "file_info": 2,
                    "file_name_ptr": 1,
                    "file_properties": 1,
                    "file_ptr": 1
                }
            },
            "called": [
                "fputs",
                "dcgettext",
                "fprintf",
                "fputc",
                "sprintf"
            ],
            "calling": [
                "FUN_001079c0"
            ],
            "code": "\nvoid format_and_print_file_info_00102d8c(void)\n\n{\n  char *time_error_message;\n  uint file_type;\n  char **file_content;\n  FILE *output_file;\n  char is_executable;\n  undefined file_type_char;\n  char permission_char1;\n  char permission_char2;\n  char permission;\n  char flag4;\n  char flag5;\n  char permission_char5;\n  char flag7;\n  char flag8;\n  char flag9;\n  undefined flag2;\n  uint file_permissions;\n  uint file_size;\n  uint file_size;\n  undefined8 timestamp;\n  \n  time_error_message = (char *)dcgettext(0,\"<time data corrupt>\",5);\n  sprintf(&formatted_time,time_error_message);\n  file_type = file_permissions & 0xf000;\n  if (file_type == 0x4000) {\n    file_type_char = 100;\n  }\n  else if (file_type == 0xa000) {\n    file_type_char = 0x6c;\n  }\n  else if (file_type == 0x6000) {\n    file_type_char = 0x62;\n  }\n  else if (file_type == 0x2000) {\n    file_type_char = 99;\n  }\n  else if (file_type == 0xc000) {\n    file_type_char = 0x73;\n  }\n  else {\n    file_type_char = 0x70;\n    if (file_type != 0x1000) {\n      file_type_char = 0x2d;\n    }\n  }\n  permission_char1 = (-((file_permissions & 0x100) == 0) & 0xbbU) + 0x72;\n  permission_char2 = (-((file_permissions & 0x80) == 0) & 0xb6U) + 0x77;\n  permission = (-((file_permissions & 0x40) == 0) & 0xb5U) + 0x78;\n  flag4 = (-((file_permissions & 0x20) == 0) & 0xbbU) + 0x72;\n  flag5 = (-((file_permissions & 0x10) == 0) & 0xb6U) + 0x77;\n  permission_char5 = (-((file_permissions & 8) == 0) & 0xb5U) + 0x78;\n  flag7 = (-((file_permissions & 4) == 0) & 0xbbU) + 0x72;\n  flag8 = (-((file_permissions & 2) == 0) & 0xb6U) + 0x77;\n  flag9 = (-((file_permissions & 1) == 0) & 0xb5U) + 0x78;\n  if ((file_permissions & 0x800) != 0) {\n    if (permission == 'x') {\n      permission = 's';\n    }\n    else {\n      permission = 'S';\n    }\n  }\n  if ((file_permissions & 0x400) != 0) {\n    if (permission_char5 == 'x') {\n      permission_char5 = 's';\n    }\n    else {\n      permission_char5 = 'S';\n    }\n  }\n  if ((file_permissions & 0x200) != 0) {\n    if (flag9 == 'x') {\n      flag9 = 't';\n    }\n    else {\n      flag9 = 'T';\n    }\n  }\n  flag2 = 0;\n  fprintf(output_file,\"%s %ld/%ld %6lu %s \",&permission_str,(ulong)file_size,\n          (ulong)file_size,timestamp,&formatted_time,(ulong)file_permissions);\n  fputs(*file_content,output_file);\n  if (is_executable != '\\0') {\n    if ((*(byte *)((long)file_content + 0x49) & 0x10) == 0) {\n      if (file_content[0xb] != (char *)0x0) {\n        fprintf(output_file,\" 0x%lx\");\n      }\n    }\n    else if (file_content[0xc] != (char *)0x0) {\n      fprintf(output_file,\" 0x%lx\");\n    }\n  }\n  fputc(10,output_file);\n  return;\n}\n\n",
            "current_name": "format_and_print_file_info_00102d8c",
            "entrypoint": "0x00102d8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102d8c": "format_and_print_file_info_00102d8c",
                "__format": "time_error_message",
                "cStack0000000000000016": "permission_char1",
                "cStack0000000000000017": "permission_char2",
                "cStack0000000000000019": "flag4",
                "cStack000000000000001a": "flag5",
                "cStack000000000000001b": "permission_char5",
                "cStack000000000000001c": "flag7",
                "cStack000000000000001d": "flag8",
                "cStack000000000000001e": "flag9",
                "dcgettext": "get_message",
                "fprintf": "write_to_file",
                "fputc": "write_char_to_file",
                "fputs": "write_string_to_file",
                "param_19": "file_permissions",
                "param_20": "file_size",
                "param_22": "timestamp",
                "param_9": "permission",
                "sprintf": "format_string",
                "stack0x00000016": "permission_str",
                "stack0x00000020": "formatted_time",
                "uStack0000000000000015": "file_type_char",
                "uStack000000000000001f": "flag2",
                "uStack000000000000006c": "file_size",
                "uVar1": "file_type",
                "unaff_R12B": "is_executable",
                "unaff_RBP": "output_file",
                "unaff_RBX": "file_content"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102e57": {
            "additional_data": {
                "DAT_0010d60c": {
                    "file_enabled": 1,
                    "file_open_status": 1,
                    "flag": 1,
                    "is_string_non_empty": 1
                },
                "DAT_0010d618": {
                    "concatenated_string": 2,
                    "file_name": 1,
                    "file_path": 1,
                    "filename": 1
                },
                "FUN_00102e57": {
                    "create_output_file": 1,
                    "save_concatenation_to_file": 1,
                    "save_to_file": 2,
                    "write_file": 1,
                    "write_file_and_print": 1,
                    "write_to_file": 25
                },
                "concat": {
                    "combine_strings": 1,
                    "concatenate": 1,
                    "concatenate_strings": 12,
                    "construct_file_path": 1,
                    "create_concatenation": 1,
                    "get_concatenated_string": 1,
                    "join_strings": 4
                },
                "pFVar1": {
                    "file": 1,
                    "file_pointer": 21,
                    "file_ptr": 7
                },
                "perror": {
                    "print_error_message": 1
                },
                "xexit": {
                    "exit_with_error": 1
                }
            },
            "called": [
                "concat"
            ],
            "calling": [
                "FUN_00105a68"
            ],
            "code": "\nvoid write_to_file_00102e57(void)\n\n{\n  FILE *file_pointer;\n  \n  DAT_0010d618 = (char *)concatenate_strings();\n  if (DAT_0010d60c != 0) {\n    printf(\"x - %s\\n\",DAT_0010d618);\n  }\n  file_pointer = fopen(DAT_0010d618,\"w\");\n  if (file_pointer != (FILE *)0x0) {\n    return;\n  }\n  perror(DAT_0010d618);\n                    \n  xexit(1);\n}\n\n",
            "current_name": "write_to_file_00102e57",
            "entrypoint": "0x00102e57",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102e57": "write_to_file_00102e57",
                "concat": "concatenate_strings",
                "pFVar1": "file_pointer",
                "perror": "print_error_message",
                "xexit": "exit_with_error"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102e6f": {
            "additional_data": {
                "DAT_0010d5e8": {
                    "base_dir_path": 1,
                    "base_file_path": 1,
                    "base_path": 2,
                    "input_file_path": 1,
                    "source_root": 1,
                    "starting_dir": 1
                },
                "DAT_0010d60c": {
                    "error_flag": 1,
                    "is_verbose": 4,
                    "print_enabled": 1,
                    "print_output": 2
                },
                "DAT_0010d618": {
                    "output_file": 1,
                    "output_file_path": 3,
                    "output_path": 4
                },
                "FUN_00102e6f": {
                    "extract_and_print_file_path": 1,
                    "extract_and_process_file_path": 1,
                    "extract_and_write_archive_member": 1,
                    "extract_and_write_archived_file": 1,
                    "extract_and_write_file": 1,
                    "extract_archive_member": 1,
                    "extract_file_from_binary": 1,
                    "extract_file_name": 1,
                    "extract_file_path": 11,
                    "extract_filepath": 2,
                    "extract_files_from_binary": 2,
                    "process_file": 1,
                    "process_file_path": 5,
                    "process_output_path": 1,
                    "process_path": 1
                },
                "FUN_00105a68": {
                    "cleanup": 1
                },
                "FUN_00107920": {
                    "print_error_message": 1
                },
                "dcgettext": {
                    "get_message_translation": 1
                },
                "in_RAX": {
                    "current_char": 4,
                    "current_char_ptr": 1,
                    "current_character": 1,
                    "file_path": 15,
                    "file_ptr": 1,
                    "filepath": 1,
                    "input_path": 1,
                    "path": 7
                },
                "lbasename": {
                    "get_basename": 1
                },
                "pFVar4": {
                    "file": 4,
                    "file_pointer": 17,
                    "file_ptr": 10
                },
                "pcVar1": {
                    "archive_path": 1,
                    "base_dir": 6,
                    "base_directory": 3,
                    "base_file_path": 1,
                    "base_path": 8,
                    "current_dir": 1,
                    "current_directory": 2,
                    "current_path": 2,
                    "initial_file_path": 1,
                    "original_path": 1,
                    "prefix": 1,
                    "prev_path_segment": 1,
                    "previous_path": 2,
                    "source_path": 1
                },
                "pcVar2": {
                    "concatenated_path": 1
                },
                "pcVar6": {
                    "char_ptr": 1,
                    "current": 1,
                    "current_char": 6,
                    "current_dir": 2,
                    "current_path": 5,
                    "current_path_component": 1,
                    "current_path_segment": 1,
                    "file_name": 2,
                    "file_path": 1,
                    "filename": 3,
                    "next_path": 1,
                    "path_segment": 1,
                    "sub_path": 2,
                    "subpath": 1,
                    "temp_char": 1,
                    "temp_ptr": 1,
                    "tmp_file_path": 1
                },
                "sVar5": {
                    "base_dir_len": 1,
                    "base_dir_length": 4,
                    "base_directory_length": 2,
                    "base_file_path_length": 1,
                    "base_path_length": 5,
                    "dir_length": 1,
                    "directory_length": 1,
                    "file_name_length": 1,
                    "len_base_path": 1,
                    "length": 1,
                    "length_of_file": 1,
                    "original_path_length": 1,
                    "path_length": 10,
                    "source_path_length": 1
                },
                "uVar2": {
                    "base_dir_name": 1,
                    "base_name": 8,
                    "basename": 5,
                    "basename_result": 1,
                    "modified_file_path": 1,
                    "new_path": 1,
                    "output_path": 1
                },
                "uVar3": {
                    "error_message": 14,
                    "error_msg": 3,
                    "error_string": 1
                }
            },
            "called": [
                "dcgettext",
                "lbasename",
                "FUN_00102e6f",
                "FUN_00107920",
                "FUN_00105a68"
            ],
            "calling": [
                "FUN_00102e6f"
            ],
            "code": "\nvoid extract_and_process_file_path_00102e6f(void)\n\n{\n  char *base_path;\n  char *file_path;\n  undefined8 base_name;\n  undefined8 error_message;\n  FILE *file_pointer;\n  size_t path_length;\n  char *current_char;\n  \n  base_path = DAT_0010d5e8;\n  do {\n    file_path = file_path + 1;\n    while (*file_path != '/') {\n      if (*file_path == '\\0') {\n        if ((DAT_0010d5e8 != (char *)0x0) && (path_length = strlen(DAT_0010d5e8), path_length != 0)) {\n          if (base_path[path_length - 1] == '/') {\n            DAT_0010d618 = (char *)concat(base_path,DAT_0010d618,0);\n          }\n          else {\n            DAT_0010d618 = (char *)concat(base_path,&DAT_00108260,DAT_0010d618,0);\n          }\n        }\n        if (DAT_0010d60c != 0) {\n          printf(\"x - %s\\n\",DAT_0010d618);\n        }\n        file_pointer = fopen(DAT_0010d618,\"w\");\n        if (file_pointer == (FILE *)0x0) {\n          perror(DAT_0010d618);\n                    \n          xexit(1);\n        }\n        return;\n      }\n      current_char = file_path;\n      if ((*file_path == '.') && (current_char = file_path + 1, file_path[1] == '.')) {\n        current_char = file_path + 2;\n        if ((file_path[2] == '/') || (file_path[2] == '\\0')) {\n          base_name = lbasename();\n          base_path = DAT_0010d618;\n          error_message = dcgettext(0,\"illegal output pathname for archive member: %s, using \\'%s\\' instead\"\n                            ,5);\n          FUN_00107920(error_message,base_path,base_name);\n          DAT_0010d618 = (char *)base_name;\n          FUN_00105a68();\n          return;\n        }\n      }\n      for (; (file_path = current_char, *current_char != '\\0' && (*current_char != '/')); current_char = current_char + 1) {\n      }\n    }\n  } while( true );\n}\n\n",
            "current_name": "extract_and_process_file_path_00102e6f",
            "entrypoint": "0x00102e6f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102e6f": "extract_and_process_file_path_00102e6f",
                "dcgettext": "get_message_translation",
                "in_RAX": "file_path",
                "lbasename": "get_basename",
                "pFVar4": "file_pointer",
                "pcVar1": "base_path",
                "pcVar6": "current_char",
                "sVar5": "path_length",
                "uVar2": "base_name",
                "uVar3": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f08": {
            "additional_data": {
                "FUN_00102f08": {
                    "print_and_assign": 4,
                    "print_and_assign_pointer": 1,
                    "print_and_assign_values": 3,
                    "print_and_modify": 2,
                    "print_and_modify_data": 4,
                    "print_and_set_values": 1,
                    "print_and_store": 1,
                    "print_and_store_data": 1,
                    "print_and_swap": 1,
                    "print_and_update": 3,
                    "print_and_update_data": 4,
                    "print_and_update_value": 1,
                    "print_and_update_values": 4,
                    "print_and_update_variables": 1
                },
                "unaff_R12": {
                    "data": 2,
                    "data_ptr": 6,
                    "data_variable": 1,
                    "dest_ptr": 1,
                    "destination_pointer": 1,
                    "destination_ptr": 2,
                    "new_data_address": 1,
                    "new_data_ptr": 1,
                    "output_ptr": 1,
                    "pointer_r12": 1,
                    "pointer_value": 1,
                    "ptr_ptr": 1,
                    "ptr_to_str_ptr": 1,
                    "string_pointer": 1,
                    "string_ptr": 1,
                    "target_ptr": 2,
                    "target_variable": 1,
                    "temp_ptr": 2,
                    "temporary_variable": 1,
                    "value_ptr": 3
                },
                "unaff_RBX": {
                    "array": 1,
                    "array_ptr": 1,
                    "buffer_pointer": 1,
                    "data_address": 1,
                    "data_ptr": 2,
                    "format_string": 1,
                    "format_string_ptr": 1,
                    "input_string": 1,
                    "input_string_pointer": 1,
                    "message": 1,
                    "message_pointer": 1,
                    "message_ptr": 7,
                    "pointer_rbx": 1,
                    "print_string": 1,
                    "print_variable": 1,
                    "str_ptr": 3,
                    "string_ptr": 6
                }
            },
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_00105af0"
            ],
            "code": "\nundefined8 print_and_store_data_00102f08(void)\n\n{\n  undefined8 *message_ptr;\n  undefined8 *data_ptr;\n  \n  printf(\"a - %s\\n\",*message_ptr);\n  message_ptr[0x1e] = *data_ptr;\n  *data_ptr = message_ptr;\n  return 1;\n}\n\n",
            "current_name": "print_and_store_data_00102f08",
            "entrypoint": "0x00102f08",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f08": "print_and_store_data_00102f08",
                "unaff_R12": "data_ptr",
                "unaff_RBX": "message_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f1e": {
            "additional_data": {
                "FUN_00102f1e": {
                    "copy_and_delete_file": 1,
                    "copy_and_unlink_file": 13,
                    "copy_file": 2,
                    "copy_file_and_delete": 1,
                    "copy_file_and_handle_error": 1,
                    "copy_file_and_return": 1,
                    "copy_file_and_unlink": 8,
                    "copy_file_from_errno": 1,
                    "copy_file_reason": 1,
                    "copy_file_with_reason": 2
                },
                "__errno_location": {
                    "get_errno_location": 2
                },
                "auVar3": {
                    "result": 1,
                    "ret_value": 1,
                    "return_value": 5
                },
                "dcgettext": {
                    "translate_message": 1
                },
                "piVar1": {
                    "errno_location": 3,
                    "errno_pointer": 2,
                    "errno_ptr": 5,
                    "errnum_ptr": 1,
                    "error_code": 3,
                    "error_num_ptr": 2,
                    "error_number": 4,
                    "error_number_ptr": 1
                },
                "strerror": {
                    "get_error_message": 1
                },
                "uVar2": {
                    "err_message": 1,
                    "error_description": 1,
                    "error_message": 14,
                    "error_msg": 2,
                    "error_string": 1
                },
                "unaff_R12": {
                    "file_name": 16,
                    "file_path": 12,
                    "filename": 1,
                    "source_file_path": 1
                },
                "unaff_RBP": {
                    "error_code": 2,
                    "file_address": 1,
                    "file_size": 26,
                    "stack_register": 1
                },
                "unaff_retaddr": {
                    "return_address": 27
                },
                "unlink": {
                    "remove_file": 1
                }
            },
            "called": [
                "dcgettext",
                "unlink",
                "strerror",
                "__errno_location",
                "FUN_00107920"
            ],
            "calling": [
                "FUN_00105bc0"
            ],
            "code": "\nundefined  [16] copy_file_and_unlink_00102f1e(void)\n\n{\n  int *errno_ptr;\n  undefined8 error_message;\n  ulong file_size;\n  char *file_name;\n  undefined return_value [16];\n  undefined8 return_address;\n  \n  errno_ptr = __errno_location();\n  strerror(*errno_ptr);\n  error_message = dcgettext(0,\"unable to copy file \\'%s\\'; reason: %s\",5);\n  FUN_00107920(error_message);\n  remove_file(file_name);\n  return_value._0_8_ = file_size & 0xffffffff;\n  return_value._8_8_ = return_address;\n  return return_value;\n}\n\n",
            "current_name": "copy_file_and_unlink_00102f1e",
            "entrypoint": "0x00102f1e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f1e": "copy_file_and_unlink_00102f1e",
                "__errno_location": "get_errno_location",
                "auVar3": "return_value",
                "dcgettext": "translate_message",
                "piVar1": "errno_ptr",
                "strerror": "get_error_message",
                "uVar2": "error_message",
                "unaff_R12": "file_name",
                "unaff_RBP": "file_size",
                "unaff_retaddr": "return_address",
                "unlink": "remove_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f55": {
            "additional_data": {
                "FUN_00102f55": {
                    "close_and_reset_errno": 2,
                    "close_and_return_error": 3,
                    "close_and_set_errno": 5,
                    "close_and_set_error": 2,
                    "close_and_set_error_code": 1,
                    "close_file": 7,
                    "close_file_and_return": 1,
                    "close_file_and_return_error": 2,
                    "close_file_and_return_error_code": 1,
                    "close_file_and_set_errno": 4,
                    "close_file_and_set_error": 3
                },
                "__errno_location": {
                    "get_errno_pointer": 1
                },
                "iVar1": {
                    "error_code": 2,
                    "previous_errno": 1,
                    "saved_errno": 1
                },
                "piVar2": {
                    "errno_pointer": 1,
                    "error_code_pointer": 3
                },
                "unaff_R12D": {
                    "fd": 2,
                    "file_descriptor": 29
                }
            },
            "called": [
                "__errno_location",
                "close"
            ],
            "calling": [
                "FUN_00105c00"
            ],
            "code": "\nundefined8 close_file_and_set_errno_00102f55(void)\n\n{\n  int error_code;\n  int *error_code_pointer;\n  int file_descriptor;\n  \n  error_code_pointer = __errno_location();\n  error_code = *error_code_pointer;\n  close(file_descriptor);\n  *error_code_pointer = error_code;\n  return 0xffffffff;\n}\n\n",
            "current_name": "close_file_and_set_errno_00102f55",
            "entrypoint": "0x00102f55",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f55": "close_file_and_set_errno_00102f55",
                "__errno_location": "get_errno_pointer",
                "iVar1": "error_code",
                "piVar2": "error_code_pointer",
                "unaff_R12D": "file_descriptor"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f96": {
            "additional_data": {
                "FUN_00102f96": {
                    "display_error_with_cause": 1,
                    "handle_error": 2,
                    "print_error": 3,
                    "print_error_details": 1,
                    "print_error_message": 24
                },
                "dcgettext": {
                    "get_localized_message": 1
                },
                "fflush": {
                    "flush_output": 1
                },
                "fprintf": {
                    "print_formatted_error": 1
                },
                "uVar1": {
                    "error_message": 15,
                    "error_string": 2
                },
                "unaff_RBX": {
                    "error_cause": 1,
                    "error_code": 21,
                    "error_flag": 8
                },
                "unaff_retaddr": {
                    "return_address": 30
                }
            },
            "called": [
                "dcgettext",
                "fprintf",
                "fflush"
            ],
            "calling": [
                "FUN_00107c20"
            ],
            "code": "\n\n\nvoid print_error_message_00102f96(void)\n\n{\n  undefined8 error_message;\n  long error_code;\n  undefined8 return_address;\n  \n  error_message = dcgettext(0,\"cause of error unknown\",5);\n  fflush(_stdout);\n  if (error_code != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",DAT_0010d660);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",DAT_0010d660,error_message,return_address);\n  return;\n}\n\n",
            "current_name": "print_error_message_00102f96",
            "entrypoint": "0x00102f96",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f96": "print_error_message_00102f96",
                "dcgettext": "get_localized_message",
                "fflush": "flush_output",
                "fprintf": "print_formatted_error",
                "uVar1": "error_message",
                "unaff_RBX": "error_code",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102fd7": {
            "additional_data": {
                "FUN_00102fd7": {
                    "display_error": 1,
                    "print_cannot_set_time_error_message": 2,
                    "print_error_message": 5,
                    "print_set_time_error": 2,
                    "print_set_time_error_message": 1,
                    "print_time_error_message": 1,
                    "set_time_error": 10,
                    "set_time_error_handler": 3,
                    "set_time_error_handling": 3,
                    "set_time_error_message": 3
                },
                "FUN_00107920": {
                    "display_error_message": 5,
                    "print_error": 1,
                    "print_error_message": 4,
                    "show_error_popup": 1
                },
                "__errno_location": {
                    "get_errno_location": 2,
                    "get_error_number": 5
                },
                "dcgettext": {
                    "format_error": 1,
                    "get_error_message": 3,
                    "get_formatted_error_message": 1,
                    "get_localized_error_message": 2,
                    "get_localized_message": 2,
                    "get_localized_string": 1,
                    "get_translated_error_message": 1,
                    "translate_error_message": 1,
                    "translate_message": 1
                },
                "errorMessage": {
                    "err_message": 1
                },
                "piVar1": {
                    "errno": 1,
                    "errno_location": 2,
                    "errno_ptr": 1,
                    "error_code": 4,
                    "error_code_ptr": 1,
                    "error_num_ptr": 1,
                    "error_number": 10,
                    "error_number_pointer": 1,
                    "error_number_ptr": 6
                },
                "strerror": {
                    "get_error_description": 1,
                    "get_error_message": 3,
                    "get_error_string": 9
                },
                "uVar2": {
                    "catalog_message": 1,
                    "error_message": 17,
                    "error_message_ptr": 1,
                    "error_msg": 1,
                    "error_string": 4,
                    "localized_error_message": 1,
                    "time_error_message": 1,
                    "translated_error": 1,
                    "translated_error_message": 2
                }
            },
            "called": [
                "dcgettext",
                "strerror",
                "__errno_location",
                "FUN_00107920"
            ],
            "calling": [
                "FUN_00107c80"
            ],
            "code": "\nvoid print_cannot_set_time_error_message_00102fd7(void)\n\n{\n  int *error_number;\n  undefined8 error_message;\n  \n  error_number = __errno_location();\n  strerror(*error_number);\n  error_message = dcgettext(0,\"%s: cannot set time: %s\",5);\n  FUN_00107920(error_message);\n  return;\n}\n\n",
            "current_name": "print_cannot_set_time_error_message_00102fd7",
            "entrypoint": "0x00102fd7",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102fd7": "print_cannot_set_time_error_message_00102fd7",
                "__errno_location": "get_error_number",
                "dcgettext": "get_error_message",
                "piVar1": "error_number",
                "strerror": "get_error_string",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010300e": {
            "additional_data": {
                "DAT_0010a240": {
                    "data_table5": 1
                },
                "DAT_0010a440": {
                    "data_table3": 1
                },
                "DAT_0010a640": {
                    "data_table2": 1
                },
                "DAT_0010a7c0": {
                    "lookup_table2": 1
                },
                "DAT_0010a800": {
                    "data_table4": 1
                },
                "DAT_0010a980": {
                    "data_table1": 1
                },
                "DAT_0010ab00": {
                    "lookup_table1": 1
                },
                "DAT_0010d5b0": {
                    "end_byte_pointer": 1,
                    "end_pointer": 1
                },
                "DAT_0010d5b8": {
                    "final_valid_data_pointer": 1,
                    "updated_byte_pointer": 1
                },
                "DAT_0010d5c0": {
                    "final_valid_data_index": 1,
                    "updated_data_index": 1
                },
                "DAT_0010d5c8": {
                    "start_byte_pointer": 1,
                    "start_pointer": 1
                },
                "DAT_0010d5d0": {
                    "initial_data_index": 1,
                    "initial_index": 1
                },
                "FUN_0010300e": {
                    "extract_data_from_binary": 1,
                    "extract_relevant_data": 1,
                    "find_match": 2,
                    "find_matched_index": 1,
                    "find_matching_data": 2,
                    "find_matching_element": 1,
                    "find_matching_elements": 1,
                    "find_matching_entry": 1,
                    "find_matching_index": 1,
                    "find_matching_indexes": 1,
                    "find_matching_indices": 2,
                    "find_matching_pattern": 3,
                    "find_matching_sequence": 1,
                    "find_matching_value": 3,
                    "find_matching_values": 3,
                    "find_target": 1,
                    "find_valid_data": 1,
                    "process_data": 1,
                    "reverse_and_update_data": 1
                },
                "bVar1": {
                    "found_data": 1,
                    "found_match": 7,
                    "found_matching_value": 2,
                    "found_relevant_data": 1,
                    "has_match": 5,
                    "has_matched": 1,
                    "has_matching_index": 2,
                    "has_valid_data": 1,
                    "is_data_found": 1,
                    "is_data_updated": 1,
                    "is_match": 1,
                    "is_match_found": 3,
                    "is_modified": 1,
                    "is_pattern_found": 1,
                    "match_found": 1,
                    "pattern_found": 1,
                    "target_found": 1
                },
                "bVar4": {
                    "byte_mapping": 2,
                    "byte_value": 1,
                    "calculated_value": 1,
                    "computed_value": 1,
                    "entry_value": 1,
                    "index_offset": 1,
                    "intermediate_value": 1,
                    "lookup_index": 1,
                    "lookup_offset": 1,
                    "lookup_result": 2,
                    "lookup_value": 6,
                    "matching_index": 2,
                    "modified_byte": 1,
                    "new_value": 1,
                    "offset": 4,
                    "shift_value": 1,
                    "temp_byte": 1,
                    "temp_var": 1,
                    "value": 2
                },
                "iVar2": {
                    "current_data_index": 1,
                    "current_index": 21,
                    "current_pattern_index": 2,
                    "current_value": 5,
                    "data_index": 1,
                    "index": 1
                },
                "in_R10D": {
                    "current_data": 1,
                    "current_index": 1,
                    "found_element_index": 1,
                    "found_index": 1,
                    "found_value": 1,
                    "match_index": 1,
                    "matched_pattern_index": 1,
                    "matching_data_index": 1,
                    "matching_element_index": 1,
                    "matching_index": 12,
                    "matching_index_value": 1,
                    "matching_pattern_index": 1,
                    "matching_value": 2,
                    "matching_value_index": 1,
                    "modified_index": 1,
                    "new_data_index": 1,
                    "relevant_value": 1,
                    "target_index": 1,
                    "valid_data_index": 1
                },
                "in_R9": {
                    "current_byte": 1,
                    "found_byte": 1,
                    "found_element": 1,
                    "found_index": 1,
                    "match_byte": 1,
                    "match_index_array": 1,
                    "matched_byte": 1,
                    "matching_byte": 5,
                    "matching_byte_pointer": 3,
                    "matching_byte_ptr": 4,
                    "matching_data": 1,
                    "matching_data_ptr": 2,
                    "matching_element_ptr": 1,
                    "matching_entry": 1,
                    "matching_value": 1,
                    "matching_value_pointer": 1,
                    "modified_ptr": 1,
                    "new_byte_pointer": 1,
                    "relevant_byte_ptr": 1,
                    "target_ptr": 1,
                    "valid_data_pointer": 1
                },
                "lVar3": {
                    "calculated_index": 4,
                    "computed_index": 4,
                    "lookup_index": 1,
                    "lookup_result": 1,
                    "new_data_index": 1,
                    "new_index": 8,
                    "new_value": 1,
                    "next_index": 4,
                    "offset": 5,
                    "pattern_offset": 1,
                    "updated_index": 1
                },
                "pbVar5": {
                    "byte_array": 1,
                    "byte_pointer": 4,
                    "byte_ptr": 1,
                    "current_byte": 10,
                    "current_byte_pointer": 1,
                    "current_byte_ptr": 3,
                    "current_data": 1,
                    "current_element": 1,
                    "current_element_ptr": 1,
                    "current_entry": 1,
                    "current_ptr": 1,
                    "current_value": 1,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "input_array": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nvoid find_matching_elements_0010300e(void)\n\n{\n  bool found_match;\n  int current_index;\n  long new_index;\n  byte lookup_value;\n  byte *current_byte;\n  byte *matching_byte;\n  int matching_index;\n  \n  found_match = false;\n  current_index = DAT_0010d5d0;\n  for (current_byte = DAT_0010d5c8; current_byte < DAT_0010d5b0; current_byte = current_byte + 1) {\n    lookup_value = 1;\n    if (*current_byte != 0) {\n      lookup_value = (&DAT_0010ab00)[*current_byte];\n    }\n    if (*(short *)(&DAT_0010a980 + (long)current_index * 2) != 0) {\n      found_match = true;\n      matching_byte = current_byte;\n      matching_index = current_index;\n    }\n    while( true ) {\n      new_index = (long)(int)((int)*(short *)(&DAT_0010a640 + (long)current_index * 2) + (uint)lookup_value);\n      if (*(short *)(&DAT_0010a440 + new_index * 2) == current_index) break;\n      current_index = (int)*(short *)(&DAT_0010a800 + (long)current_index * 2);\n      if (0xb0 < current_index) {\n        lookup_value = (&DAT_0010a7c0)[(int)(uint)lookup_value];\n      }\n    }\n    current_index = (int)*(short *)(&DAT_0010a240 + new_index * 2);\n  }\n  if (found_match) {\n    DAT_0010d5b8 = matching_byte;\n    DAT_0010d5c0 = matching_index;\n  }\n  return;\n}\n\n",
            "current_name": "find_matching_elements_0010300e",
            "entrypoint": "0x0010300e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010300e": "find_matching_elements_0010300e",
                "bVar1": "found_match",
                "bVar4": "lookup_value",
                "iVar2": "current_index",
                "in_R10D": "matching_index",
                "in_R9": "matching_byte",
                "lVar3": "new_index",
                "pbVar5": "current_byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001030ed": {
            "additional_data": {
                "DAT_0010d588": {
                    "extracted_value2": 1,
                    "extracted_value4": 3,
                    "extracted_value5": 3,
                    "first_byte": 1,
                    "first_char_value": 1,
                    "first_character": 1,
                    "first_data": 1,
                    "first_data_value": 6,
                    "function_data_value": 1,
                    "second_value": 3,
                    "target_value": 1,
                    "value2": 4,
                    "value5": 1,
                    "value_c": 1,
                    "value_e": 1
                },
                "DAT_0010d590": {
                    "data": 1,
                    "data_value": 1,
                    "extracted_data": 1,
                    "extracted_value3": 3,
                    "extracted_value4": 3,
                    "first_data": 1,
                    "first_element": 1,
                    "first_value": 8,
                    "function_value": 1,
                    "initialized_var4": 1,
                    "value": 2,
                    "value1": 4,
                    "value4": 1,
                    "value_b": 1,
                    "value_d": 1
                },
                "DAT_0010d598": {
                    "data_field": 1,
                    "data_value": 2,
                    "extracted_value": 14,
                    "extracted_value1": 6,
                    "function_info": 1,
                    "initialized_var1": 1,
                    "offset": 1,
                    "result": 1,
                    "value1": 1,
                    "value_a": 2
                },
                "DAT_0010d5a0": {
                    "array_index": 3,
                    "data_offset2": 1,
                    "data_offset_a": 1,
                    "data_pointer2": 1,
                    "global_var2": 1,
                    "index": 14,
                    "offset": 9
                },
                "DAT_0010d5a8": {
                    "base_address": 11,
                    "data_address": 3,
                    "data_array": 2,
                    "data_array_pointer": 1,
                    "data_offset1": 1,
                    "data_pointer1": 1,
                    "data_pointer_a": 1,
                    "data_ptr": 1,
                    "data_source": 1,
                    "global_var1": 1,
                    "pointer_array": 3,
                    "ptr_array": 2,
                    "ptr_base": 1,
                    "ptr_base_address": 1
                },
                "DAT_0010d5b0": {
                    "data": 2,
                    "data_address": 1,
                    "data_buffer": 1,
                    "data_pointer": 2,
                    "data_pointer2": 4,
                    "data_pointer_b": 1,
                    "data_ptr": 1,
                    "extracted_data": 2,
                    "extracted_value2": 6,
                    "function_data": 1,
                    "initialized_var2": 1,
                    "pointer": 1,
                    "pointer2": 1,
                    "pointer_to_data": 1,
                    "string_pointer": 2,
                    "string_value": 1,
                    "value2": 1,
                    "value_b": 1
                },
                "DAT_0010d5c8": {
                    "current_data": 2,
                    "current_data_address": 1,
                    "current_string": 1,
                    "data_pointer": 1,
                    "data_pointer3": 1,
                    "data_pointer_c": 1,
                    "extracted_data": 1,
                    "extracted_data_copy": 1,
                    "extracted_value3": 3,
                    "final_data_pointer": 1,
                    "initialized_var3": 1,
                    "new_extracted_value": 1,
                    "output_buffer": 1,
                    "pointer3": 1,
                    "saved_data_ptr": 1,
                    "target_pointer": 1,
                    "temp_string_pointer": 1,
                    "temp_value": 1,
                    "temporary_pointer": 1,
                    "updated_data": 1,
                    "updated_data_pointer": 1,
                    "updated_extracted_value2": 1,
                    "updated_function_data": 1,
                    "updated_pointer": 1,
                    "value3": 1,
                    "value_c": 1
                },
                "FUN_001030ed": {
                    "extract_binary_data": 1,
                    "extract_data": 9,
                    "extract_data_from_binary": 12,
                    "extract_function_info": 1,
                    "extract_information": 2,
                    "get_function_data": 1,
                    "initialize_data": 4,
                    "initialize_global_variables": 1
                },
                "puVar1": {
                    "binary_data_pointer": 2,
                    "data_pointer": 19,
                    "extracted_data": 1,
                    "extracted_pointer": 1,
                    "function_pointer": 2,
                    "pointer": 5,
                    "ptr": 1
                },
                "undefined8": {
                    "pointer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_001031cf",
                "FUN_00103e95"
            ],
            "code": "\nvoid extract_data_from_binary_001030ed(void)\n\n{\n  pointer *data_pointer;\n  \n  data_pointer = *(pointer **)(DAT_0010d5a8 + DAT_0010d5a0 * 8);\n  DAT_0010d598 = *(undefined4 *)((long)data_pointer + 0x1c);\n  DAT_0010d5b0 = (undefined *)data_pointer[2];\n  DAT_0010d5c8 = DAT_0010d5b0;\n  DAT_0010d590 = *data_pointer;\n  DAT_0010d588 = *DAT_0010d5b0;\n  return;\n}\n\n",
            "current_name": "extract_data_from_binary_001030ed",
            "entrypoint": "0x001030ed",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001030ed": "extract_data_from_binary_001030ed",
                "puVar1": "data_pointer",
                "undefined8": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010312d": {
            "additional_data": {
                "DAT_0010d558": {
                    "base_address": 1,
                    "global_data": 1
                },
                "FUN_0010312d": {
                    "copy_and_swap_pointers": 1,
                    "copy_and_swap_values": 1,
                    "copy_data": 20,
                    "copy_data_and_link": 3,
                    "copy_data_to_destination": 1,
                    "copy_data_to_next": 1,
                    "copy_data_to_target": 1,
                    "copy_data_with_offset": 1,
                    "copy_function_data": 1,
                    "copy_memory": 1
                },
                "lVar1": {
                    "previous_destination": 1,
                    "source_data_ptr": 1,
                    "temp": 11,
                    "temp_address": 1,
                    "temp_pointer": 1,
                    "temp_var": 8,
                    "temp_variable": 1,
                    "temporary_pointer": 1
                },
                "param_1": {
                    "destination": 6,
                    "dst": 1,
                    "dst_pointer": 1,
                    "source": 16,
                    "source_address": 1,
                    "source_data": 2,
                    "source_pointer": 2,
                    "source_ptr": 2
                },
                "param_2": {
                    "destination": 16,
                    "destination_address": 1,
                    "destination_data": 2,
                    "destination_pointer": 2,
                    "destination_ptr": 1,
                    "source": 6,
                    "src": 1,
                    "src_pointer": 1,
                    "target_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nvoid copy_data_and_link_0010312d(long source,long destination)\n\n{\n  long temp;\n  \n  if (destination != 0) {\n    *(undefined8 *)(destination + 0xf0) = *(undefined8 *)(source + 0xf0);\n  }\n  temp = DAT_0010d558;\n  *(undefined8 *)(source + 0xf0) = *(undefined8 *)(DAT_0010d558 + 0xf8);\n  *(long *)(temp + 0xf8) = source;\n  return;\n}\n\n",
            "current_name": "copy_data_and_link_0010312d",
            "entrypoint": "0x0010312d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010312d": "copy_data_and_link_0010312d",
                "lVar1": "temp",
                "param_1": "source",
                "param_2": "destination"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010315d": {
            "additional_data": {
                "FUN_0010315d": {
                    "check_and_exit": 6,
                    "check_and_exit_if_zero": 13,
                    "check_data_availability": 1,
                    "check_exit_condition": 1,
                    "check_exit_conditions": 1,
                    "check_exit_status": 4,
                    "check_global_variable": 1,
                    "check_if_data_valid": 1,
                    "check_initialization": 1,
                    "handle_zero_value": 1,
                    "terminate_process_if_flag_not_set": 1
                },
                "_DAT_0010d608": {
                    "data_availability_flag": 1,
                    "data_status": 1,
                    "error_code": 1,
                    "exit_code": 1,
                    "exit_status": 1,
                    "flag": 1,
                    "some_data": 1,
                    "some_status_value": 1,
                    "termination_flag": 1,
                    "value": 1
                },
                "xexit": {
                    "exit": 1,
                    "exit_code": 1,
                    "exit_function": 1,
                    "exit_if_zero": 1,
                    "exit_process": 1,
                    "exit_program": 9,
                    "exit_with_error": 6,
                    "handle_exit": 1,
                    "perform_exit": 1,
                    "terminate_program": 1
                }
            },
            "called": [
                "xexit"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00103e95",
                "FUN_00103c60"
            ],
            "code": "\n\n\nvoid check_and_exit_if_zero_0010315d(void)\n\n{\n  if (_DAT_0010d608 == 0) {\n                    \n    xexit(9);\n  }\n  return;\n}\n\n",
            "current_name": "check_and_exit_if_zero_0010315d",
            "entrypoint": "0x0010315d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010315d": "check_and_exit_if_zero_0010315d",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103172": {
            "additional_data": {
                "FUN_00103172": {
                    "copy_and_print": 2,
                    "copy_and_print_message": 1,
                    "copy_and_print_string": 3,
                    "copy_and_print_value": 1,
                    "copy_and_update_parameters": 1,
                    "copy_data_and_print": 1,
                    "copy_data_to_param": 1,
                    "extract_and_print_data": 1,
                    "extract_data_from_binary": 1,
                    "reverse_and_copy": 1,
                    "reverse_and_copy_data": 1,
                    "reverse_and_copy_strings": 1,
                    "reverse_and_store": 1,
                    "reverse_and_store_data": 1,
                    "reverse_and_update_values": 1,
                    "update_and_print_string": 1,
                    "update_and_print_value": 1,
                    "update_param_and_print": 1,
                    "update_param_and_return": 4,
                    "update_param_with_condition": 1,
                    "update_parameter_and_return": 1,
                    "update_parameters": 3,
                    "update_params_and_return": 1
                },
                "__format": {
                    "format_str": 1,
                    "format_string": 2
                },
                "auVar2": {
                    "formatted_data": 1,
                    "modified_data": 3,
                    "modified_value": 1,
                    "modified_values": 1,
                    "new_array": 1,
                    "new_data": 2,
                    "new_value": 2,
                    "new_values": 1,
                    "new_variable": 1,
                    "result": 6,
                    "result_array": 2,
                    "result_data": 1,
                    "return_value": 1,
                    "temp": 1,
                    "temp_array": 1,
                    "updated_data": 1,
                    "updated_value": 2,
                    "updated_values": 2
                },
                "param_1": {
                    "data_pointer": 1,
                    "first_param": 1,
                    "input_data": 1,
                    "input_parameter": 1,
                    "input_pointer": 1,
                    "input_ptr": 3,
                    "old_data": 1,
                    "old_param": 2,
                    "old_value": 2,
                    "old_value_pointer": 1,
                    "original_pointer": 1,
                    "source": 3,
                    "source_array": 1,
                    "source_data": 3,
                    "source_pointer": 1,
                    "source_ptr": 1,
                    "source_string": 4,
                    "src_ptr": 1,
                    "string_to_update": 1,
                    "value_ptr": 1
                },
                "param_2": {
                    "buffer": 1,
                    "data_storage": 1,
                    "dest_data": 1,
                    "dest_ptr": 1,
                    "destination": 3,
                    "destination_array": 1,
                    "destination_data": 2,
                    "destination_pointer": 1,
                    "destination_string": 3,
                    "destination_strings": 1,
                    "modified_pointer": 1,
                    "new_data": 1,
                    "new_param": 2,
                    "new_value_pointer": 1,
                    "output_pointer": 1,
                    "output_ptr": 2,
                    "second_param": 1,
                    "string_array": 3,
                    "string_ptr": 2,
                    "string_to_print": 1,
                    "target_ptr": 1
                },
                "param_3": {
                    "condition": 2,
                    "condition_flag": 1,
                    "flag": 10,
                    "is_condition_true": 1,
                    "is_flag_set": 1,
                    "print_flag": 1,
                    "print_required": 1,
                    "should_print": 14
                },
                "param_4": {
                    "additional_data": 6,
                    "additional_info": 2,
                    "additional_value": 2,
                    "data": 4,
                    "data_to_store": 1,
                    "data_value": 1,
                    "extra_data": 1,
                    "extra_param": 1,
                    "new_value": 3,
                    "param_value": 1,
                    "param_value_passed": 1,
                    "updated_value": 1,
                    "value": 3,
                    "value_to_set": 3,
                    "value_to_store": 1
                },
                "printf": {
                    "print": 1,
                    "print_formatted_string": 1
                },
                "uVar1": {
                    "data_to_copy": 1,
                    "input_data": 1,
                    "old_value": 8,
                    "source_value": 4,
                    "temp": 3,
                    "temp_data": 2,
                    "temp_source_value": 1,
                    "temp_value": 5,
                    "temp_var": 1,
                    "temp_variable": 1,
                    "updated_string": 1,
                    "value": 2
                }
            },
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_001028ed"
            ],
            "code": "\nundefined  [16]\ncopy_and_print_string_00103172(undefined8 *source_string,undefined8 *destination_string,char should_printf,undefined8 additional_data)\n\n{\n  undefined8 old_value;\n  undefined result [16];\n  \n  if (should_printf != '\\0') {\n    printf(\"r - %s\\n\",*destination_string);\n  }\n  old_value = *source_string;\n  destination_string[0x1e] = old_value;\n  result._1_7_ = (undefined7)((ulong)old_value >> 8);\n  result[0] = 1;\n  *source_string = destination_string;\n  result._8_8_ = additional_data;\n  return result;\n}\n\n",
            "current_name": "copy_and_print_string_00103172",
            "entrypoint": "0x00103172",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103172": "copy_and_print_string_00103172",
                "auVar2": "result",
                "param_1": "source_string",
                "param_2": "destination_string",
                "param_3": "should_print",
                "param_4": "additional_data",
                "printf": "print",
                "uVar1": "old_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001031a5": {
            "additional_data": {
                "FUN_001031a5": {
                    "display_syntax_error": 1,
                    "print_archive_script_error": 1,
                    "print_archive_script_syntax_error": 7,
                    "print_error_message": 2,
                    "print_script_syntax_error": 1,
                    "print_syntax_error": 14,
                    "print_syntax_error_in_archive_script": 1,
                    "print_syntax_error_line": 2,
                    "print_syntax_error_message": 2
                },
                "__format": {
                    "error_format": 5,
                    "error_format_string": 1,
                    "error_message": 7,
                    "error_message_format": 7,
                    "format_string": 11
                },
                "dcgettext": {
                    "get_localized_message": 1
                },
                "printf": {
                    "print_formatted_message": 1
                },
                "uVar1": {
                    "line_number": 26,
                    "new_counter": 1,
                    "updated_count": 2,
                    "updated_var1": 1
                }
            },
            "called": [
                "dcgettext",
                "printf"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nvoid print_syntax_error_in_archive_script_001031a5(void)\n\n{\n  uint line_number;\n  char *format_string;\n  \n  line_number = DAT_0010d554 + 1;\n  format_string = (char *)dcgettext(0,\"Syntax error in archive script, line %d\\n\",5);\n  printf(format_string,(ulong)line_number);\n  return;\n}\n\n",
            "current_name": "print_syntax_error_in_archive_script_001031a5",
            "entrypoint": "0x001031a5",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001031a5": "print_syntax_error_in_archive_script_001031a5",
                "__format": "format_string",
                "dcgettext": "get_localized_message",
                "printf": "print_formatted_message",
                "uVar1": "line_number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001031cf": {
            "additional_data": {
                "DAT_0010d5a0": {
                    "constant3": 1,
                    "constant_data2": 1,
                    "dat_0010d5a0": 1,
                    "file_array_index": 1,
                    "some_other_data": 1
                },
                "DAT_0010d5a8": {
                    "constant1": 1,
                    "constant2": 1,
                    "constant_data": 1,
                    "constant_variable": 1,
                    "data1": 1,
                    "file_array_size": 1,
                    "file_stream_ptr3": 1,
                    "some_data": 1
                },
                "FILE": {
                    "file_type": 1
                },
                "FUN_001030ed": {
                    "decrement_counter": 1,
                    "do_something": 1,
                    "handle_condition": 1
                },
                "FUN_001031cf": {
                    "file_operation": 1,
                    "initialize_file": 22,
                    "initialize_file_and_check_tty": 1,
                    "initialize_file_ptr": 1,
                    "initialize_file_stream": 3,
                    "initialize_file_structure": 1,
                    "process_file": 1
                },
                "LAB_00103263": {
                    "label1": 3
                },
                "LAB_0010327b": {
                    "label2": 1
                },
                "_DAT_00000000": {
                    "file": 1,
                    "file_ptr": 1,
                    "file_stream_ptr2": 1,
                    "file_value": 1,
                    "flag2": 2,
                    "flag_value": 1,
                    "flag_variable2": 1,
                    "global_file_ptr": 1,
                    "input_stream_ptr": 1,
                    "pointer_var": 1,
                    "stream2": 1
                },
                "_DAT_00000034": {
                    "constant_1": 1,
                    "file_flag": 1,
                    "flag": 1,
                    "flag1": 4,
                    "flag_value": 1,
                    "flag_var": 1,
                    "flag_variable1": 1,
                    "global_flag": 1,
                    "initialized": 1
                },
                "__errno_location": {
                    "get_errno_location": 6,
                    "get_error_location": 1
                },
                "_flags": {
                    "file_flag": 1,
                    "file_flags": 1,
                    "flags": 4
                },
                "fileno": {
                    "get_descriptor": 2,
                    "get_file_descriptor": 4,
                    "get_file_no": 1
                },
                "flagVar2": {
                    "flag_var2": 1
                },
                "iVar1": {
                    "err_val": 1,
                    "errno": 1,
                    "errno_val": 1,
                    "errno_value": 14,
                    "error_code": 3,
                    "error_num": 1,
                    "error_status": 1,
                    "error_value": 6,
                    "previous_errno": 1,
                    "previous_error_code": 1
                },
                "iVar3": {
                    "fd": 2,
                    "file_desc": 1,
                    "file_descriptor": 21,
                    "file_no": 2,
                    "file_number": 3,
                    "fileno_result": 1
                },
                "isArrayPointer": {
                    "flag_array": 1
                },
                "isatty": {
                    "check_if_terminal": 1,
                    "check_if_tty": 1,
                    "check_is_terminal": 1,
                    "check_is_tty": 1,
                    "check_terminal": 1,
                    "is_input_terminal": 1,
                    "is_interactive_terminal": 1
                },
                "lVar5": {
                    "constant": 3,
                    "constant_value": 5,
                    "dat_0010d5a8": 3,
                    "data": 2,
                    "data_address": 1,
                    "data_ptr": 2,
                    "data_section_addr": 1,
                    "data_var": 2,
                    "data_variable": 1,
                    "error_table": 1,
                    "file_array_ptr": 1,
                    "file_index": 1,
                    "file_pointer": 2,
                    "file_stream_ptr": 1,
                    "file_struct_location": 1,
                    "global_var": 1,
                    "global_variable": 1,
                    "saved_value": 1,
                    "some_variable": 1
                },
                "param_1": {
                    "error_file": 2,
                    "file_handle": 1,
                    "file_pointer": 7,
                    "file_ptr": 7,
                    "file_stream": 1,
                    "input_file": 1,
                    "output_file": 8,
                    "output_file_ptr": 2,
                    "output_stream": 1,
                    "stream_ptr": 1
                },
                "param_2": {
                    "file": 2,
                    "file_ptr": 1,
                    "input_file": 21,
                    "input_file_ptr": 2,
                    "input_stream": 1,
                    "source_file": 2,
                    "stream": 2
                },
                "param_3": {
                    "param3": 14,
                    "param_3": 17
                },
                "param_4": {
                    "param4": 14,
                    "param_4": 16
                },
                "param_5": {
                    "param5": 13,
                    "param_5": 15,
                    "return_val": 2,
                    "return_value": 1
                },
                "piVar4": {
                    "err_ptr": 1,
                    "errno_location": 6,
                    "errno_pointer": 1,
                    "errno_ptr": 13,
                    "error_code_ptr": 1,
                    "error_location": 3,
                    "error_num_location": 1,
                    "error_pointer": 4,
                    "error_var": 1
                },
                "uVar2": {
                    "is_terminal": 15,
                    "is_terminal_output": 1,
                    "is_tty": 8,
                    "result": 4,
                    "result_value": 1,
                    "val8": 1
                }
            },
            "called": [
                "FUN_001030ed",
                "isatty",
                "fileno",
                "__errno_location"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_001033d6"
            ],
            "code": "\n\n\nundefined8\ninitialize_file_stream_001031cf(file_type **output_file,file_type *input_file,undefined8 param_3,undefined8 param_4,undefined8 param_5)\n\n{\n  int errno_value;\n  uint is_terminal;\n  int file_descriptor;\n  int *errno_ptr;\n  long constant_value;\n  \n  errno_ptr = __errno_location();\n  constant_value = DAT_0010d5a8;\n  errno_value = *errno_ptr;\n  if (output_file == (file_type **)0x0) {\n    _DAT_00000034 = 1;\n    _DAT_00000000 = input_file;\n    if (DAT_0010d5a8 != 0) {\nlabel1:\n      if (output_file == *(file_type ***)(constant_value + DAT_0010d5a0 * 8)) goto label2;\n    }\n  }\n  else {\n    *(undefined4 *)((long)output_file + 0x1c) = 0;\n    *(undefined *)&output_file[1]->flags = 0;\n    *(undefined *)((long)&output_file[1]->flags + 1) = 0;\n    *(undefined4 *)(output_file + 5) = 1;\n    output_file[2] = output_file[1];\n    *(undefined4 *)(output_file + 7) = 0;\n    if (constant_value != 0) {\n      if (output_file == *(file_type ***)(constant_value + DAT_0010d5a0 * 8)) {\n        FUN_001030ed();\n      }\n      *output_file = input_file;\n      *(undefined4 *)((long)output_file + 0x34) = 1;\n      goto label1;\n    }\n    *output_file = input_file;\n    *(undefined4 *)((long)output_file + 0x34) = 1;\n  }\n  *(undefined8 *)((long)output_file + 0x2c) = 1;\nlabel2:\n  is_terminal = 0;\n  if (input_file != (file_type *)0x0) {\n    file_descriptor = fileno(input_file);\n    file_descriptor = isatty(file_descriptor);\n    is_terminal = (uint)(0 < file_descriptor);\n  }\n  *(uint *)((long)output_file + 0x24) = is_terminal;\n  *errno_ptr = errno_value;\n  return param_5;\n}\n\n",
            "current_name": "initialize_file_stream_001031cf",
            "entrypoint": "0x001031cf",
            "imported": false,
            "improved": true,
            "renaming": {
                "FILE": "file_type",
                "FUN_001031cf": "initialize_file_stream_001031cf",
                "LAB_00103263": "label1",
                "LAB_0010327b": "label2",
                "__errno_location": "get_errno_location",
                "_flags": "flags",
                "fileno": "get_file_descriptor",
                "iVar1": "errno_value",
                "iVar3": "file_descriptor",
                "isatty": "is_input_terminal",
                "lVar5": "constant_value",
                "param_1": "output_file",
                "param_2": "input_file",
                "piVar4": "errno_ptr",
                "uVar2": "is_terminal"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001032a8": {
            "additional_data": {
                "FUN_001032a8": {
                    "archive_cleanup": 1,
                    "extract_and_print_archive_entries": 1,
                    "extract_and_print_files": 1,
                    "extract_archive_entries": 5,
                    "extract_archived_entries": 1,
                    "extract_entries": 1,
                    "extract_entries_from_archive": 4,
                    "extract_files_from_archive": 3,
                    "extract_from_archive": 3,
                    "process_archive": 3,
                    "process_archive_entries": 6,
                    "process_archived_files": 1,
                    "process_entries": 1
                },
                "__format": {
                    "error_format": 3,
                    "error_message": 9,
                    "error_message_format": 5,
                    "error_msg_format": 1,
                    "format_string": 12,
                    "message_format": 1
                },
                "__stream": {
                    "output_stream": 1
                },
                "_stderr": {
                    "error_output": 1
                },
                "bVar3": {
                    "entry_found": 20,
                    "found": 1,
                    "found_entry": 9,
                    "has_entry": 1
                },
                "iVar5": {
                    "compare_result": 1,
                    "comparison_result": 27,
                    "filename_comparison": 2,
                    "filename_comparison_result": 1
                },
                "lVar1": {
                    "current_entry": 3,
                    "entry_address": 1,
                    "next_entry": 24,
                    "next_entry_offset": 1,
                    "next_file": 2
                },
                "lVar7": {
                    "current_address": 1,
                    "current_archive_entry": 2,
                    "current_entry": 10,
                    "current_entry_addr": 1,
                    "current_entry_address": 1,
                    "current_entry_index": 1,
                    "current_entry_list": 1,
                    "current_entry_offset": 1,
                    "current_entry_pointer": 2,
                    "current_entry_ptr": 5,
                    "current_entry_ptr_next": 1,
                    "current_file": 1,
                    "current_node_ptr": 1,
                    "entry": 2
                },
                "param_1": {
                    "archive": 14,
                    "archive_contents": 2,
                    "archive_data": 3,
                    "archive_entries": 6,
                    "entry_array": 1,
                    "entry_list": 2,
                    "file_entries": 1,
                    "file_list": 1,
                    "file_struct": 1
                },
                "param_2": {
                    "callback": 10,
                    "callback_function": 1,
                    "cleanup_callback": 1,
                    "entry_callback": 2,
                    "entry_processor": 1,
                    "extract_entry_callback": 1,
                    "extract_function": 5,
                    "file_handler": 1,
                    "file_processor": 1,
                    "print_entry": 1,
                    "process_entry": 2,
                    "process_entry_callback": 1,
                    "process_entry_function": 3,
                    "processing_function": 1
                },
                "param_3": {
                    "entries": 7,
                    "entry_list": 2,
                    "entry_names": 18,
                    "file_list": 1,
                    "requested_entries": 3
                },
                "param_4": {
                    "result": 9,
                    "return_value": 22
                },
                "plVar4": {
                    "current": 1,
                    "current_entry": 18,
                    "current_entry_list": 1,
                    "current_entry_ptr": 6,
                    "current_file": 2,
                    "current_node": 1,
                    "next_entry": 1,
                    "next_entry_ptr": 1
                },
                "plVar6": {
                    "current_entry": 1,
                    "current_entry_ptr": 2,
                    "next_current_entry": 1,
                    "next_entry": 12,
                    "next_entry_in_chain": 1,
                    "next_entry_in_list": 1,
                    "next_entry_pointer": 1,
                    "next_entry_ptr": 7,
                    "next_file": 1,
                    "next_node": 1,
                    "previous_entry": 1,
                    "temp": 1
                },
                "plVar7": {
                    "current_entry_ptr": 1
                },
                "plVar8": {
                    "prev_entry_ptr": 2,
                    "previous": 1,
                    "previous_entry": 14,
                    "previous_entry_pointer": 1,
                    "previous_entry_ptr": 9,
                    "previous_file": 1
                },
                "uVar2": {
                    "current_entry": 6,
                    "current_entry_name": 2,
                    "current_name": 1,
                    "entry": 3,
                    "entry_name": 17,
                    "file_name": 1,
                    "filename": 1
                }
            },
            "called": [
                "dcgettext",
                "fprintf",
                "filename_cmp"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\n\n\nundefined8 extract_entries_from_archive_001032a8(long *archive,code *callback,undefined8 *entry_names,undefined8 return_value)\n\n{\n  long next_entry;\n  undefined8 entry_name;\n  bool entry_found;\n  long *current_entry;\n  int comparison_result;\n  char *format_string;\n  long *next_entry;\n  long current_entry;\n  long *previous_entry;\n  \n  current_entry = archive[0x1e];\n  if (entry_names == (undefined8 *)0x0) {\n    while (current_entry != 0) {\n      next_entry = *(long *)(current_entry + 0xf0);\n      (*callback)(current_entry,0);\n      current_entry = next_entry;\n    }\n  }\n  else {\n    do {\n      entry_found = false;\n      current_entry = (long *)archive[0x1e];\n      previous_entry = archive;\n      while (next_entry = current_entry, next_entry != (long *)0x0) {\n        if (*next_entry != 0) {\n          comparison_result = filename_cmp(*entry_names);\n          if (comparison_result == 0) {\n            entry_found = true;\n            (*callback)(next_entry,previous_entry);\n          }\n        }\n        previous_entry = next_entry;\n        current_entry = (long *)next_entry[0x1e];\n      }\n      if (!entry_found) {\n        entry_name = *entry_names;\n        format_string = (char *)dcgettext(0,\"No entry %s in archive.\\n\",5);\n        fprintf(error_output,format_string,entry_name);\n      }\n      entry_names = (undefined8 *)entry_names[1];\n    } while (entry_names != (undefined8 *)0x0);\n  }\n  return return_value;\n}\n\n",
            "current_name": "extract_entries_from_archive_001032a8",
            "entrypoint": "0x001032a8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001032a8": "extract_entries_from_archive_001032a8",
                "__format": "format_string",
                "_stderr": "error_output",
                "bVar3": "entry_found",
                "iVar5": "comparison_result",
                "lVar1": "next_entry",
                "lVar7": "current_entry",
                "param_1": "archive",
                "param_2": "callback",
                "param_3": "entry_names",
                "param_4": "return_value",
                "plVar4": "current_entry",
                "plVar6": "next_entry",
                "plVar8": "previous_entry",
                "uVar2": "entry_name"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010336b": {
            "additional_data": {
                "FUN_0010336b": {
                    "print_emulation_options": 31
                },
                "param_1": {
                    "file": 5,
                    "file_ptr": 1,
                    "file_stream": 1,
                    "output_file": 24
                },
                "pcVar1": {
                    "emulation_header": 1,
                    "emulation_message": 1,
                    "emulation_option_line": 1,
                    "emulation_option_str": 1,
                    "emulation_option_text": 3,
                    "emulation_options": 5,
                    "emulation_options_message": 2,
                    "emulation_options_string": 5,
                    "emulation_options_text": 2,
                    "emulation_string": 1,
                    "emulation_text": 3,
                    "option_string": 2,
                    "option_text": 2,
                    "options_string": 1,
                    "options_text": 1
                }
            },
            "called": [
                "dcgettext",
                "fprintf"
            ],
            "calling": [
                "FUN_0010342d"
            ],
            "code": "\nvoid print_emulation_options_0010336b(FILE *output_file)\n\n{\n  char *emulation_options_string;\n  \n  emulation_options_string = (char *)dcgettext(0,\" emulation options: \\n\",5);\n  fprintf(output_file,emulation_options_string);\n  emulation_options_string = (char *)dcgettext(0,\"  No emulation specific options\\n\",5);\n  fprintf(output_file,emulation_options_string);\n  return;\n}\n\n",
            "current_name": "print_emulation_options_0010336b",
            "entrypoint": "0x0010336b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010336b": "print_emulation_options_0010336b",
                "param_1": "output_file",
                "pcVar1": "emulation_options_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001033b0": {
            "additional_data": {
                "FUN_001033b0": {
                    "print_and_exit": 10,
                    "print_error_and_exit": 1,
                    "print_error_message": 1,
                    "print_error_message_and_exit": 19
                },
                "__format": {
                    "format": 1
                },
                "__status": {
                    "status": 1
                },
                "__stream": {
                    "stream": 1
                },
                "_stderr": {
                    "error_output": 1,
                    "error_output_stream": 1,
                    "error_stream": 3,
                    "file_stream": 1
                },
                "param_1": {
                    "err_msg": 1,
                    "error_message": 23,
                    "message": 7
                }
            },
            "called": [
                "fprintf",
                "exit"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_001033d6",
                "FUN_00103df9"
            ],
            "code": "\n\n\nvoid print_error_message_and_exit_001033b0(undefined8 error_message)\n\n{\n  fprintf(error_stream,\"%s\\n\",error_message);\n                    \n  exit(2);\n}\n\n",
            "current_name": "print_error_message_and_exit_001033b0",
            "entrypoint": "0x001033b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001033b0": "print_error_message_and_exit_001033b0",
                "_stderr": "error_stream",
                "param_1": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001033d6": {
            "additional_data": {
                "FUN_001031cf": {
                    "copy_file_stream": 1
                },
                "FUN_001033b0": {
                    "print_memory_error": 2
                },
                "FUN_001033d6": {
                    "create_buffer": 22,
                    "create_buffer_and_allocate_memory": 1,
                    "create_buffer_and_initialize": 1,
                    "create_buffer_from_file": 1,
                    "create_buffer_with_dynamic_memory": 1,
                    "create_buffer_with_memory": 1,
                    "create_dynamic_buffer": 1,
                    "yy_create_buffer": 3
                },
                "LAB_001033f7": {
                    "memory_check_label": 1,
                    "retry_allocation": 1
                },
                "auVar3": {
                    "output": 1,
                    "result": 18,
                    "result_buffer": 1,
                    "return_data": 1,
                    "return_val": 1,
                    "return_value": 9
                },
                "malloc": {
                    "allocate_memory": 2
                },
                "param_1": {
                    "buffer_param": 1,
                    "file": 1,
                    "file1": 3,
                    "file1_ptr": 1,
                    "file_1": 3,
                    "file_contents": 1,
                    "file_descriptor": 1,
                    "file_pointer": 1,
                    "file_pointer_1": 1,
                    "file_ptr": 8,
                    "file_ptr1": 2,
                    "file_stream": 2,
                    "input_file": 2,
                    "param1": 1,
                    "param_1": 1,
                    "param_file_input": 1,
                    "source_file": 1
                },
                "param_2": {
                    "buffer": 1,
                    "buffer_ptr": 1,
                    "dest_file": 1,
                    "file2": 3,
                    "file2_ptr": 1,
                    "file_2": 3,
                    "file_param": 1,
                    "file_pointer": 1,
                    "file_pointer_2": 1,
                    "file_ptr2": 2,
                    "file_size": 1,
                    "offset": 1,
                    "output_file": 2,
                    "param2": 2,
                    "param_2": 7,
                    "param_file_output": 1,
                    "param_ptr": 1,
                    "unused_param": 1
                },
                "param_3": {
                    "allocate_size": 1,
                    "file_pointer_3": 1,
                    "file_ptr3": 1,
                    "file_size": 1,
                    "param3": 6,
                    "param_3": 13,
                    "param_size": 1,
                    "param_unknown1": 1,
                    "param_unused1": 1,
                    "size": 1,
                    "unused_param": 3,
                    "unused_param_1": 1
                },
                "param_4": {
                    "buffer_param": 1,
                    "buffer_size": 2,
                    "file_pointer_4": 1,
                    "file_ptr4": 1,
                    "flag": 1,
                    "param4": 6,
                    "param_4": 12,
                    "param_flag": 1,
                    "param_unknown2": 1,
                    "param_unused2": 1,
                    "result_param": 1,
                    "unknown_var": 1,
                    "unused_param_2": 1,
                    "var4": 1
                },
                "pvVar1": {
                    "buffer": 25,
                    "buffer1": 1,
                    "buffer_ptr": 5
                },
                "pvVar2": {
                    "additional_buffer": 1,
                    "alloc_ptr": 1,
                    "allocated_buffer": 2,
                    "allocation": 1,
                    "buffer2": 8,
                    "buffer_data": 1,
                    "buffer_data_ptr": 1,
                    "buffer_ptr": 1,
                    "buffer_ptr_2": 1,
                    "data": 3,
                    "data_buffer": 2,
                    "data_ptr": 1,
                    "dynamic_buffer": 1,
                    "dynamic_memory": 3,
                    "dynamic_memory_ptr": 1,
                    "memory_ptr": 1,
                    "sub_buffer": 1,
                    "temp_buffer": 1
                }
            },
            "called": [
                "FUN_001031cf",
                "malloc",
                "FUN_001033b0"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nundefined  [16]\nyy_create_buffer_001033d6(undefined8 file_ptr,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  void *buffer;\n  void *buffer2;\n  undefined result [16];\n  \n  buffer = malloc(0x40);\n  if (buffer != (void *)0x0) goto memory_check_label;\n  do {\n    buffer = (void *)FUN_001033b0(\"out of dynamic memory in yy_create_buffer_001033d6()\");\nmemory_check_label:\n    *(undefined4 *)((long)buffer + 0x18) = 0x4000;\n    buffer2 = malloc(0x4002);\n    *(void **)((long)buffer + 8) = buffer2;\n  } while (buffer2 == (void *)0x0);\n  *(undefined4 *)((long)buffer + 0x20) = 1;\n  FUN_001031cf(buffer,file_ptr);\n  result._8_8_ = param_4;\n  result._0_8_ = buffer;\n  return result;\n}\n\n",
            "current_name": "yy_create_buffer_001033d6",
            "entrypoint": "0x001033d6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001033d6": "yy_create_buffer_001033d6",
                "LAB_001033f7": "memory_check_label",
                "auVar3": "result",
                "malloc": "allocate_memory",
                "param_1": "file_ptr",
                "pvVar1": "buffer",
                "pvVar2": "buffer2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010342d": {
            "additional_data": {
                "DAT_0010d660": {
                    "program_name": 2
                },
                "FUN_0010266f": {
                    "display_version": 1,
                    "print_archive_version": 1,
                    "print_help": 1,
                    "print_link": 1,
                    "print_version_info": 1
                },
                "FUN_0010336b": {
                    "print_disclaimer": 1,
                    "print_help_message": 1,
                    "print_new_line": 1,
                    "print_options": 1
                },
                "FUN_0010342d": {
                    "display_archive_usage": 1,
                    "display_help_message": 1,
                    "display_usage": 2,
                    "print_archive_help": 1,
                    "print_archive_usage": 1,
                    "print_options_help": 1,
                    "print_usage": 20,
                    "print_usage_information": 1,
                    "print_usage_message": 3
                },
                "F_0010336b": {
                    "print_end_message": 1
                },
                "__format": {
                    "format_string": 2
                },
                "__stream": {
                    "output_stream": 23,
                    "standard_output": 1,
                    "stream": 7
                },
                "dcgettext": {
                    "get_message": 2,
                    "get_translation": 1,
                    "translate": 1
                },
                "fprintf": {
                    "print": 1,
                    "print_formatted": 2,
                    "print_formatted_message": 1,
                    "print_message": 1
                },
                "param_1": {
                    "flag": 3,
                    "is_standard_output": 1,
                    "is_stdout": 1,
                    "is_verbose": 10,
                    "mode": 1,
                    "output_mode": 3,
                    "output_to_file": 3,
                    "output_to_stdout": 5,
                    "output_type": 1,
                    "param": 1,
                    "param_flag": 1,
                    "print_to_stdout": 1
                },
                "pcVar2": {
                    "localized_message": 1,
                    "localized_string": 3,
                    "localized_text": 1,
                    "message": 16,
                    "print_string": 1,
                    "string_to_print": 1,
                    "text": 6,
                    "text_ptr": 1,
                    "translation": 1
                },
                "uVar1": {
                    "archive_file": 2,
                    "archive_file_name": 2,
                    "archive_file_path": 1,
                    "archive_name": 1,
                    "arg": 1,
                    "buffer": 1,
                    "file_message": 1,
                    "file_name": 1,
                    "format_string": 4,
                    "format_string1": 1,
                    "locale_string": 1,
                    "message": 1,
                    "usage_var": 1,
                    "version": 5,
                    "version_num": 1,
                    "version_number": 6
                },
                "xexit": {
                    "exit_program": 4,
                    "terminate_program": 1
                }
            },
            "called": [
                "FUN_0010336b",
                "dcgettext",
                "fprintf",
                "xexit",
                "FUN_0010266f"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid print_usage_message_0010342d(uint is_verbose)\n\n{\n  undefined8 version_number;\n  char *message;\n  FILE *output_stream;\n  \n  message = (char *)dcgettext(0,\n                             \"Usage: %s [emulation options] [-]{dmpqrstx}[abcDfilMNoOPsSTuvV] [--plugin <name>] [member-name] [count] archive-file file...\\n\"\n                             ,5);\n  output_stream = _stderr;\n  if (is_verbose != 0) {\n    output_stream = _stdout;\n  }\n  fprintf(output_stream,message,DAT_0010d660);\n  version_number = DAT_0010d660;\n  message = (char *)dcgettext(0,\"       %s -M [<mri-script]\\n\",5);\n  fprintf(output_stream,message,version_number);\n  message = (char *)dcgettext(0,\" commands:\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  d            - delete file(s) from the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  m[ab]        - move file(s) in the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  p            - print file(s) found in the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  q[f]         - quick append file(s) to the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\n                             \"  r[ab][f][u]  - replace existing or insert new file(s) into the archive\\n\"\n                             ,5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  s            - act as ranlib\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  t[O][v]      - display contents of the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  x[o]         - extract file(s) from the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\" command specific modifiers:\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [a]          - put file(s) after [member-name]\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [b]          - put file(s) before [member-name] (same as [i])\\n\",5\n                            );\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [D]          - use zero for timestamps and uids/gids (default)\\n\",\n                             5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [U]          - use actual timestamps and uids/gids\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [N]          - use instance [count] of name\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [f]          - truncate inserted file names\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [P]          - use full path names when matching\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [o]          - preserve original dates\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [O]          - display offsets of files in the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\n                             \"  [u]          - only replace files that are newer than current archive contents\\n\"\n                             ,5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\" generic modifiers:\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [c]          - do not warn if the library had to be created\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [s]          - create an archive index (cf. ranlib)\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [l <text> ]  - specify the dependencies of this library\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [S]          - do not build a symbol table\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [T]          - deprecated, use --thin instead\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [v]          - be verbose\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [V]          - display the version number\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  @<file>      - read options from <file>\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  --target=BFDNAME - specify the target object format as BFDNAME\\n\",\n                             5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\n                             \"  --output=DIRNAME - specify the output directory for extraction operations\\n\"\n                             ,5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\n                             \"  --record-libdeps=<text> - specify the dependencies of this library\\n\"\n                             ,5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  --thin       - make a thin archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\" optional:\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  --plugin <p> - load the specified plugin\\n\",5);\n  fprintf(output_stream,message);\n  FUN_0010336b(output_stream);\n  FUN_0010266f(DAT_0010d660,output_stream);\n  if (is_verbose != 0) {\n    message = (char *)dcgettext(0,\"Report bugs to %s\\n\",5);\n    fprintf(output_stream,message,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  xexit(is_verbose ^ 1);\n}\n\n",
            "current_name": "print_usage_message_0010342d",
            "entrypoint": "0x0010342d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010342d": "print_usage_message_0010342d",
                "__stream": "output_stream",
                "dcgettext": "get_message",
                "fprintf": "print_formatted",
                "param_1": "is_verbose",
                "pcVar2": "message",
                "uVar1": "version_number",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010394a": {
            "additional_data": {
                "FIR_0010394a": {
                    "print_usage": 1
                },
                "FUN_0010266f": {
                    "print_additional_info": 3,
                    "print_version": 1,
                    "print_version_info": 12,
                    "print_version_information": 3
                },
                "FUN_0010394a": {
                    "display_usage_message": 1,
                    "print_archive_usage": 1,
                    "print_usage": 20,
                    "print_usage_and_exit": 4,
                    "print_usage_info": 1,
                    "print_usage_message": 3
                },
                "__format": {
                    "format_string": 1
                },
                "__stream": {
                    "error_file": 1,
                    "error_message": 1,
                    "file": 1,
                    "output": 1,
                    "output_stream": 19,
                    "stream": 8
                },
                "_stderr": {
                    "error_stream": 3,
                    "standard_error": 3,
                    "standard_error_stream": 2,
                    "stderr": 1
                },
                "_stdout": {
                    "standard_output": 5,
                    "standard_output_stream": 2,
                    "standard_stream": 1,
                    "stdout": 1
                },
                "dcgettext": {
                    "get_internationalized_text": 1,
                    "get_locale_string": 1,
                    "get_locale_text": 1,
                    "get_localized_message": 1,
                    "get_localized_text": 3,
                    "get_message": 3,
                    "get_message_translation": 1,
                    "get_translated_message": 1,
                    "get_translated_string": 2,
                    "get_translated_text": 1,
                    "gettext": 2,
                    "translate": 1,
                    "translate_text": 2
                },
                "fprintf": {
                    "print_formatted": 8,
                    "print_formatted_message": 4,
                    "print_formatted_text": 1,
                    "print_message": 2,
                    "print_text": 1,
                    "print_to_stream": 4
                },
                "param_1": {
                    "archive_options": 1,
                    "flag": 2,
                    "is_archive": 1,
                    "is_error": 1,
                    "is_output_to_stdout": 1,
                    "is_verbose": 7,
                    "option": 6,
                    "option_flag": 5,
                    "options": 4,
                    "print_options": 1,
                    "verbosity_level": 2
                },
                "param_2": {
                    "output_stream2": 1
                },
                "pcVar2": {
                    "localized_string": 3,
                    "message": 21,
                    "message_text": 1,
                    "report_bug_message": 1,
                    "string": 1,
                    "text": 4
                },
                "uVar1": {
                    "data": 2,
                    "default_string": 1,
                    "message": 1,
                    "program_name": 6,
                    "usage": 3,
                    "usage_message": 2,
                    "usage_string": 13,
                    "version": 2,
                    "version_info": 1
                },
                "xexit": {
                    "exit_program": 12,
                    "exit_with_error": 1,
                    "terminate_program": 2
                }
            },
            "called": [
                "dcgettext",
                "fprintf",
                "xexit",
                "FUN_0010266f"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid print_usage_and_exit_0010394a(uint is_verbose)\n\n{\n  undefined8 usage_string;\n  char *message;\n  FILE *output_stream;\n  \n  usage_string = DAT_0010d660;\n  output_stream = error_stream;\n  if (is_verbose != 0) {\n    output_stream = standard_output;\n  }\n  message = (char *)dcgettext(0,\"Usage: %s [options] archive\\n\",5);\n  fprintf(output_stream,message,usage_string);\n  message = (char *)dcgettext(0,\" Generate an index to speed access to archives\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\n                             \" The options are:\\n  @<file>                      Read options from <file>\\n\"\n                             ,5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  --plugin <name>              Load the specified plugin\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\n                             \"  -D                           Use zero for symbol map timestamp (default)\\n  -U                           Use an actual symbol map timestamp\\n\"\n                             ,5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\n                             \"  -t                           Update the archive\\'s symbol map timestamp\\n  -h --help                    Print this help message\\n  -v --version                 Print version information\\n\"\n                             ,5);\n  fprintf(output_stream,message);\n  FUN_0010266f(DAT_0010d660,output_stream);\n  if (is_verbose != 0) {\n    message = (char *)dcgettext(0,\"Report bugs to %s\\n\",5);\n    fprintf(output_stream,message,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  xexit(is_verbose ^ 1);\n}\n\n",
            "current_name": "print_usage_and_exit_0010394a",
            "entrypoint": "0x0010394a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010394a": "print_usage_and_exit_0010394a",
                "__stream": "output_stream",
                "_stderr": "error_stream",
                "_stdout": "standard_output",
                "dcgettext": "get_message",
                "fprintf": "print_formatted",
                "param_1": "is_verbose",
                "pcVar2": "message",
                "uVar1": "usage_string",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103a78": {
            "additional_data": {
                "DAT_0010d60c": {
                    "enable_debug_prints": 1,
                    "print_enabled": 1,
                    "print_flag": 1
                },
                "FUN_00103a78": {
                    "extract_and_print": 1,
                    "extract_and_print_archive": 10,
                    "extract_and_print_archive_content": 1,
                    "extract_and_print_archive_contents": 3,
                    "extract_and_print_archive_file": 1,
                    "extract_and_print_archives": 1,
                    "extract_archive": 5,
                    "extract_archive_data": 3,
                    "extract_archives": 1,
                    "process_archive": 3,
                    "reverse_and_print_archive": 1
                },
                "__ptr": {
                    "allocated_memory": 1,
                    "archive_buffer": 2,
                    "buffer": 28
                },
                "auStack_b8": {
                    "auxiliary_stack": 3,
                    "buffer_overflow": 1,
                    "local_buffer": 1,
                    "stack_buffer": 18,
                    "temp_buffer": 2,
                    "temp_stack": 1,
                    "temporary_buffer": 1,
                    "temporary_stack": 3
                },
                "iVar1": {
                    "result": 24,
                    "status": 4
                },
                "local_88": {
                    "archive_size": 5,
                    "buffer_size": 1,
                    "expected_archive_size": 1,
                    "expected_bytes": 2,
                    "file_size": 1,
                    "max_buffer_size": 2,
                    "max_bytes_to_read": 4,
                    "max_file_size": 1,
                    "max_read_size": 1,
                    "remaining_bytes": 1,
                    "requested_bytes": 1,
                    "required_bytes": 2,
                    "seek_position": 1,
                    "target_bytes": 1,
                    "target_size": 2,
                    "temp_value": 1,
                    "total_bytes_read": 1,
                    "total_bytes_to_read": 1,
                    "total_bytes_to_write": 1,
                    "total_bytes_written": 1
                },
                "param_1": {
                    "archive": 15,
                    "archive_data": 1,
                    "archive_file": 2,
                    "archive_file_path": 1,
                    "archive_info": 1,
                    "archived_files": 1,
                    "arguments": 2,
                    "input": 1,
                    "input_archive": 1,
                    "input_params": 3,
                    "parameters": 1
                },
                "pcVar7": {
                    "error_desc": 1,
                    "error_description": 1,
                    "error_message": 7,
                    "error_msg": 2,
                    "error_msg_fmt": 1,
                    "error_msg_template": 1,
                    "error_string": 18
                },
                "piVar6": {
                    "errno_location": 11,
                    "errno_location_ptr": 1,
                    "errno_ptr": 4,
                    "error_code_ptr": 1,
                    "error_num": 1,
                    "error_num_ptr": 2,
                    "error_number": 10,
                    "error_number_pointer": 1
                },
                "puVar2": {
                    "archive_file_ptr2": 1,
                    "archive_optional": 1,
                    "archive_param": 1,
                    "archive_ptr": 4,
                    "function": 1,
                    "function_pointer": 2,
                    "function_ptr": 1,
                    "optional_archive": 1,
                    "optional_input_params": 1,
                    "optional_param": 2,
                    "optional_params": 1,
                    "param": 1,
                    "pointer": 1,
                    "ptr": 1,
                    "ptr_or_parameters": 1,
                    "ptr_to_archive": 1,
                    "secondary_archive": 4,
                    "secondary_argument": 1,
                    "secondary_param": 1,
                    "temp": 2,
                    "temp_ptr": 2
                },
                "sVar5": {
                    "bytes_written": 27,
                    "write_result": 2,
                    "write_size": 2
                },
                "uVar3": {
                    "bytes_read": 25,
                    "bytes_read_this_iteration": 1,
                    "read_size": 3
                },
                "uVar4": {
                    "err_msg": 1,
                    "error_message": 22,
                    "error_msg": 2,
                    "error_string": 2,
                    "standard_error_message": 1,
                    "translated_error_message": 1
                },
                "unaff_R13": {
                    "bytes_processed": 2,
                    "bytes_read": 3,
                    "total_bytes_read": 22,
                    "total_bytes_written": 1
                },
                "unaff_R14": {
                    "archive_file_size": 1,
                    "archive_filesize": 1,
                    "archive_size": 20,
                    "file_size": 5,
                    "total_bytes_to_read": 1
                },
                "unaff_RBP": {
                    "buffer_size": 4,
                    "bytes_remaining": 2,
                    "remaining_buffer_size": 2,
                    "remaining_bytes": 20,
                    "remaining_bytes_in_buffer": 1
                }
            },
            "called": [
                "fwrite",
                "xmalloc",
                "dcgettext",
                "printf",
                "bfd_seek",
                "bfd_bread",
                "strerror",
                "__errno_location",
                "FUN_00107690",
                "free"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid extract_and_print_archive_contents_00103a78(undefined8 *archive)\n\n{\n  int result;\n  void *buffer;\n  undefined8 *secondary_archive;\n  ulong bytes_read;\n  undefined8 error_message;\n  size_t bytes_written;\n  int *errno_location;\n  size_t remaining_bytes;\n  char *error_string;\n  ulong total_bytes_read;\n  ulong archive_size;\n  undefined stack_buffer [48];\n  ulong archive_size;\n  \n  buffer = (void *)xmalloc(0x2000);\n  secondary_archive = (undefined8 *)archive[0x1d];\n  if ((undefined8 *)archive[0x1d] == (undefined8 *)0x0) {\n    secondary_archive = archive;\n  }\n  result = (**(code **)(secondary_archive[1] + 0x1e8))(archive,stack_buffer);\n  if (result == 0) {\n    if (DAT_0010d60c != 0) {\n      printf(\"\\n<%s>\\n\\n\",*archive);\n    }\n    total_bytes_read = 0;\n    bfd_seek(archive,0,0);\n    goto LAB_00103afd;\n  }\n  archive = (undefined8 *)*archive;\n  error_string = \"internal stat error on %s\";\n  do {\n    error_message = dcgettext(0,error_string,5);\n    FUN_00107690(error_message,archive);\n    archive_size = archive_size;\n    do {\n      bytes_written = fwrite(buffer,1,remaining_bytes,_stdout);\n      if (bytes_written != remaining_bytes) {\n        errno_location = __errno_location();\n        error_string = strerror(*errno_location);\n        FUN_00107690(\"stdout: %s\",error_string);\nLAB_00103b91:\n        free(buffer);\n        return;\n      }\n      total_bytes_read = total_bytes_read + bytes_written;\nLAB_00103afd:\n      if (archive_size <= total_bytes_read) goto LAB_00103b91;\n      remaining_bytes = archive_size - total_bytes_read;\n      if (0x2000 < remaining_bytes) {\n        remaining_bytes = 0x2000;\n      }\n      bytes_read = bfd_bread(buffer,remaining_bytes,archive);\n    } while (remaining_bytes == bytes_read);\n    error_string = \"%s is not a valid archive\";\n    archive = *(undefined8 **)archive[0x1d];\n    archive_size = archive_size;\n  } while( true );\n}\n\n",
            "current_name": "extract_and_print_archive_contents_00103a78",
            "entrypoint": "0x00103a78",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103a78": "extract_and_print_archive_contents_00103a78",
                "__ptr": "buffer",
                "auStack_b8": "stack_buffer",
                "iVar1": "result",
                "local_88": "archive_size",
                "param_1": "archive",
                "pcVar7": "error_string",
                "piVar6": "errno_location",
                "puVar2": "secondary_archive",
                "sVar5": "bytes_written",
                "uVar3": "bytes_read",
                "uVar4": "error_message",
                "unaff_R13": "total_bytes_read",
                "unaff_R14": "archive_size",
                "unaff_RBP": "remaining_bytes"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103ba8": {
            "additional_data": {
                "FUN_00103ba8": {
                    "check_and_print": 1,
                    "check_and_print_ar": 13,
                    "check_and_print_ar_status": 2,
                    "check_and_print_message": 1,
                    "check_ar_and_print_prompt": 1,
                    "check_ar_signal": 1,
                    "check_ar_status": 3,
                    "check_ar_value": 2,
                    "check_if_ar_greater_than_zero": 2,
                    "output_ar_when_room_not_empty": 1,
                    "print_ar_if_not_empty": 1,
                    "print_ar_or_return": 1,
                    "print_ar_prompt": 1,
                    "print_message_if_ar_is_greater_than_zero": 1
                },
                "_DAT_0010d608": {
                    "ar_flag": 1,
                    "ar_status": 1,
                    "ar_value": 1,
                    "flag": 3,
                    "initialized": 1,
                    "is_ar_set": 1,
                    "message_flag": 1,
                    "status": 2
                },
                "__format": {
                    "format": 2,
                    "format_string": 14,
                    "message_format": 1
                },
                "__stream": {
                    "output_stream": 16,
                    "stream": 2
                },
                "fflush": {
                    "refresh_output": 1
                },
                "printf": {
                    "print_message": 1
                }
            },
            "called": [
                "printf",
                "fflush"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\n\n\nvoid check_and_print_ar_status_00103ba8(void)\n\n{\n  if (_DAT_0010d608 != 0) {\n    printf(\"AR >\");\n    fflush(_stdout);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "check_and_print_ar_status_00103ba8",
            "entrypoint": "0x00103ba8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103ba8": "check_and_print_ar_status_00103ba8",
                "fflush": "refresh_output",
                "printf": "print_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103bd1": {
            "additional_data": {
                "DAT_0010d660": {
                    "default_format": 1
                },
                "D__0010d660": {
                    "default_format": 1
                },
                "FUN_00103bd1": {
                    "print_matched_formats": 1,
                    "print_matching_formats": 30
                },
                "__c": {
                    "character": 3
                },
                "__format": {
                    "error_format": 1,
                    "format_message": 2,
                    "format_string": 26,
                    "message_format": 1,
                    "translated_format": 1
                },
                "__ptr": {
                    "pointer": 1
                },
                "__stream": {
                    "output_stream": 5
                },
                "_stderr": {
                    "error_output": 2,
                    "standard_error": 7,
                    "standard_error_file": 1,
                    "stderr": 2,
                    "stderr_stream": 2
                },
                "_stdout": {
                    "standard_output": 8,
                    "standard_output_file": 1,
                    "stdout": 2,
                    "stdout_stream": 2
                },
                "dcgettext": {
                    "get_translated_string": 1,
                    "get_translated_text": 1
                },
                "fflush": {
                    "flush_output": 1
                },
                "fputc": {
                    "write_character": 1
                },
                "free": {
                    "deallocate_memory": 1
                },
                "param_1": {
                    "format_list": 2,
                    "format_strings": 12,
                    "formats": 13,
                    "formats_array": 1,
                    "matching_formats": 1,
                    "param_list": 1
                },
                "plVar2": {
                    "current_format": 22,
                    "current_format_string": 3,
                    "current_param": 1,
                    "current_string": 3,
                    "pointer": 1,
                    "ptr": 1
                },
                "uVar1": {
                    "current_locale": 1,
                    "data": 2,
                    "data_1": 1,
                    "data_value": 1,
                    "format": 1,
                    "matching_formats": 4,
                    "matching_formats_caption": 1,
                    "matching_formats_msg": 1,
                    "user_data": 1
                }
            },
            "called": [
                "dcgettext",
                "fprintf",
                "fputc",
                "fflush",
                "free"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid print_matching_formats_00103bd1(long *formats)\n\n{\n  undefined8 matching_formats;\n  char *format_string;\n  long *current_format;\n  \n  fflush(standard_output);\n  matching_formats = DAT_0010d660;\n  format_string = (char *)dcgettext(0,\"%s: Matching formats:\",5);\n  fprintf(standard_error,format_string,matching_formats);\n  for (current_format = formats; *current_format != 0; current_format = current_format + 1) {\n    fprintf(standard_error,\" %s\");\n  }\n  free(formats);\n  fputc(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_matching_formats_00103bd1",
            "entrypoint": "0x00103bd1",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103bd1": "print_matching_formats_00103bd1",
                "__format": "format_string",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "dcgettext": "get_translated_text",
                "fflush": "flush_output",
                "fputc": "write_character",
                "free": "deallocate_memory",
                "param_1": "formats",
                "plVar2": "current_format",
                "uVar1": "matching_formats"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103c60": {
            "additional_data": {
                "DAT_0010d558": {
                    "output_archive": 1
                },
                "FUN_0010315d": {
                    "clean_up": 1,
                    "cleanup": 1,
                    "cleanup_and_exit": 1,
                    "cleanup_function": 1,
                    "perform_cleanup": 1
                },
                "FUN_00103c60": {
                    "archive_operation": 1,
                    "create_output_archive": 2,
                    "extract_and_check_archives": 1,
                    "extract_and_convert_archives": 1,
                    "extract_and_process_archived_files": 1,
                    "extract_archive": 4,
                    "extract_archive_files": 1,
                    "extract_archived_file": 1,
                    "extract_archives": 1,
                    "extract_plugin_file": 1,
                    "open_and_modify_archives": 1,
                    "open_archive_file": 1,
                    "process_archive": 2,
                    "process_archive_files": 1,
                    "process_archived_files": 1,
                    "process_archives": 2,
                    "process_file": 1,
                    "process_files": 1,
                    "reverse_extracted_code": 1
                },
                "FUN_001057a0": {
                    "extract_archives": 1,
                    "initialize_function": 1,
                    "initialize_variables": 1,
                    "prepare_archive": 1
                },
                "PARAM_0010d560": {
                    "temp_file_path": 1
                },
                "__errno_location": {
                    "get_errno_location": 1,
                    "get_error_number": 1
                },
                "__errnum": {
                    "error_number": 1
                },
                "__format": {
                    "format": 1
                },
                "__stream": {
                    "stream": 1
                },
                "_fdopenw": {
                    "open_file_descriptor": 1
                },
                "_openr": {
                    "open_archive_for_reading": 1
                },
                "_openr_next_archived_file": {
                    "get_next_archived_file": 1
                },
                "_stderr": {
                    "error_output_stream": 1,
                    "standard_error": 6,
                    "standard_error_output": 1,
                    "standard_error_stream": 2,
                    "std_error": 1,
                    "stderr": 3,
                    "stderr_stream": 1
                },
                "bfd_check_format": {
                    "check_archive_format": 1,
                    "check_file_format": 1,
                    "check_format": 2,
                    "check_input_format": 1
                },
                "bfd_fdopenw": {
                    "open_output_archive": 4
                },
                "bfd_openr": {
                    "open_input_archive": 4
                },
                "bfd_openr_next_archived_file": {
                    "get_next_archived_file": 2,
                    "open_next_archived_file": 2
                },
                "bfd_set_format": {
                    "set_archive_format": 1,
                    "set_file_format": 1,
                    "set_format": 2,
                    "set_output_format": 1
                },
                "cVar1": {
                    "check_format_result": 2,
                    "check_result": 2,
                    "checked_format_result": 1,
                    "format_check": 5,
                    "format_check_result": 6,
                    "format_valid": 4,
                    "is_archive": 1,
                    "is_archive_check_success": 1,
                    "is_archive_file": 1,
                    "is_format_valid": 1,
                    "is_valid_archive": 1,
                    "is_valid_format": 2
                },
                "dcgettext": {
                    "get_text": 2,
                    "gettext": 1
                },
                "fprintf": {
                    "print_error": 4,
                    "print_error_message": 3
                },
                "lVar4": {
                    "archive_file": 1,
                    "input_archive": 20,
                    "input_archive_fd": 1,
                    "input_archive_file": 1,
                    "input_archive_handle": 3,
                    "input_archive_ptr": 2,
                    "input_bfd": 1,
                    "input_file": 2
                },
                "lVar5": {
                    "archived_file": 26,
                    "archived_file_handle": 2,
                    "archived_file_ptr": 1,
                    "file_pointer": 1,
                    "file_ptr": 1
                },
                "param_1": {
                    "archive_file_path": 1,
                    "archive_path": 5,
                    "file_path": 1,
                    "filename": 2,
                    "input_archive": 4,
                    "input_archive_file": 1,
                    "input_archive_path": 7,
                    "input_file": 3,
                    "input_file_name": 1,
                    "input_file_path": 3,
                    "output_archive_path": 1,
                    "output_filename": 1,
                    "source_file": 1
                },
                "param_2": {
                    "archive_mode": 1,
                    "create_output_archive": 1,
                    "flag": 11,
                    "format_option": 1,
                    "has_input_archive": 1,
                    "is_in_bitcode_format": 1,
                    "is_output": 1,
                    "is_output_archive": 2,
                    "is_plugin": 8,
                    "is_plugin_archive": 1,
                    "is_plugin_file": 1,
                    "modify_flag": 1,
                    "reverse_flag": 1
                },
                "pcVar3": {
                    "error_format": 1,
                    "error_message": 29,
                    "error_msg": 1
                },
                "piVar2": {
                    "errno": 1,
                    "errno_location": 12,
                    "errno_location_result": 1,
                    "errno_pointer": 1,
                    "errno_ptr": 3,
                    "errnum_ptr": 1,
                    "error_code": 2,
                    "error_code_ptr": 1,
                    "error_location": 2,
                    "error_num": 2,
                    "error_num_ptr": 1,
                    "error_number": 2,
                    "error_number_ptr": 2
                },
                "plVar7": {
                    "archived_file_handle_array": 1,
                    "archived_file_list": 3,
                    "archived_file_pointer": 4,
                    "archived_file_ptr": 5,
                    "archived_file_ptr_array": 1,
                    "archived_files": 2,
                    "archived_files_array": 3,
                    "archived_files_list": 1,
                    "archived_files_ptrs": 1,
                    "current_file": 2,
                    "current_file_handle": 1,
                    "file_list": 1,
                    "file_list_ptr": 1,
                    "file_pointer": 1,
                    "file_ptr": 1,
                    "output_archive_handle": 1,
                    "pointer_to_archived_file": 1,
                    "pointer_to_current_file": 1
                },
                "strerror": {
                    "get_error_message": 4,
                    "get_error_string": 1
                },
                "uVar6": {
                    "error_category": 1,
                    "error_code": 1,
                    "error_message": 2,
                    "error_text": 1,
                    "internal_error": 1,
                    "message": 1,
                    "plugin_name": 1,
                    "progname": 1,
                    "program_name": 19,
                    "temp_file": 1,
                    "temporary_file": 2
                },
                "xstrdup": {
                    "duplicate_string": 5
                }
            },
            "called": [
                "dcgettext",
                "bfd_fdopenw",
                "fprintf",
                "bfd_openr_next_archived_file",
                "strerror",
                "xstrdup",
                "bfd_set_format",
                "bfd_openr",
                "__errno_location",
                "FUN_001057a0",
                "bfd_check_format",
                "FUN_0010315d"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\n\n\nvoid extract_archive_files_00103c60(char *input_archive_path,int flag)\n\n{\n  char format_check_result;\n  int *errno_location;\n  char *error_message;\n  long input_archive;\n  long archived_file;\n  undefined8 program_name;\n  long *archived_file_ptr;\n  \n  DAT_0010d570 = xstrdup();\n  DAT_0010d560 = (char *)FUN_001057a0(DAT_0010d570,&DAT_0010d568);\n  if (DAT_0010d560 == (char *)0x0) {\n    errno_location = __errno_location();\n    input_archive_path = strerror(*errno_location);\n    program_name = DAT_0010d660;\n    error_message = (char *)dcgettext(0,\"%s: Can\\'t open temporary file (%s)\\n\",5);\n  }\n  else {\n    DAT_0010d558 = bfd_fdopenw(DAT_0010d560,0,DAT_0010d568);\n    if (DAT_0010d558 == 0) {\n      error_message = \"%s: Can\\'t open output archive %s\\n\";\n      input_archive_path = DAT_0010d560;\n    }\n    else {\n      if (flag != 0) {\nLAB_00103d02:\n        bfd_set_format(DAT_0010d558,2);\n        *(byte *)(DAT_0010d558 + 0x49) = *(byte *)(DAT_0010d558 + 0x49) & 0xe7 | 8;\n        return;\n      }\n      input_archive = bfd_openr(input_archive_path,\"plugin\");\n      if (input_archive == 0) {\n        error_message = \"%s: Can\\'t open input archive %s\\n\";\n      }\n      else {\n        format_check_result = bfd_check_format(input_archive,2);\n        if (format_check_result != '\\0') {\n          archived_file_ptr = (long *)(DAT_0010d558 + 0xf8);\n          for (archived_file = bfd_openr_next_archived_file(input_archive,0); archived_file != 0;\n              archived_file = get_next_archived_file(input_archive,archived_file)) {\n            *archived_file_ptr = archived_file;\n            archived_file_ptr = (long *)(archived_file + 0xf0);\n          }\n          goto LAB_00103d02;\n        }\n        error_message = \"%s: file %s is not an archive\\n\";\n      }\n    }\n    program_name = DAT_0010d660;\n    error_message = (char *)dcgettext(0,error_message,5);\n  }\n  fprintf(standard_error,error_message,program_name,input_archive_path);\n  FUN_0010315d();\n  return;\n}\n\n",
            "current_name": "extract_archive_files_00103c60",
            "entrypoint": "0x00103c60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103c60": "extract_archive_files_00103c60",
                "__errno_location": "get_errno_location",
                "_fdopenw": "open_file_descriptor",
                "_openr": "open_archive_for_reading",
                "_openr_next_archived_file": "get_next_archived_file",
                "_stderr": "standard_error",
                "bfd_check_format": "check_format",
                "bfd_fdopenw": "open_output_archive",
                "bfd_openr": "open_input_archive",
                "bfd_openr_next_archived_file": "get_next_archived_file",
                "bfd_set_format": "set_format",
                "cVar1": "format_check_result",
                "dcgettext": "get_text",
                "fprintf": "print_error",
                "lVar4": "input_archive",
                "lVar5": "archived_file",
                "param_1": "input_archive_path",
                "param_2": "flag",
                "pcVar3": "error_message",
                "piVar2": "errno_location",
                "plVar7": "archived_file_ptr",
                "strerror": "get_error_message",
                "uVar6": "program_name",
                "xstrdup": "duplicate_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103ddc": {
            "additional_data": {
                "FUN_00103ddc": {
                    "execute_file_function": 1,
                    "execute_file_operation": 2,
                    "execute_file_processing": 3,
                    "execute_function": 4,
                    "execute_io_operations": 1,
                    "extract_data": 1,
                    "initialize_data": 2,
                    "initialize_file": 3,
                    "print_file_content": 1,
                    "print_file_contents": 2,
                    "process_data": 9,
                    "process_file": 1,
                    "update_data": 1
                },
                "FUN_001079c0": {
                    "execute_io_operations_sub": 1,
                    "execute_subfunction": 1,
                    "perform_data_manipulation": 1,
                    "perform_file_action": 1,
                    "perform_file_operation": 1,
                    "print_data": 1,
                    "print_file": 1,
                    "print_to_file": 5,
                    "process_data": 2,
                    "process_file": 4,
                    "process_sub_function": 1,
                    "write_data_to_file": 2,
                    "write_file": 1,
                    "write_to_file": 9
                },
                "param_1": {
                    "data": 1,
                    "file": 15,
                    "file_pointer": 7,
                    "file_ptr": 1,
                    "input_data": 1,
                    "input_file": 3,
                    "output_file": 3
                },
                "param_2": {
                    "arguments": 2,
                    "command_args": 1,
                    "content": 1,
                    "data": 5,
                    "data_array": 2,
                    "data_list": 1,
                    "data_ptr": 1,
                    "file_content": 1,
                    "file_data": 2,
                    "file_names": 2,
                    "input_data": 1,
                    "output_file": 1,
                    "string_array": 2,
                    "strings": 6,
                    "strings_array": 1,
                    "text": 1,
                    "text_array": 1
                },
                "param_3": {
                    "append_mode": 1,
                    "check_condition": 1,
                    "check_flag": 1,
                    "condition": 1,
                    "condition1": 1,
                    "flag": 3,
                    "flag1": 6,
                    "flag_1": 2,
                    "flag_condition": 1,
                    "is_condition_met": 2,
                    "is_condition_true": 3,
                    "is_flag_set": 1,
                    "is_modified": 1,
                    "is_option_enabled": 1,
                    "param3_flag": 1,
                    "should_print": 2,
                    "should_write": 1,
                    "use_flag": 1,
                    "write_condition": 1
                },
                "param_4": {
                    "additional_flag": 2,
                    "condition2": 1,
                    "default_value": 1,
                    "flag": 9,
                    "flag2": 7,
                    "flag_2": 2,
                    "initial_value": 1,
                    "is_debug_mode": 1,
                    "is_zero": 1,
                    "param4_flag": 1,
                    "unused_flag": 1,
                    "unused_param": 1,
                    "unused_variable": 2,
                    "value": 1
                }
            },
            "called": [
                "FUN_001079c0"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nvoid process_data_00103ddc(undefined8 file)\n\n{\n  FUN_001079c0(DAT_0010d578,file,DAT_0010d60c != 0,0);\n  return;\n}\n\n",
            "current_name": "process_data_00103ddc",
            "entrypoint": "0x00103ddc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103ddc": "process_data_00103ddc",
                "param_1": "file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103df9": {
            "additional_data": {
                "FUN_001033b0": {
                    "log_error_message": 1,
                    "print_error_message": 6
                },
                "FUN_00103df9": {
                    "allocate_dynamic_memory": 1,
                    "ensure_buffer_stack": 30
                },
                "__size": {
                    "buffer_size": 11,
                    "new_buffer_size": 1,
                    "new_size": 2,
                    "size": 6,
                    "total_size": 4
                },
                "bVar4": {
                    "b_value": 1,
                    "byte_value": 2,
                    "byte_var": 3,
                    "counter": 3,
                    "flag": 10,
                    "index_counter": 1,
                    "is_initialized": 1,
                    "is_zero": 1,
                    "loop_condition": 1,
                    "loop_count": 1,
                    "loop_flag": 4,
                    "loop_variable": 1,
                    "temp": 1,
                    "temp_flag": 1
                },
                "calloc": {
                    "allocate_memory": 6
                },
                "in_RCX": {
                    "input": 2,
                    "input_argument": 1,
                    "input_param": 2,
                    "input_parameter": 3,
                    "input_rcx": 1,
                    "input_value": 2,
                    "parameter": 1,
                    "result": 2,
                    "return_value": 17
                },
                "lVar1": {
                    "loop_count": 1,
                    "loop_counter": 26,
                    "loop_index": 3,
                    "loop_iterator": 1
                },
                "lVar2": {
                    "new_buffer_size": 7,
                    "new_capacity": 1,
                    "new_length": 1,
                    "new_size": 21,
                    "updated_size": 1
                },
                "puVar3": {
                    "buffer_pointer": 8,
                    "buffer_ptr": 7,
                    "current_address": 1,
                    "current_pointer": 2,
                    "current_position": 1,
                    "current_ptr": 3,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "end_pointer": 1,
                    "pointer_to_memory": 1,
                    "ptr": 4,
                    "ptr_element": 1
                },
                "realloc": {
                    "reallocate_memory": 4,
                    "resize_memory": 2
                }
            },
            "called": [
                "realloc",
                "FUN_001033b0",
                "calloc"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nundefined8 ensure_buffer_stack_00103df9(void)\n\n{\n  size_t buffer_size;\n  undefined8 return_value;\n  long loop_counter;\n  long new_size;\n  undefined4 *buffer_pointer;\n  byte flag;\n  \n  flag = 0;\n  if (DAT_0010d5a8 == (void *)0x0) {\n    DAT_0010d5a8 = calloc(8,1);\n    if (DAT_0010d5a8 != (void *)0x0) {\n      DAT_0010d580 = 1;\n      DAT_0010d5a0 = 0;\n      return return_value;\n    }\n  }\n  else {\n    if (DAT_0010d5a0 < DAT_0010d580 - 1U) {\n      return return_value;\n    }\n    new_size = DAT_0010d580 + 8;\n    buffer_size = new_size * 8;\n    DAT_0010d5a8 = recalloc(DAT_0010d5a8,buffer_size);\n    if (DAT_0010d5a8 != (void *)0x0) {\n      buffer_pointer = (undefined4 *)((long)DAT_0010d5a8 + (buffer_size - 0x40));\n      DAT_0010d580 = new_size;\n      for (loop_counter = 0x10; loop_counter != 0; loop_counter = loop_counter + -1) {\n        *buffer_pointer = 0;\n        buffer_pointer = buffer_pointer + (ulong)flag * -2 + 1;\n      }\n      return return_value;\n    }\n  }\n  FUN_001033b0(\"out of dynamic memory in yyensure_buffer_stack_00103df9()\");\n  DAT_0010d5a0 = 0;\n  DAT_0010d580 = 1;\n  return return_value;\n}\n\n",
            "current_name": "ensure_buffer_stack_00103df9",
            "entrypoint": "0x00103df9",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103df9": "ensure_buffer_stack_00103df9",
                "__size": "buffer_size",
                "bVar4": "flag",
                "calloc": "allocate_memory",
                "in_RCX": "return_value",
                "lVar1": "loop_counter",
                "lVar2": "new_size",
                "puVar3": "buffer_pointer",
                "realloc": "reallocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103e95": {
            "additional_data": {
                "BVar239": {
                    "boolean_variable": 1
                },
                "DAT_0010d550": {
                    "error_code": 1
                },
                "FUN_00103e95": {
                    "decompile_and_improve": 1,
                    "decompile_function": 2,
                    "decompiled_code_function": 1,
                    "decompiled_function": 5,
                    "process_data": 1,
                    "process_file": 1
                },
                "STAT": {
                    "struct_stat": 1
                },
                "auVar40": {
                    "array_of_undefined_variables": 1,
                    "array_of_undefined_vars": 1,
                    "array_u": 1,
                    "buffer_info": 1,
                    "struct_x": 1,
                    "undefined16_array": 1,
                    "undefined16_array_variable": 1,
                    "undefined16_array_variable40": 1,
                    "undefined16_variable": 1,
                    "undefined_arr_16_size16": 1,
                    "undefined_var": 1,
                    "undefined_var40": 1,
                    "undefined_var5": 1,
                    "undefined_var6": 1,
                    "undefined_var_array": 1
                },
                "auVar41": {
                    "array_of_undefined_variables": 1,
                    "array_of_undefined_vars": 1,
                    "array_u": 1,
                    "realloc_info": 1,
                    "struct_y": 1,
                    "undefined16_array": 1,
                    "undefined16_array_variable": 1,
                    "undefined16_array_variable41": 1,
                    "undefined16_variable2": 1,
                    "undefined_arr2_16_size16": 1,
                    "undefined_array_variable": 1,
                    "undefined_var2": 1,
                    "undefined_var41": 1,
                    "undefined_var6": 1,
                    "undefined_var7": 1,
                    "undefined_var_array": 1
                },
                "bVar100": {
                    "boolean_variable": 1
                },
                "bVar101": {
                    "boolean_variable": 1
                },
                "bVar102": {
                    "boolean_variable": 1
                },
                "bVar103": {
                    "boolean_variable": 1
                },
                "bVar104": {
                    "boolean_variable": 1
                },
                "bVar105": {
                    "boolean_variable": 1
                },
                "bVar106": {
                    "boolean_variable": 1
                },
                "bVar107": {
                    "boolean_variable": 1
                },
                "bVar108": {
                    "boolean_variable": 1
                },
                "bVar109": {
                    "boolean_variable": 1
                },
                "bVar110": {
                    "boolean_variable": 1
                },
                "bVar111": {
                    "boolean_variable": 1
                },
                "bVar112": {
                    "boolean_variable": 1
                },
                "bVar113": {
                    "boolean_variable": 1
                },
                "bVar114": {
                    "boolean_variable": 1
                },
                "bVar115": {
                    "boolean_variable": 1
                },
                "bVar116": {
                    "boolean_variable": 1
                },
                "bVar117": {
                    "boolean_variable": 1
                },
                "bVar118": {
                    "boolean_variable": 1
                },
                "bVar119": {
                    "boolean_variable": 1
                },
                "bVar120": {
                    "boolean_variable": 1
                },
                "bVar121": {
                    "boolean_variable": 1
                },
                "bVar122": {
                    "boolean_variable": 1
                },
                "bVar123": {
                    "boolean_variable": 1
                },
                "bVar124": {
                    "boolean_variable": 1
                },
                "bVar125": {
                    "boolean_variable": 1
                },
                "bVar126": {
                    "boolean_variable": 1
                },
                "bVar127": {
                    "boolean_variable": 1
                },
                "bVar128": {
                    "boolean_variable": 1
                },
                "bVar129": {
                    "boolean_variable": 1
                },
                "bVar130": {
                    "boolean_variable": 1
                },
                "bVar131": {
                    "boolean_variable": 1
                },
                "bVar132": {
                    "boolean_variable": 1
                },
                "bVar133": {
                    "boolean_variable": 1
                },
                "bVar134": {
                    "boolean_variable": 1
                },
                "bVar135": {
                    "boolean_variable": 1
                },
                "bVar136": {
                    "boolean_variable": 1
                },
                "bVar137": {
                    "boolean_variable": 1
                },
                "bVar138": {
                    "boolean_variable": 1
                },
                "bVar139": {
                    "boolean_variable": 1
                },
                "bVar140": {
                    "boolean_variable": 1
                },
                "bVar141": {
                    "boolean_variable": 1
                },
                "bVar142": {
                    "boolean_variable": 1
                },
                "bVar143": {
                    "boolean_variable": 1
                },
                "bVar144": {
                    "boolean_variable": 1
                },
                "bVar145": {
                    "boolean_variable": 1
                },
                "bVar146": {
                    "boolean_variable": 1
                },
                "bVar147": {
                    "boolean_variable": 1
                },
                "bVar148": {
                    "boolean_variable": 1
                },
                "bVar149": {
                    "boolean_variable": 1
                },
                "bVar150": {
                    "boolean_variable": 1
                },
                "bVar151": {
                    "boolean_variable": 1
                },
                "bVar152": {
                    "boolean_variable": 1
                },
                "bVar153": {
                    "boolean_variable": 1
                },
                "bVar154": {
                    "boolean_variable": 1
                },
                "bVar155": {
                    "boolean_variable": 1
                },
                "bVar156": {
                    "boolean_variable": 1
                },
                "bVar157": {
                    "boolean_variable": 1
                },
                "bVar158": {
                    "boolean_variable": 1
                },
                "bVar159": {
                    "boolean_variable": 1
                },
                "bVar160": {
                    "boolean_variable": 1
                },
                "bVar161": {
                    "boolean_variable": 1
                },
                "bVar162": {
                    "boolean_variable": 1
                },
                "bVar163": {
                    "boolean_variable": 1
                },
                "bVar164": {
                    "boolean_variable": 1
                },
                "bVar165": {
                    "boolean_variable": 1
                },
                "bVar166": {
                    "boolean_variable": 1
                },
                "bVar167": {
                    "boolean_variable": 1
                },
                "bVar168": {
                    "boolean_variable": 1
                },
                "bVar169": {
                    "boolean_variable": 1
                },
                "bVar170": {
                    "boolean_variable": 1
                },
                "bVar171": {
                    "boolean_variable": 1
                },
                "bVar172": {
                    "boolean_variable": 1
                },
                "bVar173": {
                    "boolean_variable": 1
                },
                "bVar174": {
                    "boolean_variable": 1
                },
                "bVar175": {
                    "boolean_variable": 1
                },
                "bVar176": {
                    "boolean_variable": 1
                },
                "bVar177": {
                    "boolean_variable": 1
                },
                "bVar178": {
                    "boolean_variable": 1
                },
                "bVar179": {
                    "boolean_variable": 1
                },
                "bVar180": {
                    "boolean_variable": 1
                },
                "bVar181": {
                    "boolean_variable": 1
                },
                "bVar182": {
                    "boolean_variable": 1
                },
                "bVar183": {
                    "boolean_variable": 1
                },
                "bVar184": {
                    "boolean_variable": 1
                },
                "bVar185": {
                    "boolean_variable": 1
                },
                "bVar186": {
                    "boolean_variable": 1
                },
                "bVar187": {
                    "boolean_variable": 1
                },
                "bVar188": {
                    "boolean_variable": 1
                },
                "bVar189": {
                    "boolean_variable": 1
                },
                "bVar190": {
                    "boolean_variable": 1
                },
                "bVar191": {
                    "boolean_variable": 1
                },
                "bVar192": {
                    "boolean_variable": 1
                },
                "bVar193": {
                    "boolean_variable": 1
                },
                "bVar194": {
                    "boolean_variable": 1
                },
                "bVar195": {
                    "boolean_variable": 1
                },
                "bVar196": {
                    "boolean_variable": 1
                },
                "bVar197": {
                    "boolean_variable": 1
                },
                "bVar198": {
                    "boolean_variable": 1
                },
                "bVar199": {
                    "boolean_variable": 1
                },
                "bVar200": {
                    "boolean_variable": 1
                },
                "bVar201": {
                    "boolean_variable": 1
                },
                "bVar202": {
                    "boolean_variable": 1
                },
                "bVar203": {
                    "boolean_variable": 1
                },
                "bVar204": {
                    "boolean_variable": 1
                },
                "bVar205": {
                    "boolean_variable": 1
                },
                "bVar206": {
                    "boolean_variable": 1
                },
                "bVar207": {
                    "boolean_variable": 1
                },
                "bVar208": {
                    "boolean_variable": 1
                },
                "bVar209": {
                    "boolean_variable": 1
                },
                "bVar210": {
                    "boolean_variable": 1
                },
                "bVar211": {
                    "boolean_variable": 1
                },
                "bVar212": {
                    "boolean_variable": 1
                },
                "bVar213": {
                    "boolean_variable": 1
                },
                "bVar214": {
                    "boolean_variable": 1
                },
                "bVar215": {
                    "boolean_variable": 1
                },
                "bVar216": {
                    "boolean_variable": 1
                },
                "bVar217": {
                    "boolean_variable": 1
                },
                "bVar218": {
                    "boolean_variable": 1
                },
                "bVar219": {
                    "boolean_variable": 1
                },
                "bVar220": {
                    "boolean_variable": 1
                },
                "bVar221": {
                    "boolean_variable": 1
                },
                "bVar222": {
                    "boolean_variable": 1
                },
                "bVar223": {
                    "boolean_variable": 1
                },
                "bVar224": {
                    "boolean_variable": 1
                },
                "bVar225": {
                    "boolean_variable": 1
                },
                "bVar226": {
                    "boolean_variable": 1
                },
                "bVar227": {
                    "boolean_variable": 1
                },
                "bVar228": {
                    "boolean_variable": 1
                },
                "bVar229": {
                    "boolean_variable": 1
                },
                "bVar230": {
                    "boolean_variable": 1
                },
                "bVar231": {
                    "boolean_variable": 1
                },
                "bVar232": {
                    "boolean_variable": 1
                },
                "bVar233": {
                    "boolean_variable": 1
                },
                "bVar234": {
                    "boolean_variable": 1
                },
                "bVar235": {
                    "boolean_variable": 1
                },
                "bVar236": {
                    "boolean_variable": 1
                },
                "bVar237": {
                    "boolean_variable": 1
                },
                "bVar238": {
                    "boolean_variable": 1
                },
                "bVar240": {
                    "boolean_variable": 1
                },
                "bVar241": {
                    "boolean_variable": 1
                },
                "bVar242": {
                    "boolean_variable": 1
                },
                "bVar243": {
                    "boolean_variable": 1
                },
                "bVar244": {
                    "boolean_variable": 1
                },
                "bVar245": {
                    "boolean_variable": 1
                },
                "bVar246": {
                    "boolean_variable": 1
                },
                "bVar247": {
                    "boolean_variable": 1
                },
                "bVar28": {
                    "bool": 1,
                    "bool_var": 9,
                    "bool_var_1": 1,
                    "bool_variable": 4,
                    "boolean_val": 1,
                    "boolean_var": 2,
                    "boolean_var28": 1,
                    "boolean_variable": 2,
                    "boolean_variable28": 1,
                    "found_match": 1
                },
                "bVar30": {
                    "bool_var": 1,
                    "boolean_var": 1,
                    "boolean_variable": 1,
                    "byte": 1,
                    "byte_val": 1,
                    "byte_var": 7,
                    "byte_var2": 1,
                    "byte_var30": 1,
                    "byte_var_1": 1,
                    "byte_variable": 5,
                    "byte_variable30": 1,
                    "char_code": 1
                },
                "bVar39": {
                    "bool_var": 1,
                    "boolean_var": 1,
                    "byte": 1,
                    "byte_var": 1,
                    "byte_var2": 2,
                    "byte_var39": 1,
                    "byte_variable2": 1,
                    "byte_variable39": 1,
                    "byte_variable_2": 1,
                    "flag": 1
                },
                "bVar40": {
                    "byte_variable": 2
                },
                "bVar41": {
                    "byte_variable": 1
                },
                "bVar49": {
                    "boolean_variable": 1
                },
                "bVar50": {
                    "boolean_variable": 1
                },
                "bVar51": {
                    "boolean_variable": 1
                },
                "bVar52": {
                    "boolean_variable": 1
                },
                "bVar53": {
                    "boolean_variable": 1
                },
                "bVar54": {
                    "boolean_variable": 1
                },
                "bVar55": {
                    "boolean_variable": 1
                },
                "bVar56": {
                    "boolean_variable": 1
                },
                "bVar57": {
                    "boolean_variable": 1
                },
                "bVar58": {
                    "boolean_variable": 1
                },
                "bVar59": {
                    "boolean_variable": 1
                },
                "bVar60": {
                    "boolean_variable": 1
                },
                "bVar61": {
                    "boolean_variable": 1
                },
                "bVar62": {
                    "boolean_variable": 1
                },
                "bVar63": {
                    "boolean_variable": 1
                },
                "bVar64": {
                    "boolean_variable": 1
                },
                "bVar65": {
                    "boolean_variable": 1
                },
                "bVar66": {
                    "boolean_variable": 1
                },
                "bVar67": {
                    "boolean_variable": 1
                },
                "bVar68": {
                    "boolean_variable": 1
                },
                "bVar69": {
                    "boolean_variable": 1
                },
                "bVar70": {
                    "boolean_variable": 1
                },
                "bVar71": {
                    "boolean_variable": 1
                },
                "bVar72": {
                    "boolean_variable": 1
                },
                "bVar73": {
                    "boolean_variable": 1
                },
                "bVar74": {
                    "boolean_variable": 1
                },
                "bVar75": {
                    "boolean_variable": 1
                },
                "bVar76": {
                    "boolean_variable": 1
                },
                "bVar77": {
                    "boolean_variable": 1
                },
                "bVar78": {
                    "boolean_variable": 1
                },
                "bVar79": {
                    "boolean_variable": 1
                },
                "bVar80": {
                    "boolean_variable": 1
                },
                "bVar81": {
                    "boolean_variable": 1
                },
                "bVar82": {
                    "boolean_variable": 1
                },
                "bVar83": {
                    "boolean_variable": 1
                },
                "bVar84": {
                    "boolean_variable": 1
                },
                "bVar85": {
                    "boolean_variable": 1
                },
                "bVar86": {
                    "boolean_variable": 1
                },
                "bVar87": {
                    "boolean_variable": 1
                },
                "bVar88": {
                    "boolean_variable": 1
                },
                "bVar89": {
                    "boolean_variable": 1
                },
                "bVar90": {
                    "boolean_variable": 1
                },
                "bVar91": {
                    "boolean_variable": 1
                },
                "bVar92": {
                    "boolean_variable": 1
                },
                "bVar93": {
                    "boolean_variable": 1
                },
                "bVar94": {
                    "boolean_variable": 1
                },
                "bVar95": {
                    "boolean_variable": 1
                },
                "bVar96": {
                    "boolean_variable": 1
                },
                "bVar97": {
                    "boolean_variable": 1
                },
                "bVar98": {
                    "boolean_variable": 1
                },
                "bVar99": {
                    "boolean_variable": 1
                },
                "bbVar28": {
                    "file_index_found": 1
                },
                "cVar2": {
                    "char_var": 4,
                    "char_variable": 2,
                    "character": 2,
                    "character_var": 1,
                    "character_var2": 1,
                    "character_variable": 5,
                    "character_variable2": 1,
                    "current_char": 1
                },
                "fVar4": {
                    "file_pointer": 1
                },
                "iVar25": {
                    "count2": 1,
                    "index": 1,
                    "int_value": 1,
                    "int_var": 3,
                    "int_var2": 1,
                    "int_var3": 4,
                    "int_var_1": 1,
                    "int_variable": 1,
                    "integer": 1,
                    "integer_var": 1,
                    "integer_var25": 1,
                    "integer_variable": 2,
                    "integer_variable25": 1,
                    "integer_variable3": 1,
                    "integer_variable_3": 1
                },
                "iVar27": {
                    "integer_variable": 1
                },
                "iVar28": {
                    "integer_variable": 1
                },
                "iVar29": {
                    "integer_variable": 1
                },
                "iVar30": {
                    "integer_variable": 1
                },
                "iVar31": {
                    "integer_variable": 1
                },
                "iVar32": {
                    "integer_variable": 1
                },
                "iVar33": {
                    "integer_variable": 1
                },
                "iVar34": {
                    "integer_variable": 1
                },
                "iVar35": {
                    "integer_variable": 1
                },
                "iVar36": {
                    "integer_variable": 1
                },
                "iVar37": {
                    "int_var": 2,
                    "int_var2": 1,
                    "int_variable": 1,
                    "integer": 1,
                    "integer_var": 1,
                    "integer_variable": 3,
                    "integer_variable37": 1,
                    "integer_variable4": 1,
                    "integer_variable_4": 1,
                    "state": 1
                },
                "iVar38": {
                    "integer_variable": 1
                },
                "iVar39": {
                    "integer_variable": 1
                },
                "iVar40": {
                    "integer_variable": 1
                },
                "iVar41": {
                    "integer_variable": 1
                },
                "iVar42": {
                    "integer_variable": 1
                },
                "iVar43": {
                    "integer_variable": 1
                },
                "iVar44": {
                    "integer_variable": 1
                },
                "iVar45": {
                    "integer_variable": 1
                },
                "iVar46": {
                    "integer_variable": 1
                },
                "iVar47": {
                    "integer_variable": 1
                },
                "iVar48": {
                    "integer_variable": 1
                },
                "iVar8": {
                    "index": 1,
                    "int_value": 1,
                    "int_var": 6,
                    "int_var1": 1,
                    "int_variable": 1,
                    "integer": 1,
                    "integer_var": 2,
                    "integer_var8": 1,
                    "integer_variable": 5,
                    "integer_variable8": 1,
                    "integer_variable_1": 1,
                    "state2": 1
                },
                "iVar9": {
                    "error_code": 1,
                    "int_value": 1,
                    "int_var": 2,
                    "int_var2": 4,
                    "int_var3": 1,
                    "int_variable": 1,
                    "integer": 1,
                    "integer_var": 1,
                    "integer_var2": 1,
                    "integer_var9": 1,
                    "integer_variable": 2,
                    "integer_variable2": 1,
                    "integer_variable9": 2,
                    "integer_variable_2": 2,
                    "status": 1
                },
                "ibVar37": {
                    "int_var4": 1
                },
                "lVar17": {
                    "long": 1,
                    "long_val": 1,
                    "long_var": 6,
                    "long_var1": 1,
                    "long_var17": 1,
                    "long_var3": 2,
                    "long_var_1": 1,
                    "long_variable": 6,
                    "long_variable17": 1,
                    "temp_length": 1
                },
                "lVar18": {
                    "index": 3,
                    "iterator": 1,
                    "long": 1,
                    "long_val": 1,
                    "long_var": 4,
                    "long_var18": 1,
                    "long_var2": 4,
                    "long_var4": 1,
                    "long_var_2": 1,
                    "long_variable": 4,
                    "long_variable18": 1,
                    "long_variable2": 1,
                    "long_variable_2": 1,
                    "selected_file_index": 1
                },
                "lVar19": {
                    "long_variable_3": 1
                },
                "lVar21": {
                    "count": 1,
                    "file_list_index": 1,
                    "long": 1,
                    "long_val": 1,
                    "long_var": 4,
                    "long_var21": 1,
                    "long_var3": 3,
                    "long_var4": 1,
                    "long_var5": 1,
                    "long_var_3": 1,
                    "long_variable": 4,
                    "long_variable21": 1,
                    "long_variable3": 1,
                    "long_variable_4": 1
                },
                "lVar31": {
                    "count3": 1,
                    "long": 1,
                    "long_val": 1,
                    "long_var": 5,
                    "long_var31": 1,
                    "long_var4": 3,
                    "long_var5": 1,
                    "long_var6": 1,
                    "long_var_4": 1,
                    "long_variable": 3,
                    "long_variable31": 2,
                    "long_variable5": 1,
                    "long_variable_5": 1
                },
                "lVar38": {
                    "long_variable": 1
                },
                "local_128": {
                    "pointer_c": 1
                },
                "local_170": {
                    "pointer_c": 1
                },
                "local_1b8": {
                    "pointer_c": 1
                },
                "local_200": {
                    "pointer_c": 1
                },
                "local_248": {
                    "pointer_c": 1
                },
                "local_290": {
                    "pointer_c": 1
                },
                "local_2d8": {
                    "pointer_c": 1
                },
                "local_320": {
                    "pointer_c": 1
                },
                "local_320_0": {
                    "pointer_c": 1
                },
                "local_344": {
                    "pointer_pointer_c": 1
                },
                "local_348": {
                    "pointer_pointer_c": 1
                },
                "local_34c": {
                    "pointer_pointer_c": 1
                },
                "local_36c": {
                    "pointer_pointer_c": 1
                },
                "local_3a8": {
                    "pointer_c": 1
                },
                "local_3ac": {
                    "pointer_pointer_c": 1
                },
                "local_3c0": {
                    "long_var": 1
                },
                "local_3dc": {
                    "pointer_c": 1
                },
                "local_3e0": {
                    "pointer_c": 1
                },
                "local_3e4": {
                    "pointer_c": 1
                },
                "local_3e8": {
                    "pointer_c": 1
                },
                "local_3ec": {
                    "pointer_c": 1
                },
                "local_3f0": {
                    "pointer_c": 1
                },
                "local_3f4": {
                    "pointer_c": 1
                },
                "local_3f8": {
                    "int_var": 1
                },
                "local_400": {
                    "pointer_pointer_c": 1
                },
                "local_40c": {
                    "pointer_pointer_c": 1
                },
                "local_418": {
                    "string_var": 1
                },
                "local_50": {
                    "pointer_c": 1
                },
                "local_678": {
                    "local_array_char678": 1,
                    "local_buffer_array": 1,
                    "local_char_array": 1,
                    "local_char_array_variable678": 1,
                    "local_char_pointer_array": 2,
                    "local_char_var_pointer_array201": 1,
                    "local_character_array": 1,
                    "local_character_pointer_array": 2,
                    "local_character_ptr_array": 1,
                    "local_string_2": 1,
                    "local_var_char_pointer_array": 1
                },
                "local_740": {
                    "local_buffer": 1,
                    "local_cha_array": 1,
                    "local_char": 1,
                    "local_char740": 1,
                    "local_char_array": 1,
                    "local_char_array_variable740": 1,
                    "local_char_var_array200": 1,
                    "local_character_array": 4,
                    "local_string_1": 1,
                    "local_var_char_array": 1
                },
                "local_768": {
                    "string_array": 1
                },
                "local_7b8": {
                    "struct_stat": 1
                },
                "local_7d0": {
                    "local_stat": 3,
                    "local_stat7d0": 1,
                    "local_stat_structure": 1,
                    "local_stat_var": 3,
                    "local_stat_variable": 1,
                    "local_stat_variable7d0": 1,
                    "local_var_stat": 1
                },
                "local_7e0": {
                    "long_var": 1
                },
                "local_7ec": {
                    "variable_u": 1
                },
                "local_7f0": {
                    "byte_pointer": 1
                },
                "local_7f4": {
                    "byte_pointer": 1
                },
                "local_7f8": {
                    "byte_pointer": 1,
                    "local_byte7f8": 1,
                    "local_byte_pointer": 3,
                    "local_byte_pointer_variable": 1,
                    "local_byte_ptr": 1,
                    "local_byte_var_pointer": 1,
                    "local_pointer_to_byte": 2,
                    "local_pointer_to_byte_variable7f8": 1,
                    "local_ptr_to_byte": 1,
                    "local_var_byte_pointer": 1
                },
                "local_7fc": {
                    "local_u_int_var": 1,
                    "local_uint": 3,
                    "local_uint7fc": 1,
                    "local_uint_var": 2,
                    "local_uint_variable": 1,
                    "local_unsigned_integer_variable7fc": 1,
                    "local_unsigned_var": 1,
                    "local_unsigned_variable": 1,
                    "local_var_u_int": 1,
                    "variable_u": 1
                },
                "local_800": {
                    "counter": 2,
                    "int_var": 1,
                    "list_size": 1,
                    "local_int": 2,
                    "local_int800": 1,
                    "local_int_var": 3,
                    "local_int_var_1": 1,
                    "local_integer": 2,
                    "local_integer_var": 1,
                    "local_integer_variable": 2,
                    "local_integer_variable800": 1,
                    "local_var_int": 1
                },
                "local_810": {
                    "buffer_array": 1,
                    "input_string_array": 1,
                    "local_char_double_pointer": 2,
                    "local_char_pointer_pointer": 1,
                    "local_char_var_pointer_pointer": 1,
                    "local_double_pointer_char": 1,
                    "local_pointer_char810": 1,
                    "local_pointer_to_pointer_to_char810": 1,
                    "local_pointer_to_pointer_to_character": 2,
                    "local_pointer_to_pointer_to_character_variable": 1,
                    "local_ptr_to_ptr_to_character": 1,
                    "local_string_array_ptr": 1,
                    "local_string_pointers_array": 1,
                    "local_var_char_pointer3": 1,
                    "pointer_pointer_c": 1,
                    "temp_list": 1
                },
                "local_818": {
                    "buffer_size": 1,
                    "local_long": 4,
                    "local_long818": 1,
                    "local_long_var": 4,
                    "local_long_var_1": 1,
                    "local_long_variable": 2,
                    "local_long_variable818": 1,
                    "local_var_long": 1,
                    "long_var": 1,
                    "output_size": 1
                },
                "local_820": {
                    "current_char": 1,
                    "local_char820": 1,
                    "local_char_pointer": 2,
                    "local_char_pointer1": 1,
                    "local_char_pointer2": 2,
                    "local_char_pointer_variable820": 1,
                    "local_pointer_to_character": 1,
                    "local_pointer_to_character_2": 1,
                    "local_pointer_to_character_variable": 1,
                    "local_ptr_to_character": 1,
                    "local_string_pointer_2": 1,
                    "local_string_ptr": 1,
                    "local_var_char_pointer2": 1,
                    "output_filename": 1,
                    "string_var": 1
                },
                "local_828": {
                    "buffer": 1,
                    "file_output_name": 1,
                    "local_char828": 1,
                    "local_char_pointer": 4,
                    "local_char_pointer_variable828": 1,
                    "local_char_var_pointer": 1,
                    "local_pointer_to_character": 2,
                    "local_pointer_to_character_variable": 1,
                    "local_ptr_to_character": 1,
                    "local_string_pointer_1": 1,
                    "local_string_ptr": 1,
                    "local_var_char_pointer1": 1,
                    "output_string": 1,
                    "string_var": 1
                },
                "local_98": {
                    "pointer_c": 1
                },
                "local_e0": {
                    "pointer_c": 1
                },
                "pFVar4": {
                    "file": 2,
                    "file_pointer": 12,
                    "file_pointer_3": 1,
                    "file_ptr": 1,
                    "pointer_file4": 1,
                    "pointer_to_file": 4,
                    "pointer_to_file4": 1,
                    "pointer_to_file_variable": 2,
                    "ptr_file": 1,
                    "ptr_to_file": 1
                },
                "param_1": {
                    "file_list": 1
                },
                "param_2": {
                    "file_output_name": 1
                },
                "pbVar30": {
                    "byte_var": 1
                },
                "pbVar32": {
                    "buffer_start": 1,
                    "byte_array": 1,
                    "byte_pointer": 3,
                    "byte_pointer2": 1,
                    "byte_pointer5": 1,
                    "byte_pointer_1": 1,
                    "byte_pointer_var": 1,
                    "byte_ptr": 2,
                    "byte_var3": 1,
                    "byte_variable": 1,
                    "pointer_byte2": 1,
                    "pointer_byte32": 1,
                    "pointer_to_byte": 2,
                    "pointer_to_byte2": 1,
                    "pointer_to_byte32": 1,
                    "pointer_to_byte_2": 1,
                    "ptr_byte5": 1,
                    "ptr_to_byte": 2
                },
                "pbVar33": {
                    "buffer_end": 1,
                    "byte_pointer": 3,
                    "byte_pointer3": 1,
                    "byte_pointer8": 1,
                    "byte_pointer_2": 1,
                    "byte_pointer_var2": 1,
                    "byte_ptr": 2,
                    "byte_var4": 1,
                    "byte_variable": 1,
                    "pointer_byte3": 1,
                    "pointer_byte33": 1,
                    "pointer_to_byte": 2,
                    "pointer_to_byte3": 1,
                    "pointer_to_byte33": 1,
                    "pointer_to_byte_3": 1,
                    "ptr_byte6": 1,
                    "ptr_to_byte": 2
                },
                "pbVar35": {
                    "buffer_pos": 1,
                    "byte_pointer": 3,
                    "byte_pointer4": 1,
                    "byte_pointer7": 1,
                    "byte_pointer_3": 1,
                    "byte_pointer_var3": 1,
                    "byte_ptr": 1,
                    "byte_var5": 1,
                    "byte_variable": 1,
                    "current_byte": 1,
                    "pointer_byte35": 1,
                    "pointer_byte4": 1,
                    "pointer_to_byte": 2,
                    "pointer_to_byte35": 1,
                    "pointer_to_byte4": 1,
                    "pointer_to_byte_4": 1,
                    "ptr_byte4": 1,
                    "ptr_to_byte": 2
                },
                "pbVar36": {
                    "byte_pointer": 1,
                    "byte_pointer5": 1,
                    "byte_variable": 1,
                    "pointer_byte36": 1,
                    "pointer_byte5": 1,
                    "pointer_to_byte": 1
                },
                "pbVar37": {
                    "byte_pointer": 1,
                    "ptr_to_byte": 1
                },
                "pbVar39": {
                    "byte_var": 1,
                    "byte_var2": 1,
                    "byte_var6": 1,
                    "byte_var_2": 1,
                    "pointer_to_byte": 1
                },
                "pbVar40": {
                    "byte_var_3": 1
                },
                "pbVar7": {
                    "buffer": 1,
                    "byte_pointer": 7,
                    "byte_ptr": 2,
                    "byte_var": 1,
                    "byte_variable": 1,
                    "byte_variable_1": 1,
                    "pointer_byte": 1,
                    "pointer_byte7": 1,
                    "pointer_to_byte": 4,
                    "pointer_to_byte7": 1,
                    "ptr_byte1": 1,
                    "ptr_to_byte": 2
                },
                "pcVar10": {
                    "char_pointer": 3,
                    "char_pointer_variable": 1,
                    "char_ptr": 1,
                    "char_var": 1,
                    "char_var1": 2,
                    "char_var2": 1,
                    "format_string": 1,
                    "message": 2,
                    "pointer_char10": 1,
                    "pointer_to_char": 1,
                    "pointer_to_char10": 1,
                    "pointer_to_char_variable_1": 1,
                    "pointer_to_character": 3,
                    "pointer_to_character_variable": 1,
                    "ptr_char1": 1,
                    "ptr_to_character": 1,
                    "string_ptr": 1,
                    "string_var": 2,
                    "temp_string": 1
                },
                "pcVar15": {
                    "char_pointer": 2,
                    "char_pointer2": 1,
                    "char_pointer_variable2": 1,
                    "char_ptr": 1,
                    "char_var": 1,
                    "char_var2": 1,
                    "char_var3": 1,
                    "char_var4": 1,
                    "current_char": 1,
                    "pointer_char15": 1,
                    "pointer_to_char15": 1,
                    "pointer_to_char2": 1,
                    "pointer_to_char_variable_2": 1,
                    "pointer_to_character": 2,
                    "pointer_to_character_2": 1,
                    "pointer_to_character_variable": 1,
                    "ptr_char2": 1,
                    "ptr_to_character": 1,
                    "source": 1,
                    "source_file_path": 1,
                    "string_pointer_1": 1,
                    "string_ptr": 1,
                    "string_var": 1
                },
                "pcVar16": {
                    "char_pointer": 2,
                    "char_pointer3": 1,
                    "char_pointer_variable3": 1,
                    "char_ptr": 1,
                    "char_var": 1,
                    "char_var3": 1,
                    "char_var4": 1,
                    "char_var5": 1,
                    "destination_file_path": 1,
                    "formatted_string": 1,
                    "pointer_char16": 1,
                    "pointer_to_char16": 1,
                    "pointer_to_char3": 1,
                    "pointer_to_char_variable_3": 1,
                    "pointer_to_character": 2,
                    "pointer_to_character_3": 1,
                    "pointer_to_character_variable": 1,
                    "ptr_char3": 1,
                    "ptr_to_character": 1,
                    "string_pointer_2": 1,
                    "string_ptr": 1,
                    "string_var": 1,
                    "target": 1,
                    "temp_string_2": 1
                },
                "piVar34": {
                    "error_number": 1,
                    "int_pointer": 3,
                    "int_pointer_1": 1,
                    "int_pointer_var": 1,
                    "int_ptr": 1,
                    "int_var": 1,
                    "int_var_pointer": 1,
                    "integer_pointer": 1,
                    "integer_pointer_variable": 1,
                    "pointer_i": 1,
                    "pointer_int34": 1,
                    "pointer_to_int": 1,
                    "pointer_to_integer": 3,
                    "pointer_to_integer34": 1,
                    "pointer_to_integer_variable": 1,
                    "ptr_int2": 1,
                    "ptr_to_int": 1,
                    "ptr_to_integer": 1,
                    "temp_value": 1
                },
                "piVar37": {
                    "pointer_int37": 1
                },
                "piVar6": {
                    "int_pointer": 1
                },
                "plVar12": {
                    "file_cache_array_element": 1,
                    "file_cache_entry": 1,
                    "file_pointer": 1,
                    "long_pointer": 2,
                    "long_pointer2": 2,
                    "long_ptr": 2,
                    "long_var2": 1,
                    "long_var_pointer": 1,
                    "pointer_long12": 1,
                    "pointer_long2": 1,
                    "pointer_to_long": 2,
                    "pointer_to_long12": 1,
                    "pointer_to_long2": 1,
                    "pointer_to_long_2": 1,
                    "pointer_to_long_variable": 1,
                    "pointer_to_long_variable_2": 1,
                    "ptr_array3": 1,
                    "ptr_to_long": 2
                },
                "plVar5": {
                    "file_pointer_2": 1,
                    "long_pointer": 6,
                    "long_ptr": 2,
                    "long_var": 3,
                    "long_var_pointer": 1,
                    "pointer_long": 1,
                    "pointer_long5": 1,
                    "pointer_to_long": 4,
                    "pointer_to_long5": 1,
                    "pointer_to_long_variable": 2,
                    "ptr_array2": 1,
                    "ptr_to_long": 2
                },
                "ppFVar3": {
                    "double_file_pointer": 2,
                    "double_pointer_file": 1,
                    "double_pointer_to_file": 2,
                    "double_ptr_ptr": 1,
                    "file_pointer": 1,
                    "file_pointer_4": 1,
                    "file_pointer_array": 3,
                    "file_pointer_ptr": 1,
                    "file_pointers": 1,
                    "file_pointers_array": 1,
                    "file_pointers_pointer": 1,
                    "files_array": 1,
                    "pointer_pointer_file3": 1,
                    "pointer_to_file_ptr3": 1,
                    "pointer_to_pointer": 1,
                    "pointer_to_pointer_to_file": 1,
                    "pointer_to_pointer_to_file_variable": 2,
                    "ptr_ptr_file": 1,
                    "ptr_to_file_pointer": 1,
                    "ptr_to_ptr_to_file": 1
                },
                "ppPCVar27": {
                    "file_names": 1
                },
                "ppPCVar29": {
                    "stack": 1
                },
                "ppVar29": {
                    "ptr_ptr_char": 1
                },
                "ppcVar27": {
                    "char_double_pointer": 2,
                    "char_pointer_pointer": 1,
                    "char_pointer_pointer1": 1,
                    "char_var_pointer_pointer": 1,
                    "double_pointer_char": 1,
                    "double_pointer_to_character": 1,
                    "pointer_pointer_c": 1,
                    "pointer_pointer_char27": 1,
                    "pointer_pointer_var": 1,
                    "pointer_to_pointer_to_char": 1,
                    "pointer_to_pointer_to_character": 2,
                    "pointer_to_pointer_to_character_variable": 1,
                    "ptr_ptr_char1": 1,
                    "ptr_to_char_pointer": 1,
                    "ptr_to_ptr_to_character": 1,
                    "string_pointers_array": 1,
                    "string_ptr_ptr": 1
                },
                "ppcVar29": {
                    "char_double_pointer": 1,
                    "char_double_pointer2": 1,
                    "char_pointer_pointer2": 2,
                    "char_var_pointer_pointer": 1,
                    "double_pointer_char2": 1,
                    "double_pointer_to_character": 1,
                    "file_list": 1,
                    "function_pointer_array": 1,
                    "pointer_array": 1,
                    "pointer_pointer_c": 1,
                    "pointer_pointer_char29": 1,
                    "pointer_to_pointer_to_character": 1,
                    "pointer_to_pointer_to_character_2": 1,
                    "pointer_to_pointer_to_character_variable": 1,
                    "ptr_ptr_char2": 1,
                    "ptr_to_char_pointer": 1,
                    "ptr_to_ptr_to_character": 1,
                    "string_array": 1,
                    "string_array_ptr": 1
                },
                "ppcVar38": {
                    "char_double_pointer": 1,
                    "char_var_pointer_pointer": 1,
                    "double_pointer_char3": 1,
                    "new_string_array": 1,
                    "pointer_pointer_c": 1,
                    "pointer_pointer_char38": 1,
                    "pointer_pointer_var2": 1,
                    "pointer_to_pointer_to_char38": 1,
                    "ptr_to_ptr_to_character": 1
                },
                "ppcVar39": {
                    "double_pointer_to_character": 1,
                    "pointer_to_pointer_to_character_variable": 1
                },
                "pplVar1": {
                    "double_pointer": 1,
                    "double_pointer_long": 1,
                    "double_pointer_to_long": 2,
                    "double_pointer_var": 1,
                    "double_ptr": 1,
                    "file_cache": 1,
                    "file_pointers": 1,
                    "pointer_one": 1,
                    "pointer_pointer1": 1,
                    "pointer_to_long_pointer": 1,
                    "pointer_to_long_ptr1": 1,
                    "pointer_to_pointer_to_long_variable": 1,
                    "pointer_to_pointer_variable_1": 1,
                    "ptr_array1": 1,
                    "ptr_to_ptr_array": 1
                },
                "pppVar1": {
                    "ptr_to_long_pointer": 1
                },
                "puVar22": {
                    "long_ptr_ptr": 1,
                    "pointer2": 1,
                    "pointer_to_undefined": 1,
                    "pointer_to_undefined8": 2,
                    "pointer_to_undefined8_variable": 1,
                    "pointer_to_unsigned_variable": 1,
                    "pointer_u": 1,
                    "pointer_undefined8_22": 1,
                    "ptr_long1": 1,
                    "ptr_to_undefined8": 1,
                    "ptr_to_unsigned_var": 1,
                    "temp_ptr": 1,
                    "undefined8_pointer": 1,
                    "undefined8_pointer_1": 1,
                    "undefined8_pointer_var": 1,
                    "undefined8_pointer_variable": 1,
                    "undefined8_var_pointer": 1,
                    "undefined_pointer_var": 1,
                    "undefined_var3": 1,
                    "undefined_var4": 1
                },
                "puVar23": {
                    "long_ptr_ptr": 1,
                    "pointer3": 1,
                    "pointer_to_undefined2": 1,
                    "pointer_to_undefined8": 1,
                    "pointer_to_undefined8_2": 1,
                    "pointer_to_undefined8_variable": 1,
                    "pointer_to_unsigned_variable": 1,
                    "pointer_u": 1,
                    "pointer_undefined8_23": 1,
                    "ptr_long2": 1,
                    "ptr_to_undefined8": 1,
                    "ptr_to_unsigned_var": 1,
                    "temp_ptr_2": 1,
                    "undefined8_pointer": 1,
                    "undefined8_pointer_2": 1,
                    "undefined8_pointer_var2": 1,
                    "undefined8_pointer_variable2": 1,
                    "undefined8_var_pointer": 1,
                    "undefined_pointer_var2": 1,
                    "undefined_var3": 1,
                    "undefined_var4": 1
                },
                "puVar8": {
                    "void_pointer": 1
                },
                "pvVar14": {
                    "pointer": 1,
                    "pointer_to_void": 4,
                    "pointer_to_void14": 1,
                    "pointer_to_void_variable": 1,
                    "pointer_void14": 1,
                    "ptr_to_void": 2,
                    "ptr_void": 1,
                    "temp_alloc": 1,
                    "temporary_pointer_var": 1,
                    "void_pointer": 4,
                    "void_pointer_var": 1,
                    "void_pointer_variable": 2,
                    "void_ptr": 2,
                    "void_var": 2,
                    "void_var_pointer": 1
                },
                "sVar13": {
                    "bytes_read": 1,
                    "read_length": 1,
                    "size": 1,
                    "size_t": 1,
                    "size_t_var": 1,
                    "size_t_var13": 1,
                    "size_t_variable": 3,
                    "size_t_variable13": 1,
                    "size_var": 10,
                    "size_variable": 4
                },
                "sVar7": {
                    "char_pointer": 1
                },
                "stat": {
                    "stat_struct": 1
                },
                "uVar10": {
                    "integer_variable": 1
                },
                "uVar11": {
                    "file_format": 1,
                    "integer_variable": 1,
                    "secondary_result": 1,
                    "ulong_var": 1,
                    "undefined8_var": 3,
                    "undefined8_var11": 1,
                    "undefined8_var2": 1,
                    "undefined8_variable": 3,
                    "undefined8_variable11": 1,
                    "undefined8_variable_1": 1,
                    "undefined8_variable_2": 1,
                    "undefined_var2": 4,
                    "undefined_var5": 1,
                    "undefined_variable11": 1,
                    "unsigned_var": 1,
                    "unsigned_variable": 1,
                    "variable_u": 1
                },
                "uVar12": {
                    "integer_variable": 1
                },
                "uVar13": {
                    "integer_variable": 1
                },
                "uVar14": {
                    "integer_variable": 1
                },
                "uVar15": {
                    "integer_variable": 1
                },
                "uVar16": {
                    "integer_variable": 1
                },
                "uVar17": {
                    "integer_variable": 1
                },
                "uVar18": {
                    "integer_variable": 1
                },
                "uVar19": {
                    "file_size": 1,
                    "integer_variable": 1,
                    "selected_option": 1,
                    "temp": 1,
                    "ulong": 1,
                    "ulong_var": 7,
                    "ulong_var19": 1,
                    "ulong_var4": 1,
                    "ulong_var_1": 1,
                    "ulong_variable": 4,
                    "unsigned_val": 1,
                    "unsigned_var": 1,
                    "unsigned_variable": 1,
                    "variable_u": 1
                },
                "uVar20": {
                    "index2": 1,
                    "integer_variable": 1,
                    "selected_file_index_option": 1,
                    "temp3": 1,
                    "uint": 1,
                    "uint_var": 7,
                    "uint_var20": 1,
                    "uint_var5": 1,
                    "uint_var_1": 1,
                    "uint_variable": 5,
                    "unsigned_val": 1,
                    "unsigned_var": 1,
                    "unsigned_variable": 1,
                    "variable_u": 1
                },
                "uVar21": {
                    "integer_variable": 1
                },
                "uVar22": {
                    "integer_variable": 1
                },
                "uVar23": {
                    "integer_variable": 1
                },
                "uVar24": {
                    "file_size2": 1,
                    "integer_variable": 1,
                    "temp_index_2": 1,
                    "uint": 1,
                    "uint_var": 2,
                    "uint_var2": 5,
                    "uint_var24": 1,
                    "uint_var4": 1,
                    "uint_var_2": 1,
                    "uint_variable": 3,
                    "uint_variable2": 1,
                    "uint_variable_2": 1,
                    "unsigned_val": 1,
                    "unsigned_var": 1,
                    "unsigned_variable": 1,
                    "variable_u": 1
                },
                "uVar25": {
                    "integer_variable": 1
                },
                "uVar26": {
                    "integer_variable": 1,
                    "start_index": 1,
                    "temp2": 1,
                    "temp_index_1": 1,
                    "ulong": 1,
                    "ulong_var": 3,
                    "ulong_var2": 4,
                    "ulong_var26": 1,
                    "ulong_var3": 1,
                    "ulong_var_2": 1,
                    "ulong_variable": 3,
                    "ulong_variable2": 1,
                    "ulong_variable26": 1,
                    "unsigned_val": 1,
                    "unsigned_var": 1,
                    "unsigned_variable": 1,
                    "variable_u": 1
                },
                "uVar36": {
                    "index3": 1,
                    "uint_var": 1,
                    "uint_var3": 2,
                    "uint_var36": 1,
                    "uint_variable": 1,
                    "uint_variable_3": 1,
                    "unsigned_integer_variable36": 1,
                    "variable_u": 1
                },
                "uVar38": {
                    "uint_variable": 1
                },
                "uVar39": {
                    "byte_var": 1
                },
                "uVar6": {
                    "file": 1,
                    "result": 1,
                    "ulong_var1": 1,
                    "undefined8_var": 4,
                    "undefined8_var6": 1,
                    "undefined8_variable": 5,
                    "undefined8_variable6": 1,
                    "undefined_var": 3,
                    "undefined_var1": 2,
                    "undefined_variable6": 1,
                    "unsigned_var": 1,
                    "unsigned_variable": 1,
                    "variable_u": 1
                },
                "uVar9": {
                    "integer_variable": 1
                }
            },
            "called": [
                "clearerr",
                "fopen",
                "FUN_0010300e",
                "printf",
                "malloc",
                "unlink",
                "bfd_openr",
                "FUN_00107740",
                "FUN_00103ddc",
                "bfd_openw",
                "FUN_00105bc0",
                "FUN_001031a5",
                "bfd_close",
                "FUN_00103ba8",
                "FUN_00103c60",
                "FUN_001033b0",
                "FUN_001033d6",
                "FUN_001032a8",
                "fread",
                "FUN_00105300",
                "FUN_001030ed",
                "FUN_001031cf",
                "filename_cmp",
                "realloc",
                "dup",
                "xstrdup",
                "bfd_cache_close",
                "bfd_set_format",
                "__errno_location",
                "FUN_0010315d",
                "getc",
                "free",
                "fwrite",
                "fclose",
                "dcgettext",
                "fprintf",
                "FUN_0010312d",
                "ferror",
                "stat",
                "FUN_00103df9"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid decompiled_code_function_00103e95(void)\n\n{\n  long **double_pointer_to_long;\n  char character_variable;\n  FILE **file_pointer_array;\n  FILE *file_pointer;\n  long *long_pointer;\n  undefined8 undefined8_variable;\n  byte *byte_pointer;\n  int int_var;\n  char *char_pointer;\n  undefined8 undefined_var2;\n  int int_var2;\n  long *long_ptr;\n  size_t size_var;\n  void *pointer_to_void;\n  char *char_pointer;\n  char *char_pointer;\n  long long_variable;\n  long long_var2;\n  ulong ulong_var;\n  uint uint_var;\n  long long_variable;\n  undefined8 *pointer_to_undefined8;\n  undefined8 *pointer_undefined8_23;\n  uint uint_var2;\n  int int_var3;\n  ulong ulong_var2;\n  char **char_double_pointer;\n  bool bool_var;\n  char **char_pointer_pointer2;\n  byte byte_var;\n  long long_var;\n  byte *byte_pointer;\n  byte *byte_pointer;\n  int *int_pointer;\n  byte *byte_pointer;\n  uint uint_var3;\n  int integer_variable;\n  char **pointer_to_pointer_to_char38;\n  byte byte_var2;\n  undefined undefined_var5 [16];\n  undefined undefined_var41 [16];\n  char *local_char_pointer;\n  char *local_char_pointer2;\n  long local_long_var;\n  char **local_char_double_pointer;\n  int local_int_var;\n  uint local_uint;\n  byte *local_byte_pointer;\n  stat_struct local_stat_var;\n  char local_character_array [200];\n  char *local_char_pointer_array [201];\n  \n  byte_var2 = 0;\n  long_var2 = 0;\n  DAT_0010d550 = -2;\n  char_pointer_pointer2 = local_char_pointer_array;\n  local_int_var = 0;\n  local_char_pointer = local_character_array;\n  local_long_var = 200;\n  local_char_pointer2 = local_char_pointer;\n  local_char_double_pointer = char_pointer_pointer2;\nLAB_00103ee9:\n  *local_char_pointer = (char)long_var2;\n  if (local_char_pointer2 + local_long_var + -1 <= local_char_pointer) {\n    long_variable = (long)local_char_pointer - (long)local_char_pointer2;\n    long_variable = long_variable + 1;\n    if (local_long_var < 10000) {\n      long_var = local_long_var * 2;\n      local_long_var = 10000;\n      if (long_var < 0x2711) {\n        local_long_var = long_var;\n      }\n      char_pointer = (char *)malloc(local_long_var * 9 + 7);\n      if (char_pointer != (char *)0x0) {\n        long_var = long_variable * 8;\n        char_pointer = local_char_pointer2;\n        char_pointer = char_pointer;\n        for (; long_variable != 0; long_variable = long_variable + -1) {\n          *char_pointer = *char_pointer;\n          char_pointer = char_pointer + (ulong)byte_var2 * -2 + 1;\n          char_pointer = char_pointer + (ulong)byte_var2 * -2 + 1;\n        }\n        pointer_to_pointer_to_char38 = (char **)(char_pointer + local_long_var);\n        char_pointer_pointer2 = pointer_to_pointer_to_char38;\n        for (; long_var != 0; long_var = long_var + -1) {\n          *(undefined *)char_pointer_pointer2 = *(undefined *)local_char_double_pointer;\n          local_char_double_pointer = (char **)((long)local_char_double_pointer + (ulong)byte_var2 * -2 + 1);\n          char_pointer_pointer2 = (char **)((long)char_pointer_pointer2 + (ulong)byte_var2 * -2 + 1);\n        }\n        if (local_char_pointer2 != local_character_array) {\n          free(local_char_pointer2);\n        }\n        local_char_pointer = char_pointer + long_variable;\n        char_pointer_pointer2 = pointer_to_pointer_to_char38 + long_variable;\n        local_char_pointer2 = char_pointer;\n        local_char_double_pointer = pointer_to_pointer_to_char38;\n        if (char_pointer + local_long_var + -1 <= local_char_pointer) goto LAB_00105265;\n        goto LAB_00103fd8;\n      }\n    }\n    FUN_001031a5();\nLAB_0010524c:\n    char_pointer = local_char_pointer2;\n    if (local_char_pointer2 == local_character_array) {\n      return;\n    }\nLAB_00105265:\n    free(char_pointer);\n    return;\n  }\nLAB_00103fd8:\n  integer_variable = (int)long_var2;\n  if (integer_variable == 3) goto LAB_0010524c;\n  character_variable = (&DAT_0010a200)[integer_variable];\n  if (character_variable != -0xe) {\n    if (DAT_0010d550 == -2) {\n      if (_DAT_0010d540 == 0) {\n        _DAT_0010d540 = 1;\n        if (DAT_0010d5d0 == 0) {\n          DAT_0010d5d0 = 1;\n        }\n        if (DAT_0010d590 == (FILE *)0x0) {\n          DAT_0010d590 = _stdin;\n        }\n        if (DAT_0010d538 == (FILE *)0x0) {\n          DAT_0010d538 = _stdout;\n        }\n        if ((DAT_0010d5a8 == 0) || (*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) == 0)) {\n          FUN_00103df9();\n          pointer_to_undefined8 = (undefined8 *)(DAT_0010d5a8 + DAT_0010d5a0 * 8);\n          undefined_var2 = FUN_001033d6(DAT_0010d590);\n          *pointer_to_undefined8 = undefined_var2;\n        }\n        FUN_001030ed();\n      }\nLAB_001040b1:\n      *DAT_0010d5b0 = DAT_0010d588;\n      byte_pointer = DAT_0010d5b0;\n      byte_pointer = DAT_0010d5b0;\n      uint_var = DAT_0010d5d0;\nLAB_001040d4:\n      ulong_var = (ulong)uint_var;\n      ulong_var2 = (ulong)local_uint;\n      bool_var = false;\n      do {\n        byte_var = (&DAT_0010ab00)[*byte_pointer];\n        if (*(short *)(&DAT_0010a980 + (long)(int)ulong_var * 2) != 0) {\n          bool_var = true;\n          ulong_var2 = ulong_var & 0xffffffff;\n          local_byte_pointer = byte_pointer;\n        }\n        while( true ) {\n          int_var = (int)ulong_var;\n          long_var2 = (long)(int)((int)*(short *)(&DAT_0010a640 + (long)int_var * 2) + (uint)byte_var);\n          if (int_var == *(short *)(&DAT_0010a440 + long_var2 * 2)) break;\n          ulong_var = (ulong)(uint)(int)*(short *)(&DAT_0010a800 + (long)int_var * 2);\n          if (0xb0 < *(short *)(&DAT_0010a800 + (long)int_var * 2)) {\n            byte_var = (&DAT_0010a7c0)[(int)(uint)byte_var];\n          }\n        }\n        byte_pointer = byte_pointer + 1;\n        ulong_var = (ulong)*(short *)(&DAT_0010a240 + long_var2 * 2);\n      } while (*(short *)(&DAT_0010a640 + ulong_var * 2) != 0xc2);\n      local_uint = (uint)ulong_var2;\n      byte_pointer = byte_pointer;\n      if (bool_var) {\n        DAT_0010d5b8 = local_byte_pointer;\n        DAT_0010d5c0 = local_uint;\n      }\nLAB_0010419f:\n      int_var = (int)*(short *)(&DAT_0010a980 + (long)(int)ulong_var * 2);\n      if (int_var == 0) {\n        int_var = (int)*(short *)(&DAT_0010a980 + (long)(int)DAT_0010d5c0 * 2);\n        byte_pointer = DAT_0010d5b8;\n      }\n      DAT_0010d530 = (int)byte_pointer - (int)byte_pointer;\n      DAT_0010d588 = *byte_pointer;\n      DAT_0010d5b0 = byte_pointer;\n      DAT_0010d5c8 = byte_pointer;\n      *byte_pointer = 0;\nLAB_001041f0:\n      byte_pointer = DAT_0010d5c8;\n      long_var2 = DAT_0010d5a0;\n      switch(int_var) {\n      case 0:\n        goto switchD_00104200_caseD_0;\n      case 1:\n      case 0x10:\n        DAT_0010d550 = 0x105;\n        break;\n      case 2:\n      case 0x11:\n        DAT_0010d550 = 0x107;\n        break;\n      case 3:\n      case 0x12:\n        DAT_0010d550 = 0x108;\n        break;\n      case 4:\n      case 0x13:\n        DAT_0010d550 = 0x109;\n        break;\n      case 5:\n      case 0x14:\n        DAT_0010d550 = 0x10a;\n        break;\n      case 6:\n      case 0x15:\n        DAT_0010d550 = 0x10b;\n        break;\n      case 7:\n      case 0x16:\n        DAT_0010d550 = 0x10c;\n        break;\n      case 8:\n      case 0x17:\n        DAT_0010d550 = 0x10d;\n        break;\n      case 9:\n      case 0x18:\n        DAT_0010d550 = 0x10e;\n        break;\n      case 10:\n      case 0x19:\n        DAT_0010d550 = 0x10f;\n        break;\n      case 0xb:\n      case 0x1a:\n        DAT_0010d550 = 0x106;\n        break;\n      case 0xc:\n      case 0x1b:\n        DAT_0010d550 = 0x113;\n        break;\n      case 0xd:\n      case 0x1c:\n        DAT_0010d550 = 0x111;\n        break;\n      case 0xe:\n      case 0x1d:\n        DAT_0010d550 = 0x103;\n        break;\n      case 0x1f:\n        DAT_0010d554 = DAT_0010d554 + 1;\n        goto LAB_001040b1;\n      case 0x20:\n        DAT_0010d550 = 0x28;\n        break;\n      case 0x21:\n        DAT_0010d550 = 0x29;\n        break;\n      case 0x22:\n        DAT_0010d550 = 0x2c;\n        break;\n      case 0x23:\n        DAT_0010d548 = (char *)xstrdup(DAT_0010d5c8);\n        DAT_0010d550 = 0x104;\n        break;\n      case 0x24:\n      case 0x25:\n      case 0x26:\n        goto LAB_001040b1;\n      case 0x27:\n        DAT_0010d554 = DAT_0010d554 + 1;\n        DAT_0010d550 = 0x102;\n        break;\n      case 0x28:\n        fwrite(DAT_0010d5c8,(long)DAT_0010d530,1,DAT_0010d538);\n        goto LAB_001040b1;\n      case 0x29:\n        goto switchD_00104200_caseD_29;\n      case 0x2a:\n        DAT_0010d550 = 0;\n        break;\n      default:\n        FUN_001033b0(\"fatal flex scanner internal error--no action found\");\n      case 0xf:\n      case 0x1e:\n        DAT_0010d550 = 0x112;\n      }\n      long_var2 = (long)integer_variable;\n    }\n    if (0 < DAT_0010d550) {\n      if (DAT_0010d550 != 0x100) {\n        integer_variable = 2;\n        if (DAT_0010d550 < 0x114) {\n          integer_variable = (int)(char)(&DAT_0010a0e0)[DAT_0010d550];\n        }\n        goto LAB_0010497d;\n      }\n      DAT_0010d550 = 0x101;\n      goto LAB_001051f0;\n    }\n    integer_variable = 0;\n    DAT_0010d550 = 0;\nLAB_0010497d:\n    uint_var = character_variable + integer_variable;\n    if ((0x22 < uint_var) || (integer_variable != (char)(&DAT_0010a0a0)[(int)uint_var])) goto LAB_001049db;\n    character_variable = (&DAT_0010a060)[(int)uint_var];\n    long_var2 = (long)character_variable;\n    if (character_variable < '\\x01') {\n      integer_variable = -(int)character_variable;\n      goto LAB_00104a0a;\n    }\n    DAT_0010d550 = -2;\n    local_int_var = local_int_var + -1 + (uint)(local_int_var == 0);\n    char_pointer_pointer2 = char_pointer_pointer2 + 1;\n    *char_pointer_pointer2 = DAT_0010d548;\n    goto LAB_001049d1;\n  }\nLAB_001049db:\n  integer_variable = (int)(char)(&DAT_0010a020)[(int)long_var2];\n  if ((&DAT_0010a020)[(int)long_var2] == '\\0') {\n    if (local_int_var == 0) {\n      _DAT_0010d544 = _DAT_0010d544 + 1;\n      FUN_001031a5();\nLAB_001051f0:\n      do {\n        if (((((char)(&DAT_0010a200)[long_var2] != -0xe) &&\n             (uint_var = (int)(char)(&DAT_0010a200)[long_var2] + 1, uint_var < 0x23)) &&\n            ((&DAT_0010a0a0)[(int)uint_var] == '\\x01')) &&\n           (long_var2 = (long)(char)(&DAT_0010a060)[(int)uint_var],\n           '\\0' < (char)(&DAT_0010a060)[(int)uint_var])) goto LAB_00105227;\n        if (local_char_pointer2 == local_char_pointer) goto LAB_0010524c;\n        local_char_pointer = local_char_pointer + -1;\n        char_pointer_pointer2 = char_pointer_pointer2 + -1;\n        long_var2 = (long)*local_char_pointer;\n      } while( true );\n    }\n    if (local_int_var != 3) goto LAB_001051f0;\n    if (0 < DAT_0010d550) {\n      DAT_0010d550 = -2;\n      goto LAB_001051f0;\n    }\n    if (DAT_0010d550 != 0) goto LAB_001051f0;\n    goto LAB_0010524c;\n  }\nLAB_00104a0a:\n  undefined_var2 = DAT_0010d660;\n  char_double_pointer = DAT_0010d558;\n  character_variable = (&DAT_00109fe0)[integer_variable];\n  pointer_to_pointer_to_char38 = (char **)char_pointer_pointer2[1 - character_variable];\n  switch(integer_variable) {\n  case 2:\n  case 6:\n    FUN_00103ba8();\n    break;\n  case 0x13:\n    if (DAT_0010d558 == (char **)0x0) {\n      return;\n    }\n    bfd_cache_close();\n    unlink(*DAT_0010d558);\n    return;\n  case 0x15:\n    FUN_001031a5();\n    break;\n  case 0x17:\n    pointer_to_undefined8 = (undefined8 *)*char_pointer_pointer2;\n    if (DAT_0010d558 == (char **)0x0) {\n      char_pointer = \"%s: no open archive\\n\";\nLAB_00104b62:\n      char_pointer = (char *)dcgettext(0,char_pointer,5);\n      fprintf(_stderr,char_pointer,undefined_var2);\n      FUN_0010315d();\n    }\n    else {\n      for (; pointer_to_undefined8 != (undefined8 *)0x0; pointer_to_undefined8 = (undefined8 *)pointer_to_undefined8[1]) {\n        for (pointer_undefined8_23 = (undefined8 *)DAT_0010d558[0x1f]; pointer_undefined8_23 != (undefined8 *)0x0;\n            pointer_undefined8_23 = (undefined8 *)pointer_undefined8_23[0x1e]) {\n          int_var = filename_cmp(*pointer_undefined8_23);\n          if (int_var == 0) {\n            FUN_00107740();\n            goto LAB_00104adf;\n          }\n        }\n        bfd_openr(*pointer_to_undefined8,0);\n        undefined8_variable = DAT_0010d660;\n        undefined_var2 = *pointer_to_undefined8;\n        char_pointer = (char *)dcgettext(0,\"%s: can\\'t find module file %s\\n\",5);\n        fprintf(_stderr,char_pointer,undefined8_variable,undefined_var2);\nLAB_00104adf:\n      }\n    }\n    break;\n  case 0x18:\n    pointer_to_undefined8 = (undefined8 *)*char_pointer_pointer2;\n    if (DAT_0010d558 == (char **)0x0) {\nLAB_00104b4f:\n      char_pointer = \"%s: no open output archive\\n\";\n      goto LAB_00104b62;\n    }\n    for (; pointer_to_undefined8 != (undefined8 *)0x0; pointer_to_undefined8 = (undefined8 *)pointer_to_undefined8[1]) {\n      bool_var = false;\n      char_double_pointer = DAT_0010d558 + 0x1f;\n      for (char_pointer = DAT_0010d558[0x1f]; char_pointer != (char *)0x0;\n          char_pointer = *(char **)(char_pointer + 0xf0)) {\n        int_var = filename_cmp();\n        if (int_var == 0) {\n          char_pointer = (char *)bfd_openr(*pointer_to_undefined8,0);\n          undefined_var2 = DAT_0010d660;\n          if (char_pointer == (char *)0x0) {\n            undefined8_variable = *pointer_to_undefined8;\n            char_pointer = (char *)dcgettext(0,\"%s: can\\'t open file %s\\n\",5);\n            fprintf(_stderr,char_pointer,undefined_var2,undefined8_variable);\n            FUN_0010315d();\n          }\n          else {\n            *char_double_pointer = char_pointer;\n            bool_var = true;\n            *(undefined8 *)(char_pointer + 0xf0) = *(undefined8 *)(char_pointer + 0xf0);\n          }\n        }\n        else {\n          char_double_pointer = (char **)(char_pointer + 0xf0);\n        }\n      }\n      if (!bool_var) {\n        char_pointer = (char *)bfd_openr(*pointer_to_undefined8,0);\n        undefined8_variable = DAT_0010d660;\n        undefined_var2 = *pointer_to_undefined8;\n        char_pointer = (char *)dcgettext(0,\"%s: can\\'t find module file %s\\n\",5);\n        fprintf(_stderr,char_pointer,undefined8_variable,undefined_var2);\n        undefined_var2 = DAT_0010d660;\n        if (char_pointer == (char *)0x0) {\n          undefined8_variable = *pointer_to_undefined8;\n          char_pointer = (char *)dcgettext(0,\"%s: can\\'t open file %s\\n\",5);\n          fprintf(_stderr,char_pointer,undefined_var2,undefined8_variable);\n          FUN_0010315d();\n        }\n        else {\n          *char_double_pointer = char_pointer;\n        }\n      }\n    }\n    break;\n  case 0x19:\n    if (DAT_0010d558 != (char **)0x0) {\n      DAT_0010d558[0x1f] = (char *)0x0;\n    }\n    break;\n  case 0x1a:\n    pointer_to_undefined8 = (undefined8 *)*char_pointer_pointer2;\n    if (DAT_0010d558 == (char **)0x0) goto LAB_00104b4f;\n    for (; pointer_to_undefined8 != (undefined8 *)0x0; pointer_to_undefined8 = (undefined8 *)pointer_to_undefined8[1]) {\n      bool_var = false;\n      char_double_pointer = DAT_0010d558 + 0x1f;\n      for (pointer_undefined8_23 = (undefined8 *)DAT_0010d558[0x1f]; undefined_var2 = DAT_0010d660,\n          pointer_undefined8_23 != (undefined8 *)0x0; pointer_undefined8_23 = (undefined8 *)pointer_undefined8_23[0x1e]) {\n        int_var = filename_cmp(*pointer_undefined8_23,*pointer_to_undefined8);\n        if (int_var == 0) {\n          bool_var = true;\n          *char_double_pointer = (char *)pointer_undefined8_23[0x1e];\n        }\n        else {\n          char_double_pointer = (char **)(pointer_undefined8_23 + 0x1e);\n        }\n      }\n      if (!bool_var) {\n        undefined8_variable = *pointer_to_undefined8;\n        char_pointer = (char *)dcgettext(0,\"%s: can\\'t find module file %s\\n\",5);\n        fprintf(_stderr,char_pointer,undefined_var2,undefined8_variable);\n        FUN_0010315d();\n      }\n    }\n    break;\n  case 0x1b:\n    pointer_to_undefined8 = (undefined8 *)*char_pointer_pointer2;\n    if (DAT_0010d558 == (char **)0x0) goto LAB_00104b4f;\n    for (; pointer_to_undefined8 != (undefined8 *)0x0; pointer_to_undefined8 = (undefined8 *)pointer_to_undefined8[1]) {\n      char_pointer = (char *)bfd_openr(*pointer_to_undefined8,\"plugin\");\n      undefined_var2 = DAT_0010d660;\n      char_double_pointer = DAT_0010d558;\n      if (char_pointer == (char *)0x0) {\n        undefined8_variable = *pointer_to_undefined8;\n        char_pointer = (char *)dcgettext(0,\"%s: can\\'t open file %s\\n\",5);\n        fprintf(_stderr,char_pointer,undefined_var2,undefined8_variable);\n        FUN_0010315d();\n      }\n      else {\n        *(char **)(char_pointer + 0xf0) = DAT_0010d558[0x1f];\n        char_double_pointer[0x1f] = char_pointer;\n      }\n    }\n    break;\n  case 0x1c:\n    if (DAT_0010d558 == (char **)0x0) goto LAB_00104b4f;\n    char_pointer = *DAT_0010d558;\n    DAT_0010d60c = 1;\n    DAT_0010d578 = _stdout;\n    char_pointer = (char *)dcgettext(0,\"Current open archive is %s\\n\",5);\n    printf(char_pointer,char_pointer);\n    for (char_pointer = DAT_0010d558[0x1f]; char_pointer != (char *)0x0; char_pointer = *(char **)(char_pointer + 0xf0))\n    {\n      FUN_00103ddc(char_pointer,0);\n    }\n    break;\n  case 0x1d:\n    if (DAT_0010d558 == (char **)0x0) goto LAB_00104b4f;\n    if (0 < _DAT_0010d2d0) {\n      *(uint *)((long)DAT_0010d558 + 0x44) = *(uint *)((long)DAT_0010d558 + 0x44) | 0x2000;\n    }\n    DAT_0010d568 = dup(DAT_0010d568);\n    bfd_close(char_double_pointer);\n    char_pointer = DAT_0010d570;\n    int_var = stat_struct(DAT_0010d570,&local_stat_var);\n    if ((int_var != 0) && (DAT_0010d558 = (char **)bfd_openw(char_pointer,0), DAT_0010d558 != (char **)0x0)\n       ) {\n      bfd_set_format(DAT_0010d558,2);\n      bfd_close(DAT_0010d558);\n    }\n    FUN_00105bc0(DAT_0010d560,DAT_0010d570,DAT_0010d568);\n    DAT_0010d558 = (char **)0x0;\n    free(DAT_0010d560);\n    free(DAT_0010d570);\n    break;\n  case 0x1e:\n    FUN_00103c60(*char_pointer_pointer2,0);\n    break;\n  case 0x1f:\n    FUN_00103c60(*char_pointer_pointer2,1);\n    break;\n  case 0x20:\n    char_pointer = *char_pointer_pointer2;\n    if (DAT_0010d558 == (char **)0x0) {\n      char_pointer = \"%s: no output archive specified yet\\n\";\n      goto LAB_00104b62;\n    }\n    long_var2 = FUN_00105300(char_pointer_pointer2[-1],0);\n    if (long_var2 != 0) {\n      FUN_001032a8(long_var2,FUN_0010312d,char_pointer);\n    }\n    break;\n  case 0x21:\n    char_pointer = *char_pointer_pointer2;\n    char_pointer = char_pointer_pointer2[-1];\n    undefined_var2 = FUN_00105300(char_pointer_pointer2[-2],0);\n    if (char_pointer == (char *)0x0) {\n      DAT_0010d578 = _stdout;\n    }\n    else {\n      DAT_0010d578 = fopen(char_pointer,\"w\");\n      if (DAT_0010d578 != (FILE *)0x0) {\n        FUN_001032a8(undefined_var2,FUN_00103ddc,char_pointer);\n        bfd_close(undefined_var2);\n        fclose(DAT_0010d578);\n        break;\n      }\n      DAT_0010d578 = _stdout;\n      char_pointer = (char *)dcgettext(0,\"Can\\'t open file %s\\n\",5);\n      fprintf(_stderr,char_pointer,char_pointer);\n    }\n    FUN_001032a8(undefined_var2,FUN_00103ddc,char_pointer);\n    bfd_close(undefined_var2);\n    break;\n  case 0x22:\n    pointer_to_pointer_to_char38 = (char **)*char_pointer_pointer2;\n    break;\n  case 0x23:\n  case 0x25:\n  case 0x27:\n    pointer_to_pointer_to_char38 = (char **)0x0;\n    break;\n  case 0x24:\n    pointer_to_pointer_to_char38 = (char **)char_pointer_pointer2[-1];\n    break;\n  case 0x26:\n    pointer_to_pointer_to_char38 = (char **)malloc(0x10);\n    char_pointer = char_pointer_pointer2[-2];\n    *pointer_to_pointer_to_char38 = *char_pointer_pointer2;\n    pointer_to_pointer_to_char38[1] = char_pointer;\n    break;\n  case 0x2a:\n    DAT_0010d60c = (uint)(DAT_0010d60c == 0);\n  }\n  long_var2 = (long)character_variable;\n  local_char_pointer = local_char_pointer + -long_var2;\n  char_pointer_pointer2[1 - long_var2] = (char *)pointer_to_pointer_to_char38;\n  char_pointer_pointer2 = char_pointer_pointer2 + (1 - long_var2);\n  uint_var = (int)(char)(&DAT_00109f80)[(char)(&DAT_00109fa0)[integer_variable] + -0x18] + (int)*local_char_pointer;\n  if ((uint_var < 0x23) && (*local_char_pointer == (&DAT_0010a0a0)[(int)uint_var])) {\n    long_var2 = (long)(char)(&DAT_0010a060)[(int)uint_var];\n  }\n  else {\n    long_var2 = (long)(char)(&DAT_00109f60)[(char)(&DAT_00109fa0)[integer_variable] + -0x18];\n  }\n  goto LAB_001049d1;\nswitchD_00104200_caseD_29:\n  int_var = ((int)byte_pointer - (int)DAT_0010d5c8) + -1;\n  *byte_pointer = DAT_0010d588;\n  double_pointer_to_long = (long **)(DAT_0010d5a8 + long_var2 * 8);\n  file_pointer_array = (FILE **)*double_pointer_to_long;\n  if (*(int *)(file_pointer_array + 7) == 0) {\n    DAT_0010d598 = *(uint *)((long)file_pointer_array + 0x1c);\n    *(undefined4 *)(file_pointer_array + 7) = 1;\n    *file_pointer_array = DAT_0010d590;\n  }\n  byte_pointer = DAT_0010d5b0;\n  file_pointer = file_pointer_array[1];\n  undefined_var5._8_8_ = file_pointer;\n  undefined_var5._0_8_ = file_pointer_array;\n  if ((byte *)((long)&file_pointer->_flags + (long)(int)DAT_0010d598) < DAT_0010d5b0) {\n    if ((byte *)((long)&file_pointer->_flags + (long)(int)DAT_0010d598 + 1) < DAT_0010d5b0) {\n      undefined_var5 = FUN_001033b0();\n    }\n    if (*(int *)(undefined_var5._0_8_ + 0x34) != 0) {\n      uint_var = (int)((long)byte_pointer - (long)byte_pointer) - 1;\n      for (long_var2 = 0; (int)long_var2 < (int)uint_var; long_var2 = long_var2 + 1) {\n        *(byte *)(undefined_var5._8_8_ + long_var2) = byte_pointer[long_var2];\n      }\n      long_ptr = *double_pointer_to_long;\n      if (*(int *)(long_ptr + 7) == 2) {\n        DAT_0010d598 = 0;\n        *(undefined4 *)((long)long_ptr + 0x1c) = 0;\nLAB_0010475e:\n        file_pointer = DAT_0010d590;\n        if (uint_var == 0) {\n          if ((DAT_0010d5a8 == 0) || (*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) == 0)) {\n            FUN_00103df9();\n            pointer_to_undefined8 = (undefined8 *)(DAT_0010d5a8 + DAT_0010d5a0 * 8);\n            undefined_var2 = FUN_001033d6(file_pointer);\n            *pointer_to_undefined8 = undefined_var2;\n          }\n          long_var2 = DAT_0010d5a8;\n          if (DAT_0010d5a8 != 0) {\n            long_var2 = *(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8);\n          }\n          int_var2 = 1;\n          FUN_001031cf(long_var2);\n          FUN_001030ed();\n        }\n        else {\n          int_var2 = 2;\n          *(undefined4 *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 0x38) = 2;\n        }\n      }\n      else {\n        while( true ) {\n          long_pointer = *double_pointer_to_long;\n          uint_var2 = ~uint_var + *(int *)(long_ptr + 3);\n          if (0 < (int)uint_var2) break;\n          uint_var2 = (int)DAT_0010d5b0 - (int)(void *)long_pointer[1];\n          if (*(int *)(long_pointer + 4) == 0) {\n            long_pointer[1] = 0;\nLAB_00104626:\n            FUN_001033b0();\n            break;\n          }\n          int_var2 = *(int *)(long_pointer + 3);\n          int_var3 = int_var2;\n          if (int_var2 < 1) {\n            int_var3 = int_var2 / 8;\n          }\n          *(int *)(long_pointer + 3) = int_var3 + int_var2;\n          pointer_to_void = realloc((void *)long_pointer[1],(long)(int_var3 + int_var2 + 2));\n          long_pointer[1] = (long)pointer_to_void;\n          if (pointer_to_void == (void *)0x0) goto LAB_00104626;\n          DAT_0010d5b0 = (byte *)((long)pointer_to_void + (long)(int)uint_var2);\n          long_ptr = *double_pointer_to_long;\n        }\n        if (0x2000 < (int)uint_var2) {\n          uint_var2 = 0x2000;\n        }\n        ulong_var2 = (ulong)uint_var2;\n        if (*(int *)((long)long_pointer + 0x24) == 0) {\n          int_pointer = __errno_location();\n          ulong_var2 = (ulong)(int)uint_var2;\n          ulong_var = (ulong)(int)uint_var;\n          *int_pointer = 0;\n          goto LAB_001046c7;\n        }\n        ulong_var = 0;\n        int_pointer = (int *)(long)(int)uint_var;\n        do {\n          int_var2 = getc(DAT_0010d590);\n          uint_var3 = (uint)ulong_var;\n          if (int_var2 == -1) {\n            int_var2 = ferror(DAT_0010d590);\n            uint_var2 = uint_var3;\n            if (int_var2 != 0) {\n              do {\n                char_pointer = \"input in flex scanner failed\";\n                FUN_001033b0();\n                do {\n                  *int_pointer = 0;\n                  clearerr((FILE *)char_pointer);\nLAB_001046c7:\n                  size_var = fread((void *)(*(long *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 8)\n                                         + ulong_var),1,ulong_var2,DAT_0010d590);\n                  char_pointer = (char *)DAT_0010d590;\n                  DAT_0010d598 = (uint)size_var;\n                  uint_var2 = DAT_0010d598;\n                  if ((DAT_0010d598 != 0) ||\n                     (int_var2 = ferror(DAT_0010d590), uint_var2 = DAT_0010d598, int_var2 == 0))\n                  goto LAB_00104738;\n                } while (*int_pointer == 4);\n              } while( true );\n            }\n            break;\n          }\n          if (int_var2 == 10) {\n            *(undefined *)\n             ((long)(int *)(long)(int)uint_var +\n             (long)(int)uint_var3 + *(long *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 8)) = 10;\n            uint_var2 = uint_var3 + 1;\n            break;\n          }\n          ulong_var = (ulong)(uint_var3 + 1);\n          *(char *)(*(long *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 8) + (long)int_pointer) =\n               (char)int_var2;\n          int_pointer = (int *)((long)int_pointer + 1);\n        } while (uint_var2 != uint_var3 + 1);\nLAB_00104738:\n        DAT_0010d598 = uint_var2;\n        uint_var2 = DAT_0010d598;\n        int_var2 = 0;\n        *(uint *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 0x1c) = DAT_0010d598;\n        if (uint_var2 == 0) goto LAB_0010475e;\n      }\n      long_ptr = (long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8);\n      long_var2 = *long_ptr;\n      uint_var = uint_var + DAT_0010d598;\n      if (*(int *)(long_var2 + 0x18) < (int)uint_var) {\n        int_var3 = ((int)DAT_0010d598 >> 1) + uint_var;\n        pointer_to_void = realloc(*(void **)(long_var2 + 8),(long)int_var3);\n        *(void **)(long_var2 + 8) = pointer_to_void;\n        undefined_var41._8_8_ = long_ptr;\n        undefined_var41._0_8_ = *long_ptr;\n        if (*(long *)(*long_ptr + 8) == 0) {\n          undefined_var41 = FUN_001033b0();\n        }\n        long_ptr = undefined_var41._8_8_;\n        *(int *)(undefined_var41._0_8_ + 0x18) = int_var3 + -2;\n      }\n      DAT_0010d598 = uint_var;\n      *(undefined *)(*(long *)(*long_ptr + 8) + (long)(int)uint_var) = 0;\n      *(undefined *)(*(long *)(*long_ptr + 8) + 1 + (long)(int)uint_var) = 0;\n      byte_pointer = *(byte **)(*long_ptr + 8);\n      DAT_0010d5c8 = byte_pointer;\n      if (int_var2 == 1) goto LAB_001048a4;\n      if (int_var2 == 2) goto LAB_001048ca;\n      byte_pointer = byte_pointer + int_var;\n      DAT_0010d5b0 = byte_pointer;\n      uint_var = FUN_0010300e();\n      goto LAB_001040d4;\n    }\n    if ((long)byte_pointer - (long)byte_pointer == 1) goto LAB_001048a4;\nLAB_001048ca:\n    byte_pointer = (byte *)((long)(int)DAT_0010d598 +\n                      *(long *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 8));\n    DAT_0010d5b0 = byte_pointer;\n    ulong_var = FUN_0010300e();\n    byte_pointer = DAT_0010d5c8;\n    goto LAB_0010419f;\n  }\n  byte_pointer = byte_pointer + int_var;\n  DAT_0010d5b0 = byte_pointer;\n  ulong_var = FUN_0010300e();\n  if (*(short *)(&DAT_0010a980 + (long)(int)(uint)ulong_var * 2) != 0) {\n    DAT_0010d5b8 = byte_pointer;\n    DAT_0010d5c0 = (uint)ulong_var;\n  }\n  ulong_var2 = ulong_var & 0xffffffff;\n  while( true ) {\n    int_var = (int)ulong_var2;\n    if (int_var == *(short *)(&DAT_0010a440 +\n                           (long)(*(short *)(&DAT_0010a640 + (long)int_var * 2) + 1) * 2)) break;\n    ulong_var2 = (ulong)(uint)(int)*(short *)(&DAT_0010a800 + (long)int_var * 2);\n  }\n  uint_var = (uint)*(short *)(&DAT_0010a240 +\n                           (long)(*(short *)(&DAT_0010a640 + (long)int_var * 2) + 1) * 2);\n  byte_pointer = byte_pointer;\n  if ((*(short *)(&DAT_0010a240 + (long)(*(short *)(&DAT_0010a640 + (long)int_var * 2) + 1) * 2) == 0)\n     || (uint_var == 0xb0)) goto LAB_0010419f;\n  byte_pointer = byte_pointer + 1;\n  goto LAB_001040d4;\nLAB_001048a4:\n  DAT_0010d5b0 = DAT_0010d5c8;\n  int_var = (int)(DAT_0010d5d0 - 1) / 2 + 0x2a;\n  goto LAB_001041f0;\nswitchD_00104200_caseD_0:\n  *byte_pointer = DAT_0010d588;\n  ulong_var = (ulong)DAT_0010d5c0;\n  byte_pointer = DAT_0010d5b8;\n  goto LAB_0010419f;\nLAB_00105227:\n  char_pointer_pointer2 = char_pointer_pointer2 + 1;\n  local_int_var = 3;\n  *char_pointer_pointer2 = DAT_0010d548;\nLAB_001049d1:\n  local_char_pointer = local_char_pointer + 1;\n  goto LAB_00103ee9;\n}\n\n",
            "current_name": "decompiled_code_function_00103e95",
            "entrypoint": "0x00103e95",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103e95": "decompiled_code_function_00103e95",
                "auVar40": "undefined_var5",
                "auVar41": "undefined_var41",
                "bVar28": "bool_var",
                "bVar30": "byte_var",
                "bVar39": "byte_var2",
                "cVar2": "character_variable",
                "iVar25": "int_var3",
                "iVar34": "integer_variable",
                "iVar37": "integer_variable",
                "iVar8": "int_var",
                "iVar9": "int_var2",
                "lVar17": "long_variable",
                "lVar18": "long_var2",
                "lVar21": "long_variable",
                "lVar31": "long_var",
                "local_678": "local_char_pointer_array",
                "local_740": "local_character_array",
                "local_7d0": "local_stat_var",
                "local_7f8": "local_byte_pointer",
                "local_7fc": "local_uint",
                "local_800": "local_int_var",
                "local_810": "local_char_double_pointer",
                "local_818": "local_long_var",
                "local_820": "local_char_pointer2",
                "local_828": "local_char_pointer",
                "pFVar4": "file_pointer",
                "pbVar32": "byte_pointer",
                "pbVar33": "byte_pointer",
                "pbVar35": "byte_pointer",
                "pbVar7": "byte_pointer",
                "pcVar10": "char_pointer",
                "pcVar15": "char_pointer",
                "pcVar16": "char_pointer",
                "piVar34": "int_pointer",
                "plVar12": "long_ptr",
                "plVar5": "long_pointer",
                "ppFVar3": "file_pointer_array",
                "ppcVar27": "char_double_pointer",
                "ppcVar29": "char_pointer_pointer2",
                "ppcVar38": "pointer_to_pointer_to_char38",
                "pplVar1": "double_pointer_to_long",
                "puVar22": "pointer_to_undefined8",
                "puVar23": "pointer_undefined8_23",
                "pvVar14": "pointer_to_void",
                "sVar13": "size_var",
                "stat": "stat_struct",
                "uVar11": "undefined_var2",
                "uVar19": "ulong_var",
                "uVar20": "uint_var",
                "uVar22": "integer_variable",
                "uVar23": "integer_variable",
                "uVar24": "uint_var2",
                "uVar26": "ulong_var2",
                "uVar36": "uint_var3",
                "uVar6": "undefined8_variable"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001052a0": {
            "additional_data": {
                "FUN_001052a0": {
                    "check_file": 10,
                    "check_file_info": 1,
                    "check_file_properties": 2,
                    "check_file_status": 4,
                    "get_file_details": 1,
                    "get_file_info": 5,
                    "get_file_information": 4,
                    "get_file_size": 2,
                    "get_file_size_and_type": 1,
                    "get_file_status": 1
                },
                "FUN_00107920": {
                    "print_warning": 4
                },
                "dcgettext": {
                    "get_text": 1,
                    "translate_message": 2,
                    "translate_text": 1
                },
                "iVar1": {
                    "result": 4,
                    "return_code": 1,
                    "stat_result": 2,
                    "stat_status": 1,
                    "status": 23
                },
                "param_1": {
                    "file_path": 26,
                    "filename": 5
                },
                "pcVar4": {
                    "error": 1,
                    "error_description": 3,
                    "error_message": 6,
                    "error_msg": 1,
                    "error_reason": 16,
                    "error_string": 2,
                    "reason": 2
                },
                "piVar2": {
                    "errno": 1,
                    "errno_location": 5,
                    "errno_ptr": 12,
                    "error": 2,
                    "error_code": 4,
                    "error_location": 3,
                    "error_pointer": 1,
                    "error_ptr": 3
                },
                "sStack_a8": {
                    "file_info": 4,
                    "file_stat": 14,
                    "file_stats": 9,
                    "file_status": 3,
                    "stat_data": 1
                },
                "stat": {
                    "get_file_info": 1,
                    "get_file_stat": 1,
                    "get_file_stats": 1,
                    "get_stat_info": 1
                },
                "uVar3": {
                    "error_message": 17,
                    "error_msg": 3,
                    "localized_message": 1,
                    "message": 7,
                    "warning": 1,
                    "warning_message": 2
                }
            },
            "called": [
                "dcgettext",
                "stat",
                "FUN_00107920",
                "FUN_001025a0"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00107650"
            ],
            "code": "\nlong check_file_status_001052a0(char *file_path)\n\n{\n  int status;\n  int *errno_ptr;\n  undefined8 error_message;\n  char *error_reason;\n  get_file_stat file_stat;\n  \n  if (file_path != (char *)0x0) {\n    status = get_file_stat(file_path,&file_stat);\n    if (status < 0) {\n      errno_ptr = __errno_location();\n      if (*errno_ptr == 2) {\n        error_message = dcgettext(0,\"\\'%s\\': No such file\",5);\n        FUN_00107920(error_message,file_path);\n      }\n      else {\n        error_reason = strerror(*errno_ptr);\n        error_message = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n        FUN_00107920(error_message,file_path,error_reason);\n      }\n    }\n    else if ((file_stat.st_mode & 0xf000) == 0x4000) {\n      error_message = dcgettext(0,\"Warning: \\'%s\\' is a directory\",5);\n      FUN_00107920(error_message,file_path);\n    }\n    else if ((file_stat.st_mode & 0xf000) == 0x8000) {\n      if (-1 < file_stat.st_size) {\n        return file_stat.st_size;\n      }\n      error_message = dcgettext(0,\"Warning: \\'%s\\' has negative size, probably it is too large\",5);\n      FUN_00107920(error_message,file_path);\n    }\n    else {\n      error_message = dcgettext(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n      FUN_00107920(error_message,file_path);\n    }\n  }\n  return -1;\n}\n\n",
            "current_name": "check_file_status_001052a0",
            "entrypoint": "0x001052a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001052a0": "check_file_status_001052a0",
                "dcgettext": "translate_message",
                "iVar1": "status",
                "param_1": "file_path",
                "pcVar4": "error_reason",
                "piVar2": "errno_ptr",
                "sStack_a8": "file_stat",
                "stat": "get_file_stat",
                "uVar3": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105300": {
            "additional_data": {
                "DAT_0010d5f8": {
                    "thin_format_flag": 1
                },
                "DAT_0010d64c": {
                    "format_option": 1
                },
                "FUN_00105300": {
                    "convert_library_format": 1,
                    "decompile_and_improve": 1,
                    "extract_and_convert_archives": 1,
                    "extract_archived_files": 7,
                    "extract_linked_files": 1
                },
                "_DAT_0010d5f0": {
                    "default_plugin": 1
                },
                "_DAT_0010d604": {
                    "thin_library_flag": 1
                },
                "_DAT_0010d610": {
                    "check_flag": 1
                },
                "_DAT_0010d618": {
                    "current_plugin": 1
                },
                "_DAT_0010d660": {
                    "library_error_message": 1
                },
                "_stderr": {
                    "standard_error": 1
                },
                "bVar3": {
                    "byte_var": 1,
                    "conversion_flag": 4,
                    "convert_existing_library": 1,
                    "convert_flag": 3,
                    "flag": 4,
                    "format_check_result": 1,
                    "has_thin_library": 1,
                    "is_archived": 1,
                    "is_thin": 2,
                    "is_thin_format": 5,
                    "is_thin_library": 3,
                    "thin_convert": 1,
                    "thin_format_check": 1,
                    "thin_library": 1,
                    "thin_library_flag": 2
                },
                "cVar4": {
                    "char_flag": 1,
                    "char_var": 3,
                    "check_format_result": 1,
                    "check_result": 1,
                    "conversion_result": 1,
                    "format_check": 7,
                    "format_check_flag": 1,
                    "format_check_result": 7,
                    "format_error": 2,
                    "format_flag": 3,
                    "format_match": 1,
                    "format_result": 1,
                    "is_converted": 1,
                    "result": 1
                },
                "iVar5": {
                    "result": 5,
                    "return_value": 3,
                    "stat_result": 11,
                    "status": 12
                },
                "lVar9": {
                    "archived_file": 7,
                    "archived_file_offset": 2,
                    "archived_file_pointer": 1,
                    "current_file_offset": 1,
                    "file": 1,
                    "file_descriptor": 5,
                    "file_location": 1,
                    "file_offset": 1,
                    "file_pointer": 4,
                    "file_ptr": 1,
                    "file_result": 1,
                    "next_archived_file": 2,
                    "next_file": 4
                },
                "local_a8": {
                    "file_info": 7,
                    "file_stat": 10,
                    "file_stat_result": 1,
                    "file_statistics": 1,
                    "file_stats": 5,
                    "file_status": 2,
                    "stat_buffer": 5
                },
                "local_b0": {
                    "archive_member": 1,
                    "bfd_stat": 1,
                    "buffer": 2,
                    "conversion_buffer": 1,
                    "conversion_message": 1,
                    "dummy_variable_1": 1,
                    "error_code": 1,
                    "error_container": 1,
                    "error_info": 2,
                    "error_object": 1,
                    "exit_flag": 1,
                    "file_metadata": 1,
                    "file_stat": 1,
                    "format": 1,
                    "header": 1,
                    "local_buffer": 1,
                    "local_file_pointer": 1,
                    "local_var1": 1,
                    "output": 1,
                    "param_buffer": 1,
                    "stat_block": 1,
                    "stat_buf": 1,
                    "stat_info": 1,
                    "symbol_table_pointer": 1,
                    "temp_data": 1,
                    "temp_variable": 1,
                    "temporary_var1": 1,
                    "temporary_variable": 1,
                    "unknown_value_1": 1
                },
                "param_1": {
                    "archive_path": 2,
                    "file_name": 1,
                    "file_path": 9,
                    "filename": 11,
                    "filepath": 1,
                    "input_file": 3,
                    "input_file_name": 2,
                    "input_filename": 2
                },
                "param_2": {
                    "archive_data": 1,
                    "archive_files": 1,
                    "archived_files": 6,
                    "extracted_files": 3,
                    "open_archived_files": 1,
                    "output": 4,
                    "output_file": 5,
                    "output_file_ptr": 2,
                    "output_filename": 1,
                    "result": 5,
                    "result_list": 1,
                    "result_ptr": 1
                },
                "pcVar2": {
                    "archive_format": 1,
                    "current_error": 1,
                    "current_file": 1,
                    "default_filename": 1,
                    "default_plugin": 1,
                    "default_plugin_name": 1,
                    "error_message": 5,
                    "error_msg": 3,
                    "error_string": 2,
                    "file_name": 1,
                    "plugin": 3,
                    "plugin_directory": 1,
                    "plugin_filename": 1,
                    "plugin_name": 8,
                    "program_name": 1
                },
                "piVar8": {
                    "errno_location": 8,
                    "errno_pointer": 2,
                    "errno_ptr": 8,
                    "errno_value_ptr": 1,
                    "error": 1,
                    "error_code": 4,
                    "error_num_ptr": 1,
                    "error_number": 4,
                    "error_ptr": 2
                },
                "plVar1": {
                    "archived_file": 3,
                    "archived_file_list": 3,
                    "archived_file_pointer": 1,
                    "archived_file_ptr": 6,
                    "archived_files": 3,
                    "archived_files_array": 1,
                    "current_file": 6,
                    "file": 1,
                    "file_pointer": 2,
                    "file_ptr": 1,
                    "next_file_ptr": 1,
                    "pointer_list": 2,
                    "ptr_current_file": 1
                },
                "puVar10": {
                    "archived_file_ptr_out": 1,
                    "conversion_result": 1,
                    "conversion_result_ptr": 1,
                    "converted_file": 4,
                    "converted_library": 2,
                    "converted_library_ptr": 1,
                    "converted_output": 1,
                    "created_file": 2,
                    "format": 1,
                    "format_ptr": 1,
                    "new_archived_files": 1,
                    "new_extracted_file": 1,
                    "new_result": 1,
                    "open_result": 1,
                    "plugin_output": 1,
                    "plugin_pointer": 2,
                    "plugin_result": 1,
                    "processed_files": 1,
                    "result": 3,
                    "return_ptr": 1,
                    "return_value": 2,
                    "thick_library": 1
                },
                "stderr": {
                    "standard_error": 1
                },
                "uVar6": {
                    "conversion_error": 1,
                    "convert_error_msg": 1,
                    "errmsg": 1,
                    "error_message": 7,
                    "error_message1": 1,
                    "error_message_1": 1,
                    "error_msg": 2,
                    "error_msg_id": 1,
                    "error_string": 3,
                    "format_conversion_error_msg": 1,
                    "gettext_result": 1,
                    "library_conversion_error": 1,
                    "localized_error": 1,
                    "localized_error_message": 1,
                    "message": 3,
                    "message_param_1": 1,
                    "result_var1": 1,
                    "return_value_1": 1,
                    "string_1": 1,
                    "translated_message": 1
                },
                "uVar7": {
                    "conversion_message": 1,
                    "errmsg2": 1,
                    "error_message": 5,
                    "error_message2": 1,
                    "error_message_2": 1,
                    "error_msg": 2,
                    "error_msg_argument": 1,
                    "error_string": 1,
                    "error_string2": 1,
                    "file_name": 1,
                    "filename": 1,
                    "gettext_param": 1,
                    "library_name": 3,
                    "library_path": 1,
                    "localized_message": 1,
                    "localized_message_argument": 1,
                    "message": 2,
                    "message_argument": 1,
                    "message_param_2": 1,
                    "result_var2": 1,
                    "return_value_2": 1,
                    "string_2": 1,
                    "translated_message_2": 1
                }
            },
            "called": [
                "FUN_00107c10",
                "bfd_openr_next_archived_file",
                "bfd_check_format_matches",
                "bfd_set_format",
                "FUN_00103bd1",
                "bfd_openr",
                "perror",
                "__errno_location",
                "FUN_0010315d",
                "FUN_00107c20",
                "dcgettext",
                "bfd_openw",
                "fprintf",
                "bfd_set_error",
                "bfd_close",
                "xexit",
                "stat",
                "FUN_00102710",
                "FUN_00107690",
                "bfd_get_error",
                "FUN_00107920"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00107650",
                "FUN_00103e95"
            ],
            "code": "\n\n\nundefined8 * extract_archived_files_00105300(char *filename,undefined8 *archived_files)\n\n{\n  long *current_file;\n  char *plugin_name;\n  byte is_thin_format;\n  char format_check;\n  int status;\n  undefined8 error_message;\n  undefined8 error_message;\n  int *errno_ptr;\n  long archived_file;\n  undefined8 *converted_file;\n  undefined8 buffer;\n  stat file_stat;\n  \n  bfd_set_error(0);\n  if (DAT_0010d5f0 == (char *)0x0) {\n    DAT_0010d5f0 = \"plugin\";\n  }\n  status = stat(filename,&file_stat);\n  plugin_name = DAT_0010d618;\n  if (status == 0) goto LAB_001053be;\n  errno_ptr = __errno_location();\n  if (*errno_ptr == 2) {\n    if (DAT_0010d604 == '\\0') {\n      fprintf(standard_error,\"%s: \",DAT_0010d660);\n      perror(filename);\n      FUN_0010315d();\n      return (undefined8 *)0x0;\n    }\n    if ((DAT_0010d5f0 == (char *)0x0) && (archived_files != (undefined8 *)0x0)) {\n      converted_file = (undefined8 *)FUN_00102710();\n      return converted_file;\n    }\n    archived_files = (undefined8 *)bfd_openw(filename,DAT_0010d5f0);\n    if (((archived_files != (undefined8 *)0x0) && (format_check = bfd_set_format(archived_files,2), format_check != '\\0')) &&\n       (format_check = bfd_close(archived_files), format_check != '\\0')) {\n      plugin_name = filename;\n      if (_DAT_0010d610 == 0) goto LAB_00102826;\n      goto LAB_001053be;\n    }\n  }\n  FUN_00107c10(filename);\n  do {\n    is_thin_format = *(byte *)((long)archived_files + 0x49) >> 4 & 1;\n    if (DAT_0010d5f8 == '\\0') {\n      if (is_thin_format != 0) {\n        error_message = *archived_files;\n        error_message = dcgettext(0,\"Cannot convert existing thin library %s to normal format\",5);\n        FUN_00107690(error_message,error_message);\n        goto LAB_00102812;\n      }\n    }\n    else if (is_thin_format == 0) {\n      error_message = *archived_files;\n      error_message = dcgettext(0,\"Cannot convert existing library %s to thin format\",5);\n      FUN_00107690(error_message,error_message);\nLAB_001027cb:\n      FUN_00107c20(filename);\n      status = bfd_get_error();\n      if (status == 0xd) {\nLAB_00102812:\n        FUN_00103bd1(buffer);\n      }\n                    \n      xexit(1);\n    }\n    do {\n      current_file = archived_files + 0x1e;\n      for (archived_file = bfd_openr_next_archived_file(archived_files,0); archived_file != 0;\n          archived_file = bfd_openr_next_archived_file(archived_files,archived_file)) {\n        *current_file = archived_file;\n        current_file = (long *)(archived_file + 0xf0);\n      }\n      *current_file = 0;\n      status = bfd_get_error();\n      if (status == 9) {\n        return archived_files;\n      }\n      do {\n        FUN_00107c10(filename);\nLAB_00102826:\n        error_message = dcgettext(0,\"creating %s\",5);\n        FUN_00107920(error_message,filename);\n        plugin_name = filename;\nLAB_001053be:\n        DAT_0010d618 = plugin_name;\n        archived_files = (undefined8 *)bfd_openr(filename,DAT_0010d5f0);\n      } while (archived_files == (undefined8 *)0x0);\n      format_check = bfd_check_format_matches(archived_files,2,&buffer);\n      if (format_check == '\\0') goto LAB_001027cb;\n    } while (((DAT_0010d64c != 2) && (DAT_0010d64c != 7)) ||\n            (archived_file = bfd_openr_next_archived_file(archived_files,0), archived_file == 0));\n  } while( true );\n}\n\n",
            "current_name": "extract_archived_files_00105300",
            "entrypoint": "0x00105300",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105300": "extract_archived_files_00105300",
                "_stderr": "standard_error",
                "bVar3": "is_thin_format",
                "cVar4": "format_check",
                "iVar5": "status",
                "lVar9": "archived_file",
                "local_a8": "file_stat",
                "local_b0": "buffer",
                "param_1": "filename",
                "param_2": "archived_files",
                "pcVar2": "plugin_name",
                "piVar8": "errno_ptr",
                "plVar1": "current_file",
                "puVar10": "converted_file",
                "stderr": "standard_error",
                "uVar6": "error_message",
                "uVar7": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105480": {
            "additional_data": {
                "DAT_0010d634": {
                    "flag": 1
                },
                "FUN_0010285f": {
                    "initialize": 2
                },
                "FUN_00105480": {
                    "extract_entries_from_archive": 1,
                    "iterate_and_process_entries": 1,
                    "process_archive": 2,
                    "process_archive_entries": 9,
                    "process_archived_entries": 1,
                    "process_archives": 1,
                    "process_entries": 16
                },
                "FUN_00105830": {
                    "get_entry_name": 3,
                    "get_file_entry": 1,
                    "get_parent_entry": 1
                },
                "_DAT_0010d630": {
                    "limit": 1
                },
                "__format": {
                    "entry_not_found_format": 1,
                    "err_msg_format": 1,
                    "error_format": 2,
                    "error_message": 5,
                    "error_message_format": 1,
                    "error_msg": 1,
                    "error_msg_format": 1,
                    "format_str": 1,
                    "format_string": 5,
                    "print_format": 1
                },
                "_stderr": {
                    "error_output": 1
                },
                "dcgettext": {
                    "lookup_translation": 1
                },
                "filename_cmp": {
                    "compare_filename": 1,
                    "compare_filenames": 2
                },
                "fprintf": {
                    "print_error_message": 1
                },
                "iVar1": {
                    "cmp_result": 3,
                    "comparison_result": 9,
                    "filename_cmp_result": 1,
                    "result": 2
                },
                "lVar2": {
                    "current_archive": 1,
                    "current_entry": 23,
                    "current_entry_ptr": 3,
                    "entry": 1,
                    "entry_ptr": 3
                },
                "local_c8": {
                    "buffer": 23,
                    "entry_info_buffer": 1,
                    "local_buffer": 5,
                    "temp_data": 1,
                    "temporary_buffer": 1
                },
                "local_cc": {
                    "count": 6,
                    "counter": 15,
                    "entry_count": 1,
                    "entry_counter": 3,
                    "found_count": 1,
                    "local_entry_count": 1,
                    "matched_count": 1,
                    "matched_entries_count": 1,
                    "num_processed": 1,
                    "processed_entry_count": 1
                },
                "param_1": {
                    "archive": 10,
                    "archive_ptr": 6,
                    "archives": 1,
                    "base_address": 1,
                    "entries": 1,
                    "entries_ptr": 1,
                    "entry_list": 7,
                    "entry_ptr": 1,
                    "file_data": 1,
                    "input_data": 1,
                    "ptr1": 1
                },
                "param_2": {
                    "callback": 14,
                    "callback_fn": 1,
                    "callback_func": 2,
                    "callback_function": 1,
                    "entry_callback": 1,
                    "entry_func": 2,
                    "entry_handler": 2,
                    "entry_processor": 4,
                    "entry_processor_ptr": 1,
                    "func_ptr": 1,
                    "process_entry": 1,
                    "process_entry_function": 1
                },
                "param_3": {
                    "archive_names": 1,
                    "archives": 1,
                    "entry_list": 2,
                    "entry_names": 7,
                    "file_list": 2,
                    "file_names": 3,
                    "filename_ptrs": 1,
                    "filenames": 13,
                    "ptr_array": 1
                },
                "param_4": {
                    "entry_count": 2,
                    "file_count": 2,
                    "filename_count": 1,
                    "num_archives": 2,
                    "num_entries": 8,
                    "num_filenames": 4,
                    "num_files": 12
                },
                "plVar3": {
                    "alt_entry_ptr": 1,
                    "backup_entry": 1,
                    "default_entry": 2,
                    "fallback_archive": 1,
                    "fallback_entry": 13,
                    "fallback_entry_ptr": 3,
                    "fallback_ptr": 1,
                    "last_entry_ptr": 1,
                    "next_entry": 2,
                    "ptr": 1,
                    "temp_entry": 2,
                    "temp_ptr": 1,
                    "tmp_entry": 2
                },
                "plVar5": {
                    "curr_ptr": 1,
                    "current_archive_entry": 1,
                    "current_entry": 2,
                    "current_entry_ptr": 1,
                    "current_file": 1,
                    "current_node": 1,
                    "entry": 6,
                    "entry_list": 1,
                    "entry_list_ptr": 1,
                    "entry_pointer": 3,
                    "entry_ptr": 11,
                    "file_entry": 1,
                    "next_entry": 1
                },
                "uVar4": {
                    "cmp_result2": 1,
                    "compare_result": 1,
                    "comparison_result": 3,
                    "comparison_result2": 1,
                    "entry_comparison_result": 1,
                    "entry_result": 1,
                    "filename_cmp_result": 1,
                    "filename_result": 1,
                    "result": 16,
                    "temp_result": 2,
                    "temp_value": 1,
                    "tmp_result": 1
                }
            },
            "called": [
                "FUN_00105830",
                "filename_cmp",
                "FUN_0010285f"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid process_archive_entries_00105480(long archive,code *callback,undefined8 *filenames,int num_files)\n\n{\n  int comparison_result;\n  char *format_string;\n  long current_entry;\n  long *fallback_entry;\n  undefined8 result;\n  long *entry_ptr;\n  int counter;\n  undefined buffer [152];\n  \n  current_entry = *(long *)(archive + 0xf0);\n  if (num_files == 0) {\n    for (; current_entry != 0; current_entry = *(long *)(current_entry + 0xf0)) {\n      (*callback)(current_entry);\n    }\n  }\n  else {\n    for (; current_entry != 0; current_entry = *(long *)(current_entry + 0xf0)) {\n      *(undefined4 *)(current_entry + 0xac) = 0;\n    }\n    do {\n      entry_ptr = *(long **)(archive + 0xf0);\n      counter = 0;\n      for (; entry_ptr != (long *)0x0; entry_ptr = (long *)entry_ptr[0x1e]) {\n        if (*(int *)((long)entry_ptr + 0xac) == 0) {\n          current_entry = *entry_ptr;\n          if (current_entry == 0) {\n            fallback_entry = (long *)entry_ptr[0x1d];\n            if ((long *)entry_ptr[0x1d] == (long *)0x0) {\n              fallback_entry = entry_ptr;\n            }\n            (**(code **)(fallback_entry[1] + 0x1e8))(entry_ptr,buffer);\n          }\n          else if (((*(byte *)(archive + 0x49) & 0x10) == 0) ||\n                  (current_entry = FUN_00105830(current_entry,archive), current_entry != 0)) {\n            result = FUN_00105830(*filenames,archive);\n            comparison_result = filename_cmp(result,current_entry);\n            if ((comparison_result == 0) &&\n               ((DAT_0010d634 == '\\0' || (counter = counter + 1, counter == _DAT_0010d630)))) {\n              (*callback)();\n              *(undefined4 *)((long)entry_ptr + 0xac) = 1;\n              goto LAB_0010553e;\n            }\n          }\n        }\n      }\n      result = *filenames;\n      format_string = (char *)dcgettext(0,\"no entry %s in archive\\n\",5);\n      fprintf(error_output,format_string,result);\nLAB_0010553e:\n      filenames = filenames + 1;\n      num_files = num_files + -1;\n    } while (num_files != 0);\n  }\n  return;\n}\n\n",
            "current_name": "process_archive_entries_00105480",
            "entrypoint": "0x00105480",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105480": "process_archive_entries_00105480",
                "__format": "format_string",
                "_stderr": "error_output",
                "dcgettext": "lookup_translation",
                "filename_cmp": "compare_filenames",
                "fprintf": "print_error_message",
                "iVar1": "comparison_result",
                "lVar2": "current_entry",
                "local_c8": "buffer",
                "local_cc": "counter",
                "param_1": "archive",
                "param_2": "callback",
                "param_3": "filenames",
                "param_4": "num_files",
                "plVar3": "fallback_entry",
                "plVar5": "entry_ptr",
                "uVar4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105570": {
            "additional_data": {
                "FUN_00105570": {
                    "analyze_files": 1,
                    "extract_and_improve": 1,
                    "process_file": 1,
                    "process_files": 4
                },
                "__s": {
                    "base_file_name": 1,
                    "base_file_path": 1,
                    "base_name": 2,
                    "base_name2": 2,
                    "base_name_2": 1,
                    "basename": 1,
                    "basename1": 1,
                    "basename_arg": 1,
                    "basename_current_file": 1,
                    "basename_file": 1,
                    "basename_ptr": 2,
                    "basename_result": 2,
                    "basename_str2": 1,
                    "char_ptr_var4": 2,
                    "file_base_name": 1,
                    "ptr_basename": 1,
                    "ptr_char4": 1,
                    "ptr_char_var4": 2,
                    "ptr_to_char_var4": 1,
                    "s": 1,
                    "string_pointer": 1,
                    "string_var": 1,
                    "temp_base_name": 1,
                    "temp_base_name_ptr": 1,
                    "temp_string2": 1
                },
                "auStack_158": {
                    "auxiliary_stack": 1,
                    "stack_arr": 2,
                    "stack_array": 16,
                    "stack_buffer": 1,
                    "stack_memory": 1,
                    "stack_var": 2,
                    "temp_array": 1,
                    "temp_stack": 2,
                    "temp_stack_data": 1,
                    "temporary_array": 1,
                    "undefined_array": 1,
                    "undefined_array_stack_var": 1
                },
                "bVar19": {
                    "b_var19": 1,
                    "bool_value": 2,
                    "bool_var": 17,
                    "bool_variable": 2,
                    "boolean_value": 1,
                    "flag_bool": 1,
                    "flag_value": 1,
                    "flag_var": 1,
                    "is_check_mode": 1,
                    "is_library": 1,
                    "temp_bool": 1,
                    "use_dcgettext": 1
                },
                "bVar20": {
                    "b_var20": 1,
                    "byte_value": 2,
                    "byte_value2": 1,
                    "byte_var": 3,
                    "byte_var2": 12,
                    "byte_variable2": 1,
                    "byte_variable_2": 1,
                    "is_flag_set": 1,
                    "temp_bool": 1,
                    "temp_byte_var": 1,
                    "temp_flag": 1,
                    "temp_var": 1
                },
                "bVar3": {
                    "byte_value": 3,
                    "byte_var": 18,
                    "byte_var1": 1,
                    "byte_var3": 1,
                    "byte_variable": 2,
                    "cmp_result": 1,
                    "flag": 1,
                    "result_byte": 1,
                    "result_flag": 1,
                    "return_value": 1,
                    "temp_byte": 1
                },
                "iVar4": {
                    "comparison_result": 3,
                    "counter": 1,
                    "i_var4": 1,
                    "index": 4,
                    "int_var": 13,
                    "int_variable": 1,
                    "integer_value": 1,
                    "integer_var": 2,
                    "integer_variable": 1,
                    "loop_counter": 1,
                    "result_int": 1,
                    "temp_int": 1
                },
                "lStack_100": {
                    "current_time": 1,
                    "file_time": 1,
                    "l_stack_100": 1,
                    "l_stack_val": 1,
                    "last_modified_time": 3,
                    "local_stack_var": 1,
                    "long_stack": 1,
                    "long_stack_var": 4,
                    "long_var": 1,
                    "long_var3": 3,
                    "long_variable3": 1,
                    "long_variable_3": 1,
                    "stack_value_1": 1,
                    "stack_var": 2,
                    "stack_variable": 2,
                    "temp_stack_long": 1,
                    "time_limit": 1,
                    "time_var": 3,
                    "timestamp": 1
                },
                "lVar11": {
                    "current": 1,
                    "current_address": 1,
                    "current_entry_address": 1,
                    "current_file": 1,
                    "current_file_path": 1,
                    "current_file_ptr": 3,
                    "current_ptr": 3,
                    "l_var11": 1,
                    "long_var": 1,
                    "long_var1": 6,
                    "long_variable": 1,
                    "long_variable_1": 1,
                    "loop_var1": 1,
                    "previous_file": 1,
                    "ptr1": 1,
                    "ptr_temp": 1,
                    "temp_file_ptr1": 1,
                    "temp_long1": 2,
                    "temp_value_1": 1,
                    "temp_var1": 1,
                    "var1": 1
                },
                "lVar12": {
                    "current_file_path": 1,
                    "current_file_ptr": 1,
                    "l_var12": 1,
                    "long_var2": 7,
                    "long_variable2": 1,
                    "long_variable_2": 1,
                    "loop_var2": 1,
                    "next_address": 1,
                    "next_entry_address": 1,
                    "next_file": 1,
                    "next_file_ptr": 2,
                    "next_ptr": 2,
                    "prev": 1,
                    "previous_ptr": 1,
                    "ptr2": 1,
                    "ptr_temp2": 1,
                    "temp_file_ptr": 1,
                    "temp_file_ptr2": 1,
                    "temp_long2": 2,
                    "temp_value_2": 1,
                    "temp_var2": 1,
                    "var2": 1
                },
                "local_15a": {
                    "bool_result": 1,
                    "byte_var3": 5,
                    "byte_var_2": 1,
                    "byte_variable_3": 1,
                    "final_flag": 1,
                    "final_result": 1,
                    "flag_sum": 1,
                    "flag_value": 1,
                    "flag_var": 1,
                    "is_any_modified": 1,
                    "local_bool_var": 1,
                    "local_byte_value": 1,
                    "local_byte_var": 6,
                    "local_byte_variable": 1,
                    "local_flag": 5,
                    "local_flags": 1,
                    "total_flag": 1
                },
                "param_1": {
                    "arg1": 7,
                    "argument": 1,
                    "binary_address": 1,
                    "binary_function_param": 1,
                    "binary_pointer": 1,
                    "context": 1,
                    "file": 1,
                    "file_array": 1,
                    "file_descriptor": 1,
                    "file_info": 2,
                    "file_manager": 2,
                    "function_context": 1,
                    "function_param": 1,
                    "input": 3,
                    "input_data": 1,
                    "input_param": 5,
                    "input_value": 1
                },
                "param_2": {
                    "arg2": 4,
                    "args": 2,
                    "file_list": 2,
                    "file_names": 3,
                    "file_paths": 13,
                    "filename_list": 1,
                    "filenames": 2,
                    "input_array": 1,
                    "input_files": 1,
                    "string_array": 1,
                    "string_array_param": 1
                },
                "param_3": {
                    "append_flag": 1,
                    "arg3": 4,
                    "boolean_param": 1,
                    "check_flag": 2,
                    "check_stat": 1,
                    "condition": 1,
                    "flag": 11,
                    "flag_param": 1,
                    "is_binary": 1,
                    "is_dependent": 1,
                    "is_flag_set": 1,
                    "is_recursive": 3,
                    "is_reverse": 2,
                    "reverse": 1
                },
                "pcVar10": {
                    "char_pointer_3": 1,
                    "char_ptr_var3": 2,
                    "current_file": 5,
                    "current_file_name": 4,
                    "current_file_path": 1,
                    "current_file_path_ptr": 1,
                    "current_file_pointer": 1,
                    "current_filename": 2,
                    "current_path": 1,
                    "file": 2,
                    "file_path_ptr": 1,
                    "file_ptr": 1,
                    "next_file": 1,
                    "pc_var10": 1,
                    "pointer5": 1,
                    "ptr_arg3": 1,
                    "ptr_char3": 1,
                    "ptr_char_var3": 2,
                    "ptr_to_char_var3": 1,
                    "temp_string": 1
                },
                "pcVar7": {
                    "basename": 1,
                    "char_pointer_1": 1,
                    "char_ptr_var": 1,
                    "char_ptr_var1": 1,
                    "curr_file": 1,
                    "current_file": 6,
                    "current_file_path": 3,
                    "file_name": 3,
                    "file_path": 1,
                    "file_path_1": 1,
                    "file_path_ptr": 2,
                    "filename": 1,
                    "filename1": 1,
                    "pc_var7": 1,
                    "pointer3": 1,
                    "ptr_arg": 1,
                    "ptr_char1": 1,
                    "ptr_char_var": 1,
                    "ptr_char_var1": 1,
                    "ptr_to_char_var1": 1,
                    "temp_char": 1
                },
                "pcVar8": {
                    "base_name": 5,
                    "basename": 1,
                    "basename_file": 2,
                    "basename_ptr": 1,
                    "basename_str": 1,
                    "basename_var": 2,
                    "char_pointer_2": 1,
                    "char_ptr_var2": 2,
                    "curr_file_copy": 1,
                    "file_path_2": 1,
                    "filename2": 1,
                    "modified_current_file": 1,
                    "modified_file": 1,
                    "new_base_name": 1,
                    "pc_var8": 1,
                    "pointer4": 1,
                    "ptr_arg2": 1,
                    "ptr_char2": 1,
                    "ptr_char_var2": 2,
                    "ptr_to_char_var2": 1,
                    "temp_char2": 1,
                    "temp_file_path": 1,
                    "temp_file_path_ptr": 1
                },
                "piVar6": {
                    "errno_location": 4,
                    "errno_ptr": 9,
                    "error_number": 2,
                    "error_ptr": 2,
                    "error_variable": 1,
                    "int_pointer": 1,
                    "int_ptr": 1,
                    "integer_pointer": 1,
                    "integer_ptr_var": 1,
                    "pointer2": 1,
                    "pointer_to_i_var6": 1,
                    "ptr_errno": 1,
                    "ptr_int": 1,
                    "ptr_int_var": 3,
                    "ptr_to_int_var": 1
                },
                "ppcVar1": {
                    "array_ptr": 1,
                    "binary_path_pointer": 1,
                    "current_file": 6,
                    "current_file_array": 1,
                    "current_file_path": 4,
                    "file_list": 2,
                    "file_manager_ptr": 1,
                    "file_path_ptr": 2,
                    "file_paths_ptr": 1,
                    "file_ptr": 2,
                    "param_ptr": 1,
                    "pointer1": 1,
                    "pointer_array": 1,
                    "pointer_ptr": 1,
                    "pointer_to_ppc_var1": 1,
                    "ptr_args": 1,
                    "ptr_arr": 1,
                    "ptr_file_list": 1,
                    "ptr_to_var1": 1
                },
                "ppcVar15": {
                    "array_ptr2": 1,
                    "char_ptr_ptr_var": 1,
                    "current_directory": 1,
                    "current_file": 1,
                    "current_file_manager_ptr": 1,
                    "current_file_paths_ptr": 1,
                    "current_file_pointer": 1,
                    "current_file_ptr": 2,
                    "current_node": 1,
                    "current_ptr": 1,
                    "file_array_ptr": 1,
                    "file_list": 3,
                    "file_list_ptr": 1,
                    "file_path_ptr": 1,
                    "file_path_ptr_ptr": 1,
                    "file_paths": 1,
                    "files": 1,
                    "param_ptr2": 1,
                    "pointer_array1": 1,
                    "pointer_array_2": 1,
                    "pointer_ptr1": 1,
                    "pointer_to_ppc_var15": 1,
                    "previous_file_ptr": 1,
                    "ptr_args2": 1,
                    "ptr_arr1": 1,
                    "ptr_to_ptr_var1": 1,
                    "temp_file_ptr3": 1,
                    "temp_pointer_1": 1
                },
                "ppcVar16": {
                    "array_ptr3": 1,
                    "char_ptr_ptr_var2": 1,
                    "current_entry": 1,
                    "current_file_path": 1,
                    "current_file_ptr": 2,
                    "current_file_ptr_list": 1,
                    "current_ptr": 1,
                    "file_array_ptr_temp": 1,
                    "file_path_ptr_ptr": 1,
                    "file_ptr": 2,
                    "loop_ptr1": 1,
                    "next_file_ptr": 1,
                    "next_file_ptr2": 1,
                    "param_ptr3": 1,
                    "pointer_array2": 1,
                    "pointer_array_3": 1,
                    "pointer_ptr2": 1,
                    "pointer_to_ppc_var16": 1,
                    "previous_file_pointer": 1,
                    "previous_node": 1,
                    "ptr3": 1,
                    "ptr_arr2": 1,
                    "ptr_temp_args": 1,
                    "ptr_to_ptr_var2": 1,
                    "temp_current_file_ptr": 1,
                    "temp_directory": 1,
                    "temp_file_manager_ptr": 1,
                    "temp_file_ptr4": 1,
                    "temp_pointer_2": 1
                },
                "ppcVar18": {
                    "array_ptr4": 1,
                    "char_ptr_ptr_var3": 1,
                    "file_list_ptr": 1,
                    "file_path_ptr_ptr": 1,
                    "file_paths_ptr_2": 1,
                    "param_ptr4": 1,
                    "pointer_array3": 1,
                    "pointer_array_4": 1,
                    "pointer_ptr3": 1,
                    "pointer_to_ppc_var18": 1,
                    "prev_entry": 1,
                    "prev_file": 1,
                    "prev_file_ptr": 1,
                    "prev_ptr": 1,
                    "previous_directory": 1,
                    "previous_file": 1,
                    "previous_file_array_ptr": 1,
                    "previous_file_list": 1,
                    "previous_file_path": 1,
                    "previous_file_pointer2": 1,
                    "previous_file_ptr": 2,
                    "previous_file_ptr2": 1,
                    "previous_list_node": 1,
                    "previous_ptr": 1,
                    "ptr_arr3": 1,
                    "ptr_temp_args2": 1,
                    "ptr_to_ptr_var3": 1,
                    "temp_file_manager_ptr2": 1,
                    "temp_file_ptr": 1,
                    "temp_pointer_3": 1
                },
                "sStack_c8": {
                    "file_stat": 3,
                    "file_stats": 2,
                    "s_stack_c8": 1,
                    "stack_variable": 1,
                    "stat_buffer": 1,
                    "stat_data": 1,
                    "stat_result": 1,
                    "stat_stack": 1,
                    "stat_struct": 7,
                    "stat_struct_var": 1,
                    "stat_structure": 2,
                    "stat_var": 7,
                    "stat_variable": 1,
                    "temp_stack_struct": 1
                },
                "sVar5": {
                    "s_var5": 1,
                    "size": 7,
                    "size_value": 1,
                    "size_var": 13,
                    "size_variable": 2,
                    "string_length": 4,
                    "string_size": 1,
                    "temp_size": 1
                },
                "uVar13": {
                    "function_result": 1,
                    "function_return": 1,
                    "result": 8,
                    "result_value": 1,
                    "return_val": 1,
                    "return_value": 5,
                    "return_var": 1,
                    "status": 1,
                    "u_var13": 1,
                    "undefined_var": 1,
                    "undefined_var13": 1,
                    "undefined_var3": 7,
                    "undefined_variable2": 1,
                    "undefined_variable_3": 1
                },
                "uVar14": {
                    "file_name_length": 1,
                    "length": 3,
                    "length_modifier": 1,
                    "max_len": 1,
                    "max_string_length": 1,
                    "temp_long3": 2,
                    "temp_var": 1,
                    "u_var14": 1,
                    "ulong_value": 3,
                    "ulong_var": 15,
                    "ulong_variable": 2
                },
                "uVar17": {
                    "file_check_mode": 1,
                    "file_type": 2,
                    "flag_value": 3,
                    "stat_flag": 1,
                    "stat_mode": 1,
                    "temp_flag": 1,
                    "temp_u_int": 1,
                    "u_var17": 1,
                    "uint_value": 3,
                    "uint_var": 15,
                    "uint_variable": 2
                },
                "uVar2": {
                    "return_value": 1,
                    "temp_var": 1,
                    "u_var2": 1,
                    "u_var_temp": 1,
                    "undefined": 4,
                    "undefined_value": 2,
                    "undefined_var": 17,
                    "undefined_var2": 2,
                    "undefined_variable": 1
                },
                "uVar9": {
                    "base_name_result": 1,
                    "basename_result": 1,
                    "dep_file": 2,
                    "dep_file_name": 1,
                    "dep_file_path": 1,
                    "function_result": 1,
                    "library_file": 1,
                    "result": 2,
                    "result_value": 1,
                    "result_var": 1,
                    "temp_file_ret_val": 1,
                    "temp_long": 1,
                    "temp_result": 1,
                    "temp_var": 1,
                    "temporary_var": 1,
                    "u_var9": 1,
                    "undefined_var": 1,
                    "undefined_var2": 7,
                    "undefined_var9": 2,
                    "undefined_var_2": 1,
                    "undefined_variable": 1,
                    "undefined_variable_2": 1
                }
            },
            "called": [
                "FUN_00102943"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nundefined8 process_files_00105570(long arg1,char **file_paths,char flag)\n\n{\n  char **current_file;\n  undefined undefined_var;\n  byte byte_var;\n  int int_var;\n  size_t size_var;\n  int *errno_ptr;\n  char *current_file;\n  char *base_name;\n  undefined8 undefined_var2;\n  char *current_file;\n  char *basename_ptr;\n  long long_var1;\n  long long_var2;\n  undefined8 result;\n  ulong ulong_var;\n  char **file_list;\n  char **current_file_ptr;\n  uint uint_var;\n  char **previous_file_ptr;\n  bool bool_var;\n  byte byte_var2;\n  byte local_byte_var;\n  undefined stack_array [88];\n  long long_stack_var;\n  stat stat_var;\n  \n  byte_var2 = 0;\n  current_file = (char **)(arg1 + 0xf0);\n  local_byte_var = 0;\n  if (file_paths == (char **)0x0) {\n    result = FUN_00102943();\n    return result;\n  }\n  do {\n    current_file = *file_paths;\njoined_r0x001055aa:\n    if (current_file == (char *)0x0) {\n      if (local_byte_var != 0) {\n        result = FUN_001058b0(arg1);\n        return result;\n      }\n      DAT_0010d618 = 0;\n      return 0;\n    }\n    file_list = *(char ***)(arg1 + 0xf0);\n    current_file_ptr = current_file;\n    if (flag != '\\0') {\nLAB_0010564c:\n      uint_var = DAT_0010d640;\n      if (DAT_0010d640 != 0) goto LAB_001028f5;\n      long_var2 = *(long *)(arg1 + 0xf0);\n      if (*(long *)(arg1 + 0xf0) == 0) goto LAB_0010571f;\nLAB_00105670:\n      do {\n        long_var1 = long_var2;\n        long_var2 = *(long *)(long_var1 + 0xf0);\n      } while (long_var2 != 0);\n      current_file_ptr = (char **)(long_var1 + 0xf0);\n      current_file = *file_paths;\n      do {\n        if (DAT_0010d620 != 0) {\n          result = FUN_00105830(current_file,arg1);\n          int_var = filename_cmp(result,\"__.LIBDEP\");\n          if (int_var == 0) {\n            byte_var = FUN_00105ae0(current_file_ptr,DAT_0010d620,DAT_0010d60c != 0,DAT_0010d5f8);\n            local_byte_var = byte_var | local_byte_var;\n            goto LAB_0010577e;\n          }\n          current_file = *file_paths;\n        }\n        undefined_var = DAT_0010d5f8;\n        bool_var = DAT_0010d60c != 0;\n        long_var2 = bfd_openr(current_file,DAT_0010d5f0);\n        if (long_var2 != 0) {\n          file_paths = file_paths + 1;\n          byte_var = FUN_00105af0(current_file_ptr,long_var2,(uint)bool_var,undefined_var);\n          local_byte_var = local_byte_var | byte_var;\n          current_file = *file_paths;\n          goto joined_r0x001055aa;\n        }\n        FUN_00107c10(current_file,0);\n        uint_var = (uint)bool_var;\nLAB_001028f5:\n        result = DAT_0010d638;\n        if (uint_var == 3) {\n          long_var2 = *(long *)(arg1 + 0xf0);\n          if (*(long *)(arg1 + 0xf0) != 0) goto LAB_00105670;\n        }\n        else {\n          for (; (undefined8 *)*current_file_ptr != (undefined8 *)0x0;\n              current_file_ptr = (char **)(*current_file_ptr + 0xf0)) {\n            int_var = filename_cmp(*(undefined8 *)*current_file_ptr,result);\n            if (int_var == 0) {\n              if (uint_var == 2) {\n                current_file_ptr = (char **)(*current_file_ptr + 0xf0);\n              }\n              break;\n            }\n          }\n        }\nLAB_0010571f:\n        current_file = *file_paths;\n      } while( true );\n    }\n    previous_file_ptr = current_file;\n    if (file_list == (char **)0x0) {\n      uint_var = DAT_0010d640;\n      if (DAT_0010d640 == 0) goto LAB_0010571f;\n      goto LAB_001028f5;\n    }\nLAB_001055d8:\n    if (DAT_0010d5f9 == '\\0') {\n      current_file = (char *)lbasename(*file_list);\n      base_name = current_file;\n      if (DAT_0010d5fa != '\\0') {\n        size_var = strlen(current_file);\n        ulong_var = (ulong)*(byte *)(*(long *)(arg1 + 8) + 0x1e);\n        if (ulong_var < size_var) {\n          base_name = (char *)xmalloc(ulong_var + 1);\n          long_var2 = *(long *)(arg1 + 8);\n          current_file = base_name;\n          for (ulong_var = (ulong)*(byte *)(long_var2 + 0x1e); ulong_var != 0; ulong_var = ulong_var - 1) {\n            *current_file = *current_file;\n            current_file = current_file + (ulong)byte_var2 * -2 + 1;\n            current_file = current_file + (ulong)byte_var2 * -2 + 1;\n          }\n          base_name[*(byte *)(long_var2 + 0x1e)] = '\\0';\n        }\n        current_file = *file_paths;\n        current_file = base_name;\n        if (DAT_0010d5f9 == '\\0') goto LAB_00105611;\n        goto LAB_00102980;\n      }\n      current_file = *file_paths;\n      if (DAT_0010d5f9 != '\\0') goto LAB_00102980;\nLAB_00105611:\n      basename_ptr = (char *)lbasename(current_file);\n      if (DAT_0010d5fa != '\\0') {\n        size_var = strlen(basename_ptr);\n        ulong_var = (ulong)*(byte *)(*(long *)(arg1 + 8) + 0x1e);\n        current_file = basename_ptr;\n        current_file = base_name;\n        if (ulong_var < size_var) {\n          current_file = (char *)xmalloc(ulong_var + 1);\n          long_var2 = *(long *)(arg1 + 8);\n          base_name = current_file;\n          for (ulong_var = (ulong)*(byte *)(long_var2 + 0x1e); ulong_var != 0; ulong_var = ulong_var - 1) {\n            *base_name = *basename_ptr;\n            basename_ptr = basename_ptr + (ulong)byte_var2 * -2 + 1;\n            base_name = base_name + (ulong)byte_var2 * -2 + 1;\n          }\n          current_file[*(byte *)(long_var2 + 0x1e)] = '\\0';\n        }\n        goto LAB_00102980;\n      }\n      int_var = filename_cmp(basename_ptr,base_name);\n      if (int_var == 0) goto LAB_00102993;\nLAB_00105639:\n      previous_file_ptr = file_list + 0x1e;\n      file_list = (char **)file_list[0x1e];\n      if (file_list == (char **)0x0) goto LAB_0010564c;\n      goto LAB_001055d8;\n    }\n    current_file = *file_paths;\n    current_file = *file_list;\nLAB_00102980:\n    int_var = filename_cmp(current_file,current_file);\n    if (int_var != 0) goto LAB_00105639;\nLAB_00102993:\n    if (file_list[0x1c] == (char *)0x0) goto LAB_00105639;\n    if (_DAT_0010d644 != 0) {\n      int_var = stat(*file_paths,&stat_var);\n      if (int_var != 0) {\n        errno_ptr = __errno_location();\n        if (*errno_ptr != 2) {\n          FUN_00107c10(*file_paths);\nLAB_00102b7e:\n          current_file = *file_list;\n          result = dcgettext(0,\"internal stat error on %s\",5);\n          FUN_00107690(result,current_file);\n          free(file_paths);\n          return 0;\n        }\n        goto LAB_0010577e;\n      }\n      current_file_ptr = (char **)file_list[0x1d];\n      if ((char **)file_list[0x1d] == (char **)0x0) {\n        current_file_ptr = file_list;\n      }\n      int_var = (**(code **)(current_file_ptr[1] + 0x1e8))(file_list,stack_array);\n      if (int_var != 0) goto LAB_00102b7e;\n      if (stat_var.st_mtim.tv_sec <= long_stack_var) goto LAB_0010577e;\n    }\n    result = FUN_00105870(current_file,2,*file_list);\n    if (DAT_0010d620 == 0) {\nLAB_00102ae2:\n      current_file = *file_paths;\n      bool_var = DAT_0010d60c != 0;\n      long_var2 = bfd_openr(current_file,DAT_0010d5f0);\n      if (long_var2 == 0) {\n        FUN_00107c10(current_file,0);\n        goto LAB_00102b3e;\n      }\n      byte_var = FUN_00103172(result,long_var2,bool_var);\n    }\n    else {\n      undefined_var2 = FUN_00105830(*file_paths,arg1);\n      int_var = filename_cmp(undefined_var2,\"__.LIBDEP\");\n      if (int_var != 0) goto LAB_00102ae2;\nLAB_00102b3e:\n      byte_var = FUN_00103172(result,DAT_0010d620,DAT_0010d60c != 0);\n    }\n    if (byte_var != 0) {\n      *previous_file_ptr = *(char **)(*previous_file_ptr + 0xf0);\n      local_byte_var = byte_var;\n    }\nLAB_0010577e:\n    file_paths = file_paths + 1;\n  } while( true );\n}\n\n",
            "current_name": "process_files_00105570",
            "entrypoint": "0x00105570",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105570": "process_files_00105570",
                "__s": "basename_ptr",
                "auStack_158": "stack_array",
                "bVar19": "bool_var",
                "bVar20": "byte_var2",
                "bVar3": "byte_var",
                "iVar4": "int_var",
                "lStack_100": "long_stack_var",
                "lVar11": "long_var1",
                "lVar12": "long_var2",
                "local_15a": "local_byte_var",
                "param_1": "arg1",
                "param_2": "file_paths",
                "param_3": "flag",
                "pcVar10": "current_file",
                "pcVar7": "current_file",
                "pcVar8": "base_name",
                "piVar6": "errno_ptr",
                "ppcVar1": "current_file",
                "ppcVar15": "file_list",
                "ppcVar16": "current_file_ptr",
                "ppcVar18": "previous_file_ptr",
                "sStack_c8": "stat_var",
                "sVar5": "size_var",
                "uVar13": "result",
                "uVar14": "ulong_var",
                "uVar17": "uint_var",
                "uVar2": "undefined_var",
                "uVar9": "undefined_var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001057a0": {
            "additional_data": {
                "DAT_00102ba1": {
                    "placeholder": 1
                },
                "FUN_001057a0": {
                    "create_temp_file_path": 2,
                    "extract_and_create_temp_file": 2,
                    "extract_and_store_file_name": 1,
                    "extract_dir_and_create_temp_file": 1,
                    "extract_directory_name": 1,
                    "extract_file_from_path": 1,
                    "extract_file_name": 3,
                    "extract_file_name_and_create_temp_file": 1,
                    "extract_filename_and_create_temp_file": 2,
                    "extract_filepath_and_create_temp_file": 2,
                    "extract_last_directory": 1,
                    "reverse_and_alloc_path": 1,
                    "reverse_and_store_path_to_file": 1,
                    "reverse_directory_path": 1,
                    "reverse_extracted_file_name": 1,
                    "reverse_file_path": 2,
                    "reverse_filename": 1,
                    "reverse_filepath": 1,
                    "reverse_path_and_create_file": 2,
                    "reverse_path_and_create_temp_file": 1
                },
                "__template": {
                    "template": 1
                },
                "auVar8": {
                    "result": 8,
                    "result_tuple": 1,
                    "result_wrapper": 1,
                    "return_data": 1,
                    "return_val": 1,
                    "return_value": 17,
                    "return_value_from_function": 1
                },
                "bVar7": {
                    "byte_counter": 1,
                    "byte_value": 1,
                    "char_counter": 1,
                    "counter": 1,
                    "flag": 3,
                    "found_separator": 1,
                    "found_slash": 1,
                    "increment": 1,
                    "is_first_iteration": 1,
                    "is_first_slash": 2,
                    "is_last_slash": 1,
                    "is_null": 1,
                    "is_slash": 4,
                    "is_slash_present": 1,
                    "is_zero": 1,
                    "loop_increment": 1,
                    "offset": 1,
                    "offset_multiplier": 1,
                    "skip_factor": 1,
                    "slash_counter": 1,
                    "slash_found": 2,
                    "slash_increment": 1,
                    "start_backward": 1,
                    "zero": 1
                },
                "iVar1": {
                    "file_result": 1,
                    "result": 12,
                    "temp_file_result": 1,
                    "temporary_file_descriptor": 1
                },
                "lVar3": {
                    "copy_length": 1,
                    "dir_name_length": 1,
                    "file_name_length": 2,
                    "file_path_length": 2,
                    "filename_length": 4,
                    "filename_start_index": 1,
                    "input_filename_length": 1,
                    "input_path_length": 1,
                    "last_directory_length": 1,
                    "len_prefix": 1,
                    "length": 1,
                    "path_len": 1,
                    "path_length": 11,
                    "prefix_length": 2,
                    "substring_length": 1
                },
                "lVar4": {
                    "count": 1,
                    "counter": 4,
                    "current_length": 1,
                    "i": 6,
                    "index": 5,
                    "iteration_count": 1,
                    "iterator": 1,
                    "loop_counter": 9,
                    "temp_l_var": 1,
                    "temp_length": 2
                },
                "lVar5": {
                    "diff": 1,
                    "filename_length": 1,
                    "input_file_name_length": 1,
                    "last_delimiter_offset": 1,
                    "last_separator_index": 1,
                    "last_separator_offset": 1,
                    "last_slash_distance": 1,
                    "last_slash_index": 3,
                    "last_slash_offset": 2,
                    "len_suffix": 1,
                    "offset": 4,
                    "path_difference": 1,
                    "path_length": 2,
                    "relative_path_length": 1,
                    "slash_index": 5,
                    "slash_offset": 1,
                    "slash_position": 2,
                    "slice_length": 1,
                    "substring_length": 1
                },
                "mkstemp": {
                    "create_file": 1,
                    "create_temp_file": 5,
                    "create_temporary_file": 2
                },
                "param_1": {
                    "file_path": 9,
                    "filepath": 2,
                    "input_file_path": 1,
                    "input_filepath": 1,
                    "input_path": 3,
                    "input_string": 1,
                    "original_filename": 1,
                    "path": 13
                },
                "param_2": {
                    "file_descriptor": 24,
                    "output_file_descriptor": 5,
                    "temp_file_descriptor": 2
                },
                "param_3": {
                    "arg1": 2,
                    "arg3": 4,
                    "arg_3": 1,
                    "param3": 2,
                    "param_3": 3,
                    "parameter_3": 1,
                    "unknown1": 2,
                    "unknown_param": 1,
                    "unused1": 3,
                    "unused_param": 2,
                    "unused_param1": 4,
                    "unused_param_1": 5,
                    "unused_parameter1": 1
                },
                "param_4": {
                    "arg2": 2,
                    "arg4": 4,
                    "arg_4": 1,
                    "buffer": 1,
                    "param4": 2,
                    "param_4": 2,
                    "parameter_4": 1,
                    "unknown2": 2,
                    "unknown_param_2": 1,
                    "unused2": 3,
                    "unused_param": 2,
                    "unused_param2": 4,
                    "unused_param_2": 5,
                    "unused_parameter2": 1
                },
                "pcVar2": {
                    "filename": 1,
                    "last_delimiter": 1,
                    "last_directory": 1,
                    "last_separator": 3,
                    "last_slash": 20,
                    "last_slash_pos": 1,
                    "last_slash_position": 3,
                    "slash_ptr": 1
                },
                "pcVar6": {
                    "allocated_file_path": 1,
                    "allocated_memory": 2,
                    "copy_pointer": 1,
                    "destination": 1,
                    "extracted_path": 1,
                    "new_dir_path": 1,
                    "new_file_path": 4,
                    "new_filename": 1,
                    "new_filepath": 1,
                    "new_path": 12,
                    "relative_path": 1,
                    "temp_file": 1,
                    "temp_file_path": 3,
                    "temp_path": 1
                },
                "strrchr": {
                    "find_last_delimiter": 1,
                    "find_last_occurrence": 3,
                    "find_last_separator": 1,
                    "find_last_slash": 3
                },
                "xmalloc": {
                    "allocate_memory": 8
                }
            },
            "called": [
                "xmalloc",
                "mkstemp",
                "strrchr",
                "FUN_00102ba1"
            ],
            "calling": [
                "FUN_001058b0",
                "FUN_00103c60"
            ],
            "code": "\nundefined  [16] reverse_path_and_create_temp_file_001057a0(char *path,int *file_descriptor,undefined8 unused_param_1,undefined8 unused_param_2)\n\n{\n  int result;\n  char *last_slash;\n  long path_length;\n  long loop_counter;\n  long slash_index;\n  char *new_path;\n  byte is_slash;\n  undefined return_value [16];\n  \n  is_slash = 0;\n  last_slash = strrchr(path,0x2f);\n  if (last_slash == (char *)0x0) {\n    last_slash = (char *)xmalloc(9);\n    path_length = 0;\n  }\n  else {\n    slash_index = (long)last_slash - (long)path;\n    last_slash = (char *)xmalloc(slash_index + 0xb);\n    path_length = slash_index + 1;\n    new_path = last_slash;\n    for (loop_counter = slash_index; loop_counter != 0; loop_counter = loop_counter + -1) {\n      *new_path = *path;\n      path = path + (ulong)is_slash * -2 + 1;\n      new_path = new_path + (ulong)is_slash * -2 + 1;\n    }\n    last_slash[slash_index] = '/';\n  }\n  *(undefined8 *)(last_slash + path_length) = 0x5858585858587473;\n  *(undefined *)((long)(last_slash + path_length) + 8) = 0;\n  result = mkstemp(last_slash);\n  if (result == -1) {\n    new_path = (char *)0x0;\n    free(last_slash);\n  }\n  else {\n    *file_descriptor = result;\n    new_path = last_slash;\n  }\n  return_value._8_8_ = unused_param_2;\n  return_value._0_8_ = new_path;\n  return return_value;\n}\n\n",
            "current_name": "reverse_path_and_create_temp_file_001057a0",
            "entrypoint": "0x001057a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001057a0": "reverse_path_and_create_temp_file_001057a0",
                "auVar8": "return_value",
                "bVar7": "is_slash",
                "iVar1": "result",
                "lVar3": "path_length",
                "lVar4": "loop_counter",
                "lVar5": "slash_index",
                "mkstemp": "create_temp_file",
                "param_1": "path",
                "param_2": "file_descriptor",
                "param_3": "unused_param_1",
                "param_4": "unused_param_2",
                "pcVar2": "last_slash",
                "pcVar6": "new_path",
                "strrchr": "find_last_slash",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105830": {
            "additional_data": {
                "DAT_0010d5f9": {
                    "flag1": 1
                },
                "DAT_0010d5fa": {
                    "flag2": 1
                },
                "FUN_00105830": {
                    "decode_string": 1,
                    "extract_and_copy_string": 1,
                    "extract_and_modify_string": 1,
                    "extract_file_name": 1,
                    "extract_filename": 2,
                    "extract_string": 5,
                    "extract_string_from_memory": 2,
                    "extract_substring": 10,
                    "extract_substring_from_memory": 1,
                    "extracted_function": 1,
                    "parse_and_copy_string": 1,
                    "parse_input": 1,
                    "process_file_name": 1,
                    "reverse_and_copy_string": 1
                },
                "__s": {
                    "base_filename": 1,
                    "base_name": 13,
                    "basename": 7,
                    "basename_result": 2,
                    "file_name": 1,
                    "file_path": 1,
                    "input_string": 1
                },
                "auVar6": {
                    "output": 1,
                    "output_structure": 1,
                    "result": 17,
                    "return_data": 1,
                    "return_val": 2,
                    "return_value": 6
                },
                "bVar5": {
                    "byte_flag": 2,
                    "byte_value": 2,
                    "byte_var": 3,
                    "flag": 6,
                    "increment_value": 1,
                    "index": 1,
                    "is_negative": 3,
                    "is_null": 1,
                    "iteration_flag": 1,
                    "loop_condition": 1,
                    "loop_counter": 1,
                    "loop_flag": 1,
                    "string_index": 1,
                    "temp_var": 1
                },
                "lVar1": {
                    "base_address": 1,
                    "base_name_address": 1,
                    "byte_length": 1,
                    "data_pointer_address": 1,
                    "data_ptr": 1,
                    "file_info_pointer": 1,
                    "file_info_ptr": 1,
                    "pointer": 1,
                    "string_info_ptr": 1,
                    "struct_address": 1,
                    "struct_pointer": 1,
                    "struct_ptr": 1,
                    "struct_ptr_value": 1,
                    "struct_value": 1,
                    "subroutine_ptr": 1,
                    "temp_var_1": 1
                },
                "param_1": {
                    "file_name": 1,
                    "file_path": 2,
                    "filename": 10,
                    "input_string": 13,
                    "original_string": 2,
                    "output_string": 2,
                    "source_string": 1
                },
                "param_2": {
                    "arg_struct": 1,
                    "data_pointer": 2,
                    "data_struct": 1,
                    "file_info": 2,
                    "input_data": 1,
                    "input_string": 1,
                    "memory_address": 3,
                    "metadata_ptr": 1,
                    "param_pointer": 1,
                    "source_pointer": 1,
                    "string_info": 2,
                    "string_struct": 1,
                    "struct_address": 2,
                    "struct_pointer": 5,
                    "struct_ptr": 5,
                    "structure_ptr": 1,
                    "subroutine_data": 1
                },
                "param_3": {
                    "arg1": 1,
                    "arg3": 2,
                    "param3": 4,
                    "param_3": 2,
                    "unknown_var1": 1,
                    "unused": 1,
                    "unused1": 3,
                    "unused_param": 1,
                    "unused_param1": 6,
                    "unused_param3": 1,
                    "unused_param_1": 3,
                    "unused_param_3": 1,
                    "unused_parameter": 2,
                    "unused_parameter1": 1,
                    "var_1": 1
                },
                "param_4": {
                    "arg2": 1,
                    "arg4": 2,
                    "output_buffer": 2,
                    "param4": 4,
                    "param_4": 2,
                    "result": 2,
                    "unknown_var2": 1,
                    "unused2": 3,
                    "unused_param2": 6,
                    "unused_param4": 1,
                    "unused_param_2": 3,
                    "unused_param_4": 1,
                    "unused_parameter2": 1,
                    "var_2": 1
                },
                "pcVar4": {
                    "dest": 1,
                    "dest_pointer": 1,
                    "dest_ptr": 2,
                    "destination": 1,
                    "destination_pointer": 2,
                    "destination_string": 1,
                    "modified_string": 1,
                    "new_file_name": 1,
                    "new_file_path": 1,
                    "new_filename": 2,
                    "new_string": 2,
                    "output": 1,
                    "output_buffer_ptr": 1,
                    "output_ptr": 2,
                    "output_string": 8,
                    "output_string_ptr": 2,
                    "result_ptr": 1,
                    "result_string": 1
                },
                "sVar2": {
                    "base_name_length": 2,
                    "basename_length": 4,
                    "file_name_length": 1,
                    "filename_length": 5,
                    "input_len": 1,
                    "input_length": 5,
                    "input_string_length": 3,
                    "length": 1,
                    "original_string_length": 2,
                    "str_length": 1,
                    "string_length": 1
                },
                "uVar3": {
                    "byte_to_copy": 1,
                    "byte_value": 2,
                    "desired_string_length": 1,
                    "max_copy_length": 1,
                    "max_file_name_length": 2,
                    "max_len": 1,
                    "max_length": 8,
                    "max_string_length": 2,
                    "max_substring_length": 1,
                    "memcpy_size": 1,
                    "required_length": 1,
                    "required_string_length": 1,
                    "source_length": 1,
                    "string_length": 3,
                    "sub_str_length": 1,
                    "substring_length": 4
                }
            },
            "called": [
                "lbasename",
                "FUN_00102bb0"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00105480"
            ],
            "code": "\nundefined  [16] extract_substring_from_memory_00105830(char *input_string,long struct_pointer,undefined8 unused_param1,undefined8 unused_param2)\n\n{\n  long data_ptr;\n  size_t filename_length;\n  char *base_name;\n  ulong max_length;\n  char *output_string;\n  byte flag;\n  undefined result [16];\n  \n  flag = 0;\n  if (DAT_0010d5f9 == '\\0') {\n    base_name = (char *)lbasename();\n    input_string = base_name;\n    if ((DAT_0010d5fa != '\\0') && (struct_pointer != 0)) {\n      filename_length = strlen(base_name);\n      max_length = (ulong)*(byte *)(*(long *)(struct_pointer + 8) + 0x1e);\n      if (max_length < filename_length) {\n        input_string = (char *)xmalloc(max_length + 1);\n        data_ptr = *(long *)(struct_pointer + 8);\n        output_string = input_string;\n        for (max_length = (ulong)*(byte *)(data_ptr + 0x1e); max_length != 0; max_length = max_length - 1) {\n          *output_string = *base_name;\n          base_name = base_name + (ulong)flag * -2 + 1;\n          output_string = output_string + (ulong)flag * -2 + 1;\n        }\n        input_string[*(byte *)(data_ptr + 0x1e)] = '\\0';\n      }\n    }\n  }\n  result._8_8_ = unused_param2;\n  result._0_8_ = input_string;\n  return result;\n}\n\n",
            "current_name": "extract_substring_from_memory_00105830",
            "entrypoint": "0x00105830",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105830": "extract_substring_from_memory_00105830",
                "__s": "base_name",
                "auVar6": "result",
                "bVar5": "flag",
                "lVar1": "data_ptr",
                "param_1": "input_string",
                "param_2": "struct_pointer",
                "param_3": "unused_param1",
                "param_4": "unused_param2",
                "pcVar4": "output_string",
                "sVar2": "filename_length",
                "uVar3": "max_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105870": {
            "additional_data": {
                "FUN_00105870": {
                    "find_file": 3,
                    "find_file_by_criteria": 1,
                    "find_file_in_array": 1,
                    "find_file_in_binary": 2,
                    "find_file_in_directory": 2,
                    "find_file_location": 1,
                    "find_file_offset": 1,
                    "find_file_ptr": 1,
                    "find_file_reference": 1,
                    "find_filename": 1,
                    "find_last_entry": 2,
                    "find_last_file_match": 1,
                    "find_last_filename": 1,
                    "find_last_match": 1,
                    "find_last_matching_entry": 2,
                    "find_last_matching_file": 1,
                    "find_last_occurrence": 1,
                    "find_matching_entry": 6,
                    "find_next_file_match": 1,
                    "search_file": 1
                },
                "filename_cmp": {
                    "compare_file_names": 1,
                    "compare_filenames": 1
                },
                "iVar1": {
                    "cmp_result": 13,
                    "compare_result": 1,
                    "comparison_result": 16,
                    "result": 1
                },
                "iVar3": {
                    "comparison_mode": 1,
                    "comparison_option": 1,
                    "condition": 1,
                    "entry_type": 2,
                    "file_type": 2,
                    "iteration_counter": 1,
                    "loop_condition": 2,
                    "loop_count": 1,
                    "loop_index": 1,
                    "loop_type": 2,
                    "mode": 4,
                    "mode_check": 1,
                    "operation_type": 2,
                    "option": 1,
                    "search_mode": 3,
                    "search_type": 5,
                    "search_type_copy": 1
                },
                "param_1": {
                    "array": 1,
                    "entries": 5,
                    "entry_list": 5,
                    "file_array": 3,
                    "file_directory": 1,
                    "file_list": 13,
                    "file_offsets": 1,
                    "file_references": 1,
                    "list": 1
                },
                "param_2": {
                    "comparison_type": 2,
                    "condition": 1,
                    "count": 1,
                    "criteria": 1,
                    "entry_count": 3,
                    "entry_type": 1,
                    "file_array_size": 1,
                    "file_count": 5,
                    "length": 1,
                    "mode": 1,
                    "num_entries": 4,
                    "option_flag": 1,
                    "search_mode": 4,
                    "search_option": 1,
                    "search_type": 4
                },
                "param_3": {
                    "default_file": 1,
                    "filename": 6,
                    "search_file_name": 1,
                    "search_filename": 1,
                    "search_key": 1,
                    "search_param": 1,
                    "search_string": 2,
                    "search_term": 3,
                    "search_value": 4,
                    "target_file": 3,
                    "target_file_name": 1,
                    "target_filename": 7
                },
                "uVar2": {
                    "current_file": 1,
                    "current_search_term": 1,
                    "default_file_name": 1,
                    "default_filename": 7,
                    "default_search": 1,
                    "default_search_string": 2,
                    "default_search_term": 1,
                    "default_search_value": 1,
                    "default_target": 1,
                    "default_value": 1
                }
            },
            "called": [
                "FUN_00102cd9"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105db0"
            ],
            "code": "\nlong * find_last_matching_entry_00105870(long *file_list,int file_count,undefined8 target_filename)\n\n{\n  int comparison_result;\n  undefined8 default_filename;\n  int search_type;\n  \n  default_filename = DAT_0010d638;\n  search_type = DAT_0010d640;\n  if (DAT_0010d640 == 0) {\n    default_filename = target_filename;\n    search_type = file_count;\n  }\n  if (search_type == 3) {\n    for (; *file_list != 0; file_list = (long *)(*file_list + 0xf0)) {\n    }\n  }\n  else {\n    for (; (undefined8 *)*file_list != (undefined8 *)0x0; file_list = (long *)(*file_list + 0xf0)) {\n      comparison_result = filename_cmp(*(undefined8 *)*file_list,default_filename);\n      if (comparison_result == 0) {\n        if (search_type != 2) {\n          return file_list;\n        }\n        return (long *)(*file_list + 0xf0);\n      }\n    }\n  }\n  return file_list;\n}\n\n",
            "current_name": "find_last_matching_entry_00105870",
            "entrypoint": "0x00105870",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105870": "find_last_matching_entry_00105870",
                "filename_cmp": "compare_file_names",
                "iVar1": "comparison_result",
                "iVar3": "search_type",
                "param_1": "file_list",
                "param_2": "file_count",
                "param_3": "target_filename",
                "uVar2": "default_filename"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001058b0": {
            "additional_data": {
                "FUN_001058b0": {
                    "archive_entry_metadata_to_string": 1,
                    "extract_and_print_archive_info": 1,
                    "extract_and_write_archive_info": 1,
                    "extract_and_write_archive_metadata": 1,
                    "extract_archive_entry_info": 1,
                    "extract_archive_info": 2,
                    "extract_archive_information": 2,
                    "extract_archive_metadata": 2,
                    "print_archive_data": 1,
                    "print_archive_details": 1,
                    "process_archive": 3,
                    "process_archive_file": 4,
                    "write_archive_data": 1,
                    "write_archive_info": 4,
                    "write_archive_information": 1,
                    "write_archive_metadata": 1
                },
                "__format": {
                    "error_format": 1,
                    "error_message": 6,
                    "error_msg": 2,
                    "format": 1,
                    "format_message": 1,
                    "format_str": 1,
                    "format_string": 13,
                    "message": 1,
                    "temp_file_error_message": 1,
                    "time_error_format": 1,
                    "time_error_message": 1,
                    "time_format": 1
                },
                "__ptr": {
                    "archive_path": 3,
                    "duplicate_path": 1,
                    "duplicate_ptr": 2,
                    "duplicate_string": 2,
                    "duplicated_file_name": 1,
                    "duplicated_string": 2,
                    "file": 1,
                    "file_name": 2,
                    "file_path": 6,
                    "file_path_copy": 1,
                    "pointer": 1,
                    "pointer_variable": 1,
                    "ptr": 3,
                    "ptr_var": 1,
                    "temp_buffer": 1,
                    "temp_file_name": 1,
                    "temp_ptr": 2
                },
                "__stream": {
                    "archive": 1,
                    "archive_file": 4,
                    "archive_file_stream": 1,
                    "file": 2,
                    "file_stream": 21,
                    "output_file": 1,
                    "stream": 1
                },
                "_uStack0000000000000020": {
                    "file_type": 1
                },
                "cStack_31": {
                    "c2": 1,
                    "c_stack31": 1,
                    "c_stack_31": 2,
                    "c_stack_char2": 1,
                    "c_stack_value2": 1,
                    "char2": 1,
                    "char_stack2": 3,
                    "char_stack31": 1,
                    "char_stack_31": 1,
                    "char_stack_var2": 1,
                    "character_2": 1,
                    "file_acl_permission": 1,
                    "file_type_char2": 1,
                    "file_type_character_2": 1,
                    "file_user_char": 1,
                    "file_visibility": 1,
                    "flag3": 1,
                    "is_setgid": 1,
                    "permissions_high_char": 1,
                    "stack_char3": 1,
                    "third_char": 1,
                    "third_character": 1,
                    "type_char2": 1,
                    "write_permission": 1,
                    "write_permission_indicator": 1
                },
                "cStack_32": {
                    "c1": 1,
                    "c_stack32": 1,
                    "c_stack_32": 2,
                    "c_stack_char1": 1,
                    "c_stack_value1": 1,
                    "char1": 1,
                    "char_stack1": 3,
                    "char_stack32": 1,
                    "char_stack_32": 1,
                    "char_stack_var1": 1,
                    "character_1": 1,
                    "file_permission": 1,
                    "file_permission_char": 1,
                    "file_permissions": 1,
                    "file_type_char1": 1,
                    "file_type_character_1": 1,
                    "flag2": 1,
                    "is_setuid": 1,
                    "permissions_low_char": 1,
                    "read_permission": 1,
                    "read_permission_indicator": 1,
                    "second_char": 1,
                    "second_character": 1,
                    "stack_char2": 1,
                    "type_char1": 1
                },
                "cVar1": {
                    "char_check": 1,
                    "char_val": 1,
                    "char_value": 6,
                    "char_var": 4,
                    "char_variable": 1,
                    "result": 13,
                    "return_value": 1,
                    "success": 1,
                    "temp2": 1
                },
                "iVar3": {
                    "dup_fd": 1,
                    "duplicate_fd": 1,
                    "error_code": 1,
                    "file_desc": 1,
                    "file_descriptor": 13,
                    "int_val": 1,
                    "int_value": 3,
                    "int_var": 3,
                    "int_variable": 1,
                    "integer_var": 1,
                    "temp4": 1
                },
                "in_stack_00000028": {
                    "file_group": 1,
                    "file_mtime": 1,
                    "file_owner": 3,
                    "file_owner_id": 1,
                    "file_size": 5,
                    "in_stack28": 1,
                    "inode": 1,
                    "inode_number": 1,
                    "int_stack_28": 1,
                    "number_of_files": 1,
                    "permissions1": 1,
                    "stack28": 1,
                    "stack_index": 1,
                    "stack_value2": 2,
                    "stack_value_2": 1,
                    "stack_var1": 2,
                    "stack_var28": 1,
                    "stack_variable2": 1,
                    "uid": 2,
                    "uint_stack2": 1,
                    "uint_stack_28": 1,
                    "unsigned_stack2": 1
                },
                "in_stack_00000038": {
                    "file_group": 1,
                    "file_size": 6,
                    "file_time": 1,
                    "gid": 1,
                    "in_stack38": 1,
                    "int_stack": 1,
                    "int_stack_38": 1,
                    "last_modified_time": 1,
                    "mtime": 1,
                    "permissions2": 1,
                    "size": 1,
                    "stack38": 1,
                    "stack_value2": 1,
                    "stack_value3": 2,
                    "stack_value_3": 1,
                    "stack_var2": 2,
                    "stack_var38": 1,
                    "stack_variable3": 1,
                    "timestamp": 4,
                    "uint_stack3": 1,
                    "uint_stack_38": 1
                },
                "local_3c": {
                    "archive_result": 1,
                    "dup_descriptor": 1,
                    "dup_fds": 1,
                    "error": 2,
                    "error_array": 1,
                    "error_code": 4,
                    "error_codes": 1,
                    "file_descriptor": 3,
                    "file_descriptor_dup": 1,
                    "int_array": 3,
                    "local_arr": 2,
                    "local_array": 4,
                    "local_int_array": 1,
                    "local_values": 1,
                    "local_variable_1": 1,
                    "result": 1,
                    "temp_file_descriptors": 1,
                    "tmp_storage": 1
                },
                "param_1": {
                    "archive": 1,
                    "archive_data": 1,
                    "archive_info": 6,
                    "archive_information": 1,
                    "archive_metadata": 1,
                    "arg_ptr": 1,
                    "entry": 1,
                    "file_info": 2,
                    "file_names": 1,
                    "file_path": 1,
                    "file_paths": 1,
                    "function_params": 2,
                    "input_parameters": 2,
                    "input_params": 1,
                    "parameter_1": 1,
                    "parameters": 4,
                    "params": 2
                },
                "ppcVar5": {
                    "arch_head": 1,
                    "archive": 2,
                    "archive_data": 1,
                    "archive_file_pointer": 1,
                    "archive_file_stream": 1,
                    "archive_format": 1,
                    "archive_head": 1,
                    "archive_ptr": 1,
                    "bfd_data": 1,
                    "bfd_stream": 1,
                    "char_double_pointer": 1,
                    "char_pointer_ptr": 1,
                    "char_ptr_array": 1,
                    "file_format": 1,
                    "file_formats": 1,
                    "file_pointer": 3,
                    "file_ptr": 1,
                    "file_ptr_ptr": 1,
                    "format": 1,
                    "format_stream": 1,
                    "open_archive": 2,
                    "opened_file": 2,
                    "pointer_pointer": 1,
                    "pointer_to_char_pointer": 1,
                    "ppc_var": 1,
                    "string_ptr_ptr": 1
                },
                "uStack0000000000000020": {
                    "file_info": 1,
                    "file_mode": 10,
                    "file_permission": 1,
                    "file_permissions": 4,
                    "permissions": 1,
                    "stack_flag": 1,
                    "stack_value": 1,
                    "stack_value1": 2,
                    "stack_value_1": 1,
                    "stack_variable1": 1,
                    "u_stack20": 3,
                    "u_stack_20": 1,
                    "uint_stack1": 1,
                    "uint_stack_20": 1,
                    "unsigned_stack1": 1,
                    "unsigned_stack_var": 1
                },
                "uStack_33": {
                    "file_type": 7,
                    "file_type_char": 2,
                    "file_type_indicator": 1,
                    "first_char": 1,
                    "first_character": 1,
                    "flag1": 2,
                    "flag1_stack": 1,
                    "stack_char1": 1,
                    "type": 1,
                    "u_stack33": 2,
                    "u_stack_33": 2,
                    "u_stack_char1": 1,
                    "u_stack_value1": 1,
                    "uint_stack_33": 1,
                    "unsigned_stack3": 1
                },
                "uVar2": {
                    "flag": 1,
                    "flag_value": 2,
                    "flags": 12,
                    "format_flags": 1,
                    "format_options": 1,
                    "num_flags": 1,
                    "permission_bits": 1,
                    "temp3": 1,
                    "uint_val": 1,
                    "uint_value": 2,
                    "uint_var": 2,
                    "unsigned_value": 1,
                    "unsigned_var": 2,
                    "unsigned_variable": 1
                },
                "uVar4": {
                    "archive_header": 1,
                    "archive_size": 1,
                    "archive_type": 1,
                    "arg1": 1,
                    "format": 1,
                    "headerval": 1,
                    "message": 1,
                    "ptr": 1,
                    "second_unsigned_var": 1,
                    "stream_ptr": 1,
                    "temp1": 1,
                    "temp_file_name": 1,
                    "temp_var": 1,
                    "temp_variable": 1,
                    "temporary_file": 1,
                    "time_data": 1,
                    "time_value": 1,
                    "timestamp": 1,
                    "tmp_file": 1,
                    "tmp_file_loc": 1,
                    "uint64_val": 1,
                    "uint8_value": 1,
                    "uint_value2": 1,
                    "uint_var2": 1,
                    "undefined8_var": 1,
                    "unsigned_value2": 1,
                    "unsigned_variable2": 1
                }
            },
            "called": [
                "dcgettext",
                "bfd_fdopenw",
                "FUN_00107c10",
                "xstrdup",
                "bfd_set_format",
                "FUN_001057a0",
                "close"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00107650"
            ],
            "code": "\n\n\nvoid extract_archive_entry_info_001058b0(undefined8 *archive_info)\n\n{\n  char result;\n  uint flags;\n  int file_descriptor;\n  undefined8 uint8_value;\n  char *format_string;\n  void *file_path;\n  FILE *file_stream;\n  char **file_pointer;\n  uint file_mode;\n  uint file_size;\n  undefined8 file_size;\n  int error_code [2];\n  undefined file_type;\n  char char_stack1;\n  char char_stack2;\n  \n  uint8_value = archive_info[0x1e];\n  error_code[0] = -1;\n  file_path = (void *)xstrdup(*archive_info);\n  file_stream = (FILE *)FUN_001057a0(file_path,error_code);\n  file_descriptor = error_code[0];\n  if (file_stream != (FILE *)0x0) {\n    DAT_0010d618 = file_stream;\n    file_pointer = (char **)bfd_fdopenw(file_stream,*(undefined8 *)archive_info[1],error_code[0]);\n    if (file_pointer != (char **)0x0) {\n      DAT_0010d5e0 = file_pointer;\n      bfd_set_format(file_pointer,2);\n      flags = (~DAT_0010d648 >> 0x1f) << 3 | *(byte *)((long)file_pointer + 0x49) & 0xfffffff7;\n      *(char *)((long)file_pointer + 0x49) = (char)flags;\n      if (DAT_0010d5fa != '\\0') {\n        *(uint *)((long)file_pointer + 0x44) = *(uint *)((long)file_pointer + 0x44) | 0x400;\n      }\n      if (_DAT_0010d2d0 != 0) {\n        *(uint *)((long)file_pointer + 0x44) = *(uint *)((long)file_pointer + 0x44) | 0x2000;\n      }\n      if (DAT_0010d5f9 != '\\0') goto LAB_00102d37;\n      while( true ) {\n        if ((DAT_0010d5f8 != '\\0') || ((*(byte *)((long)archive_info + 0x49) & 0x10) != 0)) {\n          *(byte *)((long)file_pointer + 0x49) = (byte)flags | 0x10;\n        }\n        result = bfd_set_archive_head(file_pointer,uint8_value);\n        if (result != '\\0') break;\n        flags = FUN_00107c10(file_path);\nLAB_00102d37:\n        *(uint *)((long)file_pointer + 0x44) = *(uint *)((long)file_pointer + 0x44) | 0x100000;\n      }\n      file_descriptor = dup(file_descriptor);\n      result = bfd_close(file_pointer);\n      if (result == '\\0') {\n        FUN_00107c10(file_path);\n        format_string = (char *)dcgettext(0,\"<time data corrupt>\",5);\n        sprintf(&stack0xffffffffffffffd8,format_string);\n        flags = file_mode & 0xf000;\n        if (flags == 0x4000) {\n          file_type = 100;\n        }\n        else if (flags == 0xa000) {\n          file_type = 0x6c;\n        }\n        else if (flags == 0x6000) {\n          file_type = 0x62;\n        }\n        else if (flags == 0x2000) {\n          file_type = 99;\n        }\n        else if (flags == 0xc000) {\n          file_type = 0x73;\n        }\n        else {\n          file_type = 0x70;\n          if (flags != 0x1000) {\n            file_type = 0x2d;\n          }\n        }\n        char_stack1 = (-((file_type & 0x100) == 0) & 0xbbU) + 0x72;\n        char_stack2 = (-((file_type & 0x80) == 0) & 0xb6U) + 0x77;\n        fprintf(file_stream,\"%s %ld/%ld %6lu %s \",&char_stack1,file_type >> 0x20,\n                (ulong)file_size,file_size,&stack0xffffffffffffffd8,\n                file_type & 0xffffffff);\n        fputs(*file_pointer,file_stream);\n        if ((char)archive_info != '\\0') {\n          if ((*(byte *)((long)file_pointer + 0x49) & 0x10) == 0) {\n            if (file_pointer[0xb] != (char *)0x0) {\n              fprintf(file_stream,\" 0x%lx\");\n            }\n          }\n          else if (file_pointer[0xc] != (char *)0x0) {\n            fprintf(file_stream,\" 0x%lx\");\n          }\n        }\n        fputc(10,file_stream);\n        return;\n      }\n      DAT_0010d5e0 = (char **)0x0;\n      DAT_0010d618 = (FILE *)0x0;\n      bfd_close(archive_info);\n      file_descriptor = FUN_00105bc0(file_stream,file_path,file_descriptor);\n      if (file_descriptor == 0) {\n        free(file_path);\n        free(file_stream);\n        return;\n      }\n      goto LAB_00102d7a;\n    }\n    close(file_descriptor);\n    FUN_00107c10(file_path);\n  }\n  uint8_value = dcgettext(0,\"could not create temporary file whilst writing archive\",5);\n  FUN_00107c10(uint8_value);\nLAB_00102d7a:\n                    \n  xexit(1);\n}\n\n",
            "current_name": "extract_archive_entry_info_001058b0",
            "entrypoint": "0x001058b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001058b0": "extract_archive_entry_info_001058b0",
                "__format": "format_string",
                "__ptr": "file_path",
                "__stream": "file_stream",
                "_uStack0000000000000020": "file_type",
                "cStack_31": "char_stack2",
                "cStack_32": "char_stack1",
                "cVar1": "result",
                "iVar3": "file_descriptor",
                "in_stack_00000028": "file_size",
                "in_stack_00000038": "file_size",
                "local_3c": "error_code",
                "param_1": "archive_info",
                "ppcVar5": "file_pointer",
                "uStack0000000000000020": "file_mode",
                "uStack_33": "file_type",
                "uVar2": "flags",
                "uVar4": "uint8_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105a20": {
            "additional_data": {
                "FUN_00105a20": {
                    "create_output_file": 2,
                    "extract_and_write_file": 1,
                    "extract_archive_member": 8,
                    "extract_archive_member_path": 1,
                    "extract_output_path": 2,
                    "handle_output_path": 1,
                    "open_output_file": 1,
                    "process_archive_member": 3,
                    "process_file": 3,
                    "process_output_path": 6,
                    "process_path": 2
                },
                "concat": {
                    "path_concatenate": 1
                },
                "pFVar5": {
                    "file": 10,
                    "file_handle": 2,
                    "file_pointer": 10,
                    "file_ptr": 6,
                    "output_file": 3
                },
                "param_1": {
                    "file_path": 1,
                    "filename": 1,
                    "input_path": 7,
                    "output_file_path": 1,
                    "output_path": 15,
                    "path": 3,
                    "pathname": 3
                },
                "pcVar1": {
                    "archive_path": 1,
                    "base_dir": 7,
                    "base_dir_path": 2,
                    "base_directory": 3,
                    "base_path": 13,
                    "basepath": 1,
                    "current_dir": 1,
                    "current_directory": 2,
                    "default_path": 1
                },
                "pcVar2": {
                    "current": 1,
                    "current_char": 4,
                    "current_character": 1,
                    "current_chunk": 1,
                    "current_dir": 2,
                    "current_dir_path": 1,
                    "current_path": 11,
                    "current_pos": 1,
                    "current_segment": 2,
                    "next_dir": 1,
                    "next_directory": 1,
                    "path_ptr": 1,
                    "path_section": 1,
                    "path_start": 1,
                    "slash_position": 1,
                    "sub_path": 1
                },
                "sVar6": {
                    "archive_path_length": 1,
                    "base_dir_length": 6,
                    "base_dir_path_length": 2,
                    "base_directory_length": 2,
                    "base_name_length": 1,
                    "base_path_len": 1,
                    "base_path_length": 7,
                    "basename_length": 1,
                    "directory_length": 1,
                    "filename_length": 1,
                    "length": 1,
                    "path_length": 7
                },
                "uVar3": {
                    "base_name": 12,
                    "base_name_result": 1,
                    "basename": 2,
                    "basename_ptr": 1,
                    "basename_result": 10,
                    "extracted_file_name": 1,
                    "extracted_filename": 1,
                    "extracted_pathname": 1,
                    "new_output_path": 1,
                    "output_path": 1
                },
                "uVar4": {
                    "error_message": 26,
                    "error_msg": 4,
                    "error_string": 1
                },
                "xexit": {
                    "exit_program": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00102c25"
            ],
            "code": "\nvoid extract_archive_member_path_00105a20(char *output_path)\n\n{\n  char *base_path;\n  char *current_path;\n  undefined8 base_name;\n  undefined8 error_message;\n  FILE *file;\n  size_t path_length;\n  \n  base_path = DAT_0010d5e8;\n  DAT_0010d618 = output_path;\n  if (*output_path == '/') {\nLAB_00102e9a:\n    base_name = lbasename();\n    base_path = DAT_0010d618;\n    error_message = dcgettext(0,\"illegal output pathname for archive member: %s, using \\'%s\\' instead\",5);\n    FUN_00107920(error_message,base_path,base_name);\n    DAT_0010d618 = (char *)base_name;\n    FUN_00105a68();\n    return;\n  }\n  do {\n    if (*output_path == '\\0') {\n      if ((DAT_0010d5e8 != (char *)0x0) && (path_length = strlen(DAT_0010d5e8), path_length != 0)) {\n        if (base_path[path_length - 1] == '/') {\n          DAT_0010d618 = (char *)path_concatenate(base_path,DAT_0010d618,0);\n        }\n        else {\n          DAT_0010d618 = (char *)path_concatenate(base_path,&DAT_00108260,DAT_0010d618,0);\n        }\n      }\n      if (DAT_0010d60c != 0) {\n        printf(\"x - %s\\n\",DAT_0010d618);\n      }\n      file = fopen(DAT_0010d618,\"w\");\n      if (file == (FILE *)0x0) {\n        perror(DAT_0010d618);\n                    \n        xexit(1);\n      }\n      return;\n    }\n    current_path = output_path;\n    if ((*output_path == '.') && (current_path = output_path + 1, output_path[1] == '.')) {\n      current_path = output_path + 2;\n      if ((output_path[2] == '/') || (output_path[2] == '\\0')) goto LAB_00102e9a;\n    }\n    for (; (*current_path != '\\0' && (*current_path != '/')); current_path = current_path + 1) {\n    }\n    for (; output_path = current_path, *current_path == '/'; current_path = current_path + 1) {\n    }\n  } while( true );\n}\n\n",
            "current_name": "extract_archive_member_path_00105a20",
            "entrypoint": "0x00105a20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105a20": "extract_archive_member_path_00105a20",
                "concat": "path_concatenate",
                "pFVar5": "file",
                "param_1": "output_path",
                "pcVar1": "base_path",
                "pcVar2": "current_path",
                "sVar6": "path_length",
                "uVar3": "base_name",
                "uVar4": "error_message",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105a68": {
            "additional_data": {
                "DAT_00108260": {
                    "default_file_path": 1
                },
                "DAT_0010d5e8": {
                    "base_dir_ptr": 1,
                    "base_directory": 1,
                    "directory": 3,
                    "input_directory": 1,
                    "path": 1
                },
                "DAT_0010d60c": {
                    "enable_printing": 1,
                    "print_flag": 1,
                    "print_output": 1,
                    "print_result": 1,
                    "should_print": 3
                },
                "DAT_0010d618": {
                    "concatenated_path": 1,
                    "file_path": 4,
                    "output_filename": 1,
                    "output_path": 1
                },
                "FUN_00105a68": {
                    "create_file": 1,
                    "generate_file": 2,
                    "generate_file_path_and_open_file": 1,
                    "generate_output_file": 4,
                    "initialize_file": 1,
                    "initialize_file_operation": 1,
                    "process_and_write_file": 1,
                    "process_data": 1,
                    "process_file": 5,
                    "process_file_path_and_open_file": 1,
                    "save_data_to_file": 1,
                    "update_file_path": 1,
                    "write_file": 1,
                    "write_file_contents": 1,
                    "write_output_file": 1,
                    "write_to_file": 6
                },
                "concat": {
                    "combine_strings": 1,
                    "concatenate_strings": 5
                },
                "fopen": {
                    "open_file": 5
                },
                "pFVar2": {
                    "file": 6,
                    "file_descriptor": 1,
                    "file_handle": 1,
                    "file_pointer": 11,
                    "file_ptr": 6,
                    "file_stream": 1,
                    "output_file": 4
                },
                "pcVar1": {
                    "base_directory": 2,
                    "base_path": 3,
                    "current_directory": 1,
                    "data_directory": 1,
                    "directory": 3,
                    "directory_path": 11,
                    "file_path": 4,
                    "input_directory": 1,
                    "input_path": 1,
                    "path": 4
                },
                "perror": {
                    "print_error": 4,
                    "print_error_message": 1
                },
                "printf": {
                    "print_formatted": 1,
                    "print_message": 2,
                    "print_output": 2
                },
                "sVar3": {
                    "base_path_length": 1,
                    "data_length": 1,
                    "directory_length": 5,
                    "directory_path_length": 4,
                    "file_length": 1,
                    "file_path_length": 1,
                    "file_size": 1,
                    "input_directory_length": 2,
                    "input_path_length": 1,
                    "length": 4,
                    "path_length": 5,
                    "string_length": 5
                },
                "strlen": {
                    "get_length": 2,
                    "get_string_length": 3
                },
                "xexit": {
                    "exit_program": 3
                }
            },
            "called": [
                "fopen",
                "printf",
                "FUN_00102e57",
                "xexit",
                "perror",
                "strlen",
                "concat"
            ],
            "calling": [
                "FUN_00102e6f"
            ],
            "code": "\nvoid write_to_file_00105a68(void)\n\n{\n  char *directory_path;\n  FILE *file_pointer;\n  size_t string_length;\n  \n  directory_path = DAT_0010d5e8;\n  if (DAT_0010d5e8 != (char *)0x0) {\n    string_length = strlen(DAT_0010d5e8);\n    if (string_length != 0) {\n      if (directory_path[string_length - 1] == '/') {\n        DAT_0010d618 = (char *)concatenate_strings(directory_path,DAT_0010d618,0);\n      }\n      else {\n        DAT_0010d618 = (char *)concatenate_strings(directory_path,&DAT_00108260,DAT_0010d618,0);\n      }\n    }\n  }\n  if (DAT_0010d60c != 0) {\n    printf(\"x - %s\\n\",DAT_0010d618);\n  }\n  file_pointer = fopen(DAT_0010d618,\"w\");\n  if (file_pointer != (FILE *)0x0) {\n    return;\n  }\n  perror(DAT_0010d618);\n                    \n  xexit(1);\n}\n\n",
            "current_name": "write_to_file_00105a68",
            "entrypoint": "0x00105a68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105a68": "write_to_file_00105a68",
                "concat": "concatenate_strings",
                "fopen": "open_file",
                "pFVar2": "file_pointer",
                "pcVar1": "directory_path",
                "perror": "print_error",
                "printf": "print_message",
                "sVar3": "string_length",
                "strlen": "get_string_length",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105ae0": {
            "additional_data": {
                "FUN_00105ae0": {
                    "call_other_function": 1,
                    "execute_function": 25,
                    "execute_main_function": 1,
                    "execute_task": 1,
                    "process_data": 1
                },
                "FUN_00105af0": {
                    "execute_sub_function": 2,
                    "perform_operation": 1,
                    "perform_sub_task": 1,
                    "process_data": 6,
                    "reverse_and_execute": 1,
                    "reverse_bytes": 1,
                    "reverse_data": 1
                },
                "param_1": {
                    "arg1": 9,
                    "arg_1": 1,
                    "argument1": 1,
                    "argument_1": 1,
                    "data1": 1,
                    "data_1": 1,
                    "data_array": 1,
                    "data_pointer": 3,
                    "data_ptr": 1,
                    "function_arg1": 1,
                    "function_param1": 2,
                    "function_param_1": 1,
                    "input1": 1,
                    "input_1": 1,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "param1": 1
                },
                "param_2": {
                    "arg2": 9,
                    "arg_2": 1,
                    "argument2": 1,
                    "argument_2": 1,
                    "data2": 1,
                    "data_2": 1,
                    "data_size": 1,
                    "function_arg2": 1,
                    "function_param2": 2,
                    "function_param_2": 1,
                    "input2": 1,
                    "input_2": 1,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "input_value": 1,
                    "length": 1,
                    "long_value": 1,
                    "param2": 1,
                    "value": 3
                },
                "param_3": {
                    "arg_3": 1,
                    "char1": 2,
                    "char_1": 1,
                    "char_param1": 1,
                    "char_param_3": 1,
                    "char_value1": 1,
                    "character1": 2,
                    "character_param1": 2,
                    "character_param_1": 1,
                    "flag1": 15,
                    "flag_1": 2,
                    "param3": 1
                },
                "param_4": {
                    "arg_4": 1,
                    "char2": 2,
                    "char_2": 1,
                    "char_param2": 1,
                    "char_param_4": 1,
                    "char_value2": 1,
                    "character2": 2,
                    "character_param2": 2,
                    "character_param_2": 1,
                    "flag2": 15,
                    "flag_2": 2,
                    "param4": 1
                }
            },
            "called": [
                "FUN_00105af0"
            ],
            "calling": [
                "FUN_001028ed"
            ],
            "code": "\nvoid execute_main_function_00105ae0(undefined8 arg1,undefined8 arg2,undefined flag1,undefined flag2)\n\n{\n  FUN_00105af0(arg1,arg2,flag1,flag2);\n  return;\n}\n\n",
            "current_name": "execute_main_function_00105ae0",
            "entrypoint": "0x00105ae0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105ae0": "execute_main_function_00105ae0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "flag1",
                "param_4": "flag2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105af0": {
            "additional_data": {
                "FUN_00102f08": {
                    "generate_file": 1,
                    "generate_result": 1,
                    "get_checksum": 1,
                    "get_default_value": 1,
                    "get_file_contents": 1,
                    "get_missing_file": 1,
                    "get_new_file": 1,
                    "get_value": 1,
                    "handle_failure": 1,
                    "perform_additional_task": 1,
                    "perform_operation": 3
                },
                "FUN_00105af0": {
                    "archive_file_handling": 1,
                    "archive_file_processing": 1,
                    "archive_operation": 1,
                    "extract_and_modify_files": 1,
                    "extract_and_update_files": 1,
                    "extract_archive_files": 1,
                    "extract_archived_files": 12,
                    "extract_archives": 1,
                    "extract_file_and_update_pointers": 1,
                    "extract_file_hierarchy": 1,
                    "extract_files_from_archive": 2,
                    "process_archived_files": 1,
                    "process_file": 1,
                    "process_files": 5,
                    "process_param": 1
                },
                "bfd_check_format": {
                    "check_archive_format": 2,
                    "check_bfd_format": 4,
                    "check_file_format": 2,
                    "check_format": 4,
                    "detect_format": 1
                },
                "bfd_openr_next_archived_file": {
                    "get_next_archived_file": 11,
                    "open_next_archived_file": 2
                },
                "cVar1": {
                    "format_check": 1,
                    "format_check_result": 7,
                    "format_check_success": 1,
                    "format_matched": 1,
                    "format_valid": 2,
                    "is_bfd_format": 5,
                    "is_bfd_format_valid": 1,
                    "is_bfd_valid": 1,
                    "is_format_valid": 1,
                    "is_valid_format": 10,
                    "valid_format": 1
                },
                "lVar3": {
                    "archive_file": 1,
                    "archived_file": 24,
                    "archived_file_pointer": 1,
                    "archived_file_ptr": 1,
                    "file": 2,
                    "next_archived_file": 1,
                    "next_file": 1
                },
                "param_1": {
                    "archive_contents": 1,
                    "archive_list": 1,
                    "file_hierarchy": 1,
                    "file_list": 24,
                    "file_list_pointer": 1,
                    "file_table": 1,
                    "output_files": 1,
                    "param_array": 1
                },
                "param_2": {
                    "archive": 6,
                    "archive_file": 15,
                    "archive_handle": 1,
                    "current_archive": 1,
                    "file": 3,
                    "file_pointer": 2,
                    "file_ptr": 2,
                    "file_to_extract": 1
                },
                "param_3": {
                    "check_archives": 1,
                    "check_format": 10,
                    "check_format_flag": 1,
                    "extract_all": 1,
                    "extract_option": 1,
                    "extract_recursive": 1,
                    "extract_single": 1,
                    "extract_subfiles": 1,
                    "flag1": 8,
                    "flag_1": 1,
                    "include_subdirectories": 2,
                    "open_file": 1,
                    "recursive": 1,
                    "should_extract": 1
                },
                "param_4": {
                    "check_archive_format": 1,
                    "check_archive_validity": 1,
                    "check_format": 3,
                    "extract_files": 1,
                    "extract_nested": 1,
                    "flag2": 8,
                    "flag_2": 1,
                    "is_archived": 1,
                    "nested_flag": 1,
                    "only_bfd_files": 1,
                    "process_archived_files": 1,
                    "process_archives": 1,
                    "process_subfiles": 1,
                    "recursion": 1,
                    "recursive": 6,
                    "recursive_option": 1,
                    "reverse": 1
                },
                "uVar2": {
                    "extract_result": 2,
                    "extracted_file_result": 1,
                    "extracted_files_count": 1,
                    "nested_result": 2,
                    "result": 18,
                    "result_code": 1,
                    "return_value": 1,
                    "sub_operation_result": 1,
                    "sub_result": 2,
                    "subfile_result": 1,
                    "subprocess_result": 1
                },
                "uVar4": {
                    "count_extracted": 1,
                    "count_of_extracted_files": 1,
                    "extracted_count": 1,
                    "extracted_file_count": 2,
                    "extracted_files": 1,
                    "found_file": 1,
                    "num_extracted_files": 3,
                    "num_files": 1,
                    "num_valid_files": 1,
                    "output": 1,
                    "result": 6,
                    "return_value": 6,
                    "success": 2,
                    "success_count": 1,
                    "total_extracted": 2,
                    "total_files": 1
                }
            },
            "called": [
                "FUN_00102f08",
                "bfd_openr_next_archived_file",
                "FUN_00105af0",
                "bfd_check_format"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105af0",
                "FUN_00105ae0"
            ],
            "code": "\nulong extract_archived_files_00105af0(long *file_list,long archive_file,char check_format,char flag2)\n\n{\n  char is_valid_format;\n  uint result;\n  long archived_file;\n  ulong return_value;\n  \n  if (flag2 == '\\0') {\n    if (check_format != '\\0') {\n      return_value = FUN_00102f08();\n      return return_value;\n    }\n  }\n  else {\n    is_valid_format = bfd_check_format(archive_file,2);\n    if (is_valid_format != '\\0') {\n      return_value = 0;\n      for (archived_file = bfd_openr_next_archived_file(archive_file,0); archived_file != 0;\n          archived_file = bfd_openr_next_archived_file(archive_file,archived_file)) {\n        result = extract_archived_files_00105af0(file_list,archived_file,check_format,1);\n        if ((char)result != '\\0') {\n          return_value = (ulong)result;\n          file_list = (long *)(*file_list + 0xf0);\n        }\n      }\n      return return_value;\n    }\n    if (check_format != '\\0') {\n      return_value = FUN_00102f08();\n      return return_value;\n    }\n  }\n  *(long *)(archive_file + 0xf0) = *file_list;\n  *file_list = archive_file;\n  return 1;\n}\n\n",
            "current_name": "extract_archived_files_00105af0",
            "entrypoint": "0x00105af0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105af0": "extract_archived_files_00105af0",
                "bfd_check_format": "check_bfd_format",
                "bfd_openr_next_archived_file": "get_next_archived_file",
                "cVar1": "is_valid_format",
                "lVar3": "archived_file",
                "param_1": "file_list",
                "param_2": "archive_file",
                "param_3": "check_format",
                "param_4": "flag2",
                "uVar2": "result",
                "uVar4": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105bb0": {
            "additional_data": {
                "": {
                    "": 1
                },
                "DAT_00105bb0": {
                    "result": 1
                },
                "FUN_00105bb0": {
                    "check_success": 1,
                    "get_one": 12,
                    "get_result": 2,
                    "get_return_value": 8,
                    "get_status": 1,
                    "get_true_value": 1,
                    "initialize": 4,
                    "is_always_true": 1,
                    "is_true": 1
                },
                "PTR_XXXXXXXX": {
                    "data_ptr": 1
                },
                "PTR_param_1": {
                    "param_1": 1
                },
                "PTR_param_2": {
                    "param_2": 1
                },
                "return": {
                    "result": 5,
                    "status": 1
                },
                "returnVal": {
                    "result": 1
                },
                "return_value": {
                    "result": 1
                },
                "undefined8": {
                    "bool": 1,
                    "int": 3,
                    "uint64_t": 5,
                    "void": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nuint64_t get_one_00105bb0(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "get_one_00105bb0",
            "entrypoint": "0x00105bb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105bb0": "get_one_00105bb0",
                "return": "result",
                "undefined8": "uint64_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105bc0": {
            "additional_data": {
                "FUN_00102f1e": {
                    "get_error_message": 1
                },
                "FUN_00105bc0": {
                    "copy_and_delete_file": 5,
                    "copy_and_remove_file": 4,
                    "copy_and_unlink": 1,
                    "copy_and_unlink_file": 13,
                    "copy_file": 1,
                    "copy_file_and_delete": 1,
                    "copy_file_and_remove": 1,
                    "copy_file_and_unlink": 4,
                    "copy_file_with_reason": 1
                },
                "FUN_00105c00": {
                    "get_error_code": 2,
                    "get_error_code_value": 1,
                    "get_file_size": 1
                },
                "FUN_00107920": {
                    "print_error_message": 2
                },
                "auVar6": {
                    "output": 1,
                    "result": 9,
                    "result_struct": 3,
                    "return_data": 3,
                    "return_result": 1,
                    "return_value": 12,
                    "return_values": 2
                },
                "dcgettext": {
                    "get_localized_message": 1,
                    "get_message": 1
                },
                "param_1": {
                    "source_file": 12,
                    "source_file_name": 1,
                    "source_file_path": 13,
                    "source_filename": 1,
                    "source_path": 4
                },
                "param_2": {
                    "destination_file": 12,
                    "destination_file_path": 12,
                    "destination_filename": 1,
                    "destination_path": 4,
                    "target_file_name": 1,
                    "target_file_path": 1
                },
                "param_3": {
                    "copy_flag": 1,
                    "copy_flags": 2,
                    "copy_mode": 2,
                    "copy_options": 1,
                    "error": 1,
                    "error_code": 15,
                    "file_permission": 1,
                    "file_permissions": 4,
                    "flags": 2,
                    "param": 1,
                    "param3": 1
                },
                "param_4": {
                    "copy_file_size": 1,
                    "copy_status": 1,
                    "file_size": 12,
                    "original_return_value": 1,
                    "param4": 1,
                    "result": 10,
                    "result_value": 1,
                    "return_stat": 1,
                    "return_value": 3
                },
                "pcVar3": {
                    "err_string": 1,
                    "errno_message": 1,
                    "error_message": 17,
                    "error_msg": 1,
                    "error_string": 11
                },
                "piVar2": {
                    "err_location": 1,
                    "errno": 1,
                    "errno_location": 11,
                    "errno_pointer": 3,
                    "errno_ptr": 6,
                    "error_location": 5,
                    "error_location_ptr": 1,
                    "error_number": 1,
                    "error_pointer": 2
                },
                "strerror": {
                    "get_error_message": 1,
                    "get_error_string": 1
                },
                "uVar1": {
                    "copy_result": 7,
                    "copy_success": 1,
                    "err": 1,
                    "errno_value": 2,
                    "error": 1,
                    "error_check_result": 1,
                    "error_code": 2,
                    "error_code_result": 4,
                    "error_code_value": 5,
                    "file_size": 1,
                    "permission_result": 1,
                    "result": 2,
                    "status": 2
                },
                "uVar4": {
                    "copy_error_message": 1,
                    "error": 1,
                    "error_description": 4,
                    "error_localized_string": 1,
                    "error_message": 6,
                    "error_string": 4,
                    "error_translation": 1,
                    "localized_error_message": 4,
                    "localized_error_string": 1,
                    "translated_error": 1,
                    "translated_error_message": 6,
                    "translated_error_string": 1
                },
                "uVar5": {
                    "copy_bytes": 1,
                    "copy_result": 2,
                    "copy_success": 1,
                    "copy_successful": 1,
                    "error_code": 1,
                    "error_code_value": 1,
                    "error_value": 1,
                    "file_copy_result": 1,
                    "file_copy_status": 1,
                    "file_size": 2,
                    "result": 3,
                    "unlink_error_code": 1,
                    "unlink_result": 13,
                    "unlink_return_value": 1,
                    "unlink_status": 1
                },
                "unlink": {
                    "delete_file": 1,
                    "unlink_file": 1
                }
            },
            "called": [
                "FUN_00105c00",
                "FUN_00102f1e"
            ],
            "calling": [
                "FUN_00102d2f",
                "FUN_00103e95"
            ],
            "code": "\nundefined  [16] copy_file_and_unlink_00105bc0(char *source_file_path,char *destination_file_path,undefined4 error_code,undefined8 file_size)\n\n{\n  uint copy_result;\n  int *errno_location;\n  char *error_message;\n  undefined8 translated_error_message;\n  ulong unlink_result;\n  undefined return_value [16];\n  \n  if (destination_file_path == source_file_path) {\n    unlink_result = 0;\n  }\n  else {\n    copy_result = FUN_00105c00(error_code);\n    unlink_result = (ulong)copy_result;\n    if (copy_result != 0) {\n      errno_location = __errno_location();\n      error_message = strerror(*errno_location);\n      translated_error_message = dcgettext(0,\"unable to copy file \\'%s\\'; reason: %s\",5);\n      FUN_00107920(translated_error_message,destination_file_path,error_message);\n    }\n    unlink_file(source_file_path);\n  }\n  return_value._8_8_ = file_size;\n  return_value._0_8_ = unlink_result;\n  return return_value;\n}\n\n",
            "current_name": "copy_file_and_unlink_00105bc0",
            "entrypoint": "0x00105bc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105bc0": "copy_file_and_unlink_00105bc0",
                "auVar6": "return_value",
                "dcgettext": "get_message",
                "param_1": "source_file_path",
                "param_2": "destination_file_path",
                "param_3": "error_code",
                "param_4": "file_size",
                "pcVar3": "error_message",
                "piVar2": "errno_location",
                "strerror": "get_error_string",
                "uVar1": "copy_result",
                "uVar4": "translated_error_message",
                "uVar5": "unlink_result",
                "unlink": "unlink_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105c00": {
            "additional_data": {
                "FUN_00102f55": {
                    "handle_error": 1
                },
                "FUN_00105c00": {
                    "copy_data_to_file": 1,
                    "copy_file": 3,
                    "copy_file_contents": 1,
                    "extract_and_save": 1,
                    "extract_and_save_data": 3,
                    "extract_and_write": 1,
                    "extract_and_write_data": 1,
                    "extract_data": 5,
                    "process_file": 1,
                    "reverse_and_copy": 1,
                    "reverse_and_copy_file": 2,
                    "reverse_and_save_file": 2,
                    "reverse_and_write_data": 1,
                    "reverse_and_write_file": 1,
                    "reverse_and_write_to_file": 1,
                    "reverse_and_write_to_new_file": 1,
                    "reverse_binary_write": 1,
                    "reverse_copy_file": 1,
                    "reverse_file": 1
                },
                "_Var3": {
                    "current_offset": 3,
                    "current_position": 2,
                    "file_cursor_position": 1,
                    "file_offset": 7,
                    "file_position": 5,
                    "input_file_size": 1,
                    "lseek_return_value": 1,
                    "offset": 3,
                    "position": 1,
                    "seek_offset": 2,
                    "source_file_offset": 1,
                    "source_file_position": 2,
                    "source_offset": 1
                },
                "__errno_location": {
                    "get_error_number": 1
                },
                "__fd": {
                    "dest_fd": 1,
                    "dest_file_descriptor": 2,
                    "destination_file_descriptor": 7,
                    "file_descriptor_2": 1,
                    "output_descriptor": 1,
                    "output_fd": 5,
                    "output_file_descriptor": 13,
                    "target_file_descriptor": 1
                },
                "__offset": {
                    "offset": 2
                },
                "__whence": {
                    "whence": 2
                },
                "auStack_2038": {
                    "buffer": 29,
                    "data_buffer": 1
                },
                "close": {
                    "close_file": 1
                },
                "iVar1": {
                    "close_errno": 1,
                    "close_result": 1,
                    "closing_error": 1,
                    "err_code": 3,
                    "errno_value": 2,
                    "error": 1,
                    "error_code": 7,
                    "error_code1": 1,
                    "error_number": 2,
                    "error_value": 1,
                    "old_errno": 2,
                    "original_errno": 5,
                    "original_error": 2,
                    "read_error": 1
                },
                "iVar2": {
                    "buffer_size": 1,
                    "bytes_processed": 1,
                    "bytes_read": 5,
                    "bytes_remaining": 1,
                    "current_errno": 5,
                    "current_error": 2,
                    "error_code2": 1,
                    "new_errno": 1,
                    "num_bytes_read": 1,
                    "read_bytes": 1,
                    "read_result": 5,
                    "return_code": 1,
                    "return_value": 3,
                    "write_error": 1
                },
                "lseek": {
                    "set_file_cursor": 1
                },
                "open": {
                    "open_file": 1
                },
                "param_1": {
                    "descriptor": 1,
                    "file_descriptor": 9,
                    "file_descriptor_1": 1,
                    "input_fd": 5,
                    "input_file_descriptor": 6,
                    "source_fd": 1,
                    "source_file_descriptor": 8
                },
                "param_2": {
                    "destination_file_name": 2,
                    "destination_file_path": 5,
                    "file_name": 3,
                    "file_path": 4,
                    "filename": 1,
                    "output_file": 7,
                    "output_file_name": 1,
                    "output_file_path": 8
                },
                "piVar6": {
                    "err_location": 2,
                    "errno_address": 1,
                    "errno_location": 5,
                    "errno_pointer": 5,
                    "errno_ptr": 4,
                    "error_code": 1,
                    "error_location": 5,
                    "error_number": 2,
                    "error_pointer": 3,
                    "error_ptr": 3
                },
                "read": {
                    "read_file": 1
                },
                "sVar5": {
                    "bytes_read": 1,
                    "bytes_written": 26,
                    "num_bytes_written": 2,
                    "write_bytes": 2
                },
                "uVar4": {
                    "bytes_copied": 3,
                    "bytes_extracted": 1,
                    "bytes_read": 22,
                    "bytes_written": 1,
                    "num_bytes_read": 1,
                    "read_bytes": 1,
                    "result": 1,
                    "return_value": 1
                },
                "write": {
                    "write_file": 1
                }
            },
            "called": [
                "open",
                "FUN_00102f55",
                "lseek",
                "read",
                "write",
                "__errno_location",
                "close"
            ],
            "calling": [
                "FUN_00105bc0"
            ],
            "code": "\nulong extract_and_save_data_00105c00(int file_descriptor,char *output_file_path)\n\n{\n  int error_code;\n  int output_file_descriptor;\n  int bytes_read;\n  __off_t file_offset;\n  ulong bytes_read;\n  size_t bytes_written;\n  int *errno_pointer;\n  undefined buffer [8200];\n  \n  if ((-1 < file_descriptor) && (file_offset = lseek(file_descriptor,0,0), file_offset == 0)) {\n    output_file_descriptor = open_file(output_file_path,0x201);\n    if (output_file_descriptor < 0) {\n      bytes_read = FUN_00102f55();\n      return bytes_read;\n    }\n    do {\n      bytes_read = read_file(file_descriptor,buffer,0x2000);\n      bytes_read = (int)bytes_read;\n      if (bytes_read < 1) {\n        errno_pointer = __errno_location();\n        error_code = *errno_pointer;\n        close_file(file_descriptor);\n        close_file(output_file_descriptor);\n        if (bytes_read != 0) {\n          *errno_pointer = error_code;\n          return 0xffffffff;\n        }\n        return bytes_read & 0xffffffff;\n      }\n      bytes_written = write_file(output_file_descriptor,buffer,(long)bytes_read);\n    } while (bytes_written == (long)bytes_read);\n    errno_pointer = __errno_location();\n    bytes_read = *errno_pointer;\n    close_file(file_descriptor);\n    close_file(output_file_descriptor);\n    *errno_pointer = bytes_read;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "extract_and_save_data_00105c00",
            "entrypoint": "0x00105c00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105c00": "extract_and_save_data_00105c00",
                "_Var3": "file_offset",
                "__errno_location": "get_error_number",
                "__fd": "output_file_descriptor",
                "auStack_2038": "buffer",
                "close": "close_file",
                "iVar1": "error_code",
                "iVar2": "bytes_read",
                "lseek": "set_file_cursor",
                "open": "open_file",
                "param_1": "file_descriptor",
                "param_2": "output_file_path",
                "piVar6": "errno_pointer",
                "read": "read_file",
                "sVar5": "bytes_written",
                "uVar4": "bytes_read",
                "write": "write_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105cf0": {
            "called": [
                "_ITM_deregisterTMCloneTable"
            ],
            "calling": [
                "_FINI_0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00105d03) */\n/* WARNING: Removing unreachable block (ram,0x00105d0f) */\n\nvoid FUNC_00105cf0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00105cf0",
            "entrypoint": "0x00105cf0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00105cf0": "FUNC_00105cf0"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00105d20": {
            "called": [
                "_ITM_registerTMCloneTable"
            ],
            "calling": [
                "_INIT_0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00105d44) */\n/* WARNING: Removing unreachable block (ram,0x00105d50) */\n\nvoid FUNC_00105d20(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00105d20",
            "entrypoint": "0x00105d20",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00105d20": "FUNC_00105d20"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00105db0": {
            "additional_data": {
                "BFD_ARCHIVE": {
                    "0x4000": 1
                },
                "BFD_UNKNOWN": {
                    "0": 1
                },
                "FUN_001033e5": {
                    "print_usage": 1
                },
                "FUN_0010342d": {
                    "handle_invalid_input": 1
                },
                "FUN_0010394a": {
                    "exit_program": 1
                },
                "FUN_00103a78": {
                    "write_libdeps_record": 1
                },
                "FUN_00104e60": {
                    "initialize_bfd": 1
                },
                "FUN_001052a0": {
                    "strip_invalid_characters": 1
                },
                "FUN_00105300": {
                    "parse_number_argument": 1
                },
                "FUN_00105480": {
                    "process_entries": 1
                },
                "FUN_00105570": {
                    "create_libdeps_record": 1
                },
                "FUN_001056e0": {
                    "set_bfd_default_target": 1
                },
                "FUN_00105830": {
                    "filename_cmp": 1
                },
                "FUN_00105870": {
                    "allocate_array_of_pointers": 1
                },
                "FUN_00105db0": {
                    "decompile_binary_function": 1,
                    "decompiled_function": 1,
                    "extract_and_process_files": 1,
                    "parse_input_files": 1,
                    "process_file": 1,
                    "process_files": 3
                },
                "FUN_001073cc": {
                    "handle_error_and_exit": 1
                },
                "FUN_00107520": {
                    "set_operation_option": 1
                },
                "FUN_00107548": {
                    "perform_operation": 1
                },
                "FUN_001075e0": {
                    "print_ranlib_message": 1
                },
                "FUN_00107640": {
                    "check_valid_character": 1
                },
                "FUN_00107650": {
                    "get_option_string": 1
                },
                "FUN_00107690": {
                    "print_error_message": 1
                },
                "FUN_001076b0": {
                    "initialize_i18n": 1
                },
                "FUN_001076e0": {
                    "initialize_bfd_plugin": 1
                },
                "FUN_00107740": {
                    "find_archive_entry": 1
                },
                "FUN_00107920": {
                    "print_warning_message": 1
                },
                "FUN_00107c10": {
                    "cleanup_bfd_error": 1
                },
                "FUN_00107c20": {
                    "free_resources": 1
                },
                "FUN_00107c40": {
                    "run_program": 1
                },
                "FUN_00107c65": {
                    "initialize_program": 1
                },
                "FUN_00107cc0": {
                    "set_exit_cleanup_function": 1
                },
                "IData": {
                    "byte_array": 1
                },
                "__ptr": {
                    "byte_pointer": 8,
                    "byte_pointer2": 2,
                    "byte_pointer_2": 2,
                    "byte_ptr": 6,
                    "byte_ptr1": 2,
                    "byte_ptr2": 3,
                    "byte_ptr_21": 1
                },
                "__ptr_2": {
                    "byte_ptr": 1
                },
                "_stderr": {
                    "stderr": 1
                },
                "_stdout": {
                    "stdout": 1
                },
                "bVar13": {
                    "byte8": 1,
                    "byte_var": 12,
                    "byte_var1": 2,
                    "byte_var13": 1,
                    "byte_var2": 5,
                    "byte_var_13": 1,
                    "byte_var_2": 1,
                    "byte_variable": 1,
                    "byte_variable_2": 1,
                    "var13": 1
                },
                "bVar3": {
                    "bool_var_3": 1,
                    "byte1": 1,
                    "byte_flag": 1,
                    "byte_var": 19,
                    "byte_var1": 1,
                    "byte_var3": 1,
                    "byte_variable": 1,
                    "byte_variable_1": 1,
                    "flag": 1
                },
                "bVar36": {
                    "bool_var": 1
                },
                "bVar47": {
                    "bool_var": 3,
                    "bool_var3": 1
                },
                "bVar48": {
                    "byte_flag2": 1,
                    "byte_var": 3,
                    "byte_var3": 1
                },
                "bVar8": {
                    "bool_flag1": 1,
                    "bool_var": 13,
                    "bool_var1": 6,
                    "bool_var8": 1,
                    "bool_var_1": 1,
                    "bool_var_8": 1,
                    "bool_variable": 1,
                    "bool_variable_1": 1,
                    "flag_var1": 1
                },
                "bVar9": {
                    "bool_flag2": 1,
                    "bool_var": 12,
                    "bool_var2": 7,
                    "bool_var9": 1,
                    "bool_var_2": 1,
                    "bool_var_9": 1,
                    "bool_variable": 1,
                    "bool_variable_2": 1,
                    "flag_var2": 1
                },
                "cVar14": {
                    "char_flag": 1,
                    "char_var": 19,
                    "char_var1": 2,
                    "char_var14": 1,
                    "char_var_14": 1,
                    "char_variable": 1,
                    "char_variable_1": 1
                },
                "data1": {
                    "0x1": 1
                },
                "data2": {
                    "0xffffffff": 1
                },
                "data3": {
                    "0xcc": 1
                },
                "data4": {
                    "0xcd": 1
                },
                "extraout_EDX": {
                    "extraout_edx": 2,
                    "uint_var": 5,
                    "uint_var2": 1,
                    "uint_var_2": 1,
                    "uint_variable": 1,
                    "uint_variable_2": 1
                },
                "iVar15": {
                    "int_var": 17,
                    "int_var1": 1,
                    "int_var15": 1,
                    "int_var2": 1,
                    "int_var_15": 1,
                    "int_variable": 1,
                    "int_variable_1": 1,
                    "loop_var": 1,
                    "var3": 1
                },
                "iVar45": {
                    "int_var": 8,
                    "int_var1": 1,
                    "int_var2": 2,
                    "int_var_2": 1,
                    "int_variable": 1,
                    "int_variable_2": 1,
                    "var8": 1
                },
                "iVar46": {
                    "int_var": 1
                },
                "lStack24": {
                    "long_var": 1
                },
                "lVar24": {
                    "long_var": 15,
                    "long_var1": 3,
                    "long_var6": 1,
                    "long_var_1": 1,
                    "long_var_25": 1,
                    "long_variable": 1,
                    "long_variable_1": 1,
                    "loop_var": 1
                },
                "lVar29": {
                    "long_pointer": 1
                },
                "lVar34": {
                    "long_var": 11,
                    "long_var2": 4,
                    "long_var7": 1,
                    "long_var_2": 1,
                    "long_variable": 1,
                    "long_variable_2": 1,
                    "loop_var4": 1
                },
                "lVar35": {
                    "long_var": 11,
                    "long_var1": 1,
                    "long_var3": 4,
                    "long_var8": 1,
                    "long_var_3": 1,
                    "long_variable": 1,
                    "long_variable_3": 1,
                    "loop_var5": 1
                },
                "lVar40": {
                    "long_var": 1,
                    "ulong_var2": 1
                },
                "lVar41": {
                    "ulong_var3": 1
                },
                "lVar42": {
                    "ulong_var4": 1
                },
                "local_0x130": {
                    "file_var_6": 1
                },
                "local_100": {
                    "local_long_var": 1,
                    "local_var6": 1,
                    "long_array": 1,
                    "long_local100": 1,
                    "long_var": 6,
                    "long_var2": 1,
                    "long_var4": 2,
                    "long_var_4": 1,
                    "long_var_local": 1,
                    "long_variable": 1,
                    "long_variable_4": 1
                },
                "local_108": {
                    "local_size_t_var": 1,
                    "local_var5": 1,
                    "size_local": 1,
                    "size_t_local108": 1,
                    "size_t_var": 3,
                    "size_t_variable_3": 1,
                    "size_var": 3,
                    "size_var2": 1,
                    "size_var3": 2,
                    "size_var_local": 1,
                    "size_variable": 1
                },
                "local_110": {
                    "char_double_pointer": 1,
                    "char_double_pointer_4": 1,
                    "char_double_ptr": 1,
                    "char_pointer_pointer": 1,
                    "char_pointer_pointer1": 1,
                    "char_pointer_pointer4": 1,
                    "char_pointer_pointer_4": 1,
                    "char_pointer_pointer_local": 1,
                    "char_pointer_pointer_var": 1,
                    "char_ptr_array": 1,
                    "char_ptr_ptr": 1,
                    "char_ptr_ptr2": 1,
                    "char_ptr_ptr_local110": 1,
                    "local_char_ptr_ptr": 1,
                    "local_var4": 1,
                    "str_array_local": 1
                },
                "local_118": {
                    "byte_local": 1,
                    "byte_pointer": 3,
                    "byte_pointer3": 1,
                    "byte_pointer5": 1,
                    "byte_pointer_5": 2,
                    "byte_pointer_var": 1,
                    "byte_ptr": 1,
                    "byte_ptr3": 1,
                    "byte_ptr4": 1,
                    "byte_ptr_local118": 1,
                    "byte_var": 1,
                    "byte_var_local": 1,
                    "local_byte_ptr": 1,
                    "local_var3": 1
                },
                "local_128": {
                    "file_local128": 1,
                    "file_local2": 1,
                    "file_pointer": 2,
                    "file_pointer5": 1,
                    "file_pointer_5": 1,
                    "file_pointer_local": 1,
                    "file_pointer_var": 1,
                    "file_ptr": 1,
                    "file_ptr4": 1,
                    "file_var": 2,
                    "file_var2": 1,
                    "file_var4": 1,
                    "file_var_5": 1,
                    "local_file_ptr2": 1,
                    "local_var2": 1
                },
                "local_130": {
                    "buffer": 1,
                    "file_local": 1,
                    "file_pointer": 1,
                    "file_pointer_var": 1,
                    "file_ptr": 1,
                    "file_var": 2,
                    "file_var3": 1,
                    "local_file_ptr": 1,
                    "local_var1": 1,
                    "undefined8_local130": 1,
                    "undefined8_var": 1,
                    "undefined8_var3": 1,
                    "undefined8_var_3": 1,
                    "undefined8_var_local": 1,
                    "undefined8_variable_3": 1
                },
                "local_20": {
                    "undefined8_var": 1
                },
                "local_a": {
                    "uint_var": 1
                },
                "local_b0": {
                    "local_var10": 1,
                    "uint_local_b0": 1,
                    "uint_var": 5,
                    "uint_var5": 3,
                    "uint_var8": 1,
                    "uint_var_5": 1,
                    "uint_var_local": 1,
                    "uint_variable_5": 1,
                    "var9": 1
                },
                "local_c": {
                    "undefined_var": 1
                },
                "local_c8": {
                    "byte_var_local": 1,
                    "local_var7": 1,
                    "undef_var1": 1,
                    "undefined2_array": 1,
                    "undefined2_var": 1,
                    "undefined_array": 1,
                    "undefined_array_1": 1,
                    "undefined_double": 1,
                    "undefined_double_var": 1,
                    "undefined_local_c8": 1,
                    "undefined_var": 2
                },
                "optind": {
                    "_optind": 1
                },
                "pFVar18": {
                    "file_pointer": 6,
                    "file_pointer1": 2,
                    "file_pointer_1": 1,
                    "file_ptr": 5,
                    "file_ptr1": 1,
                    "file_ptr2": 1,
                    "file_ptr_18": 1,
                    "file_var": 5,
                    "file_var1": 1,
                    "file_var_1": 1
                },
                "pFVar22": {
                    "file_pointer": 6,
                    "file_pointer2": 2,
                    "file_pointer_2": 1,
                    "file_ptr": 2,
                    "file_ptr2": 3,
                    "file_ptr3": 1,
                    "file_ptr_23": 1,
                    "file_var": 3,
                    "file_var1": 1,
                    "file_var2": 2,
                    "file_var_2": 1
                },
                "pFVar28": {
                    "file_pointer": 6,
                    "file_pointer3": 2,
                    "file_pointer_3": 1,
                    "file_ptr": 3,
                    "file_ptr3": 3,
                    "file_ptr4": 1,
                    "file_ptr_29": 1,
                    "file_var": 3,
                    "file_var2": 1,
                    "file_var3": 2,
                    "file_var_3": 1
                },
                "pFVar32": {
                    "file_var": 1
                },
                "pFVar43": {
                    "file_pointer4": 1,
                    "file_pointer_4": 1,
                    "file_var": 1
                },
                "param_1": {
                    "arg1": 1,
                    "argc": 7,
                    "count": 1,
                    "first_parameter": 1,
                    "input": 1,
                    "input_param": 6,
                    "input_parameter": 1,
                    "input_value": 1,
                    "num_arguments": 1,
                    "num_param": 1,
                    "number_of_params": 1,
                    "param1": 4,
                    "param_1": 1,
                    "param_size": 1,
                    "parameter_1": 1,
                    "value": 1
                },
                "param_2": {
                    "argv": 7,
                    "file": 3,
                    "file_param": 8,
                    "file_parameter": 1,
                    "file_pointer": 2,
                    "file_ptr": 1,
                    "input_file": 3,
                    "param2": 2,
                    "param_2": 1,
                    "parameter_2": 1,
                    "second_parameter": 1
                },
                "param_3": {
                    "boolean_value": 1
                },
                "pbVar1": {
                    "byte_array": 1,
                    "byte_pointer": 8,
                    "byte_pointer1": 3,
                    "byte_pointer_1": 2,
                    "byte_ptr": 8,
                    "byte_ptr1": 1,
                    "byte_ptr_1": 1,
                    "ptr": 1,
                    "ptr1": 2
                },
                "pbVar33": {
                    "byte_pointer": 5,
                    "byte_pointer3": 1,
                    "byte_pointer_3": 2,
                    "byte_ptr": 1,
                    "byte_ptr2": 2,
                    "byte_ptr3": 1,
                    "byte_var": 1
                },
                "pbVar38": {
                    "byte_pointer": 6,
                    "byte_pointer4": 1,
                    "byte_pointer_4": 2,
                    "byte_ptr": 1,
                    "byte_ptr2": 2,
                    "byte_ptr3": 1,
                    "byte_ptr4": 1
                },
                "pcVar23": {
                    "char_pointer": 5,
                    "char_ptr": 2,
                    "char_ptr1": 2,
                    "char_ptr2": 1,
                    "char_ptr_24": 1,
                    "char_var": 4,
                    "char_var1": 2,
                    "char_var2": 3,
                    "char_var_2": 1,
                    "char_variable": 1,
                    "char_variable_2": 1,
                    "str_var": 1
                },
                "pcVar39": {
                    "char_pointer": 5,
                    "char_ptr": 1,
                    "char_ptr2": 1,
                    "char_ptr_39": 1,
                    "char_var": 1,
                    "char_var2": 1,
                    "char_var3": 2,
                    "char_var4": 1,
                    "char_var_4": 1,
                    "char_variable_3": 1,
                    "str_var2": 1
                },
                "pcVar43": {
                    "char_pointer": 5,
                    "char_ptr4": 1,
                    "char_ptr5": 1,
                    "char_ptr_43": 1,
                    "char_var_5": 1
                },
                "pcVar46": {
                    "char_pointer": 3
                },
                "piVar11": {
                    "int_pointer": 10,
                    "int_pointer2": 1,
                    "int_pointer_1": 1,
                    "int_ptr": 10,
                    "int_ptr11": 1,
                    "int_ptr_11": 1,
                    "int_var1": 1,
                    "int_var_array": 1
                },
                "plVar21": {
                    "long_pointer": 8,
                    "long_pointer2": 2,
                    "long_pointer_2": 2,
                    "long_ptr": 5,
                    "long_ptr2": 3,
                    "long_ptr_21": 1,
                    "long_var5": 1,
                    "long_var_ptr": 1,
                    "ptr6": 1
                },
                "plVar29": {
                    "long_p_ptr": 1,
                    "long_pointer": 1,
                    "long_pointer_double_pointer": 1,
                    "long_pointer_pointer": 2,
                    "plong_ptr": 1
                },
                "plVar31": {
                    "plong_var": 1
                },
                "plVar33": {
                    "plong_var": 1
                },
                "plVar35": {
                    "long_ptr": 1
                },
                "plVar4": {
                    "long_pointer": 11,
                    "long_pointer1": 1,
                    "long_pointer_1": 1,
                    "long_ptr": 9,
                    "long_ptr4": 1,
                    "long_ptr_4": 1,
                    "long_var": 1,
                    "long_var4": 1,
                    "ptr3": 1
                },
                "ppcVar10": {
                    "char_double_pointer": 3,
                    "char_double_ptr": 2,
                    "char_pointer_pointer": 8,
                    "char_pointer_pointer_1": 1,
                    "char_pptr": 1,
                    "char_ptr_ptr": 5,
                    "char_ptr_ptr10": 1,
                    "char_ptr_ptr_10": 1,
                    "ptr_array": 1,
                    "ptr_ptr_char1": 1,
                    "str_array": 1
                },
                "ppcVar31": {
                    "char_double_pointer": 2,
                    "char_double_pointer_2": 1,
                    "char_pointer_pointer": 3,
                    "char_pointer_pointer2": 1,
                    "char_pointer_pointer_2": 1,
                    "char_ptr_ptr2": 1
                },
                "ppcVar32": {
                    "char_double_pointer": 1,
                    "char_double_pointer_3": 1,
                    "char_pointer_pointer": 4,
                    "char_pointer_pointer3": 1,
                    "char_pointer_pointer_3": 1,
                    "char_ptr_ptr3": 1
                },
                "ppcVar33": {
                    "byte_pointer_pointer": 1
                },
                "ppcVar36": {
                    "ptr_array2": 1
                },
                "ppcVar39": {
                    "ppchar_var": 1
                },
                "ppcVar47": {
                    "ppchar_var": 1
                },
                "pplVar29": {
                    "long_double_pointer": 1,
                    "long_pointer_pointer": 3,
                    "long_pointer_pointer_1": 1,
                    "long_ptr_ptr": 4,
                    "long_ptr_ptr_30": 1,
                    "ptr_ptr_long1": 1
                },
                "pplVar31": {
                    "long_p_ptr2": 1,
                    "long_pointer_pointer": 2
                },
                "pplVar43": {
                    "long_ptr_ptr": 1
                },
                "pppcVar32": {
                    "char_ptr_ptr_ptr": 1
                },
                "ppuVar36": {
                    "ppundefined_ptr": 1,
                    "ptr_ptr_undefined1": 1,
                    "undefined_double_pointer": 3,
                    "undefined_pointer_pointer": 4,
                    "undefined_pointer_pointer_1": 1,
                    "undefined_ptr_ptr": 2,
                    "undefined_ptr_ptr_36": 1
                },
                "ppvVar10": {
                    "ppchar_var": 1
                },
                "puStack16": {
                    "undefined8_ptr": 1
                },
                "puVar12": {
                    "memptr": 1,
                    "ptr5": 1,
                    "ptr_var1": 1,
                    "undefined_pointer": 10,
                    "undefined_pointer2": 1,
                    "undefined_pointer_1": 1,
                    "undefined_ptr": 9,
                    "undefined_ptr12": 1,
                    "undefined_ptr_12": 1
                },
                "puVar2": {
                    "int_pointer": 1,
                    "ptr2": 2,
                    "ptr_array": 1,
                    "u_int_ptr": 1,
                    "uint_pointer": 11,
                    "uint_pointer_1": 1,
                    "uint_ptr": 8,
                    "uint_ptr2": 1,
                    "uint_ptr_2": 1
                },
                "puVar26": {
                    "int64_ptr2": 1,
                    "ptr7": 1,
                    "ptr_var2": 2,
                    "uint64_pointer": 1,
                    "undefined8_pointer": 8,
                    "undefined8_pointer1": 1,
                    "undefined8_pointer_2": 2,
                    "undefined8_ptr": 4,
                    "undefined8_ptr2": 3,
                    "undefined8_ptr_27": 1
                },
                "puVar45": {
                    "undefined8_ptr": 1
                },
                "puVar5": {
                    "int64_ptr": 1,
                    "ptr4": 1,
                    "ptr5": 1,
                    "ptr_var": 1,
                    "uint64_pointer": 1,
                    "undefined8_pointer": 10,
                    "undefined8_pointer_1": 1,
                    "undefined8_ptr": 8,
                    "undefined8_ptr5": 1,
                    "undefined8_ptr_5": 1,
                    "undefined_pointer": 1
                },
                "pvVar38": {
                    "byte_ptr": 1
                },
                "pvVar41": {
                    "byte_ptr": 1
                },
                "pvVar42": {
                    "byte_ptr": 1
                },
                "sVar19": {
                    "size_t_var": 7,
                    "size_t_var1": 1,
                    "size_t_var_1": 1,
                    "size_t_var_19": 1,
                    "size_t_variable_1": 1,
                    "size_var": 9,
                    "size_var1": 3,
                    "size_variable": 1
                },
                "sVar20": {
                    "size_t_var": 6,
                    "size_t_var2": 2,
                    "size_t_var_2": 1,
                    "size_t_var_20": 1,
                    "size_t_variable_2": 1,
                    "size_var": 6,
                    "size_var1": 1,
                    "size_var2": 5,
                    "size_variable": 1
                },
                "sVar44": {
                    "size_t_var": 1
                },
                "uStack_c5": {
                    "local_var9": 1,
                    "undef_var3": 1,
                    "undefined5": 1,
                    "undefined5_var": 6,
                    "undefined5_var_local": 1,
                    "undefined5_var_u_stack_c5": 1,
                    "undefined5_variable_1": 1,
                    "ushort_var1": 1
                },
                "uStack_c6": {
                    "byte_var4": 1,
                    "local_var8": 1,
                    "undef_var2": 1,
                    "undefined": 1,
                    "undefined_var": 5,
                    "undefined_var2": 1,
                    "undefined_var_u_stack_c6": 1,
                    "undefined_variable_6": 1
                },
                "uStackb": {
                    "undefined5_var": 1
                },
                "uVar16": {
                    "loop_var2": 1,
                    "u_int_var": 1,
                    "u_var16": 1,
                    "uint32_variable": 1,
                    "uint_var": 15,
                    "uint_var16": 1,
                    "uint_var3": 2,
                    "uint_var_16": 1,
                    "uint_variable_1": 1,
                    "var4": 1
                },
                "uVar17": {
                    "int6": 1,
                    "previously_assigned_var": 1,
                    "u_int_var": 1,
                    "u_var17": 1,
                    "uint32_variable": 1,
                    "uint_var": 1,
                    "uint_var4": 2,
                    "undefined4_var": 10,
                    "undefined4_var17": 1,
                    "undefined4_var2": 1,
                    "undefined4_var3": 1,
                    "undefined4_var_17": 1,
                    "undefined4_var_3": 1,
                    "undefined4_variable_3": 1,
                    "var5": 1
                },
                "uVar25": {
                    "u_long_var": 1,
                    "u_long_var1": 1,
                    "ulong_var": 15,
                    "ulong_var1": 3,
                    "ulong_var_1": 1,
                    "ulong_var_26": 1,
                    "ulong_variable": 1,
                    "ulong_variable_1": 1
                },
                "uVar27": {
                    "u_var27": 1,
                    "uint64_variable": 1,
                    "uint8_var1": 1,
                    "uint_var5": 1,
                    "undefined8_var": 15,
                    "undefined8_var_1": 1,
                    "undefined8_var_28": 1,
                    "undefined8_variable_1": 1,
                    "var27": 1,
                    "var6": 1
                },
                "uVar30": {
                    "u_var30": 1,
                    "uint64_var1": 1,
                    "uint64_variable": 1,
                    "uint_var6": 1,
                    "undefined8_var": 9,
                    "undefined8_var2": 3,
                    "undefined8_var_2": 1,
                    "undefined8_var_31": 1,
                    "undefined8_variable_2": 1
                },
                "uVar32": {
                    "uint_var": 1
                },
                "uVar37": {
                    "u_int_var": 1,
                    "u_var37": 1,
                    "uint_var": 7,
                    "uint_var3": 2,
                    "uint_var7": 1,
                    "uint_var_3": 1,
                    "uint_variable": 1,
                    "uint_variable_3": 1,
                    "var37": 1,
                    "var7": 1
                },
                "uVar40": {
                    "u_long_var": 1,
                    "u_long_var2": 1,
                    "ulong_var": 7,
                    "ulong_var1": 1,
                    "ulong_var2": 4,
                    "ulong_var_2": 1,
                    "ulong_variable": 1,
                    "ulong_variable_2": 1
                },
                "uVar41": {
                    "u_long_var": 1,
                    "u_var43": 1,
                    "ulong_var": 7,
                    "ulong_var2": 1,
                    "ulong_var3": 4,
                    "ulong_var_3": 1,
                    "ulong_variable": 1,
                    "ulong_variable_3": 1
                },
                "uVar42": {
                    "u_long_var": 1,
                    "u_var45": 1,
                    "ulong_var": 7,
                    "ulong_var3": 1,
                    "ulong_var4": 4,
                    "ulong_var_4": 1,
                    "ulong_variable": 1,
                    "ulong_variable_4": 1
                },
                "uVar43": {
                    "uint_var": 1
                },
                "uVar44": {
                    "index": 1,
                    "u_int_var": 1,
                    "u_var44": 1,
                    "uint_var": 7,
                    "uint_var1": 1,
                    "uint_var4": 2,
                    "uint_var_4": 1,
                    "uint_variable": 1,
                    "uint_variable_4": 1
                },
                "uVar6": {
                    "int4": 1,
                    "u_int_var": 1,
                    "u_var6": 1,
                    "uint32_variable": 1,
                    "uint_var": 1,
                    "uint_var1": 3,
                    "undefined4_var": 11,
                    "undefined4_var1": 1,
                    "undefined4_var6": 1,
                    "undefined4_var_1": 1,
                    "undefined4_var_6": 1,
                    "undefined4_variable_1": 1,
                    "var1": 1,
                    "var6": 1
                },
                "uVar7": {
                    "int5": 1,
                    "u_int_var": 1,
                    "u_var7": 1,
                    "uint32_variable": 1,
                    "uint_var": 1,
                    "uint_var2": 3,
                    "undefined4_var": 11,
                    "undefined4_var2": 1,
                    "undefined4_var7": 1,
                    "undefined4_var_2": 1,
                    "undefined4_var_7": 1,
                    "undefined4_variable_2": 1,
                    "var2": 1,
                    "var7": 1
                },
                "unaff_R12": {
                    "file_pointer": 3,
                    "file_pointer5": 1,
                    "file_ptr2": 1,
                    "file_ptr4": 1,
                    "file_var": 1,
                    "file_var_4": 1,
                    "ptr9": 1
                },
                "unaff_RBP": {
                    "char_pointer": 4,
                    "char_pointer_1": 1,
                    "char_ptr": 2,
                    "char_ptr1": 1,
                    "char_var": 1,
                    "char_var3": 1,
                    "char_var_3": 1,
                    "char_var_pointer": 1,
                    "ptr8": 1,
                    "ptr_var3": 1
                }
            },
            "called": [
                "setlocale",
                "fopen",
                "bfd_make_readable",
                "FUN_00107cc0",
                "FUN_00107650",
                "bfd_errmsg",
                "bfd_plugin_set_program_name",
                "FUN_00105480",
                "open",
                "xmalloc",
                "xrealloc",
                "xexit",
                "bindtextdomain",
                "FUN_001052a0",
                "FUN_00107920",
                "bfd_create",
                "FUN_001075e0",
                "strcmp",
                "FUN_00105830",
                "xmalloc_set_program_name",
                "filename_cmp",
                "FUN_00105870",
                "FUN_00105570",
                "bfd_set_format",
                "FUN_00107890",
                "bfd_bwrite",
                "FUN_00107640",
                "fclose",
                "FUN_0010394a",
                "ferror",
                "isatty",
                "bfd_plugin_set_plugin",
                "fseek",
                "strlen",
                "strtol",
                "printf",
                "textdomain",
                "malloc",
                "FUN_00103e95",
                "bfd_check_format_matches",
                "FUN_00107740",
                "bfd_init",
                "FUN_00103bd1",
                "ftell",
                "FUN_00103a78",
                "bfd_close",
                "getopt_long",
                "FUN_00107690",
                "bfd_get_error",
                "fread",
                "FUN_00105300",
                "bfd_make_writable",
                "bfd_set_default_target",
                "FUN_00107c10",
                "xstrdup",
                "fileno",
                "free",
                "memmove",
                "FUN_00107c20",
                "dcgettext",
                "FUN_00107730",
                "fprintf",
                "FUN_001058b0",
                "bfd_fdopenr",
                "bfd_set_error_program_name",
                "bfd_set_error",
                "lbasename",
                "FUN_0010342d",
                "stat",
                "memcpy",
                "bfd_find_target"
            ],
            "calling": [
                "entry"
            ],
            "code": "\n\n\nvoid extract_and_process_files_00105db0(uint argc,FILE *file_param)\n\n{\n  byte *byte_ptr;\n  uint *uint_pointer;\n  byte byte_var;\n  long *long_pointer;\n  undefined8 *undefined8_pointer;\n  undefined4 undefined4_var;\n  undefined4 undefined4_var;\n  bool bool_var;\n  bool bool_var;\n  char **char_pointer_pointer;\n  int *int_ptr;\n  undefined *undefined_pointer;\n  byte byte_var;\n  char char_var;\n  int int_var;\n  uint uint_var;\n  undefined4 undefined4_var;\n  FILE *file_pointer;\n  size_t size_var;\n  size_t size_t_var;\n  byte *byte_pointer;\n  long *long_pointer;\n  FILE *file_pointer;\n  char *char_pointer;\n  long long_var;\n  ulong ulong_var;\n  undefined8 *undefined8_pointer;\n  undefined8 undefined8_var;\n  FILE *file_pointer;\n  long **long_ptr_ptr;\n  undefined8 undefined8_var;\n  char **char_pointer_pointer;\n  uint uint_var;\n  char **char_pointer_pointer;\n  byte *byte_pointer;\n  long long_var;\n  long long_var;\n  undefined **undefined_pointer_pointer;\n  uint uint_var;\n  char *char_pointer;\n  byte *byte_pointer;\n  char *char_pointer;\n  ulong ulong_var;\n  ulong ulong_var;\n  ulong ulong_var;\n  FILE *file_pointer;\n  char *char_pointer;\n  uint uint_var;\n  int int_var;\n  char *char_pointer;\n  bool bool_var;\n  byte byte_var;\n  undefined8 file_var;\n  FILE *file_var;\n  byte *byte_pointer;\n  char **char_pointer_pointer4;\n  size_t size_t_var;\n  long long_var;\n  undefined undefined_var [2];\n  undefined undefined_var;\n  undefined5 undefined5_var;\n  uint uint_var;\n  \n  byte_var = 0;\n  char_pointer = (char *)(ulong)argc;\n  setlocale(5,\"\");\n  setlocale(0,\"\");\n  bindtextdomain(\"binutils\",\"/usr/share/locale\");\n  textdomain(\"binutils\");\n  DAT_0010d660 = *(long **)file_param;\n  xmalloc_set_program_name();\n  bfd_set_error_program_name(DAT_0010d660);\n  bfd_plugin_set_program_name(DAT_0010d660);\n  char_pointer = (char *)file_param;\n  file_pointer = file_param;\n  if ((int)argc < 2) goto LAB_001062c6;\n  char_pointer_pointer4 = (char **)0x7d0;\n  file_pointer = (FILE *)0x1;\n  file_var = (FILE *)0x0;\n  file_pointer = file_param;\n  do {\n    uint_var = (uint)file_pointer;\n    char_pointer = (char *)(long)(int)uint_var;\n    file_var = (FILE *)((long)char_pointer * 8);\n    char_pointer = (char *)file_pointer;\n    if (**(char **)(&file_pointer->_flags + (long)char_pointer * 2) == '@') {\n      uint_var = (int)char_pointer_pointer4 - 1;\n      char_pointer_pointer4 = (char **)(ulong)uint_var;\n      if (uint_var == 0) {\n        long_pointer = *(long **)file_pointer;\n        char_pointer = \"%s: error: too many @-files encountered\\n\";\nLAB_00106ffe:\n        fprintf(stderr,char_pointer,long_pointer);\nLAB_0010700f:\n                    \n        xexit(1);\n      }\n      char_pointer = *(char **)(&file_pointer->_flags + (long)char_pointer * 2) + 1;\n      int_var = stat(char_pointer,(stat *)undefined_var);\n      if (-1 < int_var) {\n        if ((uint_var & 0xf000) == 0x4000) {\n          long_pointer = *(long **)file_pointer;\n          char_pointer = \"%s: error: @-file refers to a directory\\n\";\n          goto LAB_00106ffe;\n        }\n        file_pointer = fopen(char_pointer,\"r\");\n        if (file_pointer != (FILE *)0x0) {\n          int_var = fseek(file_pointer,0,2);\n          if (((int_var != -1) && (size_var = ftell(file_pointer), size_var != 0xffffffffffffffff)) &&\n             (int_var = fseek(file_pointer,0,0), int_var != -1)) {\n            byte_pointer = (byte *)xmalloc(size_var + 1);\n            size_t_var = fread(byte_pointer,1,size_var,file_pointer);\n            if ((size_var == size_t_var) || (int_var = ferror(file_pointer), int_var == 0)) {\n              byte_pointer[size_t_var] = 0;\n              byte_var = *byte_pointer;\n              byte_pointer = byte_pointer;\n              while( true ) {\n                if (byte_var == 0) goto LAB_00106814;\n                if (((&_sch_istable)[(ulong)byte_var * 2] & 0x40) == 0) break;\n                byte_var = byte_pointer[1];\n                byte_pointer = byte_pointer + 1;\n              }\n              size_var = strlen((char *)byte_pointer);\n              byte_pointer = (byte *)xmalloc(size_var + 1);\n              file_pointer = (FILE *)0x0;\n              int_var = 0;\n              bool_var = false;\n              bool_var = false;\n              bool_var = false;\n              long_var = 0;\n              byte_pointer = byte_pointer;\n              do {\n                while (((&_sch_istable)[(ulong)*byte_pointer * 2] & 0x40) != 0) {\n                  byte_pointer = byte_pointer + 1;\n                }\n                if ((int_var == 0) || (int_var + -1 <= (int)long_var)) {\n                  if (file_pointer == (FILE *)0x0) {\n                    int_var = 8;\n                    file_pointer = (FILE *)xmalloc(0x40);\n                    char_pointer_pointer = (char **)((long)&file_pointer->_flags + long_var * 8);\n                    *char_pointer_pointer = (char *)0x0;\n                  }\n                  else {\n                    int_var = int_var * 2;\n                    file_pointer = (FILE *)xrealloc(file_pointer,(long)int_var << 3);\n                    char_pointer_pointer = (char **)((long)&file_pointer->_flags + long_var * 8);\n                    *char_pointer_pointer = (char *)0x0;\n                  }\n                }\n                else {\n                  char_pointer_pointer = (char **)((long)&file_pointer->_flags + long_var * 8);\n                }\n                byte_var = *byte_pointer;\n                byte_pointer = byte_pointer;\n                while (byte_var != 0) {\n                  while( true ) {\n                    if ((((&_sch_istable)[(ulong)byte_var * 2] & 0x40) != 0) &&\n                       (!(bool)(bool_var | bool_var | bool_var))) {\n                      bool_var = false;\n                      bool_var = false;\n                      bool_var = false;\n                      goto LAB_0010606f;\n                    }\n                    if (!bool_var) break;\n                    byte_pointer = byte_pointer + 1;\n                    *byte_pointer = byte_var;\n                    byte_pointer = byte_pointer + 1;\n                    bool_var = false;\n                    byte_var = *byte_pointer;\n                    if (byte_var == 0) goto LAB_0010606f;\n                  }\n                  if (byte_var == 0x5c) {\n                    bool_var = true;\n                  }\n                  else if (bool_var) {\n                    if (byte_var == 0x27) {\n                      bool_var = false;\n                    }\n                    else {\nLAB_001061f1:\n                      *byte_pointer = byte_var;\n                      byte_pointer = byte_pointer + 1;\n                    }\n                  }\n                  else if (bool_var) {\n                    if (byte_var != 0x22) goto LAB_001061f1;\n                    bool_var = false;\n                  }\n                  else if (byte_var == 0x27) {\n                    bool_var = true;\n                  }\n                  else {\n                    if (byte_var != 0x22) goto LAB_001061f1;\n                    bool_var = true;\n                  }\n                  byte_ptr = byte_pointer + 1;\n                  byte_pointer = byte_pointer + 1;\n                  byte_var = *byte_ptr;\n                }\nLAB_0010606f:\n                *byte_pointer = 0;\n                long_pointer = (long *)xstrdup(byte_pointer);\n                *char_pointer_pointer = (char *)long_pointer;\n                *(undefined8 *)(file_pointer->_shortbuf + long_var * 8 + -0x7b) = 0;\n                byte_var = *byte_pointer;\n                byte_var = (&_sch_istable)[(ulong)byte_var * 2];\n                while ((byte_var & 0x40) != 0) {\n                  byte_var = byte_pointer[1];\n                  byte_pointer = byte_pointer + 1;\n                  byte_var = (&_sch_istable)[(ulong)byte_var * 2];\n                }\n                long_var = long_var + 1;\n                if (byte_var == 0) {\n                  free(byte_pointer);\n                  if (file_pointer == file_param) goto LAB_00106834;\n                  goto LAB_0010610a;\n                }\n              } while( true );\n            }\n            free(byte_pointer);\n          }\n          fclose(file_pointer);\n        }\n      }\n    }\n    if ((int)char_pointer <= (int)(uint_var + 1)) {\nLAB_001062c6:\n      do {\n        if (_DAT_0010d2d4 < 0) goto LAB_001073cc;\nLAB_001062d3:\n        uint_var = (uint)file_pointer;\n        int_var = bfd_init();\n        char_pointer = \"fatal error: libbfd ABI mismatch\";\n        if (int_var != 0x118) goto LAB_00106803;\n        char_pointer = \"x86_64-pc-linux-gnu\";\n        uint_var = bfd_set_default_target(\"x86_64-pc-linux-gnu\",\"fatal error: libbfd ABI mismatch\",5);\n        undefined_pointer = PTR_DAT_0010d2e0;\n        file_pointer = (FILE *)(ulong)uint_var;\n        if ((char)uint_var != '\\0') {\n          if (__xexit_cleanup == (code *)0x0) {\n            __xexit_cleanup = FUN_00107cc0;\n          }\n          if (*(int *)(PTR_DAT_0010d2e0 + 8) < 0x20) {\nLAB_0010632b:\n            undefined_pointer = PTR_DAT_0010d2e0;\n            int_var = *(int *)(PTR_DAT_0010d2e0 + 8);\n            *(int *)(PTR_DAT_0010d2e0 + 8) = int_var + 1;\n            *(code **)(undefined_pointer + (long)int_var * 8 + 0x10) = FUN_00107730;\n          }\n          else {\n            undefined8_pointer = (undefined8 *)malloc(0x110);\n            if (undefined8_pointer != (undefined8 *)0x0) {\n              *undefined8_pointer = undefined_pointer;\n              *(undefined4 *)(undefined8_pointer + 1) = 0;\n              PTR_DAT_0010d2e0 = (undefined *)undefined8_pointer;\n              goto LAB_0010632b;\n            }\n          }\n          long_var = 1;\n          do {\n            long_var = long_var;\n            int_var = (int)char_pointer;\n            if (int_var <= (int)long_var) break;\n            char_var = FUN_00107640(*(undefined8 *)((int *)char_pointer + long_var * 2));\n            long_var = long_var + 1;\n          } while (char_var != '\\0');\n          char_pointer = (char *)((long)char_pointer + long_var * 8 + -8);\n          uint_var = int_var - ((int)long_var + -1);\n          file_pointer = (FILE *)(ulong)uint_var;\n          if (_DAT_0010d2d4 != 0) {\n            char_pointer = \"DhHUvVt\";\n            uint_var = 0;\n            while (int_var = getopt_long(file_pointer,char_pointer,\"DhHUvVt\",&PTR_DAT_0010d300), int_var != -1)\n            {\n              if (int_var < 0x77) {\n                if (0x43 < int_var) {\n                  switch(int_var) {\n                  case 0x44:\n                    _DAT_0010d2d0 = 1;\n                    break;\n                  case 0x48:\n                  case 0x68:\n                    _DAT_0010d658 = 1;\n                    break;\n                  case 0x55:\n                    _DAT_0010d2d0 = 0;\n                    break;\n                  case 0x56:\n                  case 0x76:\n                    _DAT_0010d654 = 1;\n                    break;\n                  case 0x74:\n                    uint_var = uint_var;\n                  }\n                }\n              }\n              else if (int_var == 0xc9) {\n                bfd_plugin_set_plugin(_optarg);\n              }\n            }\n            if ((int)uint_var < 2) {\nLAB_00107125:\n              char_pointer = (char *)0x0;\n              FUN_0010394a();\n            }\n            else {\n              if (_DAT_0010d658 != 0) {\nLAB_0010711b:\n                FUN_0010394a();\n                goto LAB_00107125;\n              }\n              if (_DAT_0010d654 != 0) {\n                FUN_001075e0(\"ranlib\");\n                goto LAB_0010711b;\n              }\n              if (_DAT_0010d2d0 < 0) {\n                _DAT_0010d2d0 = 1;\n              }\n              file_pointer = (FILE *)0x0;\n              char_pointer = (char *)(long)__optind;\n              while( true ) {\n                if ((int)uint_var <= (int)char_pointer) goto LAB_00106f8b;\n                char_pointer = *(char **)((int *)char_pointer + (long)char_pointer * 2);\n                if ((char)uint_var != '\\0') break;\n                uint_var = FUN_00107650();\n                char_pointer = (char *)((long)(int *)char_pointer + 1);\n                file_pointer = (FILE *)(ulong)((uint)file_pointer | uint_var);\n              }\n            }\n            while (long_var = FUN_001052a0(char_pointer), long_var < 1) {\n              uint_var = 1;\nLAB_001071c4:\n              int_ptr = (int *)char_pointer;\n              char_pointer = (char *)((long)int_ptr + 1);\n              file_pointer = (FILE *)(ulong)((uint)file_pointer | uint_var);\n              if ((int)uint_var <= (int)char_pointer) {\nLAB_00106f8b:\n                    \n                xexit(file_pointer);\n              }\n              char_pointer = *(char **)((char *)((long)char_pointer + 0x83) + (long)int_ptr * 8 + -0x7b);\n            }\n            int_var = open(char_pointer,2,0);\n            if (int_var < 0) {\n              bfd_set_error(1);\n              FUN_00107c10(char_pointer);\nLAB_0010737f:\n              FUN_00107c10(char_pointer);\nLAB_00107387:\n              FUN_00107c20(char_pointer);\n              int_var = bfd_get_error();\n              if (int_var == 0xd) {\n                FUN_00103bd1(CONCAT53(undefined5_var,\n                                      CONCAT12(undefined_var,CONCAT11(undefined_var[1],undefined_var[0]))));\n              }\n              goto LAB_0010700f;\n            }\n            char_pointer = (char *)bfd_fdopenr(char_pointer,0);\n            if ((FILE *)char_pointer == (FILE *)0x0) goto LAB_0010737f;\n            char_var = bfd_check_format_matches(char_pointer,2,undefined_var);\n            if (char_var == '\\0') goto LAB_00107387;\n            if ((*(byte *)((long)((long)char_pointer + 0x48) + 1) & 8) != 0) {\n              if (_DAT_0010d2d0 != 0) {\n                uint_pointer = (uint *)((long)((long)char_pointer + 0x40) + 4);\n                *uint_pointer = *uint_pointer | 0x2000;\n              }\n              (**(code **)(*(char **)((long)char_pointer + 8) + 0x1f0))(char_pointer);\n              char_var = bfd_close(char_pointer);\n              if (char_var != '\\0') {\n                uint_var = 0;\n                goto LAB_001071c4;\n              }\n              goto LAB_0010737f;\n            }\n            undefined8_var = dcgettext(0,\"%s: no archive map to update\",5);\n            FUN_00107690(undefined8_var,char_pointer);\nLAB_001073cc:\n            char_pointer = (char *)lbasename(DAT_0010d660);\n            size_var = strlen(char_pointer);\n            if ((size_var < 6) ||\n               (int_var = filename_cmp(char_pointer + (size_var - 6),\"ranlib\"), int_var != 0)) {\n              _DAT_0010d2d4 = 0;\n            }\n            else {\n              _DAT_0010d2d4 = 1;\n            }\n            goto LAB_001062d3;\n          }\n          undefined_pointer_pointer = &PTR_DAT_0010d300;\n          char_pointer = \"hdmpqrtxl:coOVsSuvabiMNfPTDU\";\n          char_pointer = (char *)&DAT_001096a0;\n          file_pointer = (FILE *)char_pointer;\n          file_pointer = file_pointer;\n          if ((int)uint_var < 2) goto switchD_00107462_caseD_1;\n          file_var = (FILE *)CONCAT71(file_var._1_7_,(char)uint_var);\nLAB_001063a3:\n          file_pointer = (FILE *)char_pointer;\n          if (**(char **)((long)char_pointer + 8) != '-') {\n            undefined_var[0] = 0x2d;\n            undefined_var = 0;\n            size_var = strlen(*(char **)((long)char_pointer + 8));\n            int_var = (int)size_var + (int)file_pointer;\n            file_pointer = (FILE *)xmalloc((long)int_var * 8);\n            undefined4_var = *(undefined4 *)((long)char_pointer + 4);\n            file_pointer->_flags = *(int *)char_pointer;\n            *(undefined4 *)&file_pointer->field_0x4 = undefined4_var;\n            char_pointer_pointer = *(char ***)((long)char_pointer + 8);\n            file_var = (FILE *)((long)char_pointer + 0x10);\n            char_pointer_pointer4 = char_pointer_pointer;\n            if (*(char *)char_pointer_pointer == '\\0') {\n              char_pointer_pointer = &file_pointer->_IO_read_ptr;\n            }\n            else {\n              byte_pointer = undefined_var;\n              undefined_var[1] = *(char *)char_pointer_pointer;\n              char_pointer = (char *)xstrdup();\n              char_pointer_pointer = &file_pointer->_IO_read_end;\n              file_pointer->_IO_read_ptr = char_pointer;\n              if (*(char *)((long)char_pointer_pointer + 1) != '\\0') {\n                undefined_var[1] = *(char *)((long)char_pointer_pointer + 1);\n                char_pointer = (char *)xstrdup(byte_pointer);\n                char_pointer_pointer = &file_pointer->_IO_read_base;\n                file_pointer->_IO_read_end = char_pointer;\n                if (*(char *)((long)char_pointer_pointer + 2) != '\\0') {\n                  undefined_var[1] = *(char *)((long)char_pointer_pointer + 2);\n                  char_pointer = (char *)xstrdup(byte_pointer);\n                  char_pointer_pointer = &file_pointer->_IO_write_base;\n                  file_pointer->_IO_read_base = char_pointer;\n                  if (*(char *)((long)char_pointer_pointer + 3) != '\\0') {\n                    char_pointer_pointer = &file_pointer->_IO_write_ptr;\n                    undefined_var[1] = *(char *)((long)char_pointer_pointer + 3);\n                    char_pointer = (char *)xstrdup(byte_pointer);\n                    file_pointer->_IO_write_base = char_pointer;\n                    char_var = *(char *)((long)char_pointer_pointer + 4);\n                    char_pointer_pointer4 = char_pointer_pointer;\n                    if (char_var != '\\0') {\n                      char_pointer = (char *)((long)char_pointer_pointer + 4);\n                      char_pointer_pointer = char_pointer_pointer;\n                      do {\n                        char_pointer_pointer = char_pointer_pointer + 1;\n                        undefined_var[1] = char_var;\n                        char_pointer = (char *)xstrdup(byte_pointer);\n                        char_pointer = char_pointer + 1;\n                        *char_pointer_pointer = char_pointer;\n                        char_var = *char_pointer;\n                        char_pointer_pointer = char_pointer_pointer;\n                        char_pointer_pointer4 = char_pointer_pointer;\n                      } while (char_var != '\\0');\n                    }\n                  }\n                }\n              }\n            }\n            long_var = (long)(int)file_pointer;\n            int_ptr = (int *)char_pointer + long_var * 2;\n            if (file_var < int_ptr) {\n              ulong_var = long_var * 8 - 0x11;\n              if ((ulong_var < 0x18) || (char_pointer_pointer == (char **)((long)char_pointer + 0x18))) {\n                *char_pointer_pointer = *(char **)((long)char_pointer + 0x10);\n                if (((char **)((long)char_pointer + 0x18) < int_ptr) &&\n                   ((((char_pointer_pointer[1] = *(char **)((long)char_pointer + 0x18),\n                      (char **)((long)char_pointer + 0x20) < int_ptr &&\n                      (char_pointer_pointer[2] = *(char **)((long)char_pointer + 0x20),\n                      (char **)((long)char_pointer + 0x28) < int_ptr)) &&\n                     (char_pointer_pointer[3] = *(char **)((long)char_pointer + 0x28),\n                     (char **)((long)char_pointer + 0x30) < int_ptr)) &&\n                    (char_pointer_pointer[4] = *(char **)((long)char_pointer + 0x30),\n                    (char **)((long)char_pointer + 0x38) < int_ptr)))) {\n                  char_pointer_pointer[5] = *(char **)((long)char_pointer + 0x38);\n                  char_pointer_pointer = char_pointer_pointer + 6;\n                  for (char_pointer_pointer = (char **)((long)char_pointer + 0x40); char_pointer_pointer < int_ptr;\n                      char_pointer_pointer = char_pointer_pointer + (ulong)byte_var * -2 + 1) {\n                    *char_pointer_pointer = *char_pointer_pointer;\n                    char_pointer_pointer = char_pointer_pointer + (ulong)byte_var * -2 + 1;\n                  }\n                }\n              }\n              else {\n                undefined4_var = *(undefined4 *)((long)((long)char_pointer + 0x10) + 4);\n                undefined4_var = *(undefined4 *)((long)char_pointer + 0x18);\n                undefined4_var = *(undefined4 *)((long)((long)char_pointer + 0x18) + 4);\n                ulong_var = (ulong_var >> 3) + 1;\n                *(undefined4 *)char_pointer_pointer = *(undefined4 *)((long)char_pointer + 0x10);\n                *(undefined4 *)((long)char_pointer_pointer + 4) = undefined4_var;\n                *(undefined4 *)(char_pointer_pointer + 1) = undefined4_var;\n                *(undefined4 *)((long)char_pointer_pointer + 0xc) = undefined4_var;\n                undefined4_var = *(undefined4 *)((long)((long)char_pointer + 0x20) + 4);\n                undefined4_var = *(undefined4 *)((long)char_pointer + 0x28);\n                undefined4_var = *(undefined4 *)((long)((long)char_pointer + 0x28) + 4);\n                ulong_var = ulong_var >> 1;\n                *(undefined4 *)(char_pointer_pointer + 2) = *(undefined4 *)((long)char_pointer + 0x20);\n                *(undefined4 *)((long)char_pointer_pointer + 0x14) = undefined4_var;\n                *(undefined4 *)(char_pointer_pointer + 3) = undefined4_var;\n                *(undefined4 *)((long)char_pointer_pointer + 0x1c) = undefined4_var;\n                if (ulong_var != 2) {\n                  undefined4_var = *(undefined4 *)((long)((long)char_pointer + 0x30) + 4);\n                  undefined4_var = *(undefined4 *)((long)char_pointer + 0x38);\n                  undefined4_var = *(undefined4 *)((long)((long)char_pointer + 0x38) + 4);\n                  *(undefined4 *)(char_pointer_pointer + 4) = *(undefined4 *)((long)char_pointer + 0x30);\n                  *(undefined4 *)((long)char_pointer_pointer + 0x24) = undefined4_var;\n                  *(undefined4 *)(char_pointer_pointer + 5) = undefined4_var;\n                  *(undefined4 *)((long)char_pointer_pointer + 0x2c) = undefined4_var;\n                  if (ulong_var != 3) {\n                    ulong_var = 3;\n                    do {\n                      ulong_var = ulong_var + 1;\n                      char_pointer = (char *)((long)char_pointer + 0x83) + ulong_var * 0x10 + -0x73;\n                      undefined4_var = *(undefined4 *)(char_pointer + 4);\n                      undefined4_var = *(undefined4 *)(char_pointer + 8);\n                      undefined4_var = *(undefined4 *)(char_pointer + 0xc);\n                      char_pointer_pointer = char_pointer_pointer + ulong_var * 2;\n                      *(undefined4 *)char_pointer_pointer = *(undefined4 *)char_pointer;\n                      *(undefined4 *)((long)char_pointer_pointer + 4) = undefined4_var;\n                      *(undefined4 *)(char_pointer_pointer + 1) = undefined4_var;\n                      *(undefined4 *)((long)char_pointer_pointer + 0xc) = undefined4_var;\n                      ulong_var = ulong_var;\n                    } while (ulong_var != ulong_var);\n                  }\n                }\n                if ((ulong_var & 1) != 0) {\n                  char_pointer_pointer[ulong_var & 0xfffffffffffffffe] =\n                       *(char **)((long)file_var + (ulong_var & 0xfffffffffffffffe) * 8);\n                }\n              }\n              char_pointer_pointer = char_pointer_pointer + long_var + -2;\n            }\n            file_pointer = (FILE *)(ulong)(int_var - 1);\n            *char_pointer_pointer = (char *)0x0;\n            char_pointer = (char *)file_pointer;\n          }\nLAB_001065a2:\n          while( true ) {\n            uint_var = (uint)file_pointer;\n            uint_var = getopt_long((ulong)file_pointer & 0xffffffff,char_pointer,file_pointer,undefined_pointer_pointer,0);\n            char_pointer = (char *)file_pointer;\n            if (uint_var == 0xffffffff) break;\n            if (((uint_var - 100 < 0x15) && ((0x117201UL >> ((ulong)(uint_var - 100) & 0x3f) & 1) != 0))\n               && (DAT_0010d64c != 0)) goto LAB_001067f7;\n            file_pointer = (FILE *)char_pointer;\n            if (uint_var < 0xcc) {\n                    /* WARNING: Could not recover jumptable at 0x001065eb. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              (*(code *)((long)(int *)char_pointer + (long)((int *)char_pointer)[uint_var]))();\n              return;\n            }\nswitchD_00107462_caseD_1:\n            FUN_0010342d(0);\n            char_pointer = (char *)file_pointer;\nswitchD_00107462_caseD_68:\n            _DAT_0010d658 = 1;\n          }\nLAB_00106680:\n          uint_var = DAT_0010d64c;\n          file_pointer = (FILE *)char_pointer;\n          if (DAT_0010d64c == 0) {\n            if (((DAT_0010d648 == 1) || (_DAT_0010d650 != 0)) ||\n               (((int)file_pointer <= __optind || (__optind < 1)))) {\n              uint_var = 0;\n              goto LAB_001066aa;\n            }\n            char_pointer = (char *)((long)char_pointer + (long)__optind * 8 + -8);\n            uint_var = (int)file_pointer - (__optind + -1);\n            file_pointer = (FILE *)(ulong)uint_var;\n            __optind = 0;\n            if (1 < (int)uint_var) goto LAB_001063a3;\n            goto LAB_001065a2;\n          }\nLAB_001066aa:\n          file_pointer = (FILE *)((ulong)file_var & 0xff);\n          uint_var = (uint)file_pointer;\n          undefined_pointer_pointer = (undefined **)((int *)char_pointer + (long)__optind * 2);\n          if (_DAT_0010d658 == 0) {\n            if (_DAT_0010d654 != 0) {\n              FUN_001075e0(&DAT_0010807c);\n              goto LAB_00107591;\n            }\n            if (_DAT_0010d650 == 0) {\n              file_pointer = (FILE *)char_pointer;\n              if (*undefined_pointer_pointer == (undefined *)0x0) goto switchD_00107462_caseD_1;\n              if (DAT_0010d64c == 7) {\n                if (DAT_0010d648 == 0) {\n                  if (uint_var == 3) goto LAB_00106abc;\n                  if (uint_var != 0) goto LAB_00106700;\nLAB_00106eff:\n                  char_pointer = \"no operation specified\";\n                  goto LAB_00106803;\n                }\n                DAT_0010d64c = 2;\n                if (_DAT_0010d644 != 0) goto LAB_0010704f;\n              }\n              else if ((uint_var == 3) || (uint_var == 0)) {\n                if (DAT_0010d648 == 1) {\n                  undefined4_var = FUN_00107650();\n                    \n                  xexit(undefined4_var);\n                }\nLAB_00106abc:\n                if (uint_var == 0) goto LAB_00106eff;\n                if (_DAT_0010d644 != 0) {\nLAB_00106ad1:\n                  char_pointer = \"`u\\' is only meaningful with the `r\\' option.\";\n                  goto LAB_00106803;\n                }\n              }\n              else {\nLAB_00106700:\n                if (_DAT_0010d644 != 0) goto LAB_00107548;\n              }\nLAB_0010670d:\n              if (_DAT_0010d2d0 < 0) {\n                _DAT_0010d2d0 = 1;\n              }\nLAB_00106720:\n              char_pointer = (char *)0x0;\n              if (DAT_0010d640 != 0) {\n                DAT_0010d638 = (long)*undefined_pointer_pointer;\n                char_pointer = (char *)0x1;\n                char_pointer = \"missing position arg.\";\n                if (DAT_0010d638 == 0) goto LAB_00106803;\n              }\n              if (DAT_0010d634 != '\\0') {\n                char_pointer = \"`N\\' is only meaningful with the `x\\' and `d\\' options.\";\n                if ((DAT_0010d64c & 0xfffffffb) == 1) {\n                  int_var = (int)char_pointer;\n                  if (*(char **)((long)undefined_pointer_pointer + (long)int_var * 2 * 4) == (char *)0x0) {\n                    undefined8_var = dcgettext(0,\"`N\\' missing value.\",5);\n                    FUN_00107690(undefined8_var);\n                    uint_var = uint_var;\nLAB_00107548:\n                    if (uint_var == 2) {\nLAB_0010704f:\n                      char_pointer = \"`u\\' is not meaningful with the `D\\' option.\";\n                      if (_DAT_0010d2d0 < 1) goto code_r0x00107068;\n                      goto LAB_00106803;\n                    }\n                    goto LAB_00106ad1;\n                  }\n                  char_pointer = (char *)(ulong)(int_var + 1);\n                  long_var = strtol(*(char **)((long)undefined_pointer_pointer + (long)int_var * 2 * 4),(char **)0x0,10)\n                  ;\n                  char_pointer = \"Value for `N\\' must be positive.\";\n                  _DAT_0010d630 = (int)long_var;\n                  if (0 < _DAT_0010d630) goto LAB_0010673c;\n                }\n                goto LAB_00106803;\n              }\nLAB_0010673c:\n              long_var = (long)(int)char_pointer;\n              file_pointer = (FILE *)char_pointer;\n              if (*(long *)(int *)((long)undefined_pointer_pointer + long_var * 2 * 4) == 0)\n              goto switchD_00107462_caseD_1;\n              file_pointer = (FILE *)((long)undefined_pointer_pointer + (long_var + 1) * 2 * 4);\n              if (*(FILE **)file_pointer == (FILE *)0x0) {\n                char_pointer = (char *)0x0;\n                file_pointer = (FILE *)0x0;\n              }\n              else if (*(long *)((long)undefined_pointer_pointer + (long_var + 2) * 2 * 4) == 0) {\n                char_pointer = (char *)0x1;\n              }\n              else if (*(long *)((long)undefined_pointer_pointer + (long_var + 3) * 2 * 4) == 0) {\n                char_pointer = (char *)0x2;\n              }\n              else if (*(long *)((long)undefined_pointer_pointer + (long_var + 4) * 2 * 4) == 0) {\n                char_pointer = (char *)0x3;\n              }\n              else if (*(long *)((long)undefined_pointer_pointer + (long_var + 5) * 2 * 4) == 0) {\n                char_pointer = (char *)0x4;\n              }\n              else {\n                file_pointer = (FILE *)0x5;\n                do {\n                  char_pointer = (char *)file_pointer;\n                  file_pointer = (FILE *)((long)(int *)char_pointer + 1);\n                } while (*(long *)((int *)((long)undefined_pointer_pointer + long_var * 2 * 4) + (long)file_pointer * 2) !=\n                         0);\n              }\n              undefined8_pointer = (undefined8 *)FUN_00105300();\n              file_pointer = file_pointer;\n              if (DAT_0010d64c == 5) {\n                char_pointer = \"`x\\' cannot be used on thin archives.\";\n                if ((*(byte *)((long)undefined8_pointer + 0x49) & 0x10) == 0) {\n                  char_pointer = (char *)file_pointer;\n                  if (DAT_0010d628 != (char *)0x0) goto LAB_00106d5c;\nswitchD_00106ed8_caseD_5:\n                  FUN_00105480(undefined8_pointer,FUN_00107740,char_pointer,(ulong)char_pointer & 0xffffffff);\n                  goto LAB_0010696c;\n                }\n                goto LAB_00106803;\n              }\n              if (DAT_0010d628 != (char *)0x0) {\nLAB_00106d5c:\n                size_var = strlen(DAT_0010d628);\n                char_pointer = \"__.LIBDEP\";\n                char_pointer = (char *)(size_var + 1);\n                DAT_0010d620 = bfd_create(\"__.LIBDEP\",undefined8_pointer);\n                if (DAT_0010d620 == 0) {\n                  char_pointer = \"Cannot create libdeps record.\";\n                }\n                else {\n                  long_var = bfd_find_target(\"binary\",DAT_0010d620);\n                  char_pointer = \"Cannot set libdeps record type to binary.\";\n                  if (long_var != 0) {\n                    char_var = bfd_set_format(DAT_0010d620,1,5);\n                    char_pointer = \"Cannot set libdeps object format.\";\n                    if (char_var == '\\0') goto LAB_00106803;\n                    char_var = bfd_make_writable(DAT_0010d620,\"Cannot set libdeps object format.\",5);\n                    char_pointer = \"Cannot make libdeps object writable.\";\n                    if (char_var == '\\0') goto LAB_00106803;\n                    file_pointer = (FILE *)bfd_bwrite(DAT_0010d628,char_pointer,DAT_0010d620);\n                    char_pointer = \"Cannot write libdeps record.\";\n                    if (file_pointer != (FILE *)char_pointer) goto LAB_00106803;\n                    char_var = bfd_make_readable(DAT_0010d620,\"Cannot write libdeps record.\",5);\n                    char_pointer = \"Cannot make libdeps object readable.\";\n                    if (char_var == '\\0') goto LAB_00106803;\n                    long_var = bfd_find_target(\"plugin\",DAT_0010d620,5);\n                    char_pointer = \"Cannot reset libdeps record type.\";\n                    if (long_var == 0) goto LAB_00106803;\n                    int_var = (int)char_pointer;\n                    file_var = (FILE *)((long)(int_var + 2) * 8);\n                    char_pointer = (char *)xmalloc(file_var,\"Cannot reset libdeps record type.\");\n                    if (int_var == 0) {\n                      long_var = 0;\n                    }\n                    else {\n                      undefined4_var = *(undefined4 *)&file_pointer->field_0x4;\n                      *(int *)char_pointer = file_pointer->_flags;\n                      *(undefined4 *)((long)char_pointer + 4) = undefined4_var;\n                      long_var = 8;\n                      char_pointer_pointer = (char **)((long)char_pointer + 8);\n                      for (char_pointer = file_var[-1]._unused2 + 4; char_pointer != (char *)0x0;\n                          char_pointer = char_pointer + -1) {\n                        *(undefined *)char_pointer_pointer = *(undefined *)&file_pointer->_flags;\n                        file_pointer = (FILE *)((long)file_pointer + (ulong)byte_var * -2 + 1);\n                        char_pointer_pointer = (char **)((long)char_pointer_pointer + (ulong)byte_var * -2 + 1);\n                      }\n                    }\n                    *(char **)((long)(char **)char_pointer + long_var) = \"__.LIBDEP\";\n                    char_pointer = (char *)(ulong)(int_var + 1);\n                    *(undefined8 *)\n                     (((FILE *)((long)char_pointer + -0xd8))->_unused2 + 0xc + (long)file_var) = 0;\n                    switch(DAT_0010d64c) {\n                    case 1:\n                      goto switchD_00106ed8_caseD_1;\n                    case 2:\n                    case 7:\n                      break;\n                    case 3:\n                      goto switchD_00106ed8_caseD_3;\n                    case 4:\n                      goto switchD_00106ed8_caseD_4;\n                    case 5:\n                      goto switchD_00106ed8_caseD_5;\n                    case 6:\n                      file_pointer = (FILE *)char_pointer;\n                      if (_DAT_0010d610 == 0) goto LAB_00106afb;\n                      break;\n                    default:\n                      goto switchD_001067e8_caseD_5;\n                    }\n                    goto switchD_00106ed8_caseD_2;\n                  }\n                }\n                goto LAB_00106803;\n              }\n              switch(DAT_0010d64c) {\n              case 1:\n                char_pointer = (char *)file_pointer;\n                if (file_pointer == (FILE *)0x0) break;\nswitchD_00106ed8_caseD_1:\n                file_pointer = (FILE *)0x0;\n                goto LAB_00106b89;\n              case 2:\n              case 7:\nswitchD_001067e8_caseD_2:\n                char_pointer = (char *)file_pointer;\n                if ((file_pointer != (FILE *)0x0) || (0 < DAT_0010d648)) {\nswitchD_00106ed8_caseD_2:\n                  FUN_00105570(undefined8_pointer,char_pointer,DAT_0010d64c == 7);\n                  goto LAB_0010696c;\n                }\n                break;\n              case 3:\n                char_pointer = (char *)file_pointer;\nswitchD_00106ed8_caseD_3:\n                FUN_00105480(undefined8_pointer,FUN_00107890,char_pointer,(ulong)char_pointer & 0xffffffff);\n                goto LAB_0010696c;\n              case 4:\n                char_pointer = (char *)file_pointer;\nswitchD_00106ed8_caseD_4:\n                FUN_00105480(undefined8_pointer,FUN_00103a78,char_pointer,(ulong)char_pointer & 0xffffffff);\n                goto LAB_0010696c;\n              default:\nswitchD_001067e8_caseD_5:\n                char_pointer = \"internal error -- this option not implemented\";\n                goto LAB_00106803;\n              case 6:\n                if (_DAT_0010d610 != 0) goto switchD_001067e8_caseD_2;\n                if (file_pointer == (FILE *)0x0) break;\nLAB_00106afb:\n                file_pointer = (FILE *)(undefined8_pointer + 0x1e);\n                do {\n                  file_pointer = file_pointer;\n                  if (*(FILE **)file_pointer == (FILE *)0x0) {\nLAB_00106b9f:\n                    FUN_001058b0(undefined8_pointer);\n                    goto LAB_0010696c;\n                  }\n                  while( true ) {\n                    long_pointer = *(long **)file_pointer;\n                    char_pointer = *(char **)file_pointer;\n                    if (long_pointer == (long *)0x0) {\n                      undefined8_var = *undefined8_pointer;\n                      undefined8_var = dcgettext(0,\"no entry %s in archive %s!\",5);\n                      FUN_00107690(undefined8_var,char_pointer,undefined8_var);\n                      char_pointer = (char *)0x0;\n                      goto LAB_00107293;\n                    }\n                    long_var = *long_pointer;\n                    undefined8_var = FUN_00105830(char_pointer,undefined8_pointer);\n                    int_var = filename_cmp(undefined8_var,long_var);\n                    if (int_var == 0) break;\n                    file_pointer = (FILE *)(*(long **)file_pointer + 0x1e);\n                  }\n                  *(long **)file_pointer = (long *)long_pointer[0x1e];\n                  long_ptr_ptr = (long **)FUN_00105870(file_pointer,3,0);\n                  bool_var = DAT_0010d60c != 0;\n                  long_pointer = *long_ptr_ptr;\n                  *long_ptr_ptr = long_pointer;\n                  long_pointer[0x1e] = (long)long_pointer;\n                  if (bool_var) {\n                    printf(\"m - %s\\n\",*(FILE **)file_pointer);\n                  }\n                  file_pointer = (FILE *)&file_pointer->_IO_read_ptr;\n                } while( true );\n              }\n              goto LAB_00106d4e;\n            }\n            if (-1 < _DAT_0010d2d0) goto LAB_0010755f;\n          }\n          else {\nLAB_00107591:\n            FUN_0010342d(1);\n          }\n          _DAT_0010d2d0 = 1;\nLAB_0010755f:\n          int_var = fileno(_stdin);\n          _DAT_0010d608 = isatty(int_var);\n          FUN_00103e95();\nLAB_0010696c:\n                    \n          xexit(0);\n        }\n        undefined4_var = bfd_get_error();\n        file_pointer = (FILE *)bfd_errmsg(undefined4_var);\n        undefined8_var = dcgettext(0,\"can\\'t set BFD default target to `%s\\': %s\",5);\n        int_var = FUN_00107690(undefined8_var,\"x86_64-pc-linux-gnu\",file_pointer);\nLAB_0010751b:\n        if (DAT_0010d64c == 0) {\nLAB_00107447:\n          undefined_pointer_pointer = (undefined **)char_pointer;\n          file_pointer = (FILE *)char_pointer;\n          switch(int_var) {\n          case 0:\n            goto switchD_00107462_caseD_0;\n          default:\n            goto switchD_00107462_caseD_1;\n          case 0x44:\n            _DAT_0010d2d0 = 1;\n            goto LAB_001065a2;\n          case 0x4d:\n            _DAT_0010d650 = 1;\n            goto LAB_001065a2;\n          case 0x4e:\n            DAT_0010d634 = '\\x01';\n            goto LAB_001065a2;\n          case 0x4f:\n            _DAT_0010d5fc = 1;\n            goto LAB_001065a2;\n          case 0x50:\n            DAT_0010d5f9 = 1;\n            goto LAB_001065a2;\n          case 0x53:\n            DAT_0010d648 = -1;\n            goto LAB_001065a2;\n          case 0x54:\n            DAT_0010d5f8 = 1;\n            goto LAB_001065a2;\n          case 0x55:\n            _DAT_0010d2d0 = 0;\n            goto LAB_001065a2;\n          case 0x56:\n            _DAT_0010d654 = 1;\n            goto LAB_001065a2;\n          case 0x61:\n            DAT_0010d640 = 2;\n            goto LAB_001065a2;\n          case 0x62:\n          case 0x69:\n            DAT_0010d640 = 1;\n            goto LAB_001065a2;\n          case 99:\n            _DAT_0010d610 = 1;\n            goto LAB_001065a2;\n          case 100:\n            DAT_0010d64c = 1;\n            DAT_0010d604 = 1;\n            goto LAB_001065a2;\n          case 0x66:\n            DAT_0010d5fa = 1;\n            goto LAB_001065a2;\n          case 0x68:\n            goto switchD_00107462_caseD_68;\n          case 0x6c:\n            if (DAT_0010d628 == (char *)0x0) {\n              DAT_0010d628 = _optarg;\n              goto LAB_001065a2;\n            }\nLAB_00107293:\n            uint_var = (uint)file_pointer;\n            char_pointer = \"libdeps specified more than once\";\n            char_pointer = (char *)file_pointer;\n            break;\n          case 0x6d:\n            DAT_0010d64c = 6;\n            DAT_0010d604 = 1;\n            goto LAB_001065a2;\n          case 0x6f:\n            _DAT_0010d600 = 1;\n            goto LAB_001065a2;\n          case 0x70:\n            DAT_0010d64c = 4;\n            goto LAB_001065a2;\n          case 0x71:\n            DAT_0010d64c = 7;\n            DAT_0010d604 = 1;\n            goto LAB_001065a2;\n          case 0x72:\n            DAT_0010d64c = 2;\n            DAT_0010d604 = 1;\n            goto LAB_001065a2;\n          case 0x73:\n            DAT_0010d648 = 1;\n            goto LAB_001065a2;\n          case 0x74:\n            DAT_0010d64c = 3;\n            goto LAB_001065a2;\n          case 0x75:\n            _DAT_0010d644 = 1;\n            goto LAB_001065a2;\n          case 0x76:\n            DAT_0010d60c = 1;\n            goto LAB_001065a2;\n          case 0x78:\n            DAT_0010d64c = 5;\n            goto LAB_001065a2;\n          case 0xc9:\n            bfd_plugin_set_plugin(_optarg);\n            goto LAB_001065a2;\n          case 0xca:\n            DAT_0010d5f0 = _optarg;\n            goto LAB_001065a2;\n          case 0xcb:\n            DAT_0010d5e8 = _optarg;\n            goto LAB_001065a2;\n          }\n          goto LAB_00106803;\n        }\nLAB_001067f7:\n        char_pointer = \"two different operation options specified\";\n        char_pointer = (char *)file_pointer;\nLAB_00106803:\n        undefined8_var = dcgettext(0,char_pointer,5);\n        FUN_00107690(undefined8_var);\nLAB_00106814:\n        int_var = (int)char_pointer;\n        file_pointer = (FILE *)xmalloc(8);\n        *(long **)file_pointer = (long *)0x0;\n        if ((FILE *)char_pointer == file_param) {\nLAB_00106834:\n          if (*(long **)char_pointer == (long *)0x0) {\n            int_var = 0;\n          }\n          else {\n            long_var = 1;\n            do {\n              int_var = (int)long_var;\n              long_var = long_var * 2;\n              long_var = long_var + 1;\n            } while (*(long *)((int *)char_pointer + long_var) != 0);\n          }\n          file_pointer = (FILE *)xmalloc((long)(int_var + 1) << 3);\n          long_pointer = *(long **)char_pointer;\n          long_var = 0;\n          while (long_pointer != (long *)0x0) {\n            undefined8_var = xstrdup();\n            *(undefined8 *)((long)&file_pointer->_flags + long_var) = undefined8_var;\n            long_pointer = *(long **)((char *)((long)char_pointer + 0x83) + long_var + -0x7b);\n            long_var = long_var + 8;\n          }\n          *(undefined8 *)((long)&file_pointer->_flags + long_var) = 0;\nLAB_0010610a:\n          int_var = (int)char_pointer;\n          char_pointer = (char *)file_pointer;\n          if (*(long **)file_pointer == (long *)0x0) goto LAB_00106a80;\n          long_var = 0;\n          do {\n            long_var = long_var + 1;\n            long_var = long_var * 8;\n            long_var = long_var;\n          } while (*(long *)(file_pointer->_shortbuf + long_var + -0x7b) != 0);\n          size_t_var = long_var * 8;\n        }\n        else {\nLAB_00106a80:\n          long_var = 0;\n          size_t_var = 0;\n        }\n        long_var = (long)char_pointer * 2;\n        char_pointer = (char *)((long)(char **)char_pointer + long_var);\n        free(*(void **)((int *)char_pointer + long_var));\n        file_pointer = (FILE *)xrealloc(char_pointer,(long_var + 1 + (long)int_var) * 8);\n        uint_var = int_var + -1 + (int)long_var;\n        char_pointer = (char *)(ulong)uint_var;\n        memmove(&file_pointer->_flags + (long)char_pointer * 2,\n                (void *)((long)&file_pointer->_IO_read_ptr + (long)file_var),\n                (long)(int)(int_var - uint_var) << 3);\n        memcpy((void *)((long)&file_var->_flags + (long)&file_pointer->_flags),file_pointer,size_t_var);\n        free(file_pointer);\n        free(byte_pointer);\n        fclose(file_pointer);\n        uint_var = (int)file_var + 1;\n        file_pointer = file_var;\n        char_pointer = (char *)file_pointer;\n        file_var = file_pointer;\n        if ((int)uint_var < (int)uint_var) goto LAB_001061ce;\n      } while( true );\n    }\n    uint_var = uint_var + 1;\n    file_var = file_pointer;\nLAB_001061ce:\n    file_pointer = (FILE *)(ulong)uint_var;\n  } while( true );\nswitchD_00107462_caseD_0:\n  int_var = getopt_long((ulong)file_pointer & 0xffffffff,char_pointer,file_pointer,\"x86_64-pc-linux-gnu\");\n  char_pointer = (char *)file_pointer;\n  if (int_var == -1) goto LAB_00106680;\n  if ((0x14 < int_var - 100U) || ((0x117201UL >> ((byte)(int_var - 100U) & 0x3f) & 1) == 0))\n  goto LAB_00107447;\n  goto LAB_0010751b;\ncode_r0x00107068:\n  if (_DAT_0010d2d0 != 0) goto code_r0x0010706e;\n  goto LAB_00106720;\ncode_r0x0010706e:\n  undefined8_var = dcgettext(0,\"`u\\' modifier ignored since `D\\' is the default (see `U\\')\",5);\n  FUN_00107920(undefined8_var);\n  goto LAB_0010670d;\nLAB_00106b89:\n  if (*(FILE **)char_pointer == (FILE *)0x0) {\n    if ((char)file_pointer != '\\0') goto LAB_00106b9f;\nLAB_00106d4e:\n    DAT_0010d618 = 0;\n    goto LAB_0010696c;\n  }\n  int_var = 0;\n  int_var = strcmp((char *)*(FILE **)char_pointer,\"__.SYMDEF\");\n  undefined8_pointer = undefined8_pointer;\n  if (int_var == 0) {\n    *(byte *)((long)undefined8_pointer + 0x49) = *(byte *)((long)undefined8_pointer + 0x49) & 0xf7;\n    DAT_0010d648 = -1;\n  }\n  else {\n    while( true ) {\n      long_pointer = undefined8_pointer + 0x1e;\n      if ((undefined8 *)*long_pointer == (undefined8 *)0x0) break;\n      undefined8_var = *(undefined8 *)*long_pointer;\n      undefined8_var = FUN_00105830(*(FILE **)char_pointer,undefined8_pointer);\n      int_var = filename_cmp(undefined8_var,undefined8_var);\n      if ((int_var == 0) &&\n         ((DAT_0010d634 == '\\0' || (int_var = int_var + 1, int_var == _DAT_0010d630)))) {\n        if (DAT_0010d60c != 0) {\n          printf(\"d - %s\\n\",*(FILE **)char_pointer);\n        }\n        *long_pointer = *(long *)(*long_pointer + 0xf0);\n        file_pointer = file_pointer;\n        goto LAB_00106d38;\n      }\n      undefined8_pointer = (undefined8 *)*long_pointer;\n    }\n    if (DAT_0010d60c != 0) {\n      file_pointer = *(FILE **)char_pointer;\n      char_pointer = (char *)dcgettext(0,\"No member named `%s\\'\\n\",5);\n      printf(char_pointer,file_pointer);\n    }\n  }\nLAB_00106d38:\n  char_pointer = (char *)((long)char_pointer + 8);\n  goto LAB_00106b89;\n}\n\n",
            "current_name": "extract_and_process_files_00105db0",
            "entrypoint": "0x00105db0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105db0": "extract_and_process_files_00105db0",
                "__ptr": "byte_pointer",
                "_stderr": "stderr",
                "bVar13": "byte_var",
                "bVar3": "byte_var",
                "bVar47": "bool_var",
                "bVar48": "byte_var",
                "bVar8": "bool_var",
                "bVar9": "bool_var",
                "cVar14": "char_var",
                "extraout_EDX": "uint_var",
                "iVar15": "int_var",
                "iVar45": "int_var",
                "lVar24": "long_var",
                "lVar29": "long_pointer",
                "lVar34": "long_var",
                "lVar35": "long_var",
                "local_100": "long_var",
                "local_108": "size_t_var",
                "local_110": "char_pointer_pointer4",
                "local_118": "byte_pointer",
                "local_128": "file_var",
                "local_130": "file_var",
                "local_b0": "uint_var",
                "local_c": "undefined_var",
                "local_c8": "undefined_var",
                "optind": "_optind",
                "pFVar18": "file_pointer",
                "pFVar22": "file_pointer",
                "pFVar28": "file_pointer",
                "param_1": "argc",
                "param_2": "file_param",
                "pbVar1": "byte_ptr",
                "pbVar33": "byte_pointer",
                "pbVar38": "byte_pointer",
                "pcVar23": "char_pointer",
                "pcVar39": "char_pointer",
                "pcVar43": "char_pointer",
                "pcVar46": "char_pointer",
                "piVar11": "int_ptr",
                "plVar21": "long_pointer",
                "plVar29": "long_pointer_pointer",
                "plVar4": "long_pointer",
                "ppcVar10": "char_pointer_pointer",
                "ppcVar31": "char_pointer_pointer",
                "ppcVar32": "char_pointer_pointer",
                "pplVar29": "long_ptr_ptr",
                "ppuVar36": "undefined_pointer_pointer",
                "puVar12": "undefined_pointer",
                "puVar2": "uint_pointer",
                "puVar26": "undefined8_pointer",
                "puVar5": "undefined8_pointer",
                "sVar19": "size_var",
                "sVar20": "size_t_var",
                "uStack_c5": "undefined5_var",
                "uStack_c6": "undefined_var",
                "uVar16": "uint_var",
                "uVar17": "undefined4_var",
                "uVar25": "ulong_var",
                "uVar27": "undefined8_var",
                "uVar30": "undefined8_var",
                "uVar37": "uint_var",
                "uVar40": "ulong_var",
                "uVar41": "ulong_var",
                "uVar42": "ulong_var",
                "uVar44": "uint_var",
                "uVar6": "undefined4_var",
                "uVar7": "undefined4_var",
                "unaff_R12": "file_pointer",
                "unaff_RBP": "char_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001075e0": {
            "additional_data": {
                "FUN_001075e0": {
                    "print_binutils_info": 1,
                    "print_binutils_version": 1,
                    "print_gnu_info": 1,
                    "print_gnu_version": 1,
                    "print_program_info": 4,
                    "print_program_information": 1,
                    "print_software_info": 2,
                    "print_version_info": 18,
                    "print_version_information": 1,
                    "print_welcome_message": 1
                },
                "param_1": {
                    "binutils_version": 1,
                    "compiler_name": 1,
                    "os_name": 1,
                    "program_name": 7,
                    "version": 15,
                    "version_string": 6
                },
                "pcVar1": {
                    "copy_notice": 1,
                    "copy_right_message": 2,
                    "copy_right_msg": 1,
                    "copy_right_str": 1,
                    "copy_right_string": 2,
                    "copy_right_text": 1,
                    "copyright": 1,
                    "copyright_message": 7,
                    "copyright_msg": 2,
                    "copyright_notice": 1,
                    "copyright_str": 1,
                    "copyright_text": 3,
                    "license_message": 1,
                    "license_text": 1,
                    "localized_text": 1,
                    "message": 5
                }
            },
            "called": [
                "dcgettext",
                "printf",
                "exit"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid print_version_info_001075e0(undefined8 version)\n\n{\n  char *copyright_message;\n  \n  printf(\"GNU %s %s\\n\",version,\"(GNU Binutils for Debian) 2.40\");\n  copyright_message = (char *)dcgettext(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n  printf(copyright_message);\n  copyright_message = (char *)dcgettext(0,\n                             \"This program is free software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                             ,5);\n  printf(copyright_message);\n                    \n  exit(0);\n}\n\n",
            "current_name": "print_version_info_001075e0",
            "entrypoint": "0x001075e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001075e0": "print_version_info_001075e0",
                "param_1": "version",
                "pcVar1": "copyright_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107640": {
            "additional_data": {
                "FUN_00107640": {
                    "clear_memory": 1,
                    "determine_zero": 1,
                    "get_default_value": 9,
                    "get_zero": 2,
                    "initialize": 8,
                    "initialize_app": 1,
                    "initialize_application": 3,
                    "initialize_data": 2,
                    "initialize_program": 3,
                    "initialize_zero": 1
                },
                "original_function_name": {
                    "more_descriptive_function_name": 1
                },
                "original_parameter_name_1": {
                    "new_parameter_name_1": 1,
                    "parameter1": 1
                },
                "original_parameter_name_2": {
                    "new_parameter_name_2": 1
                },
                "original_variable_name_1": {
                    "new_variable_name_1": 1,
                    "variable1": 1
                },
                "original_variable_name_2": {
                    "new_variable_name_2": 1
                },
                "ptrParam1": {
                    "data_structure": 1
                },
                "ptrResult": {
                    "return_value": 1
                },
                "return": {
                    "result": 3
                },
                "return_value": {
                    "result": 1
                },
                "returned_value": {
                    "success": 1
                },
                "undefined8": {
                    "bool": 1,
                    "int": 1,
                    "uint64_t": 2,
                    "undefined8": 1,
                    "void": 5
                }
            },
            "called": [],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid initialize_application_00107640(void)\n\n{\n  result 0;\n}\n\n",
            "current_name": "initialize_application_00107640",
            "entrypoint": "0x00107640",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107640": "initialize_application_00107640",
                "return": "result",
                "undefined8": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107650": {
            "additional_data": {
                "DAT_0010d648": {
                    "data_flag": 2,
                    "error_flag": 1,
                    "flag": 5,
                    "global_flag": 1
                },
                "FUN_0010284b": {
                    "generate_random": 1,
                    "get_exit_code": 1,
                    "initialize_environment": 1,
                    "reverse_something": 2
                },
                "FUN_001052a0": {
                    "check_condition": 1,
                    "get_count": 3,
                    "get_count_from_data": 1,
                    "get_counter_value": 1,
                    "get_data_count": 2,
                    "get_data_length": 1,
                    "get_function_status": 1,
                    "get_input_status": 1,
                    "get_result": 1,
                    "get_return_value": 1,
                    "get_value": 1
                },
                "FUN_00105300": {
                    "check_input": 3,
                    "process_data": 7,
                    "process_input": 3,
                    "process_string": 1
                },
                "FUN_001058b0": {
                    "cleanup": 3,
                    "cleanup_data": 4,
                    "cleanup_memory": 1,
                    "cleanup_resource": 1,
                    "cleanup_resources": 1,
                    "free_memory": 1,
                    "handle_processed_input": 1,
                    "process_input": 1,
                    "process_output": 1
                },
                "FUN_00107650": {
                    "analyze_param": 1,
                    "check_and_execute": 1,
                    "check_and_execute_code": 1,
                    "check_and_execute_function": 4,
                    "check_and_exit": 2,
                    "check_and_exit_if_zero": 1,
                    "check_and_process": 2,
                    "check_and_process_binary": 1,
                    "check_and_process_data": 7,
                    "check_and_process_input": 4,
                    "check_and_process_param": 1,
                    "check_something_and_exit": 1,
                    "handle_data": 1,
                    "process_data": 1,
                    "validate_and_process_data": 1,
                    "validate_input": 1,
                    "verify_and_exit": 1
                },
                "lVar2": {
                    "check_result": 1,
                    "count": 5,
                    "counter": 2,
                    "execution_status": 1,
                    "function_return_value": 1,
                    "function_status": 1,
                    "num_checks": 1,
                    "result": 6,
                    "return_code": 1,
                    "return_value": 5,
                    "status": 6,
                    "value": 1
                },
                "param_1": {
                    "code": 1,
                    "data": 5,
                    "data_ptr": 1,
                    "input": 7,
                    "input_data": 11,
                    "input_param": 2,
                    "input_parameter": 2,
                    "input_string": 2
                },
                "uVar1": {
                    "result": 22,
                    "return_value": 8,
                    "success_flag": 1
                },
                "xexit": {
                    "exit_program": 10,
                    "exit_with_error": 1,
                    "handle_exit": 1,
                    "terminate": 1,
                    "terminate_program": 1
                }
            },
            "called": [
                "FUN_00105300",
                "FUN_001058b0",
                "FUN_0010284b",
                "xexit",
                "FUN_001052a0"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nundefined8 check_and_process_data_00107650(undefined8 input_data)\n\n{\n  undefined8 result;\n  long status;\n  \n  status = FUN_001052a0();\n  if (status < 1) {\n    result = 1;\n  }\n  else {\n    DAT_0010d648 = 1;\n    status = FUN_00105300(input_data,0);\n    if (status == 0) {\n                    \n      xexit(1);\n    }\n    FUN_001058b0(status);\n    result = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "check_and_process_data_00107650",
            "entrypoint": "0x00107650",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107650": "check_and_process_data_00107650",
                "lVar2": "status",
                "param_1": "input_data",
                "uVar1": "result",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107690": {
            "additional_data": {
                "FUN_00107690": {
                    "execute_function": 1,
                    "extract_and_exit": 2,
                    "extract_data_and_exit": 2,
                    "initialize_and_exit": 1,
                    "initialize_function": 2,
                    "process_data": 8,
                    "process_data_and_exit": 1,
                    "reverse_and_exit": 3
                },
                "FUN_001078c0": {
                    "copy_buffer_data": 1,
                    "copy_data_to_new_location": 1,
                    "execute_function": 1,
                    "pass_data": 1,
                    "print_message": 1,
                    "process_va_list_and_exit": 1,
                    "write_to_buffer_function": 1
                },
                "__gnuc_va_list": {
                    "va_list": 1
                },
                "in_AL": {
                    "boolean_condition": 1,
                    "char_input": 1,
                    "condition": 2,
                    "condition_flag": 1,
                    "flag": 13,
                    "input_char": 1,
                    "input_flag": 4,
                    "is_condition_true": 1,
                    "is_true": 1
                },
                "local_18": {
                    "argument_8_copy": 1,
                    "condition_8": 1,
                    "eighth_local_variable": 1,
                    "input8_copy": 2,
                    "input8_int": 1,
                    "input_8_copy": 2,
                    "input_8_local": 1,
                    "input_param_8_new": 1,
                    "local_8": 1,
                    "local_arg8": 1,
                    "local_input_8": 1,
                    "local_param8": 3,
                    "local_param_8": 2,
                    "local_val8": 1,
                    "local_value8": 2,
                    "local_var_14": 1,
                    "new_input8": 1,
                    "output8": 1,
                    "param8_copy": 1,
                    "renamed_input8": 1,
                    "updated_input_8": 1,
                    "var8_copy": 1
                },
                "local_28": {
                    "argument_7_copy": 1,
                    "condition_7": 1,
                    "input7_copy": 2,
                    "input7_int": 1,
                    "input_7_copy": 2,
                    "input_7_local": 1,
                    "input_param_7_new": 1,
                    "local_7": 1,
                    "local_arg7": 1,
                    "local_input_7": 1,
                    "local_param7": 3,
                    "local_param_7": 2,
                    "local_val7": 1,
                    "local_value7": 2,
                    "local_var_13": 1,
                    "new_input7": 1,
                    "output7": 1,
                    "param7_copy": 1,
                    "renamed_input7": 1,
                    "seventh_local_variable": 1,
                    "updated_input_7": 1,
                    "var7_copy": 1
                },
                "local_38": {
                    "argument_6_copy": 1,
                    "condition_6": 1,
                    "input6_copy": 2,
                    "input6_int": 1,
                    "input_6_copy": 2,
                    "input_6_local": 1,
                    "input_param_6_new": 1,
                    "local_6": 1,
                    "local_arg6": 1,
                    "local_input_6": 1,
                    "local_param6": 3,
                    "local_param_6": 2,
                    "local_val6": 1,
                    "local_value6": 2,
                    "local_var_12": 1,
                    "new_input6": 1,
                    "output6": 1,
                    "param6_copy": 1,
                    "renamed_input6": 1,
                    "sixth_local_variable": 1,
                    "updated_input_6": 1,
                    "var6_copy": 1
                },
                "local_48": {
                    "argument_5_copy": 1,
                    "condition_5": 1,
                    "fifth_local_variable": 1,
                    "input5_copy": 2,
                    "input5_int": 1,
                    "input_5_copy": 2,
                    "input_5_local": 1,
                    "input_param_5_new": 1,
                    "local_5": 1,
                    "local_arg5": 1,
                    "local_input_5": 1,
                    "local_param5": 3,
                    "local_param_5": 2,
                    "local_val5": 1,
                    "local_value5": 2,
                    "local_var_11": 1,
                    "new_input5": 1,
                    "output5": 1,
                    "param5_copy": 1,
                    "renamed_input5": 1,
                    "updated_input_5": 1,
                    "var5_copy": 1
                },
                "local_58": {
                    "argument_4_copy": 1,
                    "condition_4": 1,
                    "fourth_local_variable": 1,
                    "index_value": 1,
                    "input4_copy": 2,
                    "input4_int": 1,
                    "input_4_copy": 2,
                    "input_4_local": 1,
                    "input_param_4_new": 1,
                    "local_4": 1,
                    "local_arg4": 1,
                    "local_input_4": 1,
                    "local_param4": 3,
                    "local_param_4": 2,
                    "local_val4": 1,
                    "local_value4": 2,
                    "local_var_10": 1,
                    "new_input4": 1,
                    "output4": 1,
                    "param4_copy": 1,
                    "renamed_input4": 1,
                    "updated_input_4": 1,
                    "var4_copy": 1
                },
                "local_68": {
                    "argument_3_copy": 1,
                    "condition_3": 1,
                    "error_flag_copy": 1,
                    "input3_copy": 2,
                    "input3_int": 1,
                    "input_3_copy": 2,
                    "input_3_local": 1,
                    "input_param_3_new": 1,
                    "local_3": 1,
                    "local_arg3": 1,
                    "local_input_3": 1,
                    "local_param3": 3,
                    "local_param_3": 2,
                    "local_val3": 1,
                    "local_value3": 2,
                    "local_var_9": 1,
                    "new_input3": 1,
                    "output3": 1,
                    "renamed_input3": 1,
                    "third_local_variable": 1,
                    "updated_input_3": 1,
                    "value_value": 1,
                    "var3_copy": 1
                },
                "local_78": {
                    "argument_2_copy": 1,
                    "condition_2": 1,
                    "input2_copy": 2,
                    "input2_int": 1,
                    "input_2_copy": 2,
                    "input_2_local": 1,
                    "input_param_2_new": 1,
                    "local_2": 1,
                    "local_arg2": 1,
                    "local_input_2": 1,
                    "local_param2": 3,
                    "local_param_2": 2,
                    "local_val2": 1,
                    "local_value2": 2,
                    "local_var_8": 1,
                    "new_input2": 1,
                    "output2": 1,
                    "output_flag_copy": 1,
                    "renamed_input2": 1,
                    "second_local_variable": 1,
                    "size_value": 1,
                    "updated_input_2": 1,
                    "var2_copy": 1
                },
                "local_88": {
                    "argument_1_copy": 1,
                    "condition_1": 1,
                    "first_local_variable": 1,
                    "flag_value": 1,
                    "input1_copy": 2,
                    "input1_int": 1,
                    "input_1_copy": 2,
                    "input_1_local": 1,
                    "input_flag_copy": 1,
                    "input_param_1_new": 1,
                    "local_1": 1,
                    "local_arg1": 1,
                    "local_input_1": 1,
                    "local_param1": 3,
                    "local_param_1": 2,
                    "local_val1": 1,
                    "local_value1": 2,
                    "local_var_7": 1,
                    "new_input1": 1,
                    "output1": 1,
                    "renamed_input1": 1,
                    "updated_input_1": 1,
                    "var1_copy": 1
                },
                "local_90": {
                    "arg5": 1,
                    "arg_14": 1,
                    "buffer_arg5": 1,
                    "fourteenth_param_second_part": 1,
                    "local_5": 1,
                    "local_data_6": 1,
                    "local_param14": 1,
                    "local_param6": 1,
                    "local_param_13": 1,
                    "local_param_14": 1,
                    "local_var9": 1,
                    "local_var_6": 1,
                    "param14_copy": 3,
                    "param_14": 2,
                    "param_14_copy": 2,
                    "param_14_new": 1,
                    "param_e": 1,
                    "param_f1": 1,
                    "pointer_6_val": 1,
                    "val5": 1,
                    "value5": 1,
                    "var14_copy": 1,
                    "var5": 2
                },
                "local_98": {
                    "arg4": 1,
                    "arg_13": 1,
                    "buffer_arg4": 1,
                    "local_4": 1,
                    "local_data_5": 1,
                    "local_param13": 1,
                    "local_param5": 1,
                    "local_param_12": 1,
                    "local_param_13": 1,
                    "local_var8": 1,
                    "local_var_5": 1,
                    "param13_copy": 3,
                    "param_13": 2,
                    "param_13_copy": 2,
                    "param_13_new": 1,
                    "param_d": 1,
                    "param_e1": 1,
                    "pointer_5_val": 1,
                    "thirteenth_param_second_part": 1,
                    "val4": 1,
                    "value4": 1,
                    "var13_copy": 1,
                    "var4": 2
                },
                "local_a0": {
                    "arg3": 1,
                    "arg_12": 1,
                    "buffer_arg3": 1,
                    "local_3": 1,
                    "local_data_4": 1,
                    "local_param12": 1,
                    "local_param4": 1,
                    "local_param_11": 1,
                    "local_param_12": 1,
                    "local_var7": 1,
                    "local_var_4": 1,
                    "param12_copy": 3,
                    "param_12": 2,
                    "param_12_copy": 2,
                    "param_12_new": 1,
                    "param_c": 1,
                    "param_d1": 1,
                    "pointer_4_val": 1,
                    "twelfth_param_second_part": 1,
                    "val3": 1,
                    "value3": 1,
                    "var12_copy": 1,
                    "var3": 2
                },
                "local_a8": {
                    "arg2": 1,
                    "arg_11": 1,
                    "buffer_arg2": 1,
                    "eleventh_param_second_part": 1,
                    "local_2": 1,
                    "local_data_3": 1,
                    "local_param11": 1,
                    "local_param3": 1,
                    "local_param_10": 1,
                    "local_param_11": 1,
                    "local_var6": 1,
                    "local_var_3": 1,
                    "param11_copy": 3,
                    "param_11": 2,
                    "param_11_copy": 2,
                    "param_11_new": 1,
                    "param_b": 1,
                    "param_c1": 1,
                    "pointer_3_val": 1,
                    "val2": 1,
                    "value2": 1,
                    "var11_copy": 1,
                    "var2": 2
                },
                "local_b0": {
                    "arg1": 1,
                    "arg_10": 1,
                    "buffer_arg1": 1,
                    "local_1": 1,
                    "local_data_2": 1,
                    "local_param10": 1,
                    "local_param2": 1,
                    "local_param_10": 1,
                    "local_param_9": 1,
                    "local_var5": 1,
                    "local_var_2": 1,
                    "param10_copy": 3,
                    "param_10": 2,
                    "param_10_copy": 2,
                    "param_10_new": 1,
                    "param_a": 1,
                    "param_b1": 1,
                    "pointer_2_val": 1,
                    "tenth_param_second_part": 1,
                    "val1": 1,
                    "value1": 1,
                    "var1": 2,
                    "var10_copy": 1
                },
                "local_b8": {
                    "array": 1,
                    "buffer": 2,
                    "data": 1,
                    "local_arr": 1,
                    "local_array": 2,
                    "local_array_3": 1,
                    "local_buffer": 8,
                    "local_buffer_3": 1,
                    "result": 1,
                    "temp": 1,
                    "temp_array": 1,
                    "temp_buffer": 1,
                    "temporary_buffer": 1,
                    "unused_buffer": 2
                },
                "local_c8": {
                    "buffer": 7,
                    "buffer1": 1,
                    "local_arr": 1,
                    "local_array": 2,
                    "local_array_2": 1,
                    "local_array_pointer": 1,
                    "local_array_ptr": 1,
                    "local_buffer": 8,
                    "local_buffer_2": 1,
                    "local_pointer": 2,
                    "local_ptr2": 1,
                    "local_ptr_2": 1,
                    "local_var4": 1,
                    "ptr2": 1,
                    "ptr_2": 1
                },
                "local_d0": {
                    "buffer": 4,
                    "buffer_pointer": 2,
                    "buffer_ptr": 3,
                    "local_array": 3,
                    "local_array_1": 1,
                    "local_array_pointer": 1,
                    "local_buffer_1": 1,
                    "local_ptr": 1,
                    "local_ptr_1": 1,
                    "local_var3": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "ptr1": 1,
                    "ptr_1": 1,
                    "stack_pointer": 5,
                    "stack_ptr": 1
                },
                "local_d4": {
                    "array_size": 1,
                    "buffer_length": 1,
                    "buffer_size": 2,
                    "constant": 1,
                    "count": 1,
                    "count_2": 1,
                    "length": 3,
                    "limit": 1,
                    "local_array_size": 1,
                    "local_length": 1,
                    "local_size": 1,
                    "local_size2": 1,
                    "local_var2": 1,
                    "local_var_1": 1,
                    "local_variable": 1,
                    "size": 1,
                    "size2": 2,
                    "value": 1
                },
                "local_d8": {
                    "buffer_size": 5,
                    "count_1": 1,
                    "data_length": 1,
                    "length": 5,
                    "local_count_1": 1,
                    "local_param_size": 1,
                    "local_size": 1,
                    "local_var1": 1,
                    "num_elements": 1,
                    "size": 11,
                    "size1": 1,
                    "stack_size": 2
                },
                "param_1": {
                    "arg1": 2,
                    "argument_1": 1,
                    "buffer": 1,
                    "first_param": 1,
                    "flag_param": 1,
                    "input1": 8,
                    "input_1": 6,
                    "input_flag": 1,
                    "input_param1": 2,
                    "input_param_1": 3,
                    "param_1": 1,
                    "string_param": 1,
                    "value1": 2,
                    "var1": 1
                },
                "param_10": {
                    "arg1": 1,
                    "data2": 2,
                    "data_2": 1,
                    "input_param_10": 2,
                    "param10": 6,
                    "param2": 4,
                    "param_10": 7,
                    "param_b": 1,
                    "pointer_2": 1,
                    "tenth_param": 1,
                    "value2": 2,
                    "var10": 1
                },
                "param_11": {
                    "arg2": 1,
                    "data3": 2,
                    "data_3": 1,
                    "eleventh_param": 1,
                    "input_param_11": 2,
                    "param11": 6,
                    "param3": 4,
                    "param_11": 7,
                    "param_c": 1,
                    "pointer_3": 1,
                    "value3": 2,
                    "var11": 1
                },
                "param_12": {
                    "arg3": 1,
                    "data4": 2,
                    "data_4": 1,
                    "input_param_12": 2,
                    "param12": 6,
                    "param4": 4,
                    "param_12": 7,
                    "param_d": 1,
                    "pointer_4": 1,
                    "twelfth_param": 1,
                    "value4": 2,
                    "var12": 1
                },
                "param_13": {
                    "arg4": 1,
                    "data5": 2,
                    "data_5": 1,
                    "input_param_13": 2,
                    "param13": 6,
                    "param5": 4,
                    "param_13": 7,
                    "param_e": 1,
                    "pointer_5": 1,
                    "thirteenth_param": 1,
                    "value5": 2,
                    "var13": 1
                },
                "param_14": {
                    "arg5": 1,
                    "data6": 2,
                    "data_6": 1,
                    "fourteenth_param": 1,
                    "input_param_14": 2,
                    "param14": 6,
                    "param6": 4,
                    "param_14": 7,
                    "param_f": 1,
                    "pointer_6": 1,
                    "value6": 2,
                    "var14": 1
                },
                "param_2": {
                    "arg2": 2,
                    "argument_2": 1,
                    "input2": 8,
                    "input_2": 7,
                    "input_param_2": 3,
                    "output_flag": 1,
                    "param_2": 1,
                    "second_param": 1,
                    "size_param": 1,
                    "va_list_param": 2,
                    "value2": 2,
                    "var2": 1,
                    "var_args": 1
                },
                "param_3": {
                    "arg3": 2,
                    "argument_3": 1,
                    "error_flag": 1,
                    "input3": 8,
                    "input_3": 7,
                    "input_param3": 2,
                    "input_param_3": 3,
                    "param3": 1,
                    "param_3": 1,
                    "third_param": 1,
                    "value3": 2,
                    "value_param": 1,
                    "var3": 1
                },
                "param_4": {
                    "arg4": 2,
                    "argument_4": 1,
                    "fourth_param": 1,
                    "index_param": 1,
                    "input4": 8,
                    "input_4": 7,
                    "input_param4": 2,
                    "input_param_4": 3,
                    "param4": 2,
                    "param_4": 1,
                    "value4": 2,
                    "var4": 1
                },
                "param_5": {
                    "arg5": 2,
                    "argument_5": 1,
                    "fifth_param": 1,
                    "input5": 8,
                    "input_5": 7,
                    "input_param5": 2,
                    "input_param_5": 3,
                    "param5": 2,
                    "param_5": 1,
                    "value5": 2,
                    "var5": 1
                },
                "param_6": {
                    "arg6": 2,
                    "argument_6": 1,
                    "input6": 8,
                    "input_6": 7,
                    "input_param6": 2,
                    "input_param_6": 3,
                    "param6": 2,
                    "param_6": 1,
                    "sixth_param": 1,
                    "value6": 2,
                    "var6": 1
                },
                "param_7": {
                    "arg7": 2,
                    "argument_7": 1,
                    "input7": 8,
                    "input_7": 7,
                    "input_param7": 2,
                    "input_param_7": 3,
                    "param7": 2,
                    "param_7": 1,
                    "seventh_param": 1,
                    "value7": 2,
                    "var7": 1
                },
                "param_8": {
                    "arg8": 2,
                    "argument_8": 1,
                    "eighth_param": 1,
                    "input8": 8,
                    "input_8": 7,
                    "input_param8": 2,
                    "input_param_8": 3,
                    "param8": 2,
                    "param_8": 1,
                    "value8": 2,
                    "var8": 1
                },
                "param_9": {
                    "data1": 2,
                    "data_1": 1,
                    "first_param_second_part": 1,
                    "function_pointer": 1,
                    "input_param_9": 2,
                    "param1": 4,
                    "param9": 6,
                    "param_9": 6,
                    "param_a": 1,
                    "pointer_1": 1,
                    "value1": 2,
                    "var9": 1
                },
                "xexit": {
                    "exit_function": 2,
                    "exit_program": 4
                }
            },
            "called": [
                "FUN_001078c0",
                "xexit"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_001028ed",
                "FUN_00102c25",
                "FUN_00105db0",
                "FUN_00103a78"
            ],
            "code": "\nvoid process_data_and_exit_00107690(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 input5,undefined4 input6,undefined4 input7,undefined4 input8,\n                 undefined8 param9,undefined8 input10,undefined8 input11,undefined8 input12,\n                 undefined8 input13,undefined8 input14)\n\n{\n  char flag;\n  undefined4 size;\n  undefined4 length;\n  undefined *stack_pointer;\n  undefined *local_buffer;\n  undefined local_buffer [8];\n  undefined8 param10_copy;\n  undefined8 param11_copy;\n  undefined8 param12_copy;\n  undefined8 param13_copy;\n  undefined8 param14_copy;\n  undefined4 local_param1;\n  undefined4 local_param2;\n  undefined4 local_param3;\n  undefined4 local_param4;\n  undefined4 local_param5;\n  undefined4 local_param6;\n  undefined4 local_param7;\n  undefined4 local_param8;\n  \n  if (flag != '\\0') {\n    local_param1 = input1;\n    local_param2 = input2;\n    local_param3 = input3;\n    local_param4 = input4;\n    local_param5 = input5;\n    local_param6 = input6;\n    local_param7 = input7;\n    local_param8 = input8;\n  }\n  stack_pointer = &stack0x00000008;\n  size = 8;\n  local_buffer = local_buffer;\n  length = 0x30;\n  param10_copy = input10;\n  param11_copy = input11;\n  param12_copy = input12;\n  param13_copy = input13;\n  param14_copy = input14;\n  FUN_001078c0(param9,&size);\n                    \n  xexit(1);\n}\n\n",
            "current_name": "process_data_and_exit_00107690",
            "entrypoint": "0x00107690",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107690": "process_data_and_exit_00107690",
                "in_AL": "flag",
                "local_18": "local_param8",
                "local_28": "local_param7",
                "local_38": "local_param6",
                "local_48": "local_param5",
                "local_58": "local_param4",
                "local_68": "local_param3",
                "local_78": "local_param2",
                "local_88": "local_param1",
                "local_90": "param14_copy",
                "local_98": "param13_copy",
                "local_a0": "param12_copy",
                "local_a8": "param11_copy",
                "local_b0": "param10_copy",
                "local_b8": "local_buffer",
                "local_c8": "local_buffer",
                "local_d0": "stack_pointer",
                "local_d4": "length",
                "local_d8": "size",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "param_7": "input7",
                "param_8": "input8",
                "param_9": "param9",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107730": {
            "additional_data": {
                "DAT_0010d5d8": {
                    "file_pointer": 4,
                    "file_ptr": 1,
                    "file_to_close": 2
                },
                "DAT_0010d5e0": {
                    "cache": 1,
                    "is_cache_needed": 1,
                    "is_cache_open": 4,
                    "should_close_bfd_cache": 1
                },
                "DAT_0010d618": {
                    "file": 1,
                    "file_exists": 1,
                    "file_path": 2,
                    "file_status": 1,
                    "file_to_cleanup": 2
                },
                "FUN_00102bf5": {
                    "close_bf_dcache": 1,
                    "close_bfd_cache": 7,
                    "close_cache": 4,
                    "deallocate_memory": 1,
                    "deallocate_resources": 1,
                    "initialize_cache": 1,
                    "perform_cleanup": 2,
                    "reverse_data": 1,
                    "shutdown": 1,
                    "unload_shared_libraries": 1
                },
                "FUN_00107730": {
                    "cleanup": 2,
                    "cleanup_and_close": 1,
                    "cleanup_and_close_file": 1,
                    "cleanup_and_delete_file": 3,
                    "cleanup_and_remove_file": 2,
                    "cleanup_and_unlink_file": 1,
                    "cleanup_cache": 1,
                    "cleanup_file": 4,
                    "cleanup_files": 2,
                    "cleanup_function": 9,
                    "close_and_delete_files": 1,
                    "close_file": 1,
                    "close_file_and_unlink": 2,
                    "remove_file": 1
                },
                "bfd_cache_close": {
                    "close_bfd_cache": 2,
                    "close_cache": 3
                },
                "fclose": {
                    "close_file": 4
                },
                "unlink_if_ordinary": {
                    "cleanup_file_unlink": 1,
                    "delete_file": 10,
                    "remove_file": 13,
                    "unlink_file": 1
                }
            },
            "called": [
                "FUN_00102bf5"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid cleanup_function_00107730(void)\n\n{\n  if (DAT_0010d618 == 0) {\n    return;\n  }\n  if (DAT_0010d5e0 != 0) {\n    bfd_cache_close();\n  }\n  if (DAT_0010d5d8 != (FILE *)0x0) {\n    fclose(DAT_0010d5d8);\n  }\n  unlink_if_ordinary(DAT_0010d618);\n  return;\n}\n\n",
            "current_name": "cleanup_function_00107730",
            "entrypoint": "0x00107730",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107730": "cleanup_function_00107730",
                "bfd_cache_close": "close_cache",
                "fclose": "close_file",
                "unlink_if_ordinary": "remove_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107740": {
            "additional_data": {
                "DAT_0010d5d8": {
                    "archive_file": 3,
                    "file_handle": 1,
                    "file_pointer": 1,
                    "file_ptr": 1
                },
                "DAT_0010d600": {
                    "check_for_errors": 1,
                    "constant_value_1": 1,
                    "global_flag1": 1,
                    "is_debug_enabled": 1,
                    "mode_flag": 1
                },
                "DAT_0010d618": {
                    "archive_file_path": 1,
                    "error_filename": 1,
                    "file_name": 1,
                    "file_path": 3
                },
                "DAT_0010d638": {
                    "constant_value_2": 1,
                    "data_var": 1,
                    "default_error_message": 1,
                    "global_var1": 1,
                    "search_string": 1,
                    "some_other_constant": 1,
                    "special_filename": 1
                },
                "FUN_00107690": {
                    "handle_error": 1
                },
                "FUN_00107740": {
                    "extract_and_improve": 1,
                    "extract_and_modify_archive": 1,
                    "extract_and_process_archive": 2,
                    "extract_and_save_archive": 1,
                    "extract_and_write_archive": 2,
                    "extract_archive": 3,
                    "extract_archive_files": 2,
                    "extract_archived_files": 1,
                    "extract_file_info": 1,
                    "extract_valid_archives": 1,
                    "parse_and_process_archive": 1,
                    "parse_archive": 3,
                    "process_archive": 4,
                    "process_binary": 1,
                    "process_binary_data": 1,
                    "process_binary_file": 1,
                    "process_files": 1,
                    "process_parameter": 1,
                    "read_archive_file": 1
                },
                "FUN_00107c80": {
                    "process_data": 1
                },
                "_DAT_0010d600": {
                    "condition_var": 1,
                    "constant_value_3": 1,
                    "some_constant": 1
                },
                "_DAT_0010d618": {
                    "file_path": 1
                },
                "_Stack_b0": {
                    "access_permission": 1,
                    "file_mode": 5,
                    "file_permission": 2,
                    "file_permissions": 17,
                    "mode": 2,
                    "mode_var": 1,
                    "permission_bits": 1,
                    "permissions": 2
                },
                "__n": {
                    "buffer_size": 2,
                    "bytes_read": 24,
                    "read_bytes": 3,
                    "read_size": 2
                },
                "__ptr": {
                    "allocated_memory": 1,
                    "buffer": 26,
                    "buffer_pointer": 2,
                    "buffer_ptr": 2
                },
                "bfd_bread": {
                    "read_buffer": 1
                },
                "bfd_seek": {
                    "seek": 1
                },
                "chmod": {
                    "change_file_permissions": 1
                },
                "dcgettext": {
                    "get_translation": 1
                },
                "fclose": {
                    "close_file": 1
                },
                "filename_cmp": {
                    "compare_filenames": 1
                },
                "iVar1": {
                    "cmp_result": 3,
                    "compare_result": 2,
                    "comparison_result": 22,
                    "filename_comparison_result": 2,
                    "result": 2
                },
                "iVar2": {
                    "error_code": 2,
                    "error_flag": 1,
                    "error_result": 1,
                    "function_result": 1,
                    "function_return_value": 1,
                    "internal_stat_error": 1,
                    "result": 1,
                    "return_value": 1,
                    "stat_error": 10,
                    "stat_error_result": 1,
                    "stat_result": 2,
                    "status": 9
                },
                "lVar7": {
                    "current_offset": 2,
                    "file_offset": 2,
                    "iterator": 1,
                    "loop_count": 2,
                    "loop_counter": 9,
                    "loop_index": 1,
                    "loop_var": 2,
                    "loop_variable": 1,
                    "offset": 11
                },
                "local_c8": {
                    "empty_array": 1,
                    "error_array": 1,
                    "flags": 1,
                    "initialized_array": 3,
                    "local_array": 13,
                    "local_buffer": 2,
                    "local_data_array": 2,
                    "local_flags": 1,
                    "local_values": 2,
                    "local_variables": 1,
                    "zero_initialized_array": 1,
                    "zeroed_array": 1,
                    "zeroed_variables": 1
                },
                "param_1": {
                    "archive": 12,
                    "archive_files": 1,
                    "archives": 1,
                    "binary_data": 2,
                    "file": 1,
                    "file_list": 1,
                    "function_params": 1,
                    "input": 3,
                    "input_archive": 1,
                    "input_data": 3,
                    "input_files": 2,
                    "input_params": 1,
                    "parameters": 2
                },
                "pcVar4": {
                    "errno_string": 2,
                    "error_message": 11,
                    "error_msg": 2,
                    "error_string": 14,
                    "str_error": 1
                },
                "piVar3": {
                    "errno_location": 17,
                    "errno_ptr": 6,
                    "error_code": 1,
                    "error_location": 4,
                    "error_number": 2
                },
                "plVar8": {
                    "current_archive": 1,
                    "current_entry": 5,
                    "current_file": 6,
                    "current_param": 1,
                    "current_pointer": 5,
                    "entry": 1,
                    "entry_ptr": 1,
                    "file_offset": 1,
                    "file_pointer": 5,
                    "file_ptr": 1,
                    "location": 1,
                    "long_ptr": 1,
                    "matching_entry": 1,
                    "next_file": 1
                },
                "pplVar6": {
                    "archive": 1,
                    "archive_data": 2,
                    "archive_files": 2,
                    "archive_pointer": 2,
                    "archive_ptr": 6,
                    "current_archive": 1,
                    "current_entry_pointer": 1,
                    "current_file": 1,
                    "data_pointer": 1,
                    "double_ptr": 1,
                    "file_data": 1,
                    "file_list": 1,
                    "file_list_pointer": 1,
                    "file_pointer": 1,
                    "file_ptr": 1,
                    "file_table": 1,
                    "files_pointer": 1,
                    "parameter_array": 1,
                    "pointer_array": 2,
                    "pointer_to_variable": 1,
                    "ppl_input": 1,
                    "selected_archives": 1
                },
                "puVar9": {
                    "array_pointer": 1,
                    "clear_flags": 1,
                    "int_array": 1,
                    "int_array_pointer": 1,
                    "local_array": 16,
                    "local_array_pointer": 1,
                    "local_array_ptr": 2,
                    "local_buffer": 2,
                    "local_data": 1,
                    "local_values": 1,
                    "local_variables": 4
                },
                "sVar11": {
                    "actual_size": 1,
                    "amount_to_read": 1,
                    "buffer_size": 3,
                    "bytes_read": 1,
                    "bytes_remaining": 1,
                    "bytes_to_copy": 1,
                    "bytes_to_process": 1,
                    "bytes_to_read": 14,
                    "bytes_to_write": 2,
                    "read_size": 4,
                    "to_read": 1,
                    "write_length": 1
                },
                "uStack_70": {
                    "additional_translation": 1,
                    "another_value": 1,
                    "another_variable": 1,
                    "archive_name": 1,
                    "archive_path": 1,
                    "arg_10": 1,
                    "current_entry": 1,
                    "directory_path": 1,
                    "error_message_pointer": 1,
                    "file_fp2": 1,
                    "filename_cmp_error": 1,
                    "first_arg_of_fun_00107c80": 1,
                    "first_message": 1,
                    "path_error2": 1,
                    "processed_file2": 1,
                    "result": 1,
                    "result2": 1,
                    "saved_data": 1,
                    "some_other_stack_variable": 1,
                    "stack_var2": 1,
                    "stack_variable2": 2,
                    "struct_field2": 1,
                    "temp_stack": 1,
                    "temp_value2": 2,
                    "temp_var2": 1,
                    "temp_variable2": 4
                },
                "uStack_80": {
                    "arg_8": 1,
                    "entry_file_permissions": 1,
                    "error_message_pointer": 1,
                    "extracted_file_path": 1,
                    "file_fp1": 1,
                    "file_path": 1,
                    "internal_stat_error": 1,
                    "path_error": 1,
                    "previous_entry": 1,
                    "previous_value": 1,
                    "processed_file1": 1,
                    "result": 2,
                    "saved_data": 1,
                    "second_arg_of_fun_00107c80": 1,
                    "second_message": 1,
                    "secondary_translation": 1,
                    "some_stack_variable": 1,
                    "some_variable": 1,
                    "stack_var1": 1,
                    "stack_variable1": 2,
                    "struct_field1": 1,
                    "temp_stack": 1,
                    "temp_value1": 2,
                    "temp_var1": 1,
                    "temp_variable1": 4
                },
                "uStack_98": {
                    "archive_size": 14,
                    "file_size": 13,
                    "total_size": 4
                },
                "uVar10": {
                    "bytes_processed": 5,
                    "bytes_read": 2,
                    "bytes_remaining": 2,
                    "bytes_written": 1,
                    "position": 1,
                    "read_bytes": 1,
                    "remaining_bytes": 2,
                    "total_bytes": 4,
                    "total_bytes_read": 8,
                    "total_bytes_written": 1,
                    "total_read": 1,
                    "u_var": 1
                },
                "uVar5": {
                    "error_message": 6,
                    "error_msg": 1,
                    "error_string": 3,
                    "error_text": 2,
                    "gettext_message": 2,
                    "gettext_result": 7,
                    "internal_stat_error_message": 1,
                    "message": 5,
                    "text": 1,
                    "translated_string": 1,
                    "translation": 2
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "FUN_00102c25"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00103e95"
            ],
            "code": "\n\n\nlong * extract_and_process_archive_00107740(long **archive)\n\n{\n  int comparison_result;\n  int stat_error;\n  int *errno_location;\n  char *error_string;\n  undefined8 gettext_result;\n  long **archive_ptr;\n  void *buffer;\n  size_t bytes_read;\n  long offset;\n  long *current_file;\n  undefined4 *local_array;\n  ulong total_bytes_read;\n  size_t bytes_to_read;\n  undefined4 local_array [6];\n  __mode_t file_permissions;\n  ulong archive_size;\n  undefined8 temp_variable1;\n  undefined8 temp_variable2;\n  \n  if (_DAT_0010d600 != 0) {\n    local_array = local_array;\n    for (offset = 0x24; offset != 0; offset = offset + -1) {\n      *local_array = 0;\n      local_array = local_array + 1;\n    }\n  }\n  archive_ptr = (long **)archive[0x1d];\n  if ((long **)archive[0x1d] == (long **)0x0) {\n    archive_ptr = archive;\n  }\n  stat_error = (*(code *)archive_ptr[1][0x3d])(archive,local_array);\n  if (stat_error != 0) {\n    current_file = *archive;\n    gettext_result = dcgettext(0,\"internal stat error on %s\",5);\n    stat_error = FUN_00107690(gettext_result,current_file);\n    gettext_result = DAT_0010d638;\n    if (stat_error == 3) {\n      for (; *current_file != 0; current_file = (long *)(*current_file + 0xf0)) {\n      }\n    }\n    else {\n      for (; (undefined8 *)*current_file != (undefined8 *)0x0; current_file = (long *)(*current_file + 0xf0)) {\n        comparison_result = filename_cmp(*(undefined8 *)*current_file,gettext_result);\n        if (comparison_result == 0) {\n          if (stat_error != 2) {\n            return current_file;\n          }\n          return (long *)(*current_file + 0xf0);\n        }\n      }\n    }\n    return current_file;\n  }\n  bfd_seek(archive,0,0);\n  DAT_0010d5d8 = (FILE *)0x0;\n  if (archive_size == 0) {\nLAB_00102ca2:\n    DAT_0010d5d8 = (FILE *)FUN_00105a20(*archive);\n  }\n  else {\n    total_bytes_read = 0;\n    buffer = (void *)xmalloc(0x2000);\n    do {\n      bytes_to_read = archive_size - total_bytes_read;\n      if (0x2000 < bytes_to_read) {\n        bytes_to_read = 0x2000;\n      }\n      bytes_read = bfd_bread(buffer,bytes_to_read,archive);\n      if (bytes_to_read != bytes_read) {\nLAB_00102c78:\n        archive = (long **)*archive[0x1d];\n        gettext_result = dcgettext(0,\"%s is not a valid archive\",5);\n        FUN_00107690(gettext_result,archive);\n        goto LAB_00102ca2;\n      }\n      if (DAT_0010d5d8 == (FILE *)0x0) {\n        DAT_0010d5d8 = (FILE *)FUN_00105a20(*archive);\n      }\n      bytes_to_read = fwrite(buffer,1,bytes_read,DAT_0010d5d8);\n      if (bytes_to_read != bytes_read) {\n        errno_location = __errno_location();\n        error_string = strerror(*errno_location);\n        FUN_00107690(\"%s: %s\",DAT_0010d618,error_string);\n        goto LAB_00102c78;\n      }\n      total_bytes_read = total_bytes_read + bytes_read;\n    } while (total_bytes_read < archive_size);\n    free(buffer);\n  }\n  fclose(DAT_0010d5d8);\n  error_string = DAT_0010d618;\n  DAT_0010d5d8 = (FILE *)0x0;\n  chmod(DAT_0010d618,file_permissions);\n  if (_DAT_0010d600 != 0) {\n    temp_variable1 = temp_variable2;\n    FUN_00107c80(error_string,local_array);\n  }\n  DAT_0010d618 = (char *)0x0;\n  return (long *)0x0;\n}\n\n",
            "current_name": "extract_and_process_archive_00107740",
            "entrypoint": "0x00107740",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107740": "extract_and_process_archive_00107740",
                "_Stack_b0": "file_permissions",
                "__n": "bytes_read",
                "__ptr": "buffer",
                "bfd_bread": "read_buffer",
                "bfd_seek": "seek",
                "chmod": "change_file_permissions",
                "dcgettext": "get_translation",
                "fclose": "close_file",
                "filename_cmp": "compare_filenames",
                "iVar1": "comparison_result",
                "iVar2": "stat_error",
                "lVar7": "offset",
                "local_c8": "local_array",
                "param_1": "archive",
                "pcVar4": "error_string",
                "piVar3": "errno_location",
                "plVar8": "current_file",
                "pplVar6": "archive_ptr",
                "puVar9": "local_array",
                "sVar11": "bytes_to_read",
                "uStack_70": "temp_variable2",
                "uStack_80": "temp_variable1",
                "uStack_98": "archive_size",
                "uVar10": "total_bytes_read",
                "uVar5": "gettext_result",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107890": {
            "additional_data": {
                "FUN_00107890": {
                    "output_to_stdout": 1,
                    "print_file_if_enabled": 1,
                    "print_file_status": 1,
                    "print_message": 1,
                    "print_output": 13,
                    "print_output_message": 1,
                    "print_param_to_stdout": 2,
                    "print_params_to_stdout": 1,
                    "print_status": 1,
                    "print_stdout": 2,
                    "print_to_file": 5,
                    "print_to_stdout": 2
                },
                "FUN_001079c0": {
                    "format_and_print": 1,
                    "print_file_status": 1,
                    "print_formatted_message": 1,
                    "print_formatted_output": 2,
                    "print_message": 1,
                    "print_param": 1,
                    "print_param_to_file": 1,
                    "print_stream": 1,
                    "print_text": 1,
                    "print_to_console": 1,
                    "print_to_file": 9,
                    "print_to_file_and_check": 1,
                    "print_to_file_aux": 1,
                    "print_to_file_helper": 1,
                    "print_to_stdout": 1,
                    "print_with_flags": 2,
                    "write_to_file": 2
                },
                "_stdout": {
                    "file": 1,
                    "file_handle": 1
                },
                "param_1": {
                    "data": 1,
                    "file": 9,
                    "filename": 1,
                    "message": 1,
                    "output": 8,
                    "output_file": 1,
                    "output_file_stream": 1,
                    "output_message": 2,
                    "output_stream": 2,
                    "output_string": 2,
                    "param": 2,
                    "text": 1
                },
                "param_2": {
                    "data": 1,
                    "file": 1,
                    "file_content": 1,
                    "file_path": 1,
                    "file_pointer": 1,
                    "file_ptr": 1,
                    "file_status": 1,
                    "filename": 1,
                    "format_args": 1,
                    "format_specifier": 1,
                    "input_message": 1,
                    "input_string": 1,
                    "lines": 1,
                    "messages": 3,
                    "params": 1,
                    "string_array": 1,
                    "strings": 10,
                    "strings_to_print": 1,
                    "text_array": 1,
                    "texts": 1
                },
                "param_3": {
                    "check1": 2,
                    "check_1": 1,
                    "check_condition1": 2,
                    "check_param_1": 1,
                    "condition_1": 1,
                    "flag1": 7,
                    "format_option1": 1,
                    "has_file_info": 1,
                    "is_condition1": 4,
                    "is_condition1_true": 1,
                    "is_condition_1_true": 1,
                    "is_condition_met": 2,
                    "is_data_valid": 2,
                    "is_enabled": 1,
                    "is_file_open": 1,
                    "is_flag1": 1,
                    "is_true": 1,
                    "use_additional_param": 1
                },
                "param_4": {
                    "check2": 2,
                    "check_2": 1,
                    "check_condition2": 2,
                    "check_param_2": 1,
                    "condition_2": 1,
                    "flag2": 7,
                    "format_option2": 1,
                    "has_data_info": 1,
                    "is_condition2": 4,
                    "is_condition2_true": 1,
                    "is_condition_2_true": 1,
                    "is_data_available": 3,
                    "is_data_valid": 1,
                    "is_false": 1,
                    "is_flag2": 1,
                    "is_flag_set": 1,
                    "is_valid": 1,
                    "use_special_param": 1
                }
            },
            "called": [
                "FUN_001079c0"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid print_output_message_00107890(undefined8 file)\n\n{\n  FUN_001079c0(file_handle,file,DAT_0010d60c != 0,_DAT_0010d5fc != 0);\n  return;\n}\n\n",
            "current_name": "print_output_message_00107890",
            "entrypoint": "0x00107890",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107890": "print_output_message_00107890",
                "_stdout": "file_handle",
                "param_1": "file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001078c0": {
            "additional_data": {
                "FUN_001078c0": {
                    "print_error": 1,
                    "print_error_message": 28,
                    "print_error_string": 1,
                    "print_formatted_message_to_standard_error": 1
                },
                "__arg": {
                    "arg_list": 1,
                    "args": 4,
                    "argument_list": 3,
                    "arguments": 3,
                    "variadic_arguments": 1
                },
                "__c": {
                    "character": 12
                },
                "__format": {
                    "format": 2,
                    "format_specifier": 1,
                    "format_string": 9
                },
                "__gnuc_va_list": {
                    "variable_argument_list": 1,
                    "variable_arguments": 1,
                    "variadic_arguments": 1
                },
                "__s": {
                    "file": 1,
                    "output": 1,
                    "output_file": 2,
                    "output_stream": 3,
                    "stream": 4
                },
                "__stream": {
                    "file": 1,
                    "file_stream": 1,
                    "output": 1,
                    "output_file": 2,
                    "output_stream": 5,
                    "stream": 1
                },
                "_stderr": {
                    "error_stream": 1,
                    "standard_error": 4
                },
                "_stdout": {
                    "standard_output": 4
                },
                "fflush": {
                    "flush_file": 4,
                    "flush_file_buffer": 1,
                    "flush_output": 7,
                    "flush_stream": 5
                },
                "fprintf": {
                    "format_print": 1,
                    "format_to_file": 1,
                    "formatted_print": 2,
                    "print_formatted": 2,
                    "print_formatted_line_to_stream": 1,
                    "print_formatted_string": 1,
                    "print_output": 1,
                    "print_to_file": 5,
                    "print_to_stderr": 1,
                    "write_formatted_output_to_stream": 1,
                    "write_formatted_text_to_file": 1
                },
                "param_1": {
                    "error_message": 16,
                    "error_string": 1,
                    "format_string": 3,
                    "message": 10
                },
                "param_2": {
                    "arg_list": 2,
                    "args": 11,
                    "argument_list": 1,
                    "arguments": 11,
                    "format_args": 1,
                    "format_parameters": 1,
                    "variadic_arguments": 1
                },
                "putc": {
                    "put_character": 4,
                    "write_char_to_file": 2,
                    "write_character": 4,
                    "write_character_to_file": 4,
                    "write_character_to_stderr": 1,
                    "write_character_to_stream": 2
                },
                "vfprintf": {
                    "format_print_to_file": 1,
                    "format_to_file_with_args": 1,
                    "formatted_variable_print": 1,
                    "print_custom_to_stderr": 1,
                    "print_formatted_output": 1,
                    "print_formatted_string_with_args": 1,
                    "print_formatted_varargs": 1,
                    "print_formatted_with_args": 1,
                    "print_to_file_with_args": 2,
                    "print_to_file_with_arguments": 1,
                    "print_to_log_file": 1,
                    "var_format_print": 1,
                    "variadic_formatted_print": 1,
                    "write_formatted_output_to_stream_with_variable_arguments": 1,
                    "write_formatted_text_to_variable_arguments": 1
                }
            },
            "called": [
                "fprintf",
                "vfprintf",
                "putc",
                "fflush"
            ],
            "calling": [
                "FUN_00107690",
                "FUN_00107920"
            ],
            "code": "\n\n\nvoid print_formatted_message_to_standard_error_001078c0(char *error_message,variable_argument_list args)\n\n{\n  fflush(standard_output);\n  fprintf(standard_error,\"%s: \",DAT_0010d660);\n  vfprintf(standard_error,error_message,args);\n  putc(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_formatted_message_to_standard_error_001078c0",
            "entrypoint": "0x001078c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001078c0": "print_formatted_message_to_standard_error_001078c0",
                "__gnuc_va_list": "variable_argument_list",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "fflush": "flush_output",
                "fprintf": "print_to_file",
                "param_1": "error_message",
                "param_2": "args",
                "putc": "write_character_to_file",
                "vfprintf": "print_to_file_with_args"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107920": {
            "additional_data": {
                "FUN_001078c0": {
                    "apply_settings": 1,
                    "copy_arguments": 2,
                    "copy_data": 1,
                    "format_data": 2,
                    "process_data": 2,
                    "process_data_helper": 2,
                    "process_helper_function": 1,
                    "process_sub_function": 1
                },
                "FUN_00107920": {
                    "extract_and_process_data": 2,
                    "extract_data": 1,
                    "initialize_function": 5,
                    "load_data": 1,
                    "process_data": 10,
                    "process_function": 2,
                    "process_input_data": 1,
                    "update_settings": 1
                },
                "in_AL": {
                    "condition": 1,
                    "condition_flag": 1,
                    "conditional_flag": 1,
                    "flag": 17,
                    "flag_check": 1,
                    "input_flag": 1,
                    "input_value": 1
                },
                "local_18": {
                    "arg8_copy": 1,
                    "arg8_new": 1,
                    "conditional_data8": 1,
                    "copy_8": 1,
                    "count_copy": 1,
                    "data8_copy": 1,
                    "extract_8": 1,
                    "input8_copy": 2,
                    "input_8": 1,
                    "input_8_copy": 4,
                    "input_param_8_copy": 1,
                    "local_8": 1,
                    "local_argument8": 1,
                    "local_input8": 1,
                    "local_setting_8": 1,
                    "local_variable16": 1,
                    "local_variable_15": 1,
                    "new_param8": 1,
                    "new_param_8": 1,
                    "param8": 1,
                    "temp13": 1,
                    "temp_data_13": 1,
                    "temp_local8": 1,
                    "var_13": 1
                },
                "local_28": {
                    "arg7_copy": 1,
                    "arg7_new": 1,
                    "conditional_data7": 1,
                    "copy_7": 1,
                    "data7_copy": 1,
                    "extract_7": 1,
                    "index_copy": 1,
                    "input7_copy": 2,
                    "input_7": 1,
                    "input_7_copy": 4,
                    "input_param_7_copy": 1,
                    "local_7": 1,
                    "local_argument7": 1,
                    "local_input7": 1,
                    "local_setting_7": 1,
                    "local_variable15": 1,
                    "local_variable_14": 1,
                    "new_param7": 1,
                    "new_param_7": 1,
                    "param7": 1,
                    "temp12": 1,
                    "temp_data_12": 1,
                    "temp_local7": 1,
                    "var_12": 1
                },
                "local_38": {
                    "arg6_copy": 1,
                    "arg6_new": 1,
                    "conditional_data6": 1,
                    "copy_6": 1,
                    "data6_copy": 1,
                    "extract_6": 1,
                    "input6_copy": 2,
                    "input_6": 1,
                    "input_6_copy": 4,
                    "input_param_6_copy": 1,
                    "length_copy": 1,
                    "local_6": 1,
                    "local_argument6": 1,
                    "local_input6": 1,
                    "local_setting_6": 1,
                    "local_variable14": 1,
                    "local_variable_13": 1,
                    "new_param6": 1,
                    "new_param_6": 1,
                    "param6": 1,
                    "temp11": 1,
                    "temp_data_11": 1,
                    "temp_local6": 1,
                    "var_11": 1
                },
                "local_48": {
                    "arg5_copy": 1,
                    "arg5_new": 1,
                    "conditional_data5": 1,
                    "copy_5": 1,
                    "data5_copy": 1,
                    "extract_5": 1,
                    "input5_copy": 2,
                    "input_5": 1,
                    "input_5_copy": 4,
                    "input_param_5_copy": 1,
                    "local_5": 1,
                    "local_argument5": 1,
                    "local_input5": 1,
                    "local_setting_5": 1,
                    "local_variable13": 1,
                    "local_variable_12": 1,
                    "new_param5": 1,
                    "new_param_5": 1,
                    "offset_copy": 1,
                    "param5": 1,
                    "temp10": 1,
                    "temp_data_10": 1,
                    "temp_local5": 1,
                    "var_10": 1
                },
                "local_58": {
                    "arg4_copy": 1,
                    "arg4_new": 1,
                    "conditional_data4": 1,
                    "copy_4": 1,
                    "data4_copy": 1,
                    "extract_4": 1,
                    "input4_copy": 2,
                    "input_4": 1,
                    "input_4_copy": 4,
                    "input_param_4_copy": 1,
                    "local_4": 1,
                    "local_argument4": 1,
                    "local_input4": 1,
                    "local_setting_4": 1,
                    "local_variable12": 1,
                    "local_variable_11": 1,
                    "new_param4": 1,
                    "new_param_4": 1,
                    "param4": 1,
                    "temp9": 1,
                    "temp_data_9": 1,
                    "temp_local4": 1,
                    "value_copy": 1,
                    "var_9": 1
                },
                "local_68": {
                    "arg3_copy": 1,
                    "arg3_new": 1,
                    "conditional_data3": 1,
                    "copy_3": 1,
                    "data3_copy": 1,
                    "extract_3": 1,
                    "input3_copy": 2,
                    "input_3": 1,
                    "input_3_copy": 4,
                    "input_param_3_copy": 1,
                    "local_3": 1,
                    "local_argument3": 1,
                    "local_input3": 1,
                    "local_setting_3": 1,
                    "local_variable11": 1,
                    "local_variable_10": 1,
                    "new_param3": 1,
                    "new_param_3": 1,
                    "param3": 1,
                    "size_copy": 1,
                    "temp8": 1,
                    "temp_data_8": 1,
                    "temp_local3": 1,
                    "var_8": 1
                },
                "local_78": {
                    "arg2_copy": 1,
                    "arg2_new": 1,
                    "conditional_data2": 1,
                    "copy_2": 1,
                    "data2_copy": 1,
                    "extract_2": 1,
                    "identifier_copy": 1,
                    "input2_copy": 2,
                    "input_2": 1,
                    "input_2_copy": 4,
                    "input_param_2_copy": 1,
                    "local_2": 1,
                    "local_argument2": 1,
                    "local_input2": 1,
                    "local_setting_2": 1,
                    "local_variable10": 1,
                    "local_variable_9": 1,
                    "new_param2": 1,
                    "new_param_2": 1,
                    "param2": 1,
                    "temp7": 1,
                    "temp_data_7": 1,
                    "temp_local2": 1,
                    "var_7": 1
                },
                "local_88": {
                    "arg1_copy": 1,
                    "arg1_new": 1,
                    "conditional_data1": 1,
                    "copy_1": 1,
                    "data1_copy": 1,
                    "extract_1": 1,
                    "flag_copy": 1,
                    "input1_copy": 2,
                    "input_1": 1,
                    "input_1_copy": 4,
                    "input_param_1_copy": 1,
                    "local_1": 1,
                    "local_argument1": 1,
                    "local_input1": 1,
                    "local_setting_1": 1,
                    "local_variable9": 1,
                    "local_variable_8": 1,
                    "new_param1": 1,
                    "new_param_1": 1,
                    "param1": 1,
                    "temp6": 1,
                    "temp_data_6": 1,
                    "temp_local1": 1,
                    "var_6": 1
                },
                "local_90": {
                    "arg5_copy": 1,
                    "argument_5": 1,
                    "copy_5": 1,
                    "data5": 1,
                    "data6_copy": 1,
                    "input_14_copy": 1,
                    "local_arg6": 1,
                    "local_param14": 1,
                    "local_variable8": 1,
                    "local_variable_7": 1,
                    "param14": 1,
                    "param14_copy": 2,
                    "param6_copy": 4,
                    "param_14_copy": 6,
                    "param_e_ptr": 1,
                    "pointer6": 1,
                    "ptr_6": 1,
                    "temp5": 1,
                    "temp_data_5": 1,
                    "value14": 1,
                    "var_5": 1
                },
                "local_98": {
                    "arg4_copy": 1,
                    "argument_4": 1,
                    "copy_4": 1,
                    "data4": 1,
                    "data5_copy": 1,
                    "input_13_copy": 1,
                    "local_arg5": 1,
                    "local_param13": 1,
                    "local_variable7": 1,
                    "local_variable_6": 1,
                    "param13": 1,
                    "param13_copy": 2,
                    "param5_copy": 4,
                    "param_13_copy": 6,
                    "param_d_ptr": 1,
                    "pointer5": 1,
                    "ptr_5": 1,
                    "temp4": 1,
                    "temp_data_4": 1,
                    "value13": 1,
                    "var_4": 1
                },
                "local_a0": {
                    "arg3_copy": 1,
                    "argument_3": 1,
                    "copy_3": 1,
                    "data3": 1,
                    "data4_copy": 1,
                    "input_12_copy": 1,
                    "local_arg4": 1,
                    "local_param12": 1,
                    "local_variable6": 1,
                    "local_variable_5": 1,
                    "param12": 1,
                    "param12_copy": 2,
                    "param4_copy": 4,
                    "param_12_copy": 6,
                    "param_c_ptr": 1,
                    "pointer4": 1,
                    "ptr_4": 1,
                    "temp3": 1,
                    "temp_data_3": 1,
                    "value12": 1,
                    "var_3": 1
                },
                "local_a8": {
                    "arg2_copy": 1,
                    "argument_2": 1,
                    "copy_2": 1,
                    "data2": 1,
                    "data3_copy": 1,
                    "input_11_copy": 1,
                    "local_arg3": 1,
                    "local_param11": 1,
                    "local_variable5": 1,
                    "local_variable_4": 1,
                    "param11": 1,
                    "param11_copy": 2,
                    "param3_copy": 4,
                    "param_11_copy": 6,
                    "param_b_ptr": 1,
                    "pointer3": 1,
                    "ptr_3": 1,
                    "temp2": 1,
                    "temp_data_2": 1,
                    "value11": 1,
                    "var_2": 1
                },
                "local_b0": {
                    "arg1_copy": 1,
                    "argument_1": 1,
                    "copy_1": 1,
                    "data1": 1,
                    "data2_copy": 1,
                    "input_10_copy": 1,
                    "local_arg2": 1,
                    "local_param10": 1,
                    "local_variable4": 1,
                    "local_variable_3": 1,
                    "param10": 1,
                    "param10_copy": 2,
                    "param2_copy": 4,
                    "param_10_copy": 6,
                    "param_a_ptr": 1,
                    "pointer2": 1,
                    "ptr_2": 1,
                    "temp1": 1,
                    "temp_data_1": 1,
                    "value10": 1,
                    "var_1": 1
                },
                "local_b8": {
                    "array": 1,
                    "buffer": 3,
                    "local_array": 2,
                    "local_buffer": 5,
                    "local_variable": 2,
                    "new_buffer": 1,
                    "reserved_buffer": 1,
                    "stack_variable1": 1,
                    "temp_buffer": 6,
                    "temporary_buffer": 4,
                    "unused_buffer": 2
                },
                "local_c8": {
                    "buffer": 2,
                    "destination_pointer": 1,
                    "local_array": 1,
                    "local_array2": 1,
                    "local_array_2": 1,
                    "local_buff": 1,
                    "local_buffer": 17,
                    "local_buffer_pointer": 1,
                    "local_variable3": 1,
                    "pointer2": 2,
                    "ptr_to_local_array": 1,
                    "stack_ptr2": 1,
                    "temp": 1
                },
                "local_d0": {
                    "buffer": 9,
                    "buffer_pointer": 2,
                    "buffer_ptr": 1,
                    "local_array": 1,
                    "local_array_1": 1,
                    "local_array_ptr": 1,
                    "local_variable2": 1,
                    "pointer1": 2,
                    "ptr_to_array": 1,
                    "source_pointer": 1,
                    "stack_pointer": 3,
                    "stack_ptr": 4,
                    "stack_ptr1": 1,
                    "temp_ptr": 1
                },
                "local_d4": {
                    "buffer_size": 1,
                    "constant_value": 2,
                    "copy_size": 3,
                    "count": 1,
                    "length": 4,
                    "local_buffer_size": 1,
                    "local_var1": 1,
                    "local_variable1": 1,
                    "local_variable_2": 1,
                    "offset": 1,
                    "size2": 1,
                    "value": 2
                },
                "local_d8": {
                    "array_size": 1,
                    "buff_len": 1,
                    "buffer_size": 11,
                    "local_variable_1": 1,
                    "size": 14,
                    "size1": 1,
                    "stack_size": 1
                },
                "param_1": {
                    "arg1": 1,
                    "argument1": 1,
                    "data1": 2,
                    "data_1": 1,
                    "flag": 2,
                    "initial_value1": 1,
                    "input1": 5,
                    "input_1": 9,
                    "input_flag": 1,
                    "input_param": 1,
                    "input_param1": 1,
                    "input_param_1": 2,
                    "is_condition_true": 1,
                    "param1": 2,
                    "setting_1": 1
                },
                "param_10": {
                    "arg1": 1,
                    "arg2": 1,
                    "argument10": 1,
                    "data2": 2,
                    "data_2": 2,
                    "data_pointer2": 1,
                    "input_10": 1,
                    "output_data_1": 1,
                    "param10": 4,
                    "param2": 4,
                    "param_10": 7,
                    "param_2": 1,
                    "param_a": 1,
                    "param_ptr_1": 1,
                    "pointer2": 1,
                    "pointer_2": 1
                },
                "param_11": {
                    "arg2": 1,
                    "arg3": 1,
                    "argument11": 1,
                    "data3": 2,
                    "data_3": 2,
                    "data_pointer3": 1,
                    "input_11": 1,
                    "output_data_2": 1,
                    "param11": 4,
                    "param3": 4,
                    "param_11": 7,
                    "param_3": 1,
                    "param_b": 1,
                    "param_ptr_2": 1,
                    "pointer3": 1,
                    "pointer_3": 1
                },
                "param_12": {
                    "arg3": 1,
                    "arg4": 1,
                    "argument12": 1,
                    "data4": 2,
                    "data_4": 2,
                    "data_pointer4": 1,
                    "input_12": 1,
                    "output_data_3": 1,
                    "param12": 4,
                    "param4": 4,
                    "param_12": 7,
                    "param_4": 1,
                    "param_c": 1,
                    "param_ptr_3": 1,
                    "pointer4": 1,
                    "pointer_4": 1
                },
                "param_13": {
                    "arg4": 1,
                    "arg5": 1,
                    "argument13": 1,
                    "data5": 2,
                    "data_5": 2,
                    "data_pointer5": 1,
                    "input_13": 1,
                    "output_data_4": 1,
                    "param13": 4,
                    "param5": 4,
                    "param_13": 7,
                    "param_5": 1,
                    "param_d": 1,
                    "param_ptr_4": 1,
                    "pointer5": 1,
                    "pointer_5": 1
                },
                "param_14": {
                    "arg5": 1,
                    "arg6": 1,
                    "argument14": 1,
                    "data6": 2,
                    "data_6": 2,
                    "data_pointer6": 1,
                    "input_14": 1,
                    "output_data_5": 1,
                    "param14": 4,
                    "param6": 4,
                    "param_14": 7,
                    "param_6": 1,
                    "param_e": 1,
                    "param_ptr_5": 1,
                    "pointer6": 1,
                    "pointer_6": 1
                },
                "param_2": {
                    "arg1": 1,
                    "arg2": 1,
                    "argument2": 1,
                    "data2": 2,
                    "data_2": 1,
                    "flag_param": 1,
                    "identifier": 1,
                    "initial_value2": 1,
                    "input2": 5,
                    "input_2": 9,
                    "input_param2": 2,
                    "input_param_2": 2,
                    "param2": 2,
                    "setting_2": 1,
                    "value1": 1
                },
                "param_3": {
                    "arg2": 1,
                    "arg3": 1,
                    "argument3": 1,
                    "data3": 2,
                    "data_3": 1,
                    "data_param": 1,
                    "initial_value3": 1,
                    "input3": 5,
                    "input_3": 9,
                    "input_param3": 2,
                    "input_param_3": 2,
                    "param3": 2,
                    "setting_3": 1,
                    "size": 1,
                    "value2": 1
                },
                "param_4": {
                    "arg3": 1,
                    "arg4": 1,
                    "argument4": 1,
                    "config_param": 1,
                    "data4": 2,
                    "data_4": 1,
                    "initial_value4": 1,
                    "input4": 5,
                    "input_4": 9,
                    "input_param4": 2,
                    "input_param_4": 2,
                    "param4": 2,
                    "setting_4": 1,
                    "value": 1,
                    "value3": 1
                },
                "param_5": {
                    "arg4": 1,
                    "arg5": 1,
                    "argument5": 1,
                    "data5": 2,
                    "data_5": 1,
                    "initial_value5": 1,
                    "input5": 5,
                    "input_5": 9,
                    "input_param5": 2,
                    "input_param_5": 2,
                    "offset": 1,
                    "param5": 2,
                    "setting_5": 1,
                    "setting_param": 1,
                    "value4": 1
                },
                "param_6": {
                    "arg5": 1,
                    "arg6": 1,
                    "argument6": 1,
                    "data6": 2,
                    "data_6": 1,
                    "initial_value6": 1,
                    "input6": 5,
                    "input_6": 9,
                    "input_param6": 2,
                    "input_param_6": 2,
                    "length": 1,
                    "option_param": 1,
                    "param6": 2,
                    "setting_6": 1,
                    "value5": 1
                },
                "param_7": {
                    "arg6": 1,
                    "arg7": 1,
                    "argument7": 1,
                    "data7": 2,
                    "data_7": 1,
                    "index": 1,
                    "initial_value7": 1,
                    "input7": 5,
                    "input_7": 9,
                    "input_param7": 2,
                    "input_param_7": 2,
                    "param7": 2,
                    "setting_7": 1,
                    "value6": 1,
                    "value_param": 1
                },
                "param_8": {
                    "arg7": 1,
                    "arg8": 1,
                    "argument8": 1,
                    "count": 1,
                    "data8": 2,
                    "data_8": 1,
                    "initial_value8": 1,
                    "input8": 5,
                    "input_8": 9,
                    "input_param8": 2,
                    "input_param_8": 2,
                    "param8": 2,
                    "param_param": 1,
                    "setting_8": 1,
                    "value7": 1
                },
                "param_9": {
                    "arg1": 1,
                    "argument9": 1,
                    "data1": 2,
                    "data9": 1,
                    "data_1": 2,
                    "data_pointer": 1,
                    "data_pointer1": 1,
                    "data_ptr": 2,
                    "input_9": 1,
                    "input_data": 1,
                    "input_ptr": 1,
                    "param1": 4,
                    "param9": 3,
                    "param_1": 1,
                    "param_9": 5,
                    "pointer1": 1,
                    "pointer_1": 1
                }
            },
            "called": [
                "FUN_001078c0"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00105db0",
                "FUN_00102e6f",
                "FUN_001052a0",
                "FUN_001025a0",
                "FUN_00102f1e",
                "FUN_00102fd7"
            ],
            "code": "\nvoid extract_and_process_data_00107920(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4,\n                 undefined4 input_5,undefined4 input_6,undefined4 input_7,undefined4 input_8,\n                 undefined8 param_9,undefined8 input_10,undefined8 input_11,undefined8 input_12,\n                 undefined8 input_13,undefined8 input_14)\n\n{\n  char flag;\n  undefined4 size;\n  undefined4 length;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined temp_buffer [8];\n  undefined8 param_10_copy;\n  undefined8 param_11_copy;\n  undefined8 param_12_copy;\n  undefined8 param_13_copy;\n  undefined8 param_14_copy;\n  undefined4 input_1_copy;\n  undefined4 input_2_copy;\n  undefined4 input_3_copy;\n  undefined4 input_4_copy;\n  undefined4 input_5_copy;\n  undefined4 input_6_copy;\n  undefined4 input_7_copy;\n  undefined4 input_8_copy;\n  \n  if (flag != '\\0') {\n    input_1_copy = input_1;\n    input_2_copy = input_2;\n    input_3_copy = input_3;\n    input_4_copy = input_4;\n    input_5_copy = input_5;\n    input_6_copy = input_6;\n    input_7_copy = input_7;\n    input_8_copy = input_8;\n  }\n  buffer = &stack0x00000008;\n  size = 8;\n  local_buffer = temp_buffer;\n  length = 0x30;\n  param_10_copy = input_10;\n  param_11_copy = input_11;\n  param_12_copy = input_12;\n  param_13_copy = input_13;\n  param_14_copy = input_14;\n  FUN_001078c0(param_9,&size);\n  return;\n}\n\n",
            "current_name": "extract_and_process_data_00107920",
            "entrypoint": "0x00107920",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107920": "extract_and_process_data_00107920",
                "in_AL": "flag",
                "local_18": "input_8_copy",
                "local_28": "input_7_copy",
                "local_38": "input_6_copy",
                "local_48": "input_5_copy",
                "local_58": "input_4_copy",
                "local_68": "input_3_copy",
                "local_78": "input_2_copy",
                "local_88": "input_1_copy",
                "local_90": "param_14_copy",
                "local_98": "param_13_copy",
                "local_a0": "param_12_copy",
                "local_a8": "param_11_copy",
                "local_b0": "param_10_copy",
                "local_b8": "temp_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "length",
                "local_d8": "size",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "param_5": "input_5",
                "param_6": "input_6",
                "param_7": "input_7",
                "param_8": "input_8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001079c0": {
            "additional_data": {
                "DAT_00102d8c": {
                    "helper_function": 1
                },
                "FILE": {
                    "file": 1
                },
                "FUN_001079c0": {
                    "print_file_details": 5,
                    "print_file_info": 22,
                    "print_file_information": 2,
                    "print_file_metadata": 1,
                    "write_file_details": 1
                },
                "cStack_ea": {
                    "execute_other": 1,
                    "execute_permission": 1,
                    "execute_permission3": 1,
                    "file_permission": 1,
                    "format_char10": 1,
                    "group_execute": 1,
                    "has_execute_permission_others": 1,
                    "is_executable_by_others": 1,
                    "is_group_execute": 1,
                    "is_other_executable": 1,
                    "is_others_exec": 1,
                    "other_exec_permission": 1,
                    "other_execute": 5,
                    "other_execute_permission": 1,
                    "others_exec": 2,
                    "others_execute": 1,
                    "others_execute_permission": 1,
                    "permission_char10": 1,
                    "permission_symbol9": 1,
                    "permissions_char9": 1,
                    "setgid_permission": 1,
                    "t_or_t": 1
                },
                "cStack_eb": {
                    "file_permission": 1,
                    "format_char9": 1,
                    "group_exec_permission": 1,
                    "group_execute": 1,
                    "group_write": 1,
                    "has_write_permission_others": 1,
                    "is_group_write": 1,
                    "is_other_writable": 1,
                    "is_others_write": 1,
                    "is_writable_by_others": 1,
                    "other_execute_write": 1,
                    "other_write": 4,
                    "other_write_permission": 1,
                    "others_write": 3,
                    "others_write_permission": 1,
                    "permission_char9": 1,
                    "permission_symbol8": 1,
                    "permissions_char8": 1,
                    "setuid_permission": 1,
                    "write_other": 1,
                    "write_permission": 1,
                    "write_permission3": 1
                },
                "cStack_ec": {
                    "file_permission": 1,
                    "format_char8": 1,
                    "group_read": 1,
                    "has_read_permission_others": 1,
                    "is_group_read": 1,
                    "is_other_readable": 1,
                    "is_others_read": 1,
                    "is_readable_by_others": 1,
                    "other_read": 4,
                    "other_read_permission": 1,
                    "other_read_write": 1,
                    "others_read": 3,
                    "others_read_permission": 2,
                    "owner_execute": 1,
                    "permission_char8": 1,
                    "permission_symbol7": 1,
                    "permissions_char7": 1,
                    "read_other": 1,
                    "read_permission": 1,
                    "read_permission3": 1,
                    "user_sticky_permission": 1
                },
                "cStack_ed": {
                    "execute_group": 1,
                    "execute_permission": 1,
                    "execute_permission2": 1,
                    "file_permission": 1,
                    "format_char7": 1,
                    "group_exec": 2,
                    "group_execute": 6,
                    "group_execute_permission": 2,
                    "has_execute_permission_group": 1,
                    "is_executable_by_group": 1,
                    "is_group_exec": 1,
                    "is_group_executable": 1,
                    "is_user_execute": 1,
                    "other_sticky_permission": 1,
                    "others_permission": 1,
                    "owner_execute": 1,
                    "permission_char7": 1,
                    "permission_symbol6": 1,
                    "permissions_char6": 1,
                    "s_or_s": 1
                },
                "cStack_ee": {
                    "file_permission": 1,
                    "format_char6": 1,
                    "group_execute_write": 1,
                    "group_read_permission": 1,
                    "group_setgid_permission": 1,
                    "group_write": 8,
                    "group_write_permission": 2,
                    "has_write_permission_group": 1,
                    "is_group_writable": 1,
                    "is_group_write": 1,
                    "is_user_write": 1,
                    "is_writable_by_group": 1,
                    "owner_write": 1,
                    "permission_char6": 1,
                    "permission_symbol5": 1,
                    "permissions_char5": 1,
                    "write_group": 1,
                    "write_permission": 1,
                    "write_permission2": 1
                },
                "cStack_ef": {
                    "file_permission": 1,
                    "format_char5": 1,
                    "group_permission": 1,
                    "group_read": 7,
                    "group_read_permission": 2,
                    "group_read_write": 1,
                    "has_read_permission_group": 1,
                    "is_group_read": 1,
                    "is_group_readable": 1,
                    "is_readable_by_group": 1,
                    "is_user_read": 1,
                    "owner_read": 1,
                    "owner_write": 1,
                    "permission_char5": 1,
                    "permission_symbol4": 1,
                    "permissions_char4": 1,
                    "read_group": 1,
                    "read_permission": 1,
                    "read_permission2": 1,
                    "user_setgid_permission": 1
                },
                "cStack_f0": {
                    "execute_char": 1,
                    "execute_permission": 2,
                    "file_permission": 1,
                    "format_char4": 1,
                    "has_execute_permission": 1,
                    "is_executable": 1,
                    "is_sticky": 1,
                    "is_user_exec": 1,
                    "is_user_executable": 1,
                    "other_permission": 1,
                    "owner_execute": 3,
                    "owner_write_permission": 1,
                    "permission_char4": 1,
                    "permission_symbol3": 1,
                    "permissions_char3": 1,
                    "s_or_s": 1,
                    "sticky_bit": 1,
                    "user_exec": 2,
                    "user_execute": 3,
                    "user_execute_permission": 2
                },
                "cStack_f1": {
                    "file_permission": 1,
                    "format_char3": 1,
                    "group_permission": 1,
                    "group_read": 1,
                    "has_write_permission": 1,
                    "is_setgid": 1,
                    "is_user_writable": 1,
                    "is_user_write": 1,
                    "is_writable": 1,
                    "owner_execute_write": 1,
                    "owner_read_permission": 1,
                    "owner_write": 2,
                    "permission_char3": 1,
                    "permission_symbol2": 1,
                    "permissions_char2": 1,
                    "setgid_bit": 1,
                    "user_write": 5,
                    "user_write_permission": 2,
                    "write_char": 1,
                    "write_permission": 2
                },
                "cStack_f2": {
                    "directory_permission": 1,
                    "file_permission": 1,
                    "format_char2": 1,
                    "has_read_permission": 1,
                    "is_readable": 1,
                    "is_setuid": 1,
                    "is_user_read": 1,
                    "is_user_readable": 1,
                    "owner_read": 3,
                    "owner_read_write": 1,
                    "permission_char2": 1,
                    "permission_symbol1": 1,
                    "permissions_char1": 1,
                    "read_char": 1,
                    "read_permission": 2,
                    "setid_bit": 1,
                    "user_permission": 1,
                    "user_read": 5,
                    "user_read_permission": 2
                },
                "ctime": {
                    "get_current_time": 1
                },
                "currentTime": {
                    "local_100": 1
                },
                "file": {
                    "param_1": 1
                },
                "fileInfo": {
                    "param_2": 1
                },
                "fileInfoPtr": {
                    "ppc_var2": 1
                },
                "filePermissions": {
                    "u_var4": 1
                },
                "fileSize": {
                    "u_stack_a0": 1
                },
                "fileType": {
                    "u_stack_f3": 1
                },
                "formattedTime": {
                    "local_e8": 1
                },
                "groupExecute": {
                    "c_stack_ed": 1
                },
                "groupRead": {
                    "c_stack_ef": 1
                },
                "groupWrite": {
                    "c_stack_ee": 1
                },
                "iVar1": {
                    "result": 18,
                    "return_value": 7,
                    "status": 3
                },
                "inodeNumber": {
                    "u_stack_88": 1
                },
                "local_100": {
                    "current_date_time": 1,
                    "current_time": 27,
                    "current_time_stamp": 1,
                    "current_timestamp": 1,
                    "file_time": 1
                },
                "local_60": {
                    "creation_time": 1,
                    "current_epoch_time": 1,
                    "current_time": 4,
                    "current_time2": 3,
                    "current_time_copy": 1,
                    "currenttime": 1,
                    "file_creation_time": 1,
                    "file_modification_time": 2,
                    "file_modified_time": 2,
                    "file_time": 3,
                    "last_accessed": 1,
                    "mod_time": 2,
                    "modified_time": 1,
                    "start_time": 1,
                    "temp_local60": 1,
                    "time_result": 1,
                    "timestamp": 1,
                    "timestamp_copy": 1
                },
                "local_b8": {
                    "buffer": 3,
                    "file_status": 1,
                    "local_buffer": 2,
                    "undefined_array": 1
                },
                "local_e8": {
                    "date_string": 1,
                    "file_info_str": 1,
                    "formatted_time": 20,
                    "formatted_time_string": 2,
                    "time_buffer": 1,
                    "time_display": 1,
                    "time_format": 3,
                    "time_formatted": 1,
                    "time_string": 1
                },
                "majorDevice": {
                    "u_stack_98": 1
                },
                "minorDevice": {
                    "u_stack_9c": 1
                },
                "otherExecute": {
                    "c_stack_ea": 1
                },
                "otherRead": {
                    "c_stack_ec": 1
                },
                "otherWrite": {
                    "c_stack_eb": 1
                },
                "ownerExecute": {
                    "c_stack_f0": 1
                },
                "ownerRead": {
                    "c_stack_f2": 1
                },
                "ownerWrite": {
                    "c_stack_f1": 1
                },
                "param_1": {
                    "file": 16,
                    "file_pointer": 4,
                    "file_ptr": 2,
                    "file_stream": 2,
                    "output_file": 6,
                    "output_file_pointer": 1
                },
                "param_2": {
                    "args": 1,
                    "arguments": 1,
                    "file_data": 3,
                    "file_details": 1,
                    "file_info": 21,
                    "file_metadata": 1,
                    "info": 2,
                    "output_file_content": 1
                },
                "param_3": {
                    "append_time": 1,
                    "corrupt_time_data": 1,
                    "formatted_print": 1,
                    "has_metadata": 1,
                    "has_permissions": 1,
                    "include_time": 1,
                    "is_readable": 1,
                    "is_valid": 1,
                    "is_verbose": 3,
                    "print_date_time": 1,
                    "print_details": 1,
                    "print_file_details": 1,
                    "print_flag": 1,
                    "print_header": 4,
                    "print_time": 10,
                    "use_local_time": 1,
                    "use_time": 1
                },
                "param_4": {
                    "has_hex_value": 1,
                    "hex_flag": 1,
                    "hex_print": 1,
                    "include_address": 2,
                    "is_hex": 1,
                    "print_address": 15,
                    "print_hex": 4,
                    "print_hex_address": 1,
                    "print_hex_addresses": 1,
                    "print_pointer": 1,
                    "should_print_address": 1,
                    "show_address": 2
                },
                "pcVar3": {
                    "current_time": 1,
                    "formatted_time": 1,
                    "time_data": 5,
                    "time_info": 1,
                    "time_str": 5,
                    "time_string": 17
                },
                "ppcVar2": {
                    "arg_ptr": 1,
                    "arguments_ptr": 1,
                    "file": 1,
                    "file_info_ptr": 7,
                    "file_pointer": 3,
                    "file_pointer_list": 1,
                    "file_ptr": 5,
                    "func_ptr": 2,
                    "function_pointer": 2,
                    "info_ptr": 1,
                    "ppc_info": 1,
                    "ptr_file_info": 1,
                    "second_arg_ptr": 1,
                    "temp": 1,
                    "temp_ptr": 1
                },
                "printAddress": {
                    "param_4": 1
                },
                "printTime": {
                    "param_3": 1
                },
                "result": {
                    "i_var1": 1
                },
                "sprintf": {
                    "format_string": 1
                },
                "timeString": {
                    "pc_var3": 1
                },
                "time_t": {
                    "time_type": 1
                },
                "uStack_88": {
                    "file_inode": 1,
                    "file_size": 21,
                    "inode": 1,
                    "inode_num": 1,
                    "inode_number": 2,
                    "last_modified": 1,
                    "modification_time": 1,
                    "param88": 1,
                    "size": 1,
                    "timestamp": 1
                },
                "uStack_98": {
                    "decimal_group_id": 1,
                    "dev_minor": 1,
                    "file_gid": 2,
                    "file_links": 1,
                    "file_minor": 1,
                    "file_owner": 1,
                    "file_owner_group": 1,
                    "file_size": 2,
                    "file_size_low": 1,
                    "gid": 1,
                    "group_id": 4,
                    "group_identifier": 1,
                    "inode_number2": 1,
                    "major_device": 2,
                    "min_dev_num": 1,
                    "minor_device": 1,
                    "minor_device_num": 2,
                    "minor_device_number": 1,
                    "owner_group_id": 1,
                    "param98": 1,
                    "size_low": 1,
                    "st_size": 1,
                    "user_id": 2
                },
                "uStack_9c": {
                    "decimal_owner_id": 1,
                    "dev_major": 1,
                    "file_identifier": 1,
                    "file_links": 1,
                    "file_major": 1,
                    "file_owner_user": 1,
                    "file_permissions": 1,
                    "file_size_high": 1,
                    "file_uid": 2,
                    "inode_number1": 1,
                    "link_count": 1,
                    "maj_dev_num": 1,
                    "major_device": 1,
                    "major_device_num": 2,
                    "major_device_number": 1,
                    "minor_device": 2,
                    "num_hard_links": 1,
                    "num_links": 1,
                    "owner_user_id": 1,
                    "param9c": 1,
                    "size_high": 1,
                    "st_nlink": 1,
                    "uid": 1,
                    "user_id": 4,
                    "user_identifier": 1
                },
                "uStack_a0": {
                    "file_attributes": 1,
                    "file_info_flags": 1,
                    "file_mode": 15,
                    "file_permission": 1,
                    "file_permissions": 6,
                    "file_size": 4,
                    "file_type": 1,
                    "permission": 1,
                    "permission_flags": 1
                },
                "uStack_e9": {
                    "undefined": 2,
                    "undefined_flag": 1,
                    "undefined_var": 1,
                    "unused": 2
                },
                "uStack_f3": {
                    "file_perm_field": 1,
                    "file_permission": 5,
                    "file_permission_symbol": 1,
                    "file_symbol": 1,
                    "file_type": 6,
                    "file_type_char": 3,
                    "file_type_symbol": 1,
                    "format_char1": 1,
                    "permission": 1,
                    "permission_bit": 1,
                    "permission_char": 2,
                    "permission_char1": 1,
                    "permission_char_code": 1,
                    "type_char": 1
                },
                "uVar4": {
                    "file_perm": 1,
                    "file_permission": 1,
                    "file_permissions": 9,
                    "file_type": 16,
                    "permission_bits": 1,
                    "permissions": 1
                },
                "undefined8": {
                    "undefined_type": 1
                }
            },
            "called": [
                "ctime",
                "sprintf",
                "FUN_00102d8c"
            ],
            "calling": [
                "FUN_00103ddc",
                "FUN_00107890"
            ],
            "code": "\nvoid print_file_info_001079c0(file *file,char **file_info,char print_time,char print_address)\n\n{\n  int result;\n  char **file_info_ptr;\n  char *time_string;\n  uint file_type;\n  time_type current_time;\n  undefined file_type;\n  char user_read;\n  char user_write;\n  char user_execute;\n  char group_read;\n  char group_write;\n  char group_execute;\n  char other_read;\n  char other_write;\n  char other_execute;\n  undefined undefined;\n  char formatted_time [48];\n  undefined buffer [24];\n  uint file_mode;\n  uint user_id;\n  uint group_id;\n  undefined_type file_size;\n  time_type current_time;\n  \n  if (print_time != '\\0') {\n    file_info_ptr = (char **)file_info[0x1d];\n    if ((char **)file_info[0x1d] == (char **)0x0) {\n      file_info_ptr = file_info;\n    }\n    result = (**(code **)(file_info_ptr[1] + 0x1e8))(file_info,buffer);\n    if (result == 0) {\n      current_time = current_time;\n      time_string = ctime(&current_time);\n      if (time_string == (char *)0x0) {\n        time_string = (char *)dcgettext(0,\"<time data corrupt>\",5);\n        sprintf(formatted_time,time_string);\n      }\n      else {\n        sprintf(formatted_time,\"%.12s %.4s\",time_string + 4);\n      }\n      file_type = file_mode & 0xf000;\n      if (file_type == 0x4000) {\n        file_type = 100;\n      }\n      else if (file_type == 0xa000) {\n        file_type = 0x6c;\n      }\n      else if (file_type == 0x6000) {\n        file_type = 0x62;\n      }\n      else if (file_type == 0x2000) {\n        file_type = 99;\n      }\n      else if (file_type == 0xc000) {\n        file_type = 0x73;\n      }\n      else {\n        file_type = 0x70;\n        if (file_type != 0x1000) {\n          file_type = 0x2d;\n        }\n      }\n      user_read = (-((file_mode & 0x100) == 0) & 0xbbU) + 0x72;\n      user_write = (-((file_mode & 0x80) == 0) & 0xb6U) + 0x77;\n      user_execute = (-((file_mode & 0x40) == 0) & 0xb5U) + 0x78;\n      group_read = (-((file_mode & 0x20) == 0) & 0xbbU) + 0x72;\n      group_write = (-((file_mode & 0x10) == 0) & 0xb6U) + 0x77;\n      group_execute = (-((file_mode & 8) == 0) & 0xb5U) + 0x78;\n      other_read = (-((file_mode & 4) == 0) & 0xbbU) + 0x72;\n      other_write = (-((file_mode & 2) == 0) & 0xb6U) + 0x77;\n      other_execute = (-((file_mode & 1) == 0) & 0xb5U) + 0x78;\n      if ((file_mode & 0x800) != 0) {\n        if (user_execute == 'x') {\n          user_execute = 's';\n        }\n        else {\n          user_execute = 'S';\n        }\n      }\n      if ((file_mode & 0x400) != 0) {\n        if (group_execute == 'x') {\n          group_execute = 's';\n        }\n        else {\n          group_execute = 'S';\n        }\n      }\n      if ((file_mode & 0x200) != 0) {\n        if (other_execute == 'x') {\n          other_execute = 't';\n        }\n        else {\n          other_execute = 'T';\n        }\n      }\n      undefined = 0;\n      fprintf(file,\"%s %ld/%ld %6lu %s \",&user_read,(ulong)user_id,(ulong)group_id,file_size,\n              formatted_time,(ulong)file_mode);\n    }\n  }\n  fputs(*file_info,file);\n  if (print_address != '\\0') {\n    if ((*(byte *)((long)file_info + 0x49) & 0x10) == 0) {\n      if (file_info[0xb] != (char *)0x0) {\n        fprintf(file,\" 0x%lx\");\n      }\n    }\n    else if (file_info[0xc] != (char *)0x0) {\n      fprintf(file,\" 0x%lx\");\n    }\n  }\n  fputc(10,file);\n  return;\n}\n\n",
            "current_name": "print_file_info_001079c0",
            "entrypoint": "0x001079c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FILE": "file",
                "FUN_001079c0": "print_file_info_001079c0",
                "cStack_ea": "other_execute",
                "cStack_eb": "other_write",
                "cStack_ec": "other_read",
                "cStack_ed": "group_execute",
                "cStack_ee": "group_write",
                "cStack_ef": "group_read",
                "cStack_f0": "user_execute",
                "cStack_f1": "user_write",
                "cStack_f2": "user_read",
                "ctime": "get_current_time",
                "iVar1": "result",
                "local_100": "current_time",
                "local_60": "current_time",
                "local_b8": "buffer",
                "local_e8": "formatted_time",
                "param_1": "file",
                "param_2": "file_info",
                "param_3": "print_time",
                "param_4": "print_address",
                "pcVar3": "time_string",
                "ppcVar2": "file_info_ptr",
                "sprintf": "format_string",
                "time_t": "time_type",
                "uStack_88": "file_size",
                "uStack_98": "group_id",
                "uStack_9c": "user_id",
                "uStack_a0": "file_mode",
                "uStack_e9": "undefined",
                "uStack_f3": "file_type",
                "uVar4": "file_type",
                "undefined8": "undefined_type"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107c10": {
            "additional_data": {
                "FUN_00107c10": {
                    "cleanup_and_exit": 1,
                    "execute_and_exit": 8,
                    "execute_cleanup_and_exit": 1,
                    "execute_exit_function": 1,
                    "execute_exit_process": 1,
                    "exit_with_error": 7,
                    "initialize_and_exit": 1,
                    "initialize_program": 1,
                    "initiate_exit_process": 1,
                    "perform_clean_exit": 1,
                    "perform_cleanup": 1,
                    "perform_cleanup_and_exit": 1,
                    "perform_exit": 1,
                    "perform_exit_operation": 1,
                    "perform_operation_and_exit": 1,
                    "terminate_program": 3
                },
                "FUN_00107c20": {
                    "call_exit": 1,
                    "call_exit_function": 1,
                    "cleanup_and_exit": 1,
                    "cleanup_operation": 1,
                    "do_something": 1,
                    "execute_cleanup": 1,
                    "execute_operation": 1,
                    "exit_with_error_code": 1,
                    "exit_with_message": 1,
                    "exit_with_param": 1,
                    "handle_error": 1,
                    "handle_exit": 1,
                    "perform_action": 1,
                    "perform_cleanup": 14,
                    "perform_cleanup_operation": 1,
                    "perform_initialization": 2,
                    "perform_task": 1
                },
                "param_1": {
                    "clean_up_param": 1,
                    "cleanup_param": 3,
                    "cleanup_parameter": 1,
                    "data": 1,
                    "error_code": 2,
                    "exit_param": 1,
                    "message": 1,
                    "param": 2,
                    "parameter_1": 1
                },
                "xexit": {
                    "clean_and_exit": 1,
                    "exit": 1,
                    "exit_code": 1,
                    "exit_function": 1,
                    "exit_program": 3,
                    "exit_status": 1,
                    "exit_with_error": 2,
                    "terminate_program": 2
                }
            },
            "called": [
                "xexit",
                "FUN_00107c20"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_001058b0",
                "FUN_00102d2f"
            ],
            "code": "\nvoid execute_cleanup_and_exit_00107c10(void)\n\n{\n  FUN_00107c20();\n                    \n  xexit(1);\n}\n\n",
            "current_name": "execute_cleanup_and_exit_00107c10",
            "entrypoint": "0x00107c10",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107c10": "execute_cleanup_and_exit_00107c10",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107c20": {
            "additional_data": {
                "FUN_00102f96": {
                    "print_additional_info": 1
                },
                "FUN_00107c20": {
                    "print_bfd_error": 1,
                    "print_bfd_error_message": 2,
                    "print_error": 5,
                    "print_error_info": 1,
                    "print_error_message": 22
                },
                "_stderr": {
                    "standard_error": 1,
                    "stderr": 2,
                    "stderr_stream": 1
                },
                "_stdout": {
                    "standard_output": 1,
                    "stdout": 2,
                    "stdout_stream": 1
                },
                "bfd_errmsg": {
                    "get_error_message": 1
                },
                "bfd_get_error": {
                    "get_error_code": 1
                },
                "fflush": {
                    "flush_output": 1
                },
                "fprintf": {
                    "print_formatted": 1
                },
                "iVar1": {
                    "bfd_error": 1,
                    "error": 13,
                    "error_code": 9,
                    "error_number": 3,
                    "error_status": 4,
                    "error_value": 1
                },
                "in_R10": {
                    "additional_data": 1,
                    "additional_info": 8,
                    "additional_msg": 1,
                    "extra_info": 1,
                    "irrelevant_parameter": 1,
                    "some_pointer": 1,
                    "some_variable": 1,
                    "unimportant_variable": 1,
                    "unknown": 1,
                    "unknown_cause": 1,
                    "unknown_error": 1,
                    "unknown_param": 1,
                    "unknown_var": 1,
                    "unknown_variable": 1,
                    "unused": 1,
                    "unused_parameter": 1,
                    "unused_variable": 1
                },
                "param_1": {
                    "error_cause": 1,
                    "error_description": 4,
                    "error_message": 12,
                    "error_msg": 2,
                    "error_type": 7,
                    "file_name": 3,
                    "file_path": 1,
                    "filename": 1
                },
                "uVar2": {
                    "error_description": 4,
                    "error_message": 19,
                    "error_message_text": 4,
                    "error_msg": 4
                }
            },
            "called": [
                "FUN_00102f96",
                "bfd_errmsg",
                "bfd_get_error"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00105db0",
                "FUN_00107c10"
            ],
            "code": "\n\n\nvoid print_bfd_error_message_00107c20(long error_message)\n\n{\n  int error;\n  undefined8 error_message;\n  undefined8 additional_info;\n  \n  error = bfd_get_error();\n  if (error == 0) {\n    error_message = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    error_message = bfd_errmsg(error);\n  }\n  fflush(stdout);\n  if (error_message != 0) {\n    fprintf(stderr,\"%s: %s: %s\\n\",DAT_0010d660,error_message,error_message,additional_info);\n    return;\n  }\n  fprintf(stderr,\"%s: %s\\n\",DAT_0010d660,error_message,additional_info);\n  return;\n}\n\n",
            "current_name": "print_bfd_error_message_00107c20",
            "entrypoint": "0x00107c20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107c20": "print_bfd_error_message_00107c20",
                "_stderr": "stderr",
                "_stdout": "stdout",
                "bfd_errmsg": "get_error_message",
                "bfd_get_error": "get_error_code",
                "fflush": "flush_output",
                "fprintf": "print_formatted",
                "iVar1": "error",
                "in_R10": "additional_info",
                "param_1": "error_message",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107c80": {
            "additional_data": {
                "FUN_00107920": {
                    "display_error_message": 1,
                    "print_error": 1
                },
                "FUN_00107c80": {
                    "set_file_modification_time": 3,
                    "set_file_time": 22,
                    "set_file_timestamp": 3,
                    "set_file_timestamps": 2,
                    "set_time": 1
                },
                "iVar1": {
                    "result": 28,
                    "result_code": 1
                },
                "local_28": {
                    "access_time": 2,
                    "backup_access_time": 1,
                    "file_mode": 1,
                    "modification_time": 3,
                    "old_access_time": 1,
                    "status": 1,
                    "timespec5": 1,
                    "timestamp_5": 1
                },
                "local_38": {
                    "access_time": 12,
                    "access_time_sec": 1,
                    "file_time1": 1,
                    "modification_time": 4,
                    "time_buf1": 1,
                    "time_spec1": 1,
                    "time_spec_var1": 1,
                    "timespec1": 1,
                    "timespec_buffer": 1,
                    "timestamp1": 1,
                    "timestamp_1": 1
                },
                "param_1": {
                    "file_name": 1,
                    "file_path": 29,
                    "path": 1
                },
                "param_2": {
                    "file_data": 4,
                    "file_info": 20,
                    "file_info_address": 1,
                    "file_info_ptr": 3,
                    "file_info_struct": 1,
                    "file_struct": 1,
                    "metadata_ptr": 1
                },
                "pcVar3": {
                    "err_msg": 8,
                    "error": 1,
                    "error_message": 7,
                    "error_msg": 5,
                    "error_string": 8
                },
                "piVar2": {
                    "err_number": 1,
                    "errno": 1,
                    "errno_addr": 2,
                    "errno_loc": 3,
                    "errno_location": 5,
                    "errno_location_ptr": 1,
                    "errno_pointer": 1,
                    "errno_ptr": 7,
                    "error_code": 3,
                    "error_code_ptr": 1,
                    "error_no": 1,
                    "error_num_ptr": 1,
                    "error_number": 1,
                    "error_ptr": 1
                },
                "uStack_1c": {
                    "backup_birth_time": 1,
                    "extra_flag": 1,
                    "extra_info": 1,
                    "old_birth_time": 1,
                    "timespec8": 1
                },
                "uStack_20": {
                    "backup_change_time": 1,
                    "group_id": 1,
                    "metadata": 1,
                    "old_change_time": 1,
                    "timespec7": 1
                },
                "uStack_24": {
                    "backup_mod_time": 1,
                    "old_mod_time": 1,
                    "security": 1,
                    "timespec6": 1,
                    "user_id": 1
                },
                "uStack_2c": {
                    "birth_time": 5,
                    "create_time": 1,
                    "creation_time": 1,
                    "file_permissions": 1,
                    "file_time4": 1,
                    "file_time_buf1": 1,
                    "mod_time_nsec": 1,
                    "padding3": 1,
                    "stack_var3": 2,
                    "time_buf4": 1,
                    "time_spec4": 1,
                    "time_spec_var4": 1,
                    "timespec4": 1,
                    "timestamp4": 1,
                    "timestamp_4": 1
                },
                "uStack_30": {
                    "change_time": 7,
                    "file_time3": 1,
                    "file_time_buf2": 1,
                    "mod_time_sec": 1,
                    "padding2": 1,
                    "stack_var2": 2,
                    "status_change_time": 2,
                    "time_buf3": 1,
                    "time_spec3": 1,
                    "time_spec_var3": 1,
                    "timespec3": 1,
                    "timestamp3": 1,
                    "timestamp_3": 1
                },
                "uStack_34": {
                    "access_time_nsec": 1,
                    "file_time2": 1,
                    "file_time_buf3": 1,
                    "mod_time": 3,
                    "modification_time": 6,
                    "padding1": 1,
                    "stack_var1": 2,
                    "time_buf2": 1,
                    "time_spec2": 1,
                    "time_spec_var2": 1,
                    "timespec2": 1,
                    "timestamp2": 1,
                    "timestamp_2": 1
                },
                "uVar4": {
                    "err_msg": 1,
                    "error_format": 1,
                    "error_message": 5,
                    "error_str": 1,
                    "error_string": 1,
                    "localized_error_string": 1,
                    "localized_string": 1,
                    "trans_error_msg": 1,
                    "translated_err_msg": 2,
                    "translated_error_message": 4,
                    "translated_error_msg": 1,
                    "translated_message": 1,
                    "translated_msg": 4,
                    "translated_str": 1,
                    "translated_string": 3,
                    "translation": 1
                },
                "utimensat": {
                    "update_file_time": 1,
                    "update_file_times": 1
                }
            },
            "called": [
                "utimensat",
                "FUN_00102fd7"
            ],
            "calling": [
                "FUN_00102c25"
            ],
            "code": "\nvoid set_file_modification_time_00107c80(char *file_path,long file_info)\n\n{\n  int result;\n  int *errno_ptr;\n  char *err_msg;\n  undefined8 error_message;\n  undefined4 access_time;\n  undefined4 modification_time;\n  undefined4 change_time;\n  undefined4 birth_time;\n  undefined4 modification_time;\n  undefined4 backup_mod_time;\n  undefined4 metadata;\n  undefined4 old_birth_time;\n  \n  modification_time = *(undefined4 *)(file_info + 0x58);\n  backup_mod_time = *(undefined4 *)(file_info + 0x5c);\n  metadata = *(undefined4 *)(file_info + 0x60);\n  old_birth_time = *(undefined4 *)(file_info + 100);\n  access_time = *(undefined4 *)(file_info + 0x48);\n  modification_time = *(undefined4 *)(file_info + 0x4c);\n  change_time = *(undefined4 *)(file_info + 0x50);\n  birth_time = *(undefined4 *)(file_info + 0x54);\n  result = utimensat(-100,file_path,(timespec *)&access_time,0);\n  if (result != 0) {\n    errno_ptr = __errno_location();\n    err_msg = strerror(*errno_ptr);\n    error_message = dcgettext(0,\"%s: cannot set time: %s\",5);\n    FUN_00107920(error_message,file_path,err_msg);\n  }\n  return;\n}\n\n",
            "current_name": "set_file_modification_time_00107c80",
            "entrypoint": "0x00107c80",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107c80": "set_file_modification_time_00107c80",
                "iVar1": "result",
                "local_28": "modification_time",
                "local_38": "access_time",
                "param_1": "file_path",
                "param_2": "file_info",
                "pcVar3": "err_msg",
                "piVar2": "errno_ptr",
                "uStack_1c": "old_birth_time",
                "uStack_20": "metadata",
                "uStack_24": "backup_mod_time",
                "uStack_2c": "birth_time",
                "uStack_30": "change_time",
                "uStack_34": "modification_time",
                "uVar4": "error_message",
                "utimensat": "update_file_time"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107cc0": {
            "additional_data": {
                "FUN_00107cc0": {
                    "execute_function_chain": 1,
                    "execute_functions": 9,
                    "execute_plugin_functions": 1,
                    "execute_reverse_actions": 1,
                    "execute_reverse_code": 1,
                    "execute_reverse_operations": 1,
                    "process_function": 3
                },
                "LAB_00107d96": {
                    "end_label": 1,
                    "end_of_loop": 1
                },
                "lVar1": {
                    "current_func_index": 1,
                    "current_index": 12,
                    "current_value": 1,
                    "index": 13,
                    "last_index": 3,
                    "loop_variable1": 1
                },
                "lVar2": {
                    "current_index": 3,
                    "higher_index": 1,
                    "index": 1,
                    "inner_index": 2,
                    "loop_variable2": 1,
                    "prev_index": 9,
                    "previous_func_index": 1,
                    "previous_index": 10,
                    "previous_value": 1,
                    "temp_index": 2
                },
                "lVar3": {
                    "cur_index": 1,
                    "current_index": 1,
                    "inner_index": 1,
                    "loop_index": 4,
                    "loop_variable3": 1,
                    "nested_index": 2,
                    "outer_index": 1,
                    "prev_index": 1,
                    "prev_index2": 1,
                    "temp_index": 16,
                    "temp_index2": 1,
                    "temp_value": 1
                },
                "plVar4": {
                    "action_array": 1,
                    "function_array": 1,
                    "function_chain": 1,
                    "function_list": 13,
                    "function_list_pointer": 1,
                    "function_pointer": 5,
                    "function_pointer_array": 1,
                    "function_pointers": 3,
                    "function_ptr": 2,
                    "function_ptr_list": 1,
                    "ptr_array": 1
                },
                "uVar5": {
                    "array_length": 1,
                    "count": 8,
                    "counter": 6,
                    "function_index": 2,
                    "function_type": 1,
                    "index": 2,
                    "iteration_count": 1,
                    "iteration_counter": 1,
                    "loop_count": 1,
                    "loop_counter": 2,
                    "num_funcs": 1,
                    "num_functions": 2,
                    "remaining_actions": 1,
                    "remaining_functions": 1,
                    "remaining_iterations": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid execute_plugin_functions_00107cc0(void)\n\n{\n  long index;\n  long previous_index;\n  long temp_index;\n  long *function_list;\n  uint count;\n  \n  function_list = (long *)PTR_DAT_0010d2e0;\n  if (PTR_DAT_0010d2e0 != (undefined *)0x0) {\n    do {\n      count = *(int *)(function_list + 1) - 1;\n      if (-1 < (int)count) {\n        index = (long)(int)count;\n        count = count & 7;\n        (*(code *)function_list[index + 2])();\n        previous_index = index + -1;\n        if (-1 < (int)previous_index) {\n          temp_index = previous_index;\n          if (count != 0) {\n            if (count != 1) {\n              if (count != 2) {\n                if (count != 3) {\n                  if (count != 4) {\n                    if (count != 5) {\n                      if (count != 6) {\n                        (*(code *)function_list[index + 1])();\n                        previous_index = index + -2;\n                      }\n                      (*(code *)function_list[previous_index + 2])();\n                      previous_index = previous_index + -1;\n                    }\n                    (*(code *)function_list[previous_index + 2])();\n                    previous_index = previous_index + -1;\n                  }\n                  (*(code *)function_list[previous_index + 2])();\n                  previous_index = previous_index + -1;\n                }\n                (*(code *)function_list[previous_index + 2])();\n                previous_index = previous_index + -1;\n              }\n              (*(code *)function_list[previous_index + 2])();\n              previous_index = previous_index + -1;\n            }\n            (*(code *)function_list[previous_index + 2])();\n            temp_index = previous_index + -1;\n            if ((int)(previous_index + -1) < 0) goto end_of_loop;\n          }\n          do {\n            (*(code *)function_list[temp_index + 2])();\n            index = temp_index + -1;\n            (*(code *)function_list[temp_index + 1])();\n            (*(code *)function_list[temp_index])();\n            (*(code *)function_list[index])();\n            (*(code *)function_list[temp_index + -2])();\n            (*(code *)function_list[temp_index + -3])();\n            (*(code *)function_list[temp_index + -4])();\n            (*(code *)function_list[temp_index + -5])();\n            temp_index = temp_index + -8;\n          } while (-1 < (int)index + -7);\n        }\n      }\nend_of_loop:\n      function_list = (long *)*function_list;\n    } while (function_list != (long *)0x0);\n  }\n  return;\n}\n\n",
            "current_name": "execute_plugin_functions_00107cc0",
            "entrypoint": "0x00107cc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107cc0": "execute_plugin_functions_00107cc0",
                "LAB_00107d96": "end_of_loop",
                "lVar1": "index",
                "lVar2": "previous_index",
                "lVar3": "temp_index",
                "plVar4": "function_list",
                "uVar5": "count"
            },
            "skipped": false,
            "tags": []
        },
        "_DT_FINI": {
            "called": [],
            "calling": [],
            "code": "\nvoid _DT_FINI(void)\n\n{\n  return;\n}\n\n",
            "current_name": "_DT_FINI",
            "entrypoint": "0x00107da8",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_DT_INIT": {
            "called": [
                "__gmon_start__"
            ],
            "calling": [],
            "code": "\nvoid _DT_INIT(void)\n\n{\n  __gmon_start__();\n  return;\n}\n\n",
            "current_name": "_DT_INIT",
            "entrypoint": "0x00102000",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_FINI_0": {
            "called": [
                "__cxa_finalize",
                "FUN_00105cf0"
            ],
            "calling": [],
            "code": "\nvoid _FINI_0(void)\n\n{\n  if (DAT_0010d400 != '\\0') {\n    return;\n  }\n  __cxa_finalize(PTR_LOOP_0010d2c8);\n  FUNC_00105cf0();\n  DAT_0010d400 = 1;\n  return;\n}\n\n",
            "current_name": "_FINI_0",
            "entrypoint": "0x00105d60",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_INIT_0": {
            "called": [
                "FUN_00105d20"
            ],
            "calling": [],
            "code": "\nvoid _INIT_0(void)\n\n{\n  FUNC_00105d20();\n  return;\n}\n\n",
            "current_name": "_INIT_0",
            "entrypoint": "0x00105da0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "__cxa_finalize": {
            "called": [
                "__cxa_finalize"
            ],
            "calling": [
                "_FINI_0"
            ],
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n",
            "current_name": "__cxa_finalize",
            "entrypoint": "0x00102590",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "__errno_location": {
            "called": [
                "__errno_location"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105300",
                "FUN_001031cf",
                "FUN_00102c25",
                "FUN_00105c00",
                "FUN_00102f55",
                "FUN_00103e95",
                "FUN_00103c60",
                "FUN_001025a0",
                "FUN_00102f1e",
                "FUN_00102fd7",
                "FUN_00103a78"
            ],
            "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  return piVar1;\n}\n\n",
            "current_name": "__errno_location",
            "entrypoint": "0x00102060",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_bread": {
            "called": [
                "bfd_bread"
            ],
            "calling": [
                "FUN_00102c25",
                "FUN_00103a78"
            ],
            "code": "\nvoid bfd_bread(void)\n\n{\n  bfd_bread();\n  return;\n}\n\n",
            "current_name": "bfd_bread",
            "entrypoint": "0x00102540",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_bwrite": {
            "called": [
                "bfd_bwrite"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_bwrite(void)\n\n{\n  bfd_bwrite();\n  return;\n}\n\n",
            "current_name": "bfd_bwrite",
            "entrypoint": "0x00102370",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_cache_close": {
            "called": [
                "bfd_cache_close"
            ],
            "calling": [
                "FUN_00102bf5",
                "FUN_00103e95"
            ],
            "code": "\nvoid bfd_cache_close(void)\n\n{\n  bfd_cache_close();\n  return;\n}\n\n",
            "current_name": "bfd_cache_close",
            "entrypoint": "0x00102050",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_check_format": {
            "called": [
                "bfd_check_format"
            ],
            "calling": [
                "FUN_00105af0",
                "FUN_00103c60",
                "FUN_00102710"
            ],
            "code": "\nvoid bfd_check_format(void)\n\n{\n  bfd_check_format();\n  return;\n}\n\n",
            "current_name": "bfd_check_format",
            "entrypoint": "0x00102520",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_check_format_matches": {
            "called": [
                "bfd_check_format_matches"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_check_format_matches(void)\n\n{\n  bfd_check_format_matches();\n  return;\n}\n\n",
            "current_name": "bfd_check_format_matches",
            "entrypoint": "0x001024c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_close": {
            "called": [
                "bfd_close"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00105db0",
                "FUN_00102d2f",
                "FUN_00103e95",
                "FUN_00102710"
            ],
            "code": "\nvoid bfd_close(void)\n\n{\n  bfd_close();\n  return;\n}\n\n",
            "current_name": "bfd_close",
            "entrypoint": "0x00102490",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_create": {
            "called": [
                "bfd_create"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_create(void)\n\n{\n  bfd_create();\n  return;\n}\n\n",
            "current_name": "bfd_create",
            "entrypoint": "0x001022a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_errmsg": {
            "called": [
                "bfd_errmsg"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00107c20"
            ],
            "code": "\nvoid bfd_errmsg(void)\n\n{\n  bfd_errmsg();\n  return;\n}\n\n",
            "current_name": "bfd_errmsg",
            "entrypoint": "0x001024d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_fdopenr": {
            "called": [
                "bfd_fdopenr"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_fdopenr(void)\n\n{\n  bfd_fdopenr();\n  return;\n}\n\n",
            "current_name": "bfd_fdopenr",
            "entrypoint": "0x00102300",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_fdopenw": {
            "called": [
                "bfd_fdopenw"
            ],
            "calling": [
                "FUN_001058b0",
                "FUN_00103c60"
            ],
            "code": "\nvoid bfd_fdopenw(void)\n\n{\n  bfd_fdopenw();\n  return;\n}\n\n",
            "current_name": "bfd_fdopenw",
            "entrypoint": "0x00102570",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_find_target": {
            "called": [
                "bfd_find_target"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_find_target(void)\n\n{\n  bfd_find_target();\n  return;\n}\n\n",
            "current_name": "bfd_find_target",
            "entrypoint": "0x001024e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_error": {
            "called": [
                "bfd_get_error"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00105db0",
                "FUN_00107c20"
            ],
            "code": "\nvoid bfd_get_error(void)\n\n{\n  bfd_get_error();\n  return;\n}\n\n",
            "current_name": "bfd_get_error",
            "entrypoint": "0x00102220",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_init": {
            "called": [
                "bfd_init"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_init(void)\n\n{\n  bfd_init();\n  return;\n}\n\n",
            "current_name": "bfd_init",
            "entrypoint": "0x001022b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_make_readable": {
            "called": [
                "bfd_make_readable"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_make_readable(void)\n\n{\n  bfd_make_readable();\n  return;\n}\n\n",
            "current_name": "bfd_make_readable",
            "entrypoint": "0x001020a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_make_writable": {
            "called": [
                "bfd_make_writable"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_make_writable(void)\n\n{\n  bfd_make_writable();\n  return;\n}\n\n",
            "current_name": "bfd_make_writable",
            "entrypoint": "0x00102080",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_openr": {
            "called": [
                "bfd_openr"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_001028ed",
                "FUN_00103e95",
                "FUN_00103c60",
                "FUN_00102710"
            ],
            "code": "\nvoid bfd_openr(void)\n\n{\n  bfd_openr();\n  return;\n}\n\n",
            "current_name": "bfd_openr",
            "entrypoint": "0x00102130",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_openr_next_archived_file": {
            "called": [
                "bfd_openr_next_archived_file"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00105af0",
                "FUN_00103c60"
            ],
            "code": "\nvoid bfd_openr_next_archived_file(void)\n\n{\n  bfd_openr_next_archived_file();\n  return;\n}\n\n",
            "current_name": "bfd_openr_next_archived_file",
            "entrypoint": "0x00102530",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_openw": {
            "called": [
                "bfd_openw"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00103e95"
            ],
            "code": "\nvoid bfd_openw(void)\n\n{\n  bfd_openw();\n  return;\n}\n\n",
            "current_name": "bfd_openw",
            "entrypoint": "0x00102420",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_plugin_set_plugin": {
            "called": [
                "bfd_plugin_set_plugin"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_plugin_set_plugin(void)\n\n{\n  bfd_plugin_set_plugin();\n  return;\n}\n\n",
            "current_name": "bfd_plugin_set_plugin",
            "entrypoint": "0x00102090",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_plugin_set_program_name": {
            "called": [
                "bfd_plugin_set_program_name"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_plugin_set_program_name(void)\n\n{\n  bfd_plugin_set_program_name();\n  return;\n}\n\n",
            "current_name": "bfd_plugin_set_program_name",
            "entrypoint": "0x001023a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_seek": {
            "called": [
                "bfd_seek"
            ],
            "calling": [
                "FUN_00102c25",
                "FUN_00103a78"
            ],
            "code": "\nvoid bfd_seek(void)\n\n{\n  bfd_seek();\n  return;\n}\n\n",
            "current_name": "bfd_seek",
            "entrypoint": "0x00102580",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_archive_head": {
            "called": [
                "bfd_set_archive_head"
            ],
            "calling": [
                "FUN_00102d2f"
            ],
            "code": "\nvoid bfd_set_archive_head(void)\n\n{\n  bfd_set_archive_head();\n  return;\n}\n\n",
            "current_name": "bfd_set_archive_head",
            "entrypoint": "0x001020f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_default_target": {
            "called": [
                "bfd_set_default_target"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_set_default_target(void)\n\n{\n  bfd_set_default_target();\n  return;\n}\n\n",
            "current_name": "bfd_set_default_target",
            "entrypoint": "0x001020d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_error": {
            "called": [
                "bfd_set_error"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_set_error(void)\n\n{\n  bfd_set_error();\n  return;\n}\n\n",
            "current_name": "bfd_set_error",
            "entrypoint": "0x00102240",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_error_program_name": {
            "called": [
                "bfd_set_error_program_name"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n",
            "current_name": "bfd_set_error_program_name",
            "entrypoint": "0x00102440",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_format": {
            "called": [
                "bfd_set_format"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00105db0",
                "FUN_001058b0",
                "FUN_00103e95",
                "FUN_00103c60"
            ],
            "code": "\nvoid bfd_set_format(void)\n\n{\n  bfd_set_format();\n  return;\n}\n\n",
            "current_name": "bfd_set_format",
            "entrypoint": "0x00102340",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_target_list": {
            "called": [
                "bfd_target_list"
            ],
            "calling": [
                "FUN_0010266f"
            ],
            "code": "\nvoid bfd_target_list(void)\n\n{\n  bfd_target_list();\n  return;\n}\n\n",
            "current_name": "bfd_target_list",
            "entrypoint": "0x00102210",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bindtextdomain": {
            "called": [
                "bindtextdomain"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n",
            "current_name": "bindtextdomain",
            "entrypoint": "0x00102160",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "calloc": {
            "called": [
                "calloc"
            ],
            "calling": [
                "FUN_00103df9"
            ],
            "code": "\n\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = calloc(__nmemb,__size);\n  return pvVar1;\n}\n\n",
            "current_name": "calloc",
            "entrypoint": "0x001022d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "chmod": {
            "called": [
                "chmod"
            ],
            "calling": [
                "FUN_00102c25"
            ],
            "code": "\n\n\nint chmod(char *__file,__mode_t __mode)\n\n{\n  int iVar1;\n  \n  iVar1 = chmod(__file,__mode);\n  return iVar1;\n}\n\n",
            "current_name": "chmod",
            "entrypoint": "0x00102430",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "clearerr": {
            "called": [
                "clearerr"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\n\n\nvoid clearerr(FILE *__stream)\n\n{\n  clearerr(__stream);\n  return;\n}\n\n",
            "current_name": "clearerr",
            "entrypoint": "0x00102360",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "close": {
            "called": [
                "close"
            ],
            "calling": [
                "FUN_001058b0",
                "FUN_00105c00",
                "FUN_00102f55"
            ],
            "code": "\n\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = close(__fd);\n  return iVar1;\n}\n\n",
            "current_name": "close",
            "entrypoint": "0x00102260",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "concat": {
            "called": [
                "concat"
            ],
            "calling": [
                "FUN_00102e57",
                "FUN_00105a68"
            ],
            "code": "\nvoid concat(void)\n\n{\n  concat();\n  return;\n}\n\n",
            "current_name": "concat",
            "entrypoint": "0x00102200",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "ctime": {
            "called": [
                "ctime"
            ],
            "calling": [
                "FUN_001079c0"
            ],
            "code": "\n\n\nchar * ctime(time_t *__timer)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = ctime(__timer);\n  return pcVar1;\n}\n\n",
            "current_name": "ctime",
            "entrypoint": "0x00102150",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "dcgettext": {
            "called": [
                "dcgettext"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00102c25",
                "FUN_00103e95",
                "FUN_0010266f",
                "FUN_00103bd1",
                "FUN_001025a0",
                "FUN_00103a78",
                "FUN_001028ed",
                "FUN_0010336b",
                "FUN_00102f96",
                "FUN_001031a5",
                "FUN_00105db0",
                "FUN_001058b0",
                "FUN_0010394a",
                "FUN_00102e6f",
                "FUN_0010342d",
                "FUN_00103c60",
                "FUN_00102d8c",
                "FUN_001052a0",
                "FUN_0010285f",
                "FUN_00102f1e",
                "FUN_00102fd7",
                "FUN_001032a8",
                "FUN_001075e0"
            ],
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n",
            "current_name": "dcgettext",
            "entrypoint": "0x00102170",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "dup": {
            "called": [
                "dup"
            ],
            "calling": [
                "FUN_00102d2f",
                "FUN_00103e95"
            ],
            "code": "\n\n\nint dup(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = dup(__fd);\n  return iVar1;\n}\n\n",
            "current_name": "dup",
            "entrypoint": "0x001021d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "entry": {
            "called": [
                "__libc_start_main",
                "FUN_00105db0"
            ],
            "calling": [],
            "code": "\nvoid processEntry entry(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined auStack_8 [8];\n  \n  __libc_start_main(FUN_00105db0,param_2,&stack0x00000008,0,0,param_1,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "entry",
            "entrypoint": "0x00105cc0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "exit": {
            "called": [
                "exit"
            ],
            "calling": [
                "FUN_001033b0",
                "FUN_001075e0"
            ],
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n",
            "current_name": "exit",
            "entrypoint": "0x00102500",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fclose": {
            "called": [
                "fclose"
            ],
            "calling": [
                "FUN_00102bf5",
                "FUN_00102c25",
                "FUN_00105db0",
                "FUN_00103e95"
            ],
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fclose",
            "entrypoint": "0x00102140",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "ferror": {
            "called": [
                "ferror"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00103e95"
            ],
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "ferror",
            "entrypoint": "0x001020b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fflush": {
            "called": [
                "fflush"
            ],
            "calling": [
                "FUN_001078c0",
                "FUN_00102f96",
                "FUN_00103ba8",
                "FUN_00103bd1"
            ],
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fflush",
            "entrypoint": "0x001023c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "filename_cmp": {
            "called": [
                "filename_cmp"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00102cd9",
                "FUN_00103e95",
                "FUN_00105480",
                "FUN_001032a8"
            ],
            "code": "\nvoid filename_cmp(void)\n\n{\n  filename_cmp();\n  return;\n}\n\n",
            "current_name": "filename_cmp",
            "entrypoint": "0x00102100",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fileno": {
            "called": [
                "fileno"
            ],
            "calling": [
                "FUN_001031cf",
                "FUN_00105db0"
            ],
            "code": "\n\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fileno(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fileno",
            "entrypoint": "0x00102390",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fopen": {
            "called": [
                "fopen"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00103e95",
                "FUN_00105a68"
            ],
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n",
            "current_name": "fopen",
            "entrypoint": "0x00102470",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fprintf": {
            "called": [
                "fprintf"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00103e95",
                "FUN_0010266f",
                "FUN_00103bd1",
                "FUN_0010336b",
                "FUN_001078c0",
                "FUN_00105db0",
                "FUN_00102f96",
                "FUN_0010394a",
                "FUN_0010342d",
                "FUN_00103c60",
                "FUN_00102d8c",
                "FUN_001033b0",
                "FUN_0010285f",
                "FUN_001032a8"
            ],
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n",
            "current_name": "fprintf",
            "entrypoint": "0x00102310",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fputc": {
            "called": [
                "fputc"
            ],
            "calling": [
                "FUN_0010266f",
                "FUN_00103bd1",
                "FUN_00102d8c"
            ],
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fputc",
            "entrypoint": "0x00102280",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fputs": {
            "called": [
                "fputs"
            ],
            "calling": [
                "FUN_00102d8c"
            ],
            "code": "\n\n\nint fputs(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputs(__s,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fputs",
            "entrypoint": "0x001021f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fread": {
            "called": [
                "fread"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00103e95"
            ],
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n",
            "current_name": "fread",
            "entrypoint": "0x001020e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "free": {
            "called": [
                "free"
            ],
            "calling": [
                "FUN_00102c25",
                "FUN_00105db0",
                "FUN_00102d2f",
                "FUN_00103e95",
                "FUN_0010266f",
                "FUN_00103bd1",
                "FUN_00102ba1",
                "FUN_00103a78"
            ],
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n",
            "current_name": "free",
            "entrypoint": "0x00102030",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fseek": {
            "called": [
                "fseek"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n",
            "current_name": "fseek",
            "entrypoint": "0x001023f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "ftell": {
            "called": [
                "ftell"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n",
            "current_name": "ftell",
            "entrypoint": "0x00102320",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fwrite": {
            "called": [
                "fwrite"
            ],
            "calling": [
                "FUN_00102c25",
                "FUN_00103e95",
                "FUN_00103a78"
            ],
            "code": "\n\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fwrite(__ptr,__size,__n,__s);\n  return sVar1;\n}\n\n",
            "current_name": "fwrite",
            "entrypoint": "0x00102510",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "getc": {
            "called": [
                "getc"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\n\n\nint getc(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = getc(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "getc",
            "entrypoint": "0x00102560",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "getopt_long": {
            "called": [
                "getopt_long"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n",
            "current_name": "getopt_long",
            "entrypoint": "0x00102190",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "isatty": {
            "called": [
                "isatty"
            ],
            "calling": [
                "FUN_001031cf",
                "FUN_00105db0"
            ],
            "code": "\n\n\nint isatty(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = isatty(__fd);\n  return iVar1;\n}\n\n",
            "current_name": "isatty",
            "entrypoint": "0x001020c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "lbasename": {
            "called": [
                "lbasename"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105830",
                "FUN_00105db0",
                "FUN_00102e6f"
            ],
            "code": "\nvoid lbasename(void)\n\n{\n  lbasename();\n  return;\n}\n\n",
            "current_name": "lbasename",
            "entrypoint": "0x001022c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "lseek": {
            "called": [
                "lseek"
            ],
            "calling": [
                "FUN_00105c00"
            ],
            "code": "\n\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = lseek(__fd,__offset,__whence);\n  return _Var1;\n}\n\n",
            "current_name": "lseek",
            "entrypoint": "0x001021e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "malloc": {
            "called": [
                "malloc"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00103e95",
                "FUN_001033d6"
            ],
            "code": "\n\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(__size);\n  return pvVar1;\n}\n\n",
            "current_name": "malloc",
            "entrypoint": "0x001023b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "memcpy": {
            "called": [
                "memcpy"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "memcpy",
            "entrypoint": "0x00102380",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "memmove": {
            "called": [
                "memmove"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "memmove",
            "entrypoint": "0x00102450",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "mkstemp": {
            "called": [
                "mkstemp"
            ],
            "calling": [
                "FUN_001057a0"
            ],
            "code": "\n\n\nint mkstemp(char *__template)\n\n{\n  int iVar1;\n  \n  iVar1 = mkstemp(__template);\n  return iVar1;\n}\n\n",
            "current_name": "mkstemp",
            "entrypoint": "0x001023e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "open": {
            "called": [
                "open"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00105c00"
            ],
            "code": "\n\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = open(__file,__oflag);\n  return iVar1;\n}\n\n",
            "current_name": "open",
            "entrypoint": "0x00102460",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "perror": {
            "called": [
                "perror"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00105a68"
            ],
            "code": "\n\n\nvoid perror(char *__s)\n\n{\n  perror(__s);\n  return;\n}\n\n",
            "current_name": "perror",
            "entrypoint": "0x001024a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "printf": {
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_001031a5",
                "FUN_00103172",
                "FUN_00102f08",
                "FUN_00103ba8",
                "FUN_00103e95",
                "FUN_00105a68",
                "FUN_00103a78",
                "FUN_001075e0"
            ],
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n",
            "current_name": "printf",
            "entrypoint": "0x001021a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "putc": {
            "called": [
                "putc"
            ],
            "calling": [
                "FUN_001078c0"
            ],
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "putc",
            "entrypoint": "0x001022f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "read": {
            "called": [
                "read"
            ],
            "calling": [
                "FUN_00105c00"
            ],
            "code": "\n\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = read(__fd,__buf,__nbytes);\n  return sVar1;\n}\n\n",
            "current_name": "read",
            "entrypoint": "0x00102290",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "realloc": {
            "called": [
                "realloc"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00103df9"
            ],
            "code": "\n\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = realloc(__ptr,__size);\n  return pvVar1;\n}\n\n",
            "current_name": "realloc",
            "entrypoint": "0x00102400",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "setlocale": {
            "called": [
                "setlocale"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = setlocale(__category,__locale);\n  return pcVar1;\n}\n\n",
            "current_name": "setlocale",
            "entrypoint": "0x00102410",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "sprintf": {
            "called": [
                "sprintf"
            ],
            "calling": [
                "FUN_001079c0",
                "FUN_00102d8c"
            ],
            "code": "\n\n\nint sprintf(char *__s,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = sprintf(__s,__format);\n  return iVar1;\n}\n\n",
            "current_name": "sprintf",
            "entrypoint": "0x001024f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "stat": {
            "called": [
                "stat"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105300",
                "FUN_00105db0",
                "FUN_00103e95",
                "FUN_001052a0"
            ],
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n",
            "current_name": "stat",
            "entrypoint": "0x00102330",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strcmp": {
            "called": [
                "strcmp"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcmp(__s1,__s2);\n  return iVar1;\n}\n\n",
            "current_name": "strcmp",
            "entrypoint": "0x001022e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strerror": {
            "called": [
                "strerror"
            ],
            "calling": [
                "FUN_00102c25",
                "FUN_00103c60",
                "FUN_001025a0",
                "FUN_00102f1e",
                "FUN_00102fd7",
                "FUN_00103a78"
            ],
            "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strerror(__errnum);\n  return pcVar1;\n}\n\n",
            "current_name": "strerror",
            "entrypoint": "0x00102550",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strlen": {
            "called": [
                "strlen"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00102bb0",
                "FUN_00105a68"
            ],
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n",
            "current_name": "strlen",
            "entrypoint": "0x00102180",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strrchr": {
            "called": [
                "strrchr"
            ],
            "calling": [
                "FUN_001057a0"
            ],
            "code": "\n\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strrchr(__s,__c);\n  return pcVar1;\n}\n\n",
            "current_name": "strrchr",
            "entrypoint": "0x001021c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strtol": {
            "called": [
                "strtol"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n  long lVar1;\n  \n  lVar1 = strtol(__nptr,__endptr,__base);\n  return lVar1;\n}\n\n",
            "current_name": "strtol",
            "entrypoint": "0x00102350",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "textdomain": {
            "called": [
                "textdomain"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n",
            "current_name": "textdomain",
            "entrypoint": "0x00102120",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "unlink": {
            "called": [
                "unlink"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00102f1e"
            ],
            "code": "\n\n\nint unlink(char *__name)\n\n{\n  int iVar1;\n  \n  iVar1 = unlink(__name);\n  return iVar1;\n}\n\n",
            "current_name": "unlink",
            "entrypoint": "0x00102070",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "unlink_if_ordinary": {
            "called": [
                "unlink_if_ordinary"
            ],
            "calling": [
                "FUN_00102bf5"
            ],
            "code": "\nvoid unlink_if_ordinary(void)\n\n{\n  unlink_if_ordinary();\n  return;\n}\n\n",
            "current_name": "unlink_if_ordinary",
            "entrypoint": "0x001023d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "utimensat": {
            "called": [
                "utimensat"
            ],
            "calling": [
                "FUN_00107c80"
            ],
            "code": "\n\n\nint utimensat(int __fd,char *__path,timespec *__times,int __flags)\n\n{\n  int iVar1;\n  \n  iVar1 = utimensat(__fd,__path,__times,__flags);\n  return iVar1;\n}\n\n",
            "current_name": "utimensat",
            "entrypoint": "0x00102040",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "vfprintf": {
            "called": [
                "vfprintf"
            ],
            "calling": [
                "FUN_001078c0"
            ],
            "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 = vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n",
            "current_name": "vfprintf",
            "entrypoint": "0x001024b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "write": {
            "called": [
                "write"
            ],
            "calling": [
                "FUN_00105c00"
            ],
            "code": "\n\n\nssize_t write(int __fd,void *__buf,size_t __n)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = write(__fd,__buf,__n);\n  return sVar1;\n}\n\n",
            "current_name": "write",
            "entrypoint": "0x00102110",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xexit": {
            "called": [
                "xexit"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00105db0",
                "FUN_00107c10",
                "FUN_0010394a",
                "FUN_00102d2f",
                "FUN_00107650",
                "FUN_0010342d",
                "FUN_00107690",
                "FUN_0010315d",
                "FUN_00105a68"
            ],
            "code": "\nvoid xexit(void)\n\n{\n                    \n  xexit();\n}\n\n",
            "current_name": "xexit",
            "entrypoint": "0x00102480",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xmalloc": {
            "called": [
                "xmalloc"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00102c25",
                "FUN_00105db0",
                "FUN_00102bb0",
                "FUN_001057a0",
                "FUN_00103a78"
            ],
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n",
            "current_name": "xmalloc",
            "entrypoint": "0x00102230",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xmalloc_set_program_name": {
            "called": [
                "xmalloc_set_program_name"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n",
            "current_name": "xmalloc_set_program_name",
            "entrypoint": "0x00102250",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xrealloc": {
            "called": [
                "xrealloc"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n",
            "current_name": "xrealloc",
            "entrypoint": "0x001021b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xstrdup": {
            "called": [
                "xstrdup"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_001058b0",
                "FUN_00103e95",
                "FUN_00103c60"
            ],
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n",
            "current_name": "xstrdup",
            "entrypoint": "0x00102270",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_00102020",
            "FUN_001025a0",
            "FUN_0010266f",
            "FUN_00102710",
            "FUN_0010284b",
            "FUN_0010285f",
            "FUN_001028ed",
            "FUN_00102943",
            "FUN_00102ba1",
            "FUN_00102bb0",
            "FUN_00102bf5",
            "FUN_00102c25",
            "FUN_00102cd9",
            "FUN_00102d2f",
            "FUN_00102d8c",
            "FUN_00102e57",
            "FUN_00102e6f",
            "FUN_00102f08",
            "FUN_00102f1e",
            "FUN_00102f55",
            "FUN_00102f96",
            "FUN_00102fd7",
            "FUN_0010300e",
            "FUN_001030ed",
            "FUN_0010312d",
            "FUN_0010315d",
            "FUN_00103172",
            "FUN_001031a5",
            "FUN_001031cf",
            "FUN_001032a8",
            "FUN_0010336b",
            "FUN_001033b0",
            "FUN_001033d6",
            "FUN_0010342d",
            "FUN_0010394a",
            "FUN_00103a78",
            "FUN_00103ba8",
            "FUN_00103bd1",
            "FUN_00103c60",
            "FUN_00103ddc",
            "FUN_00103df9",
            "FUN_00103e95",
            "FUN_001052a0",
            "FUN_00105300",
            "FUN_00105480",
            "FUN_00105570",
            "FUN_001057a0",
            "FUN_00105830",
            "FUN_00105870",
            "FUN_001058b0",
            "FUN_00105a20",
            "FUN_00105a68",
            "FUN_00105ae0",
            "FUN_00105af0",
            "FUN_00105bb0",
            "FUN_00105bc0",
            "FUN_00105c00",
            "FUN_00105db0",
            "FUN_001075e0",
            "FUN_00107640",
            "FUN_00107650",
            "FUN_00107690",
            "FUN_00107730",
            "FUN_00107740",
            "FUN_00107890",
            "FUN_001078c0",
            "FUN_00107920",
            "FUN_001079c0",
            "FUN_00107c10",
            "FUN_00107c20",
            "FUN_00107c80",
            "FUN_00107cc0"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 382589
}