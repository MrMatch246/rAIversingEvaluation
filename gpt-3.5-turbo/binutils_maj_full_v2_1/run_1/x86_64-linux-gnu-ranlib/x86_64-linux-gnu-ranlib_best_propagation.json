{
    "functions": {
        "FUN_00102000": {
            "additional_data": {
                "FUN_00102000": {
                    "init_monitoring": 1,
                    "initialize": 6,
                    "initialize_global_monitor": 1,
                    "initialize_gmon": 1,
                    "initialize_logging": 1,
                    "initialize_monitor": 1,
                    "initialize_monitoring": 5,
                    "initialize_profiler": 1,
                    "initialize_program": 12,
                    "initialize_system": 1,
                    "start_program": 1
                },
                "__gmon_start__": {
                    "initialize_monitor_start": 1,
                    "initialize_monitoring": 1,
                    "initialize_performance_monitor": 1,
                    "initialize_performance_monitoring": 1,
                    "initialize_profiler": 2,
                    "initialize_profiling": 2,
                    "performance_monitoring_start": 1,
                    "start_global_monitor": 1,
                    "start_gmon": 2,
                    "start_monitoring": 12,
                    "start_performance_measurement": 1,
                    "start_performance_monitoring": 1,
                    "start_profiling": 3
                }
            },
            "called": [
                "FUN_0010e1b8"
            ],
            "calling": [],
            "code": "\nvoid initialize_program_00102000(void)\n\n{\n  start_monitoring();\n  return;\n}\n\n",
            "current_name": "initialize_program_00102000",
            "entrypoint": "0x00102000",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102000": "initialize_program_00102000",
                "__gmon_start__": "start_monitoring"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102020": {
            "additional_data": {
                "0x0": {
                    "target_address": 1
                },
                "FUN_00102020": {
                    "call_indirect_jump": 2,
                    "execute_function": 1,
                    "execute_function_at_address": 4,
                    "execute_indirect_call": 6,
                    "execute_indirect_function": 2,
                    "execute_indirect_jump": 14,
                    "execute_malicious_code": 1,
                    "execute_unknown_function": 1
                },
                "PTR_0": {
                    "jump_address": 1
                },
                "PTR_0x0": {
                    "indirect_jump_target": 1
                },
                "PTR__": {
                    "indirect_function_ptr": 1
                },
                "UndefinedFunctionPointer": {
                    "function_pointer": 1
                },
                "code": {
                    "function_pointer": 4
                },
                "undefined": {
                    "address": 1,
                    "base_address": 1,
                    "code_address": 1,
                    "function_address": 1,
                    "function_pointer": 2,
                    "function_ptr": 1,
                    "indirect_address": 1,
                    "target_function": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_indirect_jump_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(function_pointer *)(function_pointer *)0x0)();\n  return;\n}\n\n",
            "current_name": "execute_indirect_jump_00102020",
            "entrypoint": "0x00102020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102020": "execute_indirect_jump_00102020",
                "code": "function_pointer",
                "undefined": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102030": {
            "called": [
                "FUN_0010e000"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00102c25",
                "FUN_00105db0",
                "FUN_00103bd1",
                "FUN_00102ba1",
                "FUN_00102d2f",
                "FUN_00103a78",
                "FUN_0010266f"
            ],
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n",
            "current_name": "FUN_00102030",
            "entrypoint": "0x00102030",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102040": {
            "called": [
                "FUN_0010e008"
            ],
            "calling": [
                "FUN_00107c80"
            ],
            "code": "\n\n\nint utimensat(int __fd,char *__path,timespec *__times,int __flags)\n\n{\n  int iVar1;\n  \n  iVar1 = utimensat(__fd,__path,__times,__flags);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102040",
            "entrypoint": "0x00102040",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102050": {
            "called": [
                "FUN_0010e010"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00102bf5"
            ],
            "code": "\nvoid bfd_cache_close(void)\n\n{\n  bfd_cache_close();\n  return;\n}\n\n",
            "current_name": "FUN_00102050",
            "entrypoint": "0x00102050",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102060": {
            "called": [
                "FUN_0010e020"
            ],
            "calling": [
                "FUN_00102fd7",
                "FUN_00103e95",
                "FUN_001025a0",
                "FUN_00102f55",
                "FUN_00105c00",
                "FUN_00102c25",
                "FUN_001028ed",
                "FUN_00103c60",
                "FUN_00103a78",
                "FUN_00102f1e",
                "FUN_001031cf",
                "FUN_00105300"
            ],
            "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  return piVar1;\n}\n\n",
            "current_name": "FUN_00102060",
            "entrypoint": "0x00102060",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102070": {
            "called": [
                "FUN_0010e028"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00102f1e"
            ],
            "code": "\n\n\nint unlink(char *__name)\n\n{\n  int iVar1;\n  \n  iVar1 = unlink(__name);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102070",
            "entrypoint": "0x00102070",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102080": {
            "called": [
                "FUN_0010e030"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_make_writable(void)\n\n{\n  bfd_make_writable();\n  return;\n}\n\n",
            "current_name": "FUN_00102080",
            "entrypoint": "0x00102080",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102090": {
            "called": [
                "FUN_0010e048"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_plugin_set_plugin(void)\n\n{\n  bfd_plugin_set_plugin();\n  return;\n}\n\n",
            "current_name": "FUN_00102090",
            "entrypoint": "0x00102090",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020a0": {
            "called": [
                "FUN_0010e050"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_make_readable(void)\n\n{\n  bfd_make_readable();\n  return;\n}\n\n",
            "current_name": "FUN_001020a0",
            "entrypoint": "0x001020a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020b0": {
            "called": [
                "FUN_0010e058"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105db0"
            ],
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001020b0",
            "entrypoint": "0x001020b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020c0": {
            "called": [
                "FUN_0010e060"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_001031cf"
            ],
            "code": "\n\n\nint isatty(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = isatty(__fd);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001020c0",
            "entrypoint": "0x001020c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020d0": {
            "called": [
                "FUN_0010e068"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_set_default_target(void)\n\n{\n  bfd_set_default_target();\n  return;\n}\n\n",
            "current_name": "FUN_001020d0",
            "entrypoint": "0x001020d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020e0": {
            "called": [
                "FUN_0010e070"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105db0"
            ],
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_001020e0",
            "entrypoint": "0x001020e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020f0": {
            "called": [
                "FUN_0010e080"
            ],
            "calling": [
                "FUN_00102d2f"
            ],
            "code": "\nvoid bfd_set_archive_head(void)\n\n{\n  bfd_set_archive_head();\n  return;\n}\n\n",
            "current_name": "FUN_001020f0",
            "entrypoint": "0x001020f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102100": {
            "called": [
                "FUN_0010e088"
            ],
            "calling": [
                "FUN_00102cd9",
                "FUN_00103e95",
                "FUN_001032a8",
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00105480"
            ],
            "code": "\nvoid filename_cmp(void)\n\n{\n  filename_cmp();\n  return;\n}\n\n",
            "current_name": "FUN_00102100",
            "entrypoint": "0x00102100",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102110": {
            "called": [
                "FUN_0010e090"
            ],
            "calling": [
                "FUN_00105c00"
            ],
            "code": "\n\n\nssize_t write(int __fd,void *__buf,size_t __n)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = write(__fd,__buf,__n);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_00102110",
            "entrypoint": "0x00102110",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102120": {
            "called": [
                "FUN_0010e098"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n",
            "current_name": "FUN_00102120",
            "entrypoint": "0x00102120",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102130": {
            "called": [
                "FUN_0010e0a0"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_001028ed",
                "FUN_00103c60",
                "FUN_00102710",
                "FUN_00105300"
            ],
            "code": "\nvoid bfd_openr(void)\n\n{\n  bfd_openr();\n  return;\n}\n\n",
            "current_name": "FUN_00102130",
            "entrypoint": "0x00102130",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102140": {
            "called": [
                "FUN_0010e0a8"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00102c25",
                "FUN_00102bf5",
                "FUN_00105db0"
            ],
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102140",
            "entrypoint": "0x00102140",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102150": {
            "called": [
                "FUN_0010e0b8"
            ],
            "calling": [
                "FUN_001079c0"
            ],
            "code": "\n\n\nchar * ctime(time_t *__timer)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = ctime(__timer);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_00102150",
            "entrypoint": "0x00102150",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102160": {
            "called": [
                "FUN_0010e0c0"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n",
            "current_name": "FUN_00102160",
            "entrypoint": "0x00102160",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102170": {
            "called": [
                "FUN_0010e0c8"
            ],
            "calling": [
                "FUN_001052a0",
                "FUN_001075e0",
                "FUN_0010394a",
                "FUN_00102d8c",
                "FUN_00102c25",
                "FUN_001032a8",
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00102e6f",
                "FUN_00103bd1",
                "FUN_00103c60",
                "FUN_00103a78",
                "FUN_00102f1e",
                "FUN_00105300",
                "FUN_00102f96",
                "FUN_001058b0",
                "FUN_00102fd7",
                "FUN_00103e95",
                "FUN_001031a5",
                "FUN_001025a0",
                "FUN_0010285f",
                "FUN_0010336b",
                "FUN_0010342d",
                "FUN_0010266f"
            ],
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n",
            "current_name": "FUN_00102170",
            "entrypoint": "0x00102170",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102180": {
            "called": [
                "FUN_0010e0d0"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00102bb0",
                "FUN_00105a68"
            ],
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_00102180",
            "entrypoint": "0x00102180",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102190": {
            "called": [
                "FUN_0010e0d8"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n",
            "current_name": "FUN_00102190",
            "entrypoint": "0x00102190",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021a0": {
            "called": [
                "FUN_0010e0e0"
            ],
            "calling": [
                "FUN_001075e0",
                "FUN_00103e95",
                "FUN_00103172",
                "FUN_001031a5",
                "FUN_00103ba8",
                "FUN_00105db0",
                "FUN_00103a78",
                "FUN_00102f08",
                "FUN_00105a68"
            ],
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001021a0",
            "entrypoint": "0x001021a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021b0": {
            "called": [
                "FUN_0010e0e8"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n",
            "current_name": "FUN_001021b0",
            "entrypoint": "0x001021b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021c0": {
            "called": [
                "FUN_0010e0f0"
            ],
            "calling": [
                "FUN_001057a0"
            ],
            "code": "\n\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strrchr(__s,__c);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_001021c0",
            "entrypoint": "0x001021c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021d0": {
            "called": [
                "FUN_0010e0f8"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00102d2f"
            ],
            "code": "\n\n\nint dup(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = dup(__fd);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001021d0",
            "entrypoint": "0x001021d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021e0": {
            "called": [
                "FUN_0010e100"
            ],
            "calling": [
                "FUN_00105c00"
            ],
            "code": "\n\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = lseek(__fd,__offset,__whence);\n  return _Var1;\n}\n\n",
            "current_name": "FUN_001021e0",
            "entrypoint": "0x001021e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021f0": {
            "called": [
                "FUN_0010e108"
            ],
            "calling": [
                "FUN_00102d8c"
            ],
            "code": "\n\n\nint fputs(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputs(__s,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001021f0",
            "entrypoint": "0x001021f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102200": {
            "called": [
                "FUN_0010e110"
            ],
            "calling": [
                "FUN_00102e57",
                "FUN_00105a68"
            ],
            "code": "\nvoid concat(void)\n\n{\n  concat();\n  return;\n}\n\n",
            "current_name": "FUN_00102200",
            "entrypoint": "0x00102200",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102210": {
            "called": [
                "FUN_0010e120"
            ],
            "calling": [
                "FUN_0010266f"
            ],
            "code": "\nvoid bfd_target_list(void)\n\n{\n  bfd_target_list();\n  return;\n}\n\n",
            "current_name": "FUN_00102210",
            "entrypoint": "0x00102210",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102220": {
            "called": [
                "FUN_0010e128"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00107c20",
                "FUN_00105300"
            ],
            "code": "\nvoid bfd_get_error(void)\n\n{\n  bfd_get_error();\n  return;\n}\n\n",
            "current_name": "FUN_00102220",
            "entrypoint": "0x00102220",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102230": {
            "called": [
                "FUN_0010e130"
            ],
            "calling": [
                "FUN_00102c25",
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_001057a0",
                "FUN_00103a78",
                "FUN_00102bb0"
            ],
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n",
            "current_name": "FUN_00102230",
            "entrypoint": "0x00102230",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102240": {
            "called": [
                "FUN_0010e138"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00105300"
            ],
            "code": "\nvoid bfd_set_error(void)\n\n{\n  bfd_set_error();\n  return;\n}\n\n",
            "current_name": "FUN_00102240",
            "entrypoint": "0x00102240",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102250": {
            "called": [
                "FUN_0010e140"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n",
            "current_name": "FUN_00102250",
            "entrypoint": "0x00102250",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102260": {
            "called": [
                "FUN_0010e148"
            ],
            "calling": [
                "FUN_00102f55",
                "FUN_00105c00",
                "FUN_001058b0"
            ],
            "code": "\n\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = close(__fd);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102260",
            "entrypoint": "0x00102260",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102270": {
            "called": [
                "FUN_0010e150"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105db0",
                "FUN_00103c60",
                "FUN_001058b0"
            ],
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n",
            "current_name": "FUN_00102270",
            "entrypoint": "0x00102270",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102280": {
            "called": [
                "FUN_0010e158"
            ],
            "calling": [
                "FUN_00102d8c",
                "FUN_00103bd1",
                "FUN_0010266f"
            ],
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102280",
            "entrypoint": "0x00102280",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102290": {
            "called": [
                "FUN_0010e160"
            ],
            "calling": [
                "FUN_00105c00"
            ],
            "code": "\n\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = read(__fd,__buf,__nbytes);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_00102290",
            "entrypoint": "0x00102290",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022a0": {
            "called": [
                "FUN_0010e168"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_create(void)\n\n{\n  bfd_create();\n  return;\n}\n\n",
            "current_name": "FUN_001022a0",
            "entrypoint": "0x001022a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022b0": {
            "called": [
                "FUN_0010e170"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_init(void)\n\n{\n  bfd_init();\n  return;\n}\n\n",
            "current_name": "FUN_001022b0",
            "entrypoint": "0x001022b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022c0": {
            "called": [
                "FUN_0010e178"
            ],
            "calling": [
                "FUN_00105830",
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00102e6f"
            ],
            "code": "\nvoid lbasename(void)\n\n{\n  lbasename();\n  return;\n}\n\n",
            "current_name": "FUN_001022c0",
            "entrypoint": "0x001022c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022d0": {
            "called": [
                "FUN_0010e180"
            ],
            "calling": [
                "FUN_00103df9"
            ],
            "code": "\n\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = calloc(__nmemb,__size);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_001022d0",
            "entrypoint": "0x001022d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022e0": {
            "called": [
                "FUN_0010e188"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcmp(__s1,__s2);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001022e0",
            "entrypoint": "0x001022e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022f0": {
            "called": [
                "FUN_0010e190"
            ],
            "calling": [
                "FUN_001078c0"
            ],
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001022f0",
            "entrypoint": "0x001022f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102300": {
            "called": [
                "FUN_0010e1a0"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_fdopenr(void)\n\n{\n  bfd_fdopenr();\n  return;\n}\n\n",
            "current_name": "FUN_00102300",
            "entrypoint": "0x00102300",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102310": {
            "called": [
                "FUN_0010e1a8"
            ],
            "calling": [
                "FUN_0010394a",
                "FUN_00102d8c",
                "FUN_001032a8",
                "FUN_001033b0",
                "FUN_00105db0",
                "FUN_001078c0",
                "FUN_00103bd1",
                "FUN_00103c60",
                "FUN_00105300",
                "FUN_00102f96",
                "FUN_00103e95",
                "FUN_0010285f",
                "FUN_0010336b",
                "FUN_0010342d",
                "FUN_0010266f"
            ],
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102310",
            "entrypoint": "0x00102310",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102320": {
            "called": [
                "FUN_0010e1b0"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n",
            "current_name": "FUN_00102320",
            "entrypoint": "0x00102320",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102330": {
            "called": [
                "FUN_0010e1c0"
            ],
            "calling": [
                "FUN_001052a0",
                "FUN_00103e95",
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00105300"
            ],
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102330",
            "entrypoint": "0x00102330",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102340": {
            "called": [
                "FUN_0010e1c8"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105db0",
                "FUN_00103c60",
                "FUN_00105300",
                "FUN_001058b0"
            ],
            "code": "\nvoid bfd_set_format(void)\n\n{\n  bfd_set_format();\n  return;\n}\n\n",
            "current_name": "FUN_00102340",
            "entrypoint": "0x00102340",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102350": {
            "called": [
                "FUN_0010e1d0"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n  long lVar1;\n  \n  lVar1 = strtol(__nptr,__endptr,__base);\n  return lVar1;\n}\n\n",
            "current_name": "FUN_00102350",
            "entrypoint": "0x00102350",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102360": {
            "called": [
                "FUN_0010e1d8"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\n\n\nvoid clearerr(FILE *__stream)\n\n{\n  clearerr(__stream);\n  return;\n}\n\n",
            "current_name": "FUN_00102360",
            "entrypoint": "0x00102360",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102370": {
            "called": [
                "FUN_0010e1e0"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_bwrite(void)\n\n{\n  bfd_bwrite();\n  return;\n}\n\n",
            "current_name": "FUN_00102370",
            "entrypoint": "0x00102370",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102380": {
            "called": [
                "FUN_0010e1e8"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_00102380",
            "entrypoint": "0x00102380",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102390": {
            "called": [
                "FUN_0010e1f0"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_001031cf"
            ],
            "code": "\n\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fileno(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102390",
            "entrypoint": "0x00102390",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001023a0": {
            "called": [
                "FUN_0010e1f8"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_plugin_set_program_name(void)\n\n{\n  bfd_plugin_set_program_name();\n  return;\n}\n\n",
            "current_name": "FUN_001023a0",
            "entrypoint": "0x001023a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001023b0": {
            "called": [
                "FUN_0010e200"
            ],
            "calling": [
                "FUN_001033d6",
                "FUN_00103e95",
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(__size);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_001023b0",
            "entrypoint": "0x001023b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001023c0": {
            "called": [
                "FUN_0010e208"
            ],
            "calling": [
                "FUN_00103ba8",
                "FUN_001078c0",
                "FUN_00103bd1",
                "FUN_00102f96"
            ],
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001023c0",
            "entrypoint": "0x001023c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001023d0": {
            "called": [
                "FUN_0010e210"
            ],
            "calling": [
                "FUN_00102bf5"
            ],
            "code": "\nvoid unlink_if_ordinary(void)\n\n{\n  unlink_if_ordinary();\n  return;\n}\n\n",
            "current_name": "FUN_001023d0",
            "entrypoint": "0x001023d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001023e0": {
            "called": [
                "FUN_0010e218"
            ],
            "calling": [
                "FUN_001057a0"
            ],
            "code": "\n\n\nint mkstemp(char *__template)\n\n{\n  int iVar1;\n  \n  iVar1 = mkstemp(__template);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001023e0",
            "entrypoint": "0x001023e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001023f0": {
            "called": [
                "FUN_0010e220"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001023f0",
            "entrypoint": "0x001023f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102400": {
            "called": [
                "FUN_0010e228"
            ],
            "calling": [
                "FUN_00103df9",
                "FUN_00103e95"
            ],
            "code": "\n\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = realloc(__ptr,__size);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_00102400",
            "entrypoint": "0x00102400",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102410": {
            "called": [
                "FUN_0010e238"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = setlocale(__category,__locale);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_00102410",
            "entrypoint": "0x00102410",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102420": {
            "called": [
                "FUN_0010e240"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105300"
            ],
            "code": "\nvoid bfd_openw(void)\n\n{\n  bfd_openw();\n  return;\n}\n\n",
            "current_name": "FUN_00102420",
            "entrypoint": "0x00102420",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102430": {
            "called": [
                "FUN_0010e248"
            ],
            "calling": [
                "FUN_00102c25"
            ],
            "code": "\n\n\nint chmod(char *__file,__mode_t __mode)\n\n{\n  int iVar1;\n  \n  iVar1 = chmod(__file,__mode);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102430",
            "entrypoint": "0x00102430",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102440": {
            "called": [
                "FUN_0010e250"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n",
            "current_name": "FUN_00102440",
            "entrypoint": "0x00102440",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102450": {
            "called": [
                "FUN_0010e258"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_00102450",
            "entrypoint": "0x00102450",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102460": {
            "called": [
                "FUN_0010e260"
            ],
            "calling": [
                "FUN_00105c00",
                "FUN_00105db0"
            ],
            "code": "\n\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = open(__file,__oflag);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102460",
            "entrypoint": "0x00102460",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102470": {
            "called": [
                "FUN_0010e268"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105db0",
                "FUN_00105a68"
            ],
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n",
            "current_name": "FUN_00102470",
            "entrypoint": "0x00102470",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102480": {
            "called": [
                "FUN_0010e270"
            ],
            "calling": [
                "FUN_0010315d",
                "FUN_00107690",
                "FUN_0010394a",
                "FUN_00105db0",
                "FUN_00107c10",
                "FUN_00102d2f",
                "FUN_00107650",
                "FUN_0010342d",
                "FUN_00105300",
                "FUN_00105a68"
            ],
            "code": "\nvoid xexit(void)\n\n{\n                    \n  xexit();\n}\n\n",
            "current_name": "FUN_00102480",
            "entrypoint": "0x00102480",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102490": {
            "called": [
                "FUN_0010e278"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105db0",
                "FUN_00102d2f",
                "FUN_00102710",
                "FUN_00105300"
            ],
            "code": "\nvoid bfd_close(void)\n\n{\n  bfd_close();\n  return;\n}\n\n",
            "current_name": "FUN_00102490",
            "entrypoint": "0x00102490",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001024a0": {
            "called": [
                "FUN_0010e280"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00105a68"
            ],
            "code": "\n\n\nvoid perror(char *__s)\n\n{\n  perror(__s);\n  return;\n}\n\n",
            "current_name": "FUN_001024a0",
            "entrypoint": "0x001024a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001024b0": {
            "called": [
                "FUN_0010e288"
            ],
            "calling": [
                "FUN_001078c0"
            ],
            "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 = vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001024b0",
            "entrypoint": "0x001024b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001024c0": {
            "called": [
                "FUN_0010e290"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00105300"
            ],
            "code": "\nvoid bfd_check_format_matches(void)\n\n{\n  bfd_check_format_matches();\n  return;\n}\n\n",
            "current_name": "FUN_001024c0",
            "entrypoint": "0x001024c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001024d0": {
            "called": [
                "FUN_0010e298"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00107c20"
            ],
            "code": "\nvoid bfd_errmsg(void)\n\n{\n  bfd_errmsg();\n  return;\n}\n\n",
            "current_name": "FUN_001024d0",
            "entrypoint": "0x001024d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001024e0": {
            "called": [
                "FUN_0010e2a0"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_find_target(void)\n\n{\n  bfd_find_target();\n  return;\n}\n\n",
            "current_name": "FUN_001024e0",
            "entrypoint": "0x001024e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001024f0": {
            "called": [
                "FUN_0010e2a8"
            ],
            "calling": [
                "FUN_00102d8c",
                "FUN_001079c0"
            ],
            "code": "\n\n\nint sprintf(char *__s,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = sprintf(__s,__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001024f0",
            "entrypoint": "0x001024f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102500": {
            "called": [
                "FUN_0010e2b0"
            ],
            "calling": [
                "FUN_001075e0",
                "FUN_001033b0"
            ],
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n",
            "current_name": "FUN_00102500",
            "entrypoint": "0x00102500",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102510": {
            "called": [
                "FUN_0010e2b8"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00102c25",
                "FUN_00103a78"
            ],
            "code": "\n\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fwrite(__ptr,__size,__n,__s);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_00102510",
            "entrypoint": "0x00102510",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102520": {
            "called": [
                "FUN_0010e2c0"
            ],
            "calling": [
                "FUN_00103c60",
                "FUN_00105af0",
                "FUN_00102710"
            ],
            "code": "\nvoid bfd_check_format(void)\n\n{\n  bfd_check_format();\n  return;\n}\n\n",
            "current_name": "FUN_00102520",
            "entrypoint": "0x00102520",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102530": {
            "called": [
                "FUN_0010e2c8"
            ],
            "calling": [
                "FUN_00103c60",
                "FUN_00105af0",
                "FUN_00105300"
            ],
            "code": "\nvoid bfd_openr_next_archived_file(void)\n\n{\n  bfd_openr_next_archived_file();\n  return;\n}\n\n",
            "current_name": "FUN_00102530",
            "entrypoint": "0x00102530",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102540": {
            "called": [
                "FUN_0010e2d8"
            ],
            "calling": [
                "FUN_00102c25",
                "FUN_00103a78"
            ],
            "code": "\nvoid bfd_bread(void)\n\n{\n  bfd_bread();\n  return;\n}\n\n",
            "current_name": "FUN_00102540",
            "entrypoint": "0x00102540",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102550": {
            "called": [
                "FUN_0010e2e0"
            ],
            "calling": [
                "FUN_00102fd7",
                "FUN_001025a0",
                "FUN_00102c25",
                "FUN_00103c60",
                "FUN_00103a78",
                "FUN_00102f1e"
            ],
            "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strerror(__errnum);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_00102550",
            "entrypoint": "0x00102550",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102560": {
            "called": [
                "FUN_0010e2e8"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\n\n\nint getc(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = getc(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102560",
            "entrypoint": "0x00102560",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102570": {
            "called": [
                "FUN_0010e2f0"
            ],
            "calling": [
                "FUN_00103c60",
                "FUN_001058b0"
            ],
            "code": "\nvoid bfd_fdopenw(void)\n\n{\n  bfd_fdopenw();\n  return;\n}\n\n",
            "current_name": "FUN_00102570",
            "entrypoint": "0x00102570",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102580": {
            "called": [
                "FUN_0010e300"
            ],
            "calling": [
                "FUN_00102c25",
                "FUN_00103a78"
            ],
            "code": "\nvoid bfd_seek(void)\n\n{\n  bfd_seek();\n  return;\n}\n\n",
            "current_name": "FUN_00102580",
            "entrypoint": "0x00102580",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102590": {
            "called": [
                "FUN_0010e308"
            ],
            "calling": [
                "FUN_00105d60"
            ],
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n",
            "current_name": "FUN_00102590",
            "entrypoint": "0x00102590",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001025a0": {
            "additional_data": {
                "FUN_001025a0": {
                    "check_file_existence": 1,
                    "file_error_handler": 1,
                    "file_locate": 1,
                    "file_not_found_error": 8,
                    "file_not_found_warning": 1,
                    "file_warning": 1,
                    "find_file": 1,
                    "handle_error_and_warning": 1,
                    "handle_file_error": 9,
                    "handle_file_not_found_error": 1,
                    "handle_file_operation_error": 1,
                    "improved_error_handler": 1,
                    "locate_warning": 1,
                    "process_error": 2
                },
                "__errno_location": {
                    "get_errno_location": 1
                },
                "dcgettext": {
                    "get_error_message": 1,
                    "get_localized_message": 1,
                    "translate_string": 1
                },
                "non_fatal": {
                    "handle_non_fatal_error": 2,
                    "handle_non_fatal_errors": 1,
                    "report_error": 1
                },
                "piVar1": {
                    "err_ptr": 1,
                    "errno_location": 2,
                    "errno_pointer": 2,
                    "errno_ptr": 15,
                    "error_code": 2,
                    "error_location": 1,
                    "error_location_ptr": 1,
                    "error_number": 1,
                    "error_pointer": 3,
                    "error_ptr": 1
                },
                "uVar2": {
                    "err_msg": 2,
                    "error_message": 24,
                    "error_msg": 2,
                    "error_string": 2,
                    "result": 1
                }
            },
            "called": [
                "FUN_00107920",
                "FUN_00102060",
                "FUN_00102550",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_001052a0"
            ],
            "code": "\nundefined8 handle_file_operation_error_001025a0(void)\n\n{\n  int *errno_ptr;\n  undefined8 error_message;\n  \n  errno_ptr = get_errno_location();\n  if (*errno_ptr == 2) {\n    error_message = get_localized_message(0,\"\\'%s\\': No such file\",5);\n    handle_non_fatal_error(error_message);\n  }\n  else {\n    strerror(*errno_ptr);\n    error_message = get_localized_message(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n    handle_non_fatal_error(error_message);\n  }\n  return 0xffffffffffffffff;\n}\n\n",
            "current_name": "handle_file_operation_error_001025a0",
            "entrypoint": "0x001025a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001025a0": "handle_file_operation_error_001025a0",
                "__errno_location": "get_errno_location",
                "dcgettext": "get_localized_message",
                "non_fatal": "handle_non_fatal_error",
                "piVar1": "errno_ptr",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010266f": {
            "additional_data": {
                "FUN_0010266f": {
                    "print_supported_targets": 30
                },
                "__ptr": {
                    "target_list": 30,
                    "target_list_ptr": 1
                },
                "lVar1": {
                    "current_target": 5,
                    "current_target_item": 1,
                    "current_target_value": 10,
                    "current_value": 3,
                    "target": 3,
                    "target_address": 1,
                    "target_code": 1,
                    "target_identifier": 1,
                    "target_name": 2,
                    "target_ptr": 1,
                    "target_value": 2
                },
                "param_1": {
                    "selected_target": 1,
                    "target": 26,
                    "target_name": 4
                },
                "param_2": {
                    "output": 1,
                    "output_file": 30
                },
                "pcVar2": {
                    "error_message": 1,
                    "format_string": 1,
                    "header_message": 1,
                    "localized_string": 1,
                    "localized_text": 1,
                    "message": 19,
                    "msg": 1,
                    "target_message": 3,
                    "text": 1,
                    "translation": 1
                },
                "plVar3": {
                    "current_target": 22,
                    "current_target_ptr": 1,
                    "ptr": 2,
                    "target_ptr": 6
                }
            },
            "called": [
                "FUN_00102030",
                "FUN_00102280",
                "FUN_00102210",
                "FUN_00102310",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_0010394a",
                "FUN_0010342d"
            ],
            "code": "\nvoid print_supported_targets_0010266f(long target,FILE *output_file)\n\n{\n  long current_target_value;\n  char *message;\n  long *target_list;\n  long *current_target;\n  \n  if (target == 0) {\n    message = (char *)dcgettext(0,\"Supported targets:\",5);\n    fprintf(output_file,message);\n  }\n  else {\n    message = (char *)dcgettext(0,\"%s: supported targets:\",5);\n    fprintf(output_file,message,target);\n  }\n  target_list = (long *)bfd_target_list();\n  current_target = target_list;\n  while( true ) {\n    current_target_value = *current_target;\n    current_target = current_target + 1;\n    if (current_target_value == 0) break;\n    fprintf(output_file,\" %s\");\n  }\n  fputc(10,output_file);\n  free(target_list);\n  return;\n}\n\n",
            "current_name": "print_supported_targets_0010266f",
            "entrypoint": "0x0010266f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010266f": "print_supported_targets_0010266f",
                "__ptr": "target_list",
                "lVar1": "current_target_value",
                "param_1": "target",
                "param_2": "output_file",
                "pcVar2": "message",
                "plVar3": "current_target"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102710": {
            "additional_data": {
                "DAT_0010d5f0": {
                    "extracted_archived_file": 1,
                    "extracted_file_ptr": 1,
                    "global_library_variable": 1,
                    "global_variable_1": 1,
                    "input_bfd_handle": 2,
                    "library_data": 3,
                    "library_format": 1
                },
                "DAT_0010d5f8": {
                    "convert_flag": 2,
                    "convert_to_thin": 1,
                    "enable_thin_conversion": 1,
                    "flag2": 1,
                    "global_variable_2": 1,
                    "is_existing_library": 1,
                    "is_existing_thin_library": 1,
                    "thin_format_conversion": 1
                },
                "DAT_0010d610": {
                    "check_library_conversion": 1,
                    "condition_flag2": 1,
                    "global_variable_3": 1,
                    "is_conversion_required": 1
                },
                "DAT_0010d618": {
                    "created_library": 1,
                    "error_code": 1,
                    "extra_data_2": 1,
                    "extracted_file_ptr": 1,
                    "global_variable_4": 1,
                    "output_data": 1,
                    "result": 1,
                    "temp_variable": 1,
                    "unaff_stack_var2": 1
                },
                "DAT_0010d64c": {
                    "another_global_variable": 1,
                    "archive_file_type": 1,
                    "archived_file_format": 1,
                    "archived_file_type": 1,
                    "flag3": 1,
                    "format": 1,
                    "format_type": 1,
                    "global_variable_5": 1,
                    "some_flag": 1
                },
                "FUN_00102710": {
                    "analyze_binary": 1,
                    "convert_library_format": 1,
                    "convert_library_formats": 1,
                    "decompile_and_improve": 1,
                    "extract_and_convert_archived_files": 1,
                    "extract_archived_files": 6,
                    "extract_archives": 1,
                    "extract_bfd_files": 1,
                    "extract_file_contents": 1,
                    "identify_library_format": 1,
                    "load_and_convert_files": 1,
                    "load_and_convert_libraries": 1,
                    "load_and_convert_library": 1,
                    "load_library": 1,
                    "load_object_file": 2,
                    "open_and_convert_archived_library": 1,
                    "open_and_convert_library": 1,
                    "parse_and_convert_binary": 1,
                    "parse_binary": 1,
                    "parse_library_file": 1,
                    "process_binary_file": 1,
                    "read_and_convert_bfd_files": 1,
                    "read_and_convert_libraries": 1,
                    "read_archived_file": 1,
                    "read_bfd_format": 1
                },
                "PTR_DAT_0010d610": {
                    "original_data_pointer": 1
                },
                "PTR_DAT_0010d618": {
                    "original_data_pointer_2": 1
                },
                "PTR_FUN_00102710": {
                    "original_function_pointer": 1
                },
                "_DAT_0010d610": {
                    "condition_flag": 1,
                    "enable_conversion": 1,
                    "extra_data": 1,
                    "flag": 2,
                    "other_global_variable": 1,
                    "should_list_formats": 1
                },
                "bVar3": {
                    "conversion_flag": 1,
                    "convert_existing_library": 1,
                    "convert_flag": 1,
                    "convert_to_thin": 1,
                    "is_archived_file": 1,
                    "is_convertible": 1,
                    "is_thin_format": 1,
                    "is_thin_library": 13,
                    "thin_flag": 1,
                    "thin_format_flag": 1,
                    "thin_library": 3,
                    "thin_library_flag": 6
                },
                "bfd_check_format": {
                    "check_format": 1
                },
                "bfd_check_format_matches": {
                    "check_output_format_matches": 1
                },
                "bfd_close": {
                    "close_bfd_handle": 1
                },
                "bfd_get_error": {
                    "get_error_code": 1
                },
                "bfd_nonfatal": {
                    "report_nonfatal_error": 1
                },
                "bfd_openr": {
                    "open_input_file": 1
                },
                "bfd_openr_next_archived_file": {
                    "get_next_archived_file_handle": 1
                },
                "bfd_openw": {
                    "open_output_file": 1
                },
                "bfd_set_format": {
                    "set_output_format": 1
                },
                "cVar2": {
                    "check_format_result": 2,
                    "check_result": 2,
                    "format_check": 3,
                    "format_check_result": 8,
                    "format_match": 1,
                    "format_result": 1,
                    "format_valid": 5,
                    "is_format_valid": 1,
                    "is_valid_format": 8
                },
                "fatal": {
                    "report_fatal_error": 1
                },
                "iVar4": {
                    "bfd_error": 2,
                    "bfd_error_code": 2,
                    "error": 3,
                    "error_code": 23,
                    "error_var": 1
                },
                "in_stack_00000008": {
                    "additional_input": 1,
                    "additional_param_2": 1,
                    "archive_member_name": 1,
                    "archived_files_info": 1,
                    "extra_data": 1,
                    "file_type": 1,
                    "format_flags": 1,
                    "format_name": 1,
                    "format_options": 2,
                    "format_string": 1,
                    "input_flags": 1,
                    "matching_format": 1,
                    "matching_formats": 2,
                    "parameter_1": 1,
                    "stack_param": 2,
                    "stack_parameter": 3,
                    "stack_var": 1,
                    "stack_variable": 1,
                    "target_format": 1
                },
                "lVar1": {
                    "bfd_handle": 1
                },
                "lVar5": {
                    "archived_file": 1,
                    "archived_file_handle": 1,
                    "archived_library_handle": 1,
                    "bfd_file": 2,
                    "bfd_file_handle": 3,
                    "bfd_handle": 13,
                    "file_descriptor": 3,
                    "file_handle": 3,
                    "file_ptr": 2,
                    "library_handle": 2
                },
                "list_matching_formats": {
                    "display_matching_formats": 1
                },
                "non_fatal": {
                    "report_nonfatal_error": 1
                },
                "plVar1": {
                    "archived_file": 1,
                    "archived_file_handle": 1,
                    "archived_file_handle_ptr": 1,
                    "archived_file_list": 1,
                    "archived_file_ptr": 4,
                    "archived_files": 1,
                    "archived_files_array": 1,
                    "archived_files_ptr": 1,
                    "current_archived_file": 1,
                    "current_file": 2,
                    "current_file_ptr": 2,
                    "file_handles": 1,
                    "file_list_ptr": 1,
                    "file_ptr": 2,
                    "next_file_handle": 1,
                    "pointer": 1
                },
                "puVar8": {
                    "bfd_output": 1,
                    "bfd_ptr": 1,
                    "library_ptr": 1,
                    "new_library_handle": 1,
                    "output_bfd": 2,
                    "output_bfd_handle": 3,
                    "output_bfd_ptr": 1,
                    "output_file": 3,
                    "output_file_handle": 4,
                    "output_file_ptr": 2,
                    "output_handle": 8,
                    "write_bfd_handle": 1,
                    "write_handle": 2
                },
                "stack0x00000008": {
                    "format_info": 1,
                    "match_data": 1,
                    "stack_parameter_2": 1
                },
                "uVar6": {
                    "err_msg": 1,
                    "error_message": 23,
                    "error_msg": 2,
                    "message": 1
                },
                "uVar7": {
                    "error_msg": 1,
                    "file_path": 1,
                    "library_name": 24,
                    "library_path": 1
                },
                "unaff_RBP": {
                    "additional_argument": 1,
                    "additional_data": 2,
                    "additional_param": 2,
                    "additional_parameter": 1,
                    "archive_format": 1,
                    "archived_library_name": 1,
                    "backup_rbp": 1,
                    "current_function": 1,
                    "data": 1,
                    "destination_handle": 1,
                    "error_code": 1,
                    "exit_value": 1,
                    "extra_data": 1,
                    "extra_parameter": 1,
                    "library_handle": 1,
                    "output_format": 1,
                    "return_value": 1,
                    "saved_register": 1,
                    "temporary_handle": 1,
                    "temporary_var": 1,
                    "unaff_stack_var": 1,
                    "unaffected_rbp": 1,
                    "unaffected_register": 1
                },
                "xexit": {
                    "exit_program": 1
                }
            },
            "called": [
                "FUN_00102130",
                "FUN_00102490",
                "FUN_00102520"
            ],
            "calling": [
                "FUN_00105300"
            ],
            "code": "\n\n\nundefined8 * extract_and_convert_archived_files_00102710(void)\n\n{\n  long *archived_file_ptr;\n  char is_valid_format;\n  byte is_thin_library;\n  int error_code;\n  long bfd_handle;\n  undefined8 error_message;\n  undefined8 library_name;\n  undefined8 *output_handle;\n  undefined8 additional_param;\n  undefined8 stack_parameter;\n  \n  bfd_handle = open_input_file();\n  if (bfd_handle != 0) {\n    is_valid_format = check_format(bfd_handle,1);\n    if (is_valid_format != '\\0') {\n      DAT_0010d5f0 = **(undefined8 **)(bfd_handle + 8);\n    }\n    close_bfd_handle(bfd_handle);\n  }\n  output_handle = (undefined8 *)open_output_file();\n  if (((output_handle != (undefined8 *)0x0) && (is_valid_format = set_output_format(output_handle,2), is_valid_format != '\\0')) &&\n     (is_valid_format = close_bfd_handle(output_handle), is_valid_format != '\\0')) {\n    if (_DAT_0010d610 == 0) goto LAB_00102826;\n    goto LAB_001053b7;\n  }\n  bfd_report_fatal_error();\n  do {\n    is_thin_library = *(byte *)((long)output_handle + 0x49) >> 4 & 1;\n    if (DAT_0010d5f8 == '\\0') {\n      if (is_thin_library != 0) {\n        library_name = *output_handle;\n        error_message = dcgettext(0,\"Cannot convert existing thin library %s to normal format\",5);\n        report_fatal_error(error_message,library_name);\n        goto LAB_00102812;\n      }\n    }\n    else if (is_thin_library == 0) {\n      library_name = *output_handle;\n      error_message = dcgettext(0,\"Cannot convert existing library %s to thin format\",5);\n      report_fatal_error(error_message,library_name);\nLAB_001027cb:\n      report_nonfatal_error();\n      error_code = get_error_code();\n      if (error_code == 0xd) {\nLAB_00102812:\n        display_matching_formats(stack_parameter);\n      }\n                    \n      exit_program(1);\n    }\n    do {\n      archived_file_ptr = output_handle + 0x1e;\n      for (bfd_handle = get_next_archived_file_handle(output_handle,0); bfd_handle != 0;\n          bfd_handle = get_next_archived_file_handle(output_handle,bfd_handle)) {\n        *archived_file_ptr = bfd_handle;\n        archived_file_ptr = (long *)(bfd_handle + 0xf0);\n      }\n      *archived_file_ptr = 0;\n      error_code = get_error_code();\n      if (error_code == 9) {\n        return output_handle;\n      }\n      do {\n        bfd_report_fatal_error();\nLAB_00102826:\n        library_name = dcgettext(0,\"creating %s\",5);\n        report_nonfatal_error(library_name);\nLAB_001053b7:\n        DAT_0010d618 = additional_param;\n        output_handle = (undefined8 *)open_input_file();\n      } while (output_handle == (undefined8 *)0x0);\n      is_valid_format = check_output_format_matches(output_handle,2,&stack_parameter_2);\n      if (is_valid_format == '\\0') goto LAB_001027cb;\n    } while (((DAT_0010d64c != 2) && (DAT_0010d64c != 7)) ||\n            (bfd_handle = get_next_archived_file_handle(output_handle,0), bfd_handle == 0));\n  } while( true );\n}\n\n",
            "current_name": "extract_and_convert_archived_files_00102710",
            "entrypoint": "0x00102710",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102710": "extract_and_convert_archived_files_00102710",
                "bVar3": "is_thin_library",
                "bfd_check_format": "check_format",
                "bfd_check_format_matches": "check_output_format_matches",
                "bfd_close": "close_bfd_handle",
                "bfd_get_error": "get_error_code",
                "bfd_nonfatal": "report_nonfatal_error",
                "bfd_openr": "open_input_file",
                "bfd_openr_next_archived_file": "get_next_archived_file_handle",
                "bfd_openw": "open_output_file",
                "bfd_set_format": "set_output_format",
                "cVar2": "is_valid_format",
                "fatal": "report_fatal_error",
                "iVar4": "error_code",
                "in_stack_00000008": "stack_parameter",
                "lVar1": "bfd_handle",
                "lVar5": "bfd_handle",
                "list_matching_formats": "display_matching_formats",
                "non_fatal": "report_nonfatal_error",
                "plVar1": "archived_file_ptr",
                "puVar8": "output_handle",
                "stack0x00000008": "stack_parameter_2",
                "uVar6": "error_message",
                "uVar7": "library_name",
                "unaff_RBP": "additional_param",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010284b": {
            "additional_data": {
                "FUN_0010284b": {
                    "get_constant_one": 2,
                    "get_constant_value": 1,
                    "get_default_value": 1,
                    "get_integer_value": 1,
                    "get_one": 14,
                    "get_result": 1,
                    "get_return_value": 7,
                    "get_true_value": 1,
                    "initialize": 1,
                    "retrieve_data": 1,
                    "return_one": 1
                },
                "return": {
                    "result": 3,
                    "return_value": 1
                },
                "return_value": {
                    "result": 1
                },
                "undefined8": {
                    "int": 1,
                    "uint64_t": 10,
                    "unsigned_long": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_00107650"
            ],
            "code": "\nuint64_t get_constant_one_0010284b(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "get_constant_one_0010284b",
            "entrypoint": "0x0010284b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010284b": "get_constant_one_0010284b",
                "return": "result",
                "undefined8": "uint64_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010285f": {
            "additional_data": {
                "DAT_0010d630": {
                    "max_match_count": 1,
                    "maximum_matching_count": 1
                },
                "DAT_0010d634": {
                    "check_condition": 1,
                    "check_flag": 1,
                    "comparison_flag": 1,
                    "condition_flag": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "is_flag_enabled": 1,
                    "is_option_enabled": 2,
                    "is_option_set": 1,
                    "is_special_comparison": 1,
                    "some_flag": 1
                },
                "FUN_0010285f": {
                    "display_archive_entry_not_found_error": 1,
                    "print_archive_entry_error_message": 2,
                    "print_archive_entry_not_found": 9,
                    "print_archive_entry_not_found_error": 3,
                    "print_entry_error_message": 2,
                    "print_entry_not_found_in_archive": 1,
                    "print_error_message": 3,
                    "print_missing_archive_entry": 1,
                    "print_missing_entries": 4,
                    "print_missing_entry": 1,
                    "print_missing_entry_message": 1,
                    "print_no_entry_error_message": 1,
                    "print_no_entry_in_archive": 2
                },
                "LAB_0010553e": {
                    "continue_loop": 1,
                    "loop_end": 1
                },
                "_DAT_0010d630": {
                    "counter": 1,
                    "limit_counter": 1,
                    "max_entry_count": 1,
                    "max_match_count": 1,
                    "max_matched_entries": 1,
                    "max_matching_entries_count": 1,
                    "threshold": 1
                },
                "__format": {
                    "error_message": 11,
                    "error_message_format": 8,
                    "format_string": 8,
                    "message_format": 1
                },
                "_stderr": {
                    "error_output": 1,
                    "error_stream": 1,
                    "standard_error": 2,
                    "standard_error_stream": 4,
                    "stderr": 1
                },
                "code_r0x0010285f": {
                    "loop_start": 1,
                    "print_error_message": 1,
                    "process_next_entry": 1,
                    "start_loop": 1
                },
                "dcgettext": {
                    "get_error_message": 1,
                    "get_localized_error_message": 1,
                    "get_localized_error_string": 1,
                    "get_localized_message": 1,
                    "get_localized_text": 2,
                    "get_translation": 1
                },
                "filename_cmp": {
                    "compare_entry_names": 1,
                    "compare_file_names": 1,
                    "compare_filenames": 4
                },
                "fprintf": {
                    "print_error": 1,
                    "print_error_message": 2,
                    "print_formatted": 2,
                    "print_formatted_message": 1,
                    "print_to_standard_error": 1
                },
                "iStack000000000000000c": {
                    "counter": 3,
                    "entry_count": 2,
                    "entry_counter": 3,
                    "entry_index": 2,
                    "entry_match_count": 1,
                    "file_count": 1,
                    "found_entries_count": 2,
                    "match_count": 2,
                    "matched_entries_count": 2,
                    "matching_counter": 2,
                    "matching_entries_count": 3,
                    "matching_entry_count": 4,
                    "num_matched_entries": 1,
                    "num_matches": 1,
                    "num_printed_entries": 2
                },
                "iVar1": {
                    "comparison_result": 2,
                    "filename_comparison_result": 1
                },
                "lVar2": {
                    "archive_entry": 1,
                    "current_entry": 7,
                    "current_entry_name": 2,
                    "entry": 2,
                    "entry_address": 1,
                    "entry_data": 1,
                    "entry_name": 1,
                    "entry_pointer": 2,
                    "file_path": 1,
                    "normalized_entry": 5,
                    "normalized_filename": 4
                },
                "normalize": {
                    "normalize_entry": 1,
                    "normalize_entry_name": 3,
                    "normalize_file_name": 1,
                    "normalize_filename": 1
                },
                "plVar3": {
                    "alternate_entry": 2,
                    "archive_entry": 3,
                    "archive_entry_ptr": 1,
                    "entry_pointer2": 1,
                    "fallback_entry": 5,
                    "fallback_entry_pointer": 1,
                    "fallback_entry_ptr": 1,
                    "fallback_path": 1,
                    "found_entry": 1,
                    "next_entry": 6,
                    "next_entry_data": 1,
                    "normalized_entry": 1,
                    "normalized_entry_ptr": 1,
                    "replacement_filename_ptr": 1
                },
                "plVar5": {
                    "archive": 1,
                    "archive_entry": 2,
                    "current_archive": 1,
                    "current_archive_entry": 1,
                    "current_entry": 13,
                    "current_entry_data": 1,
                    "current_entry_ptr": 2,
                    "current_pointer": 1,
                    "entry": 3,
                    "entry_ptr": 2,
                    "next_entry": 2
                },
                "stack0x00000010": {
                    "additional_data": 1,
                    "local_variables_stack": 1,
                    "stack_data": 1,
                    "stack_variable": 1
                },
                "uVar4": {
                    "archive_entry": 1,
                    "current_archive_entry": 1,
                    "current_entry": 4,
                    "current_entry_name": 1,
                    "current_file": 1,
                    "current_filename": 2,
                    "entry": 2,
                    "entry_name": 16,
                    "normalized_entry_name": 1
                },
                "unaff_R12": {
                    "archive": 5,
                    "archive_base": 1,
                    "archive_base_address": 3,
                    "archive_context": 1,
                    "archive_data": 2,
                    "archive_header": 1,
                    "archive_pointer": 3,
                    "archive_ptr": 8,
                    "archive_structure": 1,
                    "base_address": 3,
                    "base_pointer": 1,
                    "context_address": 1,
                    "context_ptr": 1
                },
                "unaff_R13D": {
                    "entry_count": 9,
                    "iteration_count": 1,
                    "num_entries": 5,
                    "remaining_count": 1,
                    "remaining_entries": 14,
                    "remaining_entries_count": 1
                },
                "unaff_R14": {
                    "archive_entry": 1,
                    "archive_entry_list": 1,
                    "entry_array": 1,
                    "entry_list": 4,
                    "entry_name_list": 2,
                    "entry_name_pointer": 1,
                    "entry_names": 13,
                    "entry_names_list": 1,
                    "entry_ptr": 2,
                    "entry_ptr_array": 1,
                    "file_names": 2,
                    "filename_list": 1,
                    "filenames": 1
                },
                "unaff_RBP": {
                    "callback": 9,
                    "callback_func": 1,
                    "callback_function": 10,
                    "function_callback": 1,
                    "function_pointer": 7,
                    "next_function": 2
                }
            },
            "called": [
                "FUN_00102310",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00105480"
            ],
            "code": "\n\n\nvoid print_archive_entry_not_found_error_0010285f(void)\n\n{\n  int comparison_result;\n  char *error_message;\n  long current_entry;\n  long *next_entry;\n  undefined8 entry_name;\n  long *current_entry;\n  code *callback_function;\n  long archive_ptr;\n  int remaining_entries;\n  undefined8 *entry_names;\n  int matching_entry_count;\n  \nprint_error_message:\n  entry_name = *entry_names;\n  error_message = (char *)get_localized_text(0,\"no entry %s in archive\\n\",5);\n  print_error_message(standard_error_stream,error_message,entry_name);\ncontinue_loop:\n  entry_names = entry_names + 1;\n  remaining_entries = remaining_entries + -1;\n  if (remaining_entries == 0) {\n    return;\n  }\n  current_entry = *(long **)(archive_ptr + 0xf0);\n  matching_entry_count = 0;\n  do {\n    if (current_entry == (long *)0x0) goto print_error_message;\n    if (*(int *)((long)current_entry + 0xac) == 0) {\n      current_entry = *current_entry;\n      if (current_entry == 0) {\n        next_entry = (long *)current_entry[0x1d];\n        if ((long *)current_entry[0x1d] == (long *)0x0) {\n          next_entry = current_entry;\n        }\n        (**(code **)(next_entry[1] + 0x1e8))(current_entry,&local_variables_stack);\n      }\n      else if (((*(byte *)(archive_ptr + 0x49) & 0x10) == 0) || (current_entry = normalize_entry_name(), current_entry != 0)) {\n        entry_name = normalize_entry_name(*entry_names);\n        comparison_result = compare_filenames(entry_name,current_entry);\n        if ((comparison_result == 0) &&\n           ((DAT_0010d634 == '\\0' ||\n            (matching_entry_count = matching_entry_count + 1,\n            matching_entry_count == _DAT_0010d630)))) break;\n      }\n    }\n    current_entry = (long *)current_entry[0x1e];\n  } while( true );\n  (*callback_function)();\n  *(undefined4 *)((long)current_entry + 0xac) = 1;\n  goto continue_loop;\n}\n\n",
            "current_name": "print_archive_entry_not_found_error_0010285f",
            "entrypoint": "0x0010285f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010285f": "print_archive_entry_not_found_error_0010285f",
                "LAB_0010553e": "continue_loop",
                "__format": "error_message",
                "_stderr": "standard_error_stream",
                "code_r0x0010285f": "print_error_message",
                "dcgettext": "get_localized_text",
                "filename_cmp": "compare_filenames",
                "fprintf": "print_error_message",
                "iStack000000000000000c": "matching_entry_count",
                "iVar1": "comparison_result",
                "lVar2": "current_entry",
                "normalize": "normalize_entry_name",
                "plVar3": "next_entry",
                "plVar5": "current_entry",
                "stack0x00000010": "local_variables_stack",
                "uVar4": "entry_name",
                "unaff_R12": "archive_ptr",
                "unaff_R13D": "remaining_entries",
                "unaff_R14": "entry_names",
                "unaff_RBP": "callback_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001028ed": {
            "additional_data": {
                "FUN_001028ed": {
                    "check_and_update_files": 1,
                    "extract_and_improve_binary": 1,
                    "extract_archive_files": 1,
                    "extract_archives": 1,
                    "extract_filenames": 1,
                    "extract_files_from_binary": 1,
                    "find_and_replace_files": 1,
                    "process_binary": 5,
                    "process_binary_file": 1,
                    "process_binary_function": 1,
                    "process_files": 5
                },
                "FUN_00102943": {
                    "sub_function9": 1,
                    "sub_function_9": 1
                },
                "FUN_00103172": {
                    "sub_function8": 1,
                    "sub_function_8": 1
                },
                "FUN_00105830": {
                    "sub_function1": 1,
                    "sub_function_1": 1
                },
                "FUN_00105870": {
                    "sub_function2": 1,
                    "sub_function_2": 1
                },
                "FUN_001058b0": {
                    "sub_function5": 1,
                    "sub_function_5": 1
                },
                "FUN_00105ae0": {
                    "sub_function6": 1,
                    "sub_function_6": 1
                },
                "FUN_00105af0": {
                    "sub_function4": 1,
                    "sub_function_4": 1
                },
                "FUN_00107690": {
                    "sub_function7": 1,
                    "sub_function_7": 1
                },
                "FUN_00107c10": {
                    "sub_function3": 1,
                    "sub_function_3": 1
                },
                "__errno_location": {
                    "errno_location": 1
                },
                "__s": {
                    "base_name_2": 1,
                    "char_pointer_s": 1,
                    "char_ptr3": 1,
                    "char_ptr_s": 2,
                    "char_ptr_var3": 1,
                    "char_ptr_var_11": 1,
                    "char_ptr_var_3": 1,
                    "char_ptr_var_s": 1,
                    "char_ptr_variable_3": 1,
                    "char_var1": 2,
                    "file_name_1": 1,
                    "new___s": 1,
                    "pointer_var_s": 1,
                    "s1": 1,
                    "str1": 3,
                    "str3": 1,
                    "string1": 2,
                    "string_1": 1,
                    "string_var1": 2,
                    "string_variable": 1,
                    "string_variable1": 1,
                    "temp11": 1,
                    "temp_var11": 1,
                    "var11": 1
                },
                "__s_00": {
                    "base_name_3": 1,
                    "char_pointer_s00": 1,
                    "char_ptr4": 1,
                    "char_ptr_s00": 1,
                    "char_ptr_s_00": 1,
                    "char_ptr_var4": 1,
                    "char_ptr_var_12": 1,
                    "char_ptr_var_4": 1,
                    "char_ptr_var_s_00": 1,
                    "char_ptr_variable_4": 1,
                    "char_var2": 2,
                    "file_name_2": 1,
                    "new___s_00": 1,
                    "pointer_var_s00": 1,
                    "s2": 1,
                    "str2": 3,
                    "str4": 1,
                    "string2": 2,
                    "string_2": 1,
                    "string_var2": 2,
                    "string_variable2": 1,
                    "string_variable_1": 1,
                    "temp12": 1,
                    "temp_var12": 1,
                    "var12": 1
                },
                "ar_emul_default_append": {
                    "append_emul_default": 1
                },
                "ar_emul_default_replace": {
                    "replace_emul_default": 1
                },
                "bVar16": {
                    "ar_emul_result": 1,
                    "bool": 1,
                    "bool_var": 4,
                    "bool_var1": 4,
                    "bool_var16": 8,
                    "bool_variable": 1,
                    "bool_variable_1": 1,
                    "byte_var_17": 1,
                    "byte_variable_1": 1,
                    "new_b_var16": 1,
                    "temp23": 1,
                    "temp_var21": 1,
                    "temp_var_16": 1,
                    "var13": 1,
                    "var16": 1,
                    "var21": 1,
                    "var23": 1
                },
                "bVar17": {
                    "byte": 1,
                    "byte_val": 1,
                    "byte_var1": 1,
                    "byte_var17": 8,
                    "byte_var2": 3,
                    "byte_var3": 2,
                    "byte_var_18": 1,
                    "byte_var_2": 2,
                    "byte_variable2": 1,
                    "byte_variable_2": 2,
                    "new_b_var17": 1,
                    "temp24": 1,
                    "temp_var22": 1,
                    "temp_var_17": 1,
                    "var14": 1,
                    "var17": 1,
                    "var24": 1
                },
                "bVar2": {
                    "byte": 1,
                    "byte_var": 6,
                    "byte_var2": 10,
                    "byte_var_2": 1,
                    "byte_variable": 2,
                    "byte_variable_1": 1,
                    "is_default": 1,
                    "new_b_var2": 1,
                    "temp2": 1,
                    "temp_var2": 1,
                    "temp_var_2": 1,
                    "var2": 4
                },
                "bfd_fatal": {
                    "fatal_bfd": 1
                },
                "fatal": {
                    "fatal_func": 1
                },
                "filename_cmp": {
                    "filename_cmp": 1
                },
                "free": {
                    "free_func": 1
                },
                "get_pos_bfd": {
                    "get_pos_bfd": 1
                },
                "iVar3": {
                    "comparison_result": 1,
                    "counter": 1,
                    "int": 1,
                    "int_var": 6,
                    "int_var3": 9,
                    "int_var_3": 1,
                    "int_variable_1": 1,
                    "integer_variable": 2,
                    "new_i_var3": 1,
                    "temp3": 1,
                    "temp_var3": 1,
                    "temp_var_3": 1,
                    "var3": 4
                },
                "in_stack_00000078": {
                    "in_stack78": 1,
                    "in_stack_var00000078": 1,
                    "in_stack_var1": 1,
                    "in_stack_var78": 1,
                    "in_stack_var_1": 2,
                    "in_stack_variable1": 1,
                    "in_stack_variable_1": 2,
                    "local_var1": 1,
                    "long4": 1,
                    "long_in_stack00000078": 1,
                    "long_stacked_var1": 1,
                    "long_var4": 1,
                    "max_num_entries": 1,
                    "new_in_stack_00000078": 1,
                    "stack_var1": 7,
                    "stack_var_1": 1,
                    "temp_var23": 1,
                    "var15": 1,
                    "var22": 1,
                    "var27": 1,
                    "var_in_stack_00000078": 1
                },
                "in_stack_00000108": {
                    "in_stack108": 1,
                    "in_stack_var00000108": 1,
                    "in_stack_var108": 1,
                    "in_stack_var2": 1,
                    "in_stack_var_2": 2,
                    "in_stack_variable2": 1,
                    "in_stack_variable_2": 2,
                    "local_var2": 1,
                    "long5": 1,
                    "long_in_stack00000108": 1,
                    "long_stacked_var2": 1,
                    "long_var5": 1,
                    "max_archive_size": 1,
                    "new_in_stack_00000108": 1,
                    "stack_var2": 7,
                    "stack_var_2": 1,
                    "temp_var24": 1,
                    "var16": 1,
                    "var23": 1,
                    "var28": 1,
                    "var_in_stack_00000108": 1
                },
                "lVar10": {
                    "file_ptr": 1,
                    "long1": 1,
                    "long_var1": 6,
                    "long_var10": 8,
                    "long_var_1": 2,
                    "long_var_10": 1,
                    "long_variable1": 1,
                    "long_variable_1": 2,
                    "new_l_var10": 1,
                    "temp10": 1,
                    "temp_var10": 1,
                    "temp_var_10": 1,
                    "var10": 3,
                    "var6": 1
                },
                "lVar11": {
                    "current_file_ptr": 1,
                    "long2": 1,
                    "long_var11": 8,
                    "long_var2": 6,
                    "long_var_13": 1,
                    "long_var_2": 2,
                    "long_variable2": 1,
                    "long_variable_2": 2,
                    "new_l_var11": 1,
                    "temp13": 1,
                    "temp_var13": 1,
                    "temp_var_11": 1,
                    "var11": 2,
                    "var13": 1,
                    "var7": 1
                },
                "lbasename": {
                    "base_name": 1
                },
                "normalize": {
                    "normalize_func": 1
                },
                "param_1": {
                    "archive_formats": 1,
                    "archive_path": 1,
                    "arg1": 7,
                    "config": 1,
                    "file_list_pointer": 1,
                    "file_name": 3,
                    "function_arg": 1,
                    "input_param": 1,
                    "new_param_1": 1,
                    "param": 1,
                    "param1": 3,
                    "param_1": 8,
                    "param_filename": 1,
                    "param_ptr": 1
                },
                "param_2": {
                    "archive_flags": 1,
                    "arg2": 7,
                    "file_count": 1,
                    "file_descriptor": 1,
                    "file_size": 2,
                    "length": 1,
                    "mode": 1,
                    "new_param_2": 1,
                    "num_formats": 1,
                    "param": 1,
                    "param2": 3,
                    "param_2": 9,
                    "param_len": 1,
                    "param_mode": 1
                },
                "param_3": {
                    "param3": 1
                },
                "param_4": {
                    "param4": 1
                },
                "param_7": {
                    "archive_files": 1,
                    "arg3": 1,
                    "arg7": 1,
                    "arr7": 1,
                    "char_ptr_ptr5": 1,
                    "char_ptr_ptr_var5": 1,
                    "file_list": 1,
                    "file_list_pointer_1": 1,
                    "file_names": 1,
                    "file_paths_array": 1,
                    "input_files": 1,
                    "new_param_7": 1,
                    "output_path_list": 1,
                    "param7": 3,
                    "param_7": 8,
                    "param_archive_files": 1,
                    "param_pointer_variable": 1,
                    "param_ptr2": 1,
                    "pointer_param7": 1,
                    "var25": 1
                },
                "param_9": {
                    "ar_emul_flags": 1,
                    "arg3": 1,
                    "arg4": 1,
                    "arg9": 1,
                    "error_info": 1,
                    "new_param_9": 1,
                    "output": 1,
                    "output_file": 1,
                    "output_param": 1,
                    "param9": 3,
                    "param_9": 8,
                    "param_output_files": 1,
                    "param_ptr3": 1,
                    "param_variable": 1,
                    "result": 1,
                    "struct_param": 1,
                    "undefined8_var3": 1,
                    "undefined_var4": 1,
                    "undefined_variable_3": 1,
                    "var26": 1
                },
                "pcVar6": {
                    "char_pointer6": 1,
                    "char_pointer_variable1": 1,
                    "char_ptr1": 3,
                    "char_ptr6": 4,
                    "char_ptr_1": 1,
                    "char_ptr_var1": 1,
                    "char_ptr_var6": 2,
                    "char_ptr_var_1": 1,
                    "char_ptr_var_6": 1,
                    "char_ptr_variable_1": 1,
                    "file_name": 1,
                    "new_pc_var6": 1,
                    "pointer_char_var1": 1,
                    "pointer_to_character_variable": 1,
                    "pointer_var6": 2,
                    "ptr_char_var1": 1,
                    "str1": 1,
                    "temp6": 1,
                    "temp_var6": 1,
                    "temp_var_6": 1,
                    "var6": 3
                },
                "pcVar7": {
                    "base_name_1": 1,
                    "char_pointer7": 1,
                    "char_pointer_variable2": 1,
                    "char_ptr2": 3,
                    "char_ptr7": 4,
                    "char_ptr_2": 1,
                    "char_ptr_var2": 1,
                    "char_ptr_var7": 2,
                    "char_ptr_var_2": 1,
                    "char_ptr_var_7": 1,
                    "char_ptr_variable_2": 1,
                    "new_pc_var7": 1,
                    "pointer_char_var2": 1,
                    "pointer_to_character_variable_1": 1,
                    "pointer_var7": 2,
                    "ptr_char_var2": 1,
                    "str2": 1,
                    "temp7": 1,
                    "temp_var7": 1,
                    "temp_var_7": 1,
                    "var7": 3
                },
                "piVar5": {
                    "arr1": 1,
                    "errno_ptr": 1,
                    "int_pointer": 1,
                    "int_ptr": 4,
                    "int_ptr5": 4,
                    "int_ptr_var": 2,
                    "int_ptr_var5": 2,
                    "int_ptr_var_5": 1,
                    "int_ptr_variable_1": 1,
                    "new_pi_var5": 1,
                    "pointer_to_integer_variable": 1,
                    "pointer_var5": 2,
                    "pointer_variable": 1,
                    "ptr_int_var": 2,
                    "temp5": 1,
                    "temp_var5": 1,
                    "temp_var_5": 1,
                    "var5": 3
                },
                "ppcVar14": {
                    "arr3": 1,
                    "char_pointer_pointer14": 1,
                    "char_ptr_ptr1": 2,
                    "char_ptr_ptr14": 4,
                    "char_ptr_ptr2": 1,
                    "char_ptr_ptr_3": 1,
                    "char_ptr_ptr_var14": 2,
                    "char_ptr_ptr_var2": 1,
                    "char_ptr_ptr_var_1": 1,
                    "char_ptr_ptr_var_16": 1,
                    "char_ptr_ptr_variable_2": 1,
                    "double_char_pointer_variable1": 1,
                    "double_pointer_var14": 1,
                    "file_entry": 1,
                    "new_ppc_var14": 1,
                    "pointer_pointer_char_var2": 1,
                    "pointer_pointer_var14": 1,
                    "pointer_to_pointer_to_character_variable_1": 1,
                    "ptr2": 1,
                    "ptr_ptr_char_var1": 1,
                    "temp17": 1,
                    "temp_var16": 1,
                    "temp_var_14": 1,
                    "var15": 1,
                    "var17": 1
                },
                "ppcVar15": {
                    "arr6": 1,
                    "char_pointer_pointer15": 1,
                    "char_ptr_ptr15": 4,
                    "char_ptr_ptr4": 2,
                    "char_ptr_ptr5": 1,
                    "char_ptr_ptr_6": 1,
                    "char_ptr_ptr_var15": 2,
                    "char_ptr_ptr_var4": 1,
                    "char_ptr_ptr_var_4": 1,
                    "char_ptr_ptr_variable_5": 1,
                    "double_char_pointer_variable2": 1,
                    "double_pointer_var15": 1,
                    "new_ppc_var15": 1,
                    "pointer_pointer_char_var5": 1,
                    "pointer_pointer_var15": 1,
                    "pointer_to_pointer_to_character_variable_2": 1,
                    "previous_entry": 1,
                    "ptr5": 1,
                    "ptr_ptr_char_var4": 1,
                    "temp21": 1,
                    "temp_var19": 1,
                    "temp_var_15": 1,
                    "var19": 1,
                    "var21": 1
                },
                "ppcVar8": {
                    "arr2": 1,
                    "char_pointer_pointer8": 1,
                    "char_ptr_ptr": 2,
                    "char_ptr_ptr1": 1,
                    "char_ptr_ptr8": 4,
                    "char_ptr_ptr_1": 1,
                    "char_ptr_ptr_var": 1,
                    "char_ptr_ptr_var1": 1,
                    "char_ptr_ptr_var8": 2,
                    "char_ptr_ptr_var_8": 1,
                    "char_ptr_ptr_variable_1": 1,
                    "double_char_pointer_variable": 1,
                    "double_pointer_var8": 1,
                    "new_ppc_var8": 1,
                    "pointer_pointer_char_var1": 1,
                    "pointer_pointer_var8": 1,
                    "pointer_to_pointer_to_character_variable": 1,
                    "possible_base_names": 1,
                    "ptr_ptr_char_var": 1,
                    "temp8": 1,
                    "temp_var8": 1,
                    "temp_var_8": 1,
                    "var8": 3
                },
                "sVar4": {
                    "new_s_var4": 1,
                    "size": 2,
                    "size_t": 1,
                    "size_t_var": 2,
                    "size_t_var4": 1,
                    "size_t_var_4": 1,
                    "size_var": 4,
                    "size_var4": 7,
                    "size_variable": 2,
                    "size_variable_1": 1,
                    "string_length": 1,
                    "temp4": 1,
                    "temp_var4": 1,
                    "temp_var_4": 1,
                    "var4": 4
                },
                "stat": {
                    "stat_func": 1
                },
                "uVar1": {
                    "found_format": 1,
                    "temp1": 1,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "undefined": 1,
                    "undefined1": 2,
                    "undefined_var": 3,
                    "undefined_var1": 10,
                    "undefined_var_1": 2,
                    "undefined_variable": 2,
                    "undefined_variable_1": 1,
                    "var1": 4
                },
                "uVar12": {
                    "error_message": 1,
                    "error_msg": 1,
                    "new_u_var12": 1,
                    "temp14": 1,
                    "temp_var14": 1,
                    "undefined8_2": 1,
                    "undefined8_var2": 2,
                    "undefined_var12": 8,
                    "undefined_var3": 4,
                    "undefined_var_14": 1,
                    "undefined_var_3": 2,
                    "undefined_variable3": 1,
                    "undefined_variable_2": 1,
                    "undefined_variable_3": 1,
                    "var12": 2,
                    "var14": 1,
                    "var8": 1
                },
                "uVar13": {
                    "max_length": 1,
                    "new_u_var13": 1,
                    "temp15": 1,
                    "temp_var15": 1,
                    "temp_var_13": 1,
                    "ulong": 1,
                    "ulong_var": 7,
                    "ulong_var1": 1,
                    "ulong_var13": 8,
                    "ulong_var_15": 1,
                    "ulong_variable": 2,
                    "ulong_variable_1": 1,
                    "var13": 2,
                    "var15": 1,
                    "var9": 1
                },
                "uVar9": {
                    "normalized_file_name": 1,
                    "temp9": 1,
                    "temp_var9": 1,
                    "temp_var_9": 1,
                    "undefined8_1": 1,
                    "undefined8_var1": 2,
                    "undefined_var2": 4,
                    "undefined_var9": 8,
                    "undefined_var_2": 2,
                    "undefined_var_9": 1,
                    "undefined_variable2": 1,
                    "undefined_variable_1": 1,
                    "undefined_variable_2": 1,
                    "var5": 1,
                    "var9": 3
                },
                "unaff_R12": {
                    "arr5": 1,
                    "char_pointer_pointer_r12": 1,
                    "char_ptr_ptr3": 2,
                    "char_ptr_ptr4": 1,
                    "char_ptr_ptr_5": 1,
                    "char_ptr_ptr_unaff_r12": 2,
                    "char_ptr_ptr_var3": 1,
                    "char_ptr_ptr_var_3": 1,
                    "char_ptr_ptr_var_unaff_r12": 1,
                    "char_ptr_ptr_variable_4": 1,
                    "current_entry": 1,
                    "format_entry": 1,
                    "new_unaff_r12": 1,
                    "pointer_pointer_char_var4": 1,
                    "ptr4": 1,
                    "ptr_ptr_char_var3": 1,
                    "register_r12": 1,
                    "register_variable3": 1,
                    "register_variable_3": 1,
                    "temp19": 1,
                    "temp_var17": 1,
                    "unaff_r12": 1,
                    "unaffected_r12": 4,
                    "var17": 1,
                    "var19": 1
                },
                "unaff_R13D": {
                    "archive_type": 1,
                    "format_index": 1,
                    "new_unaff_r13_d": 1,
                    "register_r13_d": 1,
                    "register_variable4": 1,
                    "register_variable_4": 1,
                    "temp20": 1,
                    "temp_var18": 1,
                    "uint": 1,
                    "uint_unaff_r13_d": 2,
                    "uint_var": 4,
                    "uint_var1": 2,
                    "uint_var_r13_d": 1,
                    "uint_var_unaff_r13_d": 1,
                    "uint_variable_1": 1,
                    "unaff_r13_d": 1,
                    "unaffected_r13_d": 4,
                    "unsigned_int": 1,
                    "var11": 1,
                    "var14": 1,
                    "var18": 1,
                    "var20": 1
                },
                "unaff_R14": {
                    "archive_header": 1,
                    "archive_ptr": 1,
                    "long3": 1,
                    "long_unaff_r14": 2,
                    "long_var3": 5,
                    "long_var_3": 2,
                    "long_var_r14": 1,
                    "long_var_unaff_r14": 1,
                    "long_variable_3": 1,
                    "new_unaff_r14": 1,
                    "register_r14": 1,
                    "register_variable5": 1,
                    "register_variable_5": 1,
                    "temp22": 1,
                    "temp_var20": 1,
                    "unaff_r14": 1,
                    "unaffected_r14": 4,
                    "var12": 1,
                    "var15": 1,
                    "var20": 1,
                    "var22": 1
                },
                "unaff_RBP": {
                    "archive_entries": 1,
                    "arr4": 1,
                    "char_pointer_pointer_rbp": 1,
                    "char_ptr_ptr2": 2,
                    "char_ptr_ptr3": 1,
                    "char_ptr_ptr_4": 1,
                    "char_ptr_ptr_unaff_rbp": 2,
                    "char_ptr_ptr_var_2": 1,
                    "char_ptr_ptr_var_unaff_rbp": 1,
                    "char_ptr_ptr_variable_3": 1,
                    "char_ptr_var6": 1,
                    "file_list": 1,
                    "new_unaff_rbp": 1,
                    "params": 1,
                    "pointer_pointer_char_var3": 1,
                    "ptr3": 1,
                    "ptr_ptr_char_var2": 1,
                    "register_rbp": 1,
                    "register_variable2": 1,
                    "register_variable_2": 1,
                    "temp18": 1,
                    "unaff_rbp": 1,
                    "unaffected_rbp": 4,
                    "var16": 1,
                    "var18": 1
                },
                "unaff_RBX": {
                    "char_pointer_rbx": 1,
                    "char_ptr3": 1,
                    "char_ptr5": 1,
                    "char_ptr_ptr1": 1,
                    "char_ptr_ptr_2": 1,
                    "char_ptr_unaff_rbx": 2,
                    "char_ptr_var5": 1,
                    "char_ptr_var_5": 1,
                    "char_ptr_var_unaff_rbx": 1,
                    "char_ptr_variable_5": 1,
                    "current_archive": 1,
                    "current_file_path": 1,
                    "file": 1,
                    "new_unaff_rbx": 1,
                    "pointer_char_var3": 1,
                    "ptr1": 1,
                    "ptr_char_var3": 1,
                    "register_rbx": 1,
                    "register_variable1": 1,
                    "register_variable_1": 1,
                    "temp16": 1,
                    "unaff_rbx": 1,
                    "unaffected_rb": 1,
                    "unaffected_rbx": 3,
                    "var10": 1,
                    "var14": 1,
                    "var16": 1
                },
                "write_archive": {
                    "write_archive": 1
                },
                "xmalloc": {
                    "x_malloc": 1
                }
            },
            "called": [
                "FUN_00105830",
                "FUN_00105870",
                "FUN_00102130",
                "FUN_001028ed",
                "FUN_00102180",
                "FUN_00107c10",
                "FUN_00105af0",
                "FUN_00102170",
                "FUN_001058b0",
                "FUN_00102100",
                "FUN_00105ae0",
                "FUN_00107690",
                "FUN_00103172",
                "FUN_00102330",
                "FUN_00102230",
                "FUN_00102060",
                "FUN_001022c0",
                "FUN_00102943"
            ],
            "calling": [
                "FUN_001028ed"
            ],
            "code": "\n\n\nundefined8 process_binary_file_001028ed(undefined8 param_1,long param_2)\n\n{\n  undefined undefined_var1;\n  byte byte_var2;\n  int int_var3;\n  size_t size_var4;\n  int *int_ptr;\n  char *char_ptr6;\n  char *char_ptr7;\n  char **char_ptr_ptr8;\n  undefined8 undefined_var9;\n  long long_var10;\n  char *str1;\n  char *str2;\n  long long_var11;\n  undefined8 undefined_var12;\n  ulong ulong_var13;\n  char *unaffected_rbx;\n  char **char_ptr_ptr14;\n  char **unaffected_rbp;\n  char **unaffected_r12;\n  uint unaffected_r13_d;\n  char **char_ptr_ptr15;\n  long long_var3;\n  bool bool_var16;\n  byte byte_var17;\n  char **param_7;\n  undefined8 param_9;\n  long stack_var1;\n  long stack_var2;\n  \n  byte_var17 = 0;\ncode_r0x001028ed:\n  fatal_bfd(unaffected_rbx,param_2);\nLAB_001028f5:\n  undefined_var12 = DAT_0010d638;\n  if (unaffected_r13_d != 3) {\n    while( true ) {\n      if ((undefined8 *)*unaffected_r12 == (undefined8 *)0x0) goto LAB_0010571f;\n      int_var3 = filename_cmp(*(undefined8 *)*unaffected_r12,undefined_var12);\n      if (int_var3 == 0) break;\n      unaffected_r12 = (char **)(*unaffected_r12 + 0xf0);\n    }\n    if (unaffected_r13_d != 2) goto LAB_0010571f;\n    unaffected_r12 = (char **)(*unaffected_r12 + 0xf0);\n    goto LAB_0010571f;\n  }\n  long_var10 = *(long *)(long_var3 + 0xf0);\n  if (*(long *)(long_var3 + 0xf0) == 0) goto LAB_0010571f;\nLAB_00105670:\n  do {\n    long_var11 = long_var10;\n    long_var10 = *(long *)(long_var11 + 0xf0);\n  } while (long_var10 != 0);\n  unaffected_r12 = (char **)(long_var11 + 0xf0);\n  unaffected_rbx = *unaffected_rbp;\n  if (DAT_0010d620 != 0) goto LAB_00105731;\nLAB_00105698:\n  undefined_var1 = DAT_0010d5f8;\n  unaffected_r13_d = (uint)(DAT_0010d60c != 0);\n  param_2 = bfd_openr(unaffected_rbx,DAT_0010d5f0);\n  if (param_2 != 0) {\n    unaffected_rbp = unaffected_rbp + 1;\n    byte_var2 = do_ar_emul_append_constprop_0(unaffected_r12,param_2,unaffected_r13_d,undefined_var1);\n    param_9._6_1_ = param_9._6_1_ | byte_var2;\n    char_ptr6 = *unaffected_rbp;\n    do {\n      if (char_ptr6 == (char *)0x0) {\n        if (param_9._6_1_ == 0) {\n          DAT_0010d618 = 0;\n          return 0;\n        }\n        undefined_var12 = write_archive();\n        return undefined_var12;\n      }\n      char_ptr_ptr14 = *(char ***)(long_var3 + 0xf0);\n      unaffected_r12 = param_7;\n      if (param_9._7_1_ == '\\0') {\n        char_ptr_ptr15 = param_7;\n        if (char_ptr_ptr14 != (char **)0x0) {\n          do {\n            if (DAT_0010d5f9 == '\\0') {\n              str1 = (char *)base_name(*char_ptr_ptr14);\n              char_ptr7 = str1;\n              if (DAT_0010d5fa != '\\0') {\n                size_var4 = strlen(str1);\n                ulong_var13 = (ulong)*(byte *)(*(long *)(long_var3 + 8) + 0x1e);\n                if (ulong_var13 < size_var4) {\n                  char_ptr7 = (char *)x_malloc(ulong_var13 + 1);\n                  long_var10 = *(long *)(long_var3 + 8);\n                  char_ptr6 = char_ptr7;\n                  for (ulong_var13 = (ulong)*(byte *)(long_var10 + 0x1e); ulong_var13 != 0; ulong_var13 = ulong_var13 - 1) {\n                    *char_ptr6 = *str1;\n                    str1 = str1 + (ulong)byte_var17 * -2 + 1;\n                    char_ptr6 = char_ptr6 + (ulong)byte_var17 * -2 + 1;\n                  }\n                  char_ptr7[*(byte *)(long_var10 + 0x1e)] = '\\0';\n                }\n                char_ptr6 = *unaffected_rbp;\n                str1 = char_ptr7;\n                if (DAT_0010d5f9 == '\\0') goto LAB_00105611;\n                goto LAB_00102980;\n              }\n              char_ptr6 = *unaffected_rbp;\n              if (DAT_0010d5f9 != '\\0') goto LAB_00102980;\nLAB_00105611:\n              str2 = (char *)base_name(char_ptr6);\n              if (DAT_0010d5fa != '\\0') {\n                size_var4 = strlen(str2);\n                ulong_var13 = (ulong)*(byte *)(*(long *)(long_var3 + 8) + 0x1e);\n                char_ptr6 = str2;\n                str1 = char_ptr7;\n                if (ulong_var13 < size_var4) {\n                  char_ptr6 = (char *)x_malloc(ulong_var13 + 1);\n                  long_var10 = *(long *)(long_var3 + 8);\n                  char_ptr7 = char_ptr6;\n                  for (ulong_var13 = (ulong)*(byte *)(long_var10 + 0x1e); ulong_var13 != 0; ulong_var13 = ulong_var13 - 1) {\n                    *char_ptr7 = *str2;\n                    str2 = str2 + (ulong)byte_var17 * -2 + 1;\n                    char_ptr7 = char_ptr7 + (ulong)byte_var17 * -2 + 1;\n                  }\n                  char_ptr6[*(byte *)(long_var10 + 0x1e)] = '\\0';\n                }\n                goto LAB_00102980;\n              }\n              int_var3 = filename_cmp(str2,char_ptr7);\n            }\n            else {\n              char_ptr6 = *unaffected_rbp;\n              str1 = *char_ptr_ptr14;\nLAB_00102980:\n              int_var3 = filename_cmp(char_ptr6,str1);\n            }\n            if ((int_var3 == 0) && (char_ptr_ptr14[0x1c] != (char *)0x0)) {\n              if (_DAT_0010d644 != 0) {\n                int_var3 = stat_func(*unaffected_rbp,(stat_func *)&stack0x000000b0);\n                if (int_var3 != 0) {\n                  int_ptr = errno_location();\n                  if (*int_ptr != 2) {\n                    fatal_bfd(*unaffected_rbp);\nLAB_00102b7e:\n                    char_ptr6 = *char_ptr_ptr14;\n                    undefined_var12 = dcgettext(0,\"internal stat_func error on %s\",5);\n                    fatal_func(undefined_var12,char_ptr6);\n                    free_func(unaffected_rbp);\n                    return 0;\n                  }\n                  goto LAB_0010577e;\n                }\n                char_ptr_ptr8 = (char **)char_ptr_ptr14[0x1d];\n                if ((char **)char_ptr_ptr14[0x1d] == (char **)0x0) {\n                  char_ptr_ptr8 = char_ptr_ptr14;\n                }\n                int_var3 = (**(code **)(char_ptr_ptr8[1] + 0x1e8))(char_ptr_ptr14,&stack0x00000020);\n                if (int_var3 != 0) goto LAB_00102b7e;\n                if (stack_var2 <= stack_var1) goto LAB_0010577e;\n              }\n              undefined_var12 = get_pos_bfd(param_7,2,*char_ptr_ptr14);\n              if (DAT_0010d620 == 0) {\nLAB_00102ae2:\n                char_ptr6 = *unaffected_rbp;\n                bool_var16 = DAT_0010d60c != 0;\n                long_var10 = bfd_openr(char_ptr6,DAT_0010d5f0);\n                if (long_var10 == 0) {\n                  fatal_bfd(char_ptr6,0);\n                  goto LAB_00102b3e;\n                }\n                byte_var2 = replace_emul_default(undefined_var12,long_var10,bool_var16);\n              }\n              else {\n                undefined_var9 = normalize_func(*unaffected_rbp);\n                int_var3 = filename_cmp(undefined_var9,\"__.LIBDEP\");\n                if (int_var3 != 0) goto LAB_00102ae2;\nLAB_00102b3e:\n                byte_var2 = replace_emul_default(undefined_var12,DAT_0010d620,DAT_0010d60c != 0);\n              }\n              if (byte_var2 != 0) {\n                *char_ptr_ptr15 = *(char **)(*char_ptr_ptr15 + 0xf0);\n                param_9._6_1_ = byte_var2;\n              }\n              goto LAB_0010577e;\n            }\n            char_ptr_ptr15 = char_ptr_ptr14 + 0x1e;\n            char_ptr_ptr14 = (char **)char_ptr_ptr14[0x1e];\n          } while (char_ptr_ptr14 != (char **)0x0);\n          goto LAB_0010564c;\n        }\n        unaffected_r13_d = DAT_0010d640;\n        if (DAT_0010d640 != 0) goto LAB_001028f5;\n      }\n      else {\nLAB_0010564c:\n        unaffected_r13_d = DAT_0010d640;\n        if (DAT_0010d640 != 0) goto LAB_001028f5;\n        long_var10 = *(long *)(long_var3 + 0xf0);\n        if (*(long *)(long_var3 + 0xf0) != 0) goto LAB_00105670;\n      }\nLAB_0010571f:\n      unaffected_rbx = *unaffected_rbp;\n      if (DAT_0010d620 == 0) goto LAB_00105698;\nLAB_00105731:\n      undefined_var12 = normalize_func(unaffected_rbx);\n      int_var3 = filename_cmp(undefined_var12,\"__.LIBDEP\");\n      if (int_var3 != 0) goto code_r0x0010574f;\n      byte_var2 = append_emul_default(unaffected_r12,DAT_0010d620,DAT_0010d60c != 0,DAT_0010d5f8);\n      param_9._6_1_ = byte_var2 | param_9._6_1_;\nLAB_0010577e:\n      unaffected_rbp = unaffected_rbp + 1;\n      char_ptr6 = *unaffected_rbp;\n    } while( true );\n  }\n  goto code_r0x001028ed;\ncode_r0x0010574f:\n  unaffected_rbx = *unaffected_rbp;\n  goto LAB_00105698;\n}\n\n",
            "current_name": "process_binary_file_001028ed",
            "entrypoint": "0x001028ed",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001028ed": "process_binary_file_001028ed",
                "__errno_location": "errno_location",
                "__s": "str1",
                "__s_00": "str2",
                "ar_emul_default_append": "append_emul_default",
                "ar_emul_default_replace": "replace_emul_default",
                "bVar16": "bool_var16",
                "bVar17": "byte_var17",
                "bVar2": "byte_var2",
                "bfd_fatal": "fatal_bfd",
                "fatal": "fatal_func",
                "free": "free_func",
                "iVar3": "int_var3",
                "in_stack_00000078": "stack_var1",
                "in_stack_00000108": "stack_var2",
                "lVar10": "long_var10",
                "lVar11": "long_var11",
                "lbasename": "base_name",
                "normalize": "normalize_func",
                "pcVar6": "char_ptr6",
                "pcVar7": "char_ptr7",
                "piVar5": "int_ptr",
                "ppcVar14": "char_ptr_ptr14",
                "ppcVar15": "char_ptr_ptr15",
                "ppcVar8": "char_ptr_ptr8",
                "sVar4": "size_var4",
                "stat": "stat_func",
                "uVar1": "undefined_var1",
                "uVar12": "undefined_var12",
                "uVar13": "ulong_var13",
                "uVar9": "undefined_var9",
                "unaff_R12": "unaffected_r12",
                "unaff_R13D": "unaffected_r13_d",
                "unaff_R14": "long_var3",
                "unaff_RBP": "unaffected_rbp",
                "unaff_RBX": "unaffected_rbx",
                "xmalloc": "x_malloc"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102943": {
            "additional_data": {
                "": {
                    "": 2
                },
                "DAT_0010d618": {
                    "count": 1,
                    "counter": 8,
                    "data": 1,
                    "data_array": 1,
                    "data_counter": 6,
                    "data_flag": 4,
                    "data_initialized": 1,
                    "data_value": 1
                },
                "FUN_00102943": {
                    "initialize_counter": 4,
                    "initialize_data": 19,
                    "initialize_global_variable": 1,
                    "reset_counter": 5,
                    "reset_variable": 1
                },
                "VAR_0010d618": {
                    "counter": 1
                },
                "return": {
                    "return": 1
                },
                "void": {
                    "void": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_001028ed",
                "FUN_00105570"
            ],
            "code": "\nvoid initialize_data_00102943(void)\n\n{\n  DAT_0010d618 = 0;\n  return;\n}\n\n",
            "current_name": "initialize_data_00102943",
            "entrypoint": "0x00102943",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102943": "initialize_data_00102943"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102ba1": {
            "additional_data": {
                "FUN_00102ba1": {
                    "deallocate_and_return": 1,
                    "deallocate_and_return_address": 1,
                    "deallocate_memory": 12,
                    "deallocate_memory_and_return": 1,
                    "deallocated_memory": 1,
                    "decompiled_function": 1,
                    "free_and_return": 3,
                    "free_and_return_address": 1,
                    "free_and_return_pointer": 1,
                    "free_and_shift": 3,
                    "free_and_shift_retaddr": 1,
                    "free_memory_and_return_address": 2,
                    "free_memory_and_set_ret_address": 1,
                    "free_memory_and_shift": 1
                },
                "auVar1": {
                    "modified_return_value": 1,
                    "result": 5,
                    "return_value": 2,
                    "updated_return_value": 1
                },
                "unaff_RBP": {
                    "buffer": 2,
                    "buffer_address": 1,
                    "buffer_pointer": 1,
                    "memory_address": 4,
                    "memory_block": 12,
                    "memory_block_address": 1,
                    "memory_pointer": 3,
                    "pointer": 1,
                    "pointer_to_free": 2,
                    "pointer_to_memory": 1,
                    "ptr_to_be_freed": 1,
                    "ptr_to_free": 2
                },
                "unaff_retaddr": {
                    "return_address": 31
                }
            },
            "called": [
                "FUN_00102030"
            ],
            "calling": [
                "FUN_001057a0"
            ],
            "code": "\nundefined  [16] deallocate_memory_and_return_00102ba1(void)\n\n{\n  undefined result [16];\n  void *memory_block;\n  ulong return_address;\n  \n  free(memory_block);\n  result._8_8_ = 0;\n  result._0_8_ = return_address;\n  return result << 0x40;\n}\n\n",
            "current_name": "deallocate_memory_and_return_00102ba1",
            "entrypoint": "0x00102ba1",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102ba1": "deallocate_memory_and_return_00102ba1",
                "auVar1": "result",
                "unaff_RBP": "memory_block",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102bb0": {
            "additional_data": {
                "FUN_00102bb0": {
                    "copy_and_null_terminate_string": 1,
                    "copy_string_limited": 1,
                    "copy_substring": 1,
                    "extract_substring": 2,
                    "reverse_and_allocate_string": 3,
                    "reverse_and_copy_string": 1,
                    "reverse_string": 19,
                    "reverse_x_string": 1,
                    "string_copy": 2
                },
                "auVar7": {
                    "result": 1,
                    "return_object": 1,
                    "return_struct": 1,
                    "return_val": 1,
                    "return_value": 24
                },
                "bVar6": {
                    "byte_val": 1,
                    "byte_value": 3,
                    "byte_var": 2,
                    "flag": 2,
                    "increment": 1,
                    "is_end_of_loop": 1,
                    "is_first_iteration": 1,
                    "is_forward_iterator": 1,
                    "is_negative": 5,
                    "is_negative_flag": 1,
                    "is_reverse_complete": 1,
                    "is_reversed": 4,
                    "loop_iterator": 1,
                    "loop_var": 1,
                    "reverse_flag": 5
                },
                "in_RAX": {
                    "input_string": 29,
                    "string_to_reverse": 1
                },
                "lVar1": {
                    "string_pointer": 1
                },
                "puVar3": {
                    "allocated_string": 2,
                    "copied_string": 2,
                    "copied_substring": 1,
                    "new_string": 1,
                    "output_string": 3,
                    "reversed_string": 20,
                    "substring": 1
                },
                "puVar5": {
                    "copied_pointer": 1,
                    "current_char": 1,
                    "current_reversed_char": 1,
                    "dest": 1,
                    "dest_ptr": 1,
                    "destination_pointer": 8,
                    "destination_ptr": 1,
                    "destination_string": 1,
                    "new_char": 1,
                    "output_pointer": 1,
                    "output_string_iterator": 1,
                    "pointer_to_reversed_string": 1,
                    "ptr_reversed": 1,
                    "ptr_reversed_char": 1,
                    "reversed_ptr": 3,
                    "reversed_str_ptr": 1,
                    "reversed_string_index": 1,
                    "reversed_string_pointer": 2,
                    "reversed_string_ptr": 1
                },
                "sVar2": {
                    "input_length": 8,
                    "input_string_length": 1,
                    "string_length": 21
                },
                "uVar4": {
                    "copy_length": 2,
                    "length_limit": 1,
                    "limit": 1,
                    "max_characters": 3,
                    "max_chars": 2,
                    "max_copy_length": 1,
                    "max_length": 13,
                    "max_reversed_length": 1,
                    "max_size": 2,
                    "max_string_length": 2,
                    "substring_length": 1
                },
                "unaff_RBP": {
                    "base_pointer": 16,
                    "base_ptr": 2,
                    "frame_pointer": 3,
                    "function_base_pointer": 1,
                    "function_pointer": 1,
                    "ptr_offset": 1,
                    "saved_rbp": 2,
                    "stack_base": 2,
                    "stack_base_pointer": 1,
                    "stack_base_ptr": 1,
                    "unaff_arg": 1
                },
                "unaff_RBX": {
                    "char_pointer": 1,
                    "current_char": 6,
                    "destination": 1,
                    "input_ptr": 1,
                    "input_string_iterator": 1,
                    "original_string": 1,
                    "pointer_to_input_string": 1,
                    "ptr_char": 1,
                    "ptr_input_char": 1,
                    "source": 1,
                    "source_pointer": 9,
                    "source_ptr": 2,
                    "source_string": 4,
                    "temp_ptr": 1
                },
                "unaff_retaddr": {
                    "return_address": 12
                }
            },
            "called": [
                "FUN_00102230",
                "FUN_00102180"
            ],
            "calling": [
                "FUN_00105830"
            ],
            "code": "\nundefined  [16] reverse_and_allocate_string_00102bb0(void)\n\n{\n  long string_pointer;\n  char *input_string;\n  size_t string_length;\n  undefined *reversed_string;\n  ulong max_length;\n  undefined *source_pointer;\n  long base_pointer;\n  undefined *destination_pointer;\n  byte reverse_flag;\n  undefined return_value [16];\n  undefined8 return_address;\n  \n  reverse_flag = 0;\n  string_length = strlen(input_string);\n  max_length = (ulong)*(byte *)(*(long *)(base_pointer + 8) + 0x1e);\n  reversed_string = source_pointer;\n  if (max_length < string_length) {\n    reversed_string = (undefined *)xmalloc(max_length + 1);\n    string_pointer = *(long *)(base_pointer + 8);\n    destination_pointer = reversed_string;\n    for (max_length = (ulong)*(byte *)(string_pointer + 0x1e); max_length != 0; max_length = max_length - 1) {\n      *destination_pointer = *source_pointer;\n      source_pointer = source_pointer + (ulong)reverse_flag * -2 + 1;\n      destination_pointer = destination_pointer + (ulong)reverse_flag * -2 + 1;\n    }\n    reversed_string[*(byte *)(string_pointer + 0x1e)] = 0;\n  }\n  return_value._8_8_ = return_address;\n  return_value._0_8_ = reversed_string;\n  return return_value;\n}\n\n",
            "current_name": "reverse_and_allocate_string_00102bb0",
            "entrypoint": "0x00102bb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102bb0": "reverse_and_allocate_string_00102bb0",
                "auVar7": "return_value",
                "bVar6": "reverse_flag",
                "in_RAX": "input_string",
                "lVar1": "string_pointer",
                "puVar3": "reversed_string",
                "puVar5": "destination_pointer",
                "sVar2": "string_length",
                "uVar4": "max_length",
                "unaff_RBP": "base_pointer",
                "unaff_RBX": "source_pointer",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102bf5": {
            "additional_data": {
                "DAT_0010d5d8": {
                    "file_handle": 4,
                    "file_pointer": 3,
                    "file_ptr": 2,
                    "file_to_close": 1
                },
                "DAT_0010d5e0": {
                    "cache_exists": 1,
                    "cache_flag": 2,
                    "cache_status": 6,
                    "has_cache": 1
                },
                "DAT_0010d618": {
                    "file_path": 5,
                    "file_to_delete": 1,
                    "filename": 1
                },
                "FUN_00102bf5": {
                    "cleanup": 4,
                    "cleanup_and_close": 1,
                    "cleanup_files": 2,
                    "cleanup_function": 3,
                    "cleanup_resources": 8,
                    "close_and_delete": 1,
                    "close_and_delete_cache": 1,
                    "close_and_delete_files": 1,
                    "close_cache_and_file": 1,
                    "close_cache_and_file_and_unlink": 1,
                    "close_cache_and_files": 1,
                    "close_cache_file": 1,
                    "close_cached_file": 1,
                    "close_file": 1,
                    "close_file_and_remove": 2,
                    "close_file_and_temporary": 1,
                    "close_file_resources": 1
                },
                "bfd_cache_close": {
                    "close_bfd_cache": 1
                },
                "fclose": {
                    "close_file": 3,
                    "close_file_handle": 1
                },
                "filePtr": {
                    "output_file": 1
                },
                "unlink_if_ordinary": {
                    "delete_file": 7,
                    "remove_file": 14,
                    "remove_unnecessary_file": 1,
                    "unlink_file": 2
                }
            },
            "called": [
                "FUN_00102050",
                "FUN_00102140",
                "FUN_001023d0"
            ],
            "calling": [
                "FUN_00107730"
            ],
            "code": "\nvoid cleanup_resources_00102bf5(void)\n\n{\n  if (DAT_0010d5e0 != 0) {\n    close_bfd_cache();\n  }\n  if (DAT_0010d5d8 != (FILE *)0x0) {\n    close_file(DAT_0010d5d8);\n  }\n  remove_file(DAT_0010d618);\n  return;\n}\n\n",
            "current_name": "cleanup_resources_00102bf5",
            "entrypoint": "0x00102bf5",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102bf5": "cleanup_resources_00102bf5",
                "bfd_cache_close": "close_bfd_cache",
                "fclose": "close_file",
                "unlink_if_ordinary": "remove_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102c25": {
            "additional_data": {
                "DAT_0010d5d8": {
                    "archive_file": 1,
                    "file_pointer": 2,
                    "output_file": 5
                },
                "DAT_0010d600": {
                    "set_times_bit": 1
                },
                "DAT_0010d618": {
                    "archive_filename": 1,
                    "file_name": 1,
                    "file_path": 1,
                    "filename": 2,
                    "output_file_name": 1
                },
                "DAT_0010d638": {
                    "default_error_message": 4,
                    "default_message": 2,
                    "error_code": 1,
                    "internal_error_message": 1,
                    "stat_error": 1
                },
                "FUN_00102c25": {
                    "extract_and_copy_archive": 1,
                    "extract_and_save_archive": 5,
                    "extract_and_save_archive_file": 2,
                    "extract_and_save_file": 3,
                    "extract_and_write_archive": 5,
                    "extract_and_write_file": 1,
                    "extract_and_write_file_from_binary": 1,
                    "extract_archive": 7,
                    "extract_archive_data": 2,
                    "extract_archived_file": 1,
                    "extract_file_from_binary": 1,
                    "process_archive": 1,
                    "process_archive_file": 1
                },
                "FUN_00105a20": {
                    "set_file_times": 1,
                    "set_times": 1
                },
                "FUN_00107690": {
                    "fatal": 1,
                    "fatal_error": 1
                },
                "FUN_00107c80": {
                    "process_error": 1,
                    "write_to_file": 1
                },
                "F_I": {
                    "index": 1
                },
                "F_PARAM_11": {
                    "permissions": 1
                },
                "F_PARAM_12": {
                    "archive_size": 1
                },
                "F_PARAM_7": {
                    "flags": 1
                },
                "F_UNAFF_RBX": {
                    "archive_ptr": 1
                },
                "_DAT_0010d600": {
                    "do_timestamp_check": 1,
                    "enable_time_setting": 1,
                    "flag": 2,
                    "set_times_flag": 2,
                    "time_option": 1
                },
                "__errno_location": {
                    "get_errno_location": 1
                },
                "__n": {
                    "buffer_size": 1,
                    "bytes_read": 25,
                    "bytes_written": 1
                },
                "__ptr": {
                    "buffer": 19,
                    "buffer_pointer": 3,
                    "buffer_ptr": 4
                },
                "bfd_bread": {
                    "read_bfd": 2
                },
                "bfd_seek": {
                    "seek_bfd": 1,
                    "seek_file": 1
                },
                "chmod": {
                    "change_file_permissions": 1,
                    "change_permissions": 1,
                    "set_file_permissions": 1
                },
                "data": {
                    "__ptr": 1
                },
                "dcgettext": {
                    "get_default_translated_string": 1,
                    "get_translation": 1
                },
                "dgettext": {
                    "get_translation": 1
                },
                "dlgettext": {
                    "get_translated_string": 1
                },
                "fatal": {
                    "handle_fatal_error": 2
                },
                "fclose": {
                    "close_file": 3
                },
                "filename_cmp": {
                    "compare_filename": 1,
                    "compare_filenames": 1
                },
                "fun_param_7": {
                    "output_file_name": 1
                },
                "fwrite": {
                    "write_file": 1
                },
                "i": {
                    "index": 1
                },
                "iVar1": {
                    "cmp_result": 3,
                    "compare_result": 1,
                    "comparison_result": 13,
                    "filename_cmp_result": 3,
                    "filename_comparison_result": 2
                },
                "iVar2": {
                    "error_code": 4,
                    "function_result": 2,
                    "internal_stat_error": 1,
                    "read_result": 1,
                    "result": 4,
                    "return_value": 2,
                    "stat_error": 2,
                    "stat_result": 2,
                    "status": 7
                },
                "lVar7": {
                    "count": 1,
                    "counter": 2,
                    "i": 1,
                    "loop_counter": 17,
                    "loop_index": 2,
                    "size": 1
                },
                "malloc_usable_size": {
                    "get_memory_size": 1
                },
                "open_output_file_isra_0": {
                    "open_output_file": 2
                },
                "param_1": {
                    "output_file": 1
                },
                "param_11": {
                    "archive_permissions": 1,
                    "file_mode": 2,
                    "file_permission": 3,
                    "file_permissions": 10,
                    "mode": 5,
                    "new_permissions": 1,
                    "permission": 1,
                    "permissions": 3
                },
                "param_12": {
                    "archive_size": 19,
                    "data_size": 1,
                    "file_size": 8,
                    "size_of_archive": 1
                },
                "param_2": {
                    "output_file_size": 1
                },
                "param_7": {
                    "buffer": 1,
                    "error_array": 1,
                    "error_codes": 2,
                    "fd_array": 1,
                    "file_attributes": 1,
                    "file_extensions": 1,
                    "file_modes": 1,
                    "file_permissions": 1,
                    "mode": 1,
                    "options": 1,
                    "output_file_data": 1,
                    "output_file_format": 1,
                    "output_file_modes": 1,
                    "output_file_permissions": 1,
                    "output_flags": 2,
                    "output_permissions": 1,
                    "param_flags": 1,
                    "permissions": 6,
                    "permissions_flags": 1,
                    "permissions_ptr": 1,
                    "result_array": 1
                },
                "pcVar4": {
                    "errno_msg": 1,
                    "error_description": 2,
                    "error_message": 5,
                    "error_msg": 1,
                    "error_str": 2,
                    "error_string": 13,
                    "filename": 1,
                    "str_error": 1
                },
                "piVar3": {
                    "errno_location": 12,
                    "errno_pointer": 1,
                    "errno_ptr": 4,
                    "errno_value": 1,
                    "error_code": 1,
                    "error_num": 1,
                    "error_number": 5,
                    "error_number_pointer": 1
                },
                "plVar8": {
                    "archive_pointer": 1,
                    "current_entry": 5,
                    "current_file": 8,
                    "current_file_info": 1,
                    "current_header": 1,
                    "current_item": 1,
                    "current_pointer": 1,
                    "current_position": 1,
                    "entry": 1,
                    "entry_pointer": 1,
                    "file_list": 1,
                    "file_pointer": 2,
                    "file_position": 1,
                    "file_ptr": 2,
                    "pointer": 1
                },
                "pplVar6": {
                    "archive": 2,
                    "archive_data": 2,
                    "archive_entry": 1,
                    "archive_header": 1,
                    "archive_pointer": 1,
                    "archive_ptr": 7,
                    "current_archive_entry": 1,
                    "file_array": 1,
                    "file_content": 1,
                    "file_data": 1,
                    "file_entry": 1,
                    "file_pointer": 2,
                    "function_pointers": 2,
                    "new_archive_info": 1,
                    "optional_pointer": 1,
                    "target": 1
                },
                "puVar9": {
                    "current_mode": 2,
                    "current_permission": 2,
                    "current_permissions": 1,
                    "current_ptr": 1,
                    "loop_pointer": 1,
                    "p": 1,
                    "param_7": 1,
                    "param_7_ptr": 2,
                    "param_pointer": 2,
                    "param_ptr": 4,
                    "permissions_ptr_iter": 1,
                    "pointer": 1,
                    "pointer2": 1,
                    "ptr": 1,
                    "pu_var": 1,
                    "temp_pointer": 2,
                    "temp_ptr": 1
                },
                "sVar11": {
                    "bytes_read": 1,
                    "bytes_to_copy": 1,
                    "bytes_to_process": 1,
                    "bytes_to_read": 4,
                    "bytes_to_write": 8,
                    "bytes_written": 1,
                    "data_size": 1,
                    "read_size": 1,
                    "remaining_bytes": 2,
                    "write_size": 6,
                    "write_status": 1
                },
                "set_times": {
                    "set_file_times": 3
                },
                "strerror": {
                    "get_error_message": 1
                },
                "uVar10": {
                    "bytes_processed": 5,
                    "bytes_remaining": 1,
                    "bytes_written": 15,
                    "total_bytes": 1,
                    "total_bytes_read": 3,
                    "total_bytes_written": 1
                },
                "uVar5": {
                    "error": 1,
                    "error_code": 2,
                    "error_message": 20,
                    "error_msg": 2,
                    "gettext_result": 1,
                    "text_domain": 1,
                    "translated_string": 1
                },
                "unaff_RBX": {
                    "archive": 3,
                    "archive_data": 3,
                    "archive_data_ptr": 1,
                    "archive_file": 1,
                    "archive_files": 1,
                    "archive_header": 1,
                    "archive_info": 3,
                    "arguments": 1,
                    "arguments_pointer_array": 1,
                    "file_data": 1,
                    "file_info": 6,
                    "input_files": 2,
                    "params": 1
                },
                "xcalloc": {
                    "allocate_and_clear_memory": 1
                },
                "xfclose": {
                    "close_file_with_error_handling": 1
                },
                "xfopen": {
                    "open_file": 1
                },
                "xfree": {
                    "free_memory": 1
                },
                "xfreopen": {
                    "reopen_file": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "FUN_00102430",
                "FUN_00102030",
                "FUN_00102140",
                "FUN_00107c80",
                "FUN_00102550",
                "FUN_00102170",
                "FUN_00107690",
                "FUN_00102580",
                "FUN_00102060",
                "FUN_00102230",
                "FUN_00102540",
                "FUN_00102510",
                "FUN_00105a20"
            ],
            "calling": [
                "FUN_00107740"
            ],
            "code": "\n\n\nlong * extract_and_write_archive_00102c25(voindexd)\n\n{\n  indexnt comparison_result;\n  indexnt status;\n  indexnt *errno_location;\n  char *error_string;\n  undefindexned8 error_message;\n  long **archive_ptr;\n  voindexd *buffer;\n  sindexze_t bytes_read;\n  long loop_counter;\n  long **file_info;\n  long *current_file;\n  undefindexned4 *param_ptr;\n  ulong bytes_written;\n  sindexze_t bytes_to_write;\n  undefindexned4 *permissions;\n  __mode_t file_permissions;\n  ulong archive_size;\n  \n  param_ptr = permissions;\n  for (loop_counter = 0x24; loop_counter != 0; loop_counter = loop_counter + -1) {\n    *param_ptr = 0;\n    param_ptr = param_ptr + 1;\n  }\n  archive_ptr = (long **)file_info[0x1d];\n  indexf ((long **)file_info[0x1d] == (long **)0x0) {\n    archive_ptr = file_info;\n  }\n  status = (*(code *)archive_ptr[1][0x3d])();\n  indexf (status != 0) {\n    current_file = *file_info;\n    error_message = get_default_translated_string(0,\"indexnternal stat error on %s\",5);\n    status = handle_fatal_error(error_message,current_file);\n    error_message = DAT_0010d638;\n    indexf (status == 3) {\n      for (; *current_file != 0; current_file = (long *)(*current_file + 0xf0)) {\n      }\n    }\n    else {\n      for (; (undefindexned8 *)*current_file != (undefindexned8 *)0x0; current_file = (long *)(*current_file + 0xf0)) {\n        comparison_result = compare_filename(*(undefindexned8 *)*current_file,error_message);\n        indexf (comparison_result == 0) {\n          indexf (status != 2) {\n            return current_file;\n          }\n          return (long *)(*current_file + 0xf0);\n        }\n      }\n    }\n    return current_file;\n  }\n  seek_file();\n  DAT_0010d5d8 = (FILE *)0x0;\n  indexf (archive_size == 0) {\nLAB_00102ca2:\n    DAT_0010d5d8 = (FILE *)open_output_file(*file_info);\n  }\n  else {\n    bytes_written = 0;\n    buffer = (voindexd *)allocate_memory(0x2000);\n    do {\n      bytes_to_write = archive_size - bytes_written;\n      indexf (0x2000 < bytes_to_write) {\n        bytes_to_write = 0x2000;\n      }\n      bytes_read = read_bfd(buffer,bytes_to_write);\n      indexf (bytes_to_write != bytes_read) {\nLAB_00102c78:\n        file_info = (long **)*file_info[0x1d];\n        error_message = get_default_translated_string(0,\"%s indexs not a valindexd archindexve\",5);\n        handle_fatal_error(error_message,file_info);\n        goto LAB_00102ca2;\n      }\n      indexf (DAT_0010d5d8 == (FILE *)0x0) {\n        DAT_0010d5d8 = (FILE *)open_output_file(*file_info);\n      }\n      bytes_to_write = write_file(buffer,1,bytes_read,DAT_0010d5d8);\n      indexf (bytes_to_write != bytes_read) {\n        errno_location = get_errno_location();\n        error_string = get_error_message(*errno_location);\n        handle_fatal_error(\"%s: %s\",DAT_0010d618,error_string);\n        goto LAB_00102c78;\n      }\n      bytes_written = bytes_written + bytes_read;\n    } whindexle (bytes_written < archive_size);\n    free(buffer);\n  }\n  close_file(DAT_0010d5d8);\n  error_string = DAT_0010d618;\n  DAT_0010d5d8 = (FILE *)0x0;\n  set_file_permissions(DAT_0010d618,file_permissions);\n  indexf (_DAT_0010d600 != 0) {\n    set_file_times(error_string,permissions);\n  }\n  DAT_0010d618 = (char *)0x0;\n  return (long *)0x0;\n}\n\n",
            "current_name": "extract_and_write_archive_00102c25",
            "entrypoint": "0x00102c25",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102c25": "extract_and_write_archive_00102c25",
                "__errno_location": "get_errno_location",
                "__n": "bytes_read",
                "__ptr": "buffer",
                "bfd_bread": "read_bfd",
                "bfd_seek": "seek_file",
                "chmod": "set_file_permissions",
                "dcgettext": "get_default_translated_string",
                "fatal": "handle_fatal_error",
                "fclose": "close_file",
                "filename_cmp": "compare_filename",
                "fwrite": "write_file",
                "i": "index",
                "iVar1": "comparison_result",
                "iVar2": "status",
                "lVar7": "loop_counter",
                "open_output_file_isra_0": "open_output_file",
                "param_1": "output_file",
                "param_11": "file_permissions",
                "param_12": "archive_size",
                "param_7": "permissions",
                "pcVar4": "error_string",
                "piVar3": "errno_location",
                "plVar8": "current_file",
                "pplVar6": "archive_ptr",
                "puVar9": "param_ptr",
                "sVar11": "bytes_to_write",
                "set_times": "set_file_times",
                "strerror": "get_error_message",
                "uVar10": "bytes_written",
                "uVar5": "error_message",
                "unaff_RBX": "file_info",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102cd9": {
            "additional_data": {
                "FUN_00102cd9": {
                    "find_file_in_binary": 1,
                    "find_file_in_memory": 1,
                    "find_file_offset": 1,
                    "find_matching_address": 4,
                    "find_matching_entry": 6,
                    "find_matching_file": 10,
                    "find_matching_file_path": 1,
                    "find_matching_pointer": 3,
                    "find_matching_value": 1,
                    "find_next_matching_address": 1,
                    "find_parameter_in_binary": 1,
                    "search_file_by_name": 1
                },
                "filename_cmp": {
                    "compare_file_name": 1,
                    "compare_filenames": 1
                },
                "iVar1": {
                    "cmp_result": 4,
                    "comparison_result": 22,
                    "filename_comparison_result": 1
                },
                "in_EAX": {
                    "comparison": 1,
                    "comparison_flag": 2,
                    "comparison_type": 1,
                    "comparison_value": 3,
                    "condition": 1,
                    "eax_value": 1,
                    "file_type": 1,
                    "input": 2,
                    "input_condition": 1,
                    "input_value": 11,
                    "loop_count": 1,
                    "loop_counter": 1,
                    "num_files": 1,
                    "search_type": 1,
                    "selected_option": 1,
                    "status": 2
                },
                "param_7": {
                    "comparison_param": 1,
                    "comparison_parameter": 1,
                    "comparison_string": 2,
                    "comparison_value": 2,
                    "desired_filename": 1,
                    "file_name": 1,
                    "filename": 1,
                    "search_file": 1,
                    "target_address": 4,
                    "target_file": 2,
                    "target_file_name": 1,
                    "target_file_path": 1,
                    "target_filename": 10,
                    "target_parameter": 1,
                    "target_value": 2
                },
                "unaff_RBX": {
                    "address_pointer": 2,
                    "current_address": 3,
                    "current_entry": 4,
                    "current_file_path": 1,
                    "current_pointer": 4,
                    "entry_pointer": 2,
                    "file_array": 1,
                    "file_array_ptr": 1,
                    "file_list": 6,
                    "file_offsets": 1,
                    "file_pointer": 3,
                    "file_ptr": 1,
                    "pointer": 1,
                    "pointer_array": 1
                }
            },
            "called": [
                "FUN_00102100"
            ],
            "calling": [
                "FUN_00105870"
            ],
            "code": "\nlong * find_matching_file_path_00102cd9(void)\n\n{\n  int input_value;\n  int comparison_result;\n  long *file_list;\n  undefined8 target_filename;\n  \n  target_filename = DAT_0010d638;\n  if (input_value == 3) {\n    for (; *file_list != 0; file_list = (long *)(*file_list + 0xf0)) {\n    }\n  }\n  else {\n    for (; (undefined8 *)*file_list != (undefined8 *)0x0; file_list = (long *)(*file_list + 0xf0)) {\n      comparison_result = compare_filenames(*(undefined8 *)*file_list,target_filename);\n      if (comparison_result == 0) {\n        if (input_value != 2) {\n          return file_list;\n        }\n        return (long *)(*file_list + 0xf0);\n      }\n    }\n  }\n  return file_list;\n}\n\n",
            "current_name": "find_matching_file_path_00102cd9",
            "entrypoint": "0x00102cd9",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102cd9": "find_matching_file_path_00102cd9",
                "filename_cmp": "compare_filenames",
                "iVar1": "comparison_result",
                "in_EAX": "input_value",
                "param_7": "target_filename",
                "unaff_RBX": "file_list"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102d2f": {
            "additional_data": {
                "FUN_00102d2f": {
                    "print_file_details": 1,
                    "print_file_info": 26,
                    "print_file_information": 2,
                    "print_file_metadata": 1,
                    "process_file_info": 1
                },
                "FUN_00105bc0": {
                    "process_data": 1
                },
                "FUN_00107c10": {
                    "initialize": 1
                },
                "_P": {
                    "formatted_date": 1
                },
                "__format": {
                    "corrupt_message": 1,
                    "corrupt_time_format": 1,
                    "corrupt_time_message": 1,
                    "corrupt_time_string": 1,
                    "error_message": 4,
                    "error_message_format": 3,
                    "error_msg_format": 3,
                    "format_string": 3,
                    "time_corrupt_format": 1,
                    "time_corrupt_message": 1,
                    "time_corrupt_msg": 1,
                    "time_format": 2
                },
                "bVar1": {
                    "error": 1,
                    "error_byte": 2,
                    "error_flag": 4,
                    "fatal_byte": 3,
                    "fatal_error": 6,
                    "fatal_error_flag": 1,
                    "fatal_flag": 1,
                    "file_error": 1,
                    "file_status": 2
                },
                "cStack0000000000000015": {
                    "file_type_char": 1
                },
                "cStack0000000000000016": {
                    "executable_flag": 1,
                    "file_permission1": 1,
                    "file_permission2": 1,
                    "flag2_char": 1,
                    "flag3": 1,
                    "flag6": 1,
                    "flag_a": 2,
                    "has_executable_permission": 1,
                    "is_executable": 3,
                    "is_readable": 1,
                    "modified_permission": 1,
                    "permission1": 1,
                    "permission_char1": 2,
                    "permission_flag1": 1,
                    "permission_owner_read": 1,
                    "permission_r": 1,
                    "read_permission": 1,
                    "user_read": 1,
                    "user_read_permission": 3,
                    "x_permission": 1
                },
                "cStack0000000000000017": {
                    "accessed_permission": 1,
                    "file_permission2": 1,
                    "file_permission3": 1,
                    "flag3_char": 1,
                    "flag4": 1,
                    "flag7": 1,
                    "flag_b": 1,
                    "flag_w": 1,
                    "has_write_permission": 1,
                    "is_writable": 4,
                    "permission2": 1,
                    "permission_char2": 2,
                    "permission_flag2": 1,
                    "permission_owner_write": 1,
                    "permission_w": 1,
                    "user_write": 1,
                    "user_write_permission": 3,
                    "w_permission": 1,
                    "writable_flag": 1,
                    "write_permission": 1
                },
                "cStack0000000000000019": {
                    "added_permission": 1,
                    "archive_flag_2": 1,
                    "file_permission4": 1,
                    "file_permission5": 1,
                    "flag5_char": 1,
                    "flag6": 1,
                    "flag9": 1,
                    "flag_d": 1,
                    "flag_r": 1,
                    "group_read": 1,
                    "group_read_permission": 3,
                    "has_executable_permission2": 1,
                    "is_archive": 1,
                    "is_archive_head": 1,
                    "is_executable2": 1,
                    "is_group_readable": 1,
                    "is_shared": 1,
                    "owner_read_permission": 1,
                    "permission4": 1,
                    "permission_char4": 2,
                    "permission_flag4": 1,
                    "permission_group_read": 1,
                    "permission_r": 1,
                    "x_permission": 1
                },
                "cStack000000000000001a": {
                    "executable_flag_2": 1,
                    "executable_permission": 1,
                    "file_permission5": 1,
                    "file_permission6": 1,
                    "flag10": 1,
                    "flag6_char": 1,
                    "flag7": 1,
                    "flag_e": 2,
                    "group_write": 1,
                    "group_write_permission": 3,
                    "has_write_permission2": 1,
                    "is_archive_member": 1,
                    "is_dynamic": 1,
                    "is_group_writable": 1,
                    "is_shared": 1,
                    "is_writable2": 1,
                    "owner_write_permission": 1,
                    "permission5": 1,
                    "permission_char5": 2,
                    "permission_flag5": 1,
                    "permission_group_write": 1,
                    "permission_w": 1,
                    "w_permission": 1
                },
                "cStack000000000000001b": {
                    "file_permission6": 1,
                    "file_permission7": 1,
                    "flag11": 1,
                    "flag7_char": 1,
                    "flag8": 1,
                    "flag_f": 1,
                    "flag_t": 1,
                    "group_execute_permission": 3,
                    "has_read_permission2": 1,
                    "is_directory": 1,
                    "is_group_executable": 1,
                    "is_hidden": 1,
                    "is_memory_resident": 1,
                    "is_readable2": 1,
                    "other_execute": 1,
                    "owner_execute_permission": 1,
                    "permission6": 1,
                    "permission_char6": 2,
                    "permission_flag6": 1,
                    "permission_group_execute": 1,
                    "permission_x": 1,
                    "read_only_permission": 1,
                    "t_permission": 1,
                    "writable_flag_2": 1
                },
                "cStack000000000000001c": {
                    "archive_flag_3": 1,
                    "file_permission7": 1,
                    "file_permission8": 1,
                    "flag12": 1,
                    "flag8_char": 1,
                    "flag9": 1,
                    "flag_g": 1,
                    "flag_h": 1,
                    "group_read_permission": 1,
                    "has_executable_permission3": 1,
                    "is_executable3": 1,
                    "is_executable_readable": 1,
                    "is_setuid": 2,
                    "other_read": 1,
                    "other_read_permission": 2,
                    "others_read_permission": 1,
                    "permission7": 1,
                    "permission_char7": 2,
                    "permission_flag7": 1,
                    "permission_other_read": 1,
                    "permission_s": 1,
                    "write_only_permission": 1,
                    "x_permission": 1
                },
                "cStack000000000000001d": {
                    "executable_flag_3": 1,
                    "file_permission8": 1,
                    "file_permission9": 1,
                    "flag10": 1,
                    "flag13": 1,
                    "flag9_char": 1,
                    "flag_g": 1,
                    "flag_h": 1,
                    "group_read_permission": 1,
                    "group_write_permission": 1,
                    "has_write_permission3": 1,
                    "is_executable_writable": 1,
                    "is_setgid": 2,
                    "is_writable3": 1,
                    "other_write": 1,
                    "other_write_permission": 2,
                    "others_write_permission": 1,
                    "permission8": 1,
                    "permission_char8": 2,
                    "permission_flag8": 1,
                    "permission_other_write": 1,
                    "permission_t": 1,
                    "w_permission": 1
                },
                "cStack000000000000001e": {
                    "file_permission10": 1,
                    "file_permission9": 1,
                    "flag10_char": 1,
                    "flag11": 1,
                    "flag14": 1,
                    "flag_i": 1,
                    "flag_p": 1,
                    "group_execute_permission": 1,
                    "group_write_permission": 1,
                    "has_read_permission3": 1,
                    "is_executable_shared": 1,
                    "is_others_executable": 1,
                    "is_readable3": 1,
                    "is_sticky": 2,
                    "other_execute_permission": 2,
                    "others_execute_permission": 1,
                    "permission9": 1,
                    "permission_char9": 2,
                    "permission_flag9": 1,
                    "permission_other_execute": 1,
                    "permission_t": 1,
                    "sticky_bit": 1,
                    "writable_flag_3": 1,
                    "x_permission": 1
                },
                "cStack000000000000001f": {
                    "dummy_var": 1,
                    "filename_flag": 1,
                    "is_group_executable": 1,
                    "other_permission": 1,
                    "skip_permissions": 1
                },
                "cVar2": {
                    "archive_flag": 1,
                    "archive_head": 1,
                    "archive_head_char": 1,
                    "archive_head_flag": 1,
                    "archive_head_result": 1,
                    "archive_head_set": 1,
                    "archive_head_status": 2,
                    "archive_set_head": 1,
                    "close_status": 1,
                    "head_result": 1,
                    "result": 7,
                    "result_char": 1,
                    "set_head_result": 1,
                    "success": 1
                },
                "iVar3": {
                    "rename_result": 14,
                    "rename_status": 3,
                    "result": 2,
                    "return_value": 2
                },
                "in_stack_00000018": {
                    "executable_bit": 1,
                    "execute_permission": 1,
                    "file_permission3": 1,
                    "file_permission4": 1,
                    "flag4_char": 1,
                    "flag5": 1,
                    "flag8": 1,
                    "flag_c": 1,
                    "flag_x": 1,
                    "group_execute": 1,
                    "has_read_permission": 1,
                    "is_executable": 1,
                    "is_readable": 3,
                    "owned_permission": 1,
                    "permission3": 1,
                    "permission_char3": 2,
                    "permission_flag3": 1,
                    "permission_owner_execute": 1,
                    "permission_x": 1,
                    "r_permission": 1,
                    "readable_flag": 1,
                    "user_execute_permission": 3
                },
                "in_stack_00000070": {
                    "block_count": 1,
                    "block_size": 2,
                    "file_gid": 1,
                    "file_group": 2,
                    "file_owner": 2,
                    "file_owner_id": 1,
                    "file_size": 11,
                    "file_size2": 2,
                    "file_system": 1,
                    "group_id": 1,
                    "group_identifier": 1,
                    "link_count": 1,
                    "month": 1,
                    "num_blocks": 1,
                    "other_size": 1,
                    "size": 1
                },
                "in_stack_00000080": {
                    "file_modified_date": 1,
                    "file_size": 9,
                    "file_size3": 1,
                    "file_time": 1,
                    "filename": 1,
                    "last_modification_time": 2,
                    "last_modified_date": 1,
                    "last_modified_time": 3,
                    "mod_time": 1,
                    "modification_time": 2,
                    "time": 1,
                    "time_val": 1,
                    "timestamp": 5,
                    "year": 1
                },
                "param_1": {
                    "file_name": 1
                },
                "param_2": {
                    "file_type": 1
                },
                "param_3": {
                    "param3": 1
                },
                "param_4": {
                    "time_data": 1
                },
                "stack0x00000020": {
                    "error_message": 2,
                    "error_string": 1
                },
                "uStack0000000000000015": {
                    "file_perm": 1,
                    "file_permission": 8,
                    "file_permission1": 1,
                    "file_permission_marker": 1,
                    "file_type": 6,
                    "file_type_char": 3,
                    "file_type_indicator": 1,
                    "flag1_char": 1,
                    "type": 1,
                    "type_flag": 1
                },
                "uStack000000000000001f": {
                    "additional_permission_char": 1,
                    "dummy": 1,
                    "extra_permission": 1,
                    "flag": 3,
                    "flag11": 1,
                    "flag12": 1,
                    "flag15": 1,
                    "flag2": 1,
                    "flag_char": 1,
                    "flag_j": 1,
                    "flag_s": 1,
                    "is_directory": 1,
                    "is_trusted": 1,
                    "null_byte": 1,
                    "padding": 1,
                    "should_print_value": 1
                },
                "uStack0000000000000068": {
                    "file_attributes": 4,
                    "file_mode": 11,
                    "file_mode1": 1,
                    "file_permission": 2,
                    "file_permissions": 10,
                    "permission_flags": 1,
                    "permission_mask": 1
                },
                "uStack000000000000006c": {
                    "day": 1,
                    "file_link_count": 1,
                    "file_links": 2,
                    "file_mode2": 1,
                    "file_owner": 2,
                    "file_size": 1,
                    "file_size1": 2,
                    "file_uid": 1,
                    "inode_number": 3,
                    "link_count": 1,
                    "links": 1,
                    "num_hard_links": 2,
                    "num_links": 5,
                    "number_of_links": 4,
                    "owner_id": 1,
                    "total_links": 1,
                    "user_identifier": 1
                },
                "uVar4": {
                    "file_attributes": 1,
                    "file_permission": 3,
                    "file_permissions": 1,
                    "file_type": 13,
                    "perm_bits": 1,
                    "permissions": 1
                },
                "unaff_R12": {
                    "archive_flag": 2,
                    "file_attributes": 1,
                    "file_flag": 1,
                    "file_flags": 2,
                    "file_info": 1,
                    "file_mode": 2,
                    "file_status": 2,
                    "file_struct": 1,
                    "file_type": 3,
                    "flag": 5,
                    "flag1": 1,
                    "flags": 2,
                    "format_flags": 1,
                    "is_archive": 3,
                    "is_symbolic_link": 1,
                    "time_data_ptr": 1,
                    "time_flag": 1
                },
                "unaff_R13": {
                    "allocated_memory": 1,
                    "archive_data": 2,
                    "array_ptr": 1,
                    "buffer": 6,
                    "buffer_1": 1,
                    "data_pointer": 1,
                    "dynamic_memory": 1,
                    "file_buffer": 3,
                    "file_data": 5,
                    "file_info_pointer": 1,
                    "file_name": 2,
                    "malloc_pointer": 1,
                    "mem_block": 1,
                    "memory_allocation1": 1,
                    "memory_pointer": 1,
                    "memory_ptr": 1,
                    "pointer1": 1
                },
                "unaff_R14D": {
                    "dup_result": 1,
                    "dup_value": 1,
                    "dup_var": 1,
                    "duplicate_status": 1,
                    "duplication_flag": 1,
                    "duplication_value": 1,
                    "file_desc": 1,
                    "file_descriptor": 19,
                    "file_handle": 1,
                    "flag2": 2,
                    "input_file": 1
                },
                "unaff_RBP": {
                    "file": 1,
                    "file_pointer": 5,
                    "file_ptr": 3,
                    "file_stream": 1,
                    "output_file": 19,
                    "output_file_ptr": 1
                },
                "unaff_RBX": {
                    "args": 1,
                    "file_content": 2,
                    "file_data": 4,
                    "file_description": 1,
                    "file_info": 10,
                    "file_info_array": 1,
                    "file_information": 1,
                    "file_lines": 2,
                    "file_names": 1,
                    "file_path": 1,
                    "file_paths": 4,
                    "file_ptr": 2
                }
            },
            "called": [
                "FUN_00102030",
                "FUN_00102480",
                "FUN_00105bc0",
                "FUN_00102490",
                "FUN_00107c10",
                "FUN_001021d0",
                "FUN_00102d2f",
                "FUN_001020f0"
            ],
            "calling": [
                "FUN_00102d2f"
            ],
            "code": "\nvoid print_file_info_00102d2f(void)\n\n{\n  byte fatal_error;\n  char result;\n  int rename_result;\n  char *error_message;\n  uint file_type;\n  char **file_info;\n  FILE *output_file;\n  long flag;\n  void *buffer;\n  int file_descriptor;\n  undefined file_permission;\n  char is_executable;\n  char is_writable;\n  char is_readable;\n  char group_read_permission;\n  char group_write_permission;\n  char group_execute_permission;\n  char is_setuid;\n  char is_setgid;\n  char permission_char9;\n  undefined flag;\n  uint file_mode;\n  uint num_links;\n  uint file_size;\n  undefined8 file_size;\n  \n  do {\n    fatal_error = bfd_fatal();\n    *(uint *)((long)file_info + 0x44) = *(uint *)((long)file_info + 0x44) | 0x100000;\n    if ((DAT_0010d5f8 != '\\0') || ((*(byte *)(flag + 0x49) & 0x10) != 0)) {\n      *(byte *)((long)file_info + 0x49) = fatal_error | 0x10;\n    }\n    result = bfd_set_archive_head();\n  } while (result == '\\0');\n  dup(file_descriptor);\n  result = bfd_close();\n  if (result != '\\0') {\n    DAT_0010d5e0 = 0;\n    DAT_0010d618 = 0;\n    bfd_close();\n    rename_result = smart_rename_constprop_0();\n    if (rename_result == 0) {\n      free(buffer);\n      free(output_file);\n      return;\n    }\n                    \n    xexit(1);\n  }\n  bfd_fatal();\n  error_message = (char *)dcgettext(0,\"<time data corrupt>\",5);\n  sprintf(&error_message,error_message);\n  file_type = file_mode & 0xf000;\n  if (file_type == 0x4000) {\n    file_permission = 100;\n  }\n  else if (file_type == 0xa000) {\n    file_permission = 0x6c;\n  }\n  else if (file_type == 0x6000) {\n    file_permission = 0x62;\n  }\n  else if (file_type == 0x2000) {\n    file_permission = 99;\n  }\n  else if (file_type == 0xc000) {\n    file_permission = 0x73;\n  }\n  else {\n    file_permission = 0x70;\n    if (file_type != 0x1000) {\n      file_permission = 0x2d;\n    }\n  }\n  is_executable = (-((file_mode & 0x100) == 0) & 0xbbU) + 0x72;\n  is_writable = (-((file_mode & 0x80) == 0) & 0xb6U) + 0x77;\n  is_readable = (-((file_mode & 0x40) == 0) & 0xb5U) + 0x78;\n  group_read_permission = (-((file_mode & 0x20) == 0) & 0xbbU) + 0x72;\n  group_write_permission = (-((file_mode & 0x10) == 0) & 0xb6U) + 0x77;\n  group_execute_permission = (-((file_mode & 8) == 0) & 0xb5U) + 0x78;\n  is_setuid = (-((file_mode & 4) == 0) & 0xbbU) + 0x72;\n  is_setgid = (-((file_mode & 2) == 0) & 0xb6U) + 0x77;\n  permission_char9 = (-((file_mode & 1) == 0) & 0xb5U) + 0x78;\n  if ((file_mode & 0x800) != 0) {\n    if (is_readable == 'x') {\n      is_readable = 's';\n    }\n    else {\n      is_readable = 'S';\n    }\n  }\n  if ((file_mode & 0x400) != 0) {\n    if (group_execute_permission == 'x') {\n      group_execute_permission = 's';\n    }\n    else {\n      group_execute_permission = 'S';\n    }\n  }\n  if ((file_mode & 0x200) != 0) {\n    if (permission_char9 == 'x') {\n      permission_char9 = 't';\n    }\n    else {\n      permission_char9 = 'T';\n    }\n  }\n  flag = 0;\n  fprintf(output_file,\"%s %ld/%ld %6lu %s \",&stack0x00000016,(ulong)num_links,\n          (ulong)file_size,file_size,&error_message,(ulong)file_mode)\n  ;\n  fputs(*file_info,output_file);\n  if ((char)flag != '\\0') {\n    if ((*(byte *)((long)file_info + 0x49) & 0x10) == 0) {\n      if (file_info[0xb] != (char *)0x0) {\n        fprintf(output_file,\" 0x%lx\");\n      }\n    }\n    else if (file_info[0xc] != (char *)0x0) {\n      fprintf(output_file,\" 0x%lx\");\n    }\n  }\n  fputc(10,output_file);\n  return;\n}\n\n",
            "current_name": "print_file_info_00102d2f",
            "entrypoint": "0x00102d2f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102d2f": "print_file_info_00102d2f",
                "__format": "error_message",
                "bVar1": "fatal_error",
                "cStack0000000000000016": "is_executable",
                "cStack0000000000000017": "is_writable",
                "cStack0000000000000019": "group_read_permission",
                "cStack000000000000001a": "group_write_permission",
                "cStack000000000000001b": "group_execute_permission",
                "cStack000000000000001c": "is_setuid",
                "cStack000000000000001d": "is_setgid",
                "cStack000000000000001e": "permission_char9",
                "cVar2": "result",
                "iVar3": "rename_result",
                "in_stack_00000018": "is_readable",
                "in_stack_00000070": "file_size",
                "in_stack_00000080": "file_size",
                "stack0x00000020": "error_message",
                "uStack0000000000000015": "file_permission",
                "uStack000000000000001f": "flag",
                "uStack0000000000000068": "file_mode",
                "uStack000000000000006c": "num_links",
                "uVar4": "file_type",
                "unaff_R12": "flag",
                "unaff_R13": "buffer",
                "unaff_R14D": "file_descriptor",
                "unaff_RBP": "output_file",
                "unaff_RBX": "file_info"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102d8c": {
            "additional_data": {
                "FUN_00102d8c": {
                    "format_and_print_time_data": 1,
                    "generate_file_output": 1,
                    "print_file_details": 2,
                    "print_file_info": 21,
                    "print_file_permissions": 1,
                    "print_file_stats": 1,
                    "print_file_time_information": 1
                },
                "__format": {
                    "corrupt_time_format": 6,
                    "corrupt_time_msg": 2,
                    "error_format": 2,
                    "error_message": 5,
                    "error_msg": 2,
                    "error_string": 2,
                    "time_error_message": 1
                },
                "cStack0000000000000016": {
                    "char_1": 1,
                    "first_flag_character": 1,
                    "flag1_char": 2,
                    "is_executable": 1,
                    "is_setuid": 2,
                    "param_19_bit_8": 1,
                    "permission_bit8": 1,
                    "permission_bit_9": 1,
                    "permission_char1": 2,
                    "permission_char2": 1,
                    "read_permission": 1,
                    "read_permission_char": 1,
                    "setuid_bit": 1,
                    "type_char2": 1,
                    "user_read": 1,
                    "user_read_perm": 1
                },
                "cStack0000000000000017": {
                    "char_2": 1,
                    "flag2_char": 2,
                    "is_setgid": 2,
                    "is_writable": 1,
                    "param_19_bit_7": 1,
                    "permission_bit7": 1,
                    "permission_bit_8": 1,
                    "permission_char2": 2,
                    "permission_char3": 1,
                    "second_flag_character": 1,
                    "setgid_bit": 1,
                    "type_char3": 1,
                    "user_write": 1,
                    "user_write_perm": 1,
                    "write_permission": 1,
                    "write_permission_char": 1
                },
                "cStack0000000000000019": {
                    "char2": 1,
                    "char_4": 1,
                    "flag4_char": 2,
                    "fourth_flag_character": 1,
                    "group_read": 2,
                    "group_read_perm": 1,
                    "is_user_read": 1,
                    "param_19_bit_5": 1,
                    "permission_bit5": 1,
                    "permission_char4": 2,
                    "permission_char5": 1,
                    "read_permission_char2": 1,
                    "sticky_bit": 1,
                    "type_char5": 1
                },
                "cStack000000000000001a": {
                    "char3": 1,
                    "char_5": 1,
                    "fifth_flag_character": 1,
                    "flag5_char": 2,
                    "group_write": 2,
                    "group_write_perm": 1,
                    "is_user_write": 1,
                    "param_19_bit_4": 1,
                    "permission_bit4": 1,
                    "permission_char5": 2,
                    "permission_char6": 1,
                    "type_char6": 1,
                    "user_read_bit": 1,
                    "write_permission_char2": 1
                },
                "cStack000000000000001b": {
                    "char4": 1,
                    "char_6": 1,
                    "execute_permission_char2": 1,
                    "flag6_char": 2,
                    "group_execute": 2,
                    "group_execute_perm": 1,
                    "is_user_execute": 1,
                    "owner_permission": 1,
                    "param_19_bit_3": 1,
                    "permission_bit4": 1,
                    "permission_bit_4": 1,
                    "permission_char6": 2,
                    "permission_char7": 1,
                    "read_permission2": 1,
                    "sixth_flag_character": 1,
                    "type_char7": 1,
                    "user_write_bit": 1
                },
                "cStack000000000000001c": {
                    "char5": 1,
                    "char_7": 1,
                    "flag7_char": 2,
                    "is_group_read": 1,
                    "is_sticky": 1,
                    "other_read": 2,
                    "other_read_perm": 1,
                    "param_19_bit_2": 1,
                    "permission_bit2": 1,
                    "permission_char7": 2,
                    "permission_char8": 1,
                    "read_permission_char3": 1,
                    "seventh_flag_character": 1,
                    "type_char8": 1,
                    "user_execute_bit": 1
                },
                "cStack000000000000001d": {
                    "char6": 1,
                    "char_8": 1,
                    "eighth_flag_character": 1,
                    "flag8_char": 2,
                    "group_read_bit": 1,
                    "is_group_write": 1,
                    "is_set_gid": 1,
                    "other_write": 2,
                    "other_write_perm": 1,
                    "param_19_bit_1": 1,
                    "permission_bit1": 1,
                    "permission_char8": 2,
                    "permission_char9": 1,
                    "type_char9": 1,
                    "write_permission_char3": 1
                },
                "cStack000000000000001e": {
                    "char7": 1,
                    "char_9": 1,
                    "execute_permission_char3": 1,
                    "flag9_char": 2,
                    "group_permission": 1,
                    "group_write_bit": 1,
                    "is_group_execute": 1,
                    "is_set_uid": 1,
                    "ninth_flag_character": 1,
                    "other_execute": 2,
                    "other_execute_perm": 1,
                    "param_19_bit_0": 1,
                    "permission_bit0": 1,
                    "permission_bit_1": 1,
                    "permission_char10": 1,
                    "permission_char9": 2,
                    "type_char10": 1,
                    "write_permission2": 1
                },
                "cStack000000000000001f": {
                    "other_execute_bit": 1
                },
                "param_19": {
                    "file_attributes": 2,
                    "file_attrs": 1,
                    "file_flags": 1,
                    "file_mode": 5,
                    "file_permission": 4,
                    "file_permission_flags": 1,
                    "file_permissions": 11,
                    "file_type": 2,
                    "flags": 1,
                    "permission_flag": 1
                },
                "param_20": {
                    "file_group_id": 2,
                    "file_size": 19,
                    "file_size2": 1,
                    "file_system_id": 1,
                    "file_timestamp": 1,
                    "group_id": 1,
                    "param20": 1,
                    "param_112": 1,
                    "size": 1,
                    "timestamp": 1
                },
                "param_22": {
                    "current_time": 1,
                    "file_address": 4,
                    "file_mode": 1,
                    "file_modified_time": 1,
                    "file_size": 2,
                    "file_time": 1,
                    "modification_time": 2,
                    "mtime": 1,
                    "param22": 1,
                    "param_22_arg": 1,
                    "time_data": 1,
                    "time_stamp": 2,
                    "timestamp": 11
                },
                "param_9": {
                    "char1": 1,
                    "char_3": 1,
                    "execute_permission": 1,
                    "execute_permission_char": 1,
                    "flag3_char": 2,
                    "is_readable": 1,
                    "is_sticky": 2,
                    "param_19_bit_6": 1,
                    "permission_bit3": 1,
                    "permission_bit_7": 1,
                    "permission_char3": 2,
                    "permission_char4": 1,
                    "permission_value": 1,
                    "third_flag_character": 1,
                    "type_char4": 1,
                    "user_execute": 1,
                    "user_execute_perm": 1,
                    "user_permission": 1
                },
                "stack0x00000020": {
                    "error_message": 1,
                    "time_msg": 1
                },
                "uStack0000000000000015": {
                    "default_permission": 1,
                    "display_char": 1,
                    "file_permission": 1,
                    "file_type": 3,
                    "file_type_char": 2,
                    "first_char": 1,
                    "permission_char": 2,
                    "permission_char1": 1,
                    "type_char": 1,
                    "type_char1": 1,
                    "type_character": 1
                },
                "uStack000000000000001f": {
                    "append_null_char": 1,
                    "extra_info_flag": 1,
                    "extra_permission_flag": 1,
                    "flag": 1,
                    "flag10_char": 1,
                    "format_flag": 2,
                    "is_extra_flag": 1,
                    "no_extra_info": 1,
                    "null_char": 1,
                    "print_hex": 1,
                    "should_print_header": 1,
                    "unused_flag": 1,
                    "value_flag": 1
                },
                "uStack000000000000006c": {
                    "current_user_id": 1,
                    "date": 1,
                    "day_of_month": 1,
                    "file_id": 1,
                    "file_mode": 1,
                    "file_owner": 1,
                    "file_owner_id": 1,
                    "file_size": 3,
                    "file_size1": 1,
                    "inode_number": 4,
                    "param_108": 1,
                    "process_id": 1,
                    "user_id": 1,
                    "variable1": 1
                },
                "uVar1": {
                    "attribute_bits": 1,
                    "file_mode_flags": 1,
                    "file_permission": 1,
                    "file_permission_type": 1,
                    "file_permissions": 5,
                    "file_type": 6,
                    "permission_check": 1,
                    "permission_flag": 1,
                    "permission_type": 2,
                    "type_flags": 1,
                    "upper_bits": 1,
                    "upper_nibble": 1
                },
                "unaff_R12B": {
                    "check_flag": 2,
                    "condition_flag": 1,
                    "extra_flag": 1,
                    "flag": 1,
                    "has_extra_info": 1,
                    "is_ascii": 1,
                    "is_executable": 5,
                    "is_hex": 6,
                    "is_hex_string": 1,
                    "is_hexadecimal": 6,
                    "print_address": 1,
                    "print_hex": 3
                },
                "unaff_RBP": {
                    "file_pointer": 6,
                    "file_ptr": 1,
                    "file_stream": 1,
                    "output": 1,
                    "output_file": 20
                },
                "unaff_RBX": {
                    "extra_args": 1,
                    "file_content": 4,
                    "file_contents": 7,
                    "file_data": 15,
                    "file_paths": 1,
                    "input_data": 1
                }
            },
            "called": [
                "FUN_001024f0",
                "FUN_00102280",
                "FUN_001021f0",
                "FUN_00102310",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_001079c0"
            ],
            "code": "\nvoid print_file_info_00102d8c(void)\n\n{\n  char *corrupt_time_format;\n  uint file_type;\n  char **file_data;\n  FILE *output_file;\n  char is_hex;\n  undefined file_type;\n  char flag1_char;\n  char is_setgid;\n  char permission_char3;\n  char group_read;\n  char flag5_char;\n  char permission_char6;\n  char other_read;\n  char flag8_char;\n  char flag9_char;\n  undefined format_flag;\n  uint file_permissions;\n  uint inode_number;\n  uint file_size;\n  undefined8 timestamp;\n  \n  corrupt_time_format = (char *)dcgettext(0,\"<time data corrupt>\",5);\n  sprintf(&error_message,corrupt_time_format);\n  file_type = file_permissions & 0xf000;\n  if (file_type == 0x4000) {\n    file_type = 100;\n  }\n  else if (file_type == 0xa000) {\n    file_type = 0x6c;\n  }\n  else if (file_type == 0x6000) {\n    file_type = 0x62;\n  }\n  else if (file_type == 0x2000) {\n    file_type = 99;\n  }\n  else if (file_type == 0xc000) {\n    file_type = 0x73;\n  }\n  else {\n    file_type = 0x70;\n    if (file_type != 0x1000) {\n      file_type = 0x2d;\n    }\n  }\n  flag1_char = (-((file_permissions & 0x100) == 0) & 0xbbU) + 0x72;\n  is_setgid = (-((file_permissions & 0x80) == 0) & 0xb6U) + 0x77;\n  permission_char3 = (-((file_permissions & 0x40) == 0) & 0xb5U) + 0x78;\n  group_read = (-((file_permissions & 0x20) == 0) & 0xbbU) + 0x72;\n  flag5_char = (-((file_permissions & 0x10) == 0) & 0xb6U) + 0x77;\n  permission_char6 = (-((file_permissions & 8) == 0) & 0xb5U) + 0x78;\n  other_read = (-((file_permissions & 4) == 0) & 0xbbU) + 0x72;\n  flag8_char = (-((file_permissions & 2) == 0) & 0xb6U) + 0x77;\n  flag9_char = (-((file_permissions & 1) == 0) & 0xb5U) + 0x78;\n  if ((file_permissions & 0x800) != 0) {\n    if (permission_char3 == 'x') {\n      permission_char3 = 's';\n    }\n    else {\n      permission_char3 = 'S';\n    }\n  }\n  if ((file_permissions & 0x400) != 0) {\n    if (permission_char6 == 'x') {\n      permission_char6 = 's';\n    }\n    else {\n      permission_char6 = 'S';\n    }\n  }\n  if ((file_permissions & 0x200) != 0) {\n    if (flag9_char == 'x') {\n      flag9_char = 't';\n    }\n    else {\n      flag9_char = 'T';\n    }\n  }\n  format_flag = 0;\n  fprintf(output_file,\"%s %ld/%ld %6lu %s \",&stack0x00000016,(ulong)inode_number,\n          (ulong)file_size,timestamp,&error_message,(ulong)file_permissions);\n  fputs(*file_data,output_file);\n  if (is_hex != '\\0') {\n    if ((*(byte *)((long)file_data + 0x49) & 0x10) == 0) {\n      if (file_data[0xb] != (char *)0x0) {\n        fprintf(output_file,\" 0x%lx\");\n      }\n    }\n    else if (file_data[0xc] != (char *)0x0) {\n      fprintf(output_file,\" 0x%lx\");\n    }\n  }\n  fputc(10,output_file);\n  return;\n}\n\n",
            "current_name": "print_file_info_00102d8c",
            "entrypoint": "0x00102d8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102d8c": "print_file_info_00102d8c",
                "__format": "corrupt_time_format",
                "cStack0000000000000016": "flag1_char",
                "cStack0000000000000017": "is_setgid",
                "cStack0000000000000019": "group_read",
                "cStack000000000000001a": "flag5_char",
                "cStack000000000000001b": "permission_char6",
                "cStack000000000000001c": "other_read",
                "cStack000000000000001d": "flag8_char",
                "cStack000000000000001e": "flag9_char",
                "param_19": "file_permissions",
                "param_20": "file_size",
                "param_22": "timestamp",
                "param_9": "permission_char3",
                "stack0x00000020": "error_message",
                "uStack0000000000000015": "file_type",
                "uStack000000000000001f": "format_flag",
                "uStack000000000000006c": "inode_number",
                "uVar1": "file_type",
                "unaff_R12B": "is_hex",
                "unaff_RBP": "output_file",
                "unaff_RBX": "file_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102e57": {
            "additional_data": {
                "DAT_0010d60c": {
                    "file_enabled": 1,
                    "flag": 1,
                    "is_file_name_valid": 1,
                    "is_output_enabled": 1,
                    "should_print": 1
                },
                "DAT_0010d618": {
                    "file_name": 3,
                    "file_path": 2,
                    "filename": 3,
                    "output_file_path": 1
                },
                "FUN_00102e57": {
                    "create_and_write_file": 1,
                    "create_file_and_print_message": 1,
                    "create_output_file": 1,
                    "save_data_to_file": 1,
                    "save_to_file": 2,
                    "store_to_file": 1,
                    "write_data_to_file": 2,
                    "write_to_external_file": 1,
                    "write_to_file": 20,
                    "write_to_file_and_exit": 1
                },
                "concat": {
                    "concatenate": 1,
                    "concatenate_strings": 6,
                    "create_file_path": 1,
                    "generate_file_path": 2,
                    "generate_filename": 1,
                    "get_concatenated_path": 1,
                    "get_concatenated_string": 7,
                    "get_file_name": 1,
                    "get_file_path": 2,
                    "get_filename": 1,
                    "join_strings": 1
                },
                "fclose": {
                    "close_file": 1
                },
                "fopen": {
                    "open_file": 4
                },
                "pFVar1": {
                    "file": 4,
                    "file_pointer": 22,
                    "file_ptr": 5
                },
                "perror": {
                    "print_error": 4
                },
                "printf": {
                    "print_data": 1,
                    "print_file_path": 1,
                    "print_filename": 1,
                    "print_message": 2
                },
                "xexit": {
                    "exit_program": 5,
                    "exit_with_code": 1,
                    "exit_with_error": 3,
                    "terminate_program": 1
                }
            },
            "called": [
                "FUN_00102200"
            ],
            "calling": [
                "FUN_00105a68"
            ],
            "code": "\nvoid write_data_to_file_00102e57(void)\n\n{\n  FILE *file_pointer;\n  \n  DAT_0010d618 = (char *)get_concatenated_string();\n  if (DAT_0010d60c != 0) {\n    print_message(\"x - %s\\n\",DAT_0010d618);\n  }\n  file_pointer = open_file(DAT_0010d618,\"w\");\n  if (file_pointer != (FILE *)0x0) {\n    return;\n  }\n  print_error(DAT_0010d618);\n                    \n  exit_program(1);\n}\n\n",
            "current_name": "write_data_to_file_00102e57",
            "entrypoint": "0x00102e57",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102e57": "write_data_to_file_00102e57",
                "concat": "get_concatenated_string",
                "fopen": "open_file",
                "pFVar1": "file_pointer",
                "perror": "print_error",
                "printf": "print_message",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102e6f": {
            "additional_data": {
                "DAT_0010d5e8": {
                    "base_path": 1,
                    "initial_directory": 1
                },
                "DAT_0010d60c": {
                    "print_output": 1,
                    "should_print": 1
                },
                "DAT_0010d618": {
                    "final_path": 1,
                    "output_filepath": 1
                },
                "FUN_00102e6f": {
                    "extract_and_print_file": 1,
                    "extract_and_process_file": 1,
                    "extract_and_process_files": 1,
                    "extract_and_write_file": 1,
                    "extract_and_write_paths": 1,
                    "extract_archive_member": 1,
                    "extract_file_from_path": 1,
                    "extract_file_path": 5,
                    "extract_path_and_open_file": 1,
                    "process_and_create_file": 1,
                    "process_and_write_file": 1,
                    "process_file": 1,
                    "process_file_and_print": 1,
                    "process_file_path": 6,
                    "process_files": 4,
                    "process_output_file": 1,
                    "process_output_path": 2,
                    "process_path_and_open_file": 1
                },
                "in_RAX": {
                    "current_char": 2,
                    "current_directory": 1,
                    "current_path": 3,
                    "file_path": 19,
                    "file_path_ptr": 1,
                    "filename": 1,
                    "path": 3
                },
                "input1": {
                    "input1": 1,
                    "input_1": 1
                },
                "input2": {
                    "input2": 1,
                    "input_2": 1
                },
                "input3": {
                    "input3": 1,
                    "input_3": 1
                },
                "input4": {
                    "input4": 1,
                    "input_4": 1
                },
                "pFVar4": {
                    "file": 2,
                    "file_handle": 1,
                    "file_pointer": 16,
                    "file_ptr": 9,
                    "output_file": 2
                },
                "pcVar1": {
                    "archive_path": 2,
                    "base_dir": 2,
                    "base_directory": 7,
                    "base_folder": 1,
                    "base_path": 8,
                    "current_dir": 2,
                    "current_directory": 1,
                    "current_path": 2,
                    "directory": 1,
                    "directory_path": 1,
                    "output_path": 1,
                    "parent_path": 1
                },
                "pcVar5": {
                    "output_path": 1
                },
                "pcVar6": {
                    "current_char": 11,
                    "current_character": 1,
                    "current_dir": 2,
                    "current_directory": 2,
                    "current_folder": 1,
                    "current_path": 2,
                    "current_path_component": 1,
                    "current_path_end": 1,
                    "current_segment": 1,
                    "file_name": 1,
                    "filename": 1,
                    "next_char": 1,
                    "ptr": 1,
                    "ptr_to_filename": 1,
                    "sub_path": 2,
                    "temp_path": 1
                },
                "pcVar7": {
                    "output_message": 1
                },
                "report_and_process_data_00107920": {
                    "report_and_process_data": 3
                },
                "sVar5": {
                    "archive_path_length": 1,
                    "base_dir_len": 1,
                    "base_dir_length": 1,
                    "base_directory_len": 1,
                    "base_directory_length": 3,
                    "base_folder_length": 1,
                    "base_length": 1,
                    "base_path_length": 4,
                    "dir_length": 1,
                    "file_len": 1,
                    "file_length": 1,
                    "file_path_length": 1,
                    "filename_length": 1,
                    "length": 2,
                    "output_path_length": 1,
                    "parent_path_length": 1,
                    "path_length": 8
                },
                "uVar2": {
                    "base_filename": 1,
                    "base_name": 10,
                    "base_path": 1,
                    "basename": 5,
                    "corrected_path": 1,
                    "file_basename": 1,
                    "file_name": 1,
                    "filename": 1,
                    "legal_base_path": 1,
                    "legal_file_path": 1,
                    "new_filename": 1,
                    "new_path": 1,
                    "output_path": 1,
                    "resolved_path": 1,
                    "revised_path": 1
                },
                "uVar3": {
                    "err_message": 1,
                    "error_message": 20,
                    "error_msg": 7
                },
                "write_to_file_and_print_00105a68": {
                    "write_and_print": 1,
                    "write_to_file_and_print": 2
                }
            },
            "called": [
                "FUN_00107920",
                "FUN_00102e6f",
                "FUN_001022c0",
                "FUN_00102170",
                "FUN_00105a68"
            ],
            "calling": [
                "FUN_00102e6f"
            ],
            "code": "\nvoid process_path_and_open_file_00102e6f(void)\n\n{\n  char *base_path;\n  char *file_path;\n  undefined8 base_name;\n  undefined8 error_message;\n  FILE *file_pointer;\n  size_t path_length;\n  char *current_char;\n  \n  base_path = DAT_0010d5e8;\n  do {\n    file_path = file_path + 1;\n    while (*file_path != '/') {\n      if (*file_path == '\\0') {\n        if ((DAT_0010d5e8 != (char *)0x0) && (path_length = strlen(DAT_0010d5e8), path_length != 0)) {\n          if (base_path[path_length - 1] == '/') {\n            DAT_0010d618 = (char *)concat(base_path,DAT_0010d618,0);\n          }\n          else {\n            DAT_0010d618 = (char *)concat(base_path,&DAT_00108260,DAT_0010d618,0);\n          }\n        }\n        if (DAT_0010d60c != 0) {\n          printf(\"x - %s\\n\",DAT_0010d618);\n        }\n        file_pointer = fopen(DAT_0010d618,\"w\");\n        if (file_pointer == (FILE *)0x0) {\n          perror(DAT_0010d618);\n                    \n          xexit(1);\n        }\n        return;\n      }\n      current_char = file_path;\n      if ((*file_path == '.') && (current_char = file_path + 1, file_path[1] == '.')) {\n        current_char = file_path + 2;\n        if ((file_path[2] == '/') || (file_path[2] == '\\0')) {\n          base_name = lbasename();\n          base_path = DAT_0010d618;\n          error_message = dcgettext(0,\"illegal output pathname for archive member: %s, using \\'%s\\' instead\"\n                            ,5);\n          non_fatal(error_message,base_path,base_name);\n          DAT_0010d618 = (char *)base_name;\n          write_to_file_and_print();\n          return;\n        }\n      }\n      for (; (file_path = current_char, *current_char != '\\0' && (*current_char != '/')); current_char = current_char + 1) {\n      }\n    }\n  } while( true );\n}\n\n",
            "current_name": "process_path_and_open_file_00102e6f",
            "entrypoint": "0x00102e6f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102e6f": "process_path_and_open_file_00102e6f",
                "in_RAX": "file_path",
                "pFVar4": "file_pointer",
                "pcVar1": "base_path",
                "pcVar6": "current_char",
                "sVar5": "path_length",
                "uVar2": "base_name",
                "uVar3": "error_message",
                "write_to_file_and_print_00105a68": "write_to_file_and_print"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f08": {
            "additional_data": {
                "FUN_00102f08": {
                    "print_and_assign": 3,
                    "print_and_assign_data": 2,
                    "print_and_assign_value": 4,
                    "print_and_assign_values": 2,
                    "print_and_copy_data": 1,
                    "print_and_copy_string": 1,
                    "print_and_modify_data": 1,
                    "print_and_set_data": 1,
                    "print_and_swap": 7,
                    "print_and_swap_strings": 1,
                    "print_and_swap_values": 1,
                    "print_and_swap_variables": 1,
                    "print_and_update": 1,
                    "print_and_update_data": 3,
                    "print_and_update_values": 1,
                    "print_string_and_set_pointers": 1
                },
                "unaff_R12": {
                    "arg2": 1,
                    "buffer_ptr": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "destination_pointer": 1,
                    "destination_ptr": 1,
                    "new_data_pointer": 1,
                    "new_data_ptr": 1,
                    "new_string_ptr": 1,
                    "new_value_pointer": 1,
                    "output_pointer": 2,
                    "pointer_ptr": 1,
                    "pointer_to_value": 1,
                    "ptr_data": 1,
                    "second_pointer": 1,
                    "source_data": 1,
                    "str2": 1,
                    "swap_pointer": 1,
                    "swap_ptr": 1,
                    "target_data_ptr": 1,
                    "target_ptr": 2,
                    "temp_ptr": 5,
                    "value_pointer": 2
                },
                "unaff_RBX": {
                    "arg1": 1,
                    "array_pointer": 2,
                    "data_pointer": 2,
                    "data_ptr": 4,
                    "first_pointer": 1,
                    "input_string": 2,
                    "input_string_ptr": 1,
                    "message_pointer": 2,
                    "message_ptr": 4,
                    "pointer_to_string": 1,
                    "ptr_string": 1,
                    "str1": 1,
                    "str_ptr": 2,
                    "string_pointer": 2,
                    "string_ptr": 4,
                    "target_data": 1
                }
            },
            "called": [
                "FUN_001021a0"
            ],
            "calling": [
                "FUN_00105af0"
            ],
            "code": "\nundefined8 print_and_swap_values_00102f08(void)\n\n{\n  undefined8 *data_ptr;\n  undefined8 *temp_ptr;\n  \n  printf(\"a - %s\\n\",*data_ptr);\n  data_ptr[0x1e] = *temp_ptr;\n  *temp_ptr = data_ptr;\n  return 1;\n}\n\n",
            "current_name": "print_and_swap_values_00102f08",
            "entrypoint": "0x00102f08",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f08": "print_and_swap_values_00102f08",
                "unaff_R12": "temp_ptr",
                "unaff_RBX": "data_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f1e": {
            "additional_data": {
                "FUN_00102f1e": {
                    "copy_and_delete_file": 1,
                    "copy_and_unlink": 1,
                    "copy_and_unlink_file": 14,
                    "copy_error_handling": 1,
                    "copy_failed_error": 1,
                    "copy_failed_reason": 1,
                    "copy_file_and_delete": 1,
                    "copy_file_and_handle_errors": 1,
                    "copy_file_and_remove": 2,
                    "copy_file_and_unlink": 7,
                    "copy_file_reason": 1
                },
                "__errno_location": {
                    "get_error_location": 1
                },
                "auVar3": {
                    "result": 3,
                    "return_value": 5
                },
                "dcgettext": {
                    "get_error_description": 1
                },
                "non_fatal": {
                    "handle_non_fatal_error": 1
                },
                "piVar1": {
                    "errno_location": 5,
                    "errno_location_ptr": 1,
                    "errno_pointer": 2,
                    "errno_ptr": 2,
                    "error_location": 2,
                    "error_location_pointer": 1,
                    "error_number": 2,
                    "error_ptr": 1
                },
                "strerror": {
                    "get_error_message": 1
                },
                "uVar2": {
                    "error_message": 11,
                    "error_message_string": 1,
                    "error_string": 3
                },
                "unaff_R12": {
                    "file_name": 3,
                    "file_path": 24,
                    "filename": 1,
                    "source_file_path": 3
                },
                "unaff_RBP": {
                    "buffer_size": 1,
                    "copy_file_size": 1,
                    "error_code": 2,
                    "error_message": 1,
                    "file_address": 2,
                    "file_copy_reason": 1,
                    "file_handle": 1,
                    "file_pointer": 1,
                    "file_size": 20,
                    "stack_pointer": 1
                },
                "unaff_retaddr": {
                    "return_address": 28
                },
                "unlink": {
                    "delete_file": 1
                }
            },
            "called": [
                "FUN_00102070",
                "FUN_00102060",
                "FUN_00107920",
                "FUN_00102550",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00105bc0"
            ],
            "code": "\nundefined  [16] copy_file_and_unlink_00102f1e(void)\n\n{\n  int *errno_location;\n  undefined8 error_message;\n  ulong file_size;\n  char *file_path;\n  undefined return_value [16];\n  undefined8 return_address;\n  \n  errno_location = get_error_location();\n  get_error_message(*errno_location);\n  error_message = get_error_description(0,\"unable to copy file \\'%s\\'; reason: %s\",5);\n  handle_non_fatal_error(error_message);\n  delete_file(file_path);\n  return_value._0_8_ = file_size & 0xffffffff;\n  return_value._8_8_ = return_address;\n  return return_value;\n}\n\n",
            "current_name": "copy_file_and_unlink_00102f1e",
            "entrypoint": "0x00102f1e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f1e": "copy_file_and_unlink_00102f1e",
                "__errno_location": "get_error_location",
                "auVar3": "return_value",
                "dcgettext": "get_error_description",
                "non_fatal": "handle_non_fatal_error",
                "piVar1": "errno_location",
                "strerror": "get_error_message",
                "uVar2": "error_message",
                "unaff_R12": "file_path",
                "unaff_RBP": "file_size",
                "unaff_retaddr": "return_address",
                "unlink": "delete_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f55": {
            "additional_data": {
                "FUN_00102f55": {
                    "close_and_reset_errno": 1,
                    "close_and_restore_error": 1,
                    "close_and_set_errno": 3,
                    "close_and_set_error_code": 1,
                    "close_and_update_errno": 1,
                    "close_file": 4,
                    "close_file_and_handle_error": 1,
                    "close_file_and_return_error": 2,
                    "close_file_and_return_error_code": 3,
                    "close_file_and_set_errno": 4,
                    "close_file_and_set_error": 4,
                    "close_file_and_set_error_code": 2,
                    "close_file_and_update_error": 1,
                    "close_file_descriptor": 2,
                    "close_file_handle": 1
                },
                "iVar1": {
                    "err_value": 1,
                    "errno_value": 1,
                    "error_code": 1,
                    "original_errno": 1,
                    "original_error": 1,
                    "previous_errno": 2,
                    "previous_errno_value": 1,
                    "previous_error": 2,
                    "saved_errno": 1,
                    "saved_error_value": 1
                },
                "piVar2": {
                    "errno_address": 1,
                    "errno_location": 1,
                    "errno_location_pointer": 1,
                    "errno_pointer": 1,
                    "errno_ptr": 4,
                    "error_location": 3,
                    "error_pointer": 1,
                    "error_ptr": 1
                },
                "unaff_R12D": {
                    "file_descriptor": 30,
                    "file_handle": 1
                }
            },
            "called": [
                "FUN_00102060",
                "FUN_00102260"
            ],
            "calling": [
                "FUN_00105c00"
            ],
            "code": "\nundefined8 close_file_and_set_error_code_00102f55(void)\n\n{\n  int previous_error;\n  int *errno_ptr;\n  int file_descriptor;\n  \n  errno_ptr = __errno_location();\n  previous_error = *errno_ptr;\n  close(file_descriptor);\n  *errno_ptr = previous_error;\n  return 0xffffffff;\n}\n\n",
            "current_name": "close_file_and_set_error_code_00102f55",
            "entrypoint": "0x00102f55",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f55": "close_file_and_set_error_code_00102f55",
                "iVar1": "previous_error",
                "piVar2": "errno_ptr",
                "unaff_R12D": "file_descriptor"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f96": {
            "additional_data": {
                "FUN_00102f96": {
                    "print_error": 3,
                    "print_error_details": 2,
                    "print_error_info": 1,
                    "print_error_message": 25
                },
                "uVar1": {
                    "error_description": 2,
                    "error_message": 18,
                    "error_msg": 2,
                    "error_string": 1
                },
                "unaff_RBX": {
                    "error_cause": 2,
                    "error_code": 18,
                    "error_flag": 10,
                    "return_value": 1
                },
                "unaff_retaddr": {
                    "return_address": 31
                }
            },
            "called": [
                "FUN_001023c0",
                "FUN_00102310",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00107c20"
            ],
            "code": "\n\n\nvoid print_error_message_00102f96(void)\n\n{\n  undefined8 error_message;\n  long error_code;\n  undefined8 return_address;\n  \n  error_message = dcgettext(0,\"cause of error unknown\",5);\n  fflush(_stdout);\n  if (error_code != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",DAT_0010d660);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",DAT_0010d660,error_message,return_address);\n  return;\n}\n\n",
            "current_name": "print_error_message_00102f96",
            "entrypoint": "0x00102f96",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f96": "print_error_message_00102f96",
                "uVar1": "error_message",
                "unaff_RBX": "error_code",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102fd7": {
            "additional_data": {
                "FUN_00102fd7": {
                    "print_error_and_exit": 1,
                    "print_error_and_terminate": 1,
                    "print_error_message": 1,
                    "print_time_error": 2,
                    "set_time": 1,
                    "set_time_error": 17,
                    "set_time_error_handler": 3,
                    "set_time_error_handling": 2,
                    "set_time_error_message": 2,
                    "set_time_failure_handler": 1
                },
                "__errno_location": {
                    "get_errno_location": 1,
                    "get_error_number": 1
                },
                "dcgettext": {
                    "get_formatted_message": 2
                },
                "non_fatal": {
                    "handle_error": 1,
                    "handle_non_fatal_error": 2
                },
                "param_1": {
                    "error_code": 1,
                    "unused_param_1": 1
                },
                "param_2": {
                    "error_description": 1,
                    "unused_param_2": 1
                },
                "param_3": {
                    "unused_param_3": 1
                },
                "param_4": {
                    "unused_param_4": 1
                },
                "piVar1": {
                    "errno_location": 4,
                    "errno_pointer": 2,
                    "errno_ptr": 9,
                    "error": 1,
                    "error_code": 2,
                    "error_location": 6,
                    "error_number_ptr": 1,
                    "error_pointer": 1,
                    "error_ptr": 2
                },
                "strerror": {
                    "get_error_string": 2
                },
                "uVar2": {
                    "error_message": 19,
                    "error_msg": 1,
                    "error_str": 2,
                    "error_string": 7,
                    "translated_error_message": 1
                }
            },
            "called": [
                "FUN_00102060",
                "FUN_00107920",
                "FUN_00102550",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00107c80"
            ],
            "code": "\nvoid set_time_error_handler_00102fd7(void)\n\n{\n  int *errno_ptr;\n  undefined8 error_message;\n  \n  errno_ptr = get_errno_location();\n  get_error_string(*errno_ptr);\n  error_message = get_formatted_message(0,\"%s: cannot set time: %s\",5);\n  handle_non_fatal_error(error_message);\n  return;\n}\n\n",
            "current_name": "set_time_error_handler_00102fd7",
            "entrypoint": "0x00102fd7",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102fd7": "set_time_error_handler_00102fd7",
                "__errno_location": "get_errno_location",
                "dcgettext": "get_formatted_message",
                "non_fatal": "handle_non_fatal_error",
                "piVar1": "errno_ptr",
                "strerror": "get_error_string",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010300e": {
            "additional_data": {
                "DAT_0010a240": {
                    "lookup_array7": 1
                },
                "DAT_0010a440": {
                    "lookup_array4": 1
                },
                "DAT_0010a640": {
                    "lookup_array3": 1
                },
                "DAT_0010a7c0": {
                    "lookup_array6": 1
                },
                "DAT_0010a800": {
                    "lookup_array5": 1
                },
                "DAT_0010a980": {
                    "lookup_array2": 1
                },
                "DAT_0010ab00": {
                    "lookup_array1": 1
                },
                "DAT_0010d5b0": {
                    "byte_array_end": 1,
                    "end_of_array": 1,
                    "end_pointer": 1
                },
                "DAT_0010d5b8": {
                    "final_target_byte": 1,
                    "found_target_byte_ptr": 1,
                    "matched_byte_ptr": 1
                },
                "DAT_0010d5c0": {
                    "final_target_index": 1,
                    "found_target_value": 1,
                    "matched_index": 1
                },
                "DAT_0010d5c8": {
                    "byte_array": 1,
                    "byte_array_start": 1,
                    "start_pointer": 1
                },
                "DAT_0010d5d0": {
                    "initial_index": 1,
                    "initial_value": 1
                },
                "FUN_0010300e": {
                    "analyze_data": 1,
                    "find_and_set_match": 1,
                    "find_first_match": 1,
                    "find_match_and_set": 1,
                    "find_matching": 1,
                    "find_matching_data": 1,
                    "find_matching_index": 1,
                    "find_matching_indexes": 2,
                    "find_matching_indices": 3,
                    "find_matching_pair": 1,
                    "find_matching_pattern": 1,
                    "find_matching_sequence": 1,
                    "find_matching_value": 1,
                    "find_matching_values": 3,
                    "find_modified_value": 1,
                    "find_target": 1,
                    "find_target_and_set_data": 1,
                    "parse_data": 1,
                    "process_data": 1,
                    "reverse_and_set": 1,
                    "reverse_and_store_values": 1,
                    "reverse_and_update_data": 1
                },
                "bVar1": {
                    "found_flag": 1,
                    "found_match": 9,
                    "found_matching_value": 1,
                    "found_modified_value": 1,
                    "found_target": 2,
                    "found_update": 1,
                    "found_value": 1,
                    "has_match": 8,
                    "has_nonzero_value": 1,
                    "is_match_found": 4,
                    "is_matching": 1,
                    "match_found": 1
                },
                "bVar4": {
                    "byte_modifier": 1,
                    "calculation_result": 1,
                    "current_offset": 1,
                    "default_value": 1,
                    "lookup_result": 1,
                    "lookup_value": 8,
                    "mapping": 1,
                    "match_flag": 1,
                    "matching_value": 2,
                    "modified_byte": 1,
                    "new_byte": 1,
                    "offset": 2,
                    "replacement_byte": 1,
                    "sequence_value": 1,
                    "temp_byte": 3,
                    "temp_value": 1,
                    "updated_byte": 1,
                    "value": 1,
                    "value_index": 1
                },
                "iVar2": {
                    "current_index": 21,
                    "current_offset": 1,
                    "current_sequence": 1,
                    "current_value": 2,
                    "current_value_index": 1,
                    "data_address": 1,
                    "index": 2,
                    "pattern_index": 1
                },
                "in_R10D": {
                    "current_index": 3,
                    "current_value": 1,
                    "first_match_value": 1,
                    "found_index": 2,
                    "index": 1,
                    "last_nonzero_index": 1,
                    "match_index": 3,
                    "matched_index": 1,
                    "matched_offset": 1,
                    "matching_data_index": 1,
                    "matching_index": 9,
                    "matching_sequence_index": 1,
                    "matching_value_index": 1,
                    "modified_index": 1,
                    "saved_index": 1,
                    "target_index": 1,
                    "target_value": 1,
                    "updated_int_variable": 1
                },
                "in_R9": {
                    "current_byte_pointer": 1,
                    "current_index": 1,
                    "first_match_pointer": 1,
                    "found_byte": 1,
                    "found_byte_ptr": 1,
                    "last_nonzero_byte": 1,
                    "match_byte": 3,
                    "match_ptr": 1,
                    "matched_byte": 2,
                    "matching_byte": 4,
                    "matching_byte_pointer": 1,
                    "matching_byte_ptr": 3,
                    "matching_data": 1,
                    "matching_data_pointer": 1,
                    "matching_pointer": 1,
                    "matching_value": 1,
                    "max_value_byte": 1,
                    "modified_byte": 1,
                    "saved_pointer": 1,
                    "target_byte": 1,
                    "target_byte_ptr": 1,
                    "updated_byte": 1,
                    "updated_byte_pointer": 1
                },
                "lVar3": {
                    "calculated_index": 7,
                    "calculated_value": 1,
                    "computed_index": 4,
                    "computed_value": 1,
                    "lookup_index": 1,
                    "new_address": 1,
                    "new_index": 7,
                    "new_offset": 1,
                    "new_value": 1,
                    "next_index": 3,
                    "offset": 1,
                    "replacement_index": 1,
                    "updated_index": 1
                },
                "pbVar5": {
                    "byte_array_pointer": 1,
                    "byte_pointer": 2,
                    "byte_ptr": 2,
                    "current_byte": 19,
                    "current_byte_ptr": 2,
                    "current_pointer": 2,
                    "current_value": 1,
                    "data_array": 1,
                    "data_pointer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nvoid find_matching_values_0010300e(void)\n\n{\n  bool found_match;\n  int current_index;\n  long new_index;\n  byte lookup_value;\n  byte *current_byte;\n  byte *matching_byte;\n  int matching_index;\n  \n  found_match = false;\n  current_index = DAT_0010d5d0;\n  for (current_byte = DAT_0010d5c8; current_byte < DAT_0010d5b0; current_byte = current_byte + 1) {\n    lookup_value = 1;\n    if (*current_byte != 0) {\n      lookup_value = (&DAT_0010ab00)[*current_byte];\n    }\n    if (*(short *)(&DAT_0010a980 + (long)current_index * 2) != 0) {\n      found_match = true;\n      matching_byte = current_byte;\n      matching_index = current_index;\n    }\n    while( true ) {\n      new_index = (long)(int)((int)*(short *)(&DAT_0010a640 + (long)current_index * 2) + (uint)lookup_value);\n      if (*(short *)(&DAT_0010a440 + new_index * 2) == current_index) break;\n      current_index = (int)*(short *)(&DAT_0010a800 + (long)current_index * 2);\n      if (0xb0 < current_index) {\n        lookup_value = (&DAT_0010a7c0)[(int)(uint)lookup_value];\n      }\n    }\n    current_index = (int)*(short *)(&DAT_0010a240 + new_index * 2);\n  }\n  if (found_match) {\n    DAT_0010d5b8 = matching_byte;\n    DAT_0010d5c0 = matching_index;\n  }\n  return;\n}\n\n",
            "current_name": "find_matching_values_0010300e",
            "entrypoint": "0x0010300e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010300e": "find_matching_values_0010300e",
                "bVar1": "found_match",
                "bVar4": "lookup_value",
                "iVar2": "current_index",
                "in_R10D": "matching_index",
                "in_R9": "matching_byte",
                "lVar3": "new_index",
                "pbVar5": "current_byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001030ed": {
            "additional_data": {
                "DAT_0010d588": {
                    "copied_value": 1,
                    "data_value": 1,
                    "extracted_data2": 1,
                    "extracted_value2": 1,
                    "extracted_value5": 4,
                    "extracted_value_e": 1,
                    "first_byte_of_data": 2,
                    "first_data_value": 2,
                    "first_element_of_extracted_data": 1,
                    "first_value": 1,
                    "first_value_int": 1,
                    "first_value_of_extracted": 1,
                    "function_data_value": 1,
                    "function_value": 1,
                    "important_value2": 1,
                    "result5": 1,
                    "second_value": 4,
                    "value2": 5,
                    "value_at_data_pointer2": 1
                },
                "DAT_0010d590": {
                    "data_value": 1,
                    "extracted_data": 2,
                    "extracted_data1": 1,
                    "extracted_value4": 4,
                    "extracted_value_d": 1,
                    "first_data_value": 1,
                    "first_value": 10,
                    "function_address": 1,
                    "function_pointer": 1,
                    "important_data": 1,
                    "result4": 1,
                    "value": 2,
                    "value1": 5
                },
                "DAT_0010d598": {
                    "data_offset": 2,
                    "data_value": 2,
                    "extracted_value": 14,
                    "extracted_value1": 6,
                    "extracted_value_a": 1,
                    "function_offset": 1,
                    "important_value1": 1,
                    "offset_value": 1,
                    "result": 1,
                    "result1": 1,
                    "result_offset": 1
                },
                "DAT_0010d5a0": {
                    "array_index": 2,
                    "data_address2": 2,
                    "data_index": 3,
                    "data_multiplier": 1,
                    "data_pointer2": 3,
                    "data_pointer_b": 1,
                    "data_ptr2": 1,
                    "index": 14,
                    "offset": 4
                },
                "DAT_0010d5a8": {
                    "base_addr": 1,
                    "base_address": 7,
                    "base_pointer": 1,
                    "data_address": 3,
                    "data_address1": 2,
                    "data_base_address": 1,
                    "data_offset": 4,
                    "data_pointer": 1,
                    "data_pointer1": 4,
                    "data_pointer_a": 1,
                    "data_ptr1": 1,
                    "function_info_array": 1,
                    "pointer_array": 2,
                    "ptr_address": 1,
                    "ptr_array": 1
                },
                "DAT_0010d5b0": {
                    "data": 1,
                    "data_pointer": 6,
                    "data_pointer2": 3,
                    "data_ptr": 1,
                    "extracted_data": 1,
                    "extracted_pointer": 1,
                    "extracted_value2": 6,
                    "extracted_value_b": 1,
                    "function_data_pointer": 1,
                    "important_pointer": 1,
                    "pointer": 2,
                    "pointer_to_data": 1,
                    "pointer_value": 3,
                    "result2": 1,
                    "string_ptr": 1
                },
                "DAT_0010d5c8": {
                    "copied_data_pointer": 2,
                    "copied_pointer": 1,
                    "copy_of_data_pointer2": 1,
                    "copy_of_important_pointer": 1,
                    "extracted_data": 1,
                    "extracted_value3": 4,
                    "extracted_value_c": 1,
                    "final_value": 1,
                    "function_data": 1,
                    "modified_data": 1,
                    "modified_data_pointer": 1,
                    "output_string": 1,
                    "processed_data": 1,
                    "result": 1,
                    "result3": 1,
                    "updated_data_pointer": 2,
                    "updated_data_pointer2": 1,
                    "updated_data_ptr": 1,
                    "updated_pointer": 2,
                    "updated_pointer_value": 1,
                    "updated_value": 1
                },
                "FUN_001030ed": {
                    "extract_binary_data": 1,
                    "extract_binary_info": 1,
                    "extract_data": 6,
                    "extract_data_from_binary": 17,
                    "extract_function_data": 2,
                    "extract_function_info": 1,
                    "extract_function_information": 1,
                    "extract_important_data": 1,
                    "initialize_data": 1
                },
                "puVar1": {
                    "binary_data_ptr": 1,
                    "binary_pointer": 1,
                    "current_element": 1,
                    "current_entry": 1,
                    "data_pointer": 11,
                    "data_ptr": 1,
                    "function_data": 1,
                    "function_info_pointer": 1,
                    "function_pointer": 1,
                    "pointer": 7,
                    "pointer_to_data": 4,
                    "ptr_to_data": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00103e95",
                "FUN_001031cf"
            ],
            "code": "\nvoid extract_data_from_binary_001030ed(void)\n\n{\n  undefined8 *data_pointer;\n  \n  data_pointer = *(undefined8 **)(DAT_0010d5a8 + DAT_0010d5a0 * 8);\n  DAT_0010d598 = *(undefined4 *)((long)data_pointer + 0x1c);\n  DAT_0010d5b0 = (undefined *)data_pointer[2];\n  DAT_0010d5c8 = DAT_0010d5b0;\n  DAT_0010d590 = *data_pointer;\n  DAT_0010d588 = *DAT_0010d5b0;\n  return;\n}\n\n",
            "current_name": "extract_data_from_binary_001030ed",
            "entrypoint": "0x001030ed",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001030ed": "extract_data_from_binary_001030ed",
                "puVar1": "data_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010312d": {
            "additional_data": {
                "0xf0": {
                    "offset": 2
                },
                "0xf8": {
                    "next_offset": 1,
                    "next_pointer": 1
                },
                "DAT_0010d558": {
                    "data_address": 1,
                    "data_ptr": 1,
                    "global_data": 1
                },
                "FUN_0010312d": {
                    "copy_and_swap": 2,
                    "copy_and_swap_values": 1,
                    "copy_data": 22,
                    "copy_data_and_link": 1,
                    "copy_data_to_next_position": 1,
                    "copy_memory": 3,
                    "copy_value": 1
                },
                "lVar1": {
                    "previous_data": 1,
                    "temp": 13,
                    "temp_address": 3,
                    "temp_data": 1,
                    "temp_memory": 1,
                    "temp_pointer": 2,
                    "temp_var": 7
                },
                "param_1": {
                    "dest": 1,
                    "destination": 4,
                    "source": 16,
                    "source_address": 4,
                    "source_data": 4,
                    "source_pointer": 2
                },
                "param_2": {
                    "dest_data": 2,
                    "destination": 16,
                    "destination_address": 4,
                    "destination_data": 2,
                    "destination_pointer": 2,
                    "source": 4,
                    "src": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nvoid copy_data_and_link_0010312d(long source,long destination)\n\n{\n  long temp;\n  \n  if (destination != 0) {\n    *(undefined8 *)(destination + 0xf0) = *(undefined8 *)(source + 0xf0);\n  }\n  temp = DAT_0010d558;\n  *(undefined8 *)(source + 0xf0) = *(undefined8 *)(DAT_0010d558 + 0xf8);\n  *(long *)(temp + 0xf8) = source;\n  return;\n}\n\n",
            "current_name": "copy_data_and_link_0010312d",
            "entrypoint": "0x0010312d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010312d": "copy_data_and_link_0010312d",
                "lVar1": "temp",
                "param_1": "source",
                "param_2": "destination"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010315d": {
            "additional_data": {
                "FUN_0010315d": {
                    "check_and_exit": 3,
                    "check_and_exit_if_needed": 1,
                    "check_and_exit_if_not_initialized": 1,
                    "check_and_exit_if_zero": 16,
                    "check_and_exit_if_zero_data": 1,
                    "check_and_exit_if_zero_status": 1,
                    "check_and_exit_on_error": 1,
                    "check_data_validity": 1,
                    "check_exit_code": 1,
                    "check_exit_status": 1,
                    "check_if_initialized": 1,
                    "handle_exit_if_needed": 1,
                    "terminate_if_initialization_failed": 1,
                    "validate_exit_code": 1
                },
                "_DAT_0010d608": {
                    "check_flag": 1,
                    "count": 2,
                    "data_check_variable": 1,
                    "error_code": 5,
                    "exit_code": 2,
                    "exit_flag": 3,
                    "exit_status": 1,
                    "flag": 2,
                    "flag_variable": 1,
                    "global_flag": 1,
                    "initialized": 1,
                    "is_initialization_successful": 1,
                    "is_initialized": 1,
                    "is_valid_data": 1,
                    "some_condition": 1,
                    "some_flag": 2,
                    "status": 1,
                    "status_flag": 1
                },
                "xexit": {
                    "exit_code": 3
                }
            },
            "called": [
                "FUN_00102480"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00103c60",
                "FUN_00105300"
            ],
            "code": "\n\n\nvoid check_and_exit_if_zero_status_0010315d(void)\n\n{\n  if (_DAT_0010d608 == 0) {\n                    \n    exit_code(9);\n  }\n  return;\n}\n\n",
            "current_name": "check_and_exit_if_zero_status_0010315d",
            "entrypoint": "0x0010315d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010315d": "check_and_exit_if_zero_status_0010315d",
                "xexit": "exit_code"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103172": {
            "additional_data": {
                "FUN_00103172": {
                    "copy_and_print": 1,
                    "copy_and_print_string": 7,
                    "copy_and_print_value": 1,
                    "copy_data": 1,
                    "extract_data": 1,
                    "print_and_assign_value": 1,
                    "print_and_copy": 1,
                    "print_and_copy_data": 1,
                    "print_and_store": 2,
                    "print_and_update": 6,
                    "print_and_update_data": 4,
                    "print_and_update_value": 2,
                    "reverse_enforcement": 1,
                    "update_and_print": 1,
                    "update_param_and_print": 1
                },
                "auVar2": {
                    "assigned_value": 1,
                    "modified_data": 2,
                    "modified_value": 2,
                    "new_data": 3,
                    "new_string": 1,
                    "output": 1,
                    "output_array": 2,
                    "result": 7,
                    "result_array": 1,
                    "result_buffer": 1,
                    "result_data": 1,
                    "temp_array": 1,
                    "temp_buffer": 1,
                    "updated_data": 2,
                    "updated_value": 2,
                    "updated_value_array": 1,
                    "updated_values": 1
                },
                "param_1": {
                    "data_pointer": 1,
                    "data_pointer1": 1,
                    "data_ptr": 1,
                    "input1": 2,
                    "input_ptr": 1,
                    "input_ptr_1": 1,
                    "input_value_ptr": 1,
                    "old_data": 1,
                    "ptr_previous_data": 1,
                    "source": 7,
                    "source_data": 4,
                    "source_ptr": 3,
                    "source_str": 1,
                    "source_string": 4,
                    "source_value": 1,
                    "value_ptr": 1
                },
                "param_2": {
                    "array_ptr": 1,
                    "data_array": 1,
                    "data_pointer2": 1,
                    "dest_ptr": 1,
                    "destination": 8,
                    "destination_array": 1,
                    "destination_data": 3,
                    "destination_ptr": 2,
                    "destination_str": 1,
                    "destination_string": 4,
                    "input2": 2,
                    "input_ptr_2": 1,
                    "output_ptr": 1,
                    "ptr_current_data": 1,
                    "string_array": 2,
                    "string_ptr": 1
                },
                "param_3": {
                    "enable_print": 1,
                    "flag": 11,
                    "print_enabled": 1,
                    "print_flag": 2,
                    "should_print": 16
                },
                "param_4": {
                    "additional_data": 6,
                    "additional_info": 1,
                    "data": 7,
                    "data_ptr": 1,
                    "extra_data": 2,
                    "new_value": 3,
                    "param_4": 2,
                    "param_value": 2,
                    "updated_data": 1,
                    "updated_value": 2,
                    "value": 1,
                    "value_to_assign": 1,
                    "value_to_pass": 1,
                    "value_to_return": 1
                },
                "uVar1": {
                    "data": 1,
                    "data_value": 1,
                    "old_value": 3,
                    "original_value": 1,
                    "previous_data": 1,
                    "source_data": 1,
                    "source_data_value": 1,
                    "source_value": 6,
                    "temp": 5,
                    "temp_data": 1,
                    "temp_string": 1,
                    "temp_value": 2,
                    "temp_var": 2,
                    "temp_variable": 1,
                    "value": 4
                }
            },
            "called": [
                "FUN_001021a0"
            ],
            "calling": [
                "FUN_001028ed"
            ],
            "code": "\nundefined  [16]\nprint_and_update_data_00103172(undefined8 *source,undefined8 *destination,char should_print,undefined8 data)\n\n{\n  undefined8 source_value;\n  undefined result [16];\n  \n  if (should_print != '\\0') {\n    printf(\"r - %s\\n\",*destination);\n  }\n  source_value = *source;\n  destination[0x1e] = source_value;\n  result._1_7_ = (undefined7)((ulong)source_value >> 8);\n  result[0] = 1;\n  *source = destination;\n  result._8_8_ = data;\n  return result;\n}\n\n",
            "current_name": "print_and_update_data_00103172",
            "entrypoint": "0x00103172",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103172": "print_and_update_data_00103172",
                "auVar2": "result",
                "param_1": "source",
                "param_2": "destination",
                "param_3": "should_print",
                "param_4": "data",
                "uVar1": "source_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001031a5": {
            "additional_data": {
                "FUNKY_001031a5": {
                    "print_error_line": 1
                },
                "FUN_001031a5": {
                    "print_archive_script_error": 4,
                    "print_archive_script_syntax_error": 3,
                    "print_error_message": 5,
                    "print_syntax_error": 10,
                    "print_syntax_error_in_archive_script": 2,
                    "print_syntax_error_line": 4,
                    "print_syntax_error_message": 1,
                    "print_syntax_error_of_archive_script_line": 1
                },
                "__format": {
                    "error_format": 8,
                    "error_format_string": 1,
                    "error_message": 2,
                    "error_message_format": 12,
                    "format_string": 8
                },
                "dcgettext": {
                    "get_localized_text": 1,
                    "get_translated_string": 1
                },
                "uVar1": {
                    "incremented_value": 1,
                    "line_number": 24,
                    "updated_counter": 2,
                    "updated_index": 1,
                    "updated_line_number": 1,
                    "updated_value": 1,
                    "updated_var": 1
                }
            },
            "called": [
                "FUN_001021a0",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nvoid print_syntax_error_of_archive_script_line_001031a5(void)\n\n{\n  uint line_number;\n  char *error_message_format;\n  \n  line_number = DAT_0010d554 + 1;\n  error_message_format = (char *)get_localized_text(0,\"Syntax error in archive script, line %d\\n\",5);\n  printf(error_message_format,(ulong)line_number);\n  return;\n}\n\n",
            "current_name": "print_syntax_error_of_archive_script_line_001031a5",
            "entrypoint": "0x001031a5",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001031a5": "print_syntax_error_of_archive_script_line_001031a5",
                "__format": "error_message_format",
                "dcgettext": "get_localized_text",
                "uVar1": "line_number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001031cf": {
            "additional_data": {
                "DAT_0010d5a0": {
                    "buffer_var2": 1,
                    "constant2": 1,
                    "constant_value2": 1,
                    "constant_value3": 1,
                    "d5a0": 1,
                    "data2": 2,
                    "data_value": 1,
                    "data_value2": 1,
                    "data_var3": 1,
                    "file_var3": 1
                },
                "DAT_0010d5a8": {
                    "buffer_location": 1,
                    "buffer_var1": 1,
                    "constant1": 2,
                    "constant_value": 1,
                    "constant_value2": 1,
                    "dat_0010d5a8": 1,
                    "data1": 2,
                    "data_pointer2": 1,
                    "data_value1": 1,
                    "data_var2": 1,
                    "file_var2": 1,
                    "global_var2": 1
                },
                "FILE": {
                    "file": 1,
                    "file_type": 3
                },
                "FUN_001030ed": {
                    "load_buffer_state": 1,
                    "sub_function": 1
                },
                "FUN_001031cf": {
                    "initialize_file": 29,
                    "initialize_file_state": 1,
                    "initialize_file_stream": 1
                },
                "GNUC_0001000500030002": {
                    "filename": 1
                },
                "LAB_00103263": {
                    "check_file_array": 1,
                    "check_file_match": 1,
                    "check_file_ptr": 1,
                    "goto_label1": 1,
                    "label1": 3
                },
                "LAB_0010327b": {
                    "label2": 1
                },
                "_DAT_00000000": {
                    "data0": 1,
                    "file": 1,
                    "file1": 1,
                    "file_pointer1": 1,
                    "file_pointer2": 2,
                    "file_ptr": 1,
                    "file_to_set": 1,
                    "flag2": 4,
                    "flag_value2": 1,
                    "global_var2": 1,
                    "global_variable2": 1,
                    "input_file_ptr": 1
                },
                "_DAT_00000034": {
                    "data34": 1,
                    "file_flag": 1,
                    "file_opened_flag": 1,
                    "flag": 2,
                    "flag1": 7,
                    "flag_value1": 1,
                    "global_var1": 1,
                    "global_variable1": 1,
                    "is_param1_null": 1
                },
                "__errno_location": {
                    "get_errno_location": 1,
                    "get_error_location": 1
                },
                "_flags": {
                    "file_flags": 1
                },
                "fileno": {
                    "get_file_descriptor": 3,
                    "get_file_no": 1,
                    "get_file_number": 1,
                    "get_fileno": 1
                },
                "iVar1": {
                    "errno": 1,
                    "errno_val": 2,
                    "errno_value": 11,
                    "error": 4,
                    "error_code": 3,
                    "error_status": 2,
                    "error_value": 5,
                    "int_value": 1,
                    "old_errno": 1,
                    "previous_errno": 1
                },
                "iVar3": {
                    "file_descriptor": 16,
                    "file_no": 2,
                    "file_number": 5,
                    "fileno_result": 1,
                    "fileno_value": 1,
                    "intval2": 1,
                    "temp_var": 1,
                    "terminal_value": 1
                },
                "int": {
                    "integer": 2
                },
                "isatty": {
                    "check_is_tty": 1,
                    "is_terminal": 4,
                    "is_terminal_device": 1
                },
                "lVar5": {
                    "buffer_state": 2,
                    "constant_value": 2,
                    "constant_var": 1,
                    "data": 2,
                    "data_addr": 1,
                    "data_address": 4,
                    "data_length": 1,
                    "data_location": 2,
                    "data_pointer": 2,
                    "data_segment": 1,
                    "data_value": 1,
                    "data_var": 1,
                    "file_array": 1,
                    "file_buffer": 2,
                    "file_buffer_state": 1,
                    "file_info": 1,
                    "file_location": 1,
                    "file_state": 2,
                    "file_stream_ptr": 1,
                    "file_var": 1,
                    "global_var1": 1
                },
                "long": {
                    "long_int": 1
                },
                "param_1": {
                    "config_file": 1,
                    "file": 2,
                    "file_pointer": 16,
                    "file_ptr": 6,
                    "file_ptr_ptr": 1,
                    "file_state_ptr": 1,
                    "output_file": 2,
                    "output_file_ptr": 1,
                    "output_stream": 1
                },
                "param_2": {
                    "file": 5,
                    "file_ptr": 2,
                    "input_file": 19,
                    "input_file_ptr": 1,
                    "input_stream": 1,
                    "original_file_pointer": 1,
                    "source_file": 1,
                    "stream": 1
                },
                "param_3": {
                    "param1": 1,
                    "param3": 20,
                    "param_3": 9,
                    "unused_param1": 1
                },
                "param_4": {
                    "param2": 1,
                    "param4": 20,
                    "param_4": 9,
                    "unused_param2": 1
                },
                "param_5": {
                    "param3": 1,
                    "param5": 20,
                    "param_5": 9,
                    "unused_param3": 1
                },
                "piVar4": {
                    "err_no": 1,
                    "err_no_location": 1,
                    "errno": 1,
                    "errno_address": 1,
                    "errno_location": 7,
                    "errno_location_ptr": 1,
                    "errno_pointer": 2,
                    "errno_ptr": 5,
                    "error": 1,
                    "error_location": 8,
                    "error_ptr": 3
                },
                "uVar2": {
                    "file_flag": 1,
                    "is_terminal": 16,
                    "is_terminal_result": 1,
                    "is_tty": 2,
                    "is_tty_value": 1,
                    "isatty_result": 1,
                    "result": 1,
                    "result_var": 1,
                    "return_value": 2,
                    "terminal_check": 1,
                    "uint_value": 1,
                    "value": 1
                },
                "uint": {
                    "unsigned_int": 2
                },
                "undefined": {
                    "undefined_value2": 1
                },
                "undefined4": {
                    "undefined_value1": 1
                },
                "undefined8": {
                    "undefined": 1
                },
                "yy_load_buffer_state": {
                    "load_buffer_state": 11
                }
            },
            "called": [
                "FUN_00102390",
                "FUN_001030ed",
                "FUN_001020c0",
                "FUN_00102060"
            ],
            "calling": [
                "FUN_001033d6",
                "FUN_00103e95"
            ],
            "code": "\n\n\nundefined\ninitialize_file_stream_001031cf(file_type **file_pointer,file_type *input_file,undefined param3,undefined param4,undefined param5)\n\n{\n  integer errno_value;\n  unsigned_int is_terminal;\n  integer file_descriptor;\n  integer *error_location;\n  long_int data_address;\n  \n  error_location = get_error_location();\n  data_address = DAT_0010d5a8;\n  errno_value = *error_location;\n  if (file_pointer == (file_type **)0x0) {\n    _DAT_00000034 = 1;\n    _DAT_00000000 = input_file;\n    if (DAT_0010d5a8 != 0) {\nlabel1:\n      if (file_pointer == *(file_type ***)(data_address + DAT_0010d5a0 * 8)) goto label2;\n    }\n  }\n  else {\n    *(undefined_value1 *)((long_int)file_pointer + 0x1c) = 0;\n    *(undefined_value2 *)&file_pointer[1]->file_flags = 0;\n    *(undefined_value2 *)((long_int)&file_pointer[1]->file_flags + 1) = 0;\n    *(undefined_value1 *)(file_pointer + 5) = 1;\n    file_pointer[2] = file_pointer[1];\n    *(undefined_value1 *)(file_pointer + 7) = 0;\n    if (data_address != 0) {\n      if (file_pointer == *(file_type ***)(data_address + DAT_0010d5a0 * 8)) {\n        load_buffer_state();\n      }\n      *file_pointer = input_file;\n      *(undefined_value1 *)((long_int)file_pointer + 0x34) = 1;\n      goto label1;\n    }\n    *file_pointer = input_file;\n    *(undefined_value1 *)((long_int)file_pointer + 0x34) = 1;\n  }\n  *(undefined *)((long_int)file_pointer + 0x2c) = 1;\nlabel2:\n  is_terminal = 0;\n  if (input_file != (file_type *)0x0) {\n    file_descriptor = get_file_descriptor(input_file);\n    file_descriptor = is_terminal(file_descriptor);\n    is_terminal = (unsigned_int)(0 < file_descriptor);\n  }\n  *(unsigned_int *)((long_int)file_pointer + 0x24) = is_terminal;\n  *error_location = errno_value;\n  return param5;\n}\n\n",
            "current_name": "initialize_file_stream_001031cf",
            "entrypoint": "0x001031cf",
            "imported": false,
            "improved": true,
            "renaming": {
                "FILE": "file_type",
                "FUN_001031cf": "initialize_file_stream_001031cf",
                "LAB_00103263": "label1",
                "LAB_0010327b": "label2",
                "__errno_location": "get_error_location",
                "_flags": "file_flags",
                "fileno": "get_file_descriptor",
                "iVar1": "errno_value",
                "iVar3": "file_descriptor",
                "int": "integer",
                "isatty": "is_terminal",
                "lVar5": "data_address",
                "long": "long_int",
                "param_1": "file_pointer",
                "param_2": "input_file",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "piVar4": "error_location",
                "uVar2": "is_terminal",
                "uint": "unsigned_int",
                "undefined": "undefined_value2",
                "undefined4": "undefined_value1",
                "undefined8": "undefined",
                "yy_load_buffer_state": "load_buffer_state"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001032a8": {
            "additional_data": {
                "FUN_001032a8": {
                    "archive_entry_search": 1,
                    "decode_archive_entries": 1,
                    "decompile_and_process_binary": 1,
                    "extract_and_print_entries": 1,
                    "extract_archived_entries": 1,
                    "extract_entries": 1,
                    "extract_entries_from_archive": 3,
                    "extract_files_from_archive": 2,
                    "extract_from_archive": 1,
                    "process_archive": 3,
                    "process_archive_entries": 11,
                    "process_archived_entries": 2,
                    "process_entries": 3
                },
                "__format": {
                    "error_format": 4,
                    "error_format_string": 2,
                    "error_message": 8,
                    "error_message_format": 8,
                    "error_msg_format": 1,
                    "format_string": 8
                },
                "_stderr": {
                    "error_stream": 1
                },
                "bVar3": {
                    "entry_found": 15,
                    "found_entry": 12,
                    "found_match": 1,
                    "found_matching_entry": 1,
                    "has_found_entry": 1,
                    "match_found": 1
                },
                "iVar5": {
                    "comparison_result": 23,
                    "filename_comparison": 5,
                    "filename_comparison_result": 2,
                    "name_comparison_result": 1
                },
                "lVar1": {
                    "current_entry": 1,
                    "next_entry": 27,
                    "next_entry_addr": 1,
                    "next_entry_address": 1,
                    "next_entry_offset": 1
                },
                "lVar7": {
                    "current": 2,
                    "current_entry": 13,
                    "current_entry_addr": 1,
                    "current_entry_address": 2,
                    "current_entry_in_archive": 1,
                    "current_entry_in_list": 1,
                    "current_entry_pointer": 1,
                    "current_entry_ptr": 4,
                    "current_node": 1,
                    "current_user_entry": 1,
                    "entry": 2,
                    "entry_offset": 1,
                    "entry_pointer": 1
                },
                "param_1": {
                    "archive": 7,
                    "archive_data": 2,
                    "archive_entries": 9,
                    "entries": 3,
                    "entry_array": 1,
                    "entry_list": 5,
                    "file_entries": 3,
                    "file_info": 1
                },
                "param_2": {
                    "callback": 6,
                    "callback_func": 2,
                    "callback_function": 6,
                    "decode_function": 1,
                    "entry_callback": 2,
                    "entry_handler": 1,
                    "entry_processing_function": 1,
                    "entry_processor": 1,
                    "extract_callback": 1,
                    "extract_function": 1,
                    "process_callback": 1,
                    "process_entry": 2,
                    "process_entry_function": 4,
                    "process_function": 1,
                    "processor": 1
                },
                "param_3": {
                    "archive_entries": 1,
                    "entries": 2,
                    "entry_list": 3,
                    "entry_name_list": 1,
                    "entry_names": 16,
                    "file_list": 1,
                    "file_names": 3,
                    "requested_entries": 2,
                    "search_list": 1,
                    "search_terms": 1
                },
                "param_4": {
                    "param": 1,
                    "result": 6,
                    "return_val": 1,
                    "return_value": 23
                },
                "plVar4": {
                    "current_block": 1,
                    "current_entry": 22,
                    "current_entry_addr": 1,
                    "current_entry_address": 1,
                    "current_entry_data": 1,
                    "current_entry_list": 1,
                    "current_entry_ptr": 3,
                    "current_node": 1
                },
                "plVar6": {
                    "next": 1,
                    "next_block": 1,
                    "next_entry": 13,
                    "next_entry_address": 1,
                    "next_entry_data": 1,
                    "next_entry_in_archive": 1,
                    "next_entry_in_list": 2,
                    "next_entry_list": 2,
                    "next_entry_of_current": 1,
                    "next_entry_pointer": 1,
                    "next_entry_ptr": 5,
                    "next_node": 1,
                    "temp_entry": 1
                },
                "plVar8": {
                    "prev_entry": 2,
                    "previous_block": 1,
                    "previous_entry": 18,
                    "previous_entry_address": 1,
                    "previous_entry_in_archive": 1,
                    "previous_entry_offset": 1,
                    "previous_entry_ptr": 4,
                    "previous_node": 1
                },
                "uVar2": {
                    "current_entry": 8,
                    "current_entry_name": 4,
                    "current_file_name": 3,
                    "current_term": 1,
                    "entry": 2,
                    "entry_name": 9,
                    "file_name": 1,
                    "filename": 2,
                    "requested_entry": 1
                }
            },
            "called": [
                "FUN_00102100",
                "FUN_00102310",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\n\n\nundefined8 process_archive_entries_001032a8(long *archive_entries,code *callback,undefined8 *entry_names,undefined8 return_value)\n\n{\n  long next_entry;\n  undefined8 entry_name;\n  bool entry_found;\n  long *current_entry;\n  int comparison_result;\n  char *error_message_format;\n  long *next_entry;\n  long current_entry;\n  long *previous_entry;\n  \n  current_entry = archive_entries[0x1e];\n  if (entry_names == (undefined8 *)0x0) {\n    while (current_entry != 0) {\n      next_entry = *(long *)(current_entry + 0xf0);\n      (*callback)(current_entry,0);\n      current_entry = next_entry;\n    }\n  }\n  else {\n    do {\n      entry_found = false;\n      current_entry = (long *)archive_entries[0x1e];\n      previous_entry = archive_entries;\n      while (next_entry = current_entry, next_entry != (long *)0x0) {\n        if (*next_entry != 0) {\n          comparison_result = filename_cmp(*entry_names);\n          if (comparison_result == 0) {\n            entry_found = true;\n            (*callback)(next_entry,previous_entry);\n          }\n        }\n        previous_entry = next_entry;\n        current_entry = (long *)next_entry[0x1e];\n      }\n      if (!entry_found) {\n        entry_name = *entry_names;\n        error_message_format = (char *)dcgettext(0,\"No entry %s in archive.\\n\",5);\n        fprintf(error_stream,error_message_format,entry_name);\n      }\n      entry_names = (undefined8 *)entry_names[1];\n    } while (entry_names != (undefined8 *)0x0);\n  }\n  return return_value;\n}\n\n",
            "current_name": "process_archive_entries_001032a8",
            "entrypoint": "0x001032a8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001032a8": "process_archive_entries_001032a8",
                "__format": "error_message_format",
                "_stderr": "error_stream",
                "bVar3": "entry_found",
                "iVar5": "comparison_result",
                "lVar1": "next_entry",
                "lVar7": "current_entry",
                "param_1": "archive_entries",
                "param_2": "callback",
                "param_3": "entry_names",
                "param_4": "return_value",
                "plVar4": "current_entry",
                "plVar6": "next_entry",
                "plVar8": "previous_entry",
                "uVar2": "entry_name"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010336b": {
            "additional_data": {
                "FUN_0010336b": {
                    "print_emulation_options": 31
                },
                "param_1": {
                    "file": 5,
                    "file_pointer": 4,
                    "output_file": 22
                },
                "pcVar1": {
                    "emulation_header": 1,
                    "emulation_message": 3,
                    "emulation_option": 1,
                    "emulation_option_str": 1,
                    "emulation_option_string": 2,
                    "emulation_option_text": 2,
                    "emulation_options": 3,
                    "emulation_options1": 1,
                    "emulation_options_message": 1,
                    "emulation_options_msg": 1,
                    "emulation_options_string": 1,
                    "emulation_options_text": 2,
                    "emulation_string": 2,
                    "emulation_text": 1,
                    "localization_string": 1,
                    "message": 2,
                    "option_string": 1,
                    "option_text": 1,
                    "options_message": 1,
                    "options_string": 1,
                    "options_text": 2
                }
            },
            "called": [
                "FUN_00102310",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_0010342d"
            ],
            "code": "\nvoid print_emulation_options_0010336b(FILE *output_file)\n\n{\n  char *emulation_options;\n  \n  emulation_options = (char *)dcgettext(0,\" emulation options: \\n\",5);\n  fprintf(output_file,emulation_options);\n  emulation_options = (char *)dcgettext(0,\"  No emulation specific options\\n\",5);\n  fprintf(output_file,emulation_options);\n  return;\n}\n\n",
            "current_name": "print_emulation_options_0010336b",
            "entrypoint": "0x0010336b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010336b": "print_emulation_options_0010336b",
                "param_1": "output_file",
                "pcVar1": "emulation_options"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001033b0": {
            "additional_data": {
                "FUN_001033b0": {
                    "print_and_exit": 6,
                    "print_error_and_exit": 1,
                    "print_error_message_and_exit": 24
                },
                "_stderr": {
                    "error_stream": 1,
                    "standard_error": 1
                },
                "param_1": {
                    "error_message": 28,
                    "message": 3
                }
            },
            "called": [
                "FUN_00102310",
                "FUN_00102500"
            ],
            "calling": [
                "FUN_00103df9",
                "FUN_001033d6",
                "FUN_00103e95"
            ],
            "code": "\n\n\nvoid print_error_message_and_exit_001033b0(undefined8 error_message)\n\n{\n  fprintf(error_stream,\"%s\\n\",error_message);\n                    \n  exit(2);\n}\n\n",
            "current_name": "print_error_message_and_exit_001033b0",
            "entrypoint": "0x001033b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001033b0": "print_error_message_and_exit_001033b0",
                "_stderr": "error_stream",
                "param_1": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001033d6": {
            "additional_data": {
                "FUN_001033d6": {
                    "create_buffer": 27,
                    "create_buffer_and_init": 1,
                    "create_buffer_with_initialization": 1,
                    "create_yy_buffer": 1,
                    "initialize_buffer": 1
                },
                "auVar3": {
                    "result": 17,
                    "result_buffer": 2,
                    "return_value": 7
                },
                "param_1": {
                    "arg1": 1,
                    "buffer_size": 1,
                    "file": 2,
                    "file1": 2,
                    "file_buffer": 1,
                    "file_contents": 1,
                    "file_descriptor": 1,
                    "file_handle": 1,
                    "file_name": 3,
                    "file_pointer": 2,
                    "file_ptr": 2,
                    "input_param_1": 1,
                    "param1": 8,
                    "param_1": 5
                },
                "param_2": {
                    "arg2": 1,
                    "file2": 2,
                    "file_handle_new": 1,
                    "file_mode": 2,
                    "file_name": 1,
                    "file_ptr": 1,
                    "file_ptr_2": 1,
                    "input_param_2": 1,
                    "mode": 1,
                    "param2": 9,
                    "param_2": 7,
                    "pointer_1": 1,
                    "ptr_2": 1,
                    "unknown_param_1": 1
                },
                "param_3": {
                    "arg3": 1,
                    "input_param_3": 1,
                    "param3": 11,
                    "param_3": 13,
                    "pointer_2": 1,
                    "ptr_3": 1,
                    "unknown_param_2": 1
                },
                "param_4": {
                    "arg4": 1,
                    "buffer_size": 3,
                    "initial_value": 1,
                    "input_param_4": 1,
                    "param4": 11,
                    "param_4": 12,
                    "param_value": 1,
                    "unknown_param_3": 1
                },
                "pvVar1": {
                    "buffer": 29,
                    "buffer_allocation": 1,
                    "buffer_ptr": 1
                },
                "pvVar2": {
                    "allocated_buffer": 2,
                    "allocated_memory": 3,
                    "buffer2": 4,
                    "buffer_2": 1,
                    "buffer_allocation_2": 1,
                    "buffer_data": 2,
                    "buffer_new": 1,
                    "buffer_ptr": 1,
                    "buffer_ptr_2": 1,
                    "data": 5,
                    "data_buffer": 3,
                    "data_ptr": 1,
                    "dynamic_memory": 3,
                    "dynamic_memory_ptr": 1,
                    "ptr": 2
                }
            },
            "called": [
                "FUN_001033b0",
                "FUN_001031cf",
                "FUN_001023b0"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nundefined  [16]\ncreate_yy_buffer_001033d6(undefined8 param1,undefined8 param2,undefined8 param_3,undefined8 param_4)\n\n{\n  void *buffer;\n  void *data;\n  undefined result [16];\n  \n  buffer = malloc(0x40);\n  if (buffer != (void *)0x0) goto LAB_001033f7;\n  do {\n    buffer = (void *)yy_fatal_error(\"out of dynamic memory in yy_create_buffer()\");\nLAB_001033f7:\n    *(undefined4 *)((long)buffer + 0x18) = 0x4000;\n    data = malloc(0x4002);\n    *(void **)((long)buffer + 8) = data;\n  } while (data == (void *)0x0);\n  *(undefined4 *)((long)buffer + 0x20) = 1;\n  yy_init_buffer(buffer,param1);\n  result._8_8_ = param_4;\n  result._0_8_ = buffer;\n  return result;\n}\n\n",
            "current_name": "create_yy_buffer_001033d6",
            "entrypoint": "0x001033d6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001033d6": "create_yy_buffer_001033d6",
                "auVar3": "result",
                "param_1": "param1",
                "param_2": "param2",
                "pvVar1": "buffer",
                "pvVar2": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010342d": {
            "additional_data": {
                "DAT_0010d660": {
                    "default_target": 1
                },
                "FUN_0010266f": {
                    "print_offsets": 1,
                    "replace_file": 1
                },
                "FUN_0010336b": {
                    "print_file_contents": 2
                },
                "FUN_0010342d": {
                    "display_archive_help": 1,
                    "print_archive_options": 2,
                    "print_archive_usage": 11,
                    "print_command_help": 1,
                    "print_usage": 15,
                    "print_usage_message": 1
                },
                "__stream": {
                    "file": 1,
                    "output_file": 1,
                    "output_stream": 24,
                    "stream": 5
                },
                "dcgettext": {
                    "get_localized_text": 1
                },
                "fprintf": {
                    "print_formatted": 1
                },
                "param_1": {
                    "is_error": 1,
                    "is_verbose": 5,
                    "option": 3,
                    "output_flag": 1,
                    "output_mode": 5,
                    "output_option": 2,
                    "output_to_file": 2,
                    "output_to_stdout": 7,
                    "param": 4,
                    "verbosity": 1
                },
                "pcVar2": {
                    "error_message": 4,
                    "localized_string": 3,
                    "localized_text": 1,
                    "message": 13,
                    "string_resource": 1,
                    "text": 4,
                    "translated_text": 3,
                    "translation": 2
                },
                "uVar1": {
                    "archive_description": 1,
                    "archive_file_name": 1,
                    "archive_file_path": 2,
                    "archive_filename": 1,
                    "archive_name": 6,
                    "archive_option": 1,
                    "data": 1,
                    "file_name": 1,
                    "file_pointer": 1,
                    "filename": 1,
                    "format_specifier": 1,
                    "format_string": 6,
                    "language": 1,
                    "local_variable1": 1,
                    "message": 1,
                    "str": 1,
                    "usage_msg": 1,
                    "usage_string": 1,
                    "version": 1
                }
            },
            "called": [
                "FUN_00102480",
                "FUN_0010336b",
                "FUN_00102310",
                "FUN_00102170",
                "FUN_0010266f"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid print_archive_usage_0010342d(uint output_to_stdout)\n\n{\n  undefined8 archive_name;\n  char *message;\n  FILE *output_stream;\n  \n  message = (char *)get_localized_text(0,\n                             \"Usage: %s [emulation options] [-]{dmpqrstx}[abcDfilMNoOPsSTuvV] [--plugin <name>] [member-name] [count] archive-file file...\\n\"\n                             ,5);\n  output_stream = _stderr;\n  if (output_to_stdout != 0) {\n    output_stream = _stdout;\n  }\n  print_formatted(output_stream,message,DAT_0010d660);\n  archive_name = DAT_0010d660;\n  message = (char *)get_localized_text(0,\"       %s -M [<mri-script]\\n\",5);\n  print_formatted(output_stream,message,archive_name);\n  message = (char *)get_localized_text(0,\" commands:\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  d            - delete file(s) from the archive\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  m[ab]        - move file(s) in the archive\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  p            - print file(s) found in the archive\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  q[f]         - quick append file(s) to the archive\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\n                             \"  r[ab][f][u]  - replace existing or insert new file(s) into the archive\\n\"\n                             ,5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  s            - act as ranlib\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  t[O][v]      - display contents of the archive\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  x[o]         - extract file(s) from the archive\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\" command specific modifiers:\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  [a]          - put file(s) after [member-name]\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  [b]          - put file(s) before [member-name] (same as [i])\\n\",5\n                            );\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  [D]          - use zero for timestamps and uids/gids (default)\\n\",\n                             5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  [U]          - use actual timestamps and uids/gids\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  [N]          - use instance [count] of name\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  [f]          - truncate inserted file names\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  [P]          - use full path names when matching\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  [o]          - preserve original dates\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  [O]          - display offsets of files in the archive\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\n                             \"  [u]          - only replace files that are newer than current archive contents\\n\"\n                             ,5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\" generic modifiers:\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  [c]          - do not warn if the library had to be created\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  [s]          - create an archive index (cf. ranlib)\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  [l <text> ]  - specify the dependencies of this library\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  [S]          - do not build a symbol table\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  [T]          - deprecated, use --thin instead\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  [v]          - be verbose\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  [V]          - display the version number\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  @<file>      - read options from <file>\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  --target=BFDNAME - specify the target object format as BFDNAME\\n\",\n                             5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\n                             \"  --output=DIRNAME - specify the output directory for extraction operations\\n\"\n                             ,5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\n                             \"  --record-libdeps=<text> - specify the dependencies of this library\\n\"\n                             ,5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  --thin       - make a thin archive\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\" optional:\\n\",5);\n  print_formatted(output_stream,message);\n  message = (char *)get_localized_text(0,\"  --plugin <p> - load the specified plugin\\n\",5);\n  print_formatted(output_stream,message);\n  ar_emul_default_usage(output_stream);\n  list_supported_targets(DAT_0010d660,output_stream);\n  if (output_to_stdout != 0) {\n    message = (char *)get_localized_text(0,\"Report bugs to %s\\n\",5);\n    print_formatted(output_stream,message,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  xexit(output_to_stdout ^ 1);\n}\n\n",
            "current_name": "print_archive_usage_0010342d",
            "entrypoint": "0x0010342d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010342d": "print_archive_usage_0010342d",
                "__stream": "output_stream",
                "dcgettext": "get_localized_text",
                "fprintf": "print_formatted",
                "param_1": "output_to_stdout",
                "pcVar2": "message",
                "uVar1": "archive_name"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010394a": {
            "additional_data": {
                "FUN_0010266f": {
                    "print_supported_targets": 1
                },
                "FUN_0010394a": {
                    "print_archive_index": 4,
                    "print_archive_info": 1,
                    "print_archive_options": 1,
                    "print_archive_usage": 5,
                    "print_usage": 18,
                    "print_usage_and_exit": 1,
                    "print_usage_message": 1
                },
                "__stream": {
                    "output_file": 1,
                    "output_stream": 24,
                    "stream": 5
                },
                "_stderr": {
                    "standard_error_stream": 5,
                    "std_err_stream": 1,
                    "stderr_stream": 2
                },
                "_stdout": {
                    "standard_output_stream": 5,
                    "std_out_stream": 1,
                    "stdout_stream": 2
                },
                "_stream": {
                    "output_stream": 1
                },
                "dcgettext": {
                    "get_localized_message": 1,
                    "get_localized_text": 1,
                    "get_message": 2,
                    "get_translated_message": 1,
                    "get_translated_string": 1,
                    "get_translated_text": 2,
                    "get_translation": 1,
                    "translate": 1
                },
                "fprintf": {
                    "formatted_print": 1,
                    "print_formatted": 1,
                    "print_formatted_message": 3,
                    "print_formatted_output": 1,
                    "print_to_stream": 2
                },
                "list_supported_targets": {
                    "list_supported_targets": 8,
                    "print_supported_targets": 2
                },
                "param_1": {
                    "flag": 7,
                    "format_options": 1,
                    "is_stdout": 1,
                    "is_verbose": 7,
                    "option": 3,
                    "option_flag": 5,
                    "options": 1,
                    "options_flag": 2,
                    "use_stdout": 1,
                    "verbosity": 1,
                    "verbosity_flag": 1,
                    "verbosity_level": 1
                },
                "param_2": {
                    "file_stream": 1
                },
                "pcVar2": {
                    "localization_string": 1,
                    "localized_message": 1,
                    "message": 22,
                    "message_string": 1,
                    "msg": 1,
                    "string": 1,
                    "text": 4
                },
                "uVar1": {
                    "archive_name": 4,
                    "current_directory": 1,
                    "dat_value": 1,
                    "format": 1,
                    "message": 3,
                    "program_name": 5,
                    "string_to_print": 1,
                    "symbol_map_timestamp": 1,
                    "usage": 3,
                    "usage_message": 1,
                    "usage_string": 4,
                    "usage_text": 1,
                    "version": 3,
                    "version_info": 1,
                    "version_string": 1
                },
                "xexit": {
                    "exit_program": 10
                }
            },
            "called": [
                "FUN_00102480",
                "FUN_00102310",
                "FUN_00102170",
                "FUN_0010266f"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid print_archive_usage_0010394a(uint flag)\n\n{\n  undefined8 program_name;\n  char *message;\n  FILE *output_stream;\n  \n  program_name = DAT_0010d660;\n  output_stream = standard_error_stream;\n  if (flag != 0) {\n    output_stream = standard_output_stream;\n  }\n  message = (char *)get_message(0,\"Usage: %s [options] archive\\n\",5);\n  print_formatted_message(output_stream,message,program_name);\n  message = (char *)get_message(0,\" Generate an index to speed access to archives\\n\",5);\n  print_formatted_message(output_stream,message);\n  message = (char *)get_message(0,\n                             \" The options are:\\n  @<file>                      Read options from <file>\\n\"\n                             ,5);\n  print_formatted_message(output_stream,message);\n  message = (char *)get_message(0,\"  --plugin <name>              Load the specified plugin\\n\",5);\n  print_formatted_message(output_stream,message);\n  message = (char *)get_message(0,\n                             \"  -D                           Use zero for symbol map timestamp (default)\\n  -U                           Use an actual symbol map timestamp\\n\"\n                             ,5);\n  print_formatted_message(output_stream,message);\n  message = (char *)get_message(0,\n                             \"  -t                           Update the archive\\'s symbol map timestamp\\n  -h --help                    Print this help message\\n  -v --version                 Print version information\\n\"\n                             ,5);\n  print_formatted_message(output_stream,message);\n  list_supported_targets(DAT_0010d660,output_stream);\n  if (flag != 0) {\n    message = (char *)get_message(0,\"Report bugs to %s\\n\",5);\n    print_formatted_message(output_stream,message,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  exit_program(flag ^ 1);\n}\n\n",
            "current_name": "print_archive_usage_0010394a",
            "entrypoint": "0x0010394a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010394a": "print_archive_usage_0010394a",
                "__stream": "output_stream",
                "_stderr": "standard_error_stream",
                "_stdout": "standard_output_stream",
                "_stream": "output_stream",
                "dcgettext": "get_message",
                "fprintf": "print_formatted_message",
                "param_1": "flag",
                "pcVar2": "message",
                "uVar1": "program_name",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103a78": {
            "additional_data": {
                "DAT_0010d60c": {
                    "enable_print": 1,
                    "print_flag": 1
                },
                "FUN_00103a78": {
                    "extract_and_print_archive": 10,
                    "extract_and_print_archive_content": 1,
                    "extract_and_print_archive_contents": 3,
                    "extract_and_print_archive_from_file": 1,
                    "extract_and_print_archived_data": 1,
                    "extract_archive": 1,
                    "extract_archive_and_print": 1,
                    "extract_archive_contents": 2,
                    "extract_data_from_binary": 2,
                    "process_archive": 6,
                    "process_archive_file": 1,
                    "process_binary": 2
                },
                "__ptr": {
                    "buffer": 30,
                    "dynamic_memory": 1
                },
                "_stdout": {
                    "standard_output": 1,
                    "stdout": 1
                },
                "auStack_b8": {
                    "auxiliary_stack": 1,
                    "local_array": 1,
                    "local_buffer": 1,
                    "stack_buffer": 15,
                    "stack_data": 1,
                    "temp_buffer": 2,
                    "temp_stack": 3,
                    "temp_stack_buffer": 2,
                    "temporaries": 1,
                    "temporary_storage": 1
                },
                "iVar1": {
                    "is_valid_archive": 1,
                    "result": 18,
                    "result_code": 1,
                    "status": 3,
                    "status_code": 1
                },
                "local_88": {
                    "archive_size": 5,
                    "buffer_size": 6,
                    "bytes_to_read": 1,
                    "desired_bytes": 1,
                    "expected_archive_size": 1,
                    "expected_bytes_to_read": 1,
                    "expected_size": 1,
                    "file_size": 1,
                    "filesize": 1,
                    "full_size": 1,
                    "local_bytes_expected": 1,
                    "max_buffer_size": 1,
                    "max_bytes_to_read": 4,
                    "max_read_size": 1,
                    "read_buffer_size": 1,
                    "seek_position": 2,
                    "total_bytes_to_read": 1
                },
                "param_1": {
                    "archive": 7,
                    "archive_file": 2,
                    "archive_file_path": 1,
                    "archive_handle": 1,
                    "archive_info": 5,
                    "archive_pointer": 1,
                    "args": 2,
                    "arguments": 2,
                    "binary": 1,
                    "binary_data": 1,
                    "input": 2,
                    "input_data": 1,
                    "input_params": 2,
                    "parameters": 1
                },
                "pcVar7": {
                    "err_msg": 1,
                    "err_msg_format": 1,
                    "error_message": 8,
                    "error_message_format": 1,
                    "error_msg_format": 1,
                    "error_msg_template": 1,
                    "error_str": 2,
                    "error_string": 16
                },
                "piVar6": {
                    "err_num": 1,
                    "errno_loc": 2,
                    "errno_location": 8,
                    "errno_pointer": 2,
                    "errno_ptr": 8,
                    "error": 1,
                    "error_code": 1,
                    "error_location": 1,
                    "error_location_ptr": 1,
                    "error_number": 3,
                    "error_pointer": 2,
                    "error_ptr": 1
                },
                "puVar2": {
                    "alt_input": 1,
                    "alternative_archive_info": 1,
                    "archive_file_ptr": 1,
                    "archive_header": 1,
                    "archive_ptr": 6,
                    "archived_data": 1,
                    "func_pointer": 1,
                    "function_pointer": 1,
                    "function_ptr": 2,
                    "param2": 1,
                    "param_ptr": 1,
                    "pointer": 1,
                    "ptr": 4,
                    "ptr_or_archive_info": 1,
                    "ptr_to_1d": 1,
                    "ptr_to_archive": 1,
                    "ptr_to_input_params": 1,
                    "secondary_archive_handle": 1,
                    "secondary_archive_info": 1,
                    "secondary_arguments": 1,
                    "target_object": 1,
                    "var2": 1
                },
                "sVar5": {
                    "bytes_written": 31
                },
                "uVar3": {
                    "bytes_read": 29,
                    "read_bytes": 1,
                    "read_size": 1
                },
                "uVar4": {
                    "err_msg": 1,
                    "error": 1,
                    "error_message": 19,
                    "error_msg": 7,
                    "error_string": 1,
                    "localized_string": 1,
                    "message": 1
                },
                "unaff_R13": {
                    "bytes_processed": 1,
                    "bytes_read": 2,
                    "total_bytes_read": 19,
                    "total_bytes_written": 4,
                    "total_read": 1,
                    "total_read_bytes": 2
                },
                "unaff_R14": {
                    "archive_file_size": 1,
                    "archive_size": 17,
                    "file_size": 3,
                    "total_bytes": 3,
                    "total_bytes_expected": 1,
                    "total_bytes_to_read": 2,
                    "total_bytes_to_write": 1,
                    "total_size": 1
                },
                "unaff_RBP": {
                    "bytes_remaining": 1,
                    "remaining_buffer_size": 1,
                    "remaining_bytes": 28,
                    "remaining_data_size": 1
                }
            },
            "called": [
                "FUN_001021a0",
                "FUN_00107690",
                "FUN_00102030",
                "FUN_00102580",
                "FUN_00102230",
                "FUN_00102060",
                "FUN_00102540",
                "FUN_00102550",
                "FUN_00102510",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid extract_and_print_archive_contents_00103a78(undefined8 *archive)\n\n{\n  int result;\n  void *buffer;\n  undefined8 *archive_ptr;\n  ulong bytes_read;\n  undefined8 error_message;\n  size_t bytes_written;\n  int *errno_ptr;\n  size_t remaining_bytes;\n  char *error_string;\n  ulong total_bytes_read;\n  ulong archive_size;\n  undefined stack_buffer [48];\n  ulong buffer_size;\n  \n  buffer = (void *)xmalloc(0x2000);\n  archive_ptr = (undefined8 *)archive[0x1d];\n  if ((undefined8 *)archive[0x1d] == (undefined8 *)0x0) {\n    archive_ptr = archive;\n  }\n  result = (**(code **)(archive_ptr[1] + 0x1e8))(archive,stack_buffer);\n  if (result == 0) {\n    if (DAT_0010d60c != 0) {\n      printf(\"\\n<%s>\\n\\n\",*archive);\n    }\n    total_bytes_read = 0;\n    bfd_seek(archive,0,0);\n    goto LAB_00103afd;\n  }\n  archive = (undefined8 *)*archive;\n  error_string = \"internal stat error on %s\";\n  do {\n    error_message = dcgettext(0,error_string,5);\n    fatal(error_message,archive);\n    buffer_size = archive_size;\n    do {\n      bytes_written = fwrite(buffer,1,remaining_bytes,stdout);\n      if (bytes_written != remaining_bytes) {\n        errno_ptr = __errno_location();\n        error_string = strerror(*errno_ptr);\n        fatal(\"stdout: %s\",error_string);\nLAB_00103b91:\n        free(buffer);\n        return;\n      }\n      total_bytes_read = total_bytes_read + bytes_written;\nLAB_00103afd:\n      if (buffer_size <= total_bytes_read) goto LAB_00103b91;\n      remaining_bytes = buffer_size - total_bytes_read;\n      if (0x2000 < remaining_bytes) {\n        remaining_bytes = 0x2000;\n      }\n      bytes_read = bfd_bread(buffer,remaining_bytes,archive);\n    } while (remaining_bytes == bytes_read);\n    error_string = \"%s is not a valid archive\";\n    archive = *(undefined8 **)archive[0x1d];\n    archive_size = buffer_size;\n  } while( true );\n}\n\n",
            "current_name": "extract_and_print_archive_contents_00103a78",
            "entrypoint": "0x00103a78",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103a78": "extract_and_print_archive_contents_00103a78",
                "__ptr": "buffer",
                "_stdout": "stdout",
                "auStack_b8": "stack_buffer",
                "iVar1": "result",
                "local_88": "buffer_size",
                "param_1": "archive",
                "pcVar7": "error_string",
                "piVar6": "errno_ptr",
                "puVar2": "archive_ptr",
                "sVar5": "bytes_written",
                "uVar3": "bytes_read",
                "uVar4": "error_message",
                "unaff_R13": "total_bytes_read",
                "unaff_R14": "archive_size",
                "unaff_RBP": "remaining_bytes"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103ba8": {
            "additional_data": {
                "FUN_00103ba8": {
                    "check_and_print_ar": 2,
                    "check_and_print_arrows": 1,
                    "check_ar_status": 2,
                    "check_hardware_availability": 1,
                    "check_output_availability": 1,
                    "check_status": 1,
                    "display_ar_message": 1,
                    "print_active_ar": 1,
                    "print_active_region": 1,
                    "print_ar": 4,
                    "print_ar_greater_than_threshold": 1,
                    "print_ar_if_not_empty": 1,
                    "print_ar_if_not_zero": 1,
                    "print_ar_message": 2,
                    "print_ar_prefix": 1,
                    "print_ar_prompt": 2,
                    "print_arrows_if_greater_than_zero": 1,
                    "print_control_message": 1,
                    "print_if_ar_is_greater_than_zero": 2,
                    "print_message_if_ar_is_greater_than_zero": 1,
                    "print_message_if_ar_set": 1,
                    "print_prompt_if_not_armed": 1,
                    "print_prompt_message": 1
                },
                "_DAT_0010d608": {
                    "active_ar": 1,
                    "active_region_flag": 1,
                    "ar": 1,
                    "ar_flag": 1,
                    "ar_status": 1,
                    "ar_value": 1,
                    "armed_flag": 1,
                    "arrow_count": 1,
                    "control_flag": 1,
                    "data_flag": 1,
                    "flag": 2,
                    "hardware_status": 1,
                    "is_ar_active": 1,
                    "is_ar_set": 1,
                    "output_available": 1,
                    "some_flag": 1,
                    "status": 1,
                    "status_flag": 1,
                    "threshold_value": 1
                },
                "_stdout": {
                    "output_stream": 2,
                    "standard_output": 3,
                    "standard_output_stream": 1,
                    "stdout": 1
                },
                "fflush": {
                    "flush_output": 1
                },
                "printf": {
                    "print_arrow_message": 1,
                    "print_message": 1
                },
                "stdout": {
                    "output_stream": 1
                }
            },
            "called": [
                "FUN_001021a0",
                "FUN_001023c0"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\n\n\nvoid print_message_if_ar_set_00103ba8(void)\n\n{\n  if (_DAT_0010d608 != 0) {\n    print_arrow_message(\"AR >\");\n    flush_output(standard_output);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_message_if_ar_set_00103ba8",
            "entrypoint": "0x00103ba8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103ba8": "print_message_if_ar_set_00103ba8",
                "_stdout": "standard_output",
                "fflush": "flush_output",
                "printf": "print_arrow_message",
                "stdout": "output_stream"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103bd1": {
            "additional_data": {
                "FUN_00103bd1": {
                    "print_matching_formats": 31
                },
                "__format": {
                    "format_message": 2,
                    "format_str": 1,
                    "format_string": 21,
                    "localized_string": 2,
                    "message_format": 1
                },
                "_stderr": {
                    "standard_error": 7,
                    "stderr_stream": 1
                },
                "_stdout": {
                    "standard_output": 8,
                    "stdout_stream": 1
                },
                "dcgettext": {
                    "get_translated_string": 1
                },
                "fprintf": {
                    "print_formatted": 1
                },
                "param_1": {
                    "format_list": 6,
                    "format_strings": 8,
                    "formats": 14,
                    "formats_list": 2,
                    "input_formats": 1
                },
                "plVar2": {
                    "current_format": 24,
                    "current_format_string": 2,
                    "current_string": 1
                },
                "uVar1": {
                    "dat_value": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "default_format": 3,
                    "default_value": 1,
                    "format_string": 3,
                    "local_var1": 1,
                    "matching_formats": 6,
                    "matching_formats_message": 1,
                    "saved_dat": 1,
                    "some_variable": 1,
                    "translation": 1,
                    "user_data": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_00102030",
                "FUN_001023c0",
                "FUN_00102280",
                "FUN_00102310",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00105300"
            ],
            "code": "\n\n\nvoid print_matching_formats_00103bd1(long *formats)\n\n{\n  undefined8 matching_formats;\n  char *format_string;\n  long *current_format;\n  \n  fflush(standard_output);\n  matching_formats = DAT_0010d660;\n  format_string = (char *)get_translated_string(0,\"%s: Matching formats:\",5);\n  print_formatted(standard_error,format_string,matching_formats);\n  for (current_format = formats; *current_format != 0; current_format = current_format + 1) {\n    print_formatted(standard_error,\" %s\");\n  }\n  free(formats);\n  fputc(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_matching_formats_00103bd1",
            "entrypoint": "0x00103bd1",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103bd1": "print_matching_formats_00103bd1",
                "__format": "format_string",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "dcgettext": "get_translated_string",
                "fprintf": "print_formatted",
                "param_1": "formats",
                "plVar2": "current_format",
                "uVar1": "matching_formats"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103c60": {
            "additional_data": {
                "DAT_0010d558": {
                    "output_archive": 2
                },
                "DAT_0010d560": {
                    "temp_file_path": 1,
                    "temporary_file_path": 1
                },
                "DAT_0010d568": {
                    "output_mode": 1,
                    "tempname_parameter": 1
                },
                "DAT_0010d570": {
                    "archive_file_path_copy": 1,
                    "input_archive_duplicate": 1
                },
                "DAT_0010d660": {
                    "program_name": 1
                },
                "FUN_00103c60": {
                    "archive_to_file": 1,
                    "compile_archive": 1,
                    "create_archive": 1,
                    "create_output_archive": 6,
                    "create_temp_file": 1,
                    "extract_and_modify_archive": 2,
                    "extract_and_write_archives": 1,
                    "extract_archive": 2,
                    "extract_archive_to_file": 1,
                    "extract_archived_files": 3,
                    "extract_archives": 1,
                    "extract_plugin_files": 1,
                    "generate_output_file": 1,
                    "process_archive": 2,
                    "process_archive_file": 1,
                    "process_archives": 6
                },
                "__errno_location": {
                    "get_errno_location": 1
                },
                "_stderr": {
                    "error_output_stream": 1,
                    "error_stream": 2,
                    "standard_error": 1,
                    "standard_error_output": 1,
                    "standard_error_stream": 1
                },
                "bfd_check_format": {
                    "check_file_format": 1,
                    "check_format": 1
                },
                "bfd_fdopenw": {
                    "open_output_archive": 2
                },
                "bfd_openr": {
                    "open_input_archive": 2
                },
                "bfd_openr_next_archived_file": {
                    "get_next_archived_file": 2
                },
                "bfd_set_format": {
                    "set_file_format": 1,
                    "set_output_format": 1
                },
                "cVar1": {
                    "check_format_result": 3,
                    "check_result": 2,
                    "format_check": 6,
                    "format_check_result": 9,
                    "is_archive": 1,
                    "is_archive_format": 1
                },
                "dcgettext": {
                    "get_error_translation": 1
                },
                "fprintf": {
                    "print_error_message": 3
                },
                "lVar4": {
                    "archive_handle": 1,
                    "input_archive": 16,
                    "input_archive_descriptor": 1,
                    "input_archive_handle": 8,
                    "input_bfd": 2,
                    "input_bfd_handle": 1,
                    "opened_input_archive": 1
                },
                "lVar5": {
                    "archived_file": 18,
                    "archived_file_descriptor": 1,
                    "archived_file_handle": 8,
                    "file_handle": 2,
                    "next_archived_file": 1
                },
                "make_tempname": {
                    "generate_temp_name": 1,
                    "generate_temporary_name": 1
                },
                "maybequit": {
                    "maybe_quit": 1,
                    "terminate_execution": 1,
                    "terminate_program": 1
                },
                "param_1": {
                    "archive_file_path": 1,
                    "archive_path": 6,
                    "input_archive": 4,
                    "input_archive_name": 2,
                    "input_archive_path": 10,
                    "input_file": 3,
                    "input_file_name": 1,
                    "output_file": 1,
                    "str_error": 1,
                    "strerror": 1
                },
                "param_2": {
                    "create_new_archive": 1,
                    "create_output_archive": 1,
                    "enable_plugin": 1,
                    "flag": 7,
                    "format": 1,
                    "include_header_flag": 1,
                    "is_output_archive": 5,
                    "is_plugin": 10,
                    "is_reversed": 1,
                    "open_output": 1,
                    "output_flag": 1
                },
                "pcVar3": {
                    "error_format": 1,
                    "error_message": 29
                },
                "piVar2": {
                    "err_no": 1,
                    "errno_location": 6,
                    "errno_pointer": 1,
                    "errno_ptr": 6,
                    "error_code": 1,
                    "error_code_ptr": 1,
                    "error_location": 10,
                    "error_number": 2,
                    "error_ptr": 1
                },
                "plVar7": {
                    "archived_file_addresses": 1,
                    "archived_file_handle_pointer": 1,
                    "archived_file_ptr": 2,
                    "archived_files": 3,
                    "archived_files_array": 1,
                    "archived_files_list": 1,
                    "archived_files_ptr": 2,
                    "current_archive": 1,
                    "current_archived_file": 2,
                    "current_archived_file_ptr": 1,
                    "current_file": 1,
                    "current_file_handle": 3,
                    "current_file_ptr": 1,
                    "file_ptr": 1,
                    "next_archived_file": 3,
                    "next_archived_file_pointer": 1,
                    "next_file_handle": 1,
                    "output_archive_handle_ptr": 1,
                    "output_bfd_handle": 1,
                    "previous_archived_file_handle": 1,
                    "stored_files": 1
                },
                "strerror": {
                    "get_error_message": 1
                },
                "uVar6": {
                    "binary_name": 1,
                    "data": 1,
                    "error": 1,
                    "error_detail": 1,
                    "error_message": 1,
                    "file_name": 1,
                    "output_archive_path": 1,
                    "plugin_name": 1,
                    "program_name": 20,
                    "temp_file_error_message": 1,
                    "translation": 1
                },
                "xstrdup": {
                    "duplicate_string": 1
                }
            },
            "called": [
                "FUN_0010315d",
                "FUN_00102130",
                "FUN_00102530",
                "FUN_00102060",
                "FUN_00102270",
                "FUN_00102550",
                "FUN_00102340",
                "FUN_001057a0",
                "FUN_00102310",
                "FUN_00102570",
                "FUN_00102520",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\n\n\nvoid create_output_archive_00103c60(char *input_archive_path,int is_plugin)\n\n{\n  char format_check_result;\n  int *error_location;\n  char *error_message;\n  long input_archive;\n  long archived_file;\n  undefined8 program_name;\n  long *next_archived_file;\n  \n  DAT_0010d570 = duplicate_string();\n  DAT_0010d560 = (char *)generate_temporary_name(DAT_0010d570,&DAT_0010d568);\n  if (DAT_0010d560 == (char *)0x0) {\n    error_location = get_errno_location();\n    input_archive_path = get_error_message(*error_location);\n    program_name = DAT_0010d660;\n    error_message = (char *)get_error_translation(0,\"%s: Can\\'t open temporary file (%s)\\n\",5);\n  }\n  else {\n    DAT_0010d558 = open_output_archive(DAT_0010d560,0,DAT_0010d568);\n    if (DAT_0010d558 == 0) {\n      error_message = \"%s: Can\\'t open output archive %s\\n\";\n      input_archive_path = DAT_0010d560;\n    }\n    else {\n      if (is_plugin != 0) {\nLAB_00103d02:\n        set_file_format(DAT_0010d558,2);\n        *(byte *)(DAT_0010d558 + 0x49) = *(byte *)(DAT_0010d558 + 0x49) & 0xe7 | 8;\n        return;\n      }\n      input_archive = open_input_archive(input_archive_path,\"plugin\");\n      if (input_archive == 0) {\n        error_message = \"%s: Can\\'t open input archive %s\\n\";\n      }\n      else {\n        format_check_result = check_file_format(input_archive,2);\n        if (format_check_result != '\\0') {\n          next_archived_file = (long *)(DAT_0010d558 + 0xf8);\n          for (archived_file = get_next_archived_file(input_archive,0); archived_file != 0;\n              archived_file = get_next_archived_file(input_archive,archived_file)) {\n            *next_archived_file = archived_file;\n            next_archived_file = (long *)(archived_file + 0xf0);\n          }\n          goto LAB_00103d02;\n        }\n        error_message = \"%s: file %s is not an archive\\n\";\n      }\n    }\n    program_name = DAT_0010d660;\n    error_message = (char *)get_error_translation(0,error_message,5);\n  }\n  print_error_message(error_stream,error_message,program_name,input_archive_path);\n  maybe_quit();\n  return;\n}\n\n",
            "current_name": "create_output_archive_00103c60",
            "entrypoint": "0x00103c60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103c60": "create_output_archive_00103c60",
                "__errno_location": "get_errno_location",
                "_stderr": "error_stream",
                "bfd_check_format": "check_file_format",
                "bfd_fdopenw": "open_output_archive",
                "bfd_openr": "open_input_archive",
                "bfd_openr_next_archived_file": "get_next_archived_file",
                "bfd_set_format": "set_file_format",
                "cVar1": "format_check_result",
                "dcgettext": "get_error_translation",
                "fprintf": "print_error_message",
                "lVar4": "input_archive",
                "lVar5": "archived_file",
                "make_tempname": "generate_temporary_name",
                "maybequit": "maybe_quit",
                "param_1": "input_archive_path",
                "param_2": "is_plugin",
                "pcVar3": "error_message",
                "piVar2": "error_location",
                "plVar7": "next_archived_file",
                "strerror": "get_error_message",
                "uVar6": "program_name",
                "xstrdup": "duplicate_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103ddc": {
            "additional_data": {
                "DAT_0010d578": {
                    "array_data": 1,
                    "array_description": 1,
                    "array_descriptor": 2,
                    "desc_ptr": 1,
                    "description_ptr": 1
                },
                "DAT_0010d60c": {
                    "condition_flag": 1,
                    "flag": 2,
                    "flag_data": 1,
                    "is_element_valid": 1
                },
                "FUN_00103ddc": {
                    "print_arelt_descr": 7,
                    "print_arelt_descr_wrapper": 2,
                    "print_arelt_description": 7,
                    "print_array_element": 3,
                    "print_array_element_description": 7,
                    "print_array_element_descriptor": 3,
                    "print_element_description": 2
                },
                "FUN_001079c0": {
                    "print_array_element_description": 1,
                    "print_file": 2,
                    "print_file_content": 4,
                    "print_file_contents": 5,
                    "print_file_data": 1,
                    "print_file_description": 1,
                    "print_file_element": 1,
                    "print_file_info": 1,
                    "print_file_param": 2,
                    "print_file_param_chars": 1,
                    "print_file_with_params": 1
                },
                "param_1": {
                    "arg": 1,
                    "arg_1": 1,
                    "array_element": 4,
                    "data": 1,
                    "element": 3,
                    "file": 9,
                    "file_descriptor": 4,
                    "file_param": 1,
                    "file_pointer": 2,
                    "file_ptr": 1,
                    "file_stream": 1,
                    "input": 1,
                    "input_data": 1,
                    "param": 1
                },
                "param_2": {
                    "argument_array": 1,
                    "arguments": 2,
                    "array": 2,
                    "array_of_strings": 2,
                    "file_contents": 1,
                    "file_lines": 3,
                    "file_name": 1,
                    "file_names": 1,
                    "file_pointer": 1,
                    "lines": 1,
                    "string_array": 3,
                    "strings": 6
                },
                "param_3": {
                    "char1": 5,
                    "char_1": 2,
                    "character1": 1,
                    "character_1": 1,
                    "flag1": 2,
                    "flag_1": 12,
                    "option_1": 1,
                    "string_array": 1
                },
                "param_4": {
                    "char2": 5,
                    "char_2": 2,
                    "character2": 1,
                    "character_2": 1,
                    "flag": 1,
                    "flag2": 2,
                    "flag_2": 12,
                    "option_2": 1
                }
            },
            "called": [
                "FUN_001079c0"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nvoid print_array_element_description_00103ddc(undefined8 file)\n\n{\n  print_arelt_descr(DAT_0010d578,file,DAT_0010d60c != 0,0);\n  return;\n}\n\n",
            "current_name": "print_array_element_description_00103ddc",
            "entrypoint": "0x00103ddc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103ddc": "print_array_element_description_00103ddc",
                "param_1": "file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103df9": {
            "additional_data": {
                "FUN_00103df9": {
                    "allocate_memory": 1,
                    "ensure_buffer_stack": 26,
                    "expand_buffer": 1,
                    "expand_buffer_stack": 2,
                    "resize_buffer": 1
                },
                "__size": {
                    "buffer_size": 14,
                    "new_size": 2,
                    "size": 2,
                    "total_size": 6
                },
                "bVar4": {
                    "byte_flag": 2,
                    "byte_value": 3,
                    "byte_var": 2,
                    "byte_variable": 1,
                    "counter": 1,
                    "flag": 8,
                    "increment": 1,
                    "is_zero": 1,
                    "loop_condition": 3,
                    "loop_count": 1,
                    "loop_counter": 2,
                    "loop_flag": 1,
                    "loop_increment": 2,
                    "loop_variable": 1,
                    "temp_byte": 1,
                    "zero": 1
                },
                "in_RCX": {
                    "input": 6,
                    "input_param": 3,
                    "input_parameter": 1,
                    "input_pointer": 1,
                    "result": 3,
                    "return_value": 16
                },
                "lVar1": {
                    "counter": 2,
                    "index": 3,
                    "loop_count": 1,
                    "loop_counter": 19,
                    "loop_index": 2,
                    "loop_var": 1,
                    "loop_variable": 2,
                    "loop_variable_1": 1
                },
                "lVar2": {
                    "loop_variable_2": 1,
                    "new_buffer_size": 10,
                    "new_length": 1,
                    "new_size": 19
                },
                "param_1": {
                    "in_rcx": 1
                },
                "puVar3": {
                    "buffer": 1,
                    "buffer_pointer": 5,
                    "buffer_ptr": 15,
                    "current_pointer": 1,
                    "current_ptr": 5,
                    "pointer": 1,
                    "ptr": 3
                },
                "yy_fatal_error": {
                    "handle_error": 1,
                    "handle_fatal_error": 2
                }
            },
            "called": [
                "FUN_00102400",
                "FUN_001033b0",
                "FUN_001022d0"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nundefined8 ensure_buffer_stack_00103df9(void)\n\n{\n  size_t buffer_size;\n  undefined8 return_value;\n  long loop_counter;\n  long new_size;\n  undefined4 *buffer_ptr;\n  byte flag;\n  \n  flag = 0;\n  if (DAT_0010d5a8 == (void *)0x0) {\n    DAT_0010d5a8 = calloc(8,1);\n    if (DAT_0010d5a8 != (void *)0x0) {\n      DAT_0010d580 = 1;\n      DAT_0010d5a0 = 0;\n      return return_value;\n    }\n  }\n  else {\n    if (DAT_0010d5a0 < DAT_0010d580 - 1U) {\n      return return_value;\n    }\n    new_size = DAT_0010d580 + 8;\n    buffer_size = new_size * 8;\n    DAT_0010d5a8 = realloc(DAT_0010d5a8,buffer_size);\n    if (DAT_0010d5a8 != (void *)0x0) {\n      buffer_ptr = (undefined4 *)((long)DAT_0010d5a8 + (buffer_size - 0x40));\n      DAT_0010d580 = new_size;\n      for (loop_counter = 0x10; loop_counter != 0; loop_counter = loop_counter + -1) {\n        *buffer_ptr = 0;\n        buffer_ptr = buffer_ptr + (ulong)flag * -2 + 1;\n      }\n      return return_value;\n    }\n  }\n  handle_fatal_error(\"out of dynamic memory in yyensure_buffer_stack_00103df9()\");\n  DAT_0010d5a0 = 0;\n  DAT_0010d580 = 1;\n  return return_value;\n}\n\n",
            "current_name": "ensure_buffer_stack_00103df9",
            "entrypoint": "0x00103df9",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103df9": "ensure_buffer_stack_00103df9",
                "__size": "buffer_size",
                "bVar4": "flag",
                "in_RCX": "return_value",
                "lVar1": "loop_counter",
                "lVar2": "new_size",
                "puVar3": "buffer_ptr",
                "yy_fatal_error": "handle_fatal_error"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103e95": {
            "additional_data": {
                "FUN_0010300e": {
                    "sub_function_6": 1
                },
                "FUN_0010306e": {
                    "sub_function_10": 1
                },
                "FUN_001030ed": {
                    "sub_function_14": 1
                },
                "FUN_0010312d": {
                    "sub_function_5": 1
                },
                "FUN_0010315d": {
                    "sub_function_15": 1
                },
                "FUN_001031a5": {
                    "sub_function_16": 1
                },
                "FUN_001031cf": {
                    "sub_function_18": 1
                },
                "FUN_001032a8": {
                    "sub_function_20": 1
                },
                "FUN_001033d6": {
                    "sub_function_2": 1
                },
                "FUN_00103ba8": {
                    "sub_function_3": 1
                },
                "FUN_00103c60": {
                    "sub_function_7": 1
                },
                "FUN_00103ddc": {
                    "sub_function_1": 1
                },
                "FUN_00103df9": {
                    "sub_function_21": 1
                },
                "FUN_00103e95": {
                    "decompile_and_improve": 1,
                    "decompile_code": 1,
                    "decompiled_function": 4,
                    "extract_data_from_file": 1,
                    "reverse_virus_scanner": 1
                },
                "FUN_00103ee9": {
                    "create_buffer": 1,
                    "sub_function_30": 1
                },
                "FUN_00103fd8": {
                    "expand_buffer": 1,
                    "sub_function_31": 1
                },
                "FUN_001040b1": {
                    "initialize_parser": 1
                },
                "FUN_001040d4": {
                    "parse_input": 1,
                    "sub_function_27": 1
                },
                "FUN_0010419f": {
                    "handle_action": 1,
                    "sub_function_28": 1
                },
                "FUN_001041f0": {
                    "check_action": 1,
                    "sub_function_29": 1
                },
                "FUN_0010497d": {
                    "map_action": 1,
                    "sub_function_19": 1
                },
                "FUN_001049db": {
                    "handle_input": 1,
                    "sub_function_23": 1
                },
                "FUN_00104a0a": {
                    "handle_directive_action": 1,
                    "sub_function_22": 1
                },
                "FUN_00104adf": {
                    "handle_match": 1
                },
                "FUN_00104b4f": {
                    "handle_open_output_archive": 1
                },
                "FUN_00104b62": {
                    "handle_error": 1
                },
                "FUN_00104f2e": {
                    "handle_output_archive": 1
                },
                "FUN_001051f0": {
                    "sub_function_25": 1
                },
                "FUN_00105227": {
                    "handle_compression": 1,
                    "sub_function_24": 1
                },
                "FUN_0010524c": {
                    "cleanup_and_return": 1,
                    "sub_function_26": 1
                },
                "FUN_00105265": {
                    "free_memory": 1
                },
                "FUN_00105300": {
                    "map_action_symbol": 1,
                    "sub_function_8": 1
                },
                "FUN_00105330": {
                    "handle_sub_function": 1
                },
                "FUN_00105bc0": {
                    "sub_function_11": 1
                },
                "FUN_00107740": {
                    "sub_function_13": 1
                },
                "auVar40": {
                    "array_of_undefined_variables": 1,
                    "array_of_undefined_with_size_16": 1,
                    "array_of_unsigned_variables40": 1,
                    "atomic_var_40": 1,
                    "au_var40": 1,
                    "temp_buffer": 1,
                    "undefined16_array": 1,
                    "undefined16_var": 1,
                    "undefined_array": 1,
                    "undefined_array16": 1,
                    "undefined_array_16": 1,
                    "undefined_var40": 1,
                    "undefined_variable_40": 1,
                    "value10": 1
                },
                "auVar41": {
                    "array_of_undefined_variables": 1,
                    "array_of_undefined_with_size_16": 1,
                    "array_of_unsigned_variables41": 1,
                    "atomic_var_41": 1,
                    "au_var41": 1,
                    "temp_buffer2": 1,
                    "undefined16_array": 1,
                    "undefined16_var_2": 1,
                    "undefined_array16": 1,
                    "undefined_array2": 1,
                    "undefined_array_16": 1,
                    "undefined_var41": 1,
                    "undefined_variable_41": 1,
                    "value11": 1
                },
                "bVar28": {
                    "bool": 1,
                    "bool_var28": 2,
                    "bool_variable": 4,
                    "boolean": 2,
                    "boolean_value2": 1,
                    "boolean_var_28": 1,
                    "boolean_variable": 1,
                    "boolean_variable28": 1,
                    "boolean_variable_1": 1,
                    "boolean_variable_28": 2,
                    "flag": 1,
                    "found_state": 2
                },
                "bVar30": {
                    "bool_var30": 1,
                    "boolean_var_30": 1,
                    "boolean_variable30": 1,
                    "boolean_variable_2": 1,
                    "boolean_variable_30": 1,
                    "byte": 3,
                    "byte_value2": 1,
                    "byte_var30": 1,
                    "byte_variable": 5,
                    "byte_variable_30": 1,
                    "character": 1,
                    "flag": 1,
                    "transition_character": 1
                },
                "bVar39": {
                    "bool_var39": 1,
                    "byte": 1,
                    "byte_var39": 1,
                    "byte_variable": 1,
                    "loop_flag": 1
                },
                "cVar2": {
                    "char_var": 1,
                    "char_var2": 1,
                    "char_variable": 1,
                    "character": 4,
                    "character_var": 2,
                    "character_variable": 7,
                    "character_variable_2": 1
                },
                "iVar160": {
                    "error_flag": 1
                },
                "iVar25": {
                    "count": 1,
                    "int_var25": 1,
                    "int_variable": 1,
                    "integer": 3,
                    "integer2": 1,
                    "integer_var25": 1,
                    "integer_var_25": 1,
                    "integer_variable": 4,
                    "integer_variable25": 1,
                    "integer_variable_25": 2,
                    "integer_variable_3": 1,
                    "module_index": 1,
                    "value7": 1
                },
                "iVar255": {
                    "reallocate_size": 1
                },
                "iVar37": {
                    "action_type": 1,
                    "index": 1,
                    "int_var37": 1,
                    "integer": 1,
                    "integer_var37": 1,
                    "integer_var_37": 1,
                    "state_index": 1
                },
                "iVar8": {
                    "action_identifier": 1,
                    "index": 1,
                    "index2": 1,
                    "int_var": 1,
                    "int_var8": 1,
                    "int_variable": 1,
                    "integer": 3,
                    "integer_var": 1,
                    "integer_var8": 1,
                    "integer_variable": 5,
                    "integer_variable8": 1,
                    "integer_variable_1": 1,
                    "integer_variable_8": 2
                },
                "iVar9": {
                    "int_var9": 1,
                    "int_var_2": 1,
                    "integer": 3,
                    "integer_var9": 1,
                    "integer_var_9": 1,
                    "integer_variable": 3,
                    "integer_variable9": 1,
                    "integer_variable_2": 2,
                    "integer_variable_9": 1,
                    "loop_counter": 1,
                    "loop_counter4": 1,
                    "result": 2,
                    "value6": 1
                },
                "lVar17": {
                    "length": 1,
                    "long": 3,
                    "long_value6": 1,
                    "long_var17": 2,
                    "long_var_17": 1,
                    "long_var_2": 1,
                    "long_variable": 6,
                    "long_variable17": 1,
                    "long_variable_1": 1,
                    "long_variable_17": 2
                },
                "lVar18": {
                    "buffer_size": 1,
                    "count": 2,
                    "long": 3,
                    "long_value5": 1,
                    "long_var18": 2,
                    "long_var_18": 1,
                    "long_var_3": 1,
                    "long_variable": 5,
                    "long_variable18": 1,
                    "long_variable_18": 2,
                    "long_variable_2": 2,
                    "loop_counter1": 1,
                    "temp_value": 1
                },
                "lVar21": {
                    "bytes": 1,
                    "long": 3,
                    "long_value4": 1,
                    "long_var21": 2,
                    "long_var_21": 1,
                    "long_var_4": 1,
                    "long_variable": 5,
                    "long_variable21": 1,
                    "long_variable_21": 2,
                    "long_variable_3": 2,
                    "loop_counter2": 1,
                    "offset": 1
                },
                "lVar31": {
                    "buffer_size": 1,
                    "long": 3,
                    "long_value7": 1,
                    "long_var31": 2,
                    "long_var_31": 1,
                    "long_var_5": 1,
                    "long_variable": 5,
                    "long_variable31": 1,
                    "long_variable_31": 2,
                    "long_variable_4": 2,
                    "value4": 1
                },
                "lVar38": {
                    "long_var_38": 1
                },
                "local_678": {
                    "array_of_pointer_to_character_with_size_201": 1,
                    "character_pointer_array": 1,
                    "local_array_of_character_pointers_variable_678": 1,
                    "local_array_variable678": 1,
                    "local_buffer_array": 1,
                    "local_char_array": 1,
                    "local_char_array_array678": 1,
                    "local_character_double_pointer_678": 1,
                    "local_character_pointer_array": 2,
                    "local_character_pointer_array201": 1,
                    "local_character_pointer_array_201": 1,
                    "local_character_pointer_array_678": 1,
                    "local_ptr_array": 1,
                    "value16": 1
                },
                "local_740": {
                    "array_of_character_with_size_200": 1,
                    "character_array": 1,
                    "local_array": 1,
                    "local_buffer": 1,
                    "local_char_array740": 1,
                    "local_char_variable": 1,
                    "local_character_740": 1,
                    "local_character_array": 3,
                    "local_character_array200": 1,
                    "local_character_array_200": 1,
                    "local_character_array_740": 1,
                    "local_character_variable_740": 1,
                    "local_variable740": 1,
                    "value15": 1
                },
                "local_7d0": {
                    "local_stat": 3,
                    "local_stat7d0": 1,
                    "local_stat_7d0": 1,
                    "local_stat_struct": 2,
                    "local_stat_var_7d0": 1,
                    "local_stat_variable_7d0": 1,
                    "local_variable7d0": 1,
                    "stat_struct": 1,
                    "stat_structure": 1,
                    "stat_var": 1,
                    "value14": 1
                },
                "local_7d4": {
                    "local_byte_pointer": 1
                },
                "local_7d8": {
                    "local_byte_pointer": 1
                },
                "local_7dc": {
                    "local_byte_pointer": 1
                },
                "local_7e0": {
                    "local_byte_pointer": 1
                },
                "local_7e4": {
                    "local_byte_pointer": 1
                },
                "local_7e8": {
                    "local_byte_pointer": 1
                },
                "local_7ec": {
                    "local_byte_pointer": 1
                },
                "local_7f0": {
                    "local_byte_pointer": 1,
                    "pointer_to_stat": 1
                },
                "local_7f4": {
                    "local_byte_pointer": 1
                },
                "local_7f8": {
                    "local_7f8": 1,
                    "local_byte_pointer": 2,
                    "local_byte_pointer_7f8": 1,
                    "local_byte_ptr": 1,
                    "local_pointer_to_byte": 4,
                    "local_pointer_to_byte7f8": 1,
                    "local_pointer_to_byte_7f8": 1,
                    "local_pointer_to_byte_variable_7f8": 1,
                    "pointer_to_byte": 2,
                    "pointer_to_local_variable7f8": 1,
                    "value13": 1
                },
                "local_7fc": {
                    "local_7fc": 1,
                    "local_counter_2": 1,
                    "local_u_variable_7fc": 1,
                    "local_uint": 1,
                    "local_uint7fc": 1,
                    "local_uint_7fc": 1,
                    "local_uint_variable": 2,
                    "local_unsigned_int": 1,
                    "local_unsigned_integer": 1,
                    "local_unsigned_integer_variable_7fc": 1,
                    "local_unsigned_variable": 1,
                    "local_variable7fc": 1,
                    "uint_variable": 2,
                    "value12": 1
                },
                "local_800": {
                    "integer_variable": 2,
                    "local_buffer_stack_index": 1,
                    "local_counter": 1,
                    "local_int800": 1,
                    "local_int_variable": 2,
                    "local_integer": 3,
                    "local_integer_800": 1,
                    "local_integer_var_800": 1,
                    "local_integer_variable": 1,
                    "local_integer_variable_800": 1,
                    "stack_size": 1
                },
                "local_810": {
                    "buffer_stack": 1,
                    "double_pointer_to_character": 2,
                    "file_stack": 1,
                    "local_buffer_2d_array": 1,
                    "local_buffer_stack": 1,
                    "local_character_pointer_array": 1,
                    "local_double_pointer_to_character": 2,
                    "local_double_pointer_to_character_810": 1,
                    "local_double_pointer_to_character_variable_810": 1,
                    "local_pointer_to_character": 1,
                    "local_pointer_to_character_pointer": 1,
                    "local_pointer_to_pointer_to_char810": 1,
                    "local_pointer_to_pointer_to_character": 1,
                    "local_pointer_to_pointer_to_character_810": 1,
                    "local_string_array": 1,
                    "string_list_pointer": 1
                },
                "local_818": {
                    "buffer_size": 2,
                    "local_buffer_size": 2,
                    "local_long": 3,
                    "local_long818": 1,
                    "local_long_818": 1,
                    "local_long_var_818": 1,
                    "local_long_variable": 3,
                    "local_long_variable_818": 1,
                    "local_variable818": 1,
                    "long_variable": 2,
                    "max_string_length": 1
                },
                "local_820": {
                    "buffer": 1,
                    "buffer_start": 1,
                    "buffer_start_pointer": 1,
                    "local_buffer_ptr_2": 1,
                    "local_buffer_start": 1,
                    "local_character_pointer_2": 1,
                    "local_character_var_820": 1,
                    "local_character_variable": 1,
                    "local_pointer_to_char820": 1,
                    "local_pointer_to_character": 4,
                    "local_pointer_to_character_820": 1,
                    "local_pointer_to_character_variable_820": 1,
                    "local_string_pointer": 1,
                    "pointer_to_character": 2,
                    "pointer_to_local_variable820": 1,
                    "start_of_string": 1
                },
                "local_828": {
                    "buffer": 1,
                    "buffer_pointer_local": 1,
                    "current_char": 1,
                    "local_buffer": 1,
                    "local_buffer_ptr": 1,
                    "local_character_pointer_1": 1,
                    "local_character_var_828": 1,
                    "local_pointer_to_char828": 1,
                    "local_pointer_to_character": 4,
                    "local_pointer_to_character_828": 1,
                    "local_pointer_to_character_variable_828": 1,
                    "local_string_pointer": 1,
                    "pointer_to_character": 2,
                    "pointer_to_local_variable828": 1
                },
                "pFVar4": {
                    "current_file": 1,
                    "file": 3,
                    "file_pointer": 4,
                    "file_var": 2,
                    "pointer_to_file": 7,
                    "pointer_to_file_4": 1,
                    "pointer_to_file_var4": 1,
                    "pointer_to_file_variable_4": 1
                },
                "param_1": {
                    "input_string": 1
                },
                "pbVar30": {
                    "pointer_to_byte_array_7": 1
                },
                "pbVar32": {
                    "buffer_start": 1,
                    "byte_pointer": 2,
                    "byte_pointer5": 1,
                    "char_ptr2": 1,
                    "old_buffer": 1,
                    "pointer_to_byte": 6,
                    "pointer_to_byte1": 1,
                    "pointer_to_byte32": 1,
                    "pointer_to_byte_32": 2,
                    "pointer_to_byte_array_1": 1,
                    "pointer_to_byte_var32": 1,
                    "pointer_to_byte_variable_32": 1,
                    "ptr1": 1,
                    "start_of_byte": 1
                },
                "pbVar33": {
                    "buffer_pointer2": 1,
                    "byte_pointer": 2,
                    "pointer_to_byte": 6,
                    "pointer_to_byte2": 1,
                    "pointer_to_byte33": 1,
                    "pointer_to_byte_33": 2,
                    "pointer_to_byte_array_2": 1,
                    "pointer_to_byte_var33": 1,
                    "pointer_to_byte_variable_33": 1,
                    "prev_buffer_pointer": 1,
                    "ptr2": 1
                },
                "pbVar35": {
                    "buffer_pointer": 1,
                    "byte_pointer": 3,
                    "char_ptr1": 1,
                    "current_byte": 1,
                    "new_buffer_pointer": 1,
                    "pointer_to_byte": 6,
                    "pointer_to_byte3": 1,
                    "pointer_to_byte35": 1,
                    "pointer_to_byte_35": 2,
                    "pointer_to_byte_array_3": 1,
                    "pointer_to_byte_var35": 1,
                    "pointer_to_byte_variable_35": 1,
                    "ptr3": 1
                },
                "pbVar36": {
                    "byte_pointer": 1
                },
                "pbVar39": {
                    "byte_variable": 3,
                    "byte_variable_39": 1,
                    "flag": 1,
                    "pointer_to_byte": 4,
                    "pointer_to_byte4": 1,
                    "pointer_to_byte_array_6": 1
                },
                "pbVar7": {
                    "byte_pointer": 3,
                    "byte_ptr": 1,
                    "byte_ptr_var": 1,
                    "current_char": 1,
                    "pointer_to_byte": 9,
                    "pointer_to_byte_7": 1,
                    "pointer_to_byte_array_5": 1,
                    "pointer_to_byte_var7": 1,
                    "pointer_to_byte_variable_7": 1
                },
                "pcVar10": {
                    "char_ptr_var": 1,
                    "char_variable": 1,
                    "character_pointer": 1,
                    "character_variable_2": 1,
                    "error_message": 1,
                    "message": 2,
                    "pointer_to_char10": 1,
                    "pointer_to_char_1": 1,
                    "pointer_to_char_var10": 1,
                    "pointer_to_character": 8,
                    "pointer_to_character_10": 2,
                    "pointer_to_character_variable_10": 1,
                    "string": 1,
                    "string7": 1
                },
                "pcVar15": {
                    "char_ptr_var_2": 1,
                    "char_variable": 1,
                    "character_pointer": 1,
                    "character_variable_5": 1,
                    "message": 1,
                    "pointer_to_char15": 1,
                    "pointer_to_char_2": 1,
                    "pointer_to_char_var15": 1,
                    "pointer_to_character": 5,
                    "pointer_to_character1": 1,
                    "pointer_to_character_15": 2,
                    "pointer_to_character_variable_15": 1,
                    "source_string": 1,
                    "string4": 1
                },
                "pcVar16": {
                    "char_ptr_var_3": 1,
                    "char_variable": 1,
                    "character_pointer": 1,
                    "character_variable_6": 1,
                    "destination_string": 1,
                    "new_message": 1,
                    "pointer_to_char16": 1,
                    "pointer_to_char_3": 1,
                    "pointer_to_char_var16": 1,
                    "pointer_to_character": 5,
                    "pointer_to_character2": 1,
                    "pointer_to_character_16": 2,
                    "pointer_to_character_variable_16": 1,
                    "string5": 1
                },
                "pcVar2": {
                    "pointer_to_char_4": 1
                },
                "pcVar27": {
                    "pointer_to_char_5": 1
                },
                "pcVar29": {
                    "pointer_to_char_6": 1
                },
                "pcVar3": {
                    "pointer_to_char_7": 1
                },
                "piVar34": {
                    "index": 1,
                    "int_pointer": 1,
                    "int_ptr": 1,
                    "integer_pointer": 1,
                    "pointer_to_int34": 1,
                    "pointer_to_int_var34": 1,
                    "pointer_to_integer": 8,
                    "pointer_to_integer_34": 2,
                    "pointer_to_integer_variable_34": 1
                },
                "plVar12": {
                    "buffer": 1,
                    "buffer_pointer": 1,
                    "buffer_ptr": 1,
                    "long_pointer": 1,
                    "long_pointer5": 1,
                    "long_pointer_2": 1,
                    "long_ptr_var": 1,
                    "pointer_to_long": 4,
                    "pointer_to_long12": 1,
                    "pointer_to_long2": 1,
                    "pointer_to_long_12": 1,
                    "pointer_to_long_variable_12": 1,
                    "pointer_to_var12": 1
                },
                "plVar5": {
                    "buffer": 1,
                    "file_ptr": 1,
                    "long_pointer": 3,
                    "long_pointer4": 1,
                    "long_ptr": 1,
                    "long_var": 1,
                    "pointer_to_long": 8,
                    "pointer_to_long1": 1,
                    "pointer_to_long_5": 1,
                    "pointer_to_long_integer": 1,
                    "pointer_to_long_variable_5": 1,
                    "pointer_to_var5": 1
                },
                "ppFVar3": {
                    "archive_file": 1,
                    "double_file_pointer": 2,
                    "double_pointer_file": 1,
                    "double_pointer_to_file": 5,
                    "double_pointer_to_file_variable_3": 1,
                    "file_pointer2": 1,
                    "file_pointer_array": 1,
                    "file_ptr": 1,
                    "input_file": 1,
                    "pointer_to_file_pointer": 1,
                    "pointer_to_pointer_to_file": 3,
                    "pointer_to_pointer_to_file_1": 1,
                    "pointer_to_pointer_to_file_3": 1,
                    "pointer_to_pointer_to_file_var3": 1
                },
                "ppcVar10": {
                    "pointer_to_pointer_to_char_1": 1
                },
                "ppcVar27": {
                    "archive_files": 1,
                    "char_pointer_pointer7": 1,
                    "double_pointer_to_character": 4,
                    "double_pointer_to_character_27": 1,
                    "double_pointer_to_character_variable_27": 1,
                    "pointer_to_character_pointer": 2,
                    "pointer_to_pointer_to_char": 1,
                    "pointer_to_pointer_to_char_37": 1,
                    "pointer_to_pointer_to_char_var27": 1,
                    "pointer_to_pointer_to_character": 2,
                    "ptr_list": 1,
                    "string_array": 1,
                    "string_list_end": 1
                },
                "ppcVar29": {
                    "buffer_stack": 1,
                    "char_pointer_pointer4": 1,
                    "double_pointer_to_character": 3,
                    "double_pointer_to_character_29": 1,
                    "double_pointer_to_character_variable_29": 1,
                    "pointer_to_character_pointer": 1,
                    "pointer_to_pointer_to_char29": 1,
                    "pointer_to_pointer_to_char_69": 1,
                    "pointer_to_pointer_to_char_var29": 1,
                    "pointer_to_pointer_to_character": 1,
                    "ppc_args": 1,
                    "string_array": 1,
                    "string_list": 1
                },
                "ppcVar38": {
                    "char_pointer_pointer6": 1,
                    "double_pointer_to_character": 2,
                    "module_files": 1,
                    "pointer_to_character_pointer": 1,
                    "pointer_to_pointer_to_char38": 1,
                    "pointer_to_pointer_to_char_29": 1,
                    "pointer_to_pointer_to_char_var38": 1
                },
                "pplVar1": {
                    "double_pointer": 5,
                    "double_pointer_to_long": 3,
                    "double_pointer_variable_1": 1,
                    "long_pointer_pointer": 1,
                    "pointer_double_pointer_1": 1,
                    "pointer_to_long_pointer": 2,
                    "pointer_to_long_pointer1": 1,
                    "pointer_to_pointer": 1,
                    "pointer_to_pointer_var1": 1
                },
                "puVar22": {
                    "buffer_list": 1,
                    "int64_ptr": 1,
                    "pointer_to_u_var22": 1,
                    "pointer_to_u_var_22": 1,
                    "pointer_to_ulong_1": 1,
                    "pointer_to_undefined8": 5,
                    "pointer_to_undefined_8_22": 1,
                    "pointer_to_unsigned_long": 1,
                    "pointer_to_unsigned_long_variable_22": 1,
                    "pointer_to_unsigned_variable": 1,
                    "pointer_to_unsigned_variable22": 1,
                    "ptr": 1,
                    "undefined_value": 1,
                    "unsigned_long_pointer": 2
                },
                "puVar23": {
                    "buffer_list2": 1,
                    "int64_ptr2": 1,
                    "pointer_to_u_var23": 1,
                    "pointer_to_u_var_23": 1,
                    "pointer_to_ulong_2": 1,
                    "pointer_to_undefined8": 5,
                    "pointer_to_undefined_8_23": 1,
                    "pointer_to_unsigned_long": 1,
                    "pointer_to_unsigned_long_variable_23": 1,
                    "pointer_to_unsigned_variable": 1,
                    "pointer_to_unsigned_variable23": 1,
                    "undefined_value2": 1,
                    "unsigned_long_pointer": 2
                },
                "pvVar14": {
                    "pointer_to_void": 5,
                    "pointer_to_void14": 1,
                    "pointer_to_void_14": 2,
                    "pointer_to_void_var14": 1,
                    "pointer_to_void_variable_14": 1,
                    "void_pointer": 3,
                    "void_ptr": 1,
                    "void_ptr_var": 1
                },
                "sVar13": {
                    "bytes_read": 1,
                    "read_size": 1,
                    "s_var13": 1,
                    "size": 1,
                    "size_t": 3,
                    "size_t_var": 1,
                    "size_t_variable": 1,
                    "size_t_variable_13": 2,
                    "size_var13": 1,
                    "size_var_13": 1,
                    "size_variable": 2,
                    "size_variable13": 1,
                    "size_variable_1": 1,
                    "value5": 1
                },
                "sVar40": {
                    "size_variable": 1
                },
                "sVar41": {
                    "size_variable": 1
                },
                "uVar11": {
                    "file_name": 1,
                    "file_path": 1,
                    "u_var11": 1,
                    "u_variable_11": 1,
                    "ulong_variable_1": 1,
                    "undefined8": 2,
                    "undefined8_var_2": 1,
                    "undefined8_variable": 2,
                    "undefined_8_variable_11": 1,
                    "undefined_var11": 1,
                    "undefined_variable_11": 1,
                    "undefined_variable_2": 1,
                    "unsigned_long": 1,
                    "unsigned_variable": 1,
                    "unsigned_variable11": 1,
                    "value1": 1
                },
                "uVar19": {
                    "state": 3,
                    "temp_variable3": 1,
                    "u_var19": 1,
                    "u_variable_19": 1,
                    "ulong_value3": 1,
                    "ulong_var19": 1,
                    "ulong_variable": 3,
                    "ulong_variable_19": 1,
                    "ulong_variable_2": 1,
                    "unsigned_integer_variable_19": 1,
                    "unsigned_long": 2,
                    "unsigned_long_variable": 1,
                    "unsigned_variable": 1,
                    "unsigned_variable19": 1,
                    "value2": 1
                },
                "uVar20": {
                    "index": 1,
                    "temp_state": 1,
                    "temp_variable": 1,
                    "u_var20": 1,
                    "u_variable_20": 1,
                    "uint_value": 1,
                    "uint_var20": 1,
                    "uint_variable": 3,
                    "ulong_variable_3": 1,
                    "unsigned_int": 1,
                    "unsigned_int_variable": 1,
                    "unsigned_integer": 1,
                    "unsigned_integer_variable_20": 1,
                    "unsigned_variable": 1,
                    "unsigned_variable20": 1,
                    "value": 1,
                    "value3": 1
                },
                "uVar24": {
                    "buffer_size": 1,
                    "count": 1,
                    "read_bytes": 1,
                    "u_var24": 1,
                    "u_variable_24": 1,
                    "uint": 1,
                    "uint_value2": 1,
                    "uint_var24": 1,
                    "uint_variable": 3,
                    "uint_variable_24": 1,
                    "ulong_variable_4": 1,
                    "unsigned_int": 1,
                    "unsigned_int_variable": 1,
                    "unsigned_integer": 1,
                    "unsigned_integer_variable_24": 1,
                    "unsigned_variable": 1,
                    "unsigned_variable24": 1,
                    "value8": 1
                },
                "uVar26": {
                    "loop_counter3": 1,
                    "previous_state": 1,
                    "u_var26": 1,
                    "u_variable_26": 1,
                    "ulong": 1,
                    "ulong_value4": 1,
                    "ulong_var26": 1,
                    "ulong_variable": 3,
                    "ulong_variable_26": 1,
                    "ulong_variable_5": 1,
                    "unsigned_integer_variable_26": 1,
                    "unsigned_long": 2,
                    "unsigned_long_variable": 1,
                    "unsigned_variable": 1,
                    "unsigned_variable26": 1,
                    "value9": 1
                },
                "uVar36": {
                    "current_char_index": 1,
                    "temp_variable2": 1,
                    "u_var36": 1,
                    "u_variable_36": 1,
                    "uint_var36": 1,
                    "uint_variable_36": 1
                },
                "uVar40": {
                    "auxiliary_variable1": 1
                },
                "uVar41": {
                    "auxiliary_variable2": 1
                },
                "uVar6": {
                    "file": 1,
                    "module_name": 1,
                    "u_var6": 1,
                    "u_variable_6": 1,
                    "undefined8": 2,
                    "undefined8_var": 1,
                    "undefined8_variable": 2,
                    "undefined_8_variable_6": 1,
                    "undefined_var6": 1,
                    "undefined_variable": 1,
                    "undefined_variable_6": 1,
                    "unsigned_long": 2,
                    "unsigned_long_variable": 1,
                    "unsigned_variable": 1,
                    "unsigned_variable6": 1,
                    "value": 1,
                    "value2": 1
                }
            },
            "called": [
                "FUN_001033d6",
                "FUN_00102030",
                "FUN_00103ba8",
                "FUN_00103ddc",
                "FUN_001032a8",
                "FUN_00102130",
                "FUN_001020e0",
                "FUN_001020b0",
                "FUN_00107740",
                "FUN_0010300e",
                "FUN_001021d0",
                "FUN_00103c60",
                "FUN_00105300",
                "FUN_00102170",
                "FUN_001031cf",
                "FUN_00102400",
                "FUN_00102100",
                "FUN_00102560",
                "FUN_001030ed",
                "FUN_0010312d",
                "FUN_00102060",
                "FUN_00102470",
                "FUN_00105bc0",
                "FUN_00102490",
                "FUN_00102340",
                "FUN_00102510",
                "FUN_001023b0",
                "FUN_00102420",
                "FUN_00102140",
                "FUN_00102070",
                "FUN_001033b0",
                "FUN_0010315d",
                "FUN_001021a0",
                "FUN_00103df9",
                "FUN_00102050",
                "FUN_001031a5",
                "FUN_00102360",
                "FUN_00102330",
                "FUN_00102270",
                "FUN_00102310"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid decompiled_function_00103e95(void)\n\n{\n  long **double_pointer;\n  char character_variable;\n  FILE **double_pointer_to_file;\n  FILE *pointer_to_file;\n  long *pointer_to_long;\n  undefined8 unsigned_long;\n  byte *pointer_to_byte;\n  int integer_variable;\n  char *pointer_to_character;\n  undefined8 undefined8;\n  int integer_variable;\n  long *pointer_to_long;\n  size_t size_t;\n  void *pointer_to_void;\n  char *pointer_to_character;\n  char *pointer_to_character;\n  long long_variable;\n  long long_variable;\n  ulong state;\n  uint uint_variable;\n  long long_variable;\n  undefined8 *pointer_to_undefined8;\n  undefined8 *pointer_to_undefined8;\n  uint uint_variable;\n  int integer_variable;\n  ulong ulong_variable;\n  char **double_pointer_to_character;\n  bool bool_variable;\n  char **double_pointer_to_character;\n  byte byte_variable;\n  long long_variable;\n  byte *pointer_to_byte;\n  byte *pointer_to_byte;\n  int *pointer_to_integer;\n  byte *pointer_to_byte;\n  uint uint_var36;\n  int state_index;\n  char **double_pointer_to_character;\n  byte bool_var39;\n  undefined temp_buffer [16];\n  undefined undefined_var41 [16];\n  char *local_pointer_to_character;\n  char *local_pointer_to_character;\n  long local_long_variable;\n  char **local_double_pointer_to_character;\n  int local_integer;\n  uint local_uint_variable;\n  byte *local_pointer_to_byte;\n  stat local_stat;\n  char local_character_array [200];\n  char *local_character_pointer_array [201];\n  \n  bool_var39 = 0;\n  long_variable = 0;\n  DAT_0010d550 = -2;\n  double_pointer_to_character = local_character_pointer_array;\n  local_integer = 0;\n  local_pointer_to_character = local_character_array;\n  local_long_variable = 200;\n  local_pointer_to_character = local_pointer_to_character;\n  local_double_pointer_to_character = double_pointer_to_character;\nLAB_00103ee9:\n  *local_pointer_to_character = (char)long_variable;\n  if (local_pointer_to_character + local_long_variable + -1 <= local_pointer_to_character) {\n    long_variable = (long)local_pointer_to_character - (long)local_pointer_to_character;\n    long_variable = long_variable + 1;\n    if (local_long_variable < 10000) {\n      long_variable = local_long_variable * 2;\n      local_long_variable = 10000;\n      if (long_variable < 0x2711) {\n        local_long_variable = long_variable;\n      }\n      pointer_to_character = (char *)malloc(local_long_variable * 9 + 7);\n      if (pointer_to_character != (char *)0x0) {\n        long_variable = long_variable * 8;\n        pointer_to_character = local_pointer_to_character;\n        pointer_to_character = pointer_to_character;\n        for (; long_variable != 0; long_variable = long_variable + -1) {\n          *pointer_to_character = *pointer_to_character;\n          pointer_to_character = pointer_to_character + (ulong)bool_var39 * -2 + 1;\n          pointer_to_character = pointer_to_character + (ulong)bool_var39 * -2 + 1;\n        }\n        double_pointer_to_character = (char **)(pointer_to_character + local_long_variable);\n        double_pointer_to_character = double_pointer_to_character;\n        for (; long_variable != 0; long_variable = long_variable + -1) {\n          *(undefined *)double_pointer_to_character = *(undefined *)local_double_pointer_to_character;\n          local_double_pointer_to_character = (char **)((long)local_double_pointer_to_character + (ulong)bool_var39 * -2 + 1);\n          double_pointer_to_character = (char **)((long)double_pointer_to_character + (ulong)bool_var39 * -2 + 1);\n        }\n        if (local_pointer_to_character != local_character_array) {\n          free(local_pointer_to_character);\n        }\n        local_pointer_to_character = pointer_to_character + long_variable;\n        double_pointer_to_character = double_pointer_to_character + long_variable;\n        local_pointer_to_character = pointer_to_character;\n        local_double_pointer_to_character = double_pointer_to_character;\n        if (pointer_to_character + local_long_variable + -1 <= local_pointer_to_character) goto LAB_00105265;\n        goto LAB_00103fd8;\n      }\n    }\n    yyerror_constprop_0();\nLAB_0010524c:\n    pointer_to_character = local_pointer_to_character;\n    if (local_pointer_to_character == local_character_array) {\n      return;\n    }\nLAB_00105265:\n    free(pointer_to_character);\n    return;\n  }\nLAB_00103fd8:\n  state_index = (int)long_variable;\n  if (state_index == 3) goto LAB_0010524c;\n  character_variable = (&DAT_0010a200)[state_index];\n  if (character_variable != -0xe) {\n    if (DAT_0010d550 == -2) {\n      if (_DAT_0010d540 == 0) {\n        _DAT_0010d540 = 1;\n        if (DAT_0010d5d0 == 0) {\n          DAT_0010d5d0 = 1;\n        }\n        if (DAT_0010d590 == (FILE *)0x0) {\n          DAT_0010d590 = _stdin;\n        }\n        if (DAT_0010d538 == (FILE *)0x0) {\n          DAT_0010d538 = _stdout;\n        }\n        if ((DAT_0010d5a8 == 0) || (*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) == 0)) {\n          yyensure_buffer_stack();\n          pointer_to_undefined8 = (undefined8 *)(DAT_0010d5a8 + DAT_0010d5a0 * 8);\n          undefined8 = yy_create_buffer_constprop_0(DAT_0010d590);\n          *pointer_to_undefined8 = undefined8;\n        }\n        yy_load_buffer_state();\n      }\nLAB_001040b1:\n      *DAT_0010d5b0 = DAT_0010d588;\n      pointer_to_byte = DAT_0010d5b0;\n      pointer_to_byte = DAT_0010d5b0;\n      uint_variable = DAT_0010d5d0;\nLAB_001040d4:\n      state = (ulong)uint_variable;\n      ulong_variable = (ulong)local_uint_variable;\n      bool_variable = false;\n      do {\n        byte_variable = (&DAT_0010ab00)[*pointer_to_byte];\n        if (*(short *)(&DAT_0010a980 + (long)(int)state * 2) != 0) {\n          bool_variable = true;\n          ulong_variable = state & 0xffffffff;\n          local_pointer_to_byte = pointer_to_byte;\n        }\n        while( true ) {\n          integer_variable = (int)state;\n          long_variable = (long)(int)((int)*(short *)(&DAT_0010a640 + (long)integer_variable * 2) + (uint)byte_variable);\n          if (integer_variable == *(short *)(&DAT_0010a440 + long_variable * 2)) break;\n          state = (ulong)(uint)(int)*(short *)(&DAT_0010a800 + (long)integer_variable * 2);\n          if (0xb0 < *(short *)(&DAT_0010a800 + (long)integer_variable * 2)) {\n            byte_variable = (&DAT_0010a7c0)[(int)(uint)byte_variable];\n          }\n        }\n        pointer_to_byte = pointer_to_byte + 1;\n        state = (ulong)*(short *)(&DAT_0010a240 + long_variable * 2);\n      } while (*(short *)(&DAT_0010a640 + state * 2) != 0xc2);\n      local_uint_variable = (uint)ulong_variable;\n      pointer_to_byte = pointer_to_byte;\n      if (bool_variable) {\n        DAT_0010d5b8 = local_pointer_to_byte;\n        DAT_0010d5c0 = local_uint_variable;\n      }\nLAB_0010419f:\n      integer_variable = (int)*(short *)(&DAT_0010a980 + (long)(int)state * 2);\n      if (integer_variable == 0) {\n        integer_variable = (int)*(short *)(&DAT_0010a980 + (long)(int)DAT_0010d5c0 * 2);\n        pointer_to_byte = DAT_0010d5b8;\n      }\n      DAT_0010d530 = (int)pointer_to_byte - (int)pointer_to_byte;\n      DAT_0010d588 = *pointer_to_byte;\n      DAT_0010d5b0 = pointer_to_byte;\n      DAT_0010d5c8 = pointer_to_byte;\n      *pointer_to_byte = 0;\nLAB_001041f0:\n      pointer_to_byte = DAT_0010d5c8;\n      long_variable = DAT_0010d5a0;\n      switch(integer_variable) {\n      case 0:\n        goto switchD_00104200_caseD_0;\n      case 1:\n      case 0x10:\n        DAT_0010d550 = 0x105;\n        break;\n      case 2:\n      case 0x11:\n        DAT_0010d550 = 0x107;\n        break;\n      case 3:\n      case 0x12:\n        DAT_0010d550 = 0x108;\n        break;\n      case 4:\n      case 0x13:\n        DAT_0010d550 = 0x109;\n        break;\n      case 5:\n      case 0x14:\n        DAT_0010d550 = 0x10a;\n        break;\n      case 6:\n      case 0x15:\n        DAT_0010d550 = 0x10b;\n        break;\n      case 7:\n      case 0x16:\n        DAT_0010d550 = 0x10c;\n        break;\n      case 8:\n      case 0x17:\n        DAT_0010d550 = 0x10d;\n        break;\n      case 9:\n      case 0x18:\n        DAT_0010d550 = 0x10e;\n        break;\n      case 10:\n      case 0x19:\n        DAT_0010d550 = 0x10f;\n        break;\n      case 0xb:\n      case 0x1a:\n        DAT_0010d550 = 0x106;\n        break;\n      case 0xc:\n      case 0x1b:\n        DAT_0010d550 = 0x113;\n        break;\n      case 0xd:\n      case 0x1c:\n        DAT_0010d550 = 0x111;\n        break;\n      case 0xe:\n      case 0x1d:\n        DAT_0010d550 = 0x103;\n        break;\n      case 0x1f:\n        DAT_0010d554 = DAT_0010d554 + 1;\n        goto LAB_001040b1;\n      case 0x20:\n        DAT_0010d550 = 0x28;\n        break;\n      case 0x21:\n        DAT_0010d550 = 0x29;\n        break;\n      case 0x22:\n        DAT_0010d550 = 0x2c;\n        break;\n      case 0x23:\n        DAT_0010d548 = (char *)xstrdup(DAT_0010d5c8);\n        DAT_0010d550 = 0x104;\n        break;\n      case 0x24:\n      case 0x25:\n      case 0x26:\n        goto LAB_001040b1;\n      case 0x27:\n        DAT_0010d554 = DAT_0010d554 + 1;\n        DAT_0010d550 = 0x102;\n        break;\n      case 0x28:\n        fwrite(DAT_0010d5c8,(long)DAT_0010d530,1,DAT_0010d538);\n        goto LAB_001040b1;\n      case 0x29:\n        goto switchD_00104200_caseD_29;\n      case 0x2a:\n        DAT_0010d550 = 0;\n        break;\n      default:\n        yy_fatal_error(\"fatal flex scanner internal error--no action found\");\n      case 0xf:\n      case 0x1e:\n        DAT_0010d550 = 0x112;\n      }\n      long_variable = (long)state_index;\n    }\n    if (0 < DAT_0010d550) {\n      if (DAT_0010d550 != 0x100) {\n        state_index = 2;\n        if (DAT_0010d550 < 0x114) {\n          state_index = (int)(char)(&DAT_0010a0e0)[DAT_0010d550];\n        }\n        goto LAB_0010497d;\n      }\n      DAT_0010d550 = 0x101;\n      goto LAB_001051f0;\n    }\n    state_index = 0;\n    DAT_0010d550 = 0;\nLAB_0010497d:\n    uint_variable = character_variable + state_index;\n    if ((0x22 < uint_variable) || (state_index != (char)(&DAT_0010a0a0)[(int)uint_variable])) goto LAB_001049db;\n    character_variable = (&DAT_0010a060)[(int)uint_variable];\n    long_variable = (long)character_variable;\n    if (character_variable < '\\x01') {\n      state_index = -(int)character_variable;\n      goto LAB_00104a0a;\n    }\n    DAT_0010d550 = -2;\n    local_integer = local_integer + -1 + (uint)(local_integer == 0);\n    double_pointer_to_character = double_pointer_to_character + 1;\n    *double_pointer_to_character = DAT_0010d548;\n    goto LAB_001049d1;\n  }\nLAB_001049db:\n  state_index = (int)(char)(&DAT_0010a020)[(int)long_variable];\n  if ((&DAT_0010a020)[(int)long_variable] == '\\0') {\n    if (local_integer == 0) {\n      _DAT_0010d544 = _DAT_0010d544 + 1;\n      yyerror_constprop_0();\nLAB_001051f0:\n      do {\n        if (((((char)(&DAT_0010a200)[long_variable] != -0xe) &&\n             (uint_variable = (int)(char)(&DAT_0010a200)[long_variable] + 1, uint_variable < 0x23)) &&\n            ((&DAT_0010a0a0)[(int)uint_variable] == '\\x01')) &&\n           (long_variable = (long)(char)(&DAT_0010a060)[(int)uint_variable],\n           '\\0' < (char)(&DAT_0010a060)[(int)uint_variable])) goto LAB_00105227;\n        if (local_pointer_to_character == local_pointer_to_character) goto LAB_0010524c;\n        local_pointer_to_character = local_pointer_to_character + -1;\n        double_pointer_to_character = double_pointer_to_character + -1;\n        long_variable = (long)*local_pointer_to_character;\n      } while( true );\n    }\n    if (local_integer != 3) goto LAB_001051f0;\n    if (0 < DAT_0010d550) {\n      DAT_0010d550 = -2;\n      goto LAB_001051f0;\n    }\n    if (DAT_0010d550 != 0) goto LAB_001051f0;\n    goto LAB_0010524c;\n  }\nLAB_00104a0a:\n  undefined8 = DAT_0010d660;\n  double_pointer_to_character = DAT_0010d558;\n  character_variable = (&DAT_00109fe0)[state_index];\n  double_pointer_to_character = (char **)double_pointer_to_character[1 - character_variable];\n  switch(state_index) {\n  case 2:\n  case 6:\n    prompt();\n    break;\n  case 0x13:\n    if (DAT_0010d558 == (char **)0x0) {\n      return;\n    }\n    bfd_cache_close();\n    unlink(*DAT_0010d558);\n    return;\n  case 0x15:\n    yyerror_constprop_0();\n    break;\n  case 0x17:\n    pointer_to_undefined8 = (undefined8 *)*double_pointer_to_character;\n    if (DAT_0010d558 == (char **)0x0) {\n      pointer_to_character = \"%s: no open archive\\n\";\nLAB_00104b62:\n      pointer_to_character = (char *)dcgettext(0,pointer_to_character,5);\n      fprintf(_stderr,pointer_to_character,undefined8);\n      maybequit();\n    }\n    else {\n      for (; pointer_to_undefined8 != (undefined8 *)0x0; pointer_to_undefined8 = (undefined8 *)pointer_to_undefined8[1]) {\n        for (pointer_to_undefined8 = (undefined8 *)DAT_0010d558[0x1f]; pointer_to_undefined8 != (undefined8 *)0x0;\n            pointer_to_undefined8 = (undefined8 *)pointer_to_undefined8[0x1e]) {\n          integer_variable = filename_cmp(*pointer_to_undefined8);\n          if (integer_variable == 0) {\n            extract_file();\n            goto LAB_00104adf;\n          }\n        }\n        bfd_openr(*pointer_to_undefined8,0);\n        unsigned_long = DAT_0010d660;\n        undefined8 = *pointer_to_undefined8;\n        pointer_to_character = (char *)dcgettext(0,\"%s: can\\'t find module file %s\\n\",5);\n        fprintf(_stderr,pointer_to_character,unsigned_long,undefined8);\nLAB_00104adf:\n      }\n    }\n    break;\n  case 0x18:\n    pointer_to_undefined8 = (undefined8 *)*double_pointer_to_character;\n    if (DAT_0010d558 == (char **)0x0) {\nLAB_00104b4f:\n      pointer_to_character = \"%s: no open output archive\\n\";\n      goto LAB_00104b62;\n    }\n    for (; pointer_to_undefined8 != (undefined8 *)0x0; pointer_to_undefined8 = (undefined8 *)pointer_to_undefined8[1]) {\n      bool_variable = false;\n      double_pointer_to_character = DAT_0010d558 + 0x1f;\n      for (pointer_to_character = DAT_0010d558[0x1f]; pointer_to_character != (char *)0x0;\n          pointer_to_character = *(char **)(pointer_to_character + 0xf0)) {\n        integer_variable = filename_cmp();\n        if (integer_variable == 0) {\n          pointer_to_character = (char *)bfd_openr(*pointer_to_undefined8,0);\n          undefined8 = DAT_0010d660;\n          if (pointer_to_character == (char *)0x0) {\n            unsigned_long = *pointer_to_undefined8;\n            pointer_to_character = (char *)dcgettext(0,\"%s: can\\'t open file %s\\n\",5);\n            fprintf(_stderr,pointer_to_character,undefined8,unsigned_long);\n            maybequit();\n          }\n          else {\n            *double_pointer_to_character = pointer_to_character;\n            bool_variable = true;\n            *(undefined8 *)(pointer_to_character + 0xf0) = *(undefined8 *)(pointer_to_character + 0xf0);\n          }\n        }\n        else {\n          double_pointer_to_character = (char **)(pointer_to_character + 0xf0);\n        }\n      }\n      if (!bool_variable) {\n        pointer_to_character = (char *)bfd_openr(*pointer_to_undefined8,0);\n        unsigned_long = DAT_0010d660;\n        undefined8 = *pointer_to_undefined8;\n        pointer_to_character = (char *)dcgettext(0,\"%s: can\\'t find module file %s\\n\",5);\n        fprintf(_stderr,pointer_to_character,unsigned_long,undefined8);\n        undefined8 = DAT_0010d660;\n        if (pointer_to_character == (char *)0x0) {\n          unsigned_long = *pointer_to_undefined8;\n          pointer_to_character = (char *)dcgettext(0,\"%s: can\\'t open file %s\\n\",5);\n          fprintf(_stderr,pointer_to_character,undefined8,unsigned_long);\n          maybequit();\n        }\n        else {\n          *double_pointer_to_character = pointer_to_character;\n        }\n      }\n    }\n    break;\n  case 0x19:\n    if (DAT_0010d558 != (char **)0x0) {\n      DAT_0010d558[0x1f] = (char *)0x0;\n    }\n    break;\n  case 0x1a:\n    pointer_to_undefined8 = (undefined8 *)*double_pointer_to_character;\n    if (DAT_0010d558 == (char **)0x0) goto LAB_00104b4f;\n    for (; pointer_to_undefined8 != (undefined8 *)0x0; pointer_to_undefined8 = (undefined8 *)pointer_to_undefined8[1]) {\n      bool_variable = false;\n      double_pointer_to_character = DAT_0010d558 + 0x1f;\n      for (pointer_to_undefined8 = (undefined8 *)DAT_0010d558[0x1f]; undefined8 = DAT_0010d660,\n          pointer_to_undefined8 != (undefined8 *)0x0; pointer_to_undefined8 = (undefined8 *)pointer_to_undefined8[0x1e]) {\n        integer_variable = filename_cmp(*pointer_to_undefined8,*pointer_to_undefined8);\n        if (integer_variable == 0) {\n          bool_variable = true;\n          *double_pointer_to_character = (char *)pointer_to_undefined8[0x1e];\n        }\n        else {\n          double_pointer_to_character = (char **)(pointer_to_undefined8 + 0x1e);\n        }\n      }\n      if (!bool_variable) {\n        unsigned_long = *pointer_to_undefined8;\n        pointer_to_character = (char *)dcgettext(0,\"%s: can\\'t find module file %s\\n\",5);\n        fprintf(_stderr,pointer_to_character,undefined8,unsigned_long);\n        maybequit();\n      }\n    }\n    break;\n  case 0x1b:\n    pointer_to_undefined8 = (undefined8 *)*double_pointer_to_character;\n    if (DAT_0010d558 == (char **)0x0) goto LAB_00104b4f;\n    for (; pointer_to_undefined8 != (undefined8 *)0x0; pointer_to_undefined8 = (undefined8 *)pointer_to_undefined8[1]) {\n      pointer_to_character = (char *)bfd_openr(*pointer_to_undefined8,\"plugin\");\n      undefined8 = DAT_0010d660;\n      double_pointer_to_character = DAT_0010d558;\n      if (pointer_to_character == (char *)0x0) {\n        unsigned_long = *pointer_to_undefined8;\n        pointer_to_character = (char *)dcgettext(0,\"%s: can\\'t open file %s\\n\",5);\n        fprintf(_stderr,pointer_to_character,undefined8,unsigned_long);\n        maybequit();\n      }\n      else {\n        *(char **)(pointer_to_character + 0xf0) = DAT_0010d558[0x1f];\n        double_pointer_to_character[0x1f] = pointer_to_character;\n      }\n    }\n    break;\n  case 0x1c:\n    if (DAT_0010d558 == (char **)0x0) goto LAB_00104b4f;\n    pointer_to_character = *DAT_0010d558;\n    DAT_0010d60c = 1;\n    DAT_0010d578 = _stdout;\n    pointer_to_character = (char *)dcgettext(0,\"Current open archive is %s\\n\",5);\n    printf(pointer_to_character,pointer_to_character);\n    for (pointer_to_character = DAT_0010d558[0x1f]; pointer_to_character != (char *)0x0; pointer_to_character = *(char **)(pointer_to_character + 0xf0))\n    {\n      ar_directory_doer(pointer_to_character,0);\n    }\n    break;\n  case 0x1d:\n    if (DAT_0010d558 == (char **)0x0) goto LAB_00104b4f;\n    if (0 < _DAT_0010d2d0) {\n      *(uint *)((long)DAT_0010d558 + 0x44) = *(uint *)((long)DAT_0010d558 + 0x44) | 0x2000;\n    }\n    DAT_0010d568 = dup(DAT_0010d568);\n    bfd_close(double_pointer_to_character);\n    pointer_to_character = DAT_0010d570;\n    integer_variable = stat(DAT_0010d570,&local_stat);\n    if ((integer_variable != 0) && (DAT_0010d558 = (char **)bfd_openw(pointer_to_character,0), DAT_0010d558 != (char **)0x0)\n       ) {\n      bfd_set_format(DAT_0010d558,2);\n      bfd_close(DAT_0010d558);\n    }\n    smart_rename_constprop_0(DAT_0010d560,DAT_0010d570,DAT_0010d568);\n    DAT_0010d558 = (char **)0x0;\n    free(DAT_0010d560);\n    free(DAT_0010d570);\n    break;\n  case 0x1e:\n    ar_open(*double_pointer_to_character,0);\n    break;\n  case 0x1f:\n    ar_open(*double_pointer_to_character,1);\n    break;\n  case 0x20:\n    pointer_to_character = *double_pointer_to_character;\n    if (DAT_0010d558 == (char **)0x0) {\n      pointer_to_character = \"%s: no output archive specified yet\\n\";\n      goto LAB_00104b62;\n    }\n    long_variable = open_inarch(double_pointer_to_character[-1],0);\n    if (long_variable != 0) {\n      map_over_list(long_variable,ar_addlib_doer,pointer_to_character);\n    }\n    break;\n  case 0x21:\n    pointer_to_character = *double_pointer_to_character;\n    pointer_to_character = double_pointer_to_character[-1];\n    undefined8 = open_inarch(double_pointer_to_character[-2],0);\n    if (pointer_to_character == (char *)0x0) {\n      DAT_0010d578 = _stdout;\n    }\n    else {\n      DAT_0010d578 = fopen(pointer_to_character,\"w\");\n      if (DAT_0010d578 != (FILE *)0x0) {\n        map_over_list(undefined8,ar_directory_doer,pointer_to_character);\n        bfd_close(undefined8);\n        fclose(DAT_0010d578);\n        break;\n      }\n      DAT_0010d578 = _stdout;\n      pointer_to_character = (char *)dcgettext(0,\"Can\\'t open file %s\\n\",5);\n      fprintf(_stderr,pointer_to_character,pointer_to_character);\n    }\n    map_over_list(undefined8,ar_directory_doer,pointer_to_character);\n    bfd_close(undefined8);\n    break;\n  case 0x22:\n    double_pointer_to_character = (char **)*double_pointer_to_character;\n    break;\n  case 0x23:\n  case 0x25:\n  case 0x27:\n    double_pointer_to_character = (char **)0x0;\n    break;\n  case 0x24:\n    double_pointer_to_character = (char **)double_pointer_to_character[-1];\n    break;\n  case 0x26:\n    double_pointer_to_character = (char **)malloc(0x10);\n    pointer_to_character = double_pointer_to_character[-2];\n    *double_pointer_to_character = *double_pointer_to_character;\n    double_pointer_to_character[1] = pointer_to_character;\n    break;\n  case 0x2a:\n    DAT_0010d60c = (uint)(DAT_0010d60c == 0);\n  }\n  long_variable = (long)character_variable;\n  local_pointer_to_character = local_pointer_to_character + -long_variable;\n  double_pointer_to_character[1 - long_variable] = (char *)double_pointer_to_character;\n  double_pointer_to_character = double_pointer_to_character + (1 - long_variable);\n  uint_variable = (int)(char)(&DAT_00109f80)[(char)(&DAT_00109fa0)[state_index] + -0x18] + (int)*local_pointer_to_character;\n  if ((uint_variable < 0x23) && (*local_pointer_to_character == (&DAT_0010a0a0)[(int)uint_variable])) {\n    long_variable = (long)(char)(&DAT_0010a060)[(int)uint_variable];\n  }\n  else {\n    long_variable = (long)(char)(&DAT_00109f60)[(char)(&DAT_00109fa0)[state_index] + -0x18];\n  }\n  goto LAB_001049d1;\nswitchD_00104200_caseD_29:\n  integer_variable = ((int)pointer_to_byte - (int)DAT_0010d5c8) + -1;\n  *pointer_to_byte = DAT_0010d588;\n  double_pointer = (long **)(DAT_0010d5a8 + long_variable * 8);\n  double_pointer_to_file = (FILE **)*double_pointer;\n  if (*(int *)(double_pointer_to_file + 7) == 0) {\n    DAT_0010d598 = *(uint *)((long)double_pointer_to_file + 0x1c);\n    *(undefined4 *)(double_pointer_to_file + 7) = 1;\n    *double_pointer_to_file = DAT_0010d590;\n  }\n  pointer_to_byte = DAT_0010d5b0;\n  pointer_to_file = double_pointer_to_file[1];\n  temp_buffer._8_8_ = pointer_to_file;\n  temp_buffer._0_8_ = double_pointer_to_file;\n  if ((byte *)((long)&pointer_to_file->_flags + (long)(int)DAT_0010d598) < DAT_0010d5b0) {\n    if ((byte *)((long)&pointer_to_file->_flags + (long)(int)DAT_0010d598 + 1) < DAT_0010d5b0) {\n      temp_buffer = yy_fatal_error();\n    }\n    if (*(int *)(temp_buffer._0_8_ + 0x34) != 0) {\n      uint_variable = (int)((long)pointer_to_byte - (long)pointer_to_byte) - 1;\n      for (long_variable = 0; (int)long_variable < (int)uint_variable; long_variable = long_variable + 1) {\n        *(byte *)(temp_buffer._8_8_ + long_variable) = pointer_to_byte[long_variable];\n      }\n      pointer_to_long = *double_pointer;\n      if (*(int *)(pointer_to_long + 7) == 2) {\n        DAT_0010d598 = 0;\n        *(undefined4 *)((long)pointer_to_long + 0x1c) = 0;\nLAB_0010475e:\n        pointer_to_file = DAT_0010d590;\n        if (uint_variable == 0) {\n          if ((DAT_0010d5a8 == 0) || (*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) == 0)) {\n            yyensure_buffer_stack();\n            pointer_to_undefined8 = (undefined8 *)(DAT_0010d5a8 + DAT_0010d5a0 * 8);\n            undefined8 = yy_create_buffer_constprop_0(pointer_to_file);\n            *pointer_to_undefined8 = undefined8;\n          }\n          long_variable = DAT_0010d5a8;\n          if (DAT_0010d5a8 != 0) {\n            long_variable = *(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8);\n          }\n          integer_variable = 1;\n          yy_init_buffer(long_variable);\n          yy_load_buffer_state();\n        }\n        else {\n          integer_variable = 2;\n          *(undefined4 *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 0x38) = 2;\n        }\n      }\n      else {\n        while( true ) {\n          pointer_to_long = *double_pointer;\n          uint_variable = ~uint_variable + *(int *)(pointer_to_long + 3);\n          if (0 < (int)uint_variable) break;\n          uint_variable = (int)DAT_0010d5b0 - (int)(void *)pointer_to_long[1];\n          if (*(int *)(pointer_to_long + 4) == 0) {\n            pointer_to_long[1] = 0;\nLAB_00104626:\n            yy_fatal_error();\n            break;\n          }\n          integer_variable = *(int *)(pointer_to_long + 3);\n          integer_variable = integer_variable;\n          if (integer_variable < 1) {\n            integer_variable = integer_variable / 8;\n          }\n          *(int *)(pointer_to_long + 3) = integer_variable + integer_variable;\n          pointer_to_void = realloc((void *)pointer_to_long[1],(long)(integer_variable + integer_variable + 2));\n          pointer_to_long[1] = (long)pointer_to_void;\n          if (pointer_to_void == (void *)0x0) goto LAB_00104626;\n          DAT_0010d5b0 = (byte *)((long)pointer_to_void + (long)(int)uint_variable);\n          pointer_to_long = *double_pointer;\n        }\n        if (0x2000 < (int)uint_variable) {\n          uint_variable = 0x2000;\n        }\n        ulong_variable = (ulong)uint_variable;\n        if (*(int *)((long)pointer_to_long + 0x24) == 0) {\n          pointer_to_integer = __errno_location();\n          ulong_variable = (ulong)(int)uint_variable;\n          state = (ulong)(int)uint_variable;\n          *pointer_to_integer = 0;\n          goto LAB_001046c7;\n        }\n        state = 0;\n        pointer_to_integer = (int *)(long)(int)uint_variable;\n        do {\n          integer_variable = getc(DAT_0010d590);\n          uint_var36 = (uint)state;\n          if (integer_variable == -1) {\n            integer_variable = ferror(DAT_0010d590);\n            uint_variable = uint_var36;\n            if (integer_variable != 0) {\n              do {\n                pointer_to_character = \"input in flex scanner failed\";\n                yy_fatal_error();\n                do {\n                  *pointer_to_integer = 0;\n                  clearerr((FILE *)pointer_to_character);\nLAB_001046c7:\n                  size_t = fread((void *)(*(long *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 8)\n                                         + state),1,ulong_variable,DAT_0010d590);\n                  pointer_to_character = (char *)DAT_0010d590;\n                  DAT_0010d598 = (uint)size_t;\n                  uint_variable = DAT_0010d598;\n                  if ((DAT_0010d598 != 0) ||\n                     (integer_variable = ferror(DAT_0010d590), uint_variable = DAT_0010d598, integer_variable == 0))\n                  goto LAB_00104738;\n                } while (*pointer_to_integer == 4);\n              } while( true );\n            }\n            break;\n          }\n          if (integer_variable == 10) {\n            *(undefined *)\n             ((long)(int *)(long)(int)uint_variable +\n             (long)(int)uint_var36 + *(long *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 8)) = 10;\n            uint_variable = uint_var36 + 1;\n            break;\n          }\n          state = (ulong)(uint_var36 + 1);\n          *(char *)(*(long *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 8) + (long)pointer_to_integer) =\n               (char)integer_variable;\n          pointer_to_integer = (int *)((long)pointer_to_integer + 1);\n        } while (uint_variable != uint_var36 + 1);\nLAB_00104738:\n        DAT_0010d598 = uint_variable;\n        uint_variable = DAT_0010d598;\n        integer_variable = 0;\n        *(uint *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 0x1c) = DAT_0010d598;\n        if (uint_variable == 0) goto LAB_0010475e;\n      }\n      pointer_to_long = (long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8);\n      long_variable = *pointer_to_long;\n      uint_variable = uint_variable + DAT_0010d598;\n      if (*(int *)(long_variable + 0x18) < (int)uint_variable) {\n        integer_variable = ((int)DAT_0010d598 >> 1) + uint_variable;\n        pointer_to_void = realloc(*(void **)(long_variable + 8),(long)integer_variable);\n        *(void **)(long_variable + 8) = pointer_to_void;\n        undefined_var41._8_8_ = pointer_to_long;\n        undefined_var41._0_8_ = *pointer_to_long;\n        if (*(long *)(*pointer_to_long + 8) == 0) {\n          undefined_var41 = yy_fatal_error();\n        }\n        pointer_to_long = undefined_var41._8_8_;\n        *(int *)(undefined_var41._0_8_ + 0x18) = integer_variable + -2;\n      }\n      DAT_0010d598 = uint_variable;\n      *(undefined *)(*(long *)(*pointer_to_long + 8) + (long)(int)uint_variable) = 0;\n      *(undefined *)(*(long *)(*pointer_to_long + 8) + 1 + (long)(int)uint_variable) = 0;\n      pointer_to_byte = *(byte **)(*pointer_to_long + 8);\n      DAT_0010d5c8 = pointer_to_byte;\n      if (integer_variable == 1) goto LAB_001048a4;\n      if (integer_variable == 2) goto LAB_001048ca;\n      pointer_to_byte = pointer_to_byte + integer_variable;\n      DAT_0010d5b0 = pointer_to_byte;\n      uint_variable = yy_get_previous_state();\n      goto LAB_001040d4;\n    }\n    if ((long)pointer_to_byte - (long)pointer_to_byte == 1) goto LAB_001048a4;\nLAB_001048ca:\n    pointer_to_byte = (byte *)((long)(int)DAT_0010d598 +\n                      *(long *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 8));\n    DAT_0010d5b0 = pointer_to_byte;\n    state = yy_get_previous_state();\n    pointer_to_byte = DAT_0010d5c8;\n    goto LAB_0010419f;\n  }\n  pointer_to_byte = pointer_to_byte + integer_variable;\n  DAT_0010d5b0 = pointer_to_byte;\n  state = yy_get_previous_state();\n  if (*(short *)(&DAT_0010a980 + (long)(int)(uint)state * 2) != 0) {\n    DAT_0010d5b8 = pointer_to_byte;\n    DAT_0010d5c0 = (uint)state;\n  }\n  ulong_variable = state & 0xffffffff;\n  while( true ) {\n    integer_variable = (int)ulong_variable;\n    if (integer_variable == *(short *)(&DAT_0010a440 +\n                           (long)(*(short *)(&DAT_0010a640 + (long)integer_variable * 2) + 1) * 2)) break;\n    ulong_variable = (ulong)(uint)(int)*(short *)(&DAT_0010a800 + (long)integer_variable * 2);\n  }\n  uint_variable = (uint)*(short *)(&DAT_0010a240 +\n                           (long)(*(short *)(&DAT_0010a640 + (long)integer_variable * 2) + 1) * 2);\n  pointer_to_byte = pointer_to_byte;\n  if ((*(short *)(&DAT_0010a240 + (long)(*(short *)(&DAT_0010a640 + (long)integer_variable * 2) + 1) * 2) == 0)\n     || (uint_variable == 0xb0)) goto LAB_0010419f;\n  pointer_to_byte = pointer_to_byte + 1;\n  goto LAB_001040d4;\nLAB_001048a4:\n  DAT_0010d5b0 = DAT_0010d5c8;\n  integer_variable = (int)(DAT_0010d5d0 - 1) / 2 + 0x2a;\n  goto LAB_001041f0;\nswitchD_00104200_caseD_0:\n  *pointer_to_byte = DAT_0010d588;\n  state = (ulong)DAT_0010d5c0;\n  pointer_to_byte = DAT_0010d5b8;\n  goto LAB_0010419f;\nLAB_00105227:\n  double_pointer_to_character = double_pointer_to_character + 1;\n  local_integer = 3;\n  *double_pointer_to_character = DAT_0010d548;\nLAB_001049d1:\n  local_pointer_to_character = local_pointer_to_character + 1;\n  goto LAB_00103ee9;\n}\n\n",
            "current_name": "decompiled_function_00103e95",
            "entrypoint": "0x00103e95",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103e95": "decompiled_function_00103e95",
                "auVar40": "temp_buffer",
                "auVar41": "undefined_var41",
                "bVar28": "bool_variable",
                "bVar30": "byte_variable",
                "bVar39": "bool_var39",
                "cVar2": "character_variable",
                "iVar25": "integer_variable",
                "iVar37": "state_index",
                "iVar8": "integer_variable",
                "iVar9": "integer_variable",
                "lVar17": "long_variable",
                "lVar18": "long_variable",
                "lVar21": "long_variable",
                "lVar31": "long_variable",
                "local_678": "local_character_pointer_array",
                "local_740": "local_character_array",
                "local_7d0": "local_stat",
                "local_7f8": "local_pointer_to_byte",
                "local_7fc": "local_uint_variable",
                "local_800": "local_integer",
                "local_810": "local_double_pointer_to_character",
                "local_818": "local_long_variable",
                "local_820": "local_pointer_to_character",
                "local_828": "local_pointer_to_character",
                "pFVar4": "pointer_to_file",
                "pbVar32": "pointer_to_byte",
                "pbVar33": "pointer_to_byte",
                "pbVar35": "pointer_to_byte",
                "pbVar7": "pointer_to_byte",
                "pcVar10": "pointer_to_character",
                "pcVar15": "pointer_to_character",
                "pcVar16": "pointer_to_character",
                "pcVar2": "pointer_to_char_4",
                "pcVar27": "pointer_to_char_5",
                "pcVar29": "pointer_to_char_6",
                "pcVar3": "pointer_to_char_7",
                "piVar34": "pointer_to_integer",
                "plVar12": "pointer_to_long",
                "plVar5": "pointer_to_long",
                "ppFVar3": "double_pointer_to_file",
                "ppcVar27": "double_pointer_to_character",
                "ppcVar29": "double_pointer_to_character",
                "ppcVar38": "double_pointer_to_character",
                "pplVar1": "double_pointer",
                "puVar22": "pointer_to_undefined8",
                "puVar23": "pointer_to_undefined8",
                "pvVar14": "pointer_to_void",
                "sVar13": "size_t",
                "uVar11": "undefined8",
                "uVar19": "state",
                "uVar20": "uint_variable",
                "uVar24": "uint_variable",
                "uVar26": "ulong_variable",
                "uVar36": "uint_var36",
                "uVar40": "auxiliary_variable1",
                "uVar41": "auxiliary_variable2",
                "uVar6": "unsigned_long"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001052a0": {
            "additional_data": {
                "FUN_001052a0": {
                    "check_file": 13,
                    "check_file_info": 1,
                    "check_file_information": 1,
                    "check_file_properties": 5,
                    "check_file_status": 8,
                    "get_file_info": 1,
                    "get_file_information": 1,
                    "validate_file": 1
                },
                "iVar1": {
                    "result": 4,
                    "stat_result": 2,
                    "status": 25
                },
                "non_fatal": {
                    "print_warning": 1
                },
                "param_1": {
                    "file_path": 20,
                    "filename": 10,
                    "path": 1
                },
                "pcVar4": {
                    "err_msg": 1,
                    "error_description": 2,
                    "error_message": 2,
                    "error_reason": 17,
                    "error_str": 3,
                    "error_string": 1,
                    "reason": 1,
                    "reason_msg": 1,
                    "str_err": 1,
                    "str_error": 2
                },
                "piVar2": {
                    "err_num_pointer": 1,
                    "err_num_ptr": 1,
                    "errno_loc": 1,
                    "errno_location": 4,
                    "errno_ptr": 10,
                    "error": 3,
                    "error_code": 3,
                    "error_code_pointer": 1,
                    "error_location": 1,
                    "error_num": 1,
                    "error_ptr": 5
                },
                "sStack_a8": {
                    "file_info": 4,
                    "file_stat": 14,
                    "file_stat_info": 1,
                    "file_stats": 11,
                    "file_status": 1
                },
                "uVar3": {
                    "err_msg": 1,
                    "error_message": 16,
                    "error_msg": 10,
                    "message": 3,
                    "msg": 1
                }
            },
            "called": [
                "FUN_001025a0",
                "FUN_00102330",
                "FUN_00107920",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00107650"
            ],
            "code": "\nlong check_file_status_001052a0(char *file_path)\n\n{\n  int status;\n  int *errno_ptr;\n  undefined8 error_message;\n  char *error_reason;\n  stat file_stat;\n  \n  if (file_path != (char *)0x0) {\n    status = stat(file_path,&file_stat);\n    if (status < 0) {\n      errno_ptr = __errno_location();\n      if (*errno_ptr == 2) {\n        error_message = dcgettext(0,\"\\'%s\\': No such file\",5);\n        print_warning(error_message,file_path);\n      }\n      else {\n        error_reason = strerror(*errno_ptr);\n        error_message = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n        print_warning(error_message,file_path,error_reason);\n      }\n    }\n    else if ((file_stat.st_mode & 0xf000) == 0x4000) {\n      error_message = dcgettext(0,\"Warning: \\'%s\\' is a directory\",5);\n      print_warning(error_message,file_path);\n    }\n    else if ((file_stat.st_mode & 0xf000) == 0x8000) {\n      if (-1 < file_stat.st_size) {\n        return file_stat.st_size;\n      }\n      error_message = dcgettext(0,\"Warning: \\'%s\\' has negative size, probably it is too large\",5);\n      print_warning(error_message,file_path);\n    }\n    else {\n      error_message = dcgettext(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n      print_warning(error_message,file_path);\n    }\n  }\n  return -1;\n}\n\n",
            "current_name": "check_file_status_001052a0",
            "entrypoint": "0x001052a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001052a0": "check_file_status_001052a0",
                "iVar1": "status",
                "non_fatal": "print_warning",
                "param_1": "file_path",
                "pcVar4": "error_reason",
                "piVar2": "errno_ptr",
                "sStack_a8": "file_stat",
                "uVar3": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105300": {
            "additional_data": {
                "FUN_00105300": {
                    "analyze_binary": 1,
                    "decompile_and_improve": 2,
                    "decompile_extracted_function": 1,
                    "extract_and_improve_code": 1,
                    "extract_and_open_archive": 1,
                    "extract_archive": 1,
                    "extract_archived_files": 2,
                    "improved_load_binary": 1,
                    "load_and_convert_archive": 1,
                    "open_and_check_archive": 1,
                    "open_and_check_archived_file": 1,
                    "open_and_check_bfd_file": 1,
                    "open_and_check_file": 1,
                    "open_and_convert_archive": 2,
                    "open_and_convert_bfd_file": 1,
                    "open_and_convert_file": 1,
                    "open_file_and_check_format": 1,
                    "parse_and_open_file": 1,
                    "parse_file": 1,
                    "process_binary": 2
                },
                "bVar3": {
                    "bit_flag": 1,
                    "bit_value": 1,
                    "conversion_flag": 3,
                    "convert_flag": 2,
                    "file_conversion_flag": 1,
                    "file_format": 1,
                    "flag": 5,
                    "format_flag": 1,
                    "is_archived": 1,
                    "is_archived_file": 2,
                    "is_converted": 1,
                    "is_thin_format": 3,
                    "is_thin_library": 5,
                    "library_format_flag": 1,
                    "thin_library": 1,
                    "thin_library_flag": 2
                },
                "cVar4": {
                    "char_flag": 1,
                    "char_value": 1,
                    "char_var": 1,
                    "conversion_error": 1,
                    "conversion_flag": 2,
                    "conversion_result": 1,
                    "conversion_status": 1,
                    "format_check": 6,
                    "format_check_result": 8,
                    "format_error_flag": 1,
                    "format_flag": 1,
                    "format_result": 1,
                    "format_status": 2,
                    "result": 3,
                    "status": 1
                },
                "iVar5": {
                    "error_code": 1,
                    "result": 10,
                    "return_value": 1,
                    "stat_result": 9,
                    "status": 10
                },
                "lVar9": {
                    "arch_file": 1,
                    "archive_file_ptr": 1,
                    "archived_file": 5,
                    "archived_file_offset": 1,
                    "archived_file_ptr": 3,
                    "current_archived_file": 1,
                    "current_file": 1,
                    "file_descriptor": 4,
                    "file_offset": 3,
                    "file_pointer": 3,
                    "file_ptr": 5,
                    "next_archived_file": 2
                },
                "local_a8": {
                    "file_info": 8,
                    "file_stat": 8,
                    "file_stat_struct": 1,
                    "file_stats": 7,
                    "file_status": 3,
                    "stat_buf": 1,
                    "stat_buffer": 1,
                    "stat_struct": 1
                },
                "local_b0": {
                    "format_buf": 2,
                    "format_buffer": 2,
                    "format_list": 1,
                    "format_match": 1,
                    "matching_format": 2,
                    "matching_formats": 22
                },
                "param_1": {
                    "archive_file": 1,
                    "archive_filename": 2,
                    "archive_path": 1,
                    "binary_path": 1,
                    "file_path": 5,
                    "filename": 16,
                    "input_file": 3,
                    "input_path": 2
                },
                "param_2": {
                    "arch_data": 1,
                    "arch_file_ptrs": 1,
                    "archive": 2,
                    "archive_handle": 2,
                    "archived_file": 1,
                    "archived_file_handles": 1,
                    "archived_files": 3,
                    "archives": 1,
                    "file_formats": 1,
                    "file_pointer": 1,
                    "format_options": 2,
                    "format_ptr": 1,
                    "formats": 3,
                    "opened_files": 1,
                    "output": 3,
                    "output_context": 1,
                    "output_file": 2,
                    "output_formats": 1,
                    "output_param": 1,
                    "output_paths": 1,
                    "result": 1
                },
                "pcVar2": {
                    "default_plugin_name": 1,
                    "error": 1,
                    "error_message": 9,
                    "error_msg": 2,
                    "error_string": 2,
                    "plugin": 3,
                    "plugin_file": 1,
                    "plugin_name": 9,
                    "plugin_name_ptr": 1,
                    "program_name": 2
                },
                "piVar8": {
                    "errno": 2,
                    "errno_loc": 2,
                    "errno_location": 6,
                    "errno_pointer": 1,
                    "errno_ptr": 8,
                    "errno_value": 1,
                    "errnum_location": 1,
                    "error": 1,
                    "error_code": 3,
                    "error_code_ptr": 1,
                    "error_num_ptr": 1,
                    "error_number": 1,
                    "error_pointer": 2
                },
                "plVar1": {
                    "arch_file_ptr": 1,
                    "arched_file_ptr": 1,
                    "archive_file": 1,
                    "archived_file": 2,
                    "archived_file_handle": 1,
                    "archived_file_pointer": 3,
                    "archived_file_ptr": 7,
                    "archived_files": 10,
                    "file_pointer": 2,
                    "file_ptr": 2,
                    "ptr_list": 1
                },
                "puVar10": {
                    "archive_file_ptr": 1,
                    "converted_output": 1,
                    "file_handle": 1,
                    "file_pointer2": 1,
                    "file_result": 1,
                    "in_arch_path": 1,
                    "inarch_cold_data": 1,
                    "inarch_cold_file": 1,
                    "inarch_cold_file_ptr": 1,
                    "inarch_cold_handle": 1,
                    "inarch_cold_output": 1,
                    "inarch_cold_result": 1,
                    "inarch_file": 2,
                    "input": 1,
                    "input_file_descriptor": 1,
                    "input_file_ptr": 1,
                    "new_archive_handle": 2,
                    "open_arch_cold_result": 1,
                    "open_cold_result": 1,
                    "open_inarch_cold_result": 1,
                    "open_result": 1,
                    "opened_file": 1,
                    "output": 1,
                    "output_context": 1,
                    "output_file_pointer": 1,
                    "result": 1,
                    "result_format_ptr": 1,
                    "result_ptr": 1
                },
                "uVar6": {
                    "dcmessage": 1,
                    "display_string": 1,
                    "error_message": 9,
                    "error_msg": 6,
                    "error_string": 3,
                    "fatal_error_message": 1,
                    "format_error_message": 1,
                    "format_string": 1,
                    "message": 3,
                    "message1": 1,
                    "msg1": 1,
                    "return_value": 1,
                    "text_message": 1,
                    "unimportant_var": 1
                },
                "uVar7": {
                    "context": 1,
                    "convert_error_message": 1,
                    "error_format": 1,
                    "error_format_string": 1,
                    "error_message": 5,
                    "error_msg": 3,
                    "error_msg_context": 1,
                    "error_string": 2,
                    "error_string2": 1,
                    "file_name": 2,
                    "file_name_message": 1,
                    "library_name": 2,
                    "library_string": 1,
                    "message": 2,
                    "message2": 2,
                    "message_arg": 1,
                    "msg2": 1,
                    "source_file": 1,
                    "str": 1,
                    "unimportant_var2": 1
                }
            },
            "called": [
                "FUN_001024c0",
                "FUN_00102420",
                "FUN_00102130",
                "FUN_00102480",
                "FUN_00102530",
                "FUN_00107c10",
                "FUN_00103bd1",
                "FUN_00102220",
                "FUN_001024a0",
                "FUN_00102170",
                "FUN_0010315d",
                "FUN_00107690",
                "FUN_00102240",
                "FUN_00102330",
                "FUN_00107920",
                "FUN_00102060",
                "FUN_00102340",
                "FUN_00102490",
                "FUN_00107c20",
                "FUN_00102310",
                "FUN_00102710"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105db0",
                "FUN_00107650"
            ],
            "code": "\n\n\nundefined8 * open_and_check_bfd_file_00105300(char *filename,undefined8 *formats)\n\n{\n  long *archived_files;\n  char *error_message;\n  byte flag;\n  char format_check_result;\n  int status;\n  undefined8 error_message;\n  undefined8 error_message;\n  int *errno_ptr;\n  long archived_file;\n  undefined8 *new_archive_handle;\n  undefined8 matching_formats;\n  stat file_stat;\n  \n  bfd_set_error(0);\n  if (DAT_0010d5f0 == (char *)0x0) {\n    DAT_0010d5f0 = \"plugin\";\n  }\n  status = stat(filename,&file_stat);\n  error_message = DAT_0010d618;\n  if (status == 0) goto LAB_001053be;\n  errno_ptr = __errno_location();\n  if (*errno_ptr == 2) {\n    if (DAT_0010d604 == '\\0') {\n      fprintf(_stderr,\"%s: \",DAT_0010d660);\n      perror(filename);\n      maybequit();\n      return (undefined8 *)0x0;\n    }\n    if ((DAT_0010d5f0 == (char *)0x0) && (formats != (undefined8 *)0x0)) {\n      new_archive_handle = (undefined8 *)open_inarch_cold();\n      return new_archive_handle;\n    }\n    formats = (undefined8 *)bfd_openw(filename,DAT_0010d5f0);\n    if (((formats != (undefined8 *)0x0) && (format_check_result = bfd_set_format(formats,2), format_check_result != '\\0')) &&\n       (format_check_result = bfd_close(formats), format_check_result != '\\0')) {\n      error_message = filename;\n      if (_DAT_0010d610 == 0) goto LAB_00102826;\n      goto LAB_001053be;\n    }\n  }\n  bfd_fatal(filename);\n  do {\n    flag = *(byte *)((long)formats + 0x49) >> 4 & 1;\n    if (DAT_0010d5f8 == '\\0') {\n      if (flag != 0) {\n        error_message = *formats;\n        error_message = dcgettext(0,\"Cannot convert existing thin library %s to normal format\",5);\n        fatal(error_message,error_message);\n        goto LAB_00102812;\n      }\n    }\n    else if (flag == 0) {\n      error_message = *formats;\n      error_message = dcgettext(0,\"Cannot convert existing library %s to thin format\",5);\n      fatal(error_message,error_message);\nLAB_001027cb:\n      bfd_nonfatal(filename);\n      status = bfd_get_error();\n      if (status == 0xd) {\nLAB_00102812:\n        list_matching_formats(matching_formats);\n      }\n                    \n      xexit(1);\n    }\n    do {\n      archived_files = formats + 0x1e;\n      for (archived_file = bfd_openr_next_archived_file(formats,0); archived_file != 0;\n          archived_file = bfd_openr_next_archived_file(formats,archived_file)) {\n        *archived_files = archived_file;\n        archived_files = (long *)(archived_file + 0xf0);\n      }\n      *archived_files = 0;\n      status = bfd_get_error();\n      if (status == 9) {\n        return formats;\n      }\n      do {\n        bfd_fatal(filename);\nLAB_00102826:\n        error_message = dcgettext(0,\"creating %s\",5);\n        non_fatal(error_message,filename);\n        error_message = filename;\nLAB_001053be:\n        DAT_0010d618 = error_message;\n        formats = (undefined8 *)bfd_openr(filename,DAT_0010d5f0);\n      } while (formats == (undefined8 *)0x0);\n      format_check_result = bfd_check_format_matches(formats,2,&matching_formats);\n      if (format_check_result == '\\0') goto LAB_001027cb;\n    } while (((DAT_0010d64c != 2) && (DAT_0010d64c != 7)) ||\n            (archived_file = bfd_openr_next_archived_file(formats,0), archived_file == 0));\n  } while( true );\n}\n\n",
            "current_name": "open_and_check_bfd_file_00105300",
            "entrypoint": "0x00105300",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105300": "open_and_check_bfd_file_00105300",
                "bVar3": "flag",
                "cVar4": "format_check_result",
                "iVar5": "status",
                "lVar9": "archived_file",
                "local_a8": "file_stat",
                "local_b0": "matching_formats",
                "param_1": "filename",
                "param_2": "formats",
                "pcVar2": "error_message",
                "piVar8": "errno_ptr",
                "plVar1": "archived_files",
                "puVar10": "new_archive_handle",
                "uVar6": "error_message",
                "uVar7": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105480": {
            "additional_data": {
                "DAT_0010d634": {
                    "flag": 1
                },
                "FUN_0010285f": {
                    "print_error": 1
                },
                "FUN_00105480": {
                    "archive_search": 1,
                    "extract_files_from_archive": 1,
                    "process_archive": 1,
                    "process_archive_entries": 4,
                    "process_archived_entries": 3,
                    "process_entries": 17,
                    "process_entries_from_archive": 1,
                    "process_file_entries": 1,
                    "process_files": 1,
                    "reverse_archive_entries": 1
                },
                "FUN_00105830": {
                    "normalize": 1
                },
                "_DAT_0010d630": {
                    "threshold": 1
                },
                "__format": {
                    "error_format_string": 1,
                    "error_message": 6,
                    "error_message_format": 3,
                    "error_msg": 1,
                    "error_msg_format": 3,
                    "format_str": 2,
                    "format_string": 10
                },
                "_stderr": {
                    "error_stream": 1,
                    "std_error": 1,
                    "stderr": 1
                },
                "dcgettext": {
                    "get_text": 1,
                    "get_translation": 1
                },
                "filename_cmp": {
                    "compare_filenames": 3
                },
                "fprintf": {
                    "print_error": 2,
                    "print_error_message": 1
                },
                "iVar1": {
                    "cmp_result": 8,
                    "comparison_result": 5,
                    "filename_cmp_result": 1,
                    "filename_comparison": 1,
                    "filename_comparison_result": 3,
                    "result": 2
                },
                "lVar2": {
                    "current_entry": 21,
                    "current_entry_ptr": 1,
                    "current_file": 2,
                    "current_file_address": 1,
                    "entry": 1,
                    "entry_ptr": 4,
                    "next_entry_ptr": 1
                },
                "local_c8": {
                    "buffer": 20,
                    "buffer_entry": 1,
                    "error_message_buffer": 1,
                    "local_buffer": 3,
                    "local_data_buffer": 3,
                    "temp_buffer": 2,
                    "tmp_buffer": 1
                },
                "local_cc": {
                    "count": 6,
                    "counter": 9,
                    "entry_count": 8,
                    "entry_counter": 1,
                    "file_count": 2,
                    "matching_count": 2,
                    "num_matched_entries": 1,
                    "num_processed_entries": 1,
                    "num_processed_files": 1
                },
                "normalize": {
                    "normalize_file": 1,
                    "normalize_filename": 2
                },
                "param_1": {
                    "archive": 9,
                    "archive_address": 1,
                    "archive_base": 1,
                    "archive_data": 2,
                    "archive_ptr": 10,
                    "entries": 1,
                    "entry_data": 1,
                    "entry_list": 4,
                    "entry_table": 1,
                    "file_data": 1
                },
                "param_2": {
                    "callback": 10,
                    "callback_func": 7,
                    "entry_callback": 4,
                    "entry_function": 2,
                    "entry_handler": 1,
                    "entry_processing_func": 1,
                    "entry_processor": 3,
                    "file_callback": 1,
                    "process_entry": 1,
                    "process_file_function": 1
                },
                "param_3": {
                    "entry_list": 1,
                    "entry_names": 3,
                    "file_names": 5,
                    "filename_array": 1,
                    "filename_ptrs": 1,
                    "filenames": 20
                },
                "param_4": {
                    "num_entries": 8,
                    "num_filenames": 7,
                    "num_files": 16
                },
                "plVar3": {
                    "backup_entry": 1,
                    "current_entry_link_ptr": 1,
                    "default_entry": 3,
                    "default_entry_ptr": 2,
                    "default_file": 1,
                    "end_entry_ptr": 1,
                    "fallback_entry": 3,
                    "fallback_entry_ptr": 1,
                    "last_entry": 1,
                    "last_valid_entry": 1,
                    "next_entry": 6,
                    "next_entry_ptr": 1,
                    "non_null_entry": 1,
                    "prev_entry": 1,
                    "previous_entry": 1,
                    "temp_entry": 1,
                    "temp_file_address": 1,
                    "temp_ptr": 2,
                    "tmp_entry": 1,
                    "tmp_ptr": 1
                },
                "plVar5": {
                    "archive_entry": 1,
                    "current_archive_entry_ptr": 1,
                    "current_entry": 2,
                    "current_entry_ptr": 4,
                    "entry": 4,
                    "entry_iterator": 1,
                    "entry_list": 2,
                    "entry_list_ptr": 1,
                    "entry_pointer": 1,
                    "entry_ptr": 11,
                    "file_node": 1,
                    "file_ptr": 2
                },
                "uVar4": {
                    "normalized_entry": 2,
                    "normalized_entry_name": 3,
                    "normalized_file": 2,
                    "normalized_file_name": 3,
                    "normalized_filename": 21
                }
            },
            "called": [
                "FUN_00105830",
                "FUN_00102100",
                "FUN_0010285f"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid process_entries_from_archive_00105480(long archive_ptr,code *callback,undefined8 *filenames,int num_files)\n\n{\n  int cmp_result;\n  char *format_string;\n  long current_entry;\n  long *next_entry;\n  undefined8 normalized_filename;\n  long *entry_ptr;\n  int counter;\n  undefined buffer [152];\n  \n  current_entry = *(long *)(archive_ptr + 0xf0);\n  if (num_files == 0) {\n    for (; current_entry != 0; current_entry = *(long *)(current_entry + 0xf0)) {\n      (*callback)(current_entry);\n    }\n  }\n  else {\n    for (; current_entry != 0; current_entry = *(long *)(current_entry + 0xf0)) {\n      *(undefined4 *)(current_entry + 0xac) = 0;\n    }\n    do {\n      entry_ptr = *(long **)(archive_ptr + 0xf0);\n      counter = 0;\n      for (; entry_ptr != (long *)0x0; entry_ptr = (long *)entry_ptr[0x1e]) {\n        if (*(int *)((long)entry_ptr + 0xac) == 0) {\n          current_entry = *entry_ptr;\n          if (current_entry == 0) {\n            next_entry = (long *)entry_ptr[0x1d];\n            if ((long *)entry_ptr[0x1d] == (long *)0x0) {\n              next_entry = entry_ptr;\n            }\n            (**(code **)(next_entry[1] + 0x1e8))(entry_ptr,buffer);\n          }\n          else if (((*(byte *)(archive_ptr + 0x49) & 0x10) == 0) ||\n                  (current_entry = normalize_filename(current_entry,archive_ptr), current_entry != 0)) {\n            normalized_filename = normalize_filename(*filenames,archive_ptr);\n            cmp_result = compare_filenames(normalized_filename,current_entry);\n            if ((cmp_result == 0) &&\n               ((DAT_0010d634 == '\\0' || (counter = counter + 1, counter == _DAT_0010d630)))) {\n              (*callback)();\n              *(undefined4 *)((long)entry_ptr + 0xac) = 1;\n              goto LAB_0010553e;\n            }\n          }\n        }\n      }\n      normalized_filename = *filenames;\n      format_string = (char *)get_translation(0,\"no entry %s in archive\\n\",5);\n      print_error(std_error,format_string,normalized_filename);\nLAB_0010553e:\n      filenames = filenames + 1;\n      num_files = num_files + -1;\n    } while (num_files != 0);\n  }\n  return;\n}\n\n",
            "current_name": "process_entries_from_archive_00105480",
            "entrypoint": "0x00105480",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105480": "process_entries_from_archive_00105480",
                "__format": "format_string",
                "_stderr": "std_error",
                "dcgettext": "get_translation",
                "filename_cmp": "compare_filenames",
                "fprintf": "print_error",
                "iVar1": "cmp_result",
                "lVar2": "current_entry",
                "local_c8": "buffer",
                "local_cc": "counter",
                "normalize": "normalize_filename",
                "param_1": "archive_ptr",
                "param_2": "callback",
                "param_3": "filenames",
                "param_4": "num_files",
                "plVar3": "next_entry",
                "plVar5": "entry_ptr",
                "uVar4": "normalized_filename"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105570": {
            "additional_data": {
                "DAT_0010d5f0": {
                    "ar_bfd_target": 1
                },
                "DAT_0010d5f8": {
                    "undefined_var2": 1
                },
                "DAT_0010d5f9": {
                    "bool_var2": 1
                },
                "DAT_0010d5fa": {
                    "bool_var3": 1
                },
                "DAT_0010d60c": {
                    "bool_var4": 1
                },
                "DAT_0010d618": {
                    "global_flag_1": 1
                },
                "DAT_0010d620": {
                    "libdep_handle": 1
                },
                "DAT_0010d638": {
                    "file_extension": 1
                },
                "DAT_0010d640": {
                    "file_extension_flag": 1
                },
                "FUN_00105570": {
                    "process_and_write_archive": 1,
                    "process_archive": 1,
                    "process_binary_function": 2,
                    "process_dependencies": 1,
                    "process_files": 15,
                    "process_input_files": 1
                },
                "PTR_FUN_00105570": {
                    "process_files_ptr": 1
                },
                "_DAT_0010d644": {
                    "flag": 1
                },
                "__s": {
                    "base_file_name": 1,
                    "base_filename": 1,
                    "base_name": 5,
                    "base_name2": 4,
                    "base_name_2": 1,
                    "basename": 4,
                    "basename2": 1,
                    "basename_2": 1,
                    "basename_filename": 1,
                    "basename_result": 1,
                    "basename_temp": 1,
                    "current_basename": 1,
                    "current_basename_ptr": 1,
                    "file_base_name": 1,
                    "normalized_base_name": 1,
                    "path_base": 1,
                    "string_ptr_4": 1,
                    "stripped_name": 1,
                    "temp_str": 1,
                    "var11": 2
                },
                "auStack_158": {
                    "ar_emul_stack": 1,
                    "aux_stack": 1,
                    "auxiliary_stack": 1,
                    "buffer": 1,
                    "stack_array": 10,
                    "stack_buffer": 5,
                    "stack_data": 1,
                    "stack_var": 1,
                    "temp_array": 1,
                    "temp_buffer": 1,
                    "temp_stack": 3,
                    "temp_stack_array": 1,
                    "temporary_buffer": 1,
                    "var23": 2,
                    "var_1": 1
                },
                "bVar19": {
                    "bool1": 1,
                    "bool_flag": 1,
                    "bool_val": 2,
                    "bool_var": 13,
                    "boolean_flag": 2,
                    "boolean_result": 1,
                    "boolean_value": 3,
                    "flag2": 1,
                    "flag_2_result": 1,
                    "flag_value": 1,
                    "flag_value_bool": 1,
                    "is_const_prop": 1,
                    "is_expr": 1,
                    "var20": 2
                },
                "bVar20": {
                    "boolean_value": 1,
                    "byte2": 1,
                    "byte_flag_2": 1,
                    "byte_val": 1,
                    "byte_val2": 1,
                    "byte_val_2": 1,
                    "byte_value": 1,
                    "byte_var": 5,
                    "byte_var1": 1,
                    "byte_var2": 7,
                    "byte_var_2": 3,
                    "byte_variable": 1,
                    "count": 1,
                    "local_flag": 1,
                    "temp_byte": 1,
                    "var21": 2,
                    "zero": 1
                },
                "bVar3": {
                    "append_result": 1,
                    "byte1": 1,
                    "byte_flag": 2,
                    "byte_result": 1,
                    "byte_val": 3,
                    "byte_value": 1,
                    "byte_var": 14,
                    "flag": 2,
                    "is_updated": 1,
                    "result": 2,
                    "return_value": 1,
                    "var3": 2
                },
                "iVar4": {
                    "cmp_result": 2,
                    "comparison_result": 1,
                    "counter": 1,
                    "index": 7,
                    "index_var": 4,
                    "int_val": 1,
                    "int_var": 10,
                    "integer_val": 1,
                    "loop_counter": 1,
                    "result": 1,
                    "var4": 2
                },
                "initialize_data_00102943": {
                    "initialize_data": 1
                },
                "lStack_100": {
                    "current_time": 1,
                    "file_time": 1,
                    "l_stack_var": 2,
                    "last_modified_time": 2,
                    "long_val_3": 1,
                    "lstack_var": 1,
                    "lvalue": 1,
                    "modified_time": 1,
                    "previous_time": 1,
                    "stack_value": 1,
                    "stack_var": 4,
                    "stack_var1": 2,
                    "stack_variable": 1,
                    "temp_stack_long": 1,
                    "time": 1,
                    "time_limit": 3,
                    "time_stack": 1,
                    "time_val": 1,
                    "timestamp": 2,
                    "var24": 2,
                    "var_2": 1
                },
                "lVar11": {
                    "cur_ptr": 1,
                    "current_entry": 1,
                    "current_file_info": 1,
                    "current_file_ptr": 3,
                    "current_list_item": 1,
                    "current_list_pointer": 1,
                    "current_node": 2,
                    "current_pointer": 1,
                    "current_ptr": 4,
                    "long_val_1": 1,
                    "next_file": 1,
                    "prev_file": 1,
                    "prev_file_info": 1,
                    "prev_file_path": 1,
                    "ptr_var_1": 1,
                    "temp1": 1,
                    "temp_long_1": 1,
                    "temp_ptr": 1,
                    "temp_ptr1": 2,
                    "temp_var1": 2,
                    "temp_variable_3": 1,
                    "var12": 2
                },
                "lVar12": {
                    "current_file": 1,
                    "current_file_info": 1,
                    "file_ptr": 1,
                    "long_val_2": 1,
                    "next_entry": 1,
                    "next_file": 1,
                    "next_file_info": 1,
                    "next_file_ptr": 2,
                    "next_list_item": 1,
                    "next_node": 1,
                    "next_pointer": 1,
                    "next_ptr": 4,
                    "prev_file_path": 1,
                    "prev_node": 1,
                    "prev_ptr": 1,
                    "previous_list_pointer": 1,
                    "ptr_var_2": 1,
                    "temp2": 1,
                    "temp_long_2": 1,
                    "temp_ptr2": 3,
                    "temp_var2": 2,
                    "temp_variable_4": 1,
                    "var13": 2
                },
                "local_15a": {
                    "archive_updated": 1,
                    "boolean_flag": 1,
                    "byte_val_3": 1,
                    "file_changes": 1,
                    "flag_var": 2,
                    "is_archive_modified": 1,
                    "local_bool_var": 2,
                    "local_boolean": 1,
                    "local_byte": 3,
                    "local_byte_val": 1,
                    "local_byte_var": 2,
                    "local_flag": 6,
                    "local_flag2": 1,
                    "local_var": 3,
                    "result_flag": 1,
                    "updated": 1,
                    "var22": 2,
                    "write_archive_result": 1
                },
                "param_1": {
                    "archive": 2,
                    "arg1": 9,
                    "base_address": 1,
                    "binary_context": 1,
                    "binary_data": 1,
                    "data": 1,
                    "file_data": 1,
                    "file_handler": 1,
                    "file_info": 4,
                    "file_manager": 1,
                    "input": 1,
                    "input_data": 2,
                    "input_param": 2,
                    "num": 1,
                    "param": 1,
                    "param_files_array": 1,
                    "param_ptr": 1
                },
                "param_2": {
                    "arg2": 4,
                    "arguments": 1,
                    "file_list": 4,
                    "file_names": 3,
                    "file_paths": 13,
                    "filenames": 1,
                    "files": 3,
                    "input_files": 2
                },
                "param_3": {
                    "append_flag": 1,
                    "arg3": 4,
                    "flag": 17,
                    "force_flag": 1,
                    "is_append": 1,
                    "is_ar_format": 1,
                    "is_archive": 1,
                    "is_emulated": 1,
                    "is_reversing": 1,
                    "normalize_filenames": 1,
                    "normalize_flag": 1,
                    "replace_files": 1
                },
                "pcVar10": {
                    "current_file": 10,
                    "current_file_name": 4,
                    "current_file_path": 3,
                    "current_filename_ptr": 1,
                    "current_path": 3,
                    "file_name": 2,
                    "file_path": 1,
                    "next_file": 1,
                    "next_filename": 1,
                    "string_ptr_3": 1,
                    "temp_filename": 1,
                    "temp_variable_2": 1,
                    "var10": 2
                },
                "pcVar7": {
                    "current_file": 1,
                    "current_file_name": 2,
                    "current_file_or_stat_error": 1,
                    "current_file_path": 1,
                    "current_filename": 2,
                    "file": 1,
                    "file_base_name": 1,
                    "file_name": 3,
                    "file_name_1": 1,
                    "file_path": 8,
                    "file_ptr": 1,
                    "filename": 2,
                    "filename_ptr": 1,
                    "normalized_current_file_name": 1,
                    "path_var": 1,
                    "path_var1": 1,
                    "string_ptr_1": 1,
                    "var7": 2
                },
                "pcVar8": {
                    "base_filename": 1,
                    "base_name": 5,
                    "base_name1": 1,
                    "base_name_temp": 1,
                    "basename": 5,
                    "basename1": 1,
                    "basename_1": 1,
                    "basename_ptr": 1,
                    "file_name_2": 1,
                    "filename": 1,
                    "normalized_filename": 2,
                    "path_var2": 1,
                    "pc_var8": 1,
                    "processed_file_name": 1,
                    "string_ptr_2": 1,
                    "temp_file_name": 2,
                    "temp_path": 1,
                    "temp_ptr": 1,
                    "temp_var": 1,
                    "var8": 2
                },
                "piVar6": {
                    "errno_location": 5,
                    "errno_pointer": 1,
                    "errno_ptr": 9,
                    "errnum": 1,
                    "error": 1,
                    "error_code": 1,
                    "error_indicator": 2,
                    "error_num": 1,
                    "error_ptr": 7,
                    "error_var": 1,
                    "var6": 2
                },
                "ppcVar1": {
                    "address_list": 1,
                    "archive_ptr": 1,
                    "current_file": 10,
                    "current_file_path": 2,
                    "current_filename": 1,
                    "current_path": 1,
                    "file_array": 2,
                    "file_info_ptr": 1,
                    "file_list": 1,
                    "file_list_pointer": 1,
                    "file_paths_current": 1,
                    "file_pp": 1,
                    "file_ptr": 4,
                    "pointer_var1": 1,
                    "ptr1": 1,
                    "var1": 2
                },
                "ppcVar15": {
                    "address_list_2": 1,
                    "archive_files": 1,
                    "current_dep_ptr": 1,
                    "current_entry": 1,
                    "current_file": 3,
                    "current_file_entry": 2,
                    "current_file_info_ptr": 1,
                    "current_file_ptr": 2,
                    "current_node_ptr": 1,
                    "current_pp": 1,
                    "current_ptr": 2,
                    "file_array": 2,
                    "file_list": 5,
                    "file_list_ptr": 1,
                    "file_node": 1,
                    "file_paths_start": 1,
                    "file_ptr_array": 1,
                    "filename_list": 1,
                    "list_ptr": 1,
                    "var16": 2
                },
                "ppcVar16": {
                    "address_list_3": 1,
                    "current_archive_file": 1,
                    "current_array_ptr": 1,
                    "current_file_2": 1,
                    "current_file_list": 1,
                    "current_ptr": 1,
                    "dir_entry": 1,
                    "file_list_iterator": 1,
                    "file_paths_end": 1,
                    "nested_ptr": 1,
                    "next_dep_ptr": 1,
                    "next_file": 2,
                    "next_file_ptr": 1,
                    "next_iter_ptr": 1,
                    "next_pp": 1,
                    "next_ptr": 1,
                    "prev_file_info_ptr": 1,
                    "prev_file_node": 1,
                    "prev_file_ptr": 1,
                    "prev_node_ptr": 1,
                    "previous_file_entry": 1,
                    "temp_entry_ptr": 1,
                    "temp_file_list": 1,
                    "temp_ptr": 2,
                    "temp_ptr3": 1,
                    "temp_ptr_array": 1,
                    "var17": 2
                },
                "ppcVar18": {
                    "address_list_4": 1,
                    "next_array_ptr": 1,
                    "prev_dep_ptr": 1,
                    "prev_dir_entry": 1,
                    "prev_file": 2,
                    "prev_file_list_iterator": 1,
                    "prev_file_node2": 1,
                    "prev_file_paths": 1,
                    "prev_file_ptr": 1,
                    "prev_path": 1,
                    "prev_pp": 1,
                    "prev_prev_file_info_ptr": 1,
                    "previous_archive_file": 1,
                    "previous_entry": 1,
                    "previous_file": 4,
                    "previous_file_list": 1,
                    "previous_previous_file_entry": 1,
                    "previous_ptr": 3,
                    "temp_file_list_2": 1,
                    "temp_ptr": 1,
                    "temp_ptr1": 1,
                    "temp_ptr2": 1,
                    "temp_ptr_array2": 1,
                    "var19": 2
                },
                "sStack_c8": {
                    "file_stat": 7,
                    "file_stats": 2,
                    "stack_var2": 2,
                    "stat_buffer": 1,
                    "stat_info": 1,
                    "stat_struct": 12,
                    "stat_struct_var": 1,
                    "stat_structure": 1,
                    "stat_var": 1,
                    "status": 1,
                    "var25": 2
                },
                "sVar5": {
                    "file_len": 1,
                    "filename_length": 1,
                    "length": 2,
                    "size": 6,
                    "size_val": 1,
                    "size_var": 12,
                    "str_length": 3,
                    "string_length": 1,
                    "string_size": 2,
                    "var5": 2
                },
                "uVar13": {
                    "result": 10,
                    "return_val": 1,
                    "return_value": 15,
                    "return_var": 1,
                    "temp_var_2": 1,
                    "undefined_val_3": 1,
                    "var14": 2
                },
                "uVar14": {
                    "byte_count": 1,
                    "count": 2,
                    "file_size": 1,
                    "length": 1,
                    "length_var": 1,
                    "limit": 1,
                    "max_length": 3,
                    "maximum_length": 1,
                    "uint_val": 1,
                    "ulong1": 1,
                    "ulong_val": 1,
                    "ulong_value": 1,
                    "ulong_var": 11,
                    "ulong_variable": 1,
                    "unsigned_long_var": 1,
                    "unsigned_value": 1,
                    "var15": 2
                },
                "uVar17": {
                    "comparison_type": 1,
                    "file_action": 1,
                    "file_mode": 1,
                    "file_type": 1,
                    "flag_2": 1,
                    "flag_value": 5,
                    "flag_var": 2,
                    "flags": 1,
                    "mode": 2,
                    "option": 1,
                    "temp_uint": 1,
                    "uint1": 1,
                    "uint_val": 1,
                    "uint_var": 9,
                    "unsigned_var": 1,
                    "var18": 2
                },
                "uVar2": {
                    "result": 2,
                    "ret_val": 1,
                    "temp": 1,
                    "u_var": 1,
                    "u_var2": 1,
                    "u_var_temp": 1,
                    "undefined": 2,
                    "undefined_val": 2,
                    "undefined_value": 1,
                    "undefined_var": 15,
                    "undefined_var2": 1,
                    "var2": 3
                },
                "uVar9": {
                    "file_path_var": 1,
                    "normalized_file_name": 6,
                    "normalized_file_path": 2,
                    "normalized_filename": 3,
                    "normalized_path": 11,
                    "normalized_ptr": 1,
                    "return_value": 1,
                    "temp_var": 1,
                    "temp_variable": 1,
                    "u_var9": 1,
                    "undefined_val_2": 1,
                    "var9": 2
                }
            },
            "called": [
                "FUN_00102943"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nundefined8 process_input_files_00105570(long arg1,char **file_paths,char flag)\n\n{\n  char **current_file;\n  undefined undefined_var;\n  byte byte_var;\n  int int_var;\n  size_t size_var;\n  int *errno_ptr;\n  char *file_path;\n  char *basename;\n  undefined8 normalized_path;\n  char *current_file;\n  char *base_name;\n  long current_ptr;\n  long next_ptr;\n  undefined8 return_value;\n  ulong ulong_var;\n  char **file_list;\n  char **next_file;\n  uint uint_var;\n  char **previous_file;\n  bool bool_var;\n  byte byte_var2;\n  byte local_flag;\n  undefined stack_array [88];\n  long stack_var;\n  stat stat_struct;\n  \n  byte_var2 = 0;\n  current_file = (char **)(arg1 + 0xf0);\n  local_flag = 0;\n  if (file_paths == (char **)0x0) {\n    return_value = initialize_data();\n    return return_value;\n  }\n  do {\n    current_file = *file_paths;\njoined_r0x001055aa:\n    if (current_file == (char *)0x0) {\n      if (local_flag != 0) {\n        return_value = write_archive(arg1);\n        return return_value;\n      }\n      DAT_0010d618 = 0;\n      return 0;\n    }\n    file_list = *(char ***)(arg1 + 0xf0);\n    next_file = current_file;\n    if (flag != '\\0') {\nLAB_0010564c:\n      uint_var = DAT_0010d640;\n      if (DAT_0010d640 != 0) goto LAB_001028f5;\n      next_ptr = *(long *)(arg1 + 0xf0);\n      if (*(long *)(arg1 + 0xf0) == 0) goto LAB_0010571f;\nLAB_00105670:\n      do {\n        current_ptr = next_ptr;\n        next_ptr = *(long *)(current_ptr + 0xf0);\n      } while (next_ptr != 0);\n      next_file = (char **)(current_ptr + 0xf0);\n      current_file = *file_paths;\n      do {\n        if (DAT_0010d620 != 0) {\n          return_value = normalize(current_file,arg1);\n          int_var = filename_cmp(return_value,\"__.LIBDEP\");\n          if (int_var == 0) {\n            byte_var = ar_emul_default_append(next_file,DAT_0010d620,DAT_0010d60c != 0,DAT_0010d5f8);\n            local_flag = byte_var | local_flag;\n            goto LAB_0010577e;\n          }\n          current_file = *file_paths;\n        }\n        undefined_var = DAT_0010d5f8;\n        bool_var = DAT_0010d60c != 0;\n        next_ptr = bfd_openr(current_file,DAT_0010d5f0);\n        if (next_ptr != 0) {\n          file_paths = file_paths + 1;\n          byte_var = do_ar_emul_append_constprop_0(next_file,next_ptr,(uint)bool_var,undefined_var);\n          local_flag = local_flag | byte_var;\n          current_file = *file_paths;\n          goto joined_r0x001055aa;\n        }\n        bfd_fatal(current_file,0);\n        uint_var = (uint)bool_var;\nLAB_001028f5:\n        return_value = DAT_0010d638;\n        if (uint_var == 3) {\n          next_ptr = *(long *)(arg1 + 0xf0);\n          if (*(long *)(arg1 + 0xf0) != 0) goto LAB_00105670;\n        }\n        else {\n          for (; (undefined8 *)*next_file != (undefined8 *)0x0;\n              next_file = (char **)(*next_file + 0xf0)) {\n            int_var = filename_cmp(*(undefined8 *)*next_file,return_value);\n            if (int_var == 0) {\n              if (uint_var == 2) {\n                next_file = (char **)(*next_file + 0xf0);\n              }\n              break;\n            }\n          }\n        }\nLAB_0010571f:\n        current_file = *file_paths;\n      } while( true );\n    }\n    previous_file = current_file;\n    if (file_list == (char **)0x0) {\n      uint_var = DAT_0010d640;\n      if (DAT_0010d640 == 0) goto LAB_0010571f;\n      goto LAB_001028f5;\n    }\nLAB_001055d8:\n    if (DAT_0010d5f9 == '\\0') {\n      current_file = (char *)lbasename(*file_list);\n      basename = current_file;\n      if (DAT_0010d5fa != '\\0') {\n        size_var = strlen(current_file);\n        ulong_var = (ulong)*(byte *)(*(long *)(arg1 + 8) + 0x1e);\n        if (ulong_var < size_var) {\n          basename = (char *)xmalloc(ulong_var + 1);\n          next_ptr = *(long *)(arg1 + 8);\n          file_path = basename;\n          for (ulong_var = (ulong)*(byte *)(next_ptr + 0x1e); ulong_var != 0; ulong_var = ulong_var - 1) {\n            *file_path = *current_file;\n            current_file = current_file + (ulong)byte_var2 * -2 + 1;\n            file_path = file_path + (ulong)byte_var2 * -2 + 1;\n          }\n          basename[*(byte *)(next_ptr + 0x1e)] = '\\0';\n        }\n        file_path = *file_paths;\n        current_file = basename;\n        if (DAT_0010d5f9 == '\\0') goto LAB_00105611;\n        goto LAB_00102980;\n      }\n      file_path = *file_paths;\n      if (DAT_0010d5f9 != '\\0') goto LAB_00102980;\nLAB_00105611:\n      base_name = (char *)lbasename(file_path);\n      if (DAT_0010d5fa != '\\0') {\n        size_var = strlen(base_name);\n        ulong_var = (ulong)*(byte *)(*(long *)(arg1 + 8) + 0x1e);\n        file_path = base_name;\n        current_file = basename;\n        if (ulong_var < size_var) {\n          file_path = (char *)xmalloc(ulong_var + 1);\n          next_ptr = *(long *)(arg1 + 8);\n          basename = file_path;\n          for (ulong_var = (ulong)*(byte *)(next_ptr + 0x1e); ulong_var != 0; ulong_var = ulong_var - 1) {\n            *basename = *base_name;\n            base_name = base_name + (ulong)byte_var2 * -2 + 1;\n            basename = basename + (ulong)byte_var2 * -2 + 1;\n          }\n          file_path[*(byte *)(next_ptr + 0x1e)] = '\\0';\n        }\n        goto LAB_00102980;\n      }\n      int_var = filename_cmp(base_name,basename);\n      if (int_var == 0) goto LAB_00102993;\nLAB_00105639:\n      previous_file = file_list + 0x1e;\n      file_list = (char **)file_list[0x1e];\n      if (file_list == (char **)0x0) goto LAB_0010564c;\n      goto LAB_001055d8;\n    }\n    file_path = *file_paths;\n    current_file = *file_list;\nLAB_00102980:\n    int_var = filename_cmp(file_path,current_file);\n    if (int_var != 0) goto LAB_00105639;\nLAB_00102993:\n    if (file_list[0x1c] == (char *)0x0) goto LAB_00105639;\n    if (_DAT_0010d644 != 0) {\n      int_var = stat(*file_paths,&stat_struct);\n      if (int_var != 0) {\n        errno_ptr = __errno_location();\n        if (*errno_ptr != 2) {\n          bfd_fatal(*file_paths);\nLAB_00102b7e:\n          current_file = *file_list;\n          return_value = dcgettext(0,\"internal stat error on %s\",5);\n          fatal(return_value,current_file);\n          free(file_paths);\n          return 0;\n        }\n        goto LAB_0010577e;\n      }\n      next_file = (char **)file_list[0x1d];\n      if ((char **)file_list[0x1d] == (char **)0x0) {\n        next_file = file_list;\n      }\n      int_var = (**(code **)(next_file[1] + 0x1e8))(file_list,stack_array);\n      if (int_var != 0) goto LAB_00102b7e;\n      if (stat_struct.st_mtim.tv_sec <= stack_var) goto LAB_0010577e;\n    }\n    return_value = get_pos_bfd(current_file,2,*file_list);\n    if (DAT_0010d620 == 0) {\nLAB_00102ae2:\n      current_file = *file_paths;\n      bool_var = DAT_0010d60c != 0;\n      next_ptr = bfd_openr(current_file,DAT_0010d5f0);\n      if (next_ptr == 0) {\n        bfd_fatal(current_file,0);\n        goto LAB_00102b3e;\n      }\n      byte_var = ar_emul_default_replace(return_value,next_ptr,bool_var);\n    }\n    else {\n      normalized_path = normalize(*file_paths,arg1);\n      int_var = filename_cmp(normalized_path,\"__.LIBDEP\");\n      if (int_var != 0) goto LAB_00102ae2;\nLAB_00102b3e:\n      byte_var = ar_emul_default_replace(return_value,DAT_0010d620,DAT_0010d60c != 0);\n    }\n    if (byte_var != 0) {\n      *previous_file = *(char **)(*previous_file + 0xf0);\n      local_flag = byte_var;\n    }\nLAB_0010577e:\n    file_paths = file_paths + 1;\n  } while( true );\n}\n\n",
            "current_name": "process_input_files_00105570",
            "entrypoint": "0x00105570",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105570": "process_input_files_00105570",
                "__s": "base_name",
                "auStack_158": "stack_array",
                "bVar19": "bool_var",
                "bVar20": "byte_var2",
                "bVar3": "byte_var",
                "iVar4": "int_var",
                "initialize_data_00102943": "initialize_data",
                "lStack_100": "stack_var",
                "lVar11": "current_ptr",
                "lVar12": "next_ptr",
                "local_15a": "local_flag",
                "param_1": "arg1",
                "param_2": "file_paths",
                "param_3": "flag",
                "pcVar10": "current_file",
                "pcVar7": "file_path",
                "pcVar8": "basename",
                "piVar6": "errno_ptr",
                "ppcVar1": "current_file",
                "ppcVar15": "file_list",
                "ppcVar16": "next_file",
                "ppcVar18": "previous_file",
                "sStack_c8": "stat_struct",
                "sVar5": "size_var",
                "uVar13": "return_value",
                "uVar14": "ulong_var",
                "uVar17": "uint_var",
                "uVar2": "undefined_var",
                "uVar9": "normalized_path"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001057a0": {
            "additional_data": {
                "FUN_001057a0": {
                    "create_temp_file": 1,
                    "create_temp_file_with_path": 1,
                    "extract_file_name": 5,
                    "extract_file_name_and_create_temp_file": 2,
                    "extract_filename_and_create_temp_file": 5,
                    "extract_filepath_and_create_temp_file": 1,
                    "extract_filepath_and_create_tmp_file": 1,
                    "reverse_and_allocate_memory": 1,
                    "reverse_and_allocate_path": 1,
                    "reverse_and_create_file_path": 1,
                    "reverse_and_create_temp_file": 1,
                    "reverse_and_save_file": 1,
                    "reverse_and_save_file_path": 1,
                    "reverse_and_store_file": 1,
                    "reverse_and_store_path": 1,
                    "reverse_file_path": 1,
                    "reverse_filename": 2,
                    "reverse_filepath_and_create_temp_file": 1,
                    "reverse_filepath_and_open_file": 1,
                    "reverse_path_and_create_temp_file": 1
                },
                "auVar8": {
                    "result": 11,
                    "result_container": 1,
                    "return_value": 19
                },
                "bVar7": {
                    "byte_value": 1,
                    "count": 2,
                    "counter": 2,
                    "flag": 1,
                    "increment": 3,
                    "increment_value": 1,
                    "is_first_iteration": 1,
                    "is_last_slash": 2,
                    "is_new_path": 1,
                    "is_null": 2,
                    "is_slash": 4,
                    "is_slash_found": 2,
                    "loop_counter": 1,
                    "loop_flag": 1,
                    "loop_increment": 1,
                    "loop_iteration": 1,
                    "null_byte": 1,
                    "offset": 1,
                    "offset_multiplier": 1,
                    "should_increment": 1,
                    "slash_found": 1
                },
                "iVar1": {
                    "result": 6,
                    "status": 1,
                    "temp_file": 1,
                    "temp_file_descriptor": 7
                },
                "lVar3": {
                    "file_name_length": 3,
                    "file_name_offset": 3,
                    "file_name_start_index": 1,
                    "file_path_len": 1,
                    "filename_length": 9,
                    "filepath_length": 2,
                    "len": 1,
                    "new_string_offset": 1,
                    "path_index": 1,
                    "path_length": 7,
                    "prefix_length": 2
                },
                "lVar4": {
                    "current_index": 1,
                    "i": 6,
                    "index": 9,
                    "iteration": 1,
                    "iteration_counter": 1,
                    "iteration_index": 1,
                    "iterator": 3,
                    "loop_counter": 6,
                    "loop_index": 2,
                    "loop_var": 1
                },
                "lVar5": {
                    "dir_length": 1,
                    "file_name_length": 2,
                    "filename_index": 1,
                    "filename_length_minus_one": 1,
                    "last_slash_delta": 1,
                    "last_slash_index": 9,
                    "last_slash_offset": 4,
                    "length": 1,
                    "prefix_length": 1,
                    "slash_distance": 2,
                    "slash_index": 5,
                    "slash_offset": 2,
                    "slash_pos": 1
                },
                "mkstemp": {
                    "create_temporary_file": 1,
                    "generate_temp_file": 1
                },
                "param_1": {
                    "file_path": 13,
                    "filename": 2,
                    "filepath": 5,
                    "input_path": 2,
                    "input_string": 2,
                    "path": 7
                },
                "param_2": {
                    "file_descriptor": 27,
                    "output_file_descriptor": 2,
                    "temp_file_descriptor": 2
                },
                "param_3": {
                    "arg3": 1,
                    "constant_1": 1,
                    "param3": 2,
                    "param_3": 4,
                    "reserved_param_1": 1,
                    "unused": 1,
                    "unused1": 4,
                    "unused_param": 6,
                    "unused_param1": 2,
                    "unused_param3": 3,
                    "unused_param_1": 5,
                    "unused_parameter": 1
                },
                "param_4": {
                    "arg4": 1,
                    "buffer": 1,
                    "constant_2": 1,
                    "marker": 1,
                    "output_param": 1,
                    "param4": 2,
                    "param_4": 3,
                    "reserved_param_2": 1,
                    "unused2": 4,
                    "unused_param": 1,
                    "unused_param2": 3,
                    "unused_param4": 3,
                    "unused_param_2": 7,
                    "unused_parameter": 1,
                    "user_data": 1
                },
                "pcVar2": {
                    "file_name": 1,
                    "file_name_ptr": 2,
                    "filename": 1,
                    "filename_ptr": 1,
                    "last_forward_slash": 1,
                    "last_slash": 19,
                    "last_slash_position": 4,
                    "last_slash_ptr": 1,
                    "slash_location": 1
                },
                "pcVar6": {
                    "allocated_buffer": 1,
                    "allocated_file_name": 1,
                    "allocated_filepath": 1,
                    "allocated_path": 2,
                    "allocation": 1,
                    "destination": 1,
                    "file_name_buffer": 1,
                    "new_file_name_ptr": 1,
                    "new_file_path": 4,
                    "new_file_path_ptr": 1,
                    "new_filename": 3,
                    "new_filepath": 2,
                    "new_path": 6,
                    "new_string": 1,
                    "temp_file_path": 3,
                    "temp_filename": 1,
                    "temp_filepath_ptr": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                }
            },
            "called": [
                "FUN_001023e0",
                "FUN_00102230",
                "FUN_001021c0",
                "FUN_00102ba1"
            ],
            "calling": [
                "FUN_00103c60",
                "FUN_001058b0"
            ],
            "code": "\nundefined  [16] extract_file_name_and_create_temp_file_001057a0(char *file_path,int *file_descriptor,undefined8 unused_param,undefined8 unused_param_2)\n\n{\n  int temp_file_descriptor;\n  char *last_slash;\n  long filename_length;\n  long index;\n  long last_slash_index;\n  char *new_path;\n  byte is_slash;\n  undefined return_value [16];\n  \n  is_slash = 0;\n  last_slash = strrchr(file_path,0x2f);\n  if (last_slash == (char *)0x0) {\n    last_slash = (char *)allocate_memory(9);\n    filename_length = 0;\n  }\n  else {\n    last_slash_index = (long)last_slash - (long)file_path;\n    last_slash = (char *)allocate_memory(last_slash_index + 0xb);\n    filename_length = last_slash_index + 1;\n    new_path = last_slash;\n    for (index = last_slash_index; index != 0; index = index + -1) {\n      *new_path = *file_path;\n      file_path = file_path + (ulong)is_slash * -2 + 1;\n      new_path = new_path + (ulong)is_slash * -2 + 1;\n    }\n    last_slash[last_slash_index] = '/';\n  }\n  *(undefined8 *)(last_slash + filename_length) = 0x5858585858587473;\n  *(undefined *)((long)(last_slash + filename_length) + 8) = 0;\n  temp_file_descriptor = generate_temp_file(last_slash);\n  if (temp_file_descriptor == -1) {\n    new_path = (char *)0x0;\n    free(last_slash);\n  }\n  else {\n    *file_descriptor = temp_file_descriptor;\n    new_path = last_slash;\n  }\n  return_value._8_8_ = unused_param_2;\n  return_value._0_8_ = new_path;\n  return return_value;\n}\n\n",
            "current_name": "extract_file_name_and_create_temp_file_001057a0",
            "entrypoint": "0x001057a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001057a0": "extract_file_name_and_create_temp_file_001057a0",
                "auVar8": "return_value",
                "bVar7": "is_slash",
                "iVar1": "temp_file_descriptor",
                "lVar3": "filename_length",
                "lVar4": "index",
                "lVar5": "last_slash_index",
                "mkstemp": "generate_temp_file",
                "param_1": "file_path",
                "param_2": "file_descriptor",
                "param_3": "unused_param",
                "param_4": "unused_param_2",
                "pcVar2": "last_slash",
                "pcVar6": "new_path",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105830": {
            "additional_data": {
                "FUN_00105830": {
                    "decompile_and_extract_function": 1,
                    "extract_data": 1,
                    "extract_file_name": 4,
                    "extract_string": 3,
                    "extract_string_from_binary": 1,
                    "extract_string_from_buffer": 1,
                    "extract_string_from_data": 1,
                    "extract_sub_string": 3,
                    "extract_substring": 8,
                    "extracted_string": 1,
                    "parse_parameter": 1,
                    "reverse_and_copy_string": 1,
                    "reverse_and_modify_string": 1,
                    "reverse_basename": 1,
                    "reverse_file_name": 1,
                    "reverse_string": 1
                },
                "__s": {
                    "base": 1,
                    "base_filename": 2,
                    "base_name": 18,
                    "basename": 2,
                    "basename_result": 2,
                    "file_name": 1,
                    "program_name": 2,
                    "source_string": 1
                },
                "auVar6": {
                    "extracted_substring": 1,
                    "output": 1,
                    "result": 18,
                    "result_array": 1,
                    "return_val": 1,
                    "return_value": 9
                },
                "bVar5": {
                    "byte_flag": 2,
                    "byte_offset": 1,
                    "byte_value": 3,
                    "byte_var": 3,
                    "flag": 2,
                    "index": 1,
                    "is_negative": 6,
                    "is_reversed": 1,
                    "iterator": 1,
                    "loop_counter": 4,
                    "loop_flag": 1,
                    "loop_iterator": 1,
                    "should_decrement": 1
                },
                "lVar1": {
                    "base_address": 1,
                    "binary_ptr": 1,
                    "buffer_data_value": 1,
                    "data_ptr_value": 1,
                    "file_data_ptr": 1,
                    "pointer": 1,
                    "struct_address": 1,
                    "struct_offset": 1,
                    "struct_pointer": 1,
                    "struct_ptr": 1,
                    "struct_ptr_value": 1,
                    "struct_value": 2
                },
                "param_1": {
                    "base_name": 1,
                    "file_name": 3,
                    "file_path": 4,
                    "filename": 5,
                    "initial_string": 1,
                    "input_string": 14,
                    "original_string": 1,
                    "output_string": 1,
                    "src_string": 1
                },
                "param_2": {
                    "binary_info": 1,
                    "buffer_address": 1,
                    "buffer_data": 1,
                    "data": 3,
                    "data_offset": 1,
                    "data_ptr": 1,
                    "file_data": 1,
                    "file_info": 2,
                    "metadata": 1,
                    "source_info_ptr": 1,
                    "string_info": 1,
                    "struct_address": 6,
                    "struct_pointer": 3,
                    "struct_ptr": 6,
                    "structure_address": 1,
                    "wrapper_struct": 1
                },
                "param_3": {
                    "param3": 4,
                    "param_3": 4,
                    "unknown_param": 1,
                    "unused": 1,
                    "unused1": 1,
                    "unused_param": 8,
                    "unused_param1": 5,
                    "unused_param3": 1,
                    "unused_parameter": 1,
                    "unused_parameter1": 1,
                    "var3": 1,
                    "var_1": 1,
                    "var_3": 1
                },
                "param_4": {
                    "output_param": 1,
                    "output_string": 2,
                    "param4": 4,
                    "param_4": 4,
                    "result": 1,
                    "return_address": 2,
                    "return_val": 1,
                    "return_value": 1,
                    "unused2": 1,
                    "unused_param": 2,
                    "unused_param2": 5,
                    "unused_param4": 1,
                    "unused_param_2": 1,
                    "unused_parameter": 1,
                    "unused_parameter2": 1,
                    "var4": 1,
                    "var_2": 1,
                    "var_4": 1
                },
                "pcVar4": {
                    "current_char": 1,
                    "dest_pointer": 1,
                    "dest_ptr": 1,
                    "dest_string": 2,
                    "destination": 1,
                    "modified_filename": 1,
                    "new_file_name": 1,
                    "new_file_name_ptr": 1,
                    "new_file_path": 1,
                    "new_filename": 2,
                    "new_string": 1,
                    "output_pointer": 1,
                    "output_string": 11,
                    "output_string_iterator": 1,
                    "output_string_ptr": 1,
                    "result_string": 1,
                    "substring": 1,
                    "substring_ptr": 1,
                    "target_ptr": 1
                },
                "sVar2": {
                    "base_name_length": 5,
                    "file_name_length": 2,
                    "filename_length": 3,
                    "input_length": 4,
                    "input_string_length": 6,
                    "length": 1,
                    "original_string_length": 1,
                    "program_name_length": 1,
                    "src_string_length": 1,
                    "string_length": 3
                },
                "uVar3": {
                    "buffer_length": 1,
                    "byte_count": 2,
                    "byte_limit": 1,
                    "byte_value": 4,
                    "desired_length": 1,
                    "max_file_name_length": 1,
                    "max_length": 4,
                    "max_string_length": 3,
                    "max_substring_length": 1,
                    "maximum_length": 2,
                    "required_length": 1,
                    "source_length": 1,
                    "sub_string_length": 2,
                    "substring_length": 5,
                    "target_length": 1,
                    "threshold": 1
                }
            },
            "called": [
                "FUN_001022c0",
                "FUN_00102bb0"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00105480"
            ],
            "code": "\nundefined  [16] extract_substring_00105830(char *input_string,long struct_address,undefined8 unused_param,undefined8 unused_param2)\n\n{\n  long struct_value;\n  size_t input_string_length;\n  char *base_name;\n  ulong substring_length;\n  char *output_string;\n  byte is_negative;\n  undefined result [16];\n  \n  is_negative = 0;\n  if (DAT_0010d5f9 == '\\0') {\n    base_name = (char *)lbasename();\n    input_string = base_name;\n    if ((DAT_0010d5fa != '\\0') && (struct_address != 0)) {\n      input_string_length = strlen(base_name);\n      substring_length = (ulong)*(byte *)(*(long *)(struct_address + 8) + 0x1e);\n      if (substring_length < input_string_length) {\n        input_string = (char *)xmalloc(substring_length + 1);\n        struct_value = *(long *)(struct_address + 8);\n        output_string = input_string;\n        for (substring_length = (ulong)*(byte *)(struct_value + 0x1e); substring_length != 0; substring_length = substring_length - 1) {\n          *output_string = *base_name;\n          base_name = base_name + (ulong)is_negative * -2 + 1;\n          output_string = output_string + (ulong)is_negative * -2 + 1;\n        }\n        input_string[*(byte *)(struct_value + 0x1e)] = '\\0';\n      }\n    }\n  }\n  result._8_8_ = unused_param2;\n  result._0_8_ = input_string;\n  return result;\n}\n\n",
            "current_name": "extract_substring_00105830",
            "entrypoint": "0x00105830",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105830": "extract_substring_00105830",
                "__s": "base_name",
                "auVar6": "result",
                "bVar5": "is_negative",
                "lVar1": "struct_value",
                "param_1": "input_string",
                "param_2": "struct_address",
                "param_3": "unused_param",
                "param_4": "unused_param2",
                "pcVar4": "output_string",
                "sVar2": "input_string_length",
                "uVar3": "substring_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105870": {
            "additional_data": {
                "DAT_0010d638": {
                    "default_filename": 1
                },
                "DAT_0010d640": {
                    "default_comparison_type": 1
                },
                "FUN_00102cd9": {
                    "get_default_filename": 1,
                    "get_file_array": 1
                },
                "FUN_00105870": {
                    "find_file": 5,
                    "find_file_entry": 1,
                    "find_file_in_binary": 1,
                    "find_file_in_directory": 1,
                    "find_file_location": 1,
                    "find_filename": 2,
                    "find_first_matching_address": 1,
                    "find_last_entry": 1,
                    "find_last_file_offset": 1,
                    "find_last_instance_or_match": 1,
                    "find_last_match_or_end": 1,
                    "find_last_matching_entry": 1,
                    "find_last_matching_filename": 1,
                    "find_last_matching_ptr": 1,
                    "find_last_occurrence": 1,
                    "find_matching_address": 3,
                    "find_matching_entry": 3,
                    "find_matching_file": 2,
                    "find_matching_pointer": 1,
                    "find_next_matching_path": 1,
                    "search_and_return": 1
                },
                "filename_cmp": {
                    "compare_file_names": 1,
                    "compare_filenames": 1
                },
                "iVar1": {
                    "cmp_result": 11,
                    "comparison_result": 16,
                    "filename_cmp_result": 1,
                    "filename_comparison_result": 1,
                    "result": 1
                },
                "iVar3": {
                    "check_mode": 1,
                    "comparison_mode": 1,
                    "condition": 1,
                    "default_array_length": 1,
                    "file_type": 2,
                    "function_type": 1,
                    "loop_condition": 4,
                    "mode": 9,
                    "option": 2,
                    "search_mode": 5,
                    "search_type": 4
                },
                "new_iVar1": {
                    "new_comparison_result": 1
                },
                "new_iVar3": {
                    "new_option": 1
                },
                "new_param_1": {
                    "new_file_list": 1
                },
                "new_param_2": {
                    "new_file_count": 1
                },
                "new_param_3": {
                    "new_target_filename": 1
                },
                "new_uVar2": {
                    "new_default_filename": 1
                },
                "param_1": {
                    "addresses": 4,
                    "array": 3,
                    "array_ptr": 1,
                    "data": 1,
                    "directory": 1,
                    "entries": 4,
                    "entry_list": 1,
                    "file_array": 3,
                    "file_entries": 1,
                    "file_list": 9,
                    "file_offsets": 1,
                    "path_list": 1,
                    "pointer_array": 1
                },
                "param_2": {
                    "array_length": 3,
                    "comparison_mode": 1,
                    "comparison_option": 1,
                    "comparison_type": 1,
                    "condition": 1,
                    "count": 4,
                    "entry_count": 3,
                    "file_count": 7,
                    "file_entry_count": 1,
                    "file_type": 1,
                    "length": 3,
                    "num_elements": 1,
                    "num_entries": 1,
                    "num_files": 1,
                    "path_count": 1,
                    "size": 1
                },
                "param_3": {
                    "file_name": 3,
                    "filename": 8,
                    "search_file": 1,
                    "search_file_name": 1,
                    "search_key": 2,
                    "search_string": 1,
                    "search_term": 1,
                    "search_value": 2,
                    "target": 2,
                    "target_file": 1,
                    "target_file_name": 1,
                    "target_filename": 7,
                    "target_path": 1
                },
                "uVar2": {
                    "default_file_name": 2,
                    "default_filename": 9,
                    "default_key": 2,
                    "default_path": 1,
                    "default_search": 1,
                    "default_search_string": 1,
                    "default_search_value": 1,
                    "default_value": 1
                }
            },
            "called": [
                "FUN_00102cd9"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105db0"
            ],
            "code": "\nlong * find_matching_file_00105870(long *file_list,int file_count,undefined8 filename)\n\n{\n  int comparison_result;\n  undefined8 default_filename;\n  int mode;\n  \n  default_filename = DAT_0010d638;\n  mode = DAT_0010d640;\n  if (DAT_0010d640 == 0) {\n    default_filename = filename;\n    mode = file_count;\n  }\n  if (mode == 3) {\n    for (; *file_list != 0; file_list = (long *)(*file_list + 0xf0)) {\n    }\n  }\n  else {\n    for (; (undefined8 *)*file_list != (undefined8 *)0x0; file_list = (long *)(*file_list + 0xf0)) {\n      comparison_result = compare_file_names(*(undefined8 *)*file_list,default_filename);\n      if (comparison_result == 0) {\n        if (mode != 2) {\n          return file_list;\n        }\n        return (long *)(*file_list + 0xf0);\n      }\n    }\n  }\n  return file_list;\n}\n\n",
            "current_name": "find_matching_file_00105870",
            "entrypoint": "0x00105870",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105870": "find_matching_file_00105870",
                "filename_cmp": "compare_file_names",
                "iVar1": "comparison_result",
                "iVar3": "mode",
                "param_1": "file_list",
                "param_2": "file_count",
                "param_3": "filename",
                "uVar2": "default_filename"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001058b0": {
            "additional_data": {
                "DAT_0010d5e0": {
                    "current_archive": 1
                },
                "DAT_0010d5f8": {
                    "is_flag_set4": 1
                },
                "DAT_0010d5f9": {
                    "is_flag_set3": 1
                },
                "DAT_0010d5fa": {
                    "is_flag_set1": 1
                },
                "DAT_0010d618": {
                    "current_temp_file_stream": 1
                },
                "DAT_0010d648": {
                    "some_flag": 1
                },
                "FUN_001058b0": {
                    "create_archive_file": 1,
                    "extract_and_improve": 1,
                    "extract_and_improve_archive": 1,
                    "extract_and_improve_archive_data": 1,
                    "extract_and_write_archive_entry_info": 1,
                    "extract_archive": 1,
                    "extract_archive_data": 1,
                    "extract_archive_info": 1,
                    "extract_archive_metadata": 1,
                    "extract_archived_file_details": 1,
                    "generate_archive_file": 1,
                    "process_archive": 4,
                    "process_archive_data": 1,
                    "write_archive": 1,
                    "write_archive_data": 1,
                    "write_archive_entry": 6,
                    "write_archive_file": 3,
                    "write_archive_to_file": 2,
                    "write_archive_to_temp_file": 1
                },
                "_DAT_0010d2d0": {
                    "is_flag_set2": 1
                },
                "__format": {
                    "corrupt_time_error_msg": 1,
                    "corrupt_time_format": 1,
                    "error_message": 4,
                    "error_msg": 3,
                    "error_msg_format": 1,
                    "format": 1,
                    "format_str": 1,
                    "format_string": 6,
                    "time_corrupt_format": 1,
                    "time_corrupt_message": 1,
                    "time_data_corrupt_message": 1,
                    "time_data_corrupt_msg": 1,
                    "time_data_format": 1,
                    "time_error_message": 1,
                    "time_error_string": 1,
                    "time_format": 1
                },
                "__ptr": {
                    "duplicate_str": 1,
                    "duplicated_path": 1,
                    "file_path": 2,
                    "file_path_copy": 1,
                    "ptr": 1,
                    "temp": 1,
                    "temp_file": 1,
                    "temp_file_name": 3,
                    "temp_file_path": 11,
                    "temp_filename": 2,
                    "temp_name": 1,
                    "temp_str": 1,
                    "temp_string": 2,
                    "tempname": 1,
                    "temporary_file_path": 2
                },
                "__stream": {
                    "file": 1,
                    "file_stream": 1,
                    "output_stream": 2,
                    "stream": 1,
                    "temp_file": 21,
                    "temp_file_pointer": 1,
                    "temp_file_stream": 3,
                    "temp_stream": 1
                },
                "cStack_31": {
                    "archive_type": 1,
                    "c3": 1,
                    "char_var3": 1,
                    "file_permission2": 1,
                    "file_permissions2": 1,
                    "file_permissions_flag2": 1,
                    "file_permissions_w": 1,
                    "file_type": 1,
                    "format_char2": 1,
                    "is_directory": 1,
                    "is_executable": 1,
                    "is_link": 1,
                    "is_setgid": 6,
                    "is_writable": 1,
                    "permission2": 1,
                    "permission_bit2": 1,
                    "permission_flag_2": 1,
                    "permission_symbol2": 1,
                    "set_user_write_permission": 1,
                    "setgid_bit": 1,
                    "stack_char3": 1,
                    "w_flag": 1,
                    "write_permission": 1,
                    "writeable_flag_char": 1
                },
                "cStack_32": {
                    "c2": 1,
                    "char_var2": 1,
                    "executable_flag_char": 1,
                    "executable_permission": 1,
                    "file_permission1": 1,
                    "file_permissions": 1,
                    "file_permissions1": 1,
                    "file_permissions_flag1": 1,
                    "file_permissions_r": 1,
                    "format_char1": 1,
                    "is_device": 1,
                    "is_directory": 1,
                    "is_readable": 1,
                    "is_setuid": 6,
                    "is_symbolic": 1,
                    "permission1": 1,
                    "permission_bit1": 1,
                    "permission_flag_1": 1,
                    "permission_symbol1": 1,
                    "r_flag": 1,
                    "set_user_read_permission": 1,
                    "setuid_bit": 1,
                    "stack_char2": 1,
                    "symbol_type": 1
                },
                "cVar1": {
                    "char_check": 1,
                    "char_var": 2,
                    "char_var1": 1,
                    "check_result": 1,
                    "result": 17,
                    "result_char": 1,
                    "status": 2,
                    "success": 1
                },
                "iVar3": {
                    "dup_descriptor": 2,
                    "dup_fd": 5,
                    "duplicate": 1,
                    "fd": 1,
                    "file_descriptor": 4,
                    "int_var": 1,
                    "int_var3": 1,
                    "status": 1,
                    "temp_fd": 6,
                    "temp_fd_copy": 1,
                    "temp_file_descriptor": 1,
                    "tempfd": 1
                },
                "in_stack_00000028": {
                    "archive_time": 1,
                    "field_28": 1,
                    "file_info_2": 1,
                    "file_inode": 1,
                    "file_owner": 4,
                    "file_owner_id": 2,
                    "file_permissions": 3,
                    "file_size": 3,
                    "file_uid": 5,
                    "file_user_id": 1,
                    "inode_number": 1,
                    "owner_id": 1,
                    "st_dev": 1,
                    "stack_size": 1,
                    "stack_value2": 1,
                    "stack_var2": 2,
                    "uid": 1
                },
                "in_stack_00000038": {
                    "field_38": 1,
                    "file_gid": 2,
                    "file_group_id": 3,
                    "file_info_3": 1,
                    "file_mode": 1,
                    "file_size": 9,
                    "file_timestamp": 1,
                    "group_id": 1,
                    "last_modified_time": 1,
                    "modification_time": 1,
                    "mtime": 1,
                    "st_size": 1,
                    "stack_value3": 1,
                    "stack_var3": 2,
                    "temp_value": 1,
                    "timestamp": 3
                },
                "local_3c": {
                    "dup_fd": 2,
                    "dup_file_descriptors": 1,
                    "errcode": 1,
                    "error_code": 4,
                    "fd_array": 1,
                    "file_error": 1,
                    "int_arr": 1,
                    "local_array": 1,
                    "temp_array": 1,
                    "temp_fd": 2,
                    "temp_fd_array": 1,
                    "temp_file_descriptor": 2,
                    "temp_file_fd": 1,
                    "temp_file_name": 1,
                    "temp_name": 4,
                    "temp_name_info": 1,
                    "temp_name_params": 1,
                    "temp_name_results": 1,
                    "temp_val_arr": 1
                },
                "param_1": {
                    "archive": 1,
                    "archive_data": 2,
                    "archive_entry": 2,
                    "archive_files": 1,
                    "archive_info": 1,
                    "archive_path": 2,
                    "archive_paths": 1,
                    "archived_files": 1,
                    "args": 1,
                    "entry_info_array": 1,
                    "file_names": 1,
                    "file_path": 1,
                    "file_paths": 8,
                    "input_data": 1,
                    "input_file": 1,
                    "input_files": 1,
                    "input_parameters": 1,
                    "parameters": 1,
                    "params": 1
                },
                "param_2": {
                    "error_code": 1
                },
                "ppcVar5": {
                    "archive": 3,
                    "archive_file": 3,
                    "archive_format_ptr": 1,
                    "bfd_data": 1,
                    "bfd_file": 4,
                    "bfd_handle": 2,
                    "bfd_stream": 1,
                    "binary_data": 1,
                    "file": 3,
                    "file_descriptor": 1,
                    "file_format": 1,
                    "file_pointer": 1,
                    "file_stream": 1,
                    "opened_file": 2,
                    "output_file": 2,
                    "pointer_to_char_array": 1,
                    "stream_data": 1,
                    "temp_bfd": 1,
                    "temp_file_handle": 1
                },
                "uStack0000000000000020": {
                    "file_info_1": 1,
                    "file_mode": 12,
                    "file_mode_and_permissions": 1,
                    "file_mode_permissions": 1,
                    "file_permissions": 7,
                    "file_size": 1,
                    "file_stat": 1,
                    "permissions": 1,
                    "st_mode": 1,
                    "stack_value": 3,
                    "stack_var": 1,
                    "stack_var1": 1
                },
                "uStack_33": {
                    "byte_var": 1,
                    "c1": 1,
                    "file_class": 1,
                    "file_permission": 1,
                    "file_type": 15,
                    "file_type_char": 3,
                    "file_type_indicator": 2,
                    "stack_char1": 1,
                    "type_flag": 1
                },
                "uVar2": {
                    "access_flags": 1,
                    "flag": 4,
                    "flags": 20,
                    "format_flags": 1,
                    "masked_flags": 1,
                    "uint_var": 1,
                    "uint_var2": 1
                },
                "uVar4": {
                    "archive_head": 1,
                    "archive_modified_time": 1,
                    "archive_options": 1,
                    "archive_size": 3,
                    "archive_stat": 1,
                    "error_message": 2,
                    "format": 1,
                    "param": 1,
                    "str_size": 1,
                    "temp_data": 1,
                    "temp_file": 1,
                    "temp_file_descriptor": 1,
                    "temp_file_path": 2,
                    "temp_name": 3,
                    "uint_var2": 1,
                    "uint_var4": 1
                }
            },
            "called": [
                "FUN_00102270",
                "FUN_00102340",
                "FUN_001057a0",
                "FUN_00107c10",
                "FUN_00102260",
                "FUN_00102570",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_001028ed",
                "FUN_00107650"
            ],
            "code": "\n\n\nvoid extract_and_write_archive_entry_info_001058b0(undefined8 *file_paths)\n\n{\n  char result;\n  uint flags;\n  int temp_fd;\n  undefined8 temp_name;\n  char *format_string;\n  void *temp_file_path;\n  FILE *temp_file;\n  char **bfd_file;\n  uint file_mode;\n  uint file_uid;\n  undefined8 file_size;\n  int temp_name [2];\n  undefined file_type;\n  char is_setuid;\n  char is_setgid;\n  \n  temp_name = file_paths[0x1e];\n  temp_name[0] = -1;\n  temp_file_path = (void *)xstrdup(*file_paths);\n  temp_file = (FILE *)make_tempname(temp_file_path,temp_name);\n  temp_fd = temp_name[0];\n  if (temp_file != (FILE *)0x0) {\n    DAT_0010d618 = temp_file;\n    bfd_file = (char **)bfd_fdopenw(temp_file,*(undefined8 *)file_paths[1],temp_name[0]);\n    if (bfd_file != (char **)0x0) {\n      DAT_0010d5e0 = bfd_file;\n      bfd_set_format(bfd_file,2);\n      flags = (~DAT_0010d648 >> 0x1f) << 3 | *(byte *)((long)bfd_file + 0x49) & 0xfffffff7;\n      *(char *)((long)bfd_file + 0x49) = (char)flags;\n      if (DAT_0010d5fa != '\\0') {\n        *(uint *)((long)bfd_file + 0x44) = *(uint *)((long)bfd_file + 0x44) | 0x400;\n      }\n      if (_DAT_0010d2d0 != 0) {\n        *(uint *)((long)bfd_file + 0x44) = *(uint *)((long)bfd_file + 0x44) | 0x2000;\n      }\n      if (DAT_0010d5f9 != '\\0') goto LAB_00102d37;\n      while( true ) {\n        if ((DAT_0010d5f8 != '\\0') || ((*(byte *)((long)file_paths + 0x49) & 0x10) != 0)) {\n          *(byte *)((long)bfd_file + 0x49) = (byte)flags | 0x10;\n        }\n        result = bfd_set_archive_head(bfd_file,temp_name);\n        if (result != '\\0') break;\n        flags = bfd_fatal(temp_file_path);\nLAB_00102d37:\n        *(uint *)((long)bfd_file + 0x44) = *(uint *)((long)bfd_file + 0x44) | 0x100000;\n      }\n      temp_fd = dup(temp_fd);\n      result = bfd_close(bfd_file);\n      if (result == '\\0') {\n        bfd_fatal(temp_file_path);\n        format_string = (char *)dcgettext(0,\"<time data corrupt>\",5);\n        sprintf(&stack0xffffffffffffffd8,format_string);\n        flags = file_mode & 0xf000;\n        if (flags == 0x4000) {\n          file_type = 100;\n        }\n        else if (flags == 0xa000) {\n          file_type = 0x6c;\n        }\n        else if (flags == 0x6000) {\n          file_type = 0x62;\n        }\n        else if (flags == 0x2000) {\n          file_type = 99;\n        }\n        else if (flags == 0xc000) {\n          file_type = 0x73;\n        }\n        else {\n          file_type = 0x70;\n          if (flags != 0x1000) {\n            file_type = 0x2d;\n          }\n        }\n        is_setuid = (-((_file_mode & 0x100) == 0) & 0xbbU) + 0x72;\n        is_setgid = (-((_file_mode & 0x80) == 0) & 0xb6U) + 0x77;\n        fprintf(temp_file,\"%s %ld/%ld %6lu %s \",&is_setuid,_file_mode >> 0x20,\n                (ulong)file_uid,file_size,&stack0xffffffffffffffd8,\n                _file_mode & 0xffffffff);\n        fputs(*bfd_file,temp_file);\n        if ((char)file_paths != '\\0') {\n          if ((*(byte *)((long)bfd_file + 0x49) & 0x10) == 0) {\n            if (bfd_file[0xb] != (char *)0x0) {\n              fprintf(temp_file,\" 0x%lx\");\n            }\n          }\n          else if (bfd_file[0xc] != (char *)0x0) {\n            fprintf(temp_file,\" 0x%lx\");\n          }\n        }\n        fputc(10,temp_file);\n        return;\n      }\n      DAT_0010d5e0 = (char **)0x0;\n      DAT_0010d618 = (FILE *)0x0;\n      bfd_close(file_paths);\n      temp_fd = smart_rename_constprop_0(temp_file,temp_file_path,temp_fd);\n      if (temp_fd == 0) {\n        free(temp_file_path);\n        free(temp_file);\n        return;\n      }\n      goto LAB_00102d7a;\n    }\n    close(temp_fd);\n    bfd_fatal(temp_file_path);\n  }\n  temp_name = dcgettext(0,\"could not create temporary file whilst writing archive\",5);\n  bfd_fatal(temp_name);\nLAB_00102d7a:\n                    \n  xexit(1);\n}\n\n",
            "current_name": "extract_and_write_archive_entry_info_001058b0",
            "entrypoint": "0x001058b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001058b0": "extract_and_write_archive_entry_info_001058b0",
                "__format": "format_string",
                "__ptr": "temp_file_path",
                "__stream": "temp_file",
                "cStack_31": "is_setgid",
                "cStack_32": "is_setuid",
                "cVar1": "result",
                "iVar3": "temp_fd",
                "in_stack_00000028": "file_uid",
                "in_stack_00000038": "file_size",
                "local_3c": "temp_name",
                "param_1": "file_paths",
                "ppcVar5": "bfd_file",
                "uStack0000000000000020": "file_mode",
                "uStack_33": "file_type",
                "uVar2": "flags",
                "uVar4": "temp_name"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105a20": {
            "additional_data": {
                "DAT_0010d5e8": {
                    "base_directory": 1
                },
                "DAT_0010d60c": {
                    "print_message": 1
                },
                "DAT_0010d618": {
                    "full_path": 1
                },
                "FUN_00105a20": {
                    "create_archive_file": 1,
                    "create_output_file": 2,
                    "extract_and_create_file": 1,
                    "extract_and_write_archive_member": 1,
                    "extract_and_write_file": 3,
                    "extract_archive_member": 5,
                    "extract_archive_member_path": 2,
                    "extract_file": 1,
                    "extract_file_contents": 1,
                    "extract_file_from_archive": 1,
                    "extract_input_file": 1,
                    "extract_output_path": 1,
                    "open_file_and_print": 1,
                    "open_output_file": 1,
                    "process_file": 1,
                    "process_output_file": 2,
                    "process_output_path": 2,
                    "process_path": 2
                },
                "LAB_00102e9a": {
                    "handle_illegal_pathname": 1
                },
                "pFVar5": {
                    "file": 7,
                    "file_pointer": 11,
                    "file_ptr": 7,
                    "file_stream": 2,
                    "output_file": 4
                },
                "param_1": {
                    "file_path": 1,
                    "filepath": 1,
                    "input_path": 8,
                    "output_file_path": 1,
                    "output_path": 8,
                    "path": 9,
                    "pathname": 3
                },
                "pcVar1": {
                    "archive_path": 1,
                    "base": 1,
                    "base_dir": 8,
                    "base_directory": 2,
                    "base_path": 15,
                    "basepath": 1,
                    "original_path": 1,
                    "parent_directory": 1,
                    "previous_path": 1
                },
                "pcVar2": {
                    "current_char": 3,
                    "current_dir": 3,
                    "current_path": 19,
                    "current_segment": 2,
                    "next_dir": 2,
                    "path_segment": 1,
                    "ptr": 1
                },
                "sVar6": {
                    "archive_path_length": 1,
                    "base_dir_length": 7,
                    "base_directory_length": 1,
                    "base_len": 1,
                    "base_name_length": 1,
                    "base_path_len": 1,
                    "base_path_length": 11,
                    "basepath_length": 1,
                    "length": 1,
                    "original_path_length": 1,
                    "path_length": 5
                },
                "uVar3": {
                    "base_name": 14,
                    "base_path_ptr": 1,
                    "basename": 3,
                    "basename_result": 8,
                    "extracted_path": 2,
                    "new_output_path": 1,
                    "output_path": 2
                },
                "uVar4": {
                    "error_message": 16,
                    "error_msg": 8,
                    "error_msg_ptr": 1,
                    "error_string": 6
                }
            },
            "called": [],
            "calling": [
                "FUN_00102c25"
            ],
            "code": "\nvoid extract_archive_member_path_00105a20(char *path)\n\n{\n  char *base_path;\n  char *current_path;\n  undefined8 base_name;\n  undefined8 error_message;\n  FILE *file_pointer;\n  size_t base_path_length;\n  \n  base_path = DAT_0010d5e8;\n  DAT_0010d618 = path;\n  if (*path == '/') {\nhandle_illegal_pathname:\n    base_name = lbasename();\n    base_path = DAT_0010d618;\n    error_message = dcgettext(0,\"illegal output pathname for archive member: %s, using \\'%s\\' instead\",5);\n    non_fatal(error_message,base_path,base_name);\n    DAT_0010d618 = (char *)base_name;\n    write_to_file_and_print_00105a68();\n    return;\n  }\n  do {\n    if (*path == '\\0') {\n      if ((DAT_0010d5e8 != (char *)0x0) && (base_path_length = strlen(DAT_0010d5e8), base_path_length != 0)) {\n        if (base_path[base_path_length - 1] == '/') {\n          DAT_0010d618 = (char *)concat(base_path,DAT_0010d618,0);\n        }\n        else {\n          DAT_0010d618 = (char *)concat(base_path,&DAT_00108260,DAT_0010d618,0);\n        }\n      }\n      if (DAT_0010d60c != 0) {\n        printf(\"x - %s\\n\",DAT_0010d618);\n      }\n      file_pointer = fopen(DAT_0010d618,\"w\");\n      if (file_pointer == (FILE *)0x0) {\n        perror(DAT_0010d618);\n                    \n        xexit(1);\n      }\n      return;\n    }\n    current_path = path;\n    if ((*path == '.') && (current_path = path + 1, path[1] == '.')) {\n      current_path = path + 2;\n      if ((path[2] == '/') || (path[2] == '\\0')) goto handle_illegal_pathname;\n    }\n    for (; (*current_path != '\\0' && (*current_path != '/')); current_path = current_path + 1) {\n    }\n    for (; path = current_path, *current_path == '/'; current_path = current_path + 1) {\n    }\n  } while( true );\n}\n\n",
            "current_name": "extract_archive_member_path_00105a20",
            "entrypoint": "0x00105a20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105a20": "extract_archive_member_path_00105a20",
                "LAB_00102e9a": "handle_illegal_pathname",
                "pFVar5": "file_pointer",
                "param_1": "path",
                "pcVar1": "base_path",
                "pcVar2": "current_path",
                "sVar6": "base_path_length",
                "uVar3": "base_name",
                "uVar4": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105a68": {
            "additional_data": {
                "DAT_00108260": {
                    "default_directory": 1
                },
                "DAT_0010d5e8": {
                    "directory": 3,
                    "directory_path_ptr": 1,
                    "original_directory_path": 1
                },
                "DAT_0010d60c": {
                    "is_verbose": 1,
                    "print_flag": 1,
                    "should_print": 3
                },
                "DAT_0010d618": {
                    "file_path": 4,
                    "final_path": 1
                },
                "FUN_00105a68": {
                    "create_and_open_file": 1,
                    "create_output_file": 3,
                    "extract_file_path_and_print": 1,
                    "find_and_open_file": 1,
                    "generate_output_file": 4,
                    "process_data": 1,
                    "process_file": 3,
                    "process_file_path": 2,
                    "reformat_and_save_file": 1,
                    "write_file": 2,
                    "write_to_file": 11,
                    "write_to_file_and_print": 1
                },
                "concat": {
                    "concatenate_strings": 2
                },
                "fopen": {
                    "open_file": 1
                },
                "pFVar2": {
                    "file": 1,
                    "file_pointer": 22,
                    "file_ptr": 3,
                    "output_file": 5
                },
                "pcVar1": {
                    "base_path": 2,
                    "data_directory": 1,
                    "default_path": 1,
                    "directory_path": 15,
                    "file_directory": 1,
                    "file_path": 5,
                    "input_directory": 1,
                    "input_path": 1,
                    "path": 3,
                    "source_directory": 1
                },
                "perror": {
                    "print_error": 1
                },
                "printf": {
                    "print_message": 1
                },
                "sVar3": {
                    "base_path_length": 2,
                    "data_length": 1,
                    "directory_length": 3,
                    "directory_path_length": 5,
                    "file_directory_length": 1,
                    "file_path_length": 3,
                    "input_path_length": 1,
                    "length": 1,
                    "path_length": 8,
                    "source_directory_length": 1,
                    "string_length": 5
                },
                "xexit": {
                    "exit_program": 1
                }
            },
            "called": [
                "FUN_001021a0",
                "FUN_00102e57",
                "FUN_00102200",
                "FUN_00102480",
                "FUN_00102470",
                "FUN_00102180",
                "FUN_001024a0"
            ],
            "calling": [
                "FUN_00102e6f"
            ],
            "code": "\nvoid write_to_file_and_print_00105a68(void)\n\n{\n  char *directory_path;\n  FILE *file_pointer;\n  size_t path_length;\n  \n  directory_path = DAT_0010d5e8;\n  if (DAT_0010d5e8 != (char *)0x0) {\n    path_length = strlen(DAT_0010d5e8);\n    if (path_length != 0) {\n      if (directory_path[path_length - 1] == '/') {\n        DAT_0010d618 = (char *)concatenate_strings(directory_path,DAT_0010d618,0);\n      }\n      else {\n        DAT_0010d618 = (char *)concatenate_strings(directory_path,&DAT_00108260,DAT_0010d618,0);\n      }\n    }\n  }\n  if (DAT_0010d60c != 0) {\n    print_message(\"x - %s\\n\",DAT_0010d618);\n  }\n  file_pointer = open_file(DAT_0010d618,\"w\");\n  if (file_pointer != (FILE *)0x0) {\n    return;\n  }\n  print_error(DAT_0010d618);\n                    \n  exit_program(1);\n}\n\n",
            "current_name": "write_to_file_and_print_00105a68",
            "entrypoint": "0x00105a68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105a68": "write_to_file_and_print_00105a68",
                "concat": "concatenate_strings",
                "fopen": "open_file",
                "pFVar2": "file_pointer",
                "pcVar1": "directory_path",
                "perror": "print_error",
                "printf": "print_message",
                "sVar3": "path_length",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105ae0": {
            "additional_data": {
                "FUN_00105ae0": {
                    "append_const_prop": 2,
                    "append_const_propagation": 1,
                    "append_constant_properties": 1,
                    "append_constant_property": 2,
                    "append_constprop": 18,
                    "append_constprop_0": 3,
                    "append_constprop_to_a_remu": 1,
                    "emulate_and_append_constprop": 2,
                    "execute_arithmetic_emulation": 1
                },
                "FUN_00105af0": {
                    "append_constprop_sub": 1,
                    "calculate_prop_value": 1,
                    "calculate_properties": 1,
                    "calculate_value": 1,
                    "do_ar_emul_append": 1,
                    "do_ar_emul_append_constprop_0": 1,
                    "perform_arithmetic_emulation": 1,
                    "perform_constprop_a_remu": 1,
                    "process_data": 2
                },
                "param_1": {
                    "arg1": 14,
                    "arg_1": 1,
                    "array": 1,
                    "data_1": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input1": 1,
                    "input_1": 4,
                    "input_param": 1,
                    "input_param1": 1,
                    "param1": 1,
                    "param_1": 1,
                    "pointer": 1,
                    "ptr_data": 1
                },
                "param_2": {
                    "arg2": 14,
                    "arg_2": 1,
                    "data_2": 1,
                    "input2": 1,
                    "input_2": 4,
                    "input_param2": 1,
                    "length": 1,
                    "long_data": 1,
                    "param2": 1,
                    "param_2": 1,
                    "size": 1,
                    "value": 3
                },
                "param_3": {
                    "arg3": 9,
                    "arg_3": 1,
                    "char1": 1,
                    "char_1": 1,
                    "flag1": 3,
                    "flag3": 1,
                    "flag_1": 7,
                    "flag_3": 1,
                    "input_param3": 1,
                    "param3": 4,
                    "param_3": 1
                },
                "param_4": {
                    "arg4": 9,
                    "arg_4": 1,
                    "char2": 1,
                    "char_2": 1,
                    "flag2": 3,
                    "flag4": 1,
                    "flag_2": 7,
                    "flag_4": 1,
                    "input_param4": 1,
                    "param4": 4,
                    "param_4": 1
                }
            },
            "called": [
                "FUN_00105af0"
            ],
            "calling": [
                "FUN_001028ed"
            ],
            "code": "\nvoid append_constprop_0_00105ae0(undefined8 arg1,undefined8 arg2,undefined arg3,undefined arg4)\n\n{\n  do_ar_emul_append_constprop_0_00105ae0(arg1,arg2,arg3,arg4);\n  return;\n}\n\n",
            "current_name": "append_constprop_0_00105ae0",
            "entrypoint": "0x00105ae0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105ae0": "append_constprop_0_00105ae0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105af0": {
            "additional_data": {
                "FUN_00105af0": {
                    "extract_and_append_files": 1,
                    "extract_archive_files": 1,
                    "handle_files": 1,
                    "process_archive_files": 3,
                    "process_archived_files": 5,
                    "process_file": 1,
                    "process_files": 10,
                    "process_param": 1,
                    "reverse_and_update_pointer": 2,
                    "reverse_archive": 1,
                    "reverse_func": 1
                },
                "bfd_check_format": {
                    "check_bfd_format": 1,
                    "check_file_format": 1,
                    "is_format_valid": 1
                },
                "bfd_openr_next_archived_file": {
                    "get_next_archived_file": 2
                },
                "cVar1": {
                    "check_result": 4,
                    "format_check": 4,
                    "format_check_result": 6,
                    "format_valid": 1,
                    "is_bdf_format": 1,
                    "is_bfd_check_format": 1,
                    "is_bfd_format": 2,
                    "is_bfd_format_valid": 3,
                    "is_valid": 1,
                    "is_valid_format": 6,
                    "is_valid_format_check": 1
                },
                "do_ar_emul_append_constprop_0_cold": {
                    "append_constant_property": 1,
                    "perform_arithmetic_emulation": 1,
                    "perform_operation": 1
                },
                "lVar3": {
                    "archived_file": 27,
                    "archived_file_ptr": 1,
                    "file_handle": 2,
                    "next_archived_file": 1
                },
                "param_1": {
                    "archive_list": 1,
                    "array_pointer": 1,
                    "buffer": 2,
                    "file_buffer": 1,
                    "file_handle": 1,
                    "file_list": 20,
                    "files": 1,
                    "input_data": 1,
                    "input_ptr": 1,
                    "pointer_list": 2
                },
                "param_2": {
                    "archive": 4,
                    "archive_file": 10,
                    "archive_handle": 2,
                    "archived_file": 1,
                    "current_file": 4,
                    "file_descriptor": 1,
                    "file_handle": 2,
                    "file_ptr": 3,
                    "input_file": 2,
                    "input_pointer": 1,
                    "param_ptr": 1
                },
                "param_3": {
                    "append_flag": 2,
                    "check_format": 5,
                    "condition_1": 2,
                    "do_emulation": 1,
                    "emulation_flag": 1,
                    "flag1": 8,
                    "flag_1": 8,
                    "flag_check_format": 1,
                    "is_append": 1,
                    "is_emulation": 1,
                    "is_recursive": 1
                },
                "param_4": {
                    "append_constprop": 2,
                    "check_flag": 1,
                    "check_format": 2,
                    "check_format_flag": 1,
                    "condition_2": 2,
                    "do_append_constprop": 1,
                    "emulate": 1,
                    "flag2": 8,
                    "flag_2": 8,
                    "flag_append_constprop": 1,
                    "is_archive": 1,
                    "is_cold": 1,
                    "is_recursive": 1,
                    "is_valid_format": 1
                },
                "print_and_swap_values_00102f08": {
                    "print_and_swap_values": 4
                },
                "uVar2": {
                    "file_result": 1,
                    "recursive_result": 2,
                    "result": 23,
                    "return_value": 1,
                    "sub_function_result": 1,
                    "sub_result": 3
                },
                "uVar4": {
                    "accumulator": 1,
                    "final_result": 7,
                    "output": 1,
                    "result": 7,
                    "return_value": 14,
                    "success_count": 1
                }
            },
            "called": [
                "FUN_00102530",
                "FUN_00105af0",
                "FUN_00102520",
                "FUN_00102f08"
            ],
            "calling": [
                "FUN_00105ae0",
                "FUN_001028ed",
                "FUN_00105af0"
            ],
            "code": "\nulong process_archived_files_00105af0(long *file_list,long archive_file,char flag1,char flag2)\n\n{\n  char is_valid_format;\n  uint result;\n  long archived_file;\n  ulong return_value;\n  \n  if (flag2 == '\\0') {\n    if (flag1 != '\\0') {\n      return_value = append_constant_property();\n      return return_value;\n    }\n  }\n  else {\n    is_valid_format = check_file_format(archive_file,2);\n    if (is_valid_format != '\\0') {\n      return_value = 0;\n      for (archived_file = get_next_archived_file(archive_file,0); archived_file != 0;\n          archived_file = get_next_archived_file(archive_file,archived_file)) {\n        result = process_archived_files_00105af0(file_list,archived_file,flag1,1);\n        if ((char)result != '\\0') {\n          return_value = (ulong)result;\n          file_list = (long *)(*file_list + 0xf0);\n        }\n      }\n      return return_value;\n    }\n    if (flag1 != '\\0') {\n      return_value = append_constant_property();\n      return return_value;\n    }\n  }\n  *(long *)(archive_file + 0xf0) = *file_list;\n  *file_list = archive_file;\n  return 1;\n}\n\n",
            "current_name": "process_archived_files_00105af0",
            "entrypoint": "0x00105af0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105af0": "process_archived_files_00105af0",
                "bfd_check_format": "check_file_format",
                "bfd_openr_next_archived_file": "get_next_archived_file",
                "cVar1": "is_valid_format",
                "do_ar_emul_append_constprop_0_cold": "append_constant_property",
                "lVar3": "archived_file",
                "param_1": "file_list",
                "param_2": "archive_file",
                "param_3": "flag1",
                "param_4": "flag2",
                "uVar2": "result",
                "uVar4": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105bb0": {
            "additional_data": {
                "1": {
                    "true": 1
                },
                "DAT_XXXXXXXX": {
                    "other_parameter": 1
                },
                "FUN_00105bb0": {
                    "calculate_return_value": 1,
                    "check_completion_status": 1,
                    "check_flag": 1,
                    "check_if_one": 1,
                    "check_if_valid": 1,
                    "check_return_value": 1,
                    "check_success": 2,
                    "get_default_value": 1,
                    "get_one": 5,
                    "get_return_value": 4,
                    "get_status": 2,
                    "get_true": 1,
                    "initialize": 6,
                    "initialize_value": 1,
                    "is_function_enabled": 1,
                    "is_value_true": 1,
                    "retrieve_default_value": 1
                },
                "PTR_XXXXXXXX": {
                    "new_parameter": 1
                },
                "PTR_fun_00105bb0": {
                    "result": 1
                },
                "result": {
                    "count": 1
                },
                "return": {
                    "default_value": 1,
                    "result": 4,
                    "return_value": 1,
                    "status": 3
                },
                "undefined8": {
                    "bool": 5,
                    "uint64_t": 3,
                    "void": 2
                }
            },
            "called": [],
            "calling": [],
            "code": "\nbool initialize_value_00105bb0(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "initialize_value_00105bb0",
            "entrypoint": "0x00105bb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105bb0": "initialize_value_00105bb0",
                "return": "result",
                "undefined8": "bool"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105bc0": {
            "additional_data": {
                "FUN_00102f1e": {
                    "get_error_message": 1
                },
                "FUN_00105bc0": {
                    "copy_and_remove_file": 2,
                    "copy_and_unlink_file": 25,
                    "copy_file": 1,
                    "copy_file_and_delete": 1,
                    "copy_file_reason": 1,
                    "copy_file_with_reason": 1
                },
                "FUN_00105c00": {
                    "simple_file_copy": 1
                },
                "__errno_location": {
                    "get_error_location": 1
                },
                "auVar6": {
                    "result": 17,
                    "result_struct": 1,
                    "result_tuple": 1,
                    "result_values": 1,
                    "result_variable": 1,
                    "return_value": 9
                },
                "dcgettext": {
                    "get_error_string": 1
                },
                "non_fatal": {
                    "handle_non_fatal_error": 1
                },
                "param_1": {
                    "original_file_path": 1,
                    "source_file": 20,
                    "source_file_path": 6,
                    "source_filename": 1,
                    "source_path": 3
                },
                "param_2": {
                    "dest_file": 2,
                    "destination_file": 18,
                    "destination_file_path": 7,
                    "destination_filename": 1,
                    "destination_path": 3
                },
                "param_3": {
                    "buffer_size": 1,
                    "copy_errors": 1,
                    "copy_flag": 1,
                    "copy_flags": 2,
                    "copy_mode": 3,
                    "copy_options": 1,
                    "copy_result": 1,
                    "error_code": 2,
                    "file_permissions": 9,
                    "flags": 8,
                    "max_copy_attempts": 1,
                    "permission": 1
                },
                "param_4": {
                    "additional_data": 2,
                    "copy_size": 1,
                    "error_code": 1,
                    "error_message": 2,
                    "file_size": 6,
                    "reason": 1,
                    "result": 10,
                    "return_value": 2,
                    "source_file_size": 1,
                    "status": 1,
                    "unlink_result": 2,
                    "unlinked_size": 1,
                    "user_data": 1
                },
                "pcVar3": {
                    "errno_string": 1,
                    "error_message": 21,
                    "error_string": 7,
                    "strerror_result": 1
                },
                "piVar2": {
                    "err_num_ptr": 1,
                    "errno_location": 8,
                    "errno_location_result": 2,
                    "errno_pointer": 1,
                    "errno_ptr": 8,
                    "errnum": 1,
                    "error_code": 3,
                    "error_code_ptr": 1,
                    "error_location": 3,
                    "error_number_ptr": 1,
                    "error_ptr": 1
                },
                "simple_copy_constprop_0": {
                    "copy_file": 2
                },
                "strerror": {
                    "get_error_message": 1
                },
                "uVar1": {
                    "copy_result": 27,
                    "copy_success": 1,
                    "result": 1
                },
                "uVar4": {
                    "error": 1,
                    "error_code": 1,
                    "error_description": 1,
                    "error_message": 7,
                    "error_message_id": 1,
                    "error_message_translation": 1,
                    "error_string": 8,
                    "localized_error": 1,
                    "localized_error_message": 5,
                    "translated_error": 1,
                    "translated_error_message": 2,
                    "translation": 1
                },
                "uVar5": {
                    "bytes_copied": 2,
                    "copy_bytes": 2,
                    "copy_error": 1,
                    "copy_error_code": 1,
                    "copy_result": 2,
                    "copy_size": 2,
                    "copy_success": 1,
                    "error_code": 1,
                    "result_value": 1,
                    "unlink_result": 13,
                    "unlink_result_value": 1,
                    "unlink_status": 2,
                    "unlinked": 1
                },
                "unlink": {
                    "delete_file": 1
                }
            },
            "called": [
                "FUN_00105c00",
                "FUN_00102f1e"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00102d2f"
            ],
            "code": "\nundefined  [16] copy_and_unlink_file_00105bc0(char *source_file,char *destination_file,undefined4 file_permissions,undefined8 result)\n\n{\n  uint copy_result;\n  int *errno_ptr;\n  char *error_message;\n  undefined8 error_string;\n  ulong unlink_result;\n  undefined result [16];\n  \n  if (destination_file == source_file) {\n    unlink_result = 0;\n  }\n  else {\n    copy_result = copy_file(file_permissions);\n    unlink_result = (ulong)copy_result;\n    if (copy_result != 0) {\n      errno_ptr = get_error_location();\n      error_message = get_error_message(*errno_ptr);\n      error_string = get_error_string(0,\"unable to copy file \\'%s\\'; reason: %s\",5);\n      handle_non_fatal_error(error_string,destination_file,error_message);\n    }\n    delete_file(source_file);\n  }\n  result._8_8_ = result;\n  result._0_8_ = unlink_result;\n  return result;\n}\n\n",
            "current_name": "copy_and_unlink_file_00105bc0",
            "entrypoint": "0x00105bc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105bc0": "copy_and_unlink_file_00105bc0",
                "__errno_location": "get_error_location",
                "auVar6": "result",
                "dcgettext": "get_error_string",
                "non_fatal": "handle_non_fatal_error",
                "param_1": "source_file",
                "param_2": "destination_file",
                "param_3": "file_permissions",
                "param_4": "result",
                "pcVar3": "error_message",
                "piVar2": "errno_ptr",
                "simple_copy_constprop_0": "copy_file",
                "strerror": "get_error_message",
                "uVar1": "copy_result",
                "uVar4": "error_string",
                "uVar5": "unlink_result",
                "unlink": "delete_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105c00": {
            "additional_data": {
                "FUN_00105c00": {
                    "copy_and_write": 1,
                    "copy_file": 18,
                    "copy_file_contents": 3,
                    "copy_file_data": 5,
                    "copy_file_to": 1,
                    "copy_to_file": 1,
                    "defragmentation": 1,
                    "file_copy": 1
                },
                "_Var3": {
                    "cur_position": 1,
                    "current_offset": 6,
                    "current_position": 2,
                    "file_offset": 6,
                    "offset": 1,
                    "seek_result": 4,
                    "source_file_offset": 3,
                    "source_file_position": 2,
                    "source_file_size": 5,
                    "src_file_size": 1
                },
                "__fd": {
                    "dest_file_descriptor": 2,
                    "destination_fd": 5,
                    "destination_file_descriptor": 14,
                    "dst_file_descriptor": 1,
                    "file_descriptor_2": 1,
                    "file_descriptor_to": 1,
                    "new_file_descriptor": 1,
                    "output_fd": 1,
                    "output_file_descriptor": 4
                },
                "auStack_2038": {
                    "buffer": 21,
                    "read_buffer": 1
                },
                "iVar1": {
                    "errno": 3,
                    "errno_copy_1": 1,
                    "errno_value": 8,
                    "error": 1,
                    "error_code": 6,
                    "error_code_1": 1,
                    "error_number": 1,
                    "error_value": 1,
                    "original_errno": 2,
                    "original_errno_value": 1,
                    "original_error_code": 1,
                    "saved_error_code": 1
                },
                "iVar2": {
                    "bytes_read": 9,
                    "current_error_code": 1,
                    "errno_copy_2": 1,
                    "read_bytes": 2,
                    "read_count": 1,
                    "read_result": 14
                },
                "param_1": {
                    "file_descriptor": 5,
                    "file_descriptor_1": 1,
                    "file_descriptor_from": 1,
                    "input_fd": 1,
                    "input_file_descriptor": 3,
                    "source_fd": 4,
                    "source_file_descriptor": 15,
                    "src_file_descriptor": 1
                },
                "param_2": {
                    "destination_file": 5,
                    "destination_file_path": 10,
                    "destination_filename": 2,
                    "destination_path": 2,
                    "dst_file_path": 1,
                    "file_name_to": 1,
                    "file_path": 4,
                    "filename": 1,
                    "output_file_path": 3,
                    "output_filename": 2
                },
                "piVar6": {
                    "errno_address": 1,
                    "errno_location": 8,
                    "errno_location_pointer": 1,
                    "errno_location_ptr": 1,
                    "errno_pointer": 5,
                    "errno_ptr": 5,
                    "error_code": 1,
                    "error_code_location": 1,
                    "error_number": 1,
                    "error_ptr": 6,
                    "pointer_error_code": 1
                },
                "sVar5": {
                    "bytes_read": 1,
                    "bytes_written": 25,
                    "bytes_written_check": 1,
                    "write_result": 4
                },
                "uVar4": {
                    "bytes_copied": 21,
                    "bytes_read": 4,
                    "bytes_written": 2,
                    "read_result": 1,
                    "result": 1,
                    "return_value": 2
                }
            },
            "called": [
                "FUN_001021e0",
                "FUN_00102290",
                "FUN_00102f55",
                "FUN_00102060",
                "FUN_00102110",
                "FUN_00102260",
                "FUN_00102460"
            ],
            "calling": [
                "FUN_00105bc0"
            ],
            "code": "\nulong copy_file_data_00105c00(int source_file_descriptor,char *destination_file_path)\n\n{\n  int errno_value;\n  int destination_file_descriptor;\n  int read_result;\n  __off_t current_offset;\n  ulong bytes_copied;\n  size_t bytes_written;\n  int *errno_location;\n  undefined buffer [8200];\n  \n  if ((-1 < source_file_descriptor) && (current_offset = lseek(source_file_descriptor,0,0), current_offset == 0)) {\n    destination_file_descriptor = open(destination_file_path,0x201);\n    if (destination_file_descriptor < 0) {\n      bytes_copied = simple_copy_constprop_0_cold();\n      return bytes_copied;\n    }\n    do {\n      bytes_copied = read(source_file_descriptor,buffer,0x2000);\n      read_result = (int)bytes_copied;\n      if (read_result < 1) {\n        errno_location = __errno_location();\n        errno_value = *errno_location;\n        close(source_file_descriptor);\n        close(destination_file_descriptor);\n        if (read_result != 0) {\n          *errno_location = errno_value;\n          return 0xffffffff;\n        }\n        return bytes_copied & 0xffffffff;\n      }\n      bytes_written = write(destination_file_descriptor,buffer,(long)read_result);\n    } while (bytes_written == (long)read_result);\n    errno_location = __errno_location();\n    read_result = *errno_location;\n    close(source_file_descriptor);\n    close(destination_file_descriptor);\n    *errno_location = read_result;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "copy_file_data_00105c00",
            "entrypoint": "0x00105c00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105c00": "copy_file_data_00105c00",
                "_Var3": "current_offset",
                "__fd": "destination_file_descriptor",
                "auStack_2038": "buffer",
                "iVar1": "errno_value",
                "iVar2": "read_result",
                "param_1": "source_file_descriptor",
                "param_2": "destination_file_path",
                "piVar6": "errno_location",
                "sVar5": "bytes_written",
                "uVar4": "bytes_copied"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105cc0": {
            "additional_data": {
                "FUN_00105cc0": {
                    "initialize_process": 3,
                    "start_function": 1,
                    "start_main": 1,
                    "start_main_loop": 4,
                    "start_main_process": 2
                },
                "FUN_00105db0": {
                    "process_data": 6,
                    "process_entry_to_file": 1,
                    "process_file": 1
                },
                "auStack_8": {
                    "aux_stack": 1,
                    "auxiliary_stack": 2,
                    "local_vars": 2,
                    "stack": 6,
                    "stack8": 2,
                    "stack_8": 1,
                    "stack_array": 4,
                    "stack_buffer": 2,
                    "stack_frame": 1,
                    "stack_variable": 1
                },
                "param_1": {
                    "arg1": 16,
                    "arg_1": 1,
                    "argc": 5,
                    "argument1": 1,
                    "entry_point": 1,
                    "first_argument": 1,
                    "param1": 4,
                    "unused_param": 1,
                    "unused_param1": 1
                },
                "param_2": {
                    "arg2": 16,
                    "arg_2": 1,
                    "argument2": 1,
                    "argv": 5,
                    "file_pointer": 1,
                    "file_ptr": 1,
                    "param2": 4,
                    "second_argument": 1,
                    "unused_param2": 1
                },
                "processEntry": {
                    "execute_main_function": 2,
                    "execute_main_loop": 1,
                    "execute_program": 1,
                    "initialize_program": 2,
                    "start_main": 2,
                    "start_main_loop": 10,
                    "start_program": 2
                }
            },
            "called": [
                "FUN_00105db0",
                "FUN_0010e018"
            ],
            "calling": [],
            "code": "\nvoid start_main_loop_00105cc0 start_main_loop_00105cc0(undefined8 arg1,undefined8 arg2)\n\n{\n  undefined stack [8];\n  \n  __libc_start_main(main,arg2,&stack0x00000008,0,0,arg1,stack);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "start_main_loop_00105cc0",
            "entrypoint": "0x00105cc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105cc0": "start_main_loop_00105cc0",
                "auStack_8": "stack",
                "param_1": "arg1",
                "param_2": "arg2",
                "processEntry": "start_main_loop"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105cf0": {
            "called": [
                "FUN_0010e038"
            ],
            "calling": [
                "FUN_00105d60"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00105d03) */\n/* WARNING: Removing unreachable block (ram,0x00105d0f) */\n\nvoid FUNC_00105cf0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00105cf0",
            "entrypoint": "0x00105cf0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00105cf0": "FUNC_00105cf0"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00105d20": {
            "called": [
                "FUN_0010e2d0"
            ],
            "calling": [
                "FUN_00105da0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00105d44) */\n/* WARNING: Removing unreachable block (ram,0x00105d50) */\n\nvoid FUNC_00105d20(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00105d20",
            "entrypoint": "0x00105d20",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00105d20": "FUNC_00105d20"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00105d60": {
            "additional_data": {
                "DAT_0010d400": {
                    "is_initialized": 2
                },
                "FUNC_00105cf0": {
                    "clean_up_resources": 1,
                    "cleanup": 8,
                    "cleanup_function": 1,
                    "cleanup_program": 1,
                    "cleanup_resources": 6,
                    "deregister_tm_clones": 1,
                    "execute_cleanup": 1,
                    "finalize": 1,
                    "handle_cleanup": 1,
                    "initialize_cleanup": 1,
                    "initialize_resources": 1,
                    "perform_cleanup": 6,
                    "register_tm_clones": 1,
                    "reset": 1
                },
                "FUN_00105d60": {
                    "initialize": 10,
                    "initialize_application": 5,
                    "initialize_function": 2,
                    "initialize_global_data": 1,
                    "initialize_if_needed": 1,
                    "initialize_program": 11,
                    "initialize_resources": 1
                },
                "PTR_LOOP_0010d2c8": {
                    "loop_pointer": 2,
                    "ptr_loop": 1
                }
            },
            "called": [
                "FUN_00105cf0",
                "FUN_00102590"
            ],
            "calling": [],
            "code": "\nvoid initialize_program_00105d60(void)\n\n{\n  if (DAT_0010d400 != '\\0') {\n    return;\n  }\n  __cxa_finalize(PTR_LOOP_0010d2c8);\n  deregister_tm_clones();\n  DAT_0010d400 = 1;\n  return;\n}\n\n",
            "current_name": "initialize_program_00105d60",
            "entrypoint": "0x00105d60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105d60": "initialize_program_00105d60"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105da0": {
            "called": [
                "FUN_00105d20"
            ],
            "calling": [],
            "code": "\nvoid register_tm_clones(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n",
            "current_name": "FUN_00105da0",
            "entrypoint": "0x00105da0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00105db0": {
            "additional_data": {
                "FUN_0010342d": {
                    "usage": 1
                },
                "FUN_0010394a": {
                    "open_inarch": 1
                },
                "FUN_00103a78": {
                    "xrealloc": 1
                },
                "FUN_00103bd1": {
                    "bfd_nonfatal": 1
                },
                "FUN_00103cac": {
                    "bfformat": 1
                },
                "FUN_00103cf7": {
                    "dcgettext": 1
                },
                "FUN_00103e95": {
                    "bindtextdomain": 1
                },
                "FUN_001052a0": {
                    "normalize": 1
                },
                "FUN_00105300": {
                    "xstrdup": 1
                },
                "FUN_00105480": {
                    "fgets": 1
                },
                "FUN_00105570": {
                    "filename_cmp": 1
                },
                "FUN_00105830": {
                    "fmprintf": 1
                },
                "FUN_00105870": {
                    "xmalloc": 1
                },
                "FUN_001058b0": {
                    "fatal": 1
                },
                "FUN_00105db0": {
                    "analyze_binary": 1,
                    "decompile_and_improve": 1,
                    "extract_and_update_archive": 1,
                    "extract_and_update_archive_files": 1,
                    "extract_archive": 1,
                    "extract_archives": 2,
                    "extract_files": 1,
                    "parse_and_process_arguments": 1,
                    "parse_input": 1,
                    "process_binary": 1,
                    "process_files": 13,
                    "process_input_files": 1,
                    "run_ranlib": 1
                },
                "FUN_0010737f": {
                    "bfd_fatal": 1
                },
                "FUN_001075e0": {
                    "xexit": 1
                },
                "FUN_00107640": {
                    "bfd_make_readable": 1
                },
                "FUN_00107650": {
                    "bfd_bwrite": 1
                },
                "FUN_00107690": {
                    "bfd_make_writable": 1
                },
                "FUN_00107730": {
                    "getopt_long": 1
                },
                "FUN_00107740": {
                    "get_pos_bfd": 1
                },
                "FUN_00107890": {
                    "free": 1
                },
                "FUN_00107c10": {
                    "fclose": 1
                },
                "FUN_00107c20": {
                    "fprintf": 1
                },
                "FUN_00107cc0": {
                    "fflush": 1
                },
                "__ptr": {
                    "byte_pointer": 4,
                    "byte_pointer2": 5,
                    "byte_ptr": 5,
                    "byte_ptr1": 2,
                    "byte_ptr2": 2,
                    "byte_ptr3": 1,
                    "byte_variable3": 1,
                    "new_byte_ptr": 1,
                    "ptr": 1,
                    "ptr_byte": 1,
                    "ptr_byte_21": 1
                },
                "_ptr": {
                    "byte_ptr2": 1
                },
                "bStack46": {
                    "byte_var4": 1
                },
                "bVar13": {
                    "byte2": 1,
                    "byte_13": 1,
                    "byte_value": 2,
                    "byte_var": 11,
                    "byte_var1": 2,
                    "byte_var13": 1,
                    "byte_var2": 8,
                    "byte_variable2": 2
                },
                "bVar3": {
                    "byte1": 1,
                    "byte_3": 1,
                    "byte_value": 1,
                    "byte_var": 19,
                    "byte_var1": 1,
                    "byte_var3": 1,
                    "byte_variable": 2,
                    "flag_byte": 1,
                    "value": 1
                },
                "bVar34": {
                    "byte_var2": 1
                },
                "bVar47": {
                    "bool3": 1,
                    "bool_var": 7,
                    "bool_var3": 3,
                    "bool_variable3": 1
                },
                "bVar48": {
                    "byte3": 1,
                    "byte_var": 7,
                    "byte_var2": 1,
                    "byte_var3": 2,
                    "byte_variable3": 1
                },
                "bVar8": {
                    "bool1": 2,
                    "bool_8": 1,
                    "bool_value": 1,
                    "bool_var": 8,
                    "bool_var1": 13,
                    "bool_var8": 1,
                    "bool_variable": 1,
                    "bool_variable1": 1
                },
                "bVar9": {
                    "bool2": 2,
                    "bool_9": 1,
                    "bool_value": 1,
                    "bool_var": 8,
                    "bool_var2": 13,
                    "bool_var9": 1,
                    "bool_variable2": 2
                },
                "boolVar": {
                    "new_bool_var": 1
                },
                "byteVal": {
                    "new_byte_val": 1
                },
                "byteVar": {
                    "new_byte_var": 1
                },
                "cStack38": {
                    "byte_var3": 1
                },
                "cVar14": {
                    "char1": 1,
                    "char_14": 1,
                    "char_value": 2,
                    "char_var": 19,
                    "char_var1": 1,
                    "char_var14": 1,
                    "char_var4": 1,
                    "char_variable": 2
                },
                "cVar35": {
                    "char_var2": 1
                },
                "charPtr": {
                    "new_char_ptr": 1
                },
                "charPtrPtr": {
                    "new_char_ptr_ptr": 1
                },
                "charVar": {
                    "new_char_var": 1
                },
                "extraout_EDX": {
                    "extra_out_exd": 1,
                    "extraout_var": 1,
                    "uint": 1,
                    "uint3": 1,
                    "uint_extraout_33": 1,
                    "uint_value": 1,
                    "uint_var2": 2,
                    "uint_var4": 1
                },
                "filePtr": {
                    "new_file_ptr": 1
                },
                "iVar15": {
                    "index": 1,
                    "int1": 1,
                    "int_15": 1,
                    "int_value": 2,
                    "int_var": 13,
                    "int_var1": 5,
                    "int_var15": 1,
                    "int_variable": 2,
                    "loop_var": 1,
                    "var_index": 1
                },
                "iVar45": {
                    "int2": 1,
                    "int_var": 3,
                    "int_var1": 1,
                    "int_var2": 4,
                    "int_variable2": 2,
                    "loop_var2": 1
                },
                "intPtr": {
                    "new_int_ptr": 1
                },
                "intVar": {
                    "new_int_var": 1
                },
                "l": {
                    "long_var2": 1
                },
                "lVar24": {
                    "long1": 1,
                    "long_25": 1,
                    "long_value": 2,
                    "long_var": 10,
                    "long_var1": 5,
                    "long_var2": 1,
                    "long_var24": 1,
                    "long_var4": 1,
                    "long_variable": 1,
                    "long_variable4": 1,
                    "ulong_var2": 1
                },
                "lVar29": {
                    "long_pointer_pointer": 1,
                    "long_ptr": 1,
                    "long_var": 1
                },
                "lVar34": {
                    "l_var34": 1,
                    "long2": 1,
                    "long_36": 1,
                    "long_value": 1,
                    "long_var": 6,
                    "long_var2": 5,
                    "long_var4": 1,
                    "long_variable2": 1
                },
                "lVar35": {
                    "l_var35": 1,
                    "long3": 1,
                    "long_37": 1,
                    "long_value": 1,
                    "long_var": 6,
                    "long_var3": 6,
                    "long_var5": 1,
                    "long_variable3": 1
                },
                "lVar40": {
                    "long_var": 1
                },
                "lVar41": {
                    "long_var": 1
                },
                "lVar42": {
                    "long_var": 1
                },
                "lVar44": {
                    "long_var4": 1
                },
                "local_100": {
                    "buffer_counter": 1,
                    "local_var6": 1,
                    "long4": 1,
                    "long_value": 1,
                    "long_value2": 1,
                    "long_var": 7,
                    "long_var2": 1,
                    "long_var4": 2,
                    "long_var5": 1,
                    "long_var6": 1,
                    "long_variable2": 1,
                    "long_variable5": 1
                },
                "local_101": {
                    "long_var": 1
                },
                "local_108": {
                    "buffer_size": 1,
                    "local_var5": 1,
                    "size_t3": 1,
                    "size_t_var3": 3,
                    "size_t_var4": 1,
                    "size_t_variable3": 1,
                    "size_value": 1,
                    "size_value3": 1,
                    "size_var": 7,
                    "size_var3": 2,
                    "size_variable3": 1
                },
                "local_10a": {
                    "size_var": 1
                },
                "local_10b": {
                    "size_var": 1
                },
                "local_110": {
                    "char_double_pointer": 1,
                    "char_double_pointer4": 1,
                    "char_pointer_pointer": 3,
                    "char_pointer_pointer4": 2,
                    "char_ptr_ptr": 3,
                    "char_ptr_ptr1": 1,
                    "char_ptr_ptr13": 1,
                    "char_ptr_ptr2": 2,
                    "char_ptr_ptr4": 1,
                    "char_ptr_ptr_var": 1,
                    "local_var4": 1,
                    "ptr_buffer": 1,
                    "string_array_pointer2": 1,
                    "string_pointer_pointer2": 1
                },
                "local_118": {
                    "byte_pointer": 4,
                    "byte_pointer3": 2,
                    "byte_pointer5": 3,
                    "byte_ptr": 3,
                    "byte_ptr2": 2,
                    "byte_ptr4": 2,
                    "byte_ptr5": 1,
                    "byte_ptr_var": 1,
                    "local_var3": 1,
                    "temp_buffer": 1
                },
                "local_128": {
                    "current_file": 1,
                    "file_pointer": 4,
                    "file_pointer5": 1,
                    "file_pointer6": 2,
                    "file_ptr": 3,
                    "file_ptr4": 1,
                    "file_ptr5": 2,
                    "file_ptr6": 1,
                    "file_ptr_var": 1,
                    "local_var2": 1,
                    "p_file_var4": 1,
                    "temp_var2": 1
                },
                "local_130": {
                    "file_pointer": 3,
                    "file_pointer4": 1,
                    "file_pointer5": 2,
                    "file_ptr4": 1,
                    "file_ptr_var": 1,
                    "local_var1": 1,
                    "new_struct": 1,
                    "searching_str": 1,
                    "temp_var1": 1,
                    "undefined8_var": 4,
                    "undefined8_var3": 3
                },
                "local_b0": {
                    "local_var7": 1,
                    "uint6": 1,
                    "uint_value": 1,
                    "uint_value2": 1,
                    "uint_var": 8,
                    "uint_var2": 1,
                    "uint_var4": 2,
                    "uint_var5": 2,
                    "uint_variable3": 1
                },
                "local_c8": {
                    "undefined2": 1,
                    "undefined2_var": 1,
                    "undefined_arr": 1,
                    "undefined_array": 5,
                    "undefined_array2": 1,
                    "undefined_buf": 1,
                    "undefined_var": 3
                },
                "longPtr": {
                    "new_long_ptr": 1
                },
                "longVar": {
                    "new_long_var": 1
                },
                "pFVar18": {
                    "file_pointer": 8,
                    "file_pointer1": 2,
                    "file_ptr": 9,
                    "file_ptr1": 3,
                    "file_var18": 1,
                    "p_file_var1": 1,
                    "ptr_to_file_18": 1
                },
                "pFVar22": {
                    "file_pointer": 4,
                    "file_pointer2": 5,
                    "file_ptr": 6,
                    "file_ptr1": 1,
                    "file_ptr2": 5,
                    "file_var22": 1,
                    "p_file_var2": 1,
                    "ptr_to_file_23": 1
                },
                "pFVar28": {
                    "file_pointer": 4,
                    "file_pointer3": 5,
                    "file_pointer4": 1,
                    "file_ptr": 6,
                    "file_ptr2": 1,
                    "file_ptr3": 4,
                    "file_ptr5": 1,
                    "file_var28": 1,
                    "p_file_var3": 1,
                    "ptr_file": 1,
                    "ptr_to_file_29": 1
                },
                "pFVar29": {
                    "file_ptr4": 1
                },
                "pFVar31": {
                    "file_ptr4": 2
                },
                "pFVar32": {
                    "file_ptr5": 1
                },
                "pFVar46": {
                    "file_pointer": 1
                },
                "pVar22": {
                    "file_pointer2": 1
                },
                "param_1": {
                    "archive_path": 1,
                    "argc": 19,
                    "file_count": 1,
                    "input_param": 1,
                    "num": 1,
                    "num_files": 3,
                    "num_of_params": 1,
                    "num_params": 1,
                    "param1": 1
                },
                "param_2": {
                    "argv": 19,
                    "file_list": 2,
                    "file_param": 1,
                    "file_ptr": 2,
                    "input_file": 2,
                    "input_file_ptr": 1,
                    "output_file": 1,
                    "param2": 1
                },
                "pbStack165": {
                    "byte_ptr2": 1
                },
                "pbVar1": {
                    "byte_pointer": 10,
                    "byte_ptr": 10,
                    "byte_ptr1": 3,
                    "ptr": 1,
                    "ptr1": 1,
                    "ptr_byte": 1,
                    "ptr_byte1": 1,
                    "ptr_byte_1": 1
                },
                "pbVar33": {
                    "byte_pointer": 1,
                    "byte_pointer3": 3,
                    "byte_ptr": 2,
                    "byte_ptr3": 1,
                    "ptr_byte_35": 1
                },
                "pbVar38": {
                    "byte_pointer": 3,
                    "byte_pointer2": 1,
                    "byte_pointer3": 1,
                    "byte_pointer4": 3,
                    "byte_ptr": 4,
                    "byte_ptr2": 1,
                    "byte_ptr3": 1,
                    "byte_ptr4": 1,
                    "ptr_byte_41": 1
                },
                "pcVar23": {
                    "char_pointer": 4,
                    "char_pointer1": 1,
                    "char_ptr": 7,
                    "char_ptr1": 3,
                    "char_var": 2,
                    "char_var2": 2,
                    "char_var5": 1,
                    "char_var_pointer": 1,
                    "char_var_ptr": 1,
                    "char_variable2": 1,
                    "ptr_char23": 1,
                    "ptr_char_24": 1
                },
                "pcVar31": {
                    "ptr_to_ptr_char_32": 1
                },
                "pcVar33": {
                    "byte_ptr3": 1
                },
                "pcVar39": {
                    "char_pointer": 2,
                    "char_pointer2": 1,
                    "char_pointer5": 1,
                    "char_ptr": 3,
                    "char_ptr3": 2,
                    "char_var3": 2,
                    "char_variable3": 1,
                    "error_message": 1,
                    "ptr_char_42": 1
                },
                "pcVar43": {
                    "char_pointer": 1,
                    "char_pointer4": 1,
                    "char_ptr": 1,
                    "char_ptr4": 1,
                    "param_2": 1
                },
                "pcVar46": {
                    "char_ptr4": 1,
                    "char_ptr5": 1
                },
                "piVar11": {
                    "int_pointer": 10,
                    "int_ptr": 12,
                    "int_ptr1": 2,
                    "int_ptr11": 1,
                    "ptr_int": 1,
                    "ptr_int11": 1,
                    "ptr_int_11": 1
                },
                "plVar21": {
                    "long_pointer": 4,
                    "long_pointer2": 6,
                    "long_ptr": 6,
                    "long_ptr1": 2,
                    "long_ptr2": 4,
                    "long_ptr3": 1,
                    "ptr_long21": 1,
                    "ptr_long_22": 1
                },
                "plVar29": {
                    "long_pointer_pointer": 1,
                    "long_ptr_ptr": 2
                },
                "plVar31": {
                    "long_ptr": 1
                },
                "plVar34": {
                    "long_ptr3": 1
                },
                "plVar36": {
                    "ptr_long_38": 1
                },
                "plVar4": {
                    "long_pointer": 10,
                    "long_ptr": 11,
                    "long_ptr1": 2,
                    "long_ptr4": 2,
                    "ptr_long": 1,
                    "ptr_long4": 1,
                    "ptr_long_4": 1
                },
                "plVar46": {
                    "long_pointer3": 1
                },
                "ppcVar10": {
                    "char_double_pointer": 3,
                    "char_pointer_pointer": 5,
                    "char_ptr_ptr": 12,
                    "char_ptr_ptr1": 2,
                    "char_ptr_ptr10": 1,
                    "ptr_ptr_char10": 1,
                    "ptr_ptrptr_char": 1,
                    "ptr_to_ptr_char_10": 1,
                    "string_array_pointer": 1,
                    "string_pointer_pointer": 1
                },
                "ppcVar29": {
                    "char_double_pointer": 1
                },
                "ppcVar31": {
                    "char_double_pointer2": 1,
                    "char_pointer_pointer": 2,
                    "char_pointer_pointer2": 2,
                    "char_ptr_ptr": 1,
                    "char_ptr_ptr2": 1
                },
                "ppcVar32": {
                    "char_double_pointer3": 1,
                    "char_pointer_pointer": 1,
                    "char_pointer_pointer3": 2,
                    "char_ptr_ptr": 2,
                    "char_ptr_ptr12": 1,
                    "ptr_to_ptr_char_34": 1
                },
                "ppcVar33": {
                    "char_ptr_ptr3": 1
                },
                "pplVar29": {
                    "long_double_pointer": 3,
                    "long_pointer3": 1,
                    "long_pointer_pointer": 1,
                    "long_ptr_ptr": 2,
                    "long_ptr_ptr1": 1,
                    "long_ptr_ptr3": 1,
                    "long_ptr_ptr5": 1,
                    "longpointer_pointer": 1,
                    "ptr_ptr_long29": 1,
                    "ptr_ptrptr_long": 1,
                    "ptr_to_ptr_long_30": 1
                },
                "pplVar31": {
                    "char_ptr_ptr11": 1,
                    "long_ptr_ptr": 1
                },
                "pplVar36": {
                    "long_pointer_pointer": 1
                },
                "ppuVar36": {
                    "undefined_double_pointer": 1,
                    "undefined_pointer_pointer": 2,
                    "undefined_ptr_ptr": 1,
                    "undefined_ptr_ptr1": 1,
                    "undefined_ptr_ptr3": 1
                },
                "ptr": {
                    "new_ptr": 1
                },
                "ptrArray": {
                    "new_ptr_array": 1
                },
                "puVar12": {
                    "ptr_undef": 1,
                    "ptr_undefined_12": 1,
                    "ptr_void12": 1,
                    "undefined_pointer": 10,
                    "undefined_ptr": 12,
                    "undefined_ptr1": 2,
                    "undefined_ptr12": 1
                },
                "puVar2": {
                    "ptr2": 1,
                    "ptr_array": 1,
                    "ptr_uint": 1,
                    "ptr_uint2": 1,
                    "ptr_uint_2": 1,
                    "uint_pointer": 10,
                    "uint_ptr": 11,
                    "uint_ptr1": 1,
                    "uint_ptr2": 1
                },
                "puVar26": {
                    "ptr_undef8": 1,
                    "ptr_undefined8_27": 1,
                    "ptr_void8": 1,
                    "ulong_pointer2": 1,
                    "undefined8_pointer": 4,
                    "undefined8_pointer2": 5,
                    "undefined8_ptr": 6,
                    "undefined8_ptr1": 2,
                    "undefined8_ptr2": 3,
                    "undefined8_ptr4": 1,
                    "undefined8_ptr6": 1
                },
                "puVar36": {
                    "undefined_ptr_ptr2": 1
                },
                "puVar39": {
                    "undefined_ptr2": 1
                },
                "puVar5": {
                    "char_ptr_ptr": 1,
                    "ptr_uint5": 1,
                    "ptr_undef8": 1,
                    "ptr_undefined8_5": 1,
                    "ulong_pointer": 1,
                    "undefined8_pointer": 9,
                    "undefined8_ptr": 9,
                    "undefined8_ptr1": 2,
                    "undefined8_ptr2": 1,
                    "undefined8_ptr3": 1,
                    "undefined8_ptr5": 1
                },
                "sStack37": {
                    "size_t_var3": 1
                },
                "sVar19": {
                    "size_t1": 1,
                    "size_t_19": 1,
                    "size_t_var": 1,
                    "size_t_var1": 6,
                    "size_t_variable": 1,
                    "size_value": 2,
                    "size_var": 8,
                    "size_var1": 2,
                    "size_var19": 1,
                    "size_var2": 1,
                    "size_variable": 1
                },
                "sVar20": {
                    "size_t2": 1,
                    "size_t_20": 1,
                    "size_t_var": 1,
                    "size_t_var2": 6,
                    "size_t_variable2": 1,
                    "size_value": 1,
                    "size_value2": 1,
                    "size_var": 8,
                    "size_var2": 2,
                    "size_var20": 1,
                    "size_var3": 1,
                    "size_variable2": 1
                },
                "sVar36": {
                    "char_ptr2": 1
                },
                "sizeVar": {
                    "new_size_var": 1
                },
                "uIntVar": {
                    "new_u_int_var": 1
                },
                "uLongVar": {
                    "new_u_long_var": 1
                },
                "uStack_c5": {
                    "undefined5_value": 2,
                    "undefined5_var": 5,
                    "undefined5_var1": 1,
                    "undefined_var": 1,
                    "undefined_variable4": 1,
                    "unknown_var": 1
                },
                "uStack_c6": {
                    "undefined5": 1,
                    "undefined_value": 2,
                    "undefined_var": 5,
                    "undefined_var1": 1,
                    "undefined_var2": 1,
                    "undefined_variable3": 1,
                    "unknown_var": 1
                },
                "uVar16": {
                    "loop_var": 2,
                    "param1": 1,
                    "u_int_var": 1,
                    "u_var16": 1,
                    "uint1": 1,
                    "uint_16": 1,
                    "uint_value": 2,
                    "uint_var": 11,
                    "uint_var1": 4,
                    "uint_var16": 1,
                    "uint_var3": 1,
                    "uint_variable": 1,
                    "var16": 1
                },
                "uVar17": {
                    "param2": 1,
                    "temp_var17": 1,
                    "u_int_var": 1,
                    "u_var17": 2,
                    "u_var3": 1,
                    "uint2": 1,
                    "uint_17": 1,
                    "uint_var17": 1,
                    "undefined4_value": 1,
                    "undefined4_var": 10,
                    "undefined4_var1": 1,
                    "undefined4_var3": 5,
                    "unknown_var": 1,
                    "var17": 1
                },
                "uVar25": {
                    "u_long_var": 1,
                    "ulong1": 1,
                    "ulong_26": 1,
                    "ulong_value": 2,
                    "ulong_var": 10,
                    "ulong_var1": 8,
                    "ulong_var25": 1,
                    "ulong_var4": 1,
                    "ulong_variable": 1,
                    "var25": 1
                },
                "uVar27": {
                    "param8": 1,
                    "u_var27": 1,
                    "u_var4": 1,
                    "ulong_var27": 1,
                    "ulong_variable2": 1,
                    "undefined8_28": 1,
                    "undefined8_value": 2,
                    "undefined8_var": 11,
                    "undefined8_var1": 6,
                    "undefined8_var3": 1,
                    "var27": 1
                },
                "uVar30": {
                    "param9": 1,
                    "temp_var30": 1,
                    "ulong_var30": 1,
                    "undefined8_31": 1,
                    "undefined8_value": 1,
                    "undefined8_value2": 1,
                    "undefined8_var": 4,
                    "undefined8_var2": 7,
                    "undefined8_var4": 1,
                    "var30": 1
                },
                "uVar31": {
                    "undefined8_var": 1
                },
                "uVar32": {
                    "undefined8_var": 1
                },
                "uVar33": {
                    "undefined8_var": 1
                },
                "uVar34": {
                    "undefined8_var": 1
                },
                "uVar35": {
                    "undefined8_var": 1
                },
                "uVar36": {
                    "undefined8_var": 1
                },
                "uVar37": {
                    "u_var37": 1,
                    "uint4": 1,
                    "uint_39": 1,
                    "uint_value": 1,
                    "uint_var": 6,
                    "uint_var2": 3,
                    "uint_var3": 2,
                    "undefined4_var4": 1,
                    "undefined8_var": 1,
                    "undefined_var3": 1,
                    "var37": 1
                },
                "uVar38": {
                    "undefined8_var": 1
                },
                "uVar39": {
                    "undefined8_var": 1
                },
                "uVar40": {
                    "ulong2": 1,
                    "ulong_43": 1,
                    "ulong_value": 1,
                    "ulong_var": 4,
                    "ulong_var1": 2,
                    "ulong_var2": 3,
                    "ulong_var3": 2,
                    "ulong_var40": 1,
                    "ulong_variable": 1,
                    "ulong_variable3": 1,
                    "undefined8_var": 1
                },
                "uVar41": {
                    "ulong3": 1,
                    "ulong_44": 1,
                    "ulong_value": 1,
                    "ulong_var": 4,
                    "ulong_var2": 2,
                    "ulong_var3": 3,
                    "ulong_var4": 2,
                    "ulong_var41": 1,
                    "ulong_variable2": 1,
                    "ulong_variable4": 1,
                    "undefined8_var": 1
                },
                "uVar42": {
                    "ulong4": 1,
                    "ulong_45": 1,
                    "ulong_value": 1,
                    "ulong_var": 4,
                    "ulong_var3": 2,
                    "ulong_var4": 3,
                    "ulong_var42": 1,
                    "ulong_var5": 2,
                    "ulong_variable3": 1,
                    "ulong_variable5": 1,
                    "undefined8_var": 1
                },
                "uVar43": {
                    "undefined8_var": 1
                },
                "uVar44": {
                    "u_var44": 1,
                    "uint5": 1,
                    "uint_var": 6,
                    "uint_var3": 3,
                    "uint_var4": 2,
                    "uint_variable2": 1,
                    "var44": 1
                },
                "uVar45": {
                    "uint_var": 1,
                    "uint_var3": 1
                },
                "uVar46": {
                    "uint_var": 1
                },
                "uVar6": {
                    "param6": 1,
                    "temp_var6": 1,
                    "u_int_var": 1,
                    "u_var1": 1,
                    "u_var6": 2,
                    "uint_6": 1,
                    "uint_var1": 1,
                    "uint_var6": 2,
                    "undefined4_value": 1,
                    "undefined4_var": 11,
                    "undefined4_var1": 5,
                    "var6": 1
                },
                "uVar7": {
                    "param7": 1,
                    "temp_var7": 1,
                    "u_int_var": 1,
                    "u_var2": 1,
                    "u_var7": 2,
                    "uint_7": 1,
                    "uint_var2": 1,
                    "uint_var7": 2,
                    "undefined4_value": 1,
                    "undefined4_var": 11,
                    "undefined4_var2": 5,
                    "var7": 1
                },
                "unaff_R12": {
                    "arch_file": 1,
                    "file": 1,
                    "file_pointer4": 3,
                    "file_ptr6": 1
                },
                "unaff_RBP": {
                    "char_pointer": 5,
                    "char_pointer3": 1,
                    "char_pointer4": 1,
                    "char_ptr": 5,
                    "char_ptr1": 1,
                    "char_ptr2": 2,
                    "unaffected_rbp": 1
                },
                "undefined8Ptr": {
                    "new_undefined8_ptr": 1
                },
                "undefined8Var": {
                    "new_undefined8_var": 1
                },
                "undefinedPtr": {
                    "new_undefined_ptr": 1
                }
            },
            "called": [
                "FUN_001052a0",
                "FUN_001020a0",
                "FUN_00102030",
                "FUN_0010394a",
                "FUN_00102390",
                "FUN_001022b0",
                "FUN_001020e0",
                "FUN_001020b0",
                "FUN_00102460",
                "FUN_00102120",
                "FUN_00102220",
                "FUN_00102090",
                "FUN_00105300",
                "FUN_001058b0",
                "FUN_00102230",
                "FUN_001022c0",
                "FUN_00102440",
                "FUN_001024e0",
                "FUN_00102300",
                "FUN_001023a0",
                "FUN_001024c0",
                "FUN_001075e0",
                "FUN_001020d0",
                "FUN_00105870",
                "FUN_001024d0",
                "FUN_001022a0",
                "FUN_00102140",
                "FUN_00102180",
                "FUN_00105570",
                "FUN_001021a0",
                "FUN_00102160",
                "FUN_00103e95",
                "FUN_00102320",
                "FUN_00102240",
                "FUN_00102410",
                "FUN_00102330",
                "FUN_00102270",
                "FUN_00107890",
                "FUN_00107c20",
                "FUN_00105830",
                "FUN_00107740",
                "FUN_00107650",
                "FUN_00103bd1",
                "FUN_00103a78",
                "FUN_00102170",
                "FUN_001023f0",
                "FUN_00102100",
                "FUN_00107cc0",
                "FUN_001020c0",
                "FUN_00102470",
                "FUN_00107640",
                "FUN_001022e0",
                "FUN_00102340",
                "FUN_00102490",
                "FUN_001021b0",
                "FUN_001023b0",
                "FUN_00102250",
                "FUN_00102480",
                "FUN_00102380",
                "FUN_00107c10",
                "FUN_00102450",
                "FUN_00105480",
                "FUN_00107690",
                "FUN_00102080",
                "FUN_00107920",
                "FUN_00107730",
                "FUN_00102310",
                "FUN_0010342d",
                "FUN_00102350",
                "FUN_00102190",
                "FUN_00102370"
            ],
            "calling": [
                "FUN_00105cc0"
            ],
            "code": "\n\n\nvoid process_input_files_00105db0(uint argc,FILE *argv)\n\n{\n  byte *byte_ptr;\n  uint *uint_ptr;\n  byte byte_var;\n  long_var2ong *long_ptr;\n  undefined8 *undefined8_pointer;\n  undefined4 undefined4_var;\n  undefined4 undefined4_var;\n  boolong_var2 bool_var1;\n  boolong_var2 bool_var2;\n  char **char_ptr_ptr;\n  int *int_ptr;\n  undefined *undefined_ptr;\n  byte byte_var;\n  char char_var;\n  int int_var;\n  uint uint_var;\n  undefined4 undefined4_var;\n  FILE *file_ptr;\n  size_t size_var;\n  size_t size_var;\n  byte *byte_ptr;\n  long_var2ong *long_ptr;\n  FILE *file_ptr;\n  char *char_ptr;\n  long_var2ong long_var;\n  ulong_var2ong ulong_var;\n  undefined8 *undefined8_ptr;\n  undefined8 undefined8_var;\n  FILE *file_ptr;\n  long_var2ong **long_double_pointer;\n  undefined8 undefined8_var2;\n  char **char_pointer_pointer;\n  uint uint_var2;\n  char **char_pointer_pointer3;\n  byte *byte_pointer3;\n  long_var2ong long_var;\n  long_var2ong long_var3;\n  undefined **undefined_pointer_pointer;\n  uint uint_var;\n  char *char_pointer;\n  byte *byte_ptr;\n  char *char_ptr;\n  ulong_var2ong ulong_var;\n  ulong_var2ong ulong_var;\n  ulong_var2ong ulong_var;\n  FILE *file_pointer4;\n  char *char_pointer;\n  uint uint_var;\n  int int_var2;\n  char *char_ptr5;\n  boolong_var2 bool_var;\n  byte byte_var;\n  undefined8 undefined8_var;\n  FILE *file_pointer;\n  byte *byte_pointer;\n  char **char_pointer_pointer;\n  size_t size_var;\n  long_var2ong long_var;\n  undefined undefined_array [2];\n  undefined undefined_var;\n  undefined5 undefined5_var;\n  uint uint_var;\n  \n  byte_var = 0;\n  char_ptr5 = (char *)(ulong_var2ong)argc;\n  setlong_var2ocalong_var2e(5,\"\");\n  setlong_var2ocalong_var2e(0,\"\");\n  bindtextdomain(\"binutilong_var2s\",\"/usr/share/long_var2ocalong_var2e\");\n  textdomain(\"binutilong_var2s\");\n  DAT_0010d660 = *(long_var2ong **)argv;\n  xmalong_var2long_var2oc_set_program_name();\n  bfd_set_error_program_name(DAT_0010d660);\n  bfd_plong_var2ugin_set_program_name(DAT_0010d660);\n  char_pointer = (char *)argv;\n  file_ptr = argv;\n  if ((int)argc < 2) goto LAB_001062c6;\n  char_pointer_pointer = (char **)0x7d0;\n  file_pointer4 = (FILE *)0x1;\n  file_pointer = (FILE *)0x0;\n  file_ptr = argv;\n  do {\n    uint_var = (uint)file_pointer4;\n    char_pointer = (char *)(long_var2ong)(int)uint_var;\n    undefined8_var = (FILE *)((long_var2ong)char_pointer * 8);\n    char_pointer = (char *)file_ptr;\n    if (**(char **)(&file_ptr->_flong_var2ags + (long_var2ong)char_pointer * 2) == '@') {\n      uint_var = (int)char_pointer_pointer - 1;\n      char_pointer_pointer = (char **)(ulong_var2ong)uint_var;\n      if (uint_var == 0) {\n        long_ptr = *(long_var2ong **)file_ptr;\n        char_ptr5 = \"%s: error: too many @-filong_var2es encountered\\n\";\nLAB_00106ffe:\n        fprintf(_stderr,char_ptr5,long_ptr);\nLAB_0010700f:\n                    \n        xexit(1);\n      }\n      char_ptr = *(char **)(&file_ptr->_flong_var2ags + (long_var2ong)char_pointer * 2) + 1;\n      int_var = stat(char_ptr,(stat *)undefined_array);\n      if (-1 < int_var) {\n        if ((uint_var & 0xf000) == 0x4000) {\n          long_ptr = *(long_var2ong **)file_ptr;\n          char_ptr5 = \"%s: error: @-filong_var2e refers to a directory\\n\";\n          goto LAB_00106ffe;\n        }\n        file_ptr = fopen(char_ptr,\"r\");\n        if (file_ptr != (FILE *)0x0) {\n          int_var = fseek(file_ptr,0,2);\n          if (((int_var != -1) && (size_var = ftelong_var2long_var2(file_ptr), size_var != 0xffffffffffffffff)) &&\n             (int_var = fseek(file_ptr,0,0), int_var != -1)) {\n            byte_pointer = (byte *)xmalong_var2long_var2oc(size_var + 1);\n            size_var = fread(byte_pointer,1,size_var,file_ptr);\n            if ((size_var == size_var) || (int_var = ferror(file_ptr), int_var == 0)) {\n              byte_pointer[size_var] = 0;\n              byte_var = *byte_pointer;\n              byte_pointer3 = byte_pointer;\n              whilong_var2e( true ) {\n                if (byte_var == 0) goto LAB_00106814;\n                if (((&_sch_istablong_var2e)[(ulong_var2ong)byte_var * 2] & 0x40) == 0) break;\n                byte_var = byte_pointer3[1];\n                byte_pointer3 = byte_pointer3 + 1;\n              }\n              size_var = strlong_var2en((char *)byte_pointer);\n              byte_ptr = (byte *)xmalong_var2long_var2oc(size_var + 1);\n              file_ptr = (FILE *)0x0;\n              int_var = 0;\n              bool_var2 = falong_var2se;\n              bool_var = falong_var2se;\n              bool_var1 = falong_var2se;\n              long_var = 0;\n              byte_pointer3 = byte_pointer;\n              do {\n                whilong_var2e (((&_sch_istablong_var2e)[(ulong_var2ong)*byte_pointer3 * 2] & 0x40) != 0) {\n                  byte_pointer3 = byte_pointer3 + 1;\n                }\n                if ((int_var == 0) || (int_var + -1 <= (int)long_var)) {\n                  if (file_ptr == (FILE *)0x0) {\n                    int_var = 8;\n                    file_ptr = (FILE *)xmalong_var2long_var2oc(0x40);\n                    char_pointer_pointer = (char **)((long_var2ong)&file_ptr->_flong_var2ags + long_var * 8);\n                    *char_pointer_pointer = (char *)0x0;\n                  }\n                  elong_var2se {\n                    int_var = int_var * 2;\n                    file_ptr = (FILE *)xrealong_var2long_var2oc(file_ptr,(long_var2ong)int_var << 3);\n                    char_pointer_pointer = (char **)((long_var2ong)&file_ptr->_flong_var2ags + long_var * 8);\n                    *char_pointer_pointer = (char *)0x0;\n                  }\n                }\n                elong_var2se {\n                  char_pointer_pointer = (char **)((long_var2ong)&file_ptr->_flong_var2ags + long_var * 8);\n                }\n                byte_var = *byte_pointer3;\n                byte_ptr = byte_ptr;\n                whilong_var2e (byte_var != 0) {\n                  whilong_var2e( true ) {\n                    if ((((&_sch_istablong_var2e)[(ulong_var2ong)byte_var * 2] & 0x40) != 0) &&\n                       (!(boolong_var2)(bool_var2 | bool_var1 | bool_var))) {\n                      bool_var1 = falong_var2se;\n                      bool_var2 = falong_var2se;\n                      bool_var = falong_var2se;\n                      goto LAB_0010606f;\n                    }\n                    if (!bool_var1) break;\n                    byte_pointer3 = byte_pointer3 + 1;\n                    *byte_ptr = byte_var;\n                    byte_ptr = byte_ptr + 1;\n                    bool_var1 = falong_var2se;\n                    byte_var = *byte_pointer3;\n                    if (byte_var == 0) goto LAB_0010606f;\n                  }\n                  if (byte_var == 0x5c) {\n                    bool_var1 = true;\n                  }\n                  elong_var2se if (bool_var) {\n                    if (byte_var == 0x27) {\n                      bool_var = falong_var2se;\n                    }\n                    elong_var2se {\nLAB_001061f1:\n                      *byte_ptr = byte_var;\n                      byte_ptr = byte_ptr + 1;\n                    }\n                  }\n                  elong_var2se if (bool_var2) {\n                    if (byte_var != 0x22) goto LAB_001061f1;\n                    bool_var2 = falong_var2se;\n                  }\n                  elong_var2se if (byte_var == 0x27) {\n                    bool_var = true;\n                  }\n                  elong_var2se {\n                    if (byte_var != 0x22) goto LAB_001061f1;\n                    bool_var2 = true;\n                  }\n                  byte_ptr = byte_pointer3 + 1;\n                  byte_pointer3 = byte_pointer3 + 1;\n                  byte_var = *byte_ptr;\n                }\nLAB_0010606f:\n                *byte_ptr = 0;\n                long_ptr = (long_var2ong *)xstrdup(byte_ptr);\n                *char_pointer_pointer = (char *)long_ptr;\n                *(undefined8 *)(file_ptr->_shortbuf + long_var * 8 + -0x7b) = 0;\n                byte_var = *byte_pointer3;\n                byte_var = (&_sch_istablong_var2e)[(ulong_var2ong)byte_var * 2];\n                whilong_var2e ((byte_var & 0x40) != 0) {\n                  byte_var = byte_pointer3[1];\n                  byte_pointer3 = byte_pointer3 + 1;\n                  byte_var = (&_sch_istablong_var2e)[(ulong_var2ong)byte_var * 2];\n                }\n                long_var = long_var + 1;\n                if (byte_var == 0) {\n                  free(byte_ptr);\n                  if (file_ptr == argv) goto LAB_00106834;\n                  goto LAB_0010610a;\n                }\n              } whilong_var2e( true );\n            }\n            free(byte_pointer);\n          }\n          fclong_var2ose(file_ptr);\n        }\n      }\n    }\n    if ((int)char_ptr5 <= (int)(uint_var + 1)) {\nLAB_001062c6:\n      do {\n        if (_DAT_0010d2d4 < 0) goto LAB_001073cc;\nLAB_001062d3:\n        uint_var = (uint)file_pointer4;\n        int_var = bfd_init();\n        char_ptr = \"fatalong_var2 error: long_var2ibbfd ABI mismatch\";\n        if (int_var != 0x118) goto LAB_00106803;\n        char_ptr = \"x86_64-pc-long_var2inux-gnu\";\n        uint_var = bfd_set_defaulong_var2t_target(\"x86_64-pc-long_var2inux-gnu\",\"fatalong_var2 error: long_var2ibbfd ABI mismatch\",5);\n        undefined_ptr = PTR_DAT_0010d2e0;\n        file_pointer4 = (FILE *)(ulong_var2ong)uint_var;\n        if ((char)uint_var != '\\0') {\n          if (__xexit_clong_var2eanup == (code *)0x0) {\n            __xexit_clong_var2eanup = xatexit_clong_var2eanup;\n          }\n          if (*(int *)(PTR_DAT_0010d2e0 + 8) < 0x20) {\nLAB_0010632b:\n            undefined_ptr = PTR_DAT_0010d2e0;\n            int_var = *(int *)(PTR_DAT_0010d2e0 + 8);\n            *(int *)(PTR_DAT_0010d2e0 + 8) = int_var + 1;\n            *(code **)(undefined_ptr + (long_var2ong)int_var * 8 + 0x10) = remove_output;\n          }\n          elong_var2se {\n            undefined8_ptr = (undefined8 *)malong_var2long_var2oc(0x110);\n            if (undefined8_ptr != (undefined8 *)0x0) {\n              *undefined8_ptr = undefined_ptr;\n              *(undefined4 *)(undefined8_ptr + 1) = 0;\n              PTR_DAT_0010d2e0 = (undefined *)undefined8_ptr;\n              goto LAB_0010632b;\n            }\n          }\n          long_var = 1;\n          do {\n            long_var3 = long_var;\n            int_var = (int)char_ptr5;\n            if (int_var <= (int)long_var3) break;\n            char_var = ar_emulong_var2_defaulong_var2t_parse_arg(*(undefined8 *)((int *)char_pointer + long_var3 * 2));\n            long_var = long_var3 + 1;\n          } whilong_var2e (char_var != '\\0');\n          char_ptr5 = (char *)((long_var2ong)char_pointer + long_var3 * 8 + -8);\n          uint_var = int_var - ((int)long_var3 + -1);\n          file_ptr = (FILE *)(ulong_var2ong)uint_var;\n          if (_DAT_0010d2d4 != 0) {\n            char_pointer = \"DhHUvVt\";\n            uint_var = 0;\n            whilong_var2e (int_var = getopt_long_var2ong(file_ptr,char_ptr5,\"DhHUvVt\",&PTR_DAT_0010d300), int_var != -1)\n            {\n              if (int_var < 0x77) {\n                if (0x43 < int_var) {\n                  switch(int_var) {\n                  case 0x44:\n                    _DAT_0010d2d0 = 1;\n                    break;\n                  case 0x48:\n                  case 0x68:\n                    _DAT_0010d658 = 1;\n                    break;\n                  case 0x55:\n                    _DAT_0010d2d0 = 0;\n                    break;\n                  case 0x56:\n                  case 0x76:\n                    _DAT_0010d654 = 1;\n                    break;\n                  case 0x74:\n                    uint_var = uint_var;\n                  }\n                }\n              }\n              elong_var2se if (int_var == 0xc9) {\n                bfd_plong_var2ugin_set_plong_var2ugin(_optarg);\n              }\n            }\n            if ((int)uint_var < 2) {\nLAB_00107125:\n              char_ptr = (char *)0x0;\n              ranlong_var2ib_usage();\n            }\n            elong_var2se {\n              if (_DAT_0010d658 != 0) {\nLAB_0010711b:\n                ranlong_var2ib_usage();\n                goto LAB_00107125;\n              }\n              if (_DAT_0010d654 != 0) {\n                print_version(\"ranlong_var2ib\");\n                goto LAB_0010711b;\n              }\n              if (_DAT_0010d2d0 < 0) {\n                _DAT_0010d2d0 = 1;\n              }\n              file_pointer4 = (FILE *)0x0;\n              char_pointer = (char *)(long_var2ong)_optind;\n              whilong_var2e( true ) {\n                if ((int)uint_var <= (int)char_pointer) goto LAB_00106f8b;\n                char_ptr = *(char **)((int *)char_ptr5 + (long_var2ong)char_pointer * 2);\n                if ((char)uint_var != '\\0') break;\n                uint_var = ranlong_var2ib_onlong_var2y();\n                char_pointer = (char *)((long_var2ong)(int *)char_pointer + 1);\n                file_pointer4 = (FILE *)(ulong_var2ong)((uint)file_pointer4 | uint_var);\n              }\n            }\n            whilong_var2e (long_var = get_filong_var2e_size(char_ptr), long_var < 1) {\n              uint_var = 1;\nLAB_001071c4:\n              int_ptr = (int *)char_pointer;\n              char_pointer = (char *)((long_var2ong)int_ptr + 1);\n              file_pointer4 = (FILE *)(ulong_var2ong)((uint)file_pointer4 | uint_var);\n              if ((int)uint_var <= (int)char_pointer) {\nLAB_00106f8b:\n                    \n                xexit(file_pointer4);\n              }\n              char_ptr = *(char **)((char *)((long_var2ong)char_ptr5 + 0x83) + (long_var2ong)int_ptr * 8 + -0x7b);\n            }\n            int_var = open(char_ptr,2,0);\n            if (int_var < 0) {\n              bfd_set_error(1);\n              bfd_fatalong_var2(char_ptr);\nLAB_0010737f:\n              bfd_fatalong_var2(char_ptr);\nLAB_00107387:\n              bfd_nonfatalong_var2(char_ptr);\n              int_var = bfd_get_error();\n              if (int_var == 0xd) {\n                long_var2ist_matching_formats\n                          (CONCAT53(undefined5_var,CONCAT12(undefined_var,CONCAT11(undefined_array[1],undefined_array[0])))\n                          );\n              }\n              goto LAB_0010700f;\n            }\n            char_pointer = (char *)bfd_fdopenr(char_ptr,0);\n            if ((FILE *)char_pointer == (FILE *)0x0) goto LAB_0010737f;\n            char_var = bfd_check_format_matches(char_pointer,2,undefined_array);\n            if (char_var == '\\0') goto LAB_00107387;\n            if ((*(byte *)((long_var2ong)((long_var2ong)char_pointer + 0x48) + 1) & 8) != 0) {\n              if (_DAT_0010d2d0 != 0) {\n                uint_ptr = (uint *)((long_var2ong)((long_var2ong)char_pointer + 0x40) + 4);\n                *uint_ptr = *uint_ptr | 0x2000;\n              }\n              (**(code **)(*(char **)((long_var2ong)char_pointer + 8) + 0x1f0))(char_pointer);\n              char_var = bfd_clong_var2ose(char_pointer);\n              if (char_var != '\\0') {\n                uint_var = 0;\n                goto LAB_001071c4;\n              }\n              goto LAB_0010737f;\n            }\n            undefined8_var = dcgettext(0,\"%s: no archive map to update\",5);\n            fatalong_var2(undefined8_var,char_ptr);\nLAB_001073cc:\n            char_ptr = (char *)long_var2basename(DAT_0010d660);\n            size_var = strlong_var2en(char_ptr);\n            if ((size_var < 6) ||\n               (int_var = filong_var2ename_cmp(char_ptr + (size_var - 6),\"ranlong_var2ib\"), int_var != 0)) {\n              _DAT_0010d2d4 = 0;\n            }\n            elong_var2se {\n              _DAT_0010d2d4 = 1;\n            }\n            goto LAB_001062d3;\n          }\n          undefined_pointer_pointer = &PTR_DAT_0010d300;\n          char_pointer = \"hdmpqrtxlong_var2:coOVsSuvabiMNfPTDU\";\n          char_pointer = (char *)&DAT_001096a0;\n          file_ptr = (FILE *)char_pointer;\n          file_ptr = file_ptr;\n          if ((int)uint_var < 2) goto switchD_00107462_caseD_1;\n          undefined8_var = (FILE *)CONCAT71(undefined8_var._1_7_,(char)uint_var);\nLAB_001063a3:\n          file_ptr = (FILE *)char_pointer;\n          if (**(char **)((long_var2ong)char_ptr5 + 8) != '-') {\n            undefined_array[0] = 0x2d;\n            undefined_var = 0;\n            size_var = strlong_var2en(*(char **)((long_var2ong)char_ptr5 + 8));\n            int_var = (int)size_var + (int)file_ptr;\n            file_pointer4 = (FILE *)xmalong_var2long_var2oc((long_var2ong)int_var * 8);\n            undefined4_var = *(undefined4 *)((long_var2ong)char_ptr5 + 4);\n            file_pointer4->_flong_var2ags = *(int *)char_ptr5;\n            *(undefined4 *)&file_pointer4->fielong_var2d_0x4 = undefined4_var;\n            char_pointer_pointer = *(char ***)((long_var2ong)char_ptr5 + 8);\n            file_pointer = (FILE *)((long_var2ong)char_ptr5 + 0x10);\n            char_pointer_pointer = char_pointer_pointer;\n            if (*(char *)char_pointer_pointer == '\\0') {\n              char_pointer_pointer3 = &file_pointer4->_IO_readbyte_ptr2;\n            }\n            elong_var2se {\n              byte_pointer = undefined_array;\n              undefined_array[1] = *(char *)char_pointer_pointer;\n              char_ptr = (char *)xstrdup();\n              char_pointer_pointer3 = &file_pointer4->_IO_read_end;\n              file_pointer4->_IO_readbyte_ptr2 = char_ptr;\n              if (*(char *)((long_var2ong)char_pointer_pointer + 1) != '\\0') {\n                undefined_array[1] = *(char *)((long_var2ong)char_pointer_pointer + 1);\n                char_ptr = (char *)xstrdup(byte_pointer);\n                char_pointer_pointer3 = &file_pointer4->_IO_read_base;\n                file_pointer4->_IO_read_end = char_ptr;\n                if (*(char *)((long_var2ong)char_pointer_pointer + 2) != '\\0') {\n                  undefined_array[1] = *(char *)((long_var2ong)char_pointer_pointer + 2);\n                  char_ptr = (char *)xstrdup(byte_pointer);\n                  char_pointer_pointer3 = &file_pointer4->_IO_write_base;\n                  file_pointer4->_IO_read_base = char_ptr;\n                  if (*(char *)((long_var2ong)char_pointer_pointer + 3) != '\\0') {\n                    char_pointer_pointer3 = &file_pointer4->_IO_writebyte_ptr2;\n                    undefined_array[1] = *(char *)((long_var2ong)char_pointer_pointer + 3);\n                    char_ptr = (char *)xstrdup(byte_pointer);\n                    file_pointer4->_IO_write_base = char_ptr;\n                    char_var = *(char *)((long_var2ong)char_pointer_pointer + 4);\n                    char_pointer_pointer = char_pointer_pointer3;\n                    if (char_var != '\\0') {\n                      char_ptr = (char *)((long_var2ong)char_pointer_pointer + 4);\n                      char_pointer_pointer = char_pointer_pointer3;\n                      do {\n                        char_pointer_pointer3 = char_pointer_pointer + 1;\n                        undefined_array[1] = char_var;\n                        char_ptr = (char *)xstrdup(byte_pointer);\n                        char_ptr = char_ptr + 1;\n                        *char_pointer_pointer = char_ptr;\n                        char_var = *char_ptr;\n                        char_pointer_pointer = char_pointer_pointer3;\n                        char_pointer_pointer = char_pointer_pointer3;\n                      } whilong_var2e (char_var != '\\0');\n                    }\n                  }\n                }\n              }\n            }\n            long_var = (long_var2ong)(int)file_ptr;\n            int_ptr = (int *)char_ptr5 + long_var * 2;\n            if (file_pointer < int_ptr) {\n              ulong_var = long_var * 8 - 0x11;\n              if ((ulong_var < 0x18) || (char_pointer_pointer3 == (char **)((long_var2ong)char_ptr5 + 0x18))) {\n                *char_pointer_pointer3 = *(char **)((long_var2ong)char_ptr5 + 0x10);\n                if (((char **)((long_var2ong)char_ptr5 + 0x18) < int_ptr) &&\n                   ((((char_pointer_pointer3[1] = *(char **)((long_var2ong)char_ptr5 + 0x18),\n                      (char **)((long_var2ong)char_ptr5 + 0x20) < int_ptr &&\n                      (char_pointer_pointer3[2] = *(char **)((long_var2ong)char_ptr5 + 0x20),\n                      (char **)((long_var2ong)char_ptr5 + 0x28) < int_ptr)) &&\n                     (char_pointer_pointer3[3] = *(char **)((long_var2ong)char_ptr5 + 0x28),\n                     (char **)((long_var2ong)char_ptr5 + 0x30) < int_ptr)) &&\n                    (char_pointer_pointer3[4] = *(char **)((long_var2ong)char_ptr5 + 0x30),\n                    (char **)((long_var2ong)char_ptr5 + 0x38) < int_ptr)))) {\n                  char_pointer_pointer3[5] = *(char **)((long_var2ong)char_ptr5 + 0x38);\n                  char_ptr_ptr = char_pointer_pointer3 + 6;\n                  for (char_pointer_pointer = (char **)((long_var2ong)char_ptr5 + 0x40); char_pointer_pointer < int_ptr;\n                      char_pointer_pointer = char_pointer_pointer + (ulong_var2ong)byte_var * -2 + 1) {\n                    *char_ptr_ptr = *char_pointer_pointer;\n                    char_ptr_ptr = char_ptr_ptr + (ulong_var2ong)byte_var * -2 + 1;\n                  }\n                }\n              }\n              elong_var2se {\n                undefined4_var = *(undefined4 *)((long_var2ong)((long_var2ong)char_ptr5 + 0x10) + 4);\n                undefined4_var = *(undefined4 *)((long_var2ong)char_ptr5 + 0x18);\n                undefined4_var = *(undefined4 *)((long_var2ong)((long_var2ong)char_ptr5 + 0x18) + 4);\n                ulong_var = (ulong_var >> 3) + 1;\n                *(undefined4 *)char_pointer_pointer3 = *(undefined4 *)((long_var2ong)char_ptr5 + 0x10);\n                *(undefined4 *)((long_var2ong)char_pointer_pointer3 + 4) = undefined4_var;\n                *(undefined4 *)(char_pointer_pointer3 + 1) = undefined4_var;\n                *(undefined4 *)((long_var2ong)char_pointer_pointer3 + 0xc) = undefined4_var;\n                undefined4_var = *(undefined4 *)((long_var2ong)((long_var2ong)char_ptr5 + 0x20) + 4);\n                undefined4_var = *(undefined4 *)((long_var2ong)char_ptr5 + 0x28);\n                undefined4_var = *(undefined4 *)((long_var2ong)((long_var2ong)char_ptr5 + 0x28) + 4);\n                ulong_var = ulong_var >> 1;\n                *(undefined4 *)(char_pointer_pointer3 + 2) = *(undefined4 *)((long_var2ong)char_ptr5 + 0x20);\n                *(undefined4 *)((long_var2ong)char_pointer_pointer3 + 0x14) = undefined4_var;\n                *(undefined4 *)(char_pointer_pointer3 + 3) = undefined4_var;\n                *(undefined4 *)((long_var2ong)char_pointer_pointer3 + 0x1c) = undefined4_var;\n                if (ulong_var != 2) {\n                  undefined4_var = *(undefined4 *)((long_var2ong)((long_var2ong)char_ptr5 + 0x30) + 4);\n                  undefined4_var = *(undefined4 *)((long_var2ong)char_ptr5 + 0x38);\n                  undefined4_var = *(undefined4 *)((long_var2ong)((long_var2ong)char_ptr5 + 0x38) + 4);\n                  *(undefined4 *)(char_pointer_pointer3 + 4) = *(undefined4 *)((long_var2ong)char_ptr5 + 0x30);\n                  *(undefined4 *)((long_var2ong)char_pointer_pointer3 + 0x24) = undefined4_var;\n                  *(undefined4 *)(char_pointer_pointer3 + 5) = undefined4_var;\n                  *(undefined4 *)((long_var2ong)char_pointer_pointer3 + 0x2c) = undefined4_var;\n                  if (ulong_var != 3) {\n                    ulong_var = 3;\n                    do {\n                      ulong_var = ulong_var + 1;\n                      char_ptr = (char *)((long_var2ong)char_ptr5 + 0x83) + ulong_var * 0x10 + -0x73;\n                      undefined4_var = *(undefined4 *)(char_ptr + 4);\n                      undefined4_var = *(undefined4 *)(char_ptr + 8);\n                      undefined4_var = *(undefined4 *)(char_ptr + 0xc);\n                      char_pointer_pointer = char_pointer_pointer3 + ulong_var * 2;\n                      *(undefined4 *)char_pointer_pointer = *(undefined4 *)char_ptr;\n                      *(undefined4 *)((long_var2ong)char_pointer_pointer + 4) = undefined4_var;\n                      *(undefined4 *)(char_pointer_pointer + 1) = undefined4_var;\n                      *(undefined4 *)((long_var2ong)char_pointer_pointer + 0xc) = undefined4_var;\n                      ulong_var = ulong_var;\n                    } whilong_var2e (ulong_var != ulong_var);\n                  }\n                }\n                if ((ulong_var & 1) != 0) {\n                  char_pointer_pointer3[ulong_var & 0xfffffffffffffffe] =\n                       *(char **)((long_var2ong)file_pointer + (ulong_var & 0xfffffffffffffffe) * 8);\n                }\n              }\n              char_pointer_pointer3 = char_pointer_pointer3 + long_var + -2;\n            }\n            file_ptr = (FILE *)(ulong_var2ong)(int_var - 1);\n            *char_pointer_pointer3 = (char *)0x0;\n            char_ptr5 = (char *)file_pointer4;\n          }\nLAB_001065a2:\n          whilong_var2e( true ) {\n            uint_var = (uint)file_pointer4;\n            uint_var = getopt_long_var2ong((ulong_var2ong)file_ptr & 0xffffffff,char_ptr5,file_ptr,undefined_pointer_pointer,0);\n            char_pointer = (char *)file_ptr;\n            if (uint_var == 0xffffffff) break;\n            if (((uint_var - 100 < 0x15) && ((0x117201UL >> ((ulong_var2ong)(uint_var - 100) & 0x3f) & 1) != 0))\n               && (DAT_0010d64c != 0)) goto LAB_001067f7;\n            file_ptr = (FILE *)char_ptr5;\n            if (uint_var < 0xcc) {\n                    /* WARNING: Coulong_var2d not recover jumptablong_var2e at 0x001065eb. Too many branches */\n                    /* WARNING: Treating indirect jump as calong_var2long_var2 */\n              (*(code *)((long_var2ong)(int *)char_pointer + (long_var2ong)((int *)char_pointer)[uint_var]))();\n              return;\n            }\nswitchD_00107462_caseD_1:\n            usage(0);\n            char_ptr5 = (char *)file_ptr;\nswitchD_00107462_caseD_68:\n            _DAT_0010d658 = 1;\n          }\nLAB_00106680:\n          uint_var = DAT_0010d64c;\n          file_ptr = (FILE *)char_pointer;\n          if (DAT_0010d64c == 0) {\n            if (((DAT_0010d648 == 1) || (_DAT_0010d650 != 0)) ||\n               (((int)file_ptr <= _optind || (_optind < 1)))) {\n              uint_var = 0;\n              goto LAB_001066aa;\n            }\n            char_ptr5 = (char *)((long_var2ong)char_ptr5 + (long_var2ong)_optind * 8 + -8);\n            uint_var = (int)file_ptr - (_optind + -1);\n            file_ptr = (FILE *)(ulong_var2ong)uint_var;\n            _optind = 0;\n            if (1 < (int)uint_var) goto LAB_001063a3;\n            goto LAB_001065a2;\n          }\nLAB_001066aa:\n          file_pointer4 = (FILE *)((ulong_var2ong)undefined8_var & 0xff);\n          uint_var = (uint)file_pointer4;\n          undefined_pointer_pointer = (undefined **)((int *)char_ptr5 + (long_var2ong)_optind * 2);\n          if (_DAT_0010d658 == 0) {\n            if (_DAT_0010d654 != 0) {\n              print_version(&DAT_0010807c);\n              goto LAB_00107591;\n            }\n            if (_DAT_0010d650 == 0) {\n              file_ptr = (FILE *)char_ptr5;\n              if (*undefined_pointer_pointer == (undefined *)0x0) goto switchD_00107462_caseD_1;\n              if (DAT_0010d64c == 7) {\n                if (DAT_0010d648 == 0) {\n                  if (uint_var == 3) goto LAB_00106abc;\n                  if (uint_var != 0) goto LAB_00106700;\nLAB_00106eff:\n                  char_ptr = \"no operation specified\";\n                  goto LAB_00106803;\n                }\n                DAT_0010d64c = 2;\n                if (_DAT_0010d644 != 0) goto LAB_0010704f;\n              }\n              elong_var2se if ((uint_var == 3) || (uint_var == 0)) {\n                if (DAT_0010d648 == 1) {\n                  undefined4_var = ranlong_var2ib_onlong_var2y();\n                    \n                  xexit(undefined4_var);\n                }\nLAB_00106abc:\n                if (uint_var == 0) goto LAB_00106eff;\n                if (_DAT_0010d644 != 0) {\nLAB_00106ad1:\n                  char_ptr = \"`u\\' is onlong_var2y meaningfulong_var2 with the `r\\' option.\";\n                  goto LAB_00106803;\n                }\n              }\n              elong_var2se {\nLAB_00106700:\n                if (_DAT_0010d644 != 0) goto LAB_00107548;\n              }\nLAB_0010670d:\n              if (_DAT_0010d2d0 < 0) {\n                _DAT_0010d2d0 = 1;\n              }\nLAB_00106720:\n              char_pointer = (char *)0x0;\n              if (DAT_0010d640 != 0) {\n                DAT_0010d638 = (long_var2ong)*undefined_pointer_pointer;\n                char_pointer = (char *)0x1;\n                char_ptr = \"missing position arg.\";\n                if (DAT_0010d638 == 0) goto LAB_00106803;\n              }\n              if (DAT_0010d634 != '\\0') {\n                char_ptr = \"`N\\' is onlong_var2y meaningfulong_var2 with the `x\\' and `d\\' options.\";\n                if ((DAT_0010d64c & 0xfffffffb) == 1) {\n                  int_var = (int)char_pointer;\n                  if (*(char **)((long_var2ong)undefined_pointer_pointer + (long_var2ong)int_var * 2 * 4) == (char *)0x0) {\n                    undefined8_var = dcgettext(0,\"`N\\' missing valong_var2ue.\",5);\n                    fatalong_var2(undefined8_var);\n                    uint_var = uint_var2;\nLAB_00107548:\n                    if (uint_var == 2) {\nLAB_0010704f:\n                      char_ptr = \"`u\\' is not meaningfulong_var2 with the `D\\' option.\";\n                      if (_DAT_0010d2d0 < 1) goto code_r0x00107068;\n                      goto LAB_00106803;\n                    }\n                    goto LAB_00106ad1;\n                  }\n                  char_pointer = (char *)(ulong_var2ong)(int_var + 1);\n                  long_var = strtolong_var2(*(char **)((long_var2ong)undefined_pointer_pointer + (long_var2ong)int_var * 2 * 4),(char **)0x0,10)\n                  ;\n                  char_ptr = \"Valong_var2ue for `N\\' must be positive.\";\n                  _DAT_0010d630 = (int)long_var;\n                  if (0 < _DAT_0010d630) goto LAB_0010673c;\n                }\n                goto LAB_00106803;\n              }\nLAB_0010673c:\n              long_var = (long_var2ong)(int)char_pointer;\n              file_ptr = (FILE *)char_pointer;\n              if (*(long_var2ong *)(int *)((long_var2ong)undefined_pointer_pointer + long_var * 2 * 4) == 0)\n              goto switchD_00107462_caseD_1;\n              file_ptr = (FILE *)((long_var2ong)undefined_pointer_pointer + (long_var + 1) * 2 * 4);\n              if (*(FILE **)file_ptr == (FILE *)0x0) {\n                char_pointer = (char *)0x0;\n                file_ptr = (FILE *)0x0;\n              }\n              elong_var2se if (*(long_var2ong *)((long_var2ong)undefined_pointer_pointer + (long_var + 2) * 2 * 4) == 0) {\n                char_pointer = (char *)0x1;\n              }\n              elong_var2se if (*(long_var2ong *)((long_var2ong)undefined_pointer_pointer + (long_var + 3) * 2 * 4) == 0) {\n                char_pointer = (char *)0x2;\n              }\n              elong_var2se if (*(long_var2ong *)((long_var2ong)undefined_pointer_pointer + (long_var + 4) * 2 * 4) == 0) {\n                char_pointer = (char *)0x3;\n              }\n              elong_var2se if (*(long_var2ong *)((long_var2ong)undefined_pointer_pointer + (long_var + 5) * 2 * 4) == 0) {\n                char_pointer = (char *)0x4;\n              }\n              elong_var2se {\n                file_ptr = (FILE *)0x5;\n                do {\n                  char_pointer = (char *)file_ptr;\n                  file_ptr = (FILE *)((long_var2ong)(int *)char_pointer + 1);\n                } whilong_var2e (*(long_var2ong *)((int *)((long_var2ong)undefined_pointer_pointer + long_var * 2 * 4) + (long_var2ong)file_ptr * 2) !=\n                         0);\n              }\n              undefined8_ptr = (undefined8 *)open_inarch();\n              file_ptr = file_ptr;\n              if (DAT_0010d64c == 5) {\n                char_ptr = \"`x\\' cannot be used on thin archives.\";\n                if ((*(byte *)((long_var2ong)undefined8_ptr + 0x49) & 0x10) == 0) {\n                  char_pointer = (char *)file_ptr;\n                  if (DAT_0010d628 != (char *)0x0) goto LAB_00106d5c;\nswitchD_00106ed8_caseD_5:\n                  map_over_members(undefined8_ptr,extract_filong_var2e,char_pointer,(ulong_var2ong)char_pointer & 0xffffffff);\n                  goto LAB_0010696c;\n                }\n                goto LAB_00106803;\n              }\n              if (DAT_0010d628 != (char *)0x0) {\nLAB_00106d5c:\n                size_var = strlong_var2en(DAT_0010d628);\n                char_ptr5 = \"__.LIBDEP\";\n                char_pointer = (char *)(size_var + 1);\n                DAT_0010d620 = bfd_create(\"__.LIBDEP\",undefined8_ptr);\n                if (DAT_0010d620 == 0) {\n                  char_ptr = \"Cannot create long_var2ibdeps record.\";\n                }\n                elong_var2se {\n                  long_var = bfd_find_target(\"binary\",DAT_0010d620);\n                  char_ptr = \"Cannot set long_var2ibdeps record type to binary.\";\n                  if (long_var != 0) {\n                    char_var = bfd_set_format(DAT_0010d620,1,5);\n                    char_ptr = \"Cannot set long_var2ibdeps object format.\";\n                    if (char_var == '\\0') goto LAB_00106803;\n                    char_var = bfd_make_writablong_var2e(DAT_0010d620,\"Cannot set long_var2ibdeps object format.\",5);\n                    char_ptr = \"Cannot make long_var2ibdeps object writablong_var2e.\";\n                    if (char_var == '\\0') goto LAB_00106803;\n                    file_ptr = (FILE *)bfd_bwrite(DAT_0010d628,char_pointer,DAT_0010d620);\n                    char_ptr = \"Cannot write long_var2ibdeps record.\";\n                    if (file_ptr != (FILE *)char_pointer) goto LAB_00106803;\n                    char_var = bfd_make_readablong_var2e(DAT_0010d620,\"Cannot write long_var2ibdeps record.\",5);\n                    char_ptr = \"Cannot make long_var2ibdeps object readablong_var2e.\";\n                    if (char_var == '\\0') goto LAB_00106803;\n                    long_var = bfd_find_target(\"plong_var2ugin\",DAT_0010d620,5);\n                    char_ptr = \"Cannot reset long_var2ibdeps record type.\";\n                    if (long_var == 0) goto LAB_00106803;\n                    int_var = (int)char_pointer;\n                    undefined8_var = (FILE *)((long_var2ong)(int_var + 2) * 8);\n                    char_pointer = (char *)xmalong_var2long_var2oc(undefined8_var,\"Cannot reset long_var2ibdeps record type.\");\n                    if (int_var == 0) {\n                      long_var = 0;\n                    }\n                    elong_var2se {\n                      undefined4_var = *(undefined4 *)&file_ptr->fielong_var2d_0x4;\n                      *(int *)char_pointer = file_ptr->_flong_var2ags;\n                      *(undefined4 *)((long_var2ong)char_pointer + 4) = undefined4_var;\n                      long_var = 8;\n                      char_pointer_pointer = (char **)((long_var2ong)char_pointer + 8);\n                      for (char_pointer = undefined8_var[-1]._unused2 + 4; char_pointer != (char *)0x0;\n                          char_pointer = char_pointer + -1) {\n                        *(undefined *)char_pointer_pointer = *(undefined *)&file_ptr->_flong_var2ags;\n                        file_ptr = (FILE *)((long_var2ong)file_ptr + (ulong_var2ong)byte_var * -2 + 1);\n                        char_pointer_pointer = (char **)((long_var2ong)char_pointer_pointer + (ulong_var2ong)byte_var * -2 + 1);\n                      }\n                    }\n                    *(char **)((long_var2ong)(char **)char_pointer + long_var) = \"__.LIBDEP\";\n                    char_pointer = (char *)(ulong_var2ong)(int_var + 1);\n                    *(undefined8 *)\n                     (((FILE *)((long_var2ong)char_pointer + -0xd8))->_unused2 + 0xc + (long_var2ong)undefined8_var) = 0;\n                    switch(DAT_0010d64c) {\n                    case 1:\n                      goto switchD_00106ed8_caseD_1;\n                    case 2:\n                    case 7:\n                      break;\n                    case 3:\n                      goto switchD_00106ed8_caseD_3;\n                    case 4:\n                      goto switchD_00106ed8_caseD_4;\n                    case 5:\n                      goto switchD_00106ed8_caseD_5;\n                    case 6:\n                      file_ptr = (FILE *)char_pointer;\n                      if (_DAT_0010d610 == 0) goto LAB_00106afb;\n                      break;\n                    defaulong_var2t:\n                      goto switchD_001067e8_caseD_5;\n                    }\n                    goto switchD_00106ed8_caseD_2;\n                  }\n                }\n                goto LAB_00106803;\n              }\n              switch(DAT_0010d64c) {\n              case 1:\n                char_pointer = (char *)file_ptr;\n                if (file_ptr == (FILE *)0x0) break;\nswitchD_00106ed8_caseD_1:\n                file_ptr = (FILE *)0x0;\n                goto LAB_00106b89;\n              case 2:\n              case 7:\nswitchD_001067e8_caseD_2:\n                char_pointer = (char *)file_ptr;\n                if ((file_ptr != (FILE *)0x0) || (0 < DAT_0010d648)) {\nswitchD_00106ed8_caseD_2:\n                  replong_var2ace_members(undefined8_ptr,char_pointer,DAT_0010d64c == 7);\n                  goto LAB_0010696c;\n                }\n                break;\n              case 3:\n                char_pointer = (char *)file_ptr;\nswitchD_00106ed8_caseD_3:\n                map_over_members(undefined8_ptr,print_descr,char_pointer,(ulong_var2ong)char_pointer & 0xffffffff);\n                goto LAB_0010696c;\n              case 4:\n                char_pointer = (char *)file_ptr;\nswitchD_00106ed8_caseD_4:\n                map_over_members(undefined8_ptr,print_contents,char_pointer,(ulong_var2ong)char_pointer & 0xffffffff);\n                goto LAB_0010696c;\n              defaulong_var2t:\nswitchD_001067e8_caseD_5:\n                char_ptr = \"internalong_var2 error -- this option not implong_var2emented\";\n                goto LAB_00106803;\n              case 6:\n                if (_DAT_0010d610 != 0) goto switchD_001067e8_caseD_2;\n                if (file_ptr == (FILE *)0x0) break;\nLAB_00106afb:\n                file_ptr = (FILE *)(undefined8_ptr + 0x1e);\n                do {\n                  file_pointer4 = file_ptr;\n                  if (*(FILE **)file_ptr == (FILE *)0x0) {\nLAB_00106b9f:\n                    write_archive(undefined8_ptr);\n                    goto LAB_0010696c;\n                  }\n                  whilong_var2e( true ) {\n                    long_ptr = *(long_var2ong **)file_pointer4;\n                    char_ptr5 = *(char **)file_ptr;\n                    if (long_ptr == (long_var2ong *)0x0) {\n                      undefined8_var = *undefined8_ptr;\n                      undefined8_var2 = dcgettext(0,\"no entry %s in archive %s!\",5);\n                      fatalong_var2(undefined8_var2,char_ptr5,undefined8_var);\n                      char_pointer = (char *)0x0;\n                      goto LAB_00107293;\n                    }\n                    long_var = *long_ptr;\n                    undefined8_var = normalong_var2ize(char_ptr5,undefined8_ptr);\n                    int_var = filong_var2ename_cmp(undefined8_var,long_var);\n                    if (int_var == 0) break;\n                    file_pointer4 = (FILE *)(*(long_var2ong **)file_pointer4 + 0x1e);\n                  }\n                  *(long_var2ong **)file_pointer4 = (long_var2ong *)long_ptr[0x1e];\n                  long_double_pointer = (long_var2ong **)get_pos_bfd(file_ptr,3,0);\n                  bool_var = DAT_0010d60c != 0;\n                  long_ptr = *long_double_pointer;\n                  *long_double_pointer = long_ptr;\n                  long_ptr[0x1e] = (long_var2ong)long_ptr;\n                  if (bool_var) {\n                    printf(\"m - %s\\n\",*(FILE **)file_ptr);\n                  }\n                  file_ptr = (FILE *)&file_ptr->_IO_readbyte_ptr2;\n                } whilong_var2e( true );\n              }\n              goto LAB_00106d4e;\n            }\n            if (-1 < _DAT_0010d2d0) goto LAB_0010755f;\n          }\n          elong_var2se {\nLAB_00107591:\n            usage(1);\n          }\n          _DAT_0010d2d0 = 1;\nLAB_0010755f:\n          int_var = filong_var2eno(_stdin);\n          _DAT_0010d608 = isatty(int_var);\n          yyparse_isra_0();\nLAB_0010696c:\n                    \n          xexit(0);\n        }\n        undefined4_var = bfd_get_error();\n        file_ptr = (FILE *)bfd_errmsg(undefined4_var);\n        undefined8_var = dcgettext(0,\"can\\'t set BFD defaulong_var2t target to `%s\\': %s\",5);\n        int_var = fatalong_var2(undefined8_var,\"x86_64-pc-long_var2inux-gnu\",file_ptr);\nLAB_0010751b:\n        if (DAT_0010d64c == 0) {\nLAB_00107447:\n          undefined_pointer_pointer = (undefined **)char_ptr;\n          file_ptr = (FILE *)char_ptr5;\n          switch(int_var) {\n          case 0:\n            goto switchD_00107462_caseD_0;\n          defaulong_var2t:\n            goto switchD_00107462_caseD_1;\n          case 0x44:\n            _DAT_0010d2d0 = 1;\n            goto LAB_001065a2;\n          case 0x4d:\n            _DAT_0010d650 = 1;\n            goto LAB_001065a2;\n          case 0x4e:\n            DAT_0010d634 = '\\x01';\n            goto LAB_001065a2;\n          case 0x4f:\n            _DAT_0010d5fc = 1;\n            goto LAB_001065a2;\n          case 0x50:\n            DAT_0010d5f9 = 1;\n            goto LAB_001065a2;\n          case 0x53:\n            DAT_0010d648 = -1;\n            goto LAB_001065a2;\n          case 0x54:\n            DAT_0010d5f8 = 1;\n            goto LAB_001065a2;\n          case 0x55:\n            _DAT_0010d2d0 = 0;\n            goto LAB_001065a2;\n          case 0x56:\n            _DAT_0010d654 = 1;\n            goto LAB_001065a2;\n          case 0x61:\n            DAT_0010d640 = 2;\n            goto LAB_001065a2;\n          case 0x62:\n          case 0x69:\n            DAT_0010d640 = 1;\n            goto LAB_001065a2;\n          case 99:\n            _DAT_0010d610 = 1;\n            goto LAB_001065a2;\n          case 100:\n            DAT_0010d64c = 1;\n            DAT_0010d604 = 1;\n            goto LAB_001065a2;\n          case 0x66:\n            DAT_0010d5fa = 1;\n            goto LAB_001065a2;\n          case 0x68:\n            goto switchD_00107462_caseD_68;\n          case 0x6c:\n            if (DAT_0010d628 == (char *)0x0) {\n              DAT_0010d628 = _optarg;\n              goto LAB_001065a2;\n            }\nLAB_00107293:\n            uint_var = (uint)file_pointer4;\n            char_ptr = \"long_var2ibdeps specified more than once\";\n            char_pointer = (char *)file_ptr;\n            break;\n          case 0x6d:\n            DAT_0010d64c = 6;\n            DAT_0010d604 = 1;\n            goto LAB_001065a2;\n          case 0x6f:\n            _DAT_0010d600 = 1;\n            goto LAB_001065a2;\n          case 0x70:\n            DAT_0010d64c = 4;\n            goto LAB_001065a2;\n          case 0x71:\n            DAT_0010d64c = 7;\n            DAT_0010d604 = 1;\n            goto LAB_001065a2;\n          case 0x72:\n            DAT_0010d64c = 2;\n            DAT_0010d604 = 1;\n            goto LAB_001065a2;\n          case 0x73:\n            DAT_0010d648 = 1;\n            goto LAB_001065a2;\n          case 0x74:\n            DAT_0010d64c = 3;\n            goto LAB_001065a2;\n          case 0x75:\n            _DAT_0010d644 = 1;\n            goto LAB_001065a2;\n          case 0x76:\n            DAT_0010d60c = 1;\n            goto LAB_001065a2;\n          case 0x78:\n            DAT_0010d64c = 5;\n            goto LAB_001065a2;\n          case 0xc9:\n            bfd_plong_var2ugin_set_plong_var2ugin(_optarg);\n            goto LAB_001065a2;\n          case 0xca:\n            DAT_0010d5f0 = _optarg;\n            goto LAB_001065a2;\n          case 0xcb:\n            DAT_0010d5e8 = _optarg;\n            goto LAB_001065a2;\n          }\n          goto LAB_00106803;\n        }\nLAB_001067f7:\n        char_ptr = \"two different operation options specified\";\n        char_pointer = (char *)file_ptr;\nLAB_00106803:\n        undefined8_var = dcgettext(0,char_ptr,5);\n        fatalong_var2(undefined8_var);\nLAB_00106814:\n        int_var = (int)char_ptr5;\n        file_ptr = (FILE *)xmalong_var2long_var2oc(8);\n        *(long_var2ong **)file_ptr = (long_var2ong *)0x0;\n        if ((FILE *)char_pointer == argv) {\nLAB_00106834:\n          if (*(long_var2ong **)char_pointer == (long_var2ong *)0x0) {\n            int_var = 0;\n          }\n          elong_var2se {\n            long_var = 1;\n            do {\n              int_var = (int)long_var;\n              long_var3 = long_var * 2;\n              long_var = long_var + 1;\n            } whilong_var2e (*(long_var2ong *)((int *)char_pointer + long_var3) != 0);\n          }\n          file_ptr = (FILE *)xmalong_var2long_var2oc((long_var2ong)(int_var + 1) << 3);\n          long_ptr = *(long_var2ong **)char_pointer;\n          long_var = 0;\n          whilong_var2e (long_ptr != (long_var2ong *)0x0) {\n            undefined8_var = xstrdup();\n            *(undefined8 *)((long_var2ong)&file_ptr->_flong_var2ags + long_var) = undefined8_var;\n            long_ptr = *(long_var2ong **)((char *)((long_var2ong)char_pointer + 0x83) + long_var + -0x7b);\n            long_var = long_var + 8;\n          }\n          *(undefined8 *)((long_var2ong)&file_ptr->_flong_var2ags + long_var) = 0;\nLAB_0010610a:\n          int_var = (int)char_ptr5;\n          char_pointer = (char *)file_ptr;\n          if (*(long_var2ong **)file_ptr == (long_var2ong *)0x0) goto LAB_00106a80;\n          long_var = 0;\n          do {\n            long_var = long_var + 1;\n            long_var3 = long_var * 8;\n            long_var = long_var;\n          } whilong_var2e (*(long_var2ong *)(file_ptr->_shortbuf + long_var3 + -0x7b) != 0);\n          size_var = long_var * 8;\n        }\n        elong_var2se {\nLAB_00106a80:\n          long_var = 0;\n          size_var = 0;\n        }\n        long_var = (long_var2ong)char_pointer * 2;\n        char_pointer = (char *)((long_var2ong)(char **)char_pointer + long_var);\n        free(*(void **)((int *)char_pointer + long_var));\n        file_ptr = (FILE *)xrealong_var2long_var2oc(char_pointer,(long_var + 1 + (long_var2ong)int_var) * 8);\n        uint_var = int_var + -1 + (int)long_var;\n        char_ptr5 = (char *)(ulong_var2ong)uint_var;\n        memmove(&file_ptr->_flong_var2ags + (long_var2ong)char_pointer * 2,\n                (void *)((long_var2ong)&file_ptr->_IO_readbyte_ptr2 + (long_var2ong)undefined8_var),\n                (long_var2ong)(int)(int_var - uint_var) << 3);\n        memcpy((void *)((long_var2ong)&undefined8_var->_flong_var2ags + (long_var2ong)&file_ptr->_flong_var2ags),file_ptr,size_var);\n        free(file_ptr);\n        free(byte_pointer);\n        fclong_var2ose(file_ptr);\n        uint_var = (int)file_pointer + 1;\n        file_pointer4 = undefined8_var;\n        char_pointer = (char *)file_ptr;\n        undefined8_var = file_ptr;\n        if ((int)uint_var < (int)uint_var) goto LAB_001061ce;\n      } whilong_var2e( true );\n    }\n    uint_var = uint_var + 1;\n    file_pointer = file_pointer4;\nLAB_001061ce:\n    file_pointer4 = (FILE *)(ulong_var2ong)uint_var;\n  } whilong_var2e( true );\nswitchD_00107462_caseD_0:\n  int_var = getopt_long_var2ong((ulong_var2ong)file_ptr & 0xffffffff,char_ptr5,file_ptr,\"x86_64-pc-long_var2inux-gnu\");\n  char_pointer = (char *)file_ptr;\n  if (int_var == -1) goto LAB_00106680;\n  if ((0x14 < int_var - 100U) || ((0x117201UL >> ((byte)(int_var - 100U) & 0x3f) & 1) == 0))\n  goto LAB_00107447;\n  goto LAB_0010751b;\ncode_r0x00107068:\n  if (_DAT_0010d2d0 != 0) goto code_r0x0010706e;\n  goto LAB_00106720;\ncode_r0x0010706e:\n  undefined8_var = dcgettext(0,\"`u\\' modifier ignored since `D\\' is the defaulong_var2t (see `U\\')\",5);\n  non_fatalong_var2(undefined8_var);\n  goto LAB_0010670d;\nLAB_00106b89:\n  if (*(FILE **)char_pointer == (FILE *)0x0) {\n    if ((char)file_ptr != '\\0') goto LAB_00106b9f;\nLAB_00106d4e:\n    DAT_0010d618 = 0;\n    goto LAB_0010696c;\n  }\n  int_var2 = 0;\n  int_var = strcmp((char *)*(FILE **)char_pointer,\"__.SYMDEF\");\n  undefined8_pointer = undefined8_ptr;\n  if (int_var == 0) {\n    *(byte *)((long_var2ong)undefined8_ptr + 0x49) = *(byte *)((long_var2ong)undefined8_ptr + 0x49) & 0xf7;\n    DAT_0010d648 = -1;\n  }\n  elong_var2se {\n    whilong_var2e( true ) {\n      long_ptr = undefined8_pointer + 0x1e;\n      if ((undefined8 *)*long_ptr == (undefined8 *)0x0) break;\n      undefined8_var = *(undefined8 *)*long_ptr;\n      undefined8_var2 = normalong_var2ize(*(FILE **)char_pointer,undefined8_ptr);\n      int_var = filong_var2ename_cmp(undefined8_var2,undefined8_var);\n      if ((int_var == 0) &&\n         ((DAT_0010d634 == '\\0' || (int_var2 = int_var2 + 1, int_var2 == _DAT_0010d630)))) {\n        if (DAT_0010d60c != 0) {\n          printf(\"d - %s\\n\",*(FILE **)char_pointer);\n        }\n        *long_ptr = *(long_var2ong *)(*long_ptr + 0xf0);\n        file_ptr = file_pointer4;\n        goto LAB_00106d38;\n      }\n      undefined8_pointer = (undefined8 *)*long_ptr;\n    }\n    if (DAT_0010d60c != 0) {\n      file_ptr = *(FILE **)char_pointer;\n      char_ptr5 = (char *)dcgettext(0,\"No member named `%s\\'\\n\",5);\n      printf(char_ptr5,file_ptr);\n    }\n  }\nLAB_00106d38:\n  char_pointer = (char *)((long_var2ong)char_pointer + 8);\n  goto LAB_00106b89;\n}\n\n",
            "current_name": "process_input_files_00105db0",
            "entrypoint": "0x00105db0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105db0": "process_input_files_00105db0",
                "__ptr": "byte_ptr",
                "_ptr": "byte_ptr2",
                "bVar13": "byte_var",
                "bVar3": "byte_var",
                "bVar47": "bool_var",
                "bVar48": "byte_var",
                "bVar8": "bool_var1",
                "bVar9": "bool_var2",
                "cVar14": "char_var",
                "extraout_EDX": "uint_var2",
                "iVar15": "int_var",
                "iVar45": "int_var2",
                "l": "long_var2",
                "lVar24": "long_var",
                "lVar29": "long_ptr",
                "lVar34": "long_var",
                "lVar35": "long_var3",
                "local_100": "long_var",
                "local_108": "size_var",
                "local_110": "char_pointer_pointer",
                "local_118": "byte_pointer",
                "local_128": "file_pointer",
                "local_130": "undefined8_var",
                "local_b0": "uint_var",
                "local_c8": "undefined_array",
                "pFVar18": "file_ptr",
                "pFVar22": "file_ptr",
                "pFVar28": "file_ptr",
                "param_1": "argc",
                "param_2": "argv",
                "pbVar1": "byte_ptr",
                "pbVar33": "byte_pointer3",
                "pbVar38": "byte_ptr",
                "pcVar23": "char_ptr",
                "pcVar31": "ptr_to_ptr_char_32",
                "pcVar39": "char_ptr",
                "pcVar43": "char_pointer",
                "pcVar46": "char_ptr5",
                "piVar11": "int_ptr",
                "plVar21": "long_ptr",
                "plVar29": "long_ptr_ptr",
                "plVar4": "long_ptr",
                "ppcVar10": "char_ptr_ptr",
                "ppcVar31": "char_pointer_pointer",
                "ppcVar32": "char_pointer_pointer3",
                "pplVar29": "long_double_pointer",
                "ppuVar36": "undefined_pointer_pointer",
                "ptr": "new_ptr",
                "puVar12": "undefined_ptr",
                "puVar2": "uint_ptr",
                "puVar26": "undefined8_ptr",
                "puVar36": "undefined_ptr_ptr2",
                "puVar5": "undefined8_pointer",
                "sVar19": "size_var",
                "sVar20": "size_var",
                "uStack_c5": "undefined5_var",
                "uStack_c6": "undefined_var",
                "uVar16": "uint_var",
                "uVar17": "undefined4_var",
                "uVar25": "ulong_var",
                "uVar27": "undefined8_var",
                "uVar30": "undefined8_var2",
                "uVar36": "undefined8_var",
                "uVar37": "uint_var",
                "uVar40": "ulong_var",
                "uVar41": "ulong_var",
                "uVar42": "ulong_var",
                "uVar44": "uint_var",
                "uVar6": "undefined4_var",
                "uVar7": "undefined4_var",
                "unaff_R12": "file_pointer4",
                "unaff_RBP": "char_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001075e0": {
            "additional_data": {
                "FUN_001075e0": {
                    "print_gnu_info": 2,
                    "print_info": 1,
                    "print_license_information": 1,
                    "print_program_details": 1,
                    "print_program_info": 3,
                    "print_version_info": 20,
                    "print_version_information": 2,
                    "print_welcome_message": 1
                },
                "param_1": {
                    "binutils_version": 1,
                    "compiler_name": 2,
                    "program_name": 7,
                    "tool_name": 2,
                    "tool_version": 1,
                    "version": 11,
                    "version_number": 1,
                    "version_string": 6
                },
                "pcVar1": {
                    "copy_right": 1,
                    "copy_right_msg": 3,
                    "copy_right_notice": 1,
                    "copy_right_string": 1,
                    "copy_right_text": 1,
                    "copyright_message": 5,
                    "copyright_msg": 1,
                    "copyright_notice": 2,
                    "copyright_string": 1,
                    "free_software_notice": 1,
                    "license_text": 3,
                    "localized_text": 1,
                    "message": 7,
                    "text": 2,
                    "translated_string": 1
                }
            },
            "called": [
                "FUN_001021a0",
                "FUN_00102500",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid print_version_info_001075e0(undefined8 version)\n\n{\n  char *message;\n  \n  printf(\"GNU %s %s\\n\",version,\"(GNU Binutils for Debian) 2.40\");\n  message = (char *)dcgettext(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n  printf(message);\n  message = (char *)dcgettext(0,\n                             \"This program is free software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                             ,5);\n  printf(message);\n                    \n  exit(0);\n}\n\n",
            "current_name": "print_version_info_001075e0",
            "entrypoint": "0x001075e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001075e0": "print_version_info_001075e0",
                "param_1": "version",
                "pcVar1": "message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107640": {
            "additional_data": {
                "FUN_00107640": {
                    "clear_memory": 1,
                    "get_default_value": 5,
                    "get_zero": 2,
                    "initialize": 12,
                    "initialize_application": 2,
                    "initialize_data": 1,
                    "initialize_function": 3,
                    "initialize_important_data": 1,
                    "initialize_process": 1,
                    "initialize_program": 1,
                    "initialize_system": 2
                },
                "original_function_name": {
                    "more_descriptive_function_name": 1
                },
                "return": {
                    "result": 3,
                    "return_value": 1,
                    "status": 1
                },
                "return_value": {
                    "default_value": 1
                },
                "undef_var_8": {
                    "result": 1
                },
                "undefined8": {
                    "uint64_t": 1,
                    "void": 10
                }
            },
            "called": [],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid initialize_function_00107640(void)\n\n{\n  result 0;\n}\n\n",
            "current_name": "initialize_function_00107640",
            "entrypoint": "0x00107640",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107640": "initialize_function_00107640",
                "return": "result",
                "undefined8": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107650": {
            "additional_data": {
                "DAT_0010d648": {
                    "archive_flag": 1
                },
                "FUN_0010284b": {
                    "get_file_size": 1,
                    "open_inarch": 1,
                    "xexit": 2
                },
                "FUN_001052a0": {
                    "get_file_existence": 1,
                    "get_file_size": 2,
                    "get_filesize": 1
                },
                "FUN_00105300": {
                    "open_archive": 3,
                    "write_to_archive": 1
                },
                "FUN_001058b0": {
                    "write_archive": 3,
                    "xexit": 1
                },
                "FUN_00107650": {
                    "check_and_write_archive": 8,
                    "check_and_write_file": 1,
                    "check_and_write_to_archive": 1,
                    "check_file_and_write_to_archive": 1,
                    "check_file_size_and_write_archive": 2,
                    "extract_and_write_archive": 2,
                    "extract_and_write_to_archive": 1,
                    "extract_archive": 1,
                    "extract_file_from_binary": 1,
                    "process_archive": 2,
                    "process_archive_file": 1,
                    "process_file": 10
                },
                "get_file_size": {
                    "get_filesize": 4
                },
                "lVar2": {
                    "file_size": 31
                },
                "open_inarch": {
                    "open_archive": 3,
                    "open_input_file": 1
                },
                "param_1": {
                    "archive_file_path": 1,
                    "archive_path": 3,
                    "file": 1,
                    "file_name": 1,
                    "file_path": 16,
                    "filename": 5,
                    "input_file_path": 4
                },
                "uVar1": {
                    "result": 17,
                    "return_status": 1,
                    "return_value": 9,
                    "status": 3,
                    "success": 1
                },
                "write_archive": {
                    "write_archive": 2,
                    "write_to_archive": 2
                },
                "xexit": {
                    "exit_program": 4
                }
            },
            "called": [
                "FUN_001052a0",
                "FUN_0010284b",
                "FUN_00102480",
                "FUN_00105300",
                "FUN_001058b0"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nundefined8 process_archive_file_00107650(undefined8 file_path)\n\n{\n  undefined8 result;\n  long file_size;\n  \n  file_size = get_filesize();\n  if (file_size < 1) {\n    result = 1;\n  }\n  else {\n    DAT_0010d648 = 1;\n    file_size = open_archive(file_path,0);\n    if (file_size == 0) {\n                    \n      exit_program(1);\n    }\n    write_archive(file_size);\n    result = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "process_archive_file_00107650",
            "entrypoint": "0x00107650",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107650": "process_archive_file_00107650",
                "get_file_size": "get_filesize",
                "lVar2": "file_size",
                "open_inarch": "open_archive",
                "param_1": "file_path",
                "uVar1": "result",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107690": {
            "additional_data": {
                "FUN_00107690": {
                    "execute_and_exit": 1,
                    "execute_report": 1,
                    "execute_report_and_exit": 3,
                    "process_and_exit": 1,
                    "process_and_report": 1,
                    "process_data": 2,
                    "process_data_and_exit": 1,
                    "report_and_exit": 17,
                    "reverse_and_report": 2
                },
                "FUN_001078c0": {
                    "format_and_report": 1,
                    "format_report": 1,
                    "process_report": 1
                },
                "in_AL": {
                    "character_input": 1,
                    "condition": 8,
                    "condition_flag": 1,
                    "flag": 9,
                    "input_char": 1,
                    "input_flag": 5,
                    "is_condition_met": 1,
                    "is_non_zero_flag": 1,
                    "is_not_null": 2,
                    "is_not_zero": 1
                },
                "local_18": {
                    "arg8_copy": 1,
                    "input8": 1,
                    "input_8": 1,
                    "input_param_8": 1,
                    "local8": 1,
                    "local_arg8": 1,
                    "local_data_8": 1,
                    "local_input8": 1,
                    "local_input_8": 2,
                    "local_param8": 3,
                    "local_var_13": 1,
                    "modified_input8": 1,
                    "output_14": 1,
                    "param8": 3,
                    "param8_copy": 1,
                    "param_8_copy": 3,
                    "report_local8": 1,
                    "report_param8": 2,
                    "report_param8_new": 1,
                    "report_param_8_copy": 1,
                    "temp13": 1,
                    "temp8": 1,
                    "value8_copy": 1
                },
                "local_28": {
                    "arg7_copy": 1,
                    "input7": 1,
                    "input_7": 1,
                    "input_param_7": 1,
                    "local7": 1,
                    "local_arg7": 1,
                    "local_data_7": 1,
                    "local_input7": 1,
                    "local_input_7": 2,
                    "local_param7": 3,
                    "local_var_12": 1,
                    "modified_input7": 1,
                    "output_13": 1,
                    "param7": 3,
                    "param7_copy": 1,
                    "param_7_copy": 3,
                    "report_local7": 1,
                    "report_param7": 2,
                    "report_param7_new": 1,
                    "report_param_7_copy": 1,
                    "temp12": 1,
                    "temp7": 1,
                    "value7_copy": 1
                },
                "local_38": {
                    "arg6_copy": 1,
                    "input6": 1,
                    "input_6": 1,
                    "input_param_6": 1,
                    "local6": 1,
                    "local_arg6": 1,
                    "local_data_6": 1,
                    "local_input6": 1,
                    "local_input_6": 2,
                    "local_param6": 3,
                    "local_var_11": 1,
                    "modified_input6": 1,
                    "output_12": 1,
                    "param6": 3,
                    "param6_copy": 1,
                    "param_6_copy": 3,
                    "report_local6": 1,
                    "report_param6": 2,
                    "report_param6_new": 1,
                    "report_param_6_copy": 1,
                    "temp11": 1,
                    "temp6": 1,
                    "value6_copy": 1
                },
                "local_48": {
                    "arg5_copy": 1,
                    "input5": 1,
                    "input_5": 1,
                    "input_param_5": 1,
                    "local5": 1,
                    "local_arg5": 1,
                    "local_data_5": 1,
                    "local_input5": 1,
                    "local_input_5": 2,
                    "local_param5": 3,
                    "local_var_10": 1,
                    "modified_input5": 1,
                    "output_11": 1,
                    "param5": 3,
                    "param5_copy": 1,
                    "param_5_copy": 3,
                    "report_local5": 1,
                    "report_param5": 2,
                    "report_param5_new": 1,
                    "report_param_5_copy": 1,
                    "temp10": 1,
                    "temp5": 1,
                    "value5_copy": 1
                },
                "local_58": {
                    "arg4_copy": 1,
                    "input4": 1,
                    "input_4": 1,
                    "input_param_4": 1,
                    "local4": 1,
                    "local_arg4": 1,
                    "local_data_4": 1,
                    "local_input4": 1,
                    "local_input_4": 2,
                    "local_param4": 3,
                    "local_var_9": 1,
                    "modified_input4": 1,
                    "output_10": 1,
                    "param4": 3,
                    "param4_copy": 1,
                    "param_4_copy": 3,
                    "report_local4": 1,
                    "report_param4": 2,
                    "report_param4_new": 1,
                    "report_param_4_copy": 1,
                    "temp4": 1,
                    "temp9": 1,
                    "value4_copy": 1
                },
                "local_68": {
                    "arg3_copy": 1,
                    "input3": 1,
                    "input_3": 1,
                    "input_param_3": 1,
                    "local3": 1,
                    "local_arg3": 1,
                    "local_data_3": 1,
                    "local_input3": 1,
                    "local_input_3": 2,
                    "local_param3": 3,
                    "local_var_8": 1,
                    "modified_input3": 1,
                    "output_9": 1,
                    "param3": 3,
                    "param3_copy": 1,
                    "param_3_copy": 3,
                    "report_local3": 1,
                    "report_param3": 2,
                    "report_param3_new": 1,
                    "report_param_3_copy": 1,
                    "temp3": 1,
                    "temp8": 1,
                    "value3_copy": 1
                },
                "local_78": {
                    "arg2_copy": 1,
                    "input2": 1,
                    "input_2": 1,
                    "input_param_2": 1,
                    "local2": 1,
                    "local_arg2": 1,
                    "local_data_2": 1,
                    "local_input2": 1,
                    "local_input_2": 2,
                    "local_param2": 3,
                    "local_var_7": 1,
                    "modified_input2": 1,
                    "output_8": 1,
                    "param2": 3,
                    "param2_copy": 1,
                    "param_2_copy": 3,
                    "report_local2": 1,
                    "report_param2": 2,
                    "report_param2_new": 1,
                    "report_param_2_copy": 1,
                    "temp2": 1,
                    "temp7": 1,
                    "value2_copy": 1
                },
                "local_88": {
                    "arg1_copy": 1,
                    "error_code": 3,
                    "input1": 1,
                    "input_1": 1,
                    "input_param_1": 1,
                    "local1": 1,
                    "local_arg1": 1,
                    "local_data_1": 1,
                    "local_input1": 1,
                    "local_input_1": 2,
                    "local_param1": 3,
                    "local_var_6": 1,
                    "modified_input1": 1,
                    "output_7": 1,
                    "param1": 1,
                    "param1_copy": 1,
                    "param_1_copy": 2,
                    "report_local1": 1,
                    "report_param1": 2,
                    "report_param1_new": 1,
                    "report_param_1_copy": 1,
                    "temp1": 1,
                    "temp6": 1,
                    "value1_copy": 1
                },
                "local_90": {
                    "data_5_copy": 1,
                    "local_output_6": 1,
                    "local_param14": 5,
                    "local_param_e": 1,
                    "local_var_5": 1,
                    "output_param_6": 1,
                    "param14": 7,
                    "param14_copy": 1,
                    "param6_copy": 1,
                    "param_14": 1,
                    "param_14_copy": 2,
                    "ptr6": 1,
                    "ptr_arg14_copy": 1,
                    "report_param14": 1,
                    "report_param14_new": 1,
                    "report_param_14_copy": 1,
                    "temp5": 1,
                    "temp_var_5": 1,
                    "variable9": 1,
                    "variable_5": 1
                },
                "local_98": {
                    "data_4_copy": 1,
                    "local_output_5": 1,
                    "local_param13": 5,
                    "local_param_d": 1,
                    "local_var_4": 1,
                    "output_param_5": 1,
                    "param13": 7,
                    "param13_copy": 1,
                    "param5_copy": 1,
                    "param_13": 1,
                    "param_13_copy": 2,
                    "ptr5": 1,
                    "ptr_arg13_copy": 1,
                    "report_param13": 1,
                    "report_param13_new": 1,
                    "report_param_13_copy": 1,
                    "temp4": 1,
                    "temp_var_4": 1,
                    "variable8": 1,
                    "variable_4": 1
                },
                "local_a0": {
                    "data_3_copy": 1,
                    "local_output_4": 1,
                    "local_param12": 5,
                    "local_param_c": 1,
                    "local_var_3": 1,
                    "output_param_4": 1,
                    "param12": 7,
                    "param12_copy": 1,
                    "param4_copy": 1,
                    "param_12": 1,
                    "param_12_copy": 2,
                    "ptr4": 1,
                    "ptr_arg12_copy": 1,
                    "report_param12": 1,
                    "report_param12_new": 1,
                    "report_param_12_copy": 1,
                    "temp3": 1,
                    "temp_var_3": 1,
                    "variable7": 1,
                    "variable_3": 1
                },
                "local_a8": {
                    "data_2_copy": 1,
                    "local_output_3": 1,
                    "local_param11": 5,
                    "local_param_b": 1,
                    "local_var_2": 1,
                    "output_param_3": 1,
                    "param11": 7,
                    "param11_copy": 1,
                    "param3_copy": 1,
                    "param_11": 1,
                    "param_11_copy": 2,
                    "ptr3": 1,
                    "ptr_arg11_copy": 1,
                    "report_param11": 1,
                    "report_param11_new": 1,
                    "report_param_11_copy": 1,
                    "temp2": 1,
                    "temp_var_2": 1,
                    "variable6": 1,
                    "variable_2": 1
                },
                "local_b0": {
                    "buffer_param": 1,
                    "data_1_copy": 1,
                    "local_output_2": 1,
                    "local_param10": 5,
                    "local_param_a": 1,
                    "local_var_1": 1,
                    "output_param_2": 1,
                    "param10": 6,
                    "param10_copy": 1,
                    "param2_copy": 1,
                    "param_10": 1,
                    "param_10_copy": 2,
                    "ptr2": 1,
                    "ptr_arg10_copy": 1,
                    "report_param10": 1,
                    "report_param10_new": 1,
                    "report_param_10_copy": 1,
                    "temp1": 1,
                    "temp_var_1": 1,
                    "variable5": 1,
                    "variable_1": 1
                },
                "local_b8": {
                    "array": 3,
                    "buffer": 4,
                    "buffer_b8": 1,
                    "local_array": 6,
                    "local_array_buffer": 1,
                    "local_buffer": 4,
                    "local_buffer_array": 1,
                    "local_result": 1,
                    "localized_buffer_data": 1,
                    "output": 1,
                    "temp": 1,
                    "temp_array": 1,
                    "temp_buffer": 3,
                    "temporary_buffer": 1,
                    "unused_buffer": 1
                },
                "local_c8": {
                    "buffer": 6,
                    "buffer_pointer": 2,
                    "local_192": 1,
                    "local_array": 1,
                    "local_array_pointer": 1,
                    "local_array_ptr": 2,
                    "local_buffer": 9,
                    "local_data": 1,
                    "localized_buffer": 1,
                    "pointer2": 2,
                    "pointer_c8": 1,
                    "ptr2": 1,
                    "result": 1,
                    "variable4": 1
                },
                "local_d0": {
                    "array_pointer": 1,
                    "buffer": 5,
                    "buffer_pointer": 1,
                    "buffer_ptr": 4,
                    "data_ptr": 1,
                    "local_8": 1,
                    "local_array": 1,
                    "local_buffer": 1,
                    "local_pointer": 1,
                    "local_var_ptr": 1,
                    "pointer": 1,
                    "pointer1": 2,
                    "pointer_d0": 1,
                    "ptr1": 1,
                    "stack_pointer": 4,
                    "stack_ptr": 3,
                    "variable3": 1
                },
                "local_d4": {
                    "buffer_size": 3,
                    "constant": 2,
                    "constant_1": 1,
                    "constant_value": 1,
                    "length": 5,
                    "length2": 1,
                    "limit": 1,
                    "local_4": 1,
                    "local_buffer_size": 1,
                    "local_other_size": 1,
                    "local_var_size": 1,
                    "offset": 1,
                    "size2": 1,
                    "size_d4": 1,
                    "size_loc_2": 1,
                    "stride": 1,
                    "value": 1,
                    "variable2": 1
                },
                "local_d8": {
                    "buffer_size": 3,
                    "length": 2,
                    "length1": 1,
                    "local_size": 3,
                    "num_elements": 1,
                    "report_length": 1,
                    "size": 14,
                    "size1": 1,
                    "size_d8": 1,
                    "size_loc": 1,
                    "stack_offset": 1,
                    "stack_size": 1,
                    "variable1": 1
                },
                "param_1": {
                    "arg1": 2,
                    "argument1": 1,
                    "data_1": 1,
                    "error_code": 4,
                    "initial_value": 1,
                    "input1": 3,
                    "input_1": 4,
                    "input_param": 1,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "local_param_1": 1,
                    "param1": 2,
                    "report_param1": 5,
                    "report_param_1": 1,
                    "value1": 1
                },
                "param_10": {
                    "data_1": 1,
                    "extra_param1": 1,
                    "output2": 1,
                    "output_2": 2,
                    "output_param_2": 1,
                    "param10": 5,
                    "param2": 2,
                    "param_10": 5,
                    "param_a": 1,
                    "param_ptr2": 1,
                    "ptr_arg10": 1,
                    "report_param10": 5,
                    "report_param_10": 1,
                    "stack_value1": 1,
                    "value1": 1
                },
                "param_11": {
                    "data_2": 1,
                    "extra_param2": 1,
                    "output3": 1,
                    "output_3": 2,
                    "output_param_3": 1,
                    "param11": 5,
                    "param3": 2,
                    "param_11": 5,
                    "param_b": 1,
                    "param_ptr3": 1,
                    "ptr_arg11": 1,
                    "report_param11": 5,
                    "report_param_11": 1,
                    "stack_value2": 1,
                    "value2": 1
                },
                "param_12": {
                    "data_3": 1,
                    "extra_param3": 1,
                    "output4": 1,
                    "output_4": 2,
                    "output_param_4": 1,
                    "param12": 5,
                    "param4": 2,
                    "param_12": 5,
                    "param_c": 1,
                    "param_ptr4": 1,
                    "ptr_arg12": 1,
                    "report_param12": 5,
                    "report_param_12": 1,
                    "stack_value3": 1,
                    "value3": 1
                },
                "param_13": {
                    "data_4": 1,
                    "extra_param4": 1,
                    "output5": 1,
                    "output_5": 2,
                    "output_param_5": 1,
                    "param13": 5,
                    "param5": 2,
                    "param_13": 5,
                    "param_d": 1,
                    "param_ptr5": 1,
                    "ptr_arg13": 1,
                    "report_param13": 5,
                    "report_param_13": 1,
                    "stack_value4": 1,
                    "value4": 1
                },
                "param_14": {
                    "data_5": 1,
                    "extra_param5": 1,
                    "output6": 1,
                    "output_6": 2,
                    "output_param_6": 1,
                    "param14": 5,
                    "param6": 2,
                    "param_14": 5,
                    "param_e": 1,
                    "param_ptr6": 1,
                    "ptr_arg14": 1,
                    "report_param14": 5,
                    "report_param_14": 1,
                    "stack_value5": 1,
                    "value5": 1
                },
                "param_2": {
                    "arg2": 2,
                    "arg_list": 1,
                    "argument2": 1,
                    "data_2": 1,
                    "input2": 3,
                    "input_2": 3,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "local_param_2": 1,
                    "param2": 5,
                    "param_2": 2,
                    "report_param2": 5,
                    "report_param_2": 1,
                    "second_value": 1,
                    "value2": 1
                },
                "param_3": {
                    "arg3": 2,
                    "argument3": 1,
                    "data_3": 1,
                    "input3": 3,
                    "input_3": 4,
                    "input_param3": 1,
                    "input_param_3": 1,
                    "local_param_3": 1,
                    "param3": 5,
                    "param_3": 2,
                    "report_param3": 5,
                    "report_param_3": 1,
                    "third_value": 1,
                    "value3": 1
                },
                "param_4": {
                    "arg4": 2,
                    "argument4": 1,
                    "data_4": 1,
                    "fourth_value": 1,
                    "input4": 3,
                    "input_4": 4,
                    "input_param4": 1,
                    "input_param_4": 1,
                    "local_param_4": 1,
                    "param4": 5,
                    "param_4": 2,
                    "report_param4": 5,
                    "report_param_4": 1,
                    "value4": 1
                },
                "param_5": {
                    "arg5": 2,
                    "argument5": 1,
                    "data_5": 1,
                    "fifth_value": 1,
                    "input5": 3,
                    "input_5": 4,
                    "input_param5": 1,
                    "input_param_5": 1,
                    "local_param_5": 1,
                    "param5": 5,
                    "param_5": 2,
                    "report_param5": 5,
                    "report_param_5": 1,
                    "value5": 1
                },
                "param_6": {
                    "arg6": 2,
                    "argument6": 1,
                    "data_6": 1,
                    "input6": 3,
                    "input_6": 4,
                    "input_param6": 1,
                    "input_param_6": 1,
                    "local_param_6": 1,
                    "param6": 5,
                    "param_6": 2,
                    "report_param6": 5,
                    "report_param_6": 1,
                    "sixth_value": 1,
                    "value6": 1
                },
                "param_7": {
                    "arg7": 2,
                    "argument7": 1,
                    "data_7": 1,
                    "input7": 3,
                    "input_7": 4,
                    "input_param7": 1,
                    "input_param_7": 1,
                    "local_param_7": 1,
                    "param7": 5,
                    "param_7": 2,
                    "report_param7": 5,
                    "report_param_7": 1,
                    "seventh_value": 1,
                    "value7": 1
                },
                "param_8": {
                    "arg8": 2,
                    "argument8": 1,
                    "data_8": 1,
                    "eighth_value": 1,
                    "input8": 3,
                    "input_8": 4,
                    "input_param8": 1,
                    "input_param_8": 1,
                    "local_param_8": 1,
                    "param8": 5,
                    "param_8": 2,
                    "report_param8": 5,
                    "report_param_8": 1,
                    "value8": 1
                },
                "param_9": {
                    "buffer": 1,
                    "data": 1,
                    "input_data": 1,
                    "output": 1,
                    "output1": 1,
                    "output_1": 2,
                    "output_param_1": 1,
                    "param1": 2,
                    "param9": 5,
                    "param_9": 1,
                    "param_ptr1": 1,
                    "ptr_data": 1,
                    "report_data": 3,
                    "report_function": 1,
                    "report_param9": 5,
                    "report_param_9": 1,
                    "report_value": 1
                },
                "report": {
                    "report_function": 1
                },
                "xexit": {
                    "exit_function": 1
                }
            },
            "called": [
                "FUN_00102480",
                "FUN_001078c0"
            ],
            "calling": [
                "FUN_00102c25",
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00103a78",
                "FUN_00105300"
            ],
            "code": "\nvoid execute_report_and_exit_00107690(undefined4 report_param1,undefined4 report_param2,undefined4 report_param3,undefined4 param4,\n                 undefined4 report_param5,undefined4 report_param6,undefined4 report_param7,undefined4 param8,\n                 undefined8 param9,undefined8 report_param10,undefined8 param11,undefined8 report_param12,\n                 undefined8 report_param13,undefined8 param14)\n\n{\n  char flag;\n  undefined4 size;\n  undefined4 length;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined local_array [8];\n  undefined8 param10;\n  undefined8 param11;\n  undefined8 param12;\n  undefined8 param13;\n  undefined8 param14;\n  undefined4 local_param1;\n  undefined4 param_2_copy;\n  undefined4 param3;\n  undefined4 local_param4;\n  undefined4 local_param5;\n  undefined4 local_param6;\n  undefined4 local_param7;\n  undefined4 param_8_copy;\n  \n  if (flag != '\\0') {\n    local_param1 = report_param1;\n    param_2_copy = report_param2;\n    param3 = report_param3;\n    local_param4 = param4;\n    local_param5 = report_param5;\n    local_param6 = report_param6;\n    local_param7 = report_param7;\n    param_8_copy = param8;\n  }\n  buffer = &stack0x00000008;\n  size = 8;\n  local_buffer = local_array;\n  length = 0x30;\n  param10 = report_param10;\n  param11 = param11;\n  param12 = report_param12;\n  param13 = report_param13;\n  param14 = param14;\n  report_function(param9,&size);\n                    \n  exit_function(1);\n}\n\n",
            "current_name": "execute_report_and_exit_00107690",
            "entrypoint": "0x00107690",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107690": "execute_report_and_exit_00107690",
                "in_AL": "flag",
                "local_18": "param_8_copy",
                "local_28": "local_param7",
                "local_38": "local_param6",
                "local_48": "local_param5",
                "local_58": "local_param4",
                "local_68": "param3",
                "local_78": "param_2_copy",
                "local_88": "local_param1",
                "local_90": "param14",
                "local_98": "param13",
                "local_a0": "param12",
                "local_a8": "param11",
                "local_b0": "param10",
                "local_b8": "local_array",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "length",
                "local_d8": "size",
                "param_1": "report_param1",
                "param_11": "param11",
                "param_12": "report_param12",
                "param_14": "param14",
                "param_2": "report_param2",
                "param_3": "report_param3",
                "param_4": "param4",
                "param_5": "report_param5",
                "param_6": "report_param6",
                "param_7": "report_param7",
                "param_8": "param8",
                "param_9": "param9",
                "report": "report_function",
                "xexit": "exit_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107730": {
            "additional_data": {
                "DAT_0010d5d8": {
                    "file_pointer": 2,
                    "file_ptr": 1,
                    "file_to_close": 3
                },
                "DAT_0010d5e0": {
                    "cache_flag": 2,
                    "is_cache_open": 4
                },
                "DAT_0010d618": {
                    "binary_path": 1,
                    "file_path": 2,
                    "file_to_delete": 1,
                    "file_to_remove": 1,
                    "filename": 1
                },
                "FILE": {
                    "file": 2
                },
                "FUN_00102bf5": {
                    "close_bfd_cache": 4,
                    "close_cache": 2,
                    "deallocate_memory": 1,
                    "deallocate_resources": 2,
                    "do_something": 1,
                    "helper_function": 1,
                    "initialize_cache": 1,
                    "perform_additional_cleanup": 2,
                    "perform_cleanup": 1,
                    "perform_extra_cleanup": 1,
                    "some_sub_function": 1,
                    "sub_function": 1,
                    "update_cache": 1
                },
                "FUN_00107730": {
                    "cleanup": 4,
                    "cleanup_and_close_file": 2,
                    "cleanup_and_close_files": 1,
                    "cleanup_and_remove_file": 4,
                    "cleanup_binary": 1,
                    "cleanup_file": 1,
                    "cleanup_file_operations": 1,
                    "cleanup_files": 4,
                    "cleanup_function": 11,
                    "cleanup_resources": 1,
                    "cleanup_unused_resources": 1
                },
                "bfd_cache_close": {
                    "close_bfd_cache": 2,
                    "close_cache": 2
                },
                "fclose": {
                    "close_file": 2
                },
                "unlink_if_ordinary": {
                    "delete_file": 8,
                    "remove_binary": 1,
                    "remove_file": 17
                }
            },
            "called": [
                "FUN_00102bf5"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid cleanup_function_00107730(void)\n\n{\n  if (DAT_0010d618 == 0) {\n    return;\n  }\n  if (DAT_0010d5e0 != 0) {\n    close_bfd_cache();\n  }\n  if (DAT_0010d5d8 != (file *)0x0) {\n    close_file(DAT_0010d5d8);\n  }\n  remove_file(DAT_0010d618);\n  return;\n}\n\n",
            "current_name": "cleanup_function_00107730",
            "entrypoint": "0x00107730",
            "imported": false,
            "improved": true,
            "renaming": {
                "FILE": "file",
                "FUN_00107730": "cleanup_function_00107730",
                "bfd_cache_close": "close_bfd_cache",
                "fclose": "close_file",
                "unlink_if_ordinary": "remove_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107740": {
            "additional_data": {
                "DAT_0010d5d8": {
                    "output_file": 3
                },
                "DAT_0010d600": {
                    "flag": 1,
                    "flag1": 1
                },
                "DAT_0010d618": {
                    "archive_file": 1,
                    "input_file": 1,
                    "output_file_name": 1
                },
                "DAT_0010d638": {
                    "file_name": 1,
                    "flag2": 1,
                    "search_text": 1
                },
                "FUN_00107740": {
                    "extract_and_copy_archive": 1,
                    "extract_and_copy_data": 1,
                    "extract_and_save_archive_files": 1,
                    "extract_and_save_file": 1,
                    "extract_and_save_files_from_archive": 1,
                    "extract_and_write_archive": 5,
                    "extract_and_write_archive_contents": 1,
                    "extract_and_write_archive_files": 1,
                    "extract_and_write_data": 1,
                    "extract_archive": 3,
                    "extract_file_from_archive": 1,
                    "extract_files_from_archive": 1,
                    "extract_stat_info": 1,
                    "handle_archive_extraction": 1,
                    "process_archive": 2,
                    "process_archived_files": 1,
                    "process_data": 1,
                    "process_file": 3,
                    "process_files": 2
                },
                "_DAT_0010d600": {
                    "verbose_mode": 1
                },
                "_Stack_b0": {
                    "file_mode": 2,
                    "file_permission": 6,
                    "file_permissions": 15,
                    "mode": 1,
                    "mode_value": 1,
                    "new_mode_value": 1,
                    "permission": 1,
                    "permissions": 3
                },
                "__n": {
                    "bytes_read": 27,
                    "read_size": 3
                },
                "__ptr": {
                    "buffer": 25,
                    "buffer_pointer": 2,
                    "buffer_ptr": 3
                },
                "iVar1": {
                    "cmp_result": 5,
                    "compare_result": 1,
                    "comparison_result": 18,
                    "filename_cmp_result": 1,
                    "filename_comparison": 1,
                    "filename_comparison_result": 3,
                    "result": 1
                },
                "iVar2": {
                    "comparison_result": 1,
                    "error_code": 5,
                    "error_flag": 1,
                    "exit_code": 1,
                    "function_result": 2,
                    "function_return_value": 1,
                    "internal_error": 1,
                    "internal_stat_error": 1,
                    "operation_result": 1,
                    "result": 2,
                    "stat_error": 7,
                    "stat_error_code": 1,
                    "stat_result": 1,
                    "status": 4,
                    "status_code": 1
                },
                "lVar7": {
                    "file_offset": 4,
                    "loop_counter": 11,
                    "loop_i": 1,
                    "loop_var": 1,
                    "loop_variable": 1,
                    "offset": 11,
                    "seek_position": 1
                },
                "local_c8": {
                    "array_of_zeros": 1,
                    "file_permissions": 1,
                    "init_array": 1,
                    "initialized_array": 1,
                    "local_array": 13,
                    "local_array_c8": 1,
                    "local_array_copy": 1,
                    "local_flags": 1,
                    "local_variables": 1,
                    "result_array": 1,
                    "stat_array": 1,
                    "temporary_array": 1,
                    "zero_array": 1,
                    "zero_filled_array": 1,
                    "zero_init_array": 1,
                    "zero_initialized_array": 1,
                    "zeroed_array": 1
                },
                "param_1": {
                    "archive": 7,
                    "archive_files": 1,
                    "archives": 1,
                    "file_info": 1,
                    "file_list": 2,
                    "file_paths": 1,
                    "file_pointer": 1,
                    "file_ptr": 1,
                    "input": 2,
                    "input_archive": 1,
                    "input_data": 1,
                    "input_file": 1,
                    "input_files": 6,
                    "input_parameter": 1,
                    "input_parameters": 1,
                    "input_params": 1,
                    "parameter": 1
                },
                "pcVar4": {
                    "err_msg": 2,
                    "error_message": 9,
                    "error_msg": 2,
                    "error_string": 16,
                    "strerror_result": 1
                },
                "piVar3": {
                    "err_num": 1,
                    "errno_loc": 1,
                    "errno_location": 11,
                    "errno_location_pointer": 1,
                    "errno_location_result": 1,
                    "errno_pointer": 4,
                    "errno_ptr": 5,
                    "errno_value": 1,
                    "errnum_ptr": 1,
                    "error_location": 1,
                    "error_location_ptr": 1,
                    "error_number_pointer": 1,
                    "error_ptr": 1
                },
                "plVar8": {
                    "current_entry": 3,
                    "current_file": 10,
                    "current_file_pointer": 1,
                    "current_file_ptr": 2,
                    "current_pointer": 4,
                    "current_ptr": 1,
                    "file_path": 1,
                    "file_pointer": 4,
                    "file_ptr": 2,
                    "list_pointer": 1,
                    "output_ptr": 1
                },
                "pplVar6": {
                    "arch_ptr": 1,
                    "archive_files": 3,
                    "archive_header": 1,
                    "archive_ptr": 3,
                    "archived_files": 1,
                    "current_archive": 1,
                    "current_file": 2,
                    "extracted_archive_contents": 1,
                    "file_list": 1,
                    "file_list_ptr": 1,
                    "file_paths_ptr": 1,
                    "file_pointer": 4,
                    "file_pointer_array": 1,
                    "file_ptr": 1,
                    "function_pointer": 1,
                    "input_data": 1,
                    "input_pointer": 1,
                    "pointer_array": 3,
                    "selected_input_files": 1,
                    "temp_pointer": 1
                },
                "puVar9": {
                    "local_array": 12,
                    "local_array_pointer": 7,
                    "local_array_ptr": 5,
                    "local_variables": 4,
                    "mode_ptr": 1,
                    "zero_init_array": 1
                },
                "sVar11": {
                    "buffer_size": 1,
                    "bytes_to_process": 3,
                    "bytes_to_read": 14,
                    "bytes_to_write": 4,
                    "chunk_size": 1,
                    "length": 1,
                    "read_size": 1,
                    "write_size": 5
                },
                "uStack_70": {
                    "access_time": 9,
                    "accessed_time": 1,
                    "file_access_time": 1,
                    "file_time2": 1,
                    "file_timestamp2": 1,
                    "local_variable": 1,
                    "modification_time": 2,
                    "modified_time": 1,
                    "new_time": 1,
                    "stack_var2": 1,
                    "stack_var70": 1,
                    "time2": 2,
                    "time_stamp2": 2,
                    "time_value2": 1,
                    "time_value_2": 1,
                    "timestamp2": 2,
                    "timestamp_2": 1,
                    "u_stack_70": 1
                },
                "uStack_80": {
                    "access_time": 3,
                    "file_modification_time": 1,
                    "file_time": 1,
                    "file_timestamp1": 1,
                    "local_variable": 1,
                    "modification_time": 2,
                    "modified_time": 7,
                    "old_time": 1,
                    "stack_var1": 1,
                    "stack_var80": 1,
                    "time1": 2,
                    "time_stamp1": 2,
                    "time_value": 1,
                    "time_value1": 1,
                    "timestamp1": 2,
                    "timestamp_1": 1,
                    "u_stack_80": 1,
                    "write_time": 1
                },
                "uStack_98": {
                    "archive_size": 13,
                    "file_size": 11,
                    "total_bytes": 1,
                    "total_bytes_to_read": 1,
                    "total_file_size": 1,
                    "total_size": 3
                },
                "uVar10": {
                    "bytes_processed": 5,
                    "bytes_remaining": 3,
                    "bytes_written": 8,
                    "total_bytes": 2,
                    "total_bytes_read": 11,
                    "total_bytes_written": 1
                },
                "uVar5": {
                    "error_code": 1,
                    "error_message": 4,
                    "error_msg": 1,
                    "error_str": 1,
                    "error_text": 3,
                    "error_variable": 1,
                    "gettext_message": 1,
                    "gettext_result": 4,
                    "localized_error_message": 1,
                    "message": 1,
                    "message_id": 2,
                    "msg": 1,
                    "text_domain": 1,
                    "translated_error_message": 2,
                    "translated_message": 2,
                    "translated_string": 2,
                    "translation": 2
                }
            },
            "called": [
                "FUN_00102c25"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105db0"
            ],
            "code": "\n\n\nlong * extract_and_write_archive_contents_00107740(long **archive)\n\n{\n  int comparison_result;\n  int stat_error;\n  int *errno_location;\n  char *error_string;\n  undefined8 gettext_result;\n  long **file_pointer;\n  void *buffer;\n  size_t bytes_read;\n  long offset;\n  long *current_file;\n  undefined4 *local_array;\n  ulong total_bytes_read;\n  size_t bytes_to_read;\n  undefined4 local_array [6];\n  __mode_t file_permissions;\n  ulong archive_size;\n  undefined8 modified_time;\n  undefined8 access_time;\n  \n  if (_DAT_0010d600 != 0) {\n    local_array = local_array;\n    for (offset = 0x24; offset != 0; offset = offset + -1) {\n      *local_array = 0;\n      local_array = local_array + 1;\n    }\n  }\n  file_pointer = (long **)archive[0x1d];\n  if ((long **)archive[0x1d] == (long **)0x0) {\n    file_pointer = archive;\n  }\n  stat_error = (*(code *)file_pointer[1][0x3d])(archive,local_array);\n  if (stat_error != 0) {\n    current_file = *archive;\n    gettext_result = dcgettext(0,\"internal stat error on %s\",5);\n    stat_error = fatal(gettext_result,current_file);\n    gettext_result = DAT_0010d638;\n    if (stat_error == 3) {\n      for (; *current_file != 0; current_file = (long *)(*current_file + 0xf0)) {\n      }\n    }\n    else {\n      for (; (undefined8 *)*current_file != (undefined8 *)0x0; current_file = (long *)(*current_file + 0xf0)) {\n        comparison_result = filename_cmp(*(undefined8 *)*current_file,gettext_result);\n        if (comparison_result == 0) {\n          if (stat_error != 2) {\n            return current_file;\n          }\n          return (long *)(*current_file + 0xf0);\n        }\n      }\n    }\n    return current_file;\n  }\n  bfd_seek(archive,0,0);\n  DAT_0010d5d8 = (FILE *)0x0;\n  if (archive_size == 0) {\nLAB_00102ca2:\n    DAT_0010d5d8 = (FILE *)open_output_file_isra_0(*archive);\n  }\n  else {\n    total_bytes_read = 0;\n    buffer = (void *)xmalloc(0x2000);\n    do {\n      bytes_to_read = archive_size - total_bytes_read;\n      if (0x2000 < bytes_to_read) {\n        bytes_to_read = 0x2000;\n      }\n      bytes_read = bfd_bread(buffer,bytes_to_read,archive);\n      if (bytes_to_read != bytes_read) {\nLAB_00102c78:\n        archive = (long **)*archive[0x1d];\n        gettext_result = dcgettext(0,\"%s is not a valid archive\",5);\n        fatal(gettext_result,archive);\n        goto LAB_00102ca2;\n      }\n      if (DAT_0010d5d8 == (FILE *)0x0) {\n        DAT_0010d5d8 = (FILE *)open_output_file_isra_0(*archive);\n      }\n      bytes_to_read = fwrite(buffer,1,bytes_read,DAT_0010d5d8);\n      if (bytes_to_read != bytes_read) {\n        errno_location = __errno_location();\n        error_string = strerror(*errno_location);\n        fatal(\"%s: %s\",DAT_0010d618,error_string);\n        goto LAB_00102c78;\n      }\n      total_bytes_read = total_bytes_read + bytes_read;\n    } while (total_bytes_read < archive_size);\n    free(buffer);\n  }\n  fclose(DAT_0010d5d8);\n  error_string = DAT_0010d618;\n  DAT_0010d5d8 = (FILE *)0x0;\n  chmod(DAT_0010d618,file_permissions);\n  if (_DAT_0010d600 != 0) {\n    modified_time = access_time;\n    set_times(error_string,local_array);\n  }\n  DAT_0010d618 = (char *)0x0;\n  return (long *)0x0;\n}\n\n",
            "current_name": "extract_and_write_archive_contents_00107740",
            "entrypoint": "0x00107740",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107740": "extract_and_write_archive_contents_00107740",
                "_Stack_b0": "file_permissions",
                "__n": "bytes_read",
                "__ptr": "buffer",
                "iVar1": "comparison_result",
                "iVar2": "stat_error",
                "lVar7": "offset",
                "local_c8": "local_array",
                "param_1": "archive",
                "pcVar4": "error_string",
                "piVar3": "errno_location",
                "plVar8": "current_file",
                "pplVar6": "file_pointer",
                "puVar9": "local_array",
                "sVar11": "bytes_to_read",
                "uStack_70": "access_time",
                "uStack_80": "modified_time",
                "uStack_98": "archive_size",
                "uVar10": "total_bytes_read",
                "uVar5": "gettext_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107890": {
            "additional_data": {
                "DAT_0010d60c": {
                    "condition1": 1,
                    "condition_1": 3,
                    "data_flag_1": 1,
                    "flag1": 3,
                    "flag_1": 1,
                    "flag_cond1": 1,
                    "is_dat_0010d60c_flag": 1
                },
                "FUN_00107890": {
                    "print_arelt_descr": 4,
                    "print_arelt_descr_with_flags": 1,
                    "print_arelt_descr_wrapper": 1,
                    "print_arelt_description": 21,
                    "print_description": 2,
                    "print_descriptor": 1,
                    "print_file_properties": 1
                },
                "FUN_001079c0": {
                    "print_arelt_descr": 4,
                    "print_descr": 1,
                    "print_file": 1,
                    "print_with_options": 2,
                    "process_arguments": 1
                },
                "_DAT_0010d5fc": {
                    "condition2": 1,
                    "condition_2": 3,
                    "data_flag_2": 1,
                    "flag2": 3,
                    "flag_2": 2,
                    "flag_cond2": 1,
                    "is_dat_0010d5fc_flag": 1
                },
                "_DAT_0010d60c": {
                    "flag_1": 1
                },
                "_stdout": {
                    "": 1,
                    "default_output": 1,
                    "file_stream": 1,
                    "output_stream_file": 1,
                    "standard_output": 10,
                    "standard_output_stream": 1
                },
                "param_1": {
                    "file": 3,
                    "file_descriptor": 2,
                    "file_pointer": 1,
                    "output_file": 10,
                    "output_stream": 12,
                    "param_1": 1,
                    "stdout": 1,
                    "stdout_descriptor": 1
                },
                "param_2": {
                    "arg_array": 1,
                    "arguments": 4,
                    "array": 1,
                    "array_of_strings": 7,
                    "data_array": 1,
                    "info_array": 1,
                    "param_2": 1,
                    "string_array": 1,
                    "strings": 4,
                    "strings_array": 1
                },
                "param_3": {
                    "char_1": 1,
                    "character1": 2,
                    "character_1": 2,
                    "flag1": 6,
                    "flag_1": 9,
                    "option1": 1,
                    "param_3": 1
                },
                "param_4": {
                    "char_2": 1,
                    "character2": 2,
                    "character_2": 2,
                    "flag2": 6,
                    "flag_2": 9,
                    "option2": 1,
                    "param_4": 1
                },
                "print_arelt_descr": {
                    "": 1,
                    "print_arelt_description": 1,
                    "print_array_element_description": 3
                }
            },
            "called": [
                "FUN_001079c0"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid print_arelt_description_00107890(undefined8 output_stream)\n\n{\n  print_array_element_description(standard_output,output_stream,DAT_0010d60c != 0,_DAT_0010d5fc != 0);\n  return;\n}\n\n",
            "current_name": "print_arelt_description_00107890",
            "entrypoint": "0x00107890",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107890": "print_arelt_description_00107890",
                "_stdout": "standard_output",
                "param_1": "output_stream",
                "print_arelt_descr": "print_array_element_description"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001078c0": {
            "additional_data": {
                "10": {
                    "newline": 2
                },
                "DAT_0010d660": {
                    "program_name": 1
                },
                "FUN_001078c0": {
                    "print_error": 1,
                    "print_error_message": 26,
                    "print_formatted_error_message": 1,
                    "print_formatted_message": 3
                },
                "__gnuc_va_list": {
                    "arg_list": 1,
                    "args": 1,
                    "arguments": 1,
                    "varargs": 1,
                    "variable_arguments": 1,
                    "variadic_arguments": 1
                },
                "_stderr": {
                    "error_output": 1,
                    "error_stream": 1,
                    "standard_error": 14,
                    "standard_error_stream": 1,
                    "stderr": 4,
                    "stderr_buffer": 1,
                    "stderr_stream": 1
                },
                "_stdout": {
                    "standard_output": 15,
                    "standard_output_stream": 1,
                    "stdout": 4,
                    "stdout_buffer": 1,
                    "stdout_stream": 1
                },
                "fflush": {
                    "flush_output": 1,
                    "flush_output_stream": 1,
                    "flush_standard_output": 2
                },
                "fprintf": {
                    "print_error_message_with_label": 1,
                    "print_formatted": 2,
                    "print_formatted_error_message": 1,
                    "print_to_error_stream": 1,
                    "print_to_standard_error": 1
                },
                "param_1": {
                    "error_message": 15,
                    "format_string": 5,
                    "message": 8,
                    "message_format": 3
                },
                "param_2": {
                    "args": 8,
                    "arguments": 12,
                    "arguments_list": 2,
                    "format_arguments": 1,
                    "va_list": 1,
                    "var_args": 1,
                    "varargs": 1,
                    "variable_arguments": 1
                },
                "putc": {
                    "print_character": 1,
                    "put_character": 3,
                    "put_newline_to_standard_error": 1,
                    "write_character": 1,
                    "write_character_to_error_stream": 1
                },
                "vfprintf": {
                    "format_and_print_error_message": 1,
                    "print_formatted_to_standard_error": 1,
                    "print_varargs": 1
                }
            },
            "called": [
                "FUN_001022f0",
                "FUN_001023c0",
                "FUN_001024b0",
                "FUN_00102310"
            ],
            "calling": [
                "FUN_00107690",
                "FUN_00107920"
            ],
            "code": "\n\n\nvoid print_formatted_error_message_001078c0(char *error_message,varargs arguments)\n\n{\n  flush_standard_output(standard_output);\n  print_formatted(standard_error,\"%s: \",DAT_0010d660);\n  format_and_print_error_message(standard_error,error_message,arguments);\n  put_character(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_formatted_error_message_001078c0",
            "entrypoint": "0x001078c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001078c0": "print_formatted_error_message_001078c0",
                "__gnuc_va_list": "varargs",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "fflush": "flush_standard_output",
                "fprintf": "print_formatted",
                "param_1": "error_message",
                "param_2": "arguments",
                "putc": "put_character",
                "vfprintf": "format_and_print_error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107920": {
            "additional_data": {
                "FUN_00107920": {
                    "report_and_handle_data": 1,
                    "report_and_log": 1,
                    "report_and_process_data": 2,
                    "report_and_store_parameters": 1,
                    "report_data": 22,
                    "report_function": 4
                },
                "in_AL": {
                    "boolean_flag": 1,
                    "check_condition": 1,
                    "condition": 3,
                    "condition_flag": 1,
                    "conditional_flag": 1,
                    "enabled": 1,
                    "flag": 13,
                    "include_diagnostics": 1,
                    "input_flag": 3,
                    "is_report_enabled": 1,
                    "is_set": 1,
                    "some_condition": 1
                },
                "local_18": {
                    "arg8_copy": 3,
                    "copy_param8": 1,
                    "data8_copy": 2,
                    "data_param8": 1,
                    "eighth_param": 1,
                    "input8": 1,
                    "input8_copy": 3,
                    "input_8": 1,
                    "input_8_copy": 1,
                    "input_buffer13": 1,
                    "local_copy_param8": 1,
                    "local_input8": 2,
                    "local_input_8": 1,
                    "local_report_param8": 1,
                    "new_input8": 1,
                    "option8_copy": 1,
                    "param8": 1,
                    "report_param8_": 1,
                    "report_param8_copy": 1,
                    "temp8": 1,
                    "unused_param8": 1,
                    "value8_copy": 1,
                    "variable8": 1
                },
                "local_28": {
                    "arg7_copy": 3,
                    "copy_param7": 1,
                    "data7_copy": 2,
                    "data_param7": 1,
                    "input7": 1,
                    "input7_copy": 3,
                    "input_7": 1,
                    "input_7_copy": 1,
                    "input_buffer12": 1,
                    "local_copy_param7": 1,
                    "local_input7": 2,
                    "local_input_7": 1,
                    "local_report_param7": 1,
                    "new_input7": 1,
                    "option7_copy": 1,
                    "param7": 1,
                    "report_param7_": 1,
                    "report_param7_copy": 1,
                    "seventh_param": 1,
                    "temp7": 1,
                    "unused_param7": 1,
                    "value7_copy": 1,
                    "variable7": 1
                },
                "local_38": {
                    "arg6_copy": 3,
                    "copy_param6": 1,
                    "data6_copy": 2,
                    "data_param6": 1,
                    "input6": 1,
                    "input6_copy": 3,
                    "input_6": 1,
                    "input_6_copy": 1,
                    "input_buffer11": 1,
                    "local_copy_param6": 1,
                    "local_input6": 2,
                    "local_input_6": 1,
                    "local_report_param6": 1,
                    "new_input6": 1,
                    "option6_copy": 1,
                    "param6": 1,
                    "report_param6_": 1,
                    "report_param6_copy": 1,
                    "sixth_param": 1,
                    "temp6": 1,
                    "unused_param6": 1,
                    "value6_copy": 1,
                    "variable6": 1
                },
                "local_48": {
                    "arg5_copy": 3,
                    "copy_param5": 1,
                    "data5_copy": 2,
                    "data_param5": 1,
                    "fifth_param": 1,
                    "input5": 1,
                    "input5_copy": 3,
                    "input_5": 1,
                    "input_5_copy": 1,
                    "input_buffer10": 1,
                    "local_copy_param5": 1,
                    "local_input5": 2,
                    "local_input_5": 1,
                    "local_report_param5": 1,
                    "new_input5": 1,
                    "option5_copy": 1,
                    "param5": 1,
                    "report_param5_": 1,
                    "report_param5_copy": 1,
                    "temp5": 1,
                    "unused_param5": 1,
                    "value5_copy": 1,
                    "variable5": 1
                },
                "local_58": {
                    "arg4_copy": 3,
                    "copy_param4": 1,
                    "data4_copy": 2,
                    "data_param4": 1,
                    "fourth_param": 1,
                    "input4": 1,
                    "input4_copy": 3,
                    "input_4": 1,
                    "input_4_copy": 1,
                    "input_buffer9": 1,
                    "local_copy_param4": 1,
                    "local_input4": 2,
                    "local_input_4": 1,
                    "local_report_param4": 1,
                    "new_input4": 1,
                    "option4_copy": 1,
                    "param4": 1,
                    "report_param4_": 1,
                    "report_param4_copy": 1,
                    "temp4": 1,
                    "unused_param4": 1,
                    "value4_copy": 1,
                    "variable4": 1
                },
                "local_68": {
                    "arg3_copy": 3,
                    "copy_param3": 1,
                    "data3_copy": 2,
                    "data_param3": 1,
                    "input3": 1,
                    "input3_copy": 3,
                    "input_3": 1,
                    "input_3_copy": 1,
                    "input_buffer8": 1,
                    "local_copy_param3": 1,
                    "local_input3": 2,
                    "local_input_3": 1,
                    "local_report_param3": 1,
                    "new_input3": 1,
                    "option3_copy": 1,
                    "param3": 1,
                    "report_param3_": 1,
                    "report_param3_copy": 1,
                    "temp3": 1,
                    "third_param": 1,
                    "unused_param3": 1,
                    "value3_copy": 1,
                    "variable3": 1
                },
                "local_78": {
                    "arg2_copy": 3,
                    "copy_param2": 1,
                    "data2_copy": 2,
                    "data_param2": 1,
                    "input2": 1,
                    "input2_copy": 3,
                    "input_2": 1,
                    "input_2_copy": 1,
                    "input_buffer7": 1,
                    "local_copy_param2": 1,
                    "local_input2": 2,
                    "local_input_2": 1,
                    "local_report_param2": 1,
                    "new_input2": 1,
                    "option2_copy": 1,
                    "param2": 1,
                    "report_param2_": 1,
                    "report_param2_copy": 1,
                    "second_param": 1,
                    "temp2": 1,
                    "unused_param2": 1,
                    "value2_copy": 1,
                    "variable2": 1
                },
                "local_88": {
                    "arg1_copy": 3,
                    "copy_param1": 1,
                    "data1_copy": 2,
                    "data_param1": 1,
                    "first_param": 1,
                    "input1": 1,
                    "input1_copy": 3,
                    "input_1": 1,
                    "input_1_copy": 1,
                    "input_buffer6": 1,
                    "local_copy_param1": 1,
                    "local_input1": 2,
                    "local_input_1": 1,
                    "local_report_param1": 1,
                    "new_input1": 1,
                    "option1_copy": 1,
                    "param1": 1,
                    "report_param1_": 1,
                    "report_param1_copy": 1,
                    "temp1": 1,
                    "unused_param1": 1,
                    "value1_copy": 1,
                    "variable1": 1
                },
                "local_90": {
                    "address14": 1,
                    "arg6_copy": 1,
                    "buffer_param5": 1,
                    "data5": 1,
                    "extra_param5": 1,
                    "fourteenth_param": 1,
                    "input_buffer5": 1,
                    "local_output_6": 1,
                    "local_param14": 2,
                    "local_param_14": 1,
                    "local_param_f": 1,
                    "output6": 1,
                    "param14": 3,
                    "param14_copy": 3,
                    "param16": 1,
                    "param6_copy": 1,
                    "param_e_copy": 1,
                    "ptr_90": 1,
                    "report_param14_copy": 1,
                    "temp_value5": 1,
                    "temp_var5": 1,
                    "user_data5": 1,
                    "value14": 1,
                    "value5": 2,
                    "variable8": 1
                },
                "local_98": {
                    "address13": 1,
                    "arg5_copy": 1,
                    "buffer_param4": 1,
                    "data4": 1,
                    "extra_param4": 1,
                    "input_buffer4": 1,
                    "local_output_5": 1,
                    "local_param13": 2,
                    "local_param_13": 1,
                    "local_param_e": 1,
                    "output5": 1,
                    "param13": 3,
                    "param13_copy": 3,
                    "param15": 1,
                    "param5_copy": 1,
                    "param_d_copy": 1,
                    "ptr_98": 1,
                    "report_param13_copy": 1,
                    "temp_value4": 1,
                    "temp_var4": 1,
                    "thirteenth_param": 1,
                    "user_data4": 1,
                    "value13": 1,
                    "value4": 2,
                    "variable7": 1
                },
                "local_a0": {
                    "address12": 1,
                    "arg4_copy": 1,
                    "buffer_param3": 1,
                    "data3": 1,
                    "extra_param3": 1,
                    "input_buffer3": 1,
                    "local_output_4": 1,
                    "local_param12": 2,
                    "local_param_12": 1,
                    "local_param_d": 1,
                    "output4": 1,
                    "param12": 3,
                    "param12_copy": 3,
                    "param14": 1,
                    "param4_copy": 1,
                    "param_c_copy": 1,
                    "ptr_a0": 1,
                    "report_param12_copy": 1,
                    "temp_value3": 1,
                    "temp_var3": 1,
                    "twelfth_param": 1,
                    "user_data3": 1,
                    "value12": 1,
                    "value3": 2,
                    "variable6": 1
                },
                "local_a8": {
                    "address11": 1,
                    "arg3_copy": 1,
                    "buffer_param2": 1,
                    "data2": 1,
                    "eleventh_param": 1,
                    "extra_param2": 1,
                    "input_buffer2": 1,
                    "local_output_3": 1,
                    "local_param11": 2,
                    "local_param_11": 1,
                    "local_param_c": 1,
                    "output3": 1,
                    "param11": 3,
                    "param11_copy": 3,
                    "param13": 1,
                    "param3_copy": 1,
                    "param_b_copy": 1,
                    "ptr_a8": 1,
                    "report_param11_copy": 1,
                    "temp_value2": 1,
                    "temp_var2": 1,
                    "user_data2": 1,
                    "value11": 1,
                    "value2": 2,
                    "variable5": 1
                },
                "local_b0": {
                    "address10": 1,
                    "arg2_copy": 1,
                    "buffer_param1": 1,
                    "data1": 1,
                    "extra_param1": 1,
                    "input_buffer1": 1,
                    "local_output_2": 1,
                    "local_param10": 2,
                    "local_param_10": 1,
                    "local_param_b": 1,
                    "output2": 1,
                    "param10": 3,
                    "param10_copy": 3,
                    "param12": 1,
                    "param2_copy": 1,
                    "param_a_copy": 1,
                    "ptr_b0": 1,
                    "report_param10_copy": 1,
                    "temp_value1": 1,
                    "temp_var1": 1,
                    "tenth_param": 1,
                    "user_data1": 1,
                    "value1": 2,
                    "value10": 1,
                    "variable4": 1
                },
                "local_b8": {
                    "buffer": 4,
                    "local_array": 5,
                    "local_buffer": 7,
                    "local_buffer_data": 1,
                    "local_char_array": 1,
                    "report_buffer": 1,
                    "temp_buffer": 7,
                    "temporary_buffer": 1
                },
                "local_c8": {
                    "buffer": 9,
                    "local_arr": 1,
                    "local_array_2": 1,
                    "local_buffer": 13,
                    "local_buffer2": 1,
                    "local_data": 1,
                    "local_var2": 1,
                    "pointer2": 1,
                    "stack_pointer2": 1,
                    "variable3": 1
                },
                "local_d0": {
                    "buffer": 5,
                    "buffer_address": 1,
                    "buffer_pointer": 1,
                    "buffer_ptr": 3,
                    "local_array_1": 1,
                    "local_array_pointer": 1,
                    "local_buffer": 2,
                    "local_buffer_ptr": 1,
                    "local_pointer": 1,
                    "pointer": 2,
                    "pointer1": 1,
                    "ptr_buffer": 1,
                    "stack_pointer": 4,
                    "stack_pointer1": 1,
                    "stack_ptr": 2
                },
                "local_d4": {
                    "buffer_size": 2,
                    "chunk_size": 1,
                    "count": 1,
                    "length": 3,
                    "local_value": 1,
                    "local_var1": 2,
                    "local_var_size": 1,
                    "local_variable1_size": 1,
                    "local_variable_2": 1,
                    "offset": 2,
                    "size": 1,
                    "string_length": 1,
                    "temp_var": 1,
                    "value": 1,
                    "variable2": 1
                },
                "local_d8": {
                    "array_size": 1,
                    "buffer_size": 6,
                    "data_size": 1,
                    "length": 4,
                    "local_size": 2,
                    "local_variable_1": 1,
                    "size": 13,
                    "size_of_array": 1,
                    "stack_size": 1,
                    "variable1": 1
                },
                "param_1": {
                    "address1": 1,
                    "arg1": 3,
                    "buffer": 1,
                    "data1": 4,
                    "data_param1": 1,
                    "entry_point": 1,
                    "first_param": 1,
                    "input1": 10,
                    "input_1": 3,
                    "option1": 1,
                    "report_param1": 3,
                    "some_data1": 1,
                    "value1": 1
                },
                "param_10": {
                    "output2": 3,
                    "output_2": 1,
                    "output_param2": 1,
                    "param10": 7,
                    "param2": 4,
                    "param7": 1,
                    "param_10": 1,
                    "param_a": 1,
                    "param_b": 2,
                    "ptr_10": 1,
                    "report_param10": 3,
                    "tenth_param": 1,
                    "user_data1": 1,
                    "val1": 1,
                    "value1": 2,
                    "var1": 1
                },
                "param_11": {
                    "eleventh_param": 1,
                    "output3": 3,
                    "output_3": 1,
                    "output_param3": 1,
                    "param11": 7,
                    "param3": 4,
                    "param8": 1,
                    "param_11": 1,
                    "param_b": 1,
                    "param_c": 2,
                    "ptr_11": 1,
                    "report_param11": 3,
                    "user_data2": 1,
                    "val2": 1,
                    "value2": 2,
                    "var2": 1
                },
                "param_12": {
                    "output4": 3,
                    "output_4": 1,
                    "output_param4": 1,
                    "param12": 7,
                    "param4": 4,
                    "param9": 1,
                    "param_12": 1,
                    "param_c": 1,
                    "param_d": 2,
                    "ptr_12": 1,
                    "report_param12": 3,
                    "twelfth_param": 1,
                    "user_data3": 1,
                    "val3": 1,
                    "value3": 2,
                    "var3": 1
                },
                "param_13": {
                    "output5": 3,
                    "output_5": 1,
                    "output_param5": 1,
                    "param10": 1,
                    "param13": 7,
                    "param5": 4,
                    "param_13": 1,
                    "param_d": 1,
                    "param_e": 2,
                    "ptr_13": 1,
                    "report_param13": 3,
                    "thirteenth_param": 1,
                    "user_data4": 1,
                    "val4": 1,
                    "value4": 2,
                    "var4": 1
                },
                "param_14": {
                    "fourteenth_param": 1,
                    "output6": 3,
                    "output_6": 1,
                    "output_param6": 1,
                    "param11": 1,
                    "param14": 7,
                    "param6": 4,
                    "param_14": 1,
                    "param_e": 1,
                    "param_f": 2,
                    "ptr_14": 1,
                    "report_param14": 3,
                    "user_data5": 1,
                    "val5": 1,
                    "value5": 2,
                    "var5": 1
                },
                "param_2": {
                    "address2": 1,
                    "arg2": 3,
                    "data2": 4,
                    "data_param2": 1,
                    "input2": 10,
                    "input_2": 3,
                    "option2": 1,
                    "param2": 1,
                    "report_param2": 3,
                    "second_param": 1,
                    "size": 1,
                    "some_data2": 1,
                    "value2": 1
                },
                "param_3": {
                    "address3": 1,
                    "arg3": 3,
                    "data3": 4,
                    "data_param3": 1,
                    "input3": 10,
                    "input_3": 3,
                    "option3": 1,
                    "param1": 1,
                    "param3": 1,
                    "report_param3": 3,
                    "some_data3": 1,
                    "third_param": 1,
                    "value3": 1
                },
                "param_4": {
                    "address4": 1,
                    "arg4": 3,
                    "data4": 4,
                    "data_param4": 1,
                    "fourth_param": 1,
                    "input4": 10,
                    "input_4": 3,
                    "option4": 1,
                    "param2": 1,
                    "param4": 1,
                    "report_param4": 3,
                    "some_data4": 1,
                    "value4": 1
                },
                "param_5": {
                    "address5": 1,
                    "arg5": 3,
                    "data5": 4,
                    "data_param5": 1,
                    "fifth_param": 1,
                    "input5": 10,
                    "input_5": 3,
                    "option5": 1,
                    "param3": 1,
                    "param5": 1,
                    "report_param5": 3,
                    "some_data5": 1,
                    "value5": 1
                },
                "param_6": {
                    "address6": 1,
                    "arg6": 3,
                    "data6": 4,
                    "data_param6": 1,
                    "input6": 10,
                    "input_6": 3,
                    "option6": 1,
                    "param4": 1,
                    "param6": 1,
                    "report_param6": 3,
                    "sixth_param": 1,
                    "some_data6": 1,
                    "value6": 1
                },
                "param_7": {
                    "address7": 1,
                    "arg7": 3,
                    "data7": 4,
                    "data_param7": 1,
                    "input7": 10,
                    "input_7": 3,
                    "option7": 1,
                    "param5": 1,
                    "param7": 1,
                    "report_param7": 3,
                    "seventh_param": 1,
                    "some_data7": 1,
                    "value7": 1
                },
                "param_8": {
                    "address8": 1,
                    "arg8": 3,
                    "data8": 4,
                    "data_param8": 1,
                    "eighth_param": 1,
                    "input8": 10,
                    "input_8": 3,
                    "option8": 1,
                    "param6": 1,
                    "param8": 1,
                    "report_param8": 3,
                    "some_data8": 1,
                    "value8": 1
                },
                "param_9": {
                    "data": 6,
                    "data_pointer": 1,
                    "log_message": 1,
                    "output1": 3,
                    "output_1": 1,
                    "output_param1": 1,
                    "param1": 3,
                    "param9": 2,
                    "param_a": 2,
                    "param_pointer": 1,
                    "report_addr": 1,
                    "report_address": 1,
                    "report_function": 2,
                    "report_id": 1,
                    "report_param": 1,
                    "report_param9": 3,
                    "report_ptr": 1
                }
            },
            "called": [
                "FUN_001078c0"
            ],
            "calling": [
                "FUN_00102fd7",
                "FUN_001052a0",
                "FUN_001025a0",
                "FUN_00105db0",
                "FUN_00102e6f",
                "FUN_00102f1e",
                "FUN_00105300"
            ],
            "code": "\nvoid report_and_process_data_00107920(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 input5,undefined4 input6,undefined4 input7,undefined4 input8,\n                 undefined8 data,undefined8 param10,undefined8 param11,undefined8 param12,\n                 undefined8 param13,undefined8 param14)\n\n{\n  char flag;\n  undefined4 size;\n  undefined4 length;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined temp_buffer [8];\n  undefined8 param10_copy;\n  undefined8 param11;\n  undefined8 param12;\n  undefined8 param13;\n  undefined8 param14_copy;\n  undefined4 input1_copy;\n  undefined4 arg2_copy;\n  undefined4 arg3_copy;\n  undefined4 arg4_copy;\n  undefined4 arg5_copy;\n  undefined4 input6_copy;\n  undefined4 arg7_copy;\n  undefined4 arg8_copy;\n  \n  if (flag != '\\0') {\n    input1_copy = input1;\n    arg2_copy = input2;\n    arg3_copy = input3;\n    arg4_copy = input4;\n    arg5_copy = input5;\n    input6_copy = input6;\n    arg7_copy = input7;\n    arg8_copy = input8;\n  }\n  buffer = &stack0x00000008;\n  size = 8;\n  local_buffer = temp_buffer;\n  length = 0x30;\n  param10_copy = param10;\n  param11 = param11;\n  param12 = param12;\n  param13 = param13;\n  param14_copy = param14;\n  report(data,&size);\n  return;\n}\n\n",
            "current_name": "report_and_process_data_00107920",
            "entrypoint": "0x00107920",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107920": "report_and_process_data_00107920",
                "in_AL": "flag",
                "local_18": "arg8_copy",
                "local_28": "arg7_copy",
                "local_38": "input6_copy",
                "local_48": "arg5_copy",
                "local_58": "arg4_copy",
                "local_68": "arg3_copy",
                "local_78": "arg2_copy",
                "local_88": "input1_copy",
                "local_90": "param14_copy",
                "local_98": "param13",
                "local_a0": "param12",
                "local_a8": "param11",
                "local_b0": "param10_copy",
                "local_b8": "temp_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "length",
                "local_d8": "size",
                "param_1": "input1",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13",
                "param_14": "param14",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "param_7": "input7",
                "param_8": "input8",
                "param_9": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001079c0": {
            "additional_data": {
                "DAT_00112628": {
                    "ptr__dcgettext": 1
                },
                "FUN_001079c0": {
                    "format_and_print_file_info": 1,
                    "print_file_attributes": 1,
                    "print_file_details": 5,
                    "print_file_info": 20,
                    "print_file_information": 3,
                    "print_file_metadata": 1
                },
                "cStack_e9": {
                    "is_other_readable": 1
                },
                "cStack_ea": {
                    "execute_group_perm": 1,
                    "execute_owner": 1,
                    "execute_permission_others": 1,
                    "file_type_character9": 1,
                    "flag9": 1,
                    "is_block": 1,
                    "is_execute_group": 1,
                    "is_group_executable": 1,
                    "is_other_exec": 1,
                    "is_other_execute": 1,
                    "is_other_readable": 1,
                    "other_exec": 2,
                    "other_execute": 5,
                    "other_execute_char": 1,
                    "other_execute_perm": 1,
                    "other_execute_permission": 2,
                    "permission9": 1,
                    "permission_char": 1,
                    "permission_char9": 1,
                    "permission_char_a": 1,
                    "permissions9": 1,
                    "permissions_other_execute": 1,
                    "sticky_permission_char": 1
                },
                "cStack_eb": {
                    "file_type_character8": 1,
                    "flag8": 1,
                    "is_character": 1,
                    "is_group_writable": 1,
                    "is_other_write": 2,
                    "is_owner_readable": 1,
                    "is_write_group": 1,
                    "other_write": 7,
                    "other_write_char": 1,
                    "other_write_perm": 1,
                    "other_write_permission": 2,
                    "permission8": 1,
                    "permission_char": 1,
                    "permission_char8": 1,
                    "permission_char_b": 1,
                    "permissions8": 1,
                    "permissions_other_write": 1,
                    "sgid_permission_char": 1,
                    "write_group_perm": 1,
                    "write_owner": 1,
                    "write_permission_others": 1
                },
                "cStack_ec": {
                    "file_type_character7": 1,
                    "flag7": 1,
                    "is_directory": 1,
                    "is_group_readable": 1,
                    "is_other_read": 2,
                    "is_read_group": 1,
                    "is_script": 1,
                    "other_read": 7,
                    "other_read_char": 1,
                    "other_read_perm": 1,
                    "other_read_permission": 2,
                    "permission7": 1,
                    "permission_char": 1,
                    "permission_char7": 1,
                    "permission_char_c": 1,
                    "permissions7": 1,
                    "permissions_other_read": 1,
                    "read_group_perm": 1,
                    "read_owner": 1,
                    "read_permission_others": 1,
                    "suid_permission_char": 1
                },
                "cStack_ed": {
                    "execute_group": 1,
                    "execute_owner_perm": 1,
                    "execute_permission_char": 1,
                    "execute_permission_group": 1,
                    "file_type_character6": 1,
                    "flag6": 1,
                    "group_exec": 2,
                    "group_execute": 4,
                    "group_execute_char": 1,
                    "group_execute_perm": 1,
                    "group_execute_permission": 2,
                    "is_execute_owner": 1,
                    "is_group_exec": 1,
                    "is_group_execute": 1,
                    "is_other_writable": 1,
                    "is_owner_executable": 1,
                    "owner_execute": 1,
                    "permission6": 1,
                    "permission_char": 1,
                    "permission_char6": 1,
                    "permission_char_d": 1,
                    "permissions6": 1,
                    "permissions_group_execute": 1,
                    "sticky_bit": 1
                },
                "cStack_ee": {
                    "file_type_character5": 1,
                    "flag5": 1,
                    "group_write": 6,
                    "group_write_char": 1,
                    "group_write_perm": 1,
                    "group_write_permission": 2,
                    "is_group_write": 2,
                    "is_owner_executable": 1,
                    "is_owner_writable": 1,
                    "is_write_owner": 1,
                    "owner_write": 1,
                    "permission5": 1,
                    "permission_char": 1,
                    "permission_char5": 1,
                    "permission_char_e": 1,
                    "permissions5": 1,
                    "permissions_group_write": 1,
                    "setgid_bit": 1,
                    "write_group": 1,
                    "write_owner_perm": 1,
                    "write_permission_char": 1,
                    "write_permission_group": 1
                },
                "cStack_ef": {
                    "file_type_character4": 1,
                    "flag4": 1,
                    "group_read": 6,
                    "group_read_char": 1,
                    "group_read_perm": 1,
                    "group_read_permission": 2,
                    "is_group_read": 2,
                    "is_owner_readable": 1,
                    "is_read_owner": 1,
                    "is_script": 1,
                    "owner_read": 1,
                    "permission4": 1,
                    "permission_char": 1,
                    "permission_char4": 1,
                    "permission_char_f": 1,
                    "permissions4": 1,
                    "permissions_group_read": 1,
                    "read_group": 1,
                    "read_owner_perm": 1,
                    "read_permission_char": 1,
                    "read_permission_group": 1,
                    "setuid_bit": 1
                },
                "cStack_f0": {
                    "execute_other": 1,
                    "execute_permission": 2,
                    "file_type_character3": 1,
                    "flag3": 1,
                    "group_owner_execute": 1,
                    "is_group_writable": 1,
                    "is_sticky": 2,
                    "is_user_exec": 1,
                    "is_user_execute": 1,
                    "other_permission_char": 1,
                    "owner_exec": 1,
                    "owner_execute": 1,
                    "owner_execute_char": 1,
                    "permission3": 1,
                    "permission_char": 1,
                    "permission_char3": 1,
                    "permission_char_0": 1,
                    "permissions3": 1,
                    "permissions_owner_execute": 1,
                    "sticky_bit": 1,
                    "user_exec": 1,
                    "user_execute": 3,
                    "user_execute_perm": 1,
                    "user_execute_permission": 2
                },
                "cStack_f1": {
                    "file_permission_char": 1,
                    "file_type_character2": 1,
                    "flag2": 1,
                    "group_owner_write": 1,
                    "is_owner_writable": 1,
                    "is_setgid": 1,
                    "is_sgid": 1,
                    "is_user_write": 2,
                    "owner_write": 2,
                    "owner_write_char": 1,
                    "permission2": 1,
                    "permission_char": 1,
                    "permission_char2": 1,
                    "permission_char_1": 1,
                    "permissions2": 1,
                    "permissions_owner_write": 1,
                    "setgid_bit": 1,
                    "user_write": 4,
                    "user_write_perm": 1,
                    "user_write_permission": 2,
                    "write_other": 1,
                    "write_permission": 2
                },
                "cStack_f2": {
                    "dir_permission_char": 1,
                    "file_type_character1": 1,
                    "flag1": 1,
                    "group_owner_read": 1,
                    "is_script": 1,
                    "is_setuid": 1,
                    "is_suid": 1,
                    "is_user_read": 2,
                    "owner_read": 2,
                    "owner_read_char": 1,
                    "permission1": 1,
                    "permission_char": 1,
                    "permission_char1": 1,
                    "permission_char_2": 1,
                    "permissions1": 1,
                    "permissions_owner_read": 1,
                    "read_other": 1,
                    "read_permission": 2,
                    "setuid_bit": 1,
                    "user_read": 4,
                    "user_read_perm": 1,
                    "user_read_permission": 2
                },
                "file": {
                    "file": 1
                },
                "filePtr": {
                    "file_ptr": 1
                },
                "formattedFileInfo": {
                    "formatted_file_info": 1
                },
                "fprintf": {
                    "formatted_print": 1
                },
                "fputc": {
                    "fputc": 1,
                    "put_char": 1
                },
                "fputs": {
                    "fputs": 1,
                    "put_string": 1
                },
                "hasPermissions": {
                    "has_permissions": 1
                },
                "iVar1": {
                    "error_code": 2,
                    "result": 20,
                    "return_value": 8,
                    "status": 1
                },
                "local_100": {
                    "current_date": 1,
                    "current_time": 27,
                    "current_time_val": 1,
                    "current_timestamp": 2
                },
                "local_60": {
                    "creation_time": 2,
                    "current_time": 3,
                    "current_time_copy": 1,
                    "current_time_modified": 1,
                    "current_timestamp": 1,
                    "file_last_modified": 1,
                    "file_metadata": 1,
                    "file_modification_time": 1,
                    "file_modified": 3,
                    "file_modified_time": 1,
                    "file_timestamp": 2,
                    "last_modified": 1,
                    "local_60": 1,
                    "local_time": 1,
                    "modification_time": 2,
                    "modified_time": 1,
                    "prev_time": 1,
                    "start_time": 1,
                    "time": 1,
                    "unknown4": 1,
                    "unknown_var4": 1,
                    "update_time": 1
                },
                "local_70": {
                    "is_file_readable": 1
                },
                "local_78": {
                    "file_ptr_is_valid": 1
                },
                "local_b8": {
                    "buffer": 1,
                    "file_buffer": 1,
                    "local_buffer": 2,
                    "message": 1,
                    "temp_array": 1,
                    "temp_buffer": 1,
                    "utc_offset": 1
                },
                "local_e8": {
                    "file_date": 1,
                    "formatted_file_info": 1,
                    "formatted_time": 18,
                    "time_buffer": 1,
                    "time_format": 2,
                    "time_formatted": 3,
                    "time_info": 1,
                    "time_string": 3,
                    "time_string_formatted": 1
                },
                "param_1": {
                    "file": 21,
                    "file_pointer": 1,
                    "file_stream": 2,
                    "output_file": 7
                },
                "param_2": {
                    "args": 2,
                    "arguments": 1,
                    "attributes": 1,
                    "file_data": 3,
                    "file_info": 23,
                    "file_properties": 1
                },
                "param_3": {
                    "corrupt_time_data": 1,
                    "enable_time": 1,
                    "has_permission": 1,
                    "has_permissions": 1,
                    "include_time": 2,
                    "is_header_enabled": 1,
                    "is_symbolic_link": 1,
                    "is_verbose": 4,
                    "output_enabled": 1,
                    "print_details": 1,
                    "print_header": 2,
                    "print_info": 1,
                    "print_metadata": 1,
                    "print_mode": 1,
                    "print_time": 8,
                    "print_time_info": 1,
                    "should_print_info": 1,
                    "show_header": 1,
                    "show_time": 1
                },
                "param_4": {
                    "enable_address": 1,
                    "include_address": 1,
                    "include_hex": 1,
                    "is_address_enabled": 1,
                    "print_address": 13,
                    "print_hex": 3,
                    "print_hex_address": 1,
                    "print_offset": 2,
                    "print_size": 1,
                    "should_print_address": 1,
                    "should_print_hex": 1,
                    "show_address": 3,
                    "show_hex": 2
                },
                "pcVar3": {
                    "current_time": 1,
                    "formatted_time": 1,
                    "time_data": 5,
                    "time_info": 1,
                    "time_str": 5,
                    "time_string": 18
                },
                "ppcVar2": {
                    "args_ptr": 1,
                    "data_ptr": 1,
                    "file_function": 1,
                    "file_info": 1,
                    "file_info_ptr": 8,
                    "file_name": 1,
                    "file_ptr": 6,
                    "func_ptr": 2,
                    "function_pointer": 1,
                    "function_ptr": 2,
                    "function_ptrs": 1,
                    "header": 1,
                    "property_ptr": 1,
                    "ptr_file_info": 1,
                    "temp": 1,
                    "temp_file": 1,
                    "temp_ptr": 1
                },
                "printf": {
                    "fprintf": 1
                },
                "showAddress": {
                    "show_address": 1
                },
                "uStack_60": {
                    "modified_time": 1
                },
                "uStack_88": {
                    "address": 2,
                    "file_info3": 1,
                    "file_link_count": 1,
                    "file_permissions": 1,
                    "file_size": 14,
                    "file_type_hex": 1,
                    "i_node_number": 1,
                    "inode": 2,
                    "inode_no": 1,
                    "size": 2,
                    "third_number": 1,
                    "time_stamp": 1,
                    "unknown3": 1,
                    "unknown_var3": 1,
                    "variable_88": 1
                },
                "uStack_98": {
                    "device_id": 1,
                    "device_id_minor": 1,
                    "device_number": 1,
                    "file_group": 1,
                    "file_info2": 1,
                    "file_size": 1,
                    "file_uid": 1,
                    "gid": 1,
                    "group_id": 10,
                    "group_index": 1,
                    "hard_links": 1,
                    "inode_number": 1,
                    "minor_device": 2,
                    "month": 1,
                    "owner_group_id": 1,
                    "second_number": 1,
                    "u_stack_98": 1,
                    "unknown2": 1,
                    "unknown_var2": 1,
                    "user_id": 1,
                    "variable_98": 1
                },
                "uStack_9c": {
                    "day": 1,
                    "device_id_major": 1,
                    "file_info1": 1,
                    "file_links": 1,
                    "file_owner": 1,
                    "first_number": 1,
                    "group_id": 1,
                    "inode": 1,
                    "inode_number": 1,
                    "major_device": 2,
                    "node_number": 1,
                    "num_links": 2,
                    "owner_user_id": 1,
                    "u_stack_9c": 1,
                    "uid": 1,
                    "unknown1": 1,
                    "unknown_var1": 1,
                    "user_id": 10,
                    "user_index": 1,
                    "variable_9c": 1
                },
                "uStack_a0": {
                    "file_attributes": 1,
                    "file_info": 1,
                    "file_mode": 5,
                    "file_permissions": 6,
                    "file_size": 11,
                    "hex_permission": 1,
                    "mode_bit": 1,
                    "permission_bits": 1,
                    "permission_value": 1,
                    "permissions": 3
                },
                "uStack_e9": {
                    "is_other": 1,
                    "no_print_flag": 1,
                    "undefined_var": 1,
                    "unused": 1,
                    "variable_e9": 1
                },
                "uStack_f3": {
                    "file_permission": 1,
                    "file_type": 8,
                    "file_type_char": 6,
                    "file_type_flag": 1,
                    "file_type_symbol": 1,
                    "first_character": 1,
                    "permission": 3,
                    "permission_char": 1,
                    "permission_char_3": 1,
                    "permission_str": 1,
                    "special_permissions": 1,
                    "type_code": 1
                },
                "uVar4": {
                    "file_info_flags": 1,
                    "file_mode": 8,
                    "file_permission": 2,
                    "file_permissions": 6,
                    "file_type": 11,
                    "permission": 1,
                    "permission_bits": 2
                }
            },
            "called": [
                "FUN_00102d8c",
                "FUN_001024f0",
                "FUN_00102150"
            ],
            "calling": [
                "FUN_00103ddc",
                "FUN_00107890"
            ],
            "code": "\nvoid format_and_print_file_info_001079c0(FILE *file,char **file_info,char print_time,char print_address)\n\n{\n  int result;\n  char **file_info_ptr;\n  char *time_string;\n  uint file_type;\n  time_t current_time;\n  undefined file_type;\n  char user_read;\n  char user_write;\n  char user_execute;\n  char group_read;\n  char group_write;\n  char group_execute;\n  char other_read;\n  char other_write;\n  char other_execute;\n  undefined is_other;\n  char formatted_time [48];\n  undefined local_buffer [24];\n  uint file_size;\n  uint user_id;\n  uint group_id;\n  undefined8 file_size;\n  time_t file_modified;\n  \n  if (print_time != '\\0') {\n    file_info_ptr = (char **)file_info[0x1d];\n    if ((char **)file_info[0x1d] == (char **)0x0) {\n      file_info_ptr = file_info;\n    }\n    result = (**(code **)(file_info_ptr[1] + 0x1e8))(file_info,local_buffer);\n    if (result == 0) {\n      current_time = file_modified;\n      time_string = ctime(&current_time);\n      if (time_string == (char *)0x0) {\n        time_string = (char *)dcgettext(0,\"<time data corrupt>\",5);\n        sfprintf(formatted_time,time_string);\n      }\n      else {\n        sfprintf(formatted_time,\"%.12s %.4s\",time_string + 4);\n      }\n      file_type = file_size & 0xf000;\n      if (file_type == 0x4000) {\n        file_type = 100;\n      }\n      else if (file_type == 0xa000) {\n        file_type = 0x6c;\n      }\n      else if (file_type == 0x6000) {\n        file_type = 0x62;\n      }\n      else if (file_type == 0x2000) {\n        file_type = 99;\n      }\n      else if (file_type == 0xc000) {\n        file_type = 0x73;\n      }\n      else {\n        file_type = 0x70;\n        if (file_type != 0x1000) {\n          file_type = 0x2d;\n        }\n      }\n      user_read = (-((file_size & 0x100) == 0) & 0xbbU) + 0x72;\n      user_write = (-((file_size & 0x80) == 0) & 0xb6U) + 0x77;\n      user_execute = (-((file_size & 0x40) == 0) & 0xb5U) + 0x78;\n      group_read = (-((file_size & 0x20) == 0) & 0xbbU) + 0x72;\n      group_write = (-((file_size & 0x10) == 0) & 0xb6U) + 0x77;\n      group_execute = (-((file_size & 8) == 0) & 0xb5U) + 0x78;\n      other_read = (-((file_size & 4) == 0) & 0xbbU) + 0x72;\n      other_write = (-((file_size & 2) == 0) & 0xb6U) + 0x77;\n      other_execute = (-((file_size & 1) == 0) & 0xb5U) + 0x78;\n      if ((file_size & 0x800) != 0) {\n        if (user_execute == 'x') {\n          user_execute = 's';\n        }\n        else {\n          user_execute = 'S';\n        }\n      }\n      if ((file_size & 0x400) != 0) {\n        if (group_execute == 'x') {\n          group_execute = 's';\n        }\n        else {\n          group_execute = 'S';\n        }\n      }\n      if ((file_size & 0x200) != 0) {\n        if (other_execute == 'x') {\n          other_execute = 't';\n        }\n        else {\n          other_execute = 'T';\n        }\n      }\n      is_other = 0;\n      formatted_print(file,\"%s %ld/%ld %6lu %s \",&user_read,(ulong)user_id,(ulong)group_id,file_size,\n              formatted_time,(ulong)file_size);\n    }\n  }\n  put_string(*file_info,file);\n  if (print_address != '\\0') {\n    if ((*(byte *)((long)file_info + 0x49) & 0x10) == 0) {\n      if (file_info[0xb] != (char *)0x0) {\n        formatted_print(file,\" 0x%lx\");\n      }\n    }\n    else if (file_info[0xc] != (char *)0x0) {\n      formatted_print(file,\" 0x%lx\");\n    }\n  }\n  put_char(10,file);\n  return;\n}\n\n",
            "current_name": "format_and_print_file_info_001079c0",
            "entrypoint": "0x001079c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001079c0": "format_and_print_file_info_001079c0",
                "cStack_ea": "other_execute",
                "cStack_eb": "other_write",
                "cStack_ec": "other_read",
                "cStack_ed": "group_execute",
                "cStack_ee": "group_write",
                "cStack_ef": "group_read",
                "cStack_f0": "user_execute",
                "cStack_f1": "user_write",
                "cStack_f2": "user_read",
                "fprintf": "formatted_print",
                "fputc": "put_char",
                "fputs": "put_string",
                "iVar1": "result",
                "local_100": "current_time",
                "local_60": "file_modified",
                "local_b8": "local_buffer",
                "local_e8": "formatted_time",
                "param_1": "file",
                "param_2": "file_info",
                "param_3": "print_time",
                "param_4": "print_address",
                "pcVar3": "time_string",
                "ppcVar2": "file_info_ptr",
                "printf": "fprintf",
                "uStack_88": "file_size",
                "uStack_98": "group_id",
                "uStack_9c": "user_id",
                "uStack_a0": "file_size",
                "uStack_e9": "is_other",
                "uStack_f3": "file_type",
                "uVar4": "file_type"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107c10": {
            "additional_data": {
                "FUN_00107c10": {
                    "cleanup_and_exit": 1,
                    "exit_on_error": 1,
                    "exit_process": 1,
                    "exit_program": 3,
                    "exit_with_error": 16,
                    "exit_with_error_code": 1,
                    "exit_with_nonfatal_error": 1,
                    "handle_error": 1,
                    "perform_cleanup": 2,
                    "terminate_program": 4
                },
                "FUN_00107c20": {
                    "handle_error": 4,
                    "perform_action": 1,
                    "process_data": 14,
                    "process_input": 2,
                    "process_parameter": 5,
                    "process_value": 1
                },
                "param_1": {
                    "action_parameter": 1,
                    "data": 3,
                    "error_code": 5,
                    "input_param": 1,
                    "input_value": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_00102480",
                "FUN_00107c20"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00102d2f",
                "FUN_00105300",
                "FUN_001058b0"
            ],
            "code": "\nvoid exit_with_nonfatal_error_00107c10(void)\n\n{\n  bfd_nonfatal();\n                    \n  xexit(1);\n}\n\n",
            "current_name": "exit_with_nonfatal_error_00107c10",
            "entrypoint": "0x00107c10",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107c10": "exit_with_nonfatal_error_00107c10"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107c20": {
            "additional_data": {
                "FUN_00102f96": {
                    "handle_unknown_error": 1
                },
                "FUN_00107c20": {
                    "print_bfd_error_message": 1,
                    "print_error": 6,
                    "print_error_details": 1,
                    "print_error_message": 23
                },
                "_stderr": {
                    "error_output": 1,
                    "standard_error": 1
                },
                "_stdout": {
                    "standard_output": 2
                },
                "iVar1": {
                    "error": 15,
                    "error_code": 7,
                    "error_flag": 1,
                    "error_status": 4,
                    "error_type": 2,
                    "error_value": 2
                },
                "in_R10": {
                    "additional_info": 8,
                    "additional_message": 1,
                    "extra_info": 1,
                    "unknown_cause": 1,
                    "unknown_error": 2,
                    "unknown_parameter": 1,
                    "unknown_value": 1,
                    "unmodified_parameter": 1,
                    "unused_param": 1,
                    "unused_variable": 3,
                    "variable_in_r10": 1
                },
                "param_1": {
                    "error": 2,
                    "error_category": 1,
                    "error_description": 4,
                    "error_file_path": 1,
                    "error_flag": 1,
                    "error_message": 8,
                    "error_string": 2,
                    "error_type": 8,
                    "file_name": 1,
                    "filename": 3
                },
                "uVar2": {
                    "error_description": 2,
                    "error_message": 20,
                    "error_message_text": 1,
                    "error_message_translated": 1,
                    "error_message_translation": 1,
                    "error_msg": 1,
                    "error_string": 4,
                    "errormsg": 1
                }
            },
            "called": [
                "FUN_001024d0",
                "FUN_00102220",
                "FUN_00102f96"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00107c10",
                "FUN_00105300"
            ],
            "code": "\n\n\nvoid print_bfd_error_message_00107c20(long error_type)\n\n{\n  int error;\n  undefined8 error_message;\n  undefined8 additional_info;\n  \n  error = bfd_get_error();\n  if (error == 0) {\n    error_message = dcgettext(0,\"cause of error unknown\",5);\n  }\n  else {\n    error_message = bfd_errmsg(error);\n  }\n  fflush(standard_output);\n  if (error_type != 0) {\n    fprintf(standard_error,\"%s: %s: %s\\n\",DAT_0010d660,error_type,error_message,additional_info);\n    return;\n  }\n  fprintf(standard_error,\"%s: %s\\n\",DAT_0010d660,error_message,additional_info);\n  return;\n}\n\n",
            "current_name": "print_bfd_error_message_00107c20",
            "entrypoint": "0x00107c20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107c20": "print_bfd_error_message_00107c20",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "iVar1": "error",
                "in_R10": "additional_info",
                "param_1": "error_type",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107c80": {
            "additional_data": {
                "FUN_00107c80": {
                    "set_file_modification_time": 5,
                    "set_file_time": 19,
                    "set_file_times": 1,
                    "set_file_timestamp": 4,
                    "set_file_timestamps": 2
                },
                "iVar1": {
                    "result": 30,
                    "return_value": 1
                },
                "local_28": {
                    "backup_access_time": 2,
                    "backup_modification_time": 1,
                    "file_flags": 1,
                    "file_time_struct": 1,
                    "tv_buf_access": 1
                },
                "local_38": {
                    "access_time": 11,
                    "access_time_sec": 1,
                    "atime": 1,
                    "create_time": 1,
                    "mod_time_sec": 1,
                    "modification_time": 1,
                    "modification_time_spec": 1,
                    "modification_time_tv_sec": 1,
                    "modification_timespec": 1,
                    "time_spec1": 1,
                    "timespec_sec": 1,
                    "timespec_struct": 1,
                    "tv_buf": 1
                },
                "param_1": {
                    "file_name": 2,
                    "file_path": 24,
                    "filename": 4,
                    "filepath": 1
                },
                "param_2": {
                    "binary_data": 1,
                    "file_data": 3,
                    "file_info": 21,
                    "file_info_ptr": 1,
                    "file_information": 1,
                    "file_struct": 1,
                    "metadata_address": 2,
                    "struct_address": 1
                },
                "pcVar3": {
                    "err_msg": 3,
                    "error_code_string": 1,
                    "error_message": 12,
                    "error_msg": 7,
                    "error_str": 2,
                    "error_string": 6
                },
                "piVar2": {
                    "err_num_ptr": 1,
                    "err_number_ptr": 1,
                    "errno": 2,
                    "errno_loc": 2,
                    "errno_location": 2,
                    "errno_pointer": 1,
                    "errno_ptr": 11,
                    "error": 3,
                    "error_code": 2,
                    "error_code_pointer": 1,
                    "error_number": 2,
                    "error_ptr": 2,
                    "p_error_code": 1
                },
                "uStack_1c": {
                    "backup_creation_time": 1,
                    "backup_file_time": 1,
                    "reserved3": 1,
                    "tv_buf_birth": 1,
                    "unknown3": 1
                },
                "uStack_20": {
                    "backup_change_time": 1,
                    "backup_status_change_time": 1,
                    "reserved2": 1,
                    "tv_buf_change": 1,
                    "unknown2": 1
                },
                "uStack_24": {
                    "backup_modification_time": 2,
                    "reserved1": 1,
                    "tv_buf_mod": 1,
                    "unknown1": 1
                },
                "uStack_2c": {
                    "access_time_nsec": 1,
                    "access_time_tv_nsec": 1,
                    "atime_nsec": 1,
                    "backup_time": 1,
                    "birth_time": 2,
                    "change_time": 3,
                    "create_time": 2,
                    "creation_time": 3,
                    "file_time": 1,
                    "flags": 1,
                    "modify_time_nano": 1,
                    "time_spec4": 1,
                    "timespec_unused2": 1,
                    "tv_buf_nano_extra": 1
                },
                "uStack_30": {
                    "access_time_sec": 1,
                    "access_time_tv_sec": 1,
                    "change_time": 7,
                    "create_time": 1,
                    "creation_time": 2,
                    "modify_time": 1,
                    "modify_time_sec": 1,
                    "mtime_sec": 1,
                    "status_change_time": 2,
                    "status_change_time_spec": 1,
                    "time_spec3": 1,
                    "timespec_unused1": 1,
                    "tv_buf_nano": 1
                },
                "uStack_34": {
                    "access_time": 2,
                    "access_time_nano": 1,
                    "access_time_spec": 1,
                    "mod_time": 3,
                    "mod_time_nsec": 1,
                    "modification_time": 8,
                    "modification_time_tv_nsec": 1,
                    "mtime_nsec": 1,
                    "time_spec2": 1,
                    "timespec_nsec": 1,
                    "tv_buf_sec": 1
                },
                "uVar4": {
                    "error_message": 4,
                    "error_msg": 3,
                    "error_msg_format": 1,
                    "error_str": 3,
                    "error_string": 2,
                    "error_text": 1,
                    "localized_error_message": 2,
                    "localized_error_msg": 3,
                    "translated_error_message": 6,
                    "translated_error_msg": 1,
                    "translated_message": 3,
                    "translated_msg": 1,
                    "translated_string": 1
                }
            },
            "called": [
                "FUN_00102fd7",
                "FUN_00102040"
            ],
            "calling": [
                "FUN_00102c25"
            ],
            "code": "\nvoid set_file_modification_time_00107c80(char *file_path,long file_info)\n\n{\n  int result;\n  int *errno_ptr;\n  char *error_message;\n  undefined8 translated_error_message;\n  undefined4 access_time;\n  undefined4 modification_time;\n  undefined4 change_time;\n  undefined4 change_time;\n  undefined4 backup_access_time;\n  undefined4 backup_modification_time;\n  undefined4 backup_status_change_time;\n  undefined4 unknown3;\n  \n  backup_access_time = *(undefined4 *)(file_info + 0x58);\n  backup_modification_time = *(undefined4 *)(file_info + 0x5c);\n  backup_status_change_time = *(undefined4 *)(file_info + 0x60);\n  unknown3 = *(undefined4 *)(file_info + 100);\n  access_time = *(undefined4 *)(file_info + 0x48);\n  modification_time = *(undefined4 *)(file_info + 0x4c);\n  change_time = *(undefined4 *)(file_info + 0x50);\n  change_time = *(undefined4 *)(file_info + 0x54);\n  result = utimensat(-100,file_path,(timespec *)&access_time,0);\n  if (result != 0) {\n    errno_ptr = __errno_location();\n    error_message = strerror(*errno_ptr);\n    translated_error_message = dcgettext(0,\"%s: cannot set time: %s\",5);\n    non_fatal(translated_error_message,file_path,error_message);\n  }\n  return;\n}\n\n",
            "current_name": "set_file_modification_time_00107c80",
            "entrypoint": "0x00107c80",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107c80": "set_file_modification_time_00107c80",
                "iVar1": "result",
                "local_28": "backup_access_time",
                "local_38": "access_time",
                "param_1": "file_path",
                "param_2": "file_info",
                "pcVar3": "error_message",
                "piVar2": "errno_ptr",
                "uStack_1c": "unknown3",
                "uStack_20": "backup_status_change_time",
                "uStack_24": "backup_modification_time",
                "uStack_2c": "change_time",
                "uStack_30": "change_time",
                "uStack_34": "modification_time",
                "uVar4": "translated_error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107cc0": {
            "additional_data": {
                "0x0": {
                    "null_pointer": 1
                },
                "FUN_00107cc0": {
                    "execute_callbacks": 5,
                    "execute_function_chain": 3,
                    "execute_function_list": 1,
                    "execute_functions": 9
                },
                "LAB_00107d96": {
                    "end_loop": 1
                },
                "PLIST": {
                    "function_chain": 1
                },
                "PTR_DAT_0010d2e0": {
                    "function_list": 1
                },
                "do": {
                    "while": 1
                },
                "else": {
                    "alternate": 1
                },
                "if": {
                    "check": 1
                },
                "lVar1": {
                    "callback_index": 2,
                    "current_count": 1,
                    "current_index": 8,
                    "current_iteration": 1,
                    "func2_addr": 1,
                    "func_index": 2,
                    "i": 1,
                    "index": 10,
                    "index_var1": 1,
                    "last_index": 1,
                    "loop_counter1": 1,
                    "loop_index": 1,
                    "previous_index": 1
                },
                "lVar2": {
                    "count1": 1,
                    "current_index": 2,
                    "func8_addr": 1,
                    "index_var2": 1,
                    "inner_index": 1,
                    "j": 1,
                    "loop_counter2": 1,
                    "loop_var": 1,
                    "nested_loop_index": 1,
                    "prev_count": 1,
                    "prev_func_index": 1,
                    "prev_index": 9,
                    "previous_callback_index": 1,
                    "previous_index": 8,
                    "previous_iteration": 1
                },
                "lVar3": {
                    "before_previous_iteration": 1,
                    "count2": 1,
                    "current_index": 1,
                    "func5_addr": 1,
                    "index_var3": 1,
                    "inner_inner_index": 1,
                    "inner_loop_var": 1,
                    "k": 1,
                    "loop_counter3": 1,
                    "loop_index": 2,
                    "nested_loop_index2": 1,
                    "prev_index2": 1,
                    "prev_prev_count": 1,
                    "prev_prev_func_index": 1,
                    "prev_prev_index": 2,
                    "temp_index": 14
                },
                "plVar4": {
                    "callback_list": 5,
                    "function_array": 1,
                    "function_chain": 1,
                    "function_list": 11,
                    "function_pointer": 4,
                    "function_pointer_list": 3,
                    "function_pointers": 3,
                    "function_ptr": 2
                },
                "sizeof": {
                    "size_of": 1
                },
                "uVar5": {
                    "callback_count": 3,
                    "callback_type": 1,
                    "count": 9,
                    "counter": 1,
                    "function_index": 2,
                    "index": 7,
                    "iteration_count": 4,
                    "num_functions": 2,
                    "remaining_count": 1,
                    "remaining_size": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid execute_functions_00107cc0(void)\n\n{\n  long index;\n  long prev_index;\n  long temp_index;\n  long *function_list;\n  uint count;\n  \n  function_list = (long *)PTR_DAT_0010d2e0;\n  check (PTR_DAT_0010d2e0 != (undefined *)0x0) {\n    while {\n      count = *(int *)(function_list + 1) - 1;\n      check (-1 < (int)count) {\n        index = (long)(int)count;\n        count = count & 7;\n        (*(code *)function_list[index + 2])();\n        prev_index = index + -1;\n        check (-1 < (int)prev_index) {\n          temp_index = prev_index;\n          check (count != 0) {\n            check (count != 1) {\n              check (count != 2) {\n                check (count != 3) {\n                  check (count != 4) {\n                    check (count != 5) {\n                      check (count != 6) {\n                        (*(code *)function_list[index + 1])();\n                        prev_index = index + -2;\n                      }\n                      (*(code *)function_list[prev_index + 2])();\n                      prev_index = prev_index + -1;\n                    }\n                    (*(code *)function_list[prev_index + 2])();\n                    prev_index = prev_index + -1;\n                  }\n                  (*(code *)function_list[prev_index + 2])();\n                  prev_index = prev_index + -1;\n                }\n                (*(code *)function_list[prev_index + 2])();\n                prev_index = prev_index + -1;\n              }\n              (*(code *)function_list[prev_index + 2])();\n              prev_index = prev_index + -1;\n            }\n            (*(code *)function_list[prev_index + 2])();\n            temp_index = prev_index + -1;\n            check ((int)(prev_index + -1) < 0) goto end_loop;\n          }\n          while {\n            (*(code *)function_list[temp_index + 2])();\n            index = temp_index + -1;\n            (*(code *)function_list[temp_index + 1])();\n            (*(code *)function_list[temp_index])();\n            (*(code *)function_list[index])();\n            (*(code *)function_list[temp_index + -2])();\n            (*(code *)function_list[temp_index + -3])();\n            (*(code *)function_list[temp_index + -4])();\n            (*(code *)function_list[temp_index + -5])();\n            temp_index = temp_index + -8;\n          } while (-1 < (int)index + -7);\n        }\n      }\nend_loop:\n      function_list = (long *)*function_list;\n    } while (function_list != (long *)0x0);\n  }\n  return;\n}\n\n",
            "current_name": "execute_functions_00107cc0",
            "entrypoint": "0x00107cc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107cc0": "execute_functions_00107cc0",
                "LAB_00107d96": "end_loop",
                "do": "while",
                "if": "check",
                "lVar1": "index",
                "lVar2": "prev_index",
                "lVar3": "temp_index",
                "plVar4": "function_list",
                "uVar5": "count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107da8": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00107da8(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00107da8",
            "entrypoint": "0x00107da8",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00107da8": "FUNC_00107da8"
            },
            "skipped": true,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_00102000",
            "FUN_00102020",
            "FUN_001025a0",
            "FUN_0010266f",
            "FUN_00102710",
            "FUN_0010284b",
            "FUN_0010285f",
            "FUN_001028ed",
            "FUN_00102943",
            "FUN_00102ba1",
            "FUN_00102bb0",
            "FUN_00102bf5",
            "FUN_00102c25",
            "FUN_00102cd9",
            "FUN_00102d2f",
            "FUN_00102d8c",
            "FUN_00102e57",
            "FUN_00102f08",
            "FUN_00102f1e",
            "FUN_00102f55",
            "FUN_00102f96",
            "FUN_00102fd7",
            "FUN_0010300e",
            "FUN_001030ed",
            "FUN_0010312d",
            "FUN_0010315d",
            "FUN_00103172",
            "FUN_001031a5",
            "FUN_001031cf",
            "FUN_001032a8",
            "FUN_0010336b",
            "FUN_001033b0",
            "FUN_001033d6",
            "FUN_0010342d",
            "FUN_0010394a",
            "FUN_00103a78",
            "FUN_00103ba8",
            "FUN_00103bd1",
            "FUN_00103c60",
            "FUN_00103ddc",
            "FUN_00103df9",
            "FUN_00103e95",
            "FUN_001052a0",
            "FUN_00105300",
            "FUN_00105480",
            "FUN_001057a0",
            "FUN_00105830",
            "FUN_00105870",
            "FUN_001058b0",
            "FUN_00105a20",
            "FUN_00105a68",
            "FUN_00105ae0",
            "FUN_00105bb0",
            "FUN_00105bc0",
            "FUN_00105c00",
            "FUN_00105cc0",
            "FUN_00105d60",
            "FUN_00105db0",
            "FUN_001075e0",
            "FUN_00107640",
            "FUN_00107650",
            "FUN_00107690",
            "FUN_00107730",
            "FUN_00107740",
            "FUN_00107890",
            "FUN_001078c0",
            "FUN_00107920",
            "FUN_001079c0",
            "FUN_00107c10",
            "FUN_00107c20",
            "FUN_00107c80",
            "FUN_00107cc0"
        ],
        [
            "FUN_00102e6f",
            "FUN_00105570"
        ],
        [
            "FUN_00105af0"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 382037
}