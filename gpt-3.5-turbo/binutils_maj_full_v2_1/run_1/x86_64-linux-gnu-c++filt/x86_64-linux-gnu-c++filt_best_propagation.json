{
    "functions": {
        "FUN_00102000": {
            "additional_data": {
                "FUN_00102000": {
                    "initialize": 6,
                    "initialize_monitor": 1,
                    "initialize_monitor_start": 1,
                    "initialize_monitoring": 5,
                    "initialize_profiler": 1,
                    "initialize_program": 15,
                    "start_monitoring": 1,
                    "start_program": 1
                },
                "__gmon_start__": {
                    "activate_profiling": 1,
                    "call_monitor_start": 1,
                    "initialize_gmon": 2,
                    "initialize_monitoring": 2,
                    "initialize_performance_monitor": 1,
                    "initialize_profiler": 3,
                    "register_monitor": 1,
                    "start_monitoring": 9,
                    "start_performance_monitoring": 1,
                    "start_performance_profiling": 1,
                    "start_profiling": 4
                },
                "return": {
                    "exit": 1
                }
            },
            "called": [
                "FUN_0010e0d8"
            ],
            "calling": [],
            "code": "\nvoid initialize_program_00102000(void)\n\n{\n  start_monitoring();\n  exit;\n}\n\n",
            "current_name": "initialize_program_00102000",
            "entrypoint": "0x00102000",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102000": "initialize_program_00102000",
                "__gmon_start__": "start_monitoring",
                "return": "exit"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102020": {
            "additional_data": {
                "FUN_00102020": {
                    "call_indirect_jump": 1,
                    "execute_function": 2,
                    "execute_function_at_memory_address": 1,
                    "execute_function_at_null": 1,
                    "execute_indirect_call": 4,
                    "execute_indirect_function": 2,
                    "execute_indirect_jump": 20
                },
                "PTR_DAT_00102020": {
                    "data_pointer": 1
                },
                "PTR_FUN_00102020": {
                    "function_pointer": 1
                },
                "PTR_undefined": {
                    "ptr_undefined": 1
                },
                "code": {
                    "func_ptr": 1,
                    "function_pointer": 2,
                    "function_to_execute": 1,
                    "indirect_function": 1,
                    "indirect_jump_function": 2,
                    "jump_function": 1
                },
                "undefined": {
                    "address": 1,
                    "dummy_parameter": 1,
                    "func_address": 1,
                    "function_address": 1,
                    "function_pointer": 1,
                    "indirect_address": 1,
                    "jump_target": 1,
                    "target_address": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_indirect_jump_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(function_pointer *)(target_address *)0x0)();\n  return;\n}\n\n",
            "current_name": "execute_indirect_jump_00102020",
            "entrypoint": "0x00102020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102020": "execute_indirect_jump_00102020",
                "code": "function_pointer",
                "undefined": "target_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102030": {
            "called": [
                "FUN_0010e000"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\nvoid cplus_demangle_name_to_style(void)\n\n{\n  cplus_demangle_name_to_style();\n  return;\n}\n\n",
            "current_name": "FUN_00102030",
            "entrypoint": "0x00102030",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102040": {
            "called": [
                "FUN_0010e008"
            ],
            "calling": [
                "FUN_001024f0",
                "FUN_00102380"
            ],
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n",
            "current_name": "FUN_00102040",
            "entrypoint": "0x00102040",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102050": {
            "called": [
                "FUN_0010e030"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102050",
            "entrypoint": "0x00102050",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102060": {
            "called": [
                "FUN_0010e038"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_00102060",
            "entrypoint": "0x00102060",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102070": {
            "called": [
                "FUN_0010e048"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\nvoid cplus_demangle_set_style(void)\n\n{\n  cplus_demangle_set_style();\n  return;\n}\n\n",
            "current_name": "FUN_00102070",
            "entrypoint": "0x00102070",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102080": {
            "called": [
                "FUN_0010e050"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102080",
            "entrypoint": "0x00102080",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102090": {
            "called": [
                "FUN_0010e060"
            ],
            "calling": [
                "FUN_001024f0",
                "FUN_0010225e"
            ],
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n",
            "current_name": "FUN_00102090",
            "entrypoint": "0x00102090",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020a0": {
            "called": [
                "FUN_0010e068"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_001020a0",
            "entrypoint": "0x001020a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020b0": {
            "called": [
                "FUN_0010e070"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n",
            "current_name": "FUN_001020b0",
            "entrypoint": "0x001020b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020c0": {
            "called": [
                "FUN_0010e078"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\n\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strchr(__s,__c);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_001020c0",
            "entrypoint": "0x001020c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020d0": {
            "called": [
                "FUN_0010e080"
            ],
            "calling": [
                "FUN_001024f0",
                "FUN_00102380"
            ],
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001020d0",
            "entrypoint": "0x001020d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020e0": {
            "called": [
                "FUN_0010e088"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n",
            "current_name": "FUN_001020e0",
            "entrypoint": "0x001020e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020f0": {
            "called": [
                "FUN_0010e098"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n",
            "current_name": "FUN_001020f0",
            "entrypoint": "0x001020f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102100": {
            "called": [
                "FUN_0010e0a0"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n",
            "current_name": "FUN_00102100",
            "entrypoint": "0x00102100",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102110": {
            "called": [
                "FUN_0010e0a8"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n",
            "current_name": "FUN_00102110",
            "entrypoint": "0x00102110",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102120": {
            "called": [
                "FUN_0010e0b0"
            ],
            "calling": [
                "FUN_0010225e"
            ],
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102120",
            "entrypoint": "0x00102120",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102130": {
            "called": [
                "FUN_0010e0b8"
            ],
            "calling": [
                "FUN_001024f0",
                "FUN_00102380",
                "FUN_00102e20"
            ],
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102130",
            "entrypoint": "0x00102130",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102140": {
            "called": [
                "FUN_0010e0c8"
            ],
            "calling": [
                "FUN_001024f0",
                "FUN_0010225e",
                "FUN_00102e20"
            ],
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102140",
            "entrypoint": "0x00102140",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102150": {
            "called": [
                "FUN_0010e0d0"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n",
            "current_name": "FUN_00102150",
            "entrypoint": "0x00102150",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102160": {
            "called": [
                "FUN_0010e0e0"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102160",
            "entrypoint": "0x00102160",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102170": {
            "called": [
                "FUN_0010e0e8"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_00102170",
            "entrypoint": "0x00102170",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102180": {
            "called": [
                "FUN_0010e0f0"
            ],
            "calling": [
                "FUN_001024f0",
                "FUN_00102e20"
            ],
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102180",
            "entrypoint": "0x00102180",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102190": {
            "called": [
                "FUN_0010e100"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102190",
            "entrypoint": "0x00102190",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021a0": {
            "called": [
                "FUN_0010e108"
            ],
            "calling": [
                "FUN_00102380"
            ],
            "code": "\nvoid cplus_demangle(void)\n\n{\n  cplus_demangle();\n  return;\n}\n\n",
            "current_name": "FUN_001021a0",
            "entrypoint": "0x001021a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021b0": {
            "called": [
                "FUN_0010e110"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n",
            "current_name": "FUN_001021b0",
            "entrypoint": "0x001021b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021c0": {
            "called": [
                "FUN_0010e118"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_001021c0",
            "entrypoint": "0x001021c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021d0": {
            "called": [
                "FUN_0010e120"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n",
            "current_name": "FUN_001021d0",
            "entrypoint": "0x001021d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021e0": {
            "called": [
                "FUN_0010e128"
            ],
            "calling": [
                "FUN_001024f0",
                "FUN_00102e20"
            ],
            "code": "\nvoid xexit(void)\n\n{\n  xexit();\n  return;\n}\n\n",
            "current_name": "FUN_001021e0",
            "entrypoint": "0x001021e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021f0": {
            "called": [
                "FUN_0010e130"
            ],
            "calling": [
                "FUN_001024f0",
                "FUN_0010225e"
            ],
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n",
            "current_name": "FUN_001021f0",
            "entrypoint": "0x001021f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102200": {
            "called": [
                "FUN_0010e138"
            ],
            "calling": [
                "FUN_0010225e",
                "FUN_00102e20"
            ],
            "code": "\n\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fwrite(__ptr,__size,__n,__s);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_00102200",
            "entrypoint": "0x00102200",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102210": {
            "called": [
                "FUN_0010e148"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\n\n\nint getc(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = getc(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102210",
            "entrypoint": "0x00102210",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102220": {
            "called": [
                "FUN_0010e158"
            ],
            "calling": [
                "FUN_001024a0"
            ],
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n",
            "current_name": "FUN_00102220",
            "entrypoint": "0x00102220",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102230": {
            "additional_data": {
                "FUN_00102230": {
                    "print_demangled_name": 2,
                    "print_demangled_str": 1,
                    "print_demangled_string": 17,
                    "print_demangled_symbol": 1,
                    "print_dotted_string": 1,
                    "print_mangled_string": 2,
                    "print_modified_string": 1,
                    "print_possible_name": 1,
                    "print_reversed_string": 1,
                    "print_section_name": 1,
                    "print_symbol": 1,
                    "print_symbol_or_dot": 1,
                    "reverse_and_print_string": 1
                },
                "__ptr": {
                    "demangled_name": 4,
                    "demangled_str": 2,
                    "demangled_string": 20,
                    "demangled_symbol": 2,
                    "mangled_string": 2
                },
                "_stdout": {
                    "standard_output": 3,
                    "stdout": 1
                },
                "free": {
                    "dealloc_memory": 1
                },
                "in_AL": {
                    "byte_value": 4,
                    "char_index": 2,
                    "char_offset": 1,
                    "character": 13,
                    "character_index": 1,
                    "current_char": 3,
                    "index": 4,
                    "input_byte": 2,
                    "symbol": 1
                },
                "param_1": {
                    "address_offset": 1,
                    "index": 11,
                    "input": 3,
                    "input_length": 1,
                    "input_offset": 1,
                    "input_param": 1,
                    "offset": 8,
                    "param_index": 1,
                    "position": 2,
                    "string_index": 2
                },
                "printf": {
                    "print_formatted_string": 1
                },
                "putc": {
                    "put_character": 1
                },
                "unaff_RBX": {
                    "input_string": 2,
                    "mangled_string_start": 1,
                    "name": 1,
                    "section_name": 1,
                    "str_ptr": 1,
                    "string": 14,
                    "string_data": 1,
                    "string_pointer": 1,
                    "string_ptr": 4,
                    "symbol": 1,
                    "symbol_array": 1,
                    "symbol_name": 1,
                    "symbol_string": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00102380"
            ],
            "code": "\n\n\nvoid print_demangled_string_00102230(ulong index)\n\n{\n  byte character;\n  void *demangled_string;\n  char *string;\n  \n  if (string[character] == '_') {\n    index = (ulong)((int)index + 1);\n  }\n  demangled_string = (void *)cplus_demangle(string + index,DAT_00105108);\n  if (demangled_string != (void *)0x0) {\n    if (*string == '.') {\n      put_character(0x2e,standard_output);\n    }\n    print_formatted_string(\"%s\",demangled_string);\n    dealloc_memory(demangled_string);\n    return;\n  }\n  print_formatted_string(\"%s\");\n  return;\n}\n\n",
            "current_name": "print_demangled_string_00102230",
            "entrypoint": "0x00102230",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102230": "print_demangled_string_00102230",
                "__ptr": "demangled_string",
                "_stdout": "standard_output",
                "free": "dealloc_memory",
                "in_AL": "character",
                "param_1": "index",
                "printf": "print_formatted_string",
                "putc": "put_character",
                "unaff_RBX": "string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010225e": {
            "additional_data": {
                "DAT_001035e8": {
                    "additional_options": 1,
                    "closing_brace": 1,
                    "demangler_closing_brace": 1,
                    "extra_options": 3
                },
                "DAT_0010d148": {
                    "mangled_names": 2,
                    "option_str": 1,
                    "option_string": 1,
                    "program_name": 1,
                    "usage_message": 1
                },
                "DCGETTEXT_5": {
                    "get_bug_report_msg": 1
                },
                "FUN_0010225e": {
                    "display_help_and_exit": 1,
                    "display_help_information": 1,
                    "display_usage": 2,
                    "display_usage_and_exit": 4,
                    "display_usage_info": 2,
                    "print_usage": 11,
                    "print_usage_and_exit": 9,
                    "print_usage_info": 1
                },
                "__format": {
                    "bug_format": 1,
                    "bug_report_format": 16,
                    "bug_report_message": 1,
                    "bugs_report_format": 2,
                    "bugs_report_message": 1,
                    "error_message_format": 1,
                    "format_str": 3,
                    "format_string": 6
                },
                "_libiberty_demanglers": {
                    "additional_demanglers": 1,
                    "demangler_list": 1,
                    "demangler_names": 1,
                    "demangler_options": 3,
                    "demanglers": 4,
                    "demanglers_list": 2,
                    "libiberty_demanglers": 1
                },
                "_libiberty_demanglers_counter": {
                    "demanglers_counter": 1
                },
                "char": {
                    "character": 1
                },
                "dcgettext": {
                    "get_bug_report_string": 1,
                    "get_localized_text": 1,
                    "get_translated_string": 1
                },
                "exit": {
                    "exit_program": 1
                },
                "fprintf": {
                    "print_to_output": 1,
                    "write_to_file": 1
                },
                "fputc": {
                    "write_char": 1,
                    "write_char_to_output": 1
                },
                "fwrite": {
                    "write_to_buffer": 1,
                    "write_to_output": 1
                },
                "int": {
                    "integer": 1
                },
                "param_1": {
                    "file": 8,
                    "file_pointer": 3,
                    "file_ptr": 2,
                    "file_stream": 1,
                    "output_file": 17
                },
                "param_2": {
                    "error_code": 1,
                    "exit_code": 29,
                    "exit_status": 1
                },
                "puVar1": {
                    "demangler": 1,
                    "demangler_iterator": 1,
                    "demangler_pointer": 7,
                    "demangler_ptr": 6,
                    "demanglers_array": 1,
                    "demanglers_pointer": 3,
                    "demanglers_ptr": 5,
                    "libiberty_demangler": 1,
                    "pointer": 1,
                    "pointer_to_demanglers": 2,
                    "pointer_var1": 1,
                    "ptr": 1
                },
                "stdin": {
                    "standard_input": 1
                },
                "undefined8": {
                    "pointer": 1
                }
            },
            "called": [
                "FUN_001021f0",
                "FUN_0010e118",
                "FUN_00102090",
                "FUN_0010e110",
                "FUN_00102120",
                "FUN_00102200",
                "FUN_00102140",
                "FUN_0010e130"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\n\n\nvoid print_usage_and_exit_0010225e(FILE *output_file,integer exit_code)\n\n{\n  character *bug_report_format;\n  pointer *demangler_pointer;\n  \n  write_to_file(output_file,\"Usage: %s [options] [mangled names]\\n\",DAT_0010d148);\n  write_to_file(output_file,\"Options are:\\n  [-_|--strip-underscore]     Ignore first leading underscore%s\\n\",\n          \"\");\n  write_to_file(output_file,\"  [-n|--no-strip-underscore]  Do not ignore a leading underscore%s\\n\",\n          \" (default)\");\n  write_to_buffer(\"  [-p|--no-params]            Do not display function arguments\\n  [-i|--no-verbose]           Do not show implementation details (if any)\\n  [-R|--recurse-limit]        Enable a limit on recursion whilst demangling.  [Default]\\n  ]-r|--no-recurse-limit]     Disable a limit on recursion whilst demangling\\n  [-t|--types]                Also attempt to demangle type encodings\\n  [-s|--format \"\n         ,1,0x184,output_file);\n  write_to_file(output_file,\"{%s\",demanglers);\n  demangler_pointer = (pointer *)&libiberty_demanglers;\n  while (*(integer *)(demangler_pointer + 4) != 0) {\n    write_to_file(output_file,\",%s\",demangler_pointer[3]);\n    demangler_pointer = demangler_pointer + 3;\n  }\n  write_char_to_output(0x7d,output_file);\n  write_to_buffer(&DAT_001035e8,1,2,output_file);\n  write_to_buffer(\"  [@<file>]                   Read extra options from <file>\\n  [-h|--help]                 Display this information\\n  [-v|--version]              Show the version information\\nDemangled names are displayed to stdout.\\nIf a name cannot be demangled it is just echoed to stdout.\\nIf no names are provided on the command line, standard_input is read.\\n\"\n         ,1,0x150,output_file);\n  if (exit_code == 0) {\n    bug_report_format = (character *)get_localized_text(0,\"Report bugs to %s.\\n\",5);\n    write_to_file(output_file,bug_report_format,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  exit_program(exit_code);\n}\n\n",
            "current_name": "print_usage_and_exit_0010225e",
            "entrypoint": "0x0010225e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010225e": "print_usage_and_exit_0010225e",
                "__format": "bug_report_format",
                "_libiberty_demanglers": "demanglers",
                "char": "character",
                "dcgettext": "get_localized_text",
                "exit": "exit_program",
                "fprintf": "write_to_file",
                "fputc": "write_char_to_output",
                "fwrite": "write_to_buffer",
                "int": "integer",
                "param_1": "output_file",
                "param_2": "exit_code",
                "puVar1": "demangler_pointer",
                "stdin": "standard_input",
                "undefined8": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102380": {
            "additional_data": {
                "DAT_00105108": {
                    "dat_00105108": 1
                },
                "FUN_00102380": {
                    "demangle_and_print": 3,
                    "print_demangled_name": 7,
                    "print_demangled_string": 2,
                    "print_formatted_string": 1,
                    "print_identifier": 1,
                    "print_mangled_name": 1,
                    "print_or_concatenate_string": 1,
                    "print_param": 1,
                    "print_special_characters": 1,
                    "print_symbol": 4,
                    "print_symbol_name": 6,
                    "print_symbol_or_string": 1,
                    "reverse_print": 1
                },
                "_DAT_0010d140": {
                    "_dat_0010d140": 1,
                    "check_flag": 1,
                    "check_offset": 1,
                    "is_enabled": 2,
                    "is_flag_set": 1
                },
                "__ptr": {
                    "demangled_name": 12,
                    "demangled_string": 12,
                    "demangled_symbol": 7
                },
                "_stdout": {
                    "stdout": 2
                },
                "cplus_demangle": {
                    "demangle_identifier": 1,
                    "demangle_name": 1
                },
                "free": {
                    "free_memory": 1,
                    "release_memory": 1
                },
                "param_1": {
                    "identifier": 1,
                    "input": 1,
                    "input_string": 12,
                    "name": 5,
                    "string": 2,
                    "symbol": 5,
                    "symbol_name": 5
                },
                "param_2": {
                    "arg2": 6,
                    "param1": 1,
                    "param2": 3,
                    "param_2": 4,
                    "parameter2": 1,
                    "some_pointer": 1,
                    "unnamed_arg2": 1,
                    "unused": 1,
                    "unused1": 4,
                    "unused_param1": 5,
                    "unused_param_1": 1,
                    "unused_param_2": 2
                },
                "param_3": {
                    "arg3": 6,
                    "other_pointer": 1,
                    "param2": 1,
                    "param3": 3,
                    "param_3": 4,
                    "parameter3": 1,
                    "unnamed_arg3": 1,
                    "unused": 1,
                    "unused2": 4,
                    "unused_param2": 5,
                    "unused_param_2": 1,
                    "unused_param_3": 2
                },
                "param_4": {
                    "arg4": 6,
                    "extra_parameter": 1,
                    "param3": 1,
                    "param4": 3,
                    "param_4": 4,
                    "parameter4": 1,
                    "unnamed_arg4": 1,
                    "unused": 1,
                    "unused3": 4,
                    "unused_param3": 5,
                    "unused_param_3": 1,
                    "unused_param_4": 2,
                    "yet_another_pointer": 1
                },
                "printf": {
                    "print_string": 2
                },
                "putc": {
                    "print_char": 1,
                    "print_dot": 1
                },
                "uVar1": {
                    "has_dot_or_dollar": 1,
                    "has_special_prefix": 1,
                    "is_dot_or_dollar": 8,
                    "is_special_char": 9,
                    "is_special_character": 2,
                    "starts_with_dot_or_dollar": 10
                },
                "uVar2": {
                    "char_index": 1,
                    "character_offset": 1,
                    "index": 1,
                    "index_offset": 1,
                    "num_leading_chars": 1,
                    "offset": 9,
                    "prefix_length": 1,
                    "shift_symbol_index": 1,
                    "start_index": 12,
                    "starts_with_underscore": 1,
                    "u_var2": 1,
                    "update_u_var2": 1
                }
            },
            "called": [
                "FUN_001021a0",
                "FUN_00102130",
                "FUN_00102230",
                "FUN_001020d0",
                "FUN_00102040"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\n\n\nvoid print_symbol_name_00102380(char *input_string,undefined8 arg2,undefined8 arg3,undefined8 arg4)\n\n{\n  uint starts_with_dot_or_dollar;\n  void *demangled_string;\n  ulong start_index;\n  \n  starts_with_dot_or_dollar = (uint)(*input_string == '.' || *input_string == '$');\n  start_index = (ulong)starts_with_dot_or_dollar;\n  if ((_DAT_0010d140 != 0) && (input_string[starts_with_dot_or_dollar] == '_')) {\n    start_index = (ulong)(starts_with_dot_or_dollar + 1);\n  }\n  demangled_string = (void *)demangle_name(input_string + start_index,DAT_00105108);\n  if (demangled_string != (void *)0x0) {\n    if (*input_string == '.') {\n      print_dot(0x2e,stdout);\n    }\n    print_string(\"%s\",demangled_string);\n    release_memory(demangled_string);\n    return;\n  }\n  print_string(\"%s\",input_string,arg4);\n  return;\n}\n\n",
            "current_name": "print_symbol_name_00102380",
            "entrypoint": "0x00102380",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102380": "print_symbol_name_00102380",
                "__ptr": "demangled_string",
                "_stdout": "stdout",
                "cplus_demangle": "demangle_name",
                "free": "release_memory",
                "param_1": "input_string",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "printf": "print_string",
                "putc": "print_dot",
                "uVar1": "starts_with_dot_or_dollar",
                "uVar2": "start_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102400": {
            "additional_data": {
                "FUN_00102400": {
                    "execute_main_loop": 1,
                    "initialize_process": 1,
                    "process_entry": 1,
                    "start_main": 2,
                    "start_main_loop": 4,
                    "start_main_process": 1,
                    "start_main_wrapper": 1,
                    "start_process": 2,
                    "start_program": 1
                },
                "FUN_001024f0": {
                    "analyze_data": 1,
                    "parse_arguments": 1,
                    "process_data": 2,
                    "process_entry": 1,
                    "process_entry_improved": 1
                },
                "__libc_start_main": {
                    "initiate_library_start": 1,
                    "libc_start_main": 1
                },
                "auStack_8": {
                    "au_stack": 1,
                    "auxiliary_stack": 2,
                    "local_memory": 1,
                    "local_stack": 1,
                    "stack": 6,
                    "stack_8": 1,
                    "stack_array": 1,
                    "stack_buffer": 1,
                    "stack_data": 3,
                    "stack_frame": 1,
                    "stack_vars": 1,
                    "unused_variable": 1
                },
                "main": {
                    "entry_point": 1,
                    "main_function": 1
                },
                "param_1": {
                    "arg1": 6,
                    "arg_1": 1,
                    "argc": 8,
                    "entry_point": 4,
                    "entry_point1": 1,
                    "input_param": 1,
                    "param1": 6,
                    "param_1": 1,
                    "program_arg": 1,
                    "start_function": 1,
                    "unused_arg1": 1
                },
                "param_2": {
                    "arg2": 6,
                    "arg_2": 1,
                    "argument": 1,
                    "arguments": 1,
                    "argv": 8,
                    "entry_point2": 1,
                    "envp": 2,
                    "output_param": 1,
                    "param2": 6,
                    "param_2": 1,
                    "parameter": 2,
                    "unused_arg2": 1
                },
                "processEntry": {
                    "initialize_stack": 1,
                    "run_main_function": 2,
                    "run_main_loop": 1,
                    "start_execution": 2,
                    "start_main": 1,
                    "start_main_loop": 7,
                    "start_main_wrapper": 1,
                    "start_program": 1
                },
                "stack0x00000008": {
                    "stack_size": 1
                }
            },
            "called": [
                "FUN_0010e010",
                "FUN_001024f0"
            ],
            "calling": [],
            "code": "\nvoid start_main_loop_00102400 start_main_loop_00102400(undefined8 argc,undefined8 argv)\n\n{\n  undefined stack [8];\n  \n  initiate_library_start(main_function,argv,&stack_size,0,0,argc,stack);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "start_main_loop_00102400",
            "entrypoint": "0x00102400",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102400": "start_main_loop_00102400",
                "__libc_start_main": "initiate_library_start",
                "auStack_8": "stack",
                "main": "main_function",
                "param_1": "argc",
                "param_2": "argv",
                "processEntry": "start_main_loop",
                "stack0x00000008": "stack_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102430": {
            "called": [
                "FUN_0010e018"
            ],
            "calling": [
                "FUN_001024a0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00102443) */\n/* WARNING: Removing unreachable block (ram,0x0010244f) */\n\nvoid FUNC_00102430(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00102430",
            "entrypoint": "0x00102430",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00102430": "FUNC_00102430"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00102460": {
            "called": [
                "FUN_0010e140"
            ],
            "calling": [
                "FUN_001024e0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00102484) */\n/* WARNING: Removing unreachable block (ram,0x00102490) */\n\nvoid FUNC_00102460(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00102460",
            "entrypoint": "0x00102460",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00102460": "FUNC_00102460"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_001024a0": {
            "additional_data": {
                "DAT_00105120": {
                    "program_initialized": 1
                },
                "FUNC_00102430": {
                    "clean_up": 1,
                    "clean_up_resources": 1,
                    "cleanup": 3,
                    "cleanup_function": 3,
                    "cleanup_program": 1,
                    "cleanup_resources": 8,
                    "deregister_tm_clones": 1,
                    "execute_cleanup": 1,
                    "execute_sub_function": 1,
                    "initialize_subfunction": 1,
                    "perform_cleanup": 8,
                    "perform_initialization": 1,
                    "reverse_data": 1
                },
                "FUN_001024a0": {
                    "check_and_finalize": 1,
                    "finalize_and_deregister": 1,
                    "initialize": 6,
                    "initialize_app": 1,
                    "initialize_application": 3,
                    "initialize_function": 1,
                    "initialize_if_needed": 1,
                    "initialize_if_not_done": 1,
                    "initialize_program": 14,
                    "initialize_system": 1,
                    "perform_initialization": 1
                },
                "PTR_LOOP_00105100": {
                    "loop_pointer": 2
                }
            },
            "called": [
                "FUN_00102430",
                "FUN_00102220"
            ],
            "calling": [],
            "code": "\nvoid initialize_program_001024a0(void)\n\n{\n  if (DAT_00105120 != '\\0') {\n    return;\n  }\n  __cxa_finalize(PTR_LOOP_00105100);\n  deregister_tm_clones();\n  DAT_00105120 = 1;\n  return;\n}\n\n",
            "current_name": "initialize_program_001024a0",
            "entrypoint": "0x001024a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001024a0": "initialize_program_001024a0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001024e0": {
            "called": [
                "FUN_00102460"
            ],
            "calling": [],
            "code": "\nvoid register_tm_clones(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n",
            "current_name": "FUN_001024e0",
            "entrypoint": "0x001024e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001024f0": {
            "additional_data": {
                "DAT_00105108": {
                    "global_variable_1": 1,
                    "options": 1
                },
                "DAT_00105140": {
                    "symbol_buffer": 1
                },
                "DAT_0010d140": {
                    "flags": 1
                },
                "DAT_0010d148": {
                    "name": 1,
                    "program_name": 2
                },
                "D_MANGLE_STYLE1": {
                    "style1": 1
                },
                "D_MANGLE_STYLE2": {
                    "style2": 1
                },
                "FUN_001024f0": {
                    "demangle": 4,
                    "demangle_names": 1,
                    "demangle_symbol": 1,
                    "demangle_symbol_names": 1,
                    "demangle_symbols": 21
                },
                "PTR_s_strip_underscore_00104be0": {
                    "strip_underscore_string": 1
                },
                "PUTCHAR": {
                    "put_char_func": 1
                },
                "_DAT_0010d140": {
                    "demangling_options": 1,
                    "dmgl_config": 1,
                    "flag": 1
                },
                "_DAT_0010d148": {
                    "program_name": 1
                },
                "___canfscanf": {
                    "scanf": 1
                },
                "__n": {
                    "file_size": 13,
                    "size": 12,
                    "size_n": 1,
                    "size_t_n": 1,
                    "size_t_var1": 2,
                    "size_t_var_1": 1
                },
                "__ptr": {
                    "buffer": 1,
                    "buffer_ptr": 1,
                    "byte_pointer3": 2,
                    "byte_ptr2": 1,
                    "byte_ptr3": 2,
                    "byte_ptr_3": 1,
                    "byte_ptr_ptr": 1,
                    "data_ptr": 1,
                    "demangled_name_ptr": 1,
                    "line_buffer": 1,
                    "malloced_string": 1,
                    "new_data": 1,
                    "output": 2,
                    "output_buffer": 2,
                    "output_ptr": 1,
                    "output_string": 1,
                    "ptr": 2,
                    "ptr2": 1,
                    "str_buffer": 1,
                    "str_ptr": 3,
                    "string2": 1,
                    "token": 1,
                    "word_buffer": 1
                },
                "__s": {
                    "buffer": 7,
                    "byte_pointer2": 2,
                    "byte_ptr2": 2,
                    "byte_ptr_2": 1,
                    "byte_ptr_s": 1,
                    "byte_str": 1,
                    "char_array": 1,
                    "data": 1,
                    "file_buffer": 2,
                    "file_content": 5,
                    "file_contents": 2,
                    "file_data": 3,
                    "str": 1,
                    "string1": 1
                },
                "__s1": {
                    "buffer1": 1
                },
                "__src": {
                    "allocated_list": 1,
                    "data_src": 1,
                    "demangled_names": 1,
                    "demangled_symbols": 1,
                    "long_pointer1": 1,
                    "long_pointer2": 1,
                    "long_ptr": 1,
                    "long_ptr1": 1,
                    "long_ptr2": 1,
                    "long_ptr_1": 1,
                    "long_var_ptr_src": 1,
                    "ptr_array": 1,
                    "source": 3,
                    "source_array": 1,
                    "source_list": 3,
                    "source_symbols": 1,
                    "src": 1,
                    "src_array_ptr": 1,
                    "src_data": 1,
                    "temp_ptr": 1,
                    "temp_symbols": 1,
                    "tokens": 1,
                    "word_list": 1
                },
                "__stream": {
                    "file": 4,
                    "file_pointer": 2,
                    "file_ptr": 1,
                    "file_ptr_1": 1,
                    "file_stream": 22
                },
                "_current_demangling_style": {
                    "current_demangle_style": 1,
                    "current_demangling_style": 2,
                    "demangling_style": 2,
                    "style": 1
                },
                "_optarg": {
                    "opt_arg": 1,
                    "optarg": 2,
                    "option_argument": 2
                },
                "_optind": {
                    "opt_index": 2,
                    "option_index": 2
                },
                "_sch_istable": {
                    "character_table": 1
                },
                "_stderr": {
                    "error_output_stream": 1,
                    "error_stream": 1,
                    "standard_error": 1,
                    "stderr": 2,
                    "stderr_pointer": 1
                },
                "_stdin": {
                    "standard_input": 1,
                    "standard_input_stream": 1,
                    "stdin": 1,
                    "stdin_pointer": 1
                },
                "_stdout": {
                    "console_stream": 1,
                    "standard_output": 1,
                    "standard_output_stream": 1,
                    "stdout": 2,
                    "stdout_pointer": 1
                },
                "argc": {
                    "argc": 1
                },
                "argv": {
                    "argv": 1
                },
                "argvPtr": {
                    "argv_ptr": 1
                },
                "bVar2": {
                    "byte1": 1,
                    "byte_val": 1,
                    "byte_val2": 2,
                    "byte_value": 1,
                    "byte_var": 7,
                    "byte_var1": 1,
                    "byte_var2": 10,
                    "byte_var_1": 1,
                    "char_type": 1,
                    "current_char_properties": 1,
                    "is_table_value": 1,
                    "sch_istable": 1,
                    "var2": 1
                },
                "bVar2_1": {
                    "byte_val2_1": 1
                },
                "bVar3": {
                    "bool1": 3,
                    "bool_val1": 1,
                    "bool_var1": 9,
                    "bool_var3": 8,
                    "bool_var_1": 1,
                    "escaped": 1,
                    "flag1": 1,
                    "in_single_quote": 3,
                    "is_escape_sequence": 1,
                    "is_single_quote": 1,
                    "is_true": 1
                },
                "bVar4": {
                    "bool2": 3,
                    "bool_val2": 1,
                    "bool_var2": 9,
                    "bool_var4": 8,
                    "bool_var_2": 1,
                    "flag2": 1,
                    "in_double_quote": 3,
                    "in_single_quotes": 1,
                    "is_double_quote": 1,
                    "is_false": 1,
                    "single_quote_open": 1
                },
                "bVar5": {
                    "bool3": 3,
                    "bool_val3": 1,
                    "bool_var3": 9,
                    "bool_var5": 8,
                    "bool_var_3": 1,
                    "double_quote_open": 1,
                    "escape_character": 1,
                    "flag3": 1,
                    "in_double_quotes": 1,
                    "in_escape": 1,
                    "in_escape_sequence": 1,
                    "is_directory": 1,
                    "is_escape_sequence": 1
                },
                "bVar6": {
                    "byte2": 1,
                    "byte_val6": 2,
                    "byte_var": 1,
                    "byte_var1": 1,
                    "byte_var2": 7,
                    "byte_var3": 1,
                    "byte_var4": 2,
                    "byte_var6": 7,
                    "byte_var_2": 1,
                    "current_byte": 1,
                    "current_char": 2,
                    "next_char": 1,
                    "parsed_char": 1,
                    "temp_byte_val": 1
                },
                "bfd_set_error_program_name": {
                    "initialize_bfd_error_handling": 1,
                    "set_error_program_name": 1
                },
                "boolVar3": {
                    "bool_var3": 1
                },
                "boolVar4": {
                    "bool_var4": 1
                },
                "boolVar5": {
                    "bool_var5": 1
                },
                "buffer": {
                    "buffer": 1
                },
                "buffer1": {
                    "buffer1": 1
                },
                "bufferPtr": {
                    "buffer_ptr": 1
                },
                "bufferSize": {
                    "buffer_size": 1
                },
                "bufio_libraries": {
                    "bufio_libraries": 1
                },
                "bytePtr1": {
                    "byte_ptr1": 1
                },
                "bytePtr16": {
                    "byte_ptr16": 1
                },
                "bytePtr2": {
                    "byte_ptr2": 1
                },
                "bytePtr20": {
                    "byte_ptr20": 1
                },
                "byteVal2": {
                    "byte_val2": 1
                },
                "byteVal2_1": {
                    "byte_val2_1": 1
                },
                "byteVal6": {
                    "byte_val6": 1
                },
                "bzero": {
                    "zero_out": 1
                },
                "charPtr1": {
                    "char_ptr1": 1
                },
                "cplus_demangle_name_to_style": {
                    "get_demangling_style": 1,
                    "get_name_style": 1
                },
                "cplus_demangle_set_style": {
                    "set_demangle_style": 1,
                    "set_demangling_style": 1
                },
                "dcgettext": {
                    "dcgettext": 1,
                    "get_localized_message": 1,
                    "get_localized_string": 1,
                    "get_text": 1
                },
                "default": {
                    "default_case": 1
                },
                "demangle_it": {
                    "demangle_symbol": 1
                },
                "exit": {
                    "termination": 1
                },
                "fatal_constprop_0": {
                    "fatal_error": 3
                },
                "fclose": {
                    "close_file": 2,
                    "file_close": 1
                },
                "ferror": {
                    "check_file_error": 1,
                    "file_error": 1,
                    "get_file_error": 1
                },
                "fflush": {
                    "flush": 1,
                    "flush_output": 2
                },
                "fileCounter": {
                    "file_counter": 1
                },
                "fileIndex": {
                    "file_index": 1
                },
                "filePointer": {
                    "file_pointer": 1
                },
                "fopen": {
                    "file_open": 1,
                    "open_file": 2
                },
                "fprintf": {
                    "file_printf": 1,
                    "print_error": 1,
                    "print_formatted_output": 1
                },
                "fread": {
                    "file_read": 1,
                    "read_file": 1,
                    "read_from_file": 1
                },
                "free": {
                    "free_memory": 1
                },
                "freopen": {
                    "file_reopen": 1
                },
                "fseek": {
                    "file_seek": 1,
                    "move_file_pointer": 1,
                    "seek_file": 1
                },
                "fstrerror": {
                    "file_string_error": 1
                },
                "ftell": {
                    "file_tell": 1,
                    "get_current_file_position": 1,
                    "tell_file_position": 1
                },
                "getc": {
                    "get_char": 1,
                    "get_character": 2
                },
                "getopt_long": {
                    "get_long_opt": 1,
                    "get_long_option": 1,
                    "parse_command_line_args": 1
                },
                "i": {
                    "i": 1
                },
                "iStack16": {
                    "i_stack16": 1
                },
                "iVar7": {
                    "counter": 1,
                    "index": 8,
                    "index_var": 1,
                    "int_var": 4,
                    "int_var1": 2,
                    "int_var7": 8,
                    "int_var_1": 1,
                    "loop_counter1": 1,
                    "result": 1,
                    "temp_int_val": 1,
                    "var1": 1
                },
                "iVar9": {
                    "i_var9": 1,
                    "index": 4,
                    "int_var2": 2,
                    "int_var9": 1,
                    "int_var_2": 1,
                    "iter": 1,
                    "iteration": 1,
                    "loop_var": 2,
                    "opt": 8,
                    "option": 2,
                    "param_index": 1,
                    "result": 1,
                    "result_code": 1,
                    "status": 1,
                    "temp_int_val2": 1,
                    "temp_var": 1,
                    "var3": 1
                },
                "intVar7": {
                    "int_var7": 1
                },
                "lVar11": {
                    "demangled_name_length": 1,
                    "file_name": 1,
                    "i": 1,
                    "len": 1,
                    "length": 2,
                    "line_length": 1,
                    "long1": 1,
                    "long_var": 5,
                    "long_var1": 6,
                    "long_var11": 6,
                    "long_var_1": 1,
                    "result": 1,
                    "string_length": 1,
                    "temp_long_val": 1
                },
                "lVar13": {
                    "argv_length": 1
                },
                "lVar17": {
                    "current_index": 1,
                    "current_symbol": 1,
                    "file_index": 1,
                    "file_list_index": 1,
                    "file_string_index": 1,
                    "i": 1,
                    "idx": 1,
                    "index": 2,
                    "input_index": 1,
                    "long2": 1,
                    "long_var": 1,
                    "long_var17": 5,
                    "long_var2": 11,
                    "long_var_2": 1,
                    "temp_long_val2": 1
                },
                "lVar19": {
                    "counter2": 1,
                    "file_index": 1,
                    "i": 1,
                    "j": 1,
                    "long3": 1,
                    "long_var19": 5,
                    "long_var3": 11,
                    "long_var_3": 1,
                    "num_symbols": 1,
                    "string_index": 1,
                    "symbols_index": 1,
                    "temp_long_val3": 1,
                    "total_demangled_names_length": 1,
                    "unused_var19": 1
                },
                "local_100": {
                    "array_index": 1,
                    "current_demangled_name_index": 1,
                    "current_index": 1,
                    "file_index": 1,
                    "i": 2,
                    "index": 2,
                    "local_len": 1,
                    "local_val": 1,
                    "local_var100": 2,
                    "local_var4": 7,
                    "long_var4": 2,
                    "long_var_4": 1,
                    "source_count": 1,
                    "src_index": 1,
                    "string_array_index": 1,
                    "symbol_count": 1,
                    "temp_index": 1,
                    "token_count": 1,
                    "unused_local_long100": 1,
                    "var4": 1
                },
                "local_108": {
                    "arg_count": 1,
                    "array_size": 1,
                    "buffer_size": 1,
                    "local_size": 2,
                    "local_var108": 2,
                    "local_var3": 7,
                    "size3": 1,
                    "size_t_var3": 1,
                    "size_t_var_3": 1,
                    "src_size": 1,
                    "str_array_size": 1,
                    "str_length": 1,
                    "string_length": 1,
                    "symbol_count": 1,
                    "symbols_length": 1,
                    "total_bytes": 1,
                    "total_demangled_names_size": 1,
                    "total_length": 1,
                    "total_size": 1,
                    "total_symbols_size": 1,
                    "unused_local_int108": 1,
                    "var3": 1
                },
                "local_10c": {
                    "at_count": 1,
                    "buffer_size": 1,
                    "count": 2,
                    "int_var2": 2,
                    "int_var_4": 1,
                    "local_count": 1,
                    "local_counter2": 1,
                    "local_var10_c": 1,
                    "local_var10c": 1,
                    "local_var2": 7,
                    "max_arg_index": 1,
                    "max_count": 1,
                    "max_directories": 1,
                    "max_error_count": 1,
                    "max_files": 4,
                    "max_iterations": 1,
                    "max_symbol_count": 1,
                    "unused_local_int10c": 1,
                    "var2": 1
                },
                "local_110": {
                    "count": 1,
                    "current_arg_index": 1,
                    "current_iteration": 1,
                    "file_count": 3,
                    "file_counter": 2,
                    "int_var1": 2,
                    "int_var_3": 1,
                    "limit": 1,
                    "local_counter1": 1,
                    "local_index": 1,
                    "local_var1": 7,
                    "local_var110": 2,
                    "max_files": 3,
                    "num_directories": 1,
                    "symbol_count": 1,
                    "unused_local_int110": 1,
                    "var1": 1
                },
                "local_c8": {
                    "file_info": 4,
                    "file_stat": 4,
                    "file_stats": 1,
                    "file_status": 1,
                    "local_stat": 3,
                    "local_var5": 1,
                    "stat1": 1,
                    "stat_buffer": 3,
                    "stat_struct": 4,
                    "stat_var": 6,
                    "stat_var_1": 1,
                    "unused_local_stat_c8": 1
                },
                "longVar11": {
                    "long_var11": 1
                },
                "longVar17": {
                    "long_var17": 1
                },
                "longVar19": {
                    "long_var19": 1
                },
                "lvar11": {
                    "result": 1
                },
                "maxFiles": {
                    "max_files": 1
                },
                "memcpy": {
                    "copy_memory": 2,
                    "memory_copy": 1
                },
                "memmove": {
                    "memory_move": 1,
                    "move_memory": 2
                },
                "opt": {
                    "opt": 1
                },
                "param_1": {
                    "argc": 28,
                    "num_params": 3
                },
                "param_2": {
                    "argv": 28,
                    "param_array": 1,
                    "param_list": 1,
                    "param_pointer": 1
                },
                "pbVar1": {
                    "byte_pointer": 2,
                    "byte_pointer1": 3,
                    "byte_ptr": 4,
                    "byte_ptr1": 8,
                    "byte_ptr_1": 1,
                    "current_byte": 1,
                    "current_char": 2,
                    "p_byte1": 1,
                    "ptr": 1,
                    "ptr1": 2,
                    "ptr_byte": 2,
                    "ptr_byte1": 1
                },
                "pbVar16": {
                    "buffer_iterator": 1,
                    "byte_pointer2": 2,
                    "byte_pointer4": 2,
                    "byte_ptr": 2,
                    "byte_ptr16": 3,
                    "byte_ptr2": 6,
                    "byte_ptr3": 1,
                    "byte_ptr4": 2,
                    "byte_ptr_4": 1,
                    "current_byte": 3,
                    "data_ptr": 1,
                    "file_data_ptr": 1,
                    "file_string_iter": 1,
                    "input_str": 1,
                    "p_byte2": 1,
                    "ptr": 1,
                    "ptr2": 1
                },
                "pbVar20": {
                    "bptr": 1,
                    "buffer_iterator2": 1,
                    "byte_pointer3": 2,
                    "byte_pointer5": 2,
                    "byte_ptr2": 2,
                    "byte_ptr20": 2,
                    "byte_ptr3": 5,
                    "byte_ptr4": 1,
                    "byte_ptr5": 2,
                    "byte_ptr_5": 1,
                    "data_ptr2": 1,
                    "output": 1,
                    "output_pointer": 1,
                    "output_ptr": 1,
                    "output_string_iter": 1,
                    "p_byte3": 1,
                    "ptr3": 1,
                    "token_buffer": 1,
                    "unused_byte_ptr20": 1,
                    "word_char": 1
                },
                "pcVar15": {
                    "char_ptr": 3,
                    "char_ptr1": 1,
                    "char_ptr15": 2,
                    "char_ptr_1": 1,
                    "err_msg": 1,
                    "error_message": 2,
                    "file": 1,
                    "file_name": 1,
                    "file_path": 1,
                    "format_string": 1,
                    "message": 1,
                    "print_str": 1,
                    "program_name": 1,
                    "ptr_char_var15": 1,
                    "str": 2,
                    "str1": 1,
                    "str_ptr": 3,
                    "str_ptr1": 1,
                    "str_ptr2": 1,
                    "str_var15": 1,
                    "string_pointer": 1,
                    "string_var1": 1,
                    "string_var15": 1
                },
                "pchVar1": {
                    "char_ptr1": 1
                },
                "plVar12": {
                    "arg_array": 1,
                    "args": 1,
                    "arguments": 1,
                    "argv": 1,
                    "argv_modified": 1,
                    "argv_ptr": 3,
                    "file_argv": 1,
                    "file_list": 1,
                    "file_paths": 1,
                    "files": 1,
                    "input_symbols": 1,
                    "long_pointer1": 1,
                    "long_ptr1": 1,
                    "param_2": 3,
                    "param_2_ptr": 1,
                    "param_arr": 1,
                    "param_array_ptr": 1,
                    "param_ptr": 1,
                    "param_ptr1": 1,
                    "symbol_array": 1,
                    "symbol_list": 4,
                    "symbols": 2
                },
                "plVar13": {
                    "current_list_element": 1,
                    "current_token": 1,
                    "data_dest": 1,
                    "demangled_name_ptr2": 1,
                    "dest_symbols": 1,
                    "dst_array": 1,
                    "file_argv_iterator": 1,
                    "long_pointer2": 1,
                    "long_pointer3": 1,
                    "long_ptr3": 1,
                    "long_ptr_2": 1,
                    "param_array_ptr2": 1,
                    "param_ptr": 1,
                    "param_ptr2": 2,
                    "ptr2": 1,
                    "ptr_var1": 1,
                    "source_ptr": 2,
                    "src_data_ptr": 1,
                    "src_ptr": 1,
                    "symbol_pointer": 1,
                    "target_array": 1,
                    "temp": 2,
                    "temp_list": 1,
                    "temp_ptr2": 1,
                    "temp_symbols_iter": 1,
                    "word_list_ptr": 1
                },
                "ppuVar18": {
                    "current_style": 1,
                    "demangle_style": 1,
                    "dmgl_options": 1,
                    "long_options": 1,
                    "option_table": 1,
                    "option_vector": 1,
                    "pointer_pointer": 1,
                    "pp_option": 1,
                    "pptr": 1,
                    "ppu_var": 1,
                    "ppu_var18": 3,
                    "print_ptr": 1,
                    "ptr_heap_ptr": 1,
                    "ptr_ptr": 2,
                    "ptr_ptr1": 1,
                    "string_table_ptr": 1,
                    "style": 2,
                    "undefined_pointer": 1,
                    "undefined_ptr": 2,
                    "undefined_ptr_ptr1": 1,
                    "undefined_ptr_ptr18": 2,
                    "undefined_ptr_ptr_1": 1,
                    "unused_ptr18": 1
                },
                "ppvVar16": {
                    "ppv_var16": 1
                },
                "printf": {
                    "print_output": 1
                },
                "putc": {
                    "put_char": 1,
                    "put_character": 2
                },
                "sVar10": {
                    "bytes_read": 12,
                    "data_size": 1,
                    "read_size": 4,
                    "s_var10": 1,
                    "size2": 2,
                    "size_read": 1,
                    "size_t_var10": 1,
                    "size_t_var2": 2,
                    "size_t_var_2": 1,
                    "size_var": 1,
                    "size_var10": 3,
                    "str_size": 1
                },
                "size": {
                    "size": 1
                },
                "sizeRead": {
                    "size_read": 1
                },
                "src": {
                    "src": 1
                },
                "srcPtr": {
                    "src_ptr": 1
                },
                "stat": {
                    "file_stat": 1,
                    "get_file_info": 1,
                    "get_file_status": 1
                },
                "statStruct": {
                    "stat_struct": 1
                },
                "stdin": {
                    "standard_input_stream": 1
                },
                "strchr": {
                    "find_character": 1,
                    "str_char": 1
                },
                "stringVar15": {
                    "string_var15": 1
                },
                "strlen": {
                    "string_length": 1
                },
                "switchD_001029f9_caseD_3f": {
                    "switch_unknown": 1
                },
                "switchD_001029f9_caseD_52": {
                    "switch_r": 1
                },
                "switchD_001029f9_caseD_5f": {
                    "switch_underscore": 1
                },
                "switchD_001029f9_caseD_68": {
                    "switch_h": 1
                },
                "switchD_001029f9_caseD_69": {
                    "switch_i": 1
                },
                "switchD_001029f9_caseD_6e": {
                    "switch_n": 1
                },
                "switchD_001029f9_caseD_70": {
                    "switch_p": 1
                },
                "switchD_001029f9_caseD_72": {
                    "switch_r": 1
                },
                "switchD_001029f9_caseD_73": {
                    "switch_s": 1
                },
                "switchD_001029f9_caseD_74": {
                    "switch_t": 1
                },
                "switchD_001029f9_caseD_76": {
                    "switch_v": 1
                },
                "uStack12": {
                    "u_stack12": 1
                },
                "uStack8": {
                    "u_stack8": 1
                },
                "uVar13": {
                    "uint_var13": 1
                },
                "uVar14": {
                    "demangled_result": 1,
                    "exit_status": 1,
                    "new_var": 1,
                    "result": 2,
                    "ret_val": 1,
                    "return_value": 1,
                    "retval": 2,
                    "status": 1,
                    "style": 1,
                    "temp_result": 1,
                    "temp_u_int_val2": 1,
                    "temp_var2": 1,
                    "u_var14": 2,
                    "u_var_dest": 1,
                    "uint_var14": 1,
                    "uint_var_2": 1,
                    "undefined_var": 5,
                    "undefined_var14": 3,
                    "unused_var14": 1,
                    "var4": 1
                },
                "uVar8": {
                    "count": 4,
                    "counter": 2,
                    "index": 1,
                    "loop_counter2": 1,
                    "temp_u_int_val": 1,
                    "u_var_index": 1,
                    "uint_var": 7,
                    "uint_var1": 1,
                    "uint_var8": 8,
                    "uint_var_1": 1,
                    "var2": 1
                },
                "uintVar13": {
                    "uint_var13": 1
                },
                "uintVar8": {
                    "uint_var8": 1
                },
                "unaff_R13": {
                    "count": 1,
                    "current_file": 1,
                    "current_size": 1,
                    "current_symbol_index": 1,
                    "file_argv_index": 1,
                    "file_index": 1,
                    "file_index2": 1,
                    "file_string_length": 1,
                    "i": 1,
                    "index": 2,
                    "iteration": 1,
                    "long_var4": 1,
                    "loop_counter": 1,
                    "ulong_var": 3,
                    "ulong_var1": 3,
                    "ulong_var_1": 1,
                    "ulong_var_r13": 1,
                    "unaff_r13": 3,
                    "unaff_reg": 1,
                    "unaffiliate_r13": 1,
                    "unused_long13": 1
                },
                "undefinedVar14": {
                    "undefined_var14": 1
                },
                "usage": {
                    "print_usage": 5
                },
                "xDAT_0010d148": {
                    "program_name": 1
                },
                "xexit": {
                    "exit_program": 2,
                    "terminate_execution": 1,
                    "termination": 1
                },
                "xfree": {
                    "memory_free": 1
                },
                "xmalloc": {
                    "allocate_memory": 2,
                    "memory_allocate": 1
                },
                "xmalloc_set_program_name": {
                    "initialize_memory_management": 1,
                    "set_program_name": 1
                },
                "xrealloc": {
                    "memory_reallocate": 1,
                    "reallocate_memory": 2
                },
                "xstrdup": {
                    "duplicate_string": 2,
                    "string_duplicate": 1
                }
            },
            "called": [
                "FUN_00102080",
                "FUN_00102090",
                "FUN_001021c0",
                "FUN_001021d0",
                "FUN_001020c0",
                "FUN_00102040",
                "FUN_00102e20",
                "FUN_001021b0",
                "FUN_00102150",
                "FUN_001021f0",
                "FUN_00102060",
                "FUN_00102030",
                "FUN_00102130",
                "FUN_00102180",
                "FUN_001020f0",
                "FUN_001020a0",
                "FUN_001021e0",
                "FUN_00102110",
                "FUN_00102160",
                "FUN_00102140",
                "FUN_00102210",
                "FUN_001020e0",
                "FUN_00102100",
                "FUN_00102190",
                "FUN_00102050",
                "FUN_00102070",
                "FUN_00102380",
                "FUN_0010225e",
                "FUN_00102170",
                "FUN_001020d0",
                "FUN_001020b0"
            ],
            "calling": [
                "FUN_00102400"
            ],
            "code": "\n\n\nundefined8 demangle_symbols_001024f0(int argc,long *argv)\n\n{\n  byte *byte_ptr1;\n  byte byte_var2;\n  bool bool_var1;\n  bool bool_var2;\n  bool bool_var3;\n  byte byte_var2;\n  int int_var7;\n  uint uint_var8;\n  int opt;\n  FILE *file_stream;\n  size_t file_size;\n  byte *buffer;\n  size_t bytes_read;\n  byte *str_ptr;\n  long long_var1;\n  long *symbol_list;\n  long *source;\n  long *temp;\n  undefined8 undefined_var;\n  char *char_ptr;\n  byte *byte_ptr2;\n  long long_var2;\n  undefined **ppu_var18;\n  long long_var3;\n  byte *byte_ptr3;\n  ulong unaff_r13;\n  int local_var1;\n  int local_var2;\n  size_t local_var3;\n  long local_var4;\n  get_file_status stat_var;\n  \n  DAT_0010d148 = *argv;\n  set_program_name();\n  initialize_bfd_error_handling(DAT_0010d148);\n  symbol_list = argv;\n  if (1 < argc) {\n    local_var2 = 2000;\n    unaff_r13 = 1;\n    local_var1 = 0;\n    do {\n      opt = (int)unaff_r13;\n      long_var2 = (long)opt;\n      if (*(char *)symbol_list[long_var2] == '@') {\n        local_var2 = local_var2 + -1;\n        if (local_var2 == 0) goto LAB_00102bdd;\n        char_ptr = (char *)symbol_list[long_var2] + 1;\n        int_var7 = get_file_status(char_ptr,&stat_var);\n        if (int_var7 < 0) goto LAB_00102900;\n        if ((stat_var.st_mode & 0xf000) == 0x4000) {\n          long_var2 = *symbol_list;\n          char_ptr = \"%s: error: @-file refers to a directory\\n\";\n          do {\n            file_printf(stderr,char_ptr,long_var2);\n            exit_program(1);\nLAB_00102bdd:\n            long_var2 = *symbol_list;\n            char_ptr = \"%s: error: too many @-files encountered\\n\";\n          } while( true );\n        }\n        file_stream = open_file(char_ptr,\"r\");\n        if (file_stream == (FILE *)0x0) goto LAB_00102900;\n        int_var7 = file_seek(file_stream,0,2);\n        if (((int_var7 == -1) || (file_size = file_tell(file_stream), file_size == 0xffffffffffffffff)) ||\n           (int_var7 = file_seek(file_stream,0,0), int_var7 == -1)) {\nLAB_001029a0:\n          close_file(file_stream);\n          if (opt + 1 < argc) goto LAB_0010290d;\n          break;\n        }\n        buffer = (byte *)allocate_memory(file_size + 1);\n        bytes_read = file_read(buffer,1,file_size,file_stream);\n        if ((file_size != bytes_read) && (int_var7 = file_error(file_stream), int_var7 != 0)) {\n          free_memory(buffer);\n          goto LAB_001029a0;\n        }\n        buffer[bytes_read] = 0;\n        byte_var2 = *buffer;\n        byte_ptr2 = buffer;\n        if (byte_var2 != 0) {\nLAB_00102680:\n          if (((&character_table)[(ulong)byte_var2 * 2] & 0x40) != 0) goto LAB_00102670;\n          string_length((char *)buffer);\n          str_ptr = (byte *)allocate_memory();\n          source = (long *)0x0;\n          int_var7 = 0;\n          bool_var1 = false;\n          bool_var3 = false;\n          bool_var2 = false;\n          local_var4 = 0;\n          byte_ptr2 = buffer;\n          do {\n            while (((&character_table)[(ulong)*byte_ptr2 * 2] & 0x40) != 0) {\n              byte_ptr2 = byte_ptr2 + 1;\n            }\n            if ((int_var7 == 0) || (int_var7 + -1 <= (int)local_var4)) {\n              if (source == (long *)0x0) {\n                int_var7 = 8;\n                source = (long *)allocate_memory(0x40);\n              }\n              else {\n                int_var7 = int_var7 * 2;\n                source = (long *)reallocate_memory(source,(long)int_var7 << 3);\n              }\n              temp = source + local_var4;\n              *temp = 0;\n            }\n            else {\n              temp = source + local_var4;\n            }\n            byte_var2 = *byte_ptr2;\n            byte_ptr3 = str_ptr;\n            while (byte_var2 != 0) {\n              while( true ) {\n                if ((((&character_table)[(ulong)byte_var2 * 2] & 0x40) != 0) &&\n                   (!(bool)(bool_var3 | bool_var2 | bool_var1))) {\n                  bool_var2 = false;\n                  bool_var1 = false;\n                  bool_var3 = false;\n                  goto LAB_0010276f;\n                }\n                if (!bool_var2) break;\n                byte_ptr2 = byte_ptr2 + 1;\n                *byte_ptr3 = byte_var2;\n                byte_ptr3 = byte_ptr3 + 1;\n                bool_var2 = false;\n                byte_var2 = *byte_ptr2;\n                if (byte_var2 == 0) goto LAB_0010276f;\n              }\n              if (byte_var2 == 0x5c) {\n                bool_var2 = true;\n              }\n              else if (bool_var3) {\n                if (byte_var2 == 0x27) {\n                  bool_var3 = false;\n                }\n                else {\nLAB_001028e1:\n                  *byte_ptr3 = byte_var2;\n                  byte_ptr3 = byte_ptr3 + 1;\n                }\n              }\n              else if (bool_var1) {\n                if (byte_var2 != 0x22) goto LAB_001028e1;\n                bool_var1 = false;\n              }\n              else if (byte_var2 == 0x27) {\n                bool_var3 = true;\n              }\n              else {\n                if (byte_var2 != 0x22) goto LAB_001028e1;\n                bool_var1 = true;\n              }\n              byte_ptr1 = byte_ptr2 + 1;\n              byte_ptr2 = byte_ptr2 + 1;\n              byte_var2 = *byte_ptr1;\n            }\nLAB_0010276f:\n            *byte_ptr3 = 0;\n            long_var1 = duplicate_string(str_ptr);\n            *temp = long_var1;\n            source[local_var4 + 1] = 0;\n            byte_var2 = *byte_ptr2;\n            byte_var2 = (&character_table)[(ulong)byte_var2 * 2];\n            while ((byte_var2 & 0x40) != 0) {\n              byte_var2 = byte_ptr2[1];\n              byte_ptr2 = byte_ptr2 + 1;\n              byte_var2 = (&character_table)[(ulong)byte_var2 * 2];\n            }\n            local_var4 = local_var4 + 1;\n          } while (byte_var2 != 0);\n          free_memory(str_ptr);\n          temp = symbol_list;\n          if (argv == symbol_list) goto LAB_00102adb;\n          goto LAB_00102807;\n        }\nLAB_00102abe:\n        source = (long *)allocate_memory(8);\n        *source = 0;\n        if (argv == symbol_list) {\nLAB_00102adb:\n          if (*symbol_list == 0) {\n            int_var7 = 0;\n          }\n          else {\n            long_var1 = 1;\n            do {\n              int_var7 = (int)long_var1;\n              temp = symbol_list + long_var1;\n              long_var1 = long_var1 + 1;\n            } while (*temp != 0);\n          }\n          long_var3 = 0;\n          temp = (long *)allocate_memory((long)(int_var7 + 1) << 3);\n          long_var1 = *symbol_list;\n          while (long_var1 != 0) {\n            undefined_var = duplicate_string();\n            *(undefined8 *)((long)temp + long_var3) = undefined_var;\n            long_var3 = long_var3 + 8;\n            long_var1 = *(long *)((long)symbol_list + long_var3);\n          }\n          *(undefined8 *)((long)temp + long_var3) = 0;\nLAB_00102807:\n          symbol_list = temp;\n          if (*source == 0) goto LAB_00102ba3;\n          long_var1 = 0;\n          do {\n            long_var1 = long_var1 + 1;\n          } while (source[long_var1] != 0);\n          local_var3 = long_var1 * 8;\n        }\n        else {\nLAB_00102ba3:\n          long_var1 = 0;\n          local_var3 = 0;\n        }\n        free_memory((void *)symbol_list[long_var2]);\n        symbol_list = (long *)reallocate_memory(symbol_list,(long_var1 + 1 + (long)argc) * 8);\n        int_var7 = argc + -1 + (int)long_var1;\n        move_memory(symbol_list + long_var2 + long_var1,symbol_list + long_var2 + 1,(long)(argc - opt) << 3);\n        copy_memory(symbol_list + long_var2,source,local_var3);\n        free_memory(source);\n        free_memory(buffer);\n        close_file(file_stream);\n        uint_var8 = local_var1 + 1;\n        unaff_r13 = long_var2 * 8;\n        argc = int_var7;\n        if (int_var7 <= (int)uint_var8) break;\n      }\n      else {\nLAB_00102900:\n        if (argc <= opt + 1) break;\nLAB_0010290d:\n        uint_var8 = opt + 1;\n        local_var1 = opt;\n      }\n      unaff_r13 = (ulong)uint_var8;\n    } while( true );\n  }\n  ppu_var18 = &PTR_s_strip_underscore_00104be0;\n  while (opt = parse_command_line_args(argc,symbol_list,\"_hinprRs:tv\",&PTR_s_strip_underscore_00104be0,0),\n        opt != -1) {\n    switch(opt) {\n    case 0x3f:\nswitch_unknown:\n      print_usage(stderr,1);\n    case 0x5f:\nswitch_underscore:\n      _DAT_0010d140 = 1;\n      break;\n    default_case:\n      do {\n        opt = parse_command_line_args(argc,symbol_list,\"_hinprRs:tv\",&PTR_s_strip_underscore_00104be0,0);\n        if (opt == -1) goto LAB_00102a6c;\n        switch(opt) {\n        case 0x3f:\n          goto switch_unknown;\n        case 0x52:\n          goto switch_r;\n        case 0x5f:\n          goto switch_underscore;\n        case 0x68:\n          goto switch_h;\n        case 0x69:\n          goto switch_i;\n        case 0x6e:\n          goto switch_n;\n        case 0x70:\n          goto switch_p;\n        case 0x72:\n          goto switch_r;\n        case 0x73:\n          goto switch_s;\n        case 0x74:\n          goto switch_t;\n        case 0x76:\n          goto switch_v;\n        }\n      } while( true );\n    case 0x52:\nswitch_r:\n      DAT_00105108 = DAT_00105108 & 0xfffbffff;\n      break;\n    case 0x68:\nswitch_h:\n      print_usage(stdout,0);\n    case 0x74:\nswitch_t:\n      DAT_00105108 = DAT_00105108 | 0x10;\n      break;\n    case 0x69:\nswitch_i:\n      DAT_00105108 = DAT_00105108 & 0xfffffff7;\n      break;\n    case 0x6e:\nswitch_n:\n      _DAT_0010d140 = 0;\n      break;\n    case 0x70:\nswitch_p:\n      DAT_00105108 = DAT_00105108 & 0xfffffffe;\n      break;\n    case 0x72:\nswitch_r:\n      DAT_00105108 = DAT_00105108 | 0x40000;\n      break;\n    case 0x73:\nswitch_s:\n      opt = get_demangling_style(optarg);\n      if (opt == 0) {\n        file_printf(stderr,\"%s: unknown demangling style `%s\\'\\n\",DAT_0010d148,optarg);\n        return 1;\n      }\n      set_demangle_style(opt);\n      break;\n    case 0x76:\nswitch_v:\n      print_output(\"GNU %s %s\\n\",\"c++filt\",\"(GNU Binutils for Debian) 2.40\");\n      char_ptr = (char *)get_localized_message(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n      print_output(char_ptr);\n      char_ptr = (char *)get_localized_message(0,\n                                  \"This program is free_memory software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                                  ,5);\n      print_output(char_ptr);\n                    \n      termination(0);\n    }\n  }\nLAB_00102a6c:\n  if (opt_index < argc) {\n    do {\n      demangle_symbol(symbol_list[opt_index]);\n      put_character(10,stdout);\n      opt_index = opt_index + 1;\n    } while (opt_index < argc);\n  }\n  else {\n    if (current_demangling_style == 0x8000) {\nLAB_00102c76:\n      ppu_var18 = (undefined **)&stdout;\n      do {\n        unaff_r13 = 0;\n        uint_var8 = get_character(standard_input_stream);\n        while( true ) {\n          symbol_list = (long *)(unaff_r13 & 0xffffffff);\n          if (uint_var8 == 0xffffffff) goto LAB_00102d0d;\n          if ((((&character_table)[(ulong)(uint_var8 & 0xff) * 2] & 0x8c) == 0) &&\n             (char_ptr = str_char(\"_$.\",uint_var8), char_ptr == (char *)0x0)) {\n            if ((int)symbol_list != 0) goto LAB_00102d6f;\n            goto LAB_00102d47;\n          }\n          if (unaff_r13 == 0x7ffe) break;\n          (&DAT_00105140)[unaff_r13] = (char)uint_var8;\n          unaff_r13 = unaff_r13 + 1;\n          uint_var8 = get_character(standard_input_stream);\n        }\n        symbol_list = (long *)0x7ffe;\nLAB_00102d6f:\n        *(undefined *)(symbol_list + 0x20a28) = 0;\n        demangle_symbol(&DAT_00105140);\nLAB_00102d47:\n        put_character(uint_var8,stdout);\n        if (uint_var8 == 10) {\n          flush_output(stdout);\n        }\n      } while( true );\n    }\n    if (current_demangling_style < 0x8001) {\n      if (((current_demangling_style == 0x100) || (current_demangling_style == 0x4000)) ||\n         (current_demangling_style == 4)) goto LAB_00102c76;\n    }\n    else if ((current_demangling_style - 0x10000U & 0xfffeffff) == 0) goto LAB_00102c76;\n    fatal_error(\"Internal error: no symbol alphabet for current style\");\nLAB_00102d0d:\n    if ((int)unaff_r13 != 0) {\n      *(undefined *)(symbol_list + 0x20a28) = 0;\n      demangle_symbol();\n    }\n    flush_output((FILE *)*ppu_var18);\n  }\n  return 0;\nLAB_00102670:\n  byte_var2 = byte_ptr2[1];\n  byte_ptr2 = byte_ptr2 + 1;\n  if (byte_var2 == 0) goto LAB_00102abe;\n  goto LAB_00102680;\n}\n\n",
            "current_name": "demangle_symbols_001024f0",
            "entrypoint": "0x001024f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001024f0": "demangle_symbols_001024f0",
                "__n": "file_size",
                "__ptr": "str_ptr",
                "__s": "buffer",
                "__src": "source",
                "__stream": "file_stream",
                "_current_demangling_style": "current_demangling_style",
                "_optarg": "optarg",
                "_optind": "opt_index",
                "_sch_istable": "character_table",
                "_stderr": "stderr",
                "_stdin": "standard_input_stream",
                "_stdout": "stdout",
                "bVar2": "byte_var2",
                "bVar3": "bool_var1",
                "bVar4": "bool_var2",
                "bVar5": "bool_var3",
                "bVar6": "byte_var2",
                "bfd_set_error_program_name": "initialize_bfd_error_handling",
                "cplus_demangle_name_to_style": "get_demangling_style",
                "cplus_demangle_set_style": "set_demangle_style",
                "dcgettext": "get_localized_message",
                "default": "default_case",
                "demangle_it": "demangle_symbol",
                "exit": "termination",
                "fatal_constprop_0": "fatal_error",
                "fclose": "close_file",
                "ferror": "file_error",
                "fflush": "flush_output",
                "fopen": "open_file",
                "fprintf": "file_printf",
                "fread": "file_read",
                "free": "free_memory",
                "fseek": "file_seek",
                "ftell": "file_tell",
                "getc": "get_character",
                "getopt_long": "parse_command_line_args",
                "iVar7": "int_var7",
                "iVar9": "opt",
                "lVar11": "long_var1",
                "lVar13": "argv_length",
                "lVar17": "long_var2",
                "lVar19": "long_var3",
                "local_100": "local_var4",
                "local_108": "local_var3",
                "local_10c": "local_var2",
                "local_110": "local_var1",
                "local_c8": "stat_var",
                "memcpy": "copy_memory",
                "memmove": "move_memory",
                "param_1": "argc",
                "param_2": "argv",
                "pbVar1": "byte_ptr1",
                "pbVar16": "byte_ptr2",
                "pbVar20": "byte_ptr3",
                "pcVar15": "char_ptr",
                "plVar12": "symbol_list",
                "plVar13": "temp",
                "ppuVar18": "ppu_var18",
                "printf": "print_output",
                "putc": "put_character",
                "sVar10": "bytes_read",
                "stat": "get_file_status",
                "stdin": "standard_input_stream",
                "strchr": "str_char",
                "strlen": "string_length",
                "switchD_001029f9_caseD_3f": "switch_unknown",
                "switchD_001029f9_caseD_52": "switch_r",
                "switchD_001029f9_caseD_5f": "switch_underscore",
                "switchD_001029f9_caseD_68": "switch_h",
                "switchD_001029f9_caseD_69": "switch_i",
                "switchD_001029f9_caseD_6e": "switch_n",
                "switchD_001029f9_caseD_70": "switch_p",
                "switchD_001029f9_caseD_72": "switch_r",
                "switchD_001029f9_caseD_73": "switch_s",
                "switchD_001029f9_caseD_74": "switch_t",
                "switchD_001029f9_caseD_76": "switch_v",
                "uVar14": "undefined_var",
                "uVar8": "uint_var8",
                "unaff_R13": "unaff_r13",
                "usage": "print_usage",
                "xexit": "exit_program",
                "xmalloc": "allocate_memory",
                "xmalloc_set_program_name": "set_program_name",
                "xrealloc": "reallocate_memory",
                "xstrdup": "duplicate_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102e20": {
            "additional_data": {
                "DAT_0010d148": {
                    "error_message": 11,
                    "error_prefix": 1,
                    "error_string": 1
                },
                "FUN_00102e20": {
                    "exit_with_error": 2,
                    "handle_internal_error": 12,
                    "print_error_and_exit": 1,
                    "print_error_message": 7,
                    "print_error_message_and_exit": 1,
                    "print_internal_error": 4,
                    "print_internal_error_and_exit": 1,
                    "print_internal_error_message": 1,
                    "report_internal_error": 2
                },
                "_stderr": {
                    "err_output": 2,
                    "error_output": 1,
                    "error_stream": 5,
                    "standard_error": 9,
                    "std_err": 1,
                    "stderr": 4,
                    "stderr_ptr": 1
                },
                "_stdout": {
                    "out_stream": 1,
                    "output_stream": 1,
                    "standard_output": 10,
                    "std_out": 1,
                    "std_output": 2,
                    "stdout": 4,
                    "stdout_ptr": 1
                },
                "fflush": {
                    "flush_standard_output": 1
                },
                "fprintf": {
                    "format_print": 1,
                    "print_error_message": 1,
                    "print_formatted": 1,
                    "print_formatted_error_message": 1,
                    "print_formatted_string": 1
                },
                "fwrite": {
                    "write_to_error_stream": 1,
                    "write_to_error_stream_data": 1,
                    "write_to_file": 3
                },
                "putc": {
                    "put_character": 2,
                    "write_newline_to_error_stream": 1,
                    "write_to_error_stream": 1
                },
                "stderr": {
                    "error_output": 1,
                    "error_stream": 2,
                    "standard_error": 4
                },
                "stdout": {
                    "standard_output": 5
                },
                "xexit": {
                    "exit_program": 5,
                    "exit_with_error": 4
                }
            },
            "called": [
                "FUN_00102180",
                "FUN_00102130",
                "FUN_001021e0",
                "FUN_00102200",
                "FUN_00102140"
            ],
            "calling": [
                "FUN_001024f0"
            ],
            "code": "\n\n\nvoid handle_internal_error_00102e20(void)\n\n{\n  flush_standard_output(standard_output);\n  print_error_message(standard_error,\"%s: \",DAT_0010d148);\n  write_to_file(\"Internal error: no symbol alphabet for current style\",1,0x34,standard_error);\n  put_character(10,standard_error);\n  exit_program(1);\n  return;\n}\n\n",
            "current_name": "handle_internal_error_00102e20",
            "entrypoint": "0x00102e20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102e20": "handle_internal_error_00102e20",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "fflush": "flush_standard_output",
                "fprintf": "print_error_message",
                "fwrite": "write_to_file",
                "putc": "put_character",
                "stderr": "standard_error",
                "stdout": "standard_output",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f00": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00102f00(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00102f00",
            "entrypoint": "0x00102f00",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00102f00": "FUNC_00102f00"
            },
            "skipped": true,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_00102000",
            "FUN_00102020",
            "FUN_00102230",
            "FUN_0010225e",
            "FUN_00102380",
            "FUN_00102400",
            "FUN_001024a0",
            "FUN_001024f0",
            "FUN_00102e20"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 36847
}