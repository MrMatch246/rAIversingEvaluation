{
    "functions": {
        "FUN_00102020": {
            "additional_data": {
                "": {
                    "": 1
                },
                "FUN_00102020": {
                    "execute_external_function": 1,
                    "execute_function": 2,
                    "execute_function_at_address": 1,
                    "execute_function_from_address": 1,
                    "execute_indirect_call": 5,
                    "execute_indirect_function": 4,
                    "execute_indirect_jump": 16,
                    "invoke_function": 1
                },
                "PTR_0": {
                    "function_pointer": 2,
                    "target_function_pointer": 1
                },
                "PTR_0x0": {
                    "indirect_function_ptr": 1
                },
                "PTR_undefined": {
                    "target_address": 1
                },
                "code": {
                    "function_pointer": 4,
                    "indirect_function": 1
                },
                "undefined": {
                    "function_address": 1,
                    "function_pointer": 2,
                    "function_ptr": 1,
                    "pointer_to_function": 1,
                    "target_address": 3
                },
                "void": {
                    "void": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_indirect_jump_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(function_pointer *)(target_address *)0x0)();\n  return;\n}\n\n",
            "current_name": "execute_indirect_jump_00102020",
            "entrypoint": "0x00102020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102020": "execute_indirect_jump_00102020",
                "code": "function_pointer",
                "undefined": "target_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102330": {
            "additional_data": {
                "DAT_00108358": {
                    "newline": 1,
                    "string_condition": 1
                },
                "DAT_00108360": {
                    "char_condition1": 1
                },
                "DAT_00108373": {
                    "char_condition2": 1
                },
                "DAT_00108374": {
                    "max_counter": 1
                },
                "FUN_00102330": {
                    "decode_and_print": 1,
                    "extract_and_print_data": 1,
                    "extract_and_print_strings": 1,
                    "parse_and_print_characters": 1,
                    "parse_and_print_data": 1,
                    "parse_and_print_string": 1,
                    "print_formatted_data": 1,
                    "print_formatted_line": 1,
                    "print_formatted_output": 1,
                    "print_formatted_string": 4,
                    "print_string": 3,
                    "process_data": 4,
                    "process_input": 3,
                    "process_input_string": 1,
                    "reverse_and_print": 2,
                    "reverse_and_print_data": 1
                },
                "FUN_0010286f": {
                    "print_formatted_message": 1,
                    "print_formatted_string_with_format": 1
                },
                "FUN_001034d5": {
                    "handle_flag_condition": 1,
                    "handle_invalid_character": 1,
                    "handle_invalid_input": 1,
                    "print_error": 1,
                    "print_new_line": 1,
                    "sub_function": 1
                },
                "FUN_001034fa": {
                    "handle_output_string": 1,
                    "print_character_and_free_memory": 1
                },
                "FUN_00103510": {
                    "handle_output_string": 1,
                    "print_string_and_free_memory": 1
                },
                "FUN_00103520": {
                    "get_next_character": 2,
                    "read_character_from_input": 1
                },
                "FUN_00103810": {
                    "free_memory": 1,
                    "handle_error": 1
                },
                "LAB_00102381": {
                    "putc_continue3": 1
                },
                "LAB_001023bb": {
                    "putc_continue2": 1
                },
                "LAB_001023f5": {
                    "putc_break": 1
                },
                "LAB_00102438": {
                    "print_tab_character": 1,
                    "putc_continue": 1
                },
                "LAB_001033b3": {
                    "continue_loop": 3,
                    "get_more_characters": 1
                },
                "LAB_00103400": {
                    "loop_end": 1,
                    "perform_action": 1,
                    "print_string_and_loop": 1,
                    "print_string_continuation": 1
                },
                "LAB_0010348e": {
                    "break_loop": 1,
                    "print_character": 1
                },
                "LAB_001034be": {
                    "return_from_function": 1
                },
                "LAB_001034d5": {
                    "skip_action": 1,
                    "sub_function": 1
                },
                "_sch_istable": {
                    "char_table": 1,
                    "character_table": 1,
                    "is_char_table": 1,
                    "table": 1
                },
                "_stdout": {
                    "output_stream": 1,
                    "standard_output": 2,
                    "stdout": 2
                },
                "bVar4": {
                    "flag": 1,
                    "is_counter_less": 1,
                    "is_counter_less_than_length": 1,
                    "is_counter_less_than_threshold": 1,
                    "is_counter_smaller_than_limit": 1,
                    "is_counter_valid": 3,
                    "is_less": 3,
                    "is_less_than": 4,
                    "is_less_than_constant": 1,
                    "is_less_than_count": 1,
                    "is_less_than_length": 1,
                    "is_less_than_limit": 1,
                    "is_less_than_max": 1,
                    "is_lesser": 1,
                    "is_looping": 1,
                    "is_lower": 1,
                    "is_valid": 2,
                    "is_within_limit": 1,
                    "loop_condition": 1
                },
                "code_r0x00102330": {
                    "loop": 1,
                    "loop_start": 1,
                    "print_string_loop": 1,
                    "reverse_and_print_loop": 1
                },
                "fclose": {
                    "close_file": 1
                },
                "fopen": {
                    "open_file": 1
                },
                "fputc": {
                    "put_character_to_file": 1
                },
                "fputs": {
                    "print_string_to_stdout": 1,
                    "put_string": 1,
                    "write": 1,
                    "write_string": 1
                },
                "free": {
                    "free_memory": 1,
                    "release_memory": 1
                },
                "in_AX": {
                    "ax_register": 1,
                    "ax_value": 1,
                    "char_index": 1,
                    "character": 1,
                    "flag": 3,
                    "flags": 22,
                    "permission_flags": 1
                },
                "in_R8D": {
                    "char_index_limit": 1,
                    "count": 4,
                    "counter": 10,
                    "counter1": 1,
                    "counter2": 1,
                    "index_var3": 1,
                    "length": 5,
                    "limit": 1,
                    "loop_count": 1,
                    "loop_counter": 2,
                    "r8d_register": 1,
                    "size": 1
                },
                "in_stack_00000010": {
                    "context": 1,
                    "error_message": 1,
                    "format_string": 1,
                    "function_name": 1,
                    "info_message": 1,
                    "label": 1,
                    "loop_label_format": 1,
                    "message": 4,
                    "message1": 1,
                    "message_header": 1,
                    "prefix": 2,
                    "print_string": 1,
                    "prompt": 10,
                    "prompt_message": 1,
                    "stack_param1": 1,
                    "str1": 1,
                    "str_to_print": 1
                },
                "in_stack_00000038": {
                    "custom_data": 1,
                    "file_descriptor": 2,
                    "filename": 1,
                    "filename2": 2,
                    "format": 1,
                    "format_string": 1,
                    "format_string2": 1,
                    "helper_message": 1,
                    "line_ending": 1,
                    "loop_label_data": 1,
                    "message": 4,
                    "message2": 2,
                    "message_footer": 1,
                    "new_line_str": 1,
                    "other_context": 1,
                    "output_message": 1,
                    "prefix2": 1,
                    "print_formatted_string": 1,
                    "separator": 2,
                    "stack_param2": 1,
                    "str2": 1,
                    "string_pointer": 1,
                    "suffix": 1
                },
                "param_1": {
                    "character": 4,
                    "data": 6,
                    "input": 8,
                    "input_data": 3,
                    "input_param": 1,
                    "input_string": 2,
                    "input_value": 3,
                    "number": 1,
                    "string_address": 2,
                    "string_length": 1
                },
                "printf": {
                    "print": 1,
                    "print_formatted": 1,
                    "print_formatted_string": 1,
                    "print_formatted_string_to_stdout": 1
                },
                "put": {
                    "write_character": 1
                },
                "putc": {
                    "put_char": 1,
                    "write_character": 1
                },
                "putchar": {
                    "print_character_to_stdout": 1,
                    "put_character": 1
                },
                "uVar1": {
                    "count": 1,
                    "counter": 4,
                    "file_permission": 1,
                    "index": 3,
                    "temp": 2,
                    "temp1": 2,
                    "temp_1": 1,
                    "temp_var1": 5,
                    "temp_var_1": 1
                },
                "uVar2": {
                    "char_index": 1,
                    "current_index": 3,
                    "index": 4,
                    "index1": 15,
                    "index_1": 1,
                    "index_var1": 1,
                    "temp2": 1,
                    "temp_var2": 1,
                    "temp_var_2": 1
                },
                "uVar3": {
                    "index2": 15,
                    "index_2": 1,
                    "index_prev": 1,
                    "index_var2": 1,
                    "next_char_index": 1,
                    "next_index": 6,
                    "temp3": 1,
                    "temp_var3": 1,
                    "temp_var_3": 1
                },
                "unaff_R14": {
                    "buffer": 17,
                    "output": 3,
                    "output_buffer": 3,
                    "output_data": 1,
                    "output_str": 1,
                    "output_string": 4,
                    "string_buffer": 1,
                    "string_pointer": 1
                },
                "unaff_R15": {
                    "additional_data": 1,
                    "context": 2,
                    "extra_param": 1,
                    "file": 1,
                    "file_descriptor": 2,
                    "filename": 2,
                    "format": 3,
                    "format_string": 4,
                    "message": 5,
                    "output": 1,
                    "output_stream": 2,
                    "print_format_string": 1,
                    "print_function": 1,
                    "stdio_ptr": 1,
                    "stdout": 1,
                    "str": 1,
                    "string": 1,
                    "string_pointer": 1
                }
            },
            "called": [
                "FUN_001034d5"
            ],
            "calling": [
                "FUN_0010259a"
            ],
            "code": "\n\n\nvoid print_formatted_string_00102330(ulong input)\n\n{\n  uint temp_var1;\n  ushort flags;\n  ulong index1;\n  ulong index2;\n  uint counter;\n  char *buffer;\n  undefined8 message;\n  bool is_less_than;\n  undefined8 prompt;\n  undefined8 message;\n  \nloop:\n  if ((DAT_00108360 != 'S') || ((long)input < 0x80)) {\n    if (DAT_00108373 == '\\0') goto code_r0x001034d5;\n    if ((flags & 0x40) == 0) {\n      FUN_001034d5();\n      return;\n    }\n  }\nprintf_string_and_loop:\n  index1 = (ulong)counter;\n  counter = counter + 1;\n  index2 = (ulong)counter;\n  is_less_than = counter < DAT_00108374;\n  buffer[index1] = (char)input;\n  if (is_less_than) goto continue_loop;\n  do {\n    if (DAT_00108371 != '\\0') {\n      printf(\"%s: \",prompt);\n    }\n    if (DAT_00108372 == '\\0') {\n      buffer[index2] = '\\0';\n      fputs(buffer,stdout);\n    }\n    else {\n      FUN_0010286f(message);\n      buffer[index2] = '\\0';\n      fputs(buffer,stdout);\n    }\n    while (index2 = FUN_00103520(), index2 != 0xffffffffffffffff) {\n      if (0xff < index2) {\nbreak_loop:\n        FUN_00103810();\n        break;\n      }\n      if (index2 == 9) {\nputc_continue:\n        put_char((int)index2,stdout);\n      }\n      else {\n        if ((*(ushort *)(&table + index2 * 2) & 0x10) == 0) {\n          if (((DAT_00108360 != 'S') || ((long)index2 < 0x80)) &&\n             ((DAT_00108373 == '\\0' || ((*(ushort *)(&table + index2 * 2) & 0x40) == 0))))\n          goto break_loop;\n          goto putc_continue;\n        }\n        put_char((int)index2,stdout);\n      }\n    }\n    if (DAT_00108358 == (char *)0x0) {\n      put_char(10,stdout);\n    }\n    else {\n      fputs(DAT_00108358,stdout);\n    }\n    while (index2 = (ulong)DAT_00108374, message = message, DAT_00108374 != 0) {\n      index2 = FUN_00103520();\n      temp_var1 = DAT_00108374;\n      if (index2 == 0xffffffffffffffff) goto return_from_function;\n      if (index2 < 0x100) {\n        if (index2 == 9) {\nputc_break:\n          *buffer = (char)index2;\n          if (temp_var1 < 2) {\n            FUN_001034fa();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&table + index2 * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)index2 < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&table + index2 * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto putc_break;\n          }\n          *buffer = (char)index2;\n          if (temp_var1 < 2) {\n            index2 = 1;\n            break;\n          }\n        }\n        index2 = FUN_00103520();\n        temp_var1 = DAT_00108374;\n        if (index2 == 0xffffffffffffffff) goto return_from_function;\n        if (0xff < index2) goto code_r0x001034d5;\n        if (index2 == 9) {\nputc_continue2:\n          buffer[1] = (char)index2;\n          if (temp_var1 < 3) {\n            FUN_00103510();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&table + index2 * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)index2 < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&table + index2 * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto putc_continue2;\n          }\n          buffer[1] = (char)index2;\n          if (temp_var1 < 3) {\n            index2 = 2;\n            break;\n          }\n        }\n        index2 = FUN_00103520();\n        temp_var1 = DAT_00108374;\n        if (index2 == 0xffffffffffffffff) goto return_from_function;\n        if (0xff < index2) goto code_r0x001034d5;\n        if (index2 == 9) {\nputc_continue3:\n          buffer[2] = (char)index2;\n        }\n        else {\n          if ((*(ushort *)(&table + index2 * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)index2 < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&table + index2 * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto putc_continue3;\n          }\n          buffer[2] = (char)index2;\n        }\n        if (temp_var1 < 4) {\n          index2 = 3;\n          break;\n        }\n        counter = 3;\ncontinue_loop:\n        input = FUN_00103520();\n        if (input == 0xffffffffffffffff) {\nreturn_from_function:\n          free(buffer);\n          return;\n        }\n        if (input < 0x100) {\n          if ((input == 9) ||\n             (flags = *(ushort *)(&table + input * 2), (flags & 0x10) != 0))\n          goto printf_string_and_loop;\n          goto loop;\n        }\n      }\ncode_r0x001034d5:\n      FUN_00103810();\n    }\n  } while( true );\n}\n\n",
            "current_name": "print_formatted_string_00102330",
            "entrypoint": "0x00102330",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102330": "print_formatted_string_00102330",
                "LAB_00102381": "putc_continue3",
                "LAB_001023bb": "putc_continue2",
                "LAB_001023f5": "putc_break",
                "LAB_00102438": "putc_continue",
                "LAB_001033b3": "continue_loop",
                "LAB_00103400": "print_string_and_loop",
                "LAB_0010348e": "break_loop",
                "LAB_001034be": "return_from_function",
                "_sch_istable": "table",
                "_stdout": "stdout",
                "bVar4": "is_less_than",
                "code_r0x00102330": "loop",
                "fputs": "print_string_to_stdout",
                "free": "release_memory",
                "in_AX": "flags",
                "in_R8D": "counter",
                "in_stack_00000010": "prompt",
                "in_stack_00000038": "message",
                "param_1": "input",
                "printf": "print",
                "put": "write_character",
                "putc": "put_char",
                "uVar1": "temp_var1",
                "uVar2": "index1",
                "uVar3": "index2",
                "unaff_R14": "buffer",
                "unaff_R15": "message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010259a": {
            "additional_data": {
                "DAT_00108358": {
                    "is_printable": 1,
                    "line": 1,
                    "line_delimiter": 1,
                    "new_line": 1,
                    "newline": 1,
                    "optional_text": 1,
                    "str": 1
                },
                "DAT_00108360": {
                    "char_flag": 1,
                    "character_type": 1,
                    "condition2": 1,
                    "flag2": 1,
                    "is_printable": 1,
                    "is_string": 1,
                    "option1": 1
                },
                "DAT_00108371": {
                    "continue_printing": 1,
                    "option2": 1
                },
                "DAT_00108372": {
                    "check_flag": 1,
                    "condition1": 1,
                    "flag": 1,
                    "is_new_line": 1,
                    "is_special": 1,
                    "option3": 1,
                    "use_standard_output_first": 1
                },
                "DAT_00108373": {
                    "check_char_flag": 1,
                    "condition3": 1,
                    "flag3": 1,
                    "include_special": 1,
                    "is_keyword": 1,
                    "option4": 1,
                    "use_hexadecimal": 1
                },
                "DAT_00108374": {
                    "buffer_size": 1,
                    "check_line": 1,
                    "len": 1,
                    "option5": 1,
                    "str2": 1,
                    "string_length": 1,
                    "string_size": 1
                },
                "FUN_00102330": {
                    "handle_end_of_argument": 1,
                    "initialize_formatted_string": 1,
                    "other_function": 1,
                    "perform_action": 1,
                    "some_function": 1
                },
                "FUN_0010259a": {
                    "print_and_process_input": 2,
                    "print_formatted_output": 3,
                    "print_formatted_string": 8,
                    "print_formatted_text": 1,
                    "print_modified_string": 1,
                    "print_string": 5,
                    "print_string_and_characters": 1,
                    "print_string_and_numbers": 1,
                    "print_string_from_memory": 1,
                    "print_string_with_control_characters": 1,
                    "print_string_with_format": 1,
                    "print_string_with_formatting": 1,
                    "print_string_with_input": 1,
                    "print_strings": 1,
                    "print_strings_with_prompt": 1,
                    "print_strings_with_tabs": 1,
                    "process_data": 1
                },
                "FUN_0010286f": {
                    "execute_another_function": 1,
                    "print_string2": 1,
                    "process_line_string": 1,
                    "process_param": 1,
                    "reverse": 1,
                    "reverse_string": 1,
                    "special_function": 1
                },
                "FUN_001034d5": {
                    "action1": 1,
                    "check_character": 1,
                    "handle_error": 1,
                    "handle_invalid_character": 2,
                    "handle_special_char": 1
                },
                "FUN_001034fa": {
                    "action3": 1,
                    "check_function_a": 1,
                    "cleanup_and_exit2": 1,
                    "cleanup_function1": 1,
                    "execute_function1": 1,
                    "handle_end_of_formatted_string": 1,
                    "handle_end_of_string": 1
                },
                "FUN_00103510": {
                    "action4": 1,
                    "check_function_b": 1,
                    "cleanup_and_exit3": 1,
                    "cleanup_function2": 1,
                    "execute_function2": 1,
                    "handle_end_of_formatted_string_with_multiple_chars": 1,
                    "handle_end_of_line": 1
                },
                "FUN_00103520": {
                    "action5": 1,
                    "check_value": 1,
                    "get_next_char": 3,
                    "get_next_character": 1,
                    "read_byte": 1
                },
                "FUN_00103810": {
                    "action2": 1,
                    "cleanup_and_exit": 1,
                    "error_handling_function": 1,
                    "execute": 1,
                    "execute_function": 1,
                    "handle_end_of_file": 1,
                    "move_to_next_character": 1
                },
                "__c": {
                    "character": 1
                },
                "__format": {
                    "format": 1
                },
                "__ptr": {
                    "ptr": 1
                },
                "__ptr_2": {
                    "ptr2": 1
                },
                "__s": {
                    "string": 1
                },
                "__stream": {
                    "stream": 1
                },
                "_sch_istable": {
                    "char_table": 1,
                    "character_table": 3,
                    "is_table": 1,
                    "istable": 1,
                    "sch_is_table": 1
                },
                "_stdout": {
                    "output_stream": 3,
                    "standard_output": 2,
                    "stdout": 4
                },
                "bVar3": {
                    "check_flag": 1,
                    "condition_var": 1,
                    "flag": 6,
                    "invalid_char": 1,
                    "invalid_character_flag": 1,
                    "is_char_code_found": 1,
                    "is_condition_met": 1,
                    "is_control_character": 1,
                    "is_enabled": 1,
                    "is_flag_set": 1,
                    "is_greater": 2,
                    "is_invalid_char": 1,
                    "is_overflow": 1,
                    "is_special_char": 2,
                    "is_special_character": 1,
                    "is_true": 1,
                    "param_16": 1,
                    "should_break": 1,
                    "temp_bool": 1,
                    "temp_var3": 1
                },
                "fputs": {
                    "print_string": 1,
                    "put_string": 4,
                    "write_string": 2
                },
                "free": {
                    "deallocate_memory": 3,
                    "free_memory": 3
                },
                "in_R8": {
                    "buffer_length": 1,
                    "char_index": 2,
                    "counter": 2,
                    "current_char": 1,
                    "current_index": 4,
                    "current_position": 1,
                    "index": 5,
                    "input_index": 1,
                    "length": 1,
                    "loop_counter": 1,
                    "position": 1,
                    "ptr_content": 1,
                    "string_index": 1,
                    "temp": 1,
                    "temp3": 1,
                    "temp_var3": 1
                },
                "param_1": {
                    "param1": 1
                },
                "param_11": {
                    "callback": 1,
                    "control_string": 1,
                    "filename2": 1,
                    "filename_again": 1,
                    "format_specifier": 1,
                    "format_string2": 1,
                    "function_pointer2": 1,
                    "loop_condition": 1,
                    "more_data": 1,
                    "next_format": 1,
                    "next_param": 1,
                    "optional_string": 1,
                    "output_string": 2,
                    "param": 1,
                    "param2": 2,
                    "param3": 1,
                    "param_11": 5,
                    "param_14": 1,
                    "param_ptr": 1,
                    "param_ptr_2": 1,
                    "param_unused": 1,
                    "string_end": 1,
                    "string_followed_by_newline": 1,
                    "temp": 1,
                    "undefined8_param": 1
                },
                "param_2": {
                    "param2": 1,
                    "param_2": 1
                },
                "param_3": {
                    "param3": 2,
                    "param_3": 2
                },
                "param_3_2": {
                    "param3": 1
                },
                "param_4": {
                    "param4": 1,
                    "param_4": 2
                },
                "param_4_2": {
                    "param4": 1
                },
                "param_7": {
                    "buffer_index": 1,
                    "buffer_length": 1,
                    "buffer_size": 1,
                    "current_byte": 1,
                    "current_char": 3,
                    "current_index": 1,
                    "index": 1,
                    "input_length": 2,
                    "input_size": 1,
                    "input_value": 3,
                    "length": 4,
                    "num": 1,
                    "param1": 1,
                    "str_length": 5,
                    "string_index": 2,
                    "string_length": 3
                },
                "param_8": {
                    "format": 3,
                    "format_param": 1,
                    "format_specifier": 2,
                    "format_string": 11,
                    "input_string": 3,
                    "message": 3,
                    "prompt": 1,
                    "prompt_format": 1,
                    "str_prefix": 1,
                    "string": 2,
                    "string_to_print": 2,
                    "text_to_print": 1
                },
                "printf": {
                    "print": 2,
                    "print_formatted": 2,
                    "print_formatted_output": 1,
                    "print_formatted_string": 2
                },
                "put": {
                    "put_function": 1
                },
                "putc": {
                    "print_char": 1,
                    "put_character": 3,
                    "write_character": 1
                },
                "putchar": {
                    "output_character": 1,
                    "put_character": 1
                },
                "uVar1": {
                    "byte_value": 1,
                    "char": 1,
                    "char1": 1,
                    "char_code": 3,
                    "char_index": 1,
                    "character": 1,
                    "control_var_1": 1,
                    "count": 1,
                    "current_input_character": 1,
                    "loop_count": 1,
                    "lower_char": 1,
                    "temp1": 4,
                    "temp_value": 2,
                    "temp_var1": 5,
                    "u_val1": 1,
                    "value1": 1,
                    "var1": 1
                },
                "uVar2": {
                    "char2": 1,
                    "char_code": 2,
                    "char_value": 1,
                    "character": 3,
                    "control_var_2": 1,
                    "current_char_code": 1,
                    "next_char_code": 1,
                    "next_input_character": 1,
                    "return_value": 3,
                    "temp2": 4,
                    "temp_value": 1,
                    "temp_var2": 5,
                    "u_val2": 1,
                    "value2": 1,
                    "var2": 1
                },
                "uVar3": {
                    "b_val": 1
                },
                "unaff_R14": {
                    "buffer": 5,
                    "current_char": 2,
                    "current_string": 2,
                    "formatted_string": 3,
                    "input_string": 1,
                    "modified_string": 1,
                    "output_string": 8,
                    "str_buffer": 2,
                    "string_buffer": 5,
                    "string_ptr": 1
                },
                "unaff_R15": {
                    "argument_list": 1,
                    "extra_data": 1,
                    "filename": 3,
                    "format_string": 1,
                    "function_pointer": 1,
                    "optional_output_string": 1,
                    "output_buffer": 1,
                    "output_value": 1,
                    "param": 1,
                    "param1": 1,
                    "param2": 1,
                    "param_11": 8,
                    "param_15": 1,
                    "param_3": 1,
                    "param_8": 2,
                    "param_ptr": 1,
                    "param_unused2": 1,
                    "print_format": 1,
                    "print_function": 1,
                    "prompt": 1
                }
            },
            "called": [
                "putc",
                "free",
                "FUN_0010259a",
                "fputs",
                "FUN_001034d5",
                "FUN_00103810",
                "printf",
                "FUN_001034fa",
                "FUN_00103510",
                "FUN_0010286f",
                "FUN_00103520",
                "FUN_00102330"
            ],
            "calling": [
                "FUN_0010259a"
            ],
            "code": "\n\n\nvoid print_formatted_string_0010259a(void)\n\n{\n  uint temp_var1;\n  ulong temp_var2;\n  ulong index;\n  char *outfputs;\n  undefined8 param_11;\n  bool flag;\n  uint str_length;\n  undefined8 format_string;\n  undefined8 param11;\n  \n  do {\n    str_length = (uint)index;\n    printf(\"%s: \",format_string);\n    index = (ulong)str_length;\n    do {\n      if (DAT_00108372 == '\\0') {\n        outfputs[index] = '\\0';\n        fputs(outfputs,stdout);\n      }\n      else {\n        str_length = (uint)index;\n        FUN_0010286f(param_11);\n        outfputs[str_length] = '\\0';\n        fputs(outfputs,stdout);\n      }\n      while (temp_var2 = FUN_00103520(), temp_var2 != 0xffffffffffffffff) {\n        if (0xff < temp_var2) {\nLAB_0010348e:\n          FUN_00103810();\n          break;\n        }\n        if (temp_var2 == 9) {\nLAB_00102438:\n          putc((int)temp_var2,stdout);\n        }\n        else {\n          if ((*(ushort *)(&character_table + temp_var2 * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)temp_var2 < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + temp_var2 * 2) & 0x40) == 0))))\n            goto LAB_0010348e;\n            goto LAB_00102438;\n          }\n          putc((int)temp_var2,stdout);\n        }\n      }\n      if (DAT_00108358 == (char *)0x0) {\n        putc(10,stdout);\n      }\n      else {\n        fputs(DAT_00108358,stdout);\n      }\n      while (index = (ulong)DAT_00108374, DAT_00108374 != 0) {\n        temp_var2 = FUN_00103520();\n        temp_var1 = DAT_00108374;\n        if (temp_var2 == 0xffffffffffffffff) goto LAB_001034be;\n        if (temp_var2 < 0x100) {\n          if (temp_var2 == 9) {\nLAB_001023f5:\n            *outfputs = (char)temp_var2;\n            if (temp_var1 < 2) {\n              FUN_001034fa();\n              return;\n            }\n          }\n          else {\n            if ((*(ushort *)(&character_table + temp_var2 * 2) & 0x10) == 0) {\n              if (((DAT_00108360 != 'S') || ((long)temp_var2 < 0x80)) &&\n                 ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + temp_var2 * 2) & 0x40) == 0))))\n              goto code_r0x001034d5;\n              goto LAB_001023f5;\n            }\n            *outfputs = (char)temp_var2;\n            if (temp_var1 < 2) {\n              index = 1;\n              break;\n            }\n          }\n          temp_var2 = FUN_00103520();\n          temp_var1 = DAT_00108374;\n          if (temp_var2 == 0xffffffffffffffff) goto LAB_001034be;\n          if (0xff < temp_var2) goto code_r0x001034d5;\n          if (temp_var2 == 9) {\nLAB_001023bb:\n            outfputs[1] = (char)temp_var2;\n            if (temp_var1 < 3) {\n              FUN_00103510();\n              return;\n            }\n          }\n          else {\n            if ((*(ushort *)(&character_table + temp_var2 * 2) & 0x10) == 0) {\n              if (((DAT_00108360 != 'S') || ((long)temp_var2 < 0x80)) &&\n                 ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + temp_var2 * 2) & 0x40) == 0))))\n              goto code_r0x001034d5;\n              goto LAB_001023bb;\n            }\n            outfputs[1] = (char)temp_var2;\n            if (temp_var1 < 3) {\n              index = 2;\n              break;\n            }\n          }\n          temp_var2 = FUN_00103520();\n          temp_var1 = DAT_00108374;\n          if (temp_var2 == 0xffffffffffffffff) {\nLAB_001034be:\n            free_memory(outfputs);\n            return;\n          }\n          if (0xff < temp_var2) goto code_r0x001034d5;\n          if (temp_var2 == 9) {\nLAB_00102381:\n            outfputs[2] = (char)temp_var2;\n          }\n          else {\n            if ((*(ushort *)(&character_table + temp_var2 * 2) & 0x10) == 0) {\n              if (((DAT_00108360 != 'S') || ((long)temp_var2 < 0x80)) &&\n                 ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + temp_var2 * 2) & 0x40) == 0))))\n              goto code_r0x001034d5;\n              goto LAB_00102381;\n            }\n            outfputs[2] = (char)temp_var2;\n          }\n          if (3 < temp_var1) {\n            index = 3;\n            do {\n              str_length = (uint)index;\n              temp_var2 = FUN_00103520();\n              if (temp_var2 == 0xffffffffffffffff) goto LAB_001034be;\n              if (0xff < temp_var2) goto code_r0x001034d5;\n              if (((temp_var2 != 9) && ((*(ushort *)(&character_table + temp_var2 * 2) & 0x10) == 0)) &&\n                 ((DAT_00108360 != 'S' || ((long)temp_var2 < 0x80)))) {\n                if (DAT_00108373 == '\\0') goto code_r0x001034d5;\n                if ((*(ushort *)(&character_table + temp_var2 * 2) & 0x40) == 0) {\n                  FUN_001034d5();\n                  return;\n                }\n              }\n              index = (ulong)(str_length + 1);\n              flag = DAT_00108374 <= str_length + 1;\n              outfputs[str_length] = (char)temp_var2;\n              if (flag) goto joined_r0x0010341b;\n            } while( true );\n          }\n          index = 3;\n          break;\n        }\ncode_r0x001034d5:\n        FUN_00103810();\n      }\njoined_r0x0010341b:\n      param_11 = param11;\n    } while (DAT_00108371 == '\\0');\n  } while( true );\n}\n\n",
            "current_name": "print_formatted_string_0010259a",
            "entrypoint": "0x0010259a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010259a": "print_formatted_string_0010259a",
                "_sch_istable": "character_table",
                "_stdout": "stdout",
                "bVar3": "flag",
                "fputs": "put_string",
                "free": "free_memory",
                "in_R8": "index",
                "param_1": "param1",
                "param_7": "str_length",
                "param_8": "format_string",
                "printf": "print",
                "put": "put_function",
                "putc": "put_character",
                "uVar1": "temp_var1",
                "uVar2": "temp_var2",
                "unaff_R14": "output_string",
                "unaff_R15": "param_11"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102771": {
            "additional_data": {
                "0x18": {
                    "number_of_bits": 1
                },
                "0xff": {
                    "bit_mask": 1
                },
                "0xff00": {
                    "bit_mask16": 1
                },
                "0xff0000": {
                    "bit_mask8": 1
                },
                "FUN_00102771": {
                    "byte_swap": 1,
                    "convert_unsigned_long_to_little_endian": 1,
                    "extract_bits_from_value": 1,
                    "extract_bytes_from_ulong": 1,
                    "reverse_bits": 19,
                    "reverse_byte_order": 5,
                    "reverse_bytes": 2,
                    "reversed_bits": 1
                },
                "unaff_RBX": {
                    "input": 17,
                    "input_value": 9,
                    "original_value": 2,
                    "result": 1,
                    "value": 2
                },
                "unaff_XXX": {
                    "output_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00103520"
            ],
            "code": "\nulong reverse_bits_00102771(void)\n\n{\n  ulong input;\n  \n  return input >> 0x18 & 0xff |\n         (input & 0xff) << 0x18 | (ulong)((uint)(input << 8) & 0xff0000) |\n         (ulong)((uint)(input >> 8) & 0xff00);\n}\n\n",
            "current_name": "reverse_bits_00102771",
            "entrypoint": "0x00102771",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102771": "reverse_bits_00102771",
                "unaff_RBX": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001027e2": {
            "additional_data": {
                "1": {
                    "one": 1
                },
                "DAT_0010a390": {
                    "constant": 1
                },
                "FUN_001027e2": {
                    "add_and_increment": 1,
                    "add_numbers_and_adjust": 1,
                    "add_params_and_update_pointer": 1,
                    "calculate_and_store_result": 1,
                    "calculate_sum": 9,
                    "calculate_sum_and_adjust": 1,
                    "calculate_sum_and_increment": 4,
                    "calculate_sum_and_update": 4,
                    "calculate_sum_with_offset": 1,
                    "update_and_sum": 1,
                    "update_counters": 1,
                    "update_params": 1,
                    "update_value_and_sum": 1,
                    "update_values": 4
                },
                "in_RAX": {
                    "counter_ptr": 1,
                    "output": 1,
                    "pointer": 4,
                    "pointer_to_result": 1,
                    "ptr": 2,
                    "ptr_result": 1,
                    "sum": 7,
                    "sum_ptr": 2,
                    "sum_variable": 1,
                    "temp": 3,
                    "temp_ptr": 6
                },
                "param_1": {
                    "a": 1,
                    "addend1": 1,
                    "addition_1": 1,
                    "first_number": 3,
                    "input1": 2,
                    "input_1": 1,
                    "integer_1": 1,
                    "num1": 11,
                    "num_1": 1,
                    "number1": 1,
                    "number_1": 2,
                    "operand1": 1,
                    "value1": 3,
                    "value_1": 2
                },
                "param_2": {
                    "addend2": 1,
                    "addition_2": 1,
                    "b": 1,
                    "input2": 2,
                    "input_2": 1,
                    "integer_2": 1,
                    "num2": 11,
                    "num_2": 1,
                    "number2": 1,
                    "number_2": 2,
                    "operand2": 1,
                    "second_number": 3,
                    "value2": 3,
                    "value_2": 2
                },
                "param_3": {
                    "adjustment": 2,
                    "c": 1,
                    "condition": 3,
                    "constant": 1,
                    "difference": 1,
                    "flag": 3,
                    "increment": 1,
                    "increment_val": 1,
                    "is_subtraction": 1,
                    "modifier": 9,
                    "offset": 2,
                    "selector": 1,
                    "subtract_value": 2,
                    "subtraction_1": 1,
                    "subtraction_factor": 2
                },
                "param_4": {
                    "output": 2,
                    "result": 25,
                    "result_ptr": 3,
                    "sum": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00103810"
            ],
            "code": "\nvoid calculate_sum_and_update_001027e2(int num1,int num2,long modifier,long *result)\n\n{\n  int *sum;\n  \n  *result = *result + (1 - modifier);\n  *sum = num1 + num2;\n  return;\n}\n\n",
            "current_name": "calculate_sum_and_update_001027e2",
            "entrypoint": "0x001027e2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001027e2": "calculate_sum_and_update_001027e2",
                "in_RAX": "sum",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "modifier",
                "param_4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010282b": {
            "additional_data": {
                "": {
                    "temp": 1
                },
                "DAT_00108348": {
                    "data_byte1": 1,
                    "first_byte": 2,
                    "high_byte": 2,
                    "output_byte1": 1,
                    "shifted_data1": 1,
                    "shifted_input_data_1": 1,
                    "shifted_value1": 1
                },
                "DAT_00108349": {
                    "data_byte2": 1,
                    "middle_byte": 1,
                    "output_byte2": 1,
                    "second_byte": 2,
                    "second_highest_byte": 1,
                    "shifted_data3": 1,
                    "shifted_input_data_3": 1,
                    "shifted_value2": 1
                },
                "DAT_0010834a": {
                    "data_byte3": 1,
                    "highest_byte": 1,
                    "output_byte3": 1,
                    "shifted_data2": 1,
                    "shifted_input_data_2": 1,
                    "shifted_value3": 1,
                    "third_byte": 2,
                    "top_byte": 1
                },
                "FUN_0010282b": {
                    "copy_data_to_memory": 1,
                    "initialize_data": 17,
                    "initialize_memory": 1,
                    "initialize_registers": 1,
                    "set_memory_values": 2,
                    "set_pointers": 1,
                    "set_rbx_values": 2,
                    "set_register_values": 1,
                    "set_registers": 1,
                    "set_values": 2,
                    "set_values_and_pointers": 1,
                    "update_memory_addresses": 1
                },
                "destination": {
                    "out_data_pointer": 1
                },
                "in_RAX": {
                    "data_pointer": 7,
                    "data_ptr": 1,
                    "destination": 2,
                    "output_pointer": 6,
                    "output_ptr": 1,
                    "output_value": 2,
                    "pointer_to_value": 3,
                    "ptr_count": 1,
                    "ptr_value": 2,
                    "result_pointer": 3,
                    "return_value_ptr": 1,
                    "target_address": 1,
                    "target_pointer": 1
                },
                "in_RCX": {
                    "data_address": 1,
                    "data_pointer": 9,
                    "data_ptr": 2,
                    "destination_pointer": 1,
                    "output_address": 1,
                    "output_pointer": 8,
                    "pointer_to_address": 2,
                    "pointer_to_data": 1,
                    "ptr_address": 1,
                    "ptr_data": 1,
                    "ptr_destination": 1,
                    "source": 2,
                    "target_ptr": 1
                },
                "source": {
                    "input_data_pointer": 1
                },
                "unaff_RBX": {
                    "base_value": 1,
                    "byte_value": 1,
                    "data": 1,
                    "input_data": 5,
                    "input_value": 11,
                    "original_value": 1,
                    "register_rbx": 1,
                    "register_value": 1,
                    "source_data": 1,
                    "source_value": 5,
                    "value": 1,
                    "value_in_rbx": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00103810"
            ],
            "code": "\nvoid initialize_data_0010282b(void)\n\n{\n  undefined4 *data_pointer;\n  undefined8 *data_pointer;\n  undefined8 input_value;\n  \n  DAT_00108348 = (undefined)((ulong)input_value >> 8);\n  DAT_0010834a = (undefined)((ulong)input_value >> 0x18);\n  DAT_00108349 = (undefined)((ulong)input_value >> 0x10);\n  *data_pointer = 3;\n  *data_pointer = &DAT_00108348;\n  return;\n}\n\n",
            "current_name": "initialize_data_0010282b",
            "entrypoint": "0x0010282b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010282b": "initialize_data_0010282b",
                "in_RAX": "data_pointer",
                "in_RCX": "data_pointer",
                "unaff_RBX": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102853": {
            "additional_data": {
                "DAT_00108372": {
                    "flag": 1
                },
                "FUN_00102853": {
                    "print_and_check": 1,
                    "print_if_data_available": 1,
                    "print_if_data_exists": 1,
                    "print_if_data_non_zero": 1,
                    "print_if_data_valid": 1,
                    "print_if_enabled": 1,
                    "print_if_flag_set": 2,
                    "print_if_not_null": 3,
                    "print_if_not_zero": 3,
                    "print_message": 7,
                    "print_message_if_condition_met": 1,
                    "print_message_if_enabled": 6,
                    "print_message_if_flag_set": 2,
                    "print_status_message": 1
                },
                "FUN_0010286f": {
                    "execute_additional_action": 2,
                    "execute_additional_function": 8,
                    "execute_auxiliary_function": 1,
                    "execute_function": 1,
                    "execute_next_function": 1,
                    "execute_print": 1,
                    "execute_print_function": 1,
                    "execute_secondary_function": 1,
                    "perform_action": 3,
                    "perform_additional_action": 2,
                    "print_message": 1,
                    "print_new_line": 4,
                    "reverse_string": 1,
                    "secondary_print": 1
                },
                "param_1": {
                    "input_string": 1,
                    "message": 27,
                    "str": 1,
                    "text": 1,
                    "unused_param": 1
                },
                "printf": {
                    "formatted_print": 1,
                    "output_message": 1,
                    "print": 1,
                    "print_formatted": 1,
                    "print_formatted_message": 1,
                    "print_formatted_string": 1
                }
            },
            "called": [
                "printf",
                "FUN_0010286f"
            ],
            "calling": [
                "FUN_00103890"
            ],
            "code": "\nvoid print_message_if_enabled_00102853(undefined8 message)\n\n{\n  printf(\"%s: \",message);\n  if (DAT_00108372 == '\\0') {\n    return;\n  }\n  FUN_0010286f();\n  return;\n}\n\n",
            "current_name": "print_message_if_enabled_00102853",
            "entrypoint": "0x00102853",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102853": "print_message_if_enabled_00102853",
                "param_1": "message",
                "printf": "print"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010286f": {
            "additional_data": {
                "DAT_00108354": {
                    "format_flag": 1
                },
                "FUN_0010286f": {
                    "display_number": 1,
                    "print_formatted_number": 7,
                    "print_formatted_parameter": 1,
                    "print_formatted_value": 18,
                    "print_number": 1,
                    "print_number_with_format": 2
                },
                "__format": {
                    "format": 19,
                    "format_specifier": 1,
                    "format_string": 2
                },
                "param_1": {
                    "input_value": 1,
                    "number": 11,
                    "value": 19
                },
                "printf": {
                    "custom_print": 1,
                    "formatted_print": 5,
                    "print": 3,
                    "print_formatted": 1,
                    "print_function": 2
                }
            },
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_0010259a",
                "FUN_00102853"
            ],
            "code": "\nvoid print_formatted_value_0010286f(undefined8 value)\n\n{\n  if (DAT_00108354 == 10) {\n    printf(\"%7ld \",value);\n    return;\n  }\n  if (DAT_00108354 != 0x10) {\n    if (DAT_00108354 == 8) {\n      printf(\"%7lo \",value);\n      return;\n    }\n    return;\n  }\n  printf(\"%7lx \",value);\n  return;\n}\n\n",
            "current_name": "print_formatted_value_0010286f",
            "entrypoint": "0x0010286f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010286f": "print_formatted_value_0010286f",
                "param_1": "value",
                "printf": "formatted_print"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001028b2": {
            "additional_data": {
                "FUN_001028b2": {
                    "check_byte_sequence": 7,
                    "check_character_encoding": 4,
                    "check_multibyte_character": 1,
                    "check_unicode_encoding": 1,
                    "check_valid_sequence": 1,
                    "decode_byte_sequence": 2,
                    "decode_data": 1,
                    "decode_parameter": 1,
                    "decode_utf8_character": 2,
                    "decode_utf8_sequence": 1,
                    "find_code_length": 1,
                    "find_next_character": 1,
                    "find_utf8_char_length": 1,
                    "get_byte_sequence_length": 3,
                    "get_start_position": 1,
                    "identify_encoding_scheme": 1,
                    "parse_byte_sequence": 2
                },
                "bVar1": {
                    "current_byte": 3,
                    "first_byte": 25
                },
                "lVar2": {
                    "char_length": 1,
                    "next_position": 1,
                    "offset": 2,
                    "result": 23,
                    "sequence_offset": 1
                },
                "param_1": {
                    "buffer": 1,
                    "byte_array": 4,
                    "byte_sequence": 13,
                    "code": 1,
                    "data": 3,
                    "input_buffer": 1,
                    "input_bytes": 3,
                    "input_data": 3,
                    "sequence": 1,
                    "utf8_str": 1
                },
                "param_2": {
                    "array_length": 3,
                    "buffer_size": 1,
                    "byte_count": 1,
                    "code_length": 1,
                    "data_length": 3,
                    "input_length": 2,
                    "length": 5,
                    "sequence_length": 14,
                    "str_length": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00103240"
            ],
            "code": "\nlong check_byte_sequence_001028b2(byte *byte_sequence,long sequence_length)\n\n{\n  byte first_byte;\n  long result;\n  \n  first_byte = *byte_sequence;\n  if ((0xbf < first_byte) && (sequence_length != 1)) {\n    result = 0;\n    if ((byte_sequence[1] & 0xc0) == 0x80) {\n      if ((first_byte & 0x20) == 0) {\n        return 2;\n      }\n      if ((sequence_length != 2) && ((byte_sequence[2] & 0xc0) == 0x80)) {\n        if ((first_byte & 0x10) == 0) {\n          result = 3;\n        }\n        else {\n          result = 0;\n          if (sequence_length != 3) {\n            return (ulong)((byte_sequence[3] & 0xc0) == 0x80) << 2;\n          }\n        }\n      }\n    }\n    return result;\n  }\n  return 0;\n}\n\n",
            "current_name": "check_byte_sequence_001028b2",
            "entrypoint": "0x001028b2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001028b2": "check_byte_sequence_001028b2",
                "bVar1": "first_byte",
                "lVar2": "result",
                "param_1": "byte_sequence",
                "param_2": "sequence_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010290e": {
            "additional_data": {
                "FUND_0010290e": {
                    "read_byte_from_file": 1
                },
                "FUN_0010290e": {
                    "read_and_decrement": 1,
                    "read_byte": 3,
                    "read_byte_from_buffer": 1,
                    "read_byte_from_file": 12,
                    "read_byte_from_ptr": 2,
                    "read_byte_from_stream": 4,
                    "read_next_byte": 7
                },
                "__uflow": {
                    "read_character_from_file": 1,
                    "read_from_file": 1,
                    "read_from_stream": 1,
                    "read_next_byte": 1
                },
                "param_1": {
                    "file": 21,
                    "file_ptr": 1,
                    "file_stream": 3,
                    "stream": 3
                },
                "param_2": {
                    "data_position": 1,
                    "file_offset": 2,
                    "file_pos": 1,
                    "file_position": 3,
                    "offset": 5,
                    "position": 18,
                    "stream_position": 1
                },
                "param_3": {
                    "byte_counter": 1,
                    "bytes_remaining": 2,
                    "num_bytes": 1,
                    "num_bytes_remaining": 1,
                    "remaining": 1,
                    "remaining_bytes": 23
                },
                "param_4": {
                    "byte_count": 1,
                    "bytes_processed": 1,
                    "bytes_read": 6,
                    "characters_read": 3,
                    "count": 1,
                    "counter": 4,
                    "error_count": 2,
                    "error_counter": 2,
                    "num_bytes_read": 1,
                    "num_read_bytes": 1,
                    "num_reading_errors": 1,
                    "num_reads": 1,
                    "read_byte_count": 1,
                    "read_error": 1,
                    "read_errors": 3
                },
                "pbVar1": {
                    "buffer": 1,
                    "buffer_pointer": 1,
                    "buffer_position": 1,
                    "buffer_ptr": 4,
                    "byte_pointer": 4,
                    "byte_ptr": 2,
                    "current": 1,
                    "current_byte": 1,
                    "current_byte_ptr": 1,
                    "next_byte": 1,
                    "read_buffer": 1,
                    "read_byte": 1,
                    "read_pointer": 6,
                    "read_ptr": 6
                },
                "uVar2": {
                    "byte_value": 4,
                    "current_byte": 1,
                    "read_byte": 1,
                    "read_result": 1,
                    "result": 23,
                    "return_value": 1
                }
            },
            "called": [
                "__uflow"
            ],
            "calling": [
                "FUN_00102b11"
            ],
            "code": "\nuint read_byte_from_file_0010290e(_IO_FILE *file,long position,uint *remaining_bytes,int *bytes_read)\n\n{\n  byte *read_pointer;\n  uint result;\n  \n  if (*remaining_bytes != 0) {\n    result = *remaining_bytes - 1;\n    *remaining_bytes = result;\n    return (uint)*(byte *)(position + (ulong)result);\n  }\n  *bytes_read = *bytes_read + 1;\n  read_pointer = (byte *)file->_IO_read_ptr;\n  if (file->_IO_read_end <= read_pointer) {\n    result = __uflow(file);\n    return result;\n  }\n  file->_IO_read_ptr = (char *)(read_pointer + 1);\n  return (uint)*read_pointer;\n}\n\n",
            "current_name": "read_byte_from_file_0010290e",
            "entrypoint": "0x0010290e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010290e": "read_byte_from_file_0010290e",
                "__uflow": "read_from_stream",
                "param_1": "file",
                "param_2": "position",
                "param_3": "remaining_bytes",
                "param_4": "bytes_read",
                "pbVar1": "read_pointer",
                "uVar2": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010293a": {
            "additional_data": {
                "DAT_00108350": {
                    "unicode_display_type": 1
                },
                "FUN_0010293a": {
                    "decode_and_display": 6,
                    "decode_and_print": 2,
                    "decode_and_print_unicode": 1,
                    "display_data": 1,
                    "display_unicode": 9,
                    "display_unicode_character": 3,
                    "display_unicode_characters": 1,
                    "display_unicode_string": 1,
                    "extract_and_display_data": 1,
                    "parse_and_display_data": 1,
                    "parse_and_display_unicode": 2,
                    "reverse_display": 1,
                    "reverse_unicode_display": 1
                },
                "_format": {
                    "output_format": 1
                },
                "_stderr": {
                    "error_output": 1,
                    "standard_error": 5,
                    "stderr_stream": 1
                },
                "_stdout": {
                    "standard_output": 6,
                    "stdout_stream": 1
                },
                "bVar1": {
                    "byte_mask": 1,
                    "byte_value": 1,
                    "first_bits": 1,
                    "first_byte": 3,
                    "first_char": 4,
                    "first_character": 1,
                    "first_four_bits": 1,
                    "first_nibble": 2,
                    "first_two_bits": 14,
                    "flag": 1,
                    "flag_value": 1,
                    "unicode_type": 1
                },
                "fwrite": {
                    "write_data": 1,
                    "write_to_file": 1
                },
                "iVar3": {
                    "console_status": 1,
                    "is_stdout_tty": 1,
                    "is_terminal": 16,
                    "is_tty": 5,
                    "is_tty_result": 1,
                    "result": 1,
                    "terminal_check": 4
                },
                "isatty": {
                    "check_terminal": 1,
                    "is_standard_output_tty": 1
                },
                "param_1": {
                    "byte_stream": 1,
                    "data": 4,
                    "input": 9,
                    "input_bytes": 2,
                    "input_data": 9,
                    "input_string": 6
                },
                "pbVar6": {
                    "data_end": 2,
                    "end_address": 1,
                    "end_byte": 1,
                    "end_of_input": 3,
                    "end_of_input_data": 3,
                    "end_of_stream": 1,
                    "end_of_string": 3,
                    "end_of_string_ptr": 1,
                    "end_pointer": 2,
                    "end_position": 3,
                    "end_ptr": 8,
                    "string_end": 2,
                    "target_position": 1
                },
                "printf": {
                    "print_formatted": 2
                },
                "putc": {
                    "put_character": 1,
                    "write_character": 1
                },
                "uVar2": {
                    "first_char": 1,
                    "high_bits": 1,
                    "second_byte": 17,
                    "second_byte_value": 1,
                    "second_char": 5,
                    "second_character": 1,
                    "second_nibble": 2,
                    "unicode_char1": 1,
                    "unicode_value_2": 1,
                    "upper_byte": 1
                },
                "uVar4": {
                    "byte_count": 1,
                    "data_length": 1,
                    "display_length": 5,
                    "display_type": 2,
                    "encoding_length": 1,
                    "num_bytes": 2,
                    "num_bytes_printed": 1,
                    "offset": 3,
                    "output_length": 7,
                    "output_size": 4,
                    "shift_amount": 1,
                    "unicode_display_length": 1,
                    "unicode_length": 1,
                    "unicode_size": 1
                },
                "uVar5": {
                    "first_byte": 16,
                    "first_byte_copy": 2,
                    "first_byte_value": 1,
                    "first_char": 2,
                    "first_char_copy": 2,
                    "first_character_temp": 1,
                    "first_six_bits": 1,
                    "lower_byte": 1,
                    "second_char": 1,
                    "third_char": 2,
                    "unicode_char2": 1,
                    "unicode_value_1": 1
                }
            },
            "called": [
                "isatty",
                "putc",
                "fwrite",
                "printf"
            ],
            "calling": [
                "FUN_00103240",
                "FUN_00102b11"
            ],
            "code": "\n\n\nuint display_unicode_character_0010293a(byte *input)\n\n{\n  byte first_two_bits;\n  uint second_byte;\n  int is_terminal;\n  uint output_length;\n  uint first_byte;\n  byte *end_ptr;\n  \n  output_length = 2;\n  first_two_bits = *input & 0x30;\n  if ((first_two_bits != 0x10) && (output_length = 3, first_two_bits != 0x20)) {\n    output_length = (-(uint)(first_two_bits == 0) & 0xfffffffe) + 4;\n  }\n  if (DAT_00108350 == 3) {\n    end_ptr = input + output_length;\n    putc(0x3c,standard_output);\n    printf(\"0x\");\n    do {\n      first_two_bits = *input;\n      input = input + 1;\n      printf(\"%02x\",(ulong)first_two_bits);\n    } while (end_ptr != input);\n    putc(0x3e,standard_output);\n    return output_length;\n  }\n  if (DAT_00108350 < 4) {\n    if (DAT_00108350 == 1) {\n      printf(\"%.1s\",input);\n      return output_length;\n    }\n    if (DAT_00108350 == 2) {\nLAB_001029cd:\n      second_byte = (uint)input[1];\n      first_byte = (uint)*input;\n      if (output_length == 3) {\n        printf(\"\\u%02x%02x\",(ulong)((first_byte & 0xf) << 4 | (int)second_byte >> 2 & 0xfU),\n               (ulong)((second_byte & 3) << 6 | input[2] & 0x3f));\n      }\n      else if (output_length == 4) {\n        printf(\"\\u%02x%02x%02x\",(ulong)((first_byte & 7) << 6 | (int)second_byte >> 2 & 0xfU),\n               (ulong)((second_byte & 3) << 6 | (int)(uint)input[2] >> 2 & 0xfU),\n               (ulong)((input[2] & 3) << 6 | input[3] & 0x3f));\n      }\n      else {\n        printf(\"\\u%02x%02x\",(ulong)((int)(uint)*input >> 2 & 7),\n               (ulong)((first_byte & 3) << 6 | input[1] & 0x3f));\n      }\n      if (DAT_00108350 != 4) {\n        return output_length;\n      }\n      is_terminal = isatty(1);\n      if (is_terminal == 0) {\n        return output_length;\n      }\n      printf(\"\\x1b[0m\");\n      return output_length;\n    }\n  }\n  else if (DAT_00108350 == 4) {\n    is_terminal = isatty(1);\n    if (is_terminal != 0) {\n      printf(\"\\x1b[31;47m\");\n    }\n    goto LAB_001029cd;\n  }\n  fwrite(\"ICE: unexpected unicode display type\\n\",1,0x25,standard_error);\n  return output_length;\n}\n\n",
            "current_name": "display_unicode_character_0010293a",
            "entrypoint": "0x0010293a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010293a": "display_unicode_character_0010293a",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "bVar1": "first_two_bits",
                "fwrite": "write_to_file",
                "iVar3": "is_terminal",
                "isatty": "is_standard_output_tty",
                "param_1": "input",
                "pbVar6": "end_ptr",
                "printf": "print_formatted",
                "putc": "write_character",
                "uVar2": "second_byte",
                "uVar4": "output_length",
                "uVar5": "first_byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102b11": {
            "additional_data": {
                "DAT_00108350": {
                    "constant3": 1,
                    "variable3": 1
                },
                "DAT_00108358": {
                    "output_text": 1,
                    "string": 1
                },
                "DAT_00108360": {
                    "constant1": 1,
                    "variable1": 1
                },
                "DAT_00108373": {
                    "constant2": 1,
                    "variable2": 1
                },
                "DAT_00108374": {
                    "limit": 1,
                    "max_count": 1
                },
                "FUN_00102b11": {
                    "decode_and_print": 4,
                    "decode_and_print_data": 1,
                    "decode_data": 2,
                    "decompress_data": 2,
                    "parse_binary": 1,
                    "parse_data": 1,
                    "parse_input": 1,
                    "process_binary": 1,
                    "process_data": 6,
                    "process_function": 1,
                    "process_input": 2,
                    "reverse_code": 1
                },
                "FUN_A": {
                    "parse_data": 1
                },
                "_sch_istable": {
                    "character_table": 1
                },
                "iVar4": {
                    "i_var4": 1,
                    "int": 1,
                    "int_var_1": 1,
                    "new_value4": 1,
                    "result": 2,
                    "result2": 1,
                    "temp3": 1,
                    "temp4": 15,
                    "temp_var": 1,
                    "temp_var4": 1,
                    "temp_variable": 1,
                    "value4": 1,
                    "var4": 2,
                    "variable_four": 1
                },
                "local_39": {
                    "byte": 1,
                    "byte4": 11,
                    "byte7": 1,
                    "byte_value_6": 1,
                    "byte_var4": 1,
                    "fourth_byte": 1,
                    "local_byte4": 1,
                    "local_byte_4": 1,
                    "local_var5": 1,
                    "local_var6": 1,
                    "local_var7": 5,
                    "local_variable6": 1,
                    "local_variable7": 2,
                    "local_variable_seven": 1,
                    "temp_var6": 1,
                    "third_byte": 1
                },
                "local_3a": {
                    "byte": 1,
                    "byte3": 11,
                    "byte6": 1,
                    "byte_value_5": 1,
                    "byte_var3": 1,
                    "local_byte3": 1,
                    "local_byte_3": 1,
                    "local_var4": 1,
                    "local_var5": 1,
                    "local_var6": 5,
                    "local_variable5": 1,
                    "local_variable6": 2,
                    "local_variable_six": 1,
                    "second_byte": 1,
                    "temp_var5": 1,
                    "third_byte": 1
                },
                "local_3b": {
                    "byte": 1,
                    "byte2": 11,
                    "byte5": 1,
                    "byte_value_4": 1,
                    "byte_var2": 1,
                    "first_byte": 1,
                    "local_byte2": 1,
                    "local_byte_2": 1,
                    "local_var3": 1,
                    "local_var4": 1,
                    "local_var5": 5,
                    "local_variable4": 1,
                    "local_variable5": 2,
                    "local_variable_five": 1,
                    "second_byte": 1,
                    "temp_var4": 1
                },
                "local_3c": {
                    "byte": 1,
                    "byte1": 11,
                    "byte4": 1,
                    "byte_value": 1,
                    "byte_value_3": 1,
                    "byte_var1": 1,
                    "first_byte": 1,
                    "local_byte1": 1,
                    "local_byte_1": 1,
                    "local_var2": 1,
                    "local_var3": 1,
                    "local_var4": 5,
                    "local_variable3": 1,
                    "local_variable4": 2,
                    "local_variable_four": 1,
                    "temp_var3": 1
                },
                "local_40": {
                    "buffer_index": 2,
                    "buffer_size": 2,
                    "bytes_read": 1,
                    "decoder_index": 1,
                    "index": 4,
                    "input_index": 1,
                    "input_size": 1,
                    "local_size": 1,
                    "local_var1": 1,
                    "local_var2": 1,
                    "local_var3": 5,
                    "local_var_2": 1,
                    "local_variable2": 2,
                    "local_variable3": 1,
                    "local_variable_three": 1,
                    "param_index": 1,
                    "pos": 1,
                    "position": 1,
                    "temp_size": 1,
                    "temp_var2": 1,
                    "uint": 1
                },
                "local_4c": {
                    "buffer": 1,
                    "data": 1,
                    "decoder_params": 1,
                    "input_buffer": 2,
                    "local_arr": 2,
                    "local_arr1": 1,
                    "local_array": 1,
                    "local_array1": 2,
                    "local_array_1": 1,
                    "local_buffer": 4,
                    "local_var2": 5,
                    "local_variable2": 1,
                    "local_variable_two": 1,
                    "parameters": 1,
                    "status": 1,
                    "stream_offset": 1,
                    "temp_arr1": 1,
                    "temp_array": 2,
                    "tmp_buffer": 1
                },
                "local_80": {
                    "count": 1,
                    "current_index": 1,
                    "decoded_data": 1,
                    "decoded_length": 1,
                    "last_index": 2,
                    "last_offset": 2,
                    "last_position": 2,
                    "line_start": 1,
                    "local_count": 1,
                    "local_var1": 6,
                    "local_var_1": 1,
                    "local_variable1": 3,
                    "local_variable_one": 1,
                    "match_offset": 1,
                    "max_index": 1,
                    "output_index": 1,
                    "output_size": 1,
                    "position": 1,
                    "start_pos": 1,
                    "temp_var1": 1,
                    "ulong": 1
                },
                "param_1": {
                    "arg1": 15,
                    "argument_1": 1,
                    "file": 1,
                    "input_param": 1,
                    "output_file": 1,
                    "output_stream": 1,
                    "param1": 6,
                    "param_1": 2,
                    "ptr1": 1,
                    "stream": 2
                },
                "param_2": {
                    "arg2": 15,
                    "argument_2": 1,
                    "data_offset": 1,
                    "file_offset": 1,
                    "input_length": 2,
                    "len1": 1,
                    "offset": 2,
                    "output_stream_offset": 1,
                    "param2": 6,
                    "start_offset": 1
                },
                "param_3": {
                    "arg3": 15,
                    "argument_3": 1,
                    "file": 1,
                    "input_array": 1,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_file": 1,
                    "input_stream": 2,
                    "param3": 6,
                    "ptr2": 1,
                    "stream": 1
                },
                "param_4": {
                    "arg4": 15,
                    "argument_4": 1,
                    "buffer": 2,
                    "input_file": 1,
                    "len2": 1,
                    "output_array": 1,
                    "output_buffer": 1,
                    "output_data": 2,
                    "param4": 6,
                    "stream_end": 1
                },
                "param_5": {
                    "arg5": 15,
                    "argument_5": 1,
                    "buffer_size": 2,
                    "input_array_length": 1,
                    "num_iterations": 1,
                    "output_length": 1,
                    "param": 1,
                    "param5": 6,
                    "size": 3
                },
                "param_6": {
                    "arg6": 15,
                    "argument_6": 1,
                    "output": 2,
                    "output_buffer": 3,
                    "output_index": 1,
                    "output_length": 1,
                    "output_offset": 1,
                    "output_stream": 1,
                    "param6": 5,
                    "result": 1
                },
                "uVar1": {
                    "byte": 1,
                    "byte1": 1,
                    "byte_value": 3,
                    "char1": 1,
                    "new_value1": 1,
                    "result1": 1,
                    "temp1": 15,
                    "temp_var1": 1,
                    "u_var1": 1,
                    "undefined_var_1": 1,
                    "value1": 1,
                    "var1": 2,
                    "variable_one": 1
                },
                "uVar10": {
                    "byte": 1,
                    "byte_value": 3,
                    "char2": 1,
                    "char_value": 1,
                    "counter2": 2,
                    "new_value10": 1,
                    "result9": 1,
                    "single_byte": 1,
                    "temp10": 11,
                    "temp9": 1,
                    "temp_var10": 1,
                    "u_var10": 1,
                    "undefined_var_10": 1,
                    "value10": 1,
                    "var10": 2,
                    "variable_ten": 1
                },
                "uVar2": {
                    "byte": 1,
                    "ch": 1,
                    "current_byte": 1,
                    "new_value2": 1,
                    "result": 2,
                    "result2": 1,
                    "temp1": 1,
                    "temp2": 15,
                    "temp_var2": 1,
                    "u_var2": 1,
                    "undefined_var_2": 1,
                    "value": 1,
                    "value2": 1,
                    "var2": 2,
                    "variable_two": 1
                },
                "uVar3": {
                    "byte": 1,
                    "ch2": 1,
                    "new_value3": 1,
                    "next_byte": 1,
                    "result3": 1,
                    "temp2": 1,
                    "temp3": 15,
                    "temp_result": 1,
                    "temp_var3": 1,
                    "u_var3": 1,
                    "undefined_var_3": 1,
                    "value2": 1,
                    "value3": 1,
                    "var3": 2,
                    "variable_three": 1
                },
                "uVar5": {
                    "byte": 1,
                    "count": 1,
                    "index": 1,
                    "new_value5": 1,
                    "result4": 1,
                    "temp5": 15,
                    "temp_position": 1,
                    "temp_var5": 1,
                    "u_var5": 4,
                    "undefined_var_5": 1,
                    "value5": 1,
                    "var5": 2,
                    "variable_five": 1
                },
                "uVar6": {
                    "buffer_offset": 1,
                    "current_position": 1,
                    "data_index": 1,
                    "index": 1,
                    "new_value6": 1,
                    "output_index": 1,
                    "result5": 1,
                    "temp6": 15,
                    "temp_var6": 1,
                    "u_var6": 2,
                    "ulong": 1,
                    "undefined_var_6": 1,
                    "value6": 1,
                    "var6": 2,
                    "variable_six": 1
                },
                "uVar7": {
                    "byte": 1,
                    "byte2": 1,
                    "byte_value_1": 1,
                    "first_byte": 1,
                    "new_value7": 1,
                    "next_byte": 1,
                    "result6": 1,
                    "temp": 1,
                    "temp7": 15,
                    "temp_var7": 1,
                    "u_var7": 1,
                    "undefined_var_7": 1,
                    "value7": 1,
                    "var7": 2,
                    "variable_seven": 1
                },
                "uVar8": {
                    "byte": 1,
                    "byte3": 1,
                    "byte_value_2": 1,
                    "new_value8": 1,
                    "next_byte2": 1,
                    "result7": 1,
                    "second_byte": 1,
                    "temp2": 1,
                    "temp8": 15,
                    "temp_var8": 1,
                    "u_var8": 1,
                    "undefined_var_8": 1,
                    "value8": 1,
                    "var8": 2,
                    "variable_eight": 1
                },
                "uVar9": {
                    "count": 3,
                    "counter": 3,
                    "counter1": 2,
                    "iteration_count": 1,
                    "loop_count": 2,
                    "loop_counter": 1,
                    "new_value9": 1,
                    "result8": 1,
                    "temp9": 9,
                    "u_var9": 2,
                    "uint": 1,
                    "undefined_var_9": 1,
                    "value9": 1,
                    "var9": 2,
                    "variable_nine": 1
                }
            },
            "called": [
                "putc",
                "FUN_00103890",
                "FUN_0010293a",
                "FUN_0010290e",
                "fputs",
                "FUN_00102b11"
            ],
            "calling": [
                "FUN_00103240",
                "FUN_00102b11"
            ],
            "code": "\n\n\nvoid decode_and_print_data_00102b11(undefined8 arg1,long arg2,undefined8 arg3,long arg4,uint arg5,\n                 long arg6)\n\n{\n  undefined temp1;\n  uint temp2;\n  uint temp3;\n  int temp4;\n  uint temp5;\n  ulong temp6;\n  undefined temp7;\n  undefined temp8;\n  uint temp9;\n  undefined temp10;\n  ulong local_var1;\n  uint local_var2 [3];\n  uint local_var3;\n  byte byte1;\n  byte byte2;\n  byte byte3;\n  byte byte4;\n  \n  temp9 = 0;\n  local_var3 = 0;\n  local_var1 = 0;\n  temp6 = 0;\n  local_var2[0] = arg5;\n  temp2 = 0;\n  while (temp5 = (uint)temp6, temp9 < DAT_00108374) {\n    temp2 = FUN_0010290e(arg3,arg4,local_var2,&local_var3);\n    if (temp2 == 0xffffffff) break;\n    if (temp2 < 0x100) {\n      temp10 = (undefined)temp2;\n      if (temp2 == 9) {\n        if (temp9 == 0) {\n          local_var1 = (ulong)(local_var3 - 1);\n        }\nLAB_00102c09:\n        temp9 = temp9 + 1;\n        *(undefined *)(arg6 + temp6) = temp10;\n        temp6 = (ulong)(temp5 + 1);\n      }\n      else {\n        if ((*(ushort *)(&character_table + (long)(int)temp2 * 2) & 0x10) == 0) {\n          if ((DAT_00108360 != 'S') || ((int)temp2 < 0x80)) {\n            if ((DAT_00108373 == '\\0') ||\n               ((*(ushort *)(&character_table + (long)(int)temp2 * 2) & 0x40) == 0)) goto LAB_00102b96;\n            goto LAB_00102bf3;\n          }\n          if (temp9 == 0) {\n            local_var1 = (ulong)(local_var3 - 1);\n          }\n        }\n        else {\nLAB_00102bf3:\n          if (temp9 == 0) {\n            local_var1 = (ulong)(local_var3 - 1);\n          }\n          if ((int)temp2 < 0x7f) goto LAB_00102c09;\n        }\n        if ((int)temp2 < 0xc0) goto LAB_00102b96;\n        temp3 = FUN_0010290e(arg3,arg4,local_var2,&local_var3);\n        if (temp3 == 0xffffffff) {\nLAB_00102dee:\n          temp2 = 0xffffffff;\n          break;\n        }\n        temp7 = (undefined)temp3;\n        if ((temp3 & 0xc0) == 0x80) {\n          if ((temp2 & 0x20) == 0) {\n            if (DAT_00108350 == 5) goto LAB_00102c67;\n            temp9 = temp9 + 1;\n            *(undefined *)(arg6 + temp6) = temp10;\n            *(undefined *)(arg6 + (ulong)(temp5 + 1)) = temp7;\n            temp6 = (ulong)(temp5 + 2);\n            temp2 = temp3;\n          }\n          else {\n            temp3 = FUN_0010290e(arg3,arg4,local_var2,&local_var3);\n            if (temp3 == 0xffffffff) goto LAB_00102dee;\n            temp8 = (undefined)temp3;\n            if ((temp3 & 0xc0) == 0x80) {\n              if ((temp2 & 0x10) == 0) {\n                if (DAT_00108350 == 5) goto LAB_00102ce5;\n                temp9 = temp9 + 1;\n                *(undefined *)(arg6 + temp6) = temp10;\n                temp6 = (ulong)(temp5 + 3);\n                *(undefined *)(arg6 + (ulong)(temp5 + 1)) = temp7;\n                *(undefined *)(arg6 + (ulong)(temp5 + 2)) = temp8;\n                temp2 = temp3;\n              }\n              else {\n                temp2 = FUN_0010290e(arg3,arg4,local_var2,&local_var3);\n                if (temp2 == 0xffffffff) goto LAB_00102dee;\n                temp1 = (undefined)temp2;\n                if ((temp2 & 0xc0) == 0x80) {\n                  if (DAT_00108350 == 5) {\n                    *(undefined *)(arg4 + (ulong)local_var2[0]) = temp1;\n                    *(undefined *)(arg4 + (ulong)(local_var2[0] + 1)) = temp7;\n                    *(undefined *)(arg4 + (ulong)(local_var2[0] + 2)) = temp8;\n                    goto LAB_00102db9;\n                  }\n                  temp9 = temp9 + 1;\n                  *(undefined *)(arg6 + temp6) = temp10;\n                  *(undefined *)(arg6 + (ulong)(temp5 + 1)) = temp7;\n                  temp6 = (ulong)(temp5 + 4);\n                  *(undefined *)(arg6 + (ulong)(temp5 + 2)) = temp8;\n                  *(undefined *)(arg6 + (ulong)(temp5 + 3)) = temp1;\n                }\n                else {\n                  *(undefined *)(arg4 + (ulong)local_var2[0]) = temp1;\n                  *(undefined *)(arg4 + (ulong)(local_var2[0] + 1)) = temp8;\n                  *(undefined *)(arg4 + (ulong)(local_var2[0] + 2)) = temp7;\nLAB_00102db9:\n                  local_var2[0] = local_var2[0] + 3;\n                  temp6 = 0;\n                  temp9 = 0;\n                }\n              }\n            }\n            else {\nLAB_00102ce5:\n              temp6 = 0;\n              temp9 = 0;\n              *(undefined *)(arg4 + (ulong)local_var2[0]) = temp8;\n              *(undefined *)(arg4 + (ulong)(local_var2[0] + 1)) = temp7;\n              local_var2[0] = local_var2[0] + 2;\n              temp2 = temp3;\n            }\n          }\n        }\n        else {\nLAB_00102c67:\n          temp9 = 0;\n          *(undefined *)(arg4 + (ulong)local_var2[0]) = temp7;\n          temp6 = 0;\n          local_var2[0] = local_var2[0] + 1;\n          temp2 = temp3;\n        }\n      }\n    }\n    else {\nLAB_00102b96:\n      temp9 = 0;\n      temp6 = 0;\n    }\n  }\n  if (temp9 < DAT_00108374) {\n    if (temp2 != 0xffffffff) {\nLAB_0010308d:\n      decode_and_print_data_00102b11(arg1,(ulong)local_var3 + arg2,arg3,arg4,local_var2[0],arg6);\n    }\n  }\n  else {\n    temp2 = 0;\n    FUN_00103890(arg1,local_var1 + arg2);\n    while (temp2 < temp5) {\n      temp6 = (ulong)temp2;\n      if (*(byte *)(temp6 + arg6) < 0x7f) {\n        temp2 = temp2 + 1;\n        putc((uint)*(byte *)(temp6 + arg6),_stdout);\n      }\n      else {\n        temp4 = FUN_0010293a();\n        temp2 = temp2 + temp4;\n      }\n    }\n    while( true ) {\n      temp2 = FUN_0010290e(arg3,arg4,local_var2,&local_var3);\n      if (temp2 == 0xffffffff) break;\n      if (0xff < temp2) {\nLAB_00103049:\n        if (DAT_00108358 == (char *)0x0) {\n          putc(10,_stdout);\n        }\n        else {\n          fputs(DAT_00108358,_stdout);\n        }\n        goto LAB_0010308d;\n      }\n      if (temp2 == 9) {\nLAB_00102ed4:\n        putc(temp2,_stdout);\n      }\n      else {\n        if ((*(ushort *)(&character_table + (long)(int)temp2 * 2) & 0x10) == 0) {\n          if ((DAT_00108360 != 'S') || ((int)temp2 < 0x80)) {\n            if ((DAT_00108373 == '\\0') ||\n               ((*(ushort *)(&character_table + (long)(int)temp2 * 2) & 0x40) == 0)) goto LAB_00103049;\n            goto LAB_00102ecf;\n          }\n        }\n        else {\nLAB_00102ecf:\n          if ((int)temp2 < 0x7f) goto LAB_00102ed4;\n        }\n        if ((int)temp2 < 0xc0) goto LAB_00103049;\n        byte1 = (byte)temp2;\n        temp4 = FUN_0010290e(arg3,arg4,local_var2,&local_var3);\n        if (temp4 == -1) break;\n        byte2 = (byte)temp4;\n        if ((byte2 & 0xc0) != 0x80) {\nLAB_00102f32:\n          temp6 = (ulong)local_var2[0];\n          local_var2[0] = local_var2[0] + 1;\n          *(byte *)(arg4 + temp6) = byte2;\njoined_r0x00102f51:\n          if (DAT_00108358 == (char *)0x0) {\n            putc(10,_stdout);\n          }\n          else {\n            fputs(DAT_00108358,_stdout);\n          }\n          goto LAB_0010308d;\n        }\n        if ((byte1 & 0x20) == 0) {\n          if (DAT_00108350 != 5) goto LAB_0010300e;\n          goto LAB_00102f32;\n        }\n        temp4 = FUN_0010290e(arg3,arg4,local_var2,&local_var3);\n        if (temp4 == -1) break;\n        byte3 = (byte)temp4;\n        if ((byte3 & 0xc0) != 0x80) {\nLAB_00102f94:\n          *(byte *)(arg4 + (ulong)local_var2[0]) = byte3;\n          temp2 = local_var2[0] + 1;\n          local_var2[0] = local_var2[0] + 2;\nLAB_00102ff2:\n          *(byte *)(arg4 + (ulong)temp2) = byte2;\n          goto joined_r0x00102f51;\n        }\n        if ((byte1 & 0x10) != 0) {\n          temp4 = FUN_0010290e(arg3,arg4,local_var2,&local_var3);\n          if (temp4 != -1) {\n            byte4 = (byte)temp4;\n            if (((byte4 & 0xc0) == 0x80) && (DAT_00108350 != 5)) goto LAB_0010300e;\n            *(byte *)(arg4 + (ulong)local_var2[0]) = byte4;\n            *(byte *)(arg4 + (ulong)(local_var2[0] + 1)) = byte3;\n            temp2 = local_var2[0] + 2;\n            local_var2[0] = local_var2[0] + 3;\n            goto LAB_00102ff2;\n          }\n          break;\n        }\n        if (DAT_00108350 == 5) goto LAB_00102f94;\nLAB_0010300e:\n        FUN_0010293a(&byte1);\n      }\n    }\n    if (DAT_00108358 == (char *)0x0) {\n      putc(10,_stdout);\n    }\n    else {\n      fputs(DAT_00108358,_stdout);\n    }\n  }\n  return;\n}\n\n",
            "current_name": "decode_and_print_data_00102b11",
            "entrypoint": "0x00102b11",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102b11": "decode_and_print_data_00102b11",
                "_sch_istable": "character_table",
                "iVar4": "temp4",
                "local_39": "byte4",
                "local_3a": "byte3",
                "local_3b": "byte2",
                "local_3c": "byte1",
                "local_40": "local_var3",
                "local_4c": "local_var2",
                "local_80": "local_var1",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "param_5": "arg5",
                "param_6": "arg6",
                "uVar1": "temp1",
                "uVar10": "temp10",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "uVar8": "temp8",
                "uVar9": "temp9"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001030c0": {
            "additional_data": {
                "FUN_001030c0": {
                    "display_strings": 1,
                    "display_usage_info": 1,
                    "print_help": 1,
                    "print_help_information": 1,
                    "print_string_info": 2,
                    "print_string_section_usage": 1,
                    "print_strings": 1,
                    "print_strings_info": 2,
                    "print_strings_usage": 5,
                    "print_usage": 12,
                    "print_usage_and_exit": 1,
                    "print_usage_info": 2,
                    "print_usage_message": 1
                },
                "__c": {
                    "ch": 1,
                    "character": 13
                },
                "__format": {
                    "format": 8,
                    "format_string": 6
                },
                "__ptr": {
                    "bfd_target_list": 1,
                    "option_file": 1,
                    "pointer": 1,
                    "target_list": 28
                },
                "__status": {
                    "exit_status": 1,
                    "status": 9,
                    "status_code": 2
                },
                "__stream": {
                    "file_stream": 1,
                    "output_stream": 7,
                    "stream": 6
                },
                "bf_target_list": {
                    "get_target_list": 1
                },
                "bfd_target_list": {
                    "get_bfd_target_list": 1,
                    "get_supported_targets": 1,
                    "get_target_list": 3
                },
                "dcgettext": {
                    "get_localized_string": 1,
                    "get_localized_text": 2,
                    "get_translated_string": 2,
                    "get_translated_text": 2,
                    "translate_text": 1
                },
                "exit": {
                    "end_program": 1,
                    "exit_program": 3,
                    "terminate_program": 3
                },
                "fprintf": {
                    "print_formatted": 1,
                    "print_formatted_string": 1,
                    "print_string": 1,
                    "print_to_file": 1,
                    "print_to_output_file": 1,
                    "print_to_stream": 1,
                    "write_formatted_text": 1,
                    "write_to_file": 1
                },
                "fputc": {
                    "put_char_to_output": 1,
                    "put_character": 1,
                    "write_character": 4,
                    "write_character_to_file": 1
                },
                "free": {
                    "free_memory": 2,
                    "release_memory": 1
                },
                "lVar1": {
                    "data_offset": 1,
                    "default_string": 1,
                    "default_target": 3,
                    "default_value": 1,
                    "language_code": 1,
                    "language_id": 2,
                    "language_var": 2,
                    "support_target": 1,
                    "supported_target": 1,
                    "supported_targets": 4,
                    "supported_targets_msg": 1,
                    "target": 5,
                    "target_name": 7,
                    "version_string": 1
                },
                "param_1": {
                    "file": 9,
                    "file_pointer": 3,
                    "file_stream": 1,
                    "output_file": 18
                },
                "param_2": {
                    "error_code": 2,
                    "error_status": 1,
                    "exit_code": 10,
                    "exit_status": 13,
                    "status": 4,
                    "status_code": 1
                },
                "pcVar2": {
                    "error_message": 1,
                    "error_msg": 1,
                    "localized_string": 6,
                    "localized_text": 1,
                    "message": 15,
                    "msg_string": 1,
                    "string": 2,
                    "text": 3,
                    "translated_string": 1
                },
                "plVar3": {
                    "curr_target": 1,
                    "current_target": 10,
                    "list_pointer": 1,
                    "ptr": 6,
                    "ptr_target": 1,
                    "ptr_to_target": 1,
                    "target": 8,
                    "target_pointer": 1,
                    "target_ptr": 1,
                    "temp_ptr": 1
                }
            },
            "called": [
                "free",
                "fprintf",
                "bfd_target_list",
                "exit",
                "fputc",
                "dcgettext"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid print_strings_usage_001030c0(FILE *output_file,int exit_status)\n\n{\n  long target_name;\n  char *message;\n  long *target_list;\n  long *current_target;\n  \n  target_name = DAT_00108378;\n  message = (char *)dcgettext(0,\"Usage: %s [option(s)] [file(s)]\\n\",5);\n  fprintf(output_file,message,target_name);\n  message = (char *)dcgettext(0,\" Display printable strings in [file(s)] (stdin by default)\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\" The options are:\\n\",5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \"  -a - --all                Scan the entire file, not just the data section [default]\\n  -d --data                 Only scan the data sections in the file\\n\"\n                             ,5);\n  fprintf(output_file,message);\n  message = (char *)dcgettext(0,\n                             \"  -f --print-file-name      Print the name of the file before each string\\n  -n <number>               Locate & print any sequence of at least <number>\\n    --bytes=<number>         displayable characters.  (The default is 4).\\n  -t --radix={o,d,x}        Print the location of the string in base 8, 10 or 16\\n  -w --include-all-whitespace Include all whitespace as valid string characters\\n  -o                        An alias for --radix=o\\n  -T --target=<BFDNAME>     Specify the binary file format\\n  -e --encoding={s,S,b,l,B,L} Select character size and endianness:\\n                            s = 7-bit, S = 8-bit, {b,l} = 16-bit, {B,L} = 32-bit\\n  --unicode={default|show|invalid|hex|escape|highlight}\\n  -U {d|s|i|x|e|h}          Specify how to treat UTF-8 encoded unicode characters\\n  -s --output-separator=<string> String used to separate strings in output.\\n  @<file>                   Read options from <file>\\n  -h --help                 Display this information\\n  -v -V --version           Print the program\\'s version number\\n\"\n                             ,5);\n  fprintf(output_file,message);\n  target_name = DAT_00108378;\n  if (DAT_00108378 == 0) {\n    message = (char *)dcgettext(0,\"Supported targets:\",5);\n    fprintf(output_file,message);\n  }\n  else {\n    message = (char *)dcgettext(0,\"%s: supported targets:\",5);\n    fprintf(output_file,message,target_name);\n  }\n  target_list = (long *)bfd_target_list();\n  current_target = target_list;\n  while( true ) {\n    target_name = *current_target;\n    current_target = current_target + 1;\n    if (target_name == 0) break;\n    fprintf(output_file,\" %s\");\n  }\n  fputc(10,output_file);\n  free_memory(target_list);\n  if (exit_status == 0) {\n    message = (char *)dcgettext(0,\"Report bugs to %s\\n\",5);\n    fprintf(output_file,message,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  exit_program(exit_status);\n}\n\n",
            "current_name": "print_strings_usage_001030c0",
            "entrypoint": "0x001030c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001030c0": "print_strings_usage_001030c0",
                "__ptr": "target_list",
                "bfd_target_list": "get_target_list",
                "dcgettext": "get_translated_text",
                "exit": "exit_program",
                "fprintf": "print_to_file",
                "fputc": "write_character",
                "free": "free_memory",
                "lVar1": "target_name",
                "param_1": "output_file",
                "param_2": "exit_status",
                "pcVar2": "message",
                "plVar3": "current_target"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103240": {
            "additional_data": {
                "DAT_0010834c": {
                    "print_unicode_stream": 1
                },
                "DAT_00108350": {
                    "allocate_memory_flag": 1
                },
                "DAT_00108358": {
                    "print_title_separator": 1
                },
                "DAT_00108360": {
                    "string_type": 1
                },
                "DAT_00108371": {
                    "print_title_flag": 1
                },
                "DAT_00108372": {
                    "print_title_separator_flag": 1
                },
                "DAT_00108373": {
                    "print_character_flag": 1
                },
                "DAT_00108374": {
                    "buffer_size_flag": 1
                },
                "FUN_0010286f": {
                    "print_title_separator": 1
                },
                "FUN_001028b2": {
                    "decode_utf8": 1,
                    "get_character_length2": 1
                },
                "FUN_0010293a": {
                    "get_character_length": 3,
                    "get_character_width": 1,
                    "get_next_codepoint": 1,
                    "get_unicode_char_length": 1
                },
                "FUN_00102b11": {
                    "convert_unicode_to_utf8": 1,
                    "print_unicode_stream": 5
                },
                "FUN_00103240": {
                    "print_decoded_string": 1,
                    "print_unicode": 4,
                    "print_unicode_buffer": 20,
                    "print_unicode_data": 1,
                    "print_unicode_function": 1,
                    "print_unicode_string": 2,
                    "print_unicode_text": 1
                },
                "FUN_001034fa": {
                    "memory_allocation_error": 1
                },
                "FUN_00103510": {
                    "memory_allocation_error2": 1
                },
                "FUN_00103520": {
                    "read_from_stream": 1
                },
                "FUN_00103890": {
                    "print_buffer": 2,
                    "print_data": 1,
                    "print_string_to_stream": 1,
                    "print_text": 1,
                    "print_unicode_buffer_helper": 1
                },
                "__ptr": {
                    "allocated_buffer": 3,
                    "allocated_memory": 3,
                    "allocated_memory_ptr": 1,
                    "buffer_ptr": 1,
                    "memory_pointer": 1,
                    "memory_ptr": 1,
                    "pointer": 5,
                    "pointer_var": 1,
                    "ptr": 6,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "temp_ptr_1": 1
                },
                "__s": {
                    "allocated_char_arr": 1,
                    "char_var_pointer": 1,
                    "format_str": 1,
                    "format_string": 1,
                    "output_string": 5,
                    "print_buffer": 1,
                    "print_string": 1,
                    "str": 1,
                    "str_buffer": 1,
                    "string": 6,
                    "string_ptr": 1,
                    "temp_ptr_2": 1,
                    "temp_string": 3,
                    "unicode_string": 1
                },
                "_sch_istable": {
                    "character_table": 1
                },
                "_stderr": {
                    "stderr": 1
                },
                "_stdout": {
                    "standard_output": 1,
                    "standard_output_stream": 1,
                    "stdout": 1
                },
                "bVar12": {
                    "bool": 1,
                    "bool_val12": 1,
                    "bool_value": 2,
                    "bool_var": 2,
                    "boolean_value": 2,
                    "boolean_var": 1,
                    "check_result": 1,
                    "data_bool": 1,
                    "flag": 1,
                    "is_buffer_available": 1,
                    "is_counting": 1,
                    "is_less": 1,
                    "is_less_than": 1,
                    "is_printable": 1,
                    "is_special_char": 1,
                    "is_true": 1,
                    "is_unicode_valid": 1,
                    "is_valid": 1,
                    "is_valid_char": 1,
                    "loop_cond": 1,
                    "loop_condition": 1,
                    "valid": 1,
                    "within_format": 1
                },
                "bVar2": {
                    "byte_val2": 1,
                    "byte_value": 5,
                    "byte_var": 2,
                    "char_value": 1,
                    "character": 1,
                    "current_byte": 3,
                    "current_char": 12,
                    "data_byte": 1
                },
                "cVar3": {
                    "char_val3": 1,
                    "char_value": 3,
                    "char_var": 2,
                    "character": 1,
                    "data_char": 1,
                    "enable_prefix": 1,
                    "flag": 3,
                    "is_printing": 2,
                    "is_unicode": 1,
                    "option": 1,
                    "print_char": 2,
                    "print_prefix": 1,
                    "print_prompt": 1,
                    "print_separator": 1,
                    "print_str": 1,
                    "should_print_prompt": 1,
                    "stdout_flag": 1,
                    "unicode_code": 1,
                    "use_escape_seq": 1
                },
                "fputs": {
                    "print_string": 1,
                    "write_string_to_stream": 3,
                    "write_to_stream": 2
                },
                "free": {
                    "": 1,
                    "free_memory": 4,
                    "release_memory": 1
                },
                "fwrite": {
                    "write_data": 1,
                    "write_to_file": 1,
                    "write_to_file2": 1,
                    "write_to_stream": 3
                },
                "iVar6": {
                    "char_type": 1,
                    "count": 1,
                    "current_int": 1,
                    "data_int": 1,
                    "encoding": 1,
                    "func_mode": 1,
                    "implementation_status": 1,
                    "index_var": 1,
                    "int_val6": 1,
                    "int_value": 1,
                    "int_var": 2,
                    "integer_value": 1,
                    "option": 1,
                    "print_format": 1,
                    "print_option": 1,
                    "print_result": 1,
                    "print_space": 1,
                    "print_type": 1,
                    "print_unicode": 1,
                    "sch_istable_value": 1,
                    "table_index": 1,
                    "temp_int_value": 1,
                    "temp_integer": 1,
                    "var6": 1
                },
                "joined_r0x001034d5": {
                    "end_of_loop2": 1
                },
                "joined_r0x001034ef": {
                    "end_of_loop": 1
                },
                "lVar4": {
                    "buffer": 1,
                    "buffer_length": 5,
                    "buffer_start": 1,
                    "current_long": 1,
                    "current_pos": 1,
                    "current_size": 1,
                    "data_long": 1,
                    "input_buffer": 1,
                    "length": 1,
                    "long_val4": 1,
                    "long_value": 1,
                    "long_var": 2,
                    "remaining_size": 1,
                    "s_len": 1,
                    "size": 2,
                    "temp": 1,
                    "temp_buffer_size": 1,
                    "temp_var": 1,
                    "var4": 2
                },
                "local_3d": {
                    "control_chars": 1,
                    "dummy_byte_array": 1,
                    "empty_buffer": 1,
                    "local_3d_arr": 1,
                    "local_arr2": 1,
                    "local_array": 1,
                    "local_array2": 1,
                    "local_data2": 2,
                    "local_var3d": 1,
                    "local_var5": 1,
                    "padding": 1,
                    "temp_array_1": 1,
                    "temp_buffer": 1,
                    "temp_chars": 1,
                    "temp_data": 1,
                    "temp_data_array": 1,
                    "temporary_buffer": 1,
                    "unknown_array": 2,
                    "unused": 1,
                    "unused_array": 2,
                    "unused_variable": 1
                },
                "local_50": {
                    "buffer_array": 1,
                    "buffer_info": 2,
                    "buffer_params": 1,
                    "buffer_ptr": 1,
                    "counter_array": 1,
                    "current_buffer": 1,
                    "initial_length": 1,
                    "input_len": 1,
                    "input_offset": 1,
                    "local_50_arr": 1,
                    "local_arr": 1,
                    "local_array": 1,
                    "local_buffer": 1,
                    "local_buffer_size": 1,
                    "local_data": 1,
                    "local_var4": 1,
                    "local_var50": 1,
                    "parameters_array": 1,
                    "remaining_buffer": 1,
                    "target_buffer": 1,
                    "temp_params": 2,
                    "unicode_buffer_ptr": 1,
                    "unicode_string_length": 1
                },
                "local_54": {
                    "buffer_index": 1,
                    "buffer_length": 1,
                    "buffer_size": 1,
                    "count_ptr": 1,
                    "current_char_offset": 1,
                    "current_length": 1,
                    "current_mode": 1,
                    "current_print_flag": 1,
                    "current_size": 1,
                    "format_option": 1,
                    "local_54": 1,
                    "local_flag": 1,
                    "local_is_stream": 1,
                    "local_print_title": 1,
                    "local_var2": 1,
                    "local_var3": 2,
                    "local_var54": 1,
                    "new_buffer_size": 1,
                    "output_buffer_size": 1,
                    "output_mode": 1,
                    "output_stream_size": 1,
                    "remaining_buffer_size": 1,
                    "status": 1,
                    "stream_length": 1,
                    "temp_param4": 1
                },
                "local_60": {
                    "buffer_ptr": 2,
                    "byte_buffer": 1,
                    "current_buffer": 4,
                    "current_byte_ptr": 1,
                    "current_output": 1,
                    "current_position": 1,
                    "current_unicode_buffer": 1,
                    "data": 1,
                    "input_buffer": 1,
                    "local_60": 1,
                    "local_buffer": 3,
                    "local_data": 1,
                    "local_var2": 2,
                    "local_var60": 1,
                    "new_buffer_ptr": 1,
                    "output_buffer": 1,
                    "output_buffer_ptr": 1,
                    "string_ptr": 1,
                    "temp_buffer": 1
                },
                "local_80": {
                    "buffer_ptr": 1,
                    "buffer_start": 1,
                    "current": 1,
                    "current_buffer": 1,
                    "current_position": 2,
                    "initial_buffer": 1,
                    "local_80": 1,
                    "local_offset": 2,
                    "local_var1": 4,
                    "local_var80": 1,
                    "new_buffer": 1,
                    "output_buffer": 1,
                    "output_offset": 2,
                    "start_address": 2,
                    "start_position": 1,
                    "temp_offset": 1,
                    "temp_param3": 1,
                    "text_start": 1,
                    "unicode_buffer_address": 1
                },
                "param_1": {
                    "arg1": 1,
                    "buffer": 1,
                    "buffer_description": 1,
                    "buffer_name": 2,
                    "caption": 1,
                    "input_string": 1,
                    "label": 3,
                    "message": 11,
                    "param_1": 2,
                    "param_1_name": 1,
                    "param_name": 1,
                    "str_to_print": 1,
                    "string": 1,
                    "text": 2,
                    "text_label": 1,
                    "title": 1
                },
                "param_2": {
                    "arg2": 1,
                    "buffer": 1,
                    "buffer_pointer": 1,
                    "buffer_size": 1,
                    "input_stream": 1,
                    "output_stream": 2,
                    "param_2": 3,
                    "param_2_name": 1,
                    "param_buffer": 1,
                    "stream": 15,
                    "stream_buffer": 1,
                    "unicode_buffer": 2,
                    "unicode_data": 1
                },
                "param_3": {
                    "arg3": 1,
                    "buffer": 4,
                    "buffer_length": 1,
                    "buffer_size": 11,
                    "count": 2,
                    "length": 1,
                    "param_3": 3,
                    "param_3_name": 1,
                    "param_size": 2,
                    "size": 1,
                    "some_value": 1,
                    "stream_buffer_size": 1,
                    "stream_size": 1,
                    "unicode_buffer": 1
                },
                "param_4": {
                    "arg4": 1,
                    "buffer_length": 1,
                    "buffer_size": 2,
                    "flag": 2,
                    "flush": 1,
                    "format": 2,
                    "is_stdout": 2,
                    "is_stream": 3,
                    "is_unicode": 2,
                    "length": 2,
                    "output_mode": 2,
                    "output_type": 1,
                    "param_4": 3,
                    "param_4_name": 1,
                    "param_flag": 1,
                    "param_num": 1,
                    "print_buffer": 1,
                    "print_title": 1,
                    "print_to_stdout": 1,
                    "size": 1
                },
                "param_5": {
                    "arg5": 1,
                    "buffer": 15,
                    "output": 1,
                    "output_buffer": 2,
                    "output_stream": 1,
                    "param_5_name": 1,
                    "param_data": 1,
                    "string": 1,
                    "unicode_buffer": 8
                },
                "pbVar1": {
                    "buffer_ptr": 1,
                    "byte_pointer": 3,
                    "byte_ptr1": 1,
                    "byte_value": 1,
                    "current_byte": 12,
                    "current_char": 3,
                    "data_ptr": 1,
                    "ptr": 3,
                    "ptr1": 1
                },
                "printf": {
                    "print_formatted_string_with_args": 1
                },
                "putc": {
                    "print_character": 2,
                    "put_char": 1,
                    "put_character": 2,
                    "write_character_to_stream": 1
                },
                "stderr": {
                    "standard_error_stream": 1
                },
                "uVar10": {
                    "buffer_start": 1,
                    "char_offset": 1,
                    "counter": 1,
                    "current_index": 1,
                    "current_position_ulong": 1,
                    "data_ulong3": 1,
                    "index": 1,
                    "iterator": 2,
                    "loop_iterator_2": 1,
                    "next_byte_offset": 1,
                    "offset": 1,
                    "start_index": 1,
                    "temp_index": 3,
                    "temp_var": 1,
                    "temp_var5": 1,
                    "ulong_val10": 1,
                    "ulong_value3": 2,
                    "ulong_var3": 2,
                    "unsigned_var10": 1,
                    "value": 1,
                    "var10": 1
                },
                "uVar11": {
                    "carry_flag": 1,
                    "char_count": 5,
                    "count": 2,
                    "count_chars": 1,
                    "counter": 1,
                    "counter2": 1,
                    "current_uint_value": 1,
                    "data_uint3": 1,
                    "flag": 1,
                    "loop_iterator_3": 1,
                    "temp_count": 1,
                    "temp_var6": 1,
                    "uint_val11": 1,
                    "uint_value2": 1,
                    "uint_value3": 1,
                    "uint_var3": 2,
                    "unicode_count": 1,
                    "unprintable_count": 1,
                    "unsigned_var11": 1,
                    "var11": 1
                },
                "uVar5": {
                    "bytes_written": 1,
                    "char_attr": 1,
                    "char_count": 1,
                    "char_type": 2,
                    "code_length": 1,
                    "current_uint": 1,
                    "data_uint": 1,
                    "index": 1,
                    "is_control_char": 1,
                    "result": 2,
                    "sch_table_value": 1,
                    "table_value": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "temp_var_1": 1,
                    "uint_val5": 1,
                    "uint_value": 1,
                    "uint_var": 2,
                    "unicode_width": 1,
                    "unsigned_var5": 1,
                    "ushort_value": 1,
                    "value": 1,
                    "write_size": 1
                },
                "uVar7": {
                    "buffer_offset": 2,
                    "byte_index": 1,
                    "current_index": 3,
                    "current_ulong": 1,
                    "data_ulong": 1,
                    "index": 4,
                    "loop_index": 2,
                    "offset": 1,
                    "position": 2,
                    "start_index": 1,
                    "temp_var2": 1,
                    "ulong_val7": 1,
                    "ulong_value": 2,
                    "ulong_var": 2,
                    "unsigned_var7": 1,
                    "var7": 1
                },
                "uVar8": {
                    "buffer_end": 1,
                    "buffer_len": 1,
                    "buffer_length": 3,
                    "buffer_size": 3,
                    "current_byte_index": 1,
                    "data_ulong2": 1,
                    "end_index": 1,
                    "length": 3,
                    "loop_index_max": 1,
                    "max_ulong": 1,
                    "remaining_length": 1,
                    "remaining_size": 1,
                    "temp_var3": 1,
                    "ulong_val8": 1,
                    "ulong_value2": 2,
                    "ulong_var2": 2,
                    "unsigned_var8": 1,
                    "var8": 1
                },
                "uVar9": {
                    "available": 1,
                    "buffer_length": 2,
                    "char_code": 1,
                    "count": 1,
                    "current_char_len": 1,
                    "data_uint2": 1,
                    "element_size": 1,
                    "format_length": 1,
                    "loop_iterator": 1,
                    "max_uint": 1,
                    "prefix_length": 1,
                    "print_length": 1,
                    "string_length": 1,
                    "string_size": 1,
                    "temp_length": 3,
                    "temp_var4": 1,
                    "uint_val9": 1,
                    "uint_value": 1,
                    "uint_value2": 1,
                    "uint_var2": 2,
                    "unsigned_var9": 1,
                    "var9": 1
                },
                "xmalloc": {
                    "allocate_memory": 6
                }
            },
            "called": [
                "putc",
                "FUN_00103890",
                "free",
                "FUN_0010293a",
                "fwrite",
                "FUN_001028b2",
                "fputs",
                "xmalloc",
                "FUN_00102b11"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nvoid print_unicode_buffer_00103240(long message,long stream,long buffer_size,int is_stream,byte *buffer)\n\n{\n  byte *current_byte;\n  byte current_char;\n  char flag;\n  long buffer_length;\n  uint result;\n  int int_var;\n  void *ptr;\n  char *string;\n  ulong index;\n  ulong buffer_size;\n  uint temp_length;\n  ulong temp_index;\n  uint char_count;\n  bool bool_value;\n  long local_var1;\n  byte *current_buffer;\n  int local_var3;\n  long buffer_info [2];\n  undefined unknown_array [13];\n  \n  current_buffer = buffer;\n  local_var3 = is_stream;\n  buffer_info[0] = buffer_size;\n  if (DAT_00108350 == 0) {\n    string = (char *)xmalloc(DAT_00108374 + 1);\n    do {\n      while (buffer_length = buffer_info[0], buffer_size = (ulong)DAT_00108374, DAT_00108374 == 0) {\nend_of_loop:\n        if (DAT_00108371 != '\\0') {\n          printf(\"%s: \",message);\n        }\n        if (DAT_00108372 == '\\0') {\n          string[buffer_size] = '\\0';\n          fputs(string,stdout);\n        }\n        else {\n          FUN_0010286f(buffer_length);\n          string[buffer_size] = '\\0';\n          fputs(string,stdout);\n        }\n        while (buffer_size = FUN_00103520(stream,buffer_info,&local_var3,&current_buffer),\n              buffer_size != 0xffffffffffffffff) {\n          if (0xff < buffer_size) {\nLAB_0010348e:\n            FUN_00103810(buffer_size,buffer_info,&local_var3,&current_buffer);\n            break;\n          }\n          if (buffer_size == 9) {\nLAB_00102438:\n            putc((int)buffer_size,stdout);\n          }\n          else {\n            if ((*(ushort *)(&character_table + buffer_size * 2) & 0x10) == 0) {\n              if (((DAT_00108360 != 'S') || ((long)buffer_size < 0x80)) &&\n                 ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + buffer_size * 2) & 0x40) == 0))))\n              goto LAB_0010348e;\n              goto LAB_00102438;\n            }\n            putc((int)buffer_size,stdout);\n          }\n        }\n        if (DAT_00108358 == (char *)0x0) {\n          putc(10,stdout);\n        }\n        else {\n          fputs(DAT_00108358,stdout);\n        }\n      }\n      index = FUN_00103520(stream,buffer_info,&local_var3,&current_buffer);\n      temp_length = DAT_00108374;\n      if (index == 0xffffffffffffffff) goto LAB_001034be;\n      if (index < 0x100) {\n        if (index == 9) {\nLAB_001023f5:\n          *string = (char)index;\n          if (temp_length < 2) {\n            FUN_001034fa();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&character_table + index * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)index < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + index * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto LAB_001023f5;\n          }\n          *string = (char)index;\n          if (temp_length < 2) {\n            buffer_size = 1;\n            goto end_of_loop;\n          }\n        }\n        index = FUN_00103520(stream,buffer_info,&local_var3,&current_buffer);\n        temp_length = DAT_00108374;\n        if (index == 0xffffffffffffffff) goto LAB_001034be;\n        if (index < 0x100) {\n          if (index == 9) {\nLAB_001023bb:\n            string[1] = (char)index;\n            if (temp_length < 3) {\n              FUN_00103510();\n              return;\n            }\n          }\n          else {\n            if ((*(ushort *)(&character_table + index * 2) & 0x10) == 0) {\n              if (((DAT_00108360 != 'S') || ((long)index < 0x80)) &&\n                 ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + index * 2) & 0x40) == 0))))\n              goto code_r0x001034d5;\n              goto LAB_001023bb;\n            }\n            string[1] = (char)index;\n            if (temp_length < 3) {\n              buffer_size = 2;\n              goto end_of_loop;\n            }\n          }\n          index = FUN_00103520(stream,buffer_info,&local_var3,&current_buffer);\n          temp_length = DAT_00108374;\n          if (index == 0xffffffffffffffff) {\nLAB_001034be:\n            free_memory(string);\n            return;\n          }\n          if (index < 0x100) {\n            if (index == 9) {\nLAB_00102381:\n              string[2] = (char)index;\n            }\n            else {\n              if ((*(ushort *)(&character_table + index * 2) & 0x10) == 0) {\n                if (((DAT_00108360 != 'S') || ((long)index < 0x80)) &&\n                   ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + index * 2) & 0x40) == 0))\n                   )) goto code_r0x001034d5;\n                goto LAB_00102381;\n              }\n              string[2] = (char)index;\n            }\n            if (temp_length < 4) {\n              buffer_size = 3;\n            }\n            else {\n              temp_index = 3;\n              do {\n                index = FUN_00103520(stream,buffer_info,&local_var3,&current_buffer);\n                if (index == 0xffffffffffffffff) goto LAB_001034be;\n                if (0xff < index) goto code_r0x001034d5;\n                if (((index != 9) && ((*(ushort *)(&character_table + index * 2) & 0x10) == 0)) &&\n                   ((DAT_00108360 != 'S' || ((long)index < 0x80)))) {\n                  if (DAT_00108373 == '\\0') goto code_r0x001034d5;\n                  if ((*(ushort *)(&character_table + index * 2) & 0x40) == 0) {\n                    FUN_001034d5();\n                    return;\n                  }\n                }\n                temp_length = (int)temp_index + 1;\n                buffer_size = (ulong)temp_length;\n                bool_value = temp_length < DAT_00108374;\n                string[temp_index] = (char)index;\n                temp_index = buffer_size;\n              } while (bool_value);\n            }\n            goto end_of_loop;\n          }\n        }\n      }\ncode_r0x001034d5:\n      FUN_00103810(index,buffer_info,&local_var3,&current_buffer);\n    } while( true );\n  }\n  if (buffer != (byte *)0x0) {\n    buffer_size = (ulong)is_stream;\n    local_var1 = buffer_size;\n    if (message != 0) {\nLAB_0010249c:\n      temp_length = DAT_00108374;\n      flag = DAT_00108373;\n      int_var = DAT_00108350;\n      if (((DAT_00108350 != 0) && (DAT_00108360 == 'S')) && (DAT_0010834c == 1)) {\n        if (buffer_size != 0) {\n          index = 0;\n          char_count = 0;\n          temp_index = 0;\n          do {\n            while( true ) {\n              current_char = buffer[temp_index];\n              if (current_char != 9) break;\nLAB_0010252e:\n              result = 1;\nLAB_00102533:\n              if (char_count == 0) {\n                index = temp_index;\n              }\n              char_count = char_count + 1;\n              if (temp_length <= char_count) goto LAB_001026a9;\n              temp_index = temp_index + result;\n              if (buffer_size <= temp_index) goto LAB_00102551;\n            }\n            if ((*(ushort *)(&character_table + (long)(int)(uint)current_char * 2) & 0x10) != 0) {\n              if (0x7e < current_char) goto LAB_0010264e;\n              goto LAB_0010252e;\n            }\n            if (0x7f < current_char) {\nLAB_0010264e:\n              if ((current_char < 0xc0) ||\n                 (result = FUN_001028b2(buffer + temp_index,buffer_size - temp_index), result == 0))\n              goto LAB_0010269a;\n              if (int_var == 5) goto LAB_00102688;\n              goto LAB_00102533;\n            }\n            if (((flag != '\\0') &&\n                ((*(ushort *)(&character_table + (long)(int)(uint)current_char * 2) & 0x40) != 0)) &&\n               (current_char != 0x7f)) goto LAB_0010252e;\nLAB_0010269a:\n            result = 1;\nLAB_00102688:\n            temp_index = temp_index + result;\n            if (buffer_size <= temp_index) goto LAB_001026a1;\n            char_count = 0;\n          } while( true );\n        }\n        goto LAB_00102551;\n      }\n    }\n    fwrite(\"ICE: bad arguments to print_unicode_buffer_00103240\\n\",1,0x2b,stderr);\n  }\n  if (stream != 0) {\n    if (message != 0) {\nLAB_0010255f:\n      buffer_length = buffer_info[0];\n      if (((DAT_00108350 != 0) && (DAT_00108360 == 'S')) && (DAT_0010834c == 1)) {\n        ptr = (void *)xmalloc(DAT_00108374 * 4 + 1);\n        FUN_00102b11(message,buffer_length,stream,unknown_array,0,ptr);\n        free_memory(ptr);\n        return;\n      }\n    }\n    fwrite(\"ICE: bad arguments to print_unicode_stream\\n\",1,0x2b,stderr);\n  }\n  return;\nLAB_001026a1:\n  if (temp_length != 0) {\nLAB_00102551:\n    if (stream == 0) {\n      return;\n    }\n    goto LAB_0010255f;\n  }\nLAB_001026a9:\n  FUN_00103890(message,local_var1 + index);\n  for (; current_byte = buffer + index, index < buffer_size; index = index + temp_length) {\n    current_char = *current_byte;\n    if (current_char == 9) {\nLAB_00102708:\n      putc((uint)current_char,stdout);\n      temp_length = 1;\n    }\n    else {\n      if ((*(ushort *)(&character_table + (long)(int)(uint)current_char * 2) & 0x10) == 0) {\n        if ((DAT_00108360 != 'S') || (current_char < 0x80)) {\n          if ((DAT_00108373 != '\\0') &&\n             ((*(ushort *)(&character_table + (long)(int)(uint)current_char * 2) & 0x40) != 0))\n          goto LAB_00102703;\n          break;\n        }\n      }\n      else {\nLAB_00102703:\n        if (current_char < 0x7f) goto LAB_00102708;\n      }\n      int_var = FUN_001028b2(current_byte,buffer_size - index);\n      if ((int_var == 0) || (DAT_00108350 == 5)) break;\n      temp_length = FUN_0010293a(current_byte);\n    }\n  }\n  if (DAT_00108358 == (char *)0x0) {\n    putc(10,stdout);\n  }\n  else {\n    fputs(DAT_00108358,stdout);\n  }\n  local_var1 = local_var1 + index;\n  buffer_size = buffer_size - index;\n  buffer = current_byte;\n  goto LAB_0010249c;\n}\n\n",
            "current_name": "print_unicode_buffer_00103240",
            "entrypoint": "0x00103240",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103240": "print_unicode_buffer_00103240",
                "__ptr": "ptr",
                "__s": "string",
                "_sch_istable": "character_table",
                "_stderr": "stderr",
                "_stdout": "stdout",
                "bVar12": "bool_value",
                "bVar2": "current_char",
                "cVar3": "flag",
                "fputs": "write_string_to_stream",
                "free": "free_memory",
                "fwrite": "write_to_stream",
                "iVar6": "int_var",
                "joined_r0x001034ef": "end_of_loop",
                "lVar4": "buffer_length",
                "local_3d": "unknown_array",
                "local_50": "buffer_info",
                "local_54": "local_var3",
                "local_60": "current_buffer",
                "local_80": "local_var1",
                "param_1": "message",
                "param_2": "stream",
                "param_3": "buffer_size",
                "param_4": "is_stream",
                "param_5": "buffer",
                "pbVar1": "current_byte",
                "printf": "print_formatted_string_with_args",
                "putc": "print_character",
                "stderr": "standard_error_stream",
                "uVar10": "temp_index",
                "uVar11": "char_count",
                "uVar5": "result",
                "uVar7": "index",
                "uVar8": "buffer_size",
                "uVar9": "temp_length",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001034d5": {
            "additional_data": {
                "DAT_00108358": {
                    "end_message": 2,
                    "end_string": 1,
                    "extra_text": 1,
                    "newline": 1,
                    "output_string2": 2
                },
                "DAT_00108360": {
                    "character": 1,
                    "data_type": 1,
                    "flag": 3,
                    "some_condition1": 1,
                    "string_type": 1
                },
                "DAT_00108371": {
                    "flag3": 1,
                    "flag_print_filename": 1,
                    "is_print_file_name": 1,
                    "print_filename": 1,
                    "print_function_name": 1,
                    "print_message": 2
                },
                "DAT_00108372": {
                    "flag4": 1,
                    "flag_print_prompt": 1,
                    "handle_format": 1,
                    "is_call_function": 1,
                    "use_argument": 1,
                    "use_format": 1,
                    "use_message": 1
                },
                "DAT_00108373": {
                    "allow_special_chars": 1,
                    "flag": 1,
                    "flag2": 3,
                    "has_control_characters": 1,
                    "some_condition2": 1
                },
                "DAT_00108374": {
                    "max_char_count": 1,
                    "max_count": 2,
                    "max_input_count": 1,
                    "max_length": 2,
                    "string_buffer_length": 1
                },
                "FUN_0010286f": {
                    "print_output": 1,
                    "print_prompt": 1,
                    "print_something": 1,
                    "print_string": 1,
                    "process_argument": 1
                },
                "FUN_001034d5": {
                    "analyze_input": 1,
                    "decode_input": 1,
                    "extract_and_print_strings": 1,
                    "parse_and_print_input": 2,
                    "parse_input": 7,
                    "process_data": 2,
                    "process_input": 14,
                    "reverse_and_print_string": 1
                },
                "FUN_001034fa": {
                    "cleanup_and_return": 1,
                    "parse_complete": 1,
                    "perform_action2": 1,
                    "perform_string_buffer_action1": 1,
                    "process_input_length_1": 1,
                    "process_output": 1,
                    "process_output1": 1
                },
                "FUN_00103510": {
                    "perform_action1": 1,
                    "perform_string_buffer_action2": 1,
                    "process_input_length_2": 1,
                    "process_output": 1,
                    "process_output2": 2
                },
                "FUN_00103520": {
                    "get_input_char": 1,
                    "get_input_value": 1,
                    "get_next_byte": 1,
                    "get_next_char_code": 1,
                    "get_next_character": 2,
                    "get_next_input_char": 1,
                    "read_data": 1,
                    "read_value": 1
                },
                "FUN_00103810": {
                    "display_output": 1,
                    "initialize": 2,
                    "initialize_io": 3,
                    "initialize_io_streams": 1,
                    "print_line": 1,
                    "print_output": 1,
                    "print_values": 1
                },
                "F_U_N_00103520": {
                    "get_next_input_char": 1
                },
                "Funny": {
                    "is_reversed": 1
                },
                "Funny1": {
                    "write_character1": 1
                },
                "Funny2": {
                    "is_reversed2": 1
                },
                "LAB_00102381": {
                    "is_special_char3": 1
                },
                "LAB_001023bb": {
                    "is_special_char2": 1
                },
                "LAB_001023f5": {
                    "handle_char_code9": 1,
                    "is_special_char": 1
                },
                "LAB_0010348e": {
                    "is_special_char4": 1
                },
                "LAB_001034be": {
                    "cleanup": 1,
                    "end_parsing": 1
                },
                "_sch_istable": {
                    "char_table": 4,
                    "character_table": 3,
                    "table": 1
                },
                "_stdout": {
                    "output_file": 1,
                    "output_stream": 2,
                    "standard_output": 3,
                    "stdout": 3
                },
                "bVar5": {
                    "check": 1,
                    "check_result": 1,
                    "condition": 1,
                    "continue_loop": 1,
                    "flag": 1,
                    "is_counter_valid": 1,
                    "is_in_range": 1,
                    "is_length_less_than_remaining": 1,
                    "is_less": 7,
                    "is_less_than_input_length": 1,
                    "is_less_than_string_buffer_length": 1,
                    "is_looping": 1,
                    "is_more_input": 1,
                    "is_valid": 3,
                    "is_valid_index": 1,
                    "is_within_bounds": 1,
                    "should_continue": 1
                },
                "code_r0x001034d5": {
                    "process_input_loop": 1,
                    "start_parsing": 2
                },
                "fputs": {
                    "store_string": 1,
                    "write_string": 2,
                    "write_to_string": 1
                },
                "free": {
                    "deallocate_memory": 1,
                    "release_memory": 2
                },
                "funny_2": {
                    "write_character2": 1
                },
                "in_stack_00000010": {
                    "file_name": 2,
                    "filename": 2,
                    "function_name": 3,
                    "input_file_name": 1,
                    "input_string": 6,
                    "message": 6,
                    "prompt": 2,
                    "prompt_string": 3,
                    "prompt_text": 1,
                    "source": 1,
                    "string1": 1
                },
                "in_stack_00000038": {
                    "additional_info": 1,
                    "additional_message": 1,
                    "another_input_string": 1,
                    "argument": 1,
                    "extra_info": 1,
                    "file_name": 3,
                    "file_path": 2,
                    "filename": 2,
                    "format": 2,
                    "format_string": 2,
                    "message": 2,
                    "option": 1,
                    "output_file": 1,
                    "output_string": 2,
                    "param": 1,
                    "param2": 1,
                    "param_string": 1,
                    "prompt": 1,
                    "string2": 1,
                    "string_to_print": 1
                },
                "joined_r0x001034ef": {
                    "skip_prompt_print": 1,
                    "special_char_index": 1
                },
                "printf": {
                    "print": 2,
                    "print_message": 1,
                    "print_string": 1
                },
                "putc": {
                    "store_character": 1,
                    "write_char": 1,
                    "write_to_stdout": 1
                },
                "putchar": {
                    "put_char": 1,
                    "write_character": 1
                },
                "puts": {
                    "write_string": 1
                },
                "strings": {
                    "library": 1
                },
                "uVar1": {
                    "char_code": 2,
                    "character": 4,
                    "count": 1,
                    "current_char": 1,
                    "data": 1,
                    "index": 3,
                    "input_char": 2,
                    "input_value1": 1,
                    "value": 12,
                    "value1": 3
                },
                "uVar2": {
                    "char_code2": 2,
                    "char_index": 2,
                    "character2": 2,
                    "input": 1,
                    "input_value": 1,
                    "input_value2": 1,
                    "new_value": 1,
                    "next_character": 1,
                    "next_value": 3,
                    "result": 1,
                    "second_character": 1,
                    "temp": 3,
                    "temp_char": 1,
                    "temp_index": 1,
                    "temp_input_char": 1,
                    "temp_value": 4,
                    "temp_var": 1,
                    "value2": 3
                },
                "uVar3": {
                    "buffer_length": 1,
                    "count": 7,
                    "counter": 4,
                    "index": 3,
                    "input_count": 2,
                    "input_index": 1,
                    "input_length": 2,
                    "input_size": 1,
                    "length": 5,
                    "num_inputs": 1,
                    "output_index": 1,
                    "remaining_length": 1,
                    "string_length": 1
                },
                "uVar4": {
                    "char_index2": 1,
                    "counter": 8,
                    "counter2": 1,
                    "current_index": 1,
                    "index": 14,
                    "input_index": 1,
                    "loop_index": 3,
                    "output_index": 1
                },
                "unaff_R14": {
                    "buffer": 3,
                    "input_buffer": 2,
                    "output": 4,
                    "output_string": 14,
                    "parsed_input": 3,
                    "result": 3,
                    "string_buffer": 1
                }
            },
            "called": [
                "FUN_00103810"
            ],
            "calling": [
                "FUN_0010259a",
                "FUN_00102330"
            ],
            "code": "\n\n\nvoid process_input_001034d5(void)\n\n{\n  ulong value;\n  ulong temp_value;\n  uint count;\n  ulong index;\n  char *output_string;\n  bool is_less;\n  undefined8 input_string;\n  undefined8 file_name;\n  \nstart_parsing:\n  FUN_00103810();\n  do {\n    value = (ulong)DAT_00108374;\n    if (DAT_00108374 != 0) {\n      value = FUN_00103520();\n      count = DAT_00108374;\n      if (value == 0xffffffffffffffff) goto end_parsing;\n      if (0xff < value) goto start_parsing;\n      if (value == 9) {\nis_special_char:\n        *output_string = (char)value;\n        if (count < 2) {\n          FUN_001034fa();\n          return;\n        }\n      }\n      else {\n        if ((*(ushort *)(&char_table + value * 2) & 0x10) == 0) {\n          if (((DAT_00108360 == 'S') && (0x7f < (long)value)) ||\n             ((DAT_00108373 != '\\0' && ((*(ushort *)(&char_table + value * 2) & 0x40) != 0))))\n          goto is_special_char;\n          goto start_parsing;\n        }\n        *output_string = (char)value;\n        if (count < 2) {\n          value = 1;\n          goto skip_prompt_printf;\n        }\n      }\n      value = FUN_00103520();\n      count = DAT_00108374;\n      if (value == 0xffffffffffffffff) goto end_parsing;\n      if (0xff < value) goto start_parsing;\n      if (value == 9) {\nis_special_char2:\n        output_string[1] = (char)value;\n        if (count < 3) {\n          FUN_00103510();\n          return;\n        }\n      }\n      else {\n        if ((*(ushort *)(&char_table + value * 2) & 0x10) == 0) {\n          if (((DAT_00108360 == 'S') && (0x7f < (long)value)) ||\n             ((DAT_00108373 != '\\0' && ((*(ushort *)(&char_table + value * 2) & 0x40) != 0))))\n          goto is_special_char2;\n          goto start_parsing;\n        }\n        output_string[1] = (char)value;\n        if (count < 3) {\n          value = 2;\n          goto skip_prompt_printf;\n        }\n      }\n      value = FUN_00103520();\n      count = DAT_00108374;\n      if (value == 0xffffffffffffffff) {\nend_parsing:\n        free(output_string);\n        return;\n      }\n      if (0xff < value) goto start_parsing;\n      if (value == 9) {\nis_special_char3:\n        output_string[2] = (char)value;\n      }\n      else {\n        if ((*(ushort *)(&char_table + value * 2) & 0x10) == 0) {\n          if (((DAT_00108360 == 'S') && (0x7f < (long)value)) ||\n             ((DAT_00108373 != '\\0' && ((*(ushort *)(&char_table + value * 2) & 0x40) != 0))))\n          goto is_special_char3;\n          goto start_parsing;\n        }\n        output_string[2] = (char)value;\n      }\n      if (count < 4) {\n        value = 3;\n      }\n      else {\n        index = 3;\n        do {\n          temp_value = FUN_00103520();\n          if (temp_value == 0xffffffffffffffff) goto end_parsing;\n          if (0xff < temp_value) goto start_parsing;\n          if (((temp_value != 9) && ((*(ushort *)(&char_table + temp_value * 2) & 0x10) == 0)) &&\n             ((DAT_00108360 != 'S' || ((long)temp_value < 0x80)))) {\n            if (DAT_00108373 == '\\0') goto start_parsing;\n            if ((*(ushort *)(&char_table + temp_value * 2) & 0x40) == 0) {\n              process_input_001034d5();\n              return;\n            }\n          }\n          count = (int)index + 1;\n          value = (ulong)count;\n          is_less = count < DAT_00108374;\n          output_string[index] = (char)temp_value;\n          index = value;\n        } while (is_less);\n      }\n    }\nskip_prompt_printf:\n    if (DAT_00108371 != '\\0') {\n      printf(\"%s: \",input_string);\n    }\n    if (DAT_00108372 == '\\0') {\n      output_string[value] = '\\0';\n      fputs(output_string,stdout);\n    }\n    else {\n      FUN_0010286f(file_name);\n      output_string[value] = '\\0';\n      write_string(output_string,stdout);\n    }\n    while (value = FUN_00103520(), value != 0xffffffffffffffff) {\n      if (0xff < value) {\nis_special_char4:\n        FUN_00103810();\n        break;\n      }\n      if (value == 9) {\nLAB_00102438:\n        putc((int)value,stdout);\n      }\n      else {\n        if ((*(ushort *)(&char_table + value * 2) & 0x10) == 0) {\n          if (((DAT_00108360 != 'S') || ((long)value < 0x80)) &&\n             ((DAT_00108373 == '\\0' || ((*(ushort *)(&char_table + value * 2) & 0x40) == 0))))\n          goto is_special_char4;\n          goto LAB_00102438;\n        }\n        putc((int)value,stdout);\n      }\n    }\n    if (DAT_00108358 == (char *)0x0) {\n      putc(10,stdout);\n    }\n    else {\n      write_string(DAT_00108358,stdout);\n    }\n  } while( true );\n}\n\n",
            "current_name": "process_input_001034d5",
            "entrypoint": "0x001034d5",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001034d5": "process_input_001034d5",
                "LAB_00102381": "is_special_char3",
                "LAB_001023bb": "is_special_char2",
                "LAB_001023f5": "is_special_char",
                "LAB_0010348e": "is_special_char4",
                "LAB_001034be": "end_parsing",
                "_sch_istable": "char_table",
                "_stdout": "stdout",
                "bVar5": "is_less",
                "code_r0x001034d5": "start_parsing",
                "fputs": "write_string",
                "free": "release_memory",
                "in_stack_00000010": "input_string",
                "in_stack_00000038": "file_name",
                "joined_r0x001034ef": "skip_prompt_print",
                "printf": "print",
                "putc": "write_char",
                "puts": "write_string",
                "uVar1": "value",
                "uVar2": "temp_value",
                "uVar3": "count",
                "uVar4": "index",
                "unaff_R14": "output_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001034fa": {
            "additional_data": {
                "DAT_00108358": {
                    "end_of_line_string": 1,
                    "footer_string": 1,
                    "output_string": 1
                },
                "DAT_00108360": {
                    "language": 1,
                    "should_print_as_ascii": 1
                },
                "DAT_00108371": {
                    "flag1": 1,
                    "print_header": 1,
                    "should_print_message": 1
                },
                "DAT_00108372": {
                    "flag2": 1,
                    "should_print_string": 1,
                    "use_color": 1
                },
                "DAT_00108373": {
                    "flag3": 1,
                    "is_upper": 1,
                    "should_print_non_ascii_characters": 1
                },
                "DAT_00108374": {
                    "input_string_length": 1,
                    "length": 1
                },
                "FUN_0010286f": {
                    "print_message": 1,
                    "reverse_string": 2
                },
                "FUN_001034fa": {
                    "print_data": 1,
                    "print_formatted_input": 1,
                    "print_formatted_output": 9,
                    "print_formatted_string": 10,
                    "print_formatted_text": 3,
                    "print_output": 1,
                    "print_reverse_string": 2,
                    "print_string": 1,
                    "print_string_with_control": 1
                },
                "FUN_00103510": {
                    "handle_tab_completion": 1,
                    "perform_action1": 1,
                    "process_output": 1
                },
                "FUN_00103520": {
                    "get_next_char": 1,
                    "get_next_value": 1,
                    "read_character": 1,
                    "read_next_character": 1
                },
                "FUN_00103810": {
                    "cleanup_and_exit": 1,
                    "free_output_string": 1,
                    "perform_action2": 1,
                    "print_error": 1
                },
                "LAB_00102381": {
                    "handle_output_char": 1,
                    "handle_value": 1,
                    "tab_char_num_check": 1
                },
                "LAB_001023bb": {
                    "handle_input_tab_char": 1,
                    "handle_value_and_exit": 1,
                    "tab_char_num_condition": 1
                },
                "LAB_001023f5": {
                    "handle_output_tab_char": 1,
                    "handle_tab_and_exit": 1,
                    "tab_char_condition": 1
                },
                "LAB_00102438": {
                    "handle_tab": 1,
                    "handle_tab_char": 1,
                    "label2": 1,
                    "tab_char_loop": 1
                },
                "LAB_0010348e": {
                    "exit_loop": 1,
                    "handle_invalid_char": 1,
                    "handle_unsupported_value": 1,
                    "label1": 1
                },
                "LAB_001034be": {
                    "cleanup": 1,
                    "end_execution": 1,
                    "exit_print_formatted_output": 1
                },
                "LAB_001034d5": {
                    "end_loop": 1
                },
                "PUTS": {
                    "puts": 1
                },
                "_sch_istable": {
                    "char_table": 2,
                    "character_table": 7,
                    "is_table": 1,
                    "sch_istable": 1
                },
                "_stdout": {
                    "output_stream": 3,
                    "standard_output": 8,
                    "stdout": 3
                },
                "bVar5": {
                    "bool_var": 1,
                    "check": 1,
                    "condition": 2,
                    "continue_loop": 1,
                    "flag": 3,
                    "is_delimiter": 1,
                    "is_end": 2,
                    "is_end_of_input": 1,
                    "is_end_of_loop": 1,
                    "is_end_of_string": 3,
                    "is_end_reached": 1,
                    "is_invalid": 1,
                    "is_invalid_char": 1,
                    "is_less_than": 1,
                    "is_limit_reached": 1,
                    "is_loop_end": 1,
                    "is_overflow": 1,
                    "is_printable": 1,
                    "is_special_char": 1,
                    "overflow_flag": 1,
                    "should_continue_loop": 1,
                    "valid": 1
                },
                "character": {
                    "char": 1
                },
                "code_r0x001034d5": {
                    "fallback_cleanup": 1
                },
                "code_r0x001034fa": {
                    "print_formatted_output_label": 1,
                    "print_output": 1,
                    "start_loop": 1,
                    "start_printing": 1
                },
                "counter": {
                    "num_values": 1
                },
                "formattedString": {
                    "output_string": 1
                },
                "fputs": {
                    "print_string": 1,
                    "put_string": 1,
                    "write_output": 1
                },
                "free": {
                    "release_memory": 2
                },
                "in_stack_00000010": {
                    "context": 1,
                    "format_message": 1,
                    "format_name": 1,
                    "format_string": 2,
                    "input_string": 1,
                    "label": 1,
                    "label_text": 1,
                    "message": 5,
                    "pre_text": 1,
                    "prefix": 2,
                    "print_label": 1,
                    "prompt": 5,
                    "prompt_message": 2,
                    "prompt_string": 3,
                    "string_arg": 1,
                    "string_prompt": 1,
                    "title": 1
                },
                "in_stack_00000038": {
                    "data": 2,
                    "delimiter": 1,
                    "extra_argument": 1,
                    "footer_message": 1,
                    "format_arg": 1,
                    "format_args": 1,
                    "format_specifier2": 1,
                    "format_specifier_copy": 1,
                    "format_string": 1,
                    "input_buffer": 1,
                    "input_string": 1,
                    "input_string_pointer": 1,
                    "limit_value": 1,
                    "line": 1,
                    "post_text": 1,
                    "print_char": 1,
                    "print_mode": 1,
                    "read_option": 1,
                    "secondary_format_string": 2,
                    "separator": 3,
                    "separator_string": 1,
                    "string_argument": 1,
                    "suffix": 2,
                    "unaff_r15": 2
                },
                "index": {
                    "buffer_index": 1
                },
                "isEnd": {
                    "is_end_of_output": 1
                },
                "join": {
                    "append_to_string": 1
                },
                "joined_r0x0010341b": {
                    "continue_loop": 1,
                    "print_next_value": 1,
                    "print_output_loop": 1,
                    "start_printing_formatted_output": 1
                },
                "length": {
                    "string_length": 1
                },
                "position": {
                    "output_position": 1
                },
                "printf": {
                    "print_formatted_output": 1,
                    "print_formatted_string": 1,
                    "print_string_with_format": 1
                },
                "putc": {
                    "write_char": 1,
                    "write_character": 1
                },
                "putchar": {
                    "print_char": 1,
                    "print_character": 1,
                    "put_char": 1
                },
                "puts": {
                    "print_new_line": 1
                },
                "uVar1": {
                    "char_code": 8,
                    "char_index": 1,
                    "char_value": 2,
                    "character": 8,
                    "current_char": 3,
                    "next_char": 1,
                    "result": 1,
                    "return_value": 1,
                    "symbol": 1,
                    "temp_var1": 1,
                    "value": 1
                },
                "uVar2": {
                    "buffer_index": 1,
                    "buffer_size": 1,
                    "char_count": 1,
                    "char_index": 1,
                    "count": 3,
                    "counter": 2,
                    "data_length": 2,
                    "flags": 1,
                    "format_index": 1,
                    "format_length": 2,
                    "format_option": 1,
                    "i": 1,
                    "input_size": 1,
                    "length": 2,
                    "limit_counter": 1,
                    "loop_count": 1,
                    "loop_counter": 1,
                    "remaining_chars": 1,
                    "string_length": 2,
                    "temp_var2": 1,
                    "var2": 1
                },
                "uVar3": {
                    "buffer_index": 1,
                    "current_index": 3,
                    "current_position": 1,
                    "index": 13,
                    "j": 1,
                    "loop_index": 2,
                    "loop_variable": 1,
                    "output_index": 3,
                    "output_size": 1,
                    "temp_var3": 1,
                    "var3": 1
                },
                "uVar4": {
                    "char_index": 1,
                    "count": 2,
                    "counter": 1,
                    "current_index": 2,
                    "i": 4,
                    "index": 3,
                    "input_index": 1,
                    "length": 1,
                    "loop_counter": 3,
                    "loop_index": 1,
                    "output_index": 1,
                    "position": 3,
                    "state": 3,
                    "temp_var4": 1,
                    "var4": 1
                },
                "uVar5": {
                    "is_special_char": 1
                },
                "unaff_R14": {
                    "buffer": 1,
                    "formatted_output": 1,
                    "formatted_string": 5,
                    "formatted_text": 1,
                    "modified_string": 1,
                    "output_buffer": 8,
                    "output_string": 14
                },
                "unaff_R15": {
                    "additional_data": 1,
                    "arg": 1,
                    "console_output": 1,
                    "format": 1,
                    "format_specifier": 8,
                    "format_string": 10,
                    "input_string": 3,
                    "message": 3,
                    "print_format": 1,
                    "print_mode": 1,
                    "print_option": 1
                },
                "value": {
                    "current_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0010259a"
            ],
            "code": "\n\n\nvoid print_formatted_string_001034fa(void)\n\n{\n  ulong char_code;\n  uint count;\n  ulong index;\n  ulong i;\n  char *output_string;\n  undefined8 format_string;\n  bool flag;\n  undefined8 prompt;\n  undefined8 separator;\n  \nprint_formatted_output_label:\n  i = 1;\ncontinue_loop:\n  do {\n    if (DAT_00108371 != '\\0') {\n      printf(\"%s: \",prompt);\n    }\n    if (DAT_00108372 == '\\0') {\n      output_string[i] = '\\0';\n      fputs(output_string,standard_output);\n    }\n    else {\n      FUN_0010286f(format_string);\n      output_string[i] = '\\0';\n      fputs(output_string,standard_output);\n    }\n    while (i = FUN_00103520(), i != 0xffffffffffffffff) {\n      if (0xff < i) {\nhandle_invalid_char:\n        FUN_00103810();\n        break;\n      }\n      if (i == 9) {\nhandle_tab:\n        putc((int)i,standard_output);\n      }\n      else {\n        if ((*(ushort *)(&character_table + i * 2) & 0x10) == 0) {\n          if (((DAT_00108360 != 'S') || ((long)i < 0x80)) &&\n             ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + i * 2) & 0x40) == 0))))\n          goto handle_invalid_char;\n          goto handle_tab;\n        }\n        putc((int)i,standard_output);\n      }\n    }\n    if (DAT_00108358 == (char *)0x0) {\n      putc(10,standard_output);\n    }\n    else {\n      fputs(DAT_00108358,standard_output);\n    }\n    while (i = (ulong)DAT_00108374, format_string = separator, DAT_00108374 != 0) {\n      i = FUN_00103520();\n      count = DAT_00108374;\n      if (i == 0xffffffffffffffff) goto end_execution;\n      if (i < 0x100) {\n        if (i == 9) {\nhandle_tab_and_exit:\n          *output_string = (char)i;\n          if (count < 2) {\n            print_formatted_string_001034fa();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&character_table + i * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)i < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + i * 2) & 0x40) == 0))))\n            goto fallback_cleanup;\n            goto handle_tab_and_exit;\n          }\n          *output_string = (char)i;\n          if (count < 2) goto print_formatted_output_label;\n        }\n        i = FUN_00103520();\n        count = DAT_00108374;\n        if (i == 0xffffffffffffffff) goto end_execution;\n        if (0xff < i) goto fallback_cleanup;\n        if (i == 9) {\nhandle_value_and_exit:\n          output_string[1] = (char)i;\n          if (count < 3) {\n            FUN_00103510();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&character_table + i * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)i < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + i * 2) & 0x40) == 0))))\n            goto fallback_cleanup;\n            goto handle_value_and_exit;\n          }\n          output_string[1] = (char)i;\n          if (count < 3) {\n            i = 2;\n            break;\n          }\n        }\n        i = FUN_00103520();\n        count = DAT_00108374;\n        if (i == 0xffffffffffffffff) {\nend_execution:\n          free(output_string);\n          return;\n        }\n        if (0xff < i) goto fallback_cleanup;\n        if (i == 9) {\ntab_char_num_check:\n          output_string[2] = (char)i;\n        }\n        else {\n          if ((*(ushort *)(&character_table + i * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)i < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + i * 2) & 0x40) == 0))))\n            goto fallback_cleanup;\n            goto tab_char_num_check;\n          }\n          output_string[2] = (char)i;\n        }\n        if (3 < count) {\n          index = 3;\n          do {\n            char_code = FUN_00103520();\n            if (char_code == 0xffffffffffffffff) goto end_execution;\n            if (0xff < char_code) goto fallback_cleanup;\n            if (((char_code != 9) && ((*(ushort *)(&character_table + char_code * 2) & 0x10) == 0)) &&\n               ((DAT_00108360 != 'S' || ((long)char_code < 0x80)))) {\n              if (DAT_00108373 == '\\0') goto fallback_cleanup;\n              if ((*(ushort *)(&character_table + char_code * 2) & 0x40) == 0) {\n                FUN_001034d5();\n                return;\n              }\n            }\n            count = (int)index + 1;\n            i = (ulong)count;\n            flag = DAT_00108374 <= count;\n            output_string[index] = (char)char_code;\n            index = i;\n            if (flag) goto continue_loop;\n          } while( true );\n        }\n        i = 3;\n        break;\n      }\nfallback_cleanup:\n      FUN_00103810();\n    }\n  } while( true );\n}\n\n",
            "current_name": "print_formatted_string_001034fa",
            "entrypoint": "0x001034fa",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001034fa": "print_formatted_string_001034fa",
                "LAB_00102381": "tab_char_num_check",
                "LAB_001023bb": "handle_value_and_exit",
                "LAB_001023f5": "handle_tab_and_exit",
                "LAB_00102438": "handle_tab",
                "LAB_0010348e": "handle_invalid_char",
                "LAB_001034be": "end_execution",
                "_sch_istable": "character_table",
                "_stdout": "standard_output",
                "bVar5": "flag",
                "code_r0x001034d5": "fallback_cleanup",
                "code_r0x001034fa": "print_formatted_output_label",
                "fputs": "write_output",
                "free": "release_memory",
                "in_stack_00000010": "prompt",
                "in_stack_00000038": "separator",
                "join": "append_to_string",
                "joined_r0x0010341b": "continue_loop",
                "printf": "print_string_with_format",
                "putc": "write_character",
                "puts": "print_new_line",
                "uVar1": "char_code",
                "uVar2": "count",
                "uVar3": "index",
                "uVar4": "i",
                "unaff_R14": "output_string",
                "unaff_R15": "format_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103510": {
            "additional_data": {
                "DAT_00108358": {
                    "end_of_line_string": 1,
                    "end_string": 1,
                    "line_ending": 1,
                    "newline_string": 1
                },
                "DAT_00108360": {
                    "char_type": 1,
                    "control_char": 1,
                    "format_specifier": 1,
                    "format_symbol_option": 1
                },
                "DAT_00108371": {
                    "is_label": 1,
                    "is_prefix_enabled": 1,
                    "is_prompt_enabled": 1,
                    "show_prompt": 1
                },
                "DAT_00108372": {
                    "is_format": 1,
                    "is_output_enabled": 1,
                    "is_separator_enabled": 1,
                    "use_format": 1
                },
                "DAT_00108373": {
                    "allow_special_characters": 1,
                    "is_space": 1,
                    "is_special_char_enabled": 1,
                    "is_table_check_enabled": 1
                },
                "DAT_00108374": {
                    "data_length": 1,
                    "delimiter_index": 1,
                    "num_inputs": 1
                },
                "FUNC_00103520": {
                    "get_next_character": 1
                },
                "FUN_0010286f": {
                    "format_string_function": 1,
                    "format_string_print": 1
                },
                "FUN_001034fa": {
                    "final_function": 1,
                    "return_function": 1
                },
                "FUN_00103510": {
                    "print_and_process_data": 1,
                    "print_and_process_string": 1,
                    "print_data": 1,
                    "print_formatted_data": 5,
                    "print_formatted_input": 1,
                    "print_formatted_output": 9,
                    "print_formatted_string": 6,
                    "print_formatted_text": 1,
                    "print_string": 3,
                    "print_string_with_input": 1,
                    "process_input_data": 1
                },
                "FUN_00103520": {
                    "get_next_char": 2
                },
                "FUN_00103810": {
                    "error_function": 1,
                    "print_error": 1
                },
                "LAB_00102381": {
                    "goto_third_char": 1,
                    "tab_character_4": 1,
                    "tab_label4": 1
                },
                "LAB_001023bb": {
                    "goto_second_char": 1,
                    "tab_character_3": 1,
                    "tab_label3": 1
                },
                "LAB_001023f5": {
                    "goto_first_char": 1,
                    "tab_character_2": 1,
                    "tab_label2": 1
                },
                "LAB_00102438": {
                    "goto_tab": 1,
                    "tab_character": 1,
                    "tab_label": 1
                },
                "LAB_0010348e": {
                    "error_label": 1,
                    "goto_break": 1,
                    "invalid_character": 1
                },
                "LAB_001034be": {
                    "exit_loop_label": 1,
                    "goto_free": 1
                },
                "_DAT_00108358": {
                    "output_string_or_newline": 1
                },
                "_DAT_00108360": {
                    "should_check_char_case": 1
                },
                "_DAT_00108371": {
                    "should_print_string": 1
                },
                "_DAT_00108372": {
                    "should_print_formatted_output": 1
                },
                "_DAT_00108373": {
                    "should_check_char_type": 1
                },
                "_DAT_00108374": {
                    "param_length": 1
                },
                "_genpf__sch_istable": {
                    "character_table": 1
                },
                "_sch_istable": {
                    "char_table": 5,
                    "character_classification_table": 1,
                    "character_table": 4
                },
                "_stdout": {
                    "output_file": 1,
                    "output_stream": 3,
                    "standard_output": 7,
                    "stdout": 1
                },
                "bVar5": {
                    "condition": 3,
                    "end_of_string": 1,
                    "flag": 2,
                    "invalid_char": 1,
                    "is_bound": 1,
                    "is_buffer_full": 1,
                    "is_delimiter": 2,
                    "is_end": 4,
                    "is_end_of_loop": 1,
                    "is_end_of_string": 1,
                    "is_eof": 1,
                    "is_flag_set": 1,
                    "is_less": 1,
                    "is_out_of_range": 1,
                    "is_output_string_empty": 1,
                    "is_special_character": 1,
                    "is_true": 1,
                    "is_valid": 2,
                    "should_print": 1
                },
                "code_r0x001034d5": {
                    "error_label2": 1
                },
                "code_r0x00103510": {
                    "print_formatted_output_impl": 1,
                    "print_string_loop": 1,
                    "start_of_loop_label": 1
                },
                "fputs": {
                    "print_string": 1,
                    "put_string": 1,
                    "write_to_file": 1
                },
                "free": {
                    "deallocate_memory": 1,
                    "free_memory": 1,
                    "release_memory": 2
                },
                "goto": {
                    "jump": 1
                },
                "in_stack_00000010": {
                    "format_string": 1,
                    "input_flag": 1,
                    "input_string": 6,
                    "label": 1,
                    "message": 8,
                    "message_flag": 1,
                    "optional_message": 1,
                    "prefix": 2,
                    "prefix_string": 1,
                    "prompt": 5,
                    "prompt_message": 3,
                    "prompt_string": 1
                },
                "in_stack_00000038": {
                    "additional_format_string": 1,
                    "additional_string": 1,
                    "arg2": 1,
                    "argument_2": 1,
                    "auxiliary_stream": 1,
                    "continue_output": 1,
                    "data": 1,
                    "data_struct": 1,
                    "delimiter": 3,
                    "delimiter_string": 1,
                    "end_of_string": 1,
                    "exit_flag": 1,
                    "format_string": 2,
                    "formatted_string2": 1,
                    "input_data": 1,
                    "input_file": 1,
                    "other_format_string": 1,
                    "output_flag": 1,
                    "param": 1,
                    "param2": 1,
                    "separator": 2,
                    "separator_string": 1,
                    "string_flag": 1,
                    "suffix": 2,
                    "suffix_string": 1,
                    "tmp": 1
                },
                "isalnum": {
                    "is_alpha_numeric_char": 1
                },
                "isblank": {
                    "is_blank_char": 1
                },
                "isprint": {
                    "is_printable_char": 1
                },
                "joined_r0x0010341b": {
                    "inner_loop": 1,
                    "print_formatted_output_loop": 1,
                    "print_string_continue": 1,
                    "start_of_loop_label2": 1
                },
                "malloc": {
                    "allocate_memory": 1
                },
                "memset": {
                    "initialize_memory": 1
                },
                "printf": {
                    "print_formatted_string": 2
                },
                "putc": {
                    "print_character": 1,
                    "put_character": 1,
                    "write_char_to_output": 1
                },
                "putchar": {
                    "output_character": 1,
                    "write_char_to_output": 1
                },
                "uVar1": {
                    "byte_value": 1,
                    "ch": 1,
                    "char": 1,
                    "char_code": 10,
                    "char_index": 1,
                    "char_value": 2,
                    "character": 6,
                    "current_char": 1,
                    "temp": 2,
                    "value1": 1
                },
                "uVar2": {
                    "buffer_size": 1,
                    "char_count": 1,
                    "condition": 1,
                    "count": 5,
                    "counter": 3,
                    "current_index": 1,
                    "format_specifier_length": 1,
                    "format_string_length": 1,
                    "loop_counter": 2,
                    "loop_var": 1,
                    "output_buffer_index": 1,
                    "output_len": 1,
                    "remaining_output_length": 1,
                    "remaining_positions": 1,
                    "string_length": 4,
                    "value2": 1
                },
                "uVar3": {
                    "counter": 1,
                    "current_index": 3,
                    "current_position": 1,
                    "i": 3,
                    "index": 14,
                    "num_characters": 1,
                    "output_index": 2,
                    "value3": 1
                },
                "uVar4": {
                    "char_index": 1,
                    "count": 2,
                    "current_char": 1,
                    "current_index": 2,
                    "index": 5,
                    "index2": 2,
                    "input_char": 1,
                    "j": 2,
                    "length": 1,
                    "loop_counter": 1,
                    "next_index": 1,
                    "position": 3,
                    "state": 1,
                    "status": 1,
                    "value": 2
                },
                "uVar5": {
                    "is_special_character": 1
                },
                "unaff_R14": {
                    "buffer": 5,
                    "formatted_data": 1,
                    "formatted_input_string": 1,
                    "formatted_string": 1,
                    "input_buffer": 1,
                    "output_buffer": 4,
                    "output_string": 15,
                    "string_buffer": 3
                },
                "unaff_R15": {
                    "additional_data": 1,
                    "arg": 1,
                    "argument": 1,
                    "file_name": 1,
                    "filename": 1,
                    "format": 1,
                    "format_specifier": 5,
                    "format_string": 12,
                    "formatted_string": 1,
                    "input_string": 1,
                    "message": 1,
                    "option": 1,
                    "output_file": 1,
                    "output_stream": 1,
                    "param": 1,
                    "print_flag": 1
                },
                "while": {
                    "loop": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0010259a"
            ],
            "code": "\n\n\nvoid print_string_with_input_00103510(void)\n\n{\n  ulong char_code;\n  uint count;\n  ulong index;\n  ulong index;\n  char *output_string;\n  undefined8 format_string;\n  bool is_end;\n  undefined8 message;\n  undefined8 delimiter;\n  \nprint_formatted_output_impl:\n  index = 2;\nprint_formatted_output_loop:\n  do {\n    if (DAT_00108371 != '\\0') {\n      printf(\"%s: \",message);\n    }\n    if (DAT_00108372 == '\\0') {\n      output_string[index] = '\\0';\n      fputs(output_string,standard_output);\n    }\n    else {\n      FUN_0010286f(format_string);\n      output_string[index] = '\\0';\n      fputs(output_string,standard_output);\n    }\n    loop (index = FUN_00103520(), index != 0xffffffffffffffff) {\n      if (0xff < index) {\ninvalid_character:\n        FUN_00103810();\n        break;\n      }\n      if (index == 9) {\ngoto_tab:\n        putc((int)index,standard_output);\n      }\n      else {\n        if ((*(ushort *)(&char_table + index * 2) & 0x10) == 0) {\n          if (((DAT_00108360 != 'S') || ((long)index < 0x80)) &&\n             ((DAT_00108373 == '\\0' || ((*(ushort *)(&char_table + index * 2) & 0x40) == 0))))\n          jump invalid_character;\n          jump goto_tab;\n        }\n        putc((int)index,standard_output);\n      }\n    }\n    if (DAT_00108358 == (char *)0x0) {\n      putc(10,standard_output);\n    }\n    else {\n      fputs(DAT_00108358,standard_output);\n    }\n    loop (index = (ulong)DAT_00108374, format_string = delimiter, DAT_00108374 != 0) {\n      index = FUN_00103520();\n      count = DAT_00108374;\n      if (index == 0xffffffffffffffff) jump goto_free;\n      if (index < 0x100) {\n        if (index == 9) {\ntab_label2:\n          *output_string = (char)index;\n          if (count < 2) {\n            FUN_001034fa();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&char_table + index * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)index < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&char_table + index * 2) & 0x40) == 0))))\n            jump error_label2;\n            jump tab_label2;\n          }\n          *output_string = (char)index;\n          if (count < 2) {\n            index = 1;\n            break;\n          }\n        }\n        index = FUN_00103520();\n        count = DAT_00108374;\n        if (index == 0xffffffffffffffff) jump goto_free;\n        if (0xff < index) jump error_label2;\n        if (index == 9) {\ntab_label3:\n          output_string[1] = (char)index;\n          if (count < 3) {\n            print_string_with_input_00103510();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&char_table + index * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)index < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&char_table + index * 2) & 0x40) == 0))))\n            jump error_label2;\n            jump tab_label3;\n          }\n          output_string[1] = (char)index;\n          if (count < 3) jump print_formatted_output_impl;\n        }\n        index = FUN_00103520();\n        count = DAT_00108374;\n        if (index == 0xffffffffffffffff) {\ngoto_free:\n          release_memory(output_string);\n          return;\n        }\n        if (0xff < index) jump error_label2;\n        if (index == 9) {\ntab_character_4:\n          output_string[2] = (char)index;\n        }\n        else {\n          if ((*(ushort *)(&char_table + index * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)index < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&char_table + index * 2) & 0x40) == 0))))\n            jump error_label2;\n            jump tab_character_4;\n          }\n          output_string[2] = (char)index;\n        }\n        if (3 < count) {\n          index = 3;\n          do {\n            char_code = FUN_00103520();\n            if (char_code == 0xffffffffffffffff) jump goto_free;\n            if (0xff < char_code) jump error_label2;\n            if (((char_code != 9) && ((*(ushort *)(&char_table + char_code * 2) & 0x10) == 0)) &&\n               ((DAT_00108360 != 'S' || ((long)char_code < 0x80)))) {\n              if (DAT_00108373 == '\\0') jump error_label2;\n              if ((*(ushort *)(&char_table + char_code * 2) & 0x40) == 0) {\n                FUN_001034d5();\n                return;\n              }\n            }\n            count = (int)index + 1;\n            index = (ulong)count;\n            is_end = DAT_00108374 <= count;\n            output_string[index] = (char)char_code;\n            index = index;\n            if (is_end) jump print_formatted_output_loop;\n          } loop( true );\n        }\n        index = 3;\n        break;\n      }\nerror_label2:\n      FUN_00103810();\n    }\n  } loop( true );\n}\n\n",
            "current_name": "print_string_with_input_00103510",
            "entrypoint": "0x00103510",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103510": "print_string_with_input_00103510",
                "LAB_00102381": "tab_character_4",
                "LAB_001023bb": "tab_label3",
                "LAB_001023f5": "tab_label2",
                "LAB_00102438": "goto_tab",
                "LAB_0010348e": "invalid_character",
                "LAB_001034be": "goto_free",
                "_sch_istable": "char_table",
                "_stdout": "standard_output",
                "bVar5": "is_end",
                "code_r0x001034d5": "error_label2",
                "code_r0x00103510": "print_formatted_output_impl",
                "fputs": "write_to_file",
                "free": "release_memory",
                "goto": "jump",
                "in_stack_00000010": "message",
                "in_stack_00000038": "delimiter",
                "joined_r0x0010341b": "print_formatted_output_loop",
                "printf": "print_formatted_string",
                "putc": "print_character",
                "uVar1": "char_code",
                "uVar2": "count",
                "uVar3": "index",
                "uVar4": "index",
                "unaff_R14": "output_string",
                "unaff_R15": "format_string",
                "while": "loop"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103520": {
            "additional_data": {
                "DAT_0010834c": {
                    "sequence_length": 1
                },
                "DAT_00108360": {
                    "byte_order_flag": 1
                },
                "FUN_00102771": {
                    "decode_length": 1
                },
                "FUN_00103520": {
                    "decode_binary_data": 1,
                    "decode_byte_string": 1,
                    "decode_data": 1,
                    "extract_data": 2,
                    "parse_and_extract_data": 1,
                    "parse_data": 1,
                    "parse_unsigned_long": 1,
                    "process_input": 1,
                    "read_and_convert_data": 1,
                    "read_and_parse_data": 1,
                    "read_byte_sequence": 1,
                    "read_bytes": 3,
                    "read_data": 1,
                    "read_data_from_file": 2,
                    "read_uint": 1,
                    "read_uint_from_file": 1,
                    "read_value": 1,
                    "read_variable": 1
                },
                "_IO_FILE": {
                    "file": 3,
                    "file_io": 1,
                    "file_ptr": 1
                },
                "__uflow": {
                    "read_byte": 1,
                    "read_byte_from_stream": 1
                },
                "bVar1": {
                    "byte": 1,
                    "byte_val": 1,
                    "byte_value": 23,
                    "current_byte": 2
                },
                "iVar6": {
                    "bytes_read": 1,
                    "count": 4,
                    "counter": 3,
                    "i": 1,
                    "index": 3,
                    "iteration": 3,
                    "iteration_count": 2,
                    "loop_count": 2,
                    "loop_counter": 4,
                    "loop_index": 2,
                    "temp_count": 2,
                    "temp_counter": 1
                },
                "iVar7": {
                    "expected_bytes": 1,
                    "expected_count": 5,
                    "expected_iterations": 1,
                    "expected_loop_count": 1,
                    "fixed_count": 1,
                    "length": 2,
                    "limit": 1,
                    "loop_limit": 1,
                    "loop_size": 1,
                    "num_bytes": 1,
                    "required_bytes": 1,
                    "required_count": 3,
                    "target_count": 1,
                    "total_bytes": 4,
                    "total_count": 1,
                    "total_iterations": 2,
                    "total_loops": 1
                },
                "param_1": {
                    "file": 23,
                    "file_pointer": 3,
                    "file_ptr": 1,
                    "input_file": 4
                },
                "param_2": {
                    "byte_count": 3,
                    "byte_counter": 1,
                    "count": 9,
                    "counter": 1,
                    "data_length": 2,
                    "index": 1,
                    "num_bytes_read": 1,
                    "num_read": 2,
                    "number_of_bytes": 1,
                    "output": 1,
                    "output_value": 1,
                    "position": 2,
                    "total_bytes": 3,
                    "total_bytes_read": 1,
                    "total_count": 1,
                    "total_read_bytes": 1
                },
                "param_3": {
                    "byte_array_size": 1,
                    "number_of_elements": 1,
                    "remaining": 14,
                    "remaining_bytes": 11,
                    "remaining_count": 2,
                    "remaining_data": 1,
                    "remaining_length": 1
                },
                "param_4": {
                    "buf_ptr": 1,
                    "buffer": 17,
                    "byte_array": 2,
                    "byte_array_ptr": 1,
                    "byte_ptr": 1,
                    "data": 4,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "input": 1,
                    "input_data": 1
                },
                "pbVar2": {
                    "buffer_ptr": 1,
                    "byte_pointer": 3,
                    "byte_ptr": 9,
                    "current_byte": 6,
                    "current_byte_ptr": 1,
                    "current_ptr": 2,
                    "input_ptr": 1,
                    "ptr": 3
                },
                "uVar3": {
                    "flow_result": 9,
                    "read_result": 2,
                    "read_value": 1,
                    "result": 11,
                    "return_value": 2,
                    "uflow_result": 3
                },
                "uVar4": {
                    "byte_result": 5,
                    "byte_value2": 1,
                    "current_byte": 1,
                    "read_byte": 1,
                    "temp": 4,
                    "temp_result": 1,
                    "temp_value": 8,
                    "temp_value1": 1,
                    "temp_var": 3,
                    "value": 3
                },
                "uVar5": {
                    "byte_sequence": 1,
                    "combined_bytes": 1,
                    "data_value": 1,
                    "decoded_value": 2,
                    "extracted_value": 3,
                    "final_result": 1,
                    "final_value": 1,
                    "output": 1,
                    "parsed_value": 3,
                    "read_data": 1,
                    "read_value": 1,
                    "result": 8,
                    "result_value": 1,
                    "return_value": 1,
                    "value": 2
                },
                "uflow": {
                    "read_next_byte": 1
                }
            },
            "called": [
                "FUN_00102771",
                "__uflow"
            ],
            "calling": [
                "FUN_0010259a"
            ],
            "code": "\nulong parse_and_extract_data_00103520(file *file,long *count,int *remaining,byte **buffer)\n\n{\n  byte byte_value;\n  byte *byte_ptr;\n  uint result;\n  ulong temp_value;\n  ulong result;\n  int count;\n  int expected_count;\n  \n  expected_count = DAT_0010834c;\n  if (DAT_0010834c < 1) {\n    result = 0;\n    if (DAT_00108360 == 'L') {\n      result = FUN_00102771();\n      return result;\n    }\n    goto LAB_0010361f;\n  }\n  if (file == (file *)0x0) {\n    result = 0;\n    count = 0;\n    do {\n      if (*remaining == 0) {\n        return 0xffffffffffffffff;\n      }\n      count = count + 1;\n      *remaining = *remaining + -1;\n      byte_ptr = *buffer;\n      *buffer = byte_ptr + 1;\n      byte_value = *byte_ptr;\n      *count = *count + 1;\n      result = result << 8 | (ulong)byte_value;\n    } while (count != expected_count);\n  }\n  else if (*remaining == 0) {\n    byte_ptr = (byte *)file->_IO_read_ptr;\n    if (file->_IO_read_end <= byte_ptr) {\n      result = __uflow(file);\n      result = (ulong)(result & 0xff);\n      if (result == 0xffffffff) {\n        return 0xffffffffffffffff;\n      }\n      goto LAB_001036aa;\n    }\n    file->_IO_read_ptr = (char *)(byte_ptr + 1);\n    result = (ulong)*byte_ptr;\n    *count = *count + 1;\n    count = 0;\n    if (expected_count == 1) goto LAB_00103610;\nLAB_00103574:\n    byte_ptr = (byte *)file->_IO_read_ptr;\n    if (byte_ptr < file->_IO_read_end) {\n      file->_IO_read_ptr = (char *)(byte_ptr + 1);\n      byte_value = *byte_ptr;\n      *count = *count + 1;\n      result = result << 8 | (ulong)byte_value;\n      if (DAT_0010834c < 3) goto LAB_00103610;\nLAB_001035a1:\n      byte_ptr = (byte *)file->_IO_read_ptr;\n      if (byte_ptr < file->_IO_read_end) {\n        file->_IO_read_ptr = (char *)(byte_ptr + 1);\n        byte_value = *byte_ptr;\n        *count = *count + 1;\n        result = result << 8 | (ulong)byte_value;\n        if (DAT_0010834c < 4) goto LAB_00103610;\n      }\n      else {\n        result = __uflow(file);\n        if (result == 0xffffffff) {\n          return 0xffffffffffffffff;\n        }\n        temp_value = (ulong)(result & 0xff);\nLAB_00103717:\n        *count = *count + 1;\n        result = result << 8 | temp_value;\n        if (DAT_0010834c < 4) goto LAB_00103610;\n        count = *remaining;\n      }\n      expected_count = 3;\n      while( true ) {\n        if (count == 0) {\n          while (byte_ptr = (byte *)file->_IO_read_ptr, byte_ptr < file->_IO_read_end) {\n            expected_count = expected_count + 1;\n            file->_IO_read_ptr = (char *)(byte_ptr + 1);\n            byte_value = *byte_ptr;\n            *count = *count + 1;\n            result = result << 8 | (ulong)byte_value;\n            if (DAT_0010834c <= expected_count) goto LAB_00103610;\n          }\n          result = __uflow(file);\n          if (result == 0xffffffff) {\n            return 0xffffffffffffffff;\n          }\n          temp_value = (ulong)(result & 0xff);\n        }\n        else {\n          byte_ptr = *buffer;\n          *remaining = count + -1;\n          *buffer = byte_ptr + 1;\n          temp_value = (ulong)*byte_ptr;\n        }\n        *count = *count + 1;\n        expected_count = expected_count + 1;\n        result = result << 8 | temp_value;\n        if (DAT_0010834c <= expected_count) break;\n        count = *remaining;\n      }\n    }\n    else {\n      result = __uflow(file);\n      if (result == 0xffffffff) {\n        return 0xffffffffffffffff;\n      }\n      temp_value = (ulong)(result & 0xff);\nLAB_001036dd:\n      *count = *count + 1;\n      result = result << 8 | temp_value;\n      if (2 < DAT_0010834c) {\n        count = *remaining;\n        if (count == 0) goto LAB_001035a1;\n        byte_ptr = *buffer;\n        *remaining = count + -1;\n        *buffer = byte_ptr + 1;\n        temp_value = (ulong)*byte_ptr;\n        goto LAB_00103717;\n      }\n    }\n  }\n  else {\n    byte_ptr = *buffer;\n    *remaining = *remaining + -1;\n    *buffer = byte_ptr + 1;\n    result = (ulong)*byte_ptr;\nLAB_001036aa:\n    *count = *count + 1;\n    if (1 < DAT_0010834c) {\n      count = *remaining;\n      if (count == 0) goto LAB_00103574;\n      byte_ptr = *buffer;\n      *remaining = count + -1;\n      *buffer = byte_ptr + 1;\n      temp_value = (ulong)*byte_ptr;\n      goto LAB_001036dd;\n    }\n  }\nLAB_00103610:\n  if (DAT_00108360 == 'L') {\n    result = FUN_00102771();\n    return result;\n  }\nLAB_0010361f:\n  if (DAT_00108360 == 'l') {\n    result = result >> 8 & 0xff | (result & 0xff) << 8;\n  }\n  return result;\n}\n\n",
            "current_name": "parse_and_extract_data_00103520",
            "entrypoint": "0x00103520",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103520": "parse_and_extract_data_00103520",
                "_IO_FILE": "file",
                "__uflow": "read_byte_from_stream",
                "bVar1": "byte_value",
                "iVar6": "count",
                "iVar7": "expected_count",
                "param_1": "file",
                "param_2": "count",
                "param_3": "remaining",
                "param_4": "buffer",
                "pbVar2": "byte_ptr",
                "uVar3": "result",
                "uVar4": "temp_value",
                "uVar5": "result",
                "uflow": "read_next_byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103810": {
            "additional_data": {
                "DAT_00108348": {
                    "buffer": 1,
                    "data_value3": 1,
                    "result": 1,
                    "result_char": 1,
                    "result_value": 1,
                    "result_var_1": 1,
                    "updated_flag": 1
                },
                "DAT_0010834c": {
                    "constant_var_1": 1,
                    "count": 1,
                    "data_length": 1,
                    "data_value2": 1,
                    "flag_constant": 2,
                    "flag_threshold": 1
                },
                "DAT_00108360": {
                    "char_value": 1,
                    "character": 1,
                    "character_constant": 1,
                    "constant_var_2": 1,
                    "first_character": 1,
                    "flag": 1,
                    "special_char": 1
                },
                "FUN_001027e2": {
                    "calculate": 1,
                    "calculate_values": 1,
                    "modify_output": 1,
                    "update_result": 1
                },
                "FUN_0010282b": {
                    "perform_action": 1,
                    "perform_operation": 4
                },
                "FUN_00103810": {
                    "adjust_data": 1,
                    "calculate_adjusted_values": 1,
                    "calculate_new_values": 1,
                    "calculate_offset": 2,
                    "calculate_offset_and_update": 1,
                    "calculate_shift_and_update": 1,
                    "calculate_shift_params": 1,
                    "calculate_sum": 1,
                    "extract_and_adjust": 1,
                    "process_data": 3,
                    "process_function": 1,
                    "reverse_and_update_data": 1,
                    "update_data": 5,
                    "update_param_values": 1,
                    "update_parameters": 1,
                    "update_params": 2,
                    "update_values": 3
                },
                "_DAT_00108349": {
                    "combined_value": 1,
                    "data_value1": 1,
                    "result_ushort": 1,
                    "result_value2": 1,
                    "result_var_2": 1,
                    "temp_result": 1,
                    "updated_value_b": 1
                },
                "iVar1": {
                    "condition": 1,
                    "counter": 2,
                    "counter_value": 2,
                    "flag_check": 1,
                    "flag_value": 7,
                    "param2_value": 1,
                    "ptr2_value": 1,
                    "state_value": 1,
                    "status": 1,
                    "status_value": 1,
                    "temp": 2,
                    "temp_counter": 2,
                    "temp_var1": 3,
                    "temp_var_1": 1,
                    "temp_variable": 1,
                    "value": 1,
                    "value1": 1,
                    "value_b": 1,
                    "var_1": 1
                },
                "iVar2": {
                    "constant_value": 1
                },
                "iVar3": {
                    "adjusted_count": 1,
                    "adjusted_flag": 1,
                    "decrement": 1,
                    "flag_minus_one": 1,
                    "new_counter_value": 1,
                    "param2_value_minus_1": 1,
                    "previous_flag_value": 1,
                    "ptr2_modified_value": 1,
                    "temp2": 1,
                    "temp_counter": 1,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "temp_var3": 2,
                    "temp_var_2": 1,
                    "updated_counter": 4,
                    "updated_counter_value": 1,
                    "updated_flag": 2,
                    "updated_flag_value": 3,
                    "updated_state_value": 1,
                    "updated_status": 2,
                    "updated_value": 1,
                    "value2": 1,
                    "var_3": 1
                },
                "lVar2": {
                    "constant": 3,
                    "constant_factor": 1,
                    "constant_value": 6,
                    "count": 1,
                    "data_count": 1,
                    "data_length": 1,
                    "data_offset": 1,
                    "data_size": 2,
                    "increment": 1,
                    "limit": 1,
                    "loop_counter": 1,
                    "param4_value": 1,
                    "shift_value": 1,
                    "temp_value": 2,
                    "temp_var2": 2,
                    "temp_var3": 1,
                    "threshold": 1,
                    "value3": 1,
                    "var_2": 1
                },
                "param_1": {
                    "input": 3,
                    "input_param": 1,
                    "input_value": 15,
                    "param": 3,
                    "param_value": 1,
                    "start_address": 1,
                    "undefined_param": 1,
                    "value": 6
                },
                "param_2": {
                    "base_address": 1,
                    "base_value": 1,
                    "data_address": 2,
                    "data_pointer": 2,
                    "data_pointer1": 1,
                    "data_ptr": 2,
                    "final_value": 1,
                    "first_array": 1,
                    "original_value": 1,
                    "output1": 2,
                    "output_value": 1,
                    "output_value1": 3,
                    "param1_ptr": 1,
                    "param2": 2,
                    "pointer_a": 1,
                    "ptr1": 2,
                    "ptr_value": 1,
                    "result": 2,
                    "result_1": 1,
                    "result_ptr": 1,
                    "sum_pointer": 1,
                    "value_ptr": 1
                },
                "param_3": {
                    "counter": 4,
                    "counter_pointer": 1,
                    "counter_ptr": 1,
                    "counter_value": 1,
                    "data_pointer2": 1,
                    "flag": 4,
                    "flag_pointer": 1,
                    "flag_ptr": 2,
                    "flag_value": 1,
                    "offset": 1,
                    "output2": 1,
                    "output_value2": 2,
                    "param2_ptr": 1,
                    "param3": 2,
                    "pointer_b": 1,
                    "ptr2": 2,
                    "result_2": 1,
                    "second_array": 1,
                    "state": 1,
                    "status": 1,
                    "status_flag": 1
                },
                "param_4": {
                    "address_pointer": 1,
                    "address_ptr": 1,
                    "data": 1,
                    "data_pointer3": 1,
                    "data_ptr": 1,
                    "operation_result": 1,
                    "output2": 1,
                    "output3": 1,
                    "output_data_pointer": 1,
                    "output_ptr": 3,
                    "output_value2": 1,
                    "output_value3": 2,
                    "param3_ptr": 1,
                    "param4": 2,
                    "pointer_c": 1,
                    "ptr3": 2,
                    "result": 1,
                    "result_3": 1,
                    "result_address": 3,
                    "result_pointer": 2,
                    "result_ptr": 1,
                    "result_value": 1,
                    "third_array": 1
                }
            },
            "called": [
                "FUN_0010282b",
                "FUN_001027e2"
            ],
            "calling": [
                "FUN_0010259a",
                "FUN_001034d5"
            ],
            "code": "\n\n\nvoid reverse_and_update_data_00103810(undefined8 input_value,long *output_value1,int *flag,long *result_address)\n\n{\n  int flag_value;\n  long constant_value;\n  int updated_counter;\n  \n  constant_value = (long)DAT_0010834c;\n  if (DAT_0010834c < 2) {\n    return;\n  }\n  updated_counter = DAT_0010834c + -1;\n  *output_value1 = *output_value1 - (long)updated_counter;\n  flag_value = *flag;\n  if (flag_value == 0) {\n    if (DAT_00108360 != 'l') {\n      if (DAT_00108360 < 'm') {\n        if (DAT_00108360 == 'b') {\n          DAT_00108348 = (undefined)input_value;\n          *flag = 1;\n        }\n        else if (DAT_00108360 < 'c') {\n          if (DAT_00108360 == 'B') {\n            _DAT_00108349 = (ushort)input_value << 8 | (ushort)input_value >> 8;\n            DAT_00108348 = (undefined)((ulong)input_value >> 0x10);\n            *flag = 3;\n          }\n          else if (DAT_00108360 == 'L') {\n            FUN_0010282b();\n            return;\n          }\n        }\n      }\n      *result_address = (long)&DAT_00108348;\n      return;\n    }\n    DAT_00108348 = (undefined)((ulong)input_value >> 8);\n    *flag = 1;\n    *result_address = (long)&DAT_00108348;\n  }\n  else {\n    *result_address = *result_address + (1 - constant_value);\n    *flag = updated_counter + flag_value;\n  }\n  return;\n}\n\n",
            "current_name": "reverse_and_update_data_00103810",
            "entrypoint": "0x00103810",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103810": "reverse_and_update_data_00103810",
                "iVar1": "flag_value",
                "iVar3": "updated_counter",
                "lVar2": "constant_value",
                "param_1": "input_value",
                "param_2": "output_value1",
                "param_3": "flag",
                "param_4": "result_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103890": {
            "additional_data": {
                "DAT_00108371": {
                    "flag_1": 1,
                    "print_flag_enabled": 1
                },
                "DAT_00108372": {
                    "data_flag_enabled": 1,
                    "flag_2": 1
                },
                "FUN_00102853": {
                    "print_argument": 1,
                    "print_data": 12,
                    "print_message": 14,
                    "process_data": 2,
                    "reverse_string": 1,
                    "sub_function": 1
                },
                "FUN_0010286f": {
                    "call_sub_function": 1,
                    "execute_function": 1,
                    "print_data": 3,
                    "reverse_data": 4,
                    "reverse_string": 2
                },
                "FUN_00103890": {
                    "print_and_call_function": 1,
                    "print_data": 1,
                    "print_if_condition": 1,
                    "print_if_condition_met": 1,
                    "print_if_condition_true": 2,
                    "print_if_debug_enabled": 1,
                    "print_if_enabled": 5,
                    "print_if_flag_enabled": 1,
                    "print_if_flag_set": 4,
                    "print_if_not_disabled": 1,
                    "print_if_not_empty": 3,
                    "print_if_valid": 1,
                    "print_if_verbose": 1,
                    "print_message": 4,
                    "print_or_call": 1,
                    "print_or_execute": 1,
                    "print_or_invoke_function": 1,
                    "print_status_and_call_function": 1
                },
                "param_1": {
                    "data": 1,
                    "data_param": 1,
                    "message": 27,
                    "status_message": 1,
                    "text": 1
                },
                "param_2": {
                    "data": 28,
                    "data_param": 1,
                    "data_parameter": 1,
                    "function_argument": 1
                },
                "printf": {
                    "print_formatted_message": 1
                }
            },
            "called": [
                "FUN_00102853"
            ],
            "calling": [
                "FUN_00103240",
                "FUN_00102b11"
            ],
            "code": "\nvoid print_if_debug_enabled_00103890(undefined8 message,undefined8 data)\n\n{\n  if (DAT_00108371 != '\\0') {\n    printf(\"%s: \",message);\n  }\n  if (DAT_00108372 == '\\0') {\n    return;\n  }\n  FUN_0010286f(data);\n  return;\n}\n\n",
            "current_name": "print_if_debug_enabled_00103890",
            "entrypoint": "0x00103890",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103890": "print_if_debug_enabled_00103890",
                "param_1": "message",
                "param_2": "data",
                "printf": "print_formatted_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001038b0": {
            "additional_data": {
                "10": {
                    "line_break": 1
                },
                "DAT_00108378": {
                    "program_name": 1
                },
                "FUN_001038b0": {
                    "print_error_message": 31
                },
                "__arg": {
                    "arg": 1,
                    "argument_list": 1,
                    "arguments": 6
                },
                "__c": {
                    "character": 10
                },
                "__format": {
                    "format": 7,
                    "format_string": 2,
                    "message_format": 1
                },
                "__gnuc_va_list": {
                    "additional_arguments": 1,
                    "arguments": 2,
                    "var_args": 1
                },
                "__s": {
                    "file": 2,
                    "file_stream": 1,
                    "output_file": 1,
                    "output_stream": 2,
                    "stream": 3
                },
                "__stream": {
                    "file": 2,
                    "file_stream": 1,
                    "output_stream": 3,
                    "stream": 4
                },
                "_stderr": {
                    "error_output": 2,
                    "error_stream": 2,
                    "standard_error": 9,
                    "standard_error_stream": 1,
                    "stderr": 1,
                    "stderr_file": 1
                },
                "_stdout": {
                    "standard_output": 11,
                    "standard_output_stream": 1,
                    "stdout": 1,
                    "stdout_file": 1
                },
                "fflush": {
                    "flush_buffer": 2,
                    "flush_output": 6,
                    "flush_stream": 2
                },
                "fprintf": {
                    "format_and_print": 1,
                    "formatted_print": 1,
                    "formatted_print_to_file": 1,
                    "print": 1,
                    "print_error": 1,
                    "print_formatted": 3,
                    "print_formatted_error_message": 1,
                    "print_output": 1
                },
                "param_1": {
                    "error_message": 15,
                    "message": 16
                },
                "param_2": {
                    "args": 10,
                    "arguments": 14,
                    "var_args_list": 1,
                    "varargs": 1
                },
                "putc": {
                    "put_character": 5,
                    "write_char": 2,
                    "write_character": 2
                },
                "vfprintf": {
                    "format_and_print_with_args": 1,
                    "format_print": 1,
                    "print_formatted": 1,
                    "print_formatted_error": 1,
                    "print_formatted_error_message_with_args": 1,
                    "print_formatted_output": 1,
                    "print_formatted_variable": 1,
                    "v_formatted_print": 1
                }
            },
            "called": [
                "putc",
                "vfprintf",
                "fprintf",
                "fflush"
            ],
            "calling": [
                "FUN_00104a60",
                "FUN_00103910"
            ],
            "code": "\n\n\nvoid print_error_message_001038b0(char *message,arguments arguments)\n\n{\n  fflush(standard_output);\n  fprintf(standard_error,\"%s: \",DAT_00108378);\n  vfprintf(standard_error,message,arguments);\n  putc(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_error_message_001038b0",
            "entrypoint": "0x001038b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001038b0": "print_error_message_001038b0",
                "__gnuc_va_list": "arguments",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "fflush": "flush_output",
                "fprintf": "print_formatted",
                "param_1": "message",
                "param_2": "arguments",
                "putc": "put_character",
                "vfprintf": "format_and_print_with_args"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103910": {
            "additional_data": {
                "FUN_001038b0": {
                    "copy_data": 2,
                    "copy_to_destination": 1,
                    "handle_data": 1,
                    "parse_data": 1,
                    "process_and_copy": 1,
                    "process_data": 1,
                    "process_data_helper": 4
                },
                "FUN_00103910": {
                    "copy_values": 1,
                    "decode_and_process_data": 1,
                    "extract_and_process_data": 2,
                    "extract_data": 1,
                    "extract_parameters": 1,
                    "process_data": 17,
                    "reformatted_function": 1,
                    "reverse_and_process_data": 1
                },
                "in_AL": {
                    "bool_condition": 1,
                    "boolean_flag": 1,
                    "character": 1,
                    "condition": 6,
                    "condition_flag": 1,
                    "flag": 10,
                    "input_condition": 1,
                    "input_flag": 1,
                    "is_not_null": 1,
                    "is_true": 1,
                    "value": 1
                },
                "local_18": {
                    "arg8": 2,
                    "arg8_copy": 1,
                    "condition8": 2,
                    "copy8": 1,
                    "copy_of_param_h": 1,
                    "input8": 1,
                    "input8_copy": 2,
                    "input_8": 1,
                    "input_8_copy": 1,
                    "input_param_8_copy": 1,
                    "local_data8": 1,
                    "local_flag8": 1,
                    "local_input8": 1,
                    "local_input_8": 1,
                    "local_param_8": 1,
                    "local_var10": 1,
                    "new_param8": 1,
                    "output13": 1,
                    "param14": 1,
                    "param_8_copy": 1,
                    "source8_copy": 1,
                    "source_value8_copy": 1,
                    "temp8": 1,
                    "temp_8": 1,
                    "var13": 1,
                    "var8": 2,
                    "var_13": 1
                },
                "local_28": {
                    "arg7": 2,
                    "arg7_copy": 1,
                    "condition7": 2,
                    "copy7": 1,
                    "copy_of_param_g": 1,
                    "input7": 1,
                    "input7_copy": 2,
                    "input_7": 1,
                    "input_7_copy": 1,
                    "input_param_7_copy": 1,
                    "local_data7": 1,
                    "local_flag7": 1,
                    "local_input7": 1,
                    "local_input_7": 1,
                    "local_param_7": 1,
                    "local_var9": 1,
                    "new_param7": 1,
                    "output12": 1,
                    "param13": 1,
                    "param_7_copy": 1,
                    "source7_copy": 1,
                    "source_value7_copy": 1,
                    "temp7": 1,
                    "temp_7": 1,
                    "var12": 1,
                    "var7": 2,
                    "var_12": 1
                },
                "local_38": {
                    "arg6": 2,
                    "arg6_copy": 1,
                    "condition6": 2,
                    "copy6": 1,
                    "copy_of_param_f": 1,
                    "input6": 1,
                    "input6_copy": 2,
                    "input_6": 1,
                    "input_6_copy": 1,
                    "input_param_6_copy": 1,
                    "local_data6": 1,
                    "local_flag6": 1,
                    "local_input6": 1,
                    "local_input_6": 1,
                    "local_param_6": 1,
                    "local_var8": 1,
                    "new_param6": 1,
                    "output11": 1,
                    "param12": 1,
                    "param_6_copy": 1,
                    "source6_copy": 1,
                    "source_value6_copy": 1,
                    "temp6": 1,
                    "temp_6": 1,
                    "var11": 1,
                    "var6": 2,
                    "var_11": 1
                },
                "local_48": {
                    "arg5": 2,
                    "arg5_copy": 1,
                    "condition5": 2,
                    "copy5": 1,
                    "copy_of_param_e": 1,
                    "input5": 1,
                    "input5_copy": 2,
                    "input_5": 1,
                    "input_5_copy": 1,
                    "input_param_5_copy": 1,
                    "local_data5": 1,
                    "local_flag5": 1,
                    "local_input5": 1,
                    "local_input_5": 1,
                    "local_param_5": 1,
                    "local_var7": 1,
                    "new_param5": 1,
                    "output10": 1,
                    "param11": 1,
                    "param_5_copy": 1,
                    "source5_copy": 1,
                    "source_value5_copy": 1,
                    "temp5": 1,
                    "temp_5": 1,
                    "var10": 1,
                    "var5": 2,
                    "var_10": 1
                },
                "local_58": {
                    "arg4": 2,
                    "arg4_copy": 1,
                    "condition4": 2,
                    "copy4": 1,
                    "copy_of_param_d": 1,
                    "input4": 1,
                    "input4_copy": 2,
                    "input_4": 1,
                    "input_4_copy": 1,
                    "input_param_4_copy": 1,
                    "local_data4": 1,
                    "local_flag4": 1,
                    "local_input4": 1,
                    "local_input_4": 1,
                    "local_param_4": 1,
                    "local_var6": 1,
                    "new_param4": 1,
                    "output9": 1,
                    "param10": 1,
                    "param_4_copy": 1,
                    "source4_copy": 1,
                    "source_value4_copy": 1,
                    "temp4": 1,
                    "temp_4": 1,
                    "var4": 2,
                    "var9": 1,
                    "var_9": 1
                },
                "local_68": {
                    "arg3": 2,
                    "arg3_copy": 1,
                    "condition3": 2,
                    "copy3": 1,
                    "copy_of_param_c": 1,
                    "input3": 1,
                    "input3_copy": 2,
                    "input_3": 1,
                    "input_3_copy": 1,
                    "input_param_3_copy": 1,
                    "local_data3": 1,
                    "local_flag3": 1,
                    "local_input3": 1,
                    "local_input_3": 1,
                    "local_param_3": 1,
                    "local_var5": 1,
                    "new_param3": 1,
                    "output8": 1,
                    "param9": 1,
                    "param_3_copy": 1,
                    "source3_copy": 1,
                    "source_value3_copy": 1,
                    "temp3": 1,
                    "temp_3": 1,
                    "var3": 2,
                    "var8": 1,
                    "var_8": 1
                },
                "local_78": {
                    "arg2": 2,
                    "arg2_copy": 1,
                    "condition2": 2,
                    "copy2": 1,
                    "copy_of_param_b": 1,
                    "input2": 1,
                    "input2_copy": 2,
                    "input_2": 1,
                    "input_2_copy": 1,
                    "input_param_2_copy": 1,
                    "local_data2": 1,
                    "local_flag2": 1,
                    "local_input2": 1,
                    "local_input_2": 1,
                    "local_param_2": 1,
                    "local_var4": 1,
                    "new_param2": 1,
                    "output7": 1,
                    "param8": 1,
                    "param_2_copy": 1,
                    "source2_copy": 1,
                    "source_value2_copy": 1,
                    "temp2": 1,
                    "temp_2": 1,
                    "var2": 2,
                    "var7": 1,
                    "var_7": 1
                },
                "local_88": {
                    "arg1": 2,
                    "arg1_copy": 1,
                    "condition1": 2,
                    "copy1": 1,
                    "copy_of_param_a": 1,
                    "input1": 1,
                    "input1_copy": 2,
                    "input_1": 1,
                    "input_1_copy": 1,
                    "input_param_1_copy": 1,
                    "local_data1": 1,
                    "local_flag1": 1,
                    "local_input1": 1,
                    "local_input_1": 1,
                    "local_param_1": 1,
                    "local_var3": 1,
                    "new_param1": 1,
                    "output1": 1,
                    "param7": 1,
                    "param_1_copy": 1,
                    "source1_copy": 1,
                    "source_value1_copy": 1,
                    "temp1": 1,
                    "temp_1": 1,
                    "var1": 2,
                    "var6": 1,
                    "var_6": 1
                },
                "local_90": {
                    "arg5": 1,
                    "arg6": 1,
                    "arg_14": 1,
                    "argument6": 1,
                    "buffer_data5": 1,
                    "input_param_14_copy": 1,
                    "local_data_6": 1,
                    "local_param6": 1,
                    "local_param_14": 1,
                    "local_ptr7": 1,
                    "local_value5": 1,
                    "local_var5": 1,
                    "local_variable7": 1,
                    "output6": 1,
                    "param14_copy": 1,
                    "param6": 2,
                    "param6_copy": 1,
                    "param_14": 2,
                    "param_14_copy": 2,
                    "param_n_copy": 1,
                    "param_value6": 1,
                    "target6_copy": 1,
                    "temp5": 1,
                    "value5": 1,
                    "var5": 2,
                    "var_14_copy": 1,
                    "var_5": 1
                },
                "local_98": {
                    "arg4": 1,
                    "arg5": 1,
                    "arg_13": 1,
                    "argument5": 1,
                    "buffer_data4": 1,
                    "input_param_13_copy": 1,
                    "local_data_5": 1,
                    "local_param5": 1,
                    "local_param_13": 1,
                    "local_ptr6": 1,
                    "local_value4": 1,
                    "local_var4": 1,
                    "local_variable6": 1,
                    "output5": 1,
                    "param13_copy": 1,
                    "param5": 2,
                    "param5_copy": 1,
                    "param_13": 2,
                    "param_13_copy": 2,
                    "param_m_copy": 1,
                    "param_value5": 1,
                    "target5_copy": 1,
                    "temp4": 1,
                    "value4": 1,
                    "var4": 2,
                    "var_13_copy": 1,
                    "var_4": 1
                },
                "local_a0": {
                    "arg3": 1,
                    "arg4": 1,
                    "arg_12": 1,
                    "argument4": 1,
                    "buffer_data3": 1,
                    "input_param_12_copy": 1,
                    "local_data_4": 1,
                    "local_param4": 1,
                    "local_param_12": 1,
                    "local_ptr5": 1,
                    "local_value3": 1,
                    "local_var3": 1,
                    "local_variable5": 1,
                    "output4": 1,
                    "param12_copy": 1,
                    "param4": 2,
                    "param4_copy": 1,
                    "param_12": 2,
                    "param_12_copy": 2,
                    "param_l_copy": 1,
                    "param_value4": 1,
                    "target4_copy": 1,
                    "temp3": 1,
                    "value3": 1,
                    "var3": 2,
                    "var_12_copy": 1,
                    "var_3": 1
                },
                "local_a8": {
                    "arg2": 1,
                    "arg3": 1,
                    "arg_11": 1,
                    "argument3": 1,
                    "buffer_data2": 1,
                    "input_param_11_copy": 1,
                    "local_data_3": 1,
                    "local_param3": 1,
                    "local_param_11": 1,
                    "local_ptr4": 1,
                    "local_value2": 1,
                    "local_var2": 1,
                    "local_variable4": 1,
                    "output3": 1,
                    "param11_copy": 1,
                    "param3": 2,
                    "param3_copy": 1,
                    "param_11": 2,
                    "param_11_copy": 2,
                    "param_k_copy": 1,
                    "param_value3": 1,
                    "target3_copy": 1,
                    "temp2": 1,
                    "value2": 1,
                    "var2": 2,
                    "var_11_copy": 1,
                    "var_2": 1
                },
                "local_b0": {
                    "arg1": 1,
                    "arg2": 1,
                    "arg_10": 1,
                    "argument2": 1,
                    "buffer_data1": 1,
                    "input_param_10_copy": 1,
                    "local_data_2": 1,
                    "local_param2": 1,
                    "local_param_10": 1,
                    "local_ptr3": 1,
                    "local_value1": 1,
                    "local_var1": 1,
                    "local_variable3": 1,
                    "output2": 1,
                    "param10_copy": 1,
                    "param2": 2,
                    "param2_copy": 1,
                    "param_10": 2,
                    "param_10_copy": 2,
                    "param_j_copy": 1,
                    "param_value2": 1,
                    "target2_copy": 1,
                    "temp1": 1,
                    "value1": 1,
                    "var1": 2,
                    "var_1": 1,
                    "var_10_copy": 1
                },
                "local_b8": {
                    "buffer": 4,
                    "data": 2,
                    "input_buffer": 1,
                    "local_array": 4,
                    "local_array3": 1,
                    "local_buffer": 7,
                    "local_data": 1,
                    "temp_buffer": 5,
                    "temporary_buffer": 4
                },
                "local_c8": {
                    "buffer": 5,
                    "local_array2": 2,
                    "local_b8_ptr": 1,
                    "local_buffer": 12,
                    "local_buffer_ptr": 1,
                    "local_destination": 1,
                    "local_pointer": 1,
                    "local_ptr2": 1,
                    "local_storage": 1,
                    "local_var3": 1,
                    "local_var_c8": 1,
                    "pointer2": 1,
                    "ptr2": 2
                },
                "local_d0": {
                    "address": 1,
                    "buffer": 9,
                    "buffer_pointer": 2,
                    "buffer_ptr": 4,
                    "local_array1": 2,
                    "local_buffer": 1,
                    "local_param_ptr": 1,
                    "local_ptr1": 1,
                    "local_source": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "ptr1": 2,
                    "stack_pointer": 1,
                    "stack_ptr": 3
                },
                "local_d4": {
                    "constant": 1,
                    "copy_size": 1,
                    "length": 4,
                    "local_buffer": 1,
                    "local_buffer_length": 1,
                    "local_length": 1,
                    "local_param_length2": 1,
                    "local_size2": 1,
                    "local_value": 1,
                    "local_var2": 2,
                    "local_var_d4": 1,
                    "local_variable2": 1,
                    "loop_length": 1,
                    "offset": 4,
                    "size": 2,
                    "temp": 1,
                    "value": 1,
                    "value2": 1
                },
                "local_d8": {
                    "buffer_length": 1,
                    "buffer_size": 5,
                    "count": 3,
                    "length": 5,
                    "local_count": 1,
                    "local_counter": 1,
                    "local_param_length": 1,
                    "local_size1": 1,
                    "local_var1": 2,
                    "local_variable1": 1,
                    "size": 10
                },
                "param_1": {
                    "arg1": 2,
                    "condition_check": 1,
                    "data1": 2,
                    "entry_point": 1,
                    "first_param": 1,
                    "flag": 1,
                    "flag1": 1,
                    "input1": 9,
                    "input_1": 5,
                    "input_param_1": 1,
                    "new_param1": 1,
                    "param_1": 1,
                    "source1": 1,
                    "source_param": 1,
                    "source_value1": 1,
                    "value1": 1
                },
                "param_10": {
                    "arg1": 1,
                    "data2": 3,
                    "data_2": 1,
                    "input2": 2,
                    "input_param_10": 1,
                    "param1": 1,
                    "param10": 1,
                    "param2": 7,
                    "param_10": 5,
                    "param_pointer2": 1,
                    "param_ptr2": 1,
                    "param_reference2": 1,
                    "pointer_2": 1,
                    "target2": 1,
                    "var1": 1,
                    "var2": 1,
                    "var_10": 1
                },
                "param_11": {
                    "arg2": 1,
                    "data3": 3,
                    "data_3": 1,
                    "input3": 2,
                    "input_param_11": 1,
                    "param11": 1,
                    "param2": 1,
                    "param3": 7,
                    "param_11": 5,
                    "param_pointer3": 1,
                    "param_ptr3": 1,
                    "param_reference3": 1,
                    "pointer_3": 1,
                    "target3": 1,
                    "var2": 1,
                    "var3": 1,
                    "var_11": 1
                },
                "param_12": {
                    "arg3": 1,
                    "data4": 3,
                    "data_4": 1,
                    "input4": 2,
                    "input_param_12": 1,
                    "param12": 1,
                    "param3": 1,
                    "param4": 7,
                    "param_12": 5,
                    "param_pointer4": 1,
                    "param_ptr4": 1,
                    "param_reference4": 1,
                    "pointer_4": 1,
                    "target4": 1,
                    "var3": 1,
                    "var4": 1,
                    "var_12": 1
                },
                "param_13": {
                    "arg4": 1,
                    "data5": 3,
                    "data_5": 1,
                    "input5": 2,
                    "input_param_13": 1,
                    "param13": 1,
                    "param4": 1,
                    "param5": 7,
                    "param_13": 5,
                    "param_pointer5": 1,
                    "param_ptr5": 1,
                    "param_reference5": 1,
                    "pointer_5": 1,
                    "target5": 1,
                    "var4": 1,
                    "var5": 1,
                    "var_13": 1
                },
                "param_14": {
                    "arg5": 1,
                    "data6": 3,
                    "data_6": 1,
                    "input6": 2,
                    "input_param_14": 1,
                    "param14": 1,
                    "param5": 1,
                    "param6": 7,
                    "param_14": 5,
                    "param_pointer6": 1,
                    "param_ptr6": 1,
                    "param_reference6": 1,
                    "pointer_6": 1,
                    "target6": 1,
                    "var5": 1,
                    "var6": 1,
                    "var_14": 1
                },
                "param_2": {
                    "arg2": 2,
                    "data2": 2,
                    "dest_param": 1,
                    "flag2": 1,
                    "input1": 2,
                    "input2": 9,
                    "input_2": 5,
                    "input_param_2": 1,
                    "new_param2": 1,
                    "param_2": 1,
                    "second_param": 1,
                    "source2": 1,
                    "source_value2": 1,
                    "value1": 1,
                    "value2": 1
                },
                "param_3": {
                    "arg3": 2,
                    "data3": 2,
                    "flag3": 1,
                    "input2": 2,
                    "input3": 9,
                    "input_3": 5,
                    "input_param_3": 1,
                    "length_param": 1,
                    "new_param3": 1,
                    "param_3": 1,
                    "source3": 1,
                    "source_value3": 1,
                    "third_param": 1,
                    "value2": 1,
                    "value3": 1
                },
                "param_4": {
                    "arg4": 2,
                    "data4": 2,
                    "flag4": 1,
                    "fourth_param": 1,
                    "input3": 2,
                    "input4": 9,
                    "input_4": 5,
                    "input_param_4": 1,
                    "new_param4": 1,
                    "param_4": 2,
                    "source4": 1,
                    "source_value4": 1,
                    "value3": 1,
                    "value4": 1
                },
                "param_5": {
                    "arg5": 2,
                    "data5": 2,
                    "fifth_param": 1,
                    "flag5": 1,
                    "input4": 2,
                    "input5": 9,
                    "input_5": 5,
                    "input_param_5": 1,
                    "new_param5": 1,
                    "param_5": 2,
                    "source5": 1,
                    "source_value5": 1,
                    "value4": 1,
                    "value5": 1
                },
                "param_6": {
                    "arg6": 2,
                    "data6": 2,
                    "flag6": 1,
                    "input5": 2,
                    "input6": 9,
                    "input_6": 5,
                    "input_param_6": 1,
                    "new_param6": 1,
                    "param_6": 2,
                    "sixth_param": 1,
                    "source6": 1,
                    "source_value6": 1,
                    "value5": 1,
                    "value6": 1
                },
                "param_7": {
                    "arg7": 2,
                    "data7": 2,
                    "flag7": 1,
                    "input6": 2,
                    "input7": 9,
                    "input_7": 5,
                    "input_param_7": 1,
                    "new_param7": 1,
                    "param_7": 2,
                    "seventh_param": 1,
                    "source7": 1,
                    "source_value7": 1,
                    "value6": 1,
                    "value7": 1
                },
                "param_8": {
                    "arg8": 2,
                    "data8": 2,
                    "eighth_param": 1,
                    "flag8": 1,
                    "input7": 2,
                    "input8": 9,
                    "input_8": 5,
                    "input_param_8": 1,
                    "new_param8": 1,
                    "param_8": 2,
                    "source8": 1,
                    "source_value8": 1,
                    "value7": 1,
                    "value8": 1
                },
                "param_9": {
                    "data": 3,
                    "data1": 3,
                    "data_1": 1,
                    "data_ptr": 2,
                    "input1": 2,
                    "input_param_9": 1,
                    "original_param": 1,
                    "param1": 7,
                    "param9": 1,
                    "param_9": 2,
                    "param_list": 1,
                    "param_pointer1": 1,
                    "param_ptr1": 1,
                    "param_reference1": 1,
                    "pointer_1": 1,
                    "target1": 1,
                    "var1": 1
                }
            },
            "called": [
                "FUN_001038b0"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid extract_and_process_data_00103910(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 input5,undefined4 input6,undefined4 input7,undefined4 input8,\n                 undefined8 param1,undefined8 param2,undefined8 param3,undefined8 param4,\n                 undefined8 param5,undefined8 param6)\n\n{\n  char flag;\n  undefined4 size;\n  undefined4 offset;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined local_buffer [8];\n  undefined8 var1;\n  undefined8 param3;\n  undefined8 param4;\n  undefined8 var4;\n  undefined8 param_14;\n  undefined4 var1;\n  undefined4 condition2;\n  undefined4 condition3;\n  undefined4 arg4;\n  undefined4 arg5;\n  undefined4 condition6;\n  undefined4 condition7;\n  undefined4 var8;\n  \n  if (flag != '\\0') {\n    var1 = input1;\n    condition2 = input2;\n    condition3 = input3;\n    arg4 = input4;\n    arg5 = input5;\n    condition6 = input6;\n    condition7 = input7;\n    var8 = input8;\n  }\n  buffer = &stack0x00000008;\n  size = 8;\n  local_buffer = local_buffer;\n  offset = 0x30;\n  var1 = param2;\n  param3 = param3;\n  param4 = param4;\n  var4 = param5;\n  param_14 = param6;\n  FUN_001038b0(param1,&size);\n  return;\n}\n\n",
            "current_name": "extract_and_process_data_00103910",
            "entrypoint": "0x00103910",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103910": "extract_and_process_data_00103910",
                "in_AL": "flag",
                "local_18": "var8",
                "local_28": "condition7",
                "local_38": "condition6",
                "local_48": "arg5",
                "local_58": "arg4",
                "local_68": "condition3",
                "local_78": "condition2",
                "local_88": "var1",
                "local_90": "param_14",
                "local_98": "var4",
                "local_a0": "param4",
                "local_a8": "param3",
                "local_b0": "var1",
                "local_b8": "local_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "offset",
                "local_d8": "size",
                "param_1": "input1",
                "param_10": "param2",
                "param_11": "param3",
                "param_12": "param4",
                "param_13": "param5",
                "param_14": "param6",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "param_7": "input7",
                "param_8": "input8",
                "param_9": "param1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001039e0": {
            "called": [
                "_ITM_deregisterTMCloneTable"
            ],
            "calling": [
                "_FINI_0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x001039f3) */\n/* WARNING: Removing unreachable block (ram,0x001039ff) */\n\nvoid FUNC_001039e0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_001039e0",
            "entrypoint": "0x001039e0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_001039e0": "FUNC_001039e0"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103a10": {
            "called": [
                "_ITM_registerTMCloneTable"
            ],
            "calling": [
                "_INIT_0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00103a34) */\n/* WARNING: Removing unreachable block (ram,0x00103a40) */\n\nvoid FUNC_00103a10(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103a10",
            "entrypoint": "0x00103a10",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103a10": "FUNC_00103a10"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103aa0": {
            "additional_data": {
                "DAT_00108350": {
                    "dat_var9": 1
                },
                "DAT_00108354": {
                    "dat_var10": 1
                },
                "DAT_00108358": {
                    "dat_var8": 1
                },
                "DAT_00108360": {
                    "dat_var7": 1
                },
                "DAT_00108368": {
                    "dat_var6": 1
                },
                "DAT_00108370": {
                    "dat_var5": 1
                },
                "DAT_00108371": {
                    "dat_var4": 1
                },
                "DAT_00108372": {
                    "dat_var2": 1
                },
                "DAT_00108373": {
                    "dat_var": 1
                },
                "DAT_00108374": {
                    "dat_var3": 1
                },
                "DAT_00108378": {
                    "dat_str": 1
                },
                "FUN_001030c0": {
                    "print_message": 1,
                    "print_to_output_file": 1
                },
                "FUN_00103240": {
                    "parse_and_process_header": 1
                },
                "FUN_00103aa0": {
                    "decompile_and_improve": 1,
                    "extract_and_print_strings": 1,
                    "extract_strings": 7,
                    "extract_strings_from_file": 9,
                    "extract_strings_from_files": 2,
                    "parse_and_process_files": 1,
                    "parse_and_read_strings": 1,
                    "parse_files": 2,
                    "parse_files_and_strings": 1,
                    "parse_strings": 1,
                    "process_files": 1,
                    "strings_extraction": 1
                },
                "FUN_00104a60": {
                    "print_error_and_exit": 1,
                    "print_error_message": 1
                },
                "LAB_00103fa6": {
                    "goto_label": 1
                },
                "VAR_00108350": {
                    "unicode_mode": 1
                },
                "VAR_00108354": {
                    "base": 1
                },
                "VAR_00108358": {
                    "section_filter": 1
                },
                "VAR_00108360": {
                    "output_format": 1
                },
                "VAR_00108368": {
                    "input_format": 1
                },
                "VAR_00108370": {
                    "force_printable": 1
                },
                "VAR_00108371": {
                    "decimal_mode": 1
                },
                "VAR_00108372": {
                    "header_mode": 1
                },
                "VAR_00108373": {
                    "print_header": 1
                },
                "VAR_00108374": {
                    "min_string_length": 1
                },
                "VAR_00108378": {
                    "program_name": 1
                },
                "__errno_location": {
                    "get_error_location": 1,
                    "get_error_number_location": 1,
                    "set_error_location": 1
                },
                "__ptr": {
                    "buffer1": 1,
                    "buffer_ptr": 1,
                    "byte_pointer2": 2,
                    "byte_pointer_2": 1,
                    "byte_ptr": 5,
                    "byte_ptr1": 4,
                    "byte_ptr2": 1,
                    "dynamic_byte_ptr": 1,
                    "file_contents": 1,
                    "new_byte_array": 1,
                    "new_string": 1,
                    "pointer2": 1,
                    "ptr": 2,
                    "ptr2": 1,
                    "ptr_byte": 2,
                    "source": 1,
                    "str": 1,
                    "string_buffer": 2,
                    "string_pointer": 1
                },
                "__src": {
                    "bytes_src": 1,
                    "dest": 1,
                    "dynamic_long_ptr": 1,
                    "extracted_strings": 1,
                    "lines": 1,
                    "lines_buffer": 1,
                    "long_array_ptr2": 1,
                    "long_pointer2": 1,
                    "long_ptr1": 1,
                    "long_ptr2": 1,
                    "ptr_long_var14": 1,
                    "source": 3,
                    "source_array": 2,
                    "source_pointer": 2,
                    "source_strings": 1,
                    "src": 2,
                    "src2": 1,
                    "src_ptr": 3,
                    "str_ptr": 1,
                    "string_array": 2,
                    "string_list": 1
                },
                "__stream": {
                    "file": 7,
                    "file_ptr": 2,
                    "file_ptr1": 1,
                    "file_stream": 17,
                    "file_stream1": 1,
                    "stream": 2
                },
                "__stream_00": {
                    "file": 1,
                    "file2": 3,
                    "file_2": 1,
                    "file_ptr1": 1,
                    "file_ptr16": 1,
                    "file_ptr2": 1,
                    "file_stream0": 1,
                    "file_stream1": 1,
                    "file_stream2": 9,
                    "file_stream_00": 2,
                    "file_stream_2": 1,
                    "new_file_stream": 1,
                    "secondary_file_stream": 1,
                    "stream": 1,
                    "stream2": 1,
                    "stream_00": 1,
                    "temp_file": 1,
                    "temp_stream": 1
                },
                "_optarg": {
                    "optarg": 1
                },
                "_optind": {
                    "optind": 1
                },
                "_stderr": {
                    "output_stream": 1,
                    "stderr": 1
                },
                "_stdout": {
                    "standard_output": 1,
                    "stdout": 1
                },
                "bVar2": {
                    "byte1": 2,
                    "byte_val1": 2,
                    "byte_var": 3,
                    "byte_var1": 5,
                    "byte_var2": 11,
                    "byte_var_2": 1,
                    "current_byte2": 1,
                    "next_byte": 2,
                    "prev_byte": 1,
                    "var2": 1
                },
                "bVar25": {
                    "backslash": 1,
                    "bool1": 2,
                    "bool_val1": 1,
                    "bool_var": 1,
                    "bool_var1": 8,
                    "bool_var25": 7,
                    "bool_var_25": 1,
                    "escaped": 1,
                    "escaped_quote": 1,
                    "escaping_single_quote": 1,
                    "escaping_singlequote": 1,
                    "flag1": 1
                },
                "bVar27": {
                    "bool2": 2,
                    "bool_val2": 1,
                    "bool_var2": 9,
                    "bool_var27": 6,
                    "bool_var_27": 1,
                    "escaping_backslash": 1,
                    "escaping_double_quote": 1,
                    "flag2": 1,
                    "inside_string": 1,
                    "single_quote": 2
                },
                "bVar28": {
                    "bool3": 2,
                    "bool_val3": 1,
                    "bool_var28": 6,
                    "bool_var3": 9,
                    "bool_var_28": 1,
                    "double_quote": 2,
                    "escaping_doublequote": 1,
                    "flag3": 1,
                    "inside_quote": 1,
                    "inside_single_quote": 1
                },
                "bVar3": {
                    "byte2": 2,
                    "byte_val2": 2,
                    "byte_var2": 8,
                    "byte_var3": 11,
                    "byte_var_3": 1,
                    "current_byte": 1,
                    "current_byte3": 1,
                    "current_char": 2,
                    "var3": 1
                },
                "bfd_check_format": {
                    "bfd_check_file_format": 1,
                    "check_bfd_format": 2
                },
                "bfd_close": {
                    "bfd_close_file": 1,
                    "close_bfd": 1
                },
                "bfd_errmsg": {
                    "get_bfd_error_msg": 1
                },
                "bfd_get_error": {
                    "bfd_get_error_code": 1,
                    "get_bfd_error": 2
                },
                "bfd_init": {
                    "bfd_init": 1,
                    "bfd_initialize": 1,
                    "init_bfd": 1
                },
                "bfd_malloc_and_get_section": {
                    "malloc_and_get_bfd_section": 1
                },
                "bfd_set_default_target": {
                    "set_default_target": 2
                },
                "bfd_set_error_program_name": {
                    "set_error_program_name": 5
                },
                "bindtextdomain": {
                    "bind_text_domain": 4,
                    "bind_text_domain2": 1
                },
                "binutils_version_format": {
                    "binutils_version_format": 1
                },
                "cVar4": {
                    "char1": 2,
                    "char_val": 1,
                    "char_val1": 1,
                    "char_var": 8,
                    "char_var1": 2,
                    "char_var4": 10,
                    "char_var_4": 1,
                    "character": 1,
                    "current_char": 1,
                    "quote_char": 1,
                    "var4": 1
                },
                "dcgettext": {
                    "get_dc_text": 1,
                    "get_msg_from_catalog": 1,
                    "get_text_translation": 1
                },
                "exit": {
                    "execute_exit": 1,
                    "exit_program": 1,
                    "force_exit": 1
                },
                "fclose": {
                    "close_file": 2
                },
                "fflush": {
                    "flush_output_file": 1
                },
                "fopen": {
                    "file_open": 1,
                    "open_file": 2
                },
                "fprintf": {
                    "formatted_print_to_file": 1,
                    "print_to_file": 1
                },
                "fread": {
                    "read_file": 1
                },
                "free": {
                    "deallocate_memory": 1,
                    "free_memory": 1,
                    "release_memory": 1
                },
                "fseek": {
                    "file_seek": 2,
                    "seek_file": 1
                },
                "ftell": {
                    "tell_file": 1
                },
                "fun_00103240": {
                    "output_section": 1
                },
                "getopt_long": {
                    "get_long_option": 1,
                    "get_option_long": 1,
                    "parse_options": 1
                },
                "gnu_copyright_format": {
                    "gnu_copyright_format": 1
                },
                "gnu_version_format": {
                    "gnu_version_format": 1
                },
                "gotoLAB_0010407f": {
                    "goto_label2": 1
                },
                "iVar5": {
                    "counter": 1,
                    "current_int": 1,
                    "i": 1,
                    "index": 9,
                    "index_var": 4,
                    "index_var5": 2,
                    "index_var_5": 1,
                    "int_var": 2,
                    "int_var1": 2,
                    "int_var5": 5,
                    "iter": 1,
                    "result_code": 1
                },
                "iVar7": {
                    "counter": 1,
                    "current_int2": 1,
                    "i": 3,
                    "i_var1": 1,
                    "index": 2,
                    "index2": 1,
                    "index_var": 1,
                    "index_var7": 2,
                    "index_var_7": 1,
                    "int_var2": 2,
                    "int_var7": 3,
                    "iteration_var": 1,
                    "j": 1,
                    "loop_var": 3,
                    "loop_var7": 1,
                    "opt": 1,
                    "return_value": 1,
                    "size": 1,
                    "temp_var1": 1,
                    "temp_var_2": 1
                },
                "invalid_base_format": {
                    "invalid_base_format": 1
                },
                "invalid_directory_error_format": {
                    "invalid_directory_error_format": 1
                },
                "invalid_file_arg_error_format": {
                    "invalid_file_arg_error_format": 1
                },
                "invalid_integer_error_format": {
                    "invalid_integer_error_format": 1
                },
                "invalid_min_string_length_format": {
                    "invalid_min_string_length_format": 1
                },
                "invalid_option_error_format": {
                    "invalid_option_error_format": 1
                },
                "invalid_output_format_format": {
                    "invalid_output_format_format": 1
                },
                "invalid_section_filter_format": {
                    "invalid_section_filter_format": 1
                },
                "invalid_stat_error_format": {
                    "invalid_stat_error_format": 1
                },
                "invalid_too_many_files_error_format": {
                    "invalid_too_many_files_error_format": 1
                },
                "invalid_unicode_arg_error_format": {
                    "invalid_unicode_arg_error_format": 1
                },
                "is_directory_error_format": {
                    "is_directory_error_format": 1
                },
                "lVar11": {
                    "current_long": 2,
                    "current_string": 1,
                    "file_length": 1,
                    "len": 1,
                    "length": 4,
                    "length_var": 2,
                    "long_val1": 1,
                    "long_var": 3,
                    "long_var1": 6,
                    "long_var11": 6,
                    "long_var_11": 1,
                    "result": 1,
                    "temp_var": 1
                },
                "lVar22": {
                    "current_long2": 1,
                    "index": 2,
                    "index2": 1,
                    "length2": 1,
                    "length_var2": 1,
                    "length_var22": 1,
                    "line_index": 1,
                    "long_val2": 1,
                    "long_var1": 1,
                    "long_var2": 6,
                    "long_var22": 5,
                    "long_var_22": 1,
                    "string_index": 1,
                    "temp_var1": 1,
                    "temp_var_6": 1,
                    "tmp_length": 1
                },
                "license_info_format": {
                    "license_info_format": 1
                },
                "local_110": {
                    "curr_line": 1,
                    "current_long3": 1,
                    "current_string_index": 1,
                    "extracted_strings_index": 1,
                    "index3": 2,
                    "line_count": 1,
                    "local_int": 1,
                    "local_long": 2,
                    "local_long2": 1,
                    "local_long_110": 1,
                    "local_long_var": 1,
                    "local_long_var110": 1,
                    "local_val3": 1,
                    "local_var110": 2,
                    "local_var3": 1,
                    "long_local_110": 1,
                    "long_var3": 2,
                    "long_var4": 1,
                    "long_var_2": 1,
                    "num_processed_paths": 1,
                    "string_count": 1,
                    "string_index": 1,
                    "temp_long_var": 1,
                    "temp_var2": 1
                },
                "local_118": {
                    "buffer_size": 1,
                    "file_buffer_size": 1,
                    "file_content_length": 1,
                    "line_length": 1,
                    "local_size": 2,
                    "local_size1": 1,
                    "local_size118": 1,
                    "local_size_118": 1,
                    "local_size_t": 1,
                    "local_size_var1": 1,
                    "local_size_var118": 1,
                    "local_val2": 1,
                    "local_var118": 1,
                    "local_var2": 1,
                    "size": 1,
                    "size3": 1,
                    "size4": 1,
                    "size_val": 1,
                    "size_var": 1,
                    "size_var3": 1,
                    "size_var_local_118": 1,
                    "string_buffer_length": 1,
                    "string_length": 2,
                    "string_length3": 1,
                    "temp_size_var": 1,
                    "total_size": 1
                },
                "local_120": {
                    "current_u_long3": 1,
                    "limit": 1,
                    "local_u_long120": 1,
                    "local_ulong": 3,
                    "local_ulong1": 1,
                    "local_ulong_120": 1,
                    "local_ulong_var1": 1,
                    "local_ulong_var120": 1,
                    "local_val1": 1,
                    "local_var1": 1,
                    "local_var120": 1,
                    "long_var_1": 1,
                    "max_file_count": 1,
                    "max_file_size": 1,
                    "max_files": 1,
                    "max_string_length": 1,
                    "min_string_length": 1,
                    "remaining": 1,
                    "remaining_files": 2,
                    "size3": 1,
                    "string_length": 1,
                    "temp_ulong_var": 1,
                    "u_long_var3": 1,
                    "ulong_local_120": 1,
                    "ulong_val2": 1,
                    "ulong_var4": 1
                },
                "local_128": {
                    "buffer": 2,
                    "buffer2": 1,
                    "byte_pointer5": 1,
                    "byte_ptr4": 2,
                    "current_byte_array": 1,
                    "data": 1,
                    "file_buffer": 2,
                    "file_content": 2,
                    "line_buffer": 1,
                    "local_array2": 1,
                    "local_byte1": 1,
                    "local_byte128": 1,
                    "local_byte_pointer": 1,
                    "local_byte_pointer_128": 1,
                    "local_byte_ptr": 2,
                    "local_byte_ptr1": 1,
                    "local_byte_var128": 1,
                    "local_ptr3": 1,
                    "local_var128": 1,
                    "ptr9": 1,
                    "ptr_byte_local_128": 1,
                    "string_buffer": 1,
                    "temp_byte_array": 1,
                    "temp_byte_ptr1": 1
                },
                "local_138": {
                    "current_file_path": 1,
                    "current_u_long_array": 1,
                    "format_argument": 1,
                    "local_138": 1,
                    "local_file_ptr": 1,
                    "local_long1": 1,
                    "local_pointer": 1,
                    "local_pointer2": 1,
                    "local_ptr1": 1,
                    "local_ptr2": 1,
                    "local_str_ptr2": 1,
                    "local_undefined8_138": 1,
                    "local_var1": 1,
                    "local_var138": 2,
                    "long_var3": 1,
                    "malloced_file_names_ptr": 1,
                    "min_length": 1,
                    "optarg": 1,
                    "pointer6": 1,
                    "ptr11": 1,
                    "ptr8": 1,
                    "quote_option": 1,
                    "section_count": 1,
                    "selected_files": 1,
                    "target": 1,
                    "temp_long": 1,
                    "temp_var1": 1,
                    "undefined8_var1": 1
                },
                "local_140": {
                    "argv": 1,
                    "argv4": 1,
                    "current_long_array": 1,
                    "current_option": 1,
                    "current_path_index": 1,
                    "file_array": 1,
                    "file_index": 1,
                    "file_paths": 1,
                    "file_ptr": 1,
                    "file_ptrs": 1,
                    "files": 1,
                    "local_array": 1,
                    "local_param": 1,
                    "local_pointer1": 1,
                    "local_pointer2": 1,
                    "local_pointer_140": 1,
                    "local_pointers": 1,
                    "local_ptr1": 1,
                    "local_ptr140": 1,
                    "local_size_ptr": 1,
                    "local_str_ptr": 1,
                    "long_pointer5": 1,
                    "long_ptr3": 1,
                    "long_ptr6": 1,
                    "ptr10": 1,
                    "ptr7": 1,
                    "ptr_local_var140": 1,
                    "ptr_long_local_140": 1,
                    "temp_array_2": 1
                },
                "local_c8": {
                    "file_info": 1,
                    "file_metadata": 1,
                    "file_stat": 1,
                    "file_stats": 1,
                    "file_status": 2,
                    "local_stat": 5,
                    "local_stat1": 1,
                    "local_stat_c8": 2,
                    "local_stat_var": 1,
                    "local_stat_varc8": 1,
                    "local_var4": 1,
                    "local_varc8": 1,
                    "stat_buffer": 1,
                    "stat_data": 2,
                    "stat_info": 1,
                    "stat_struct": 2,
                    "stat_var": 2,
                    "stat_var1": 1,
                    "stat_var_local_c8": 1
                },
                "local_d0": {
                    "buffer3": 1,
                    "dummy_var": 1,
                    "local_d0": 1,
                    "local_ptr4": 1,
                    "local_ptr_d0": 1,
                    "local_ptr_vard0": 1,
                    "local_var1": 1,
                    "local_var3": 1,
                    "local_vard0": 1,
                    "local_void1": 1,
                    "local_void_pointer": 1,
                    "local_void_pointer_d0": 2,
                    "local_void_ptr": 3,
                    "pointer7": 1,
                    "ptr10": 1,
                    "sec_data": 1,
                    "section_buffer": 1,
                    "section_data": 3,
                    "section_pointer": 1,
                    "void_pointer1": 1,
                    "void_ptr1": 2,
                    "void_var": 1
                },
                "local_d8": {
                    "char_array": 1,
                    "char_pointer3": 1,
                    "char_ptr3": 2,
                    "curr_file": 1,
                    "error_message": 1,
                    "error_str": 1,
                    "file_descriptor": 1,
                    "file_path": 1,
                    "local_char1": 1,
                    "local_char_pointer_d8": 2,
                    "local_char_ptr": 2,
                    "local_char_ptr1": 2,
                    "local_char_vard8": 1,
                    "local_ptr_d8": 1,
                    "local_str_ptr1": 1,
                    "local_string_array": 1,
                    "local_var2": 1,
                    "local_vard8": 1,
                    "ptr12": 1,
                    "ptr_char_local_d8": 1,
                    "str3": 1,
                    "warning2": 1,
                    "warning_message": 1,
                    "warning_reason": 1
                },
                "malloc": {
                    "allocate_memory": 1
                },
                "memcpy": {
                    "copy_memory": 2
                },
                "memmove": {
                    "move_memory": 2
                },
                "no_such_file_warning_format": {
                    "no_such_file_warning_format": 1
                },
                "open_file_error_format": {
                    "open_file_error_format": 1
                },
                "option_usage_error_format": {
                    "option_usage_error_format": 1
                },
                "param_1": {
                    "argc": 29,
                    "input_file_count": 1,
                    "num_of_args": 1
                },
                "param_2": {
                    "args": 1,
                    "argv": 29,
                    "input_files": 1
                },
                "pbVar1": {
                    "byte_pointer1": 5,
                    "byte_pointer_1": 1,
                    "byte_ptr1": 2,
                    "byte_var1": 2,
                    "current_byte": 5,
                    "pointer1": 1,
                    "ptr": 3,
                    "ptr1": 5,
                    "ptr_byte": 1,
                    "ptr_byte1": 3
                },
                "pbVar19": {
                    "buffer_ptr": 1,
                    "byte_pointer2": 2,
                    "byte_pointer3": 2,
                    "byte_pointer_3": 1,
                    "byte_ptr": 1,
                    "byte_ptr1": 1,
                    "byte_ptr19": 1,
                    "byte_ptr2": 3,
                    "byte_ptr3": 1,
                    "current_byte": 1,
                    "current_char": 2,
                    "current_ptr": 1,
                    "pointer3": 1,
                    "ptr2": 1,
                    "ptr3": 2,
                    "ptr5": 1,
                    "ptr_byte2": 1,
                    "ptr_byte_var19": 2,
                    "temp_byte_ptr": 1
                },
                "pbVar23": {
                    "byte_pointer23": 1,
                    "byte_pointer3": 2,
                    "byte_pointer4": 2,
                    "byte_pointer_4": 1,
                    "byte_ptr": 1,
                    "byte_ptr2": 1,
                    "byte_ptr23": 1,
                    "byte_ptr3": 2,
                    "byte_ptr4": 1,
                    "current_byte": 2,
                    "pointer4": 1,
                    "ptr3": 1,
                    "ptr4": 2,
                    "ptr7": 1,
                    "ptr_byte3": 1,
                    "ptr_byte_var23": 2,
                    "string_ptr": 1,
                    "tmp_ptr": 1
                },
                "pcVar20": {
                    "char_pointer1": 3,
                    "char_pointer_20": 1,
                    "char_ptr1": 3,
                    "char_ptr4": 1,
                    "current_file_name": 1,
                    "current_path": 1,
                    "current_string": 1,
                    "current_token": 1,
                    "file_name": 1,
                    "file_path": 1,
                    "message": 1,
                    "path": 1,
                    "ptr_char1": 1,
                    "ptr_char_var20": 2,
                    "str": 2,
                    "str3": 1,
                    "str_ptr": 1,
                    "str_ptr20": 1,
                    "str_var": 1,
                    "temp_char_ptr": 1
                },
                "pcVar24": {
                    "char_pointer2": 3,
                    "char_pointer_24": 1,
                    "char_ptr2": 4,
                    "char_var24": 1,
                    "err_msg": 1,
                    "error_prompt_string": 1,
                    "message": 1,
                    "message2": 1,
                    "ptr_char2": 1,
                    "ptr_char_var24": 2,
                    "str2": 2,
                    "str4": 1,
                    "str_ptr2": 1,
                    "str_ptr24": 1,
                    "str_var2": 1,
                    "warning": 1,
                    "warning_message": 2
                },
                "pcVar41": {
                    "str_var3": 1
                },
                "perror": {
                    "print_error": 1,
                    "print_error_message": 1
                },
                "piVar15": {
                    "current_int_ptr": 1,
                    "err_num": 1,
                    "errno_location": 1,
                    "errno_ptr": 3,
                    "error_code": 1,
                    "error_location": 1,
                    "error_num": 1,
                    "error_num_ptr": 1,
                    "int_pointer1": 3,
                    "int_pointer_15": 1,
                    "int_ptr": 4,
                    "int_ptr1": 3,
                    "int_ptr15": 1,
                    "p": 1,
                    "pointer3": 1,
                    "pointer_var15": 1,
                    "ptr2": 1,
                    "ptr_int_var15": 3
                },
                "plVar12": {
                    "arg_ptr": 1,
                    "argv": 2,
                    "argv2": 1,
                    "current_file": 2,
                    "current_long_array": 1,
                    "current_long_pointer": 1,
                    "file_list": 2,
                    "file_names": 2,
                    "file_paths": 1,
                    "long_array_ptr1": 1,
                    "long_pointer1": 1,
                    "long_ptr1": 1,
                    "param_array": 2,
                    "param_ptr": 2,
                    "paths": 1,
                    "pl": 1,
                    "pointer_list_12": 1,
                    "pointer_var12": 1,
                    "ptr": 1,
                    "ptr2": 1,
                    "ptr_long_var12": 3,
                    "ptr_var1": 1
                },
                "plVar16": {
                    "arg_ptr": 1,
                    "argv": 2,
                    "argv3": 1,
                    "current_data": 1,
                    "current_file": 1,
                    "current_file_name_ptr": 1,
                    "current_long_pointer2": 1,
                    "current_path": 1,
                    "file_list_var": 1,
                    "files_array": 1,
                    "long_array_ptr3": 1,
                    "long_ptr3": 1,
                    "param_2": 2,
                    "param_array2": 1,
                    "param_ptr1": 1,
                    "param_ptr16": 1,
                    "params": 1,
                    "pointer_list_16": 1,
                    "pointer_var16": 1,
                    "ptr3": 1,
                    "ptr_long_var16": 3,
                    "temp_pointer": 1
                },
                "plVar18": {
                    "current_line": 2,
                    "current_string": 1,
                    "current_string_ptr": 1,
                    "long_pointer3": 2,
                    "long_ptr1": 1,
                    "long_ptr4": 1,
                    "param_array3": 1,
                    "param_ptr18": 1,
                    "param_ptr2": 1,
                    "pl2": 1,
                    "pointed_list": 1,
                    "pointer_list_18": 1,
                    "ptr": 1,
                    "ptr4": 1,
                    "ptr_long_var18": 3,
                    "ptr_var3": 1,
                    "str_ptr2": 1,
                    "string_element": 1,
                    "temp_data_ptr": 1,
                    "temp_pointer2": 1
                },
                "ppuVar21": {
                    "arg_ind": 1,
                    "current_option": 1,
                    "optarg": 1,
                    "option": 1,
                    "option_ptr": 1,
                    "pointer_ptr": 1,
                    "ptr6": 1,
                    "ptr_ptr": 2,
                    "ptr_ptr_undef": 1,
                    "ptr_ptr_undef_var21": 2,
                    "undefined_double_pointer1": 1,
                    "undefined_pointer": 1,
                    "undefined_pointer1": 1,
                    "undefined_pointer_pointer_21": 1,
                    "undefined_ptr1": 1,
                    "undefined_ptr_ptr": 2,
                    "undefined_ptr_ptr1": 2,
                    "void_pointer_pointer1": 1,
                    "void_ptr_ptr21": 1
                },
                "printf": {
                    "formatted_print": 1
                },
                "puVar26": {
                    "current_section": 1,
                    "current_u_long_pointer": 1,
                    "p2": 1,
                    "pointer_ptr2": 1,
                    "ptr6": 1,
                    "ptr9": 1,
                    "ptr_ulong_var26": 1,
                    "ptr_undef_var26": 2,
                    "ptr_var26": 1,
                    "section": 1,
                    "section_header": 2,
                    "temp_var_7": 1,
                    "ulong_pointer1": 1,
                    "ulong_ptr": 1,
                    "ulong_ptr1": 1,
                    "ulong_ptr26": 1,
                    "undefined8_pointer1": 1,
                    "undefined8_pointer_26": 1,
                    "undefined8_ptr": 1,
                    "undefined_long_pointer1": 1,
                    "undefined_pointer2": 1,
                    "undefined_ptr2": 1,
                    "undefined_var3": 1,
                    "undefined_var_ptr": 1
                },
                "puVar43": {
                    "uint_ptr": 1
                },
                "result": {
                    "result": 1
                },
                "sVar10": {
                    "bytes_read": 7,
                    "size2": 5,
                    "size_var10": 7,
                    "size_var2": 8,
                    "size_var_10": 1,
                    "size_var_2": 1,
                    "string_length2": 1
                },
                "sVar9": {
                    "file_size": 5,
                    "length": 1,
                    "size1": 5,
                    "size_var": 2,
                    "size_var1": 6,
                    "size_var9": 7,
                    "size_var_1": 1,
                    "size_var_9": 1,
                    "string_len": 1,
                    "string_length1": 1
                },
                "setlocale": {
                    "set_local": 1,
                    "set_locale": 4
                },
                "stat": {
                    "file_stat": 1,
                    "get_file_stat": 1,
                    "get_file_status": 1
                },
                "stdin": {
                    "stdin": 1
                },
                "strcmp": {
                    "compare_string": 1,
                    "compare_strings": 1,
                    "string_compare": 1
                },
                "strerror": {
                    "get_error_description": 1,
                    "get_error_string": 1
                },
                "strlen": {
                    "get_string_length": 1,
                    "string_length": 2
                },
                "strstrinsg": {
                    "search_string": 1
                },
                "strtoul": {
                    "string_to_u_long": 1,
                    "string_to_ulong": 1,
                    "string_to_unsigned_long": 1
                },
                "textdomain": {
                    "set_domain": 1,
                    "text_domain": 4
                },
                "uVar13": {
                    "current_u_long": 1,
                    "file_index": 1,
                    "num_paths": 1,
                    "temp": 1,
                    "temp2": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "temp_var_4": 1,
                    "u_long_var1": 1,
                    "u_val2": 1,
                    "ulong_val": 1,
                    "ulong_var": 6,
                    "ulong_var1": 3,
                    "ulong_var13": 6,
                    "ulong_var_13": 1,
                    "unsigned_var13": 2,
                    "value": 1
                },
                "uVar14": {
                    "current_u_long2": 1,
                    "dcgettext_string": 1,
                    "error_description": 1,
                    "error_message": 2,
                    "error_msg": 1,
                    "error_prompt_string": 1,
                    "formatted_string": 1,
                    "str": 1,
                    "temp3": 1,
                    "temp_var4": 1,
                    "temp_var_5": 1,
                    "u_val3": 1,
                    "u_var": 1,
                    "uint_var14": 1,
                    "uint_var3": 1,
                    "ulong_var14": 3,
                    "ulong_var15": 1,
                    "ulong_var2": 3,
                    "undefined8_var_14": 1,
                    "undefined_var": 2,
                    "undefined_var1": 2,
                    "undefined_var14": 1,
                    "unsigned_var14": 1
                },
                "uVar17": {
                    "dcgettext_string1": 1,
                    "error_format": 1,
                    "error_message": 2,
                    "error_msg2": 1,
                    "format_string": 1,
                    "str2": 1,
                    "temp4": 1,
                    "temp_var5": 1,
                    "u_val4": 1,
                    "u_var2": 1,
                    "uint_var17": 1,
                    "ulong_var17": 4,
                    "ulong_var3": 2,
                    "undefined_var17": 1,
                    "undefined_var2": 3
                },
                "uVar42": {
                    "uint_var3": 1
                },
                "uVar6": {
                    "count": 6,
                    "counter": 1,
                    "current_u_int": 1,
                    "loop_var6": 1,
                    "temp_var": 4,
                    "temp_var1": 1,
                    "u": 1,
                    "u_int_var1": 1,
                    "uint_var": 3,
                    "uint_var1": 2,
                    "uint_var6": 5,
                    "uint_var_6": 1,
                    "unsigned_var6": 2
                },
                "uVar8": {
                    "current_u_int2": 1,
                    "error": 1,
                    "error_code": 2,
                    "error_var": 3,
                    "loop_var8": 1,
                    "result_var": 1,
                    "return_code": 1,
                    "temp": 1,
                    "temp_var3": 1,
                    "temp_var_3": 1,
                    "u": 1,
                    "u_int_var2": 1,
                    "u_val": 1,
                    "uint_var2": 5,
                    "uint_var8": 5,
                    "undefined4_var_8": 1,
                    "unsigned_var8": 2
                },
                "unaff_R12": {
                    "current_path_index": 1,
                    "file_count": 2,
                    "file_index": 1,
                    "free_string_ptr": 1,
                    "local_pointer1": 1,
                    "local_var1": 1,
                    "long_pointer4": 1,
                    "long_ptr2": 1,
                    "long_ptr5": 1,
                    "optind": 1,
                    "param_ptr_r12": 1,
                    "pointer5": 1,
                    "pointer_r12": 1,
                    "ptr5": 1,
                    "ptr8": 1,
                    "ptr_long_var_r12": 1,
                    "ptr_long_var_unaff_r12": 1,
                    "ptr_var4": 1,
                    "temp_array": 1,
                    "temp_pointer3": 1,
                    "unaff_long_pointer": 1,
                    "unaff_ptr": 1,
                    "unaff_r12": 2,
                    "unaff_var": 1,
                    "unaffected_r12": 1
                },
                "xexit": {
                    "exit_execution": 1,
                    "exit_program2": 1,
                    "force_exit": 1
                },
                "xmalloc_set_program_name": {
                    "set_program_name": 5
                },
                "xrealloc": {
                    "reallocate_memory": 1,
                    "x_reallocate": 1
                },
                "xstrdup": {
                    "duplicate_string": 1,
                    "x_str_dup": 1
                }
            },
            "called": [
                "strerror",
                "ftell",
                "ferror",
                "FUN_00103910",
                "xstrdup",
                "bfd_set_error_program_name",
                "bfd_init",
                "strcmp",
                "bfd_close",
                "xrealloc",
                "getopt_long",
                "bfd_get_error",
                "xmalloc_set_program_name",
                "bfd_set_default_target",
                "setlocale",
                "bfd_malloc_and_get_section",
                "bfd_errmsg",
                "strtoul",
                "bfd_check_format",
                "xexit",
                "strlen",
                "exit",
                "fseek",
                "fopen",
                "free",
                "FUN_00104a60",
                "__errno_location",
                "stat",
                "FUN_001030c0",
                "memmove",
                "memcpy",
                "FUN_00103240",
                "fclose",
                "bindtextdomain",
                "fprintf",
                "printf",
                "textdomain",
                "fflush",
                "xmalloc",
                "bfd_openr",
                "fread",
                "dcgettext",
                "perror"
            ],
            "calling": [
                "entry"
            ],
            "code": "\n\n\n\nFILE * extract_strings_from_file_00103aa0(int argc,long *argv)\n\n{\n  byte *byte_pointer1;\n  byte byte_var2;\n  byte byte_var3;\n  char char_var4;\n  int index;\n  uint count;\n  int loop_var;\n  undefined4 uint_var8;\n  FILE *file_stream;\n  size_t size_var9;\n  size_t size_var2;\n  byte *byte_ptr;\n  long long_var1;\n  long *ptr_long_var12;\n  ulong ulong_var13;\n  long *source;\n  undefined8 ulong_var14;\n  FILE *file_stream2;\n  int *int_ptr;\n  long *ptr_long_var16;\n  undefined8 ulong_var17;\n  long *ptr_long_var18;\n  byte *byte_ptr2;\n  char *char_ptr1;\n  undefined **ptr_ptr;\n  long long_var2;\n  byte *ptr4;\n  char *char_ptr2;\n  bool bool_var1;\n  long *unaff_r12;\n  undefined8 *section_header;\n  bool bool_var2;\n  bool bool_var3;\n  long *local_pointers;\n  undefined8 local_var138;\n  undefined8 file_content;\n  ulong local_ulong;\n  size_t strlen;\n  long long_var3;\n  char *local_char_ptr;\n  void *section_data;\n  get_file_status local_stat;\n  \n  setlocale(6,\"\");\n  bindtextdomain(\"binutils\",\"/usr/share/locale\");\n  textdomain(\"binutils\");\n  DAT_00108378 = *argv;\n  xmalloc_set_program_name();\n  bfd_set_error_program_name(DAT_00108378);\n  ptr_long_var16 = argv;\n  if (argc < 2) goto goto_label;\n  local_ulong = 2000;\n  unaff_r12 = (long *)0x1;\n  local_var138 = (long *)0x0;\n  ptr_long_var12 = argv;\n  do {\n    loop_var = (int)unaff_r12;\n    ptr_ptr = (undefined **)(long)loop_var;\n    local_pointers = (long *)((long)ptr_ptr * 8);\n    ptr_long_var16 = ptr_long_var12;\n    if (*(char *)ptr_long_var12[(long)ptr_ptr] == '@') {\n      count = (int)local_ulong - 1;\n      local_ulong = (ulong)count;\n      if (count == 0) {\n        long_var1 = *ptr_long_var12;\n        char_ptr1 = \"%s: error: too many @-files encountered\\n\";\n        goto LAB_001044b1;\n      }\n      char_ptr1 = (char *)ptr_long_var12[(long)ptr_ptr] + 1;\n      index = get_file_status(char_ptr1,&local_stat);\n      if (-1 < index) {\n        if ((local_stat.st_mode & 0xf000) == 0x4000) {\n          do {\n            long_var1 = *ptr_long_var12;\n            char_ptr1 = \"%s: error: @-file refers to a directory\\n\";\nLAB_001044b1:\n            fprintf(output_stream,char_ptr1,long_var1);\n            xexit(1);\n          } while( true );\n        }\n        file_stream = fopen(char_ptr1,\"r\");\n        if (file_stream != (FILE *)0x0) {\n          index = fseek(file_stream,0,2);\n          if (((index != -1) && (size_var9 = ftell(file_stream), size_var9 != 0xffffffffffffffff)) &&\n             (index = fseek(file_stream,0,0), index != -1)) {\n            file_content = (byte *)xallocate_memory(size_var9 + 1);\n            size_var2 = fread(file_content,1,size_var9,file_stream);\n            if ((size_var9 == size_var2) || (index = ferror(file_stream), index == 0)) {\n              file_content[size_var2] = 0;\n              byte_var3 = *file_content;\n              byte_ptr2 = file_content;\n              while( true ) {\n                if (byte_var3 == 0) goto LAB_001040fd;\n                if (((&_sch_istable)[(ulong)byte_var3 * 2] & 0x40) == 0) break;\n                byte_var3 = byte_ptr2[1];\n                byte_ptr2 = byte_ptr2 + 1;\n              }\n              size_var9 = string_length((char *)file_content);\n              byte_ptr = (byte *)xallocate_memory(size_var9 + 1);\n              source = (long *)0x0;\n              index = 0;\n              long_var3 = 0;\n              bool_var1 = false;\n              bool_var3 = false;\n              bool_var2 = false;\n              byte_ptr2 = file_content;\n              do {\n                while (((&_sch_istable)[(ulong)*byte_ptr2 * 2] & 0x40) != 0) {\n                  byte_ptr2 = byte_ptr2 + 1;\n                }\n                if ((index == 0) || (index + -1 <= (int)long_var3)) {\n                  if (source == (long *)0x0) {\n                    index = 8;\n                    source = (long *)xallocate_memory(0x40);\n                    ptr_long_var18 = source + long_var3;\n                    *ptr_long_var18 = 0;\n                  }\n                  else {\n                    index = index * 2;\n                    source = (long *)xrealloc(source,(long)index << 3);\n                    ptr_long_var18 = source + long_var3;\n                    *ptr_long_var18 = 0;\n                  }\n                }\n                else {\n                  ptr_long_var18 = source + long_var3;\n                }\n                byte_var3 = *byte_ptr2;\n                ptr4 = byte_ptr;\n                while (byte_var3 != 0) {\n                  while( true ) {\n                    if ((((&_sch_istable)[(ulong)byte_var3 * 2] & 0x40) != 0) &&\n                       (!(bool)(bool_var3 | bool_var2 | bool_var1))) {\n                      bool_var2 = false;\n                      bool_var1 = false;\n                      bool_var3 = false;\n                      goto LAB_00103d4f;\n                    }\n                    if (!bool_var2) break;\n                    byte_ptr2 = byte_ptr2 + 1;\n                    *ptr4 = byte_var3;\n                    ptr4 = ptr4 + 1;\n                    bool_var2 = false;\n                    byte_var3 = *byte_ptr2;\n                    if (byte_var3 == 0) goto LAB_00103d4f;\n                  }\n                  if (byte_var3 == 0x5c) {\n                    bool_var2 = true;\n                  }\n                  else if (bool_var3) {\n                    if (byte_var3 == 0x27) {\n                      bool_var3 = false;\n                    }\n                    else {\nLAB_00103ec8:\n                      *ptr4 = byte_var3;\n                      ptr4 = ptr4 + 1;\n                    }\n                  }\n                  else if (bool_var1) {\n                    if (byte_var3 != 0x22) goto LAB_00103ec8;\n                    bool_var1 = false;\n                  }\n                  else if (byte_var3 == 0x27) {\n                    bool_var3 = true;\n                  }\n                  else {\n                    if (byte_var3 != 0x22) goto LAB_00103ec8;\n                    bool_var1 = true;\n                  }\n                  byte_pointer1 = byte_ptr2 + 1;\n                  byte_ptr2 = byte_ptr2 + 1;\n                  byte_var3 = *byte_pointer1;\n                }\nLAB_00103d4f:\n                *ptr4 = 0;\n                long_var1 = xstrdup(byte_ptr);\n                *ptr_long_var18 = long_var1;\n                source[long_var3 + 1] = 0;\n                byte_var3 = *byte_ptr2;\n                byte_var2 = (&_sch_istable)[(ulong)byte_var3 * 2];\n                while ((byte_var2 & 0x40) != 0) {\n                  byte_var3 = byte_ptr2[1];\n                  byte_ptr2 = byte_ptr2 + 1;\n                  byte_var2 = (&_sch_istable)[(ulong)byte_var3 * 2];\n                }\n                long_var3 = long_var3 + 1;\n                if (byte_var3 == 0) {\n                  free(byte_ptr);\n                  if (ptr_long_var12 == argv) goto LAB_0010411e;\n                  goto LAB_00103dea;\n                }\n              } while( true );\n            }\n            free(file_content);\n          }\n          fclose(file_stream);\n        }\n      }\n    }\n    if (argc <= loop_var + 1) {\ngoto_label:\n      DAT_00108373 = 0;\n      file_stream = (FILE *)0x0;\n      DAT_00108372 = 0;\n      ptr_ptr = &PTR_DAT_001081a0;\n      DAT_00108374 = 4;\n      DAT_00108371 = 0;\n      DAT_00108370 = '\\0';\n      DAT_00108368 = (long *)0x0;\n      DAT_00108360 = 's';\n      DAT_00108358 = (long *)0x0;\n      char_ptr1 = \"adfhHn:wot:e:T:s:U:Vv0123456789\";\nLAB_00103ff6:\n      while( true ) {\n        loop_var = (int)unaff_r12;\n        index = getopt_long(argc,ptr_long_var16,char_ptr1);\n        if (index == -1) break;\n        ptr_long_var12 = (long *)char_ptr1;\n        switch(index) {\n        case 0x3f:\n          goto switchD_00104029_caseD_3f;\n        case 0x48:\n        case 0x68:\nswitchD_00104029_caseD_48:\n          FUN_001030c0(stdout,0);\n          goto LAB_001044f5;\n        case 0x54:\nswitchD_00104201_caseD_54:\n          unaff_r12 = (long *)&optarg;\n          DAT_00108368 = optarg;\n          break;\n        case 0x55:\nswitchD_00104201_caseD_55:\n          unaff_r12 = optarg;\n          loop_var = strcmp((char *)optarg,\"default\");\n          if ((loop_var == 0) || (loop_var = strcmp((char *)unaff_r12,\"d\"), loop_var == 0)) {\n            DAT_00108350 = 0;\n          }\n          else {\n            loop_var = strcmp((char *)unaff_r12,\"locale\");\n            if ((loop_var == 0) || (loop_var = strcmp((char *)unaff_r12,\"l\"), loop_var == 0)) {\n              DAT_00108350 = 1;\n            }\n            else {\n              loop_var = strcmp((char *)unaff_r12,\"escape\");\n              if ((loop_var == 0) || (loop_var = strcmp((char *)unaff_r12,\"e\"), loop_var == 0)) {\n                DAT_00108350 = 2;\n              }\n              else {\n                loop_var = strcmp((char *)unaff_r12,\"invalid\");\n                if ((loop_var == 0) || (loop_var = strcmp((char *)unaff_r12,\"i\"), loop_var == 0)) {\n                  DAT_00108350 = 5;\n                }\n                else {\n                  loop_var = strcmp((char *)unaff_r12,\"hex\");\n                  if ((loop_var == 0) || (loop_var = strcmp((char *)unaff_r12,\"x\"), loop_var == 0)) {\n                    DAT_00108350 = 3;\n                  }\n                  else {\n                    loop_var = strcmp((char *)unaff_r12,\"highlight\");\n                    if ((loop_var != 0) && (loop_var = strcmp((char *)unaff_r12,\"h\"), loop_var != 0)) {\n                      ulong_var14 = dcgettext(0,\"invalid argument to -U/--unicode: %s\",5);\n                      FUN_00104a60(ulong_var14);\n                      FUN_001038b0();\n                      xexit(1);\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                      halt_baddata();\n                    }\n                    DAT_00108350 = 4;\n                  }\n                }\n              }\n            }\n          }\n          break;\n        case 0x56:\n        case 0x76:\nswitchD_00104029_caseD_56:\n          printf(\"GNU %s %s\\n\",\"strings\",\"(GNU Binutils for Debian) 2.40\");\n          char_ptr1 = (char *)dcgettext(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n          printf(char_ptr1);\n          char_ptr1 = (char *)dcgettext(0,\n                                      \"This program is free software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                                      ,5);\n          printf(char_ptr1);\n                    \n          exit_program(0);\n        case 0x61:\n          goto switchD_00104029_caseD_61;\n        case 100:\nswitchD_00104029_caseD_64:\n          DAT_00108370 = '\\x01';\n          break;\n        case 0x65:\n          unaff_r12 = (long *)&optarg;\n          loop_var = 0x109108;\n          if (*(char *)((long)optarg + 1) != '\\0') goto switchD_00104029_caseD_3f;\n          DAT_00108360 = *(char *)optarg;\n          index = getopt_long(argc,ptr_long_var16,char_ptr1);\n          if (index == -1) goto LAB_0010407f;\n          switch(index) {\n          case 0x3f:\n            goto switchD_00104029_caseD_3f;\n          case 0x48:\n          case 0x68:\n            goto switchD_00104029_caseD_48;\n          case 0x54:\n            goto switchD_00104201_caseD_54;\n          case 0x55:\n            goto switchD_00104201_caseD_55;\n          case 0x56:\n          case 0x76:\n            goto switchD_00104029_caseD_56;\n          case 0x61:\n            goto switchD_00104029_caseD_61;\n          case 100:\n            goto switchD_00104029_caseD_64;\n          case 0x65:\nswitchD_00104201_caseD_65:\n            if (*(char *)((long)optarg + 1) != '\\0') goto switchD_00104029_caseD_3f;\n            DAT_00108360 = *(char *)optarg;\n            index = getopt_long(argc,ptr_long_var16,char_ptr1);\n            if (index == -1) goto LAB_0010407f;\n            switch(index) {\n            case 0x3f:\n              goto switchD_00104029_caseD_3f;\n            default:\n              break;\n            case 0x48:\n            case 0x68:\n              goto switchD_00104029_caseD_48;\n            case 0x54:\n              goto switchD_00104201_caseD_54;\n            case 0x55:\n              goto switchD_00104201_caseD_55;\n            case 0x56:\n            case 0x76:\n              goto switchD_00104029_caseD_56;\n            case 0x61:\n              goto switchD_00104029_caseD_61;\n            case 100:\n              goto switchD_00104029_caseD_64;\n            case 0x65:\n              goto switchD_00104201_caseD_65;\n            case 0x66:\n              goto switchD_00104029_caseD_66;\n            case 0x6e:\n              goto switchD_00104201_caseD_6e;\n            case 0x6f:\n              goto switchD_00104029_caseD_6f;\n            case 0x73:\n              goto switchD_00104201_caseD_73;\n            case 0x74:\n              goto switchD_00104201_caseD_74;\n            case 0x77:\n              goto switchD_00104029_caseD_77;\n            }\n          case 0x66:\n            goto switchD_00104029_caseD_66;\n          case 0x6e:\n            goto switchD_00104201_caseD_6e;\n          case 0x6f:\n            goto switchD_00104029_caseD_6f;\n          case 0x73:\n            goto switchD_00104201_caseD_73;\n          case 0x74:\n            goto switchD_00104201_caseD_74;\n          case 0x77:\n            goto switchD_00104029_caseD_77;\n          }\n        default:\n          file_stream = (FILE *)(ulong)optind;\n          break;\n        case 0x66:\nswitchD_00104029_caseD_66:\n          DAT_00108371 = 1;\n          break;\n        case 0x6e:\nswitchD_00104201_caseD_6e:\n          unaff_r12 = (long *)&optarg;\n          ulong_var13 = strtoul((char *)optarg,&local_char_ptr,0);\n          DAT_00108374 = (int)ulong_var13;\n          if ((local_char_ptr != (char *)0x0) && (ptr_long_var12 = optarg, *local_char_ptr != '\\0')) {\nLAB_001042e6:\n            ulong_var14 = dcgettext(0,\"invalid integer argument %s\",5);\n            FUN_00104a60(ulong_var14,ptr_long_var12);\n            goto switchD_00104201_caseD_73;\n          }\n          break;\n        case 0x6f:\nswitchD_00104029_caseD_6f:\n          DAT_00108372 = 1;\n          DAT_00108354 = 8;\n          break;\n        case 0x73:\nswitchD_00104201_caseD_73:\n          unaff_r12 = (long *)&optarg;\n          DAT_00108358 = optarg;\n          char_ptr1 = (char *)ptr_long_var12;\n          break;\n        case 0x74:\nswitchD_00104201_caseD_74:\n          unaff_r12 = (long *)&optarg;\n          loop_var = 0x109108;\n          DAT_00108372 = 1;\n          if (*(char *)((long)optarg + 1) != '\\0') goto switchD_00104029_caseD_3f;\n          char_var4 = *(char *)optarg;\n          if (char_var4 == 'o') {\n            DAT_00108354 = 8;\n          }\n          else if (char_var4 == 'x') {\n            DAT_00108354 = 0x10;\n          }\n          else {\n            if (char_var4 != 'd') goto switchD_00104029_caseD_3f;\n            DAT_00108354 = 10;\n          }\n          break;\n        case 0x77:\n          goto switchD_00104029_caseD_77;\n        }\n      }\nLAB_0010407f:\n      if (DAT_00108350 != 0) {\n        DAT_00108360 = 'S';\n      }\n      if ((int)file_stream != 0) {\nLAB_001044f5:\n        char_ptr1 = (char *)(ptr_long_var16 + (long)(int)file_stream + -1);\n        ulong_var13 = strtoul((char *)(*(long *)char_ptr1 + 1),&local_char_ptr,0);\n        DAT_00108374 = (int)ulong_var13;\n        if ((local_char_ptr != (char *)0x0) && (*local_char_ptr != '\\0')) {\n          ptr_long_var12 = (long *)(*(long *)char_ptr1 + 1);\n          goto LAB_001042e6;\n        }\n      }\n      loop_var = (int)unaff_r12;\n      if (DAT_00108374 == 0) {\n        ulong_var14 = dcgettext(0,\"invalid minimum string length %d\",5);\n        FUN_00104a60(ulong_var14,0);\nswitchD_00104029_caseD_61:\n        DAT_00108370 = '\\0';\n        goto LAB_00103ff6;\n      }\n      if (0x31 < (byte)(DAT_00108360 + 0xbeU)) goto switchD_00104029_caseD_3f;\n      ulong_var13 = 1L << (DAT_00108360 + 0xbeU & 0x3f);\n      if ((ulong_var13 & 0x2000000020000) == 0) {\n        if ((ulong_var13 & 0x401) == 0) {\n          if ((ulong_var13 & 0x40100000000) == 0) goto switchD_00104029_caseD_3f;\n          DAT_0010834c = 2;\n        }\n        else {\n          DAT_0010834c = 4;\n        }\n      }\n      else {\n        DAT_0010834c = 1;\n      }\n      loop_var = bfd_initialize();\n      if (loop_var == 0x118) {\n        char_ptr1 = \"x86_64-pc-linux-gnu\";\n        count = bfd_set_default_target(\"x86_64-pc-linux-gnu\");\n        if ((char)count != '\\0') {\n          ptr_ptr = (undefined **)&optind;\n          if (argc <= (int)optind) {\n            DAT_00108370 = 0;\n            FUN_00103240(\"{standard input}\",_stdin,0,0,0);\n            return (FILE *)0x0;\n          }\n          ulong_var13 = 0;\n          file_stream = (FILE *)0x0;\n          ptr_long_var12 = (long *)(ulong)count;\n          count = optind;\n          local_pointers = ptr_long_var16;\n          goto LAB_001043b8;\n        }\n        uint_var8 = bfd_get_error();\n        ptr_ptr = (undefined **)bfd_errmsg(uint_var8);\n        ulong_var14 = dcgettext(0,\"can\\'t set BFD default target to `%s\\': %s\",5);\n        FUN_00104a60(ulong_var14,\"x86_64-pc-linux-gnu\",ptr_ptr);\n      }\n      ulong_var14 = dcgettext(0,\"fatal error: libbfd ABI mismatch\",5);\n      FUN_00104a60(ulong_var14);\n      ptr_long_var12 = ptr_long_var16;\nLAB_0010462b:\n      char_ptr2 = \"Warning: \\'%s\\' is a directory\";\nLAB_00104637:\n      ulong_var14 = dcgettext(0,char_ptr2,5);\n      FUN_00103910(ulong_var14,char_ptr1);\n      count = 0;\n      do {\n        while( true ) {\n          ulong_var13 = (ulong)ptr_long_var12 & 0xffffffff;\n          file_stream = (FILE *)(ulong)((uint)file_stream | (count ^ 1) & 0xff);\n          while( true ) {\n            loop_var = (int)ulong_var13;\n            count = *(uint *)ptr_ptr + 1;\n            *(uint *)ptr_ptr = count;\n            if (argc <= (int)count) {\n              ptr_long_var16 = ptr_long_var12;\n              if ((char)ulong_var13 != '\\0') {\n                return file_stream;\n              }\n              goto switchD_00104029_caseD_3f;\n            }\nLAB_001043b8:\n            char_ptr1 = (char *)local_pointers[(int)count];\n            loop_var = strcmp(char_ptr1,\"-\");\n            if (loop_var != 0) break;\n            DAT_00108370 = '\\0';\n          }\n          loop_var = get_file_status(char_ptr1,&local_stat);\n          if (loop_var < 0) break;\n          if ((local_stat.st_mode & 0xf000) == 0x4000) goto LAB_0010462b;\n          if ((DAT_00108370 == '\\0') ||\n             (ptr_long_var16 = (long *)bfd_openr(char_ptr1,DAT_00108368), ptr_long_var16 == (long *)0x0)) {\nLAB_00104416:\n            file_stream2 = fopen(char_ptr1,\"r\");\n            if (file_stream2 != (FILE *)0x0) {\n              FUN_00103240(char_ptr1,file_stream2,0,0,0);\n              loop_var = fclose(file_stream2);\n              if (loop_var != -1) goto LAB_00104454;\n            }\n            fprintf(output_stream,\"%s: \",DAT_00108378);\n            perror(char_ptr1);\n            count = 0;\n          }\n          else {\n            char_var4 = bfd_check_format(ptr_long_var16,1);\n            if (char_var4 == '\\0') {\n              bfd_fclose();\n              local_var138 = ptr_long_var16;\n              goto LAB_00104416;\n            }\n            section_header = (undefined8 *)ptr_long_var16[0x12];\n            local_var138 = (long *)((ulong)ptr_long_var16 & 0xffffffffffffff00);\n            file_content = (byte *)CONCAT44(file_content._4_4_,argc);\n            for (; section_header != (undefined8 *)0x0; section_header = (undefined8 *)section_header[1]) {\n              char_var4 = (char)local_var138;\n              if (((*(uint *)((long)section_header + 0x24) & 0x103) == 0x103) &&\n                 (local_ulong = section_header[8], local_ulong != 0)) {\n                char_var4 = bfd_malloc_and_get_section(ptr_long_var16,section_header,&section_data);\n                if (char_var4 == '\\0') {\n                  uint_var8 = bfd_get_error();\n                  local_ulong = bfd_errmsg(uint_var8);\n                  ulong_var14 = *section_header;\n                  ulong_var17 = dcgettext(0,\"%s: Reading section %s failed: %s\",5);\n                  FUN_00103910(ulong_var17,char_ptr1,ulong_var14);\n                  char_var4 = (char)local_var138;\n                }\n                else {\n                  FUN_00103240(char_ptr1,0,section_header[0x10],local_ulong,section_data);\n                  free(section_data);\n                }\n              }\n              local_var138 = (long *)CONCAT71(local_var138._1_7_,char_var4);\n            }\n            ptr_long_var12 = (long *)((ulong)ptr_long_var12 & 0xff);\n            char_var4 = bfd_fclose(ptr_long_var16);\n            if (char_var4 == '\\0') {\n              loop_var = bfd_get_error();\n              if (loop_var == 0) {\n                ulong_var14 = dcgettext(0,\"cause of error unknown\",5);\n                fflush(stdout);\n              }\n              else {\n                ulong_var14 = bfd_errmsg();\n                fflush(stdout);\n              }\n              fprintf(output_stream,\"%s: %s: %s\\n\",DAT_00108378,char_ptr1,ulong_var14);\n              goto LAB_00104416;\n            }\n            bool_var3 = (char)local_var138 == '\\0';\n            if (bool_var3) goto LAB_00104416;\nLAB_00104454:\n            count = (uint)ptr_long_var12;\n          }\n        }\n        int_ptr = __errno_location();\n        char_ptr2 = \"\\'%s\\': No such file\";\n        if (*int_ptr == 2) goto LAB_00104637;\n        char_ptr2 = strerror(*int_ptr);\n        ulong_var14 = dcgettext(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n        FUN_00103910(ulong_var14,char_ptr1,char_ptr2);\n        count = 0;\n      } while( true );\n    }\n    count = loop_var + 1;\n    local_var138 = unaff_r12;\nLAB_00103eac:\n    unaff_r12 = (long *)(ulong)count;\n  } while( true );\nswitchD_00104029_caseD_77:\n  DAT_00108373 = 1;\n  goto LAB_00103ff6;\nswitchD_00104029_caseD_3f:\n  FUN_001030c0(output_stream);\nLAB_001040fd:\n  source = (long *)xallocate_memory(8);\n  *source = 0;\n  if (ptr_long_var16 == argv) {\nLAB_0010411e:\n    if (*ptr_long_var16 == 0) {\n      index = 0;\n    }\n    else {\n      long_var1 = 1;\n      do {\n        index = (int)long_var1;\n        ptr_long_var12 = ptr_long_var16 + long_var1;\n        long_var1 = long_var1 + 1;\n      } while (*ptr_long_var12 != 0);\n    }\n    long_var2 = 0;\n    ptr_long_var12 = (long *)xallocate_memory((long)(index + 1) << 3);\n    long_var1 = *ptr_long_var16;\n    while (long_var1 != 0) {\n      ulong_var14 = xstrdup();\n      *(undefined8 *)((long)ptr_long_var12 + long_var2) = ulong_var14;\n      long_var2 = long_var2 + 8;\n      long_var1 = *(long *)((long)ptr_long_var16 + long_var2);\n    }\n    *(undefined8 *)((long)ptr_long_var12 + long_var2) = 0;\nLAB_00103dea:\n    ptr_long_var16 = ptr_long_var12;\n    if (*source != 0) {\n      long_var1 = 0;\n      do {\n        long_var1 = long_var1 + 1;\n      } while (source[long_var1] != 0);\n      string_length = long_var1 * 8;\n      index = argc;\n      goto LAB_00103e18;\n    }\n  }\n  long_var1 = 0;\n  string_length = 0;\n  index = argc;\nLAB_00103e18:\n  free((void *)ptr_long_var16[(long)ptr_ptr]);\n  ptr_long_var12 = (long *)xrealloc(ptr_long_var16,(long_var1 + 1 + (long)index) * 8);\n  argc = index + -1 + (int)long_var1;\n  memmove(ptr_long_var12 + (long)((long)ptr_ptr + long_var1),(void *)((long)(ptr_long_var12 + 1) + (long)local_pointers),\n          (long)(index - loop_var) << 3);\n  memcpy((void *)((long)ptr_long_var12 + (long)local_pointers),source,string_length);\n  free(source);\n  free(file_content);\n  fclose(file_stream);\n  count = (int)local_var138 + 1;\n  unaff_r12 = local_pointers;\n  ptr_long_var16 = ptr_long_var12;\n  local_pointers = source;\n  if ((int)count < argc) goto LAB_00103eac;\n  goto goto_label;\n}\n\n",
            "current_name": "extract_strings_from_file_00103aa0",
            "entrypoint": "0x00103aa0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103aa0": "extract_strings_from_file_00103aa0",
                "LAB_00103fa6": "goto_label",
                "__errno_location": "set_error_location",
                "__ptr": "byte_ptr",
                "__src": "source",
                "__stream": "file_stream",
                "__stream_00": "file_stream2",
                "_optarg": "optarg",
                "_optind": "optind",
                "_stderr": "output_stream",
                "_stdout": "stdout",
                "bVar2": "byte_var2",
                "bVar25": "bool_var1",
                "bVar27": "bool_var2",
                "bVar28": "bool_var3",
                "bVar3": "byte_var3",
                "bfd_check_format": "check_bfd_format",
                "bfd_close": "bfd_close_file",
                "bfd_errmsg": "get_bfd_error_msg",
                "bfd_get_error": "get_bfd_error",
                "bfd_init": "bfd_initialize",
                "bfd_malloc_and_get_section": "malloc_and_get_bfd_section",
                "bfd_set_default_target": "set_default_target",
                "bfd_set_error_program_name": "set_error_program_name",
                "bindtextdomain": "bind_text_domain",
                "cVar4": "char_var4",
                "dcgettext": "get_text_translation",
                "exit": "exit_program",
                "fclose": "close_file",
                "fflush": "flush_output_file",
                "fopen": "open_file",
                "fprintf": "print_to_file",
                "fread": "read_file",
                "free": "release_memory",
                "fseek": "file_seek",
                "ftell": "tell_file",
                "getopt_long": "get_option_long",
                "iVar5": "index",
                "iVar7": "loop_var",
                "lVar11": "long_var1",
                "lVar22": "long_var2",
                "local_110": "long_var3",
                "local_118": "string_length",
                "local_120": "local_ulong",
                "local_128": "file_content",
                "local_138": "local_var138",
                "local_140": "local_pointers",
                "local_c8": "local_stat",
                "local_d0": "section_data",
                "local_d8": "local_char_ptr",
                "malloc": "allocate_memory",
                "memcpy": "copy_memory",
                "memmove": "move_memory",
                "param_1": "argc",
                "param_2": "argv",
                "pbVar1": "byte_pointer1",
                "pbVar19": "byte_ptr2",
                "pbVar23": "ptr4",
                "pcVar20": "char_ptr1",
                "pcVar24": "char_ptr2",
                "perror": "print_error_message",
                "piVar15": "int_ptr",
                "plVar12": "ptr_long_var12",
                "plVar16": "ptr_long_var16",
                "plVar18": "ptr_long_var18",
                "ppuVar21": "ptr_ptr",
                "printf": "formatted_print",
                "puVar26": "section_header",
                "sVar10": "size_var2",
                "sVar9": "size_var9",
                "setlocale": "set_locale",
                "stat": "get_file_status",
                "strcmp": "compare_strings",
                "strerror": "get_error_string",
                "strlen": "string_length",
                "strtoul": "string_to_u_long",
                "textdomain": "text_domain",
                "uVar13": "ulong_var13",
                "uVar14": "ulong_var14",
                "uVar17": "ulong_var17",
                "uVar6": "count",
                "uVar8": "uint_var8",
                "unaff_R12": "unaff_r12",
                "xexit": "exit_program2",
                "xmalloc_set_program_name": "set_program_name",
                "xrealloc": "x_reallocate",
                "xstrdup": "x_str_dup"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104a60": {
            "additional_data": {
                "FUN_001038b0": {
                    "copy_buffer_to_param": 1,
                    "copy_data": 3,
                    "extract_data": 1,
                    "process_data": 2
                },
                "FUN_00104a60": {
                    "execute_function": 1,
                    "extract_and_exit": 1,
                    "extract_data": 2,
                    "extract_data_from_binary": 1,
                    "extract_parameters": 1,
                    "initialize_and_exit": 1,
                    "parse_input_and_exit": 1,
                    "prepare_and_exit": 1,
                    "process_data": 12
                },
                "__gnuc_va_list": {
                    "params": 1
                },
                "in_AL": {
                    "condition": 5,
                    "flag": 14,
                    "flag_variable": 1,
                    "input_flag": 1,
                    "is_condition_met": 1,
                    "is_input_available": 1,
                    "is_not_empty": 1,
                    "some_flag": 1
                },
                "local_18": {
                    "arg8": 1,
                    "arg8_copy": 1,
                    "conditional_arg8": 1,
                    "copy_config": 1,
                    "extracted8": 1,
                    "flag_param8_copy": 1,
                    "input8": 3,
                    "input8_copy": 1,
                    "input_8_copy": 1,
                    "input_param_8": 1,
                    "input_param_8_copy": 1,
                    "input_ptr_8": 1,
                    "local_flag8": 1,
                    "local_input8": 2,
                    "local_input_8": 1,
                    "local_param8": 1,
                    "memory_address_8_copy": 1,
                    "new_input8": 1,
                    "param8": 4,
                    "param_8": 1,
                    "param_8_copy": 1,
                    "saved_input_8": 1,
                    "temp_param_8": 1
                },
                "local_28": {
                    "arg7": 1,
                    "arg7_copy": 1,
                    "conditional_arg7": 1,
                    "copy_value": 1,
                    "extracted7": 1,
                    "flag_param7_copy": 1,
                    "input7": 3,
                    "input7_copy": 1,
                    "input_7_copy": 1,
                    "input_param_7": 1,
                    "input_param_7_copy": 1,
                    "input_ptr_7": 1,
                    "local_flag7": 1,
                    "local_input7": 2,
                    "local_input_7": 1,
                    "local_param7": 1,
                    "memory_address_7_copy": 1,
                    "new_input7": 1,
                    "param7": 4,
                    "param_7": 1,
                    "param_7_copy": 1,
                    "saved_input_7": 1,
                    "temp_param_7": 1
                },
                "local_38": {
                    "arg6": 1,
                    "arg6_copy": 1,
                    "conditional_arg6": 1,
                    "copy_info": 1,
                    "extracted6": 1,
                    "flag_param6_copy": 1,
                    "input6": 3,
                    "input6_copy": 1,
                    "input_6_copy": 1,
                    "input_param_6": 1,
                    "input_param_6_copy": 1,
                    "input_ptr_6": 1,
                    "local_flag6": 1,
                    "local_input6": 2,
                    "local_input_6": 1,
                    "local_param6": 1,
                    "memory_address_6_copy": 1,
                    "new_input6": 1,
                    "param6": 4,
                    "param_6": 1,
                    "param_6_copy": 1,
                    "saved_input_6": 1,
                    "temp_param_6": 1
                },
                "local_48": {
                    "arg5": 1,
                    "arg5_copy": 1,
                    "conditional_arg5": 1,
                    "copy_data": 1,
                    "extracted5": 1,
                    "flag_param5_copy": 1,
                    "input5": 3,
                    "input5_copy": 1,
                    "input_5_copy": 1,
                    "input_param_5": 1,
                    "input_param_5_copy": 1,
                    "input_ptr_5": 1,
                    "local_flag5": 1,
                    "local_input5": 2,
                    "local_input_5": 1,
                    "local_param5": 1,
                    "memory_address_5_copy": 1,
                    "new_input5": 1,
                    "param5": 4,
                    "param_5": 1,
                    "param_5_copy": 1,
                    "saved_input_5": 1,
                    "temp_param_5": 1
                },
                "local_58": {
                    "arg4": 1,
                    "arg4_copy": 1,
                    "conditional_arg4": 1,
                    "copy_argument": 1,
                    "extracted4": 1,
                    "flag_param4_copy": 1,
                    "input4": 3,
                    "input4_copy": 1,
                    "input_4_copy": 1,
                    "input_param_4": 1,
                    "input_param_4_copy": 1,
                    "input_ptr_4": 1,
                    "local_flag4": 1,
                    "local_input4": 2,
                    "local_input_4": 1,
                    "local_param4": 1,
                    "memory_address_4_copy": 1,
                    "new_input4": 1,
                    "param4": 4,
                    "param_4": 1,
                    "param_4_copy": 1,
                    "saved_input_4": 1,
                    "temp_param_4": 1
                },
                "local_68": {
                    "arg3": 1,
                    "arg3_copy": 1,
                    "conditional_arg3": 1,
                    "copy_option": 1,
                    "extracted3": 1,
                    "flag_param3_copy": 1,
                    "input3": 3,
                    "input3_copy": 1,
                    "input_3_copy": 1,
                    "input_param_3": 1,
                    "input_param_3_copy": 1,
                    "input_ptr_3": 1,
                    "local_flag3": 1,
                    "local_input3": 2,
                    "local_input_3": 1,
                    "local_param3": 1,
                    "memory_address_3_copy": 1,
                    "new_input3": 1,
                    "param3": 4,
                    "param_3": 1,
                    "param_3_copy": 1,
                    "saved_input_3": 1,
                    "temp_param_3": 1
                },
                "local_78": {
                    "arg2": 1,
                    "arg2_copy": 1,
                    "conditional_arg2": 1,
                    "copy_command": 1,
                    "extracted2": 1,
                    "flag_param2_copy": 1,
                    "input2": 3,
                    "input2_copy": 1,
                    "input_2_copy": 1,
                    "input_param_2": 1,
                    "input_param_2_copy": 1,
                    "input_ptr_2": 1,
                    "local_flag2": 1,
                    "local_input2": 2,
                    "local_input_2": 1,
                    "local_param2": 1,
                    "memory_address_2_copy": 1,
                    "new_input2": 1,
                    "param2": 4,
                    "param_2": 1,
                    "param_2_copy": 1,
                    "saved_input_2": 1,
                    "temp_param_2": 1
                },
                "local_88": {
                    "arg1": 1,
                    "arg1_copy": 1,
                    "conditional_arg1": 1,
                    "copy_flag": 1,
                    "extracted1": 1,
                    "flag_param_copy": 1,
                    "input1": 3,
                    "input1_copy": 1,
                    "input_1_copy": 1,
                    "input_param_1": 1,
                    "input_param_1_copy": 1,
                    "input_ptr_1": 1,
                    "local_flag1": 1,
                    "local_input1": 2,
                    "local_input_1": 1,
                    "local_param1": 1,
                    "memory_address_1_copy": 1,
                    "new_input1": 1,
                    "param1": 4,
                    "param_1": 1,
                    "param_1_copy": 1,
                    "saved_input_1": 1,
                    "temp_param_1": 1
                },
                "local_90": {
                    "arg5": 1,
                    "data6": 2,
                    "data_5": 1,
                    "data_param6_copy": 1,
                    "data_param_6": 1,
                    "local_param14": 2,
                    "local_param_14": 1,
                    "local_value6": 1,
                    "param14": 3,
                    "param5_copy": 1,
                    "param6": 1,
                    "param6_copy": 2,
                    "param_14": 1,
                    "param_14_copy": 3,
                    "pointer_6_copy": 1,
                    "pointer_arg5": 1,
                    "pointer_value_6_copy": 1,
                    "temp_data_6": 1,
                    "val5": 1,
                    "value5": 1,
                    "var10": 1,
                    "var5": 2
                },
                "local_98": {
                    "arg4": 1,
                    "data5": 2,
                    "data_4": 1,
                    "data_param5_copy": 1,
                    "data_param_5": 1,
                    "local_param13": 2,
                    "local_param_13": 1,
                    "local_value5": 1,
                    "param13": 3,
                    "param4_copy": 1,
                    "param5": 1,
                    "param5_copy": 2,
                    "param_13": 1,
                    "param_13_copy": 3,
                    "pointer_5_copy": 1,
                    "pointer_arg4": 1,
                    "pointer_value_5_copy": 1,
                    "temp_data_5": 1,
                    "val4": 1,
                    "value4": 1,
                    "var4": 2,
                    "var9": 1
                },
                "local_a0": {
                    "arg3": 1,
                    "data4": 2,
                    "data_3": 1,
                    "data_param4_copy": 1,
                    "data_param_4": 1,
                    "local_param12": 2,
                    "local_param_12": 1,
                    "local_value4": 1,
                    "param12": 3,
                    "param3_copy": 1,
                    "param4": 1,
                    "param4_copy": 2,
                    "param_12": 1,
                    "param_12_copy": 3,
                    "pointer_4_copy": 1,
                    "pointer_arg3": 1,
                    "pointer_value_4_copy": 1,
                    "temp_data_4": 1,
                    "val3": 1,
                    "value3": 1,
                    "var3": 2,
                    "var8": 1
                },
                "local_a8": {
                    "arg2": 1,
                    "data3": 2,
                    "data_2": 1,
                    "data_param3_copy": 1,
                    "data_param_3": 1,
                    "local_param11": 2,
                    "local_param_11": 1,
                    "local_value3": 1,
                    "param11": 3,
                    "param2_copy": 1,
                    "param3": 1,
                    "param3_copy": 2,
                    "param_11": 1,
                    "param_11_copy": 3,
                    "pointer_3_copy": 1,
                    "pointer_arg2": 1,
                    "pointer_value_3_copy": 1,
                    "temp_data_3": 1,
                    "val2": 1,
                    "value2": 1,
                    "var2": 2,
                    "var7": 1
                },
                "local_b0": {
                    "arg1": 1,
                    "data2": 2,
                    "data_1": 1,
                    "data_param2_copy": 1,
                    "data_param_2": 1,
                    "local_param10": 2,
                    "local_param_10": 1,
                    "local_value2": 1,
                    "param10": 3,
                    "param1_copy": 1,
                    "param2": 1,
                    "param2_copy": 2,
                    "param_10": 1,
                    "param_10_copy": 3,
                    "pointer_2_copy": 1,
                    "pointer_arg1": 1,
                    "pointer_value_2_copy": 1,
                    "temp_data_2": 1,
                    "val1": 1,
                    "value1": 1,
                    "var1": 2,
                    "var6": 1
                },
                "local_b8": {
                    "another_buffer": 1,
                    "buffer": 6,
                    "buffer_data": 1,
                    "local_array": 2,
                    "local_buffer": 5,
                    "local_data": 1,
                    "local_data_buffer": 1,
                    "some_data": 1,
                    "temp_buffer": 2,
                    "temporary_buffer": 5,
                    "temporary_data": 1
                },
                "local_c8": {
                    "buffer": 6,
                    "buffer_pointer": 1,
                    "copy_buffer": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "local_array": 1,
                    "local_buffer": 14,
                    "local_data_ptr": 1,
                    "pointer2": 1,
                    "stack_ptr_2": 1,
                    "temp_buffer": 1
                },
                "local_d0": {
                    "buffer": 11,
                    "buffer_pointer": 3,
                    "buffer_ptr": 5,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "pointer_7": 1,
                    "stack_pointer": 1,
                    "stack_ptr": 1,
                    "stack_ptr_1": 1,
                    "str_ptr": 1
                },
                "local_d4": {
                    "buffer_len": 1,
                    "buffer_length": 2,
                    "buffer_size": 1,
                    "bytes_read": 1,
                    "copy_length": 1,
                    "count": 1,
                    "data_size": 2,
                    "length": 4,
                    "length_2": 1,
                    "local_var": 1,
                    "offset": 2,
                    "size": 1,
                    "size_2": 1
                },
                "local_d8": {
                    "array_size": 1,
                    "buffer_length": 1,
                    "buffer_size": 8,
                    "count": 1,
                    "data_size": 1,
                    "len": 1,
                    "length": 2,
                    "length_1": 1,
                    "size": 12,
                    "size_1": 1,
                    "str_len": 1
                },
                "param_1": {
                    "arg1": 3,
                    "data": 2,
                    "flag1": 1,
                    "flag_param": 2,
                    "input1": 9,
                    "input_1": 5,
                    "input_param_1": 2,
                    "memory_address_1": 1,
                    "param_1": 1,
                    "source_data": 1
                },
                "param_10": {
                    "arg2": 1,
                    "data2": 3,
                    "data_2": 2,
                    "data_param2": 1,
                    "data_param_2": 1,
                    "data_ptr_1": 1,
                    "input2": 1,
                    "param10": 3,
                    "param2": 4,
                    "param_10": 3,
                    "pointer_2": 1,
                    "pointer_arg1": 1,
                    "pointer_value_2": 1,
                    "value2": 2,
                    "var1": 1
                },
                "param_11": {
                    "arg3": 1,
                    "data3": 3,
                    "data_3": 2,
                    "data_param3": 1,
                    "data_param_3": 1,
                    "data_ptr_2": 1,
                    "input3": 1,
                    "param11": 3,
                    "param3": 4,
                    "param_11": 3,
                    "pointer_3": 1,
                    "pointer_arg2": 1,
                    "pointer_value_3": 1,
                    "value3": 2,
                    "var2": 1
                },
                "param_12": {
                    "arg4": 1,
                    "data4": 3,
                    "data_4": 2,
                    "data_param4": 1,
                    "data_param_4": 1,
                    "data_ptr_3": 1,
                    "input4": 1,
                    "param12": 3,
                    "param4": 4,
                    "param_12": 3,
                    "pointer_4": 1,
                    "pointer_arg3": 1,
                    "pointer_value_4": 1,
                    "value4": 2,
                    "var3": 1
                },
                "param_13": {
                    "arg5": 1,
                    "data5": 3,
                    "data_5": 2,
                    "data_param5": 1,
                    "data_param_5": 1,
                    "data_ptr_4": 1,
                    "input5": 1,
                    "param13": 3,
                    "param5": 4,
                    "param_13": 3,
                    "pointer_5": 1,
                    "pointer_arg4": 1,
                    "pointer_value_5": 1,
                    "value5": 2,
                    "var4": 1
                },
                "param_14": {
                    "arg6": 1,
                    "data6": 3,
                    "data_6": 2,
                    "data_param6": 1,
                    "data_param_6": 1,
                    "data_ptr_5": 1,
                    "input6": 1,
                    "param14": 3,
                    "param6": 4,
                    "param_14": 3,
                    "pointer_6": 1,
                    "pointer_arg5": 1,
                    "pointer_value_6": 1,
                    "value6": 2,
                    "var5": 1
                },
                "param_2": {
                    "arg2": 3,
                    "args": 1,
                    "command_param": 1,
                    "flag2": 1,
                    "flag_param2": 1,
                    "input2": 9,
                    "input_2": 5,
                    "input_param_2": 2,
                    "memory_address_2": 1,
                    "param_2": 1,
                    "va_list": 1
                },
                "param_3": {
                    "arg3": 3,
                    "flag3": 1,
                    "flag_param3": 1,
                    "input3": 10,
                    "input_3": 5,
                    "input_param_3": 2,
                    "memory_address_3": 1,
                    "option_param": 1,
                    "param_3": 1
                },
                "param_4": {
                    "arg4": 3,
                    "argument_param": 1,
                    "flag4": 1,
                    "flag_param4": 1,
                    "input4": 10,
                    "input_4": 5,
                    "input_param_4": 2,
                    "memory_address_4": 1,
                    "param_4": 1
                },
                "param_5": {
                    "arg5": 3,
                    "data_param": 1,
                    "flag5": 1,
                    "flag_param5": 1,
                    "input5": 10,
                    "input_5": 5,
                    "input_param_5": 2,
                    "memory_address_5": 1,
                    "param_5": 1
                },
                "param_6": {
                    "arg6": 3,
                    "flag6": 1,
                    "flag_param6": 1,
                    "info_param": 1,
                    "input6": 10,
                    "input_6": 5,
                    "input_param_6": 2,
                    "memory_address_6": 1,
                    "param_6": 1
                },
                "param_7": {
                    "arg7": 3,
                    "flag7": 1,
                    "flag_param7": 1,
                    "input7": 10,
                    "input_7": 5,
                    "input_param_7": 2,
                    "memory_address_7": 1,
                    "param_7": 1,
                    "value_param": 1
                },
                "param_8": {
                    "arg8": 3,
                    "config_param": 1,
                    "flag8": 1,
                    "flag_param8": 1,
                    "input8": 10,
                    "input_8": 5,
                    "input_param_8": 2,
                    "memory_address_8": 1,
                    "param_8": 1
                },
                "param_9": {
                    "arg1": 1,
                    "data": 1,
                    "data1": 3,
                    "data_1": 2,
                    "data_param1": 1,
                    "data_param_1": 1,
                    "data_pointer": 1,
                    "input1": 1,
                    "input9": 1,
                    "input_param": 1,
                    "param1": 4,
                    "param9": 2,
                    "param_9": 2,
                    "param_ptr": 1,
                    "pointer_1": 1,
                    "pointer_value_1": 1,
                    "value1": 2
                },
                "xexit": {
                    "exit_program": 5
                }
            },
            "called": [
                "xexit",
                "FUN_001038b0"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nvoid process_data_00104a60(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 input5,undefined4 input6,undefined4 input7,undefined4 input8,\n                 undefined8 param1,undefined8 param2,undefined8 param3,undefined8 param4,\n                 undefined8 param5,undefined8 param6)\n\n{\n  char flag;\n  undefined4 size;\n  undefined4 length;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined buffer [8];\n  undefined8 param_10_copy;\n  undefined8 param11;\n  undefined8 param12;\n  undefined8 param13;\n  undefined8 param_14_copy;\n  undefined4 param1;\n  undefined4 param2;\n  undefined4 param3;\n  undefined4 param4;\n  undefined4 param5;\n  undefined4 param6;\n  undefined4 param7;\n  undefined4 param8;\n  \n  if (flag != '\\0') {\n    param1 = input1;\n    param2 = input2;\n    param3 = input3;\n    param4 = input4;\n    param5 = input5;\n    param6 = input6;\n    param7 = input7;\n    param8 = input8;\n  }\n  buffer = &stack0x00000008;\n  size = 8;\n  local_buffer = buffer;\n  length = 0x30;\n  param_10_copy = param2;\n  param11 = param3;\n  param12 = param4;\n  param13 = param5;\n  param_14_copy = param6;\n  FUN_001038b0(param1,&size);\n  xexit(1);\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
            "current_name": "process_data_00104a60",
            "entrypoint": "0x00104a60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104a60": "process_data_00104a60",
                "in_AL": "flag",
                "local_18": "param8",
                "local_28": "param7",
                "local_38": "param6",
                "local_48": "param5",
                "local_58": "param4",
                "local_68": "param3",
                "local_78": "param2",
                "local_88": "param1",
                "local_90": "param_14_copy",
                "local_98": "param13",
                "local_a0": "param12",
                "local_a8": "param11",
                "local_b0": "param_10_copy",
                "local_b8": "buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "length",
                "local_d8": "size",
                "param_1": "input1",
                "param_10": "param2",
                "param_11": "param3",
                "param_12": "param4",
                "param_13": "param5",
                "param_14": "param6",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "param_7": "input7",
                "param_8": "input8",
                "param_9": "param1",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "_DT_FINI": {
            "called": [],
            "calling": [],
            "code": "\nvoid _DT_FINI(void)\n\n{\n  return;\n}\n\n",
            "current_name": "_DT_FINI",
            "entrypoint": "0x00104af4",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_DT_INIT": {
            "called": [
                "__gmon_start__"
            ],
            "calling": [],
            "code": "\nvoid _DT_INIT(void)\n\n{\n  __gmon_start__();\n  return;\n}\n\n",
            "current_name": "_DT_INIT",
            "entrypoint": "0x00102000",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_FINI_0": {
            "called": [
                "__cxa_finalize",
                "FUN_001039e0"
            ],
            "calling": [],
            "code": "\nvoid _FINI_0(void)\n\n{\n  if (DAT_00108340 != '\\0') {\n    return;\n  }\n  __cxa_finalize(PTR_LOOP_00108188);\n  FUNC_001039e0();\n  DAT_00108340 = 1;\n  return;\n}\n\n",
            "current_name": "_FINI_0",
            "entrypoint": "0x00103a50",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "_INIT_0": {
            "called": [
                "FUN_00103a10"
            ],
            "calling": [],
            "code": "\nvoid _INIT_0(void)\n\n{\n  FUNC_00103a10();\n  return;\n}\n\n",
            "current_name": "_INIT_0",
            "entrypoint": "0x00103a90",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "__cxa_finalize": {
            "called": [
                "__cxa_finalize"
            ],
            "calling": [
                "_FINI_0"
            ],
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n",
            "current_name": "__cxa_finalize",
            "entrypoint": "0x00102320",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "__errno_location": {
            "called": [
                "__errno_location"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  return piVar1;\n}\n\n",
            "current_name": "__errno_location",
            "entrypoint": "0x00102050",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "__uflow": {
            "called": [
                "__uflow"
            ],
            "calling": [
                "FUN_0010290e",
                "FUN_00103520"
            ],
            "code": "\n\n\nint __uflow(_IO_FILE *param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = __uflow(param_1);\n  return iVar1;\n}\n\n",
            "current_name": "__uflow",
            "entrypoint": "0x00102030",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_check_format": {
            "called": [
                "bfd_check_format"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid bfd_check_format(void)\n\n{\n  bfd_check_format();\n  return;\n}\n\n",
            "current_name": "bfd_check_format",
            "entrypoint": "0x00102300",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_close": {
            "called": [
                "bfd_close"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid bfd_close(void)\n\n{\n  bfd_close();\n  return;\n}\n\n",
            "current_name": "bfd_close",
            "entrypoint": "0x00102290",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_errmsg": {
            "called": [
                "bfd_errmsg"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid bfd_errmsg(void)\n\n{\n  bfd_errmsg();\n  return;\n}\n\n",
            "current_name": "bfd_errmsg",
            "entrypoint": "0x001022d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_get_error": {
            "called": [
                "bfd_get_error"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid bfd_get_error(void)\n\n{\n  bfd_get_error();\n  return;\n}\n\n",
            "current_name": "bfd_get_error",
            "entrypoint": "0x00102160",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_init": {
            "called": [
                "bfd_init"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid bfd_init(void)\n\n{\n  bfd_init();\n  return;\n}\n\n",
            "current_name": "bfd_init",
            "entrypoint": "0x001021b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_malloc_and_get_section": {
            "called": [
                "bfd_malloc_and_get_section"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid bfd_malloc_and_get_section(void)\n\n{\n  bfd_malloc_and_get_section();\n  return;\n}\n\n",
            "current_name": "bfd_malloc_and_get_section",
            "entrypoint": "0x001020b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_openr": {
            "called": [
                "bfd_openr"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid bfd_openr(void)\n\n{\n  bfd_openr();\n  return;\n}\n\n",
            "current_name": "bfd_openr",
            "entrypoint": "0x001020c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_default_target": {
            "called": [
                "bfd_set_default_target"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid bfd_set_default_target(void)\n\n{\n  bfd_set_default_target();\n  return;\n}\n\n",
            "current_name": "bfd_set_default_target",
            "entrypoint": "0x00102080",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_set_error_program_name": {
            "called": [
                "bfd_set_error_program_name"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n",
            "current_name": "bfd_set_error_program_name",
            "entrypoint": "0x00102250",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bfd_target_list": {
            "called": [
                "bfd_target_list"
            ],
            "calling": [
                "FUN_001030c0"
            ],
            "code": "\nvoid bfd_target_list(void)\n\n{\n  bfd_target_list();\n  return;\n}\n\n",
            "current_name": "bfd_target_list",
            "entrypoint": "0x00102150",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "bindtextdomain": {
            "called": [
                "bindtextdomain"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n",
            "current_name": "bindtextdomain",
            "entrypoint": "0x001020e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "dcgettext": {
            "called": [
                "dcgettext"
            ],
            "calling": [
                "FUN_001030c0",
                "FUN_00103aa0"
            ],
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n",
            "current_name": "dcgettext",
            "entrypoint": "0x001020f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "entry": {
            "called": [
                "__libc_start_main",
                "FUN_00103aa0"
            ],
            "calling": [],
            "code": "\nvoid processEntry entry(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined auStack_8 [8];\n  \n  __libc_start_main(FUN_00103aa0,param_2,&stack0x00000008,0,0,param_1,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "entry",
            "entrypoint": "0x001039b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "exit": {
            "called": [
                "exit"
            ],
            "calling": [
                "FUN_001030c0",
                "FUN_00103aa0"
            ],
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n",
            "current_name": "exit",
            "entrypoint": "0x001022e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fclose": {
            "called": [
                "fclose"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fclose",
            "entrypoint": "0x001020d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "ferror": {
            "called": [
                "ferror"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "ferror",
            "entrypoint": "0x00102060",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fflush": {
            "called": [
                "fflush"
            ],
            "calling": [
                "FUN_00103aa0",
                "FUN_001038b0"
            ],
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fflush",
            "entrypoint": "0x00102220",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fopen": {
            "called": [
                "fopen"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n",
            "current_name": "fopen",
            "entrypoint": "0x00102270",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fprintf": {
            "called": [
                "fprintf"
            ],
            "calling": [
                "FUN_001030c0",
                "FUN_00103aa0",
                "FUN_001038b0"
            ],
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n",
            "current_name": "fprintf",
            "entrypoint": "0x001021e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fputc": {
            "called": [
                "fputc"
            ],
            "calling": [
                "FUN_001030c0"
            ],
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fputc",
            "entrypoint": "0x001021a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fputs": {
            "called": [
                "fputs"
            ],
            "calling": [
                "FUN_00103240",
                "FUN_0010259a",
                "FUN_00102b11"
            ],
            "code": "\n\n\nint fputs(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputs(__s,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "fputs",
            "entrypoint": "0x00102140",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fread": {
            "called": [
                "fread"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n",
            "current_name": "fread",
            "entrypoint": "0x00102090",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "free": {
            "called": [
                "free"
            ],
            "calling": [
                "FUN_00103240",
                "FUN_0010259a",
                "FUN_001030c0",
                "FUN_00103aa0"
            ],
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n",
            "current_name": "free",
            "entrypoint": "0x00102040",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fseek": {
            "called": [
                "fseek"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n",
            "current_name": "fseek",
            "entrypoint": "0x00102230",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "ftell": {
            "called": [
                "ftell"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n",
            "current_name": "ftell",
            "entrypoint": "0x001021f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "fwrite": {
            "called": [
                "fwrite"
            ],
            "calling": [
                "FUN_00103240",
                "FUN_0010293a"
            ],
            "code": "\n\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fwrite(__ptr,__size,__n,__s);\n  return sVar1;\n}\n\n",
            "current_name": "fwrite",
            "entrypoint": "0x001022f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "getopt_long": {
            "called": [
                "getopt_long"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n",
            "current_name": "getopt_long",
            "entrypoint": "0x00102110",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "isatty": {
            "called": [
                "isatty"
            ],
            "calling": [
                "FUN_0010293a"
            ],
            "code": "\n\n\nint isatty(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = isatty(__fd);\n  return iVar1;\n}\n\n",
            "current_name": "isatty",
            "entrypoint": "0x00102070",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "memcpy": {
            "called": [
                "memcpy"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "memcpy",
            "entrypoint": "0x00102210",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "memmove": {
            "called": [
                "memmove"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "memmove",
            "entrypoint": "0x00102260",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "perror": {
            "called": [
                "perror"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nvoid perror(char *__s)\n\n{\n  perror(__s);\n  return;\n}\n\n",
            "current_name": "perror",
            "entrypoint": "0x001022a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "printf": {
            "called": [
                "printf"
            ],
            "calling": [
                "FUN_0010259a",
                "FUN_0010293a",
                "FUN_00103aa0",
                "FUN_0010286f",
                "FUN_00102853"
            ],
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n",
            "current_name": "printf",
            "entrypoint": "0x00102120",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "putc": {
            "called": [
                "putc"
            ],
            "calling": [
                "FUN_00103240",
                "FUN_0010259a",
                "FUN_0010293a",
                "FUN_001038b0",
                "FUN_00102b11"
            ],
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "putc",
            "entrypoint": "0x001021d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "setlocale": {
            "called": [
                "setlocale"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = setlocale(__category,__locale);\n  return pcVar1;\n}\n\n",
            "current_name": "setlocale",
            "entrypoint": "0x00102240",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "stat": {
            "called": [
                "stat"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n",
            "current_name": "stat",
            "entrypoint": "0x00102200",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strcmp": {
            "called": [
                "strcmp"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcmp(__s1,__s2);\n  return iVar1;\n}\n\n",
            "current_name": "strcmp",
            "entrypoint": "0x001021c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strerror": {
            "called": [
                "strerror"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strerror(__errnum);\n  return pcVar1;\n}\n\n",
            "current_name": "strerror",
            "entrypoint": "0x00102310",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strlen": {
            "called": [
                "strlen"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n",
            "current_name": "strlen",
            "entrypoint": "0x00102100",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "strtoul": {
            "called": [
                "strtoul"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nulong strtoul(char *__nptr,char **__endptr,int __base)\n\n{\n  ulong uVar1;\n  \n  uVar1 = strtoul(__nptr,__endptr,__base);\n  return uVar1;\n}\n\n",
            "current_name": "strtoul",
            "entrypoint": "0x001022c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "textdomain": {
            "called": [
                "textdomain"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n",
            "current_name": "textdomain",
            "entrypoint": "0x001020a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "vfprintf": {
            "called": [
                "vfprintf"
            ],
            "calling": [
                "FUN_001038b0"
            ],
            "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 = vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n",
            "current_name": "vfprintf",
            "entrypoint": "0x001022b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xexit": {
            "called": [
                "xexit"
            ],
            "calling": [
                "FUN_00104a60",
                "FUN_00103aa0"
            ],
            "code": "\nvoid xexit(void)\n\n{\n  xexit();\n  return;\n}\n\n",
            "current_name": "xexit",
            "entrypoint": "0x00102280",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xmalloc": {
            "called": [
                "xmalloc"
            ],
            "calling": [
                "FUN_00103240",
                "FUN_00103aa0"
            ],
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n",
            "current_name": "xmalloc",
            "entrypoint": "0x00102170",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xmalloc_set_program_name": {
            "called": [
                "xmalloc_set_program_name"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n",
            "current_name": "xmalloc_set_program_name",
            "entrypoint": "0x00102180",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xrealloc": {
            "called": [
                "xrealloc"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n",
            "current_name": "xrealloc",
            "entrypoint": "0x00102130",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "xstrdup": {
            "called": [
                "xstrdup"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n",
            "current_name": "xstrdup",
            "entrypoint": "0x00102190",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_00102020",
            "FUN_00102330",
            "FUN_0010259a",
            "FUN_00102771",
            "FUN_001027e2",
            "FUN_0010282b",
            "FUN_00102853",
            "FUN_0010286f",
            "FUN_001028b2",
            "FUN_0010290e",
            "FUN_0010293a",
            "FUN_00102b11",
            "FUN_001030c0",
            "FUN_00103240",
            "FUN_001034d5",
            "FUN_001034fa",
            "FUN_00103510",
            "FUN_00103520",
            "FUN_00103810",
            "FUN_00103890",
            "FUN_001038b0",
            "FUN_00103910",
            "FUN_00103aa0",
            "FUN_00104a60"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 157439
}