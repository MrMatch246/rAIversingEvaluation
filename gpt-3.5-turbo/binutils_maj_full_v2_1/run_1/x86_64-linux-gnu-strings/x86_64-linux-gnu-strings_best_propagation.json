{
    "functions": {
        "FUN_00102000": {
            "additional_data": {
                "FUN_00102000": {
                    "initialize": 8,
                    "initialize_monitor": 1,
                    "initialize_monitoring": 3,
                    "initialize_program": 19
                },
                "__gmon_start__": {
                    "initialize_gmon": 2,
                    "initialize_performance_monitoring": 1,
                    "initialize_profiling": 5,
                    "monitor_start": 1,
                    "perform_profiling": 1,
                    "start_execution": 1,
                    "start_monitoring": 7,
                    "start_performance_measurement": 1,
                    "start_performance_monitoring": 3,
                    "start_profiling": 7,
                    "start_runtime_profiler": 1
                },
                "ret": {
                    "void": 1
                },
                "return": {
                    "end_program": 1
                },
                "void": {
                    "initialize_program": 1
                }
            },
            "called": [
                "FUN_00109120"
            ],
            "calling": [],
            "code": "\ninitialize_program_00102000 initialize_program_00102000(initialize_program_00102000)\n\n{\n  start_monitoring();\n  end_program;\n}\n\n",
            "current_name": "initialize_program_00102000",
            "entrypoint": "0x00102000",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102000": "initialize_program_00102000",
                "__gmon_start__": "start_monitoring",
                "ret": "void",
                "return": "end_program",
                "void": "initialize_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102020": {
            "additional_data": {
                "FUN_00102020": {
                    "call_indirect": 1,
                    "call_indirect_function": 2,
                    "call_indirect_jump": 1,
                    "execute_function": 1,
                    "execute_function_at_address": 1,
                    "execute_function_at_null_pointer": 1,
                    "execute_indirect_call": 3,
                    "execute_indirect_function": 2,
                    "execute_indirect_jump": 18,
                    "invoke_function_at_address": 1
                },
                "PTR_0": {
                    "function_ptr": 1
                },
                "PTR_undefined": {
                    "function_pointer": 1
                },
                "code": {
                    "function_pointer": 1,
                    "function_to_call": 2
                },
                "undefined": {
                    "function_address": 1,
                    "function_pointer": 1,
                    "function_ptr": 2,
                    "jump_address": 1,
                    "ptr_to_function": 1,
                    "target_function": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_indirect_jump_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(function_to_call *)(function_ptr *)0x0)();\n  return;\n}\n\n",
            "current_name": "execute_indirect_jump_00102020",
            "entrypoint": "0x00102020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102020": "execute_indirect_jump_00102020",
                "code": "function_to_call",
                "undefined": "function_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102030": {
            "called": [
                "FUN_00109000"
            ],
            "calling": [
                "FUN_0010290e",
                "FUN_00103520"
            ],
            "code": "\n\n\nint __uflow(_IO_FILE *param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = __uflow(param_1);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102030",
            "entrypoint": "0x00102030",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102040": {
            "called": [
                "FUN_00109008"
            ],
            "calling": [
                "FUN_0010259a",
                "FUN_00103240",
                "FUN_00103aa0",
                "FUN_001030c0"
            ],
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n",
            "current_name": "FUN_00102040",
            "entrypoint": "0x00102040",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102050": {
            "called": [
                "FUN_00109018"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  return piVar1;\n}\n\n",
            "current_name": "FUN_00102050",
            "entrypoint": "0x00102050",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102060": {
            "called": [
                "FUN_00109030"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102060",
            "entrypoint": "0x00102060",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102070": {
            "called": [
                "FUN_00109038"
            ],
            "calling": [
                "FUN_0010293a"
            ],
            "code": "\n\n\nint isatty(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = isatty(__fd);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102070",
            "entrypoint": "0x00102070",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102080": {
            "called": [
                "FUN_00109040"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid bfd_set_default_target(void)\n\n{\n  bfd_set_default_target();\n  return;\n}\n\n",
            "current_name": "FUN_00102080",
            "entrypoint": "0x00102080",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102090": {
            "called": [
                "FUN_00109048"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_00102090",
            "entrypoint": "0x00102090",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020a0": {
            "called": [
                "FUN_00109058"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n",
            "current_name": "FUN_001020a0",
            "entrypoint": "0x001020a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020b0": {
            "called": [
                "FUN_00109060"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid bfd_malloc_and_get_section(void)\n\n{\n  bfd_malloc_and_get_section();\n  return;\n}\n\n",
            "current_name": "FUN_001020b0",
            "entrypoint": "0x001020b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020c0": {
            "called": [
                "FUN_00109068"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid bfd_openr(void)\n\n{\n  bfd_openr();\n  return;\n}\n\n",
            "current_name": "FUN_001020c0",
            "entrypoint": "0x001020c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020d0": {
            "called": [
                "FUN_00109070"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001020d0",
            "entrypoint": "0x001020d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020e0": {
            "called": [
                "FUN_00109080"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n",
            "current_name": "FUN_001020e0",
            "entrypoint": "0x001020e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020f0": {
            "called": [
                "FUN_00109088"
            ],
            "calling": [
                "FUN_00103aa0",
                "FUN_001030c0"
            ],
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n",
            "current_name": "FUN_001020f0",
            "entrypoint": "0x001020f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102100": {
            "called": [
                "FUN_00109090"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_00102100",
            "entrypoint": "0x00102100",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102110": {
            "called": [
                "FUN_00109098"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n",
            "current_name": "FUN_00102110",
            "entrypoint": "0x00102110",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102120": {
            "called": [
                "FUN_001090a0"
            ],
            "calling": [
                "FUN_0010293a",
                "FUN_0010259a",
                "FUN_00102853",
                "FUN_00103aa0",
                "FUN_0010286f"
            ],
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102120",
            "entrypoint": "0x00102120",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102130": {
            "called": [
                "FUN_001090a8"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n",
            "current_name": "FUN_00102130",
            "entrypoint": "0x00102130",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102140": {
            "called": [
                "FUN_001090b0"
            ],
            "calling": [
                "FUN_0010259a",
                "FUN_00102b11",
                "FUN_00103240"
            ],
            "code": "\n\n\nint fputs(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputs(__s,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102140",
            "entrypoint": "0x00102140",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102150": {
            "called": [
                "FUN_001090c0"
            ],
            "calling": [
                "FUN_001030c0"
            ],
            "code": "\nvoid bfd_target_list(void)\n\n{\n  bfd_target_list();\n  return;\n}\n\n",
            "current_name": "FUN_00102150",
            "entrypoint": "0x00102150",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102160": {
            "called": [
                "FUN_001090c8"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid bfd_get_error(void)\n\n{\n  bfd_get_error();\n  return;\n}\n\n",
            "current_name": "FUN_00102160",
            "entrypoint": "0x00102160",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102170": {
            "called": [
                "FUN_001090d0"
            ],
            "calling": [
                "FUN_00103240",
                "FUN_00103aa0"
            ],
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n",
            "current_name": "FUN_00102170",
            "entrypoint": "0x00102170",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102180": {
            "called": [
                "FUN_001090d8"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n",
            "current_name": "FUN_00102180",
            "entrypoint": "0x00102180",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102190": {
            "called": [
                "FUN_001090e0"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n",
            "current_name": "FUN_00102190",
            "entrypoint": "0x00102190",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021a0": {
            "called": [
                "FUN_001090e8"
            ],
            "calling": [
                "FUN_001030c0"
            ],
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001021a0",
            "entrypoint": "0x001021a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021b0": {
            "called": [
                "FUN_001090f0"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid bfd_init(void)\n\n{\n  bfd_init();\n  return;\n}\n\n",
            "current_name": "FUN_001021b0",
            "entrypoint": "0x001021b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021c0": {
            "called": [
                "FUN_001090f8"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcmp(__s1,__s2);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001021c0",
            "entrypoint": "0x001021c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021d0": {
            "called": [
                "FUN_00109100"
            ],
            "calling": [
                "FUN_001038b0",
                "FUN_0010293a",
                "FUN_0010259a",
                "FUN_00102b11",
                "FUN_00103240"
            ],
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001021d0",
            "entrypoint": "0x001021d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021e0": {
            "called": [
                "FUN_00109110"
            ],
            "calling": [
                "FUN_001038b0",
                "FUN_00103aa0",
                "FUN_001030c0"
            ],
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001021e0",
            "entrypoint": "0x001021e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021f0": {
            "called": [
                "FUN_00109118"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n",
            "current_name": "FUN_001021f0",
            "entrypoint": "0x001021f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102200": {
            "called": [
                "FUN_00109128"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102200",
            "entrypoint": "0x00102200",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102210": {
            "called": [
                "FUN_00109130"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_00102210",
            "entrypoint": "0x00102210",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102220": {
            "called": [
                "FUN_00109138"
            ],
            "calling": [
                "FUN_001038b0",
                "FUN_00103aa0"
            ],
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102220",
            "entrypoint": "0x00102220",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102230": {
            "called": [
                "FUN_00109140"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102230",
            "entrypoint": "0x00102230",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102240": {
            "called": [
                "FUN_00109148"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = setlocale(__category,__locale);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_00102240",
            "entrypoint": "0x00102240",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102250": {
            "called": [
                "FUN_00109150"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n",
            "current_name": "FUN_00102250",
            "entrypoint": "0x00102250",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102260": {
            "called": [
                "FUN_00109158"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_00102260",
            "entrypoint": "0x00102260",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102270": {
            "called": [
                "FUN_00109160"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n",
            "current_name": "FUN_00102270",
            "entrypoint": "0x00102270",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102280": {
            "called": [
                "FUN_00109168"
            ],
            "calling": [
                "FUN_00103aa0",
                "FUN_00104a60"
            ],
            "code": "\nvoid xexit(void)\n\n{\n  xexit();\n  return;\n}\n\n",
            "current_name": "FUN_00102280",
            "entrypoint": "0x00102280",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102290": {
            "called": [
                "FUN_00109170"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid bfd_close(void)\n\n{\n  bfd_close();\n  return;\n}\n\n",
            "current_name": "FUN_00102290",
            "entrypoint": "0x00102290",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022a0": {
            "called": [
                "FUN_00109178"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nvoid perror(char *__s)\n\n{\n  perror(__s);\n  return;\n}\n\n",
            "current_name": "FUN_001022a0",
            "entrypoint": "0x001022a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022b0": {
            "called": [
                "FUN_00109180"
            ],
            "calling": [
                "FUN_001038b0"
            ],
            "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 = vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001022b0",
            "entrypoint": "0x001022b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022c0": {
            "called": [
                "FUN_00109188"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nulong strtoul(char *__nptr,char **__endptr,int __base)\n\n{\n  ulong uVar1;\n  \n  uVar1 = strtoul(__nptr,__endptr,__base);\n  return uVar1;\n}\n\n",
            "current_name": "FUN_001022c0",
            "entrypoint": "0x001022c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022d0": {
            "called": [
                "FUN_00109190"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid bfd_errmsg(void)\n\n{\n  bfd_errmsg();\n  return;\n}\n\n",
            "current_name": "FUN_001022d0",
            "entrypoint": "0x001022d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022e0": {
            "called": [
                "FUN_00109198"
            ],
            "calling": [
                "FUN_00103aa0",
                "FUN_001030c0"
            ],
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n",
            "current_name": "FUN_001022e0",
            "entrypoint": "0x001022e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022f0": {
            "called": [
                "FUN_001091a0"
            ],
            "calling": [
                "FUN_0010293a",
                "FUN_00103240"
            ],
            "code": "\n\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fwrite(__ptr,__size,__n,__s);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_001022f0",
            "entrypoint": "0x001022f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102300": {
            "called": [
                "FUN_001091a8"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid bfd_check_format(void)\n\n{\n  bfd_check_format();\n  return;\n}\n\n",
            "current_name": "FUN_00102300",
            "entrypoint": "0x00102300",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102310": {
            "called": [
                "FUN_001091b8"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strerror(__errnum);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_00102310",
            "entrypoint": "0x00102310",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102320": {
            "called": [
                "FUN_001091c8"
            ],
            "calling": [
                "FUN_00103a50"
            ],
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n",
            "current_name": "FUN_00102320",
            "entrypoint": "0x00102320",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102330": {
            "additional_data": {
                "DAT_00108358": {
                    "ending_string": 1,
                    "flag5": 1,
                    "message_text": 1,
                    "new_line_string": 1,
                    "newline_string": 1
                },
                "DAT_00108360": {
                    "character_type": 1,
                    "condition1": 1,
                    "flag1": 1,
                    "special_char": 1,
                    "target_char": 1,
                    "value_type": 1
                },
                "DAT_00108371": {
                    "filename_flag": 1,
                    "flag3": 1,
                    "is_file_name_set": 1,
                    "is_message_set": 1,
                    "print_flag": 1
                },
                "DAT_00108372": {
                    "filename_and_address_flag": 1,
                    "flag4": 1,
                    "is_address_part_set": 1,
                    "is_filename_set": 1,
                    "print_filename_flag": 1
                },
                "DAT_00108373": {
                    "condition2": 1,
                    "flag": 1,
                    "flag2": 1,
                    "is_flag_set": 2,
                    "use_processed_data": 1
                },
                "FUN_00102330": {
                    "print_and_format_data": 1,
                    "print_and_process_data": 2,
                    "print_formatted_data": 2,
                    "print_formatted_output": 19,
                    "print_input": 1,
                    "process_and_print_input_data": 1,
                    "process_data": 3,
                    "process_input": 2
                },
                "LAB_00102381": {
                    "print_character_4": 1,
                    "process_character_3": 1,
                    "put_char_to_output": 1
                },
                "LAB_001023bb": {
                    "print_character_3": 1,
                    "process_character_2": 1,
                    "put_char_to_output": 1
                },
                "LAB_001023f5": {
                    "print_character_2": 1,
                    "process_character_1": 1,
                    "put_char_to_output": 1
                },
                "LAB_00102438": {
                    "print_character": 1,
                    "print_tab": 1,
                    "put_tab": 1
                },
                "LAB_001033b3": {
                    "get_character": 1,
                    "get_next_character": 1,
                    "print_new_line": 1
                },
                "LAB_00103400": {
                    "print_buffer": 1,
                    "print_new_line": 1,
                    "print_output": 1
                },
                "LAB_0010348e": {
                    "unget_char": 1,
                    "unget_character": 2
                },
                "LAB_001034be": {
                    "end_of_function": 1,
                    "free_output_buffer": 1
                },
                "LAB_001034d5": {
                    "process_input_data": 1
                },
                "_sch_istable": {
                    "character_table": 5,
                    "istable": 1,
                    "sch_table": 1
                },
                "_stdout": {
                    "output_stream": 1,
                    "standard_output": 1,
                    "stdout": 4
                },
                "bVar4": {
                    "flag": 1,
                    "is_counter_less": 3,
                    "is_counter_less_than_limit": 2,
                    "is_counter_less_than_threshold": 3,
                    "is_counter_smaller": 1,
                    "is_flag_less_than": 1,
                    "is_less": 9,
                    "is_less_than": 2,
                    "is_less_than_table_size": 1,
                    "is_looping": 2,
                    "is_valid": 1,
                    "is_valid_length": 1,
                    "loop_condition": 1,
                    "lower_bound_check": 1
                },
                "code_r0x00102330": {
                    "loop_1": 1,
                    "print_formatted_data_loop": 1,
                    "print_formatted_output": 1,
                    "print_formatted_output_helper": 1,
                    "print_input": 1,
                    "process_and_print_input_data_loop": 1,
                    "process_data_loop": 1
                },
                "code_r0x001034d5": {
                    "process_input_data": 2
                },
                "fputc": {
                    "print_character_to_stdout": 1
                },
                "fputs": {
                    "print_string_to_stdout": 1,
                    "put_string": 1
                },
                "free": {
                    "free_memory": 2
                },
                "get_char": {
                    "get_character": 1
                },
                "getc": {
                    "get_char": 1
                },
                "in_AX": {
                    "char_flags": 1,
                    "character_flags": 1,
                    "flag": 1,
                    "flags": 10,
                    "input_char": 2,
                    "input_char_flags": 2,
                    "input_character_flags": 1,
                    "input_character_mask": 1,
                    "input_data": 1,
                    "input_flag": 2,
                    "input_flags": 5,
                    "input_value": 1,
                    "parameter_value": 1,
                    "status_flag": 1,
                    "temp2": 1
                },
                "in_R8D": {
                    "counter": 16,
                    "counter2": 1,
                    "flag": 1,
                    "index": 2,
                    "input_character_index": 1,
                    "input_length": 1,
                    "length": 1,
                    "loop_counter": 4,
                    "loop_limit": 1,
                    "max_index": 1,
                    "table_size": 1
                },
                "in_stack_00000010": {
                    "filename": 1,
                    "format": 1,
                    "format_string": 9,
                    "format_string1": 1,
                    "input_prompt": 1,
                    "message": 10,
                    "output_message": 1,
                    "output_string": 1,
                    "prefix": 1,
                    "prefix_string": 1,
                    "prompt": 2,
                    "stack_parameter1": 1
                },
                "in_stack_00000038": {
                    "address": 16,
                    "address_part": 4,
                    "filename_address_2": 1,
                    "format_string2": 1,
                    "formatted_output": 6,
                    "formatted_output_prompt": 1,
                    "stack_parameter2": 1
                },
                "memset": {
                    "set_zero": 1
                },
                "param_1": {
                    "character": 2,
                    "data": 2,
                    "data_pointer": 1,
                    "input": 4,
                    "input_char": 6,
                    "input_character": 2,
                    "input_data": 10,
                    "input_length": 1,
                    "input_value": 2
                },
                "print_filename_and_address_part_0": {
                    "print_filename_and_address_part0": 1
                },
                "print_formatted_output_001034fa": {
                    "print_formatted_output_1": 1,
                    "print_formatted_output_with_one_char": 1
                },
                "print_formatted_output_00103510": {
                    "print_formatted_output_2": 1,
                    "print_formatted_output_with_two_chars": 1
                },
                "printf": {
                    "print_formatted_output": 1,
                    "print_string": 1
                },
                "process_input_data_001034d5": {
                    "process_input_data": 14
                },
                "putc": {
                    "put_character": 1
                },
                "putchar": {
                    "print_character_to_stdout": 1
                },
                "uVar1": {
                    "char_count": 2,
                    "char_index": 1,
                    "char_value": 1,
                    "count": 1,
                    "counter": 1,
                    "index": 2,
                    "loop_iterator": 1,
                    "table_value": 1,
                    "temp1": 4,
                    "temp_value1": 1,
                    "temp_var": 1,
                    "temp_var1": 6,
                    "temp_var_1": 1,
                    "u_var1": 1
                },
                "uVar2": {
                    "char_index": 1,
                    "current_index": 1,
                    "i": 2,
                    "index": 4,
                    "index1": 13,
                    "index_var": 1,
                    "index_var1": 1,
                    "input_char_index": 1,
                    "output_index": 1,
                    "temp3": 1,
                    "temp_value2": 1,
                    "temp_var2": 1,
                    "temp_var_2": 1
                },
                "uVar3": {
                    "char_index": 1,
                    "char_index_1": 1,
                    "index2": 15,
                    "index_var2": 2,
                    "j": 2,
                    "next_index": 3,
                    "next_input_char_index": 1,
                    "temp4": 1,
                    "temp_value3": 1,
                    "temp_var3": 1,
                    "temp_var_3": 1
                },
                "unaff_R14": {
                    "buffer": 7,
                    "output": 1,
                    "output_buffer": 15,
                    "output_data": 2,
                    "output_string": 6
                },
                "unaff_R15": {
                    "file_address": 1,
                    "file_name": 2,
                    "filename": 17,
                    "filename_addr": 1,
                    "filename_address": 3,
                    "filename_and_address": 6,
                    "filename_and_address_part": 1
                },
                "unget_part_char": {
                    "unget_partial_character": 1
                },
                "ungetc": {
                    "unget_char": 1
                }
            },
            "called": [
                "FUN_001034d5"
            ],
            "calling": [
                "FUN_0010259a"
            ],
            "code": "\n\n\nvoid print_formatted_output_00102330(ulong input_data)\n\n{\n  uint temp_var1;\n  ushort flags;\n  ulong index1;\n  ulong index2;\n  uint counter;\n  char *output_buffer;\n  undefined8 filename;\n  bool is_less;\n  undefined8 message;\n  undefined8 address;\n  \nprocess_data_loop:\n  if ((DAT_00108360 != 'S') || ((long)input_data < 0x80)) {\n    if (DAT_00108373 == '\\0') goto process_input_data;\n    if ((flags & 0x40) == 0) {\n      process_input_data();\n      return;\n    }\n  }\nprint_new_line:\n  index1 = (ulong)counter;\n  counter = counter + 1;\n  index2 = (ulong)counter;\n  is_less = counter < DAT_00108374;\n  output_buffer[index1] = (char)input_data;\n  if (is_less) goto print_new_line;\n  do {\n    if (DAT_00108371 != '\\0') {\n      print_formatted_output_00102330(\"%s: \",message);\n    }\n    if (DAT_00108372 == '\\0') {\n      output_buffer[index2] = '\\0';\n      print_string_to_stdout(output_buffer,stdout);\n    }\n    else {\n      print_filename_and_address_part0(filename);\n      output_buffer[index2] = '\\0';\n      print_string_to_stdout(output_buffer,stdout);\n    }\n    while (index2 = get_character(), index2 != 0xffffffffffffffff) {\n      if (0xff < index2) {\nunget_character:\n        unget_partial_character();\n        break;\n      }\n      if (index2 == 9) {\nprint_tab:\n        put_character((int)index2,stdout);\n      }\n      else {\n        if ((*(ushort *)(&character_table + index2 * 2) & 0x10) == 0) {\n          if (((DAT_00108360 != 'S') || ((long)index2 < 0x80)) &&\n             ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + index2 * 2) & 0x40) == 0))))\n          goto unget_character;\n          goto print_tab;\n        }\n        put_character((int)index2,stdout);\n      }\n    }\n    if (DAT_00108358 == (char *)0x0) {\n      put_character(10,stdout);\n    }\n    else {\n      print_string_to_stdout(DAT_00108358,stdout);\n    }\n    while (index2 = (ulong)DAT_00108374, filename = address, DAT_00108374 != 0) {\n      index2 = get_character();\n      temp_var1 = DAT_00108374;\n      if (index2 == 0xffffffffffffffff) goto free_output_buffer;\n      if (index2 < 0x100) {\n        if (index2 == 9) {\nprocess_character_1:\n          *output_buffer = (char)index2;\n          if (temp_var1 < 2) {\n            print_formatted_output_00102330_with_one_char();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&character_table + index2 * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)index2 < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + index2 * 2) & 0x40) == 0))))\n            goto process_input_data;\n            goto process_character_1;\n          }\n          *output_buffer = (char)index2;\n          if (temp_var1 < 2) {\n            index2 = 1;\n            break;\n          }\n        }\n        index2 = get_character();\n        temp_var1 = DAT_00108374;\n        if (index2 == 0xffffffffffffffff) goto free_output_buffer;\n        if (0xff < index2) goto process_input_data;\n        if (index2 == 9) {\nput_char_to_output:\n          output_buffer[1] = (char)index2;\n          if (temp_var1 < 3) {\n            print_formatted_output_00102330_2();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&character_table + index2 * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)index2 < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + index2 * 2) & 0x40) == 0))))\n            goto process_input_data;\n            goto put_char_to_output;\n          }\n          output_buffer[1] = (char)index2;\n          if (temp_var1 < 3) {\n            index2 = 2;\n            break;\n          }\n        }\n        index2 = get_character();\n        temp_var1 = DAT_00108374;\n        if (index2 == 0xffffffffffffffff) goto free_output_buffer;\n        if (0xff < index2) goto process_input_data;\n        if (index2 == 9) {\nprint_character_4:\n          output_buffer[2] = (char)index2;\n        }\n        else {\n          if ((*(ushort *)(&character_table + index2 * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)index2 < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + index2 * 2) & 0x40) == 0))))\n            goto process_input_data;\n            goto print_character_4;\n          }\n          output_buffer[2] = (char)index2;\n        }\n        if (temp_var1 < 4) {\n          index2 = 3;\n          break;\n        }\n        counter = 3;\nprint_new_line:\n        input_data = get_character();\n        if (input_data == 0xffffffffffffffff) {\nfree_output_buffer:\n          free_memory(output_buffer);\n          return;\n        }\n        if (input_data < 0x100) {\n          if ((input_data == 9) ||\n             (flags = *(ushort *)(&character_table + input_data * 2), (flags & 0x10) != 0))\n          goto print_new_line;\n          goto process_data_loop;\n        }\n      }\nprocess_input_data:\n      unget_partial_character();\n    }\n  } while( true );\n}\n\n",
            "current_name": "print_formatted_output_00102330",
            "entrypoint": "0x00102330",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102330": "print_formatted_output_00102330",
                "LAB_00102381": "print_character_4",
                "LAB_001023bb": "put_char_to_output",
                "LAB_001023f5": "process_character_1",
                "LAB_00102438": "print_tab",
                "LAB_001033b3": "print_new_line",
                "LAB_00103400": "print_new_line",
                "LAB_0010348e": "unget_character",
                "LAB_001034be": "free_output_buffer",
                "_sch_istable": "character_table",
                "_stdout": "stdout",
                "bVar4": "is_less",
                "code_r0x00102330": "process_data_loop",
                "code_r0x001034d5": "process_input_data",
                "fputs": "print_string_to_stdout",
                "free": "free_memory",
                "get_char": "get_character",
                "in_AX": "flags",
                "in_R8D": "counter",
                "in_stack_00000010": "message",
                "in_stack_00000038": "address",
                "param_1": "input_data",
                "print_filename_and_address_part_0": "print_filename_and_address_part0",
                "print_formatted_output_001034fa": "print_formatted_output_with_one_char",
                "print_formatted_output_00103510": "print_formatted_output_2",
                "printf": "print_formatted_output",
                "process_input_data_001034d5": "process_input_data",
                "putc": "put_character",
                "uVar1": "temp_var1",
                "uVar2": "index1",
                "uVar3": "index2",
                "unaff_R14": "output_buffer",
                "unaff_R15": "filename",
                "unget_part_char": "unget_partial_character"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010259a": {
            "additional_data": {
                "DAT_00108358": {
                    "delimiter": 1,
                    "end_line": 1,
                    "end_of_line": 1,
                    "line_ending": 2,
                    "output_format": 1,
                    "output_str2": 1,
                    "output_string2": 1,
                    "output_string_2": 1
                },
                "DAT_00108360": {
                    "char_mode": 1,
                    "char_set": 1,
                    "condition": 1,
                    "encoding_type": 1,
                    "file_encoding": 1,
                    "file_type_flag": 1,
                    "flag2": 1,
                    "input_condition": 1,
                    "input_type": 1
                },
                "DAT_00108371": {
                    "continue_loop": 1
                },
                "DAT_00108372": {
                    "flag1": 1,
                    "is_end_of_file": 1,
                    "is_filename": 1,
                    "is_output_suppressed": 1,
                    "is_print_filename_address": 1,
                    "is_zero": 1,
                    "print_address_flag": 2,
                    "print_filename": 1
                },
                "DAT_00108373": {
                    "condition_2": 1,
                    "flag3": 1,
                    "is_allow_control_chars": 1,
                    "is_printable": 1,
                    "is_special_char": 1,
                    "is_valid_character": 1,
                    "output_condition": 1,
                    "print_special_char_flag": 1,
                    "use_encoding_flag": 1
                },
                "DAT_00108374": {
                    "bytes_read": 1,
                    "counter": 1,
                    "file_size": 1,
                    "input_length": 1,
                    "line_length": 1,
                    "more_data": 1,
                    "remaining_chars": 1,
                    "remaining_input": 1
                },
                "FUN_00102330": {
                    "convert_data": 1,
                    "perform_conversion": 1,
                    "print_filename_and_address": 1,
                    "print_filename_and_address_part_0": 2,
                    "process_input_data": 1,
                    "read_and_convert_data": 5
                },
                "FUN_0010259a": {
                    "extract_and_print_data": 1,
                    "print_and_process_data": 3,
                    "print_and_process_input": 2,
                    "print_data": 8,
                    "print_file_content": 2,
                    "print_file_contents": 1,
                    "print_formatted_output": 5,
                    "print_output": 3,
                    "print_output_and_process_input": 2,
                    "print_string_from_file": 1,
                    "process_input_and_print": 1,
                    "read_and_print_data": 1
                },
                "LAB_00102381": {
                    "handle_tab_char_3": 1
                },
                "LAB_001023bb": {
                    "handle_tab_char_2": 1
                },
                "LAB_001023f5": {
                    "handle_tab_char_1": 1
                },
                "LAB_0010348e": {
                    "end_of_input": 1
                },
                "LAB_001034be": {
                    "end_of_output": 1
                },
                "_sch_istable": {
                    "array": 1,
                    "char_table": 2,
                    "character_istable": 1,
                    "character_table": 5,
                    "table": 1
                },
                "_stdout": {
                    "output": 1,
                    "output_stream": 1,
                    "standard_output": 5,
                    "stdout": 2
                },
                "bVar3": {
                    "check_flag": 1,
                    "condition": 1,
                    "flag": 1,
                    "is_character": 1,
                    "is_end": 1,
                    "is_end_of_data": 2,
                    "is_end_of_file": 3,
                    "is_end_of_input": 1,
                    "is_greater": 1,
                    "is_invalid_char": 1,
                    "is_printable": 1,
                    "is_special": 1,
                    "is_special_character": 1,
                    "is_tab": 3,
                    "is_table": 1,
                    "is_table_special_char": 1,
                    "is_valid": 4,
                    "is_valid_char": 1,
                    "temp_var3": 1,
                    "use_default_output": 1
                },
                "buffer": {
                    "input_buffer": 1
                },
                "code_r0x001034d5": {
                    "handle_non_printable_char": 1
                },
                "count": {
                    "data_count": 1
                },
                "file": {
                    "input_file": 1
                },
                "fputs": {
                    "print_string": 3,
                    "write_string": 1
                },
                "free": {
                    "free_memory": 2
                },
                "fun_00102330": {
                    "read_and_convert_data": 1
                },
                "get_char": {
                    "read_char": 5
                },
                "in_R8": {
                    "address": 1,
                    "bytes_read": 1,
                    "count": 2,
                    "current_char": 1,
                    "current_index": 2,
                    "data_index": 1,
                    "i": 1,
                    "index": 4,
                    "index2": 1,
                    "input": 1,
                    "input_count": 1,
                    "input_index": 2,
                    "input_value": 1,
                    "loop_counter": 1,
                    "loop_variable": 1,
                    "output_buffer_length": 1,
                    "output_char_count": 1,
                    "remaining_chars": 1,
                    "temp_index": 1
                },
                "joined_r0x0010341b": {
                    "end_of_processing": 1
                },
                "modifier": {
                    "value_modifier": 1
                },
                "param_11": {
                    "address": 11,
                    "file_address": 1,
                    "file_location": 1,
                    "filename": 2,
                    "filename_and_address": 2,
                    "formatted_output": 1,
                    "line_number": 1,
                    "modifier": 5,
                    "next_function_address": 1,
                    "output_format": 1,
                    "output_modifier": 1,
                    "print_address": 1,
                    "result": 2
                },
                "param_7": {
                    "address": 2,
                    "buffer_size": 2,
                    "char_count": 3,
                    "character": 1,
                    "count": 1,
                    "current_char_index": 1,
                    "data": 1,
                    "data_length": 1,
                    "file_offset": 2,
                    "file_position": 2,
                    "index": 1,
                    "input": 1,
                    "input_char": 3,
                    "input_data": 1,
                    "input_length": 4,
                    "input_value": 1,
                    "length": 1,
                    "output_buffer_index": 1,
                    "output_index": 1
                },
                "param_8": {
                    "data_name": 1,
                    "file_name": 5,
                    "filename": 15,
                    "format": 1,
                    "format_string": 2,
                    "input_message": 1,
                    "input_string": 1,
                    "message": 1,
                    "prompt": 2,
                    "prompt_message": 1
                },
                "print_filename_and_address_part_0": {
                    "print_filename_and_address": 5
                },
                "print_formatted_output_001034fa": {
                    "print_end_of_line": 1,
                    "print_formatted_line": 1,
                    "print_formatted_output": 4,
                    "print_formatted_output1": 2,
                    "print_formatted_output_1": 5,
                    "print_formatted_output_end": 1,
                    "print_formatted_output_part_1": 1,
                    "print_newline": 1,
                    "print_output_part1": 1,
                    "print_partial_data": 1
                },
                "print_formatted_output_00103510": {
                    "print_complete_data": 1,
                    "print_formatted_line_2": 1,
                    "print_formatted_output2": 3,
                    "print_formatted_output_2": 7,
                    "print_formatted_output_middle": 1,
                    "print_formatted_output_part_2": 1,
                    "print_formatted_output_value": 1,
                    "print_output_part2": 1,
                    "print_tab": 2
                },
                "print_formatted_value_0010286f": {
                    "print_formatted_value": 10,
                    "print_value": 4
                },
                "process_input_data_001034d5": {
                    "handle_non_printable_input": 1,
                    "process_data": 1,
                    "process_input_data": 15,
                    "process_input_data_1": 1
                },
                "put_char": {
                    "write_char": 1
                },
                "putc": {
                    "print_char": 2,
                    "write_char": 2
                },
                "read_and_convert_data_00103520": {
                    "read_and_convert_data": 10,
                    "read_and_convert_data_v2": 1,
                    "read_convert_and_return": 1,
                    "read_convert_data": 2
                },
                "remaining_bytes": {
                    "bytes_remaining": 1
                },
                "result": {
                    "output_result": 1
                },
                "uVar1": {
                    "bytes_read": 1,
                    "char_count": 1,
                    "char_value": 4,
                    "count": 2,
                    "input_char": 1,
                    "input_char_address": 1,
                    "input_value": 1,
                    "loop_index": 1,
                    "output_length": 1,
                    "part": 1,
                    "read_result": 1,
                    "remaining_chars": 1,
                    "remaining_data": 1,
                    "temp_value": 1,
                    "temp_var1": 3,
                    "temp_var_1": 1,
                    "value1": 1
                },
                "uVar2": {
                    "char": 2,
                    "char_value": 2,
                    "char_value2": 1,
                    "character": 2,
                    "current_char": 3,
                    "input_char": 6,
                    "input_value": 1,
                    "temp_value": 1,
                    "temp_var2": 3,
                    "temp_var_2": 1,
                    "value2": 1
                },
                "unaff_15": {
                    "filename": 1
                },
                "unaff_R14": {
                    "buffer": 3,
                    "data_buffer": 1,
                    "formatted_output": 2,
                    "input_buffer": 1,
                    "line_buffer": 1,
                    "output_buffer": 12,
                    "output_data": 1,
                    "output_str": 1,
                    "output_string": 6,
                    "str_pointer": 1,
                    "string_buffer": 1
                },
                "unaff_R15": {
                    "address_part": 1,
                    "filename": 6,
                    "filename_address": 1,
                    "format": 1,
                    "format_address": 1,
                    "format_modifier": 3,
                    "format_string": 1,
                    "formatted_output": 2,
                    "formatting_modifier": 1,
                    "modifier": 1,
                    "next_function_address_1": 1,
                    "output_format": 1,
                    "output_function": 1,
                    "output_ptr": 1,
                    "output_value": 1,
                    "param_11": 1,
                    "print_address": 1,
                    "print_output_function": 1,
                    "result": 3
                },
                "unget_part_char": {
                    "unget_char": 1,
                    "unread_char": 4
                },
                "update_data_00103810": {
                    "update_data": 14
                }
            },
            "called": [
                "FUN_001034fa",
                "FUN_00102040",
                "FUN_00102140",
                "FUN_001034d5",
                "FUN_00103510",
                "FUN_00102330",
                "FUN_001021d0",
                "FUN_0010259a",
                "FUN_00102120",
                "FUN_00103520",
                "FUN_00103810",
                "FUN_0010286f"
            ],
            "calling": [
                "FUN_0010259a"
            ],
            "code": "\n\n\nvoid print_and_process_data_0010259a(void)\n\n{\n  uint char_value;\n  ulong input_char;\n  ulong index;\n  char *output_buffer;\n  undefined8 filename;\n  bool is_valid;\n  uint input_length;\n  undefined8 filename;\n  undefined8 address;\n  \n  do {\n    input_length = (uint)index;\n    printf(\"%s: \",filename);\n    index = (ulong)input_length;\n    do {\n      if (DAT_00108372 == '\\0') {\n        output_buffer[index] = '\\0';\n        print_string(output_buffer,standard_output);\n      }\n      else {\n        input_length = (uint)index;\n        print_filename_and_address(filename);\n        output_buffer[input_length] = '\\0';\n        print_string(output_buffer,standard_output);\n      }\n      while (input_char = read_char(), input_char != 0xffffffffffffffff) {\n        if (0xff < input_char) {\nend_of_input:\n          unread_char();\n          break;\n        }\n        if (input_char == 9) {\nLAB_00102438:\n          print_char((int)input_char,standard_output);\n        }\n        else {\n          if ((*(ushort *)(&character_table + input_char * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)input_char < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + input_char * 2) & 0x40) == 0))))\n            goto end_of_input;\n            goto LAB_00102438;\n          }\n          print_char((int)input_char,standard_output);\n        }\n      }\n      if (DAT_00108358 == (char *)0x0) {\n        print_char(10,standard_output);\n      }\n      else {\n        print_string(DAT_00108358,standard_output);\n      }\n      while (index = (ulong)DAT_00108374, DAT_00108374 != 0) {\n        input_char = read_char();\n        char_value = DAT_00108374;\n        if (input_char == 0xffffffffffffffff) goto end_of_output;\n        if (input_char < 0x100) {\n          if (input_char == 9) {\nhandle_tab_char_1:\n            *output_buffer = (char)input_char;\n            if (char_value < 2) {\n              print_formatted_output_1();\n              return;\n            }\n          }\n          else {\n            if ((*(ushort *)(&character_table + input_char * 2) & 0x10) == 0) {\n              if (((DAT_00108360 != 'S') || ((long)input_char < 0x80)) &&\n                 ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + input_char * 2) & 0x40) == 0))))\n              goto handle_non_printable_char;\n              goto handle_tab_char_1;\n            }\n            *output_buffer = (char)input_char;\n            if (char_value < 2) {\n              index = 1;\n              break;\n            }\n          }\n          input_char = read_char();\n          char_value = DAT_00108374;\n          if (input_char == 0xffffffffffffffff) goto end_of_output;\n          if (0xff < input_char) goto handle_non_printable_char;\n          if (input_char == 9) {\nhandle_tab_char_2:\n            output_buffer[1] = (char)input_char;\n            if (char_value < 3) {\n              print_formatted_output_2();\n              return;\n            }\n          }\n          else {\n            if ((*(ushort *)(&character_table + input_char * 2) & 0x10) == 0) {\n              if (((DAT_00108360 != 'S') || ((long)input_char < 0x80)) &&\n                 ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + input_char * 2) & 0x40) == 0))))\n              goto handle_non_printable_char;\n              goto handle_tab_char_2;\n            }\n            output_buffer[1] = (char)input_char;\n            if (char_value < 3) {\n              index = 2;\n              break;\n            }\n          }\n          input_char = read_char();\n          char_value = DAT_00108374;\n          if (input_char == 0xffffffffffffffff) {\nend_of_output:\n            free_memory(output_buffer);\n            return;\n          }\n          if (0xff < input_char) goto handle_non_printable_char;\n          if (input_char == 9) {\nhandle_tab_char_3:\n            output_buffer[2] = (char)input_char;\n          }\n          else {\n            if ((*(ushort *)(&character_table + input_char * 2) & 0x10) == 0) {\n              if (((DAT_00108360 != 'S') || ((long)input_char < 0x80)) &&\n                 ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + input_char * 2) & 0x40) == 0))))\n              goto handle_non_printable_char;\n              goto handle_tab_char_3;\n            }\n            output_buffer[2] = (char)input_char;\n          }\n          if (3 < char_value) {\n            index = 3;\n            do {\n              input_length = (uint)index;\n              input_char = read_char();\n              if (input_char == 0xffffffffffffffff) goto end_of_output;\n              if (0xff < input_char) goto handle_non_printable_char;\n              if (((input_char != 9) && ((*(ushort *)(&character_table + input_char * 2) & 0x10) == 0)) &&\n                 ((DAT_00108360 != 'S' || ((long)input_char < 0x80)))) {\n                if (DAT_00108373 == '\\0') goto handle_non_printable_char;\n                if ((*(ushort *)(&character_table + input_char * 2) & 0x40) == 0) {\n                  process_input_data();\n                  return;\n                }\n              }\n              index = (ulong)(input_length + 1);\n              is_valid = DAT_00108374 <= input_length + 1;\n              output_buffer[input_length] = (char)input_char;\n              if (is_valid) goto end_of_processing;\n            } while( true );\n          }\n          index = 3;\n          break;\n        }\nhandle_non_printable_char:\n        unread_char();\n      }\nend_of_processing:\n      filename = address;\n    } while (DAT_00108371 == '\\0');\n  } while( true );\n}\n\n",
            "current_name": "print_and_process_data_0010259a",
            "entrypoint": "0x0010259a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010259a": "print_and_process_data_0010259a",
                "LAB_00102381": "handle_tab_char_3",
                "LAB_001023bb": "handle_tab_char_2",
                "LAB_001023f5": "handle_tab_char_1",
                "LAB_0010348e": "end_of_input",
                "LAB_001034be": "end_of_output",
                "_sch_istable": "character_table",
                "_stdout": "standard_output",
                "bVar3": "is_valid",
                "code_r0x001034d5": "handle_non_printable_char",
                "file": "input_file",
                "fputs": "print_string",
                "free": "free_memory",
                "get_char": "read_char",
                "in_R8": "index",
                "joined_r0x0010341b": "end_of_processing",
                "param_11": "address",
                "param_7": "input_length",
                "param_8": "filename",
                "print_filename_and_address_part_0": "print_filename_and_address",
                "print_formatted_output_001034fa": "print_formatted_output_1",
                "print_formatted_output_00103510": "print_formatted_output_2",
                "process_input_data_001034d5": "process_input_data",
                "putc": "print_char",
                "uVar1": "char_value",
                "uVar2": "input_char",
                "unaff_R14": "output_buffer",
                "unaff_R15": "filename",
                "unget_part_char": "unread_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102771": {
            "additional_data": {
                "0x18": {
                    "shift": 1
                },
                "0xff": {
                    "mask": 1
                },
                "FUN_00102771": {
                    "bitwise_conversion": 1,
                    "byte_swap": 1,
                    "extract_bits": 3,
                    "extract_byte_order": 1,
                    "extract_bytes_from_data": 1,
                    "extracted_bits": 1,
                    "get_reversed_bytes": 1,
                    "reverse_and_encode_bytes": 1,
                    "reverse_and_shift_bytes": 1,
                    "reverse_bit_order": 1,
                    "reverse_bits": 9,
                    "reverse_byte_order": 8,
                    "reverse_bytes": 2
                },
                "return_value": {
                    "output": 1
                },
                "unaff_RAX": {
                    "reversed_value": 1
                },
                "unaff_RBX": {
                    "input": 17,
                    "input_value": 10,
                    "number": 1,
                    "original_value": 1,
                    "output": 1,
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00103520"
            ],
            "code": "\nulong reverse_bits_00102771(void)\n\n{\n  ulong input;\n  \n  return input >> 0x18 & 0xff |\n         (input & 0xff) << 0x18 | (ulong)((uint)(input << 8) & 0xff0000) |\n         (ulong)((uint)(input >> 8) & 0xff00);\n}\n\n",
            "current_name": "reverse_bits_00102771",
            "entrypoint": "0x00102771",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102771": "reverse_bits_00102771",
                "unaff_RBX": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001027e2": {
            "additional_data": {
                "1": {
                    "constant_1": 1
                },
                "FUN_001027e2": {
                    "add_params_and_multiply_by_factor": 1,
                    "addition_and_increment": 1,
                    "calculate_and_add": 1,
                    "calculate_and_store_sum": 2,
                    "calculate_and_update": 1,
                    "calculate_sum": 6,
                    "calculate_sum_and_add_offset": 1,
                    "calculate_sum_and_adjust": 1,
                    "calculate_sum_and_increment": 3,
                    "calculate_sum_and_offset": 3,
                    "calculate_sum_and_update": 2,
                    "calculate_sum_with_multiplier": 1,
                    "update_and_add": 2,
                    "update_and_calculate_sum": 1,
                    "update_and_sum": 2,
                    "update_parameters": 1,
                    "update_sum_and_value": 1,
                    "update_variables": 1
                },
                "in_RAX": {
                    "input_pointer": 1,
                    "pointer": 2,
                    "pointer_to_integer": 1,
                    "pointer_to_result": 1,
                    "ptr": 4,
                    "ptr_num1": 1,
                    "ptr_num1_plus_num2": 1,
                    "ptr_to_update": 1,
                    "sum": 3,
                    "sum_memory": 1,
                    "sum_pointer": 1,
                    "sum_ptr": 5,
                    "sum_variable": 1,
                    "temp": 2,
                    "temp_pointer": 1,
                    "temp_ptr": 2,
                    "temp_variable": 1,
                    "temporary_variable": 1
                },
                "param_1": {
                    "addend_1": 1,
                    "first_number": 2,
                    "first_operand": 1,
                    "first_parameter": 1,
                    "input1": 3,
                    "input_1": 2,
                    "integer1": 1,
                    "num1": 11,
                    "num_1": 1,
                    "number1": 3,
                    "value1": 4,
                    "value_1": 1
                },
                "param_2": {
                    "addend_2": 1,
                    "input2": 3,
                    "input_2": 2,
                    "integer2": 1,
                    "num2": 11,
                    "num_2": 1,
                    "number2": 3,
                    "second_number": 2,
                    "second_operand": 1,
                    "second_parameter": 1,
                    "value2": 4,
                    "value_2": 1
                },
                "param_3": {
                    "adjustment_value": 1,
                    "condition": 3,
                    "constant": 1,
                    "constant_factor": 1,
                    "factor": 1,
                    "factor1": 1,
                    "flag": 2,
                    "modifier": 7,
                    "multiplier": 2,
                    "offset": 4,
                    "subtract_amount": 1,
                    "subtract_value": 2,
                    "subtraction": 1,
                    "subtraction_factor": 1,
                    "subtrahend": 1,
                    "value1": 2
                },
                "param_4": {
                    "output": 2,
                    "ptr_value2": 1,
                    "result": 23,
                    "result_ptr": 3,
                    "sum_ptr": 1,
                    "sum_result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00103810"
            ],
            "code": "\nvoid calculate_sum_and_add_offset_001027e2(int num1,int num2,long modifier,long *result)\n\n{\n  int *sum_ptr;\n  \n  *result = *result + (1 - modifier);\n  *sum_ptr = num1 + num2;\n  return;\n}\n\n",
            "current_name": "calculate_sum_and_add_offset_001027e2",
            "entrypoint": "0x001027e2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001027e2": "calculate_sum_and_add_offset_001027e2",
                "in_RAX": "sum_ptr",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "modifier",
                "param_4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010282b": {
            "additional_data": {
                "DAT_00108348": {
                    "data_byte1": 1,
                    "extracted_byte1": 1,
                    "first_byte": 1,
                    "shifted_byte1": 1,
                    "shifted_value1": 1,
                    "shifted_value_1": 1
                },
                "DAT_00108349": {
                    "data_byte2": 1,
                    "extracted_byte3": 1,
                    "second_byte": 1,
                    "shifted_byte2": 1,
                    "shifted_value3": 1,
                    "shifted_value_3": 1
                },
                "DAT_0010834a": {
                    "data_byte3": 1,
                    "extracted_byte2": 1,
                    "shifted_byte3": 1,
                    "shifted_value2": 1,
                    "shifted_value_2": 1,
                    "third_byte": 1
                },
                "FUN_0010282b": {
                    "extract_rbx_bytes": 2,
                    "initialize_data": 12,
                    "initialize_memory": 1,
                    "initialize_pointer": 1,
                    "initialize_registers": 1,
                    "initialize_values": 2,
                    "initialize_variables": 4,
                    "initialize_vars": 1,
                    "save_extracted_data": 1,
                    "set_data_and_pointers": 1,
                    "set_pointer": 1,
                    "set_pointer_values": 1,
                    "set_variable_values": 2,
                    "update_data": 1
                },
                "in_RAX": {
                    "data_ptr": 1,
                    "destination": 1,
                    "input_pointer": 2,
                    "memory_pointer": 1,
                    "output_data": 1,
                    "output_data_pointer": 1,
                    "output_pointer": 7,
                    "output_ptr": 1,
                    "pointer_a": 1,
                    "pointer_rax": 1,
                    "pointer_to_register": 1,
                    "pointer_to_value": 4,
                    "pointer_to_value1": 1,
                    "pointer_value": 1,
                    "ptr_data": 1,
                    "ptr_to_value": 1,
                    "ptr_value": 1,
                    "result_pointer": 3,
                    "value_pointer": 1
                },
                "in_RCX": {
                    "address_pointer": 1,
                    "data_pointer": 10,
                    "data_ptr": 1,
                    "destination_pointer": 1,
                    "input_pointer": 1,
                    "output_pointer": 2,
                    "output_ptr": 1,
                    "pointer_b": 1,
                    "pointer_rcx": 1,
                    "pointer_to_address": 2,
                    "pointer_to_data": 2,
                    "pointer_to_memory": 1,
                    "pointer_to_pointer": 1,
                    "pointer_to_value2": 1,
                    "ptr_address": 1,
                    "ptr_destination": 1,
                    "ptr_to_destination": 1,
                    "source": 1,
                    "target_pointer": 1
                },
                "outputData": {
                    "output_data": 1
                },
                "pointerToData": {
                    "pointer_to_data": 1
                },
                "pointerToValue1": {
                    "input_pointer1": 1
                },
                "pointerToValue2": {
                    "input_pointer2": 1
                },
                "unaff_RBX": {
                    "binary_value": 1,
                    "input_data": 2,
                    "input_value": 14,
                    "original_value": 1,
                    "rbx_value": 2,
                    "reg_rbx": 1,
                    "register_value": 2,
                    "source_data": 2,
                    "source_value": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_00103810"
            ],
            "code": "\nvoid initialize_data_0010282b(void)\n\n{\n  undefined4 *output_pointer;\n  undefined8 *data_pointer;\n  undefined8 input_value;\n  \n  DAT_00108348 = (undefined)((ulong)input_value >> 8);\n  DAT_0010834a = (undefined)((ulong)input_value >> 0x18);\n  DAT_00108349 = (undefined)((ulong)input_value >> 0x10);\n  *output_pointer = 3;\n  *data_pointer = &DAT_00108348;\n  return;\n}\n\n",
            "current_name": "initialize_data_0010282b",
            "entrypoint": "0x0010282b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010282b": "initialize_data_0010282b",
                "in_RAX": "output_pointer",
                "in_RCX": "data_pointer",
                "unaff_RBX": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102853": {
            "additional_data": {
                "DAT_00108372": {
                    "flag": 2
                },
                "FUN_00102853": {
                    "print_conditionally": 1,
                    "print_debug_message": 2,
                    "print_file_address": 1,
                    "print_filename_if_debug_enabled": 1,
                    "print_filename_if_enabled": 1,
                    "print_filename_if_not_empty": 1,
                    "print_filename_if_not_null": 3,
                    "print_filename_if_set": 1,
                    "print_filename_if_valid": 1,
                    "print_function_status": 1,
                    "print_if_data_available": 1,
                    "print_if_data_not_empty": 1,
                    "print_if_filename_available": 1,
                    "print_if_filename_exists": 1,
                    "print_if_filename_not_null": 1,
                    "print_if_flag_set": 1,
                    "print_if_not_empty": 1,
                    "print_message": 5,
                    "print_message_and_check": 1,
                    "print_message_if_not_null": 1,
                    "print_or_return": 1,
                    "print_or_skip": 1,
                    "print_with_filename": 1,
                    "print_with_filename_and_address": 1
                },
                "FUN_0010286f": {
                    "print_filename": 1,
                    "print_filename_and_address": 3,
                    "print_filename_and_address_part_0": 9
                },
                "param_1": {
                    "file_name": 4,
                    "filename": 8,
                    "message": 18,
                    "status_message": 1
                },
                "print_filename_and_address_part_0": {
                    "print_address_and_filename": 1,
                    "print_details": 1,
                    "print_file_address": 2,
                    "print_file_info": 4,
                    "print_filename_and_address": 7,
                    "print_info": 1
                }
            },
            "called": [
                "FUN_00102120",
                "FUN_0010286f"
            ],
            "calling": [
                "FUN_00103890"
            ],
            "code": "\nvoid print_debug_message_00102853(undefined8 message)\n\n{\n  printf(\"%s: \",message);\n  if (DAT_00108372 == '\\0') {\n    return;\n  }\n  print_filename_and_address();\n  return;\n}\n\n",
            "current_name": "print_debug_message_00102853",
            "entrypoint": "0x00102853",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102853": "print_debug_message_00102853",
                "param_1": "message",
                "print_filename_and_address_part_0": "print_filename_and_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010286f": {
            "additional_data": {
                "0x10": {
                    "hex_format": 1
                },
                "10": {
                    "decimal_format": 1
                },
                "7ld": {
                    "decimal_format": 1
                },
                "7lo": {
                    "octal_format": 1
                },
                "7lx": {
                    "hexadecimal_format": 1
                },
                "8": {
                    "octal_format": 1
                },
                "DAT_00108354": {
                    "format_code": 2,
                    "format_flag": 2,
                    "format_id": 1,
                    "format_type": 3,
                    "output_format": 1
                },
                "FUN_0010286f": {
                    "print_converted_value": 1,
                    "print_formatted_number": 13,
                    "print_formatted_value": 16,
                    "print_value_in_different_formats": 1
                },
                "param_1": {
                    "number": 13,
                    "value": 18
                },
                "printf": {
                    "formatted_print": 8,
                    "print": 14,
                    "print_formatted_output": 5,
                    "print_formatted_text": 1,
                    "print_formatted_value": 1,
                    "printf": 1
                },
                "printf_argument": {
                    "format_string": 1
                },
                "printf_format_1": {
                    "decimal_format": 1
                },
                "printf_format_2": {
                    "octal_format": 1
                },
                "printf_format_3": {
                    "hexadecimal_format": 1
                },
                "printf_format_hexadecimal": {
                    "print_hexadecimal": 1
                },
                "printf_format_integer": {
                    "print_decimal": 1
                },
                "printf_format_octal": {
                    "print_octal": 1
                }
            },
            "called": [
                "FUN_00102120"
            ],
            "calling": [
                "FUN_0010259a",
                "FUN_00102853"
            ],
            "code": "\nvoid print_formatted_value_0010286f(undefined8 value)\n\n{\n  if (DAT_00108354 == 10) {\n    print(\"%decimal_format \",value);\n    return;\n  }\n  if (DAT_00108354 != 0x10) {\n    if (DAT_00108354 == 8) {\n      print(\"%octal_format \",value);\n      return;\n    }\n    return;\n  }\n  print(\"%hexadecimal_format \",value);\n  return;\n}\n\n",
            "current_name": "print_formatted_value_0010286f",
            "entrypoint": "0x0010286f",
            "imported": false,
            "improved": true,
            "renaming": {
                "7ld": "decimal_format",
                "7lo": "octal_format",
                "7lx": "hexadecimal_format",
                "FUN_0010286f": "print_formatted_value_0010286f",
                "param_1": "value",
                "printf": "print"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001028b2": {
            "additional_data": {
                "FUN_001028b2": {
                    "check_byte_sequence": 2,
                    "check_character_encoding": 2,
                    "check_continuation_byte": 1,
                    "check_first_byte_and_return_offset": 1,
                    "check_prefix_length": 1,
                    "decode_byte_sequence": 4,
                    "decode_first_byte": 2,
                    "decode_length": 1,
                    "decode_length_indicator": 1,
                    "decode_sequence_length": 1,
                    "decode_string_length": 1,
                    "decode_utf8_character": 1,
                    "decode_utf8_sequence": 1,
                    "decode_var_length": 1,
                    "decode_variable_length": 1,
                    "extracted_byte_value": 1,
                    "find_sequence_length": 1,
                    "get_byte_position": 1,
                    "get_byte_sequence_length": 2,
                    "parse_byte_sequence": 3,
                    "parse_data": 1,
                    "parse_header": 1
                },
                "bVar1": {
                    "current_byte": 2,
                    "first_byte": 26
                },
                "lVar2": {
                    "additional_bytes": 1,
                    "continuation_bytes_count": 1,
                    "decoded_length": 1,
                    "index": 1,
                    "indicator_length": 1,
                    "length": 1,
                    "offset": 3,
                    "output_bytes": 1,
                    "output_length": 1,
                    "result": 17
                },
                "param_1": {
                    "buffer": 1,
                    "byte_array": 5,
                    "byte_sequence": 12,
                    "data": 6,
                    "header": 1,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_string": 1,
                    "prefix": 1,
                    "sequence": 2
                },
                "param_2": {
                    "array_length": 1,
                    "array_size": 2,
                    "buffer_size": 2,
                    "byte_array_length": 2,
                    "byte_sequence_length": 1,
                    "data_length": 4,
                    "length": 7,
                    "prefix_length": 1,
                    "sequence_length": 10,
                    "string_length": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00103240"
            ],
            "code": "\nlong decode_byte_sequence_001028b2(byte *byte_sequence,long sequence_length)\n\n{\n  byte first_byte;\n  long result;\n  \n  first_byte = *byte_sequence;\n  if ((0xbf < first_byte) && (sequence_length != 1)) {\n    result = 0;\n    if ((byte_sequence[1] & 0xc0) == 0x80) {\n      if ((first_byte & 0x20) == 0) {\n        return 2;\n      }\n      if ((sequence_length != 2) && ((byte_sequence[2] & 0xc0) == 0x80)) {\n        if ((first_byte & 0x10) == 0) {\n          result = 3;\n        }\n        else {\n          result = 0;\n          if (sequence_length != 3) {\n            return (ulong)((byte_sequence[3] & 0xc0) == 0x80) << 2;\n          }\n        }\n      }\n    }\n    return result;\n  }\n  return 0;\n}\n\n",
            "current_name": "decode_byte_sequence_001028b2",
            "entrypoint": "0x001028b2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001028b2": "decode_byte_sequence_001028b2",
                "bVar1": "first_byte",
                "lVar2": "result",
                "param_1": "byte_sequence",
                "param_2": "sequence_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010290e": {
            "additional_data": {
                "FUN_0010290e": {
                    "get_byte_from_file": 1,
                    "read_byte": 1,
                    "read_byte_from_file": 16,
                    "read_byte_from_stream": 6,
                    "read_next_byte": 3
                },
                "_IO_FILE": {
                    "file": 5,
                    "file_struct": 1
                },
                "param_1": {
                    "file": 21,
                    "file_pointer": 2,
                    "file_ptr": 1,
                    "file_stream": 1,
                    "stream": 5
                },
                "param_2": {
                    "file_offset": 3,
                    "offset": 2,
                    "position": 25,
                    "stream_offset": 1
                },
                "param_3": {
                    "count": 1,
                    "num_bytes": 1,
                    "remaining_bytes": 27,
                    "remaining_count": 1
                },
                "param_4": {
                    "byte_count": 2,
                    "bytes_read": 4,
                    "bytes_read_count": 1,
                    "characters_read": 1,
                    "count": 1,
                    "counter": 1,
                    "error": 2,
                    "error_counter": 2,
                    "error_flag": 2,
                    "errors": 1,
                    "increment_count": 2,
                    "increment_counter": 1,
                    "num_bytes_read": 2,
                    "num_read": 1,
                    "num_read_bytes": 1,
                    "read_bytes_count": 1,
                    "read_count": 3,
                    "read_counter": 1,
                    "read_status": 1
                },
                "pbVar1": {
                    "buffer": 1,
                    "buffer_ptr": 1,
                    "byte_pointer": 11,
                    "byte_ptr": 10,
                    "current_byte": 2,
                    "data_pointer": 1,
                    "read_pointer": 2,
                    "read_ptr": 2
                },
                "uVar2": {
                    "byte_read": 1,
                    "byte_value": 6,
                    "result": 22,
                    "return_value": 1,
                    "unsigned_value": 1
                }
            },
            "called": [
                "FUN_00102030"
            ],
            "calling": [
                "FUN_00102b11"
            ],
            "code": "\nuint read_byte_from_file_0010290e(file *file,long position,uint *remaining_bytes,int *bytes_read)\n\n{\n  byte *byte_pointer;\n  uint result;\n  \n  if (*remaining_bytes != 0) {\n    result = *remaining_bytes - 1;\n    *remaining_bytes = result;\n    return (uint)*(byte *)(position + (ulong)result);\n  }\n  *bytes_read = *bytes_read + 1;\n  byte_pointer = (byte *)file->_IO_read_ptr;\n  if (file->_IO_read_end <= byte_pointer) {\n    result = __uflow(file);\n    return result;\n  }\n  file->_IO_read_ptr = (char *)(byte_pointer + 1);\n  return (uint)*byte_pointer;\n}\n\n",
            "current_name": "read_byte_from_file_0010290e",
            "entrypoint": "0x0010290e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010290e": "read_byte_from_file_0010290e",
                "_IO_FILE": "file",
                "param_1": "file",
                "param_2": "position",
                "param_3": "remaining_bytes",
                "param_4": "bytes_read",
                "pbVar1": "byte_pointer",
                "uVar2": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010293a": {
            "additional_data": {
                "DAT_00108350": {
                    "display_type": 1,
                    "unicode_display_type": 1
                },
                "FUN_0010293a": {
                    "decode_and_display_unicode": 2,
                    "display_unicode": 20,
                    "display_unicode_character": 3,
                    "parse_and_display_unicode": 1,
                    "print_formatted_data": 1,
                    "print_unicode": 1,
                    "print_unicode_character": 1,
                    "print_unicode_data": 1,
                    "print_unicode_display": 1
                },
                "_stderr": {
                    "standard_error": 4,
                    "stderr": 1
                },
                "_stdout": {
                    "standard_output": 4,
                    "stdout": 1
                },
                "bVar1": {
                    "byte_flag": 1,
                    "byte_value": 3,
                    "first_bit": 3,
                    "first_byte": 2,
                    "first_char": 3,
                    "first_character": 1,
                    "first_four_bits": 3,
                    "first_nibble": 5,
                    "first_two_bits": 5,
                    "first_two_bytes": 1,
                    "flag": 3,
                    "high_nibble": 1
                },
                "iVar3": {
                    "is_interactive": 2,
                    "is_terminal": 14,
                    "is_tty": 9,
                    "output_status": 1,
                    "terminal_check": 1,
                    "terminal_flag": 1,
                    "terminal_status": 1
                },
                "param_1": {
                    "character_array": 1,
                    "data": 3,
                    "input": 8,
                    "input_array": 1,
                    "input_bytes": 3,
                    "input_data": 6,
                    "input_str": 1,
                    "input_string": 6
                },
                "pbVar6": {
                    "current_byte": 3,
                    "data_end": 1,
                    "end_byte": 2,
                    "end_bytes": 1,
                    "end_of_bytes": 1,
                    "end_of_input": 2,
                    "end_of_input_data": 1,
                    "end_of_input_string": 1,
                    "end_of_string": 3,
                    "end_pointer": 4,
                    "end_position": 1,
                    "end_ptr": 4,
                    "next_byte": 2,
                    "next_byte_pointer": 1,
                    "next_char_pointer": 1,
                    "print_pointer": 1
                },
                "uVar2": {
                    "byte1": 1,
                    "first_byte": 2,
                    "first_byte_num": 1,
                    "second_bit": 1,
                    "second_byte": 16,
                    "second_byte_value": 2,
                    "second_char": 4,
                    "second_character": 1,
                    "second_nibble": 1,
                    "unicode_value1": 1,
                    "var2": 1
                },
                "uVar4": {
                    "byte_count": 1,
                    "data_offset": 1,
                    "display_length": 5,
                    "display_type": 4,
                    "num_bytes": 1,
                    "offset": 3,
                    "output": 1,
                    "output_length": 7,
                    "output_size": 3,
                    "prefix_length": 1,
                    "return_value": 1,
                    "shift_amount": 1,
                    "unicode_size": 1,
                    "unicode_type": 1
                },
                "uVar5": {
                    "first_byte": 16,
                    "first_byte_value": 2,
                    "first_char": 1,
                    "first_character_again": 1,
                    "initial_byte": 1,
                    "second_byte": 2,
                    "second_byte_num": 1,
                    "third_bit": 1,
                    "third_char": 2,
                    "unicode_first_part": 1,
                    "unicode_value2": 1,
                    "var5": 1
                }
            },
            "called": [
                "FUN_00102070",
                "FUN_001021d0",
                "FUN_00102120",
                "FUN_001022f0"
            ],
            "calling": [
                "FUN_00102b11",
                "FUN_00103240"
            ],
            "code": "\n\n\nuint display_unicode_character_0010293a(byte *input)\n\n{\n  byte first_nibble;\n  uint second_byte;\n  int is_terminal;\n  uint output_length;\n  uint first_byte;\n  byte *end_ptr;\n  \n  output_length = 2;\n  first_nibble = *input & 0x30;\n  if ((first_nibble != 0x10) && (output_length = 3, first_nibble != 0x20)) {\n    output_length = (-(uint)(first_nibble == 0) & 0xfffffffe) + 4;\n  }\n  if (DAT_00108350 == 3) {\n    end_ptr = input + output_length;\n    putc(0x3c,standard_output);\n    printf(\"0x\");\n    do {\n      first_nibble = *input;\n      input = input + 1;\n      printf(\"%02x\",(ulong)first_nibble);\n    } while (end_ptr != input);\n    putc(0x3e,standard_output);\n    return output_length;\n  }\n  if (DAT_00108350 < 4) {\n    if (DAT_00108350 == 1) {\n      printf(\"%.1s\",input);\n      return output_length;\n    }\n    if (DAT_00108350 == 2) {\nLAB_001029cd:\n      second_byte = (uint)input[1];\n      first_byte = (uint)*input;\n      if (output_length == 3) {\n        printf(\"\\u%02x%02x\",(ulong)((first_byte & 0xf) << 4 | (int)second_byte >> 2 & 0xfU),\n               (ulong)((second_byte & 3) << 6 | input[2] & 0x3f));\n      }\n      else if (output_length == 4) {\n        printf(\"\\u%02x%02x%02x\",(ulong)((first_byte & 7) << 6 | (int)second_byte >> 2 & 0xfU),\n               (ulong)((second_byte & 3) << 6 | (int)(uint)input[2] >> 2 & 0xfU),\n               (ulong)((input[2] & 3) << 6 | input[3] & 0x3f));\n      }\n      else {\n        printf(\"\\u%02x%02x\",(ulong)((int)(uint)*input >> 2 & 7),\n               (ulong)((first_byte & 3) << 6 | input[1] & 0x3f));\n      }\n      if (DAT_00108350 != 4) {\n        return output_length;\n      }\n      is_terminal = isatty(1);\n      if (is_terminal == 0) {\n        return output_length;\n      }\n      printf(\"\\x1b[0m\");\n      return output_length;\n    }\n  }\n  else if (DAT_00108350 == 4) {\n    is_terminal = isatty(1);\n    if (is_terminal != 0) {\n      printf(\"\\x1b[31;47m\");\n    }\n    goto LAB_001029cd;\n  }\n  fwrite(\"ICE: unexpected unicode display type\\n\",1,0x25,standard_error);\n  return output_length;\n}\n\n",
            "current_name": "display_unicode_character_0010293a",
            "entrypoint": "0x0010293a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010293a": "display_unicode_character_0010293a",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "bVar1": "first_nibble",
                "iVar3": "is_terminal",
                "param_1": "input",
                "pbVar6": "end_ptr",
                "uVar2": "second_byte",
                "uVar4": "output_length",
                "uVar5": "first_byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102b11": {
            "additional_data": {
                "DAT_00108350": {
                    "dat_00108350": 1
                },
                "DAT_00108358": {
                    "message": 1
                },
                "DAT_00108360": {
                    "dat_00108360": 1
                },
                "DAT_00108373": {
                    "dat_00108373": 1
                },
                "DAT_00108374": {
                    "max_byte_count": 1
                },
                "FUN_00102b11": {
                    "decode_unicode": 1,
                    "decode_unicode_string": 1,
                    "parse_unicode_characters": 1,
                    "process_input": 1,
                    "process_unicode": 1,
                    "process_unicode_byte_array": 1,
                    "process_unicode_bytes": 4,
                    "process_unicode_characters": 3,
                    "process_unicode_data": 2,
                    "process_unicode_string": 13,
                    "process_unicode_text": 1,
                    "reverse_and_display_unicode_characters": 1
                },
                "iVar4": {
                    "byte": 1,
                    "byte4": 1,
                    "byte_count": 3,
                    "byte_read": 4,
                    "bytes_read": 2,
                    "char_count": 1,
                    "character_length": 1,
                    "index": 1,
                    "num_bytes": 1,
                    "read_result": 1,
                    "result": 6,
                    "temp4": 1,
                    "temp_int": 1,
                    "temp_variable": 1,
                    "unicode_byte2": 1
                },
                "iVar5": {
                    "byte_read": 1
                },
                "local_39": {
                    "byte3": 1,
                    "byte4": 6,
                    "byte6": 1,
                    "byte9": 1,
                    "byte_4": 1,
                    "byte_value8": 1,
                    "char4": 1,
                    "fourth_byte": 3,
                    "fourth_byte_val": 1,
                    "fourth_byte_value": 3,
                    "fourth_utf8_byte": 1,
                    "input_byte4": 1,
                    "unicode_byte0": 1,
                    "unicode_byte1": 1,
                    "unicode_byte4": 2,
                    "unicode_byte_4": 1,
                    "utf8_byte3": 1,
                    "utf8_byte4": 3
                },
                "local_3a": {
                    "byte2": 1,
                    "byte3": 5,
                    "byte5": 1,
                    "byte8": 1,
                    "byte_3": 1,
                    "byte_value7": 1,
                    "char3": 1,
                    "input_byte3": 1,
                    "next_next_byte": 1,
                    "second_byte_value_temp": 1,
                    "third_byte": 2,
                    "third_byte_val": 1,
                    "third_byte_value": 3,
                    "third_utf8_byte": 1,
                    "unicode_byte1": 1,
                    "unicode_byte2": 1,
                    "unicode_byte3": 2,
                    "unicode_byte_3": 1,
                    "utf8_byte2": 1,
                    "utf8_byte3": 3
                },
                "local_3b": {
                    "byte1": 1,
                    "byte2": 5,
                    "byte4": 1,
                    "byte7": 1,
                    "byte_2": 1,
                    "byte_value6": 1,
                    "char2": 1,
                    "input_byte2": 1,
                    "next_byte": 1,
                    "second_byte": 2,
                    "second_byte_val": 1,
                    "second_byte_value": 4,
                    "second_utf8_byte": 1,
                    "unicode_byte2": 3,
                    "unicode_byte3": 1,
                    "unicode_byte_2": 1,
                    "utf8_byte1": 1,
                    "utf8_byte2": 3
                },
                "local_3c": {
                    "byte": 1,
                    "byte1": 5,
                    "byte3": 1,
                    "byte6": 1,
                    "byte_1": 1,
                    "byte_value5": 1,
                    "char1": 1,
                    "current_byte": 1,
                    "first_byte": 2,
                    "first_byte_val": 1,
                    "first_byte_value": 3,
                    "first_utf8_byte": 1,
                    "input_byte1": 1,
                    "third_byte_value": 1,
                    "unicode_byte1": 2,
                    "unicode_byte3": 1,
                    "unicode_byte4": 1,
                    "unicode_byte_1": 1,
                    "utf8_byte0": 1,
                    "utf8_byte1": 3
                },
                "local_40": {
                    "buffer_length": 1,
                    "buffer_offset": 1,
                    "bytes_read": 17,
                    "bytes_read_from_current_position": 1,
                    "bytes_remaining": 1,
                    "char_count": 1,
                    "current_index": 1,
                    "index": 1,
                    "input_index": 1,
                    "local_buffer_size": 1,
                    "local_index": 1,
                    "num_bytes_read": 1,
                    "temp_variable": 1,
                    "total_bytes_read": 1
                },
                "local_4c": {
                    "byte_array": 1,
                    "bytes_read": 2,
                    "bytes_read_and_remaining": 1,
                    "bytes_remaining": 3,
                    "context": 1,
                    "file_info": 1,
                    "local_array": 1,
                    "local_buffer": 1,
                    "local_vars": 1,
                    "offsets_array": 1,
                    "param_array": 1,
                    "remaining": 1,
                    "remaining_bytes": 8,
                    "remaining_bytes_and_index": 1,
                    "remaining_bytes_buffer": 1,
                    "remaining_bytes_info": 1,
                    "remaining_bytes_ptr": 1,
                    "remaining_bytes_temp": 1,
                    "temp_array": 1,
                    "temp_vars": 1
                },
                "local_80": {
                    "address": 1,
                    "current_address": 1,
                    "current_offset": 1,
                    "file_name": 1,
                    "filename_address": 1,
                    "first_character_position": 1,
                    "first_non_ascii_character_position": 1,
                    "first_position": 1,
                    "first_unicode_byte_offset": 1,
                    "first_unicode_char_offset": 1,
                    "first_unicode_index": 2,
                    "first_unicode_position": 1,
                    "last_character_offset": 1,
                    "last_character_position": 1,
                    "last_index": 1,
                    "last_offset": 1,
                    "last_position": 4,
                    "last_valid_index": 1,
                    "last_valid_position": 1,
                    "output_address": 1,
                    "prev_offset": 1,
                    "prev_unicode_index": 1,
                    "start_address": 1,
                    "start_offset": 1,
                    "start_position": 1,
                    "unicode_start": 1
                },
                "param_1": {
                    "file": 15,
                    "file_address": 4,
                    "file_handle": 1,
                    "file_info": 1,
                    "file_name": 2,
                    "file_path": 1,
                    "file_pointer": 3,
                    "filename": 2,
                    "param_1": 1
                },
                "param_2": {
                    "address": 1,
                    "file_offset": 11,
                    "file_position": 11,
                    "position": 7
                },
                "param_3": {
                    "buffer": 8,
                    "byte_array": 2,
                    "file_buffer": 1,
                    "file_data": 1,
                    "file_ptr": 1,
                    "input": 2,
                    "input_buffer": 10,
                    "input_data": 3,
                    "input_string": 1,
                    "unicode_bytes": 1
                },
                "param_4": {
                    "array_length": 1,
                    "buffer": 1,
                    "buffer_length": 1,
                    "buffer_position": 1,
                    "buffer_size": 12,
                    "byte_array_size": 1,
                    "byte_count": 1,
                    "file_size": 4,
                    "input_buffer_size": 3,
                    "input_data_position": 1,
                    "input_length": 3,
                    "input_size": 1
                },
                "param_5": {
                    "buffer_size": 2,
                    "bytes_to_read": 1,
                    "max_bytes": 1,
                    "max_bytes_to_read": 2,
                    "max_iterations": 2,
                    "num_bytes": 1,
                    "num_characters": 1,
                    "remaining_bytes": 20
                },
                "param_6": {
                    "output": 2,
                    "output_address": 1,
                    "output_array": 1,
                    "output_buffer": 25,
                    "output_byte_array": 1
                },
                "uVar1": {
                    "byte": 1,
                    "byte1": 4,
                    "byte_val": 1,
                    "byte_value": 15,
                    "temp1": 1,
                    "temp_byte": 1,
                    "temp_var1": 1,
                    "u_var1": 1,
                    "unicode_byte": 3,
                    "unicode_byte1": 1
                },
                "uVar10": {
                    "ascii_char": 1,
                    "ascii_character": 1,
                    "byte": 1,
                    "byte0": 1,
                    "byte4": 1,
                    "byte_value": 1,
                    "current_unicode_byte": 1,
                    "first_byte": 4,
                    "first_char": 1,
                    "fourth_byte": 1,
                    "last_byte": 1,
                    "single_byte": 1,
                    "temp10": 1,
                    "temp_byte3": 1,
                    "temp_var10": 1,
                    "unicode_byte": 4,
                    "unicode_byte3": 1,
                    "unicode_byte4": 1,
                    "unicode_byte_copy": 1,
                    "unicode_char": 4,
                    "utf8char": 1
                },
                "uVar11": {
                    "unicode_byte_2_copy": 1
                },
                "uVar2": {
                    "byte": 1,
                    "byte2": 4,
                    "byte_read": 1,
                    "byte_value": 1,
                    "ch": 1,
                    "char_value": 1,
                    "current_byte": 1,
                    "first_byte": 1,
                    "next_byte": 1,
                    "prev_unicode_byte": 1,
                    "temp2": 1,
                    "temp_var2": 1,
                    "unicode_byte": 8,
                    "unicode_byte1": 1,
                    "unicode_byte2": 1,
                    "unicode_byte_1": 1,
                    "unicode_char": 2,
                    "unicode_value": 2
                },
                "uVar3": {
                    "byte": 1,
                    "byte3": 4,
                    "byte_value2": 1,
                    "next_byte": 2,
                    "next_unicode_byte": 1,
                    "second_byte": 6,
                    "second_byte_value": 2,
                    "temp3": 1,
                    "temp_var3": 1,
                    "unicode_byte1": 1,
                    "unicode_byte2": 3,
                    "unicode_byte3": 1,
                    "unicode_byte_2": 2,
                    "unicode_char2": 1,
                    "unicode_value": 1,
                    "unicode_value2": 1
                },
                "uVar4": {
                    "unicode_byte_3": 1
                },
                "uVar5": {
                    "buffer_index": 1,
                    "byte": 1,
                    "byte5": 1,
                    "byte_count": 2,
                    "byte_index": 2,
                    "bytes_processed": 1,
                    "bytes_read": 1,
                    "current_index": 8,
                    "current_offset": 1,
                    "i": 1,
                    "index": 1,
                    "input_index": 1,
                    "iteration_count": 1,
                    "num_bytes_written": 1,
                    "output_index": 2,
                    "prev_byte": 1,
                    "temp5": 1,
                    "temp_var5": 1,
                    "u_var5": 1
                },
                "uVar6": {
                    "buffer_index": 1,
                    "byte6": 1,
                    "byte_index": 3,
                    "current_output_index": 1,
                    "input_index": 1,
                    "length": 1,
                    "output_buffer_index": 1,
                    "output_index": 16,
                    "output_offset": 1,
                    "output_position": 1,
                    "output_size": 1,
                    "temp6": 1,
                    "temp_var6": 1
                },
                "uVar7": {
                    "byte": 1,
                    "byte1": 6,
                    "byte2": 1,
                    "byte4": 1,
                    "byte7": 1,
                    "byte_value2": 1,
                    "byte_value3": 1,
                    "byte_value_2": 1,
                    "first_byte": 1,
                    "second_byte": 4,
                    "second_byte_value": 1,
                    "second_char": 1,
                    "temp7": 1,
                    "temp_byte1": 1,
                    "temp_var7": 1,
                    "unicode_byte1": 5,
                    "unicode_byte3": 1,
                    "unicode_byte_1_copy": 1
                },
                "uVar8": {
                    "byte": 1,
                    "byte2": 6,
                    "byte3": 1,
                    "byte5": 1,
                    "byte8": 1,
                    "byte_value3": 1,
                    "byte_value4": 1,
                    "byte_value_3": 1,
                    "temp8": 1,
                    "temp_byte2": 1,
                    "temp_var8": 1,
                    "third_byte": 6,
                    "third_char": 1,
                    "unicode_byte2": 3,
                    "unicode_byte3": 2,
                    "unicode_byte4": 1,
                    "unicode_byte_2_copy": 1
                },
                "uVar9": {
                    "byte3": 1,
                    "byte_count": 3,
                    "byte_count_flag": 1,
                    "byte_counter": 2,
                    "char_count": 4,
                    "char_index": 1,
                    "character_count": 1,
                    "characters_processed": 1,
                    "count": 1,
                    "counter": 6,
                    "iteration": 1,
                    "iteration_count": 1,
                    "matching_bytes": 1,
                    "num_chars": 1,
                    "temp9": 1,
                    "temp_variable2": 1,
                    "unicode_byte3": 1,
                    "unicode_count": 1,
                    "unicode_counter": 1
                },
                "undefined": {
                    "byte": 1
                }
            },
            "called": [
                "FUN_00102140",
                "FUN_0010290e",
                "FUN_0010293a",
                "FUN_00103890",
                "FUN_001021d0",
                "FUN_00102b11"
            ],
            "calling": [
                "FUN_00102b11",
                "FUN_00103240"
            ],
            "code": "\n\n\nvoid process_unicode_string_00102b11(byte8 file,long file_position,byte8 input_buffer,long buffer_size,uint remaining_bytes,\n                 long output_buffer)\n\n{\n  byte byte_value;\n  uint unicode_byte;\n  uint second_byte;\n  int result;\n  uint current_index;\n  ulong output_index;\n  byte byte1;\n  byte third_byte;\n  uint counter;\n  byte unicode_char;\n  ulong last_position;\n  uint remaining_bytes [3];\n  uint bytes_read;\n  byte byte1;\n  byte byte2;\n  byte byte3;\n  byte byte4;\n  \n  counter = 0;\n  bytes_read = 0;\n  last_position = 0;\n  output_index = 0;\n  remaining_bytes[0] = remaining_bytes;\n  unicode_byte = 0;\n  while (current_index = (uint)output_index, counter < DAT_00108374) {\n    unicode_byte = get_unicode_byte(input_buffer,buffer_size,remaining_bytes,&bytes_read);\n    if (unicode_byte == 0xffffffff) break;\n    if (unicode_byte < 0x100) {\n      unicode_char = (byte)unicode_byte;\n      if (unicode_byte == 9) {\n        if (counter == 0) {\n          last_position = (ulong)(bytes_read - 1);\n        }\nLAB_00102c09:\n        counter = counter + 1;\n        *(byte *)(output_buffer + output_index) = unicode_char;\n        output_index = (ulong)(current_index + 1);\n      }\n      else {\n        if ((*(ushort *)(&_sch_istable + (long)(int)unicode_byte * 2) & 0x10) == 0) {\n          if ((DAT_00108360 != 'S') || ((int)unicode_byte < 0x80)) {\n            if ((DAT_00108373 == '\\0') ||\n               ((*(ushort *)(&_sch_istable + (long)(int)unicode_byte * 2) & 0x40) == 0)) goto LAB_00102b96;\n            goto LAB_00102bf3;\n          }\n          if (counter == 0) {\n            last_position = (ulong)(bytes_read - 1);\n          }\n        }\n        else {\nLAB_00102bf3:\n          if (counter == 0) {\n            last_position = (ulong)(bytes_read - 1);\n          }\n          if ((int)unicode_byte < 0x7f) goto LAB_00102c09;\n        }\n        if ((int)unicode_byte < 0xc0) goto LAB_00102b96;\n        second_byte = get_unicode_byte(input_buffer,buffer_size,remaining_bytes,&bytes_read);\n        if (second_byte == 0xffffffff) {\nLAB_00102dee:\n          unicode_byte = 0xffffffff;\n          break;\n        }\n        byte1 = (byte)second_byte;\n        if ((second_byte & 0xc0) == 0x80) {\n          if ((unicode_byte & 0x20) == 0) {\n            if (DAT_00108350 == 5) goto LAB_00102c67;\n            counter = counter + 1;\n            *(byte *)(output_buffer + output_index) = unicode_char;\n            *(byte *)(output_buffer + (ulong)(current_index + 1)) = byte1;\n            output_index = (ulong)(current_index + 2);\n            unicode_byte = second_byte;\n          }\n          else {\n            second_byte = get_unicode_byte(input_buffer,buffer_size,remaining_bytes,&bytes_read);\n            if (second_byte == 0xffffffff) goto LAB_00102dee;\n            third_byte = (byte)second_byte;\n            if ((second_byte & 0xc0) == 0x80) {\n              if ((unicode_byte & 0x10) == 0) {\n                if (DAT_00108350 == 5) goto LAB_00102ce5;\n                counter = counter + 1;\n                *(byte *)(output_buffer + output_index) = unicode_char;\n                output_index = (ulong)(current_index + 3);\n                *(byte *)(output_buffer + (ulong)(current_index + 1)) = byte1;\n                *(byte *)(output_buffer + (ulong)(current_index + 2)) = third_byte;\n                unicode_byte = second_byte;\n              }\n              else {\n                unicode_byte = get_unicode_byte(input_buffer,buffer_size,remaining_bytes,&bytes_read);\n                if (unicode_byte == 0xffffffff) goto LAB_00102dee;\n                byte_value = (byte)unicode_byte;\n                if ((unicode_byte & 0xc0) == 0x80) {\n                  if (DAT_00108350 == 5) {\n                    *(byte *)(buffer_size + (ulong)remaining_bytes[0]) = byte_value;\n                    *(byte *)(buffer_size + (ulong)(remaining_bytes[0] + 1)) = byte1;\n                    *(byte *)(buffer_size + (ulong)(remaining_bytes[0] + 2)) = third_byte;\n                    goto LAB_00102db9;\n                  }\n                  counter = counter + 1;\n                  *(byte *)(output_buffer + output_index) = unicode_char;\n                  *(byte *)(output_buffer + (ulong)(current_index + 1)) = byte1;\n                  output_index = (ulong)(current_index + 4);\n                  *(byte *)(output_buffer + (ulong)(current_index + 2)) = third_byte;\n                  *(byte *)(output_buffer + (ulong)(current_index + 3)) = byte_value;\n                }\n                else {\n                  *(byte *)(buffer_size + (ulong)remaining_bytes[0]) = byte_value;\n                  *(byte *)(buffer_size + (ulong)(remaining_bytes[0] + 1)) = third_byte;\n                  *(byte *)(buffer_size + (ulong)(remaining_bytes[0] + 2)) = byte1;\nLAB_00102db9:\n                  remaining_bytes[0] = remaining_bytes[0] + 3;\n                  output_index = 0;\n                  counter = 0;\n                }\n              }\n            }\n            else {\nLAB_00102ce5:\n              output_index = 0;\n              counter = 0;\n              *(byte *)(buffer_size + (ulong)remaining_bytes[0]) = third_byte;\n              *(byte *)(buffer_size + (ulong)(remaining_bytes[0] + 1)) = byte1;\n              remaining_bytes[0] = remaining_bytes[0] + 2;\n              unicode_byte = second_byte;\n            }\n          }\n        }\n        else {\nLAB_00102c67:\n          counter = 0;\n          *(byte *)(buffer_size + (ulong)remaining_bytes[0]) = byte1;\n          output_index = 0;\n          remaining_bytes[0] = remaining_bytes[0] + 1;\n          unicode_byte = second_byte;\n        }\n      }\n    }\n    else {\nLAB_00102b96:\n      counter = 0;\n      output_index = 0;\n    }\n  }\n  if (counter < DAT_00108374) {\n    if (unicode_byte != 0xffffffff) {\nLAB_0010308d:\n      process_unicode_string_00102b11(file,(ulong)bytes_read + file_position,input_buffer,buffer_size,remaining_bytes[0],output_buffer);\n    }\n  }\n  else {\n    unicode_byte = 0;\n    print_filename_and_address(file,last_position + file_position);\n    while (unicode_byte < current_index) {\n      output_index = (ulong)unicode_byte;\n      if (*(byte *)(output_index + output_buffer) < 0x7f) {\n        unicode_byte = unicode_byte + 1;\n        putc((uint)*(byte *)(output_index + output_buffer),_stdout);\n      }\n      else {\n        result = display_utf8_char();\n        unicode_byte = unicode_byte + result;\n      }\n    }\n    while( true ) {\n      unicode_byte = get_unicode_byte(input_buffer,buffer_size,remaining_bytes,&bytes_read);\n      if (unicode_byte == 0xffffffff) break;\n      if (0xff < unicode_byte) {\nLAB_00103049:\n        if (DAT_00108358 == (char *)0x0) {\n          putc(10,_stdout);\n        }\n        else {\n          fputs(DAT_00108358,_stdout);\n        }\n        goto LAB_0010308d;\n      }\n      if (unicode_byte == 9) {\nLAB_00102ed4:\n        putc(unicode_byte,_stdout);\n      }\n      else {\n        if ((*(ushort *)(&_sch_istable + (long)(int)unicode_byte * 2) & 0x10) == 0) {\n          if ((DAT_00108360 != 'S') || ((int)unicode_byte < 0x80)) {\n            if ((DAT_00108373 == '\\0') ||\n               ((*(ushort *)(&_sch_istable + (long)(int)unicode_byte * 2) & 0x40) == 0)) goto LAB_00103049;\n            goto LAB_00102ecf;\n          }\n        }\n        else {\nLAB_00102ecf:\n          if ((int)unicode_byte < 0x7f) goto LAB_00102ed4;\n        }\n        if ((int)unicode_byte < 0xc0) goto LAB_00103049;\n        byte1 = (byte)unicode_byte;\n        result = get_unicode_byte(input_buffer,buffer_size,remaining_bytes,&bytes_read);\n        if (result == -1) break;\n        byte2 = (byte)result;\n        if ((byte2 & 0xc0) != 0x80) {\nLAB_00102f32:\n          output_index = (ulong)remaining_bytes[0];\n          remaining_bytes[0] = remaining_bytes[0] + 1;\n          *(byte *)(buffer_size + output_index) = byte2;\njoined_r0x00102f51:\n          if (DAT_00108358 == (char *)0x0) {\n            putc(10,_stdout);\n          }\n          else {\n            fputs(DAT_00108358,_stdout);\n          }\n          goto LAB_0010308d;\n        }\n        if ((byte1 & 0x20) == 0) {\n          if (DAT_00108350 != 5) goto LAB_0010300e;\n          goto LAB_00102f32;\n        }\n        result = get_unicode_byte(input_buffer,buffer_size,remaining_bytes,&bytes_read);\n        if (result == -1) break;\n        byte3 = (byte)result;\n        if ((byte3 & 0xc0) != 0x80) {\nLAB_00102f94:\n          *(byte *)(buffer_size + (ulong)remaining_bytes[0]) = byte3;\n          unicode_byte = remaining_bytes[0] + 1;\n          remaining_bytes[0] = remaining_bytes[0] + 2;\nLAB_00102ff2:\n          *(byte *)(buffer_size + (ulong)unicode_byte) = byte2;\n          goto joined_r0x00102f51;\n        }\n        if ((byte1 & 0x10) != 0) {\n          result = get_unicode_byte(input_buffer,buffer_size,remaining_bytes,&bytes_read);\n          if (result != -1) {\n            byte4 = (byte)result;\n            if (((byte4 & 0xc0) == 0x80) && (DAT_00108350 != 5)) goto LAB_0010300e;\n            *(byte *)(buffer_size + (ulong)remaining_bytes[0]) = byte4;\n            *(byte *)(buffer_size + (ulong)(remaining_bytes[0] + 1)) = byte3;\n            unicode_byte = remaining_bytes[0] + 2;\n            remaining_bytes[0] = remaining_bytes[0] + 3;\n            goto LAB_00102ff2;\n          }\n          break;\n        }\n        if (DAT_00108350 == 5) goto LAB_00102f94;\nLAB_0010300e:\n        display_utf8_char(&byte1);\n      }\n    }\n    if (DAT_00108358 == (char *)0x0) {\n      putc(10,_stdout);\n    }\n    else {\n      fputs(DAT_00108358,_stdout);\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_unicode_string_00102b11",
            "entrypoint": "0x00102b11",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102b11": "process_unicode_string_00102b11",
                "iVar4": "result",
                "local_39": "byte4",
                "local_3a": "byte3",
                "local_3b": "byte2",
                "local_3c": "byte1",
                "local_40": "bytes_read",
                "local_4c": "remaining_bytes",
                "local_80": "last_position",
                "param_1": "file",
                "param_2": "file_position",
                "param_3": "input_buffer",
                "param_4": "buffer_size",
                "param_5": "remaining_bytes",
                "param_6": "output_buffer",
                "uVar1": "byte_value",
                "uVar10": "unicode_char",
                "uVar2": "unicode_byte",
                "uVar3": "second_byte",
                "uVar5": "current_index",
                "uVar6": "output_index",
                "uVar7": "byte1",
                "uVar8": "third_byte",
                "uVar9": "counter",
                "undefined": "byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001030c0": {
            "additional_data": {
                "FUN_001030c0": {
                    "display_strings": 1,
                    "display_strings_usage": 1,
                    "display_usage": 1,
                    "print_help": 2,
                    "print_string_info": 2,
                    "print_string_options": 1,
                    "print_strings": 6,
                    "print_strings_and_options": 1,
                    "print_strings_info": 1,
                    "print_strings_usage": 9,
                    "print_usage": 4,
                    "print_usage_information": 1,
                    "print_usages_and_exit": 1
                },
                "__ptr": {
                    "bfd_target_list": 1,
                    "target_list": 30
                },
                "dcgettext": {
                    "get_localized_string": 1,
                    "get_localized_text": 1,
                    "get_translated_text": 2,
                    "translate": 1
                },
                "exit": {
                    "exit_program": 4
                },
                "fprintf": {
                    "print": 1,
                    "print_formatted": 2,
                    "write_formatted": 1
                },
                "fputc": {
                    "put_character": 1,
                    "write_character": 3
                },
                "free": {
                    "deallocate_memory": 1,
                    "free_memory": 1,
                    "release_memory": 2
                },
                "lVar1": {
                    "default_target": 4,
                    "file_version": 1,
                    "language": 1,
                    "language_code": 1,
                    "language_id": 1,
                    "language_variable": 1,
                    "language_version": 1,
                    "supported_target": 1,
                    "supported_targets": 4,
                    "target": 5,
                    "target_name": 9,
                    "target_string": 2
                },
                "param_1": {
                    "file": 5,
                    "file_pointer": 3,
                    "file_ptr": 1,
                    "output": 2,
                    "output_file": 20
                },
                "param_2": {
                    "error_code": 2,
                    "exit_code": 27,
                    "exit_status": 2
                },
                "pcVar2": {
                    "error_message": 1,
                    "localization_string": 1,
                    "localized_string": 5,
                    "localized_text": 1,
                    "message": 13,
                    "msg": 1,
                    "string": 2,
                    "text": 4,
                    "text_format": 1,
                    "translated_string": 1,
                    "translation": 1
                },
                "plVar3": {
                    "current_target": 12,
                    "ptr": 5,
                    "ptr_target": 2,
                    "target": 3,
                    "target_iterator": 1,
                    "target_pointer": 2,
                    "target_ptr": 6
                },
                "stderr": {
                    "param_1": 1
                },
                "stdout": {
                    "param_1": 1
                }
            },
            "called": [
                "FUN_001020f0",
                "FUN_00102040",
                "FUN_001021e0",
                "FUN_001022e0",
                "FUN_00102150",
                "FUN_001021a0"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid print_strings_usage_001030c0(FILE *output_file,int exit_code)\n\n{\n  long target_name;\n  char *message;\n  long *target_list;\n  long *current_target;\n  \n  target_name = DAT_00108378;\n  message = (char *)get_translated_text(0,\"Usage: %s [option(s)] [file(s)]\\n\",5);\n  print_formatted(output_file,message,target_name);\n  message = (char *)get_translated_text(0,\" Display printable strings in [file(s)] (stdin by default)\\n\",5);\n  print_formatted(output_file,message);\n  message = (char *)get_translated_text(0,\" The options are:\\n\",5);\n  print_formatted(output_file,message);\n  message = (char *)get_translated_text(0,\n                             \"  -a - --all                Scan the entire file, not just the data section [default]\\n  -d --data                 Only scan the data sections in the file\\n\"\n                             ,5);\n  print_formatted(output_file,message);\n  message = (char *)get_translated_text(0,\n                             \"  -f --print-file-name      Print the name of the file before each string\\n  -n <number>               Locate & print any sequence of at least <number>\\n    --bytes=<number>         displayable characters.  (The default is 4).\\n  -t --radix={o,d,x}        Print the location of the string in base 8, 10 or 16\\n  -w --include-all-whitespace Include all whitespace as valid string characters\\n  -o                        An alias for --radix=o\\n  -T --target=<BFDNAME>     Specify the binary file format\\n  -e --encoding={s,S,b,l,B,L} Select character size and endianness:\\n                            s = 7-bit, S = 8-bit, {b,l} = 16-bit, {B,L} = 32-bit\\n  --unicode={default|show|invalid|hex|escape|highlight}\\n  -U {d|s|i|x|e|h}          Specify how to treat UTF-8 encoded unicode characters\\n  -s --output-separator=<string> String used to separate strings in output.\\n  @<file>                   Read options from <file>\\n  -h --help                 Display this information\\n  -v -V --version           Print the program\\'s version number\\n\"\n                             ,5);\n  print_formatted(output_file,message);\n  target_name = DAT_00108378;\n  if (DAT_00108378 == 0) {\n    message = (char *)get_translated_text(0,\"Supported targets:\",5);\n    print_formatted(output_file,message);\n  }\n  else {\n    message = (char *)get_translated_text(0,\"%s: supported targets:\",5);\n    print_formatted(output_file,message,target_name);\n  }\n  target_list = (long *)bfd_target_list();\n  current_target = target_list;\n  while( true ) {\n    target_name = *current_target;\n    current_target = current_target + 1;\n    if (target_name == 0) break;\n    print_formatted(output_file,\" %s\");\n  }\n  write_character(10,output_file);\n  release_memory(target_list);\n  if (exit_code == 0) {\n    message = (char *)get_translated_text(0,\"Report bugs to %s\\n\",5);\n    print_formatted(output_file,message,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  exit_program(exit_code);\n}\n\n",
            "current_name": "print_strings_usage_001030c0",
            "entrypoint": "0x001030c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001030c0": "print_strings_usage_001030c0",
                "__ptr": "target_list",
                "dcgettext": "get_translated_text",
                "exit": "exit_program",
                "fprintf": "print_formatted",
                "fputc": "write_character",
                "free": "release_memory",
                "lVar1": "target_name",
                "param_1": "output_file",
                "param_2": "exit_code",
                "pcVar2": "message",
                "plVar3": "current_target"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103240": {
            "additional_data": {
                "DAT_0010834c": {
                    "print_unicode_size": 1
                },
                "DAT_00108350": {
                    "is_valid_utf8_mode": 1
                },
                "DAT_00108358": {
                    "print_newline": 1
                },
                "DAT_00108360": {
                    "print_unicode_chars": 1
                },
                "DAT_00108361": {
                    "is_escape_char": 1
                },
                "DAT_00108371": {
                    "print_line_number": 1
                },
                "DAT_00108372": {
                    "print_file_info": 1
                },
                "DAT_00108373": {
                    "print_special_chars": 1
                },
                "DAT_00108374": {
                    "formatted_output_size": 1
                },
                "D_00108371": {
                    "skip_first_char": 1
                },
                "FUND_00103240": {
                    "print_formatted_output": 1
                },
                "FUN_00103240": {
                    "print_and_process_data": 1,
                    "print_formatted_output": 29
                },
                "__ptr": {
                    "allocated_buffer": 2,
                    "allocated_memory": 3,
                    "char_buffer": 1,
                    "char_ptr": 1,
                    "dynamic_buffer": 2,
                    "dynamic_memory": 2,
                    "formatted_output": 1,
                    "malloced_pointer": 1,
                    "output_buffer": 1,
                    "ptr": 8,
                    "ptr1": 1,
                    "ptr2": 1,
                    "ptr_var": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 2,
                    "temporary_buffer": 1,
                    "temporary_ptr": 1,
                    "tmp_ptr": 1
                },
                "__s": {
                    "buffer": 1,
                    "current_string": 1,
                    "formatted_output": 8,
                    "formatted_string": 3,
                    "output_buffer": 3,
                    "output_string": 9,
                    "ptr3": 1,
                    "s": 1,
                    "str": 3,
                    "str_var": 1
                },
                "_sch_istable": {
                    "char_table": 1,
                    "character_table": 1
                },
                "_stderr": {
                    "stderr": 1
                },
                "_stdout": {
                    "file": 1,
                    "stdout": 1
                },
                "bVar12": {
                    "bool_value": 1,
                    "bool_var": 3,
                    "bool_var12": 1,
                    "condition": 1,
                    "continue_flag": 1,
                    "continue_parsing": 1,
                    "continue_processing": 1,
                    "is_continuing": 1,
                    "is_less": 1,
                    "is_valid_char": 3,
                    "is_valid_flag": 1,
                    "is_valid_sequence": 1,
                    "is_valid_utf8": 6,
                    "is_valid_utf8_result": 1,
                    "utf8_validation_passed": 1,
                    "valid_char": 1,
                    "valid_sequence": 1,
                    "valid_utf8": 2,
                    "var11": 1,
                    "var9": 1
                },
                "bVar14": {
                    "is_file_null": 1
                },
                "bVar15": {
                    "is_valid_utf8": 1
                },
                "bVar16": {
                    "is_display_utf8_char": 1
                },
                "bVar17": {
                    "is_filename_null": 1
                },
                "bVar18": {
                    "is_file_address_null": 1
                },
                "bVar19": {
                    "is_input_char_null": 1
                },
                "bVar2": {
                    "byte_value": 4,
                    "byte_var": 3,
                    "byte_var2": 1,
                    "current_byte": 6,
                    "current_char": 11,
                    "current_character": 2,
                    "input_byte": 1,
                    "var1": 1
                },
                "bVar20": {
                    "is_output_string_null": 1
                },
                "bVar21": {
                    "is_pointer_null": 1
                },
                "bVar22": {
                    "is_char_null": 1
                },
                "cVar3": {
                    "char_value": 2,
                    "char_var": 3,
                    "char_var3": 1,
                    "data_type": 1,
                    "display_option": 1,
                    "enable_filename": 1,
                    "flag": 1,
                    "is_filename_needed": 1,
                    "is_printing": 1,
                    "is_string": 1,
                    "is_unicode": 1,
                    "mode": 1,
                    "print_address": 3,
                    "print_address_flag": 1,
                    "print_filename": 3,
                    "print_separator": 1,
                    "print_space": 1,
                    "unicode_type": 1,
                    "use_address": 3,
                    "var2": 1
                },
                "decode_byte_sequence_001028b2": {
                    "decode_byte_sequence": 1
                },
                "display_unicode_character_0010293a": {
                    "display_unicode_character": 1
                },
                "display_utf8_char": {
                    "display_utf8_character": 1
                },
                "fputs": {
                    "print_string": 1
                },
                "get_char": {
                    "get_character": 1
                },
                "iVar6": {
                    "data_format": 1,
                    "data_type2": 1,
                    "display_option": 1,
                    "display_result": 1,
                    "display_utf8_char_output": 1,
                    "display_utf8_char_ret_val": 1,
                    "flag": 1,
                    "function_option": 1,
                    "input_length": 1,
                    "input_type": 1,
                    "int_value": 1,
                    "int_var": 3,
                    "int_var6": 1,
                    "loop_variable": 1,
                    "output_status": 1,
                    "print_filename": 1,
                    "process_flag": 1,
                    "temp_var": 1,
                    "unicode_mode": 1,
                    "utf8_validity": 1,
                    "valid_utf8": 1,
                    "validation_result": 4,
                    "validity_check": 1,
                    "validity_check_result": 1,
                    "var3": 1,
                    "var5": 1
                },
                "is_valid_utf8": {
                    "is_valid_utf8": 1
                },
                "lVar4": {
                    "current_address": 1,
                    "current_position": 4,
                    "file_pos": 1,
                    "file_position": 11,
                    "file_position_copy": 2,
                    "file_position_temp": 1,
                    "long_value": 1,
                    "long_var": 3,
                    "long_var4": 1,
                    "sequence_length": 4,
                    "var1": 1,
                    "var3": 1
                },
                "local_3d": {
                    "local5_var": 1,
                    "local_arr2": 1,
                    "local_undef_array": 1,
                    "local_undefined13": 1,
                    "local_var4": 1,
                    "local_var5": 1,
                    "padding_bytes": 1,
                    "print_filename": 1,
                    "remaining_bytes": 1,
                    "temp_array2": 1,
                    "temp_buffer": 3,
                    "temp_variable": 1,
                    "undefined_buffer": 1,
                    "ungetc_buffer": 1,
                    "unmapped_buffer": 1,
                    "unused": 1,
                    "unused_array": 5,
                    "unused_buffer": 2,
                    "unused_bytes": 2,
                    "unused_characters": 1,
                    "unused_data": 1
                },
                "local_50": {
                    "buffer_info": 2,
                    "buffer_params": 1,
                    "byte_sequence": 5,
                    "current_address": 1,
                    "current_parameters": 1,
                    "file_info": 2,
                    "file_position_array": 1,
                    "input_buffer_copy": 1,
                    "input_params": 1,
                    "local4_var": 1,
                    "local_arr": 1,
                    "local_long_array": 1,
                    "local_long_var50": 1,
                    "local_var3": 1,
                    "local_var4": 1,
                    "param_array": 2,
                    "position_array": 1,
                    "sequence_info": 1,
                    "sequence_length": 1,
                    "sequence_length_array": 1,
                    "sequence_lengths": 1,
                    "sequence_size": 1,
                    "temp_array": 1
                },
                "local_54": {
                    "buffer_index": 1,
                    "buffer_size": 1,
                    "buffer_size_copy": 1,
                    "buffer_size_local": 1,
                    "count": 1,
                    "current_buffer_size": 2,
                    "current_byte_index": 1,
                    "current_flag": 1,
                    "current_input_index": 1,
                    "current_remaining_bytes": 1,
                    "current_sequence_length": 1,
                    "current_size": 2,
                    "data_size": 1,
                    "local3_var": 1,
                    "local_int_var54": 1,
                    "local_var2": 3,
                    "local_var3": 1,
                    "remaining_bytes": 8,
                    "remaining_bytes_copy": 1,
                    "remaining_characters": 1
                },
                "local_60": {
                    "buffer_local": 1,
                    "current_buffer": 5,
                    "current_buffer_index": 1,
                    "current_byte_sequence": 1,
                    "current_char": 1,
                    "current_char_pointer": 1,
                    "current_input_buffer": 2,
                    "current_input_pointer": 1,
                    "current_output": 1,
                    "current_pointer": 2,
                    "current_position": 2,
                    "data_ptr": 1,
                    "input_buffer": 2,
                    "input_buffer_copy": 1,
                    "input_pointer": 1,
                    "local2_var": 1,
                    "local_byte_ptr": 1,
                    "local_byte_ptr60": 1,
                    "local_ptr": 1,
                    "local_var2": 1,
                    "output_buffer_ptr": 1,
                    "ptr2": 1
                },
                "local_80": {
                    "base_address": 1,
                    "current_address": 7,
                    "current_file_position": 2,
                    "current_line_pos": 1,
                    "current_position": 3,
                    "file_address": 1,
                    "file_offset": 1,
                    "file_pos": 1,
                    "file_position": 2,
                    "file_position_copy": 2,
                    "file_position_local": 1,
                    "file_start": 1,
                    "file_start_position": 1,
                    "last_position": 1,
                    "local1_var": 1,
                    "local_long_var80": 1,
                    "local_var1": 4
                },
                "param_1": {
                    "file_address": 1,
                    "file_name": 4,
                    "filename": 15,
                    "input_file_name": 1,
                    "input_filename": 2,
                    "input_string": 1,
                    "message": 1,
                    "param1": 6
                },
                "param_2": {
                    "file": 4,
                    "file_pointer": 1,
                    "file_position": 2,
                    "file_ptr": 1,
                    "file_stream": 2,
                    "filestream": 1,
                    "input_buffer": 4,
                    "input_file": 6,
                    "input_stream": 2,
                    "param2": 6,
                    "stream": 2
                },
                "param_3": {
                    "address": 1,
                    "buffer_size": 10,
                    "file_pos": 1,
                    "file_position": 11,
                    "input_buffer": 2,
                    "param3": 6
                },
                "param_4": {
                    "buffer_size": 14,
                    "num_chars": 1,
                    "param4": 6,
                    "print_newline": 1,
                    "remaining_bytes": 8,
                    "size": 1
                },
                "param_5": {
                    "buffer": 3,
                    "byte_sequence": 1,
                    "input_buffer": 16,
                    "input_data": 1,
                    "output_buffer": 3,
                    "param5": 6,
                    "remaining_bytes": 1
                },
                "pbVar1": {
                    "byte_pointer": 1,
                    "byte_ptr": 1,
                    "byte_ptr1": 2,
                    "current_byte": 13,
                    "current_char": 4,
                    "input_byte": 2,
                    "input_char": 2,
                    "ptr1": 3,
                    "ptr_byte": 1
                },
                "print_file_info_00103890": {
                    "print_file_info": 1
                },
                "print_filename_and_address_part_0": {
                    "print_file": 1
                },
                "print_formatted_output_001034fa": {
                    "print_formatted_output": 1
                },
                "print_formatted_output_00103510": {
                    "print_formatted_output": 1
                },
                "print_unicode_stream_body": {
                    "print_unicode_stream": 1
                },
                "printf": {
                    "print_formatted_string": 1
                },
                "process_input_data_001034d5": {
                    "process_input_data": 1
                },
                "process_unicode_string_00102b11": {
                    "process_unicode_string": 1
                },
                "putchar": {
                    "print_character": 1
                },
                "uVar10": {
                    "buffer_index": 2,
                    "buffer_position": 1,
                    "byte_count": 1,
                    "byte_index": 1,
                    "count": 1,
                    "current_index": 6,
                    "current_input_index": 1,
                    "current_position": 1,
                    "formatted_string_index": 1,
                    "index": 1,
                    "loop_index": 1,
                    "m": 1,
                    "next_index": 1,
                    "offset": 1,
                    "output_index": 3,
                    "temp": 1,
                    "temp_var_3": 1,
                    "ulong2_var": 1,
                    "ulong_var10": 1,
                    "ulong_var3": 2,
                    "var7": 1,
                    "var9": 1
                },
                "uVar11": {
                    "char_count": 6,
                    "count": 2,
                    "counter": 1,
                    "current_count": 1,
                    "is_tab_count": 1,
                    "newline_count": 1,
                    "num_displayed_chars": 1,
                    "separator_count": 1,
                    "sequence_count": 2,
                    "sequence_index": 3,
                    "sequence_length": 1,
                    "tab_count": 3,
                    "temp_var_4": 1,
                    "uint2_var": 1,
                    "uint_var11": 1,
                    "uint_var2": 2,
                    "unicode_char_count": 1,
                    "var10": 1,
                    "var8": 1
                },
                "uVar12": {
                    "b_flag": 1
                },
                "uVar13": {
                    "prev_byte": 1
                },
                "uVar5": {
                    "char_flag": 1,
                    "char_type": 1,
                    "current_byte": 1,
                    "display_char_size": 1,
                    "display_width": 1,
                    "displayed_chars": 1,
                    "is_tab": 1,
                    "is_valid_utf8": 2,
                    "is_valid_utf8_output": 1,
                    "newline_char": 1,
                    "output_character": 1,
                    "result": 3,
                    "return_value": 2,
                    "table_value": 1,
                    "uint_value": 1,
                    "uint_var": 3,
                    "uint_var5": 1,
                    "utf8_char_len": 1,
                    "utf8_char_length": 1,
                    "utf8_sequence_length": 2,
                    "utf8_valid": 1,
                    "utf8_validation": 1,
                    "var2": 1,
                    "var4": 1
                },
                "uVar7": {
                    "byte_index": 2,
                    "byte_position": 1,
                    "byte_read": 1,
                    "byte_value": 1,
                    "char_code": 1,
                    "char_position": 1,
                    "current_char": 1,
                    "current_char2": 1,
                    "current_index": 4,
                    "i": 1,
                    "index": 4,
                    "input_index": 2,
                    "remaining_bytes": 1,
                    "result": 1,
                    "sequence_length": 1,
                    "start_index": 1,
                    "ulong_value": 1,
                    "ulong_var": 1,
                    "ulong_var1": 2,
                    "ulong_var7": 1,
                    "var4": 1,
                    "var6": 1
                },
                "uVar8": {
                    "buffer_length": 2,
                    "buffer_size": 1,
                    "byte_count": 1,
                    "current_index": 1,
                    "end_index": 1,
                    "formatted_string_length": 1,
                    "input_length": 2,
                    "input_size": 1,
                    "j": 1,
                    "length": 1,
                    "output_length": 1,
                    "remaining_bytes": 1,
                    "remaining_length": 1,
                    "sequence_length": 8,
                    "string_length": 2,
                    "ulong1_var": 1,
                    "ulong_var2": 2,
                    "ulong_var8": 1,
                    "var5": 1,
                    "var7": 1
                },
                "uVar9": {
                    "buffer_length": 1,
                    "buffer_size": 1,
                    "buffer_size_copy": 1,
                    "bytes_read": 1,
                    "check_char_code": 1,
                    "current_byte": 1,
                    "formatted_output_length": 2,
                    "formatted_output_size": 1,
                    "formatted_string_length": 1,
                    "n": 1,
                    "num_seq_chars": 1,
                    "output_buffer_length": 1,
                    "output_length": 2,
                    "output_size": 1,
                    "output_string_index": 1,
                    "read_value": 1,
                    "remaining_bytes": 1,
                    "sequence_length": 4,
                    "string_length": 1,
                    "temp_var_2": 1,
                    "uint1_var": 1,
                    "uint_var1": 2,
                    "uint_var9": 1,
                    "var6": 1,
                    "var8": 1
                },
                "unget_part_char": {
                    "unget_character": 1
                }
            },
            "called": [
                "FUN_00102170",
                "FUN_00102040",
                "FUN_00102140",
                "FUN_001028b2",
                "FUN_001021d0",
                "FUN_0010293a",
                "FUN_00103890",
                "FUN_00102b11",
                "FUN_001022f0"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nvoid print_formatted_output_00103240(long filename,long param2,long file_position,int buffer_size,byte *input_buffer)\n\n{\n  byte *current_byte;\n  byte current_char;\n  char use_address;\n  long file_position;\n  uint result;\n  int validation_result;\n  void *ptr;\n  char *output_string;\n  ulong index;\n  ulong sequence_length;\n  uint sequence_length;\n  ulong current_index;\n  uint char_count;\n  bool is_valid_utf8;\n  long current_address;\n  byte *current_buffer;\n  int remaining_bytes;\n  long byte_sequence [2];\n  undefined unused_array [13];\n  \n  current_buffer = input_buffer;\n  remaining_bytes = buffer_size;\n  byte_sequence[0] = file_position;\n  if (DAT_00108350 == 0) {\n    output_string = (char *)xmalloc(DAT_00108374 + 1);\n    do {\n      while (file_position = byte_sequence[0], sequence_length = (ulong)DAT_00108374, DAT_00108374 == 0) {\njoined_r0x001034ef:\n        if (DAT_00108371 != '\\0') {\n          print_formatted_string(\"%s: \",filename);\n        }\n        if (DAT_00108372 == '\\0') {\n          output_string[sequence_length] = '\\0';\n          print_string(output_string,stdout);\n        }\n        else {\n          print_file(file_position);\n          output_string[sequence_length] = '\\0';\n          print_string(output_string,stdout);\n        }\n        while (sequence_length = get_character(param2,byte_sequence,&remaining_bytes,&current_buffer), sequence_length != 0xffffffffffffffff)\n        {\n          if (0xff < sequence_length) {\nLAB_0010348e:\n            unget_character(sequence_length,byte_sequence,&remaining_bytes,&current_buffer);\n            break;\n          }\n          if (sequence_length == 9) {\nLAB_00102438:\n            putc((int)sequence_length,stdout);\n          }\n          else {\n            if ((*(ushort *)(&character_table + sequence_length * 2) & 0x10) == 0) {\n              if (((DAT_00108360 != 'S') || ((long)sequence_length < 0x80)) &&\n                 ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + sequence_length * 2) & 0x40) == 0))))\n              goto LAB_0010348e;\n              goto LAB_00102438;\n            }\n            putc((int)sequence_length,stdout);\n          }\n        }\n        if (DAT_00108358 == (char *)0x0) {\n          putc(10,stdout);\n        }\n        else {\n          print_string(DAT_00108358,stdout);\n        }\n      }\n      index = get_character(param2,byte_sequence,&remaining_bytes,&current_buffer);\n      sequence_length = DAT_00108374;\n      if (index == 0xffffffffffffffff) goto LAB_001034be;\n      if (index < 0x100) {\n        if (index == 9) {\nLAB_001023f5:\n          *output_string = (char)index;\n          if (sequence_length < 2) {\n            print_formatted_output_00103240();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&character_table + index * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)index < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + index * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto LAB_001023f5;\n          }\n          *output_string = (char)index;\n          if (sequence_length < 2) {\n            sequence_length = 1;\n            goto joined_r0x001034ef;\n          }\n        }\n        index = get_character(param2,byte_sequence,&remaining_bytes,&current_buffer);\n        sequence_length = DAT_00108374;\n        if (index == 0xffffffffffffffff) goto LAB_001034be;\n        if (index < 0x100) {\n          if (index == 9) {\nLAB_001023bb:\n            output_string[1] = (char)index;\n            if (sequence_length < 3) {\n              print_formatted_output_00103240();\n              return;\n            }\n          }\n          else {\n            if ((*(ushort *)(&character_table + index * 2) & 0x10) == 0) {\n              if (((DAT_00108360 != 'S') || ((long)index < 0x80)) &&\n                 ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + index * 2) & 0x40) == 0))))\n              goto code_r0x001034d5;\n              goto LAB_001023bb;\n            }\n            output_string[1] = (char)index;\n            if (sequence_length < 3) {\n              sequence_length = 2;\n              goto joined_r0x001034ef;\n            }\n          }\n          index = get_character(param2,byte_sequence,&remaining_bytes,&current_buffer);\n          sequence_length = DAT_00108374;\n          if (index == 0xffffffffffffffff) {\nLAB_001034be:\n            free(output_string);\n            return;\n          }\n          if (index < 0x100) {\n            if (index == 9) {\nLAB_00102381:\n              output_string[2] = (char)index;\n            }\n            else {\n              if ((*(ushort *)(&character_table + index * 2) & 0x10) == 0) {\n                if (((DAT_00108360 != 'S') || ((long)index < 0x80)) &&\n                   ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + index * 2) & 0x40) == 0))\n                   )) goto code_r0x001034d5;\n                goto LAB_00102381;\n              }\n              output_string[2] = (char)index;\n            }\n            if (sequence_length < 4) {\n              sequence_length = 3;\n            }\n            else {\n              current_index = 3;\n              do {\n                index = get_character(param2,byte_sequence,&remaining_bytes,&current_buffer);\n                if (index == 0xffffffffffffffff) goto LAB_001034be;\n                if (0xff < index) goto code_r0x001034d5;\n                if (((index != 9) && ((*(ushort *)(&character_table + index * 2) & 0x10) == 0)) &&\n                   ((DAT_00108360 != 'S' || ((long)index < 0x80)))) {\n                  if (DAT_00108373 == '\\0') goto code_r0x001034d5;\n                  if ((*(ushort *)(&character_table + index * 2) & 0x40) == 0) {\n                    process_input_data();\n                    return;\n                  }\n                }\n                sequence_length = (int)current_index + 1;\n                sequence_length = (ulong)sequence_length;\n                is_valid_utf8 = sequence_length < DAT_00108374;\n                output_string[current_index] = (char)index;\n                current_index = sequence_length;\n              } while (is_valid_utf8);\n            }\n            goto joined_r0x001034ef;\n          }\n        }\n      }\ncode_r0x001034d5:\n      unget_character(index,byte_sequence,&remaining_bytes,&current_buffer);\n    } while( true );\n  }\n  if (input_buffer != (byte *)0x0) {\n    sequence_length = (ulong)buffer_size;\n    current_address = file_position;\n    if (filename != 0) {\nLAB_0010249c:\n      sequence_length = DAT_00108374;\n      use_address = DAT_00108373;\n      validation_result = DAT_00108350;\n      if (((DAT_00108350 != 0) && (DAT_00108360 == 'S')) && (DAT_0010834c == 1)) {\n        if (sequence_length != 0) {\n          index = 0;\n          char_count = 0;\n          current_index = 0;\n          do {\n            while( true ) {\n              current_char = input_buffer[current_index];\n              if (current_char != 9) break;\nLAB_0010252e:\n              result = 1;\nLAB_00102533:\n              if (char_count == 0) {\n                index = current_index;\n              }\n              char_count = char_count + 1;\n              if (sequence_length <= char_count) goto LAB_001026a9;\n              current_index = current_index + result;\n              if (sequence_length <= current_index) goto LAB_00102551;\n            }\n            if ((*(ushort *)(&character_table + (long)(int)(uint)current_char * 2) & 0x10) != 0) {\n              if (0x7e < current_char) goto LAB_0010264e;\n              goto LAB_0010252e;\n            }\n            if (0x7f < current_char) {\nLAB_0010264e:\n              if ((current_char < 0xc0) ||\n                 (result = is_valid_utf8(input_buffer + current_index,sequence_length - current_index), result == 0))\n              goto LAB_0010269a;\n              if (validation_result == 5) goto LAB_00102688;\n              goto LAB_00102533;\n            }\n            if (((use_address != '\\0') &&\n                ((*(ushort *)(&character_table + (long)(int)(uint)current_char * 2) & 0x40) != 0)) &&\n               (current_char != 0x7f)) goto LAB_0010252e;\nLAB_0010269a:\n            result = 1;\nLAB_00102688:\n            current_index = current_index + result;\n            if (sequence_length <= current_index) goto LAB_001026a1;\n            char_count = 0;\n          } while( true );\n        }\n        goto LAB_00102551;\n      }\n    }\n    fwrite(\"ICE: bad arguments to print_unicode_buffer\\n\",1,0x2b,stderr);\n  }\n  if (param2 != 0) {\n    if (filename != 0) {\nLAB_0010255f:\n      file_position = byte_sequence[0];\n      if (((DAT_00108350 != 0) && (DAT_00108360 == 'S')) && (DAT_0010834c == 1)) {\n        ptr = (void *)xmalloc(DAT_00108374 * 4 + 1);\n        print_unicode_stream(filename,file_position,param2,unused_array,0,ptr);\n        free(ptr);\n        return;\n      }\n    }\n    fwrite(\"ICE: bad arguments to print_unicode_stream\\n\",1,0x2b,stderr);\n  }\n  return;\nLAB_001026a1:\n  if (sequence_length != 0) {\nLAB_00102551:\n    if (param2 == 0) {\n      return;\n    }\n    goto LAB_0010255f;\n  }\nLAB_001026a9:\n  print_filename_and_address(filename,current_address + index);\n  for (; current_byte = input_buffer + index, index < sequence_length; index = index + sequence_length) {\n    current_char = *current_byte;\n    if (current_char == 9) {\nLAB_00102708:\n      putc((uint)current_char,stdout);\n      sequence_length = 1;\n    }\n    else {\n      if ((*(ushort *)(&character_table + (long)(int)(uint)current_char * 2) & 0x10) == 0) {\n        if ((DAT_00108360 != 'S') || (current_char < 0x80)) {\n          if ((DAT_00108373 != '\\0') &&\n             ((*(ushort *)(&character_table + (long)(int)(uint)current_char * 2) & 0x40) != 0))\n          goto LAB_00102703;\n          break;\n        }\n      }\n      else {\nLAB_00102703:\n        if (current_char < 0x7f) goto LAB_00102708;\n      }\n      validation_result = is_valid_utf8(current_byte,sequence_length - index);\n      if ((validation_result == 0) || (DAT_00108350 == 5)) break;\n      sequence_length = display_utf8_character(current_byte);\n    }\n  }\n  if (DAT_00108358 == (char *)0x0) {\n    putc(10,stdout);\n  }\n  else {\n    print_string(DAT_00108358,stdout);\n  }\n  current_address = current_address + index;\n  sequence_length = sequence_length - index;\n  input_buffer = current_byte;\n  goto LAB_0010249c;\n}\n\n",
            "current_name": "print_formatted_output_00103240",
            "entrypoint": "0x00103240",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103240": "print_formatted_output_00103240",
                "__ptr": "ptr",
                "__s": "output_string",
                "_sch_istable": "character_table",
                "_stderr": "stderr",
                "_stdout": "stdout",
                "bVar12": "is_valid_utf8",
                "bVar2": "current_char",
                "cVar3": "use_address",
                "display_utf8_char": "display_utf8_character",
                "fputs": "print_string",
                "get_char": "get_character",
                "iVar6": "validation_result",
                "lVar4": "file_position",
                "local_3d": "unused_array",
                "local_50": "byte_sequence",
                "local_54": "remaining_bytes",
                "local_60": "current_buffer",
                "local_80": "current_address",
                "param_1": "filename",
                "param_2": "param2",
                "param_3": "file_position",
                "param_4": "buffer_size",
                "param_5": "input_buffer",
                "pbVar1": "current_byte",
                "print_filename_and_address_part_0": "print_file",
                "print_formatted_output_001034fa": "print_formatted_output",
                "print_formatted_output_00103510": "print_formatted_output",
                "print_unicode_stream_body": "print_unicode_stream",
                "printf": "print_formatted_string",
                "process_input_data_001034d5": "process_input_data",
                "uVar10": "current_index",
                "uVar11": "char_count",
                "uVar5": "result",
                "uVar7": "index",
                "uVar8": "sequence_length",
                "uVar9": "sequence_length",
                "unget_part_char": "unget_character"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001034d5": {
            "additional_data": {
                "DAT_00108358": {
                    "end_of_string": 1,
                    "ending_string": 1,
                    "newline_string": 1
                },
                "DAT_00108360": {
                    "modifier": 3,
                    "s_flag": 1
                },
                "DAT_00108371": {
                    "print_filename": 1,
                    "print_filename_flag": 1,
                    "print_function_name": 2
                },
                "DAT_00108372": {
                    "print_address": 2,
                    "print_address_flag": 2
                },
                "DAT_00108373": {
                    "check_char_type": 1,
                    "flag": 3
                },
                "DAT_00108374": {
                    "max_input_length": 1,
                    "output_buffer_size": 1,
                    "string_length": 1
                },
                "FUN_001034d5": {
                    "parse_and_print_input": 3,
                    "parse_input": 5,
                    "parse_input_and_print": 4,
                    "process_input": 15,
                    "process_input_data": 4
                },
                "LAB_00102381": {
                    "handle_tab_3": 1
                },
                "LAB_001023bb": {
                    "handle_tab_2": 1
                },
                "LAB_001023f5": {
                    "handle_tab": 1
                },
                "LAB_001034be": {
                    "end_processing": 1
                },
                "_sch_istable": {
                    "char_table": 2,
                    "character_table": 11
                },
                "_stdout": {
                    "output": 1,
                    "output_stream": 3,
                    "standard_output": 6,
                    "stdout": 1
                },
                "bVar5": {
                    "condition": 1,
                    "continue_inner_loop": 1,
                    "continue_loop": 1,
                    "continue_looping": 1,
                    "continue_parsing": 1,
                    "flag": 1,
                    "is_buffer_full": 1,
                    "is_less": 2,
                    "is_looping": 1,
                    "is_valid": 6,
                    "is_valid_char": 1,
                    "is_within_limit": 1,
                    "loop_condition": 2,
                    "should_continue_processing": 1
                },
                "code_r0x001034d5": {
                    "loop_start": 1,
                    "read_next_character": 1
                },
                "fclose": {
                    "close_file": 2
                },
                "fopen": {
                    "open_file": 3
                },
                "fputc": {
                    "put_char": 1
                },
                "fputs": {
                    "output_string": 1,
                    "print_output": 1,
                    "print_string": 2,
                    "write_string": 3,
                    "write_string_to_output": 1,
                    "write_to_stdout": 1,
                    "write_to_stream": 1
                },
                "fread": {
                    "read_file": 1
                },
                "free": {
                    "deallocate_memory": 1,
                    "free": 1,
                    "free_memory": 4,
                    "release_memory": 1
                },
                "get_char": {
                    "get_char": 2,
                    "get_character": 1,
                    "get_next_char": 1,
                    "get_next_character": 3,
                    "get_next_input_char": 1,
                    "read_char": 2,
                    "read_character": 1,
                    "read_character_from_input": 1
                },
                "in_stack_00000010": {
                    "file_name": 4,
                    "filename": 8,
                    "format_str": 1,
                    "function_name": 7,
                    "input_file_name": 2,
                    "input_filename": 1,
                    "input_modifier": 1,
                    "modifier": 1,
                    "program_name": 1
                },
                "in_stack_00000038": {
                    "address": 17,
                    "address_part": 1,
                    "address_string": 1,
                    "filename": 1,
                    "filename_address": 1,
                    "filename_and_address": 1,
                    "filename_str": 1,
                    "method_address": 1,
                    "module_base_address": 1,
                    "program_address": 1
                },
                "joined_r0x001034ef": {
                    "handle_more_tabs": 1
                },
                "memcpy": {
                    "copy_data": 1
                },
                "modifier": {
                    "data_modifier": 3,
                    "mod": 3,
                    "modifier": 10
                },
                "pointer1": {
                    "data_pointer1": 6,
                    "input_pointer1": 1,
                    "p_pointer1": 1,
                    "pointer1": 1,
                    "ptr1": 7
                },
                "pointer2": {
                    "data_pointer2": 6,
                    "input_pointer2": 1,
                    "p_pointer2": 1,
                    "pointer2": 1,
                    "ptr2": 7
                },
                "print_filename_and_address_part_0": {
                    "print_filename_and_address": 7,
                    "print_filename_and_address_part": 1
                },
                "print_formatted_output_001034fa": {
                    "print_formatted_output": 4,
                    "print_formatted_output1": 1,
                    "print_output": 4,
                    "print_output_string_1": 1,
                    "print_output_when_input_buffer_length_is_1": 1,
                    "print_output_with_formatting": 1,
                    "print_single_output": 1
                },
                "print_formatted_output_00103510": {
                    "print_double_output": 1,
                    "print_formatted_output": 2,
                    "print_formatted_output2": 2,
                    "print_output": 3,
                    "print_output_string_2": 1,
                    "print_output_when_input_buffer_length_is_2": 1,
                    "print_output_with_address": 1,
                    "print_output_with_formatting": 1
                },
                "printf": {
                    "output": 1,
                    "print": 1,
                    "print_formatted": 1,
                    "print_formatted_output": 2,
                    "print_message": 2,
                    "print_prompt": 1,
                    "print_string": 1
                },
                "put": {
                    "put": 1
                },
                "putc": {
                    "print_character": 1,
                    "put_char": 1,
                    "put_character": 1,
                    "write_char": 2,
                    "write_character": 1,
                    "write_character_to_output": 1,
                    "write_character_to_stdout": 1
                },
                "result": {
                    "data_result": 3,
                    "output": 1,
                    "output_pointer": 1,
                    "p_result": 1,
                    "res": 4,
                    "result": 3,
                    "result_pointer": 2,
                    "updated_data": 1
                },
                "uVar1": {
                    "ch1": 3,
                    "char1": 4,
                    "char_1": 1,
                    "char_value": 2,
                    "character": 6,
                    "current_char": 10,
                    "input_char": 1
                },
                "uVar2": {
                    "ch2": 3,
                    "char2": 4,
                    "char_2": 1,
                    "char_value": 1,
                    "char_value2": 2,
                    "character2": 1,
                    "next_char": 8,
                    "next_character": 3,
                    "temp": 2,
                    "temp_var": 2
                },
                "uVar3": {
                    "buffer_length": 1,
                    "buffer_size": 2,
                    "char_count": 1,
                    "count": 8,
                    "counter": 4,
                    "data_length": 1,
                    "input_buffer_length": 1,
                    "input_count": 2,
                    "length": 1,
                    "loop_counter": 2,
                    "num_characters": 1,
                    "num_chars_parsed": 1,
                    "num_chars_read": 1,
                    "state": 1
                },
                "uVar4": {
                    "char_index": 1,
                    "count": 2,
                    "counter": 5,
                    "counter2": 1,
                    "i": 1,
                    "index": 11,
                    "inner_loop_counter": 2,
                    "loop_count": 1,
                    "loop_counter": 1,
                    "nested_loop_counter": 1,
                    "temp_counter": 1
                },
                "unaff_R14": {
                    "buffer": 2,
                    "input_buffer": 2,
                    "input_string": 1,
                    "output": 1,
                    "output_buffer": 11,
                    "output_string": 8,
                    "parsed_input": 1,
                    "parsed_string": 1
                },
                "unget_part_char": {
                    "get_previous_char": 1,
                    "read_character_from_input": 1,
                    "undo_read_character": 1,
                    "unget_char": 1,
                    "unget_character": 1,
                    "unget_part_char": 2,
                    "unget_partial_character": 1,
                    "unget_previous_input_char": 1,
                    "unread_char": 2,
                    "unread_character_to_input": 1
                },
                "update_data_00103810": {
                    "update_data": 16
                }
            },
            "called": [
                "FUN_00103810"
            ],
            "calling": [
                "FUN_00102330",
                "FUN_0010259a"
            ],
            "code": "\n\n\nvoid process_input_data_001034d5(void)\n\n{\n  ulong current_char;\n  ulong next_char;\n  uint count;\n  ulong index;\n  char *output_buffer;\n  bool is_valid;\n  undefined8 filename;\n  undefined8 address;\n  \nread_next_character:\n  unget_part_char();\n  do {\n    current_char = (ulong)DAT_00108374;\n    if (DAT_00108374 != 0) {\n      current_char = get_next_character();\n      count = DAT_00108374;\n      if (current_char == 0xffffffffffffffff) goto end_processing;\n      if (0xff < current_char) goto read_next_character;\n      if (current_char == 9) {\nhandle_tab:\n        *output_buffer = (char)current_char;\n        if (count < 2) {\n          print_output();\n          return;\n        }\n      }\n      else {\n        if ((*(ushort *)(&character_table + current_char * 2) & 0x10) == 0) {\n          if (((DAT_00108360 == 'S') && (0x7f < (long)current_char)) ||\n             ((DAT_00108373 != '\\0' && ((*(ushort *)(&character_table + current_char * 2) & 0x40) != 0))))\n          goto handle_tab;\n          goto read_next_character;\n        }\n        *output_buffer = (char)current_char;\n        if (count < 2) {\n          current_char = 1;\n          goto handle_more_tabs;\n        }\n      }\n      current_char = get_next_character();\n      count = DAT_00108374;\n      if (current_char == 0xffffffffffffffff) goto end_processing;\n      if (0xff < current_char) goto read_next_character;\n      if (current_char == 9) {\nhandle_tab_2:\n        output_buffer[1] = (char)current_char;\n        if (count < 3) {\n          print_output();\n          return;\n        }\n      }\n      else {\n        if ((*(ushort *)(&character_table + current_char * 2) & 0x10) == 0) {\n          if (((DAT_00108360 == 'S') && (0x7f < (long)current_char)) ||\n             ((DAT_00108373 != '\\0' && ((*(ushort *)(&character_table + current_char * 2) & 0x40) != 0))))\n          goto handle_tab_2;\n          goto read_next_character;\n        }\n        output_buffer[1] = (char)current_char;\n        if (count < 3) {\n          current_char = 2;\n          goto handle_more_tabs;\n        }\n      }\n      current_char = get_next_character();\n      count = DAT_00108374;\n      if (current_char == 0xffffffffffffffff) {\nend_processing:\n        free_memory(output_buffer);\n        return;\n      }\n      if (0xff < current_char) goto read_next_character;\n      if (current_char == 9) {\nhandle_tab_3:\n        output_buffer[2] = (char)current_char;\n      }\n      else {\n        if ((*(ushort *)(&character_table + current_char * 2) & 0x10) == 0) {\n          if (((DAT_00108360 == 'S') && (0x7f < (long)current_char)) ||\n             ((DAT_00108373 != '\\0' && ((*(ushort *)(&character_table + current_char * 2) & 0x40) != 0))))\n          goto handle_tab_3;\n          goto read_next_character;\n        }\n        output_buffer[2] = (char)current_char;\n      }\n      if (count < 4) {\n        current_char = 3;\n      }\n      else {\n        index = 3;\n        do {\n          next_char = get_next_character();\n          if (next_char == 0xffffffffffffffff) goto end_processing;\n          if (0xff < next_char) goto read_next_character;\n          if (((next_char != 9) && ((*(ushort *)(&character_table + next_char * 2) & 0x10) == 0)) &&\n             ((DAT_00108360 != 'S' || ((long)next_char < 0x80)))) {\n            if (DAT_00108373 == '\\0') goto read_next_character;\n            if ((*(ushort *)(&character_table + next_char * 2) & 0x40) == 0) {\n              process_input_data_001034d5();\n              return;\n            }\n          }\n          count = (int)index + 1;\n          current_char = (ulong)count;\n          is_valid = count < DAT_00108374;\n          output_buffer[index] = (char)next_char;\n          index = current_char;\n        } while (is_valid);\n      }\n    }\nhandle_more_tabs:\n    if (DAT_00108371 != '\\0') {\n      print_formatted_output(\"%s: \",filename);\n    }\n    if (DAT_00108372 == '\\0') {\n      output_buffer[current_char] = '\\0';\n      write_string(output_buffer,standard_output);\n    }\n    else {\n      print_filename_and_address(address);\n      output_buffer[current_char] = '\\0';\n      write_string(output_buffer,standard_output);\n    }\n    while (current_char = get_next_character(), current_char != 0xffffffffffffffff) {\n      if (0xff < current_char) {\nLAB_0010348e:\n        unget_part_char();\n        break;\n      }\n      if (current_char == 9) {\nLAB_00102438:\n        write_char((int)current_char,standard_output);\n      }\n      else {\n        if ((*(ushort *)(&character_table + current_char * 2) & 0x10) == 0) {\n          if (((DAT_00108360 != 'S') || ((long)current_char < 0x80)) &&\n             ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + current_char * 2) & 0x40) == 0))))\n          goto LAB_0010348e;\n          goto LAB_00102438;\n        }\n        write_char((int)current_char,standard_output);\n      }\n    }\n    if (DAT_00108358 == (char *)0x0) {\n      write_char(10,standard_output);\n    }\n    else {\n      write_string(DAT_00108358,standard_output);\n    }\n  } while( true );\n}\n\n",
            "current_name": "process_input_data_001034d5",
            "entrypoint": "0x001034d5",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001034d5": "process_input_data_001034d5",
                "LAB_00102381": "handle_tab_3",
                "LAB_001023bb": "handle_tab_2",
                "LAB_001023f5": "handle_tab",
                "LAB_001034be": "end_processing",
                "_sch_istable": "character_table",
                "_stdout": "standard_output",
                "bVar5": "is_valid",
                "code_r0x001034d5": "read_next_character",
                "fputs": "write_string",
                "free": "free_memory",
                "get_char": "get_next_character",
                "in_stack_00000010": "filename",
                "in_stack_00000038": "address",
                "joined_r0x001034ef": "handle_more_tabs",
                "print_filename_and_address_part_0": "print_filename_and_address",
                "print_formatted_output_001034fa": "print_output",
                "print_formatted_output_00103510": "print_output",
                "printf": "print_formatted_output",
                "putc": "write_char",
                "uVar1": "current_char",
                "uVar2": "next_char",
                "uVar3": "count",
                "uVar4": "index",
                "unaff_R14": "output_buffer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001034fa": {
            "additional_data": {
                "DAT_00108358": {
                    "end_of_line_string": 1,
                    "filename": 1
                },
                "DAT_00108360": {
                    "character_type": 1,
                    "encoding_type": 1
                },
                "DAT_00108371": {
                    "is_not_null": 1,
                    "is_prompt_enabled": 1
                },
                "DAT_00108372": {
                    "is_address_enabled": 1,
                    "is_not_null_again": 1
                },
                "DAT_00108373": {
                    "is_not_null_yet_again": 1,
                    "is_special_enabled": 1
                },
                "DAT_00108374": {
                    "file_length": 1,
                    "max_characters": 1
                },
                "FUN_001034fa": {
                    "print_and_format_text": 1,
                    "print_and_modify_string": 1,
                    "print_and_parse_file": 1,
                    "print_and_process_input": 1,
                    "print_and_read_input": 2,
                    "print_and_scan": 1,
                    "print_character_sequence": 1,
                    "print_characters": 1,
                    "print_chars": 1,
                    "print_file_content": 1,
                    "print_file_contents": 1,
                    "print_formatted_data": 1,
                    "print_formatted_output": 5,
                    "print_formatted_string": 3,
                    "print_formatted_text": 3,
                    "print_function": 2,
                    "print_information": 1,
                    "print_output": 1,
                    "print_string": 1,
                    "process_text": 1
                },
                "_sch_istable": {
                    "character_table": 8,
                    "is_table": 1
                },
                "_stdout": {
                    "output_stream": 1,
                    "standard_output": 7,
                    "stdout": 2
                },
                "bVar5": {
                    "check": 1,
                    "condition": 1,
                    "end_of_file": 1,
                    "flag": 8,
                    "is_char_control_char": 1,
                    "is_character_valid": 1,
                    "is_end": 2,
                    "is_end_of_file": 5,
                    "is_invalid_char": 1,
                    "is_less_or_equal": 1,
                    "is_less_than": 1,
                    "is_table": 1,
                    "is_true": 2,
                    "is_valid": 1,
                    "is_valid_char": 3
                },
                "fclose": {
                    "close_file": 1
                },
                "fputc": {
                    "put_character": 1
                },
                "fputs": {
                    "print_string": 1,
                    "put_string": 1,
                    "put_string_to_output": 1,
                    "write_string": 1
                },
                "free": {
                    "deallocate_memory": 2,
                    "free_memory": 2
                },
                "get_char": {
                    "get_character": 3,
                    "get_next_char": 1,
                    "get_next_character": 1
                },
                "in_stack_00000010": {
                    "custom_message": 1,
                    "format": 1,
                    "format_string": 3,
                    "header": 1,
                    "header_string": 1,
                    "message": 9,
                    "prefix": 4,
                    "prompt": 6,
                    "prompt_message": 2,
                    "prompt_string": 3
                },
                "in_stack_00000038": {
                    "address": 14,
                    "address_part": 1,
                    "chunk": 1,
                    "fclose": 1,
                    "file_address": 1,
                    "file_address_again": 1,
                    "filename": 2,
                    "filename_and_address": 1,
                    "filename_string": 1,
                    "header_filename": 1,
                    "input_read_limit": 1,
                    "other_data": 1,
                    "reserved_value": 1,
                    "stack_variable": 1,
                    "struct_address": 1,
                    "suffix": 2
                },
                "print_filename_and_address_part_0": {
                    "print_filename_and_address": 4,
                    "print_filename_and_address_part": 2
                },
                "printf": {
                    "print_format": 1,
                    "print_formatted": 2,
                    "print_formatted_string": 1
                },
                "putc": {
                    "print_character": 1,
                    "put_character": 2,
                    "put_character_to_output": 1
                },
                "putchar": {
                    "put_character": 1
                },
                "uVar1": {
                    "c": 1,
                    "ch": 1,
                    "char": 1,
                    "char1": 2,
                    "char_code": 2,
                    "char_value": 10,
                    "character": 5,
                    "current_char": 4,
                    "current_character": 1,
                    "input_char": 3
                },
                "uVar2": {
                    "buffer_size": 1,
                    "char2": 2,
                    "char_count": 4,
                    "chunk_size": 1,
                    "count": 3,
                    "counter": 3,
                    "header_length": 1,
                    "index": 2,
                    "input_pos": 1,
                    "input_size": 1,
                    "length": 2,
                    "loop_counter": 1,
                    "num_chars": 2,
                    "num_chars_read": 1,
                    "remaining_chars": 3,
                    "remaining_count": 1,
                    "struct_size": 1
                },
                "uVar3": {
                    "buffer_index": 1,
                    "char3": 1,
                    "char_counter": 1,
                    "counter": 4,
                    "index": 16,
                    "iteration_count": 1,
                    "loop_counter": 2,
                    "output_index": 2,
                    "output_length": 1,
                    "temp_pos": 1
                },
                "uVar4": {
                    "buffer_size": 1,
                    "count": 3,
                    "counter": 6,
                    "current_index": 1,
                    "index": 8,
                    "index2": 5,
                    "index_inner": 1,
                    "input_index": 1,
                    "iterator": 1,
                    "length": 1,
                    "output_index": 1,
                    "output_pos": 1
                },
                "unaff_R14": {
                    "buffer": 2,
                    "file_contents": 1,
                    "formatted_string": 1,
                    "modified_string": 1,
                    "output": 1,
                    "output_buffer": 12,
                    "output_string": 12,
                    "string_buffer": 1
                },
                "unaff_R15": {
                    "address": 1,
                    "file_address": 1,
                    "file_name_and_address": 1,
                    "filename": 16,
                    "filename_address": 7,
                    "filename_and_address": 5
                },
                "unget_part_char": {
                    "undo_get_character": 1,
                    "unget_char": 1,
                    "unget_character": 1,
                    "unget_partial_character": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0010259a"
            ],
            "code": "\n\n\nvoid print_formatted_output_001034fa(void)\n\n{\n  ulong char_value;\n  uint char_count;\n  ulong index;\n  ulong index;\n  char *output_string;\n  undefined8 filename;\n  bool flag;\n  undefined8 message;\n  undefined8 address;\n  \ncode_r0x001034fa:\n  index = 1;\njoined_r0x0010341b:\n  do {\n    if (DAT_00108371 != '\\0') {\n      print_formatted(\"%s: \",message);\n    }\n    if (DAT_00108372 == '\\0') {\n      output_string[index] = '\\0';\n      print_string(output_string,standard_output);\n    }\n    else {\n      print_filename_and_address(filename);\n      output_string[index] = '\\0';\n      print_string(output_string,standard_output);\n    }\n    while (index = get_character(), index != 0xffffffffffffffff) {\n      if (0xff < index) {\nLAB_0010348e:\n        undo_get_character();\n        break;\n      }\n      if (index == 9) {\nLAB_00102438:\n        put_character((int)index,standard_output);\n      }\n      else {\n        if ((*(ushort *)(&character_table + index * 2) & 0x10) == 0) {\n          if (((DAT_00108360 != 'S') || ((long)index < 0x80)) &&\n             ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + index * 2) & 0x40) == 0))))\n          goto LAB_0010348e;\n          goto LAB_00102438;\n        }\n        put_character((int)index,standard_output);\n      }\n    }\n    if (DAT_00108358 == (char *)0x0) {\n      put_character(10,standard_output);\n    }\n    else {\n      print_string(DAT_00108358,standard_output);\n    }\n    while (index = (ulong)DAT_00108374, filename = address, DAT_00108374 != 0) {\n      index = get_character();\n      char_count = DAT_00108374;\n      if (index == 0xffffffffffffffff) goto LAB_001034be;\n      if (index < 0x100) {\n        if (index == 9) {\nLAB_001023f5:\n          *output_string = (char)index;\n          if (char_count < 2) {\n            print_formatted_output_001034fa();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&character_table + index * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)index < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + index * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto LAB_001023f5;\n          }\n          *output_string = (char)index;\n          if (char_count < 2) goto code_r0x001034fa;\n        }\n        index = get_character();\n        char_count = DAT_00108374;\n        if (index == 0xffffffffffffffff) goto LAB_001034be;\n        if (0xff < index) goto code_r0x001034d5;\n        if (index == 9) {\nLAB_001023bb:\n          output_string[1] = (char)index;\n          if (char_count < 3) {\n            print_formatted_output_00103510();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&character_table + index * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)index < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + index * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto LAB_001023bb;\n          }\n          output_string[1] = (char)index;\n          if (char_count < 3) {\n            index = 2;\n            break;\n          }\n        }\n        index = get_character();\n        char_count = DAT_00108374;\n        if (index == 0xffffffffffffffff) {\nLAB_001034be:\n          free_memory(output_string);\n          return;\n        }\n        if (0xff < index) goto code_r0x001034d5;\n        if (index == 9) {\nLAB_00102381:\n          output_string[2] = (char)index;\n        }\n        else {\n          if ((*(ushort *)(&character_table + index * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)index < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + index * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto LAB_00102381;\n          }\n          output_string[2] = (char)index;\n        }\n        if (3 < char_count) {\n          index = 3;\n          do {\n            char_value = get_character();\n            if (char_value == 0xffffffffffffffff) goto LAB_001034be;\n            if (0xff < char_value) goto code_r0x001034d5;\n            if (((char_value != 9) && ((*(ushort *)(&character_table + char_value * 2) & 0x10) == 0)) &&\n               ((DAT_00108360 != 'S' || ((long)char_value < 0x80)))) {\n              if (DAT_00108373 == '\\0') goto code_r0x001034d5;\n              if ((*(ushort *)(&character_table + char_value * 2) & 0x40) == 0) {\n                process_input_data_001034d5();\n                return;\n              }\n            }\n            char_count = (int)index + 1;\n            index = (ulong)char_count;\n            flag = DAT_00108374 <= char_count;\n            output_string[index] = (char)char_value;\n            index = index;\n            if (flag) goto joined_r0x0010341b;\n          } while( true );\n        }\n        index = 3;\n        break;\n      }\ncode_r0x001034d5:\n      undo_get_character();\n    }\n  } while( true );\n}\n\n",
            "current_name": "print_formatted_output_001034fa",
            "entrypoint": "0x001034fa",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001034fa": "print_formatted_output_001034fa",
                "_sch_istable": "character_table",
                "_stdout": "standard_output",
                "bVar5": "flag",
                "fputs": "print_string",
                "free": "free_memory",
                "get_char": "get_character",
                "in_stack_00000010": "message",
                "in_stack_00000038": "address",
                "print_filename_and_address_part_0": "print_filename_and_address",
                "printf": "print_formatted",
                "putc": "put_character",
                "uVar1": "char_value",
                "uVar2": "char_count",
                "uVar3": "index",
                "uVar4": "index",
                "unaff_R14": "output_string",
                "unaff_R15": "filename",
                "unget_part_char": "undo_get_character"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103510": {
            "additional_data": {
                "DAT_00108358": {
                    "end_of_line": 1,
                    "endline_option": 1
                },
                "DAT_00108360": {
                    "ascii_option": 1,
                    "special_character_type": 1
                },
                "DAT_00108371": {
                    "print_prompt": 1,
                    "should_print_prompt": 1
                },
                "DAT_00108372": {
                    "print_filename_and_address": 1,
                    "should_print_filename": 1
                },
                "DAT_00108373": {
                    "should_check_special_characters": 1,
                    "unicode_option": 1
                },
                "DAT_00108374": {
                    "buffer_length": 1,
                    "max_characters": 1
                },
                "FUN_00103510": {
                    "print_and_process_data": 1,
                    "print_and_process_input": 1,
                    "print_and_read_data": 1,
                    "print_debug_information": 1,
                    "print_file_contents": 3,
                    "print_file_function": 1,
                    "print_filename_and_chars": 1,
                    "print_formatted_data": 2,
                    "print_formatted_input": 1,
                    "print_formatted_output": 5,
                    "print_formatted_string": 1,
                    "print_formatted_strings": 1,
                    "print_formatted_text": 3,
                    "print_function": 1,
                    "print_string": 2,
                    "print_string_with_conditions": 2,
                    "print_strings": 2,
                    "print_text": 1,
                    "process_input": 1
                },
                "LAB_0010348e": {
                    "label_unget_char": 1
                },
                "_sch_istable": {
                    "char_table": 1,
                    "character_table": 2
                },
                "_stdout": {
                    "output_stream": 3,
                    "standard_output": 4,
                    "stdout": 1
                },
                "bVar5": {
                    "check": 1,
                    "condition": 2,
                    "condition_flag": 1,
                    "flag": 3,
                    "is_char_valid": 2,
                    "is_character_valid": 1,
                    "is_condition_met": 1,
                    "is_end": 2,
                    "is_end_of_file": 2,
                    "is_end_of_input": 1,
                    "is_exit_loop": 1,
                    "is_flag_set": 1,
                    "is_invalid": 1,
                    "is_less": 1,
                    "is_newline": 1,
                    "is_tab_printed": 1,
                    "is_table_character": 1,
                    "is_true": 2,
                    "is_valid": 1,
                    "is_valid_char": 1,
                    "pass_condition": 1,
                    "should_continue": 1,
                    "should_unget_char": 1
                },
                "fputs": {
                    "write_string": 1
                },
                "free": {
                    "free_memory": 1
                },
                "get_char": {
                    "get_character": 2
                },
                "in_stack_00000010": {
                    "debug_message": 1,
                    "extra_message": 2,
                    "file_name": 1,
                    "filename": 1,
                    "format_string": 1,
                    "message": 10,
                    "prefix": 1,
                    "prompt": 12,
                    "prompt_msg": 1,
                    "prompt_string": 1
                },
                "in_stack_00000038": {
                    "address": 15,
                    "address_and_file_name": 1,
                    "address_part": 1,
                    "extra_data": 1,
                    "file_address": 2,
                    "file_name": 2,
                    "filename": 3,
                    "filename_and_address": 1,
                    "filename_prompt": 1,
                    "next_address": 2,
                    "other_filename_address": 1,
                    "other_message": 1
                },
                "print_filename_and_address_part_0": {
                    "print_filename_and_address": 1
                },
                "printf": {
                    "print_formatted": 1
                },
                "putc": {
                    "put_character": 2
                },
                "uVar1": {
                    "ch": 1,
                    "char": 2,
                    "char1": 6,
                    "char_code": 2,
                    "char_read": 1,
                    "char_value": 4,
                    "character": 9,
                    "current_char": 3,
                    "input_char": 2
                },
                "uVar2": {
                    "buffer_index": 1,
                    "char2": 1,
                    "char_count": 5,
                    "char_index": 1,
                    "count": 8,
                    "counter": 3,
                    "data_length": 1,
                    "index": 2,
                    "length": 1,
                    "remaining_characters": 1,
                    "remaining_chars": 6
                },
                "uVar3": {
                    "char2": 1,
                    "char3": 1,
                    "char_array_index": 1,
                    "char_counter": 1,
                    "char_index": 1,
                    "count": 2,
                    "counter": 1,
                    "i": 1,
                    "index": 19,
                    "loop_index": 1,
                    "position": 1
                },
                "uVar4": {
                    "char4": 1,
                    "count": 4,
                    "counter": 1,
                    "flag": 1,
                    "index": 4,
                    "index2": 1,
                    "iteration": 1,
                    "iterator": 1,
                    "length": 5,
                    "loop_count": 2,
                    "loop_counter": 2,
                    "loop_var": 1,
                    "num_chars": 1,
                    "pos": 1,
                    "position": 1,
                    "size": 1,
                    "state": 2
                },
                "unaff_R14": {
                    "buffer": 2,
                    "char_array": 1,
                    "char_buffer": 1,
                    "file_contents": 1,
                    "formatted_string": 3,
                    "formatted_text": 2,
                    "output": 1,
                    "output_buffer": 12,
                    "output_string": 7,
                    "text_buffer": 1
                },
                "unaff_R15": {
                    "address": 2,
                    "file_address": 2,
                    "filename": 15,
                    "filename_address": 9,
                    "filename_and_address": 2,
                    "input_buffer": 1
                },
                "unget_part_char": {
                    "unget_character": 1,
                    "unget_partial_character": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0010259a"
            ],
            "code": "\n\n\nvoid print_formatted_output_00103510(void)\n\n{\n  ulong character;\n  uint count;\n  ulong index;\n  ulong length;\n  char *output_buffer;\n  undefined8 filename;\n  bool flag;\n  undefined8 prompt;\n  undefined8 address;\n  \ncode_r0x00103510:\n  length = 2;\njoined_r0x0010341b:\n  do {\n    if (DAT_00108371 != '\\0') {\n      print_formatted(\"%s: \",prompt);\n    }\n    if (DAT_00108372 == '\\0') {\n      output_buffer[length] = '\\0';\n      write_string(output_buffer,standard_output);\n    }\n    else {\n      print_filename_and_address(filename);\n      output_buffer[length] = '\\0';\n      write_string(output_buffer,standard_output);\n    }\n    while (length = get_character(), length != 0xffffffffffffffff) {\n      if (0xff < length) {\nlabel_unget_char:\n        unget_character();\n        break;\n      }\n      if (length == 9) {\nLAB_00102438:\n        put_character((int)length,standard_output);\n      }\n      else {\n        if ((*(ushort *)(&character_table + length * 2) & 0x10) == 0) {\n          if (((DAT_00108360 != 'S') || ((long)length < 0x80)) &&\n             ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + length * 2) & 0x40) == 0))))\n          goto label_unget_char;\n          goto LAB_00102438;\n        }\n        put_character((int)length,standard_output);\n      }\n    }\n    if (DAT_00108358 == (char *)0x0) {\n      put_character(10,standard_output);\n    }\n    else {\n      write_string(DAT_00108358,standard_output);\n    }\n    while (length = (ulong)DAT_00108374, filename = address, DAT_00108374 != 0) {\n      length = get_character();\n      count = DAT_00108374;\n      if (length == 0xffffffffffffffff) goto LAB_001034be;\n      if (length < 0x100) {\n        if (length == 9) {\nLAB_001023f5:\n          *output_buffer = (char)length;\n          if (count < 2) {\n            FUN_001034fa();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&character_table + length * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)length < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + length * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto LAB_001023f5;\n          }\n          *output_buffer = (char)length;\n          if (count < 2) {\n            length = 1;\n            break;\n          }\n        }\n        length = get_character();\n        count = DAT_00108374;\n        if (length == 0xffffffffffffffff) goto LAB_001034be;\n        if (0xff < length) goto code_r0x001034d5;\n        if (length == 9) {\nLAB_001023bb:\n          output_buffer[1] = (char)length;\n          if (count < 3) {\n            print_formatted_output_00103510();\n            return;\n          }\n        }\n        else {\n          if ((*(ushort *)(&character_table + length * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)length < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + length * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto LAB_001023bb;\n          }\n          output_buffer[1] = (char)length;\n          if (count < 3) goto code_r0x00103510;\n        }\n        length = get_character();\n        count = DAT_00108374;\n        if (length == 0xffffffffffffffff) {\nLAB_001034be:\n          free_memory(output_buffer);\n          return;\n        }\n        if (0xff < length) goto code_r0x001034d5;\n        if (length == 9) {\nLAB_00102381:\n          output_buffer[2] = (char)length;\n        }\n        else {\n          if ((*(ushort *)(&character_table + length * 2) & 0x10) == 0) {\n            if (((DAT_00108360 != 'S') || ((long)length < 0x80)) &&\n               ((DAT_00108373 == '\\0' || ((*(ushort *)(&character_table + length * 2) & 0x40) == 0))))\n            goto code_r0x001034d5;\n            goto LAB_00102381;\n          }\n          output_buffer[2] = (char)length;\n        }\n        if (3 < count) {\n          index = 3;\n          do {\n            character = get_character();\n            if (character == 0xffffffffffffffff) goto LAB_001034be;\n            if (0xff < character) goto code_r0x001034d5;\n            if (((character != 9) && ((*(ushort *)(&character_table + character * 2) & 0x10) == 0)) &&\n               ((DAT_00108360 != 'S' || ((long)character < 0x80)))) {\n              if (DAT_00108373 == '\\0') goto code_r0x001034d5;\n              if ((*(ushort *)(&character_table + character * 2) & 0x40) == 0) {\n                process_input_data_001034d5();\n                return;\n              }\n            }\n            count = (int)index + 1;\n            length = (ulong)count;\n            flag = DAT_00108374 <= count;\n            output_buffer[index] = (char)character;\n            index = length;\n            if (flag) goto joined_r0x0010341b;\n          } while( true );\n        }\n        length = 3;\n        break;\n      }\ncode_r0x001034d5:\n      unget_character();\n    }\n  } while( true );\n}\n\n",
            "current_name": "print_formatted_output_00103510",
            "entrypoint": "0x00103510",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103510": "print_formatted_output_00103510",
                "LAB_0010348e": "label_unget_char",
                "_sch_istable": "character_table",
                "_stdout": "standard_output",
                "bVar5": "flag",
                "fputs": "write_string",
                "free": "free_memory",
                "get_char": "get_character",
                "in_stack_00000010": "prompt",
                "in_stack_00000038": "address",
                "print_filename_and_address_part_0": "print_filename_and_address",
                "printf": "print_formatted",
                "putc": "put_character",
                "uVar1": "character",
                "uVar2": "count",
                "uVar3": "index",
                "uVar4": "length",
                "unaff_R14": "output_buffer",
                "unaff_R15": "filename",
                "unget_part_char": "unget_character"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103520": {
            "additional_data": {
                "FUN_00103520": {
                    "decode_and_read_next": 1,
                    "decode_data": 4,
                    "extract_bytes_from_binary": 1,
                    "extract_data": 1,
                    "parse_and_extract_data": 1,
                    "parse_data": 1,
                    "read_and_convert": 1,
                    "read_and_convert_bytes": 2,
                    "read_and_convert_data": 1,
                    "read_and_convert_to_ulong": 1,
                    "read_and_convert_value": 1,
                    "read_buffer": 1,
                    "read_bytes": 2,
                    "read_data": 5,
                    "read_file": 1,
                    "read_from_stream": 1,
                    "read_long_from_file": 1,
                    "read_number": 1,
                    "read_unsigned_long": 1,
                    "read_unsigned_value": 1,
                    "read_value_from_file": 1,
                    "read_variable_from_binary": 1
                },
                "_IO_FILE": {
                    "file": 2
                },
                "__uflow": {
                    "read_char": 1,
                    "read_next_byte": 1,
                    "uflow": 1
                },
                "bVar1": {
                    "byte_val": 6,
                    "byte_value": 19,
                    "byte_var": 1,
                    "current_byte": 1
                },
                "get_char_cold": {
                    "get_char": 1,
                    "get_character": 1,
                    "get_cold_char": 1
                },
                "iVar6": {
                    "count": 1,
                    "counter": 3,
                    "index": 3,
                    "iteration": 1,
                    "iteration_count": 1,
                    "iteration_counter": 1,
                    "loop_count": 1,
                    "loop_counter": 10,
                    "loop_index": 1,
                    "loop_variable": 1,
                    "num_remaining": 1,
                    "remaining_count": 1,
                    "temp_count": 1,
                    "temp_int": 1
                },
                "iVar7": {
                    "counter_limit": 1,
                    "decode_loop_count": 1,
                    "desired_iterations": 1,
                    "expected_bytes": 1,
                    "expected_count": 2,
                    "expected_iterations": 1,
                    "expected_length": 1,
                    "length": 1,
                    "loop_count": 1,
                    "loop_limit": 3,
                    "max_bytes": 1,
                    "max_iterations": 1,
                    "num_bytes": 1,
                    "required_byte_count": 1,
                    "total_bytes": 3,
                    "total_count": 3,
                    "total_iterations": 3,
                    "total_loops": 1
                },
                "param_1": {
                    "file": 21,
                    "file_buffer": 1,
                    "file_ptr": 5,
                    "file_stream": 1,
                    "input_file": 1,
                    "stream": 2
                },
                "param_2": {
                    "byte_count": 3,
                    "count": 8,
                    "data_index": 1,
                    "data_length": 1,
                    "num_bytes": 1,
                    "num_bytes_read": 1,
                    "num_ptr": 1,
                    "num_read": 2,
                    "out_count": 1,
                    "read_count": 3,
                    "result": 1,
                    "result_ptr": 1,
                    "total_bytes": 1,
                    "total_bytes_read": 3,
                    "total_reads": 1,
                    "value": 2
                },
                "param_3": {
                    "byte_count": 1,
                    "bytes_to_read": 1,
                    "count": 3,
                    "count_ptr": 2,
                    "input_count": 1,
                    "num_bytes": 1,
                    "num_remaining": 1,
                    "remaining": 8,
                    "remaining_bytes": 8,
                    "remaining_count": 2,
                    "remaining_length": 1,
                    "remaining_reads": 1,
                    "size": 1
                },
                "param_4": {
                    "buffer": 20,
                    "buffer_ptr": 3,
                    "byte_ptr_ptr": 1,
                    "current_position": 1,
                    "data": 2,
                    "data_buffer": 2,
                    "data_ptr": 1,
                    "input": 1
                },
                "pbVar2": {
                    "buffer_ptr": 2,
                    "byte_pointer": 3,
                    "byte_ptr": 13,
                    "current_byte": 4,
                    "current_byte_ptr": 1,
                    "current_pointer": 1,
                    "iter_ptr": 1,
                    "ptr": 1,
                    "ptr_byte": 1
                },
                "uVar3": {
                    "byte_read": 1,
                    "flow_result": 3,
                    "flow_value": 1,
                    "read_result": 6,
                    "result": 8,
                    "result_value": 1,
                    "return_value": 1,
                    "temp": 1,
                    "uflow_res": 1,
                    "uflow_result": 3,
                    "value": 1
                },
                "uVar4": {
                    "byte_result": 2,
                    "current_byte": 1,
                    "end_value": 1,
                    "next_byte": 1,
                    "read_byte": 1,
                    "result": 2,
                    "temp": 1,
                    "temp1": 1,
                    "temp_result": 1,
                    "temp_ulong": 2,
                    "temp_val": 2,
                    "temp_value": 10,
                    "temp_var": 1,
                    "temp_variable_1": 1
                },
                "uVar5": {
                    "accumulated_value": 1,
                    "combined_val": 1,
                    "converted_value": 4,
                    "decoded_val": 2,
                    "decoded_value": 2,
                    "final_result": 1,
                    "final_value": 1,
                    "output": 1,
                    "parsed_value": 1,
                    "read_value": 1,
                    "result": 11,
                    "temp2": 1
                }
            },
            "called": [
                "FUN_00102030",
                "FUN_00102771"
            ],
            "calling": [
                "FUN_0010259a"
            ],
            "code": "\nulong read_and_convert_data_00103520(file *file,long *count,int *remaining_bytes,byte **buffer)\n\n{\n  byte byte_value;\n  byte *byte_ptr;\n  uint result;\n  ulong temp_value;\n  ulong result;\n  int loop_counter;\n  int total_iterations;\n  \n  total_iterations = DAT_0010834c;\n  if (DAT_0010834c < 1) {\n    result = 0;\n    if (DAT_00108360 == 'L') {\n      result = get_char();\n      return result;\n    }\n    goto LAB_0010361f;\n  }\n  if (file == (file *)0x0) {\n    result = 0;\n    loop_counter = 0;\n    do {\n      if (*remaining_bytes == 0) {\n        return 0xffffffffffffffff;\n      }\n      loop_counter = loop_counter + 1;\n      *remaining_bytes = *remaining_bytes + -1;\n      byte_ptr = *buffer;\n      *buffer = byte_ptr + 1;\n      byte_value = *byte_ptr;\n      *count = *count + 1;\n      result = result << 8 | (ulong)byte_value;\n    } while (loop_counter != total_iterations);\n  }\n  else if (*remaining_bytes == 0) {\n    byte_ptr = (byte *)file->_IO_read_ptr;\n    if (file->_IO_read_end <= byte_ptr) {\n      result = read_next_byte(file);\n      result = (ulong)(result & 0xff);\n      if (result == 0xffffffff) {\n        return 0xffffffffffffffff;\n      }\n      goto LAB_001036aa;\n    }\n    file->_IO_read_ptr = (char *)(byte_ptr + 1);\n    result = (ulong)*byte_ptr;\n    *count = *count + 1;\n    loop_counter = 0;\n    if (total_iterations == 1) goto LAB_00103610;\nLAB_00103574:\n    byte_ptr = (byte *)file->_IO_read_ptr;\n    if (byte_ptr < file->_IO_read_end) {\n      file->_IO_read_ptr = (char *)(byte_ptr + 1);\n      byte_value = *byte_ptr;\n      *count = *count + 1;\n      result = result << 8 | (ulong)byte_value;\n      if (DAT_0010834c < 3) goto LAB_00103610;\nLAB_001035a1:\n      byte_ptr = (byte *)file->_IO_read_ptr;\n      if (byte_ptr < file->_IO_read_end) {\n        file->_IO_read_ptr = (char *)(byte_ptr + 1);\n        byte_value = *byte_ptr;\n        *count = *count + 1;\n        result = result << 8 | (ulong)byte_value;\n        if (DAT_0010834c < 4) goto LAB_00103610;\n      }\n      else {\n        result = read_next_byte(file);\n        if (result == 0xffffffff) {\n          return 0xffffffffffffffff;\n        }\n        temp_value = (ulong)(result & 0xff);\nLAB_00103717:\n        *count = *count + 1;\n        result = result << 8 | temp_value;\n        if (DAT_0010834c < 4) goto LAB_00103610;\n        loop_counter = *remaining_bytes;\n      }\n      total_iterations = 3;\n      while( true ) {\n        if (loop_counter == 0) {\n          while (byte_ptr = (byte *)file->_IO_read_ptr, byte_ptr < file->_IO_read_end) {\n            total_iterations = total_iterations + 1;\n            file->_IO_read_ptr = (char *)(byte_ptr + 1);\n            byte_value = *byte_ptr;\n            *count = *count + 1;\n            result = result << 8 | (ulong)byte_value;\n            if (DAT_0010834c <= total_iterations) goto LAB_00103610;\n          }\n          result = read_next_byte(file);\n          if (result == 0xffffffff) {\n            return 0xffffffffffffffff;\n          }\n          temp_value = (ulong)(result & 0xff);\n        }\n        else {\n          byte_ptr = *buffer;\n          *remaining_bytes = loop_counter + -1;\n          *buffer = byte_ptr + 1;\n          temp_value = (ulong)*byte_ptr;\n        }\n        *count = *count + 1;\n        total_iterations = total_iterations + 1;\n        result = result << 8 | temp_value;\n        if (DAT_0010834c <= total_iterations) break;\n        loop_counter = *remaining_bytes;\n      }\n    }\n    else {\n      result = read_next_byte(file);\n      if (result == 0xffffffff) {\n        return 0xffffffffffffffff;\n      }\n      temp_value = (ulong)(result & 0xff);\nLAB_001036dd:\n      *count = *count + 1;\n      result = result << 8 | temp_value;\n      if (2 < DAT_0010834c) {\n        loop_counter = *remaining_bytes;\n        if (loop_counter == 0) goto LAB_001035a1;\n        byte_ptr = *buffer;\n        *remaining_bytes = loop_counter + -1;\n        *buffer = byte_ptr + 1;\n        temp_value = (ulong)*byte_ptr;\n        goto LAB_00103717;\n      }\n    }\n  }\n  else {\n    byte_ptr = *buffer;\n    *remaining_bytes = *remaining_bytes + -1;\n    *buffer = byte_ptr + 1;\n    result = (ulong)*byte_ptr;\nLAB_001036aa:\n    *count = *count + 1;\n    if (1 < DAT_0010834c) {\n      loop_counter = *remaining_bytes;\n      if (loop_counter == 0) goto LAB_00103574;\n      byte_ptr = *buffer;\n      *remaining_bytes = loop_counter + -1;\n      *buffer = byte_ptr + 1;\n      temp_value = (ulong)*byte_ptr;\n      goto LAB_001036dd;\n    }\n  }\nLAB_00103610:\n  if (DAT_00108360 == 'L') {\n    result = get_char();\n    return result;\n  }\nLAB_0010361f:\n  if (DAT_00108360 == 'l') {\n    result = result >> 8 & 0xff | (result & 0xff) << 8;\n  }\n  return result;\n}\n\n",
            "current_name": "read_and_convert_data_00103520",
            "entrypoint": "0x00103520",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103520": "read_and_convert_data_00103520",
                "_IO_FILE": "file",
                "__uflow": "read_next_byte",
                "bVar1": "byte_value",
                "get_char_cold": "get_char",
                "iVar6": "loop_counter",
                "iVar7": "total_iterations",
                "param_1": "file",
                "param_2": "count",
                "param_3": "remaining_bytes",
                "param_4": "buffer",
                "pbVar2": "byte_ptr",
                "uVar3": "result",
                "uVar4": "temp_value",
                "uVar5": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103810": {
            "additional_data": {
                "DAT_00108348": {
                    "data": 2,
                    "data_value": 1,
                    "output": 1,
                    "result": 1,
                    "value_data": 1
                },
                "DAT_0010834c": {
                    "constant": 1,
                    "count": 1,
                    "data_size": 1,
                    "size": 2,
                    "total_calculation_modes": 1
                },
                "DAT_00108360": {
                    "character": 1,
                    "condition": 1,
                    "flag": 1,
                    "mode_identifier": 1,
                    "modifier": 1,
                    "option": 1
                },
                "FUN_00103810": {
                    "adjust_parameters": 1,
                    "calculate_new_values": 1,
                    "calculate_offset": 1,
                    "calculate_offset_and_update": 1,
                    "calculate_offset_and_update_values": 1,
                    "process_data": 2,
                    "update_data": 11,
                    "update_param_and_offset": 1,
                    "update_param_and_result": 1,
                    "update_param_and_variable": 1,
                    "update_parameters": 4,
                    "update_parameters_and_offset": 1,
                    "update_params": 1,
                    "update_values": 3
                },
                "FoulsCount": {
                    "count_fouls": 1
                },
                "GameScore": {
                    "game_score": 1
                },
                "Letter": {
                    "letter": 1
                },
                "LetterPointer": {
                    "letter_ptr": 1
                },
                "SumAndOffsetModifier": {
                    "modifier": 1
                },
                "SumAndOffsetNum1": {
                    "num1": 1
                },
                "SumAndOffsetNum2": {
                    "num2": 1
                },
                "SumAndOffsetResult": {
                    "result_sum_offset": 1
                },
                "_DAT_00108349": {
                    "data2": 2,
                    "param_2_shifted": 1,
                    "shifted_value": 1,
                    "swapped_value": 1,
                    "temp": 1
                },
                "calculate_sum_and_add_offset_001027e2": {
                    "calculate_sum_and_add_offset": 14,
                    "calculate_sum_and_modify_result": 1,
                    "calculate_sum_and_offset": 2
                },
                "iVar1": {
                    "calculation_flag": 1,
                    "condition": 1,
                    "counter_value": 1,
                    "current_offset": 1,
                    "flag": 2,
                    "flag_value": 1,
                    "initialized_value": 1,
                    "modified_num1": 1,
                    "num": 1,
                    "num1": 4,
                    "num2": 1,
                    "offset": 3,
                    "offset_value": 2,
                    "param3_value": 1,
                    "status_value": 1,
                    "sum_value": 1,
                    "temp_value1": 1,
                    "value": 2,
                    "value1": 3,
                    "var_one": 1
                },
                "iVar3": {
                    "count": 1,
                    "counter": 1,
                    "flag_minus_one": 1,
                    "len": 1,
                    "modified_calculation_mode": 1,
                    "modified_num2": 1,
                    "modified_size": 1,
                    "modified_value": 1,
                    "new_offset": 1,
                    "num1": 1,
                    "num2": 4,
                    "num3": 1,
                    "num_values_minus_one": 1,
                    "prev_offset": 1,
                    "previous_counter_value": 1,
                    "previous_offset": 1,
                    "status_minus_one": 1,
                    "temp": 1,
                    "temp_value3": 1,
                    "updated_offset": 1,
                    "updated_value": 2,
                    "value2": 2,
                    "value3": 1,
                    "var_two": 1
                },
                "initialize_data_0010282b": {
                    "initialize_data": 17
                },
                "lVar2": {
                    "const_value": 1,
                    "constant": 2,
                    "constant_value": 2,
                    "count": 1,
                    "current_value": 1,
                    "data_length": 2,
                    "data_size_long": 1,
                    "last_index": 1,
                    "last_value": 1,
                    "mod_value": 1,
                    "modifier": 5,
                    "modifier_count": 1,
                    "num2": 1,
                    "offset": 2,
                    "temp_value2": 1,
                    "value2": 1,
                    "value3": 2,
                    "var_three": 1
                },
                "param_1": {
                    "data": 2,
                    "data_input": 1,
                    "input_code": 1,
                    "input_value": 3,
                    "modifier": 9,
                    "new_value": 1,
                    "offset": 1,
                    "param": 2,
                    "param_one": 1,
                    "param_value": 2,
                    "value": 6
                },
                "param_2": {
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "modified_value1": 1,
                    "num1": 3,
                    "offset_ptr": 2,
                    "offset_value": 1,
                    "p_param2": 1,
                    "param2": 2,
                    "param_pointer": 1,
                    "param_two": 1,
                    "pointer1": 5,
                    "pointer_to_value": 1,
                    "pointer_to_y": 1,
                    "ptr1": 2,
                    "ptr_current_value": 1,
                    "sum": 4,
                    "sum_ptr": 1
                },
                "param_3": {
                    "calculation_mode": 1,
                    "counter": 1,
                    "flag": 1,
                    "modified_value2": 1,
                    "num1": 1,
                    "num2": 3,
                    "num_sum": 1,
                    "num_values": 1,
                    "offset": 2,
                    "offset_pointer": 1,
                    "offset_ptr": 1,
                    "p_param3": 1,
                    "param3": 2,
                    "param_three": 1,
                    "pointer2": 5,
                    "ptr2": 2,
                    "ptr_flag": 1,
                    "status": 1,
                    "sum_ptr": 1,
                    "value_ptr": 1
                },
                "param_4": {
                    "modified_value3": 1,
                    "p_param4": 1,
                    "param4": 2,
                    "param_four": 1,
                    "pointer3": 5,
                    "pointer_to_result": 1,
                    "ptr3": 2,
                    "ptr_result": 1,
                    "result": 8,
                    "result_pointer": 2,
                    "result_ptr": 5
                }
            },
            "called": [
                "FUN_0010282b",
                "FUN_001027e2"
            ],
            "calling": [
                "FUN_001034d5",
                "FUN_0010259a"
            ],
            "code": "\n\n\nvoid update_data_00103810(undefined8 modifier,long *pointer1,int *pointer2,long *result)\n\n{\n  int num1;\n  long modifier;\n  int num2;\n  \n  modifier = (long)DAT_0010834c;\n  if (DAT_0010834c < 2) {\n    return;\n  }\n  num2 = DAT_0010834c + -1;\n  *pointer1 = *pointer1 - (long)num2;\n  num1 = *pointer2;\n  if (num1 == 0) {\n    if (DAT_00108360 != 'l') {\n      if (DAT_00108360 < 'm') {\n        if (DAT_00108360 == 'b') {\n          DAT_00108348 = (undefined)modifier;\n          *pointer2 = 1;\n        }\n        else if (DAT_00108360 < 'c') {\n          if (DAT_00108360 == 'B') {\n            _DAT_00108349 = (ushort)modifier << 8 | (ushort)modifier >> 8;\n            DAT_00108348 = (undefined)((ulong)modifier >> 0x10);\n            *pointer2 = 3;\n          }\n          else if (DAT_00108360 == 'L') {\n            initialize_data();\n            return;\n          }\n        }\n      }\n      *result = (long)&DAT_00108348;\n      return;\n    }\n    DAT_00108348 = (undefined)((ulong)modifier >> 8);\n    *pointer2 = 1;\n    *result = (long)&DAT_00108348;\n  }\n  else {\n    *result = *result + (1 - modifier);\n    *pointer2 = num2 + num1;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_00103810",
            "entrypoint": "0x00103810",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103810": "update_data_00103810",
                "iVar1": "num1",
                "iVar3": "num2",
                "initialize_data_0010282b": "initialize_data",
                "lVar2": "modifier",
                "param_1": "modifier",
                "param_2": "pointer1",
                "param_3": "pointer2",
                "param_4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103890": {
            "additional_data": {
                "DAT_00108371": {
                    "flag_print_message": 1,
                    "is_enabled": 1,
                    "is_filename_enabled": 1,
                    "is_name_print_enabled": 1,
                    "is_print_enabled": 1,
                    "should_print_function_name": 1,
                    "should_print_message": 1
                },
                "DAT_00108372": {
                    "flag_print_filename_and_address": 1,
                    "is_address_print_enabled": 1,
                    "is_file_address_print_enabled": 1,
                    "should_print": 1,
                    "should_print_address": 2,
                    "should_print_file_address": 1
                },
                "FUN_00102853": {
                    "print_address_header": 1,
                    "print_filename": 1,
                    "print_info": 1
                },
                "FUN_00103890": {
                    "print_conditionally": 1,
                    "print_file_if_not_empty": 1,
                    "print_file_info": 4,
                    "print_filename_and_address": 1,
                    "print_filename_if_debug": 1,
                    "print_filename_if_enabled": 2,
                    "print_filename_if_flag_set": 1,
                    "print_filename_if_verbose": 1,
                    "print_function_info": 3,
                    "print_function_name_and_address": 1,
                    "print_function_with_filename": 1,
                    "print_if_available": 1,
                    "print_if_condition_met": 1,
                    "print_if_enabled": 3,
                    "print_info": 2,
                    "print_info_and_address": 1,
                    "print_information": 1,
                    "print_message": 3,
                    "print_message_and_filename": 1,
                    "print_message_if_enabled": 1
                },
                "param_1": {
                    "file_name": 9,
                    "filename": 2,
                    "function_name": 4,
                    "info_string": 1,
                    "message": 15
                },
                "param_2": {
                    "address": 20,
                    "file_address": 7,
                    "filename": 2,
                    "function_address": 2
                },
                "print_filename_and_address_part_0": {
                    "print_address": 6,
                    "print_address_details": 2,
                    "print_address_info": 3,
                    "print_address_part_0": 1,
                    "print_file_address": 5,
                    "print_file_info": 3,
                    "print_file_info_part_0": 1,
                    "print_filename_and_address": 5,
                    "print_filename_and_address_part": 1
                },
                "printf": {
                    "print_formatted_message": 1
                }
            },
            "called": [
                "FUN_00102853"
            ],
            "calling": [
                "FUN_00102b11",
                "FUN_00103240"
            ],
            "code": "\nvoid print_file_info_00103890(undefined8 message,undefined8 address)\n\n{\n  if (DAT_00108371 != '\\0') {\n    print_formatted_message(\"%s: \",message);\n  }\n  if (DAT_00108372 == '\\0') {\n    return;\n  }\n  print_address(address);\n  return;\n}\n\n",
            "current_name": "print_file_info_00103890",
            "entrypoint": "0x00103890",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103890": "print_file_info_00103890",
                "param_1": "message",
                "param_2": "address",
                "print_filename_and_address_part_0": "print_address",
                "printf": "print_formatted_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001038b0": {
            "additional_data": {
                "DAT_00108378": {
                    "program_name": 1
                },
                "FUN_001038b0": {
                    "print_debug_message": 1,
                    "print_error": 1,
                    "print_error_message": 27,
                    "print_formatted_message": 2
                },
                "__gnuc_va_list": {
                    "arguments": 1,
                    "varargs": 1
                },
                "_stderr": {
                    "error_file": 1,
                    "error_stream": 1,
                    "standard_error": 17,
                    "stderr": 3
                },
                "_stdout": {
                    "output_stream": 1,
                    "standard_output": 17,
                    "stdout": 3
                },
                "fflush": {
                    "flush_standard_output": 1
                },
                "fprintf": {
                    "format_error_message": 1,
                    "format_print": 1,
                    "fprintf_to_standard_error": 1,
                    "print_to_stderr": 1
                },
                "param_1": {
                    "error_message": 16,
                    "format_string": 3,
                    "message": 11,
                    "message_format": 1
                },
                "param_2": {
                    "arg_list": 4,
                    "args": 10,
                    "args_list": 1,
                    "argument_list": 2,
                    "arguments": 9,
                    "format_args": 3
                },
                "putc": {
                    "put_character": 2,
                    "put_character_to_standard_error": 1,
                    "put_newline_character": 1,
                    "write_character": 2,
                    "write_newline": 1,
                    "write_newline_to_stderr": 1
                },
                "putchar": {
                    "print_character": 1
                },
                "vfprintf": {
                    "vfprintf_to_standard_error": 1
                }
            },
            "called": [
                "FUN_001021e0",
                "FUN_001021d0",
                "FUN_001022b0",
                "FUN_00102220"
            ],
            "calling": [
                "FUN_00103910",
                "FUN_00104a60"
            ],
            "code": "\n\n\nvoid print_error_message_001038b0(char *error_message,varargs args)\n\n{\n  flush_standard_output(standard_output);\n  print_to_stderr(standard_error,\"%s: \",DAT_00108378);\n  vfprintf_to_standard_error(standard_error,error_message,args);\n  write_character(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_error_message_001038b0",
            "entrypoint": "0x001038b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001038b0": "print_error_message_001038b0",
                "__gnuc_va_list": "varargs",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "fflush": "flush_standard_output",
                "fprintf": "print_to_stderr",
                "param_1": "error_message",
                "param_2": "args",
                "putc": "write_character",
                "vfprintf": "vfprintf_to_standard_error"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103910": {
            "additional_data": {
                "FUM_00103910": {
                    "report_data": 1
                },
                "FUN_001038b0": {
                    "sub_function": 1
                },
                "FUN_00103910": {
                    "process_data": 1,
                    "report_and_log": 1,
                    "report_and_process": 1,
                    "report_and_process_data": 1,
                    "report_data": 23,
                    "report_function": 3
                },
                "in_AL": {
                    "character": 1,
                    "condition": 10,
                    "enable_reporting": 1,
                    "flag": 8,
                    "input_flag": 3,
                    "is_not_null": 1,
                    "is_true": 3,
                    "some_condition": 1
                },
                "local_18": {
                    "arg8_copy": 1,
                    "assigned_value_8": 1,
                    "data8": 1,
                    "data8_value": 1,
                    "function_param8_copy": 1,
                    "input8": 2,
                    "input8_copy": 3,
                    "input8_updated": 1,
                    "input_8": 1,
                    "input_8_copy": 2,
                    "local_input_8": 1,
                    "local_param8": 2,
                    "local_var8": 2,
                    "local_var_18": 1,
                    "param8": 2,
                    "param8_copy": 1,
                    "report_param8": 1,
                    "temp13": 1,
                    "temp8": 2,
                    "temp_flag8": 1,
                    "unused_input8": 1
                },
                "local_28": {
                    "arg7_copy": 1,
                    "assigned_value_7": 1,
                    "data7": 1,
                    "data7_value": 1,
                    "function_param7_copy": 1,
                    "input7": 2,
                    "input7_copy": 3,
                    "input7_updated": 1,
                    "input_7": 1,
                    "input_7_copy": 2,
                    "local_input_7": 1,
                    "local_param7": 2,
                    "local_var7": 2,
                    "local_var_28": 1,
                    "param7": 2,
                    "param7_copy": 1,
                    "report_param7": 1,
                    "temp12": 1,
                    "temp7": 2,
                    "temp_flag7": 1,
                    "unused_input7": 1
                },
                "local_38": {
                    "arg6_copy": 1,
                    "assigned_value_6": 1,
                    "data6": 1,
                    "data6_value": 1,
                    "function_param6_copy": 1,
                    "input6": 2,
                    "input6_copy": 3,
                    "input6_updated": 1,
                    "input_6": 1,
                    "input_6_copy": 2,
                    "local_input_6": 1,
                    "local_param6": 2,
                    "local_var6": 2,
                    "local_var_38": 1,
                    "param6": 2,
                    "param6_copy": 1,
                    "report_param6": 1,
                    "temp11": 1,
                    "temp6": 2,
                    "temp_flag6": 1,
                    "unused_input6": 1
                },
                "local_48": {
                    "arg5_copy": 1,
                    "assigned_value_5": 1,
                    "data5": 1,
                    "data5_value": 1,
                    "function_param5_copy": 1,
                    "input5": 2,
                    "input5_copy": 3,
                    "input5_updated": 1,
                    "input_5": 1,
                    "input_5_copy": 2,
                    "local_input_5": 1,
                    "local_param5": 2,
                    "local_var5": 2,
                    "local_var_48": 1,
                    "param5": 2,
                    "param5_copy": 1,
                    "report_param5": 1,
                    "temp10": 1,
                    "temp5": 2,
                    "temp_flag5": 1,
                    "unused_input5": 1
                },
                "local_58": {
                    "arg4_copy": 1,
                    "assigned_value_4": 1,
                    "data4": 1,
                    "data4_value": 1,
                    "function_param4_copy": 1,
                    "input4": 2,
                    "input4_copy": 3,
                    "input4_updated": 1,
                    "input_4": 1,
                    "input_4_copy": 2,
                    "local_input_4": 1,
                    "local_param4": 2,
                    "local_var4": 2,
                    "local_var_58": 1,
                    "param4": 2,
                    "param4_copy": 1,
                    "report_param4": 1,
                    "temp4": 2,
                    "temp9": 1,
                    "temp_flag4": 1,
                    "unused_input4": 1
                },
                "local_68": {
                    "arg3_copy": 1,
                    "assigned_value_3": 1,
                    "data3": 1,
                    "data3_value": 1,
                    "function_param3_copy": 1,
                    "input3": 2,
                    "input3_copy": 3,
                    "input3_updated": 1,
                    "input_3": 1,
                    "input_3_copy": 2,
                    "local_input_3": 1,
                    "local_param3": 2,
                    "local_var3": 2,
                    "local_var_68": 1,
                    "param3": 2,
                    "param3_copy": 1,
                    "report_param3": 1,
                    "temp3": 2,
                    "temp8": 1,
                    "temp_flag3": 1,
                    "unused_input3": 1
                },
                "local_78": {
                    "arg2_copy": 1,
                    "assigned_value_2": 1,
                    "data2": 1,
                    "data2_value": 1,
                    "function_param2_copy": 1,
                    "input2": 2,
                    "input2_copy": 3,
                    "input2_updated": 1,
                    "input_2": 1,
                    "input_2_copy": 2,
                    "local_input_2": 1,
                    "local_param2": 2,
                    "local_var2": 2,
                    "local_var_78": 1,
                    "param2": 2,
                    "param2_copy": 1,
                    "report_param2": 1,
                    "temp2": 2,
                    "temp7": 1,
                    "temp_flag2": 1,
                    "unused_input2": 1
                },
                "local_88": {
                    "arg1_copy": 1,
                    "assigned_value_1": 1,
                    "data1": 1,
                    "data1_value": 1,
                    "function_param1_copy": 1,
                    "input1": 2,
                    "input1_copy": 3,
                    "input1_updated": 1,
                    "input_1": 1,
                    "input_1_copy": 2,
                    "local_input_1": 1,
                    "local_param1": 2,
                    "local_var1": 2,
                    "local_var_88": 1,
                    "param1": 2,
                    "param1_copy": 1,
                    "report_param1": 1,
                    "temp1": 2,
                    "temp6": 1,
                    "temp_flag1": 1,
                    "unused_input1": 1
                },
                "local_90": {
                    "argument_5": 1,
                    "data_param14": 1,
                    "fifth_local_var": 1,
                    "input_14": 1,
                    "local_param14": 1,
                    "local_param_14": 1,
                    "local_var_90": 1,
                    "output6_copy": 1,
                    "param14": 4,
                    "param14_copy": 4,
                    "param14_updated": 1,
                    "param14_value": 1,
                    "param6": 2,
                    "param6_copy": 1,
                    "param6_value": 1,
                    "param_14": 1,
                    "param_14_copy": 1,
                    "temp5": 1,
                    "temp_param14": 1,
                    "temp_value5": 1,
                    "unused_output6": 1,
                    "value6": 1,
                    "value_e": 1,
                    "var14": 1
                },
                "local_98": {
                    "argument_4": 1,
                    "data_param13": 1,
                    "fourth_local_var": 1,
                    "input_13": 1,
                    "local_param13": 1,
                    "local_param_13": 1,
                    "local_var_98": 1,
                    "output5_copy": 1,
                    "param13": 4,
                    "param13_copy": 4,
                    "param13_updated": 1,
                    "param13_value": 1,
                    "param5": 2,
                    "param5_copy": 1,
                    "param5_value": 1,
                    "param_13": 1,
                    "param_13_copy": 1,
                    "temp4": 1,
                    "temp_param13": 1,
                    "temp_value4": 1,
                    "unused_output5": 1,
                    "value5": 1,
                    "value_d": 1,
                    "var13": 1
                },
                "local_a0": {
                    "argument_3": 1,
                    "data_param12": 1,
                    "input_12": 1,
                    "local_param12": 1,
                    "local_param_12": 1,
                    "local_var_a0": 1,
                    "output4_copy": 1,
                    "param12": 4,
                    "param12_copy": 4,
                    "param12_updated": 1,
                    "param12_value": 1,
                    "param4": 2,
                    "param4_copy": 1,
                    "param4_value": 1,
                    "param_12": 1,
                    "param_12_copy": 1,
                    "temp3": 1,
                    "temp_param12": 1,
                    "temp_value3": 1,
                    "third_local_var": 1,
                    "unused_output4": 1,
                    "value4": 1,
                    "value_c": 1,
                    "var12": 1
                },
                "local_a8": {
                    "argument_2": 1,
                    "data_param11": 1,
                    "input_11": 1,
                    "local_param11": 1,
                    "local_param_11": 1,
                    "local_var_a8": 1,
                    "output3_copy": 1,
                    "param11": 4,
                    "param11_copy": 4,
                    "param11_updated": 1,
                    "param11_value": 1,
                    "param3": 2,
                    "param3_copy": 1,
                    "param3_value": 1,
                    "param_11": 1,
                    "param_11_copy": 1,
                    "second_local_var": 1,
                    "temp2": 1,
                    "temp_param11": 1,
                    "temp_value2": 1,
                    "unused_output3": 1,
                    "value3": 1,
                    "value_b": 1,
                    "var11": 1
                },
                "local_b0": {
                    "argument_1": 1,
                    "data_param10": 1,
                    "first_local_var": 1,
                    "input_10": 1,
                    "local_param10": 1,
                    "local_param_10": 1,
                    "local_var_b0": 1,
                    "output2_copy": 1,
                    "param10": 4,
                    "param10_copy": 4,
                    "param10_updated": 1,
                    "param10_value": 1,
                    "param2": 2,
                    "param2_copy": 1,
                    "param2_value": 1,
                    "param_10": 1,
                    "param_10_copy": 1,
                    "temp1": 1,
                    "temp_param10": 1,
                    "temp_value1": 1,
                    "unused_output2": 1,
                    "value2": 1,
                    "value_a": 1,
                    "var10": 1
                },
                "local_b8": {
                    "buffer": 3,
                    "local_array": 4,
                    "local_array3": 1,
                    "local_buffer": 3,
                    "local_data": 2,
                    "local_var_b8": 1,
                    "read_only_buffer": 1,
                    "temp_array": 1,
                    "temp_buffer": 7,
                    "temporary_buffer": 3,
                    "unused_buffer": 1
                },
                "local_c8": {
                    "array": 2,
                    "buffer": 3,
                    "buffer_ptr": 1,
                    "local_array": 3,
                    "local_array2": 1,
                    "local_b8": 1,
                    "local_buffer": 15,
                    "local_buffer2": 1,
                    "local_data": 2,
                    "local_pointer2": 1,
                    "local_var_c8": 1
                },
                "local_d0": {
                    "buffer": 11,
                    "buffer_pointer": 1,
                    "buffer_ptr": 2,
                    "local_array1": 1,
                    "local_buffer": 4,
                    "local_pointer": 1,
                    "local_var_d0": 1,
                    "pointer": 1,
                    "ptr_to_stack": 1,
                    "stack_data": 2,
                    "stack_pointer": 1,
                    "stack_ptr": 4
                },
                "local_d4": {
                    "buffer_length": 2,
                    "buffer_size": 6,
                    "constant": 2,
                    "length": 2,
                    "local_buffer_size": 1,
                    "local_size": 2,
                    "local_var1": 2,
                    "local_var_d4": 1,
                    "local_variable_d4": 1,
                    "offset": 4,
                    "size": 4
                },
                "local_d8": {
                    "array_size": 1,
                    "buffer_size": 9,
                    "flag_size": 1,
                    "length": 5,
                    "local_buffer_size": 1,
                    "local_var_d8": 1,
                    "num_bytes": 1,
                    "num_elements": 1,
                    "size": 9,
                    "stack_size": 2
                },
                "param_1": {
                    "arg1": 1,
                    "buffer_size": 1,
                    "config_value1": 1,
                    "data1": 4,
                    "first_param": 2,
                    "flag": 1,
                    "flag1": 1,
                    "function_param1": 1,
                    "input1": 8,
                    "input_1": 4,
                    "local_88": 1,
                    "local_var_1": 1,
                    "param1": 1,
                    "report_param1": 2,
                    "some_value": 1
                },
                "param_10": {
                    "arg10": 1,
                    "first_var": 1,
                    "input_9": 1,
                    "local_b0": 1,
                    "output2": 3,
                    "param1": 2,
                    "param10": 6,
                    "param2": 3,
                    "param_10": 3,
                    "param_a": 2,
                    "param_value1": 1,
                    "report_param10": 2,
                    "value1": 2,
                    "value_1": 2
                },
                "param_11": {
                    "arg11": 1,
                    "input_10": 1,
                    "local_a8": 1,
                    "output3": 3,
                    "param11": 6,
                    "param2": 2,
                    "param3": 3,
                    "param_11": 3,
                    "param_b": 2,
                    "param_value2": 1,
                    "report_param11": 2,
                    "second_var": 1,
                    "value2": 2,
                    "value_2": 2
                },
                "param_12": {
                    "arg12": 1,
                    "input_11": 1,
                    "local_a0": 1,
                    "output4": 3,
                    "param12": 6,
                    "param3": 2,
                    "param4": 3,
                    "param_12": 3,
                    "param_c": 2,
                    "param_value3": 1,
                    "report_param12": 2,
                    "third_var": 1,
                    "value3": 2,
                    "value_3": 2
                },
                "param_13": {
                    "arg13": 1,
                    "fourth_var": 1,
                    "input_12": 1,
                    "local_98": 1,
                    "output5": 3,
                    "param13": 6,
                    "param4": 2,
                    "param5": 3,
                    "param_13": 3,
                    "param_d": 2,
                    "param_value4": 1,
                    "report_param13": 2,
                    "value4": 2,
                    "value_4": 2
                },
                "param_14": {
                    "arg14": 1,
                    "fifth_var": 1,
                    "input_13": 1,
                    "local_90": 1,
                    "output6": 3,
                    "param14": 6,
                    "param5": 2,
                    "param6": 3,
                    "param_14": 3,
                    "param_e": 2,
                    "param_value5": 1,
                    "report_param14": 2,
                    "value5": 2,
                    "value_5": 2
                },
                "param_2": {
                    "another_value": 1,
                    "arg2": 1,
                    "config_value2": 1,
                    "data2": 4,
                    "flag2": 1,
                    "function_param2": 1,
                    "input2": 9,
                    "input_2": 4,
                    "local_78": 1,
                    "local_var_2": 1,
                    "param2": 2,
                    "report_param2": 2,
                    "second_param": 2
                },
                "param_3": {
                    "arg3": 1,
                    "config_value3": 1,
                    "data3": 4,
                    "flag3": 1,
                    "function_param3": 1,
                    "input3": 9,
                    "input_3": 4,
                    "local_68": 1,
                    "local_var_3": 1,
                    "more_value": 1,
                    "param3": 2,
                    "report_param3": 2,
                    "third_param": 2
                },
                "param_4": {
                    "additional_value": 1,
                    "arg4": 1,
                    "config_value4": 1,
                    "data4": 4,
                    "flag4": 1,
                    "fourth_param": 2,
                    "function_param4": 1,
                    "input4": 9,
                    "input_4": 4,
                    "local_58": 1,
                    "local_var_4": 1,
                    "param4": 2,
                    "report_param4": 2
                },
                "param_5": {
                    "arg5": 1,
                    "config_value5": 1,
                    "data5": 4,
                    "extra_value": 1,
                    "fifth_param": 2,
                    "flag5": 1,
                    "function_param5": 1,
                    "input5": 9,
                    "input_5": 4,
                    "local_48": 1,
                    "local_var_5": 1,
                    "param5": 2,
                    "report_param5": 2
                },
                "param_6": {
                    "arg6": 1,
                    "config_value6": 1,
                    "data6": 4,
                    "flag6": 1,
                    "function_param6": 1,
                    "input6": 9,
                    "input_6": 4,
                    "level_value": 1,
                    "local_38": 1,
                    "local_var_6": 1,
                    "param6": 2,
                    "report_param6": 2,
                    "sixth_param": 2
                },
                "param_7": {
                    "arg7": 1,
                    "config_value7": 1,
                    "data7": 4,
                    "depth_value": 1,
                    "flag7": 1,
                    "function_param7": 1,
                    "input7": 9,
                    "input_7": 4,
                    "local_28": 1,
                    "local_var_7": 1,
                    "param7": 2,
                    "report_param7": 2,
                    "seventh_param": 2
                },
                "param_8": {
                    "arg8": 1,
                    "config_value8": 1,
                    "data8": 4,
                    "eighth_param": 2,
                    "flag8": 1,
                    "function_param8": 1,
                    "height_value": 1,
                    "input8": 9,
                    "input_8": 4,
                    "local_18": 1,
                    "local_var_8": 1,
                    "param8": 2,
                    "report_param8": 2
                },
                "param_9": {
                    "arg9": 1,
                    "data": 4,
                    "data9": 1,
                    "data_param": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "data_to_report": 1,
                    "output": 1,
                    "output1": 3,
                    "output_1": 1,
                    "param1": 3,
                    "param9": 1,
                    "param_9": 3,
                    "param_pointer": 1,
                    "report_data": 2,
                    "report_id": 1,
                    "report_param": 1,
                    "report_param9": 2
                }
            },
            "called": [
                "FUN_001038b0"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\nvoid report_and_process_data_00103910(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 input5,undefined4 input6,undefined4 input7,undefined4 input8,\n                 undefined8 data,undefined8 param10,undefined8 param11,undefined8 param12,\n                 undefined8 param13,undefined8 param14)\n\n{\n  char condition;\n  undefined4 buffer_size;\n  undefined4 buffer_size;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined temp_buffer [8];\n  undefined8 param10_copy;\n  undefined8 param11;\n  undefined8 param12;\n  undefined8 param13;\n  undefined8 param14_copy;\n  undefined4 input1_copy;\n  undefined4 input2_copy;\n  undefined4 input3_copy;\n  undefined4 input4_copy;\n  undefined4 input5_copy;\n  undefined4 input6_copy;\n  undefined4 input7_copy;\n  undefined4 input8_copy;\n  \n  if (condition != '\\0') {\n    input1_copy = input1;\n    input2_copy = input2;\n    input3_copy = input3;\n    input4_copy = input4;\n    input5_copy = input5;\n    input6_copy = input6;\n    input7_copy = input7;\n    input8_copy = input8;\n  }\n  buffer = &stack0x00000008;\n  buffer_size = 8;\n  local_buffer = temp_buffer;\n  buffer_size = 0x30;\n  param10_copy = param10;\n  param11 = param11;\n  param12 = param12;\n  param13 = param13;\n  param14_copy = param14;\n  report(data,&buffer_size);\n  return;\n}\n\n",
            "current_name": "report_and_process_data_00103910",
            "entrypoint": "0x00103910",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103910": "report_and_process_data_00103910",
                "in_AL": "condition",
                "local_18": "input8_copy",
                "local_28": "input7_copy",
                "local_38": "input6_copy",
                "local_48": "input5_copy",
                "local_58": "input4_copy",
                "local_68": "input3_copy",
                "local_78": "input2_copy",
                "local_88": "input1_copy",
                "local_90": "param14_copy",
                "local_98": "param13",
                "local_a0": "param12",
                "local_a8": "param11",
                "local_b0": "param10_copy",
                "local_b8": "temp_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "buffer_size",
                "local_d8": "buffer_size",
                "param_1": "input1",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13",
                "param_14": "param14",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "param_7": "input7",
                "param_8": "input8",
                "param_9": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001039b0": {
            "additional_data": {
                "FUN_001039b0": {
                    "process_entry": 3,
                    "run_main_function": 1,
                    "start_entry_processing": 1,
                    "start_function": 1,
                    "start_main_loop": 6,
                    "start_main_process": 1,
                    "start_main_wrapper": 1,
                    "start_process": 1,
                    "start_program": 3
                },
                "FUN_00103aa0": {
                    "open_file": 5
                },
                "__libc_start_main": {
                    "start_main": 1
                },
                "auStack_8": {
                    "aux_stack": 1,
                    "auxiliary_stack": 1,
                    "local_variable": 1,
                    "local_variable1": 1,
                    "stack": 12,
                    "stack_8": 2,
                    "stack_array": 2,
                    "stack_buffer": 1,
                    "stack_frame": 1,
                    "stack_var": 1
                },
                "main": {
                    "entry_point": 1
                },
                "param_1": {
                    "arg1": 8,
                    "argument1": 2,
                    "argv": 1,
                    "entry_point_param": 1,
                    "file_descriptor": 3,
                    "file_pointer": 1,
                    "param1": 10,
                    "param_1": 3,
                    "start_address": 1,
                    "unused_param_1": 1
                },
                "param_2": {
                    "arg2": 8,
                    "argc": 3,
                    "argument2": 2,
                    "argument_pointer": 1,
                    "arguments": 1,
                    "data_pointer": 1,
                    "offset": 1,
                    "param2": 10,
                    "param_2": 3,
                    "unused_param_2": 1
                },
                "processEntry": {
                    "execute_main_function": 1,
                    "initialize_program": 1,
                    "run_main_function": 1,
                    "run_main_loop": 1,
                    "start_main_execution": 1,
                    "start_main_loop": 6,
                    "start_main_process": 1,
                    "start_process": 1
                }
            },
            "called": [
                "FUN_00109010",
                "FUN_00103aa0"
            ],
            "calling": [],
            "code": "\nvoid start_main_loop_001039b0 start_main_loop_001039b0(undefined8 param1,undefined8 param2)\n\n{\n  undefined stack [8];\n  \n  start_main(entry_point,param2,&stack0x00000008,0,0,param1,stack);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "start_main_loop_001039b0",
            "entrypoint": "0x001039b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001039b0": "start_main_loop_001039b0",
                "__libc_start_main": "start_main",
                "auStack_8": "stack",
                "main": "entry_point",
                "param_1": "param1",
                "param_2": "param2",
                "processEntry": "start_main_loop"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001039e0": {
            "called": [
                "FUN_00109020"
            ],
            "calling": [
                "FUN_00103a50"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x001039f3) */\n/* WARNING: Removing unreachable block (ram,0x001039ff) */\n\nvoid FUNC_001039e0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_001039e0",
            "entrypoint": "0x001039e0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_001039e0": "FUNC_001039e0"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103a10": {
            "called": [
                "FUN_001091b0"
            ],
            "calling": [
                "FUN_00103a90"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00103a34) */\n/* WARNING: Removing unreachable block (ram,0x00103a40) */\n\nvoid FUNC_00103a10(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103a10",
            "entrypoint": "0x00103a10",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103a10": "FUNC_00103a10"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103a50": {
            "additional_data": {
                "FUNC_001039e0": {
                    "additional_function": 1,
                    "clean_up_resources": 1,
                    "cleanup": 5,
                    "cleanup_function": 1,
                    "cleanup_library": 2,
                    "cleanup_process": 1,
                    "cleanup_resources": 8,
                    "cleanup_unused_resources": 1,
                    "execute_cleanup": 1,
                    "execute_cleanup_tasks": 1,
                    "finalize_execution": 1,
                    "perform_additional_cleanup": 1,
                    "perform_cleanup": 7
                },
                "FUN_00103a50": {
                    "execute_cleanup": 1,
                    "initialize": 6,
                    "initialize_app": 1,
                    "initialize_application": 3,
                    "initialize_function": 2,
                    "initialize_library": 3,
                    "initialize_process": 1,
                    "initialize_program": 13,
                    "initialize_system": 1
                }
            },
            "called": [
                "FUN_00102320",
                "FUN_001039e0"
            ],
            "calling": [],
            "code": "\nvoid initialize_program_00103a50(void)\n\n{\n  if (DAT_00108340 != '\\0') {\n    return;\n  }\n  __cxa_finalize(PTR_LOOP_00108188);\n  deregister_tm_clones();\n  DAT_00108340 = 1;\n  return;\n}\n\n",
            "current_name": "initialize_program_00103a50",
            "entrypoint": "0x00103a50",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103a50": "initialize_program_00103a50"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103a90": {
            "called": [
                "FUN_00103a10"
            ],
            "calling": [],
            "code": "\nvoid register_tm_clones(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n",
            "current_name": "FUN_00103a90",
            "entrypoint": "0x00103a90",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00103aa0": {
            "additional_data": {
                "D": {
                    "program_name": 1
                },
                "DAT_00108350": {
                    "unicode_option": 1
                },
                "DAT_00108354": {
                    "number_base": 1
                },
                "DAT_00108358": {
                    "color_option": 1,
                    "output_type": 1,
                    "section_name": 1,
                    "target_name": 1
                },
                "DAT_00108360": {
                    "char_set": 1,
                    "encoding_mode": 1,
                    "output_format": 2
                },
                "DAT_00108368": {
                    "encoding_mode": 1,
                    "encoding_option": 1,
                    "target_architecture": 1,
                    "target_format": 1
                },
                "DAT_00108370": {
                    "display_offset": 1,
                    "print_files": 1,
                    "recursive_flag": 1,
                    "suppress_warnings": 1
                },
                "DAT_00108371": {
                    "format_flag": 1,
                    "unicode_mode": 1,
                    "unicode_output": 1,
                    "use_unicode": 1
                },
                "DAT_00108372": {
                    "output_offsets": 1,
                    "print_offsets_flag": 1,
                    "print_version": 1,
                    "show_version": 1
                },
                "DAT_00108373": {
                    "highlight_flag": 1,
                    "highlight_mode": 1,
                    "is_directory": 1,
                    "quiet_mode": 1
                },
                "DAT_00108374": {
                    "min_string_length": 3
                },
                "DAT_00108378": {
                    "program_name": 2
                },
                "D_00104029_caseD_3f": {
                    "option_unknown": 1
                },
                "D_00104111_caseD_65": {
                    "option_outputformat": 1
                },
                "D_00104201_caseD_54": {
                    "option_target": 1
                },
                "D_00104201_caseD_55": {
                    "option_unichtt": 1
                },
                "D_00104201_caseD_73": {
                    "option_color": 1
                },
                "FNF_00103aa0": {
                    "process_files": 1
                },
                "FUN_00103aa0": {
                    "decode_strings": 1,
                    "extract_and_print_strings": 1,
                    "extract_strings": 7,
                    "extract_strings_from_binary": 1,
                    "extract_strings_from_file": 11,
                    "parse_and_print_strings": 1,
                    "parse_arguments": 1,
                    "parse_files": 1,
                    "parse_strings_from_file": 1,
                    "process_files": 2,
                    "process_input_files": 1,
                    "process_strings": 1
                },
                "__errno_location": {
                    "get_errno_location": 1
                },
                "__ptr": {
                    "buffer": 6,
                    "buffer1": 1,
                    "byte_ptr": 2,
                    "byte_ptr2": 4,
                    "content": 1,
                    "file_content": 2,
                    "formatted_string": 1,
                    "line": 1,
                    "line_buffer": 1,
                    "normalized_string": 1,
                    "output": 1,
                    "ptr": 2,
                    "ptr1": 1,
                    "ptr_byte2": 2,
                    "str_ptr": 2,
                    "string_buffer": 1
                },
                "__src": {
                    "array2": 1,
                    "dyn_strings": 1,
                    "extracted_strings": 2,
                    "lines_array": 1,
                    "long_ptr1": 1,
                    "long_ptr2": 1,
                    "long_ptr_src": 1,
                    "ptr_long2": 2,
                    "ptr_source": 1,
                    "source": 2,
                    "source_ptr": 3,
                    "src": 3,
                    "src_ptr": 1,
                    "string_array": 1,
                    "strings": 4,
                    "strings_array": 1,
                    "strings_ptr": 1
                },
                "__stream": {
                    "file": 2,
                    "file_ptr": 1,
                    "file_stream": 16,
                    "file_stream1": 1,
                    "input_file": 5,
                    "input_stream": 1,
                    "stream": 2
                },
                "__stream_00": {
                    "another_stream": 1,
                    "file": 1,
                    "file2": 1,
                    "file_ptr": 1,
                    "file_stream": 1,
                    "file_stream0": 1,
                    "file_stream2": 11,
                    "input_stream_2": 1,
                    "stream": 1,
                    "stream2": 1,
                    "stream_2": 1,
                    "temp_file_stream": 2,
                    "tmp_file": 1
                },
                "_errno_location": {
                    "errno_location": 1
                },
                "_exit": {
                    "exit_program": 1
                },
                "_optarg": {
                    "option_argument": 1
                },
                "_optind": {
                    "current_arg_index": 1,
                    "option_index": 1
                },
                "_sch_istable": {
                    "_sch_istable": 1
                },
                "_stderr": {
                    "error_output": 1,
                    "standard_error": 3
                },
                "_stdin": {
                    "standard_input": 1
                },
                "_stdout": {
                    "standard_output": 4
                },
                "_strdup": {
                    "strdup": 1
                },
                "argc": {
                    "argc": 2
                },
                "args": {
                    "args": 1
                },
                "argv": {
                    "argv": 1
                },
                "bVar2": {
                    "b1": 1,
                    "byte1": 1,
                    "byte_var": 3,
                    "byte_var1": 3,
                    "byte_var2": 9,
                    "current_char": 1,
                    "first_byte": 1,
                    "next_byte": 2,
                    "table_entry": 2
                },
                "bVar25": {
                    "b3": 1,
                    "backslash_escape": 1,
                    "backslash_single_quotes": 1,
                    "bool1": 1,
                    "bool_var1": 12,
                    "bool_var25": 2,
                    "escape_flag": 1,
                    "escape_mode": 1,
                    "escaped_char": 1,
                    "escaping_single_quotes": 1,
                    "flag1": 1,
                    "flag_1": 1,
                    "is_escaping": 1,
                    "prev_char_is_backslash": 1,
                    "temp_bool": 1,
                    "use_escape_encoding": 1
                },
                "bVar27": {
                    "b4": 1,
                    "bool2": 1,
                    "bool_var2": 11,
                    "bool_var27": 2,
                    "double_quote_mode": 1,
                    "escape_backslash": 1,
                    "escape_char_flag": 1,
                    "escaping_double_quotes": 1,
                    "flag2": 1,
                    "flag_2": 1,
                    "in_single_quote": 1,
                    "is_in_single_quotes": 1,
                    "single_quote_escape": 1,
                    "single_quote_flag": 1,
                    "temp_bool2": 1,
                    "use_default_encoding": 1
                },
                "bVar28": {
                    "b5": 1,
                    "bool3": 1,
                    "bool_var28": 2,
                    "bool_var3": 11,
                    "double_quote_escape": 1,
                    "double_quote_flag": 1,
                    "flag3": 1,
                    "flag_3": 1,
                    "in_double_quote": 1,
                    "inside_single_quotes": 1,
                    "is_in_double_quotes": 1,
                    "single_quote_flag": 1,
                    "single_quote_mode": 2,
                    "temp_bool3": 1,
                    "use_locale_encoding": 1
                },
                "bVar3": {
                    "b2": 1,
                    "byte2": 1,
                    "byte_var": 1,
                    "byte_var2": 5,
                    "byte_var3": 9,
                    "current_byte": 1,
                    "current_char": 2,
                    "current_character": 1,
                    "next_byte": 1,
                    "next_char": 1
                },
                "bfd_check_format": {
                    "bfd_check_format": 1,
                    "check_bfd_format": 2,
                    "check_format": 1
                },
                "bfd_close": {
                    "bfd_close": 1,
                    "close_bfd": 3
                },
                "bfd_errmsg": {
                    "bfd_errmsg": 1,
                    "get_bfd_error_message": 2,
                    "get_error_message": 1
                },
                "bfd_get_error": {
                    "bfd_get_error": 1,
                    "get_bfd_error": 1
                },
                "bfd_init": {
                    "bfd_init": 1,
                    "initialize_bfd": 3
                },
                "bfd_malloc_and_get_section": {
                    "bfd_malloc_and_get_section": 1,
                    "malloc_and_get_section": 2,
                    "malloc_and_read_section": 1
                },
                "bfd_openr": {
                    "bfd_openr": 1,
                    "open_bfd": 1,
                    "open_bfd_file_read": 1,
                    "open_bfd_read": 1
                },
                "bfd_set_default_target": {
                    "set_default_bfd_target": 1,
                    "set_default_target": 2
                },
                "bfd_set_error_program_name": {
                    "bfd_set_error_program_name": 1,
                    "set_bfd_error_program_name": 2,
                    "set_error_program_name": 2
                },
                "bfd_strerror": {
                    "bfd_strerror": 1
                },
                "bindtextdomain": {
                    "bind_text_domain": 2,
                    "bindtextdomain": 1,
                    "set_binary_domain": 1
                },
                "byte_ptr": {
                    "byte_ptr": 1
                },
                "bytes_read": {
                    "bytes_read": 1
                },
                "cVar4": {
                    "c": 1,
                    "ch": 2,
                    "char1": 1,
                    "char_var": 7,
                    "char_var1": 1,
                    "char_var4": 7,
                    "current_char": 2,
                    "temp_char": 3
                },
                "counter": {
                    "counter": 1
                },
                "current_arg": {
                    "current_arg": 1
                },
                "current_byte": {
                    "current_byte": 1
                },
                "current_char": {
                    "current_char": 1
                },
                "current_option": {
                    "current_option": 1
                },
                "current_string": {
                    "current_string": 1
                },
                "dcgettext": {
                    "dcgettext": 1,
                    "get_localized_message": 1,
                    "get_translated_message": 1,
                    "gettext": 1
                },
                "errno": {
                    "errno": 1
                },
                "errno_location": {
                    "errno_location": 1
                },
                "error_code": {
                    "error_code": 1
                },
                "error_message": {
                    "error_message": 1
                },
                "errors_detected": {
                    "errors_detected": 1
                },
                "exit": {
                    "exit": 1,
                    "exit_program": 2
                },
                "fatal": {
                    "fatal": 1,
                    "handle_fatal_error": 1,
                    "show_fatal_error": 1
                },
                "fclose": {
                    "close_file": 3,
                    "fclose": 1
                },
                "ferror": {
                    "check_file_error": 2,
                    "ferror": 1,
                    "file_error": 1
                },
                "fflush": {
                    "fflush": 1
                },
                "fgetpos": {
                    "get_file_position": 1
                },
                "file_buffer": {
                    "file_buffer": 1
                },
                "file_info": {
                    "file_info": 1
                },
                "file_name": {
                    "file_name": 1
                },
                "file_size": {
                    "file_size": 1
                },
                "first_byte": {
                    "first_byte": 1
                },
                "fopen": {
                    "fopen": 1,
                    "open_file": 3
                },
                "fprintf": {
                    "formatted_print": 1,
                    "fprintf": 1,
                    "print_formatted": 1,
                    "print_to_file": 1
                },
                "fputs": {
                    "put_string": 1
                },
                "fread": {
                    "fread": 1,
                    "read_file": 2,
                    "read_from_file": 1
                },
                "free": {
                    "deallocate_memory": 1,
                    "free": 1,
                    "free_memory": 2
                },
                "fseek": {
                    "fseek": 1,
                    "seek_file": 2,
                    "set_file_position": 1
                },
                "ftell": {
                    "ftell": 1,
                    "get_file_position": 1,
                    "tell_file": 2
                },
                "fwrite": {
                    "write_to_file": 2
                },
                "getopt_long": {
                    "get_long_option": 3,
                    "getopt_long": 1
                },
                "halt_baddata": {
                    "halt_baddata": 1,
                    "halt_data": 1,
                    "halt_when_bad_data": 1
                },
                "iVar5": {
                    "count": 1,
                    "current_index": 1,
                    "i1": 1,
                    "index": 8,
                    "index_var1": 1,
                    "int_var": 3,
                    "int_var1": 1,
                    "int_var5": 3,
                    "result": 1,
                    "temp_int": 3
                },
                "iVar7": {
                    "arg_index": 1,
                    "current_index": 1,
                    "current_value": 1,
                    "file_index": 1,
                    "i": 1,
                    "i2": 1,
                    "i_var": 1,
                    "index_var2": 1,
                    "int_var": 1,
                    "int_var2": 2,
                    "int_var7": 3,
                    "iter": 1,
                    "iteration": 2,
                    "loop_counter": 1,
                    "loop_var": 2,
                    "result": 1,
                    "temp": 2,
                    "temp_int2": 1,
                    "temp_var": 1
                },
                "index": {
                    "index": 1
                },
                "input_file": {
                    "input_file": 1
                },
                "iteration": {
                    "iteration": 1
                },
                "lVar11": {
                    "current_string": 1,
                    "i": 3,
                    "length": 3,
                    "long_var": 3,
                    "long_var1": 6,
                    "long_var11": 2,
                    "offset": 1,
                    "res": 1,
                    "str_length": 1,
                    "strlen": 1,
                    "temp_long": 4,
                    "tmp_long_var1": 1,
                    "value": 1
                },
                "lVar22": {
                    "idx": 1,
                    "index2": 1,
                    "j": 2,
                    "l2": 1,
                    "long_var": 2,
                    "long_var2": 8,
                    "long_var22": 2,
                    "loop_var": 1,
                    "string_index": 1,
                    "temp_long": 1,
                    "temp_long2": 2,
                    "tmp_long_var3": 1
                },
                "local_110": {
                    "curr_index": 1,
                    "current_string_index": 1,
                    "dyn_strings_length": 1,
                    "i": 1,
                    "index2": 2,
                    "lines_array_index": 1,
                    "local110": 1,
                    "local_i": 1,
                    "local_long_var": 1,
                    "local_long_var1": 1,
                    "local_long_var2": 1,
                    "long_local_110": 1,
                    "long_var1": 1,
                    "long_var3": 4,
                    "num_extracted_strings": 1,
                    "num_strings": 1,
                    "src_idx": 1,
                    "src_index": 1,
                    "string_count": 1,
                    "string_index": 1,
                    "string_index_in_file": 1,
                    "temp_long": 2
                },
                "local_118": {
                    "buffer_size": 2,
                    "bytes_to_read": 1,
                    "line_size": 1,
                    "local118": 1,
                    "local_size": 1,
                    "local_size_var": 2,
                    "local_size_var1": 1,
                    "output_size": 1,
                    "size": 1,
                    "size_t_local_118": 1,
                    "size_t_var": 1,
                    "size_t_var1": 1,
                    "size_var3": 2,
                    "size_var4": 1,
                    "string_buffer_length": 1,
                    "string_length": 2,
                    "string_size": 1,
                    "strlen": 1,
                    "temp_size": 1,
                    "total_bytes_read": 1
                },
                "local_120": {
                    "file_size": 1,
                    "limit": 1,
                    "local120": 1,
                    "local_len": 1,
                    "local_u_long_var": 1,
                    "local_ulong_var": 1,
                    "local_ulong_var1": 1,
                    "max_file_paths": 1,
                    "max_files": 6,
                    "max_lines": 1,
                    "max_string_count": 1,
                    "max_string_length": 2,
                    "remaining_bytes": 1,
                    "remaining_files": 3,
                    "size_var3": 1,
                    "temp_u_long": 1,
                    "ulong_local_120": 1,
                    "ulong_var1": 1,
                    "ulong_var2": 1,
                    "ulong_var3": 1,
                    "ulong_var4": 1
                },
                "local_128": {
                    "buffer": 5,
                    "byte_arr1": 1,
                    "byte_array": 1,
                    "byte_ptr4": 1,
                    "byte_ptr5": 2,
                    "byte_ptr_local_128": 1,
                    "file_buffer": 4,
                    "file_content": 3,
                    "file_contents": 1,
                    "formatted_string_buffer": 1,
                    "local_byte_ptr": 1,
                    "local_byte_ptr1": 1,
                    "local_ptr_byte1": 1,
                    "local_tmp2": 1,
                    "ptr_byte5": 1,
                    "ptr_local128": 1,
                    "src_buffer": 1,
                    "string_buffer": 2
                },
                "local_138": {
                    "arg_ptr3": 1,
                    "current_file_info": 1,
                    "current_file_path": 1,
                    "current_option": 1,
                    "default_target": 1,
                    "encoding": 2,
                    "file_pointer": 1,
                    "local138": 1,
                    "local_long_var": 1,
                    "local_ptr_long2": 1,
                    "local_tmp1": 1,
                    "local_var1": 1,
                    "long_ptr7": 1,
                    "min_string_length": 1,
                    "new_pointer": 1,
                    "opt_arg_index": 1,
                    "optarg": 1,
                    "output_stream": 1,
                    "program_name": 1,
                    "ptr": 1,
                    "ptr_u_long3": 1,
                    "target": 2,
                    "target_string": 1,
                    "temp_long": 1,
                    "tmp_long_var4": 1,
                    "undefined8_local_138": 1,
                    "undefined8_var1": 1
                },
                "local_140": {
                    "at_file_indices": 2,
                    "current_arg_index": 1,
                    "current_argv": 1,
                    "current_src": 1,
                    "file_arr2": 1,
                    "file_array": 1,
                    "file_index": 1,
                    "file_info_array": 1,
                    "file_names": 1,
                    "file_paths": 2,
                    "file_paths_index": 2,
                    "index": 1,
                    "local_param_ptr": 1,
                    "local_ptr_long1": 1,
                    "local_ptrs": 1,
                    "local_src_ptr": 1,
                    "long_ptr5": 1,
                    "long_ptr6": 1,
                    "long_ptr_local_140": 1,
                    "ptr_array": 1,
                    "ptr_local140": 1,
                    "ptr_long6": 1,
                    "source": 1,
                    "src_files": 1,
                    "temp_files": 1
                },
                "local_c8": {
                    "file_info": 4,
                    "file_stat": 4,
                    "file_stat_info": 1,
                    "file_stats": 2,
                    "file_status": 2,
                    "local_c8": 1,
                    "local_stat": 2,
                    "local_stat1": 1,
                    "local_stat_var": 1,
                    "stat1": 1,
                    "stat_data": 2,
                    "stat_info": 1,
                    "stat_local_c8": 1,
                    "stat_struct": 4,
                    "stat_var": 1,
                    "stats": 2
                },
                "local_d0": {
                    "buffer4": 1,
                    "buffer_ptr": 1,
                    "data": 1,
                    "local_buffer_ptr": 1,
                    "local_d0": 2,
                    "local_ptr_void": 1,
                    "local_void_ptr": 2,
                    "ptr_void": 1,
                    "section_data": 5,
                    "shared_data": 1,
                    "stat_struct": 1,
                    "temp_pointer": 1,
                    "temp_stat_struct": 1,
                    "temp_void_ptr": 1,
                    "tmp_data": 1,
                    "tmp_void_var": 1,
                    "void_ptr": 1,
                    "void_ptr1": 4,
                    "void_ptr_local_d0": 1
                },
                "local_d8": {
                    "char_arr1": 1,
                    "char_ptr": 1,
                    "char_ptr1": 1,
                    "char_ptr2": 1,
                    "char_ptr3": 1,
                    "char_ptr_local_d8": 1,
                    "error": 1,
                    "error_message": 4,
                    "error_msg": 1,
                    "error_string": 2,
                    "failure_reason": 1,
                    "local_buffer": 1,
                    "local_char_ptr": 1,
                    "local_d8": 2,
                    "local_ptr_char1": 1,
                    "local_str_var1": 1,
                    "local_string": 1,
                    "ptr_char2": 1,
                    "reason": 1,
                    "string_var4": 1,
                    "temp_char_ptr": 1,
                    "temp_string": 1,
                    "temp_string_opt": 1,
                    "warning_msg": 1
                },
                "malloc": {
                    "allocate_memory": 1,
                    "malloc": 1
                },
                "memcmp": {
                    "compare_memory": 1,
                    "memcmp": 1
                },
                "memcpy": {
                    "copy_memory": 2,
                    "memcpy": 1
                },
                "memmove": {
                    "memmove": 1,
                    "move_memory": 2
                },
                "min_string_length": {
                    "min_string_length": 1
                },
                "non_fatal": {
                    "handle_non_fatal_error": 1,
                    "non_fatal": 1,
                    "non_fatal_error": 1,
                    "show_non_fatal_error": 1
                },
                "optarg": {
                    "optarg": 1
                },
                "optind": {
                    "optind": 1
                },
                "output_format": {
                    "output_format": 1
                },
                "output_type": {
                    "output_type": 1
                },
                "param_1": {
                    "argc": 30
                },
                "param_2": {
                    "argc": 1,
                    "argv": 30
                },
                "param_3": {
                    "envp": 2,
                    "max_string_length": 1,
                    "program_name": 1
                },
                "param_4": {
                    "ignored": 1,
                    "is_directory": 1,
                    "mode": 1,
                    "option": 1
                },
                "param_5": {
                    "file": 1,
                    "optstring": 1,
                    "program_name": 1
                },
                "pbVar1": {
                    "byte_ptr": 2,
                    "byte_ptr1": 7,
                    "current_byte": 4,
                    "current_char": 1,
                    "next_pointer": 1,
                    "pb": 1,
                    "ptr1": 5,
                    "ptr_byte1": 3
                },
                "pbVar19": {
                    "buffer2": 1,
                    "byte_pointer": 1,
                    "byte_ptr": 2,
                    "byte_ptr19": 1,
                    "byte_ptr2": 3,
                    "byte_ptr3": 3,
                    "current_byte": 1,
                    "current_byte2": 1,
                    "current_char_ptr": 1,
                    "current_line": 1,
                    "pb2": 1,
                    "ptr2": 1,
                    "ptr_byte19": 1,
                    "ptr_byte3": 1,
                    "string_ptr": 1,
                    "temp_byte_pointer": 1
                },
                "pbVar23": {
                    "buffer3": 1,
                    "byte_ptr2": 2,
                    "byte_ptr23": 1,
                    "byte_ptr3": 4,
                    "byte_ptr4": 3,
                    "char_ptr": 1,
                    "current_byte": 1,
                    "current_byte3": 1,
                    "current_char": 2,
                    "current_character": 1,
                    "dest_pointer": 1,
                    "pb3": 1,
                    "prev_byte": 1,
                    "ptr3": 1,
                    "ptr_byte23": 1,
                    "ptr_byte4": 2,
                    "string_ptr": 1,
                    "temp_byte_pointer2": 1
                },
                "pcVar20": {
                    "char_ptr1": 2,
                    "char_ptr20": 1,
                    "err_msg": 1,
                    "file": 1,
                    "file_name": 2,
                    "filename": 3,
                    "format_str": 1,
                    "path": 1,
                    "pc": 1,
                    "ptr_char1": 1,
                    "ptr_char20": 1,
                    "str": 1,
                    "str_ptr2": 1,
                    "str_var": 1,
                    "string_ptr": 1,
                    "string_var2": 1,
                    "temp_string": 2,
                    "temp_string_pointer": 1
                },
                "pcVar24": {
                    "char_ptr1": 2,
                    "char_ptr2": 2,
                    "char_ptr24": 1,
                    "err_msg2": 1,
                    "error_message": 1,
                    "error_string": 2,
                    "message3": 1,
                    "pc2": 1,
                    "ptr_char1": 1,
                    "ptr_char2": 1,
                    "ptr_char24": 1,
                    "str2": 1,
                    "str_var2": 1,
                    "string_ptr2": 1,
                    "string_var3": 1,
                    "temp_string2": 1,
                    "warning": 1,
                    "warning_message": 5,
                    "warning_msg": 1
                },
                "perror": {
                    "perror": 1,
                    "print_error": 2,
                    "show_error": 1
                },
                "piVar15": {
                    "err_var": 1,
                    "errno": 1,
                    "errno_location": 3,
                    "errno_ptr": 7,
                    "int_ptr": 2,
                    "int_ptr1": 3,
                    "int_ptr15": 1,
                    "pi": 1,
                    "ptr_int1": 1,
                    "ptr_int15": 1,
                    "ptr_int_var": 1,
                    "temp_int_pointer": 1,
                    "temp_int_ptr": 1
                },
                "plVar12": {
                    "arg_ptr": 1,
                    "args": 1,
                    "args_ptr": 1,
                    "argv": 1,
                    "current_arg": 1,
                    "current_argv": 3,
                    "current_file": 1,
                    "current_pointer": 1,
                    "file_info_array": 1,
                    "file_paths": 2,
                    "files": 1,
                    "long_ptr1": 1,
                    "long_ptr12": 1,
                    "param_array": 1,
                    "param_ptr": 2,
                    "pl": 1,
                    "processed_args": 1,
                    "ptr2": 2,
                    "ptr_long1": 2,
                    "ptr_long12": 1,
                    "ptr_var": 1,
                    "strings": 1,
                    "temp_pointer": 1
                },
                "plVar16": {
                    "args": 1,
                    "args_ptr2": 1,
                    "argv": 3,
                    "current_argv": 1,
                    "current_argv2": 1,
                    "current_line": 1,
                    "file_arr": 1,
                    "file_info_array": 1,
                    "files": 2,
                    "long_ptr16": 1,
                    "long_ptr2": 1,
                    "long_ptr3": 1,
                    "new_pointer": 1,
                    "param_ptr2": 1,
                    "pl2": 1,
                    "ptr3": 2,
                    "ptr_long16": 1,
                    "ptr_long3": 1,
                    "temp_ptr": 1,
                    "temp_ptr1": 1
                },
                "plVar18": {
                    "arg_ptr2": 1,
                    "current_line_ptr": 1,
                    "current_string": 1,
                    "extracted_string": 1,
                    "long_ptr18": 1,
                    "long_ptr3": 1,
                    "long_ptr4": 1,
                    "new_pointer2": 1,
                    "pl_var18": 1,
                    "ptr4": 2,
                    "ptr_long18": 1,
                    "ptr_long4": 1,
                    "src_ptr": 1,
                    "string_pointer": 1,
                    "strings_ptr2": 1,
                    "temp_ptr2": 1,
                    "tmp_long_var2": 1
                },
                "ppuVar21": {
                    "arg_ptr_ptr": 1,
                    "current_arg": 2,
                    "err_msg_ptr": 1,
                    "index": 1,
                    "opt_arg": 1,
                    "optarg": 1,
                    "optarg_ptr": 2,
                    "pointer_to_variable": 1,
                    "ppu": 1,
                    "ptr5": 1,
                    "ptr_ptr": 2,
                    "ptr_ptr1": 1,
                    "ptr_ptr_to_undef21": 1,
                    "ptr_to_ptr": 2,
                    "temp_double_pointer": 1,
                    "temp_pointer_pointer": 1,
                    "undefined_ptr1": 1,
                    "undefined_ptr_ptr1": 1,
                    "undefined_ptr_ptr21": 1
                },
                "printf": {
                    "printf": 1
                },
                "program_name": {
                    "program_name": 1
                },
                "ptr_argv": {
                    "argv": 1
                },
                "puVar26": {
                    "bfd_file": 1,
                    "optarg_ptr": 1,
                    "pointer_to_variable": 1,
                    "ptr": 1,
                    "ptr5": 1,
                    "ptr7": 1,
                    "ptr_ptr2": 1,
                    "ptr_to_undef26": 1,
                    "ptr_u_long": 1,
                    "ptr_u_long1": 1,
                    "pu": 1,
                    "section_ptr": 2,
                    "temp_u_var_pointer": 1,
                    "ulong_ptr": 2,
                    "undefined8_ptr": 1,
                    "undefined8_ptr1": 4,
                    "undefined8_ptr26": 1
                },
                "quiet_mode": {
                    "quiet_mode": 1
                },
                "realloc": {
                    "reallocate_memory": 1
                },
                "report": {
                    "print_report": 1,
                    "report": 1,
                    "show_report": 1
                },
                "sVar10": {
                    "bytes_read": 12,
                    "read_size": 4,
                    "size2": 2,
                    "size_t_var": 1,
                    "size_var10": 2,
                    "size_var2": 6,
                    "temp_size2": 1
                },
                "sVar9": {
                    "buffer_size": 1,
                    "file_size": 15,
                    "size1": 2,
                    "size_t_var": 1,
                    "size_var1": 6,
                    "size_var9": 2,
                    "temp_size": 1
                },
                "section_data": {
                    "section_data": 1
                },
                "section_ptr": {
                    "section_ptr": 1
                },
                "setlocale": {
                    "set_locale": 2,
                    "setlocale": 1
                },
                "show_version": {
                    "show_version": 1
                },
                "sprintf": {
                    "sprintf": 1
                },
                "stat": {
                    "get_file_info": 1,
                    "get_file_status": 1,
                    "get_stat": 1,
                    "stat": 1
                },
                "str_ptr": {
                    "str_ptr": 1
                },
                "strchr": {
                    "strchr": 1
                },
                "strcmp": {
                    "compare_strings": 2,
                    "strcmp": 1
                },
                "strcpy": {
                    "strcpy": 1
                },
                "stream": {
                    "stream": 1
                },
                "strerror": {
                    "get_error_string": 1,
                    "get_string_error": 1
                },
                "string_ptr": {
                    "string_ptr": 1
                },
                "strings_array": {
                    "strings_array": 1
                },
                "strlen": {
                    "strlen": 1
                },
                "strncmp": {
                    "compare_n_strings": 1,
                    "strncmp": 1
                },
                "strstr": {
                    "strstr": 1
                },
                "strtoul": {
                    "string_to_unsigned": 1,
                    "strtoul": 1
                },
                "suppress_warnings": {
                    "suppress_warnings": 1
                },
                "target_architecture": {
                    "target_architecture": 1
                },
                "textdomain": {
                    "set_text_domain": 1,
                    "text_domain": 2,
                    "textdomain": 1
                },
                "uVar13": {
                    "i": 1,
                    "length": 1,
                    "length2": 1,
                    "mask": 1,
                    "min_string_length": 2,
                    "string_length": 1,
                    "temp_u_long": 3,
                    "temp_ulong": 1,
                    "tmp_ulong_var1": 1,
                    "u3": 1,
                    "ulong_var": 5,
                    "ulong_var1": 5,
                    "ulong_var13": 2,
                    "unsigned_result": 1,
                    "value": 2
                },
                "uVar14": {
                    "error_message": 4,
                    "error_string": 1,
                    "message": 1,
                    "message_var1": 1,
                    "msg": 2,
                    "string1": 1,
                    "string_var1": 1,
                    "temp_string": 1,
                    "temp_u_long2": 1,
                    "temp_u_var": 1,
                    "temp_unsigned_long": 1,
                    "tmp_ulong_var2": 1,
                    "u4": 1,
                    "uint_var14": 1,
                    "ulong_var2": 4,
                    "undefined8_var": 1,
                    "undefined8_var14": 1,
                    "unused_var1": 1
                },
                "uVar17": {
                    "err_msg": 1,
                    "message2": 1,
                    "msg2": 1,
                    "string2": 1,
                    "temp_long_var": 1,
                    "temp_u_var2": 1,
                    "tmp_ulong_var3": 1,
                    "uint_var17": 1,
                    "ulong_var3": 3,
                    "undefined8_var": 1,
                    "unused_var2": 1
                },
                "uVar6": {
                    "count": 6,
                    "count_var1": 1,
                    "counter": 1,
                    "current_value": 1,
                    "file_count": 1,
                    "index": 3,
                    "temp_u_int": 3,
                    "temp_var": 1,
                    "u1": 1,
                    "uint_var": 3,
                    "uint_var1": 1,
                    "uint_var6": 3
                },
                "uVar8": {
                    "bfd_error": 2,
                    "error": 2,
                    "error_code": 2,
                    "error_type": 1,
                    "result": 2,
                    "result_var1": 1,
                    "temp_u_int2": 2,
                    "temp_u_var": 1,
                    "u2": 1,
                    "uint_var": 1,
                    "uint_var2": 3,
                    "uint_var8": 3
                },
                "unaff_R12": {
                    "current_file_index": 1,
                    "current_file_info": 1,
                    "file_arr_ptr": 1,
                    "file_names": 1,
                    "file_paths_index": 1,
                    "index_variable": 1,
                    "long_ptr4": 1,
                    "long_ptr5": 1,
                    "long_ptr_unaff_r12": 1,
                    "loop_var_ptr": 1,
                    "optind_ptr": 1,
                    "ptr1": 1,
                    "ptr4": 1,
                    "ptr6": 1,
                    "ptr_long5": 2,
                    "ptr_unaff_r12": 1,
                    "temp_param_ptr": 1,
                    "temp_u_long_pointer": 1,
                    "unaff1": 1,
                    "unaff_param1": 1,
                    "unaff_ptr": 1
                },
                "unicode_output": {
                    "unicode_output": 1
                },
                "usage": {
                    "print_usage": 1,
                    "show_usage": 1,
                    "usage": 1
                },
                "value": {
                    "value": 1
                },
                "warning_message": {
                    "warning_message": 1
                },
                "xdup": {
                    "xstrdup": 1
                },
                "xexit": {
                    "exit": 1,
                    "exit_program": 2,
                    "exit_program_with_status": 1
                },
                "xfree": {
                    "xfree": 1
                },
                "xmalloc": {
                    "alloc_memory": 1,
                    "allocate_memory": 1,
                    "malloc_memory": 1,
                    "xmalloc": 1
                },
                "xmalloc_set_program_name": {
                    "set_program_name": 3,
                    "set_xmalloc_program_name": 1,
                    "xmalloc_set_program_name": 1
                },
                "xrealloc": {
                    "realloc_memory": 1,
                    "reallocate_memory": 2,
                    "xrealloc": 1
                },
                "xstrdup": {
                    "duplicate_string": 3,
                    "xstrdup": 1
                }
            },
            "called": [
                "FUN_00102040",
                "FUN_00102080",
                "FUN_001020b0",
                "FUN_001020c0",
                "FUN_00103240",
                "FUN_00102200",
                "FUN_00102110",
                "FUN_001020d0",
                "FUN_00104a60",
                "FUN_00102090",
                "FUN_001022c0",
                "FUN_00102290",
                "FUN_00102050",
                "FUN_00102060",
                "FUN_001021e0",
                "FUN_001021f0",
                "FUN_00102100",
                "FUN_00102120",
                "FUN_001020e0",
                "FUN_00102230",
                "FUN_001030c0",
                "FUN_00102190",
                "FUN_001022a0",
                "FUN_00102170",
                "FUN_00102240",
                "FUN_001020a0",
                "FUN_00102210",
                "FUN_00102260",
                "FUN_00102300",
                "FUN_00102280",
                "FUN_001022e0",
                "FUN_001021b0",
                "FUN_00102130",
                "FUN_001021c0",
                "FUN_001020f0",
                "FUN_00102160",
                "FUN_00103910",
                "FUN_00102250",
                "FUN_00102220",
                "FUN_00102310",
                "FUN_00102180",
                "FUN_00102270",
                "FUN_001022d0"
            ],
            "calling": [
                "FUN_001039b0"
            ],
            "code": "\n\n\n\nFILE * extract_strings_from_file_00103aa0(int argc,long *argv)\n\n{\n  byte *byte_ptr1;\n  byte byte_var2;\n  byte byte_var3;\n  char char_var;\n  int index;\n  uint count;\n  int int_var7;\n  undefined4 uint_var8;\n  FILE *file_stream;\n  size_t file_size;\n  size_t bytes_read;\n  byte *buffer;\n  long long_var1;\n  long *current_argv;\n  ulong ulong_var1;\n  long *strings;\n  undefined8 ulong_var2;\n  FILE *file_stream2;\n  int *errno_ptr;\n  long *argv;\n  undefined8 ulong_var3;\n  long *ptr4;\n  byte *byte_ptr3;\n  char *filename;\n  undefined **optarg_ptr;\n  long long_var2;\n  byte *byte_ptr3;\n  char *warning_message;\n  bool bool_var1;\n  long *ptr_long5;\n  undefined8 *undefined8_ptr1;\n  bool bool_var2;\n  bool bool_var3;\n  long *file_paths_index;\n  undefined8 target;\n  undefined8 buffer;\n  ulong max_files;\n  size_t buffer_size;\n  long long_var3;\n  char *error_message;\n  void *section_data;\n  get_file_status file_stat;\n  \n  set_locale(6,\"\");\n  bind_text_domain(\"binutils\",\"/usr/share/locale\");\n  text_domain(\"binutils\");\n  DAT_00108378 = *argv;\n  set_program_name();\n  set_bfd_error_program_name(DAT_00108378);\n  argv = argv;\n  if (argc < 2) goto LAB_00103fa6;\n  max_files = 2000;\n  ptr_long5 = (long *)0x1;\n  target = (long *)0x0;\n  current_argv = argv;\n  do {\n    int_var7 = (int)ptr_long5;\n    optarg_ptr = (undefined **)(long)int_var7;\n    file_paths_index = (long *)((long)optarg_ptr * 8);\n    argv = current_argv;\n    if (*(char *)current_argv[(long)optarg_ptr] == '@') {\n      count = (int)max_files - 1;\n      max_files = (ulong)count;\n      if (count == 0) {\n        long_var1 = *current_argv;\n        filename = \"%s: error: too many @-files encountered\\n\";\n        goto LAB_001044b1;\n      }\n      filename = (char *)current_argv[(long)optarg_ptr] + 1;\n      index = get_file_status(filename,&file_stat);\n      if (-1 < index) {\n        if ((file_stat.st_mode & 0xf000) == 0x4000) {\n          do {\n            long_var1 = *current_argv;\n            filename = \"%s: error: @-file refers to a directory\\n\";\nLAB_001044b1:\n            fprintf(standard_error,filename,long_var1);\n            exit_program(1);\n          } while( true );\n        }\n        file_stream = open_file(filename,\"r\");\n        if (file_stream != (FILE *)0x0) {\n          index = seek_file(file_stream,0,2);\n          if (((index != -1) && (file_size = tell_file(file_stream), file_size != 0xffffffffffffffff)) &&\n             (index = seek_file(file_stream,0,0), index != -1)) {\n            buffer = (byte *)malloc_memory(file_size + 1);\n            bytes_read = read_file(buffer,1,file_size,file_stream);\n            if ((file_size == bytes_read) || (index = check_file_error(file_stream), index == 0)) {\n              buffer[bytes_read] = 0;\n              byte_var3 = *buffer;\n              byte_ptr3 = buffer;\n              while( true ) {\n                if (byte_var3 == 0) goto LAB_001040fd;\n                if (((&_sch_istable)[(ulong)byte_var3 * 2] & 0x40) == 0) break;\n                byte_var3 = byte_ptr3[1];\n                byte_ptr3 = byte_ptr3 + 1;\n              }\n              file_size = strlen((char *)buffer);\n              buffer = (byte *)malloc_memory(file_size + 1);\n              strings = (long *)0x0;\n              index = 0;\n              long_var3 = 0;\n              bool_var1 = false;\n              bool_var3 = false;\n              bool_var2 = false;\n              byte_ptr3 = buffer;\n              do {\n                while (((&_sch_istable)[(ulong)*byte_ptr3 * 2] & 0x40) != 0) {\n                  byte_ptr3 = byte_ptr3 + 1;\n                }\n                if ((index == 0) || (index + -1 <= (int)long_var3)) {\n                  if (strings == (long *)0x0) {\n                    index = 8;\n                    strings = (long *)malloc_memory(0x40);\n                    ptr4 = strings + long_var3;\n                    *ptr4 = 0;\n                  }\n                  else {\n                    index = index * 2;\n                    strings = (long *)reallocate_memory(strings,(long)index << 3);\n                    ptr4 = strings + long_var3;\n                    *ptr4 = 0;\n                  }\n                }\n                else {\n                  ptr4 = strings + long_var3;\n                }\n                byte_var3 = *byte_ptr3;\n                byte_ptr3 = buffer;\n                while (byte_var3 != 0) {\n                  while( true ) {\n                    if ((((&_sch_istable)[(ulong)byte_var3 * 2] & 0x40) != 0) &&\n                       (!(bool)(bool_var3 | bool_var2 | bool_var1))) {\n                      bool_var2 = false;\n                      bool_var1 = false;\n                      bool_var3 = false;\n                      goto LAB_00103d4f;\n                    }\n                    if (!bool_var2) break;\n                    byte_ptr3 = byte_ptr3 + 1;\n                    *byte_ptr3 = byte_var3;\n                    byte_ptr3 = byte_ptr3 + 1;\n                    bool_var2 = false;\n                    byte_var3 = *byte_ptr3;\n                    if (byte_var3 == 0) goto LAB_00103d4f;\n                  }\n                  if (byte_var3 == 0x5c) {\n                    bool_var2 = true;\n                  }\n                  else if (bool_var3) {\n                    if (byte_var3 == 0x27) {\n                      bool_var3 = false;\n                    }\n                    else {\nLAB_00103ec8:\n                      *byte_ptr3 = byte_var3;\n                      byte_ptr3 = byte_ptr3 + 1;\n                    }\n                  }\n                  else if (bool_var1) {\n                    if (byte_var3 != 0x22) goto LAB_00103ec8;\n                    bool_var1 = false;\n                  }\n                  else if (byte_var3 == 0x27) {\n                    bool_var3 = true;\n                  }\n                  else {\n                    if (byte_var3 != 0x22) goto LAB_00103ec8;\n                    bool_var1 = true;\n                  }\n                  byte_ptr1 = byte_ptr3 + 1;\n                  byte_ptr3 = byte_ptr3 + 1;\n                  byte_var3 = *byte_ptr1;\n                }\nLAB_00103d4f:\n                *byte_ptr3 = 0;\n                long_var1 = duplicate_string(buffer);\n                *ptr4 = long_var1;\n                strings[long_var3 + 1] = 0;\n                byte_var3 = *byte_ptr3;\n                byte_var2 = (&_sch_istable)[(ulong)byte_var3 * 2];\n                while ((byte_var2 & 0x40) != 0) {\n                  byte_var3 = byte_ptr3[1];\n                  byte_ptr3 = byte_ptr3 + 1;\n                  byte_var2 = (&_sch_istable)[(ulong)byte_var3 * 2];\n                }\n                long_var3 = long_var3 + 1;\n                if (byte_var3 == 0) {\n                  free_memory(buffer);\n                  if (current_argv == argv) goto LAB_0010411e;\n                  goto LAB_00103dea;\n                }\n              } while( true );\n            }\n            free_memory(buffer);\n          }\n          close_file(file_stream);\n        }\n      }\n    }\n    if (argc <= int_var7 + 1) {\nLAB_00103fa6:\n      DAT_00108373 = 0;\n      file_stream = (FILE *)0x0;\n      DAT_00108372 = 0;\n      optarg_ptr = &PTR_DAT_001081a0;\n      DAT_00108374 = 4;\n      DAT_00108371 = 0;\n      DAT_00108370 = '\\0';\n      DAT_00108368 = (long *)0x0;\n      DAT_00108360 = 's';\n      DAT_00108358 = (long *)0x0;\n      filename = \"adfhHn:wot:e:T:s:U:Vv0123456789\";\nLAB_00103ff6:\n      while( true ) {\n        int_var7 = (int)ptr_long5;\n        index = get_long_option(argc,argv,filename);\n        if (index == -1) break;\n        current_argv = (long *)filename;\n        switch(index) {\n        case 0x3f:\n          goto switchoption_unknown;\n        case 0x48:\n        case 0x68:\nswitchD_00104029_caseD_48:\n          show_usage(standard_output,0);\n          goto LAB_001044f5;\n        case 0x54:\nswitchoption_target:\n          ptr_long5 = (long *)&optarg;\n          DAT_00108368 = option_argument;\n          break;\n        case 0x55:\nswitchoption_unichtt:\n          ptr_long5 = option_argument;\n          int_var7 = compare_strings((char *)option_argument,\"default\");\n          if ((int_var7 == 0) || (int_var7 = compare_strings((char *)ptr_long5,\"d\"), int_var7 == 0)) {\n            DAT_00108350 = 0;\n          }\n          else {\n            int_var7 = compare_strings((char *)ptr_long5,\"locale\");\n            if ((int_var7 == 0) || (int_var7 = compare_strings((char *)ptr_long5,\"l\"), int_var7 == 0)) {\n              DAT_00108350 = 1;\n            }\n            else {\n              int_var7 = compare_strings((char *)ptr_long5,\"escape\");\n              if ((int_var7 == 0) || (int_var7 = compare_strings((char *)ptr_long5,\"e\"), int_var7 == 0)) {\n                DAT_00108350 = 2;\n              }\n              else {\n                int_var7 = compare_strings((char *)ptr_long5,\"invalid\");\n                if ((int_var7 == 0) || (int_var7 = compare_strings((char *)ptr_long5,\"i\"), int_var7 == 0)) {\n                  DAT_00108350 = 5;\n                }\n                else {\n                  int_var7 = compare_strings((char *)ptr_long5,\"hex\");\n                  if ((int_var7 == 0) || (int_var7 = compare_strings((char *)ptr_long5,\"x\"), int_var7 == 0)) {\n                    DAT_00108350 = 3;\n                  }\n                  else {\n                    int_var7 = compare_strings((char *)ptr_long5,\"highlight\");\n                    if ((int_var7 != 0) && (int_var7 = compare_strings((char *)ptr_long5,\"h\"), int_var7 != 0)) {\n                      ulong_var2 = get_translated_message(0,\"invalid argument to -U/--unicode: %s\",5);\n                      show_fatal_error(ulong_var2);\n                      show_report();\n                      exit_program(1);\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                      halt_data();\n                    }\n                    DAT_00108350 = 4;\n                  }\n                }\n              }\n            }\n          }\n          break;\n        case 0x56:\n        case 0x76:\nswitchD_00104029_caseD_56:\n          printf(\"GNU %s %s\\n\",\"strings\",\"(GNU Binutils for Debian) 2.40\");\n          filename = (char *)get_translated_message(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n          printf(filename);\n          filename = (char *)get_translated_message(0,\n                                      \"This program is free_memory software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                                      ,5);\n          printf(filename);\n                    \n          exit_program(0);\n        case 0x61:\n          goto switchD_00104029_caseD_61;\n        case 100:\nswitchD_00104029_caseD_64:\n          DAT_00108370 = '\\x01';\n          break;\n        case 0x65:\n          ptr_long5 = (long *)&optarg;\n          int_var7 = 0x109108;\n          if (*(char *)((long)option_argument + 1) != '\\0') goto switchoption_unknown;\n          DAT_00108360 = *(char *)option_argument;\n          index = get_long_option(argc,argv,filename);\n          if (index == -1) goto LAB_0010407f;\n          switch(index) {\n          case 0x3f:\n            goto switchoption_unknown;\n          case 0x48:\n          case 0x68:\n            goto switchD_00104029_caseD_48;\n          case 0x54:\n            goto switchoption_target;\n          case 0x55:\n            goto switchoption_unichtt;\n          case 0x56:\n          case 0x76:\n            goto switchD_00104029_caseD_56;\n          case 0x61:\n            goto switchD_00104029_caseD_61;\n          case 100:\n            goto switchD_00104029_caseD_64;\n          case 0x65:\nswitchD_00104201_caseD_65:\n            if (*(char *)((long)option_argument + 1) != '\\0') goto switchoption_unknown;\n            DAT_00108360 = *(char *)option_argument;\n            index = get_long_option(argc,argv,filename);\n            if (index == -1) goto LAB_0010407f;\n            switch(index) {\n            case 0x3f:\n              goto switchoption_unknown;\n            default:\n              break;\n            case 0x48:\n            case 0x68:\n              goto switchD_00104029_caseD_48;\n            case 0x54:\n              goto switchoption_target;\n            case 0x55:\n              goto switchoption_unichtt;\n            case 0x56:\n            case 0x76:\n              goto switchD_00104029_caseD_56;\n            case 0x61:\n              goto switchD_00104029_caseD_61;\n            case 100:\n              goto switchD_00104029_caseD_64;\n            case 0x65:\n              goto switchD_00104201_caseD_65;\n            case 0x66:\n              goto switchD_00104029_caseD_66;\n            case 0x6e:\n              goto switchD_00104201_caseD_6e;\n            case 0x6f:\n              goto switchD_00104029_caseD_6f;\n            case 0x73:\n              goto switchoption_color;\n            case 0x74:\n              goto switchD_00104201_caseD_74;\n            case 0x77:\n              goto switchD_00104029_caseD_77;\n            }\n          case 0x66:\n            goto switchD_00104029_caseD_66;\n          case 0x6e:\n            goto switchD_00104201_caseD_6e;\n          case 0x6f:\n            goto switchD_00104029_caseD_6f;\n          case 0x73:\n            goto switchoption_color;\n          case 0x74:\n            goto switchD_00104201_caseD_74;\n          case 0x77:\n            goto switchD_00104029_caseD_77;\n          }\n        default:\n          file_stream = (FILE *)(ulong)option_index;\n          break;\n        case 0x66:\nswitchD_00104029_caseD_66:\n          DAT_00108371 = 1;\n          break;\n        case 0x6e:\nswitchD_00104201_caseD_6e:\n          ptr_long5 = (long *)&optarg;\n          ulong_var1 = string_to_unsigned((char *)option_argument,&error_message,0);\n          DAT_00108374 = (int)ulong_var1;\n          if ((error_message != (char *)0x0) && (current_argv = option_argument, *error_message != '\\0')) {\nLAB_001042e6:\n            ulong_var2 = get_translated_message(0,\"invalid integer argument %s\",5);\n            show_fatal_error(ulong_var2,current_argv);\n            goto switchoption_color;\n          }\n          break;\n        case 0x6f:\nswitchD_00104029_caseD_6f:\n          DAT_00108372 = 1;\n          DAT_00108354 = 8;\n          break;\n        case 0x73:\nswitchoption_color:\n          ptr_long5 = (long *)&optarg;\n          DAT_00108358 = option_argument;\n          filename = (char *)current_argv;\n          break;\n        case 0x74:\nswitchD_00104201_caseD_74:\n          ptr_long5 = (long *)&optarg;\n          int_var7 = 0x109108;\n          DAT_00108372 = 1;\n          if (*(char *)((long)option_argument + 1) != '\\0') goto switchoption_unknown;\n          char_var = *(char *)option_argument;\n          if (char_var == 'o') {\n            DAT_00108354 = 8;\n          }\n          else if (char_var == 'x') {\n            DAT_00108354 = 0x10;\n          }\n          else {\n            if (char_var != 'd') goto switchoption_unknown;\n            DAT_00108354 = 10;\n          }\n          break;\n        case 0x77:\n          goto switchD_00104029_caseD_77;\n        }\n      }\nLAB_0010407f:\n      if (DAT_00108350 != 0) {\n        DAT_00108360 = 'S';\n      }\n      if ((int)file_stream != 0) {\nLAB_001044f5:\n        filename = (char *)(argv + (long)(int)file_stream + -1);\n        ulong_var1 = string_to_unsigned((char *)(*(long *)filename + 1),&error_message,0);\n        DAT_00108374 = (int)ulong_var1;\n        if ((error_message != (char *)0x0) && (*error_message != '\\0')) {\n          current_argv = (long *)(*(long *)filename + 1);\n          goto LAB_001042e6;\n        }\n      }\n      int_var7 = (int)ptr_long5;\n      if (DAT_00108374 == 0) {\n        ulong_var2 = get_translated_message(0,\"invalid minimum string length %d\",5);\n        show_fatal_error(ulong_var2,0);\nswitchD_00104029_caseD_61:\n        DAT_00108370 = '\\0';\n        goto LAB_00103ff6;\n      }\n      if (0x31 < (byte)(DAT_00108360 + 0xbeU)) goto switchoption_unknown;\n      ulong_var1 = 1L << (DAT_00108360 + 0xbeU & 0x3f);\n      if ((ulong_var1 & 0x2000000020000) == 0) {\n        if ((ulong_var1 & 0x401) == 0) {\n          if ((ulong_var1 & 0x40100000000) == 0) goto switchoption_unknown;\n          DAT_0010834c = 2;\n        }\n        else {\n          DAT_0010834c = 4;\n        }\n      }\n      else {\n        DAT_0010834c = 1;\n      }\n      int_var7 = initialize_bfd();\n      if (int_var7 == 0x118) {\n        filename = \"x86_64-pc-linux-gnu\";\n        count = set_default_target(\"x86_64-pc-linux-gnu\");\n        if ((char)count != '\\0') {\n          optarg_ptr = (undefined **)&optind;\n          if (argc <= (int)option_index) {\n            DAT_00108370 = 0;\n            print_strings(\"{standard input}\",standard_input,0,0,0);\n            return (FILE *)0x0;\n          }\n          ulong_var1 = 0;\n          file_stream = (FILE *)0x0;\n          current_argv = (long *)(ulong)count;\n          count = option_index;\n          file_paths_index = argv;\n          goto LAB_001043b8;\n        }\n        uint_var8 = get_bfd_error();\n        optarg_ptr = (undefined **)get_bfd_error_message(uint_var8);\n        ulong_var2 = get_translated_message(0,\"can\\'t set BFD default target to `%s\\': %s\",5);\n        show_fatal_error(ulong_var2,\"x86_64-pc-linux-gnu\",optarg_ptr);\n      }\n      ulong_var2 = get_translated_message(0,\"show_fatal_error error: libbfd ABI mismatch\",5);\n      show_fatal_error(ulong_var2);\n      current_argv = argv;\nLAB_0010462b:\n      warning_message = \"Warning: \\'%s\\' is a directory\";\nLAB_00104637:\n      ulong_var2 = get_translated_message(0,warning_message,5);\n      non_show_fatal_error(ulong_var2,filename);\n      count = 0;\n      do {\n        while( true ) {\n          ulong_var1 = (ulong)current_argv & 0xffffffff;\n          file_stream = (FILE *)(ulong)((uint)file_stream | (count ^ 1) & 0xff);\n          while( true ) {\n            int_var7 = (int)ulong_var1;\n            count = *(uint *)optarg_ptr + 1;\n            *(uint *)optarg_ptr = count;\n            if (argc <= (int)count) {\n              argv = current_argv;\n              if ((char)ulong_var1 != '\\0') {\n                return file_stream;\n              }\n              goto switchoption_unknown;\n            }\nLAB_001043b8:\n            filename = (char *)file_paths_index[(int)count];\n            int_var7 = compare_strings(filename,\"-\");\n            if (int_var7 != 0) break;\n            DAT_00108370 = '\\0';\n          }\n          int_var7 = get_file_status(filename,&file_stat);\n          if (int_var7 < 0) break;\n          if ((file_stat.st_mode & 0xf000) == 0x4000) goto LAB_0010462b;\n          if ((DAT_00108370 == '\\0') ||\n             (argv = (long *)open_bfd(filename,DAT_00108368), argv == (long *)0x0)) {\nLAB_00104416:\n            file_stream2 = open_file(filename,\"r\");\n            if (file_stream2 != (FILE *)0x0) {\n              print_strings(filename,file_stream2,0,0,0);\n              int_var7 = close_file(file_stream2);\n              if (int_var7 != -1) goto LAB_00104454;\n            }\n            fprintf(standard_error,\"%s: \",DAT_00108378);\n            print_error(filename);\n            count = 0;\n          }\n          else {\n            char_var = check_bfd_format(argv,1);\n            if (char_var == '\\0') {\n              close_bfd();\n              target = argv;\n              goto LAB_00104416;\n            }\n            undefined8_ptr1 = (undefined8 *)argv[0x12];\n            target = (long *)((ulong)argv & 0xffffffffffffff00);\n            buffer = (byte *)CONCAT44(buffer._4_4_,argc);\n            for (; undefined8_ptr1 != (undefined8 *)0x0; undefined8_ptr1 = (undefined8 *)undefined8_ptr1[1]) {\n              char_var = (char)target;\n              if (((*(uint *)((long)undefined8_ptr1 + 0x24) & 0x103) == 0x103) &&\n                 (max_files = undefined8_ptr1[8], max_files != 0)) {\n                char_var = malloc_and_get_section(argv,undefined8_ptr1,&section_data);\n                if (char_var == '\\0') {\n                  uint_var8 = get_bfd_error();\n                  max_files = get_bfd_error_message(uint_var8);\n                  ulong_var2 = *undefined8_ptr1;\n                  ulong_var3 = get_translated_message(0,\"%s: Reading section %s failed: %s\",5);\n                  non_show_fatal_error(ulong_var3,filename,ulong_var2);\n                  char_var = (char)target;\n                }\n                else {\n                  print_strings(filename,0,undefined8_ptr1[0x10],max_files,section_data);\n                  free_memory(section_data);\n                }\n              }\n              target = (long *)CONCAT71(target._1_7_,char_var);\n            }\n            current_argv = (long *)((ulong)current_argv & 0xff);\n            char_var = close_bfd(argv);\n            if (char_var == '\\0') {\n              int_var7 = get_bfd_error();\n              if (int_var7 == 0) {\n                ulong_var2 = get_translated_message(0,\"cause of error unknown\",5);\n                fflush(standard_output);\n              }\n              else {\n                ulong_var2 = get_bfd_error_message();\n                fflush(standard_output);\n              }\n              fprintf(standard_error,\"%s: %s: %s\\n\",DAT_00108378,filename,ulong_var2);\n              goto LAB_00104416;\n            }\n            bool_var3 = (char)target == '\\0';\n            if (bool_var3) goto LAB_00104416;\nLAB_00104454:\n            count = (uint)current_argv;\n          }\n        }\n        errno_ptr = get_errno_location();\n        warning_message = \"\\'%s\\': No such file\";\n        if (*errno_ptr == 2) goto LAB_00104637;\n        warning_message = get_error_string(*errno_ptr);\n        ulong_var2 = get_translated_message(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n        non_show_fatal_error(ulong_var2,filename,warning_message);\n        count = 0;\n      } while( true );\n    }\n    count = int_var7 + 1;\n    target = ptr_long5;\nLAB_00103eac:\n    ptr_long5 = (long *)(ulong)count;\n  } while( true );\nswitchD_00104029_caseD_77:\n  DAT_00108373 = 1;\n  goto LAB_00103ff6;\nswitchoption_unknown:\n  show_usage(standard_error);\nLAB_001040fd:\n  strings = (long *)malloc_memory(8);\n  *strings = 0;\n  if (argv == argv) {\nLAB_0010411e:\n    if (*argv == 0) {\n      index = 0;\n    }\n    else {\n      long_var1 = 1;\n      do {\n        index = (int)long_var1;\n        current_argv = argv + long_var1;\n        long_var1 = long_var1 + 1;\n      } while (*current_argv != 0);\n    }\n    long_var2 = 0;\n    current_argv = (long *)malloc_memory((long)(index + 1) << 3);\n    long_var1 = *argv;\n    while (long_var1 != 0) {\n      ulong_var2 = duplicate_string();\n      *(undefined8 *)((long)current_argv + long_var2) = ulong_var2;\n      long_var2 = long_var2 + 8;\n      long_var1 = *(long *)((long)argv + long_var2);\n    }\n    *(undefined8 *)((long)current_argv + long_var2) = 0;\nLAB_00103dea:\n    argv = current_argv;\n    if (*strings != 0) {\n      long_var1 = 0;\n      do {\n        long_var1 = long_var1 + 1;\n      } while (strings[long_var1] != 0);\n      buffer_size = long_var1 * 8;\n      index = argc;\n      goto LAB_00103e18;\n    }\n  }\n  long_var1 = 0;\n  buffer_size = 0;\n  index = argc;\nLAB_00103e18:\n  free_memory((void *)argv[(long)optarg_ptr]);\n  current_argv = (long *)reallocate_memory(argv,(long_var1 + 1 + (long)index) * 8);\n  argc = index + -1 + (int)long_var1;\n  move_memory(current_argv + (long)((long)optarg_ptr + long_var1),(void *)((long)(current_argv + 1) + (long)file_paths_index),\n          (long)(index - int_var7) << 3);\n  copy_memory((void *)((long)current_argv + (long)file_paths_index),strings,buffer_size);\n  free_memory(strings);\n  free_memory(buffer);\n  close_file(file_stream);\n  count = (int)target + 1;\n  ptr_long5 = file_paths_index;\n  argv = current_argv;\n  file_paths_index = strings;\n  if ((int)count < argc) goto LAB_00103eac;\n  goto LAB_00103fa6;\n}\n\n",
            "current_name": "extract_strings_from_file_00103aa0",
            "entrypoint": "0x00103aa0",
            "imported": false,
            "improved": true,
            "renaming": {
                "D_00104029_caseD_3f": "option_unknown",
                "D_00104201_caseD_54": "option_target",
                "D_00104201_caseD_55": "option_unichtt",
                "D_00104201_caseD_73": "option_color",
                "FUN_00103aa0": "extract_strings_from_file_00103aa0",
                "__errno_location": "get_errno_location",
                "__ptr": "buffer",
                "__src": "strings",
                "__stream": "file_stream",
                "__stream_00": "file_stream2",
                "_errno_location": "errno_location",
                "_optarg": "option_argument",
                "_optind": "option_index",
                "_stderr": "standard_error",
                "_stdin": "standard_input",
                "_stdout": "standard_output",
                "bVar2": "byte_var2",
                "bVar25": "bool_var1",
                "bVar27": "bool_var2",
                "bVar28": "bool_var3",
                "bVar3": "byte_var3",
                "bfd_check_format": "check_bfd_format",
                "bfd_close": "close_bfd",
                "bfd_errmsg": "get_bfd_error_message",
                "bfd_get_error": "get_bfd_error",
                "bfd_init": "initialize_bfd",
                "bfd_malloc_and_get_section": "malloc_and_get_section",
                "bfd_openr": "open_bfd",
                "bfd_set_default_target": "set_default_target",
                "bfd_set_error_program_name": "set_bfd_error_program_name",
                "bindtextdomain": "bind_text_domain",
                "cVar4": "char_var",
                "dcgettext": "get_translated_message",
                "exit": "exit_program",
                "fatal": "show_fatal_error",
                "fclose": "close_file",
                "ferror": "check_file_error",
                "fopen": "open_file",
                "fread": "read_file",
                "free": "free_memory",
                "fseek": "seek_file",
                "ftell": "tell_file",
                "getopt_long": "get_long_option",
                "halt_baddata": "halt_data",
                "iVar5": "index",
                "iVar7": "int_var7",
                "lVar11": "long_var1",
                "lVar22": "long_var2",
                "local_110": "long_var3",
                "local_118": "buffer_size",
                "local_120": "max_files",
                "local_128": "buffer",
                "local_138": "target",
                "local_140": "file_paths_index",
                "local_c8": "file_stat",
                "local_d0": "section_data",
                "local_d8": "error_message",
                "malloc": "allocate_memory",
                "memcpy": "copy_memory",
                "memmove": "move_memory",
                "param_1": "argc",
                "param_2": "argv",
                "pbVar1": "byte_ptr1",
                "pbVar19": "byte_ptr3",
                "pbVar23": "byte_ptr3",
                "pcVar20": "filename",
                "pcVar24": "warning_message",
                "perror": "print_error",
                "piVar15": "errno_ptr",
                "plVar12": "current_argv",
                "plVar16": "argv",
                "plVar18": "ptr4",
                "ppuVar21": "optarg_ptr",
                "puVar26": "undefined8_ptr1",
                "realloc": "reallocate_memory",
                "report": "show_report",
                "sVar10": "bytes_read",
                "sVar9": "file_size",
                "setlocale": "set_locale",
                "stat": "get_file_status",
                "strcmp": "compare_strings",
                "strerror": "get_error_string",
                "strtoul": "string_to_unsigned",
                "textdomain": "text_domain",
                "uVar13": "ulong_var1",
                "uVar14": "ulong_var2",
                "uVar17": "ulong_var3",
                "uVar6": "count",
                "uVar8": "uint_var8",
                "unaff_R12": "ptr_long5",
                "usage": "show_usage",
                "xexit": "exit_program",
                "xmalloc": "malloc_memory",
                "xmalloc_set_program_name": "set_program_name",
                "xrealloc": "reallocate_memory",
                "xstrdup": "duplicate_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104a60": {
            "additional_data": {
                "FUN_00104a60": {
                    "analyze_and_report_data": 1,
                    "decompiled_function": 1,
                    "execute_and_exit": 1,
                    "execute_function": 1,
                    "execute_report_and_exit": 1,
                    "initialize_and_exit": 1,
                    "process_data": 4,
                    "report_and_exit": 15,
                    "reverse_and_report": 1
                },
                "in_AL": {
                    "character": 1,
                    "condition": 9,
                    "condition_check": 1,
                    "condition_flag": 2,
                    "flag": 7,
                    "input_flag": 3,
                    "is_error": 1,
                    "is_successful": 1,
                    "is_true": 1
                },
                "local_18": {
                    "arg8_copy": 5,
                    "config_param8_copy": 1,
                    "data_8_copy": 1,
                    "data_param_8_copy": 1,
                    "input8": 2,
                    "input8_copy": 3,
                    "input_8": 1,
                    "input_8_copy": 2,
                    "local_data8": 1,
                    "local_input8": 1,
                    "local_input_param_8": 1,
                    "local_param8": 1,
                    "local_var8": 1,
                    "local_var_8": 1,
                    "param_value8": 1,
                    "report_data_7_new": 1,
                    "report_param8": 1,
                    "saved_input8": 1,
                    "temp8": 1,
                    "temp_arg8": 1,
                    "value8": 1,
                    "variable8": 1
                },
                "local_28": {
                    "arg7_copy": 5,
                    "config_param7_copy": 1,
                    "data_7_copy": 1,
                    "data_param_7_copy": 1,
                    "input7": 2,
                    "input7_copy": 3,
                    "input_7": 1,
                    "input_7_copy": 2,
                    "local_data7": 1,
                    "local_input7": 1,
                    "local_input_param_7": 1,
                    "local_param7": 1,
                    "local_var7": 1,
                    "local_var_7": 1,
                    "param_value7": 1,
                    "report_data_6_new": 1,
                    "report_param7": 1,
                    "saved_input7": 1,
                    "temp7": 1,
                    "temp_arg7": 1,
                    "value7": 1,
                    "variable7": 1
                },
                "local_38": {
                    "arg6_copy": 5,
                    "config_param6_copy": 1,
                    "data_6_copy": 1,
                    "data_param_6_copy": 1,
                    "input6": 2,
                    "input6_copy": 3,
                    "input_6": 1,
                    "input_6_copy": 2,
                    "local_data6": 1,
                    "local_input6": 1,
                    "local_input_param_6": 1,
                    "local_param6": 1,
                    "local_var6": 1,
                    "local_var_6": 1,
                    "param_value6": 1,
                    "report_data_5_new": 1,
                    "report_param6": 1,
                    "saved_input6": 1,
                    "temp6": 1,
                    "temp_arg6": 1,
                    "value6": 1,
                    "variable6": 1
                },
                "local_48": {
                    "arg5_copy": 5,
                    "config_param5_copy": 1,
                    "data_5_copy": 1,
                    "data_param_5_copy": 1,
                    "input5": 2,
                    "input5_copy": 3,
                    "input_5": 1,
                    "input_5_copy": 2,
                    "local_data5": 1,
                    "local_input5": 1,
                    "local_input_param_5": 1,
                    "local_param5": 1,
                    "local_var5": 1,
                    "local_var_5": 1,
                    "param_value5": 1,
                    "report_data_4_new": 1,
                    "report_param5": 1,
                    "saved_input5": 1,
                    "temp5": 1,
                    "temp_arg5": 1,
                    "value5": 1,
                    "variable5": 1
                },
                "local_58": {
                    "arg4_copy": 5,
                    "config_param4_copy": 1,
                    "data_4_copy": 1,
                    "data_param_4_copy": 1,
                    "input4": 2,
                    "input4_copy": 3,
                    "input_4": 1,
                    "input_4_copy": 2,
                    "local_data4": 1,
                    "local_input4": 1,
                    "local_input_param_4": 1,
                    "local_param4": 1,
                    "local_var4": 1,
                    "local_var_4": 1,
                    "param_value4": 1,
                    "report_data_3_new": 1,
                    "report_param4": 1,
                    "saved_input4": 1,
                    "temp4": 1,
                    "temp_arg4": 1,
                    "value4": 1,
                    "variable4": 1
                },
                "local_68": {
                    "arg3_copy": 5,
                    "config_param3_copy": 1,
                    "data_3_copy": 1,
                    "data_param_3_copy": 1,
                    "input3": 2,
                    "input3_copy": 3,
                    "input_3": 1,
                    "input_3_copy": 2,
                    "local_data3": 1,
                    "local_input3": 1,
                    "local_input_param_3": 1,
                    "local_param3": 1,
                    "local_var3": 1,
                    "local_var_3": 1,
                    "param_value3": 1,
                    "report_data_2_new": 1,
                    "report_param3": 1,
                    "saved_input3": 1,
                    "temp3": 1,
                    "temp_arg3": 1,
                    "value3": 1,
                    "variable3": 1
                },
                "local_78": {
                    "arg2_copy": 5,
                    "config_param2_copy": 1,
                    "data_2_copy": 1,
                    "data_param_2_copy": 1,
                    "input2": 2,
                    "input2_copy": 3,
                    "input_2": 1,
                    "input_2_copy": 2,
                    "local_data2": 1,
                    "local_input2": 1,
                    "local_input_param_2": 1,
                    "local_param2": 1,
                    "local_var2": 1,
                    "local_var_2": 1,
                    "param_value2": 1,
                    "report_data_1_new": 1,
                    "report_param2": 1,
                    "saved_input2": 1,
                    "temp2": 1,
                    "temp_arg2": 1,
                    "value2": 1,
                    "variable2": 1
                },
                "local_88": {
                    "arg1_copy": 5,
                    "config_param1_copy": 1,
                    "data_1_copy": 1,
                    "data_param_1_copy": 1,
                    "input1": 2,
                    "input1_copy": 3,
                    "input_1": 1,
                    "input_1_copy": 2,
                    "local_data1": 1,
                    "local_input1": 1,
                    "local_input_param_1": 1,
                    "local_param1": 1,
                    "local_var1": 1,
                    "local_var_1": 1,
                    "param_value1": 1,
                    "report_code_new": 1,
                    "report_param1": 1,
                    "saved_input1": 1,
                    "temp1": 1,
                    "temp_arg1": 1,
                    "value1": 1,
                    "variable1": 1
                },
                "local_90": {
                    "additional_data_param_5_copy": 1,
                    "address_param_14": 1,
                    "arg14_copy": 1,
                    "arg5": 2,
                    "data6": 1,
                    "data_param5": 1,
                    "function_pointer_5": 1,
                    "input_14_copy": 1,
                    "local_data5": 1,
                    "local_param14": 1,
                    "local_param6": 1,
                    "local_param_14": 1,
                    "local_var5": 1,
                    "param14": 6,
                    "param14_copy": 2,
                    "param6_copy": 1,
                    "param_14": 2,
                    "param_14_copy": 1,
                    "param_14_new": 1,
                    "saved_value5": 1,
                    "value5": 1,
                    "var5": 1
                },
                "local_98": {
                    "additional_data_param_4_copy": 1,
                    "address_param_13": 1,
                    "arg13_copy": 1,
                    "arg4": 2,
                    "data5": 1,
                    "data_param4": 1,
                    "function_pointer_4": 1,
                    "input_13_copy": 1,
                    "local_data4": 1,
                    "local_param13": 1,
                    "local_param5": 1,
                    "local_param_13": 1,
                    "local_var4": 1,
                    "param13": 6,
                    "param13_copy": 2,
                    "param5_copy": 1,
                    "param_13": 2,
                    "param_13_copy": 1,
                    "param_13_new": 1,
                    "saved_value4": 1,
                    "value4": 1,
                    "var4": 1
                },
                "local_a0": {
                    "additional_data_param_3_copy": 1,
                    "address_param_12": 1,
                    "arg12_copy": 1,
                    "arg3": 2,
                    "data4": 1,
                    "data_param3": 1,
                    "function_pointer_3": 1,
                    "input_12_copy": 1,
                    "local_data3": 1,
                    "local_param12": 1,
                    "local_param4": 1,
                    "local_param_12": 1,
                    "local_var3": 1,
                    "param12": 6,
                    "param12_copy": 2,
                    "param4_copy": 1,
                    "param_12": 2,
                    "param_12_copy": 1,
                    "param_12_new": 1,
                    "saved_value3": 1,
                    "value3": 1,
                    "var3": 1
                },
                "local_a8": {
                    "additional_data_param_2_copy": 1,
                    "address_param_11": 1,
                    "arg11_copy": 1,
                    "arg2": 2,
                    "data3": 1,
                    "data_param2": 1,
                    "function_pointer_2": 1,
                    "input_11_copy": 1,
                    "local_data2": 1,
                    "local_param11": 1,
                    "local_param3": 1,
                    "local_param_11": 1,
                    "local_var2": 1,
                    "param11": 6,
                    "param11_copy": 2,
                    "param3_copy": 1,
                    "param_11": 2,
                    "param_11_copy": 1,
                    "param_11_new": 1,
                    "saved_value2": 1,
                    "value2": 1,
                    "var2": 1
                },
                "local_b0": {
                    "additional_data_param_1_copy": 1,
                    "address_param_10": 1,
                    "arg1": 2,
                    "arg10_copy": 1,
                    "data2": 1,
                    "data_param1": 1,
                    "function_pointer_1": 1,
                    "input_10_copy": 1,
                    "local_data1": 1,
                    "local_param10": 1,
                    "local_param2": 1,
                    "local_param_10": 1,
                    "local_var1": 1,
                    "param10": 6,
                    "param10_copy": 2,
                    "param2_copy": 1,
                    "param_10": 2,
                    "param_10_copy": 1,
                    "param_10_new": 1,
                    "saved_value1": 1,
                    "value1": 1,
                    "var1": 1
                },
                "local_b8": {
                    "buffer": 2,
                    "data": 1,
                    "error_buffer": 1,
                    "local_array": 1,
                    "local_buffer": 6,
                    "local_data_buffer": 1,
                    "new_buffer": 1,
                    "result_buffer": 1,
                    "stack_memory": 1,
                    "temp": 1,
                    "temp_buffer": 5,
                    "temp_data": 1,
                    "temporary_buffer": 1,
                    "unused_buffer": 1,
                    "volatile_buffer": 1
                },
                "local_c8": {
                    "array2": 1,
                    "buffer": 5,
                    "buffer2": 1,
                    "local_buffer": 16,
                    "local_data": 1,
                    "local_pointer": 1,
                    "local_stack": 1,
                    "ptr2": 1
                },
                "local_d0": {
                    "address": 1,
                    "array1": 1,
                    "buffer": 11,
                    "buffer1": 1,
                    "buffer_pointer": 2,
                    "buffer_ptr": 4,
                    "local_array": 1,
                    "ptr1": 1,
                    "stack_pointer": 3
                },
                "local_d4": {
                    "array2_size": 1,
                    "buffer_length": 1,
                    "buffer_size": 3,
                    "bytes_to_copy": 1,
                    "constant": 1,
                    "copy_length": 1,
                    "copy_size": 1,
                    "length": 2,
                    "local_buffer_size": 1,
                    "range": 1,
                    "size": 4,
                    "stack_size": 1,
                    "string_length": 1,
                    "temp_var": 1
                },
                "local_d8": {
                    "array1_size": 1,
                    "buffer_length": 1,
                    "buffer_size": 9,
                    "byte_count": 1,
                    "count": 2,
                    "data_size": 1,
                    "length": 4,
                    "num_bytes": 1,
                    "size": 9,
                    "stack_size": 1
                },
                "param_1": {
                    "arg1": 6,
                    "config_param1": 1,
                    "data1": 1,
                    "data_1": 1,
                    "data_param_1": 1,
                    "error_code": 1,
                    "input1": 9,
                    "input_1": 3,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "report_code": 1,
                    "report_param1": 1,
                    "value1": 2
                },
                "param_10": {
                    "additional_data_param_1": 1,
                    "address_1": 1,
                    "arg10": 1,
                    "data1": 3,
                    "data2": 1,
                    "input10": 1,
                    "input2": 1,
                    "input_10": 1,
                    "output2": 2,
                    "output_2": 1,
                    "param10": 5,
                    "param2": 3,
                    "param_1": 1,
                    "param_10": 3,
                    "param_a": 2,
                    "value1": 1
                },
                "param_11": {
                    "additional_data_param_2": 1,
                    "address_2": 1,
                    "arg11": 1,
                    "data2": 3,
                    "data3": 1,
                    "input11": 1,
                    "input3": 1,
                    "input_11": 1,
                    "output3": 2,
                    "output_3": 1,
                    "param11": 5,
                    "param3": 3,
                    "param_11": 3,
                    "param_2": 1,
                    "param_b": 2,
                    "value2": 1
                },
                "param_12": {
                    "additional_data_param_3": 1,
                    "address_3": 1,
                    "arg12": 1,
                    "data3": 3,
                    "data4": 1,
                    "input12": 1,
                    "input4": 1,
                    "input_12": 1,
                    "output4": 2,
                    "output_4": 1,
                    "param12": 5,
                    "param4": 3,
                    "param_12": 3,
                    "param_3": 1,
                    "param_c": 2,
                    "value3": 1
                },
                "param_13": {
                    "additional_data_param_4": 1,
                    "address_4": 1,
                    "arg13": 1,
                    "data4": 3,
                    "data5": 1,
                    "input13": 1,
                    "input5": 1,
                    "input_13": 1,
                    "output5": 2,
                    "output_5": 1,
                    "param13": 5,
                    "param5": 3,
                    "param_13": 3,
                    "param_4": 1,
                    "param_d": 2,
                    "value4": 1
                },
                "param_14": {
                    "additional_data_param_5": 1,
                    "address_5": 1,
                    "arg14": 1,
                    "data5": 3,
                    "data6": 1,
                    "input14": 1,
                    "input6": 1,
                    "input_14": 1,
                    "output6": 2,
                    "output_6": 1,
                    "param14": 5,
                    "param6": 3,
                    "param_14": 3,
                    "param_5": 1,
                    "param_e": 2,
                    "value5": 1
                },
                "param_2": {
                    "arg2": 6,
                    "config_param2": 1,
                    "data2": 1,
                    "data_2": 1,
                    "data_param_2": 1,
                    "input2": 9,
                    "input_2": 3,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "param2": 1,
                    "report_data_1": 1,
                    "report_param2": 1,
                    "value2": 2
                },
                "param_3": {
                    "arg3": 6,
                    "config_param3": 1,
                    "data3": 1,
                    "data_3": 1,
                    "data_param_3": 1,
                    "input3": 9,
                    "input_3": 3,
                    "input_param3": 1,
                    "input_param_3": 1,
                    "param3": 1,
                    "report_data_2": 1,
                    "report_param3": 1,
                    "value3": 2
                },
                "param_4": {
                    "arg4": 6,
                    "config_param4": 1,
                    "data4": 1,
                    "data_4": 1,
                    "data_param_4": 1,
                    "input4": 9,
                    "input_4": 3,
                    "input_param4": 1,
                    "input_param_4": 1,
                    "param4": 1,
                    "report_data_3": 1,
                    "report_param4": 1,
                    "value4": 2
                },
                "param_5": {
                    "arg5": 6,
                    "config_param5": 1,
                    "data5": 1,
                    "data_5": 1,
                    "data_param_5": 1,
                    "input5": 9,
                    "input_5": 3,
                    "input_param5": 1,
                    "input_param_5": 1,
                    "param5": 1,
                    "report_data_4": 1,
                    "report_param5": 1,
                    "value5": 2
                },
                "param_6": {
                    "arg6": 6,
                    "config_param6": 1,
                    "data6": 1,
                    "data_6": 1,
                    "data_param_6": 1,
                    "input6": 9,
                    "input_6": 3,
                    "input_param6": 1,
                    "input_param_6": 1,
                    "param6": 1,
                    "report_data_5": 1,
                    "report_param6": 1,
                    "value6": 2
                },
                "param_7": {
                    "arg7": 6,
                    "config_param7": 1,
                    "data7": 1,
                    "data_7": 1,
                    "data_param_7": 1,
                    "input7": 9,
                    "input_7": 3,
                    "input_param7": 1,
                    "input_param_7": 1,
                    "param7": 1,
                    "report_data_6": 1,
                    "report_param7": 1,
                    "value7": 2
                },
                "param_8": {
                    "arg8": 6,
                    "config_param8": 1,
                    "data8": 1,
                    "data_8": 1,
                    "data_param_8": 1,
                    "input8": 9,
                    "input_8": 3,
                    "input_param8": 1,
                    "input_param_8": 1,
                    "param8": 1,
                    "report_data_7": 1,
                    "report_param8": 1,
                    "value8": 2
                },
                "param_9": {
                    "data": 2,
                    "data1": 1,
                    "data_param_9": 1,
                    "func_ptr": 1,
                    "input1": 1,
                    "input9": 1,
                    "input_9": 1,
                    "output1": 2,
                    "output_1": 1,
                    "param": 1,
                    "param1": 3,
                    "param9": 4,
                    "report_address": 1,
                    "report_data": 1,
                    "report_data_8": 1,
                    "report_func": 1,
                    "report_function_pointer": 1,
                    "report_param": 2,
                    "reporter": 1,
                    "reporting_data": 1
                },
                "stack0x00000008": {
                    "saved_return_address": 1
                }
            },
            "called": [
                "FUN_001038b0",
                "FUN_00102280"
            ],
            "calling": [
                "FUN_00103aa0"
            ],
            "code": "\n\n\nvoid execute_report_and_exit_00104a60(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 input5,undefined4 input6,undefined4 input7,undefined4 input8,\n                 undefined8 param9,undefined8 param10,undefined8 param11,undefined8 param12,\n                 undefined8 param13,undefined8 param14)\n\n{\n  char condition;\n  undefined4 buffer_size;\n  undefined4 size;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined local_buffer [8];\n  undefined8 param10;\n  undefined8 param11;\n  undefined8 param12;\n  undefined8 param13;\n  undefined8 param14;\n  undefined4 arg1_copy;\n  undefined4 arg2_copy;\n  undefined4 arg3_copy;\n  undefined4 arg4_copy;\n  undefined4 arg5_copy;\n  undefined4 arg6_copy;\n  undefined4 arg7_copy;\n  undefined4 arg8_copy;\n  \n  if (condition != '\\0') {\n    arg1_copy = input1;\n    arg2_copy = input2;\n    arg3_copy = input3;\n    arg4_copy = input4;\n    arg5_copy = input5;\n    arg6_copy = input6;\n    arg7_copy = input7;\n    arg8_copy = input8;\n  }\n  buffer = &saved_return_address;\n  buffer_size = 8;\n  local_buffer = local_buffer;\n  size = 0x30;\n  param10 = param10;\n  param11 = param11;\n  param12 = param12;\n  param13 = param13;\n  param14 = param14;\n  report(param9,&buffer_size);\n  xexit(1);\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
            "current_name": "execute_report_and_exit_00104a60",
            "entrypoint": "0x00104a60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104a60": "execute_report_and_exit_00104a60",
                "in_AL": "condition",
                "local_18": "arg8_copy",
                "local_28": "arg7_copy",
                "local_38": "arg6_copy",
                "local_48": "arg5_copy",
                "local_58": "arg4_copy",
                "local_68": "arg3_copy",
                "local_78": "arg2_copy",
                "local_88": "arg1_copy",
                "local_90": "param14",
                "local_98": "param13",
                "local_a0": "param12",
                "local_a8": "param11",
                "local_b0": "param10",
                "local_b8": "local_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "size",
                "local_d8": "buffer_size",
                "param_1": "input1",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13",
                "param_14": "param14",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "param_7": "input7",
                "param_8": "input8",
                "param_9": "param9",
                "stack0x00000008": "saved_return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104af4": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00104af4(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00104af4",
            "entrypoint": "0x00104af4",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00104af4": "FUNC_00104af4"
            },
            "skipped": true,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_00102000",
            "FUN_00102020",
            "FUN_00102771",
            "FUN_001027e2",
            "FUN_0010282b",
            "FUN_00102853",
            "FUN_0010286f",
            "FUN_001028b2",
            "FUN_0010290e",
            "FUN_0010293a",
            "FUN_001030c0",
            "FUN_001034fa",
            "FUN_00103510",
            "FUN_00103520",
            "FUN_00103890",
            "FUN_001038b0",
            "FUN_00103910",
            "FUN_001039b0",
            "FUN_00103a50",
            "FUN_00103aa0",
            "FUN_00104a60"
        ],
        [
            "FUN_00103810"
        ],
        [
            "FUN_00102b11",
            "FUN_001034d5"
        ],
        [
            "FUN_00102330",
            "FUN_0010259a",
            "FUN_00103240"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 163803
}