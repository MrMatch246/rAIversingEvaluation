{
    "functions": {
        "FUN_00102000": {
            "additional_data": {
                "FUN_00102000": {
                    "initialize": 7,
                    "initialize_global_monitor": 2,
                    "initialize_monitoring": 5,
                    "initialize_performance_monitor": 1,
                    "initialize_profiler": 1,
                    "initialize_program": 13,
                    "initialize_trace": 1,
                    "start_program": 1
                },
                "__gmon_start__": {
                    "initialize_monitoring": 2,
                    "initialize_profiler": 1,
                    "monitor_start": 1,
                    "perform_global_monitoring": 1,
                    "run_initialization": 1,
                    "start_global_monitor": 1,
                    "start_gmon": 1,
                    "start_monitoring": 7,
                    "start_performance_measurement": 1,
                    "start_performance_monitoring": 1,
                    "start_profiler": 2,
                    "start_profiling": 1
                }
            },
            "called": [
                "FUN_0010a0d0"
            ],
            "calling": [],
            "code": "\nvoid initialize_program_00102000(void)\n\n{\n  start_monitoring();\n  return;\n}\n\n",
            "current_name": "initialize_program_00102000",
            "entrypoint": "0x00102000",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102000": "initialize_program_00102000",
                "__gmon_start__": "start_monitoring"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102020": {
            "additional_data": {
                "FUN_00102020": {
                    "call_function": 1,
                    "call_indirect_function": 1,
                    "call_indirect_jump": 1,
                    "execute": 1,
                    "execute_external_code": 1,
                    "execute_function": 4,
                    "execute_function_at_address": 1,
                    "execute_indirect_call": 1,
                    "execute_indirect_function": 2,
                    "execute_indirect_jump": 17,
                    "run_indirect_jump": 1
                },
                "PTR_0": {
                    "function_pointer": 1,
                    "indirect_jump_pointer": 1
                },
                "PTR_undefined": {
                    "ptr": 1,
                    "target_address": 1
                },
                "code": {
                    "function_pointer": 4,
                    "indirect_function_pointer": 1,
                    "indirect_jump_function": 1,
                    "ptr_to_code": 1
                },
                "codePtr": {
                    "function_pointer": 1
                },
                "undefined": {
                    "address": 1,
                    "function": 1,
                    "function_address": 2,
                    "function_pointer": 2,
                    "jmp_address": 1,
                    "jump_address": 1,
                    "ptr_to_address": 1,
                    "target_function": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_indirect_jump_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(function_pointer *)(function_address *)0x0)();\n  return;\n}\n\n",
            "current_name": "execute_indirect_jump_00102020",
            "entrypoint": "0x00102020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102020": "execute_indirect_jump_00102020",
                "code": "function_pointer",
                "undefined": "function_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102030": {
            "called": [
                "FUN_0010a000"
            ],
            "calling": [
                "FUN_0010358d",
                "FUN_001029a5",
                "FUN_00103bf0",
                "FUN_001032de",
                "FUN_00102f65",
                "FUN_00103006",
                "FUN_001025ab"
            ],
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n",
            "current_name": "FUN_00102030",
            "entrypoint": "0x00102030",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102040": {
            "called": [
                "FUN_0010a008"
            ],
            "calling": [
                "FUN_00104c60",
                "FUN_0010234b",
                "FUN_00104ce0",
                "FUN_00104da0",
                "FUN_001022c0",
                "FUN_00104d30"
            ],
            "code": "\n\n\nint strcasecmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcasecmp(__s1,__s2);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102040",
            "entrypoint": "0x00102040",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102050": {
            "called": [
                "FUN_0010a018"
            ],
            "calling": [
                "FUN_0010354e",
                "FUN_00104de0",
                "FUN_0010289a",
                "FUN_0010347f",
                "FUN_00102c98"
            ],
            "code": "\n\n\nvoid abort(void)\n\n{\n                    \n  abort();\n}\n\n",
            "current_name": "FUN_00102050",
            "entrypoint": "0x00102050",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102060": {
            "called": [
                "FUN_0010a020"
            ],
            "calling": [
                "FUN_001024ec",
                "FUN_00103bf0"
            ],
            "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  return piVar1;\n}\n\n",
            "current_name": "FUN_00102060",
            "entrypoint": "0x00102060",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102070": {
            "called": [
                "FUN_0010a028"
            ],
            "calling": [
                "FUN_001027fd"
            ],
            "code": "\n\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = strncmp(__s1,__s2,__n);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102070",
            "entrypoint": "0x00102070",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102080": {
            "called": [
                "FUN_0010a040"
            ],
            "calling": [
                "FUN_00103bf0"
            ],
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102080",
            "entrypoint": "0x00102080",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102090": {
            "called": [
                "FUN_0010a048"
            ],
            "calling": [
                "FUN_0010358d",
                "FUN_00104de0",
                "FUN_001029a5",
                "FUN_00103bf0",
                "FUN_001028be",
                "FUN_001025ab"
            ],
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_00102090",
            "entrypoint": "0x00102090",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020a0": {
            "called": [
                "FUN_0010a050"
            ],
            "calling": [
                "FUN_00103bf0"
            ],
            "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n",
            "current_name": "FUN_001020a0",
            "entrypoint": "0x001020a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020b0": {
            "called": [
                "FUN_0010a058"
            ],
            "calling": [
                "FUN_0010358d",
                "FUN_001029a5",
                "FUN_00103bf0"
            ],
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001020b0",
            "entrypoint": "0x001020b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020c0": {
            "called": [
                "FUN_0010a068"
            ],
            "calling": [
                "FUN_00103bf0"
            ],
            "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n",
            "current_name": "FUN_001020c0",
            "entrypoint": "0x001020c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020d0": {
            "called": [
                "FUN_0010a070"
            ],
            "calling": [
                "FUN_001024ec",
                "FUN_0010234b",
                "FUN_00102da5",
                "FUN_001028be",
                "FUN_00102c98",
                "FUN_00104da0",
                "FUN_001022c0",
                "FUN_00102434",
                "FUN_00102cc4",
                "FUN_00102e85",
                "FUN_0010354e",
                "FUN_00104de0",
                "FUN_0010358d",
                "FUN_001029a5",
                "FUN_0010289a",
                "FUN_00103bf0",
                "FUN_00102558",
                "FUN_001032de",
                "FUN_00102323",
                "FUN_0010347f",
                "FUN_001025ab"
            ],
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n",
            "current_name": "FUN_001020d0",
            "entrypoint": "0x001020d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020e0": {
            "called": [
                "FUN_0010a078"
            ],
            "calling": [
                "FUN_00103160",
                "FUN_0010358d",
                "FUN_00103bf0",
                "FUN_001027fd",
                "FUN_00103186",
                "FUN_00103006"
            ],
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_001020e0",
            "entrypoint": "0x001020e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020f0": {
            "called": [
                "FUN_0010a080"
            ],
            "calling": [
                "FUN_00103bf0"
            ],
            "code": "\n\n\nvoid * mmap(void *__addr,size_t __len,int __prot,int __flags,int __fd,__off_t __offset)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = mmap(__addr,__len,__prot,__flags,__fd,__offset);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_001020f0",
            "entrypoint": "0x001020f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102100": {
            "called": [
                "FUN_0010a088"
            ],
            "calling": [
                "FUN_00103bf0"
            ],
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n",
            "current_name": "FUN_00102100",
            "entrypoint": "0x00102100",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102110": {
            "called": [
                "FUN_0010a090"
            ],
            "calling": [
                "FUN_00103bf0"
            ],
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102110",
            "entrypoint": "0x00102110",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102120": {
            "called": [
                "FUN_0010a098"
            ],
            "calling": [
                "FUN_00103bf0"
            ],
            "code": "\n\n\nvoid rewind(FILE *__stream)\n\n{\n  rewind(__stream);\n  return;\n}\n\n",
            "current_name": "FUN_00102120",
            "entrypoint": "0x00102120",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102130": {
            "called": [
                "FUN_0010a0a0"
            ],
            "calling": [
                "FUN_0010358d"
            ],
            "code": "\n\n\nint snprintf(char *__s,size_t __maxlen,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = snprintf(__s,__maxlen,__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102130",
            "entrypoint": "0x00102130",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102140": {
            "called": [
                "FUN_0010a0a8"
            ],
            "calling": [
                "FUN_00102fc7"
            ],
            "code": "\n\n\nvoid * sbrk(intptr_t __delta)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = sbrk(__delta);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_00102140",
            "entrypoint": "0x00102140",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102150": {
            "called": [
                "FUN_0010a0b0"
            ],
            "calling": [
                "FUN_001029a5",
                "FUN_00103bf0"
            ],
            "code": "\n\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcmp(__s1,__s2);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102150",
            "entrypoint": "0x00102150",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102160": {
            "called": [
                "FUN_0010a0c0"
            ],
            "calling": [
                "FUN_00102e85",
                "FUN_00102da5",
                "FUN_00103bf0",
                "FUN_001032de",
                "FUN_00102fc7"
            ],
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102160",
            "entrypoint": "0x00102160",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102170": {
            "called": [
                "FUN_0010a0c8"
            ],
            "calling": [
                "FUN_00104de0",
                "FUN_00103bf0"
            ],
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n",
            "current_name": "FUN_00102170",
            "entrypoint": "0x00102170",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102180": {
            "called": [
                "FUN_0010a0d8"
            ],
            "calling": [
                "FUN_00103bf0"
            ],
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102180",
            "entrypoint": "0x00102180",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102190": {
            "called": [
                "FUN_0010a0e8"
            ],
            "calling": [
                "FUN_00103bf0"
            ],
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_00102190",
            "entrypoint": "0x00102190",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021a0": {
            "called": [
                "FUN_0010a0f0"
            ],
            "calling": [
                "FUN_0010358d",
                "FUN_001029a5",
                "FUN_00103bf0"
            ],
            "code": "\n\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fileno(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001021a0",
            "entrypoint": "0x001021a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021b0": {
            "called": [
                "FUN_0010a0f8"
            ],
            "calling": [
                "FUN_00103449",
                "FUN_0010358d",
                "FUN_00105370",
                "FUN_001025ab",
                "FUN_00102cc4"
            ],
            "code": "\n\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(__size);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_001021b0",
            "entrypoint": "0x001021b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021c0": {
            "called": [
                "FUN_0010a100"
            ],
            "calling": [
                "FUN_00102e85",
                "FUN_00102da5"
            ],
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001021c0",
            "entrypoint": "0x001021c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021d0": {
            "called": [
                "FUN_0010a108"
            ],
            "calling": [
                "FUN_0010358d",
                "FUN_00104de0",
                "FUN_001029a5",
                "FUN_00103bf0",
                "FUN_001028be",
                "FUN_001025ab"
            ],
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001021d0",
            "entrypoint": "0x001021d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021e0": {
            "called": [
                "FUN_0010a110"
            ],
            "calling": [
                "FUN_00103449"
            ],
            "code": "\n\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = realloc(__ptr,__size);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_001021e0",
            "entrypoint": "0x001021e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021f0": {
            "called": [
                "FUN_0010a118"
            ],
            "calling": [
                "FUN_00103bf0"
            ],
            "code": "\n\n\nint munmap(void *__addr,size_t __len)\n\n{\n  int iVar1;\n  \n  iVar1 = munmap(__addr,__len);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001021f0",
            "entrypoint": "0x001021f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102200": {
            "called": [
                "FUN_0010a120"
            ],
            "calling": [
                "FUN_00103bf0"
            ],
            "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = setlocale(__category,__locale);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_00102200",
            "entrypoint": "0x00102200",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102210": {
            "called": [
                "FUN_0010a128"
            ],
            "calling": [
                "FUN_00103bf0"
            ],
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_00102210",
            "entrypoint": "0x00102210",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102220": {
            "called": [
                "FUN_0010a130"
            ],
            "calling": [
                "FUN_0010358d",
                "FUN_001029a5",
                "FUN_00103bf0"
            ],
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n",
            "current_name": "FUN_00102220",
            "entrypoint": "0x00102220",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102230": {
            "called": [
                "FUN_0010a138"
            ],
            "calling": [
                "FUN_00102e85",
                "FUN_00102da5"
            ],
            "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 = vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102230",
            "entrypoint": "0x00102230",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102240": {
            "called": [
                "FUN_0010a140"
            ],
            "calling": [
                "FUN_0010358d",
                "FUN_001029a5",
                "FUN_00103bf0",
                "FUN_001028be",
                "FUN_001025ab"
            ],
            "code": "\n\n\nulong strtoul(char *__nptr,char **__endptr,int __base)\n\n{\n  ulong uVar1;\n  \n  uVar1 = strtoul(__nptr,__endptr,__base);\n  return uVar1;\n}\n\n",
            "current_name": "FUN_00102240",
            "entrypoint": "0x00102240",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102250": {
            "called": [
                "FUN_0010a150"
            ],
            "calling": [
                "FUN_00102fbc",
                "FUN_00103bf0",
                "FUN_001032de"
            ],
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n",
            "current_name": "FUN_00102250",
            "entrypoint": "0x00102250",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102260": {
            "called": [
                "FUN_0010a158"
            ],
            "calling": [
                "FUN_00104de0"
            ],
            "code": "\n\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fwrite(__ptr,__size,__n,__s);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_00102260",
            "entrypoint": "0x00102260",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102270": {
            "called": [
                "FUN_0010a168"
            ],
            "calling": [
                "FUN_001025ab"
            ],
            "code": "\n\n\nchar * strdup(char *__s)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strdup(__s);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_00102270",
            "entrypoint": "0x00102270",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102280": {
            "called": [
                "FUN_0010a170"
            ],
            "calling": [
                "FUN_001024ec",
                "FUN_00103bf0"
            ],
            "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strerror(__errnum);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_00102280",
            "entrypoint": "0x00102280",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102290": {
            "called": [
                "FUN_0010a178"
            ],
            "calling": [
                "FUN_0010358d",
                "FUN_001029a5",
                "FUN_00103bf0"
            ],
            "code": "\n\n\nint fstat(int __fd,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = fstat(__fd,__buf);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102290",
            "entrypoint": "0x00102290",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022a0": {
            "called": [
                "FUN_0010a180"
            ],
            "calling": [
                "FUN_001025ab"
            ],
            "code": "\n\n\nint getc(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = getc(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001022a0",
            "entrypoint": "0x001022a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022b0": {
            "called": [
                "FUN_0010a190"
            ],
            "calling": [
                "FUN_00103ba0"
            ],
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n",
            "current_name": "FUN_001022b0",
            "entrypoint": "0x001022b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022c0": {
            "additional_data": {
                "DAT_00109440": {
                    "enabled_features": 1,
                    "global_feature_flags": 1
                },
                "DAT_00109444": {
                    "disabled_features": 1,
                    "global_feature_flags_mask": 1
                },
                "FUN_001022c0": {
                    "update_feature": 1,
                    "update_feature_flag": 1,
                    "update_feature_flags": 3,
                    "update_processor_features": 1,
                    "update_x86_feature": 15,
                    "update_x86_feature_flags": 1,
                    "update_x86_features": 9
                },
                "auVar4": {
                    "result": 4,
                    "return_value": 12,
                    "return_values": 1
                },
                "iVar1": {
                    "cmp_result": 1,
                    "compare_result": 1,
                    "comparison_result": 8,
                    "feature_comparison_result": 1,
                    "result": 1,
                    "strcasecmp_result": 9,
                    "strcmp_result": 4
                },
                "uVar2": {
                    "bitmask": 2,
                    "feature_bit": 1,
                    "feature_flag": 2,
                    "feature_mask": 11,
                    "feature_value": 11,
                    "flag": 1,
                    "flag_mask": 1,
                    "flag_value": 1,
                    "new_feature": 1
                },
                "uVar3": {
                    "error_code": 1,
                    "error_message": 25,
                    "error_msg": 3,
                    "error_string": 1,
                    "error_text": 1
                },
                "unaff_EBP": {
                    "apply_to_all": 1,
                    "conditional": 1,
                    "flag": 1,
                    "flag_status": 1,
                    "flag_value": 1,
                    "is_action_set": 1,
                    "is_activated": 1,
                    "is_add": 1,
                    "is_disabled": 2,
                    "is_enable": 1,
                    "is_enabled": 12,
                    "is_flag_set": 1,
                    "is_git": 1,
                    "is_reset": 2,
                    "is_reversed": 1,
                    "is_set": 2,
                    "is_zero": 1
                },
                "unaff_RBX": {
                    "feature": 7,
                    "feature_name": 17,
                    "x86_feature": 7
                },
                "unaff_retaddr": {
                    "return_address": 15
                }
            },
            "called": [
                "FUN_00102e85",
                "FUN_00102040",
                "FUN_001020d0"
            ],
            "calling": [
                "FUN_00104c60"
            ],
            "code": "\nundefined  [16] update_x86_feature_flags_001022c0(void)\n\n{\n  int strcasecmp_result;\n  uint feature_value;\n  undefined8 error_message;\n  char *feature_name;\n  int is_enabled;\n  undefined return_value [16];\n  undefined8 return_address;\n  \n  strcasecmp_result = strcasecmp(feature_name,\"lam_u48\");\n  if (strcasecmp_result == 0) {\n    feature_value = 4;\n  }\n  else {\n    strcasecmp_result = strcasecmp(feature_name,\"lam_u57\");\n    feature_value = 8;\n    if (strcasecmp_result != 0) {\n      error_message = dcgettext(0,\"Unknown x86 feature: %s\\n\",5);\n      error(error_message);\n      error_message = 0xffffffff;\n      goto LAB_00104ca5;\n    }\n  }\n  if (is_enabled == 0) {\n    DAT_00109440 = feature_value | DAT_00109440;\n    DAT_00109444 = ~feature_value & DAT_00109444;\n  }\n  else {\n    DAT_00109444 = feature_value | DAT_00109444;\n    DAT_00109440 = DAT_00109440 & ~feature_value;\n  }\n  error_message = 0;\nLAB_00104ca5:\n  return_value._8_8_ = return_address;\n  return_value._0_8_ = error_message;\n  return return_value;\n}\n\n",
            "current_name": "update_x86_feature_flags_001022c0",
            "entrypoint": "0x001022c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001022c0": "update_x86_feature_flags_001022c0",
                "auVar4": "return_value",
                "iVar1": "strcasecmp_result",
                "uVar2": "feature_value",
                "uVar3": "error_message",
                "unaff_EBP": "is_enabled",
                "unaff_RBX": "feature_name",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102323": {
            "additional_data": {
                "FUM_00102323": {
                    "print_unknown_osabi": 1
                },
                "FUN_00102323": {
                    "get_osabi_error_message": 1,
                    "get_unknown_osabi": 2,
                    "get_unknown_osabi_error_message": 2,
                    "identify_unknown_osabi": 1,
                    "print_osabi_error": 1,
                    "print_unknown_osabi": 6,
                    "print_unknown_osabi_error": 13,
                    "print_unknown_osabi_error_message": 4
                },
                "auVar2": {
                    "ret_address_struct": 1,
                    "ret_value": 1,
                    "return_address": 1,
                    "return_val": 1,
                    "return_value": 9
                },
                "param_1": {
                    "arg1": 2,
                    "parameter1": 1
                },
                "param_2": {
                    "arg2": 2,
                    "parameter2": 1
                },
                "param_3": {
                    "arg3": 2,
                    "parameter3": 1
                },
                "param_4": {
                    "arg4": 2,
                    "parameter4": 1
                },
                "uVar1": {
                    "err_msg": 1,
                    "error_message": 12,
                    "error_msg": 1,
                    "localized_error_message": 1
                },
                "unaff_retaddr": {
                    "return_address": 21,
                    "unaffected_return_address": 1
                }
            },
            "called": [
                "FUN_00102e85",
                "FUN_001020d0"
            ],
            "calling": [
                "FUN_00104ce0"
            ],
            "code": "\nundefined  [16] print_unknown_osabi_error_message_00102323(void)\n\n{\n  undefined8 error_message;\n  undefined return_value [16];\n  undefined8 return_address;\n  \n  error_message = dcgettext(0,\"Unknown OSABI: %s\\n\",5);\n  error(error_message);\n  return_value._8_8_ = return_address;\n  return_value._0_8_ = 0xffffffff;\n  return return_value;\n}\n\n",
            "current_name": "print_unknown_osabi_error_message_00102323",
            "entrypoint": "0x00102323",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102323": "print_unknown_osabi_error_message_00102323",
                "auVar2": "return_value",
                "uVar1": "error_message",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010234b": {
            "additional_data": {
                "FUN_0010234b": {
                    "check_machine_type": 4,
                    "determine_machine_type": 3,
                    "get_machine_type": 20,
                    "get_type": 1,
                    "identify_machine_type": 3
                },
                "iVar1": {
                    "comparison_result": 7,
                    "result": 22
                },
                "uVar2": {
                    "err_msg": 1,
                    "error_message": 18,
                    "error_msg": 5,
                    "error_string": 3,
                    "message": 1
                },
                "unaff_RBX": {
                    "machine_type": 31
                }
            },
            "called": [
                "FUN_00102e85",
                "FUN_00102040",
                "FUN_001020d0"
            ],
            "calling": [
                "FUN_00104d30"
            ],
            "code": "\nint get_machine_type_0010234b(void)\n\n{\n  int result;\n  undefined8 error_message;\n  char *machine_type;\n  \n  result = strcasecmp(machine_type,\"x86_64\");\n  if (result == 0) {\n    result = 0x3e;\n  }\n  else {\n    result = strcasecmp(machine_type,\"x86-64\");\n    if (result == 0) {\n      result = 0x3e;\n    }\n    else {\n      result = strcasecmp(machine_type,\"none\");\n      if (result != 0) {\n        error_message = dcgettext(0,\"Unknown machine type: %s\\n\",5);\n        error(error_message);\n        result = -1;\n      }\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "get_machine_type_0010234b",
            "entrypoint": "0x0010234b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010234b": "get_machine_type_0010234b",
                "iVar1": "result",
                "uVar2": "error_message",
                "unaff_RBX": "machine_type"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001023ce": {
            "additional_data": {
                "FUN_001023ce": {
                    "calculate_result": 1,
                    "calculate_return_value": 1,
                    "check_condition": 1,
                    "check_if_true": 1,
                    "count_to_one": 1,
                    "get_constant_one": 1,
                    "get_constant_value": 1,
                    "get_one": 13,
                    "get_result": 1,
                    "get_return_value": 6,
                    "initialize": 2,
                    "initialize_flag": 1,
                    "initialize_result": 1
                },
                "iVar1": {
                    "result": 1
                },
                "return": {
                    "result": 9
                },
                "return_value": {
                    "result": 2
                },
                "undefined8": {
                    "bool": 2,
                    "int": 3,
                    "uint64_t": 6,
                    "unsigned_long": 3,
                    "void": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00104da0"
            ],
            "code": "\nuint64_t get_constant_one_001023ce(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "get_constant_one_001023ce",
            "entrypoint": "0x001023ce",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001023ce": "get_constant_one_001023ce",
                "return": "result",
                "undefined8": "uint64_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102434": {
            "additional_data": {
                "FUN_00102434": {
                    "process_elf_header": 1,
                    "update_elf_header": 30
                },
                "dcgettext": {
                    "get_error_message": 1
                },
                "error": {
                    "print_error_message": 2
                },
                "error_code": {
                    "error_code": 1
                },
                "param2": {
                    "param2": 1
                },
                "param3": {
                    "param3": 1
                },
                "param4": {
                    "param4": 1
                },
                "pcVar3": {
                    "error_format": 10,
                    "error_format_str": 1,
                    "error_format_string": 2,
                    "error_message": 10,
                    "error_message_format": 2,
                    "error_string": 2,
                    "error_template": 1,
                    "format_string": 3
                },
                "print_error_message_00102e85": {
                    "print_error_message": 2
                },
                "sVar2": {
                    "bytes_written": 6,
                    "result": 8,
                    "write_result": 12,
                    "write_status": 5
                },
                "uVar1": {
                    "error_code": 2,
                    "error_message": 19,
                    "error_message_code": 1,
                    "error_message_id": 1,
                    "error_msg": 3,
                    "error_string": 2,
                    "error_text": 1
                },
                "unaff_RBX": {
                    "file": 16,
                    "file_pointer": 5,
                    "file_ptr": 9,
                    "output_file": 1
                }
            },
            "called": [
                "FUN_00102e85",
                "FUN_001020d0"
            ],
            "calling": [
                "FUN_00104de0"
            ],
            "code": "\nundefined8 update_elf_header_00102434(void)\n\n{\n  undefined8 error_message;\n  size_t write_result;\n  FILE *file;\n  char *error_message;\n  \n  error_message = get_error_message(0,\"%s: Failed to seek to ELF header\\n\",5);\n  print_error_message(error_message);\n  if (DAT_001093e6 == '\\x01') {\n    if (DAT_0010941a == DAT_0010916c) {\n      return 0;\n    }\n    if (DAT_00109170 == 0xffffffff) {\n      if (DAT_0010941a == 6) {\n        DAT_00109170 = 1;\n      }\n      else if (DAT_0010941a < 7) {\n        DAT_00109170 = (DAT_0010941a != 3) + 1 + (uint)(DAT_0010941a != 3);\n      }\n      else {\n        DAT_00109170 = 3 - ((ushort)(DAT_0010941a - 0xb4) < 2);\n      }\n    }\n    if ((DAT_001093e4 == DAT_00109170) || (DAT_00109170 == 3)) {\n      if ((DAT_001093e4 == DAT_00109168) || (DAT_00109168 == 3)) {\n        if ((DAT_0010941a == DAT_00109174) || (DAT_00109174 == 0xffffffff)) {\n          if ((DAT_00109164 == 0xffffffff) || (DAT_00109418 == DAT_00109164)) {\n            if ((DAT_0010915c == 0xffffffff) || (DAT_001093e7 == DAT_0010915c)) {\n              if ((DAT_001093e8 == DAT_00109154) || (DAT_00109154 == 0xffffffff)) {\n                if (DAT_001093e4 == 1) {\n                  if (DAT_0010916c != 0xffffffff) {\n                    (*DAT_001093b8)(&DAT_00109392,(long)(int)DAT_0010916c,2);\n                  }\n                  if (DAT_00109160 != -1) {\n                    (*DAT_001093b8)(&DAT_00109390,(long)DAT_00109160,2);\n                  }\n                  if (DAT_00109158 != -1) {\n                    DAT_00109387 = (undefined)DAT_00109158;\n                  }\n                  if (DAT_00109150 != -1) {\n                    DAT_00109388 = (undefined)DAT_00109150;\n                  }\n                  write_result = fwrite(&DAT_00109380,0x34,1,file);\n                  if (write_result == 1) {\n                    return 0;\n                  }\n                  error_message = update_elf_header_00102434_failure_001024ec();\n                  return error_message;\n                }\n                if (DAT_001093e4 != 2) {\n                    \n                  abort();\n                }\n                if (DAT_0010916c != 0xffffffff) {\n                  (*DAT_001093b8)(&DAT_00109352,(long)(int)DAT_0010916c,2);\n                }\n                if (DAT_00109160 != -1) {\n                  (*DAT_001093b8)(&DAT_00109350,(long)DAT_00109160,2);\n                }\n                if (DAT_00109158 != -1) {\n                  DAT_00109347 = (undefined)DAT_00109158;\n                }\n                if (DAT_00109150 != -1) {\n                  DAT_00109348 = (undefined)DAT_00109150;\n                }\n                write_result = fwrite(&DAT_00109340,0x40,1,file);\n                if (write_result == 1) {\n                  return 0;\n                }\n                error_message = update_elf_header_00102434_failure_001024ec();\n                return error_message;\n              }\n              error_message = \"%s: Unmatched EI_ABIVERSION: %d is not %d\\n\";\n            }\n            else {\n              error_message = \"%s: Unmatched EI_OSABI: %d is not %d\\n\";\n            }\n          }\n          else {\n            error_message = \"%s: Unmatched e_type: %d is not %d\\n\";\n          }\n        }\n        else {\n          error_message = \"%s: Unmatched e_machine: %d is not %d\\n\";\n        }\n        error_message = get_error_message(0,error_message,5);\n        print_error_message(error_message);\n        return 1;\n      }\n      error_message = \"%s: Unmatched output EI_CLASS: %d is not %d\\n\";\n    }\n    else {\n      error_message = \"%s: Unmatched input EI_CLASS: %d is not %d\\n\";\n    }\n    error_message = get_error_message(0,error_message,5);\n    print_error_message(error_message);\n  }\n  else {\n    error_message = get_error_message(0,\"%s: Unsupported EI_VERSION: %d is not %d\\n\",5);\n    print_error_message(error_message);\n  }\n  return 1;\n}\n\n",
            "current_name": "update_elf_header_00102434",
            "entrypoint": "0x00102434",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102434": "update_elf_header_00102434",
                "dcgettext": "get_error_message",
                "error": "print_error_message",
                "pcVar3": "error_message",
                "sVar2": "write_result",
                "uVar1": "error_message",
                "unaff_RBX": "file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001024ec": {
            "additional_data": {
                "FUN_001024ec": {
                    "update_elf_header": 17,
                    "update_elf_header_error": 4,
                    "update_elf_header_failed": 4,
                    "update_elf_header_failure": 6
                },
                "param_1": {
                    "arg1": 1,
                    "flag1": 1,
                    "undefined_param1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "flag2": 1,
                    "undefined_param2": 1
                },
                "param_3": {
                    "arg3": 1,
                    "flag3": 1,
                    "undefined_param3": 1
                },
                "param_4": {
                    "arg4": 1,
                    "flag4": 1,
                    "undefined_param4": 1
                },
                "piVar1": {
                    "errno_location": 5,
                    "errno_pointer": 2,
                    "errno_ptr": 6,
                    "error_code": 2,
                    "error_location": 1,
                    "error_num_ptr": 1,
                    "error_number": 10,
                    "error_number_ptr": 1
                },
                "uVar2": {
                    "error_message": 18,
                    "error_msg": 4,
                    "error_string": 9
                }
            },
            "called": [
                "FUN_00102e85",
                "FUN_00102060",
                "FUN_00102280",
                "FUN_001020d0"
            ],
            "calling": [
                "FUN_00104de0"
            ],
            "code": "\nundefined8 update_elf_header_failure_001024ec(void)\n\n{\n  int *error_number;\n  undefined8 error_message;\n  \n  error_number = __errno_location();\n  strerror(*error_number);\n  error_message = dcgettext(0,\"%s: Failed to update ELF header: %s\\n\",5);\n  error(error_message);\n  return 1;\n}\n\n",
            "current_name": "update_elf_header_failure_001024ec",
            "entrypoint": "0x001024ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001024ec": "update_elf_header_failure_001024ec",
                "piVar1": "error_number",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102558": {
            "additional_data": {
                "FUN_00102558": {
                    "read_elf_header": 18,
                    "read_elf_header_and_handle_error": 1,
                    "read_elf_header_error": 3,
                    "read_elf_header_failed": 8,
                    "read_elf_header_failure": 1
                },
                "dcgettext": {
                    "get_error_message": 1
                },
                "error": {
                    "print_error_message": 1
                },
                "param_1": {
                    "arg1": 1,
                    "unknown_param_1": 1,
                    "unused1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "unknown_param_2": 1,
                    "unused2": 1
                },
                "param_3": {
                    "arg3": 1,
                    "unknown_param_3": 1,
                    "unused3": 1
                },
                "param_4": {
                    "arg4": 1,
                    "unknown_param_4": 1,
                    "unused4": 1
                },
                "uVar1": {
                    "error_message": 20,
                    "error_msg": 3,
                    "error_string": 8
                }
            },
            "called": [
                "FUN_00102e85",
                "FUN_001020d0"
            ],
            "calling": [
                "FUN_00104de0"
            ],
            "code": "\nundefined8 read_elf_header_failed_00102558(void)\n\n{\n  undefined8 error_message;\n  \n  error_message = get_error_message(0,\"%s: Failed to read ELF header\\n\",5);\n  print_error_message(error_message);\n  return 1;\n}\n\n",
            "current_name": "read_elf_header_failed_00102558",
            "entrypoint": "0x00102558",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102558": "read_elf_header_failed_00102558",
                "dcgettext": "get_error_message",
                "error": "print_error_message",
                "uVar1": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001025ab": {
            "additional_data": {
                "FUN_001025ab": {
                    "extract_archive": 1,
                    "extract_archive_header": 1,
                    "extract_archive_headers": 1,
                    "extract_archive_symbols": 4,
                    "extract_from_archive": 1,
                    "process_archive": 19,
                    "process_archive_header": 1,
                    "process_binary_archive": 1,
                    "process_binary_file": 1
                },
                "FUN_001027fd": {
                    "starts_with": 1
                },
                "FUN_001028be": {
                    "error": 1
                },
                "FUN_00102e85": {
                    "process_archive_index_and_symbols": 1
                },
                "ZEXT816": {
                    "zero_extend": 1
                },
                "__ptr": {
                    "archive_header": 3,
                    "buffer_ptr": 1,
                    "header": 6,
                    "header_buffer": 3,
                    "header_ptr": 1,
                    "line": 1,
                    "pointer": 2,
                    "ptr": 13,
                    "temp_ptr": 1
                },
                "cVar2": {
                    "c_var2": 1,
                    "flag": 1,
                    "is_prefix": 1,
                    "result": 1,
                    "starts_with": 1,
                    "starts_with_flag": 2,
                    "starts_with_result": 3,
                    "starts_with_slash": 10,
                    "startswith_result": 6,
                    "temp_var2": 1,
                    "temp_var_2": 1,
                    "var2": 3
                },
                "dcgettext": {
                    "get_localized_string": 1,
                    "get_translation": 2
                },
                "error": {
                    "display_error_message": 1,
                    "print_error": 1,
                    "print_error_message": 1,
                    "report_error": 1
                },
                "fread": {
                    "file_read": 1
                },
                "free": {
                    "release_memory": 2
                },
                "fseek": {
                    "file_seek": 1
                },
                "getc": {
                    "get_character": 2
                },
                "iVar3": {
                    "error": 1,
                    "file_operation_status": 1,
                    "process_result": 1,
                    "result": 25,
                    "temp_var3": 1,
                    "var3": 2
                },
                "joined_r0x001026dd": {
                    "process_index_and_symbols_success": 1
                },
                "malloc": {
                    "allocate_memory": 2
                },
                "param_1": {
                    "archive": 1,
                    "archive_data": 3,
                    "archive_params": 2,
                    "archive_symbols": 1,
                    "args": 2,
                    "arguments": 2,
                    "argv": 4,
                    "command_line_arguments": 1,
                    "file_info": 1,
                    "header_data": 2,
                    "input_params": 1,
                    "input_strings": 1,
                    "output": 6,
                    "parameters": 2,
                    "params": 2
                },
                "param_2": {
                    "archive": 1,
                    "archive_filename": 2,
                    "archive_name": 1,
                    "archive_path": 3,
                    "file_name": 1,
                    "file_path": 3,
                    "filename": 11,
                    "input": 2,
                    "input_file": 4,
                    "input_file_path": 1,
                    "input_string": 1,
                    "path": 1
                },
                "param_3": {
                    "archive_file": 4,
                    "file": 18,
                    "file_pointer": 4,
                    "file_ptr": 3,
                    "input_file": 2
                },
                "param_4": {
                    "expected_size": 1,
                    "file_size": 2,
                    "long_name_table_size": 4,
                    "long_name_table_size_limit": 1,
                    "long_size": 1,
                    "max_long_name_table_size": 1,
                    "max_name_table_size": 1,
                    "max_size": 9,
                    "max_table_size": 1,
                    "size": 1,
                    "size_limit": 1,
                    "symbol_table_size": 1,
                    "table_size": 7
                },
                "param_5": {
                    "additional_parameter": 1,
                    "archive_format": 1,
                    "archive_type": 1,
                    "flag": 1,
                    "flags": 3,
                    "language": 1,
                    "param": 3,
                    "param5": 2,
                    "param_5": 15,
                    "symbol_flag": 1,
                    "symbol_table_offset": 1,
                    "unknown_param": 1
                },
                "pcVar4": {
                    "duplicate_filename": 1,
                    "duplicate_input_file": 1,
                    "err_msg": 1,
                    "error_format": 1,
                    "error_message": 14,
                    "error_msg": 3,
                    "file_copy": 1,
                    "file_name_dup": 1,
                    "input_file_path_copy": 1,
                    "long_name_table": 1,
                    "starts_with_string": 1,
                    "str": 2,
                    "temp_var4": 1,
                    "var4": 2
                },
                "pcVar7": {
                    "allocated_memory": 1,
                    "buf": 1,
                    "buffer": 1,
                    "error_message": 4,
                    "error_message2": 1,
                    "error_message_2": 2,
                    "error_msg_format": 1,
                    "long_name": 1,
                    "long_name_error_message": 1,
                    "long_name_table": 4,
                    "long_symbol_name_table": 1,
                    "long_symbol_names": 1,
                    "long_symbol_names_error_message": 1,
                    "long_symbol_table": 2,
                    "memblock": 1,
                    "str_2": 1,
                    "str_table": 1,
                    "symbol_name": 3,
                    "temp_var7": 1,
                    "var7": 2
                },
                "pcVar8": {
                    "malloced_long_name_table": 1,
                    "message": 1
                },
                "process_archive_index_and_symbols_constprop_0": {
                    "process_index_and_symbols": 2
                },
                "sVar5": {
                    "bytes_read": 5,
                    "num_read": 1,
                    "read_bytes": 2,
                    "read_count": 2,
                    "read_result": 6,
                    "read_size": 11,
                    "size": 1,
                    "temp_var5": 1,
                    "var5": 2
                },
                "startwith": {
                    "startswith": 1
                },
                "strtoul": {
                    "convert_to_ulong": 1,
                    "string_to_ulong": 1
                },
                "uVar1": {
                    "flag": 1,
                    "old_flag": 1,
                    "old_value": 2,
                    "prev_value": 1,
                    "saved_value": 2,
                    "temp": 7,
                    "temp_char": 1,
                    "temp_var": 5,
                    "temp_var1": 1,
                    "temp_var_1": 2,
                    "u_var": 1,
                    "u_var1": 1,
                    "var1": 3
                },
                "uVar6": {
                    "error_message_3": 1,
                    "error_msg": 1,
                    "error_string": 5,
                    "localized_error_message": 1,
                    "message": 2,
                    "msg": 2,
                    "result_message": 1,
                    "temp_result": 1,
                    "temp_var6": 1,
                    "temp_var_2": 1,
                    "translated_error": 1,
                    "translated_message": 2,
                    "translated_string": 1,
                    "translation": 7,
                    "translation_result": 1,
                    "var6": 2
                }
            },
            "called": [
                "FUN_00102090",
                "FUN_001021d0",
                "FUN_00102e85",
                "FUN_001027fd",
                "FUN_001028be",
                "FUN_001022a0",
                "FUN_001020d0",
                "FUN_00102270",
                "FUN_00102240",
                "FUN_00102030",
                "FUN_001021b0"
            ],
            "calling": [
                "FUN_0010358d",
                "FUN_001029a5"
            ],
            "code": "\nundefined4 process_archive_header_001025ab(char **output,char *filename,FILE *file,long max_size,undefined4 param_5)\n\n{\n  char **ptr;\n  undefined temp;\n  char starts_with_slash;\n  int result;\n  char *error_message;\n  size_t read_size;\n  undefined8 translation;\n  char *long_name_table;\n  \n  error_message = strdup(filename);\n  output[2] = (char *)0x0;\n  *(undefined4 *)((long)output + 0x54) = 0;\n  *output = error_message;\n  output[1] = (char *)file;\n  output[5] = (char *)0x0;\n  output[6] = (char *)0x0;\n  *(undefined4 *)(output + 10) = param_5;\n  output[9] = (char *)0x8;\n  *(undefined (*) [16])(output + 3) = zero_extend(0);\n  *(undefined (*) [16])(output + 7) = zero_extend(0);\n  result = file_seek(file,8,0);\n  error_message = \"%s: failed to seek to first archive header\\n\";\n  if (result != 0) goto LAB_00102658;\n  ptr = output + 0xb;\n  read_size = file_read(ptr,1,0x3c,file);\n  if (read_size != 0x3c) {\n    if (read_size == 0) {\n      return 0;\n    }\n    error_message = \"%s: failed to read archive header\\n\";\n    goto LAB_00102658;\n  }\n  starts_with_slash = startswith(ptr,\"/               \");\n  if (starts_with_slash == '\\0') {\n    starts_with_slash = startswith(ptr,\"/SYM64/         \");\n    if (starts_with_slash != '\\0') {\n      *(undefined4 *)((long)output + 0x54) = 1;\n      result = process_index_and_symbols(output,8);\n      goto process_index_and_symbols_success;\n    }\n  }\n  else {\n    result = process_index_and_symbols(output,4);\nprocess_index_and_symbols_success:\n    if (result == 0) {\n      return 1;\n    }\n  }\n  starts_with_slash = startswith(ptr);\n  if (starts_with_slash == '\\0') {\n    return 0;\n  }\n  temp = *(undefined *)((long)output + 0x92);\n  *(undefined *)((long)output + 0x92) = 0;\n  error_message = (char *)string_to_ulong((char *)(output + 0x11),(char **)0x0,10);\n  long_name_table = \"%s: long name table is too small, (size = %ld)\\n\";\n  output[7] = error_message;\n  *(undefined *)((long)output + 0x92) = temp;\n  if ((char *)0x7 < error_message) {\n    if (((long)error_message <= max_size) && (-1 < (long)error_message)) {\n      output[9] = error_message + 0x3c + (long)output[9];\n      long_name_table = (char *)allocate_memory((size_t)(error_message + 1));\n      output[6] = long_name_table;\n      if (long_name_table == (char *)0x0) {\n        translation = get_translation(0,\"Out of memory reading long symbol names in archive\\n\",5);\n        display_error_message(translation);\n        return 1;\n      }\n      read_size = file_read(long_name_table,(size_t)error_message,1,file);\n      if (read_size == 1) {\n        if ((*(byte *)(output + 7) & 1) != 0) {\n          get_character(file);\n        }\n        output[6][(long)output[7]] = '\\0';\n        return 0;\n      }\n      release_memory(output[6]);\n      error_message = \"%s: failed to read long symbol name string table\\n\";\n      output[6] = (char *)0x0;\nLAB_00102658:\n      translation = get_translation(0,error_message,5);\n      display_error_message(translation,filename);\n      return 1;\n    }\n    long_name_table = \"%s: long name table is too big, (size = %#lx)\\n\";\n  }\n  translation = get_translation(0,long_name_table,5);\n  display_error_message(translation,filename,error_message);\n  return 1;\n}\n\n",
            "current_name": "process_archive_header_001025ab",
            "entrypoint": "0x001025ab",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001025ab": "process_archive_header_001025ab",
                "ZEXT816": "zero_extend",
                "__ptr": "ptr",
                "cVar2": "starts_with_slash",
                "dcgettext": "get_translation",
                "error": "display_error_message",
                "fread": "file_read",
                "free": "release_memory",
                "fseek": "file_seek",
                "getc": "get_character",
                "iVar3": "result",
                "joined_r0x001026dd": "process_index_and_symbols_success",
                "malloc": "allocate_memory",
                "param_1": "output",
                "param_2": "filename",
                "param_3": "file",
                "param_4": "max_size",
                "pcVar4": "error_message",
                "pcVar7": "long_name_table",
                "process_archive_index_and_symbols_constprop_0": "process_index_and_symbols",
                "sVar5": "read_size",
                "strtoul": "string_to_ulong",
                "uVar1": "temp",
                "uVar6": "translation"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001027fd": {
            "additional_data": {
                "FUN_001027fd": {
                    "compare_and_return_equal": 1,
                    "compare_strings": 14,
                    "string_compare": 5,
                    "string_comparison": 9,
                    "string_comparison_function": 2
                },
                "__n": {
                    "length": 16,
                    "length_of_string2": 2,
                    "str2_length": 2,
                    "string2_length": 4,
                    "string_length": 3,
                    "target_length": 3
                },
                "auVar2": {
                    "comparison": 1,
                    "comparison_result": 3,
                    "output": 2,
                    "output_array": 1,
                    "output_value": 1,
                    "result": 18,
                    "result_array": 1,
                    "return_result": 1,
                    "return_val": 1
                },
                "extraout_var": {
                    "additional_var": 1,
                    "comparison_result": 3,
                    "extra": 1,
                    "extra_out_var": 1,
                    "extra_output": 2,
                    "extra_output_var": 1,
                    "result": 1,
                    "unused": 1
                },
                "iVar1": {
                    "comparison_result": 22,
                    "result": 2,
                    "string_comparison": 2,
                    "strncmp_result": 1
                },
                "in_RAX": {
                    "return_value": 3,
                    "saved_register": 1
                },
                "param_1": {
                    "input_string": 1,
                    "input_string1": 2,
                    "source_string": 2,
                    "str1": 5,
                    "string1": 20,
                    "string_1": 1
                },
                "param_2": {
                    "input_string2": 2,
                    "str2": 5,
                    "string2": 20,
                    "string_2": 1,
                    "target_string": 3
                }
            },
            "called": [
                "FUN_001020e0",
                "FUN_00102070"
            ],
            "calling": [
                "FUN_001025ab"
            ],
            "code": "\nundefined  [16] compare_strings_001027fd(char *string1,char *string2)\n\n{\n  int comparison_result;\n  undefined8 return_value;\n  size_t length;\n  undefined4 comparison_result;\n  undefined result [16];\n  \n  length = strlen(string2);\n  comparison_result = strncmp(string1,string2,length);\n  result._1_7_ = (undefined7)(CONCAT44(comparison_result,comparison_result) >> 8);\n  result[0] = comparison_result == 0;\n  result._8_8_ = return_value;\n  return result;\n}\n\n",
            "current_name": "compare_strings_001027fd",
            "entrypoint": "0x001027fd",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001027fd": "compare_strings_001027fd",
                "__n": "length",
                "auVar2": "result",
                "extraout_var": "comparison_result",
                "iVar1": "comparison_result",
                "in_RAX": "return_value",
                "param_1": "string1",
                "param_2": "string2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102825": {
            "additional_data": {
                "FUNC_00103ab3": {
                    "call_subfunction": 1,
                    "execute_command": 1,
                    "perform_operation": 1,
                    "process_data": 3,
                    "process_switch": 1
                },
                "FUN_00102825": {
                    "decode_switch": 1,
                    "parse_switch_parameters": 1,
                    "process_switch": 1
                },
                "FUN_00103ab3": {
                    "process_data": 3,
                    "reverse_bits": 1
                },
                "byte": {
                    "byte_ptr": 1,
                    "byte_val": 1,
                    "byte_value": 3,
                    "data_byte": 1,
                    "input_byte": 1
                },
                "byte_1": {
                    "first_byte": 1
                },
                "byte_2": {
                    "second_byte": 1
                },
                "param_1": {
                    "buffer": 2,
                    "data": 2,
                    "data_address": 1,
                    "data_pointer": 2,
                    "input": 3,
                    "input_buffer": 1,
                    "input_data": 7,
                    "input_param": 3,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "input_value": 1,
                    "switch_address": 1,
                    "switch_data": 2,
                    "switch_param_1": 1,
                    "switch_ptr": 1
                },
                "param_2": {
                    "additional_data": 1,
                    "address": 2,
                    "config": 1,
                    "config_data": 2,
                    "config_param": 2,
                    "config_params": 1,
                    "context": 2,
                    "data": 2,
                    "data_ptr": 1,
                    "extra_data": 1,
                    "function_data": 1,
                    "input_data": 2,
                    "input_value": 1,
                    "length": 1,
                    "metadata": 1,
                    "other_data": 1,
                    "param": 2,
                    "param_value": 2,
                    "some_data": 1,
                    "switch_param_2": 1,
                    "switch_ptr": 1
                },
                "switchD_00103aac": {
                    "decode_switch_function": 1
                }
            },
            "called": [
                "FUN_00103ab3"
            ],
            "calling": [
                "FUN_00103a90"
            ],
            "code": "\nvoid decode_switch_function::parse_switch_parameters_00102825(long input_data,undefined8 context)\n\n{\n  FUNC_00103ab3(input_data,context,\n               (ulong)*(byte_value *)(input_data + 1) << 8 | (ulong)*(byte_value *)(input_data + 2) << 0x10);\n  return;\n}\n\n",
            "current_name": "parse_switch_parameters_00102825",
            "entrypoint": "0x00102825",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102825": "parse_switch_parameters_00102825",
                "byte": "byte_value",
                "param_1": "input_data",
                "param_2": "context",
                "switchD_00103aac": "decode_switch_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010289a": {
            "additional_data": {
                "FUN_0010289a": {
                    "handle_data_length_error": 2,
                    "handle_unhandled_data_length": 8
                },
                "param_1": {
                    "error_code": 2,
                    "length": 2,
                    "value1": 1
                },
                "param_2": {
                    "param2": 1,
                    "unknown_value": 1,
                    "unused1": 1,
                    "unused_param2": 1,
                    "value2": 1
                },
                "param_3": {
                    "param3": 1,
                    "unknown_flag": 1,
                    "unused2": 1,
                    "unused_param3": 1,
                    "value3": 1
                },
                "param_4": {
                    "param4": 1,
                    "unknown_flag2": 1,
                    "unused3": 1,
                    "unused_param4": 1,
                    "value4": 1
                },
                "uVar1": {
                    "error_message": 21,
                    "error_msg": 1,
                    "error_string": 1
                },
                "unaff_EBX": {
                    "error_code": 23,
                    "error_context": 1,
                    "error_flag": 3,
                    "error_type": 2,
                    "error_value": 1
                }
            },
            "called": [
                "FUN_00102e85",
                "FUN_00102050",
                "FUN_001020d0"
            ],
            "calling": [
                "FUN_00103a90"
            ],
            "code": "\nvoid switchD_00103aac::handle_unhandled_data_length_0010289a(void)\n\n{\n  undefined8 error_message;\n  undefined4 error_code;\n  \n  error_message = dcgettext(0,\"Unhandled data length: %d\\n\",5);\n  error(error_message,error_code);\n                    \n  abort();\n}\n\n",
            "current_name": "handle_unhandled_data_length_0010289a",
            "entrypoint": "0x0010289a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010289a": "handle_unhandled_data_length_0010289a",
                "uVar1": "error_message",
                "unaff_EBX": "error_code"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001028be": {
            "additional_data": {
                "FUN_001028be": {
                    "extract_archive_header": 7,
                    "parse_archive_header": 8,
                    "process_archive": 2,
                    "process_archive_header": 6,
                    "read_archive_header": 1,
                    "validate_and_read_archive_header": 3,
                    "validate_and_read_header": 1,
                    "validate_archive_header": 2,
                    "verify_archive_header": 1
                },
                "iVar2": {
                    "file_operations_result": 1,
                    "file_pointer_result": 1,
                    "file_seek_result": 4,
                    "file_status": 1,
                    "result": 6,
                    "seek_error": 1,
                    "seek_result": 12,
                    "status": 3,
                    "temp_var_2": 1
                },
                "param_1": {
                    "archive": 6,
                    "archive_header": 6,
                    "archive_info": 2,
                    "archive_params": 1,
                    "archive_ptr": 1,
                    "file_info": 1,
                    "header": 6,
                    "header_data": 3,
                    "header_info": 1,
                    "input_params": 1,
                    "params": 2
                },
                "pcVar7": {
                    "error_format": 23,
                    "error_format_string": 2,
                    "error_message_format": 1,
                    "error_msg_format": 1,
                    "error_msg_template": 1,
                    "error_template": 2,
                    "format_string": 1
                },
                "sVar5": {
                    "bytes_read": 12,
                    "header_read_result": 2,
                    "header_read_size": 1,
                    "read_result": 4,
                    "read_size": 12
                },
                "uVar1": {
                    "old_value": 3,
                    "original_state": 1,
                    "original_value": 3,
                    "prev_byte": 1,
                    "prev_undefined": 1,
                    "prev_value": 4,
                    "previous_byte": 1,
                    "previous_value": 8,
                    "saved_byte": 1,
                    "temp": 3,
                    "temp_byte": 2,
                    "temp_value": 2,
                    "temp_var_1": 1
                },
                "uVar3": {
                    "archive_header_size": 1,
                    "header_size": 30
                },
                "uVar4": {
                    "error_message": 26,
                    "error_msg": 5
                },
                "uVar6": {
                    "archive_filename": 2,
                    "archive_name": 12,
                    "archive_path": 2,
                    "file_name": 5,
                    "filename": 2,
                    "program_name": 4
                }
            },
            "called": [
                "FUN_00102090",
                "FUN_00102e85",
                "FUN_001021d0",
                "FUN_001020d0",
                "FUN_00102240"
            ],
            "calling": [
                "FUN_001025ab"
            ],
            "code": "\nundefined8 validate_and_read_archive_header_001028be(undefined8 *archive)\n\n{\n  undefined previous_value;\n  int seek_result;\n  ulong header_size;\n  undefined8 error_message;\n  size_t bytes_read;\n  undefined8 archive_name;\n  char *error_format;\n  \n  previous_value = *(undefined *)((long)archive + 0x92);\n  *(undefined *)((long)archive + 0x92) = 0;\n  header_size = strtoul((char *)(archive + 0x11),(char **)0x0,10);\n  *(undefined *)((long)archive + 0x92) = previous_value;\n  if ((long)header_size < 0) {\n    archive_name = *archive;\n    error_message = dcgettext(0,\"%s: invalid archive header size: %ld\\n\",5);\n    error(error_message,archive_name,header_size);\n  }\n  else {\n    header_size = header_size + 1 & 0xfffffffffffffffe;\n    archive[9] = header_size + 0x3c + archive[9];\n    seek_result = fseek((FILE *)archive[1],header_size,1);\n    if (seek_result == 0) {\n      bytes_read = fread(archive + 0xb,1,0x3c,(FILE *)archive[1]);\n      if ((bytes_read == 0x3c) || (bytes_read == 0)) {\n        return 1;\n      }\n      archive_name = *archive;\n      error_format = \"%s: failed to read archive header following archive index\\n\";\n    }\n    else {\n      archive_name = *archive;\n      error_format = \"%s: failed to skip archive symbol table\\n\";\n    }\n    error_message = dcgettext(0,error_format,5);\n    error(error_message,archive_name);\n  }\n  return 0;\n}\n\n",
            "current_name": "validate_and_read_archive_header_001028be",
            "entrypoint": "0x001028be",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001028be": "validate_and_read_archive_header_001028be",
                "iVar2": "seek_result",
                "param_1": "archive",
                "pcVar7": "error_format",
                "sVar5": "bytes_read",
                "uVar1": "previous_value",
                "uVar3": "header_size",
                "uVar4": "error_message",
                "uVar6": "archive_name"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001029a5": {
            "additional_data": {
                "DAT_001041cc": {
                    "archive_header_size": 1
                },
                "DAT_001041ce": {
                    "val_0xa60": 1
                },
                "DAT_001041d0": {
                    "archive_header_read_size": 1
                },
                "FUN_001029a5": {
                    "extract_and_process_archive_member": 4,
                    "extract_archive_member": 1,
                    "extract_archive_member_name": 2,
                    "extract_archive_member_path": 4,
                    "extract_file_from_archive": 9,
                    "extract_file_name_from_archive": 1,
                    "extract_file_or_copy": 1,
                    "extract_file_path": 1,
                    "extract_file_path_and_open_file": 1,
                    "extract_file_path_from_archive": 1,
                    "extract_file_path_from_file_descriptor": 1,
                    "extract_file_path_or_copy": 1,
                    "extract_filename_from_path": 1,
                    "extract_path_from_binary": 1,
                    "process_archive_member": 1
                },
                "F_CopyStringAndReverse": {
                    "copy_string_and_reverse": 1
                },
                "F_ExtractFileNameOrCopy": {
                    "extract_file_name_or_copy": 1
                },
                "F_ExtractFilePath": {
                    "extract_file_path": 1
                },
                "F_FreeMemoryReset": {
                    "free_memory_reset": 1
                },
                "F_PrintErrorMessage": {
                    "print_error_message": 1
                },
                "F_ProcessArchiveHeader": {
                    "process_archive_header": 1
                },
                "__stream": {
                    "file": 6,
                    "file_pointer": 2,
                    "file_stream": 22,
                    "input_file": 1
                },
                "adjust_relative_path": {
                    "get_relative_path": 1
                },
                "copy_string_and_reverse_00103160": {
                    "copy_string_and_reverse": 1,
                    "reverse_and_copy_string": 1
                },
                "dcgettext": {
                    "get_error_message": 1
                },
                "error": {
                    "print_error_message": 1
                },
                "extract_file_name_00102cc4": {
                    "extract_file_name": 2
                },
                "extract_file_name_or_copy_00105370": {
                    "extract_file_name_or_copy": 2
                },
                "fclose": {
                    "close_file": 1
                },
                "fileno": {
                    "get_file_descriptor": 1
                },
                "fopen": {
                    "open_file": 1
                },
                "fread": {
                    "read_data": 1
                },
                "free": {
                    "free_memory": 1
                },
                "free_memory_and_reset_00102f65": {
                    "free_memory_and_reset": 1
                },
                "fseek": {
                    "set_file_pointer": 1
                },
                "fstat": {
                    "get_file_info": 1
                },
                "iVar6": {
                    "file_descriptor": 12,
                    "file_descriptor2": 1,
                    "result": 3,
                    "ret_val": 1,
                    "return_value": 1,
                    "status": 8,
                    "temp_var6": 3,
                    "temp_var_6": 1
                },
                "lVar13": {
                    "counter": 1,
                    "i": 1,
                    "index": 11,
                    "index_2": 1,
                    "iteration": 1,
                    "iterator": 2,
                    "length": 2,
                    "loop_counter": 5,
                    "loop_index": 2,
                    "loop_var": 2,
                    "loop_variable": 1,
                    "num_chars": 1,
                    "temp_var_13": 1
                },
                "lVar18": {
                    "file_descriptor": 1
                },
                "local_b8": {
                    "file_info": 3,
                    "file_info_stats": 1,
                    "file_stat": 11,
                    "file_stats": 6,
                    "local_stat": 1,
                    "stat_buffer": 4,
                    "stat_data": 1,
                    "stat_info": 1,
                    "stat_struct": 1
                },
                "local_c0": {
                    "buffer": 5,
                    "char_array": 1,
                    "file_name": 1,
                    "file_name_buffer": 1,
                    "file_path": 2,
                    "local_buffer": 5,
                    "local_file_name": 1,
                    "local_path": 1,
                    "local_string": 1,
                    "local_string1": 1,
                    "long_name_buffer": 1,
                    "name_buffer": 2,
                    "name_start": 1,
                    "output_buffer": 1,
                    "relative_path": 1,
                    "temp_buffer": 2,
                    "temp_ptr": 1,
                    "temp_var_c0": 1
                },
                "param_1": {
                    "archive_entry": 1,
                    "archive_header": 2,
                    "archive_info": 3,
                    "archive_member_data": 1,
                    "archive_member_info": 6,
                    "archive_member_pointer": 1,
                    "archive_params": 1,
                    "archive_path": 1,
                    "directory_path": 1,
                    "file_descriptor": 1,
                    "file_info": 7,
                    "file_path": 1,
                    "file_path_ptr": 1,
                    "input_param": 1,
                    "input_parameters": 2,
                    "output_and_filename": 1
                },
                "param_2": {
                    "archive": 3,
                    "archive_data": 4,
                    "archive_info": 7,
                    "archive_memory_blocks": 1,
                    "archive_name_ptr": 1,
                    "archive_table_pointer": 1,
                    "extracted_file": 2,
                    "extracted_file_path": 1,
                    "output": 3,
                    "output_archive_file": 1,
                    "output_file_path": 1,
                    "output_param": 1,
                    "output_parameters": 2,
                    "output_path": 1,
                    "output_paths": 1,
                    "p_output": 1
                },
                "pcVar14": {
                    "archive_name_ptr": 1,
                    "file_name": 13,
                    "file_name_1": 1,
                    "file_name_ptr": 1,
                    "file_name_var": 1,
                    "file_path": 4,
                    "filename": 4,
                    "filename1": 1,
                    "filename_temp": 1,
                    "output_path": 1,
                    "path": 1,
                    "string1": 1,
                    "string_var1": 1
                },
                "pcVar15": {
                    "err_message": 1,
                    "error_message": 17,
                    "error_message_ptr": 2,
                    "error_message_temp": 1,
                    "error_message_var": 1,
                    "error_msg": 2,
                    "error_string": 2,
                    "file_name_2": 1,
                    "filename2": 1,
                    "message": 1,
                    "string2": 1,
                    "string_var2": 1
                },
                "pcVar16": {
                    "err_msg_template": 1,
                    "error_format": 5,
                    "error_format_string": 4,
                    "error_message": 8,
                    "error_message_format": 3,
                    "error_message_ptr": 1,
                    "error_message_var2": 1,
                    "error_msg": 1,
                    "format_string": 3,
                    "message": 1,
                    "printf_format": 1,
                    "string3": 1,
                    "string_var3": 1
                },
                "pcVar17": {
                    "alloc_memory": 1,
                    "archive_header_error_message": 1,
                    "extracted_file_path": 1,
                    "file_name": 1,
                    "file_path": 1,
                    "path": 1
                },
                "pcVar18": {
                    "copy_result": 1
                },
                "pparams": {
                    "path_and_filename": 1
                },
                "print_error_message_00102e85": {
                    "print_error_message": 1
                },
                "process_archive_header_001025ab": {
                    "process_archive_header": 2
                },
                "puVar12": {
                    "allocated_memory": 3,
                    "extracted_file": 1,
                    "extracted_file_path": 1,
                    "extracted_file_path_ptr": 1,
                    "extracted_path": 1,
                    "new_file": 1,
                    "new_file_path": 1,
                    "new_filename": 1,
                    "new_output": 1,
                    "new_path": 1,
                    "new_string": 1,
                    "output": 2,
                    "output_ptr": 1,
                    "result": 10,
                    "result_pointer": 1,
                    "result_ptr": 2,
                    "return_value": 1
                },
                "release_archive": {
                    "release_resources": 1
                },
                "sVar11": {
                    "bytes_read": 16,
                    "num_bytes_read": 1,
                    "read_count": 1,
                    "read_size": 12,
                    "size_var": 1
                },
                "s_errorMessage": {
                    "error_message": 1
                },
                "strcmp": {
                    "compare_strings": 1
                },
                "strtoul": {
                    "convert_to_ulong": 1
                },
                "uVar1": {
                    "flag": 1,
                    "prev_char": 1,
                    "reserved_byte": 1,
                    "temp": 11,
                    "temp1": 2,
                    "temp_byte": 1,
                    "temp_u_var": 1,
                    "temp_var": 2,
                    "temp_var1": 5,
                    "temp_var_1": 1,
                    "temp_variable_1": 1,
                    "temporary_var1": 1,
                    "value1": 1
                },
                "uVar10": {
                    "err_msg": 1,
                    "error_message": 14,
                    "error_msg": 1,
                    "error_string": 1,
                    "error_text": 1,
                    "message": 2,
                    "temp": 1,
                    "temp_var10": 3,
                    "temp_var_10": 1,
                    "translated_string": 1,
                    "translation": 3,
                    "u_var10": 1,
                    "value9": 1
                },
                "uVar2": {
                    "header_value_1": 1,
                    "result": 10,
                    "result1": 1,
                    "ret_value": 1,
                    "return_val1": 1,
                    "return_value": 2,
                    "start_of_path": 1,
                    "temp2": 2,
                    "temp_var2": 6,
                    "temp_var_2": 1,
                    "temp_variable_2": 1,
                    "temporary_var2": 1,
                    "u_var2": 1,
                    "value2": 1,
                    "var2": 1
                },
                "uVar3": {
                    "file_warning": 1,
                    "header_size": 1,
                    "header_value_2": 1,
                    "name_index": 2,
                    "result": 3,
                    "result2": 1,
                    "return_val2": 1,
                    "return_value": 2,
                    "start_of_path2": 1,
                    "temp1": 2,
                    "temp3": 2,
                    "temp_var3": 6,
                    "temp_var_3": 1,
                    "temp_variable_3": 1,
                    "temporary_var3": 1,
                    "u_var3": 2,
                    "value3": 1,
                    "var3": 2
                },
                "uVar4": {
                    "end_of_path": 1,
                    "file_offset": 1,
                    "footer_size": 1,
                    "header_value_3": 1,
                    "long_names_end": 1,
                    "result": 3,
                    "result3": 1,
                    "return_val3": 1,
                    "return_value": 2,
                    "status": 1,
                    "temp2": 2,
                    "temp4": 2,
                    "temp_var4": 6,
                    "temp_var_4": 1,
                    "temp_variable_4": 1,
                    "temporary_var4": 1,
                    "u_var4": 2,
                    "value4": 1,
                    "var4": 2
                },
                "uVar5": {
                    "end_of_path2": 1,
                    "file_records": 1,
                    "file_size": 1,
                    "header_size": 1,
                    "header_value_4": 1,
                    "index": 1,
                    "result": 3,
                    "result4": 1,
                    "return_val4": 1,
                    "return_value": 2,
                    "temp3": 2,
                    "temp5": 2,
                    "temp_var5": 6,
                    "temp_var_5": 1,
                    "temp_variable_5": 1,
                    "temporary_var5": 1,
                    "u_var5": 2,
                    "value5": 1,
                    "var5": 2
                },
                "uVar7": {
                    "index": 4,
                    "index_begin": 1,
                    "long_name_index": 10,
                    "max_name_index": 1,
                    "name_index": 7,
                    "start_index": 3,
                    "start_of_file_offset": 1,
                    "temp_var7": 3,
                    "value6": 1
                },
                "uVar8": {
                    "end_index": 3,
                    "end_of_file_offset": 1,
                    "end_of_long_name_table": 1,
                    "file_size": 1,
                    "index_end": 1,
                    "long_name_end": 1,
                    "long_name_index": 1,
                    "long_name_table_end": 2,
                    "long_name_table_length": 1,
                    "long_name_table_size": 10,
                    "longname_entry": 1,
                    "max_name_index": 1,
                    "table_end": 1,
                    "table_size": 2,
                    "temp_var8": 3,
                    "value7": 1
                },
                "uVar9": {
                    "current_char_index": 1,
                    "current_index": 9,
                    "current_name_index": 1,
                    "current_offset": 1,
                    "i": 1,
                    "index": 3,
                    "index_current": 1,
                    "iterator": 1,
                    "long_index": 1,
                    "long_name_length": 1,
                    "name_end_index": 1,
                    "name_index": 1,
                    "name_index_copy": 1,
                    "name_length": 2,
                    "temp_long_name_index": 1,
                    "temp_var9": 3,
                    "temp_var_9": 1,
                    "value8": 1
                },
                "xmalloc": {
                    "allocate_memory": 1
                },
                "xstrdup": {
                    "duplicate_string": 1
                }
            },
            "called": [
                "FUN_00102150",
                "FUN_001021d0",
                "FUN_00102220",
                "FUN_00102f65",
                "FUN_001020d0",
                "FUN_00102240",
                "FUN_00102290",
                "FUN_00102cc4",
                "FUN_00102090",
                "FUN_00102e85",
                "FUN_001020b0",
                "FUN_00103160",
                "FUN_001029a5",
                "FUN_001021a0",
                "FUN_00105370",
                "FUN_00102030",
                "FUN_001025ab"
            ],
            "calling": [
                "FUN_0010358d",
                "FUN_001029a5"
            ],
            "code": "\nundefined4 * extract_file_name_from_archive_001029a5(undefined8 *file_info,char **archive_info)\n\n{\n  undefined temp;\n  undefined4 result;\n  undefined4 temp_var3;\n  undefined4 temp_var4;\n  undefined4 temp_var5;\n  int file_descriptor;\n  ulong long_name_index;\n  ulong long_name_table_size;\n  ulong current_index;\n  undefined8 error_message;\n  FILE *file_stream;\n  size_t bytes_read;\n  undefined4 *result;\n  long index;\n  char *file_name;\n  char *error_message;\n  char *error_message;\n  char *buffer;\n  stat file_stat;\n  \n  if (*(char *)(file_info + 0xb) != '/') {\n    index = 0;\n    do {\n      if (*(char *)((long)file_info + index + 0x58) == '/') {\n        *(undefined *)((long)file_info + index + 0x58) = 0;\n        result = (undefined4 *)duplicate_string(file_info + 0xb);\n        return result;\n      }\n      index = index + 1;\n    } while (index != 0x10);\n    result = (undefined4 *)allocate_memory(0x11);\n    result = *(undefined4 *)(file_info + 0xb);\n    temp_var3 = *(undefined4 *)((long)file_info + 0x5c);\n    temp_var4 = *(undefined4 *)(file_info + 0xc);\n    temp_var5 = *(undefined4 *)((long)file_info + 100);\n    *(undefined *)(result + 4) = 0;\n    *result = result;\n    result[1] = temp_var3;\n    result[2] = temp_var4;\n    result[3] = temp_var5;\n    return result;\n  }\n  if ((file_info[6] == 0) || (file_info[7] == 0)) {\n    error_message = \"Archive member uses long names, but no longname table found\\n\";\nLAB_00102acd:\n    error_message = get_error_message(0,error_message,5);\n    print_error_message(error_message);\n    return (undefined4 *)0x0;\n  }\n  temp = *(undefined *)((long)file_info + 0x92);\n  file_info[8] = 0;\n  *(undefined *)((long)file_info + 0x92) = 0;\n  long_name_index = convert_to_ulong((char *)((long)file_info + 0x59),&buffer,10);\n  if (((*(int *)(file_info + 10) != 0) && (buffer != (char *)0x0)) && (*buffer == ':')) {\n    long_name_table_size = convert_to_ulong(buffer + 1,(char **)0x0,10);\n    file_info[8] = long_name_table_size;\n  }\n  long_name_table_size = file_info[7];\n  *(undefined *)((long)file_info + 0x92) = temp;\n  if (long_name_table_size < long_name_index) {\n    error_message = get_error_message(0,\"Found long name index (%ld) beyond end of long name table\\n\",5);\n    print_error_message(error_message,long_name_index);\n    return (undefined4 *)0x0;\n  }\n  index = file_info[6];\n  for (current_index = long_name_index;\n      ((long_name_table_size != current_index && (*(char *)(index + current_index) != '\\0')) &&\n      (*(char *)(index + current_index) != '\\n')); current_index = current_index + 1) {\n  }\n  if ((current_index != 0) && (*(char *)(index + -1 + current_index) == '/')) {\n    current_index = current_index - 1;\n  }\n  if (current_index < long_name_table_size) {\n    long_name_table_size = current_index;\n  }\n  *(undefined *)(index + long_name_table_size) = 0;\n  if ((*(int *)(file_info + 10) == 0) || (file_info[8] == 0)) goto LAB_00102c2d;\n  if (long_name_table_size <= long_name_index) {\n    error_message = \"Invalid Thin archive member name\\n\";\n    goto LAB_00102acd;\n  }\n  error_message = (char *)get_relative_path(*file_info,file_info[6] + long_name_index,long_name_table_size - long_name_index);\n  if (error_message != (char *)0x0) {\n    if ((*archive_info == (char *)0x0) || (file_descriptor = compare_strings(*archive_info,error_message), file_descriptor != 0)) {\n      if ((FILE *)archive_info[1] != (FILE *)0x0) {\n        close_file((FILE *)archive_info[1]);\n        archive_info[1] = (char *)0x0;\n      }\n      release_resources(archive_info);\n      file_stream = open_file(error_message,\"rb\");\n      if (file_stream != (FILE *)0x0) {\n        file_descriptor = get_file_descriptor(file_stream);\n        file_descriptor = get_file_info(file_descriptor,&file_stat);\n        if ((-1 < file_descriptor) &&\n           (file_descriptor = setup_archive_constprop_0(archive_info,error_message,file_stream,file_stat.st_size,0),\n           file_descriptor == 0)) goto LAB_00102b84;\n      }\n    }\n    else {\nLAB_00102b84:\n      file_descriptor = set_file_pointer((FILE *)archive_info[1],file_info[8],0);\n      if (file_descriptor == 0) {\n        bytes_read = read_data(archive_info + 0xb,1,0x3c,(FILE *)archive_info[1]);\n        if (bytes_read == 0x3c) {\n          if (*(short *)((long)archive_info + 0x92) == 0xa60) {\n            result = (undefined4 *)extract_file_name_from_archive_001029a5(archive_info,0);\n            if (result != (undefined4 *)0x0) {\n              free_memory(error_message);\n              return result;\n            }\n            goto LAB_00102c25;\n          }\n          file_name = *archive_info;\n          error_message = \"%s: did not find a valid archive header\\n\";\n        }\n        else {\n          file_name = *archive_info;\n          error_message = \"%s: failed to read archive header\\n\";\n        }\n      }\n      else {\n        file_name = *archive_info;\n        error_message = \"%s: failed to seek to next file name\\n\";\n      }\n      error_message = get_error_message(0,error_message,5);\n      print_error_message(error_message,file_name);\n    }\n  }\nLAB_00102c25:\n  free_memory(error_message);\nLAB_00102c2d:\n  result = (undefined4 *)duplicate_string(file_info[6] + long_name_index);\n  return result;\n}\n\n",
            "current_name": "extract_file_name_from_archive_001029a5",
            "entrypoint": "0x001029a5",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001029a5": "extract_file_name_from_archive_001029a5",
                "__stream": "file_stream",
                "adjust_relative_path": "get_relative_path",
                "dcgettext": "get_error_message",
                "error": "print_error_message",
                "fclose": "close_file",
                "fileno": "get_file_descriptor",
                "fopen": "open_file",
                "fread": "read_data",
                "free": "free_memory",
                "fseek": "set_file_pointer",
                "fstat": "get_file_info",
                "iVar6": "file_descriptor",
                "lVar13": "index",
                "local_b8": "file_stat",
                "local_c0": "buffer",
                "param_1": "file_info",
                "param_2": "archive_info",
                "pcVar14": "file_name",
                "pcVar15": "error_message",
                "pcVar16": "error_message",
                "puVar12": "result",
                "release_archive": "release_resources",
                "sVar11": "bytes_read",
                "strcmp": "compare_strings",
                "strtoul": "convert_to_ulong",
                "uVar1": "temp",
                "uVar10": "error_message",
                "uVar2": "result",
                "uVar3": "temp_var3",
                "uVar4": "temp_var4",
                "uVar5": "temp_var5",
                "uVar7": "long_name_index",
                "uVar8": "long_name_table_size",
                "uVar9": "current_index",
                "xmalloc": "allocate_memory",
                "xstrdup": "duplicate_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102c98": {
            "additional_data": {
                "FUN_00102c98": {
                    "handle_data_length_error": 5,
                    "handle_unhandled_data": 1,
                    "handle_unhandled_data_length": 24,
                    "handle_unhandled_data_length_error": 1
                },
                "param_1": {
                    "arg1": 1,
                    "error_code": 4,
                    "param1": 1,
                    "unknown_param1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "ebx_value": 2,
                    "param2": 2,
                    "unknown_param1": 1,
                    "unknown_param2": 1
                },
                "param_3": {
                    "arg3": 1,
                    "param3": 2,
                    "unknown_param2": 1,
                    "unknown_param3": 1
                },
                "param_4": {
                    "arg4": 1,
                    "param4": 2,
                    "unknown_param3": 1,
                    "unknown_param4": 1
                },
                "uVar1": {
                    "error_message": 24,
                    "error_msg": 1,
                    "error_string": 1
                },
                "unaff_EBX": {
                    "ebx_parameter": 1,
                    "error_code": 25,
                    "error_flag": 1,
                    "error_status": 1
                }
            },
            "called": [
                "FUN_00102e85",
                "FUN_00102050",
                "FUN_001020d0"
            ],
            "calling": [
                "FUN_00103ad0"
            ],
            "code": "\nvoid handle_unhandled_data_length_error_00102c98(void)\n\n{\n  undefined8 error_message;\n  undefined4 error_code;\n  \n  error_message = dcgettext(0,\"Unhandled data length: %d\\n\",5);\n  error(error_message,error_code);\n                    \n  abort();\n}\n\n",
            "current_name": "handle_unhandled_data_length_error_00102c98",
            "entrypoint": "0x00102c98",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102c98": "handle_unhandled_data_length_error_00102c98",
                "uVar1": "error_message",
                "unaff_EBX": "error_code"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102cbc": {
            "additional_data": {
                "0x0": {
                    "null_ptr": 1
                },
                "FUN_00102cbc": {
                    "extract_archive_member_name": 1,
                    "extract_file_from_path": 3,
                    "extract_file_name": 11,
                    "extract_file_path": 4,
                    "extract_filename": 1,
                    "extract_filename_from_path": 1,
                    "extract_path_from_url": 1,
                    "parse_file_name": 2,
                    "parse_file_path": 3,
                    "parse_filepath": 2,
                    "parse_path": 1,
                    "reverse_string": 1
                },
                "__size": {
                    "allocated_size": 3,
                    "buffer_size": 2,
                    "malloc_size": 1,
                    "name_buffer_size": 1,
                    "new_size": 2,
                    "size": 11,
                    "total_size": 7
                },
                "bVar8": {
                    "byte_value": 1,
                    "byte_var": 3,
                    "flag": 9,
                    "is_backslash": 2,
                    "is_char_negative": 1,
                    "is_delimiter_found": 1,
                    "is_first_char_slash": 1,
                    "is_memory_allocated": 1,
                    "is_negative": 5,
                    "is_negative_offset": 1,
                    "is_slash_appended": 1,
                    "loop_counter": 1,
                    "should_reverse": 1,
                    "slash_found": 1,
                    "temp_byte": 1,
                    "temp_flag": 1
                },
                "cVar2": {
                    "character": 1,
                    "current_char": 19
                },
                "dcgettext": {
                    "get_error_message": 2
                },
                "error": {
                    "print_error": 1,
                    "print_error_message": 1
                },
                "extraout_RDX": {
                    "archive_member_name_size": 1,
                    "extra_length": 1,
                    "extra_out_rdx": 1,
                    "extra_output_rdx": 2,
                    "extra_size": 3,
                    "file_len": 1,
                    "file_name_length": 3,
                    "file_name_length_minus_one": 1,
                    "file_name_size": 1,
                    "file_size": 1,
                    "last_slash_offset": 1,
                    "length": 1,
                    "max_length": 3,
                    "name_size": 1,
                    "path_length": 2,
                    "remaining": 1,
                    "remaining_chars": 1,
                    "remaining_len2": 1,
                    "remaining_length": 1,
                    "source_length": 1,
                    "string_length": 1,
                    "total_size": 1,
                    "url_length": 1
                },
                "lVar1": {
                    "archive_member_offset": 1,
                    "archive_size": 1,
                    "buffer_length": 1,
                    "combined_size": 1,
                    "computed_size": 1,
                    "file_name_size": 1,
                    "length": 8,
                    "length_var1": 1,
                    "member_name_length": 1,
                    "name_buffer_length": 1,
                    "name_size": 1,
                    "offset": 1,
                    "total_chars_to_allocate": 1,
                    "total_length": 5,
                    "total_size": 2
                },
                "param_1": {
                    "argument_1": 1,
                    "file_context": 1,
                    "file_descriptor": 2,
                    "file_size": 1,
                    "handle": 1,
                    "param": 6,
                    "param1": 11,
                    "param_1": 2,
                    "param_size": 2,
                    "param_value": 1,
                    "unused": 3
                },
                "param_2": {
                    "archive_member_name": 1,
                    "file_path": 12,
                    "filename": 1,
                    "filepath": 2,
                    "input_string": 2,
                    "original_path": 1,
                    "param2": 7,
                    "path": 3,
                    "source": 1,
                    "url": 1
                },
                "pcVar3": {
                    "current": 1,
                    "current_char": 7,
                    "current_char_pointer": 1,
                    "current_char_ptr": 4,
                    "current_path_char": 1,
                    "current_ptr": 2,
                    "dest_ptr": 1,
                    "file_path_ptr": 1,
                    "iter": 1,
                    "last_slash_position": 1,
                    "pointer1": 1,
                    "position": 1,
                    "ptr1": 3,
                    "ptr_current_char": 1,
                    "ptr_file": 1,
                    "src_pointer": 1,
                    "src_ptr": 1,
                    "temp_pointer1": 1
                },
                "pcVar4": {
                    "dest_ptr": 1,
                    "dst_pointer": 1,
                    "file_name": 1,
                    "file_name_ptr": 1,
                    "last_delimiter": 1,
                    "last_slash": 8,
                    "last_slash_char": 2,
                    "last_slash_position": 2,
                    "last_slash_ptr": 6,
                    "pointer2": 1,
                    "ptr2": 3,
                    "ptr_last_slash": 2,
                    "temp_pointer2": 1
                },
                "uVar5": {
                    "err_msg": 1,
                    "error_message": 19,
                    "error_msg": 6,
                    "error_string": 2,
                    "result": 2,
                    "unused": 1
                },
                "uVar6": {
                    "count": 2,
                    "counter": 1,
                    "current_length": 1,
                    "file_name_length": 1,
                    "length": 3,
                    "path_length": 1,
                    "remaining_chars": 2,
                    "remaining_len": 1,
                    "remaining_length": 7,
                    "remaining_size": 11,
                    "string_length": 1
                },
                "uVar7": {
                    "count2": 2,
                    "delimiter_offset": 2,
                    "diff": 1,
                    "extracted_length": 1,
                    "file_name_length": 1,
                    "file_name_size": 1,
                    "length": 1,
                    "num_chars": 1,
                    "num_chars_before_last_slash": 1,
                    "offset_from_file_path": 1,
                    "path_length": 3,
                    "path_size": 1,
                    "path_suffix_length": 1,
                    "prefix_length": 2,
                    "prefix_size": 1,
                    "remaining_bytes": 1,
                    "remaining_characters": 1,
                    "remaining_length": 1,
                    "slash_char_index": 1,
                    "slash_distance": 1,
                    "slash_length": 1,
                    "slash_offset": 2,
                    "start_index": 1,
                    "start_length": 1,
                    "string_length": 1
                },
                "unaff_RBX": {
                    "current_char": 1,
                    "current_char_bak": 1,
                    "delimiter_ptr": 1,
                    "file_name": 1,
                    "file_name_ptr": 1,
                    "file_path_ptr": 1,
                    "file_pointer": 1,
                    "filename": 1,
                    "first_char": 1,
                    "found_slash": 1,
                    "input_ptr": 1,
                    "input_string": 1,
                    "last_slash": 2,
                    "path": 1,
                    "path_ptr": 1,
                    "path_start": 1,
                    "prev_ptr": 1,
                    "ptr_first_char": 1,
                    "ptr_slashed_file": 1,
                    "slash_ptr": 1,
                    "source_ptr": 1,
                    "start": 1,
                    "start_ptr": 1,
                    "string_iter": 1,
                    "string_pointer": 1,
                    "string_ptr": 2,
                    "unaffected_rbx": 2,
                    "url_ptr": 1
                }
            },
            "called": [
                "FUN_00102fc7"
            ],
            "calling": [
                "FUN_00105370"
            ],
            "code": "\nchar * extract_file_name_00102cbc(undefined8 param1,char *file_path)\n\n{\n  ulong size;\n  long length;\n  char current_char;\n  char *current_char;\n  char *last_slash;\n  undefined8 error_message;\n  ulong remaining_size;\n  ulong extra_size;\n  char *unaffected_rbx;\n  ulong path_length;\n  byte flag;\n  \n  flag = 0;\n  xmalloc_failed();\n  current_char = unaffected_rbx;\n  last_slash = unaffected_rbx;\n  while (current_char = *current_char, current_char != '\\0') {\n    current_char = current_char + 1;\n    if (current_char == '/') {\n      last_slash = current_char;\n    }\n  }\n  if ((*file_path == '/') || (unaffected_rbx == last_slash)) {\n    if (extra_size + 1 == 0) {\n      return (char *)0x0;\n    }\n    last_slash = (char *)malloc(extra_size + 1);\n    remaining_size = extra_size;\n    current_char = last_slash;\n    if (last_slash != (char *)0x0) {\n      for (; remaining_size != 0; remaining_size = remaining_size - 1) {\n        *current_char = *file_path;\n        file_path = file_path + (ulong)flag * -2 + 1;\n        current_char = current_char + (ulong)flag * -2 + 1;\n      }\n      last_slash[extra_size] = '\\0';\n      return last_slash;\n    }\n  }\n  else {\n    path_length = (long)last_slash - (long)unaffected_rbx;\n    length = path_length + extra_size;\n    remaining_size = extra_size;\n    if (extra_size <= path_length) {\n      remaining_size = path_length;\n    }\n    size = length + 1;\n    if (size < remaining_size) {\n      error_message = get_error_message(0,\"Abnormal length of thin archive member name: %lx\\n\",5);\n      print_error_message(error_message,extra_size);\n      return (char *)0x0;\n    }\n    last_slash = (char *)malloc(size);\n    current_char = last_slash;\n    if (last_slash != (char *)0x0) {\n      for (; remaining_size = extra_size, path_length != 0; path_length = path_length - 1) {\n        *current_char = *unaffected_rbx;\n        unaffected_rbx = unaffected_rbx + (ulong)flag * -2 + 1;\n        current_char = current_char + (ulong)flag * -2 + 1;\n      }\n      for (; remaining_size != 0; remaining_size = remaining_size - 1) {\n        *current_char = *file_path;\n        file_path = file_path + (ulong)flag * -2 + 1;\n        current_char = current_char + (ulong)flag * -2 + 1;\n      }\n      last_slash[length] = '\\0';\n      return last_slash;\n    }\n  }\n  error_message = get_error_message(0,\"Out of memory\\n\",5);\n  print_error_message(error_message);\n  return (char *)0x0;\n}\n\n",
            "current_name": "extract_file_name_00102cbc",
            "entrypoint": "0x00102cbc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102cbc": "extract_file_name_00102cbc",
                "__size": "size",
                "bVar8": "flag",
                "cVar2": "current_char",
                "dcgettext": "get_error_message",
                "error": "print_error_message",
                "extraout_RDX": "extra_size",
                "lVar1": "length",
                "param_1": "param1",
                "param_2": "file_path",
                "pcVar3": "current_char",
                "pcVar4": "last_slash",
                "uVar5": "error_message",
                "uVar6": "remaining_size",
                "uVar7": "path_length",
                "unaff_RBX": "unaffected_rbx"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102cc4": {
            "additional_data": {
                "FUN_00102cc4": {
                    "extract_file_name": 20,
                    "extract_filename": 3,
                    "extract_filename_or_allocate_memory": 1,
                    "extract_last_path_component": 1,
                    "extract_last_token": 1,
                    "get_filename_from_path": 1,
                    "parse_file_path": 1,
                    "process_path": 1,
                    "reverse_and_copy_string": 1,
                    "reverse_filename": 1
                },
                "__size": {
                    "allocated_size": 6,
                    "allocation_size": 1,
                    "buffer_size": 3,
                    "final_size": 2,
                    "new_size": 3,
                    "new_string_size": 1,
                    "size": 5,
                    "total_length": 1,
                    "total_size": 8
                },
                "bVar8": {
                    "add_offset": 1,
                    "flag": 1,
                    "found_slash": 1,
                    "increment": 2,
                    "is_at_end": 1,
                    "is_backward": 1,
                    "is_checked": 1,
                    "is_double_byte": 1,
                    "is_escaped": 1,
                    "is_first_slash": 1,
                    "is_forward_slash": 2,
                    "is_negative": 11,
                    "is_negative_index": 1,
                    "is_reversed": 2,
                    "is_reversing": 1,
                    "is_slash": 1,
                    "is_windows_path": 1,
                    "slash_flag": 1
                },
                "cVar2": {
                    "curr_char": 1,
                    "current_char": 23,
                    "current_char_value": 1
                },
                "dcgettext": {
                    "get_translated_string": 1,
                    "get_translation": 1
                },
                "error": {
                    "display_error": 1,
                    "print_error": 1
                },
                "lVar1": {
                    "adjusted_length": 1,
                    "desired_size": 1,
                    "final_length": 3,
                    "final_size": 2,
                    "full_name_size": 1,
                    "length": 1,
                    "new_length": 3,
                    "required_size": 1,
                    "total_length": 11,
                    "total_size": 6
                },
                "param_1": {
                    "file_path": 9,
                    "full_path": 1,
                    "input_path": 1,
                    "input_string": 3,
                    "path": 15,
                    "source_string": 2
                },
                "param_2": {
                    "copy_string": 1,
                    "destination_string": 1,
                    "extension": 1,
                    "file_content": 2,
                    "file_name": 7,
                    "filename": 9,
                    "name": 1,
                    "source": 4,
                    "source_string": 4,
                    "token": 1
                },
                "param_3": {
                    "file_length": 1,
                    "file_name_length": 5,
                    "file_size": 1,
                    "filename_length": 1,
                    "length": 19,
                    "size": 1,
                    "source_string_length": 1,
                    "string_length": 1,
                    "token_length": 1
                },
                "path": {
                    "current_path": 1
                },
                "pcVar3": {
                    "buffer_pointer": 1,
                    "current": 1,
                    "current_char": 2,
                    "current_dst": 1,
                    "dest": 4,
                    "dest_pointer": 2,
                    "dest_ptr": 2,
                    "dst": 1,
                    "full_name_ptr": 1,
                    "new_content": 1,
                    "new_file_path": 1,
                    "new_path": 2,
                    "new_path_ptr": 1,
                    "new_source_string": 1,
                    "new_string_pointer": 1,
                    "output_path": 1,
                    "output_string": 2,
                    "path_iterator": 1,
                    "path_pointer": 1,
                    "path_ptr": 1,
                    "ptr1": 1,
                    "source_ptr": 1,
                    "target_string": 1
                },
                "pcVar4": {
                    "file_name_ptr": 1,
                    "file_name_start": 1,
                    "filename_end_pointer": 1,
                    "filename_pointer": 1,
                    "filename_ptr": 2,
                    "filename_start": 1,
                    "last_delimiter": 1,
                    "last_slash": 13,
                    "last_slash_index": 1,
                    "last_slash_location": 1,
                    "last_slash_pointer": 2,
                    "last_slash_pos": 1,
                    "ptr2": 1,
                    "slash_pos": 1,
                    "slash_ptr": 2,
                    "token_position": 1
                },
                "source": {
                    "source": 1
                },
                "uVar5": {
                    "err_msg": 1,
                    "error_message": 16,
                    "error_msg": 9,
                    "error_str": 2,
                    "error_string": 3
                },
                "uVar6": {
                    "copy_size": 1,
                    "iteration_count": 1,
                    "len": 1,
                    "length_remaining": 1,
                    "loop_counter": 2,
                    "loop_size": 1,
                    "new_string_length": 1,
                    "remaining_length": 18,
                    "remaining_size": 5
                },
                "uVar7": {
                    "copy_length": 1,
                    "delimiter_offset": 1,
                    "file_name_length": 2,
                    "file_part_length": 1,
                    "file_part_size": 1,
                    "file_path_length": 1,
                    "file_path_size": 1,
                    "filename_length": 3,
                    "name_offset": 1,
                    "path_length": 11,
                    "prefix_length": 1,
                    "prefix_size": 2,
                    "slash_distance": 1,
                    "slash_index": 2,
                    "slashes_count": 1,
                    "source_string_offset": 1
                }
            },
            "called": [
                "FUN_00102e85",
                "FUN_001020d0",
                "FUN_001021b0"
            ],
            "calling": [
                "FUN_0010358d",
                "FUN_001029a5"
            ],
            "code": "\nchar * extract_file_name_00102cc4(char *path,char *filename,ulong length)\n\n{\n  ulong total_size;\n  long total_length;\n  char current_char;\n  char *dest;\n  char *last_slash;\n  undefined8 error_message;\n  ulong remaining_length;\n  ulong path_length;\n  byte is_negative;\n  \n  is_negative = 0;\n  dest = path;\n  last_slash = path;\n  while (current_char = *dest, current_char != '\\0') {\n    dest = dest + 1;\n    if (current_char == '/') {\n      last_slash = dest;\n    }\n  }\n  if ((*filename == '/') || (path == last_slash)) {\n    if (length + 1 == 0) {\n      return (char *)0x0;\n    }\n    last_slash = (char *)malloc(length + 1);\n    remaining_length = length;\n    dest = last_slash;\n    if (last_slash != (char *)0x0) {\n      for (; remaining_length != 0; remaining_length = remaining_length - 1) {\n        *dest = *filename;\n        filename = filename + (ulong)is_negative * -2 + 1;\n        dest = dest + (ulong)is_negative * -2 + 1;\n      }\n      last_slash[length] = '\\0';\n      return last_slash;\n    }\n  }\n  else {\n    path_length = (long)last_slash - (long)path;\n    total_length = path_length + length;\n    remaining_length = length;\n    if (length <= path_length) {\n      remaining_length = path_length;\n    }\n    total_size = total_length + 1;\n    if (total_size < remaining_length) {\n      error_message = get_translation(0,\"Abnormal length of thin archive member name: %lx\\n\",5);\n      display_error(error_message,length);\n      return (char *)0x0;\n    }\n    last_slash = (char *)malloc(total_size);\n    dest = last_slash;\n    if (last_slash != (char *)0x0) {\n      for (; path_length != 0; path_length = path_length - 1) {\n        *dest = *path;\n        path = path + (ulong)is_negative * -2 + 1;\n        dest = dest + (ulong)is_negative * -2 + 1;\n      }\n      for (; length != 0; length = length - 1) {\n        *dest = *filename;\n        filename = filename + (ulong)is_negative * -2 + 1;\n        dest = dest + (ulong)is_negative * -2 + 1;\n      }\n      last_slash[total_length] = '\\0';\n      return last_slash;\n    }\n  }\n  error_message = get_translation(0,\"Out of memory\\n\",5);\n  display_error(error_message);\n  return (char *)0x0;\n}\n\n",
            "current_name": "extract_file_name_00102cc4",
            "entrypoint": "0x00102cc4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102cc4": "extract_file_name_00102cc4",
                "__size": "total_size",
                "bVar8": "is_negative",
                "cVar2": "current_char",
                "dcgettext": "get_translation",
                "error": "display_error",
                "lVar1": "total_length",
                "param_1": "path",
                "param_2": "filename",
                "param_3": "length",
                "pcVar3": "dest",
                "pcVar4": "last_slash",
                "uVar5": "error_message",
                "uVar6": "remaining_length",
                "uVar7": "path_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102da5": {
            "additional_data": {
                "FUN_00102da5": {
                    "print_warning": 17,
                    "print_warning_message": 14
                },
                "__format": {
                    "format_string": 3,
                    "warning_format": 15,
                    "warning_message_format": 2,
                    "warning_string": 1,
                    "warning_text": 2
                },
                "_stderr": {
                    "stderr": 1
                },
                "_stdout": {
                    "stdout": 1
                },
                "dcgettext": {
                    "get_warning": 1
                },
                "fprintf": {
                    "print": 1
                },
                "in_AL": {
                    "character": 2,
                    "check_condition": 1,
                    "condition": 8,
                    "flag": 8,
                    "input_char": 2,
                    "input_flag": 1,
                    "is_not_empty": 1,
                    "should_flush": 1
                },
                "local_28": {
                    "arg8": 1,
                    "arg8_buffer": 1,
                    "arg8_copy": 1,
                    "local28": 1,
                    "local8": 1,
                    "local_arg8": 5,
                    "local_input_8": 1,
                    "local_input_param8": 1,
                    "local_param8": 2,
                    "local_var12": 1,
                    "local_var13": 1,
                    "local_var17": 1,
                    "local_var8": 2,
                    "local_variable15": 1,
                    "local_variable17": 1,
                    "param8_copy": 1,
                    "param_8": 2,
                    "unused_local_param8": 1,
                    "unused_param8": 1,
                    "var13": 1,
                    "warning_msg8": 1
                },
                "local_38": {
                    "arg7": 1,
                    "arg7_buffer": 1,
                    "arg7_copy": 1,
                    "local38": 1,
                    "local7": 1,
                    "local_arg7": 5,
                    "local_input_7": 1,
                    "local_input_param7": 1,
                    "local_param7": 2,
                    "local_var11": 1,
                    "local_var12": 1,
                    "local_var16": 1,
                    "local_var7": 2,
                    "local_variable14": 1,
                    "local_variable16": 1,
                    "param7_copy": 1,
                    "param_7": 2,
                    "unused_local_param7": 1,
                    "unused_param7": 1,
                    "var12": 1,
                    "warning_msg7": 1
                },
                "local_48": {
                    "arg6": 1,
                    "arg6_buffer": 1,
                    "arg6_copy": 1,
                    "local48": 1,
                    "local6": 1,
                    "local_arg6": 5,
                    "local_input_6": 1,
                    "local_input_param6": 1,
                    "local_param6": 2,
                    "local_var10": 1,
                    "local_var11": 1,
                    "local_var15": 1,
                    "local_var6": 2,
                    "local_variable13": 1,
                    "local_variable15": 1,
                    "param6_copy": 1,
                    "param_6": 2,
                    "unused_local_param6": 1,
                    "unused_param6": 1,
                    "var11": 1,
                    "warning_msg6": 1
                },
                "local_58": {
                    "arg5": 1,
                    "arg5_buffer": 1,
                    "arg5_copy": 1,
                    "local5": 1,
                    "local58": 1,
                    "local_arg5": 5,
                    "local_input_5": 1,
                    "local_input_param5": 1,
                    "local_param5": 2,
                    "local_var10": 1,
                    "local_var14": 1,
                    "local_var5": 2,
                    "local_var9": 1,
                    "local_variable12": 1,
                    "local_variable14": 1,
                    "param5_copy": 1,
                    "param_5": 2,
                    "unused_local_param5": 1,
                    "unused_param5": 1,
                    "var10": 1,
                    "warning_msg5": 1
                },
                "local_68": {
                    "arg4": 1,
                    "arg4_buffer": 1,
                    "arg4_copy": 1,
                    "local4": 1,
                    "local68": 1,
                    "local_arg4": 5,
                    "local_input_4": 1,
                    "local_input_param4": 1,
                    "local_param4": 2,
                    "local_var13": 1,
                    "local_var4": 2,
                    "local_var8": 1,
                    "local_var9": 1,
                    "local_variable11": 1,
                    "local_variable13": 1,
                    "param4_copy": 1,
                    "param_4": 2,
                    "unused_local_param4": 1,
                    "unused_param4": 1,
                    "var9": 1,
                    "warning_msg4": 1
                },
                "local_78": {
                    "arg3": 1,
                    "arg3_buffer": 1,
                    "arg3_copy": 1,
                    "local3": 1,
                    "local78": 1,
                    "local_arg3": 5,
                    "local_input_3": 1,
                    "local_input_param3": 1,
                    "local_param3": 2,
                    "local_var12": 1,
                    "local_var3": 2,
                    "local_var7": 1,
                    "local_var8": 1,
                    "local_variable10": 1,
                    "local_variable12": 1,
                    "param3_copy": 1,
                    "param_3": 2,
                    "unused_local_param3": 1,
                    "unused_param3": 1,
                    "var8": 1,
                    "warning_msg3": 1
                },
                "local_88": {
                    "arg2": 1,
                    "arg2_buffer": 1,
                    "arg2_copy": 1,
                    "local2": 1,
                    "local88": 1,
                    "local_arg2": 5,
                    "local_input_2": 1,
                    "local_input_param2": 1,
                    "local_param2": 2,
                    "local_var11": 1,
                    "local_var2": 2,
                    "local_var6": 1,
                    "local_var7": 1,
                    "local_variable11": 1,
                    "local_variable9": 1,
                    "param2_copy": 1,
                    "param_2": 2,
                    "unused_local_param2": 1,
                    "unused_param2": 1,
                    "var7": 1,
                    "warning_msg2": 1
                },
                "local_98": {
                    "arg1": 1,
                    "arg1_buffer": 1,
                    "arg1_copy": 1,
                    "local1": 1,
                    "local98": 1,
                    "local_arg1": 5,
                    "local_input_1": 1,
                    "local_input_param1": 1,
                    "local_param1": 2,
                    "local_var1": 2,
                    "local_var10": 1,
                    "local_var5": 1,
                    "local_var6": 1,
                    "local_variable10": 1,
                    "local_variable8": 1,
                    "param1_copy": 1,
                    "param_1": 2,
                    "unused_local_param1": 1,
                    "unused_param1": 1,
                    "var6": 1,
                    "warning_msg1": 1
                },
                "local_a0": {
                    "local14": 2,
                    "local30": 1,
                    "local_5": 1,
                    "local_a0": 1,
                    "local_arg5": 1,
                    "local_param14": 7,
                    "local_param5": 2,
                    "local_var4": 1,
                    "local_var5": 1,
                    "local_var9": 1,
                    "local_variable7": 1,
                    "local_variable9": 1,
                    "param12": 1,
                    "param14": 1,
                    "param14_copy": 2,
                    "param_14": 2,
                    "param_5": 1,
                    "param_value5": 1,
                    "var5": 1
                },
                "local_a8": {
                    "local13": 2,
                    "local28": 1,
                    "local_4": 1,
                    "local_a8": 1,
                    "local_arg4": 1,
                    "local_param13": 7,
                    "local_param4": 2,
                    "local_var3": 1,
                    "local_var4": 1,
                    "local_var8": 1,
                    "local_variable6": 1,
                    "local_variable8": 1,
                    "param11": 1,
                    "param13": 1,
                    "param13_copy": 2,
                    "param_13": 2,
                    "param_4": 1,
                    "param_value4": 1,
                    "var4": 1
                },
                "local_b0": {
                    "local12": 2,
                    "local20": 1,
                    "local_3": 1,
                    "local_arg3": 1,
                    "local_b0": 1,
                    "local_param12": 7,
                    "local_param3": 2,
                    "local_var2": 1,
                    "local_var3": 1,
                    "local_var7": 1,
                    "local_variable5": 1,
                    "local_variable7": 1,
                    "param10": 1,
                    "param12": 1,
                    "param12_copy": 2,
                    "param_12": 2,
                    "param_3": 1,
                    "param_value3": 1,
                    "var3": 1
                },
                "local_b8": {
                    "local11": 2,
                    "local18": 1,
                    "local_2": 1,
                    "local_arg2": 1,
                    "local_b8": 1,
                    "local_param11": 7,
                    "local_param2": 2,
                    "local_var1": 1,
                    "local_var2": 1,
                    "local_var6": 1,
                    "local_variable4": 1,
                    "local_variable6": 1,
                    "param11": 1,
                    "param11_copy": 2,
                    "param9": 1,
                    "param_11": 2,
                    "param_2": 1,
                    "param_value2": 1,
                    "var2": 1
                },
                "local_c0": {
                    "local10": 3,
                    "local_1": 1,
                    "local_arg1": 1,
                    "local_c0": 1,
                    "local_param1": 2,
                    "local_param10": 7,
                    "local_var0": 1,
                    "local_var1": 1,
                    "local_var5": 1,
                    "local_variable3": 1,
                    "local_variable5": 1,
                    "param10": 1,
                    "param10_copy": 2,
                    "param8": 1,
                    "param_1": 1,
                    "param_10": 2,
                    "param_value1": 1,
                    "var1": 1
                },
                "local_c8": {
                    "buffer": 4,
                    "buffer_array": 1,
                    "c8_buffer": 1,
                    "local_array": 6,
                    "local_array1": 1,
                    "local_buffer": 8,
                    "local_char_array": 1,
                    "local_data": 3,
                    "local_variable": 2,
                    "temp_buffer": 2
                },
                "local_d0": {
                    "buffer": 5,
                    "buffer2": 1,
                    "destination": 1,
                    "destination_pointer": 1,
                    "local_buffer": 6,
                    "local_data": 1,
                    "local_pointer2": 1,
                    "local_ptr2": 2,
                    "local_var4": 1,
                    "local_variable": 1,
                    "local_variable4": 1,
                    "message_buffer": 1,
                    "output_buffer": 1,
                    "pointer2": 3,
                    "ptr_2": 1,
                    "stack_variable": 1,
                    "val2": 1
                },
                "local_d8": {
                    "buffer": 2,
                    "buffer1": 1,
                    "buffer_offset": 1,
                    "buffer_pointer": 1,
                    "buffer_ptr": 1,
                    "local_pointer1": 1,
                    "local_ptr": 1,
                    "local_ptr1": 2,
                    "local_var3": 1,
                    "local_variable3": 1,
                    "pointer1": 4,
                    "ptr_1": 1,
                    "source": 1,
                    "source_pointer": 1,
                    "stack_pointer": 8,
                    "stack_ptr": 1,
                    "val1": 1
                },
                "local_dc": {
                    "byte_value": 1,
                    "char_size": 1,
                    "char_value": 2,
                    "character": 3,
                    "constant": 1,
                    "constant_value": 1,
                    "fill_character": 1,
                    "initial_value": 1,
                    "line_length": 1,
                    "local_var": 1,
                    "local_var2": 1,
                    "local_variable2": 2,
                    "max_size": 1,
                    "offset": 1,
                    "output_length": 1,
                    "padding": 1,
                    "padding_value": 1,
                    "value": 6
                },
                "local_e0": {
                    "array_size": 1,
                    "buffer_length": 1,
                    "buffer_size": 7,
                    "count": 2,
                    "format_length": 1,
                    "length": 3,
                    "local_var1": 1,
                    "local_variable1": 2,
                    "num_bytes": 1,
                    "num_chars": 1,
                    "size": 9,
                    "warning_length": 1
                },
                "param_1": {
                    "arg1": 10,
                    "file_descriptor": 3,
                    "first_param": 1,
                    "format_string": 1,
                    "input_1": 1,
                    "input_param1": 1,
                    "param1": 1,
                    "severity_level": 1,
                    "warning_code": 4,
                    "warning_msg1": 1,
                    "warning_param1": 1
                },
                "param_10": {
                    "arg1": 1,
                    "param1": 1,
                    "param10": 21,
                    "param_1": 2,
                    "param_10": 4
                },
                "param_11": {
                    "arg2": 1,
                    "param11": 21,
                    "param2": 1,
                    "param_11": 4,
                    "param_2": 2
                },
                "param_12": {
                    "arg3": 1,
                    "param12": 21,
                    "param3": 1,
                    "param_12": 4,
                    "param_3": 2
                },
                "param_13": {
                    "arg4": 1,
                    "param13": 21,
                    "param4": 1,
                    "param_13": 4,
                    "param_4": 2
                },
                "param_14": {
                    "arg5": 1,
                    "param14": 21,
                    "param5": 1,
                    "param_14": 4,
                    "param_5": 2
                },
                "param_2": {
                    "arg2": 10,
                    "input_2": 1,
                    "input_param2": 1,
                    "message_type": 1,
                    "param2": 6,
                    "param_2": 3,
                    "second_param": 1,
                    "warning_msg2": 1,
                    "warning_param2": 1
                },
                "param_3": {
                    "arg3": 10,
                    "input_3": 1,
                    "input_param3": 1,
                    "param3": 6,
                    "param_3": 3,
                    "third_param": 1,
                    "warning_level": 1,
                    "warning_msg3": 1,
                    "warning_param3": 1
                },
                "param_4": {
                    "arg4": 10,
                    "error_level": 1,
                    "fourth_param": 1,
                    "input_4": 1,
                    "input_param4": 1,
                    "param4": 6,
                    "param_4": 3,
                    "warning_msg4": 1,
                    "warning_param4": 1
                },
                "param_5": {
                    "arg5": 10,
                    "fifth_param": 1,
                    "info_level": 1,
                    "input_5": 1,
                    "input_param5": 1,
                    "param5": 6,
                    "param_5": 3,
                    "warning_msg5": 1,
                    "warning_param5": 1
                },
                "param_6": {
                    "arg6": 10,
                    "debug_level": 1,
                    "input_6": 1,
                    "input_param6": 1,
                    "param6": 6,
                    "param_6": 3,
                    "sixth_param": 1,
                    "warning_msg6": 1,
                    "warning_param6": 1
                },
                "param_7": {
                    "arg7": 10,
                    "input_7": 1,
                    "input_param7": 1,
                    "param7": 6,
                    "param_7": 3,
                    "seventh_param": 1,
                    "verbose_level": 1,
                    "warning_msg7": 1,
                    "warning_param7": 1
                },
                "param_8": {
                    "arg8": 10,
                    "eighth_param": 1,
                    "input_8": 1,
                    "input_param8": 1,
                    "log_level": 1,
                    "param8": 6,
                    "param_8": 3,
                    "warning_msg8": 1,
                    "warning_param8": 1
                },
                "param_9": {
                    "error_message": 3,
                    "format_string": 4,
                    "message": 12,
                    "warning_message": 12
                },
                "stack0x00000008": {
                    "stack": 1
                },
                "vfprintf": {
                    "print_with_vars": 1
                }
            },
            "called": [
                "FUN_001021c0",
                "FUN_00102230",
                "FUN_00102160",
                "FUN_001020d0"
            ],
            "calling": [],
            "code": "\n\n\nvoid print_warning_message_00102da5(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4,\n                 undefined4 arg5,undefined4 arg6,undefined4 arg7,undefined4 arg8,\n                 char *message,undefined8 param10,undefined8 param11,undefined8 param12,\n                 undefined8 param13,undefined8 param14)\n\n{\n  char flag;\n  char *warning_format;\n  undefined4 size;\n  undefined4 value;\n  undefined *stack_pointer;\n  undefined *local_buffer;\n  undefined local_buffer [8];\n  undefined8 local_param10;\n  undefined8 local_param11;\n  undefined8 local_param12;\n  undefined8 local_param13;\n  undefined8 local_param14;\n  undefined4 local_arg1;\n  undefined4 local_arg2;\n  undefined4 local_arg3;\n  undefined4 local_arg4;\n  undefined4 local_arg5;\n  undefined4 local_arg6;\n  undefined4 local_arg7;\n  undefined4 local_arg8;\n  \n  if (flag != '\\0') {\n    local_arg1 = arg1;\n    local_arg2 = arg2;\n    local_arg3 = arg3;\n    local_arg4 = arg4;\n    local_arg5 = arg5;\n    local_arg6 = arg6;\n    local_arg7 = arg7;\n    local_arg8 = arg8;\n  }\n  local_param10 = param10;\n  local_param11 = param11;\n  local_param12 = param12;\n  local_param13 = param13;\n  local_param14 = param14;\n  fflush(stdout);\n  stack_pointer = &stack;\n  local_buffer = local_buffer;\n  size = 8;\n  value = 0x30;\n  warning_format = (char *)get_warning(0,\"%s: Warning: \",5);\n  print(stderr,warning_format,\"elfedit\");\n  print_with_vars(stderr,message,&size);\n  return;\n}\n\n",
            "current_name": "print_warning_message_00102da5",
            "entrypoint": "0x00102da5",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102da5": "print_warning_message_00102da5",
                "__format": "warning_format",
                "_stderr": "stderr",
                "_stdout": "stdout",
                "dcgettext": "get_warning",
                "fprintf": "print",
                "in_AL": "flag",
                "local_28": "local_arg8",
                "local_38": "local_arg7",
                "local_48": "local_arg6",
                "local_58": "local_arg5",
                "local_68": "local_arg4",
                "local_78": "local_arg3",
                "local_88": "local_arg2",
                "local_98": "local_arg1",
                "local_a0": "local_param14",
                "local_a8": "local_param13",
                "local_b0": "local_param12",
                "local_b8": "local_param11",
                "local_c0": "local_param10",
                "local_c8": "local_buffer",
                "local_d0": "local_buffer",
                "local_d8": "stack_pointer",
                "local_dc": "value",
                "local_e0": "size",
                "param_1": "arg1",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13",
                "param_14": "param14",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "param_5": "arg5",
                "param_6": "arg6",
                "param_7": "arg7",
                "param_8": "arg8",
                "param_9": "message",
                "stack0x00000008": "stack",
                "vfprintf": "print_with_vars"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102e85": {
            "additional_data": {
                "FUN_00102e85": {
                    "display_error": 1,
                    "print_elfedit_error": 1,
                    "print_error": 10,
                    "print_error_message": 19
                },
                "__format": {
                    "error_format": 1,
                    "error_message": 1,
                    "error_message_format": 2,
                    "error_msg_format": 2,
                    "format_str": 2,
                    "format_string": 15,
                    "message_format": 1
                },
                "_stderr": {
                    "standard_error": 3
                },
                "_stdout": {
                    "standard_output": 3
                },
                "fprintf": {
                    "print_to_error": 1
                },
                "in_AL": {
                    "boolean_flag": 1,
                    "condition": 5,
                    "error_flag": 1,
                    "flag": 13,
                    "input_flag": 5,
                    "input_value": 1,
                    "is_error": 1,
                    "some_flag": 1
                },
                "local_28": {
                    "error_code8": 1,
                    "error_code8_copy": 2,
                    "error_code8copy": 1,
                    "local_104": 1,
                    "local_80": 1,
                    "local_arg8": 3,
                    "local_error8": 1,
                    "local_param13": 1,
                    "local_param8": 5,
                    "local_param_8": 1,
                    "local_parameter8": 1,
                    "local_var13": 2,
                    "local_variable13": 1,
                    "param8_copy": 3,
                    "param8_ptr": 1,
                    "param_8": 2,
                    "var13": 1
                },
                "local_38": {
                    "error_code7": 1,
                    "error_code7_copy": 2,
                    "error_code7copy": 1,
                    "local_78": 1,
                    "local_96": 1,
                    "local_arg7": 3,
                    "local_error7": 1,
                    "local_param12": 1,
                    "local_param7": 5,
                    "local_param_7": 1,
                    "local_parameter7": 1,
                    "local_var12": 2,
                    "local_variable12": 1,
                    "param7_copy": 3,
                    "param7_ptr": 1,
                    "param_7": 2,
                    "var12": 1
                },
                "local_48": {
                    "error_code6": 1,
                    "error_code6_copy": 2,
                    "error_code6copy": 1,
                    "local_70": 1,
                    "local_88": 1,
                    "local_arg6": 3,
                    "local_error6": 1,
                    "local_param11": 1,
                    "local_param6": 5,
                    "local_param_6": 1,
                    "local_parameter6": 1,
                    "local_var11": 2,
                    "local_variable11": 1,
                    "param6_copy": 3,
                    "param6_ptr": 1,
                    "param_6": 2,
                    "var11": 1
                },
                "local_58": {
                    "error_code5": 1,
                    "error_code5_copy": 2,
                    "error_code5copy": 1,
                    "local_60": 1,
                    "local_80": 1,
                    "local_arg5": 3,
                    "local_error5": 1,
                    "local_param10": 1,
                    "local_param5": 5,
                    "local_param_5": 1,
                    "local_parameter5": 1,
                    "local_var10": 2,
                    "local_variable10": 1,
                    "param5_copy": 3,
                    "param5_ptr": 1,
                    "param_5": 2,
                    "var10": 1
                },
                "local_68": {
                    "error_code4": 1,
                    "error_code4_copy": 2,
                    "error_code4copy": 1,
                    "local_58": 1,
                    "local_72": 1,
                    "local_arg4": 3,
                    "local_error4": 1,
                    "local_param4": 5,
                    "local_param9": 1,
                    "local_param_4": 1,
                    "local_parameter4": 1,
                    "local_var9": 2,
                    "local_variable9": 1,
                    "param4_copy": 3,
                    "param4_ptr": 1,
                    "param_4": 2,
                    "var9": 1
                },
                "local_78": {
                    "error_code3": 1,
                    "error_code3_copy": 2,
                    "error_code3copy": 1,
                    "local_50": 1,
                    "local_64": 1,
                    "local_arg3": 3,
                    "local_error3": 1,
                    "local_param3": 5,
                    "local_param8": 1,
                    "local_param_3": 1,
                    "local_parameter3": 1,
                    "local_var8": 2,
                    "local_variable8": 1,
                    "param3_copy": 3,
                    "param3_ptr": 1,
                    "param_3": 2,
                    "var8": 1
                },
                "local_88": {
                    "error_code2": 1,
                    "error_code2_copy": 2,
                    "error_code2copy": 1,
                    "local_48": 1,
                    "local_56": 1,
                    "local_arg2": 3,
                    "local_error2": 1,
                    "local_param2": 5,
                    "local_param7": 1,
                    "local_param_2": 1,
                    "local_parameter2": 1,
                    "local_var7": 2,
                    "local_variable7": 1,
                    "param2_copy": 3,
                    "param2_ptr": 1,
                    "param_2": 2,
                    "var7": 1
                },
                "local_98": {
                    "error_code1": 1,
                    "error_code1_copy": 2,
                    "error_code1copy": 1,
                    "error_code_copy": 2,
                    "error_code_ptr": 1,
                    "local_40": 1,
                    "local_48": 1,
                    "local_arg1": 3,
                    "local_error1": 1,
                    "local_error_code": 1,
                    "local_param1": 5,
                    "local_param6": 1,
                    "local_param_1": 1,
                    "local_var6": 2,
                    "local_variable6": 1,
                    "param1_copy": 1,
                    "param_1": 2,
                    "var6": 1
                },
                "local_a0": {
                    "local_30": 2,
                    "local_param14": 11,
                    "local_param5": 2,
                    "local_param_14": 1,
                    "local_var5": 2,
                    "local_variable5": 1,
                    "param14": 5,
                    "param14_copy": 2,
                    "param_14": 1,
                    "param_5": 1,
                    "param_ecopy": 1,
                    "var5": 1
                },
                "local_a8": {
                    "local_28": 2,
                    "local_param13": 11,
                    "local_param4": 2,
                    "local_param_13": 1,
                    "local_var4": 2,
                    "local_variable4": 1,
                    "param13": 5,
                    "param13_copy": 2,
                    "param_13": 1,
                    "param_4": 1,
                    "param_dcopy": 1,
                    "var4": 1
                },
                "local_b0": {
                    "local_20": 2,
                    "local_param12": 11,
                    "local_param3": 2,
                    "local_param_12": 1,
                    "local_var3": 2,
                    "local_variable3": 1,
                    "param12": 5,
                    "param12_copy": 2,
                    "param_12": 1,
                    "param_3": 1,
                    "param_ccopy": 1,
                    "var3": 1
                },
                "local_b8": {
                    "local_18": 2,
                    "local_param11": 11,
                    "local_param2": 2,
                    "local_param_11": 1,
                    "local_var2": 2,
                    "local_variable2": 1,
                    "param11": 5,
                    "param11_copy": 2,
                    "param_11": 1,
                    "param_2": 1,
                    "param_bcopy": 1,
                    "var2": 1
                },
                "local_c0": {
                    "local_10": 2,
                    "local_param1": 2,
                    "local_param10": 11,
                    "local_param_10": 1,
                    "local_var1": 2,
                    "local_variable1": 1,
                    "param10": 5,
                    "param10_copy": 2,
                    "param_1": 1,
                    "param_10": 1,
                    "param_acopy": 1,
                    "var1": 1
                },
                "local_c8": {
                    "buffer": 3,
                    "error_buffer": 1,
                    "local_array": 8,
                    "local_buffer": 7,
                    "local_buffer_contents": 1,
                    "local_buffer_mem": 1,
                    "local_char_array": 2,
                    "local_char_buffer": 1,
                    "local_variable": 4,
                    "output_buffer": 1
                },
                "local_d0": {
                    "buffer": 1,
                    "char_buffer": 1,
                    "error_buffer": 3,
                    "error_code": 1,
                    "local_array": 1,
                    "local_buffer": 14,
                    "local_memory": 1,
                    "local_var2": 1,
                    "local_var3": 1,
                    "local_var4": 1,
                    "local_variable": 1,
                    "pointer2": 1,
                    "ptr2": 2,
                    "ptr_local": 1
                },
                "local_d8": {
                    "buffer": 1,
                    "buffer_ptr": 2,
                    "input_buffer": 1,
                    "local_buffer_ptr": 1,
                    "local_pointer": 1,
                    "local_var1": 1,
                    "local_var2": 1,
                    "local_var3": 1,
                    "pointer1": 1,
                    "pointer_to_stack": 1,
                    "ptr1": 2,
                    "ptr_stack": 1,
                    "source_pointer": 1,
                    "stack_pointer": 13,
                    "string_pointer": 1
                },
                "local_dc": {
                    "char_value": 4,
                    "character": 2,
                    "constant": 1,
                    "file_mode": 1,
                    "fill_character": 1,
                    "filler_val": 1,
                    "hex_value": 1,
                    "indent_size": 1,
                    "local_var1": 1,
                    "local_var2": 1,
                    "offset": 1,
                    "output_char": 1,
                    "padding": 2,
                    "padding_character": 1,
                    "padding_value": 1,
                    "print_format": 1,
                    "start_char": 1,
                    "value": 5
                },
                "local_e0": {
                    "buffer_length": 1,
                    "buffer_size": 19,
                    "count": 1,
                    "length": 4,
                    "memory_size": 1,
                    "num1": 1,
                    "size": 3
                },
                "param_1": {
                    "arg1": 4,
                    "argc": 1,
                    "error1": 2,
                    "error_code": 13,
                    "error_code1": 3,
                    "local_param_1": 1
                },
                "param_10": {
                    "local_param_10": 1,
                    "param": 1,
                    "param1": 5,
                    "param10": 17,
                    "param10_value": 1,
                    "param_1": 1,
                    "param_10": 2,
                    "param_a": 1,
                    "unused1": 1
                },
                "param_11": {
                    "local_param_11": 1,
                    "param": 1,
                    "param11": 17,
                    "param11_value": 1,
                    "param2": 5,
                    "param_11": 2,
                    "param_2": 1,
                    "param_b": 1,
                    "unused2": 1
                },
                "param_12": {
                    "local_param_12": 1,
                    "param": 1,
                    "param12": 17,
                    "param12_value": 1,
                    "param3": 5,
                    "param_12": 2,
                    "param_3": 1,
                    "param_c": 1,
                    "unused3": 1
                },
                "param_13": {
                    "local_param_13": 1,
                    "param": 1,
                    "param13": 17,
                    "param13_value": 1,
                    "param4": 5,
                    "param_13": 2,
                    "param_4": 1,
                    "param_d": 1,
                    "unused4": 1
                },
                "param_14": {
                    "local_param_14": 1,
                    "param": 1,
                    "param14": 17,
                    "param14_value": 1,
                    "param5": 5,
                    "param_14": 2,
                    "param_5": 1,
                    "param_e": 1,
                    "unused5": 1
                },
                "param_2": {
                    "arg2": 4,
                    "argv": 1,
                    "error2": 2,
                    "error_code2": 3,
                    "local_param_2": 1,
                    "param1": 1,
                    "param2": 10,
                    "param_2": 1,
                    "parameter2": 1
                },
                "param_3": {
                    "arg3": 4,
                    "envp": 1,
                    "error3": 2,
                    "error_code3": 3,
                    "local_param_3": 1,
                    "param2": 1,
                    "param3": 10,
                    "param_3": 1,
                    "parameter3": 1
                },
                "param_4": {
                    "arg4": 4,
                    "error4": 2,
                    "error_code4": 3,
                    "local_param_4": 1,
                    "param3": 1,
                    "param4": 10,
                    "param_4": 2,
                    "parameter4": 1
                },
                "param_5": {
                    "arg5": 4,
                    "error5": 2,
                    "error_code5": 3,
                    "local_param_5": 1,
                    "param4": 1,
                    "param5": 10,
                    "param_5": 2,
                    "parameter5": 1
                },
                "param_6": {
                    "arg6": 4,
                    "error6": 2,
                    "error_code6": 3,
                    "local_param_6": 1,
                    "param5": 1,
                    "param6": 10,
                    "param_6": 2,
                    "parameter6": 1
                },
                "param_7": {
                    "arg7": 4,
                    "error7": 2,
                    "error_code7": 3,
                    "local_param_7": 1,
                    "param6": 1,
                    "param7": 10,
                    "param_7": 2,
                    "parameter7": 1
                },
                "param_8": {
                    "arg8": 4,
                    "error8": 2,
                    "error_code8": 3,
                    "local_param_8": 1,
                    "param7": 1,
                    "param8": 10,
                    "param_8": 2,
                    "parameter8": 1
                },
                "param_9": {
                    "error_message": 28,
                    "error_msg": 1,
                    "error_string": 1,
                    "message": 1
                }
            },
            "called": [
                "FUN_00102230",
                "FUN_001021c0",
                "FUN_00102160",
                "FUN_001020d0"
            ],
            "calling": [
                "FUN_001024ec",
                "FUN_0010234b",
                "FUN_001028be",
                "FUN_00102c98",
                "FUN_00104da0",
                "FUN_001022c0",
                "FUN_00102434",
                "FUN_00102cc4",
                "FUN_0010354e",
                "FUN_00104de0",
                "FUN_0010358d",
                "FUN_001029a5",
                "FUN_0010289a",
                "FUN_00103bf0",
                "FUN_00102558",
                "FUN_00102323",
                "FUN_0010347f",
                "FUN_001025ab"
            ],
            "code": "\n\n\nvoid print_error_message_00102e85(undefined4 error_code,undefined4 param2,undefined4 param3,undefined4 param4,\n                 undefined4 param5,undefined4 param6,undefined4 param7,undefined4 param8,\n                 char *error_message,undefined8 param10,undefined8 param11,undefined8 param12,\n                 undefined8 param13,undefined8 param14)\n\n{\n  char flag;\n  char *format_string;\n  undefined4 buffer_size;\n  undefined4 value;\n  undefined *stack_pointer;\n  undefined *local_buffer;\n  undefined local_array [8];\n  undefined8 local_param10;\n  undefined8 local_param11;\n  undefined8 local_param12;\n  undefined8 local_param13;\n  undefined8 local_param14;\n  undefined4 local_param1;\n  undefined4 local_param2;\n  undefined4 local_param3;\n  undefined4 local_param4;\n  undefined4 local_param5;\n  undefined4 local_param6;\n  undefined4 local_param7;\n  undefined4 local_param8;\n  \n  if (flag != '\\0') {\n    local_param1 = error_code;\n    local_param2 = param2;\n    local_param3 = param3;\n    local_param4 = param4;\n    local_param5 = param5;\n    local_param6 = param6;\n    local_param7 = param7;\n    local_param8 = param8;\n  }\n  local_param10 = param10;\n  local_param11 = param11;\n  local_param12 = param12;\n  local_param13 = param13;\n  local_param14 = param14;\n  fflush(standard_output);\n  stack_pointer = &stack0x00000008;\n  local_buffer = local_array;\n  buffer_size = 8;\n  value = 0x30;\n  format_string = (char *)dcgettext(0,\"%s: Error: \",5);\n  print_to_error(standard_error,format_string,\"elfedit\");\n  vprint_to_error(standard_error,error_message,&buffer_size);\n  return;\n}\n\n",
            "current_name": "print_error_message_00102e85",
            "entrypoint": "0x00102e85",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102e85": "print_error_message_00102e85",
                "__format": "format_string",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "fprintf": "print_to_error",
                "in_AL": "flag",
                "local_28": "local_param8",
                "local_38": "local_param7",
                "local_48": "local_param6",
                "local_58": "local_param5",
                "local_68": "local_param4",
                "local_78": "local_param3",
                "local_88": "local_param2",
                "local_98": "local_param1",
                "local_a0": "local_param14",
                "local_a8": "local_param13",
                "local_b0": "local_param12",
                "local_b8": "local_param11",
                "local_c0": "local_param10",
                "local_c8": "local_array",
                "local_d0": "local_buffer",
                "local_d8": "stack_pointer",
                "local_dc": "value",
                "local_e0": "buffer_size",
                "param_1": "error_code",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13",
                "param_14": "param14",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f65": {
            "additional_data": {
                "FUN_00102f65": {
                    "clear_memory": 6,
                    "deallocate_memory": 1,
                    "free_memory": 20,
                    "free_memory_and_reset": 2,
                    "free_memory_block": 1,
                    "free_memory_blocks": 1
                },
                "memoryPointer": {
                    "memory_address": 1
                },
                "memoryPointer3": {
                    "memory_address3": 1
                },
                "memoryPointer4": {
                    "memory_address4": 1
                },
                "memoryPointer6": {
                    "memory_address6": 1
                },
                "memoryPointers": {
                    "memory_addresses": 1
                },
                "param_1": {
                    "memory": 2,
                    "memory_block": 6,
                    "memory_blocks": 11,
                    "memory_pointer": 1,
                    "memory_pointers": 5,
                    "memory_ptr": 2,
                    "param_array": 1,
                    "pointer_array": 1,
                    "pointers": 1
                }
            },
            "called": [
                "FUN_00102030"
            ],
            "calling": [
                "FUN_0010358d",
                "FUN_001029a5"
            ],
            "code": "\nvoid free_memory_and_reset_00102f65(void **memory_blocks)\n\n{\n  free(*memory_blocks);\n  free(memory_blocks[3]);\n  free(memory_blocks[4]);\n  free(memory_blocks[6]);\n  *memory_blocks = (void *)0x0;\n  memory_blocks[6] = (void *)0x0;\n  *(undefined (*) [16])(memory_blocks + 3) = ZEXT816(0);\n  return;\n}\n\n",
            "current_name": "free_memory_and_reset_00102f65",
            "entrypoint": "0x00102f65",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f65": "free_memory_and_reset_00102f65",
                "param_1": "memory_blocks"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102fa0": {
            "additional_data": {
                "DAT_00107040": {
                    "ascii_char_flags": 1,
                    "character_flags": 1
                },
                "FUN_00102fa0": {
                    "skip_ascii_characters": 1,
                    "skip_chars": 1,
                    "skip_invalid_bytes": 2,
                    "skip_invalid_characters": 1,
                    "skip_invalid_chars": 1,
                    "skip_leading_non_prop_chars": 1,
                    "skip_locked_bytes": 1,
                    "skip_non_alphabetic_chars": 1,
                    "skip_non_ascii_characters": 1,
                    "skip_non_control_chars": 1,
                    "skip_non_flags": 1,
                    "skip_non_interesting_bytes": 2,
                    "skip_non_matching_bytes": 1,
                    "skip_non_printable": 1,
                    "skip_non_printable_bytes": 1,
                    "skip_non_printable_characters": 1,
                    "skip_non_printable_chars": 3,
                    "skip_non_relevant_bytes": 1,
                    "skip_non_relevant_characters": 1,
                    "skip_non_reverse_characters": 1,
                    "skip_non_significant_bytes": 1,
                    "skip_nonprintable_chars": 1,
                    "skip_over_non_ascii": 1,
                    "skip_unreadable_chars": 1,
                    "skip_whitespace": 2
                },
                "F_00102fa0": {
                    "skip_invalid_bytes": 1
                },
                "param_1": {
                    "byte_array": 4,
                    "byte_array_ptr": 3,
                    "byte_pointer": 1,
                    "byte_sequence": 2,
                    "byte_stream": 1,
                    "char_array": 1,
                    "data": 2,
                    "data_pointer": 5,
                    "data_ptr": 6,
                    "input_str": 1,
                    "input_string": 2,
                    "ptr_data": 1,
                    "string_pointer": 1,
                    "string_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00103bf0"
            ],
            "code": "\nvoid skip_non_printable_chars_00102fa0(byte **data_ptr)\n\n{\n  while (((&DAT_00107040)[(ulong)**data_ptr * 2] & 0x40) != 0) {\n    *data_ptr = *data_ptr + 1;\n  }\n  return;\n}\n\n",
            "current_name": "skip_non_printable_chars_00102fa0",
            "entrypoint": "0x00102fa0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102fa0": "skip_non_printable_chars_00102fa0",
                "param_1": "data_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102fbc": {
            "additional_data": {
                "FUN_00102fbc": {
                    "exit_application": 1,
                    "exit_program": 28,
                    "exit_with_error": 2
                },
                "exit": {
                    "exit_code": 1
                }
            },
            "called": [
                "FUN_00102250"
            ],
            "calling": [
                "FUN_00103bf0",
                "FUN_00102fc7"
            ],
            "code": "\nvoid exit_program_00102fbc(void)\n\n{\n                    \n  exit_code(1);\n}\n\n",
            "current_name": "exit_program_00102fbc",
            "entrypoint": "0x00102fbc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102fbc": "exit_program_00102fbc",
                "exit": "exit_code"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102fc7": {
            "additional_data": {
                "FUN_00102fc7": {
                    "allocate_and_fill_error_message": 1,
                    "allocate_memory": 11,
                    "allocate_memory_and_concatenate_strings": 2,
                    "allocate_memory_and_copy_strings": 12,
                    "allocate_memory_and_format_output": 1,
                    "allocate_memory_with_message": 1,
                    "expand_error_message": 1,
                    "format_error_message": 1,
                    "print_memory_allocation_error": 1
                },
                "__ptr": {
                    "error_file": 3,
                    "error_file_pointer": 1,
                    "error_output": 1,
                    "error_stream": 6,
                    "file_pointer": 7,
                    "file_stream": 1,
                    "output_file": 1,
                    "standard_error": 2,
                    "stderr": 4,
                    "stderr_pointer": 1,
                    "stderr_ptr": 1,
                    "stdio_error": 1,
                    "stream": 1
                },
                "__s": {
                    "current_string": 2,
                    "error_message": 2,
                    "format_string": 21,
                    "message": 1,
                    "print_format": 1,
                    "source_string": 2,
                    "string_to_copy": 1
                },
                "apcStack_e0": {
                    "array_of_strings": 1,
                    "array_stack": 1,
                    "expanded_strings_array": 1,
                    "stack_array": 3,
                    "stack_strings": 1,
                    "string_array": 15,
                    "string_array3": 1,
                    "string_array_stack": 1,
                    "string_stack": 4,
                    "temp_array": 3
                },
                "bVar9": {
                    "b_flag": 1,
                    "backwards_flag": 1,
                    "byte_flag": 4,
                    "byte_value": 1,
                    "byte_var": 2,
                    "flag": 6,
                    "flag1": 1,
                    "increment": 1,
                    "increment_value": 1,
                    "is_forward": 1,
                    "is_neg": 1,
                    "is_negation": 1,
                    "is_negative": 3,
                    "iteration_indicator": 1,
                    "loop_flag": 1,
                    "reverse_direction": 1,
                    "reverse_flag": 3,
                    "temp_bool": 1
                },
                "cVar1": {
                    "exit_code": 2,
                    "exit_condition": 2,
                    "exit_flag": 21,
                    "exit_status": 1,
                    "result": 1
                },
                "extraout_RDX": {
                    "extra_output": 2,
                    "extra_output_rdx": 1,
                    "extra_rdx": 1,
                    "extra_return_value": 1,
                    "extraout_rdx": 1,
                    "param_2": 1,
                    "temp_var2": 1,
                    "total_bytes_requested": 1
                },
                "extraout_XMM0_Qa": {
                    "exit_code": 1,
                    "extra_output": 1,
                    "extra_xmm0_qa": 1,
                    "temp_var3": 1
                },
                "fprintf": {
                    "print_error_message": 1,
                    "print_formatted_output": 1
                },
                "free": {
                    "deallocate_memory": 2
                },
                "lStack_b8": {
                    "adjusted_memory": 1,
                    "base": 2,
                    "base_address": 2,
                    "current_brk_copy": 1,
                    "current_heap_offset": 2,
                    "current_memory_offset": 1,
                    "file_size": 1,
                    "heap_offset": 2,
                    "initial_brk": 1,
                    "memory_offset": 1,
                    "offset_from_heap_top": 1,
                    "offset_value": 1,
                    "old_brk": 1,
                    "pointer_offset": 1,
                    "result_size": 1,
                    "stack_base": 1,
                    "stack_offset": 1,
                    "stack_var": 1,
                    "stack_var1": 2,
                    "start_address": 1,
                    "string_array_pointer_offset": 1,
                    "temp_offset": 1,
                    "temp_size": 1,
                    "temp_var2": 1,
                    "temp_variable_2": 1
                },
                "lVar7": {
                    "total_length": 12,
                    "total_string_length": 2
                },
                "param_1": {
                    "bytes_to_allocate": 2,
                    "error_message": 1,
                    "input": 1,
                    "input_size": 2,
                    "input_string": 1,
                    "num_bytes": 1,
                    "size": 17,
                    "size_of_string": 1,
                    "total_bytes": 4,
                    "total_bytes_allocated": 1
                },
                "pcVar10": {
                    "pointer_array1": 1,
                    "string_ptr": 1,
                    "string_ptr_temp": 1,
                    "temp_string": 1
                },
                "pcVar11": {
                    "string_ptr_outer": 1
                },
                "pcVar5": {
                    "allocated_memory": 10,
                    "allocated_string": 4,
                    "concatenated_string": 1,
                    "error_message": 2,
                    "expanded_message": 1,
                    "formatted_output": 1,
                    "output_string": 1,
                    "result": 5,
                    "result_string": 5,
                    "resulting_string": 1
                },
                "pcVar6": {
                    "current_string": 1
                },
                "pcVar8": {
                    "current_char": 13,
                    "current_character": 1,
                    "current_pointer": 1,
                    "current_string": 1,
                    "dest_string": 1,
                    "destination_string": 2,
                    "expanded_char": 1,
                    "new_string": 3,
                    "output_pointer": 1,
                    "output_string_ptr": 1,
                    "result_index": 1,
                    "result_string_copy": 1,
                    "string_ptr": 1,
                    "temp_char_pointer": 1,
                    "temp_memory": 1,
                    "write_pointer": 1
                },
                "ppcVar10": {
                    "array_ptr": 1,
                    "current_array": 1,
                    "current_pointer": 4,
                    "current_ptr": 1,
                    "current_string_array": 2,
                    "current_string_ptr": 1,
                    "pointer_array3": 1,
                    "ppc_var_outer_loop": 1,
                    "stack_pointer": 1,
                    "stack_pointer1": 1,
                    "string_array": 2,
                    "string_array1": 1,
                    "string_array_index": 1,
                    "string_array_pointer": 2,
                    "string_array_pointer1": 1,
                    "string_array_ptr": 1,
                    "string_list": 1,
                    "string_list_ptr": 1,
                    "string_ptr1": 1,
                    "strings_array": 1,
                    "temp_pointer": 1,
                    "temp_string_array": 2
                },
                "ppcVar11": {
                    "current_array_element": 1,
                    "current_array_string": 1,
                    "current_string_ptr": 1,
                    "next_pointer": 3,
                    "next_ptr": 1,
                    "next_string_array": 3,
                    "next_string_array_pointer": 1,
                    "next_string_array_ptr": 1,
                    "next_string_ptr": 1,
                    "pointer_array4": 1,
                    "ppc_var_outer_loop_temp": 1,
                    "prev_string_ptr": 1,
                    "previous_string": 1,
                    "stack_pointer2": 1,
                    "string_array2": 1,
                    "string_array_pointer2": 1,
                    "string_list_ptr": 1,
                    "string_ptr2": 1,
                    "temp_array_index": 1,
                    "temp_pointer": 2,
                    "temp_pointer_array": 1,
                    "temp_ptr": 1,
                    "temp_string_array2": 2,
                    "temp_string_pointer": 1
                },
                "ppcVar6": {
                    "current_string": 16,
                    "current_string_pointer": 1,
                    "current_string_ptr": 1,
                    "pointer_array": 1,
                    "pointer_array2": 1,
                    "ppc_var_inner_loop": 1,
                    "string_array": 5,
                    "string_list": 1,
                    "string_pointer": 1,
                    "string_ptr": 1
                },
                "pvVar2": {
                    "current_break": 8,
                    "current_brk": 6,
                    "current_heap": 3,
                    "current_heap_address": 1,
                    "current_heap_end": 1,
                    "current_heap_pointer": 1,
                    "current_heap_ptr": 2,
                    "current_memory": 4,
                    "current_memory_end": 1,
                    "current_top_of_heap": 1
                },
                "register0x00000020": {
                    "register_value": 1,
                    "stack_pointer": 1
                },
                "sVar3": {
                    "length": 5,
                    "str_length": 1,
                    "string_length": 23,
                    "strlen_result": 1
                },
                "sbrk": {
                    "increase_heap_size": 1,
                    "request_break": 1
                },
                "strlen": {
                    "calculate_string_length": 1,
                    "get_length": 1
                },
                "uStack_28": {
                    "input_copy": 1,
                    "input_error_message": 1,
                    "input_parameter_copy": 1,
                    "input_string_copy": 1,
                    "num_bytes_copy": 1,
                    "old_param2": 1,
                    "original_argument": 1,
                    "original_param": 1,
                    "original_size": 1,
                    "param1": 1,
                    "param1_copy": 1,
                    "param_1": 2,
                    "param_1_copy2": 4,
                    "param_1_copy_2": 2,
                    "param_1_copy_copy": 1,
                    "param_1_original": 1,
                    "size": 1,
                    "size_copy": 1,
                    "size_copy2": 1,
                    "src": 1,
                    "temp_input_size": 1,
                    "temp_param3": 1,
                    "temp_parameter": 1,
                    "temp_value2": 1,
                    "u_stack_var3": 1
                },
                "uStack_b0": {
                    "exit_constant": 1,
                    "exit_flag_copy": 2,
                    "exit_flag_value": 1,
                    "exit_result": 1,
                    "exit_value": 3,
                    "extra_argument": 1,
                    "extra_output": 1,
                    "extra_output_copy": 1,
                    "extra_output_value": 1,
                    "extra_param": 2,
                    "extra_result": 2,
                    "extra_ret_val": 1,
                    "extra_return": 1,
                    "extra_return_value": 2,
                    "extra_size": 1,
                    "extra_value": 1,
                    "extraout_param": 1,
                    "extraout_xmm0_qa": 1,
                    "output_parameter": 1,
                    "stack_var2": 1,
                    "temp_param2": 1,
                    "u_stack_var2": 1,
                    "xmm0": 1,
                    "xmm_parameter": 1
                },
                "uStack_c0": {
                    "argument": 1,
                    "input": 1,
                    "input_bytes": 1,
                    "input_copy": 1,
                    "input_parameter": 1,
                    "input_size": 1,
                    "old_param1": 1,
                    "output_size": 1,
                    "param1": 3,
                    "param_1": 2,
                    "param_1_copy": 11,
                    "size": 1,
                    "size_copy": 1,
                    "size_parameter": 1,
                    "temp_param": 1,
                    "total_memory": 1,
                    "u_stack_var1": 1
                },
                "uStack_f8": {
                    "allocation_size": 1,
                    "array_index": 1,
                    "array_size": 1,
                    "count": 1,
                    "counter": 2,
                    "loop_count": 1,
                    "loop_counter": 1,
                    "stack_counter": 1,
                    "stack_size": 11,
                    "stack_size_increment": 1,
                    "stack_top": 1,
                    "stack_value": 3,
                    "stack_var": 1,
                    "stack_variable": 1,
                    "string_stack_size": 1,
                    "u_stack": 1,
                    "u_stack_value2": 1
                },
                "uVar4": {
                    "counter": 1,
                    "current_size": 1,
                    "current_stack_size": 1,
                    "index": 2,
                    "loop_counter": 2,
                    "stack_increment": 1,
                    "stack_size": 1,
                    "temp": 5,
                    "temp_size": 1,
                    "temp_ulong": 1,
                    "temp_value": 5,
                    "temp_var": 5,
                    "temp_variable": 1,
                    "u_stack_value": 1,
                    "unsigned_val": 1,
                    "unsigned_var": 1
                },
                "xexit_constprop_0": {
                    "exit_function": 1,
                    "exit_program": 1
                },
                "xmalloc": {
                    "allocate_memory": 2
                }
            },
            "called": [
                "FUN_00102fbc",
                "FUN_00102140",
                "FUN_00102160"
            ],
            "calling": [
                "FUN_00103449",
                "FUN_00102cbc"
            ],
            "code": "\n\n\nchar * allocate_memory_and_copy_strings_00102fc7(undefined8 size)\n\n{\n  char exit_flag;\n  void *current_break;\n  size_t string_length;\n  ulong temp;\n  char *allocated_memory;\n  char **current_string;\n  undefined8 extra_output;\n  long total_length;\n  char *format_string;\n  FILE *file_pointer;\n  char *current_char;\n  byte flag;\n  undefined8 extra_xmm0_qa;\n  uint stack_size;\n  char **current_pointer;\n  char **next_pointer;\n  char *string_array [4];\n  undefined8 param_1_copy;\n  long current_heap_offset;\n  undefined8 exit_value;\n  undefined8 param_1_copy2;\n  \n  flag = 0;\n  current_break = request_break(0);\n  current_heap_offset = (long)current_break + -0x10a0e0;\n  string_array[3] = \"\";\n  format_string = \"\\n%s%sout of memory allocating %lu bytes after a total of %lu bytes\\n\";\n  file_pointer = _stderr;\n  param_1_copy = size;\n  print_error_message(_stderr,\"\\n%s%sout of memory allocating %lu bytes after a total of %lu bytes\\n\");\n  exit_flag = exit_program();\n  if (exit_flag != '\\0') {\n    exit_value = extra_xmm0_qa;\n  }\n  total_length = 0;\n  stack_size = 0x10;\n  current_char = format_string;\n  current_pointer = (char **)stack_pointer;\n  string_array[2] = (char *)extra_output;\n  param_1_copy2 = size;\n  do {\n    string_length = get_length(current_char);\n    total_length = total_length + string_length;\n    if (stack_size < 0x30) {\n      temp = (ulong)stack_size;\n      stack_size = stack_size + 8;\n      current_string = (char **)((long)string_array + temp);\n      next_pointer = current_pointer;\n    }\n    else {\n      next_pointer = current_pointer + 1;\n      current_string = current_pointer;\n    }\n    current_char = *current_string;\n    current_pointer = next_pointer;\n  } while (current_char != (char *)0x0);\n  allocated_memory = (char *)allocate_memory(total_length + 1);\n  stack_size = 0x10;\n  current_char = allocated_memory;\n  current_pointer = (char **)stack_pointer;\n  do {\n    string_length = get_length(format_string);\n    for (; string_length != 0; string_length = string_length - 1) {\n      *current_char = *format_string;\n      format_string = format_string + (ulong)flag * -2 + 1;\n      current_char = current_char + (ulong)flag * -2 + 1;\n    }\n    if (stack_size < 0x30) {\n      temp = (ulong)stack_size;\n      stack_size = stack_size + 8;\n      current_string = (char **)((long)string_array + temp);\n      next_pointer = current_pointer;\n    }\n    else {\n      next_pointer = current_pointer + 1;\n      current_string = current_pointer;\n    }\n    format_string = *current_string;\n    current_pointer = next_pointer;\n  } while (format_string != (char *)0x0);\n  *current_char = '\\0';\n  deallocate_memory(file_pointer);\n  return allocated_memory;\n}\n\n",
            "current_name": "allocate_memory_and_copy_strings_00102fc7",
            "entrypoint": "0x00102fc7",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102fc7": "allocate_memory_and_copy_strings_00102fc7",
                "__ptr": "file_pointer",
                "__s": "format_string",
                "apcStack_e0": "string_array",
                "bVar9": "flag",
                "cVar1": "exit_flag",
                "extraout_RDX": "extra_output",
                "extraout_XMM0_Qa": "extra_xmm0_qa",
                "fprintf": "print_error_message",
                "free": "deallocate_memory",
                "lStack_b8": "current_heap_offset",
                "lVar7": "total_length",
                "param_1": "size",
                "pcVar10": "pointer_array1",
                "pcVar11": "string_ptr_outer",
                "pcVar5": "allocated_memory",
                "pcVar6": "current_string",
                "pcVar8": "current_char",
                "ppcVar10": "current_pointer",
                "ppcVar11": "next_pointer",
                "ppcVar6": "current_string",
                "pvVar2": "current_break",
                "register0x00000020": "stack_pointer",
                "sVar3": "string_length",
                "sbrk": "request_break",
                "strlen": "get_length",
                "uStack_28": "param_1_copy2",
                "uStack_b0": "exit_value",
                "uStack_c0": "param_1_copy",
                "uStack_f8": "stack_size",
                "uVar4": "temp",
                "xexit_constprop_0": "exit_program",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103006": {
            "additional_data": {
                "FUN_00103006": {
                    "combine_strings": 1,
                    "concatenate_and_allocate_memory": 1,
                    "concatenate_strings": 3,
                    "create_concatenated_string": 1,
                    "decompile_and_extract_string": 1,
                    "extract_and_concatenate_strings": 1,
                    "extract_concatenated_strings": 1,
                    "extract_strings": 2,
                    "merge_strings": 1,
                    "parse_data_string": 1,
                    "process_string": 1,
                    "reconstruct_string": 2,
                    "reverse_and_concatenate_strings": 8,
                    "reverse_string_and_concatenate": 1,
                    "reverse_string_concatenation": 4,
                    "unscramble_strings": 1
                },
                "bVar7": {
                    "b_flag": 1,
                    "boolean": 1,
                    "byte_flag": 1,
                    "byte_iter": 1,
                    "byte_val": 1,
                    "byte_var": 3,
                    "byte_variable": 1,
                    "flag": 2,
                    "flag1": 1,
                    "flag_char": 1,
                    "increment": 2,
                    "increment_value": 1,
                    "is_backwards": 1,
                    "is_input_zero": 1,
                    "is_negative": 1,
                    "is_reverse": 1,
                    "loop_flag": 1,
                    "loop_var": 1,
                    "reverse_flag": 2,
                    "start_index": 1,
                    "string_length_decrease": 1,
                    "temp_bool": 1,
                    "temp_byte": 1,
                    "temp_flag": 3
                },
                "in_AL": {
                    "append_flag": 1,
                    "condition": 1,
                    "condition_flag": 1,
                    "flag": 11,
                    "input_boolean": 1,
                    "input_flag": 4,
                    "is_al": 1,
                    "is_alphanumeric": 1,
                    "is_flag_enabled": 1,
                    "is_not_null": 1,
                    "is_null": 1
                },
                "lVar5": {
                    "length": 1,
                    "total_len": 1,
                    "total_length": 22
                },
                "local_38": {
                    "eighth_param": 1,
                    "flag8_value": 1,
                    "input8": 2,
                    "input8_copy": 1,
                    "input8_ptr": 1,
                    "loc10": 1,
                    "local_param8": 2,
                    "local_param_8": 1,
                    "local_var9": 1,
                    "nested_data8": 1,
                    "param8": 1,
                    "param_8_dup": 1,
                    "param_8_old": 1,
                    "parameter8": 1,
                    "ptr8_copy": 1,
                    "ptr_24": 1,
                    "size16": 1,
                    "size18": 1,
                    "temp_data8": 1,
                    "temp_param8": 1,
                    "temp_ptr8": 1,
                    "temp_value8": 1,
                    "temp_var10": 1,
                    "unused_local_38": 1,
                    "value10": 1,
                    "value14": 1,
                    "var12": 1,
                    "variable_12": 1
                },
                "local_48": {
                    "flag7_value": 1,
                    "input7": 2,
                    "input7_copy": 1,
                    "input7_ptr": 1,
                    "loc9": 1,
                    "local_param7": 2,
                    "local_param_7": 1,
                    "local_var8": 1,
                    "nested_data7": 1,
                    "param7": 1,
                    "param_7_dup": 1,
                    "param_7_old": 1,
                    "parameter7": 1,
                    "ptr7_copy": 1,
                    "ptr_23": 1,
                    "seventh_param": 1,
                    "size15": 1,
                    "size17": 1,
                    "temp_data7": 1,
                    "temp_param7": 1,
                    "temp_ptr7": 1,
                    "temp_value7": 1,
                    "temp_var9": 1,
                    "unused_local_48": 1,
                    "value13": 1,
                    "value9": 1,
                    "var11": 1,
                    "variable_11": 1
                },
                "local_58": {
                    "flag6_value": 1,
                    "input6": 2,
                    "input6_copy": 1,
                    "input6_ptr": 1,
                    "loc8": 1,
                    "local_param6": 2,
                    "local_param_6": 1,
                    "local_var7": 1,
                    "nested_data6": 1,
                    "param6": 1,
                    "param_6_dup": 1,
                    "param_6_old": 1,
                    "parameter6": 1,
                    "ptr6_copy": 1,
                    "ptr_22": 1,
                    "sixth_param": 1,
                    "size14": 1,
                    "size16": 1,
                    "temp_data6": 1,
                    "temp_param6": 1,
                    "temp_ptr6": 1,
                    "temp_value6": 1,
                    "temp_var8": 1,
                    "unused_local_58": 1,
                    "value12": 1,
                    "value8": 1,
                    "var10": 1,
                    "variable_10": 1
                },
                "local_68": {
                    "fifth_param": 1,
                    "flag5_value": 1,
                    "input5": 2,
                    "input5_copy": 1,
                    "input5_ptr": 1,
                    "loc7": 1,
                    "local_param5": 2,
                    "local_param_5": 1,
                    "local_var6": 1,
                    "nested_data5": 1,
                    "param5": 1,
                    "param_5_dup": 1,
                    "param_5_old": 1,
                    "parameter5": 1,
                    "ptr5_copy": 1,
                    "ptr_21": 1,
                    "size13": 1,
                    "size15": 1,
                    "temp_data5": 1,
                    "temp_param5": 1,
                    "temp_ptr5": 1,
                    "temp_value5": 1,
                    "temp_var7": 1,
                    "unused_local_68": 1,
                    "value11": 1,
                    "value7": 1,
                    "var9": 1,
                    "variable_9": 1
                },
                "local_78": {
                    "flag4_value": 1,
                    "fourth_param": 1,
                    "input4": 2,
                    "input4_copy": 1,
                    "input4_ptr": 1,
                    "loc6": 1,
                    "local_param4": 2,
                    "local_param_4": 1,
                    "local_var5": 1,
                    "nested_data4": 1,
                    "param4": 1,
                    "param_4_dup": 1,
                    "param_4_old": 1,
                    "parameter4": 1,
                    "ptr4_copy": 1,
                    "ptr_20": 1,
                    "size12": 1,
                    "size14": 1,
                    "temp_data4": 1,
                    "temp_param4": 1,
                    "temp_ptr4": 1,
                    "temp_value4": 1,
                    "temp_var6": 1,
                    "unused_local_78": 1,
                    "value10": 1,
                    "value6": 1,
                    "var8": 1,
                    "variable_8": 1
                },
                "local_88": {
                    "flag3_value": 1,
                    "input3": 2,
                    "input3_copy": 1,
                    "input3_ptr": 1,
                    "loc5": 1,
                    "local_param3": 2,
                    "local_param_3": 1,
                    "local_var4": 1,
                    "nested_data3": 1,
                    "param3": 1,
                    "param_3_dup": 1,
                    "param_3_old": 1,
                    "parameter3": 1,
                    "ptr3_copy": 1,
                    "ptr_19": 1,
                    "size11": 1,
                    "size13": 1,
                    "temp_data3": 1,
                    "temp_param3": 1,
                    "temp_ptr3": 1,
                    "temp_value3": 1,
                    "temp_var5": 1,
                    "third_param": 1,
                    "unused_local_88": 1,
                    "value5": 1,
                    "value9": 1,
                    "var7": 1,
                    "variable_7": 1
                },
                "local_98": {
                    "flag2_value": 1,
                    "input2": 2,
                    "input2_copy": 1,
                    "input2_ptr": 1,
                    "loc4": 1,
                    "local_param2": 2,
                    "local_param_2": 1,
                    "local_var3": 1,
                    "nested_data2": 1,
                    "param2": 1,
                    "param_2_dup": 1,
                    "param_2_old": 1,
                    "parameter2": 1,
                    "ptr2_copy": 1,
                    "ptr_18": 1,
                    "second_param": 1,
                    "size10": 1,
                    "size12": 1,
                    "temp_data2": 1,
                    "temp_param2": 1,
                    "temp_ptr2": 1,
                    "temp_value2": 1,
                    "temp_var4": 1,
                    "unused_local_98": 1,
                    "value4": 1,
                    "value8": 1,
                    "var6": 1,
                    "variable_6": 1
                },
                "local_a8": {
                    "first_param": 1,
                    "flag1_value": 1,
                    "input1": 2,
                    "input1_copy": 1,
                    "input1_ptr": 1,
                    "loc3": 1,
                    "local_param1": 2,
                    "local_param_1": 1,
                    "local_var2": 1,
                    "nested_data1": 1,
                    "param1": 1,
                    "param_1_dup": 1,
                    "param_1_old": 1,
                    "parameter1": 1,
                    "ptr1_copy": 1,
                    "ptr_17": 1,
                    "size11": 1,
                    "size9": 1,
                    "temp_data1": 1,
                    "temp_param1": 1,
                    "temp_ptr1": 1,
                    "temp_value1": 1,
                    "temp_var3": 1,
                    "unused_local_a8": 1,
                    "value3": 1,
                    "value7": 1,
                    "var5": 1,
                    "variable_5": 1
                },
                "local_b0": {
                    "data6": 1,
                    "input_string4": 1,
                    "loc2": 1,
                    "local_long_param2": 1,
                    "local_param14": 1,
                    "local_param_14": 1,
                    "local_value4": 1,
                    "nested_param2": 1,
                    "param14": 2,
                    "param14_copy": 1,
                    "param14_string": 1,
                    "param4": 1,
                    "param_14_dup": 1,
                    "param_14_ptr": 1,
                    "parameter14": 1,
                    "parameter_14_ptr": 1,
                    "ptr14_copy": 1,
                    "ptr5": 1,
                    "ptr_16": 1,
                    "string4_ptr": 1,
                    "string_ptr4": 1,
                    "temp_ptr2": 1,
                    "temp_value2": 2,
                    "temp_var2": 1,
                    "unused_local_b0": 1,
                    "value2": 1,
                    "value6": 1,
                    "var4": 1,
                    "variable_4": 1
                },
                "local_b8": {
                    "data5": 1,
                    "input_string3": 1,
                    "loc1": 1,
                    "local_long_param1": 1,
                    "local_param13": 1,
                    "local_param_13": 1,
                    "local_value3": 1,
                    "nested_param1": 1,
                    "param13": 2,
                    "param13_copy": 1,
                    "param13_string": 1,
                    "param3": 1,
                    "param_13_dup": 1,
                    "param_13_ptr": 1,
                    "parameter13": 1,
                    "parameter_13_ptr": 1,
                    "ptr13_copy": 1,
                    "ptr4": 1,
                    "ptr_15": 1,
                    "string3_ptr": 1,
                    "string_ptr3": 1,
                    "temp_ptr1": 1,
                    "temp_value1": 2,
                    "temp_var1": 1,
                    "unused_local_b8": 1,
                    "value1": 1,
                    "value5": 1,
                    "var3": 1,
                    "variable_3": 1
                },
                "local_d8": {
                    "additional_strings": 1,
                    "array2": 1,
                    "data_array": 1,
                    "local_array": 2,
                    "local_char_array": 1,
                    "local_char_var": 1,
                    "local_strings": 1,
                    "local_strings_array": 1,
                    "local_temp_storage": 1,
                    "param_array": 2,
                    "param_stack": 1,
                    "parameter_array": 1,
                    "pointer_array": 2,
                    "pointers_array": 2,
                    "static_memory": 1,
                    "string_address_list": 1,
                    "string_array": 1,
                    "string_pointers": 1,
                    "string_value_array": 1,
                    "temp_array": 1,
                    "temp_memory": 1,
                    "temp_ptr_array": 2,
                    "temp_string_array": 1
                },
                "local_e8": {
                    "array1": 1,
                    "array_of_pointers": 1,
                    "array_pointers": 1,
                    "array_ptr": 1,
                    "dynamic_strings": 1,
                    "local_array": 1,
                    "local_pointer_array": 1,
                    "local_pointer_list": 1,
                    "local_ptr_array": 1,
                    "local_string_pointer": 1,
                    "local_string_pointer_array": 1,
                    "local_string_ptrs": 1,
                    "pointer_arr": 1,
                    "pointer_array_start": 1,
                    "ptr_array_extra": 1,
                    "stack": 1,
                    "stack_array": 1,
                    "stack_pointer": 2,
                    "stack_pointer_array": 1,
                    "stack_pointers": 1,
                    "stack_ptr": 2,
                    "string_array": 1,
                    "string_list": 1,
                    "string_ptr_stack": 2,
                    "strings_array_ptr": 1,
                    "temp_array": 1,
                    "temp_str_array": 1,
                    "temporary_string_list": 1
                },
                "local_f0": {
                    "array_size": 1,
                    "bytes_reserved": 1,
                    "count": 3,
                    "counter": 1,
                    "current_offset": 2,
                    "current_size": 1,
                    "current_value": 1,
                    "local_counter": 2,
                    "local_flag_1": 1,
                    "local_increment": 1,
                    "local_limit": 1,
                    "local_size": 2,
                    "local_value": 1,
                    "local_var1": 1,
                    "local_var_f0": 1,
                    "local_variable": 1,
                    "loop_counter": 1,
                    "max_string_length": 1,
                    "offset": 1,
                    "size": 2,
                    "stack_offset": 1,
                    "stack_size": 1,
                    "start_index": 1,
                    "string_index": 1,
                    "total_size": 1
                },
                "param_1": {
                    "arg1": 1,
                    "buffer_size": 1,
                    "data1": 2,
                    "filename_ptr": 1,
                    "first_param": 2,
                    "flag1": 2,
                    "input1": 8,
                    "input_1": 1,
                    "input_len": 1,
                    "input_param1": 1,
                    "length_param": 1,
                    "length_param_1": 1,
                    "offset1": 1,
                    "ptr1": 1,
                    "ptr_1": 1,
                    "size1": 2,
                    "source1": 1,
                    "str1": 1,
                    "str1_length": 1,
                    "string1": 1
                },
                "param_10": {
                    "destination": 1,
                    "input_string": 8,
                    "input_strings": 2,
                    "new_string": 1,
                    "source_str": 1,
                    "source_string": 9,
                    "str1": 1,
                    "string": 1,
                    "string_array": 4,
                    "string_list": 1,
                    "strings_array": 2
                },
                "param_11": {
                    "additional_string1": 1,
                    "address1": 1,
                    "arg1": 1,
                    "data1": 1,
                    "input_string1": 1,
                    "input_value1": 1,
                    "long_param1": 1,
                    "param1": 1,
                    "param11": 6,
                    "param_11": 3,
                    "param_11_ptr": 1,
                    "parameter_11": 1,
                    "pointer1": 1,
                    "pointer_1": 1,
                    "ptr1": 2,
                    "ptr11": 1,
                    "ptr2": 1,
                    "ptr_11": 1,
                    "string1": 1,
                    "string_value1": 1,
                    "unused_param_11": 1,
                    "value1": 2
                },
                "param_12": {
                    "additional_string2": 1,
                    "address2": 1,
                    "arg2": 1,
                    "data2": 1,
                    "input_string2": 1,
                    "input_value2": 1,
                    "long_param2": 1,
                    "param12": 6,
                    "param2": 1,
                    "param_12": 3,
                    "param_12_ptr": 1,
                    "parameter_12": 1,
                    "pointer2": 1,
                    "pointer_2": 1,
                    "ptr12": 1,
                    "ptr2": 2,
                    "ptr3": 1,
                    "ptr_12": 1,
                    "string2": 1,
                    "string_value2": 1,
                    "unused_param_12": 1,
                    "value2": 2
                },
                "param_13": {
                    "arg3": 1,
                    "data3": 1,
                    "input_string3": 1,
                    "input_value3": 1,
                    "param13": 7,
                    "param3": 2,
                    "param_13": 4,
                    "parameter_13": 1,
                    "ptr13": 1,
                    "ptr_13": 1,
                    "size9": 1,
                    "string3": 1,
                    "string_ptr1": 1,
                    "unused_param_13": 1,
                    "val1": 1,
                    "value1": 2,
                    "value3": 2,
                    "var1": 1,
                    "variable_1": 1
                },
                "param_14": {
                    "arg4": 1,
                    "data4": 1,
                    "input_string4": 1,
                    "input_value4": 1,
                    "param14": 7,
                    "param4": 2,
                    "param_14": 4,
                    "parameter_14": 1,
                    "ptr14": 1,
                    "ptr_14": 1,
                    "size10": 1,
                    "string4": 1,
                    "string_ptr2": 1,
                    "unused_param_14": 1,
                    "val2": 1,
                    "value2": 2,
                    "value4": 2,
                    "var2": 1,
                    "variable_2": 1
                },
                "param_2": {
                    "arg2": 1,
                    "data2": 2,
                    "file_type_ptr": 1,
                    "flag2": 2,
                    "input2": 8,
                    "input_2": 1,
                    "input_param2": 1,
                    "length_param_2": 1,
                    "offset2": 1,
                    "param_2": 2,
                    "ptr2": 1,
                    "ptr_2": 1,
                    "second_param": 2,
                    "size2": 2,
                    "size_param": 1,
                    "source2": 1,
                    "str2": 1,
                    "str2_length": 1,
                    "string2": 1
                },
                "param_3": {
                    "arg3": 1,
                    "data3": 2,
                    "flag3": 2,
                    "input3": 7,
                    "input_3": 1,
                    "input_param3": 1,
                    "length_param_3": 1,
                    "offset3": 1,
                    "param1_ptr": 1,
                    "param_3": 1,
                    "ptr3": 1,
                    "ptr_3": 1,
                    "size3": 2,
                    "source3": 1,
                    "str3": 1,
                    "str3_length": 1,
                    "string3": 1,
                    "third_param": 2,
                    "type_param": 1
                },
                "param_4": {
                    "arg4": 1,
                    "data4": 2,
                    "flag4": 2,
                    "flag_param": 1,
                    "fourth_param": 2,
                    "input4": 7,
                    "input_4": 1,
                    "input_param4": 1,
                    "length_param_4": 1,
                    "offset4": 1,
                    "param2_ptr": 1,
                    "param_4": 2,
                    "ptr4": 1,
                    "ptr_4": 1,
                    "size4": 2,
                    "source4": 1,
                    "str4": 1,
                    "str4_length": 1,
                    "string4": 1
                },
                "param_5": {
                    "arg5": 1,
                    "data5": 2,
                    "fifth_param": 2,
                    "flag5": 2,
                    "index_param": 1,
                    "input5": 7,
                    "input_5": 1,
                    "input_param5": 1,
                    "length_param_5": 1,
                    "offset5": 1,
                    "param3_ptr": 1,
                    "param_5": 1,
                    "ptr5": 1,
                    "ptr_5": 1,
                    "size5": 2,
                    "source5": 1,
                    "str5": 1,
                    "str5_length": 1,
                    "string5": 1
                },
                "param_6": {
                    "arg6": 1,
                    "count_param": 1,
                    "data6": 2,
                    "flag6": 2,
                    "input6": 7,
                    "input_6": 1,
                    "input_param6": 1,
                    "length_param_6": 1,
                    "offset6": 1,
                    "param4_ptr": 1,
                    "param_6": 1,
                    "ptr6": 1,
                    "ptr_6": 1,
                    "sixth_param": 2,
                    "size6": 2,
                    "source6": 1,
                    "str6": 1,
                    "str6_length": 1,
                    "string6": 1
                },
                "param_7": {
                    "arg7": 1,
                    "data7": 2,
                    "flag7": 2,
                    "input7": 7,
                    "input_7": 1,
                    "input_param7": 1,
                    "length_param_7": 1,
                    "offset7": 1,
                    "offset_param": 1,
                    "param5_ptr": 1,
                    "param_7": 1,
                    "ptr7": 1,
                    "ptr_7": 1,
                    "seventh_param": 2,
                    "size7": 2,
                    "source7": 1,
                    "str7": 1,
                    "str7_length": 1,
                    "string7": 1
                },
                "param_8": {
                    "arg8": 1,
                    "data8": 2,
                    "eighth_param": 2,
                    "flag8": 2,
                    "input8": 7,
                    "input_8": 1,
                    "input_param8": 1,
                    "length_param_8": 1,
                    "offset8": 1,
                    "param6_ptr": 1,
                    "param_8": 1,
                    "ptr8": 1,
                    "ptr_8": 1,
                    "size8": 2,
                    "source8": 1,
                    "str8": 1,
                    "str8_length": 1,
                    "string8": 1,
                    "value_param": 1
                },
                "param_9": {
                    "allocated_memory": 6,
                    "buffer": 4,
                    "data": 3,
                    "dynamic_array": 1,
                    "dynamic_memory": 1,
                    "input_data": 1,
                    "input_string": 1,
                    "memory_block": 6,
                    "merged_string": 1,
                    "old_string": 1,
                    "ptr1": 1,
                    "ptr_9": 1,
                    "source": 1,
                    "strings": 1
                },
                "pcVar3": {
                    "concatenated_str": 1,
                    "concatenated_string": 2,
                    "destination_string": 1,
                    "merged_string_ptr": 1,
                    "output_string": 3,
                    "reconstructed_string": 1,
                    "result": 10,
                    "result_pointer": 1,
                    "result_string": 11
                },
                "pcVar4": {
                    "current_string_ptr": 1,
                    "string_ptr": 1
                },
                "pcVar6": {
                    "concatenation_pointer": 1,
                    "current_char": 14,
                    "current_char_ptr": 3,
                    "dest": 1,
                    "dest_str": 1,
                    "dest_string": 1,
                    "destination_pointer": 1,
                    "destination_string": 2,
                    "dst": 1,
                    "result_pointer": 1,
                    "result_ptr": 3,
                    "source_ptr": 1,
                    "source_string": 1
                },
                "ppcVar4": {
                    "current_pointer": 2,
                    "current_string": 3,
                    "current_string_pointer": 2,
                    "current_string_ptr": 5,
                    "pointer": 1,
                    "pointer_array": 3,
                    "pointer_list": 1,
                    "ptr_array": 1,
                    "ptr_to_current_string": 1,
                    "ptr_to_ptr_str": 1,
                    "string_pointer": 1,
                    "string_ptr": 1,
                    "temp_double_pointer": 1,
                    "temp_pointer": 1
                },
                "sVar1": {
                    "length": 3,
                    "str_len": 1,
                    "str_length": 2,
                    "string_length": 15
                },
                "uVar2": {
                    "count": 1,
                    "counter": 1,
                    "dynamic_offset": 1,
                    "increment": 1,
                    "string_length_u_int": 1,
                    "temp": 1,
                    "temp_counter": 1,
                    "temp_size": 1,
                    "temp_value": 1,
                    "temp_var": 9,
                    "ulong_iter": 1,
                    "ulong_length": 1,
                    "ulong_val": 1
                }
            },
            "called": [
                "FUN_001020e0",
                "FUN_00105370",
                "FUN_00102030"
            ],
            "calling": [
                "FUN_001032de"
            ],
            "code": "\nchar * reverse_and_concatenate_strings_00103006(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                   undefined4 input5,undefined4 input6,undefined4 input7,undefined4 input8,\n                   void *memory_block,char *source_string,undefined8 param11,undefined8 param12,\n                   undefined8 param13,undefined8 param14)\n\n{\n  char flag;\n  size_t string_length;\n  ulong temp_var;\n  char *result_string;\n  char **current_string_ptr;\n  long total_length;\n  char *current_char;\n  byte temp_flag;\n  uint count;\n  char **string_ptr_stack;\n  char *temp_ptr_array [4];\n  undefined8 param13;\n  undefined8 temp_value2;\n  undefined4 input1;\n  undefined4 input2;\n  undefined4 local_param3;\n  undefined4 local_param4;\n  undefined4 local_param5;\n  undefined4 input6;\n  undefined4 local_param7;\n  undefined4 input8;\n  \n  temp_flag = 0;\n  if (flag != '\\0') {\n    input1 = input1;\n    input2 = input2;\n    local_param3 = input3;\n    local_param4 = input4;\n    local_param5 = input5;\n    input6 = input6;\n    local_param7 = input7;\n    input8 = input8;\n  }\n  string_ptr_stack = (char **)&stack0x00000008;\n  total_length = 0;\n  count = 0x10;\n  current_char = source_string;\n  temp_ptr_array[2] = (char *)param11;\n  temp_ptr_array[3] = (char *)param12;\n  param13 = param13;\n  temp_value2 = param14;\n  do {\n    string_length = strlen(current_char);\n    total_length = total_length + string_length;\n    if (count < 0x30) {\n      temp_var = (ulong)count;\n      count = count + 8;\n      current_string_ptr = (char **)((long)temp_ptr_array + temp_var);\n    }\n    else {\n      current_string_ptr = string_ptr_stack;\n      string_ptr_stack = string_ptr_stack + 1;\n    }\n    current_char = *current_string_ptr;\n  } while (current_char != (char *)0x0);\n  result_string = (char *)xmalloc(total_length + 1);\n  count = 0x10;\n  string_ptr_stack = (char **)&stack0x00000008;\n  current_char = result_string;\n  do {\n    string_length = strlen(source_string);\n    for (; string_length != 0; string_length = string_length - 1) {\n      *current_char = *source_string;\n      source_string = source_string + (ulong)temp_flag * -2 + 1;\n      current_char = current_char + (ulong)temp_flag * -2 + 1;\n    }\n    if (count < 0x30) {\n      temp_var = (ulong)count;\n      count = count + 8;\n      current_string_ptr = (char **)((long)temp_ptr_array + temp_var);\n    }\n    else {\n      current_string_ptr = string_ptr_stack;\n      string_ptr_stack = string_ptr_stack + 1;\n    }\n    source_string = *current_string_ptr;\n  } while (source_string != (char *)0x0);\n  *current_char = '\\0';\n  free(memory_block);\n  return result_string;\n}\n\n",
            "current_name": "reverse_and_concatenate_strings_00103006",
            "entrypoint": "0x00103006",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103006": "reverse_and_concatenate_strings_00103006",
                "bVar7": "temp_flag",
                "in_AL": "flag",
                "lVar5": "total_length",
                "local_38": "input8",
                "local_48": "local_param7",
                "local_58": "input6",
                "local_68": "local_param5",
                "local_78": "local_param4",
                "local_88": "local_param3",
                "local_98": "input2",
                "local_a8": "input1",
                "local_b0": "temp_value2",
                "local_b8": "param13",
                "local_d8": "temp_ptr_array",
                "local_e8": "string_ptr_stack",
                "local_f0": "count",
                "param_1": "input1",
                "param_10": "source_string",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13",
                "param_14": "param14",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "param_7": "input7",
                "param_8": "input8",
                "param_9": "memory_block",
                "pcVar3": "result_string",
                "pcVar4": "current_string_ptr",
                "pcVar6": "current_char",
                "ppcVar4": "current_string_ptr",
                "sVar1": "string_length",
                "uVar2": "temp_var"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103160": {
            "additional_data": {
                "FUN_00103160": {
                    "copy_and_increment": 3,
                    "copy_and_modify_string": 1,
                    "copy_string": 24,
                    "copy_string_and_reverse": 1,
                    "reverse_string": 2
                },
                "bVar4": {
                    "byte_offset": 1,
                    "byte_value": 2,
                    "byte_var": 3,
                    "counter": 9,
                    "flag": 2,
                    "increment": 1,
                    "index": 2,
                    "is_reversed": 1,
                    "loop_counter": 1,
                    "offset": 7,
                    "temp_byte": 1
                },
                "lVar3": {
                    "buffer_size": 1,
                    "copied_length": 4,
                    "copy_length": 1,
                    "dest_string_length": 1,
                    "destination_length": 1,
                    "index": 1,
                    "length": 2,
                    "length_plus_one": 6,
                    "length_with_null": 5,
                    "modified_length": 1,
                    "new_length": 2,
                    "output_length": 1,
                    "size": 2,
                    "string_length": 1,
                    "string_length_plus_one": 2
                },
                "param_1": {
                    "input_string": 17,
                    "source": 1,
                    "source_string": 12,
                    "src_string": 1
                },
                "pcVar2": {
                    "copied_string": 17,
                    "copy_buffer": 1,
                    "copy_string": 1,
                    "dest_string": 1,
                    "destination": 1,
                    "destination_string": 2,
                    "modified_string": 1,
                    "new_string": 3,
                    "output_string": 3,
                    "reversed_string": 1
                },
                "sVar1": {
                    "input_length": 2,
                    "input_string_length": 1,
                    "length": 2,
                    "source_length": 6,
                    "src_string_length": 1,
                    "string_length": 19
                }
            },
            "called": [
                "FUN_001020e0",
                "FUN_00105370"
            ],
            "calling": [
                "FUN_001029a5",
                "FUN_00103bf0"
            ],
            "code": "\nvoid copy_string_and_reverse_00103160(char *input_string)\n\n{\n  size_t string_length;\n  char *copied_string;\n  long length_plus_one;\n  byte counter;\n  \n  counter = 0;\n  string_length = strlen(input_string);\n  length_plus_one = string_length + 1;\n  copied_string = (char *)xmalloc(length_plus_one);\n  for (; length_plus_one != 0; length_plus_one = length_plus_one + -1) {\n    *copied_string = *input_string;\n    input_string = input_string + (ulong)counter * -2 + 1;\n    copied_string = copied_string + (ulong)counter * -2 + 1;\n  }\n  return;\n}\n\n",
            "current_name": "copy_string_and_reverse_00103160",
            "entrypoint": "0x00103160",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103160": "copy_string_and_reverse_00103160",
                "bVar4": "counter",
                "lVar3": "length_plus_one",
                "param_1": "input_string",
                "pcVar2": "copied_string",
                "sVar1": "string_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103186": {
            "additional_data": {
                "FUN_00103186": {
                    "copy_concat_strings": 1,
                    "create_concatenated_string": 2,
                    "create_formatted_string": 1,
                    "create_string": 1,
                    "decompile_and_create_string": 1,
                    "extract_and_concatenate_strings": 1,
                    "extract_concatenated_string": 1,
                    "extract_data": 1,
                    "extract_string": 1,
                    "extract_strings": 4,
                    "generate_concatenated_string": 1,
                    "parse_and_concatenate_strings": 1,
                    "parse_arguments": 1,
                    "process_data": 1,
                    "reverse_and_concatenate_strings": 6,
                    "reverse_string": 2,
                    "reverse_string_concatenation": 5
                },
                "FUN_00105370": {
                    "concatenate_strings": 1
                },
                "PTR_stack0x00000008": {
                    "stack_ptr": 1
                },
                "bVar8": {
                    "add_or_subtract": 1,
                    "alternate_index_flag": 1,
                    "b": 1,
                    "byte_flag": 1,
                    "byte_value": 1,
                    "counter": 1,
                    "flag": 7,
                    "flag2": 2,
                    "increment": 1,
                    "increment_flag": 1,
                    "is_negative": 4,
                    "is_odd": 1,
                    "is_reversed": 1,
                    "loop_condition": 1,
                    "negate": 1,
                    "negate_flag": 1,
                    "toggle": 1
                },
                "in_AL": {
                    "bool_input": 1,
                    "boolean_flag": 1,
                    "condition": 2,
                    "condition_flag": 1,
                    "flag": 11,
                    "input_char": 1,
                    "input_flag": 7,
                    "is_al_none": 1,
                    "is_not_null": 1,
                    "is_set": 1,
                    "is_true": 1
                },
                "lVar5": {
                    "length": 1,
                    "result_length": 1,
                    "running_length": 1,
                    "string_length": 1,
                    "total_len": 1,
                    "total_length": 16
                },
                "local_15": {
                    "temp_variable": 1
                },
                "local_28": {
                    "arg8_copy": 2,
                    "flag8_copy": 1,
                    "input8_copy": 3,
                    "input_8": 1,
                    "input_param8": 1,
                    "input_param8_copy": 1,
                    "input_var8": 1,
                    "local_28": 1,
                    "local_param8": 1,
                    "param8": 3,
                    "param8_copy": 1,
                    "param_8": 1,
                    "temp_arg8": 1,
                    "temp_memory_8": 1,
                    "temp_param10": 1,
                    "unused_param13": 1,
                    "unused_param_sixteen": 1,
                    "unused_var10": 1,
                    "val10": 1,
                    "var10": 1
                },
                "local_38": {
                    "arg7_copy": 2,
                    "flag7_copy": 1,
                    "input7_copy": 3,
                    "input_7": 1,
                    "input_param7": 1,
                    "input_param7_copy": 1,
                    "input_var7": 1,
                    "local_38": 1,
                    "local_param7": 1,
                    "param7": 3,
                    "param7_copy": 1,
                    "param_7": 1,
                    "param_value_9": 1,
                    "temp_arg7": 1,
                    "temp_memory_7": 1,
                    "temp_param9": 1,
                    "unused_param12": 1,
                    "unused_param_fifteen": 1,
                    "unused_var9": 1,
                    "val9": 1,
                    "var9": 1
                },
                "local_48": {
                    "arg6_copy": 2,
                    "flag6_copy": 1,
                    "input6_copy": 3,
                    "input_6": 1,
                    "input_param6": 1,
                    "input_param6_copy": 1,
                    "input_var6": 1,
                    "local_48": 1,
                    "local_param6": 1,
                    "param6": 3,
                    "param6_copy": 1,
                    "param_6": 1,
                    "param_value_8": 1,
                    "temp_arg6": 1,
                    "temp_memory_6": 1,
                    "temp_param8": 1,
                    "unused_param11": 1,
                    "unused_param_fourteen": 1,
                    "unused_var8": 1,
                    "val8": 1,
                    "var8": 1
                },
                "local_58": {
                    "arg5_copy": 2,
                    "flag5_copy": 1,
                    "input5_copy": 3,
                    "input_5": 1,
                    "input_param5": 1,
                    "input_param5_copy": 1,
                    "input_var5": 1,
                    "local_58": 1,
                    "local_param5": 1,
                    "param5": 3,
                    "param5_copy": 1,
                    "param_5": 1,
                    "param_value_7": 1,
                    "temp_arg5": 1,
                    "temp_memory_5": 1,
                    "temp_param7": 1,
                    "unused_param10": 1,
                    "unused_param_thirteen": 1,
                    "unused_var7": 1,
                    "val7": 1,
                    "var7": 1
                },
                "local_68": {
                    "arg4_copy": 2,
                    "flag4_copy": 1,
                    "input4_copy": 3,
                    "input_4": 1,
                    "input_param4": 1,
                    "input_param4_copy": 1,
                    "input_var4": 1,
                    "local_68": 1,
                    "local_param4": 1,
                    "param4": 3,
                    "param4_copy": 1,
                    "param_4": 1,
                    "param_value_6": 1,
                    "temp_arg4": 1,
                    "temp_memory_4": 1,
                    "temp_param6": 1,
                    "unused_param9": 1,
                    "unused_param_twelve": 1,
                    "unused_var6": 1,
                    "val6": 1,
                    "var6": 1
                },
                "local_78": {
                    "arg3_copy": 2,
                    "flag3_copy": 1,
                    "input3_copy": 3,
                    "input_3": 1,
                    "input_param3": 1,
                    "input_param3_copy": 1,
                    "input_var3": 1,
                    "local_78": 1,
                    "local_param3": 1,
                    "param3": 3,
                    "param3_copy": 1,
                    "param_3": 1,
                    "param_value_5": 1,
                    "temp_arg3": 1,
                    "temp_memory_3": 1,
                    "temp_param5": 1,
                    "unused_param8": 1,
                    "unused_param_eleven": 1,
                    "unused_var5": 1,
                    "val5": 1,
                    "var5": 1
                },
                "local_88": {
                    "arg2_copy": 2,
                    "flag2_copy": 1,
                    "input2_copy": 3,
                    "input_2": 1,
                    "input_param2": 1,
                    "input_param2_copy": 1,
                    "input_var2": 1,
                    "local_88": 1,
                    "local_param2": 1,
                    "param2": 3,
                    "param2_copy": 1,
                    "param_2": 1,
                    "param_value_4": 1,
                    "temp_arg2": 1,
                    "temp_memory_2": 1,
                    "temp_param4": 1,
                    "unused_param7": 1,
                    "unused_param_ten": 1,
                    "unused_var4": 1,
                    "val4": 1,
                    "var4": 1
                },
                "local_98": {
                    "arg1_copy": 2,
                    "flag1_copy": 1,
                    "input1_copy": 3,
                    "input_1": 1,
                    "input_param1": 1,
                    "input_param1_copy": 1,
                    "input_var1": 1,
                    "local_98": 1,
                    "local_param1": 1,
                    "param1": 3,
                    "param1_copy": 1,
                    "param_1": 1,
                    "param_value_3": 1,
                    "temp_arg1": 1,
                    "temp_memory_1": 1,
                    "temp_param3": 1,
                    "unused_param6": 1,
                    "unused_param_nine": 1,
                    "unused_var3": 1,
                    "val3": 1,
                    "var3": 1
                },
                "local_a0": {
                    "address_2": 1,
                    "address_var2": 1,
                    "arg14_copy": 3,
                    "input14": 1,
                    "input14_ptr": 1,
                    "input_param14": 1,
                    "input_param14_copy": 1,
                    "local_a0": 1,
                    "local_param14": 2,
                    "param14": 2,
                    "param14_copy": 1,
                    "param6_copy": 1,
                    "param_14": 1,
                    "param_value_2": 1,
                    "temp_arg14": 1,
                    "temp_param2": 1,
                    "temp_size_2": 1,
                    "unused_param5": 1,
                    "unused_param_eight": 1,
                    "unused_var2": 1,
                    "val2": 1,
                    "val4": 1,
                    "value4": 1,
                    "var2": 1
                },
                "local_a8": {
                    "address_1": 1,
                    "address_var1": 1,
                    "arg13_copy": 3,
                    "input13": 1,
                    "input13_ptr": 1,
                    "input_param13": 1,
                    "input_param13_copy": 1,
                    "local_a8": 1,
                    "local_param13": 2,
                    "param13": 2,
                    "param13_copy": 1,
                    "param5_copy": 1,
                    "param_13": 1,
                    "param_value_1": 1,
                    "temp_arg13": 1,
                    "temp_param1": 1,
                    "temp_size_1": 1,
                    "unused_param4": 1,
                    "unused_param_seven": 1,
                    "unused_var1": 1,
                    "val1": 1,
                    "val3": 1,
                    "value3": 1,
                    "var1": 1
                },
                "local_c8": {
                    "address_array": 1,
                    "data": 1,
                    "input_array": 1,
                    "input_params_array": 1,
                    "input_string_array": 1,
                    "local_array": 1,
                    "local_string_array": 1,
                    "param10_12_array": 1,
                    "param_array": 3,
                    "param_list": 1,
                    "param_pointers": 1,
                    "param_stack": 1,
                    "param_strings": 1,
                    "str_arr": 1,
                    "str_array": 2,
                    "str_param": 1,
                    "string_arr": 2,
                    "string_array": 1,
                    "temp_arr": 1,
                    "temp_array": 2,
                    "temp_memory": 1,
                    "temp_string_array": 1,
                    "tmp_arr": 1
                },
                "local_d8": {
                    "address_array": 1,
                    "current_ptr": 1,
                    "dptr_arr": 1,
                    "local_address_array": 1,
                    "local_pointer_array": 1,
                    "local_ptr": 1,
                    "local_string_array": 1,
                    "pointers": 1,
                    "ptr_list": 1,
                    "source_array": 1,
                    "stack_pointer": 1,
                    "str_arr_ptr": 1,
                    "str_pointer_stack": 1,
                    "str_ptr_arr": 1,
                    "string_array": 4,
                    "string_array_pointer": 2,
                    "string_array_pointer_stack": 1,
                    "string_ptr_arr": 1,
                    "strings": 1,
                    "strings_array": 1,
                    "temp_pointers": 2,
                    "temp_string_ptr": 1
                },
                "local_e0": {
                    "additional_size": 1,
                    "count": 1,
                    "counter": 5,
                    "current_index": 1,
                    "current_offset": 1,
                    "dynamic_size": 1,
                    "index": 1,
                    "local_count": 1,
                    "local_counter": 4,
                    "local_index": 1,
                    "local_offset": 1,
                    "local_size": 1,
                    "local_var1": 1,
                    "num_chunks": 1,
                    "offset": 2,
                    "size": 2,
                    "stack_size": 3,
                    "str_length": 1
                },
                "param_1": {
                    "a": 1,
                    "arg1": 4,
                    "buffer_size": 1,
                    "data1": 1,
                    "flag1": 1,
                    "input1": 9,
                    "input_1": 2,
                    "input_one": 1,
                    "input_param1": 3,
                    "input_param_1": 1,
                    "memory_1": 1,
                    "param1": 2,
                    "source1": 1,
                    "str1": 1,
                    "string1": 1
                },
                "param_10": {
                    "address2": 1,
                    "address_2": 1,
                    "arg10": 4,
                    "arg2": 1,
                    "data1": 1,
                    "data10": 1,
                    "input10": 1,
                    "input_param10": 3,
                    "input_param_10": 1,
                    "j": 1,
                    "param10": 4,
                    "param2": 2,
                    "param_10": 2,
                    "size_2": 1,
                    "str1": 1,
                    "str_ptr1": 1,
                    "string1": 2,
                    "unused_param_two": 1
                },
                "param_11": {
                    "address3": 1,
                    "address_3": 1,
                    "arg11": 4,
                    "arg3": 1,
                    "data11": 1,
                    "data2": 1,
                    "input11": 1,
                    "input_param11": 3,
                    "input_param_11": 1,
                    "k": 1,
                    "param11": 4,
                    "param3": 2,
                    "param_11": 2,
                    "size_3": 1,
                    "str2": 1,
                    "str_ptr2": 1,
                    "string2": 2,
                    "unused_param_three": 1
                },
                "param_12": {
                    "address4": 1,
                    "address_4": 1,
                    "arg12": 4,
                    "arg4": 1,
                    "data12": 1,
                    "data3": 1,
                    "input12": 1,
                    "input_param12": 3,
                    "input_param_12": 1,
                    "l": 1,
                    "param12": 4,
                    "param4": 2,
                    "param_12": 2,
                    "size_4": 1,
                    "str3": 1,
                    "str_ptr3": 1,
                    "string3": 2,
                    "unused_param_four": 1
                },
                "param_13": {
                    "address5": 1,
                    "address_5": 1,
                    "arg13": 4,
                    "arg5": 1,
                    "data13": 1,
                    "input13": 1,
                    "input_param13": 3,
                    "input_param_13": 1,
                    "m": 1,
                    "param13": 4,
                    "param5": 2,
                    "param_13": 2,
                    "size_5": 1,
                    "string4": 1,
                    "unused_param2": 2,
                    "unused_param_five": 1,
                    "val1": 1,
                    "value1": 1
                },
                "param_14": {
                    "address6": 1,
                    "address_6": 1,
                    "arg14": 4,
                    "arg6": 1,
                    "data14": 1,
                    "input14": 1,
                    "input_param14": 3,
                    "input_param_14": 1,
                    "n": 1,
                    "param14": 4,
                    "param6": 2,
                    "param_14": 2,
                    "size_6": 1,
                    "string5": 1,
                    "unused_param3": 2,
                    "unused_param_six": 1,
                    "val2": 1,
                    "value2": 1
                },
                "param_2": {
                    "arg2": 4,
                    "b": 1,
                    "data2": 1,
                    "flag2": 1,
                    "input2": 9,
                    "input_2": 2,
                    "input_param2": 3,
                    "input_param_2": 1,
                    "input_two": 1,
                    "memory_2": 1,
                    "param2": 2,
                    "param_2": 1,
                    "source2": 1,
                    "str2": 1,
                    "string2": 1
                },
                "param_3": {
                    "arg3": 4,
                    "c": 1,
                    "data3": 1,
                    "flag3": 1,
                    "input3": 8,
                    "input_3": 2,
                    "input_param3": 3,
                    "input_param_3": 1,
                    "input_three": 1,
                    "memory_3": 1,
                    "param3": 2,
                    "param_3": 1,
                    "source3": 1,
                    "str3": 1,
                    "string3": 1
                },
                "param_4": {
                    "arg4": 4,
                    "d": 1,
                    "data4": 1,
                    "flag4": 1,
                    "input4": 8,
                    "input_4": 2,
                    "input_four": 1,
                    "input_param4": 3,
                    "input_param_4": 1,
                    "memory_4": 1,
                    "param4": 2,
                    "param_4": 1,
                    "source4": 1,
                    "str4": 1,
                    "string4": 1
                },
                "param_5": {
                    "arg5": 4,
                    "data5": 1,
                    "e": 1,
                    "flag5": 1,
                    "input5": 8,
                    "input_5": 2,
                    "input_five": 1,
                    "input_param5": 3,
                    "input_param_5": 1,
                    "memory_5": 1,
                    "param5": 2,
                    "param_5": 1,
                    "source5": 1,
                    "str5": 1,
                    "string5": 1
                },
                "param_6": {
                    "arg6": 4,
                    "data6": 1,
                    "f": 1,
                    "flag6": 1,
                    "input6": 8,
                    "input_6": 2,
                    "input_param6": 3,
                    "input_param_6": 1,
                    "input_six": 1,
                    "memory_6": 1,
                    "param6": 2,
                    "param_6": 1,
                    "source6": 1,
                    "str6": 1,
                    "string6": 1
                },
                "param_7": {
                    "arg7": 4,
                    "data7": 1,
                    "flag7": 1,
                    "g": 1,
                    "input7": 8,
                    "input_7": 2,
                    "input_param7": 3,
                    "input_param_7": 1,
                    "input_seven": 1,
                    "memory_7": 1,
                    "param7": 2,
                    "param_7": 1,
                    "source7": 1,
                    "str7": 1,
                    "string7": 1
                },
                "param_8": {
                    "arg8": 4,
                    "data8": 1,
                    "flag8": 1,
                    "h": 1,
                    "input8": 8,
                    "input_8": 2,
                    "input_eight": 1,
                    "input_param8": 3,
                    "input_param_8": 1,
                    "memory_8": 1,
                    "param8": 2,
                    "param_8": 1,
                    "source8": 1,
                    "str8": 1,
                    "string8": 1
                },
                "param_9": {
                    "address1": 1,
                    "address_1": 1,
                    "arg1": 1,
                    "arg9": 3,
                    "data9": 1,
                    "i": 1,
                    "input9": 2,
                    "input_param9": 3,
                    "input_param_9": 1,
                    "param1": 2,
                    "param9": 4,
                    "param_9": 2,
                    "size_1": 1,
                    "unused_param1": 2,
                    "unused_param_one": 1
                },
                "pcVar3": {
                    "concatenated_string": 3,
                    "final_string": 1,
                    "formatted_string": 1,
                    "new_string": 2,
                    "output_string": 1,
                    "result": 12,
                    "result_string": 6
                },
                "pcVar4": {
                    "current_string": 1,
                    "current_string_ptr": 1,
                    "languages": 1,
                    "temp_ptr": 1
                },
                "pcVar6": {
                    "current_char": 2,
                    "current_character": 1,
                    "current_string": 16,
                    "current_sub_string": 1,
                    "source_string": 1,
                    "str": 4,
                    "str1": 1,
                    "str_ptr": 1,
                    "string": 1,
                    "temp_string": 1
                },
                "pcVar7": {
                    "concatenated_string": 1,
                    "current_char": 2,
                    "destination": 1,
                    "destination_string": 1,
                    "dst": 1,
                    "final_string_index": 1,
                    "new_string": 3,
                    "new_string_pointer": 2,
                    "output_str": 2,
                    "res_ptr": 1,
                    "result": 1,
                    "result_pointer": 2,
                    "result_ptr": 7,
                    "result_string": 1,
                    "str2": 1,
                    "target": 1,
                    "temp_result_string": 1
                },
                "ppcVar4": {
                    "current_input": 1,
                    "current_source": 1,
                    "current_string": 4,
                    "current_string_pointer": 1,
                    "pointer_to_str": 1,
                    "ptr": 1,
                    "str_pointer": 1,
                    "str_ptr_ptr": 1,
                    "string_array_pointer": 1,
                    "string_pointer": 1,
                    "string_ptr": 1,
                    "temp_pointer": 1
                },
                "sVar1": {
                    "len": 1,
                    "length": 7,
                    "str_len": 1,
                    "str_length": 3,
                    "string_length": 7
                },
                "stack0x00000008": {
                    "stack_array": 1
                },
                "uVar2": {
                    "converted_length": 1,
                    "count": 1,
                    "index": 1,
                    "offset": 2,
                    "temp": 5,
                    "temp_s_var1": 1,
                    "temp_val": 1,
                    "temp_value": 2,
                    "ulong_value": 1,
                    "ulong_var": 2
                }
            },
            "called": [
                "FUN_001020e0",
                "FUN_00105370"
            ],
            "calling": [
                "FUN_001032de"
            ],
            "code": "\nchar * reverse_string_concatenation_00103186(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                   undefined4 input5,undefined4 input6,undefined4 input7,undefined4 input8,\n                   undefined8 param9,undefined8 arg10,undefined8 param11,undefined8 param12,\n                   undefined8 param13,undefined8 param14)\n\n{\n  char flag;\n  size_t string_length;\n  ulong temp;\n  char *result;\n  char **current_string;\n  long total_length;\n  char *current_string;\n  char *result_ptr;\n  byte flag;\n  uint counter;\n  char **string_array;\n  char *param_array [4];\n  undefined8 arg13_copy;\n  undefined8 arg14_copy;\n  undefined4 param1;\n  undefined4 param2;\n  undefined4 param3;\n  undefined4 param4;\n  undefined4 input5_copy;\n  undefined4 input6_copy;\n  undefined4 input7_copy;\n  undefined4 param8;\n  \n  flag = 0;\n  if (flag != '\\0') {\n    param1 = input1;\n    param2 = input2;\n    param3 = input3;\n    param4 = input4;\n    input5_copy = input5;\n    input6_copy = input6;\n    input7_copy = input7;\n    param8 = input8;\n  }\n  string_array = (char **)&stack_array;\n  total_length = 0;\n  counter = 8;\n  current_string = \"none\";\n  param_array[1] = (char *)arg10;\n  param_array[2] = (char *)param11;\n  param_array[3] = (char *)param12;\n  arg13_copy = param13;\n  arg14_copy = param14;\n  do {\n    string_length = strlen(current_string);\n    total_length = total_length + string_length;\n    if (counter < 0x30) {\n      temp = (ulong)counter;\n      counter = counter + 8;\n      current_string = (char **)((long)param_array + temp);\n    }\n    else {\n      current_string = string_array;\n      string_array = string_array + 1;\n    }\n    current_string = *current_string;\n  } while (current_string != (char *)0x0);\n  current_string = \"none\";\n  result = (char *)xmalloc(total_length + 1);\n  counter = 8;\n  string_array = (char **)&stack_array;\n  result_ptr = result;\n  do {\n    string_length = strlen(current_string);\n    for (; string_length != 0; string_length = string_length - 1) {\n      *result_ptr = *current_string;\n      current_string = current_string + (ulong)flag * -2 + 1;\n      result_ptr = result_ptr + (ulong)flag * -2 + 1;\n    }\n    if (counter < 0x30) {\n      temp = (ulong)counter;\n      counter = counter + 8;\n      current_string = (char **)((long)param_array + temp);\n    }\n    else {\n      current_string = string_array;\n      string_array = string_array + 1;\n    }\n    current_string = *current_string;\n  } while (current_string != (char *)0x0);\n  *result_ptr = '\\0';\n  return result;\n}\n\n",
            "current_name": "reverse_string_concatenation_00103186",
            "entrypoint": "0x00103186",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103186": "reverse_string_concatenation_00103186",
                "bVar8": "flag",
                "in_AL": "flag",
                "lVar5": "total_length",
                "local_28": "param8",
                "local_38": "input7_copy",
                "local_48": "input6_copy",
                "local_58": "input5_copy",
                "local_68": "param4",
                "local_78": "param3",
                "local_88": "param2",
                "local_98": "param1",
                "local_a0": "arg14_copy",
                "local_a8": "arg13_copy",
                "local_c8": "param_array",
                "local_d8": "string_array",
                "local_e0": "counter",
                "param_1": "input1",
                "param_10": "arg10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13",
                "param_14": "param14",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "param_7": "input7",
                "param_8": "input8",
                "param_9": "param9",
                "pcVar3": "result",
                "pcVar4": "current_string_ptr",
                "pcVar6": "current_string",
                "pcVar7": "result_ptr",
                "ppcVar4": "current_string",
                "sVar1": "string_length",
                "stack0x00000008": "stack_array",
                "uVar2": "temp"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001032de": {
            "additional_data": {
                "FUN_00103006": {
                    "reconcatenate_strings": 1
                },
                "FUN_00103186": {
                    "concatenate_strings": 1
                },
                "FUN_001032de": {
                    "print_elf_edit_help": 1,
                    "print_elf_edit_usage": 2,
                    "print_usage": 3,
                    "print_usage_and_exit": 23,
                    "update_elf_header": 2
                },
                "__ptr": {
                    "buffer": 1,
                    "concatenated_str": 1,
                    "concatenated_string": 20,
                    "concatenated_strings": 1,
                    "dynamic_string": 1,
                    "message": 1,
                    "output_message": 1,
                    "output_string": 1,
                    "str_ptr": 1,
                    "usage_message": 1,
                    "usage_string": 1
                },
                "_ptr": {
                    "concat_str": 1
                },
                "dcgettext": {
                    "translate_text": 1
                },
                "fprintf": {
                    "write_to_output_file": 1
                },
                "param_1": {
                    "file": 16,
                    "file_pointer": 1,
                    "file_ptr": 3,
                    "file_stream": 1,
                    "output_file": 10
                },
                "param_2": {
                    "error_code": 2,
                    "exit_code": 27,
                    "exit_status": 1,
                    "status": 1
                },
                "pcVar2": {
                    "localization_string": 1,
                    "localized_str": 1,
                    "localized_string": 13,
                    "message": 3,
                    "msg": 1,
                    "str": 1,
                    "str_ptr2": 1,
                    "translated_message": 1,
                    "translated_string": 5,
                    "translation": 4
                },
                "puVar1": {
                    "arguments": 1,
                    "array_pointer": 1,
                    "current_string": 1,
                    "feature_ptr": 1,
                    "machine_type": 2,
                    "machine_type_pointer": 1,
                    "next_address": 1,
                    "p_string": 1,
                    "param_array": 1,
                    "param_pointer": 1,
                    "pointer": 3,
                    "ptr": 9,
                    "ptr1": 3,
                    "ptr_value": 1,
                    "ptr_var1": 2,
                    "pu_var": 1,
                    "var_ptr1": 1
                },
                "puVar3": {
                    "array_pointer2": 1,
                    "array_ptr": 2,
                    "data_array": 3,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "gui_dialog": 1,
                    "option_array": 2,
                    "option_list": 1,
                    "option_pointer": 2,
                    "options_array": 1,
                    "options_list_ptr": 1,
                    "p_array": 1,
                    "pointer_to_data": 1,
                    "pointer_to_data_array": 1,
                    "ptr_arr": 1,
                    "ptr_array": 5,
                    "ptr_var3": 2,
                    "pu_var_array": 1,
                    "strings_pointer": 1,
                    "var_pointer": 1
                }
            },
            "called": [
                "FUN_00102250",
                "FUN_00102160",
                "FUN_00103186",
                "FUN_00103006",
                "FUN_001020d0",
                "FUN_00102030"
            ],
            "calling": [
                "FUN_00103bf0"
            ],
            "code": "\nvoid print_usage_and_exit_001032de(FILE *file,int exit_code)\n\n{\n  undefined8 *ptr;\n  void *concatenated_string;\n  char *localized_string;\n  undefined4 *ptr_array;\n  \n  ptr_array = &DAT_00108ca0;\n  concatenated_string = (void *)concat_constprop_0(&DAT_00106137,0);\n  do {\n    ptr = (undefined8 *)(ptr_array + 6);\n    ptr_array = ptr_array + 4;\n    concatenated_string = (void *)reconcat(concatenated_string,concatenated_string,&DAT_001061ef,*ptr,0);\n  } while (ptr_array != (undefined4 *)&DAT_00108d90);\n  localized_string = (char *)translate_text(0,\"Usage: %s <option(s)> elffile(s)\\n\",5);\n  write_to_output_file(file,localized_string,\"elfedit\");\n  localized_string = (char *)translate_text(0,\" Update the ELF header of ELF files\\n\",5);\n  write_to_output_file(file,localized_string);\n  localized_string = (char *)translate_text(0,\" The options are:\\n\",5);\n  write_to_output_file(file,localized_string);\n  localized_string = (char *)translate_text(0,\n                             \"  --input-mach [none|i386|iamcu|l1om|k1om|x86_64]\\n                              Set input machine type\\n  --output-mach [none|i386|iamcu|l1om|k1om|x86_64]\\n                              Set output machine type\\n  --input-type [none|rel|exec|dyn]\\n                              Set input file type\\n  --output-type [none|rel|exec|dyn]\\n                              Set output file type\\n  --input-osabi [%s]\\n                              Set input OSABI\\n  --output-osabi [%s]\\n                              Set output OSABI\\n  --input-abiversion [0-255]  Set input ABIVERSION\\n  --output-abiversion [0-255] Set output ABIVERSION\\n\"\n                             ,5);\n  write_to_output_file(file,localized_string,concatenated_string,concatenated_string);\n  localized_string = (char *)translate_text(0,\n                             \"  --enable-x86-feature [ibt|shstk|lam_u48|lam_u57]\\n                              Enable x86 feature\\n  --disable-x86-feature [ibt|shstk|lam_u48|lam_u57]\\n                              Disable x86 feature\\n\"\n                             ,5);\n  write_to_output_file(file,localized_string);\n  localized_string = (char *)translate_text(0,\n                             \"  -h --help                   Display this information\\n  -v --version                Display the version number of %s\\n\"\n                             ,5);\n  write_to_output_file(file,localized_string,\"elfedit\");\n  if (exit_code == 0) {\n    localized_string = (char *)translate_text(0,\"Report bugs to %s\\n\",5);\n    write_to_output_file(file,localized_string,\"<https://sourceware.org/bugzilla/>\");\n  }\n  free(concatenated_string);\n                    \n  exit(exit_code);\n}\n\n",
            "current_name": "print_usage_and_exit_001032de",
            "entrypoint": "0x001032de",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001032de": "print_usage_and_exit_001032de",
                "__ptr": "concatenated_string",
                "_ptr": "concat_str",
                "dcgettext": "translate_text",
                "fprintf": "write_to_output_file",
                "param_1": "file",
                "param_2": "exit_code",
                "pcVar2": "localized_string",
                "puVar1": "ptr",
                "puVar3": "ptr_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103449": {
            "additional_data": {
                "FUN_00103449": {
                    "allocate_memory": 13,
                    "allocate_memory_or_resize": 1,
                    "allocate_or_resize_memory": 1,
                    "memory_allocation": 1,
                    "realloc_or_alloc_memory": 1,
                    "realloc_or_malloc": 1,
                    "resize_memory": 9,
                    "resize_memory_block": 4
                },
                "__size": {
                    "adjusted_size": 2,
                    "allocated_size": 1,
                    "allocation_size": 2,
                    "default_size": 1,
                    "final_size": 2,
                    "initial_size": 1,
                    "new_size": 9,
                    "requested_size": 1,
                    "size": 8,
                    "size_to_allocate": 1,
                    "updated_size": 1
                },
                "param_1": {
                    "buffer": 9,
                    "buffer_ptr": 1,
                    "data_ptr": 1,
                    "existing_block": 2,
                    "existing_data": 1,
                    "existing_memory": 1,
                    "existing_ptr": 1,
                    "memory_block": 4,
                    "memory_pointer": 2,
                    "old_memory": 1,
                    "old_ptr": 2,
                    "previous_block": 2,
                    "previous_memory": 1,
                    "ptr": 3
                },
                "param_2": {
                    "buffer_size": 2,
                    "data_size": 1,
                    "memory_size": 1,
                    "new_size": 15,
                    "size": 12
                },
                "pvVar1": {
                    "allocated_buffer": 3,
                    "allocated_memory": 4,
                    "allocated_ptr": 1,
                    "new_block": 2,
                    "new_buffer": 3,
                    "new_buffer_ptr": 1,
                    "new_data": 1,
                    "new_memory": 1,
                    "new_memory_block": 4,
                    "new_memory_pointer": 2,
                    "new_ptr": 6,
                    "resized_block": 2
                },
                "xmalloc_failed": {
                    "handle_allocation_failure": 1
                }
            },
            "called": [
                "FUN_001021e0",
                "FUN_001021b0",
                "FUN_00102fc7"
            ],
            "calling": [
                "FUN_00103bf0"
            ],
            "code": "\nvoid allocate_or_resize_memory_00103449(void *buffer,size_t new_size)\n\n{\n  size_t new_size;\n  void *new_ptr;\n  \n  new_size = 1;\n  if (new_size != 0) {\n    new_size = new_size;\n  }\n  if (buffer == (void *)0x0) {\n    new_ptr = malloc(new_size);\n  }\n  else {\n    new_ptr = realloc(buffer,new_size);\n  }\n  if (new_ptr == (void *)0x0) {\n    handle_allocation_failure(new_size);\n  }\n  return;\n}\n\n",
            "current_name": "allocate_or_resize_memory_00103449",
            "entrypoint": "0x00103449",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103449": "allocate_or_resize_memory_00103449",
                "__size": "new_size",
                "param_1": "buffer",
                "param_2": "new_size",
                "pvVar1": "new_ptr",
                "xmalloc_failed": "handle_allocation_failure"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010347f": {
            "additional_data": {
                "CONCAT11": {
                    "concatenate_bytes": 1
                },
                "FUN_0010347f": {
                    "byte_array_to_unsigned_long": 1,
                    "convert_data": 6,
                    "convert_data_to_unsigned_long": 1,
                    "decode_data": 3,
                    "extract_data": 14,
                    "extract_unsigned_data": 1,
                    "extract_value_from_data": 1,
                    "get_data_value": 1,
                    "reverse_byte_order": 1,
                    "reverse_bytes": 1,
                    "reverse_extracted_data": 1
                },
                "param_1": {
                    "byte_array": 1,
                    "data": 16,
                    "data_array": 1,
                    "data_buffer": 1,
                    "data_pointer": 7,
                    "data_ptr": 2,
                    "input": 1,
                    "input_array": 1,
                    "input_data": 1
                },
                "param_2": {
                    "data_length": 30,
                    "length": 1
                },
                "uVar1": {
                    "temp": 10,
                    "temp1": 4,
                    "temp_value": 2,
                    "temp_var": 4,
                    "temp_var1": 8,
                    "tmp_value1": 1,
                    "value": 1
                },
                "uVar2": {
                    "result": 17,
                    "temp2": 4,
                    "temp_var2": 8,
                    "tmp_value2": 1
                },
                "uVar3": {
                    "err_msg": 2,
                    "error_message": 22,
                    "error_msg": 2,
                    "error_string": 2,
                    "temp_var3": 2
                }
            },
            "called": [
                "FUN_00102e85",
                "FUN_00102050",
                "FUN_001020d0"
            ],
            "calling": [
                "FUN_00104de0"
            ],
            "code": "\nulong extract_unsigned_data_0010347f(ulong *data,undefined4 data_length)\n\n{\n  uint temp;\n  ulong result;\n  undefined8 error_message;\n  \n  switch(data_length) {\n  case 1:\n    return (ulong)*(byte *)data;\n  case 2:\n    return (ulong)concatenate_bytes((char)*(undefined2 *)data,(char)((ushort)*(undefined2 *)data >> 8))\n    ;\n  case 3:\n    return (ulong)*(byte *)((long)data + 1) << 8 | (ulong)*(byte *)data << 0x10 |\n           (ulong)*(byte *)((long)data + 2);\n  case 4:\n    temp = *(uint *)data;\n    return (ulong)(temp >> 0x18 | (temp & 0xff0000) >> 8 | (temp & 0xff00) << 8 | temp << 0x18);\n  case 5:\n    temp = *(uint *)((long)data + 1);\n    return (ulong)CONCAT14(*(byte *)data,\n                           temp >> 0x18 | (temp & 0xff0000) >> 8 | (temp & 0xff00) << 8 |\n                           temp << 0x18);\n  case 6:\n    temp = *(uint *)((long)data + 2);\n    return (ulong)*(byte *)((long)data + 1) << 0x20 | (ulong)*(byte *)data << 0x28 |\n           (ulong)(temp >> 0x18 | (temp & 0xff0000) >> 8 | (temp & 0xff00) << 8 | temp << 0x18);\n  case 7:\n    temp = *(uint *)((long)data + 3);\n    return (ulong)*(byte *)((long)data + 2) << 0x20 | (ulong)*(byte *)((long)data + 1) << 0x28\n           | (ulong)*(byte *)data << 0x30 |\n           (ulong)(temp >> 0x18 | (temp & 0xff0000) >> 8 | (temp & 0xff00) << 8 | temp << 0x18);\n  case 8:\n    result = *data;\n    return result >> 0x38 | (result & 0xff000000000000) >> 0x28 | (result & 0xff0000000000) >> 0x18 |\n           (result & 0xff00000000) >> 8 | (result & 0xff000000) << 8 | (result & 0xff0000) << 0x18 |\n           (result & 0xff00) << 0x28 | result << 0x38;\n  default:\n    error_message = dcgettext(0,\"Unhandled data length: %d\\n\",5);\n    error(error_message,data_length);\n                    \n    abort();\n  }\n}\n\n",
            "current_name": "extract_unsigned_data_0010347f",
            "entrypoint": "0x0010347f",
            "imported": false,
            "improved": true,
            "renaming": {
                "CONCAT11": "concatenate_bytes",
                "FUN_0010347f": "extract_unsigned_data_0010347f",
                "param_1": "data",
                "param_2": "data_length",
                "uVar1": "temp",
                "uVar2": "result",
                "uVar3": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010354e": {
            "additional_data": {
                "FUN_0010354e": {
                    "copy_data": 3,
                    "copy_data_to_memory": 3,
                    "fill_data": 1,
                    "fill_memory": 2,
                    "handle_data": 1,
                    "handle_data_length": 2,
                    "handle_unhandled_data_length": 1,
                    "memset_memory": 1,
                    "memset_with_bound_check": 1,
                    "modify_memory": 1,
                    "rewrite_data": 1,
                    "write_data": 5,
                    "write_data_at_address": 1,
                    "write_data_to_memory": 7,
                    "write_to_memory": 1
                },
                "iVar2": {
                    "count": 1,
                    "counter": 8,
                    "current_index": 1,
                    "index": 1,
                    "iteration": 2,
                    "iteration_count": 4,
                    "iteration_counter": 1,
                    "iterator": 1,
                    "length": 1,
                    "loop_counter": 9
                },
                "param_1": {
                    "address": 3,
                    "base_address": 1,
                    "data_address": 3,
                    "data_buffer": 1,
                    "data_ptr": 1,
                    "data_start_address": 1,
                    "dest": 1,
                    "dest_address": 6,
                    "dest_pointer": 1,
                    "dest_ptr": 1,
                    "destination": 2,
                    "destination_address": 4,
                    "dst_address": 1,
                    "memory_address": 5
                },
                "param_2": {
                    "data": 12,
                    "data_to_rewrite": 1,
                    "data_to_write": 1,
                    "data_value": 8,
                    "fill_value": 1,
                    "new_value": 1,
                    "value": 6,
                    "value_to_copy": 1
                },
                "param_3": {
                    "data_length": 23,
                    "length": 7,
                    "size": 1
                },
                "uVar1": {
                    "err_msg": 1,
                    "error_message": 25,
                    "error_msg": 1,
                    "error_string": 2
                },
                "uVar3": {
                    "current_length": 1,
                    "data_length_copy": 3,
                    "iteration_limit": 1,
                    "length": 2,
                    "length_copy": 1,
                    "loop_counter": 2,
                    "loop_counter_unsigned": 1,
                    "loop_limit": 1,
                    "remaining_count": 1,
                    "remaining_length": 4,
                    "temp_data_length": 7,
                    "temp_length": 2,
                    "temp_size": 1,
                    "unsigned_data_length": 1,
                    "unsigned_length": 1
                }
            },
            "called": [
                "FUN_00102e85",
                "FUN_00102050",
                "FUN_001020d0"
            ],
            "calling": [
                "FUN_00104de0"
            ],
            "code": "\nvoid write_data_to_memory_0010354e(long dest_address,ulong data,uint data_length)\n\n{\n  undefined8 error_message;\n  int loop_counter;\n  ulong temp_data_length;\n  \n  temp_data_length = (ulong)data_length;\n  if (8 < data_length) {\n    error_message = dcgettext(0,\"Unhandled data length: %d\\n\",5);\n    error(error_message,data_length);\n                    \n    abort();\n  }\n  while (loop_counter = (int)temp_data_length, temp_data_length = (ulong)(loop_counter - 1), loop_counter != 0) {\n    *(char *)(dest_address + temp_data_length) = (char)data;\n    data = data >> 8;\n  }\n  return;\n}\n\n",
            "current_name": "write_data_to_memory_0010354e",
            "entrypoint": "0x0010354e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010354e": "write_data_to_memory_0010354e",
                "iVar2": "loop_counter",
                "param_1": "dest_address",
                "param_2": "data",
                "param_3": "data_length",
                "uVar1": "error_message",
                "uVar3": "temp_data_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010358d": {
            "additional_data": {
                "DAT_00109438": {
                    "delta": 1,
                    "object_size": 1
                },
                "FIL_001036cc": {
                    "cleanup_resources": 1
                },
                "FIL_00103a46": {
                    "cleanup_resources": 1
                },
                "FUN_0010358d": {
                    "extract_and_process_archive": 1,
                    "extract_archive": 2,
                    "process_archive": 27,
                    "process_archived_objects": 1
                },
                "__s": {
                    "": 1,
                    "corrupt": 7,
                    "corrupt_message": 2,
                    "corrupt_msg": 1,
                    "corrupt_placeholder": 1,
                    "corrupt_str": 5,
                    "corrupt_string": 5,
                    "corrupt_text": 3,
                    "corrupted_string": 1,
                    "corruption_marker": 1,
                    "corruption_message": 1,
                    "string_var1": 1
                },
                "__s_00": {
                    "": 1,
                    "archive_member_name": 1,
                    "combined_str": 1,
                    "combined_string": 1,
                    "combined_text": 1,
                    "file_name": 1,
                    "final_string": 1,
                    "full_member_name": 1,
                    "full_name": 5,
                    "full_path": 3,
                    "fullname": 2,
                    "modified_file_name": 1,
                    "modified_file_path": 1,
                    "modified_name": 2,
                    "name": 2,
                    "name_str": 1,
                    "new_filename": 1,
                    "new_name": 1,
                    "processed_string": 1,
                    "string_var2": 1
                },
                "__stream": {
                    "": 1,
                    "file_ptr": 1,
                    "file_ptr2": 1,
                    "file_stream": 3,
                    "input_file": 4,
                    "input_stream": 1,
                    "modified_file": 1,
                    "new_stream": 1,
                    "stream": 5
                },
                "adjust_relative_path": {
                    "": 1,
                    "adjust_path": 2
                },
                "data_ERR_001036cc": {
                    "error_code": 1
                },
                "dcgettext": {
                    "": 1,
                    "get_locale_text": 1
                },
                "error": {
                    "": 1,
                    "print_error": 2
                },
                "fclose": {
                    "": 1,
                    "close_file": 2
                },
                "fopen": {
                    "open_file": 1
                },
                "fread": {
                    "": 1,
                    "file_read": 1,
                    "read_data": 1
                },
                "free": {
                    "": 1,
                    "deallocate_memory": 1
                },
                "fseek": {
                    "": 1,
                    "file_seek": 1,
                    "set_file_position": 1
                },
                "fstat": {
                    "": 1
                },
                "get_archive_member_name": {
                    "": 1,
                    "get_member_name": 1
                },
                "iVar3": {
                    "": 1,
                    "int_var": 2,
                    "int_var3": 1,
                    "result": 22,
                    "status": 2
                },
                "lVar1": {
                    "": 1,
                    "file_size": 1,
                    "length": 20,
                    "length1": 1,
                    "length_var": 1,
                    "length_var1": 1,
                    "long_var1": 1,
                    "str_len": 2,
                    "total_size": 1
                },
                "local_148": {
                    "archive3": 1,
                    "archive_handle": 1,
                    "archive_type": 1,
                    "counter_2": 1,
                    "dummy2": 1,
                    "error_file": 1,
                    "extra_field": 1,
                    "failure_flag": 1,
                    "file_ptr": 1,
                    "local_archive_c": 1,
                    "local_var3": 1,
                    "padding": 1,
                    "result": 2,
                    "temp_value": 1,
                    "unknown2": 1,
                    "unused": 1,
                    "value": 1,
                    "value1": 1,
                    "var4": 1,
                    "var5": 1,
                    "var_148": 1,
                    "zero": 1,
                    "zero1": 1,
                    "zero2": 1,
                    "zero_value": 1,
                    "zeroing": 1
                },
                "local_160": {
                    "": 1,
                    "archive1": 1,
                    "archive2": 4,
                    "archive_buffer": 1,
                    "archive_name_ext": 1,
                    "corrupt_buffer": 1,
                    "counter_1": 1,
                    "dummy1": 1,
                    "error_archive": 1,
                    "local_archive_b": 1,
                    "local_var2": 1,
                    "padding": 1,
                    "pointer": 1,
                    "some_array": 1,
                    "unknown1": 1,
                    "var3": 1,
                    "zero1": 1,
                    "zero_array1": 2,
                    "zero_buf1": 1,
                    "zero_padding": 1
                },
                "local_178": {
                    "": 1,
                    "archive": 5,
                    "archive1": 12,
                    "archive_data": 1,
                    "archive_header_data": 1,
                    "archive_name": 1,
                    "current_archive": 1,
                    "data1": 1,
                    "decompressed_archive": 1,
                    "file_buffer": 1,
                    "local_archive_a": 1,
                    "local_var1": 1
                },
                "local_208": {
                    "": 1,
                    "file_info": 4,
                    "file_stat": 13,
                    "file_stats": 2,
                    "stat": 1,
                    "stat_buffer": 1,
                    "stat_data": 1,
                    "stat_info": 3,
                    "stat_obj": 1,
                    "stat_struct": 2
                },
                "local_46": {
                    "": 1,
                    "header": 1,
                    "header_flag": 1,
                    "header_magic": 1,
                    "header_magic_number": 1,
                    "header_magic_value": 1,
                    "header_size": 4,
                    "header_type": 1,
                    "header_val": 1,
                    "header_value": 5,
                    "header_version": 1,
                    "local_short": 1,
                    "local_var12": 1,
                    "magic_num": 1,
                    "magic_number": 2,
                    "number": 1,
                    "short_val": 1,
                    "temp_var": 1,
                    "val3": 1,
                    "value": 1,
                    "var9": 1
                },
                "local_50": {
                    "": 1,
                    "archive_magic": 1,
                    "archive_version_string": 1,
                    "array": 1,
                    "buffer2": 2,
                    "data_buf": 1,
                    "file_header": 1,
                    "header": 11,
                    "header_magic": 1,
                    "header_string": 1,
                    "local_short_chars": 1,
                    "local_var11": 1,
                    "member_name": 1,
                    "num_buffer": 1,
                    "number": 2,
                    "number_buffer": 1,
                    "read_header": 1
                },
                "local_80": {
                    "": 1,
                    "archive_header": 1,
                    "buffer": 18,
                    "header_buffer": 4,
                    "header_data": 1,
                    "local_chars": 1,
                    "local_var10": 1,
                    "read_buffer": 2
                },
                "local_88": {
                    "": 1,
                    "flag": 3,
                    "flag1": 2,
                    "flag2": 1,
                    "flag3": 4,
                    "is_absolute": 1,
                    "is_file": 3,
                    "is_object_file": 1,
                    "is_open_file": 1,
                    "is_relative_path": 1,
                    "local_int": 1,
                    "local_var9": 1,
                    "path_type": 1,
                    "relative_path": 2,
                    "relative_path_flag": 1,
                    "relative_paths": 1,
                    "type": 1,
                    "use_full_path": 1,
                    "val_88": 1,
                    "var_88": 1
                },
                "local_90": {
                    "current_file_offset": 1,
                    "current_offset": 7,
                    "current_position": 2,
                    "data_offset": 1,
                    "file_offset": 1,
                    "header_offset": 2,
                    "local_long2": 1,
                    "local_var8": 1,
                    "next_offset": 2,
                    "offset": 2,
                    "pos2": 1,
                    "position": 5,
                    "val2": 1,
                    "val_90": 1,
                    "var_90": 1
                },
                "local_98": {
                    "": 1,
                    "archive_member_offset": 1,
                    "archive_offset": 2,
                    "current_file_offset": 1,
                    "current_offset": 1,
                    "d8_offset": 1,
                    "header_offset": 1,
                    "length2": 1,
                    "local_long1": 1,
                    "local_var7": 1,
                    "member_offset": 4,
                    "member_position": 1,
                    "offset": 3,
                    "pos1": 1,
                    "relative_offset": 1,
                    "seek_offset": 3,
                    "unknown5": 1,
                    "val1": 1,
                    "val_98": 1,
                    "var_98": 1
                },
                "local_a8": {
                    "a8": 1,
                    "archive": 1,
                    "archive6": 1,
                    "dummy4": 1,
                    "extra_field": 1,
                    "local_archive_f": 1,
                    "local_var6": 1,
                    "member_buffer": 1,
                    "obj_size": 1,
                    "object_name": 1,
                    "output_archive": 1,
                    "result": 1,
                    "temp_value2": 1,
                    "unknown4": 1,
                    "unused2": 1,
                    "val_a8": 1,
                    "value": 1,
                    "value4": 1,
                    "var8": 1,
                    "var_a8": 1,
                    "zero": 2,
                    "zero2": 1,
                    "zero4": 1,
                    "zero_value2": 1,
                    "zeroing": 1
                },
                "local_c0": {
                    "": 1,
                    "archive3": 1,
                    "archive5": 1,
                    "archive_file_ext": 1,
                    "c0": 1,
                    "counter_4": 1,
                    "data3": 1,
                    "dummy3": 1,
                    "inner_buffer2": 1,
                    "input_file": 1,
                    "local_archive_e": 1,
                    "local_var5": 1,
                    "member_archive_handle": 1,
                    "padding": 1,
                    "pointer": 1,
                    "temp2": 1,
                    "unknown3": 1,
                    "value3": 1,
                    "var2": 1,
                    "var7": 1,
                    "zero3": 1,
                    "zero_array2": 2,
                    "zero_buf2": 1,
                    "zero_padding": 1
                },
                "local_d8": {
                    "": 1,
                    "another_archive_data": 1,
                    "archive": 1,
                    "archive2": 9,
                    "archive4": 1,
                    "archive_file": 1,
                    "compressed_archive": 1,
                    "counter_3": 1,
                    "d8": 1,
                    "data2": 1,
                    "inner_buffer": 1,
                    "input_archive": 1,
                    "local_archive_d": 1,
                    "local_var4": 1,
                    "object_archive_handle": 1,
                    "output": 1,
                    "temp1": 1,
                    "value2": 1,
                    "var6": 1
                },
                "malloc": {
                    "": 1,
                    "allocate_mem": 1,
                    "allocate_memory": 1
                },
                "param_1": {
                    "archive_path": 2,
                    "arg1": 3,
                    "file_descriptor": 1,
                    "file_name": 5,
                    "filename": 10,
                    "param": 5,
                    "param1": 1,
                    "param_1": 1,
                    "param_file_name": 1,
                    "param_path": 1,
                    "param_ptr": 1
                },
                "param_2": {
                    "archive_file": 2,
                    "file": 20,
                    "file_pointer": 1,
                    "file_ptr": 5,
                    "file_stream": 1,
                    "input_file": 1,
                    "param_file": 1
                },
                "param_3": {
                    "char_val": 1,
                    "flag": 15,
                    "is_recursive": 1,
                    "is_relative": 2,
                    "is_relative_path": 1,
                    "param_char": 1,
                    "param_flag": 1,
                    "process_objects": 1,
                    "read_mode": 2,
                    "recursive": 1,
                    "reverse": 3,
                    "use_relative_path": 1,
                    "verbose": 1
                },
                "pcVar12": {
                    "": 1,
                    "archive": 1,
                    "archive_file_path": 1,
                    "archive_name": 9,
                    "char_ptr2": 1,
                    "d8": 1,
                    "d8_ptr": 1,
                    "d8_str": 1,
                    "file_name_ptr": 1,
                    "file_ptr": 1,
                    "filename2": 1,
                    "name": 1,
                    "old_path": 1,
                    "parent_path": 1,
                    "pointer2": 1,
                    "processed_var": 1,
                    "ptr": 1,
                    "ptr2": 1,
                    "str2": 1,
                    "str_val_3": 1
                },
                "pcVar13": {
                    "": 1,
                    "char_ptr3": 1,
                    "err_msg": 1,
                    "err_string": 1,
                    "error_message": 6,
                    "error_msg": 4,
                    "error_string": 1,
                    "errormsg": 1,
                    "file": 1,
                    "file_error_message": 1,
                    "file_name": 5,
                    "message": 1,
                    "message_format": 1,
                    "msg": 1,
                    "pointer3": 1,
                    "ptr3": 1,
                    "str_val_4": 1
                },
                "pcVar2": {
                    "": 1,
                    "char_ptr": 1,
                    "header": 1,
                    "header_buffer": 1,
                    "member_name": 1,
                    "other_archive_name": 1,
                    "pointer": 2,
                    "pointer_var": 1,
                    "ptr": 6,
                    "str": 9,
                    "str1": 1,
                    "str_ptr": 1,
                    "str_var2": 1,
                    "string": 1,
                    "temp_ptr": 1
                },
                "process_object": {
                    "": 1,
                    "process_member_object": 1,
                    "process_object": 1
                },
                "release_archive": {
                    "": 1,
                    "release_archive": 1,
                    "release_mem": 1
                },
                "sVar10": {
                    "": 1,
                    "archive_name_len": 2,
                    "archive_name_length": 2,
                    "archive_name_size": 1,
                    "archive_path_length": 1,
                    "arg1_len": 1,
                    "combined_size_2": 1,
                    "corrupt_placeholder_length": 1,
                    "d8_len": 2,
                    "d8_length": 1,
                    "data_length1": 1,
                    "file_size": 1,
                    "filename_length": 2,
                    "len1": 1,
                    "len2": 1,
                    "length": 1,
                    "old_name_length": 1,
                    "path_len": 1,
                    "path_length": 2,
                    "ptr_len": 1,
                    "size3": 1,
                    "size_t_var3": 1,
                    "size_var10": 1,
                    "text_size": 1
                },
                "sVar11": {
                    "": 1,
                    "combined_size_3": 1,
                    "data_length2": 1,
                    "file_name_len": 2,
                    "file_name_length": 2,
                    "file_name_size": 1,
                    "len2": 1,
                    "len3": 1,
                    "length": 1,
                    "member_name_length": 1,
                    "name_len": 4,
                    "name_len2": 1,
                    "name_length": 5,
                    "name_length_2": 1,
                    "name_size": 1,
                    "new_name_length": 1,
                    "size4": 1,
                    "size_t_var4": 1,
                    "size_var11": 1,
                    "total_length": 1
                },
                "sVar6": {
                    "": 1,
                    "bytes_read": 5,
                    "combined_size": 1,
                    "count": 2,
                    "length": 1,
                    "num_read": 1,
                    "read_size": 8,
                    "size": 5,
                    "size1": 1,
                    "size_t_var": 1,
                    "size_var": 1,
                    "size_var6": 1,
                    "total_len": 1
                },
                "sVar9": {
                    "": 1,
                    "file_name_len": 1,
                    "file_name_length": 2,
                    "len1": 1,
                    "length": 2,
                    "name_len": 4,
                    "name_length": 11,
                    "name_size": 3,
                    "size2": 1,
                    "size_t_var2": 1,
                    "size_var9": 1,
                    "str_length": 1
                },
                "setup_archive_constprop_0": {
                    "": 1
                },
                "snprintf": {
                    "": 1,
                    "concatenate_strings": 1,
                    "print_formatted": 1
                },
                "strlen": {
                    "get_string_length": 1
                },
                "strtoul": {
                    "": 1
                },
                "uVar14": {
                    "": 1,
                    "error_code": 1,
                    "error_flag": 4,
                    "final_status": 2,
                    "flag2": 3,
                    "result": 5,
                    "result2": 1,
                    "result_val": 1,
                    "return_status": 1,
                    "return_val": 1,
                    "return_value": 6,
                    "uint_var2": 1
                },
                "uVar4": {
                    "": 1,
                    "flag": 1,
                    "flag2": 1,
                    "flags": 2,
                    "object_result": 1,
                    "result": 2,
                    "return_val": 2,
                    "return_value": 5,
                    "status": 11,
                    "uint_var": 1,
                    "uint_var4": 1,
                    "var1": 1
                },
                "uVar5": {
                    "": 1,
                    "err_msg": 1,
                    "error_message": 3,
                    "error_msg": 4,
                    "message": 8,
                    "msg": 4,
                    "str_val": 1,
                    "string": 2,
                    "text": 1,
                    "translated_string": 1,
                    "undefined_var1": 1,
                    "unused_var5": 1,
                    "var2": 1
                },
                "uVar7": {
                    "": 1,
                    "err_msg": 1,
                    "error_message": 4,
                    "error_msg": 3,
                    "error_msg2": 1,
                    "error_string": 2,
                    "header": 1,
                    "label": 1,
                    "localized_message": 1,
                    "message": 4,
                    "msg": 3,
                    "msg2": 1,
                    "str_val_2": 1,
                    "text": 1,
                    "translated_string2": 1,
                    "undefined_var2": 1,
                    "unused_var7": 1,
                    "var3": 1
                },
                "uVar8": {
                    "": 1,
                    "archive_header": 1,
                    "archive_size": 2,
                    "file_size": 1,
                    "num": 5,
                    "number": 2,
                    "size": 1,
                    "ulong_val": 1,
                    "ulong_var": 2,
                    "ulong_var8": 1,
                    "val": 1,
                    "value": 10,
                    "var4": 1
                }
            },
            "called": [
                "FUN_001021d0",
                "FUN_00102130",
                "FUN_00102220",
                "FUN_00102f65",
                "FUN_001020d0",
                "FUN_00102240",
                "FUN_001021b0",
                "FUN_00102290",
                "FUN_00102cc4",
                "FUN_00102090",
                "FUN_00102e85",
                "FUN_001020b0",
                "FUN_00104de0",
                "FUN_001020e0",
                "FUN_001029a5",
                "FUN_001021a0",
                "FUN_00102030",
                "FUN_001025ab"
            ],
            "calling": [
                "FUN_00103bf0"
            ],
            "code": "\nuint extract_and_process_archive_0010358d(undefined8 filename,FILE *file,char flag)\n\n{\n  long length;\n  char *str;\n  int result;\n  uint status;\n  undefined8 message;\n  size_t read_size;\n  undefined8 error_message;\n  ulong value;\n  size_t name_length;\n  char *corrupt;\n  size_t filename_length;\n  size_t name_length;\n  char *full_name;\n  char *archive_name;\n  FILE *stream;\n  char *error_message;\n  uint return_value;\n  stat file_stat;\n  undefined archive1 [24];\n  undefined archive2 [16];\n  undefined8 result;\n  undefined archive2 [16];\n  undefined zero_array2 [16];\n  undefined8 zero;\n  long member_offset;\n  long current_offset;\n  int flag3;\n  undefined buffer [48];\n  char header [10];\n  short header_value;\n  \n  result = 0;\n  archive2 = ZEXT816(0);\n  zero_array2 = ZEXT816(0);\n  archive1._0_16_ = ZEXT816(0);\n  archive2 = ZEXT816(0);\n  zero = 0;\n  result = fileno(file);\n  result = fstat(result,&file_stat);\n  if ((result < 0) ||\n     (result = setup_archive_constprop_0(archive2,filename,file,file_stat.st_size,flag),\n     result != 0)) {\nLAB_001036cc:\n    return_value = 1;\nLAB_00103a46:\n    if ((FILE *)archive1._8_8_ != (FILE *)0x0) {\n      close_file((FILE *)archive1._8_8_);\n    }\n    release_archive(archive1);\n    release_archive(archive2);\n  }\n  else {\n    return_value = 0;\n    while (result = fseek(file,current_offset,0), result == 0) {\n      read_size = file_read(buffer,1,0x3c,file);\n      if (read_size != 0x3c) {\n        if (read_size == 0) goto LAB_00103a46;\n        error_message = \"%s: failed to read archive header\\n\";\nLAB_001036b8:\n        message = dcgettext(0,error_message,5);\n        print_error(message,filename);\n        goto LAB_001036cc;\n      }\n      if (header_value != 0xa60) {\n        message = archive2._0_8_;\n        error_message = dcgettext(0,\"%s: did not find a valid archive header\\n\",5);\n        print_error(error_message,message);\n        goto LAB_001036cc;\n      }\n      current_offset = current_offset + 0x3c;\n      value = strtoul(header,(char **)0x0,10);\n      DAT_00109438 = (value + 1) - (ulong)((value & 1) == 0);\n      error_message = (char *)get_archive_member_name(archive2,archive1);\n      if (error_message == (char *)0x0) {\n        error_message = \"%s: bad archive file name\\n\";\n        goto LAB_001036b8;\n      }\n      name_length = get_string_length(error_message);\n      corrupt = (char *)dcgettext(0,\"<corrupt>\",5);\n      archive_name = (char *)archive2._0_8_;\n      filename_length = get_string_length((char *)archive2._0_8_);\n      name_length = get_string_length(error_message);\n      read_size = filename_length + name_length + 3;\n      if (flag3 == 0) {\n        full_name = (char *)allocate_mem(read_size);\n        if (full_name == (char *)0x0) goto LAB_001037d3;\n        snprintf(full_name,read_size,\"%s(%s)\",archive_name,error_message);\n      }\n      else if (member_offset == 0) {\n        full_name = (char *)allocate_mem(read_size);\n        if (full_name == (char *)0x0) {\nLAB_001037d3:\n          message = dcgettext(0,\"Out of memory\\n\",5);\n          print_error(message);\n          message = dcgettext(0,\"%s: bad archive file name\\n\",5);\n          print_error(message,filename);\n          free(error_message);\n          goto LAB_001036cc;\n        }\n        snprintf(full_name,read_size,\"%s[%s]\",archive_name,error_message);\n      }\n      else {\n        str = (char *)archive1._0_8_;\n        length = filename_length + name_length + 5;\n        if ((char *)archive1._0_8_ == (char *)0x0) {\n          read_size = get_string_length(corrupt);\n          read_size = length + read_size;\n          full_name = (char *)allocate_mem(read_size);\n          str = corrupt;\n        }\n        else {\n          read_size = get_string_length((char *)archive1._0_8_);\n          read_size = length + read_size;\n          full_name = (char *)allocate_mem(read_size);\n        }\n        if (full_name == (char *)0x0) goto LAB_001037d3;\n        snprintf(full_name,read_size,\"%s[%s(%s)]\",archive_name,str,error_message);\n      }\n      if (flag == '\\0') {\n        free(error_message);\n        current_offset = current_offset + DAT_00109438;\n        status = process_object(full_name,file);\n        return_value = return_value | status;\n      }\n      else {\n        if (member_offset == 0) {\n          archive_name = (char *)adjust_path(filename,error_message,name_length);\n          free(error_message);\n          if (archive_name != (char *)0x0) {\n            stream = open_file(archive_name,\"r+b\");\n            if (stream != (FILE *)0x0) {\n              status = process_object(full_name,stream);\n              return_value = return_value | status;\n              close_file(stream);\n              free(archive_name);\n              goto LAB_00103a39;\n            }\n            message = dcgettext(0,\"Input file \\'%s\\' is not readable\\n\",5);\n            print_error(message,archive_name);\n            free(archive_name);\n          }\n          free(full_name);\n          goto LAB_001036cc;\n        }\n        free(error_message);\n        result = fseek((FILE *)archive1._8_8_,member_offset + 0x3c,0);\n        if (result != 0) {\n          message = archive1._0_8_;\n          error_message = dcgettext(0,\"%s: failed to seek to archive member\\n\",5);\n          print_error(error_message,message);\n          free(full_name);\n          goto LAB_001036cc;\n        }\n        status = process_object(full_name,archive1._8_8_);\n        return_value = return_value | status;\n      }\nLAB_00103a39:\n      free(full_name);\n    }\n    message = dcgettext(0,\"%s: failed to seek to next archive header\\n\",5);\n    return_value = 1;\n    print_error(message,filename);\n  }\n  return return_value;\n}\n\n",
            "current_name": "extract_and_process_archive_0010358d",
            "entrypoint": "0x0010358d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010358d": "extract_and_process_archive_0010358d",
                "__s": "corrupt",
                "__s_00": "full_name",
                "__stream": "stream",
                "adjust_relative_path": "adjust_path",
                "error": "print_error",
                "fclose": "close_file",
                "fopen": "open_file",
                "fread": "file_read",
                "iVar3": "result",
                "lVar1": "length",
                "local_148": "result",
                "local_160": "archive2",
                "local_178": "archive1",
                "local_208": "file_stat",
                "local_46": "header_value",
                "local_50": "header",
                "local_80": "buffer",
                "local_88": "flag3",
                "local_90": "current_offset",
                "local_98": "member_offset",
                "local_a8": "zero",
                "local_c0": "zero_array2",
                "local_d8": "archive2",
                "malloc": "allocate_mem",
                "param_1": "filename",
                "param_2": "file",
                "param_3": "flag",
                "pcVar12": "archive_name",
                "pcVar13": "error_message",
                "pcVar2": "str",
                "sVar10": "filename_length",
                "sVar11": "name_length",
                "sVar6": "read_size",
                "sVar9": "name_length",
                "strlen": "get_string_length",
                "uVar14": "return_value",
                "uVar4": "status",
                "uVar5": "message",
                "uVar7": "error_message",
                "uVar8": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103a90": {
            "additional_data": {
                "FUNC_00103ab3": {
                    "process_data": 4,
                    "reverse_data": 1
                },
                "FUN_00103a90": {
                    "convert_data_length": 1,
                    "convert_data_length_to_value": 1,
                    "decode_data": 1,
                    "extract_data": 2,
                    "extract_data_from_pointer": 2,
                    "get_data": 2,
                    "get_data_from_pointer": 2,
                    "get_data_length": 2,
                    "get_data_value": 5,
                    "get_decoded_value": 1,
                    "get_length_value": 1,
                    "get_value_from_data": 1,
                    "get_value_from_param": 1,
                    "handle_data_length": 1,
                    "parse_data_length": 4,
                    "read_data_from_pointer": 1,
                    "retrieve_data": 1,
                    "reverse_extracted_data": 1
                },
                "F_ReverseDataLength": {
                    "reverse_data_length": 1
                },
                "abort": {
                    "abort_program": 1,
                    "stop_execution": 1,
                    "terminate_execution": 1,
                    "terminate_program": 1
                },
                "byte": {
                    "byte_value": 1
                },
                "dcgettext": {
                    "get_error_message": 4
                },
                "error": {
                    "print_error": 1,
                    "print_error_message": 3
                },
                "param_1": {
                    "buffer": 1,
                    "data": 8,
                    "data_array": 3,
                    "data_pointer": 12,
                    "data_ptr": 6
                },
                "param_2": {
                    "data_length": 24,
                    "length": 7
                },
                "uVar1": {
                    "converted_value": 1,
                    "extracted_data": 2,
                    "parsed_data": 1,
                    "result": 27
                },
                "uVar2": {
                    "err_msg": 1,
                    "error_message": 22,
                    "error_msg": 4,
                    "error_string": 4
                },
                "ushort": {
                    "ushort_value": 1
                }
            },
            "called": [
                "FUN_0010289a",
                "FUN_00103ab3",
                "FUN_00102825"
            ],
            "calling": [
                "FUN_00104de0"
            ],
            "code": "\nulong get_value_from_data_00103a90(ulong *data_pointer,ulong data_length)\n\n{\n  ulong result;\n  undefined8 error_message;\n  \n  switch(data_length & 0xffffffff) {\n  default:\n    error_message = get_error_message(0,\"Unhandled data length: %d\\n\",5);\n    print_error_message(error_message,data_length & 0xffffffff);\n                    \n    stop_execution();\n  case 1:\n    return (ulong)*(byte_value *)data_pointer;\n  case 2:\n    return (ulong)*(ushort_value *)data_pointer;\n  case 3:\n    result = FUNC_00103ab3(data_pointer,data_length,\n                         (ulong)*(byte_value *)((long)data_pointer + 1) << 8 |\n                         (ulong)*(byte_value *)((long)data_pointer + 2) << 0x10);\n    return result;\n  case 4:\n    return (ulong)*(uint *)data_pointer;\n  case 5:\n    result = FUNC_00103ab3(data_pointer,data_length,(ulong)*(byte_value *)((long)data_pointer + 4) << 0x20);\n    return result;\n  case 6:\n    result = FUNC_00103ab3(data_pointer,data_length,\n                         (ulong)*(byte_value *)((long)data_pointer + 4) << 0x20 |\n                         (ulong)*(byte_value *)((long)data_pointer + 5) << 0x28);\n    return result;\n  case 7:\n    result = FUNC_00103ab3(data_pointer,data_length,\n                         (ulong)*(byte_value *)((long)data_pointer + 4) << 0x20 |\n                         (ulong)*(byte_value *)((long)data_pointer + 5) << 0x28 | (ulong)*(uint *)data_pointer);\n    return result;\n  case 8:\n    return *data_pointer;\n  }\n}\n\n",
            "current_name": "get_value_from_data_00103a90",
            "entrypoint": "0x00103a90",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103a90": "get_value_from_data_00103a90",
                "abort": "stop_execution",
                "byte": "byte_value",
                "dcgettext": "get_error_message",
                "error": "print_error_message",
                "param_1": "data_pointer",
                "param_2": "data_length",
                "uVar1": "result",
                "uVar2": "error_message",
                "ushort": "ushort_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103ab3": {
            "called": [],
            "calling": [
                "FUN_00102825",
                "FUN_00103a90"
            ],
            "code": "\nvoid FUNC_00103ab3(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103ab3",
            "entrypoint": "0x00103ab3",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103ab3": "FUNC_00103ab3"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103ad0": {
            "additional_data": {
                "FUN_00103ad0": {
                    "copy_data": 6,
                    "copy_data_to_memory": 3,
                    "fill_data": 2,
                    "fill_memory": 3,
                    "fill_memory_with_char": 1,
                    "fill_memory_with_data": 1,
                    "set_memory_bytes": 1,
                    "set_multiple_chars": 1,
                    "store_data_to_memory": 1,
                    "update_data": 1,
                    "write_byte_sequence": 1,
                    "write_data": 6,
                    "write_data_to_memory": 4
                },
                "param_1": {
                    "address": 1,
                    "buffer": 2,
                    "buffer_address": 2,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "dest_addr": 2,
                    "dest_address": 4,
                    "dest_buffer": 1,
                    "dest_pointer": 2,
                    "dest_ptr": 1,
                    "destination": 8,
                    "destination_address": 1,
                    "destination_pointer": 1,
                    "memory_address": 4
                },
                "param_2": {
                    "char_to_fill": 1,
                    "character": 1,
                    "data": 14,
                    "data_to_copy": 2,
                    "data_value": 6,
                    "fill_value": 2,
                    "source_data": 1,
                    "src_data": 1,
                    "value": 3
                },
                "param_3": {
                    "data_length": 15,
                    "length": 16
                },
                "uVar1": {
                    "err_msg": 1,
                    "error_message": 20,
                    "error_msg": 6,
                    "error_string": 2,
                    "message": 1
                },
                "uVar2": {
                    "counter": 4,
                    "i": 8,
                    "index": 11,
                    "iteration": 1,
                    "iteration_count": 4,
                    "iterator": 1,
                    "loop_index": 1
                }
            },
            "called": [
                "FUN_00102c98"
            ],
            "calling": [
                "FUN_00104de0"
            ],
            "code": "\nvoid write_data_to_memory_00103ad0(long destination,ulong data,uint length)\n\n{\n  undefined8 error_message;\n  ulong index;\n  \n  if (length < 9) {\n    for (index = 0; length != index; index = index + 1) {\n      *(char *)(destination + index) = (char)data;\n      data = data >> 8;\n    }\n    return;\n  }\n  error_message = dcgettext(0,\"Unhandled data length: %d\\n\",5);\n  error(error_message,length);\n                    \n  abort();\n}\n\n",
            "current_name": "write_data_to_memory_00103ad0",
            "entrypoint": "0x00103ad0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103ad0": "write_data_to_memory_00103ad0",
                "param_1": "destination",
                "param_2": "data",
                "param_3": "length",
                "uVar1": "error_message",
                "uVar2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103b00": {
            "additional_data": {
                "FUN_00103b00": {
                    "execute_main": 1,
                    "process_and_run": 1,
                    "process_entry": 1,
                    "start_and_loop": 1,
                    "start_entry_processing": 1,
                    "start_main": 2,
                    "start_main_func": 1,
                    "start_main_loop": 2,
                    "start_main_process": 4,
                    "start_main_with_entry": 1,
                    "start_main_wrapper": 2,
                    "start_process": 1
                },
                "FUN_00103bf0": {
                    "process_data": 2
                },
                "auStack_8": {
                    "aux_stack": 1,
                    "auxiliary_stack": 1,
                    "local_variable": 1,
                    "local_variable_1": 1,
                    "stack": 4,
                    "stack8": 3,
                    "stack_8": 1,
                    "stack_array": 1,
                    "stack_buffer": 2,
                    "stack_data": 3,
                    "unused_stack": 1
                },
                "param_1": {
                    "arg1": 8,
                    "arg_1": 1,
                    "argc": 2,
                    "argument1": 1,
                    "entry_param_1": 1,
                    "entry_point": 3,
                    "instance": 1,
                    "param1": 7,
                    "param_1": 4,
                    "undefined_param_1": 1,
                    "unused_arg1": 1,
                    "unused_param1": 1
                },
                "param_2": {
                    "arg2": 8,
                    "arg_2": 1,
                    "argument": 1,
                    "argument2": 1,
                    "arguments": 1,
                    "argv": 2,
                    "command_line": 1,
                    "entry_param_2": 1,
                    "param": 1,
                    "param2": 7,
                    "param_2": 4,
                    "undefined_param_2": 1,
                    "unused_arg2": 1,
                    "unused_param2": 1
                },
                "param_3": {
                    "arg_3": 1
                },
                "processEntry": {
                    "execute_main_function": 1,
                    "run_main_function": 1,
                    "start_main": 1,
                    "start_main_loop": 9,
                    "start_main_process": 1
                }
            },
            "called": [
                "FUN_00103bf0",
                "FUN_0010a010"
            ],
            "calling": [],
            "code": "\nvoid start_main_loop start_main_process_00103b00(undefined8 arg1,undefined8 arg2)\n\n{\n  undefined stack [8];\n  \n  __libc_start_main(main,arg2,&stack0x00000008,0,0,arg1,stack);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "start_main_process_00103b00",
            "entrypoint": "0x00103b00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103b00": "start_main_process_00103b00",
                "auStack_8": "stack",
                "param_1": "arg1",
                "param_2": "arg2",
                "processEntry": "start_main_loop"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103b30": {
            "called": [
                "FUN_0010a030"
            ],
            "calling": [
                "FUN_00103ba0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00103b43) */\n/* WARNING: Removing unreachable block (ram,0x00103b4f) */\n\nvoid FUNC_00103b30(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103b30",
            "entrypoint": "0x00103b30",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103b30": "FUNC_00103b30"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103b60": {
            "called": [
                "FUN_0010a160"
            ],
            "calling": [
                "FUN_00103be0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00103b84) */\n/* WARNING: Removing unreachable block (ram,0x00103b90) */\n\nvoid FUNC_00103b60(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00103b60",
            "entrypoint": "0x00103b60",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00103b60": "FUNC_00103b60"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00103ba0": {
            "additional_data": {
                "FUNC_00103b30": {
                    "check_status": 1,
                    "clean_up_resources": 1,
                    "cleanup": 5,
                    "cleanup_program": 1,
                    "cleanup_resources": 8,
                    "deregister_tm_clones": 6,
                    "do_cleanup": 1,
                    "execute_cleanup": 1,
                    "finalize": 1,
                    "finalize_resources": 1,
                    "perform_cleanup": 5
                },
                "FUN_00103ba0": {
                    "execute_initialization": 1,
                    "initialize": 10,
                    "initialize_and_finalize": 1,
                    "initialize_application": 3,
                    "initialize_if_needed": 1,
                    "initialize_if_not_initialized": 1,
                    "initialize_program": 14
                }
            },
            "called": [
                "FUN_001022b0",
                "FUN_00103b30"
            ],
            "calling": [],
            "code": "\nvoid initialize_program_00103ba0(void)\n\n{\n  if (DAT_00109320 != '\\0') {\n    return;\n  }\n  __cxa_finalize(PTR_LOOP_00109148);\n  deregister_tm_clones();\n  DAT_00109320 = 1;\n  return;\n}\n\n",
            "current_name": "initialize_program_00103ba0",
            "entrypoint": "0x00103ba0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103ba0": "initialize_program_00103ba0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103be0": {
            "called": [
                "FUN_00103b60"
            ],
            "calling": [],
            "code": "\nvoid register_tm_clones(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n",
            "current_name": "FUN_00103be0",
            "entrypoint": "0x00103be0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00103bf0": {
            "additional_data": {
                "DAT_00103cba": {
                    "switch_variable": 1
                },
                "DAT_0010604c": {
                    "long_val1": 1
                },
                "DAT_00107040": {
                    "identifier_map": 1
                },
                "DAT_00109150": {
                    "abiversion2": 1,
                    "my_feature": 1,
                    "pt_note_value": 1
                },
                "DAT_00109154": {
                    "abiversion": 1,
                    "abiversion_value": 1,
                    "my_abi": 1
                },
                "DAT_00109158": {
                    "elf_osabi_value": 1,
                    "machine3": 1,
                    "your_abi": 1
                },
                "DAT_0010915c": {
                    "abi_version": 1,
                    "osabi": 1
                },
                "DAT_00109160": {
                    "elf_type_subvalue": 1,
                    "my_type": 1,
                    "type2": 1
                },
                "DAT_00109164": {
                    "elf_type_value": 1,
                    "type1": 1,
                    "your_type": 1
                },
                "DAT_00109168": {
                    "machine7": 1,
                    "osabi_subvalue": 1,
                    "your_arch": 1
                },
                "DAT_0010916c": {
                    "machine1": 1,
                    "osabi_value": 1,
                    "your_os": 1
                },
                "DAT_00109170": {
                    "machine6": 1,
                    "my_arch": 1
                },
                "DAT_00109174": {
                    "machine5": 1,
                    "my_os": 1
                },
                "DAT_00109320": {
                    "x86_strings": 1
                },
                "DAT_00109330": {
                    "x86_features": 1
                },
                "DAT_00109340": {
                    "my_os_string": 1
                },
                "DAT_00109348": {
                    "elf_os_abi": 1
                },
                "DAT_00109358": {
                    "my_type_string": 1
                },
                "DAT_00109360": {
                    "elf_type": 1
                },
                "DAT_00109378": {
                    "elf_machine": 1
                },
                "DAT_00109388": {
                    "process_archive": 1
                },
                "DAT_001093b0": {
                    "process_object": 1
                },
                "DAT_001093b8": {
                    "set_data_function_pointer": 1,
                    "write_uint32": 1
                },
                "DAT_001093c0": {
                    "fn_ptr": 1,
                    "read_uint32": 1
                },
                "DAT_001093e4": {
                    "flag3": 1,
                    "is_big_endian": 1
                },
                "DAT_001093f8": {
                    "long_val2": 1,
                    "segments_start": 1
                },
                "DAT_00109414": {
                    "segments_implicit_count": 1
                },
                "DAT_00109418": {
                    "flag8": 1,
                    "my_arch": 1
                },
                "DAT_0010941a": {
                    "ambiguous_arches": 1,
                    "flag11": 1
                },
                "DAT_00109424": {
                    "segments_count": 1,
                    "ulong_val10": 1
                },
                "DAT_00109438": {
                    "flag14": 1,
                    "is_elf": 1
                },
                "DAT_00109440": {
                    "bool_const_2": 1,
                    "do_decompile": 1,
                    "flag13": 1
                },
                "DAT_00109444": {
                    "bool_const_1": 1,
                    "do_disassemble": 1,
                    "flag15": 1
                },
                "FILE": {
                    "file": 1
                },
                "FUN_00102e85": {
                    "set_locale": 1
                },
                "FUN_00102fa0": {
                    "consume_whitespace": 1
                },
                "FUN_00102fbc": {
                    "initialize": 1
                },
                "FUN_00103160": {
                    "print_error": 1
                },
                "FUN_001032de": {
                    "set_file_position": 1
                },
                "FUN_00103449": {
                    "write_to_file": 1
                },
                "FUN_0010358d": {
                    "print_to_stdout": 1
                },
                "FUN_00103bf0": {
                    "improve_binary_processing": 1,
                    "parse_command_line": 1,
                    "parse_command_line_options": 1,
                    "parse_files": 1,
                    "process_binary_file": 2,
                    "process_elf": 1,
                    "process_elf_file": 1,
                    "process_files": 4,
                    "process_input": 1
                },
                "FUN_00104c60": {
                    "handle_unescape": 1
                },
                "FUN_00104ce0": {
                    "parse_options": 1
                },
                "FUN_00104d30": {
                    "validate_file": 1
                },
                "FUN_00104da0": {
                    "validate_input": 1
                },
                "FUN_00104de0": {
                    "process_file": 1
                },
                "FUN_00105370": {
                    "find_substring": 1
                },
                "__addr": {
                    "addr": 6,
                    "addr_ptr": 1,
                    "addr_var": 1,
                    "address": 7,
                    "address1": 2,
                    "address_1": 1,
                    "file_map_addr": 1,
                    "mapped_addr": 1,
                    "mapped_address": 4,
                    "mem_address1": 1,
                    "mmap_address": 2,
                    "v_addr": 1,
                    "void_pointer_1": 1
                },
                "__optarg": {
                    "option_argument": 1
                },
                "__ptr": {
                    "address2": 2,
                    "address_2": 1,
                    "allocated_memory": 2,
                    "allocated_ptr": 1,
                    "file_content": 1,
                    "malloced_memory": 1,
                    "mem_address2": 1,
                    "pointer": 7,
                    "ptr": 7,
                    "ptr_var": 1,
                    "ptr_variable": 1,
                    "segments": 1,
                    "v_ptr": 1,
                    "void_pointer_2": 1,
                    "xmalloc_ptr": 1
                },
                "__s": {
                    "buffer": 6,
                    "byte_array": 5,
                    "byte_pointer": 1,
                    "byte_ptr": 1,
                    "byte_seq": 1,
                    "byte_string": 1,
                    "data_buffer": 1,
                    "file_buffer": 1,
                    "file_contents": 1,
                    "file_data": 1,
                    "str": 1,
                    "string": 4,
                    "string4": 1,
                    "string_var": 1,
                    "text": 1
                },
                "_optarg": {
                    "argument_value": 1,
                    "current_arg": 1
                },
                "_optind": {
                    "argument_index": 1,
                    "current_arg_index": 1
                },
                "_optopt": {
                    "invalid_option": 1
                },
                "_stderr": {
                    "standard_error": 2
                },
                "_stdout": {
                    "standard_output": 2
                },
                "algo": {
                    "algorithm": 1
                },
                "bVar2": {
                    "byte": 1,
                    "byte1": 1,
                    "byte_val": 3,
                    "byte_value": 2,
                    "byte_var": 8,
                    "byte_var2": 6,
                    "byte_variable": 1,
                    "byte_variable_1": 1,
                    "current_byte": 6
                },
                "bVar4": {
                    "bool1": 3,
                    "bool_val": 1,
                    "bool_value": 1,
                    "bool_value_1": 1,
                    "bool_var": 2,
                    "bool_var1": 7,
                    "bool_var4": 6,
                    "bool_var_1": 3,
                    "bool_variable": 1,
                    "bool_variable1": 1,
                    "bool_variable_1": 1,
                    "is_invalid": 1,
                    "is_value_valid": 1
                },
                "bVar5": {
                    "bool2": 3,
                    "bool_val2": 1,
                    "bool_value2": 1,
                    "bool_value_2": 1,
                    "bool_var2": 8,
                    "bool_var5": 6,
                    "bool_var_2": 3,
                    "bool_variable2": 2,
                    "bool_variable_2": 1,
                    "in_single_quote": 1,
                    "is_in_single_quotes": 1,
                    "is_single_quote": 1
                },
                "bVar6": {
                    "bool3": 3,
                    "bool_val3": 1,
                    "bool_value3": 1,
                    "bool_value_3": 1,
                    "bool_var3": 8,
                    "bool_var6": 6,
                    "bool_var_3": 3,
                    "bool_variable3": 2,
                    "bool_variable_3": 1,
                    "in_escape_sequence": 1,
                    "is_escape": 1,
                    "is_escape_char": 1
                },
                "bVar7": {
                    "bool4": 3,
                    "bool_val4": 1,
                    "bool_value4": 1,
                    "bool_value_4": 1,
                    "bool_var4": 8,
                    "bool_var7": 6,
                    "bool_var_4": 3,
                    "bool_variable4": 2,
                    "bool_variable_4": 1,
                    "in_double_quote": 1,
                    "is_double_quote": 1,
                    "is_in_double_quotes": 1
                },
                "cVar1": {
                    "ch": 4,
                    "char1": 1,
                    "char_var": 5,
                    "char_var1": 6,
                    "char_variable_1": 1,
                    "character": 3,
                    "character1": 1,
                    "current_char": 8
                },
                "iVar10": {
                    "file_stat_result": 1,
                    "file_status": 1,
                    "i_variable": 1,
                    "int_variable_2": 1,
                    "j": 1,
                    "result": 3,
                    "ret_val": 1,
                    "return_value": 2,
                    "stat_result": 2,
                    "status": 6,
                    "status_var": 1,
                    "temp": 1,
                    "temp_var": 5,
                    "temp_var1": 1,
                    "tmp_var": 2,
                    "value": 1
                },
                "iVar31": {
                    "at_file_counter": 1,
                    "count": 1,
                    "count_var2": 1,
                    "counter": 1,
                    "i_variable2": 1,
                    "index2": 1,
                    "index_var": 1,
                    "inner_loop_counter": 1,
                    "it": 1,
                    "loop_count": 1,
                    "loop_counter2": 1,
                    "loop_counter_2": 1,
                    "loop_limit": 1,
                    "loop_var1": 1,
                    "loop_var4": 1,
                    "loop_var_5": 1,
                    "max_files": 2,
                    "max_iterations": 1,
                    "status": 1,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "temp_var31": 1,
                    "tmp_var2": 1,
                    "value_4": 1,
                    "var3": 1
                },
                "iVar8": {
                    "count_var": 1,
                    "counter": 3,
                    "current_file_index": 1,
                    "i": 4,
                    "index": 15,
                    "int_variable_1": 1,
                    "loop_counter": 2,
                    "loop_index": 1,
                    "loop_var": 1,
                    "result_count": 1
                },
                "lVar20": {
                    "count": 2,
                    "index": 1,
                    "index2": 1,
                    "j": 1,
                    "length": 1,
                    "long_counter": 1,
                    "long_val": 1,
                    "long_var": 1,
                    "long_var20": 3,
                    "long_variable": 1,
                    "long_variable1": 1,
                    "long_variable_1": 1,
                    "loop_index": 1,
                    "loop_iterator": 1,
                    "loop_var": 6,
                    "loop_var1": 2,
                    "loop_var2": 1,
                    "loop_var_1": 1,
                    "size_var_3": 1,
                    "value_1": 1
                },
                "lVar23": {
                    "count2": 1,
                    "index3": 1,
                    "k": 1,
                    "long_counter_2": 1,
                    "long_val2": 1,
                    "long_var2": 1,
                    "long_var23": 3,
                    "long_variable2": 2,
                    "long_variable_2": 1,
                    "loop_var2": 7,
                    "loop_var23": 1,
                    "loop_var3": 1,
                    "loop_var_3": 1,
                    "size_var_4": 1,
                    "temp": 1,
                    "temp_index": 1,
                    "temp_var": 1,
                    "value": 1,
                    "value_2": 1
                },
                "lVar24": {
                    "note_index": 1,
                    "temp_index2": 1
                },
                "lVar29": {
                    "count3": 1,
                    "file_index": 3,
                    "i": 1,
                    "index4": 1,
                    "long_counter_3": 1,
                    "long_var": 1,
                    "long_var1": 1,
                    "long_var29": 3,
                    "long_var3": 1,
                    "long_variable3": 2,
                    "long_variable_3": 1,
                    "loop_iterator": 1,
                    "loop_var29": 1,
                    "loop_var3": 4,
                    "loop_var_4": 1,
                    "m": 1,
                    "note_length_offset": 1,
                    "offset": 1,
                    "temp_long": 1,
                    "value_3": 1
                },
                "lVar30": {
                    "note_start_index": 1
                },
                "lVar31": {
                    "section": 1
                },
                "local_120": {
                    "count4": 1,
                    "current_pos": 1,
                    "current_u_long7": 1,
                    "local_long": 1,
                    "local_size_var": 1,
                    "local_ulong": 1,
                    "local_val": 1,
                    "local_value": 1,
                    "local_var1": 3,
                    "local_var120": 2,
                    "local_var_1": 1,
                    "segment_offset": 1,
                    "segment_start": 1,
                    "temp_ulong_3": 1,
                    "temp_var": 1,
                    "ulong8": 1,
                    "ulong_value_8": 1,
                    "ulong_var11": 1,
                    "ulong_var120": 1,
                    "ulong_var8": 1,
                    "ulong_var9": 1,
                    "ulong_variable_6": 1,
                    "unsigned_long6": 1
                },
                "local_138": {
                    "dynamic_array": 1,
                    "file_names": 1,
                    "file_names_ptr": 1,
                    "file_path_list": 1,
                    "local_array": 2,
                    "local_param_array": 1,
                    "local_pointer": 1,
                    "local_ptr": 1,
                    "malloced_memory_2": 1,
                    "new_args": 1,
                    "new_arguments3": 1,
                    "new_argv": 1,
                    "new_long_pointer": 1,
                    "new_param_array": 1,
                    "new_param_list": 1,
                    "output_files": 1,
                    "result_array": 2,
                    "str_array": 1,
                    "string_arr": 1,
                    "ulong_pointer2": 1,
                    "undefined8_pointer": 1,
                    "updated_file_names": 1
                },
                "local_8": {
                    "local_var": 1
                },
                "local_c8": {
                    "file_info": 1,
                    "file_stat": 2,
                    "file_status": 1,
                    "local_stat": 6,
                    "local_stat_struct": 2,
                    "local_stat_structure_variable": 1,
                    "local_stat_var": 1,
                    "stat_struct": 7,
                    "stat_structure": 1,
                    "stat_var": 2,
                    "stat_var_c8": 1,
                    "stat_variable": 1
                },
                "local_d0": {
                    "buffer": 2,
                    "buffer2": 1,
                    "byte_array": 2,
                    "byte_array1": 2,
                    "byte_array2": 1,
                    "byte_array_var_d0": 1,
                    "byte_pointer3": 1,
                    "byte_ptr3": 1,
                    "byte_variable_2": 1,
                    "file_magic_number": 1,
                    "local_byte": 2,
                    "local_byte1": 1,
                    "local_byte_arr": 1,
                    "local_byte_array": 1,
                    "local_byte_pointer": 1,
                    "local_byte_ptr": 1,
                    "local_byte_var_d0": 1,
                    "local_pointer_byte": 1,
                    "local_pointer_value": 1,
                    "local_var_2": 1,
                    "local_var_d0": 1,
                    "segment_data": 1,
                    "temp_var3": 1
                },
                "local_d8": {
                    "char_array": 3,
                    "char_array_var_d8": 1,
                    "char_variable_2": 1,
                    "current_string2": 1,
                    "error_format": 1,
                    "file_name": 1,
                    "local_char": 1,
                    "local_char_pointer": 1,
                    "local_char_ptr1": 1,
                    "local_char_var_d8": 1,
                    "local_pointer_char": 1,
                    "local_str1": 2,
                    "local_string": 1,
                    "local_string_1": 2,
                    "local_value_2": 1,
                    "local_var2": 1,
                    "local_var_d8": 1,
                    "localized_text": 1,
                    "str_ptr3": 1,
                    "string": 1,
                    "string5": 1,
                    "string_var3": 1,
                    "temp_var2": 1
                },
                "local_pcVar44": {
                    "local_char_var44": 1
                },
                "local_sVar40": {
                    "local_size_var40": 1
                },
                "local_uVar3c": {
                    "local_ulong_var3_c": 1
                },
                "pFVar16": {
                    "file": 1,
                    "file_pointer": 14,
                    "file_ptr": 10,
                    "file_var": 1,
                    "pointer_to_file": 1
                },
                "param_1": {
                    "argc": 9,
                    "count": 1,
                    "file_count": 1,
                    "function_parameter_1": 1,
                    "input_size": 2,
                    "num_arguments": 1,
                    "num_entries": 1,
                    "num_files": 7,
                    "num_parameters": 1,
                    "num_params": 4,
                    "param_count": 1,
                    "size": 1
                },
                "param_2": {
                    "arguments": 1,
                    "argv": 9,
                    "file_names": 3,
                    "file_paths": 9,
                    "function_parameter_2": 1,
                    "input_files": 1,
                    "param_array": 4,
                    "param_list": 2
                },
                "pbVar22": {
                    "buffer_iterator": 1,
                    "buffer_pointer": 1,
                    "byte_array": 1,
                    "byte_array_pointer": 1,
                    "byte_pointer": 2,
                    "byte_pointer1": 1,
                    "byte_pointer_2": 1,
                    "byte_ptr": 6,
                    "byte_ptr22": 1,
                    "byte_ptr_var": 2,
                    "byte_ptr_var22": 1,
                    "byte_var22": 1,
                    "new_byte_array": 1,
                    "pointer_byte": 2,
                    "pointer_value_3": 1,
                    "segment_data": 1
                },
                "pbVar27": {
                    "buffer_iterator": 1,
                    "byte_pointer": 3,
                    "byte_pointer2": 3,
                    "byte_ptr": 2,
                    "byte_ptr2": 6,
                    "byte_ptr27": 2,
                    "byte_ptr_var2": 1,
                    "byte_ptr_var27": 1,
                    "byte_var27": 1,
                    "current_char": 1,
                    "current_pointer": 1,
                    "current_string": 1,
                    "current_text": 1,
                    "pointer_byte2": 1,
                    "pointer_byte_2": 1,
                    "pointer_value_4": 1
                },
                "pcVar34": {
                    "char_pointer": 2,
                    "char_pointer34": 1,
                    "char_ptr": 3,
                    "char_ptr34": 1,
                    "char_ptr_var": 1,
                    "char_ptr_var34": 1,
                    "char_var34": 1,
                    "current_string": 1,
                    "err_msg": 1,
                    "error_message": 3,
                    "error_text": 1,
                    "pointer_char": 1,
                    "str_ptr": 1,
                    "string2": 1,
                    "string_pointer": 1,
                    "string_ptr": 2,
                    "string_var": 1,
                    "string_variable_1": 1,
                    "temp_str1": 1
                },
                "pcVar36": {
                    "char_pointer1": 1,
                    "char_pointer36": 1,
                    "char_pointer_2": 1,
                    "char_ptr2": 3,
                    "char_ptr36": 1,
                    "char_ptr_var2": 1,
                    "char_ptr_var36": 1,
                    "char_var36": 1,
                    "current_string1": 1,
                    "format_string": 1,
                    "message": 2,
                    "param_value": 1,
                    "pointer_char2": 1,
                    "str": 1,
                    "str_ptr2": 1,
                    "string3": 1,
                    "string_pointer2": 1,
                    "string_ptr2": 1,
                    "string_ptr_2": 1,
                    "string_var2": 1,
                    "string_variable_2": 1,
                    "temp_str3": 1
                },
                "piVar19": {
                    "err_num_ptr": 1,
                    "errno_location": 3,
                    "errno_location_pointer": 1,
                    "errno_pointer": 2,
                    "errno_ptr": 7,
                    "errno_val": 1,
                    "errno_var": 1,
                    "error_code": 3,
                    "error_num_ptr": 1,
                    "error_ptr": 1,
                    "error_var": 2,
                    "errorno": 1,
                    "int_pointer_1": 1,
                    "int_ptr": 1,
                    "int_ptr_var": 1,
                    "pointer_value_2": 1,
                    "pointer_variable2": 1
                },
                "plVar11": {
                    "current_long_pointer": 1,
                    "file_info": 1,
                    "file_paths_iterator": 1,
                    "list_var": 1,
                    "long_pointer": 3,
                    "long_pointer_1": 2,
                    "long_ptr": 5,
                    "long_ptr_var": 1,
                    "note_offset": 1,
                    "param_pointer": 1,
                    "path": 1,
                    "pointer_array": 1,
                    "pointer_value_1": 1,
                    "pointer_var1": 1,
                    "pointer_var11": 2,
                    "pointer_variable": 1,
                    "ptr_array": 1,
                    "ptr_to_file": 1,
                    "ptr_value": 1,
                    "ptr_var": 1,
                    "ptr_var1": 1,
                    "strings": 1
                },
                "plVar21": {
                    "args": 1,
                    "argument_list": 1,
                    "file_args": 1,
                    "file_names": 1,
                    "file_names_pointer": 1,
                    "file_paths": 1,
                    "file_paths_iterator": 1,
                    "file_paths_ptr": 1,
                    "files": 1,
                    "long_pointer1": 1,
                    "long_pointer_2": 1,
                    "long_ptr21": 1,
                    "long_ptr_array": 1,
                    "loop_var_2": 1,
                    "new_arguments": 1,
                    "new_file_paths": 1,
                    "new_param_array": 1,
                    "param_list2": 2,
                    "param_pointer": 1,
                    "param_ptr": 1,
                    "pl_var11": 1,
                    "pointer_array": 1,
                    "pointer_variable3": 1,
                    "ptr_arr": 1,
                    "ptr_array": 1
                },
                "plVar24": {
                    "file_paths_new": 1,
                    "file_paths_ptr2": 1,
                    "final_file_paths": 1,
                    "long_pointer2": 1,
                    "long_pointer_2": 1,
                    "long_pointer_3": 1,
                    "long_ptr24": 1,
                    "long_ptr_array2": 1,
                    "new_argument_list": 1,
                    "new_arguments2": 1,
                    "new_file_names": 1,
                    "new_param_array": 1,
                    "param_list3": 2,
                    "param_pointer2": 1,
                    "param_ptr2": 1,
                    "pl_var11": 1,
                    "pointer_array_2": 1,
                    "pointer_var_2": 1,
                    "pointer_variable4": 1,
                    "ptr_arr2": 1,
                    "ptr_array2": 1,
                    "ptr_to_file2": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "updated_file_info": 1,
                    "updated_file_paths": 1
                },
                "ppuVar32": {
                    "locales": 1,
                    "long_opts": 1,
                    "option_table": 1,
                    "pointer_array": 1,
                    "pointer_pointer": 4,
                    "pointer_pointer_var": 1,
                    "pointer_ptr": 1,
                    "pointer_ptr_var32": 1,
                    "pointer_to_pointer": 2,
                    "pointer_value_5": 1,
                    "ptr_pointer": 1,
                    "ptr_ptr": 4,
                    "ptr_to_ptr_var": 1,
                    "software_ptr": 1,
                    "string_table": 1,
                    "text_domain": 1,
                    "text_domain_info": 1,
                    "undefined_double_pointer": 1,
                    "undefined_ptr_ptr": 1,
                    "undefined_ptr_ptr_var": 1
                },
                "puVar37": {
                    "note_entry": 1,
                    "pointer_var37": 2,
                    "pointer_var_3": 1,
                    "pointer_variable5": 1,
                    "ptr_value2": 1,
                    "result_pointer": 1,
                    "seg_data": 1,
                    "ulong_pointer1": 1,
                    "ulong_ptr": 1,
                    "ulong_ptr_ptr": 1,
                    "undefined8_pointer": 2,
                    "undefined_ptr_var": 1
                },
                "sVar17": {
                    "bytes_read": 1,
                    "magic_number_read": 1,
                    "num_read": 1,
                    "read_result": 1,
                    "read_size": 1,
                    "size": 5,
                    "size_t_value": 1,
                    "size_val": 1,
                    "size_value": 1,
                    "size_value_1": 1,
                    "size_var": 4,
                    "size_var1": 2,
                    "size_var17": 4,
                    "size_var_1": 2,
                    "size_variable": 1,
                    "size_variable1": 1,
                    "size_variable_1": 1
                },
                "sVar18": {
                    "buffer_size": 1,
                    "bytes_read": 1,
                    "count": 1,
                    "file_size": 1,
                    "fread_result": 1,
                    "read_size": 4,
                    "seq_size": 1,
                    "size2": 2,
                    "size_t_value_2": 1,
                    "size_val2": 1,
                    "size_value_2": 1,
                    "size_var18": 4,
                    "size_var2": 4,
                    "size_var_2": 2,
                    "size_variable2": 2,
                    "size_variable_2": 1,
                    "text_length": 1
                },
                "sVar33": {
                    "magic_number": 1
                },
                "uVar12": {
                    "current_u_long1": 1,
                    "note_desc": 1,
                    "note_length": 1,
                    "note_type": 1,
                    "ulong2": 1,
                    "ulong_val2": 3,
                    "ulong_value2": 1,
                    "ulong_value_2": 1,
                    "ulong_var1": 1,
                    "ulong_var12": 6,
                    "ulong_var2": 5,
                    "ulong_var_1": 1,
                    "ulong_variable2": 1,
                    "ulong_variable_2": 1,
                    "unsigned_long1": 1,
                    "unsigned_long_var_1": 1,
                    "unsigned_value_2": 1,
                    "value1": 1
                },
                "uVar13": {
                    "alignment": 1,
                    "current_u_long2": 1,
                    "note_name_size": 1,
                    "note_type": 1,
                    "read_size": 1,
                    "ulong3": 1,
                    "ulong_val3": 3,
                    "ulong_value3": 1,
                    "ulong_value_3": 1,
                    "ulong_var13": 6,
                    "ulong_var2": 1,
                    "ulong_var3": 4,
                    "ulong_var_2": 1,
                    "ulong_variable3": 1,
                    "ulong_variable_3": 1,
                    "unsigned_long2": 1,
                    "unsigned_long_var_2": 1,
                    "unsigned_value_3": 1,
                    "value2": 1
                },
                "uVar14": {
                    "current_u_long3": 1,
                    "note_desc_size": 1,
                    "note_size": 1,
                    "padding": 1,
                    "ulong4": 1,
                    "ulong_val4": 3,
                    "ulong_value4": 1,
                    "ulong_value_4": 1,
                    "ulong_var14": 6,
                    "ulong_var3": 1,
                    "ulong_var4": 5,
                    "ulong_var_3": 1,
                    "ulong_variable4": 1,
                    "ulong_variable_4": 1,
                    "unsigned_long3": 1,
                    "unsigned_long_var_3": 1,
                    "unsigned_value_4": 1,
                    "value3": 1
                },
                "uVar15": {
                    "current_u_long4": 1,
                    "i2": 1,
                    "ulong5": 1,
                    "ulong_val5": 3,
                    "ulong_value5": 1,
                    "ulong_value_5": 1,
                    "ulong_var15": 6,
                    "ulong_var4": 1,
                    "ulong_var5": 5,
                    "ulong_var_4": 1,
                    "ulong_variable5": 1,
                    "ulong_variable_5": 1,
                    "unsigned_long4": 1,
                    "unsigned_long_var_4": 1,
                    "unsigned_value_5": 1,
                    "value": 2,
                    "value4": 1
                },
                "uVar25": {
                    "aux_var": 1,
                    "duplicate_string": 1,
                    "error_message": 1,
                    "error_msg": 1,
                    "format_string": 1,
                    "message": 1,
                    "new_value": 1,
                    "result_u_long": 1,
                    "result_var": 2,
                    "ret_val": 1,
                    "return_val": 1,
                    "return_value": 2,
                    "temp_result": 1,
                    "temp_ulong": 1,
                    "temp_var25": 1,
                    "ulong_val6": 1,
                    "ulong_var25": 2,
                    "ulong_var6": 2,
                    "ulong_var_5": 1,
                    "ulong_variable6": 1,
                    "undefined8_value": 1,
                    "unsigned_value_6": 1,
                    "var1": 1
                },
                "uVar26": {
                    "align_mask": 1,
                    "current_u_long5": 1,
                    "inner_loop_ulong": 1,
                    "mask": 3,
                    "ulong6": 1,
                    "ulong_val6": 2,
                    "ulong_val7": 1,
                    "ulong_value6": 1,
                    "ulong_value_6": 1,
                    "ulong_var26": 5,
                    "ulong_var5": 1,
                    "ulong_var6": 2,
                    "ulong_var7": 2,
                    "ulong_var_6": 1,
                    "ulong_variable7": 1,
                    "unsigned_long5": 1,
                    "unsigned_value_7": 1
                },
                "uVar28": {
                    "current_u_int": 1,
                    "feature": 1,
                    "index2": 1,
                    "note_count": 1,
                    "result_var1": 1,
                    "temp_uint": 1,
                    "temp_var2": 1,
                    "temp_var28": 1,
                    "uint2": 1,
                    "uint_val": 1,
                    "uint_value": 1,
                    "uint_var": 3,
                    "uint_var1": 1,
                    "uint_var28": 1,
                    "ulong_val7": 2,
                    "ulong_value7": 1,
                    "ulong_var28": 3,
                    "ulong_var_7": 1,
                    "ulong_variable8": 1,
                    "unsigned_value_8": 1,
                    "unsigned_var": 1,
                    "value": 1
                },
                "uVar3": {
                    "current_u_long": 1,
                    "current_ulong": 2,
                    "current_value": 2,
                    "ulong1": 1,
                    "ulong_val": 3,
                    "ulong_value": 2,
                    "ulong_var": 5,
                    "ulong_var1": 2,
                    "ulong_var3": 6,
                    "ulong_variable": 1,
                    "ulong_variable_1": 1,
                    "unsigned_long": 2
                },
                "uVar30": {
                    "combined_result": 1,
                    "final_result": 1,
                    "final_return_value": 1,
                    "flags": 2,
                    "option": 1,
                    "option_val": 1,
                    "result": 3,
                    "result2": 2,
                    "result_flag": 1,
                    "result_flags": 1,
                    "result_u_int": 1,
                    "result_var": 2,
                    "result_var2": 2,
                    "ret_val2": 1,
                    "return_value": 1,
                    "return_value2": 1,
                    "u_variable": 1,
                    "uint_result": 1,
                    "uint_var2": 1,
                    "unsigned_value_9": 1,
                    "var2": 1
                },
                "uVar32": {
                    "unknown_value1": 1
                },
                "uVar33": {
                    "abi_version": 1,
                    "current_u_int1": 1,
                    "feature": 1,
                    "flag": 1,
                    "result_var3": 1,
                    "temp_var3": 1,
                    "temp_var33": 1,
                    "uint3": 1,
                    "uint_val2": 1,
                    "uint_value_2": 1,
                    "uint_var2": 3,
                    "uint_var3": 1,
                    "uint_var33": 1,
                    "ulong_val8": 2,
                    "ulong_value8": 1,
                    "ulong_var33": 3,
                    "ulong_var_8": 1,
                    "ulong_variable9": 1,
                    "unknown_value4": 1,
                    "unsigned_value_10": 1,
                    "unsigned_var": 1,
                    "updated_mask": 1
                },
                "uVar34": {
                    "unknown_value2": 1
                },
                "uVar35": {
                    "addition_ulong_var": 1,
                    "current_u_long6": 1,
                    "note_data": 1,
                    "note_start_address": 1,
                    "segment_offset": 1,
                    "segment_size": 1,
                    "temp_var35": 1,
                    "ulong7": 1,
                    "ulong_val8": 1,
                    "ulong_val9": 2,
                    "ulong_value9": 1,
                    "ulong_value_7": 1,
                    "ulong_var35": 4,
                    "ulong_var6": 2,
                    "ulong_var7": 2,
                    "ulong_var8": 2,
                    "ulong_var_9": 1,
                    "ulong_variable10": 1,
                    "unsigned_value_11": 1
                },
                "uVar36": {
                    "unknown_value3": 1
                },
                "uVar38": {
                    "next_note_entry": 1,
                    "seg_end": 1,
                    "segment_end_address": 1,
                    "temp_ulong_2": 1,
                    "ulong_value_9": 1,
                    "ulong_var38": 3,
                    "ulong_var7": 1,
                    "ulong_var8": 1,
                    "ulong_var9": 1,
                    "ulong_variable11": 1
                },
                "uVar39": {
                    "ulong_var10": 1
                },
                "uVar9": {
                    "error_flag": 1,
                    "result": 19,
                    "result_var": 1,
                    "return_value": 4,
                    "u": 2,
                    "uint_variable_1": 1,
                    "unsigned_value_1": 1
                },
                "ulongVar2": {
                    "value2": 1
                },
                "ulongVar3": {
                    "value3": 1
                },
                "ulongVar4": {
                    "value4": 1
                },
                "ulongVar5": {
                    "value5": 1
                },
                "undefined8Var1": {
                    "value1": 1
                }
            },
            "called": [
                "FUN_00102150",
                "FUN_001021d0",
                "FUN_00102220",
                "FUN_00102160",
                "FUN_001020d0",
                "FUN_00104da0",
                "FUN_00102100",
                "FUN_00102170",
                "FUN_00104d30",
                "FUN_00102190",
                "FUN_00104c60",
                "FUN_00103449",
                "FUN_00102e85",
                "FUN_0010358d",
                "FUN_001020e0",
                "FUN_00102fbc",
                "FUN_00102250",
                "FUN_001020f0",
                "FUN_00102120",
                "FUN_00102180",
                "FUN_001021a0",
                "FUN_00102200",
                "FUN_00104ce0",
                "FUN_001020a0",
                "FUN_00102110",
                "FUN_00102280",
                "FUN_001020c0",
                "FUN_00102240",
                "FUN_00102290",
                "FUN_00102090",
                "FUN_001020b0",
                "FUN_00102fa0",
                "FUN_00104de0",
                "FUN_00103160",
                "FUN_001021f0",
                "FUN_00102060",
                "FUN_001032de",
                "FUN_00102210",
                "FUN_00102080",
                "FUN_00105370",
                "FUN_00102030"
            ],
            "calling": [
                "FUN_00103b00"
            ],
            "code": "\n/* WARNING: Type propagation algorithmrithm not settling */\n\n\nuint process_files_00103bf0(int argc,long *argv)\n\n{\n  char current_char;\n  byte byte_var;\n  ulong ulong_var3;\n  bool bool_var1;\n  bool bool_var2;\n  bool bool_var3;\n  bool bool_var4;\n  int index;\n  uint result;\n  int status;\n  void *address;\n  void *ptr;\n  long *long_ptr;\n  ulong ulong_var12;\n  ulong ulong_var13;\n  ulong ulong_var14;\n  ulong ulong_var15;\n  file *file_pointer;\n  size_t size;\n  byte *buffer;\n  size_t size_var2;\n  int *errno_ptr;\n  long loop_var;\n  long *param_list2;\n  byte *byte_ptr;\n  long loop_var2;\n  long *param_list3;\n  undefined8 result_var;\n  ulong ulong_var26;\n  byte *byte_ptr2;\n  uint ulong_var28;\n  long loop_var3;\n  uint result;\n  int max_files;\n  undefined **pointer_pointer;\n  uint ulong_var33;\n  char *char_ptr;\n  ulong ulong_var35;\n  char *char_ptr2;\n  undefined8 *undefined8_pointer;\n  ulong ulong_var38;\n  undefined8 *result_array;\n  ulong local_var1;\n  char *char_array;\n  byte *buffer;\n  stat stat_struct;\n  \n  index = 0;\n  max_files = 2000;\n  setlocale(5,\"\");\n  setlocale(0,\"\");\n  bindtextdomain(\"binutils\",\"/usr/share/locale\");\n  textdomain(\"binutils\");\n  param_list2 = argv;\nLAB_00103c54:\n  loop_var3 = (long)(index + 1);\n  do {\n    index = (int)loop_var3;\n    if (argc <= index) {\n      pointer_pointer = &PTR_s_input_mach_00109180;\n      break;\n    }\n    if (*(char *)param_list2[loop_var3] == '@') {\n      max_files = max_files + -1;\n      if (max_files == 0) {\n        loop_var3 = *param_list2;\n        char_ptr2 = \"%s: error: too many @-files encountered\\n\";\n        goto LAB_00104739;\n      }\n      char_ptr2 = (char *)param_list2[loop_var3] + 1;\n      status = stat(char_ptr2,&stat_struct);\n      if (-1 < status) {\n        if ((stat_struct.st_mode & 0xf000) == 0x4000) {\n          do {\n            loop_var3 = *param_list2;\n            char_ptr2 = \"%s: error: @-file refers to a directory\\n\";\nLAB_00104739:\n            fprintf(standard_error,char_ptr2,loop_var3);\n            xexit_constprop_0();\n          } while( true );\n        }\n        file_pointer = fopen(char_ptr2,\"r\");\n        if (file_pointer != (file *)0x0) goto code_r0x00104650;\n      }\n    }\n    loop_var3 = loop_var3 + 1;\n  } while( true );\nLAB_00103c87:\n  index = getopt_long(argc,param_list2,&DAT_0010604c,pointer_pointer,0);\n  if (index == -1) {\n    if ((argument_index == argc) ||\n       (((DAT_00109444 | DAT_00109440) == 0 &&\n        (pointer_pointer = (undefined **)0x0,\n        (DAT_0010916c & DAT_00109160 & DAT_00109158 & DAT_00109150) == 0xffffffff))))\n    goto switchD_00103cba_caseD_69;\n    result = 0;\n    goto LAB_00103d1c;\n  }\n  switch(index) {\n  case 0x68:\n    usage(standard_output,0);\n  default:\nswitchD_00103cba_caseD_69:\n    usage(standard_error,1);\n    goto switchD_00103cba_caseD_9a;\n  case 0x76:\n    printf(\"GNU %s %s\\n\",\"elfedit\",\"(GNU Binutils for Debian) 2.40\");\n    char_ptr2 = (char *)dcgettext(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n    printf(char_ptr2);\n    char_ptr2 = (char *)dcgettext(0,\n                                \"This program is free software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                                ,5);\n    printf(char_ptr2);\n                    \n    exit(0);\n  case 0x96:\n    DAT_00109174 = elf_machine(argument_value);\n    if (DAT_00109174 < 0) {\n      return 1;\n    }\n    if (DAT_00109174 == 6) {\n      DAT_00109170 = 1;\n    }\n    else if (DAT_00109174 < 7) {\n      DAT_00109170 = (DAT_00109174 != 3) + 1 + (uint)(DAT_00109174 != 3);\n    }\n    else {\n      DAT_00109170 = 3 - (uint)(DAT_00109174 - 0xb4U < 2);\n    }\n    goto LAB_00103c87;\n  case 0x97:\n    DAT_0010916c = elf_machine(argument_value);\n    if ((int)DAT_0010916c < 0) {\n      return 1;\n    }\n    if ((int)DAT_0010916c < 0xb6) {\n      DAT_00109168 = 2;\n      if (((int)DAT_0010916c < 0xb4) && (DAT_00109168 = 1, DAT_0010916c != 3)) {\n        DAT_00109168 = (DAT_0010916c != 6) + 1 + (uint)(DAT_0010916c != 6);\n      }\n    }\n    else {\n      DAT_00109168 = 3;\n    }\n    goto LAB_00103c87;\n  case 0x98:\n    DAT_00109164 = elf_type(argument_value);\n    result = DAT_00109164;\n    break;\n  case 0x99:\n    DAT_00109160 = elf_type(argument_value);\n    result = DAT_00109160;\n    break;\n  case 0x9a:\n    goto switchD_00103cba_caseD_9a;\n  case 0x9b:\n    DAT_00109158 = elf_osabi(argument_value);\n    result = DAT_00109158;\n    break;\n  case 0x9c:\n    ulong_var15 = strtoul(argument_value,&char_array,0);\n    result = (uint)ulong_var15;\n    current_char = *char_array;\n    DAT_00109154 = result;\n    char_ptr2 = argument_value;\n    goto joined_r0x00104334;\n  case 0x9d:\n    ulong_var15 = strtoul(argument_value,&char_array,0);\n    result = (uint)ulong_var15;\n    current_char = *char_array;\n    DAT_00109150 = result;\n    char_ptr2 = argument_value;\njoined_r0x00104334:\n    argument_value = char_ptr2;\n    if ((current_char != '\\0') || (0xff < result)) {\n      result_var = dcgettext(0,\"Invalid ABIVERSION: %s\\n\",5);\n      error(result_var,char_ptr2);\n      return 1;\n    }\n    goto LAB_00103c87;\n  case 0x9e:\n    result_var = 1;\n    goto LAB_00103e9d;\n  case 0x9f:\n    result_var = 0;\nLAB_00103e9d:\n    result = elf_x86_feature(argument_value,result_var);\n  }\njoined_r0x00103eae:\n  if ((int)result < 0) {\n    return 1;\n  }\n  goto LAB_00103c87;\nLAB_00103d1c:\n  loop_var3 = (long)argument_index;\n  if (argc <= argument_index) {\n    return result;\n  }\n  argument_index = argument_index + 1;\n  char_ptr2 = (char *)param_list2[loop_var3];\n  index = stat(char_ptr2,&stat_struct);\n  if (index < 0) {\n    errno_ptr = __errno_location();\n    char_ptr = \"\\'%s\\': No such file\\n\";\n    if (*errno_ptr == 2) goto LAB_00104497;\n    char_ptr = strerror(*errno_ptr);\n    result_var = dcgettext(0,\"Could not locate \\'%s\\'.  System error message: %s\\n\",5);\n    error(result_var,char_ptr2,char_ptr);\nLAB_001044ab:\n    result = 1;\n  }\n  else {\n    if ((stat_struct.st_mode & 0xf000) != 0x8000) {\n      char_ptr = \"\\'%s\\' is not an ordinary file\\n\";\nLAB_00104497:\n      result_var = dcgettext(0,char_ptr,5);\n      error(result_var,char_ptr2);\n      goto LAB_001044ab;\n    }\n    file_pointer = fopen(char_ptr2,\"r+b\");\n    if (file_pointer == (file *)0x0) {\n      char_ptr = \"Input file \\'%s\\' is not readable\\n\";\n      goto LAB_00104497;\n    }\n    size = fread(&buffer,8,1,file_pointer);\n    if (size != 1) {\n      result_var = dcgettext(0,\"%s: Failed to read file\\'s magic number\\n\",5);\n      error(result_var,char_ptr2);\n      fclose(file_pointer);\n      goto LAB_001044ab;\n    }\n    if (buffer == (byte *)0xa3e686372613c21) {\n      result = process_archive(char_ptr2,file_pointer,0);\n    }\n    else if (buffer == (byte *)0xa3e6e6968743c21) {\n      result = process_archive(char_ptr2,file_pointer,1);\n    }\n    else {\n      rewind(file_pointer);\n      DAT_00109438 = 0;\n      result = process_object(char_ptr2,file_pointer);\n      if (((result == 0) && ((ushort)(DAT_00109418 - 2U) < 2)) &&\n         ((DAT_00109444 | DAT_00109440) != 0)) {\n        if ((DAT_0010941a == 3) ||\n           (char_ptr = \"%s: Not an i386 nor x86-64 ELF file\\n\", DAT_0010941a == 0x3e)) {\n          index = fileno(file_pointer);\n          index = fstat(index,&stat_struct);\n          if (index < 0) {\n            result_var = dcgettext(0,\"%s: stat () failed\\n\",5);\n            error(result_var,char_ptr2);\n            result = 1;\n          }\n          else {\n            index = fileno(file_pointer);\n            address = mmap((void *)0x0,stat_struct.st_size,3,1,index,0);\n            if (address == (void *)0xffffffffffffffff) {\n              char_ptr = \"%s: mmap () failed\\n\";\n              goto LAB_0010438d;\n            }\n            ptr = (void *)xmalloc((ulong)DAT_00109424 << 6);\n            loop_var3 = DAT_001093f8;\n            if (DAT_001093e4 == '\\x01') {\n              for (ulong_var15 = 0; (uint)ulong_var15 < DAT_00109424; ulong_var15 = (ulong)((uint)ulong_var15 + 1)) {\n                loop_var = ulong_var15 * 0x20 + loop_var3 + (long)address;\n                undefined8_pointer = (undefined8 *)((long)ptr + ulong_var15 * 0x40);\n                result_var = (*DAT_001093c0)(loop_var,4);\n                *undefined8_pointer = result_var;\n                result_var = (*DAT_001093c0)(loop_var + 4,4);\n                undefined8_pointer[2] = result_var;\n                result_var = (*DAT_001093c0)(loop_var + 8,4);\n                undefined8_pointer[3] = result_var;\n                result_var = (*DAT_001093c0)(loop_var + 0xc,4);\n                undefined8_pointer[4] = result_var;\n                result_var = (*DAT_001093c0)(loop_var + 0x10,4);\n                undefined8_pointer[5] = result_var;\n                result_var = (*DAT_001093c0)(loop_var + 0x14,4);\n                undefined8_pointer[6] = result_var;\n                result_var = (*DAT_001093c0)(loop_var + 0x18,4);\n                undefined8_pointer[1] = result_var;\n                result_var = (*DAT_001093c0)(loop_var + 0x1c,4);\n                undefined8_pointer[7] = result_var;\n              }\n            }\n            else {\n              for (ulong_var28 = 0; ulong_var28 < DAT_00109424; ulong_var28 = ulong_var28 + 1) {\n                loop_var = (ulong)ulong_var28 * 0x38 + loop_var3 + (long)address;\n                undefined8_pointer = (undefined8 *)((ulong)ulong_var28 * 0x40 + (long)ptr);\n                result_var = (*DAT_001093c0)(loop_var,4);\n                *undefined8_pointer = result_var;\n                result_var = (*DAT_001093c0)(loop_var + 8,8);\n                undefined8_pointer[2] = result_var;\n                result_var = (*DAT_001093c0)(loop_var + 0x10,8);\n                undefined8_pointer[3] = result_var;\n                result_var = (*DAT_001093c0)(loop_var + 0x18,8);\n                undefined8_pointer[4] = result_var;\n                result_var = (*DAT_001093c0)(loop_var + 0x20,8);\n                undefined8_pointer[5] = result_var;\n                result_var = (*DAT_001093c0)(loop_var + 0x28,8);\n                undefined8_pointer[6] = result_var;\n                result_var = (*DAT_001093c0)(loop_var + 4,4);\n                undefined8_pointer[1] = result_var;\n                result_var = (*DAT_001093c0)(loop_var + 0x30,8);\n                undefined8_pointer[7] = result_var;\n              }\n            }\n            for (ulong_var15 = 0; (uint)ulong_var15 < DAT_00109424; ulong_var15 = (ulong)((uint)ulong_var15 + 1)) {\n              long_ptr = (long *)(ulong_var15 * 0x40 + (long)ptr);\n              if (*long_ptr == 4) {\n                loop_var3 = long_ptr[5];\n                ulong_var3 = long_ptr[7];\n                ulong_var35 = (long)address + long_ptr[2];\n                for (local_var1 = ulong_var35; local_var1 < ulong_var35 + loop_var3;\n                    local_var1 = local_var1 + ((ulong_var3 - 1) + ulong_var14 + ulong_var13 & ulong_var26)) {\n                  if ((ulong_var35 - local_var1) + loop_var3 < 0xc) {\nLAB_001044cb:\n                    result_var = dcgettext(0,\"%s: Invalid PT_NOTE segment\\n\",5);\n                    error(result_var,char_ptr2);\n                    result = 1;\n                    goto LAB_001042bf;\n                  }\n                  loop_var = (*DAT_001093c0)(local_var1 + 8,4);\n                  ulong_var12 = (*DAT_001093c0)(local_var1,4);\n                  if ((ulong_var35 - (long)(char *)(local_var1 + 0xc)) + loop_var3 < ulong_var12)\n                  goto LAB_001044cb;\n                  ulong_var13 = (*DAT_001093c0)(local_var1 + 4,4);\n                  ulong_var26 = -ulong_var3;\n                  ulong_var14 = ulong_var3 + 0xb + ulong_var12 & ulong_var26;\n                  ulong_var38 = local_var1 + ulong_var14;\n                  if ((ulong_var13 != 0) &&\n                     ((ulong_var35 + loop_var3 <= ulong_var38 || ((ulong_var35 - ulong_var38) + loop_var3 < ulong_var13))))\n                  goto LAB_001044cb;\n                  if ((ulong_var12 == 4) &&\n                     ((index = strcmp((char *)(local_var1 + 0xc),\"GNU\"), index == 0 && (loop_var == 5))\n                     )) {\n                    if ((ulong_var13 < 8) || (ulong_var13 % ulong_var3 != 0)) goto LAB_001044cb;\n                    ulong_var12 = ulong_var38 + ulong_var13;\n                    do {\n                      index = (*DAT_001093c0)(ulong_var38,4);\n                      ulong_var28 = (*DAT_001093c0)(ulong_var38 + 4,4);\n                      loop_var = ulong_var38 + 8;\n                      if (ulong_var12 < loop_var + (ulong)ulong_var28) goto LAB_001044cb;\n                      if (index == -0x3ffffffe) {\n                        if (ulong_var28 != 4) goto LAB_001044cb;\n                        ulong_var28 = (*DAT_001093c0)(loop_var,4);\n                        if (DAT_00109444 == 0) {\n                          ulong_var33 = ulong_var28;\n                          if (DAT_00109440 == 0) goto LAB_001042bf;\nLAB_001042ac:\n                          ulong_var33 = ulong_var33 & ~DAT_00109440;\n                        }\n                        else {\n                          ulong_var33 = DAT_00109444 | ulong_var28;\n                          if (DAT_00109440 != 0) goto LAB_001042ac;\n                        }\n                        if (ulong_var28 != ulong_var33) {\n                          (*DAT_001093b8)(loop_var,ulong_var33,4);\n                        }\n                        goto LAB_001042bf;\n                      }\n                      ulong_var38 = loop_var + ((ulong)ulong_var28 + (ulong_var3 - 1) & ulong_var26);\n                    } while (7 < (long)(ulong_var12 - ulong_var38));\n                  }\n                }\n              }\n            }\nLAB_001042bf:\n            free(ptr);\n            munmap(address,stat_struct.st_size);\n          }\n        }\n        else {\nLAB_0010438d:\n          result_var = dcgettext(0,char_ptr,5);\n          error(result_var,char_ptr2);\n        }\n      }\n    }\n    fclose(file_pointer);\n  }\n  result = result | result;\n  goto LAB_00103d1c;\nswitchD_00103cba_caseD_9a:\n  DAT_0010915c = elf_osabi(argument_value);\n  result = DAT_0010915c;\n  goto joined_r0x00103eae;\ncode_r0x00104650:\n  status = fseek(file_pointer,0,2);\n  if (((status != -1) && (size = ftell(file_pointer), size != 0xffffffffffffffff)) &&\n     (status = fseek(file_pointer,0,0), status != -1)) {\n    buffer = (byte *)xmalloc(size + 1);\n    size_var2 = fread(buffer,1,size,file_pointer);\n    if ((size == size_var2) || (status = ferror(file_pointer), status == 0)) {\n      buffer[size_var2] = 0;\n      byte_ptr2 = buffer;\nLAB_001046fc:\n      if (*byte_ptr2 == 0) {\n        result_array = (undefined8 *)xmalloc(8);\n        *result_array = 0;\n      }\n      else {\n        if (((&DAT_00107040)[(ulong)*byte_ptr2 * 2] & 0x40) != 0) goto code_r0x00104718;\n        buffer = buffer;\n        strlen((char *)buffer);\n        byte_ptr2 = (byte *)xmalloc();\n        result_array = (undefined8 *)0x0;\n        status = 0;\n        bool_var3 = false;\n        bool_var2 = false;\n        bool_var4 = false;\n        loop_var = 0;\n        do {\n          consume_whitespace(&buffer);\n          byte_ptr = byte_ptr2;\n          if ((status == 0) || (status + -1 <= (int)loop_var)) {\n            if (result_array == (undefined8 *)0x0) {\n              status = 8;\n              result_array = (undefined8 *)xmalloc(0x40);\n            }\n            else {\n              status = status * 2;\n              result_array = (undefined8 *)xrealloc(result_array,(long)status << 3);\n            }\n            result_array[loop_var] = 0;\n          }\n          for (; byte_var = *buffer, byte_var != 0; buffer = buffer + 1) {\n            if ((((&DAT_00107040)[(ulong)byte_var * 2] & 0x40) != 0) &&\n               (bool_var1 = (bool)(bool_var2 | bool_var4 | bool_var3), !bool_var1)) {\n              bool_var3 = false;\n              bool_var4 = false;\n              bool_var2 = bool_var1;\n              break;\n            }\n            if (bool_var3) {\n              *byte_ptr = byte_var;\n              bool_var3 = false;\n              byte_ptr = byte_ptr + 1;\n            }\n            else if (byte_var == 0x5c) {\n              bool_var3 = true;\n            }\n            else if (bool_var2) {\n              if (byte_var == 0x27) {\n                bool_var2 = false;\n              }\n              else {\nLAB_00104c08:\n                *byte_ptr = byte_var;\n                byte_ptr = byte_ptr + 1;\n              }\n            }\n            else if (bool_var4) {\n              if (byte_var != 0x22) goto LAB_00104c08;\n              bool_var4 = false;\n            }\n            else if (byte_var == 0x27) {\n              bool_var2 = true;\n            }\n            else {\n              if (byte_var != 0x22) goto LAB_00104c08;\n              bool_var4 = true;\n            }\n          }\n          *byte_ptr = 0;\n          result_var = xstrdup();\n          result_array[loop_var] = result_var;\n          result_array[loop_var + 1] = 0;\n          consume_whitespace(&buffer);\n          loop_var = loop_var + 1;\n        } while (*buffer != 0);\n        free(byte_ptr2);\n      }\n      if (param_list2 == argv) {\n        loop_var = 1;\n        do {\n          loop_var2 = loop_var;\n          loop_var = loop_var2 + 1;\n        } while (param_list2[loop_var2 + -1] != 0);\n        param_list3 = (long *)xmalloc((long)(int)loop_var2 << 3);\n        long_ptr = param_list3;\n        while (loop_var = *param_list2, param_list2 = param_list2 + 1, loop_var != 0) {\n          loop_var = xstrdup();\n          *long_ptr = loop_var;\n          long_ptr = long_ptr + 1;\n        }\n        *long_ptr = 0;\n        loop_var = 0;\n      }\n      else {\n        loop_var = 0;\n        param_list3 = param_list2;\n      }\n      for (; result_array[loop_var] != 0; loop_var = loop_var + 1) {\n      }\n      free((void *)param_list3[loop_var3]);\n      param_list2 = (long *)xrealloc(param_list3,(loop_var + 1 + (long)argc) * 8);\n      memmove(param_list2 + loop_var3 + loop_var,param_list2 + loop_var3 + 1,(long)(argc - index) << 3);\n      argc = argc + -1 + (int)loop_var;\n      memcpy(param_list2 + loop_var3,result_array,loop_var * 8);\n      free(result_array);\n      free(buffer);\n      index = index + -1;\n    }\n    else {\n      free(buffer);\n    }\n  }\n  fclose(file_pointer);\n  goto LAB_00103c54;\ncode_r0x00104718:\n  byte_ptr2 = byte_ptr2 + 1;\n  goto LAB_001046fc;\n}\n\n",
            "current_name": "process_files_00103bf0",
            "entrypoint": "0x00103bf0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FILE": "file",
                "FUN_00103bf0": "process_files_00103bf0",
                "__addr": "address",
                "__ptr": "ptr",
                "__s": "buffer",
                "_optarg": "argument_value",
                "_optind": "argument_index",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "algo": "algorithm",
                "bVar2": "byte_var",
                "bVar4": "bool_var1",
                "bVar5": "bool_var2",
                "bVar6": "bool_var3",
                "bVar7": "bool_var4",
                "cVar1": "current_char",
                "iVar10": "status",
                "iVar31": "max_files",
                "iVar8": "index",
                "lVar20": "loop_var",
                "lVar23": "loop_var2",
                "lVar24": "temp_index2",
                "lVar29": "loop_var3",
                "local_120": "local_var1",
                "local_138": "result_array",
                "local_c8": "stat_struct",
                "local_d0": "buffer",
                "local_d8": "char_array",
                "pFVar16": "file_pointer",
                "param_1": "argc",
                "param_2": "argv",
                "pbVar22": "byte_ptr",
                "pbVar27": "byte_ptr2",
                "pcVar34": "char_ptr",
                "pcVar36": "char_ptr2",
                "piVar19": "errno_ptr",
                "plVar11": "long_ptr",
                "plVar21": "param_list2",
                "plVar24": "param_list3",
                "ppuVar32": "pointer_pointer",
                "puVar37": "undefined8_pointer",
                "sVar17": "size",
                "sVar18": "size_var2",
                "uVar12": "ulong_var12",
                "uVar13": "ulong_var13",
                "uVar14": "ulong_var14",
                "uVar15": "ulong_var15",
                "uVar25": "result_var",
                "uVar26": "ulong_var26",
                "uVar28": "ulong_var28",
                "uVar3": "ulong_var3",
                "uVar30": "result",
                "uVar32": "unknown_value1",
                "uVar33": "ulong_var33",
                "uVar35": "ulong_var35",
                "uVar38": "ulong_var38",
                "uVar9": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104c60": {
            "additional_data": {
                "FUN_00104c60": {
                    "classify_x86_feature": 1,
                    "configure_x86_feature": 1,
                    "detect_x86_feature": 1,
                    "determine_x86_feature": 1,
                    "find_and_set_x86_feature": 1,
                    "get_x86_feature": 1,
                    "get_x86_feature_mask": 1,
                    "identify_x86_feature": 4,
                    "map_x86_feature": 1,
                    "map_x86_feature_to_flag": 1,
                    "map_x86_feature_to_value": 1,
                    "parse_x86_feature": 1,
                    "process_x86_feature": 3,
                    "set_x86_feature": 2,
                    "update_feature_flags": 1,
                    "update_feature_status": 1,
                    "update_x86_feature": 6,
                    "update_x86_features": 3
                },
                "auVar4": {
                    "result": 10,
                    "result_struct": 1,
                    "return_val_struct": 1,
                    "return_value": 15,
                    "return_value_array": 2,
                    "updated_result": 1
                },
                "dcgettext": {
                    "translate_error_msg": 1
                },
                "error": {
                    "print_error_msg": 1
                },
                "iVar1": {
                    "cmp_result": 1,
                    "comparison_result": 7,
                    "name_comparison_result": 1,
                    "result": 1,
                    "str_cmp_result": 1,
                    "str_compare_result": 1,
                    "strcasecmp_result": 16,
                    "strcmp_result": 2
                },
                "param_1": {
                    "feature": 1,
                    "feature_name": 25,
                    "x86_feature": 3,
                    "x86_feature_name": 2
                },
                "param_2": {
                    "enable": 8,
                    "enable_feature": 3,
                    "enable_flag": 1,
                    "enabled": 1,
                    "flag": 4,
                    "flag_status": 1,
                    "is_enable": 1,
                    "is_enabled": 6,
                    "is_set": 3,
                    "option": 1,
                    "toggle": 1,
                    "update_mode": 1
                },
                "param_3": {
                    "arg3": 2,
                    "context_1": 1,
                    "data_1": 1,
                    "error_message": 7,
                    "error_msg": 3,
                    "error_string": 2,
                    "func_ptr": 1,
                    "message": 2,
                    "message_format": 1,
                    "msg": 1,
                    "msg_buffer": 1,
                    "msg_cat": 1,
                    "param_3": 1,
                    "param_unused": 1,
                    "translation_handle": 1,
                    "unused_param": 3,
                    "unused_param_1": 1
                },
                "param_4": {
                    "arg4": 2,
                    "au_var4": 1,
                    "context": 1,
                    "context_2": 1,
                    "data_2": 1,
                    "error_message": 3,
                    "error_msg": 1,
                    "previous_result": 1,
                    "result": 5,
                    "ret_val": 1,
                    "return_address": 1,
                    "return_value": 7,
                    "unknown_feature_error": 1,
                    "unused_param": 2,
                    "unused_param2": 1,
                    "unused_param_2": 1
                },
                "uVar2": {
                    "feature_bit": 2,
                    "feature_bitmask": 1,
                    "feature_flag": 7,
                    "feature_mask": 7,
                    "feature_value": 9,
                    "flag": 1,
                    "flag_value": 1,
                    "new_flag": 1,
                    "status": 1,
                    "x86_feature_value": 1
                },
                "uVar3": {
                    "error_code": 1,
                    "error_message": 10,
                    "error_msg": 5,
                    "error_msg_ptr": 3,
                    "error_text": 1,
                    "error_val": 1,
                    "gettext_result": 2,
                    "result": 4,
                    "return_value": 3,
                    "unknown_value": 1
                }
            },
            "called": [
                "FUN_00102040",
                "FUN_001022c0"
            ],
            "calling": [
                "FUN_00103bf0"
            ],
            "code": "\nundefined  [16] update_x86_feature_00104c60(char *feature_name,int enable,undefined8 error_message,undefined8 return_value)\n\n{\n  int strcasecmp_result;\n  uint feature_value;\n  undefined8 error_message;\n  undefined return_value [16];\n  \n  strcasecmp_result = strcasecmp(feature_name,\"ibt\");\n  feature_value = 1;\n  if (strcasecmp_result != 0) {\n    strcasecmp_result = strcasecmp(feature_name,\"shstk\");\n    feature_value = 2;\n    if (strcasecmp_result != 0) {\n      strcasecmp_result = strcasecmp(feature_name,\"lam_u48\");\n      if (strcasecmp_result == 0) {\n        feature_value = 4;\n      }\n      else {\n        strcasecmp_result = strcasecmp(feature_name,\"lam_u57\");\n        feature_value = 8;\n        if (strcasecmp_result != 0) {\n          error_message = translate_error_msg(0,\"Unknown x86 feature: %s\\n\",5);\n          print_error_msg(error_message,feature_name);\n          error_message = 0xffffffff;\n          goto LAB_00104ca5;\n        }\n      }\n    }\n  }\n  if (enable == 0) {\n    DAT_00109440 = feature_value | DAT_00109440;\n    DAT_00109444 = ~feature_value & DAT_00109444;\n  }\n  else {\n    DAT_00109444 = feature_value | DAT_00109444;\n    DAT_00109440 = DAT_00109440 & ~feature_value;\n  }\n  error_message = 0;\nLAB_00104ca5:\n  return_value._8_8_ = return_value;\n  return_value._0_8_ = error_message;\n  return return_value;\n}\n\n",
            "current_name": "update_x86_feature_00104c60",
            "entrypoint": "0x00104c60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104c60": "update_x86_feature_00104c60",
                "auVar4": "return_value",
                "dcgettext": "translate_error_msg",
                "error": "print_error_msg",
                "iVar1": "strcasecmp_result",
                "param_1": "feature_name",
                "param_2": "enable",
                "param_3": "error_message",
                "param_4": "return_value",
                "uVar2": "feature_value",
                "uVar3": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104ce0": {
            "additional_data": {
                "FUN_00104ce0": {
                    "find_matching_osabi": 1,
                    "find_osabi": 23,
                    "search_for_osabi": 1
                },
                "auVar6": {
                    "result": 19,
                    "result_struct": 1,
                    "return_data": 1,
                    "return_value": 9,
                    "return_values": 1
                },
                "dcgettext": {
                    "translate_message": 1
                },
                "error": {
                    "display_error": 1
                },
                "iVar1": {
                    "comp_result": 1,
                    "comparison_result": 30
                },
                "param_1": {
                    "input": 1,
                    "input_osabi": 5,
                    "input_string": 3,
                    "os_abi": 2,
                    "os_name": 2,
                    "osabi": 7,
                    "osabi_input": 2,
                    "osabi_name": 5,
                    "osabi_string": 2,
                    "target_osabi": 2
                },
                "param_2": {
                    "arg1": 1,
                    "arg2": 1,
                    "arg_2": 1,
                    "param2": 7,
                    "param_2": 9,
                    "unknown_arg1": 1,
                    "unknown_param_1": 1,
                    "unknown_var1": 1,
                    "unspecified_1": 1,
                    "unused_param": 1,
                    "unused_param2": 1,
                    "unused_param_1": 2,
                    "unused_param_2": 3,
                    "var_2": 1
                },
                "param_3": {
                    "arg2": 1,
                    "arg3": 1,
                    "arg_3": 1,
                    "param3": 7,
                    "param_3": 9,
                    "unknown_arg2": 1,
                    "unknown_param_2": 1,
                    "unknown_var2": 1,
                    "unspecified_2": 1,
                    "unused_param": 1,
                    "unused_param3": 1,
                    "unused_param_2": 2,
                    "unused_param_3": 3,
                    "var_3": 1
                },
                "param_4": {
                    "additional_param": 1,
                    "arg3": 1,
                    "arg4": 1,
                    "error_code": 1,
                    "error_message": 3,
                    "error_msg": 1,
                    "osabi_value": 1,
                    "output_value": 1,
                    "param4": 7,
                    "param_4": 7,
                    "result": 2,
                    "status": 1,
                    "unknown": 1,
                    "unknown_arg3": 1,
                    "unknown_param_3": 1,
                    "unknown_var3": 1
                },
                "puVar5": {
                    "addresses": 1,
                    "array_pointer": 2,
                    "array_ptr": 1,
                    "dat_00108ca0_ptr": 1,
                    "dat_ptr": 1,
                    "data_array": 2,
                    "data_pointer": 2,
                    "data_ptr": 5,
                    "lookup_table": 1,
                    "osabi_array": 4,
                    "osabi_list": 2,
                    "pointer_array": 2,
                    "ptr": 1,
                    "ptr_array": 2,
                    "ptr_to_osabi_data": 1,
                    "string_array": 3
                },
                "uVar2": {
                    "error_message": 16,
                    "error_msg": 3,
                    "error_msg_ptr": 1,
                    "error_string": 3,
                    "message": 2,
                    "osabi_message": 1,
                    "translated_error_message": 1,
                    "translated_error_msg": 1,
                    "translated_string": 1,
                    "unknown_os_text": 1,
                    "unknown_var_1": 1
                },
                "uVar3": {
                    "current_index": 1,
                    "index": 27,
                    "osabi_index": 2,
                    "osabi_value": 1
                },
                "uVar4": {
                    "index": 1,
                    "index_plus_1": 1,
                    "iteration_counter": 1,
                    "new_index": 2,
                    "next_index": 19,
                    "next_osabi_index": 1,
                    "temp": 1,
                    "temp_index": 3,
                    "u_var4": 1,
                    "updated_index": 1
                }
            },
            "called": [
                "FUN_00102040",
                "FUN_00102323"
            ],
            "calling": [
                "FUN_00103bf0"
            ],
            "code": "\nundefined  [16] find_matching_osabi_00104ce0(char *osabi,undefined8 param_2,undefined8 param_3,undefined8 param4)\n\n{\n  int comparison_result;\n  undefined8 error_message;\n  ulong index;\n  uint next_index;\n  undefined4 *data_ptr;\n  undefined result [16];\n  \n  data_ptr = &DAT_00108ca0;\n  index = 0;\n  do {\n    comparison_result = strcasecmp(osabi,*(char **)(data_ptr + 2));\n    if (comparison_result == 0) {\n      index = (ulong)(uint)(&DAT_00108ca0)[index * 4];\n      goto LAB_00104d20;\n    }\n    next_index = (int)index + 1;\n    index = (ulong)next_index;\n    data_ptr = data_ptr + 4;\n  } while (next_index != 0x10);\n  error_message = translate_message(0,\"Unknown OSABI: %s\\n\",5);\n  display_error(error_message,osabi);\n  index = 0xffffffff;\nLAB_00104d20:\n  result._8_8_ = param4;\n  result._0_8_ = index;\n  return result;\n}\n\n",
            "current_name": "find_matching_osabi_00104ce0",
            "entrypoint": "0x00104ce0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104ce0": "find_matching_osabi_00104ce0",
                "auVar6": "result",
                "dcgettext": "translate_message",
                "error": "display_error",
                "iVar1": "comparison_result",
                "param_1": "osabi",
                "param_4": "param4",
                "puVar5": "data_ptr",
                "uVar2": "error_message",
                "uVar3": "index",
                "uVar4": "next_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104d30": {
            "additional_data": {
                "0x3e": {
                    "x86_64_value": 1
                },
                "0xb4": {
                    "l1om_value": 1
                },
                "0xb5": {
                    "k1om_value": 1
                },
                "DCGETTEXT_FUNCTION_ADDRESS": {
                    "dcgettext": 1
                },
                "ERROR_FUNCTION_ADDRESS": {
                    "error": 1
                },
                "FUC_00104d30": {
                    "get_machine_type": 1
                },
                "FUN_0010234b": {
                    "some_sub_function": 1
                },
                "FUN_00104d30": {
                    "get_machine_type": 29,
                    "identify_machine_type": 1
                },
                "dcgettext": {
                    "get_localized_error_string": 1,
                    "get_machine_error": 1,
                    "get_string": 1
                },
                "error": {
                    "print_error": 2
                },
                "iVar1": {
                    "comparison_result": 5,
                    "i386_comparison": 1,
                    "i386_result": 1,
                    "result": 24
                },
                "iVar2": {
                    "cmp_result": 5,
                    "compare_result": 1,
                    "comparison_result": 16,
                    "comparison_result2": 2,
                    "iamcu_comparison": 1,
                    "iamcu_result": 1,
                    "second_comparison_result": 3,
                    "temp_result": 2
                },
                "param_1": {
                    "machine_type": 31
                },
                "uVar3": {
                    "err_msg": 2,
                    "error_message": 17,
                    "error_string": 7,
                    "unknown_machine_msg": 1,
                    "unknown_machine_type": 2,
                    "unknown_machine_type_msg": 1
                }
            },
            "called": [
                "FUN_00102040",
                "FUN_0010234b"
            ],
            "calling": [
                "FUN_00103bf0"
            ],
            "code": "\nint get_machine_type_00104d30(char *machine_type)\n\n{\n  int result;\n  int comparison_result;\n  undefined8 error_message;\n  \n  result = strcasecmp(machine_type,\"i386\");\n  if (result == 0) {\n    result = 3;\n  }\n  else {\n    result = strcasecmp(machine_type,\"iamcu\");\n    if (result == 0) {\n      return 6;\n    }\n    comparison_result = strcasecmp(machine_type,\"l1om\");\n    result = 0xb4;\n    if (comparison_result != 0) {\n      result = strcasecmp(machine_type,\"k1om\");\n      if (result == 0) {\n        return 0xb5;\n      }\n      result = strcasecmp(machine_type,\"x86_64\");\n      if (result == 0) {\n        result = 0x3e;\n      }\n      else {\n        result = strcasecmp(machine_type,\"x86-64\");\n        if (result == 0) {\n          result = 0x3e;\n        }\n        else {\n          result = strcasecmp(machine_type,\"none\");\n          if (result != 0) {\n            error_message = get_string(0,\"Unknown machine type: %s\\n\",5);\n            print_error(error_message,machine_type);\n            result = -1;\n          }\n        }\n      }\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "get_machine_type_00104d30",
            "entrypoint": "0x00104d30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104d30": "get_machine_type_00104d30",
                "dcgettext": "get_string",
                "error": "print_error",
                "iVar1": "result",
                "iVar2": "comparison_result",
                "param_1": "machine_type",
                "uVar3": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104da0": {
            "additional_data": {
                "FUN_00102e85": {
                    "get_translation": 1
                },
                "FUN_00104da0": {
                    "get_binary_type": 2,
                    "get_file_type": 3,
                    "get_section_type": 2,
                    "get_type": 16,
                    "get_type_from_param": 5,
                    "get_type_from_string": 1,
                    "get_type_id": 1,
                    "get_type_index": 1
                },
                "iVar1": {
                    "comparison_result": 1,
                    "result": 23,
                    "section_type": 1,
                    "type": 2,
                    "type_code": 1,
                    "type_id": 1,
                    "type_index": 2
                },
                "iVar2": {
                    "cmp_result": 4,
                    "comp_result": 2,
                    "compare_result": 3,
                    "comparison_result": 15,
                    "comparison_result2": 1,
                    "result": 2,
                    "result2": 1,
                    "str_compare_result": 1,
                    "strcmp_result": 1,
                    "temp_result": 1
                },
                "param_1": {
                    "binary_type": 2,
                    "file_type": 1,
                    "input": 1,
                    "input_param": 1,
                    "section_name": 1,
                    "section_type": 1,
                    "type": 11,
                    "type_param": 3,
                    "type_parameter": 1,
                    "type_str": 4,
                    "type_string": 5
                },
                "uVar3": {
                    "err_msg": 1,
                    "error_message": 22,
                    "error_msg": 4,
                    "error_string": 4
                }
            },
            "called": [
                "FUN_00102e85",
                "FUN_00102040",
                "FUN_001023ce",
                "FUN_001020d0"
            ],
            "calling": [
                "FUN_00103bf0"
            ],
            "code": "\nint get_type_from_param_00104da0(char *type)\n\n{\n  int result;\n  int comparison_result;\n  undefined8 error_message;\n  \n  result = strcasecmp(type,\"rel\");\n  if (result == 0) {\n    result = 1;\n  }\n  else {\n    comparison_result = strcasecmp(type,\"exec\");\n    result = 2;\n    if (comparison_result != 0) {\n      result = strcasecmp(type,\"dyn\");\n      if (result == 0) {\n        result = 3;\n      }\n      else {\n        result = strcasecmp(type,\"none\");\n        if (result != 0) {\n          error_message = dcgettext(0,\"Unknown type: %s\\n\",5);\n          error(error_message,type);\n          result = -1;\n        }\n      }\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "get_type_from_param_00104da0",
            "entrypoint": "0x00104da0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104da0": "get_type_from_param_00104da0",
                "iVar1": "result",
                "iVar2": "comparison_result",
                "param_1": "type",
                "uVar3": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00104de0": {
            "additional_data": {
                "DAT_00109150": {
                    "expected_value9": 1
                },
                "DAT_00109154": {
                    "expected_value7": 1
                },
                "DAT_00109158": {
                    "expected_value8": 1
                },
                "DAT_0010915c": {
                    "expected_value6": 1
                },
                "DAT_00109164": {
                    "expected_value5": 1
                },
                "DAT_00109168": {
                    "expected_value3": 1
                },
                "DAT_0010916c": {
                    "expected_value1": 1
                },
                "DAT_00109170": {
                    "expected_value4": 1
                },
                "DAT_00109174": {
                    "expected_value2": 1
                },
                "DAT_001093b8": {
                    "write_function": 1
                },
                "DAT_001093c0": {
                    "read_function": 1
                },
                "DAT_001093e5": {
                    "some_value2": 1
                },
                "DAT_001093e8": {
                    "elf_data": 1
                },
                "DAT_00109424": {
                    "e_version": 1
                },
                "FUN_00104de0": {
                    "check_and_update_elf_header": 1,
                    "check_elf_header": 3,
                    "check_elf_header_validity": 1,
                    "extract_elf_header": 1,
                    "parse_elf_header": 5,
                    "process_elf_header": 5,
                    "read_elf_header": 3,
                    "validate_and_rewrite_elf_header": 1,
                    "validate_and_update_elf_header": 2,
                    "validate_elf_header": 5,
                    "verify_and_update_elf_header": 2
                },
                "_DAT_00109388": {
                    "e_ident": 1
                },
                "_DAT_001093e0": {
                    "elf_magic_number": 1
                },
                "_DAT_001093e4": {
                    "elf_class": 1
                },
                "_DAT_001093f0": {
                    "e_shentsize": 1
                },
                "_DAT_001093f8": {
                    "e_phoff": 1
                },
                "_DAT_00109400": {
                    "e_shoff": 1
                },
                "_DAT_00109408": {
                    "e_entry": 1
                },
                "_DAT_00109410": {
                    "e_versions": 1
                },
                "_DAT_0010941a": {
                    "e_type": 1
                },
                "_DAT_0010941c": {
                    "e_shstrndx": 1
                },
                "_DAT_00109420": {
                    "e_phnum": 1
                },
                "_DAT_00109428": {
                    "e_flags": 1
                },
                "_DAT_0010942c": {
                    "e_machine": 1
                },
                "_DAT_00109430": {
                    "e_ehsize": 1
                },
                "__off": {
                    "current_file_position": 1,
                    "current_position": 4,
                    "file_offset": 8,
                    "file_position": 10,
                    "offset": 6
                },
                "byte_get_big_endian": {
                    "function3": 1
                },
                "byte_get_little_endian": {
                    "function4": 1
                },
                "byte_put_big_endian": {
                    "function1": 1
                },
                "byte_put_little_endian": {
                    "function2": 1
                },
                "fseek": {
                    "seek_file": 1
                },
                "fwrite": {
                    "write_data": 1
                },
                "iVar1": {
                    "file_seek_result": 2,
                    "fseek_result": 1,
                    "result": 4,
                    "return_code": 1,
                    "seek_result": 16,
                    "seek_status": 1,
                    "status": 2,
                    "status_code": 1
                },
                "param_1": {
                    "error_message": 7,
                    "error_msg": 1,
                    "file_name": 3,
                    "file_path": 4,
                    "param": 2,
                    "param1": 1,
                    "param_1": 1,
                    "param_elf_file": 1,
                    "param_elf_file_name": 1,
                    "param_elf_header": 1,
                    "param_file": 2,
                    "param_file_name": 2,
                    "param_file_path": 1,
                    "param_filepath": 1,
                    "param_path": 1
                },
                "param_2": {
                    "file": 2,
                    "file_handle": 1,
                    "file_pointer": 11,
                    "file_ptr": 5,
                    "input_file": 1,
                    "param2": 1,
                    "param_elf_file": 1,
                    "param_file": 6,
                    "param_file_ptr": 1
                },
                "pcVar4": {
                    "error_format": 2,
                    "error_format_string": 1,
                    "error_message": 16,
                    "error_message_format": 1,
                    "error_msg_format": 1,
                    "error_string": 3,
                    "format_str": 1,
                    "format_string": 2,
                    "message_format": 1,
                    "printf_format": 1
                },
                "read_elf_header_failed_00102558": {
                    "handle_read_elf_header_failure": 1
                },
                "sVar2": {
                    "bytes_read": 3,
                    "num_bytes_read": 2,
                    "read_result": 21,
                    "read_status": 2,
                    "result": 1
                },
                "uVar3": {
                    "error_message": 1,
                    "func_result": 1,
                    "result": 9,
                    "return_val": 1,
                    "return_value": 16
                },
                "uVar5": {
                    "data_value1": 1,
                    "e_class": 1,
                    "e_machine": 1,
                    "input_value": 2,
                    "temp_var1": 3,
                    "temp_var_1": 2,
                    "u_var5": 1,
                    "value1": 5,
                    "value_1": 8,
                    "var1": 2,
                    "var5": 2,
                    "var_1": 1
                },
                "uVar6": {
                    "comparison_value": 2,
                    "data_value2": 1,
                    "e_osabi": 1,
                    "e_type": 1,
                    "temp_var2": 3,
                    "temp_var_2": 2,
                    "u_var6": 1,
                    "value2": 5,
                    "value_2": 8,
                    "var2": 2,
                    "var6": 2,
                    "var_2": 1
                },
                "update_elf_header_failure_001024ec": {
                    "handle_update_elf_header_failure": 1
                }
            },
            "called": [
                "FUN_001021d0",
                "FUN_001024ec",
                "FUN_00102260",
                "FUN_00102050",
                "FUN_00103a90",
                "FUN_001020d0",
                "FUN_00103ad0",
                "FUN_00102170",
                "FUN_00102434",
                "FUN_00102090",
                "FUN_0010354e",
                "FUN_00102e85",
                "FUN_00102558",
                "FUN_0010347f"
            ],
            "calling": [
                "FUN_0010358d",
                "FUN_00103bf0"
            ],
            "code": "\n\n\nundefined8 validate_and_update_elf_header_00104de0(undefined8 error_message,FILE *file_pointer)\n\n{\n  int seek_result;\n  long file_position;\n  size_t read_result;\n  undefined8 return_value;\n  char *error_message;\n  uint value_1;\n  uint value_2;\n  \n  file_position = ftell(file_pointer);\n  read_result = fread(&DAT_001093e0,0x10,1,file_pointer);\n  if ((read_result == 1) && (_DAT_001093e0 == 0x464c457f)) {\n    DAT_001093b8 = function1;\n    if (DAT_001093e5 != '\\x02') {\n      DAT_001093b8 = function2;\n    }\n    DAT_001093c0 = function3;\n    if (DAT_001093e5 != '\\x02') {\n      DAT_001093c0 = function4;\n    }\n    if ((char)_DAT_001093e4 == '\\x01') {\n      read_result = fread(&DAT_00109390,0x24,1,file_pointer);\n      if (read_result != 1) goto code_r0x00102558;\n      DAT_00109418 = (*DAT_001093c0)(&DAT_00109390,2);\n      DAT_0010941a = (*DAT_001093c0)(&DAT_00109392,2);\n      _DAT_00109408 = (*DAT_001093c0)(&DAT_00109394,4);\n      _DAT_001093f0 = (*DAT_001093c0)(&DAT_00109398,4);\n      DAT_001093f8 = (*DAT_001093c0)(&DAT_0010939c,4);\n      _DAT_00109400 = (*DAT_001093c0)(&DAT_001093a0,4);\n      _DAT_00109410 = (*DAT_001093c0)(&DAT_001093a4,4);\n      _DAT_0010941c = (*DAT_001093c0)(&DAT_001093a8,2);\n      _DAT_00109420 = (*DAT_001093c0)(&DAT_001093aa,2);\n      DAT_00109424 = (*DAT_001093c0)(&DAT_001093ac,2);\n      _DAT_00109428 = (*DAT_001093c0)(&DAT_001093ae,2);\n      _DAT_0010942c = (*DAT_001093c0)(&DAT_001093b0,2);\n      _DAT_00109430 = (*DAT_001093c0)(&DAT_001093b2,2);\n      _DAT_00109380 = _DAT_001093e0;\n      uRam0000000000109384 = _DAT_001093e4;\n      _DAT_00109388 = _DAT_001093e8;\n      uRam000000000010938c = uRam00000000001093ec;\n    }\n    else {\n      if ((char)_DAT_001093e4 != '\\x02') {\n        return_value = handle_read_elf_header_failure();\n        return return_value;\n      }\n      read_result = fread(&DAT_00109350,0x30,1,file_pointer);\n      if (read_result != 1) goto code_r0x00102558;\n      DAT_00109418 = (*DAT_001093c0)(&DAT_00109350,2);\n      DAT_0010941a = (*DAT_001093c0)(&DAT_00109352,2);\n      _DAT_00109408 = (*DAT_001093c0)(&DAT_00109354,4);\n      _DAT_001093f0 = (*DAT_001093c0)(&DAT_00109358,8);\n      DAT_001093f8 = (*DAT_001093c0)(&DAT_00109360,8);\n      _DAT_00109400 = (*DAT_001093c0)(&DAT_00109368,8);\n      _DAT_00109410 = (*DAT_001093c0)(&DAT_00109370,4);\n      _DAT_0010941c = (*DAT_001093c0)(&DAT_00109374,2);\n      _DAT_00109420 = (*DAT_001093c0)(&DAT_00109376,2);\n      DAT_00109424 = (*DAT_001093c0)(&DAT_00109378,2);\n      _DAT_00109428 = (*DAT_001093c0)(&DAT_0010937a,2);\n      _DAT_0010942c = (*DAT_001093c0)(&DAT_0010937c,2);\n      _DAT_00109430 = (*DAT_001093c0)(&DAT_0010937e,2);\n      _DAT_00109340 = _DAT_001093e0;\n      uRam0000000000109344 = _DAT_001093e4;\n      _DAT_00109348 = _DAT_001093e8;\n      uRam000000000010934c = uRam00000000001093ec;\n    }\n    seek_result = seek_file(file_pointer,file_position,0);\n    if (seek_result != 0) {\n      return_value = dcgettext(0,\"%s: Failed to seek to ELF header\\n\",5);\n      error(return_value,error_message);\n    }\n    value_1 = _DAT_001093e4 >> 0x10 & 0xff;\n    if ((char)value_1 == '\\x01') {\n      value_1 = (uint)DAT_0010941a;\n      if (value_1 == DAT_0010916c) {\n        return 0;\n      }\n      value_2 = _DAT_001093e4 & 0xff;\n      if (DAT_00109170 == 0xffffffff) {\n        if (DAT_0010941a == 6) {\n          DAT_00109170 = 1;\n        }\n        else if (DAT_0010941a < 7) {\n          DAT_00109170 = (DAT_0010941a != 3) + 1 + (uint)(DAT_0010941a != 3);\n        }\n        else {\n          DAT_00109170 = 3 - ((ushort)(DAT_0010941a - 0xb4) < 2);\n        }\n      }\n      if ((value_2 == DAT_00109170) || (DAT_00109170 == 3)) {\n        if ((value_2 == DAT_00109168) || (DAT_00109168 == 3)) {\n          if ((value_1 == DAT_00109174) || (DAT_00109174 == 0xffffffff)) {\n            value_1 = (uint)DAT_00109418;\n            if ((DAT_00109164 == 0xffffffff) || (value_1 == DAT_00109164)) {\n              value_1 = _DAT_001093e4 >> 0x18;\n              if ((DAT_0010915c == 0xffffffff) || (value_1 == DAT_0010915c)) {\n                value_1 = _DAT_001093e8 & 0xff;\n                if ((value_1 == DAT_00109154) || (DAT_00109154 == 0xffffffff)) {\n                  if ((char)value_2 == '\\x01') {\n                    if (DAT_0010916c != 0xffffffff) {\n                      (*DAT_001093b8)(&DAT_00109392,(long)(int)DAT_0010916c,2);\n                    }\n                    if (DAT_00109160 != -1) {\n                      (*DAT_001093b8)(&DAT_00109390,(long)DAT_00109160,2);\n                    }\n                    if (DAT_00109158 != -1) {\n                      uRam0000000000109384 =\n                           CONCAT13((char)DAT_00109158,(undefined3)uRam0000000000109384);\n                    }\n                    if (DAT_00109150 != -1) {\n                      _DAT_00109388 = CONCAT31(DAT_00109388_1,(char)DAT_00109150);\n                    }\n                    read_result = write_data(&DAT_00109380,0x34,1,file_pointer);\n                    if (read_result == 1) {\n                      return 0;\n                    }\n                    return_value = handle_update_elf_header_failure();\n                    return return_value;\n                  }\n                  if ((char)value_2 != '\\x02') {\n                    \n                    abort();\n                  }\n                  if (DAT_0010916c != 0xffffffff) {\n                    (*DAT_001093b8)(&DAT_00109352,(long)(int)DAT_0010916c,2);\n                  }\n                  if (DAT_00109160 != -1) {\n                    (*DAT_001093b8)(&DAT_00109350,(long)DAT_00109160,2);\n                  }\n                  if (DAT_00109158 != -1) {\n                    uRam0000000000109344 =\n                         CONCAT13((char)DAT_00109158,(undefined3)uRam0000000000109344);\n                  }\n                  if (DAT_00109150 != -1) {\n                    _DAT_00109348 = CONCAT31(DAT_00109348_1,(char)DAT_00109150);\n                  }\n                  read_result = write_data(&DAT_00109340,0x40,1,file_pointer);\n                  if (read_result == 1) {\n                    return 0;\n                  }\n                  return_value = handle_update_elf_header_failure();\n                  return return_value;\n                }\n                error_message = \"%s: Unmatched EI_ABIVERSION: %d is not %d\\n\";\n                value_2 = DAT_00109154;\n              }\n              else {\n                error_message = \"%s: Unmatched EI_OSABI: %d is not %d\\n\";\n                value_2 = DAT_0010915c;\n              }\n            }\n            else {\n              error_message = \"%s: Unmatched e_type: %d is not %d\\n\";\n              value_2 = DAT_00109164;\n            }\n          }\n          else {\n            error_message = \"%s: Unmatched e_machine: %d is not %d\\n\";\n            value_2 = DAT_00109174;\n          }\n          return_value = dcgettext(0,error_message,5);\n          error(return_value,error_message,value_1,value_2);\n          return 1;\n        }\n        error_message = \"%s: Unmatched output EI_CLASS: %d is not %d\\n\";\n        value_1 = DAT_00109168;\n      }\n      else {\n        error_message = \"%s: Unmatched input EI_CLASS: %d is not %d\\n\";\n        value_1 = DAT_00109170;\n      }\n      return_value = dcgettext(0,error_message,5);\n      error(return_value,error_message,value_2,value_1);\n    }\n    else {\n      return_value = dcgettext(0,\"%s: Unsupported EI_VERSION: %d is not %d\\n\",5);\n      error(return_value,error_message,value_1,1);\n    }\n  }\n  else {\ncode_r0x00102558:\n    return_value = dcgettext(0,\"%s: Failed to read ELF header\\n\",5);\n    error(return_value,error_message);\n  }\n  return 1;\n}\n\n",
            "current_name": "validate_and_update_elf_header_00104de0",
            "entrypoint": "0x00104de0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00104de0": "validate_and_update_elf_header_00104de0",
                "__off": "file_position",
                "byte_get_big_endian": "function3",
                "byte_get_little_endian": "function4",
                "byte_put_big_endian": "function1",
                "byte_put_little_endian": "function2",
                "fseek": "seek_file",
                "fwrite": "write_data",
                "iVar1": "seek_result",
                "param_1": "error_message",
                "param_2": "file_pointer",
                "pcVar4": "error_message",
                "read_elf_header_failed_00102558": "handle_read_elf_header_failure",
                "sVar2": "read_result",
                "uVar3": "return_value",
                "uVar5": "value_1",
                "uVar6": "value_2",
                "update_elf_header_failure_001024ec": "handle_update_elf_header_failure"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105370": {
            "additional_data": {
                "FUN_00105370": {
                    "extract_archive_name": 1,
                    "extract_file": 2,
                    "extract_file_name": 10,
                    "extract_file_name_or_copy": 1,
                    "extract_file_path": 1,
                    "extract_filename": 2,
                    "extract_filename_from_path": 1,
                    "extract_filename_or_duplicate": 1,
                    "extract_subdirectory": 1,
                    "improve_and_duplicate": 1,
                    "parse_path": 2,
                    "process_file_path": 1
                },
                "__size": {
                    "allocated_size": 2,
                    "allocation_size": 1,
                    "buffer_size": 3,
                    "final_size": 1,
                    "final_string_size": 1,
                    "new_file_path_size": 1,
                    "new_filename_size": 1,
                    "new_malloc_size": 1,
                    "new_size": 4,
                    "output_size": 1,
                    "size": 4,
                    "string_size": 1,
                    "total_size": 8
                },
                "bVar9": {
                    "additional_counter": 1,
                    "backward_direction": 1,
                    "bool_value": 1,
                    "byte_offset": 1,
                    "byte_value": 1,
                    "byte_var": 2,
                    "false": 1,
                    "flag": 5,
                    "found_slash": 1,
                    "increment": 2,
                    "invert": 1,
                    "is_forward_slash": 1,
                    "is_negative": 5,
                    "is_negative_offset": 1,
                    "is_reversed": 1,
                    "is_slash": 1,
                    "negate_direction": 1,
                    "negative_increment": 1,
                    "slash_flag": 1,
                    "zero": 1,
                    "zero_flag": 1
                },
                "cVar2": {
                    "current_char": 22
                },
                "dcgettext": {
                    "get_localized_message": 1,
                    "get_message_translation": 1
                },
                "error": {
                    "print_error": 1,
                    "print_error_message": 1
                },
                "extraout_RDX": {
                    "delimiter_size": 1,
                    "extension_size": 1,
                    "extra": 1,
                    "file_name_length": 3,
                    "file_name_length_remaining": 1,
                    "file_name_size": 1,
                    "input_length": 1,
                    "max_length": 1,
                    "name_length": 1,
                    "new_path_length": 1,
                    "path_length": 2,
                    "remaining_length2": 1,
                    "source_string_length": 1,
                    "string_size": 1,
                    "sub_string_size": 1
                },
                "lVar1": {
                    "buffer_end_position": 1,
                    "combined_length": 2,
                    "combined_size": 5,
                    "file_name_length": 1,
                    "filename_length": 2,
                    "input_size": 1,
                    "length": 3,
                    "new_file_name_length": 1,
                    "size_difference": 1,
                    "source_file_length": 1,
                    "total_length": 5,
                    "total_size": 5
                },
                "param_1": {
                    "file_path": 11,
                    "input_filepath": 1,
                    "input_path": 4,
                    "input_string": 7,
                    "input_string1": 2,
                    "original_file_path": 1,
                    "original_path": 1,
                    "path": 2,
                    "source_file_path": 1,
                    "source_path": 1
                },
                "param_2": {
                    "archive_member_name": 1,
                    "archive_name": 1,
                    "delimiter": 5,
                    "destination_file_path": 1,
                    "destination_path": 1,
                    "extension": 1,
                    "file_name": 7,
                    "filename": 1,
                    "input_string2": 2,
                    "new_path": 1,
                    "output_filepath": 1,
                    "output_path": 2,
                    "path_string": 1,
                    "search_string": 2,
                    "separator": 1,
                    "source": 1,
                    "source_string": 1,
                    "sub_string": 1
                },
                "pcVar4": {
                    "file_name": 1,
                    "file_name_start": 3,
                    "file_path": 1,
                    "filename_pos": 1,
                    "filename_start": 3,
                    "last_delimiter": 1,
                    "last_forward_slash": 1,
                    "last_separator": 1,
                    "last_slash": 13,
                    "last_slash_pos": 1,
                    "last_slash_position": 1,
                    "last_slash_ptr": 1,
                    "new_file_name": 1,
                    "prefix": 1,
                    "slash_position": 1
                },
                "pcVar5": {
                    "allocated_path": 1,
                    "allocated_string": 1,
                    "buffer_size_str": 1,
                    "default_archive_name": 1,
                    "default_file": 1,
                    "default_path": 2,
                    "default_size": 1,
                    "file_name": 1,
                    "file_name_buffer": 1,
                    "file_name_end": 2,
                    "file_name_length": 5,
                    "filename": 1,
                    "filename_end": 1,
                    "filename_length": 1,
                    "input": 1,
                    "input_len": 1,
                    "input_length": 1,
                    "input_size": 1,
                    "malloc_size": 1,
                    "max_size": 1,
                    "original_input": 1,
                    "path_length": 1,
                    "str_length": 1,
                    "string_length": 1,
                    "temp_ptr": 1
                },
                "pcVar6": {
                    "allocated_archive_name": 1,
                    "allocated_filename": 1,
                    "allocated_memory": 1,
                    "dynamic_string": 1,
                    "extracted_file_name": 1,
                    "file_buffer": 1,
                    "file_name": 3,
                    "file_name_copy": 1,
                    "filename": 1,
                    "input": 1,
                    "memory_block": 1,
                    "new_file_name": 1,
                    "new_file_path": 3,
                    "new_filename": 1,
                    "new_path": 3,
                    "new_string": 1,
                    "output": 1,
                    "output_filename": 1,
                    "output_ptr": 1,
                    "output_string": 3,
                    "parsed_path": 1,
                    "path_allocation": 1,
                    "temp_pointer": 1
                },
                "uVar3": {
                    "err_msg": 2,
                    "error_message": 17,
                    "error_msg": 3,
                    "error_string": 3,
                    "error_text": 2,
                    "result": 1,
                    "translated_error_msg": 1
                },
                "uVar7": {
                    "copy_length": 1,
                    "count": 1,
                    "file_name_length": 4,
                    "file_name_length_remaining_copy": 1,
                    "filename_length": 1,
                    "filename_size": 1,
                    "idx": 1,
                    "length": 1,
                    "loop_counter1": 1,
                    "member_name_length": 1,
                    "name_length": 1,
                    "num_chars": 1,
                    "output_length": 1,
                    "path_length": 1,
                    "path_size": 1,
                    "remaining_bytes": 1,
                    "remaining_chars": 3,
                    "remaining_length": 2,
                    "remaining_size": 4,
                    "search_len": 1,
                    "source_length": 1,
                    "temp_length": 1
                },
                "uVar8": {
                    "basename_length": 1,
                    "boundary": 1,
                    "copy_size": 1,
                    "diff": 1,
                    "diff_len": 1,
                    "diff_length": 1,
                    "file_path_length": 1,
                    "file_prefix_length": 1,
                    "filename_bytes": 1,
                    "filename_length": 2,
                    "filename_length_diff": 1,
                    "filename_size": 1,
                    "input_offset": 1,
                    "length_difference": 1,
                    "loop_counter2": 1,
                    "num_chars_to_copy": 1,
                    "path_diff": 1,
                    "path_length": 5,
                    "prefix_length": 1,
                    "prefix_size": 1,
                    "remaining_length": 2,
                    "separator_offset": 1,
                    "slash_index": 1,
                    "substring_length": 1,
                    "substring_size": 1
                },
                "xmalloc_failed": {
                    "handle_memory_allocation_failure": 2
                }
            },
            "called": [
                "FUN_001021b0",
                "FUN_00102cbc"
            ],
            "calling": [
                "FUN_00103160",
                "FUN_001029a5",
                "FUN_00103bf0",
                "FUN_00103186",
                "FUN_00103006"
            ],
            "code": "\nchar * extract_file_name_or_copy_00105370(char *file_path,char *file_name)\n\n{\n  ulong total_size;\n  long total_size;\n  char current_char;\n  undefined8 error_message;\n  char *last_slash;\n  char *file_name_length;\n  char *file_name;\n  ulong file_name_length;\n  ulong file_name_length;\n  ulong path_length;\n  byte flag;\n  \n  flag = 0;\n  file_name_length = (char *)0x1;\n  if (file_path != (char *)0x0) {\n    file_name_length = file_path;\n  }\n  file_name = (char *)malloc((size_t)file_name_length);\n  if (file_name != (char *)0x0) {\n    return file_name;\n  }\n  handle_memory_allocation_failure();\n  file_name = file_name_length;\n  last_slash = file_name_length;\n  while (current_char = *file_name, current_char != '\\0') {\n    file_name = file_name + 1;\n    if (current_char == '/') {\n      last_slash = file_name;\n    }\n  }\n  if ((*file_name == '/') || (file_name_length == last_slash)) {\n    if (file_name_length + 1 == 0) {\n      return (char *)0x0;\n    }\n    file_name = (char *)malloc(file_name_length + 1);\n    file_name_length = file_name_length;\n    file_name_length = file_name;\n    if (file_name != (char *)0x0) {\n      for (; file_name_length != 0; file_name_length = file_name_length - 1) {\n        *file_name_length = *file_name;\n        file_name = file_name + (ulong)flag * -2 + 1;\n        file_name_length = file_name_length + (ulong)flag * -2 + 1;\n      }\n      file_name[file_name_length] = '\\0';\n      return file_name;\n    }\n  }\n  else {\n    path_length = (long)last_slash - (long)file_name_length;\n    total_size = path_length + file_name_length;\n    file_name_length = file_name_length;\n    if (file_name_length <= path_length) {\n      file_name_length = path_length;\n    }\n    total_size = total_size + 1;\n    if (total_size < file_name_length) {\n      error_message = get_message_translation(0,\"Abnormal length of thin archive member name: %lx\\n\",5);\n      print_error_message(error_message,file_name_length);\n      return (char *)0x0;\n    }\n    last_slash = (char *)malloc(total_size);\n    file_name = last_slash;\n    if (last_slash != (char *)0x0) {\n      for (; file_name_length = file_name_length, path_length != 0; path_length = path_length - 1) {\n        *file_name = *file_name_length;\n        file_name_length = file_name_length + (ulong)flag * -2 + 1;\n        file_name = file_name + (ulong)flag * -2 + 1;\n      }\n      for (; file_name_length != 0; file_name_length = file_name_length - 1) {\n        *file_name = *file_name;\n        file_name = file_name + (ulong)flag * -2 + 1;\n        file_name = file_name + (ulong)flag * -2 + 1;\n      }\n      last_slash[total_size] = '\\0';\n      return last_slash;\n    }\n  }\n  error_message = get_message_translation(0,\"Out of memory\\n\",5);\n  print_error_message(error_message);\n  return (char *)0x0;\n}\n\n",
            "current_name": "extract_file_name_or_copy_00105370",
            "entrypoint": "0x00105370",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105370": "extract_file_name_or_copy_00105370",
                "__size": "total_size",
                "bVar9": "flag",
                "cVar2": "current_char",
                "dcgettext": "get_message_translation",
                "error": "print_error_message",
                "extraout_RDX": "file_name_length",
                "lVar1": "total_size",
                "param_1": "file_path",
                "param_2": "file_name",
                "pcVar4": "last_slash",
                "pcVar5": "file_name_length",
                "pcVar6": "file_name",
                "uVar3": "error_message",
                "uVar7": "file_name_length",
                "uVar8": "path_length",
                "xmalloc_failed": "handle_memory_allocation_failure"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105394": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00105394(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00105394",
            "entrypoint": "0x00105394",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00105394": "FUNC_00105394"
            },
            "skipped": true,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_00102000",
            "FUN_00102020",
            "FUN_001022c0",
            "FUN_00102323",
            "FUN_0010234b",
            "FUN_001023ce",
            "FUN_001024ec",
            "FUN_00102558",
            "FUN_001025ab",
            "FUN_001027fd",
            "FUN_00102825",
            "FUN_0010289a",
            "FUN_001028be",
            "FUN_00102c98",
            "FUN_00102cbc",
            "FUN_00102cc4",
            "FUN_00102da5",
            "FUN_00102e85",
            "FUN_00102f65",
            "FUN_00102fa0",
            "FUN_00102fbc",
            "FUN_00102fc7",
            "FUN_00103006",
            "FUN_00103160",
            "FUN_00103186",
            "FUN_001032de",
            "FUN_00103449",
            "FUN_0010347f",
            "FUN_0010354e",
            "FUN_0010358d",
            "FUN_00103a90",
            "FUN_00103ad0",
            "FUN_00103b00",
            "FUN_00103ba0",
            "FUN_00103bf0",
            "FUN_00104c60",
            "FUN_00104ce0",
            "FUN_00104d30",
            "FUN_00104da0",
            "FUN_00105370"
        ],
        [
            "FUN_00102434",
            "FUN_00104de0"
        ],
        [
            "FUN_001029a5"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 223038
}