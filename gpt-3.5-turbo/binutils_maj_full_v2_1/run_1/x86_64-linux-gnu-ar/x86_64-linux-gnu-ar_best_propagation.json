{
    "functions": {
        "FUN_00102000": {
            "additional_data": {
                "": {
                    "": 2
                },
                "FUN_00102000": {
                    "initialize": 5,
                    "initialize_application": 2,
                    "initialize_gmon": 2,
                    "initialize_monitor": 3,
                    "initialize_monitoring": 7,
                    "initialize_program": 12
                },
                "__gmon_start__": {
                    "__initialize_monitor_function": 1,
                    "__initialize_profiler": 1,
                    "initialize_global_monitoring": 1,
                    "initialize_gmon_start": 1,
                    "initialize_monitoring": 1,
                    "initialize_performance_monitoring": 1,
                    "initialize_profiling": 1,
                    "monitor_start": 2,
                    "perform_initialization": 1,
                    "start_gmon": 2,
                    "start_monitor": 2,
                    "start_monitoring": 10,
                    "start_performance_analysis": 1,
                    "start_performance_monitoring": 2,
                    "start_profiling": 2
                }
            },
            "called": [
                "FUN_0010e1b8"
            ],
            "calling": [],
            "code": "\nvoid initialize_program_00102000(void)\n\n{\n  start_monitoring();\n  return;\n}\n\n",
            "current_name": "initialize_program_00102000",
            "entrypoint": "0x00102000",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102000": "initialize_program_00102000",
                "__gmon_start__": "start_monitoring"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102020": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "FUN_00102020": {
                    "call_function_at_address": 1,
                    "call_indirect_function": 1,
                    "execute_external_function": 1,
                    "execute_function": 2,
                    "execute_function_at_address": 3,
                    "execute_indirect_call": 7,
                    "execute_indirect_function": 3,
                    "execute_indirect_jump": 12
                },
                "PTR_": {
                    "": 1
                },
                "PTR_0": {
                    "function_pointer": 1
                },
                "PTR_001": {
                    "function_pointer": 1
                },
                "PTR_FUN_00102020": {
                    "function_pointer": 1
                },
                "PTR_undefined": {
                    "function_pointer": 1
                },
                "_": {
                    "jump_target": 1
                },
                "code": {
                    "function_pointer": 1,
                    "function_ptr": 1
                },
                "original_parameter_name_1": {
                    "unmodified_address": 1
                },
                "original_variable_name_1": {
                    "function_pointer": 1
                },
                "undefined": {
                    "function_address": 2,
                    "function_pointer": 2,
                    "function_ptr": 1,
                    "indirect_address": 1,
                    "jump_address": 2,
                    "target_address": 2
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_indirect_jump_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(function_ptr *)(target_address *)0x0)();\n  return;\n}\n\n",
            "current_name": "execute_indirect_jump_00102020",
            "entrypoint": "0x00102020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102020": "execute_indirect_jump_00102020",
                "_": "jump_target",
                "code": "function_ptr",
                "undefined": "target_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102030": {
            "called": [
                "FUN_0010e000"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00102c25",
                "FUN_00105db0",
                "FUN_00103bd1",
                "FUN_00102ba1",
                "FUN_00102d2f",
                "FUN_00103a78",
                "FUN_0010266f"
            ],
            "code": "\n\n\nvoid free(void *__ptr)\n\n{\n  free(__ptr);\n  return;\n}\n\n",
            "current_name": "FUN_00102030",
            "entrypoint": "0x00102030",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102040": {
            "called": [
                "FUN_0010e008"
            ],
            "calling": [
                "FUN_00107c80"
            ],
            "code": "\n\n\nint utimensat(int __fd,char *__path,timespec *__times,int __flags)\n\n{\n  int iVar1;\n  \n  iVar1 = utimensat(__fd,__path,__times,__flags);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102040",
            "entrypoint": "0x00102040",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102050": {
            "called": [
                "FUN_0010e010"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00102bf5"
            ],
            "code": "\nvoid bfd_cache_close(void)\n\n{\n  bfd_cache_close();\n  return;\n}\n\n",
            "current_name": "FUN_00102050",
            "entrypoint": "0x00102050",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102060": {
            "called": [
                "FUN_0010e020"
            ],
            "calling": [
                "FUN_00102fd7",
                "FUN_00103e95",
                "FUN_001025a0",
                "FUN_00102f55",
                "FUN_00105c00",
                "FUN_00102c25",
                "FUN_001028ed",
                "FUN_00103c60",
                "FUN_00103a78",
                "FUN_00102f1e",
                "FUN_001031cf",
                "FUN_00105300"
            ],
            "code": "\n\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  return piVar1;\n}\n\n",
            "current_name": "FUN_00102060",
            "entrypoint": "0x00102060",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102070": {
            "called": [
                "FUN_0010e028"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00102f1e"
            ],
            "code": "\n\n\nint unlink(char *__name)\n\n{\n  int iVar1;\n  \n  iVar1 = unlink(__name);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102070",
            "entrypoint": "0x00102070",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102080": {
            "called": [
                "FUN_0010e030"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_make_writable(void)\n\n{\n  bfd_make_writable();\n  return;\n}\n\n",
            "current_name": "FUN_00102080",
            "entrypoint": "0x00102080",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102090": {
            "called": [
                "FUN_0010e048"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_plugin_set_plugin(void)\n\n{\n  bfd_plugin_set_plugin();\n  return;\n}\n\n",
            "current_name": "FUN_00102090",
            "entrypoint": "0x00102090",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020a0": {
            "called": [
                "FUN_0010e050"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_make_readable(void)\n\n{\n  bfd_make_readable();\n  return;\n}\n\n",
            "current_name": "FUN_001020a0",
            "entrypoint": "0x001020a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020b0": {
            "called": [
                "FUN_0010e058"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105db0"
            ],
            "code": "\n\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = ferror(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001020b0",
            "entrypoint": "0x001020b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020c0": {
            "called": [
                "FUN_0010e060"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_001031cf"
            ],
            "code": "\n\n\nint isatty(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = isatty(__fd);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001020c0",
            "entrypoint": "0x001020c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020d0": {
            "called": [
                "FUN_0010e068"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_set_default_target(void)\n\n{\n  bfd_set_default_target();\n  return;\n}\n\n",
            "current_name": "FUN_001020d0",
            "entrypoint": "0x001020d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020e0": {
            "called": [
                "FUN_0010e070"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105db0"
            ],
            "code": "\n\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fread(__ptr,__size,__n,__stream);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_001020e0",
            "entrypoint": "0x001020e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001020f0": {
            "called": [
                "FUN_0010e080"
            ],
            "calling": [
                "FUN_00102d2f"
            ],
            "code": "\nvoid bfd_set_archive_head(void)\n\n{\n  bfd_set_archive_head();\n  return;\n}\n\n",
            "current_name": "FUN_001020f0",
            "entrypoint": "0x001020f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102100": {
            "called": [
                "FUN_0010e088"
            ],
            "calling": [
                "FUN_00102cd9",
                "FUN_00103e95",
                "FUN_001032a8",
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00105480"
            ],
            "code": "\nvoid filename_cmp(void)\n\n{\n  filename_cmp();\n  return;\n}\n\n",
            "current_name": "FUN_00102100",
            "entrypoint": "0x00102100",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102110": {
            "called": [
                "FUN_0010e090"
            ],
            "calling": [
                "FUN_00105c00"
            ],
            "code": "\n\n\nssize_t write(int __fd,void *__buf,size_t __n)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = write(__fd,__buf,__n);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_00102110",
            "entrypoint": "0x00102110",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102120": {
            "called": [
                "FUN_0010e098"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid textdomain(void)\n\n{\n  textdomain();\n  return;\n}\n\n",
            "current_name": "FUN_00102120",
            "entrypoint": "0x00102120",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102130": {
            "called": [
                "FUN_0010e0a0"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_001028ed",
                "FUN_00103c60",
                "FUN_00102710",
                "FUN_00105300"
            ],
            "code": "\nvoid bfd_openr(void)\n\n{\n  bfd_openr();\n  return;\n}\n\n",
            "current_name": "FUN_00102130",
            "entrypoint": "0x00102130",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102140": {
            "called": [
                "FUN_0010e0a8"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00102c25",
                "FUN_00102bf5",
                "FUN_00105db0"
            ],
            "code": "\n\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fclose(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102140",
            "entrypoint": "0x00102140",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102150": {
            "called": [
                "FUN_0010e0b8"
            ],
            "calling": [
                "FUN_001079c0"
            ],
            "code": "\n\n\nchar * ctime(time_t *__timer)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = ctime(__timer);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_00102150",
            "entrypoint": "0x00102150",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102160": {
            "called": [
                "FUN_0010e0c0"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bindtextdomain(void)\n\n{\n  bindtextdomain();\n  return;\n}\n\n",
            "current_name": "FUN_00102160",
            "entrypoint": "0x00102160",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102170": {
            "called": [
                "FUN_0010e0c8"
            ],
            "calling": [
                "FUN_001052a0",
                "FUN_001075e0",
                "FUN_0010394a",
                "FUN_00102d8c",
                "FUN_00102c25",
                "FUN_001032a8",
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00102e6f",
                "FUN_00103bd1",
                "FUN_00103c60",
                "FUN_00103a78",
                "FUN_00102f1e",
                "FUN_00105300",
                "FUN_00102f96",
                "FUN_001058b0",
                "FUN_00102fd7",
                "FUN_00103e95",
                "FUN_001031a5",
                "FUN_001025a0",
                "FUN_0010285f",
                "FUN_0010336b",
                "FUN_0010342d",
                "FUN_0010266f"
            ],
            "code": "\nvoid dcgettext(void)\n\n{\n  dcgettext();\n  return;\n}\n\n",
            "current_name": "FUN_00102170",
            "entrypoint": "0x00102170",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102180": {
            "called": [
                "FUN_0010e0d0"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00102bb0",
                "FUN_00105a68"
            ],
            "code": "\n\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(__s);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_00102180",
            "entrypoint": "0x00102180",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102190": {
            "called": [
                "FUN_0010e0d8"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid getopt_long(void)\n\n{\n  getopt_long();\n  return;\n}\n\n",
            "current_name": "FUN_00102190",
            "entrypoint": "0x00102190",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021a0": {
            "called": [
                "FUN_0010e0e0"
            ],
            "calling": [
                "FUN_001075e0",
                "FUN_00103e95",
                "FUN_00103172",
                "FUN_001031a5",
                "FUN_00103ba8",
                "FUN_00105db0",
                "FUN_00103a78",
                "FUN_00102f08",
                "FUN_00105a68"
            ],
            "code": "\n\n\nint printf(char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = printf(__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001021a0",
            "entrypoint": "0x001021a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021b0": {
            "called": [
                "FUN_0010e0e8"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid xrealloc(void)\n\n{\n  xrealloc();\n  return;\n}\n\n",
            "current_name": "FUN_001021b0",
            "entrypoint": "0x001021b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021c0": {
            "called": [
                "FUN_0010e0f0"
            ],
            "calling": [
                "FUN_001057a0"
            ],
            "code": "\n\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strrchr(__s,__c);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_001021c0",
            "entrypoint": "0x001021c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021d0": {
            "called": [
                "FUN_0010e0f8"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00102d2f"
            ],
            "code": "\n\n\nint dup(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = dup(__fd);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001021d0",
            "entrypoint": "0x001021d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021e0": {
            "called": [
                "FUN_0010e100"
            ],
            "calling": [
                "FUN_00105c00"
            ],
            "code": "\n\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = lseek(__fd,__offset,__whence);\n  return _Var1;\n}\n\n",
            "current_name": "FUN_001021e0",
            "entrypoint": "0x001021e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001021f0": {
            "called": [
                "FUN_0010e108"
            ],
            "calling": [
                "FUN_00102d8c"
            ],
            "code": "\n\n\nint fputs(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputs(__s,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001021f0",
            "entrypoint": "0x001021f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102200": {
            "called": [
                "FUN_0010e110"
            ],
            "calling": [
                "FUN_00102e57",
                "FUN_00105a68"
            ],
            "code": "\nvoid concat(void)\n\n{\n  concat();\n  return;\n}\n\n",
            "current_name": "FUN_00102200",
            "entrypoint": "0x00102200",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102210": {
            "called": [
                "FUN_0010e120"
            ],
            "calling": [
                "FUN_0010266f"
            ],
            "code": "\nvoid bfd_target_list(void)\n\n{\n  bfd_target_list();\n  return;\n}\n\n",
            "current_name": "FUN_00102210",
            "entrypoint": "0x00102210",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102220": {
            "called": [
                "FUN_0010e128"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00107c20",
                "FUN_00105300"
            ],
            "code": "\nvoid bfd_get_error(void)\n\n{\n  bfd_get_error();\n  return;\n}\n\n",
            "current_name": "FUN_00102220",
            "entrypoint": "0x00102220",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102230": {
            "called": [
                "FUN_0010e130"
            ],
            "calling": [
                "FUN_00102c25",
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_001057a0",
                "FUN_00103a78",
                "FUN_00102bb0"
            ],
            "code": "\nvoid xmalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n",
            "current_name": "FUN_00102230",
            "entrypoint": "0x00102230",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102240": {
            "called": [
                "FUN_0010e138"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00105300"
            ],
            "code": "\nvoid bfd_set_error(void)\n\n{\n  bfd_set_error();\n  return;\n}\n\n",
            "current_name": "FUN_00102240",
            "entrypoint": "0x00102240",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102250": {
            "called": [
                "FUN_0010e140"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid xmalloc_set_program_name(void)\n\n{\n  xmalloc_set_program_name();\n  return;\n}\n\n",
            "current_name": "FUN_00102250",
            "entrypoint": "0x00102250",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102260": {
            "called": [
                "FUN_0010e148"
            ],
            "calling": [
                "FUN_00102f55",
                "FUN_00105c00",
                "FUN_001058b0"
            ],
            "code": "\n\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = close(__fd);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102260",
            "entrypoint": "0x00102260",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102270": {
            "called": [
                "FUN_0010e150"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105db0",
                "FUN_00103c60",
                "FUN_001058b0"
            ],
            "code": "\nvoid xstrdup(void)\n\n{\n  xstrdup();\n  return;\n}\n\n",
            "current_name": "FUN_00102270",
            "entrypoint": "0x00102270",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102280": {
            "called": [
                "FUN_0010e158"
            ],
            "calling": [
                "FUN_00102d8c",
                "FUN_00103bd1",
                "FUN_0010266f"
            ],
            "code": "\n\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fputc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102280",
            "entrypoint": "0x00102280",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102290": {
            "called": [
                "FUN_0010e160"
            ],
            "calling": [
                "FUN_00105c00"
            ],
            "code": "\n\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = read(__fd,__buf,__nbytes);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_00102290",
            "entrypoint": "0x00102290",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022a0": {
            "called": [
                "FUN_0010e168"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_create(void)\n\n{\n  bfd_create();\n  return;\n}\n\n",
            "current_name": "FUN_001022a0",
            "entrypoint": "0x001022a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022b0": {
            "called": [
                "FUN_0010e170"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_init(void)\n\n{\n  bfd_init();\n  return;\n}\n\n",
            "current_name": "FUN_001022b0",
            "entrypoint": "0x001022b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022c0": {
            "called": [
                "FUN_0010e178"
            ],
            "calling": [
                "FUN_00105830",
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00102e6f"
            ],
            "code": "\nvoid lbasename(void)\n\n{\n  lbasename();\n  return;\n}\n\n",
            "current_name": "FUN_001022c0",
            "entrypoint": "0x001022c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022d0": {
            "called": [
                "FUN_0010e180"
            ],
            "calling": [
                "FUN_00103df9"
            ],
            "code": "\n\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = calloc(__nmemb,__size);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_001022d0",
            "entrypoint": "0x001022d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022e0": {
            "called": [
                "FUN_0010e188"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcmp(__s1,__s2);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001022e0",
            "entrypoint": "0x001022e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001022f0": {
            "called": [
                "FUN_0010e190"
            ],
            "calling": [
                "FUN_001078c0"
            ],
            "code": "\n\n\nint putc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = putc(__c,__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001022f0",
            "entrypoint": "0x001022f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102300": {
            "called": [
                "FUN_0010e1a0"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_fdopenr(void)\n\n{\n  bfd_fdopenr();\n  return;\n}\n\n",
            "current_name": "FUN_00102300",
            "entrypoint": "0x00102300",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102310": {
            "called": [
                "FUN_0010e1a8"
            ],
            "calling": [
                "FUN_0010394a",
                "FUN_00102d8c",
                "FUN_001032a8",
                "FUN_001033b0",
                "FUN_00105db0",
                "FUN_001078c0",
                "FUN_00103bd1",
                "FUN_00103c60",
                "FUN_00105300",
                "FUN_00102f96",
                "FUN_00103e95",
                "FUN_0010285f",
                "FUN_0010336b",
                "FUN_0010342d",
                "FUN_0010266f"
            ],
            "code": "\n\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = fprintf(__stream,__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102310",
            "entrypoint": "0x00102310",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102320": {
            "called": [
                "FUN_0010e1b0"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nlong ftell(FILE *__stream)\n\n{\n  long lVar1;\n  \n  lVar1 = ftell(__stream);\n  return lVar1;\n}\n\n",
            "current_name": "FUN_00102320",
            "entrypoint": "0x00102320",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102330": {
            "called": [
                "FUN_0010e1c0"
            ],
            "calling": [
                "FUN_001052a0",
                "FUN_00103e95",
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00105300"
            ],
            "code": "\n\n\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = stat(__file,__buf);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102330",
            "entrypoint": "0x00102330",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102340": {
            "called": [
                "FUN_0010e1c8"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105db0",
                "FUN_00103c60",
                "FUN_00105300",
                "FUN_001058b0"
            ],
            "code": "\nvoid bfd_set_format(void)\n\n{\n  bfd_set_format();\n  return;\n}\n\n",
            "current_name": "FUN_00102340",
            "entrypoint": "0x00102340",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102350": {
            "called": [
                "FUN_0010e1d0"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n  long lVar1;\n  \n  lVar1 = strtol(__nptr,__endptr,__base);\n  return lVar1;\n}\n\n",
            "current_name": "FUN_00102350",
            "entrypoint": "0x00102350",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102360": {
            "called": [
                "FUN_0010e1d8"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\n\n\nvoid clearerr(FILE *__stream)\n\n{\n  clearerr(__stream);\n  return;\n}\n\n",
            "current_name": "FUN_00102360",
            "entrypoint": "0x00102360",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102370": {
            "called": [
                "FUN_0010e1e0"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_bwrite(void)\n\n{\n  bfd_bwrite();\n  return;\n}\n\n",
            "current_name": "FUN_00102370",
            "entrypoint": "0x00102370",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102380": {
            "called": [
                "FUN_0010e1e8"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_00102380",
            "entrypoint": "0x00102380",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102390": {
            "called": [
                "FUN_0010e1f0"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_001031cf"
            ],
            "code": "\n\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fileno(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102390",
            "entrypoint": "0x00102390",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001023a0": {
            "called": [
                "FUN_0010e1f8"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_plugin_set_program_name(void)\n\n{\n  bfd_plugin_set_program_name();\n  return;\n}\n\n",
            "current_name": "FUN_001023a0",
            "entrypoint": "0x001023a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001023b0": {
            "called": [
                "FUN_0010e200"
            ],
            "calling": [
                "FUN_001033d6",
                "FUN_00103e95",
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(__size);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_001023b0",
            "entrypoint": "0x001023b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001023c0": {
            "called": [
                "FUN_0010e208"
            ],
            "calling": [
                "FUN_00103ba8",
                "FUN_001078c0",
                "FUN_00103bd1",
                "FUN_00102f96"
            ],
            "code": "\n\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = fflush(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001023c0",
            "entrypoint": "0x001023c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001023d0": {
            "called": [
                "FUN_0010e210"
            ],
            "calling": [
                "FUN_00102bf5"
            ],
            "code": "\nvoid unlink_if_ordinary(void)\n\n{\n  unlink_if_ordinary();\n  return;\n}\n\n",
            "current_name": "FUN_001023d0",
            "entrypoint": "0x001023d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001023e0": {
            "called": [
                "FUN_0010e218"
            ],
            "calling": [
                "FUN_001057a0"
            ],
            "code": "\n\n\nint mkstemp(char *__template)\n\n{\n  int iVar1;\n  \n  iVar1 = mkstemp(__template);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001023e0",
            "entrypoint": "0x001023e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001023f0": {
            "called": [
                "FUN_0010e220"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = fseek(__stream,__off,__whence);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001023f0",
            "entrypoint": "0x001023f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102400": {
            "called": [
                "FUN_0010e228"
            ],
            "calling": [
                "FUN_00103df9",
                "FUN_00103e95"
            ],
            "code": "\n\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = realloc(__ptr,__size);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_00102400",
            "entrypoint": "0x00102400",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102410": {
            "called": [
                "FUN_0010e238"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = setlocale(__category,__locale);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_00102410",
            "entrypoint": "0x00102410",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102420": {
            "called": [
                "FUN_0010e240"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105300"
            ],
            "code": "\nvoid bfd_openw(void)\n\n{\n  bfd_openw();\n  return;\n}\n\n",
            "current_name": "FUN_00102420",
            "entrypoint": "0x00102420",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102430": {
            "called": [
                "FUN_0010e248"
            ],
            "calling": [
                "FUN_00102c25"
            ],
            "code": "\n\n\nint chmod(char *__file,__mode_t __mode)\n\n{\n  int iVar1;\n  \n  iVar1 = chmod(__file,__mode);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102430",
            "entrypoint": "0x00102430",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102440": {
            "called": [
                "FUN_0010e250"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_set_error_program_name(void)\n\n{\n  bfd_set_error_program_name();\n  return;\n}\n\n",
            "current_name": "FUN_00102440",
            "entrypoint": "0x00102440",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102450": {
            "called": [
                "FUN_0010e258"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memmove(__dest,__src,__n);\n  return pvVar1;\n}\n\n",
            "current_name": "FUN_00102450",
            "entrypoint": "0x00102450",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102460": {
            "called": [
                "FUN_0010e260"
            ],
            "calling": [
                "FUN_00105c00",
                "FUN_00105db0"
            ],
            "code": "\n\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = open(__file,__oflag);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102460",
            "entrypoint": "0x00102460",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102470": {
            "called": [
                "FUN_0010e268"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105db0",
                "FUN_00105a68"
            ],
            "code": "\n\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = fopen(__filename,__modes);\n  return pFVar1;\n}\n\n",
            "current_name": "FUN_00102470",
            "entrypoint": "0x00102470",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102480": {
            "called": [
                "FUN_0010e270"
            ],
            "calling": [
                "FUN_0010315d",
                "FUN_00107690",
                "FUN_0010394a",
                "FUN_00105db0",
                "FUN_00107c10",
                "FUN_00102d2f",
                "FUN_00107650",
                "FUN_0010342d",
                "FUN_00105300",
                "FUN_00105a68"
            ],
            "code": "\nvoid xexit(void)\n\n{\n                    \n  xexit();\n}\n\n",
            "current_name": "FUN_00102480",
            "entrypoint": "0x00102480",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102490": {
            "called": [
                "FUN_0010e278"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105db0",
                "FUN_00102d2f",
                "FUN_00102710",
                "FUN_00105300"
            ],
            "code": "\nvoid bfd_close(void)\n\n{\n  bfd_close();\n  return;\n}\n\n",
            "current_name": "FUN_00102490",
            "entrypoint": "0x00102490",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001024a0": {
            "called": [
                "FUN_0010e280"
            ],
            "calling": [
                "FUN_00105300",
                "FUN_00105a68"
            ],
            "code": "\n\n\nvoid perror(char *__s)\n\n{\n  perror(__s);\n  return;\n}\n\n",
            "current_name": "FUN_001024a0",
            "entrypoint": "0x001024a0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001024b0": {
            "called": [
                "FUN_0010e288"
            ],
            "calling": [
                "FUN_001078c0"
            ],
            "code": "\n\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n  int iVar1;\n  \n  iVar1 = vfprintf(__s,__format,__arg);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001024b0",
            "entrypoint": "0x001024b0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001024c0": {
            "called": [
                "FUN_0010e290"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00105300"
            ],
            "code": "\nvoid bfd_check_format_matches(void)\n\n{\n  bfd_check_format_matches();\n  return;\n}\n\n",
            "current_name": "FUN_001024c0",
            "entrypoint": "0x001024c0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001024d0": {
            "called": [
                "FUN_0010e298"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00107c20"
            ],
            "code": "\nvoid bfd_errmsg(void)\n\n{\n  bfd_errmsg();\n  return;\n}\n\n",
            "current_name": "FUN_001024d0",
            "entrypoint": "0x001024d0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001024e0": {
            "called": [
                "FUN_0010e2a0"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid bfd_find_target(void)\n\n{\n  bfd_find_target();\n  return;\n}\n\n",
            "current_name": "FUN_001024e0",
            "entrypoint": "0x001024e0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001024f0": {
            "called": [
                "FUN_0010e2a8"
            ],
            "calling": [
                "FUN_00102d8c",
                "FUN_001079c0"
            ],
            "code": "\n\n\nint sprintf(char *__s,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = sprintf(__s,__format);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_001024f0",
            "entrypoint": "0x001024f0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102500": {
            "called": [
                "FUN_0010e2b0"
            ],
            "calling": [
                "FUN_001075e0",
                "FUN_001033b0"
            ],
            "code": "\n\n\nvoid exit(int __status)\n\n{\n                    \n  exit(__status);\n}\n\n",
            "current_name": "FUN_00102500",
            "entrypoint": "0x00102500",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102510": {
            "called": [
                "FUN_0010e2b8"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00102c25",
                "FUN_00103a78"
            ],
            "code": "\n\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = fwrite(__ptr,__size,__n,__s);\n  return sVar1;\n}\n\n",
            "current_name": "FUN_00102510",
            "entrypoint": "0x00102510",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102520": {
            "called": [
                "FUN_0010e2c0"
            ],
            "calling": [
                "FUN_00103c60",
                "FUN_00105af0",
                "FUN_00102710"
            ],
            "code": "\nvoid bfd_check_format(void)\n\n{\n  bfd_check_format();\n  return;\n}\n\n",
            "current_name": "FUN_00102520",
            "entrypoint": "0x00102520",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102530": {
            "called": [
                "FUN_0010e2c8"
            ],
            "calling": [
                "FUN_00103c60",
                "FUN_00105af0",
                "FUN_00105300"
            ],
            "code": "\nvoid bfd_openr_next_archived_file(void)\n\n{\n  bfd_openr_next_archived_file();\n  return;\n}\n\n",
            "current_name": "FUN_00102530",
            "entrypoint": "0x00102530",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102540": {
            "called": [
                "FUN_0010e2d8"
            ],
            "calling": [
                "FUN_00102c25",
                "FUN_00103a78"
            ],
            "code": "\nvoid bfd_bread(void)\n\n{\n  bfd_bread();\n  return;\n}\n\n",
            "current_name": "FUN_00102540",
            "entrypoint": "0x00102540",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102550": {
            "called": [
                "FUN_0010e2e0"
            ],
            "calling": [
                "FUN_00102fd7",
                "FUN_001025a0",
                "FUN_00102c25",
                "FUN_00103c60",
                "FUN_00103a78",
                "FUN_00102f1e"
            ],
            "code": "\n\n\nchar * strerror(int __errnum)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = strerror(__errnum);\n  return pcVar1;\n}\n\n",
            "current_name": "FUN_00102550",
            "entrypoint": "0x00102550",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102560": {
            "called": [
                "FUN_0010e2e8"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\n\n\nint getc(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = getc(__stream);\n  return iVar1;\n}\n\n",
            "current_name": "FUN_00102560",
            "entrypoint": "0x00102560",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102570": {
            "called": [
                "FUN_0010e2f0"
            ],
            "calling": [
                "FUN_00103c60",
                "FUN_001058b0"
            ],
            "code": "\nvoid bfd_fdopenw(void)\n\n{\n  bfd_fdopenw();\n  return;\n}\n\n",
            "current_name": "FUN_00102570",
            "entrypoint": "0x00102570",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102580": {
            "called": [
                "FUN_0010e300"
            ],
            "calling": [
                "FUN_00102c25",
                "FUN_00103a78"
            ],
            "code": "\nvoid bfd_seek(void)\n\n{\n  bfd_seek();\n  return;\n}\n\n",
            "current_name": "FUN_00102580",
            "entrypoint": "0x00102580",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00102590": {
            "called": [
                "FUN_0010e308"
            ],
            "calling": [
                "FUN_00105d60"
            ],
            "code": "\nvoid __cxa_finalize(void)\n\n{\n  __cxa_finalize();\n  return;\n}\n\n",
            "current_name": "FUN_00102590",
            "entrypoint": "0x00102590",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_001025a0": {
            "additional_data": {
                "FUN_001025a0": {
                    "check_file_availability": 1,
                    "check_file_existence": 2,
                    "check_file_status": 1,
                    "file_not_found_error": 4,
                    "file_not_found_warning": 1,
                    "handle_error": 1,
                    "handle_file_error": 20,
                    "report_file_not_found_error": 1
                },
                "dcgettext": {
                    "get_error_message": 2,
                    "get_text": 1,
                    "get_translated_msg": 1
                },
                "non_fatal": {
                    "display_error_message": 2,
                    "handle_non_fatal_error": 2,
                    "report_error": 2
                },
                "piVar1": {
                    "err_num_ptr": 1,
                    "errno_loc": 1,
                    "errno_location": 1,
                    "errno_pointer": 2,
                    "errno_ptr": 17,
                    "error_code_ptr": 1,
                    "error_location": 4,
                    "error_pointer": 2,
                    "error_ptr": 2
                },
                "uVar2": {
                    "error_message": 29,
                    "error_msg": 1,
                    "error_string": 1
                }
            },
            "called": [
                "FUN_00107920",
                "FUN_00102060",
                "FUN_00102550",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_001052a0"
            ],
            "code": "\nundefined8 handle_file_error_001025a0(void)\n\n{\n  int *errno_ptr;\n  undefined8 error_message;\n  \n  errno_ptr = __errno_location();\n  if (*errno_ptr == 2) {\n    error_message = get_error_message(0,\"\\'%s\\': No such file\",5);\n    display_error_message(error_message);\n  }\n  else {\n    strerror(*errno_ptr);\n    error_message = get_error_message(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n    display_error_message(error_message);\n  }\n  return 0xffffffffffffffff;\n}\n\n",
            "current_name": "handle_file_error_001025a0",
            "entrypoint": "0x001025a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001025a0": "handle_file_error_001025a0",
                "dcgettext": "get_error_message",
                "non_fatal": "display_error_message",
                "piVar1": "errno_ptr",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010266f": {
            "additional_data": {
                "FUN_0010266f": {
                    "print_supported_targets": 31
                },
                "__ptr": {
                    "target_list": 30,
                    "target_list_ptr": 1
                },
                "lVar1": {
                    "current_target": 4,
                    "current_target_entry": 1,
                    "current_target_value": 16,
                    "target": 3,
                    "target_id": 1,
                    "target_pointer": 1,
                    "target_ptr": 1,
                    "target_value": 1
                },
                "param_1": {
                    "target": 27,
                    "target_name": 4
                },
                "param_2": {
                    "output": 2,
                    "output_file": 29
                },
                "pcVar2": {
                    "format_string": 2,
                    "message": 22,
                    "target_message": 1,
                    "target_prompt": 1,
                    "target_string": 1,
                    "text": 2
                },
                "plVar3": {
                    "current_ptr": 1,
                    "current_target": 23,
                    "current_target_ptr": 2,
                    "ptr_to_target": 1,
                    "target_list_pointer": 1,
                    "target_pointer": 1,
                    "target_ptr": 2
                }
            },
            "called": [
                "FUN_00102030",
                "FUN_00102280",
                "FUN_00102210",
                "FUN_00102310",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_0010394a",
                "FUN_0010342d"
            ],
            "code": "\nvoid print_supported_targets_0010266f(long target,FILE *output_file)\n\n{\n  long current_target_value;\n  char *message;\n  long *target_list;\n  long *current_target;\n  \n  if (target == 0) {\n    message = (char *)dcgettext(0,\"Supported targets:\",5);\n    fprintf(output_file,message);\n  }\n  else {\n    message = (char *)dcgettext(0,\"%s: supported targets:\",5);\n    fprintf(output_file,message,target);\n  }\n  target_list = (long *)bfd_target_list();\n  current_target = target_list;\n  while( true ) {\n    current_target_value = *current_target;\n    current_target = current_target + 1;\n    if (current_target_value == 0) break;\n    fprintf(output_file,\" %s\");\n  }\n  fputc(10,output_file);\n  free(target_list);\n  return;\n}\n\n",
            "current_name": "print_supported_targets_0010266f",
            "entrypoint": "0x0010266f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010266f": "print_supported_targets_0010266f",
                "__ptr": "target_list",
                "lVar1": "current_target_value",
                "param_1": "target",
                "param_2": "output_file",
                "pcVar2": "message",
                "plVar3": "current_target"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102710": {
            "additional_data": {
                "DAT_0010d5f0": {
                    "bfd_archived_file": 1,
                    "bfd_format_data": 1,
                    "current_format": 1,
                    "default_library": 1,
                    "existing_thin_library": 1,
                    "extracted_file": 1,
                    "global_variable_1": 3,
                    "library_data": 3,
                    "library_symbol": 1,
                    "normal_format": 1,
                    "thin_library": 1,
                    "thin_library_data": 1
                },
                "DAT_0010d5f8": {
                    "convert_existing_library": 1,
                    "convert_flag": 3,
                    "convert_format_flag": 1,
                    "existing_library": 2,
                    "global_variable_2": 2,
                    "global_variable_3": 1,
                    "is_thin_format": 1,
                    "library_version_flag": 1,
                    "normal_format_flag": 1,
                    "thin_library_flag": 2
                },
                "DAT_0010d610": {
                    "conversion_allowed": 1,
                    "convert_to_normal_format": 1,
                    "global_variable_3": 2,
                    "is_conversion_needed": 1,
                    "option_flag": 1,
                    "thin_format_flag": 1
                },
                "DAT_0010d618": {
                    "backup_return_address": 1,
                    "conversion_result": 1,
                    "create_format": 1,
                    "created_file": 1,
                    "current_handle": 1,
                    "data_value": 1,
                    "global_variable_4": 3,
                    "other_uninitialized_variable": 1,
                    "output_buffer": 1,
                    "result": 1,
                    "secondary_data": 1,
                    "secondary_output_file_data": 1,
                    "temp_file_format": 1,
                    "temporary_data_2": 1
                },
                "DAT_0010d64c": {
                    "additional_flag": 1,
                    "archived_file_format": 2,
                    "archived_file_type": 1,
                    "check_file_format": 1,
                    "file_format": 1,
                    "file_type": 1,
                    "format_code": 1,
                    "format_option": 1,
                    "format_type": 1,
                    "global_variable_5": 3,
                    "match_format_value": 1,
                    "some_value": 1
                },
                "FUN_00102710": {
                    "extract_and_convert_archived_files": 1,
                    "extract_and_convert_libraries": 1,
                    "extract_archived_files": 1,
                    "extract_bfd_archived_files": 1,
                    "extract_library_files": 3,
                    "find_matching_formats": 2,
                    "load_and_convert_archive": 1,
                    "load_and_convert_libraries": 1,
                    "load_and_convert_library": 1,
                    "load_bfd_library": 1,
                    "load_library": 4,
                    "open_and_convert_bfd_files": 2,
                    "open_and_convert_library": 4,
                    "open_write_and_convert_files": 1,
                    "parse_archive_file": 1,
                    "parse_library_file": 2,
                    "process_binary": 1,
                    "retrieve_bfd_file": 1
                },
                "LAB_00102826": {
                    "retry_open_input_bfd": 1
                },
                "LAB_001053b7": {
                    "retry_open_output_bfd": 1
                },
                "_DAT_0010d610": {
                    "condition": 1,
                    "condition_check": 1,
                    "condition_flag": 1,
                    "conversion_flag": 2,
                    "custom_option": 1,
                    "existing_library_flag": 1,
                    "flag": 1,
                    "global_variable_2": 1,
                    "normal_format_flag": 1
                },
                "bVar3": {
                    "bit_value": 1,
                    "conversion_flag": 1,
                    "convert_flag": 3,
                    "convert_to_thin": 1,
                    "is_archived_file": 1,
                    "is_convert_thin": 1,
                    "is_converted": 3,
                    "is_thin": 1,
                    "is_thin_conversion": 1,
                    "is_thin_format": 1,
                    "is_thin_library": 5,
                    "thin_conversion": 1,
                    "thin_library": 1,
                    "thin_library_check": 1,
                    "thin_library_flag": 9
                },
                "bfd_check_format": {
                    "check_format": 2,
                    "check_format_validity": 1
                },
                "bfd_check_format_matches": {
                    "check_format_matches": 1
                },
                "bfd_close": {
                    "close": 1,
                    "close_bfd": 1,
                    "close_handle": 1
                },
                "bfd_fatal": {
                    "fatal_error": 2,
                    "handle_fatal_error": 1
                },
                "bfd_get_error": {
                    "get_error": 1,
                    "get_error_code": 2
                },
                "bfd_nonfatal": {
                    "handle_nonfatal_error": 1,
                    "non_fatal_error": 2
                },
                "bfd_openr": {
                    "open_input_bfd": 1,
                    "open_read": 1,
                    "open_read_handle": 1
                },
                "bfd_openr_next_archived_file": {
                    "open_next_archived_file": 3
                },
                "bfd_openw": {
                    "open_output_bfd": 1,
                    "open_write": 1,
                    "open_write_handle": 1
                },
                "bfd_set_format": {
                    "set_format": 1,
                    "set_output_format": 2
                },
                "cVar2": {
                    "check_result": 4,
                    "format_check": 5,
                    "format_check_result": 9,
                    "format_flag": 1,
                    "format_valid": 7,
                    "is_format_valid": 2,
                    "is_valid_format": 3
                },
                "dcgettext": {
                    "get_error_message": 1,
                    "get_text": 1,
                    "get_translation": 1
                },
                "fatal": {
                    "fatal_error": 1,
                    "fatal_error_message": 1,
                    "handle_fatal_convert_error": 1
                },
                "iVar4": {
                    "bfd_error": 5,
                    "bfd_error_code": 1,
                    "error": 1,
                    "error_code": 22,
                    "error_status": 1,
                    "error_value": 1
                },
                "in_stack_00000008": {
                    "additional_input_2": 1,
                    "additional_stack_var": 1,
                    "arch": 1,
                    "architecture_filter": 1,
                    "archived_filename": 1,
                    "conversion_format": 1,
                    "format": 1,
                    "format_match_name": 1,
                    "format_specifier": 1,
                    "format_string": 2,
                    "input_argument": 1,
                    "input_filename": 1,
                    "matching_flags": 2,
                    "matching_formats": 1,
                    "parameter": 1,
                    "parameter_1": 1,
                    "stack_arg": 1,
                    "stack_argument": 2,
                    "stack_data": 2,
                    "stack_param": 2,
                    "stack_parameter": 1,
                    "stack_variable": 2,
                    "target_format": 1
                },
                "lVar1": {
                    "file_handle": 1
                },
                "lVar5": {
                    "archived_file": 2,
                    "archived_file_ptr": 2,
                    "bfd_file": 1,
                    "bfd_handle": 7,
                    "binary_file": 1,
                    "file": 1,
                    "file_descriptor": 7,
                    "file_handle": 2,
                    "file_pointer": 1,
                    "input_bfd": 2,
                    "input_file": 1,
                    "library_file": 2,
                    "library_handle": 1,
                    "next_archived_file": 1
                },
                "list_matching_formats": {
                    "list_formats": 1,
                    "print_matching_formats": 2
                },
                "non_fatal": {
                    "non_fatal_error": 1,
                    "non_fatal_error_message": 1
                },
                "plVar1": {
                    "archived_file": 3,
                    "archived_file_descriptor": 1,
                    "archived_file_handle": 1,
                    "archived_file_list": 1,
                    "archived_file_pointer": 3,
                    "archived_file_ptr": 3,
                    "archived_files": 3,
                    "current_file": 1,
                    "current_file_ptr": 2,
                    "file_handle_pointer": 1,
                    "file_list": 1,
                    "file_list_ptr": 1,
                    "file_ptr": 1
                },
                "puVar8": {
                    "bfd_output_handle": 1,
                    "bfd_ptr": 1,
                    "library_handle": 1,
                    "output_bfd": 2,
                    "output_bfd_handle": 3,
                    "output_bfd_ptr": 1,
                    "output_file": 10,
                    "output_file_descriptor": 1,
                    "output_file_handle": 2,
                    "output_file_ptr": 1,
                    "output_handle": 5,
                    "output_library": 1,
                    "write_bfd_file": 1,
                    "write_handle": 1
                },
                "stack0x00000008": {
                    "file_format_class": 1,
                    "format2": 1,
                    "format_filter": 1,
                    "matching_formats": 1,
                    "stack_parameter": 1,
                    "stack_variable": 1
                },
                "uVar6": {
                    "error_message": 24,
                    "error_msg": 3,
                    "error_string": 1,
                    "translated_message": 1
                },
                "uVar7": {
                    "conversion_message": 1,
                    "error_message": 1,
                    "file_name": 2,
                    "library_name": 24,
                    "library_path": 1
                },
                "unaff_RBP": {
                    "additional_info": 1,
                    "additional_input": 1,
                    "additional_param": 1,
                    "archived_file": 1,
                    "backup_return_address": 1,
                    "context": 1,
                    "data": 1,
                    "data_buffer": 1,
                    "default_value": 1,
                    "file_format": 2,
                    "file_name": 1,
                    "function_pointer": 1,
                    "initial_data": 1,
                    "input_bfd_handle": 1,
                    "optional_argument": 1,
                    "other_error": 1,
                    "output_file": 1,
                    "saved_rbp": 1,
                    "secondary_output_file": 1,
                    "stack_address": 1,
                    "stack_rbp_offset": 1,
                    "stack_var": 1,
                    "temporary_data": 1,
                    "temporary_variable": 1,
                    "unaff_rbp": 1,
                    "unaff_return_base_pointer": 1,
                    "uninitialized_variable": 1
                },
                "xexit": {
                    "exit_program": 3
                }
            },
            "called": [
                "FUN_00102130",
                "FUN_00102490",
                "FUN_00102520"
            ],
            "calling": [
                "FUN_00105300"
            ],
            "code": "\n\n\nundefined8 * load_bfd_library_00102710(void)\n\n{\n  long *archived_file;\n  char format_check_result;\n  byte thin_library_flag;\n  int error_code;\n  long bfd_handle;\n  undefined8 error_message;\n  undefined8 library_name;\n  undefined8 *output_file;\n  undefined8 file_format;\n  undefined8 stack_argument;\n  \n  bfd_handle = open_input_bfd();\n  if (bfd_handle != 0) {\n    format_check_result = check_format(bfd_handle,1);\n    if (format_check_result != '\\0') {\n      DAT_0010d5f0 = **(undefined8 **)(bfd_handle + 8);\n    }\n    close(bfd_handle);\n  }\n  output_file = (undefined8 *)open_write_handle();\n  if (((output_file != (undefined8 *)0x0) && (format_check_result = set_output_format(output_file,2), format_check_result != '\\0')) &&\n     (format_check_result = close(output_file), format_check_result != '\\0')) {\n    if (_DAT_0010d610 == 0) goto retry_open_input_bfd;\n    goto retry_open_output_bfd;\n  }\n  fatal_error();\n  do {\n    thin_library_flag = *(byte *)((long)output_file + 0x49) >> 4 & 1;\n    if (DAT_0010d5f8 == '\\0') {\n      if (thin_library_flag != 0) {\n        library_name = *output_file;\n        error_message = get_translation(0,\"Cannot convert existing thin library %s to normal format\",5);\n        handle_fatal_convert_error(error_message,library_name);\n        goto LAB_00102812;\n      }\n    }\n    else if (thin_library_flag == 0) {\n      library_name = *output_file;\n      error_message = get_translation(0,\"Cannot convert existing library %s to thin format\",5);\n      handle_fatal_convert_error(error_message,library_name);\nLAB_001027cb:\n      non_fatal_error();\n      error_code = get_error_code();\n      if (error_code == 0xd) {\nLAB_00102812:\n        print_matching_formats(stack_argument);\n      }\n                    \n      exit_program(1);\n    }\n    do {\n      archived_file = output_file + 0x1e;\n      for (bfd_handle = open_next_archived_file(output_file,0); bfd_handle != 0;\n          bfd_handle = open_next_archived_file(output_file,bfd_handle)) {\n        *archived_file = bfd_handle;\n        archived_file = (long *)(bfd_handle + 0xf0);\n      }\n      *archived_file = 0;\n      error_code = get_error_code();\n      if (error_code == 9) {\n        return output_file;\n      }\n      do {\n        fatal_error();\nretry_open_input_bfd:\n        library_name = get_translation(0,\"creating %s\",5);\n        non_fatal_error(library_name);\nretry_open_output_bfd:\n        DAT_0010d618 = file_format;\n        output_file = (undefined8 *)open_input_bfd();\n      } while (output_file == (undefined8 *)0x0);\n      format_check_result = check_format_matches(output_file,2,&matching_formats);\n      if (format_check_result == '\\0') goto LAB_001027cb;\n    } while (((DAT_0010d64c != 2) && (DAT_0010d64c != 7)) ||\n            (bfd_handle = open_next_archived_file(output_file,0), bfd_handle == 0));\n  } while( true );\n}\n\n",
            "current_name": "load_bfd_library_00102710",
            "entrypoint": "0x00102710",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102710": "load_bfd_library_00102710",
                "LAB_00102826": "retry_open_input_bfd",
                "LAB_001053b7": "retry_open_output_bfd",
                "bVar3": "thin_library_flag",
                "bfd_check_format": "check_format",
                "bfd_check_format_matches": "check_format_matches",
                "bfd_close": "close",
                "bfd_fatal": "fatal_error",
                "bfd_get_error": "get_error_code",
                "bfd_nonfatal": "non_fatal_error",
                "bfd_openr": "open_input_bfd",
                "bfd_openr_next_archived_file": "open_next_archived_file",
                "bfd_openw": "open_write_handle",
                "bfd_set_format": "set_output_format",
                "cVar2": "format_check_result",
                "dcgettext": "get_translation",
                "fatal": "handle_fatal_convert_error",
                "iVar4": "error_code",
                "in_stack_00000008": "stack_argument",
                "lVar1": "file_handle",
                "lVar5": "bfd_handle",
                "list_matching_formats": "print_matching_formats",
                "non_fatal": "non_fatal_error",
                "plVar1": "archived_file",
                "puVar8": "output_file",
                "stack0x00000008": "matching_formats",
                "uVar6": "error_message",
                "uVar7": "library_name",
                "unaff_RBP": "file_format",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010284b": {
            "additional_data": {
                "FUN_0010284b": {
                    "check_success": 1,
                    "get_constant_value": 1,
                    "get_constants": 1,
                    "get_number": 1,
                    "get_one": 12,
                    "get_positive_number": 1,
                    "get_return_value": 8,
                    "initialize": 1,
                    "initialize_flag": 1,
                    "initialize_value": 1,
                    "return_1": 1,
                    "return_one": 2
                },
                "return": {
                    "result": 2
                },
                "undefined8": {
                    "bool": 1,
                    "int": 1,
                    "uint64": 1,
                    "uint64_t": 6,
                    "unsigned_long": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00107650"
            ],
            "code": "\nuint64_t get_one_0010284b(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "get_one_0010284b",
            "entrypoint": "0x0010284b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010284b": "get_one_0010284b",
                "return": "result",
                "undefined8": "uint64_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010285f": {
            "additional_data": {
                "DAT_0010d634": {
                    "should_ignore_case": 1,
                    "some_condition": 1
                },
                "FUN_0010285f": {
                    "print_archive_entry": 1,
                    "print_archive_entry_error": 3,
                    "print_archive_entry_not_found": 11,
                    "print_archive_entry_not_found_error": 1,
                    "print_entries_in_archive": 1,
                    "print_entry_from_archive": 1,
                    "print_entry_not_found_error_message": 2,
                    "print_entry_not_found_message": 2,
                    "print_error_message": 2,
                    "print_invalid_archive_entry": 1,
                    "print_missing_entries": 2,
                    "print_missing_entries_from_archive": 1,
                    "print_missing_entry": 1,
                    "print_missing_entry_message": 1,
                    "print_no_entry_in_archive": 1
                },
                "_DAT_0010d630": {
                    "max_match_count": 1
                },
                "__format": {
                    "error_format": 1,
                    "error_message": 10,
                    "error_message_format": 5,
                    "format_str": 1,
                    "format_string": 11,
                    "message": 1
                },
                "_stderr": {
                    "error_output": 1,
                    "error_output_file": 1,
                    "error_stream": 2,
                    "standard_error": 1,
                    "standard_error_stream": 1
                },
                "code_r0x0010285f": {
                    "retry_printing": 1
                },
                "dcgettext": {
                    "get_error_message": 4,
                    "get_translated_string": 1
                },
                "filename_cmp": {
                    "compare_file_name": 2,
                    "compare_filenames": 4
                },
                "fprintf": {
                    "print_error_message": 3,
                    "print_formatted_error": 1,
                    "print_to_standard_error": 1
                },
                "goto": {
                    "resume_printing": 1
                },
                "iStack000000000000000c": {
                    "count": 3,
                    "counter": 2,
                    "entry_count": 2,
                    "entry_counter": 5,
                    "entry_found_count": 1,
                    "entry_index": 2,
                    "entry_match_count": 1,
                    "found_entries_count": 1,
                    "loop_counter": 1,
                    "matched_entries_count": 1,
                    "matching_count": 4,
                    "matching_entries_count": 2,
                    "matching_entry_count": 3,
                    "num_printed_entries": 1,
                    "num_processed_entries": 1
                },
                "iVar1": {
                    "comparison_result": 2,
                    "result": 1
                },
                "lVar2": {
                    "current_entry": 8,
                    "current_entry_name": 1,
                    "current_entry_pointer": 1,
                    "entry": 3,
                    "entry_address": 1,
                    "entry_offset": 1,
                    "entry_pointer": 2,
                    "entry_value": 1,
                    "file_size": 2,
                    "normalized_entry": 1,
                    "normalized_file_path": 1,
                    "normalized_filename": 5,
                    "normalized_path": 2,
                    "normalized_value": 1
                },
                "normalize": {
                    "normalize_entry": 2,
                    "normalize_entry_name": 2,
                    "normalize_file_path": 2
                },
                "plVar3": {
                    "alternate_entry": 1,
                    "alternate_filename": 1,
                    "alternative_entry": 2,
                    "archive_entry": 3,
                    "default_path": 1,
                    "fallback_entry": 5,
                    "fallback_pointer": 1,
                    "fallback_ptr": 1,
                    "next_entry": 7,
                    "next_entry_ptr": 1,
                    "next_file": 1,
                    "normalized_file_path_pointer": 1,
                    "pointer1": 1,
                    "ptr_or_self": 1,
                    "secondary_entry": 1,
                    "temp_pointer": 2
                },
                "plVar5": {
                    "archive_entry": 1,
                    "current_archive_entry_ptr": 1,
                    "current_entry": 12,
                    "current_entry_pointer_list": 1,
                    "current_entry_ptr": 1,
                    "current_file": 2,
                    "current_node": 3,
                    "current_ptr": 1,
                    "entry": 3,
                    "next_entry": 4,
                    "pointer2": 1
                },
                "return": {
                    "exit_function": 1
                },
                "stack0x00000010": {
                    "stack_buffer": 1
                },
                "uVar4": {
                    "archive_entry": 1,
                    "current_archive_entry": 1,
                    "current_entry": 8,
                    "current_entry_name": 2,
                    "current_file_path": 1,
                    "entry": 2,
                    "entry_name": 14,
                    "file_name": 1
                },
                "unaff_R12": {
                    "archive": 5,
                    "archive_base": 1,
                    "archive_base_address": 4,
                    "archive_base_pointer": 1,
                    "archive_data": 4,
                    "archive_entry_pointer": 1,
                    "archive_header": 1,
                    "archive_obj": 1,
                    "archive_offset": 1,
                    "archive_pointer": 3,
                    "archive_ptr": 8,
                    "base_address": 1
                },
                "unaff_R13D": {
                    "counter": 1,
                    "entry_count": 11,
                    "num_entries": 5,
                    "number_of_entries": 2,
                    "remaining_entries": 11,
                    "remaining_iterations": 1
                },
                "unaff_R14": {
                    "archive_entries": 1,
                    "entries": 2,
                    "entry_array": 1,
                    "entry_list": 3,
                    "entry_name_pointer": 1,
                    "entry_names": 14,
                    "entry_point": 1,
                    "entry_pointer": 1,
                    "entry_pointers": 1,
                    "entry_ptr": 4,
                    "file_path_list": 1,
                    "string_array": 1
                },
                "unaff_RBP": {
                    "action": 1,
                    "callback": 6,
                    "callback_func": 2,
                    "callback_function": 11,
                    "execute_callback": 2,
                    "function_pointer": 7,
                    "print_entry_function": 1,
                    "ptr_to_function": 1
                }
            },
            "called": [
                "FUN_00102310",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00105480"
            ],
            "code": "\n\n\nvoid print_archive_entry_not_found_error_0010285f(void)\n\n{\n  int comparison_result;\n  char *format_string;\n  long current_entry;\n  long *next_entry;\n  undefined8 entry_name;\n  long *current_entry;\n  code *callback_function;\n  long archive_ptr;\n  int remaining_entries;\n  undefined8 *entry_names;\n  int entry_counter;\n  \nretry_printing:\n  entry_name = *entry_names;\n  format_string = (char *)get_error_message(0,\"no entry %s in archive\\n\",5);\n  print_error_message(error_stream,format_string,entry_name);\nLAB_0010553e:\n  entry_names = entry_names + 1;\n  remaining_entries = remaining_entries + -1;\n  if (remaining_entries == 0) {\n    exit_function;\n  }\n  current_entry = *(long **)(archive_ptr + 0xf0);\n  entry_counter = 0;\n  do {\n    if (current_entry == (long *)0x0) resume_printing retry_printing;\n    if (*(int *)((long)current_entry + 0xac) == 0) {\n      current_entry = *current_entry;\n      if (current_entry == 0) {\n        next_entry = (long *)current_entry[0x1d];\n        if ((long *)current_entry[0x1d] == (long *)0x0) {\n          next_entry = current_entry;\n        }\n        (**(code **)(next_entry[1] + 0x1e8))(current_entry,&stack_buffer);\n      }\n      else if (((*(byte *)(archive_ptr + 0x49) & 0x10) == 0) || (current_entry = normalize_entry(), current_entry != 0)) {\n        entry_name = normalize_entry(*entry_names);\n        comparison_result = compare_filenames(entry_name,current_entry);\n        if ((comparison_result == 0) &&\n           ((DAT_0010d634 == '\\0' ||\n            (entry_counter = entry_counter + 1,\n            entry_counter == _DAT_0010d630)))) break;\n      }\n    }\n    current_entry = (long *)current_entry[0x1e];\n  } while( true );\n  (*callback_function)();\n  *(undefined4 *)((long)current_entry + 0xac) = 1;\n  resume_printing LAB_0010553e;\n}\n\n",
            "current_name": "print_archive_entry_not_found_error_0010285f",
            "entrypoint": "0x0010285f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010285f": "print_archive_entry_not_found_error_0010285f",
                "__format": "format_string",
                "_stderr": "error_stream",
                "code_r0x0010285f": "retry_printing",
                "dcgettext": "get_error_message",
                "filename_cmp": "compare_filenames",
                "fprintf": "print_error_message",
                "goto": "resume_printing",
                "iStack000000000000000c": "entry_counter",
                "iVar1": "comparison_result",
                "lVar2": "current_entry",
                "normalize": "normalize_entry",
                "plVar3": "next_entry",
                "plVar5": "current_entry",
                "return": "exit_function",
                "stack0x00000010": "stack_buffer",
                "uVar4": "entry_name",
                "unaff_R12": "archive_ptr",
                "unaff_R13D": "remaining_entries",
                "unaff_R14": "entry_names",
                "unaff_RBP": "callback_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001028ed": {
            "additional_data": {
                "FUN_001028ed": {
                    "extract_and_process_archives": 1,
                    "extract_archives": 1,
                    "extract_filenames": 1,
                    "extract_function": 1,
                    "main_function": 1,
                    "process_archive": 2,
                    "process_binary": 3,
                    "process_binary_function": 1,
                    "process_files": 6
                },
                "FUN_00102943": {
                    "another_empty_function": 1,
                    "bfd_fatal": 2,
                    "initialize": 1,
                    "open_error": 1
                },
                "FUN_00103172": {
                    "append_file": 1,
                    "check_value": 1,
                    "do_ar_emul_append_constprop": 1,
                    "process_file": 1,
                    "stat_error": 1
                },
                "FUN_00105830": {
                    "compare_filename": 1,
                    "compare_filenames": 1,
                    "handle_file": 1,
                    "process_file": 2
                },
                "FUN_00105870": {
                    "append_const_prop": 1,
                    "find_next_file": 1,
                    "find_null_terminator": 1,
                    "get_next_file": 1,
                    "perform_action": 1
                },
                "FUN_001058b0": {
                    "cleanup": 2,
                    "free_memory": 1,
                    "print_error": 1,
                    "replace_bfd": 1
                },
                "FUN_00105ae0": {
                    "check_filename": 1,
                    "do_something": 1,
                    "normalize_filename": 1,
                    "normalize_path": 2
                },
                "FUN_00105af0": {
                    "calculate_value": 1,
                    "find_pos": 1,
                    "get_pos_bfd": 1,
                    "process_files_in_archive": 1,
                    "process_files_recursive": 1
                },
                "FUN_00107690": {
                    "error_handler": 1,
                    "set_variable_values": 1,
                    "write_archive": 3
                },
                "FUN_00107c10": {
                    "clean_up": 1,
                    "cleanup": 1,
                    "empty_function": 1,
                    "fatal_error": 1,
                    "initialize": 1
                },
                "__errno_location": {
                    "get_error_location": 1
                },
                "__s": {
                    "__s": 1,
                    "basename1": 1,
                    "char_pointer_3": 1,
                    "char_ptr_s": 1,
                    "char_ptr_var1": 2,
                    "char_ptr_var_s": 2,
                    "char_var1": 4,
                    "char_var_1": 1,
                    "filename_1": 1,
                    "str1": 5,
                    "str_s": 1,
                    "string1": 1,
                    "string_var1": 1,
                    "temp_str_var": 1,
                    "temp_string1": 1
                },
                "__s_00": {
                    "__s_00": 1,
                    "basename2": 1,
                    "char_pointer_4": 1,
                    "char_ptr_s_00": 1,
                    "char_ptr_var2": 2,
                    "char_ptr_var_s00": 1,
                    "char_ptr_var_s_00": 1,
                    "char_var2": 4,
                    "char_var_2": 1,
                    "filename_2": 1,
                    "str2": 5,
                    "str_s_00": 1,
                    "string2": 1,
                    "string_var2": 1,
                    "temp_str_var2": 1,
                    "temp_string2": 1
                },
                "ar_emul_default_append": {
                    "default_append": 1
                },
                "ar_emul_default_replace": {
                    "default_replace": 1
                },
                "bVar16": {
                    "b_var16": 1,
                    "bool_value": 1,
                    "bool_var": 3,
                    "bool_var1": 1,
                    "bool_var16": 12,
                    "bool_var_1": 2,
                    "byte_var16": 1,
                    "replace_success": 1,
                    "temp_bool": 1,
                    "temp_flag": 1
                },
                "bVar17": {
                    "b_var17": 1,
                    "bool_var_2": 1,
                    "byte_value_1": 1,
                    "byte_var": 1,
                    "byte_var17": 13,
                    "byte_var2": 1,
                    "byte_var3": 2,
                    "byte_var_2": 1,
                    "step": 1,
                    "temp_byte": 1,
                    "temp_byte2": 1
                },
                "bVar2": {
                    "b_var2": 1,
                    "byte_value": 1,
                    "byte_var": 2,
                    "byte_var2": 16,
                    "byte_var_1": 1,
                    "flag": 1,
                    "is_match": 1,
                    "temp_byte": 1
                },
                "bfd_fatal": {
                    "handle_fatal_error": 1
                },
                "bfd_openr": {
                    "open_read_bfd": 1
                },
                "dcgettext": {
                    "get_translated_text": 1
                },
                "do_ar_emul_append_constprop_0": {
                    "emulate_ar_append_constprop": 1
                },
                "fatal": {
                    "handle_fatal_error": 1
                },
                "filename_cmp": {
                    "compare_filenames": 1
                },
                "free": {
                    "free_memory": 1
                },
                "get_pos_bfd": {
                    "get_positioned_bfd": 1
                },
                "iVar3": {
                    "comparison_result": 1,
                    "i_var3": 1,
                    "index": 1,
                    "index_var": 1,
                    "int_var": 2,
                    "int_var3": 14,
                    "integer_value": 1,
                    "integer_var_1": 1,
                    "temp_int": 1,
                    "temp_var1": 1
                },
                "in_stack_00000078": {
                    "file_buf": 1,
                    "file_count": 1,
                    "in_stack_00000078": 6,
                    "in_stack_var1": 2,
                    "in_stack_var78": 1,
                    "local_var1": 1,
                    "long_in_stack_var78": 1,
                    "long_var2": 1,
                    "long_var_4": 1,
                    "pos_value": 1,
                    "stack_val1": 1,
                    "stack_value_1": 1,
                    "stack_var1": 4,
                    "temp_stack_param1": 1,
                    "var_in_stack1": 1
                },
                "in_stack_00000108": {
                    "buffer_size": 1,
                    "in_stack_00000108": 6,
                    "in_stack_var108": 1,
                    "in_stack_var2": 2,
                    "local_var2": 1,
                    "long_in_stack_var108": 1,
                    "long_var3": 1,
                    "long_var_5": 1,
                    "max_file_count": 1,
                    "max_pos_value": 1,
                    "stack_val2": 1,
                    "stack_value_2": 1,
                    "stack_var2": 4,
                    "temp_stack_param2": 1,
                    "var_in_stack2": 1
                },
                "lVar10": {
                    "current_ptr": 1,
                    "current_value": 1,
                    "l_var10": 1,
                    "long_value_1": 1,
                    "long_var1": 2,
                    "long_var10": 14,
                    "long_var_1": 2,
                    "temp_long": 1,
                    "temp_var3": 1
                },
                "lVar11": {
                    "l_var11": 1,
                    "long_value_2": 1,
                    "long_var11": 14,
                    "long_var2": 2,
                    "long_var_2": 2,
                    "prev_value": 1,
                    "previous_ptr": 1,
                    "temp_long2": 1,
                    "temp_var4": 1
                },
                "normalize": {
                    "normalize_filename": 1
                },
                "param_1": {
                    "arg1": 6,
                    "config_param": 1,
                    "file_list": 1,
                    "file_path": 1,
                    "function_param_1": 1,
                    "input_file": 2,
                    "input_files": 1,
                    "input_param": 1,
                    "param1": 3,
                    "param_1": 5,
                    "param_address": 1,
                    "param_ptr": 1,
                    "ptr_param": 1,
                    "variable_1": 1
                },
                "param_2": {
                    "arg2": 6,
                    "file_count": 1,
                    "file_size": 1,
                    "function_param_2": 1,
                    "input_file_size": 1,
                    "input_value": 1,
                    "long_param": 1,
                    "num_files": 1,
                    "param2": 4,
                    "param_2": 6,
                    "param_len": 1,
                    "size_param": 1,
                    "variable_2": 1
                },
                "param_7": {
                    "another_param": 1,
                    "archive_file": 1,
                    "arg7": 2,
                    "char_dbl_ptr_var9": 1,
                    "file_extensions": 1,
                    "file_names": 1,
                    "function_param_7": 1,
                    "input_param_2": 1,
                    "output_file_list": 1,
                    "output_files": 1,
                    "param7": 3,
                    "param_7": 6,
                    "param_ptr": 1,
                    "param_ptr7": 1,
                    "param_var7": 1,
                    "temp_arg": 1
                },
                "param_9": {
                    "another_param2": 1,
                    "arg9": 2,
                    "flags": 1,
                    "function_param_9": 1,
                    "output_param": 1,
                    "param9": 3,
                    "param_9": 6,
                    "param_var": 1,
                    "param_var9": 2,
                    "result": 2,
                    "result_status": 1,
                    "return_val": 1,
                    "temp_param9": 1,
                    "undefined8_var1": 1
                },
                "pcVar6": {
                    "char_pointer1": 1,
                    "char_pointer_1": 1,
                    "char_pointer_var_1": 1,
                    "char_ptr1": 1,
                    "char_ptr6": 4,
                    "char_ptr_var6": 6,
                    "char_var_1": 1,
                    "current_ptr": 1,
                    "filename1": 1,
                    "pc_var6": 1,
                    "pointer_char_var6": 1,
                    "pointer_to_char_var": 1,
                    "ptr_char_var6": 1,
                    "ptr_var6": 1,
                    "temp_char_ptr": 1,
                    "temp_ptr_var2": 1
                },
                "pcVar7": {
                    "char_pointer2": 1,
                    "char_pointer_2": 1,
                    "char_pointer_var_2": 1,
                    "char_ptr2": 1,
                    "char_ptr7": 4,
                    "char_ptr_var7": 6,
                    "char_var_2": 1,
                    "filename2": 1,
                    "pc_var7": 1,
                    "pointer_char_var7": 1,
                    "pointer_to_char_var2": 1,
                    "ptr_char_var7": 1,
                    "ptr_var7": 1,
                    "temp_char_ptr2": 1,
                    "temp_ptr": 1,
                    "temp_ptr_var3": 1
                },
                "piVar5": {
                    "errno_location": 1,
                    "error_ptr": 1,
                    "int_pointer": 1,
                    "int_ptr": 2,
                    "int_ptr5": 4,
                    "int_ptr_var5": 6,
                    "integer_pointer": 1,
                    "pi_var5": 1,
                    "pointer_var": 1,
                    "pointer_var5": 1,
                    "pointer_var_1": 1,
                    "ptr_int_var5": 1,
                    "ptr_var5": 1,
                    "temp_int_ptr": 1,
                    "temp_ptr_var": 1
                },
                "ppcVar14": {
                    "char_dbl_ptr_var4": 1,
                    "char_double_pointer_var_3": 1,
                    "char_pointer_array_1": 1,
                    "char_pointer_pointer1": 1,
                    "char_ptr_ptr1": 1,
                    "char_ptr_ptr14": 4,
                    "char_ptr_ptr_var14": 4,
                    "current_filename_ptr": 1,
                    "double_ptr_var14": 1,
                    "file_entry_ptr": 1,
                    "filename_list_ptr": 1,
                    "pointer_pointer_char_var14": 1,
                    "pointer_to_pointer_to_char_var1": 1,
                    "ppc_var14": 1,
                    "ptr_ptr_var14": 1,
                    "temp_char_ptr_ptr2": 1,
                    "temp_ptr_ptr_var2": 1
                },
                "ppcVar15": {
                    "char_dbl_ptr_var7": 1,
                    "char_double_pointer_var_6": 1,
                    "char_pointer_array_4": 1,
                    "char_pointer_pointer2": 1,
                    "char_ptr_ptr15": 4,
                    "char_ptr_ptr4": 1,
                    "char_ptr_ptr_var15": 4,
                    "double_var15": 1,
                    "next_filename_ptr": 1,
                    "pointer_pointer_char_var15": 1,
                    "ppc_var15": 1,
                    "prev_file_ptr": 1,
                    "ptr_ptr_char_var3": 1,
                    "temp_char_ptr_ptr3": 1,
                    "temp_filename_ptr": 1,
                    "temp_ptr_ptr_var3": 1
                },
                "ppcVar8": {
                    "char_dbl_ptr_var8": 1,
                    "char_double_pointer_var_1": 1,
                    "char_pointer_array": 1,
                    "char_pointer_pointer": 1,
                    "char_ptr_ptr": 1,
                    "char_ptr_ptr8": 4,
                    "char_ptr_ptr_var8": 4,
                    "double_ptr_var8": 1,
                    "filename_ptr": 1,
                    "pointer_pointer_char_var8": 1,
                    "pointer_to_pointer_to_char_var": 1,
                    "ppc_var8": 1,
                    "ptr_ptr": 1,
                    "ptr_ptr_char_var8": 1,
                    "ptr_ptr_var8": 1,
                    "temp_char_ptr_ptr": 1,
                    "temp_ptr_ptr": 1,
                    "temp_ptr_ptr_var": 1
                },
                "sVar4": {
                    "length": 2,
                    "s_var4": 1,
                    "size_t_var4": 1,
                    "size_value": 1,
                    "size_var": 3,
                    "size_var4": 13,
                    "size_var_1": 1,
                    "string_size": 1,
                    "temp_size": 1
                },
                "stat": {
                    "get_status": 1
                },
                "uVar1": {
                    "return_value": 1,
                    "temp": 1,
                    "u_var1": 1,
                    "undefined": 1,
                    "undefined_value_1": 1,
                    "undefined_var1": 18,
                    "undefined_var_1": 1
                },
                "uVar12": {
                    "default_dependency": 1,
                    "temp_data": 1,
                    "temp_var2": 1,
                    "temp_var5": 1,
                    "u_var12": 1,
                    "undefined_value_3": 1,
                    "undefined_var12": 14,
                    "undefined_var3": 2,
                    "undefined_var_2": 1,
                    "undefined_var_3": 1
                },
                "uVar13": {
                    "max_filename_length": 1,
                    "temp_len": 1,
                    "temp_ulong": 1,
                    "u_var13": 1,
                    "ulong_value": 1,
                    "ulong_var": 4,
                    "ulong_var13": 14,
                    "ulong_var_1": 1
                },
                "uVar9": {
                    "normalized_filename": 1,
                    "temp_result": 1,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "u_var9": 1,
                    "undefined_value_2": 1,
                    "undefined_var": 1,
                    "undefined_var2": 2,
                    "undefined_var9": 14,
                    "undefined_var_2": 1
                },
                "unaff_R12": {
                    "char_dbl_ptr_var6": 1,
                    "char_double_pointer_var_5": 1,
                    "char_pointer_array_3": 1,
                    "char_ptr_ptr3": 1,
                    "char_ptr_ptr_var_r12": 1,
                    "current_archive_item": 1,
                    "current_file_ptr": 1,
                    "dependency_ptr": 1,
                    "double_ptr_var_r12": 1,
                    "pointer_var3": 1,
                    "ptr_ptr_char_var2": 1,
                    "ptr_ptr_var_unaff_r12": 1,
                    "r12": 1,
                    "reg_unaff_r12": 1,
                    "temp_r12": 2,
                    "unaff_r12": 5,
                    "unaffected_r12": 3
                },
                "unaff_R13D": {
                    "archive_type": 1,
                    "dependency_count": 1,
                    "int_var_r13_d": 1,
                    "loop_index": 1,
                    "r13d": 1,
                    "reg_unaff_r13_d": 1,
                    "temp_r13_d": 2,
                    "uint_value": 1,
                    "uint_var": 3,
                    "uint_var1": 1,
                    "uint_var_1": 1,
                    "uint_var_r13_d": 1,
                    "uint_var_unaff_r13_d": 1,
                    "unaff_r13_d": 4,
                    "unaff_r13d": 1,
                    "unaffected_r13_d": 3
                },
                "unaff_R14": {
                    "archive_header": 1,
                    "archive_list": 1,
                    "file_list": 1,
                    "long_value_3": 1,
                    "long_var1": 1,
                    "long_var14": 1,
                    "long_var3": 2,
                    "long_var_3": 1,
                    "long_var_r14": 2,
                    "long_var_unaff_r14": 1,
                    "r14": 1,
                    "reg_unaff_r14": 1,
                    "temp_r14": 2,
                    "unaff_r14": 5,
                    "unaffected_r14": 3
                },
                "unaff_RBP": {
                    "archive_file_list": 1,
                    "char_dbl_ptr_var5": 1,
                    "char_double_pointer_var_4": 1,
                    "char_pointer_array_2": 1,
                    "char_ptr_ptr2": 1,
                    "char_ptr_ptr_var_rbp": 1,
                    "dependency": 1,
                    "double_ptr_var_rbp": 1,
                    "file_ptr": 1,
                    "filename_list": 1,
                    "pointer_var2": 1,
                    "ptr_ptr_char_var": 1,
                    "ptr_ptr_var_unaff_rbp": 1,
                    "rbp": 1,
                    "reg_unaff_rbp": 1,
                    "temp_rbp": 1,
                    "unaff_rbp": 5,
                    "unaffected_rbp": 3
                },
                "unaff_RBX": {
                    "archive_filename": 1,
                    "char_double_pointer_var_2": 1,
                    "char_pointer_5": 1,
                    "char_ptr3": 1,
                    "char_ptr_var3": 1,
                    "char_ptr_var_rbx": 2,
                    "current_file": 1,
                    "filename": 1,
                    "pointer_var1": 1,
                    "ptr_char_var": 1,
                    "ptr_var_unaff_rbx": 1,
                    "rbx": 1,
                    "reg_unaff_rbx": 1,
                    "temp_rbx": 2,
                    "unaff_rbx": 5,
                    "unaffected_rbx": 3
                },
                "write_archive": {
                    "write_archive": 1
                },
                "xmalloc": {
                    "custom_malloc": 1
                }
            },
            "called": [
                "FUN_00105830",
                "FUN_00105870",
                "FUN_00102130",
                "FUN_001028ed",
                "FUN_00102180",
                "FUN_00107c10",
                "FUN_00105af0",
                "FUN_00102170",
                "FUN_001058b0",
                "FUN_00102100",
                "FUN_00105ae0",
                "FUN_00107690",
                "FUN_00103172",
                "FUN_00102330",
                "FUN_00102230",
                "FUN_00102060",
                "FUN_001022c0",
                "FUN_00102943"
            ],
            "calling": [
                "FUN_001028ed"
            ],
            "code": "\n\n\nundefined8 process_files_001028ed(undefined8 arg1,long arg2)\n\n{\n  undefined undefined_var1;\n  byte byte_var2;\n  int int_var3;\n  size_t size_var4;\n  int *int_ptr_var5;\n  char *char_ptr_var6;\n  char *char_ptr_var7;\n  char **char_ptr_ptr8;\n  undefined8 undefined_var9;\n  long long_var10;\n  char *str1;\n  char *str2;\n  long long_var11;\n  undefined8 undefined_var12;\n  ulong ulong_var13;\n  char *unaff_rbx;\n  char **char_ptr_ptr_var14;\n  char **unaff_rbp;\n  char **unaff_r12;\n  uint unaff_r13_d;\n  char **char_ptr_ptr_var15;\n  long unaff_r14;\n  bool bool_var16;\n  byte byte_var17;\n  char **param_7;\n  undefined8 param_9;\n  long in_stack_00000078;\n  long in_stack_00000108;\n  \n  byte_var17 = 0;\ncode_r0x001028ed:\n  handle_fatal_error(unaff_rbx,arg2);\nLAB_001028f5:\n  undefined_var12 = DAT_0010d638;\n  if (unaff_r13_d != 3) {\n    while( true ) {\n      if ((undefined8 *)*unaff_r12 == (undefined8 *)0x0) goto LAB_0010571f;\n      int_var3 = compare_filenames(*(undefined8 *)*unaff_r12,undefined_var12);\n      if (int_var3 == 0) break;\n      unaff_r12 = (char **)(*unaff_r12 + 0xf0);\n    }\n    if (unaff_r13_d != 2) goto LAB_0010571f;\n    unaff_r12 = (char **)(*unaff_r12 + 0xf0);\n    goto LAB_0010571f;\n  }\n  long_var10 = *(long *)(unaff_r14 + 0xf0);\n  if (*(long *)(unaff_r14 + 0xf0) == 0) goto LAB_0010571f;\nLAB_00105670:\n  do {\n    long_var11 = long_var10;\n    long_var10 = *(long *)(long_var11 + 0xf0);\n  } while (long_var10 != 0);\n  unaff_r12 = (char **)(long_var11 + 0xf0);\n  unaff_rbx = *unaff_rbp;\n  if (DAT_0010d620 != 0) goto LAB_00105731;\nLAB_00105698:\n  undefined_var1 = DAT_0010d5f8;\n  unaff_r13_d = (uint)(DAT_0010d60c != 0);\n  arg2 = open_read_bfd(unaff_rbx,DAT_0010d5f0);\n  if (arg2 != 0) {\n    unaff_rbp = unaff_rbp + 1;\n    byte_var2 = emulate_ar_append_constprop(unaff_r12,arg2,unaff_r13_d,undefined_var1);\n    param_9._6_1_ = param_9._6_1_ | byte_var2;\n    char_ptr_var6 = *unaff_rbp;\n    do {\n      if (char_ptr_var6 == (char *)0x0) {\n        if (param_9._6_1_ == 0) {\n          DAT_0010d618 = 0;\n          return 0;\n        }\n        undefined_var12 = write_archive();\n        return undefined_var12;\n      }\n      char_ptr_ptr_var14 = *(char ***)(unaff_r14 + 0xf0);\n      unaff_r12 = param_7;\n      if (param_9._7_1_ == '\\0') {\n        char_ptr_ptr_var15 = param_7;\n        if (char_ptr_ptr_var14 != (char **)0x0) {\n          do {\n            if (DAT_0010d5f9 == '\\0') {\n              str1 = (char *)lbasename(*char_ptr_ptr_var14);\n              char_ptr_var7 = str1;\n              if (DAT_0010d5fa != '\\0') {\n                size_var4 = strlen(str1);\n                ulong_var13 = (ulong)*(byte *)(*(long *)(unaff_r14 + 8) + 0x1e);\n                if (ulong_var13 < size_var4) {\n                  char_ptr_var7 = (char *)custom_malloc(ulong_var13 + 1);\n                  long_var10 = *(long *)(unaff_r14 + 8);\n                  char_ptr_var6 = char_ptr_var7;\n                  for (ulong_var13 = (ulong)*(byte *)(long_var10 + 0x1e); ulong_var13 != 0; ulong_var13 = ulong_var13 - 1) {\n                    *char_ptr_var6 = *str1;\n                    str1 = str1 + (ulong)byte_var17 * -2 + 1;\n                    char_ptr_var6 = char_ptr_var6 + (ulong)byte_var17 * -2 + 1;\n                  }\n                  char_ptr_var7[*(byte *)(long_var10 + 0x1e)] = '\\0';\n                }\n                char_ptr_var6 = *unaff_rbp;\n                str1 = char_ptr_var7;\n                if (DAT_0010d5f9 == '\\0') goto LAB_00105611;\n                goto LAB_00102980;\n              }\n              char_ptr_var6 = *unaff_rbp;\n              if (DAT_0010d5f9 != '\\0') goto LAB_00102980;\nLAB_00105611:\n              str2 = (char *)lbasename(char_ptr_var6);\n              if (DAT_0010d5fa != '\\0') {\n                size_var4 = strlen(str2);\n                ulong_var13 = (ulong)*(byte *)(*(long *)(unaff_r14 + 8) + 0x1e);\n                char_ptr_var6 = str2;\n                str1 = char_ptr_var7;\n                if (ulong_var13 < size_var4) {\n                  char_ptr_var6 = (char *)custom_malloc(ulong_var13 + 1);\n                  long_var10 = *(long *)(unaff_r14 + 8);\n                  char_ptr_var7 = char_ptr_var6;\n                  for (ulong_var13 = (ulong)*(byte *)(long_var10 + 0x1e); ulong_var13 != 0; ulong_var13 = ulong_var13 - 1) {\n                    *char_ptr_var7 = *str2;\n                    str2 = str2 + (ulong)byte_var17 * -2 + 1;\n                    char_ptr_var7 = char_ptr_var7 + (ulong)byte_var17 * -2 + 1;\n                  }\n                  char_ptr_var6[*(byte *)(long_var10 + 0x1e)] = '\\0';\n                }\n                goto LAB_00102980;\n              }\n              int_var3 = compare_filenames(str2,char_ptr_var7);\n            }\n            else {\n              char_ptr_var6 = *unaff_rbp;\n              str1 = *char_ptr_ptr_var14;\nLAB_00102980:\n              int_var3 = compare_filenames(char_ptr_var6,str1);\n            }\n            if ((int_var3 == 0) && (char_ptr_ptr_var14[0x1c] != (char *)0x0)) {\n              if (_DAT_0010d644 != 0) {\n                int_var3 = get_status(*unaff_rbp,(get_status *)&stack0x000000b0);\n                if (int_var3 != 0) {\n                  int_ptr_var5 = get_error_location();\n                  if (*int_ptr_var5 != 2) {\n                    handle_fatal_error(*unaff_rbp);\nLAB_00102b7e:\n                    char_ptr_var6 = *char_ptr_ptr_var14;\n                    undefined_var12 = get_translated_text(0,\"internal get_status error on %s\",5);\n                    handle_fatal_error(undefined_var12,char_ptr_var6);\n                    free_memory(unaff_rbp);\n                    return 0;\n                  }\n                  goto LAB_0010577e;\n                }\n                char_ptr_ptr8 = (char **)char_ptr_ptr_var14[0x1d];\n                if ((char **)char_ptr_ptr_var14[0x1d] == (char **)0x0) {\n                  char_ptr_ptr8 = char_ptr_ptr_var14;\n                }\n                int_var3 = (**(code **)(char_ptr_ptr8[1] + 0x1e8))(char_ptr_ptr_var14,&stack0x00000020);\n                if (int_var3 != 0) goto LAB_00102b7e;\n                if (in_stack_00000108 <= in_stack_00000078) goto LAB_0010577e;\n              }\n              undefined_var12 = get_positioned_bfd(param_7,2,*char_ptr_ptr_var14);\n              if (DAT_0010d620 == 0) {\nLAB_00102ae2:\n                char_ptr_var6 = *unaff_rbp;\n                bool_var16 = DAT_0010d60c != 0;\n                long_var10 = open_read_bfd(char_ptr_var6,DAT_0010d5f0);\n                if (long_var10 == 0) {\n                  handle_fatal_error(char_ptr_var6,0);\n                  goto LAB_00102b3e;\n                }\n                byte_var2 = default_replace(undefined_var12,long_var10,bool_var16);\n              }\n              else {\n                undefined_var9 = normalize_filename(*unaff_rbp);\n                int_var3 = compare_filenames(undefined_var9,\"__.LIBDEP\");\n                if (int_var3 != 0) goto LAB_00102ae2;\nLAB_00102b3e:\n                byte_var2 = default_replace(undefined_var12,DAT_0010d620,DAT_0010d60c != 0);\n              }\n              if (byte_var2 != 0) {\n                *char_ptr_ptr_var15 = *(char **)(*char_ptr_ptr_var15 + 0xf0);\n                param_9._6_1_ = byte_var2;\n              }\n              goto LAB_0010577e;\n            }\n            char_ptr_ptr_var15 = char_ptr_ptr_var14 + 0x1e;\n            char_ptr_ptr_var14 = (char **)char_ptr_ptr_var14[0x1e];\n          } while (char_ptr_ptr_var14 != (char **)0x0);\n          goto LAB_0010564c;\n        }\n        unaff_r13_d = DAT_0010d640;\n        if (DAT_0010d640 != 0) goto LAB_001028f5;\n      }\n      else {\nLAB_0010564c:\n        unaff_r13_d = DAT_0010d640;\n        if (DAT_0010d640 != 0) goto LAB_001028f5;\n        long_var10 = *(long *)(unaff_r14 + 0xf0);\n        if (*(long *)(unaff_r14 + 0xf0) != 0) goto LAB_00105670;\n      }\nLAB_0010571f:\n      unaff_rbx = *unaff_rbp;\n      if (DAT_0010d620 == 0) goto LAB_00105698;\nLAB_00105731:\n      undefined_var12 = normalize_filename(unaff_rbx);\n      int_var3 = compare_filenames(undefined_var12,\"__.LIBDEP\");\n      if (int_var3 != 0) goto code_r0x0010574f;\n      byte_var2 = default_append(unaff_r12,DAT_0010d620,DAT_0010d60c != 0,DAT_0010d5f8);\n      param_9._6_1_ = byte_var2 | param_9._6_1_;\nLAB_0010577e:\n      unaff_rbp = unaff_rbp + 1;\n      char_ptr_var6 = *unaff_rbp;\n    } while( true );\n  }\n  goto code_r0x001028ed;\ncode_r0x0010574f:\n  unaff_rbx = *unaff_rbp;\n  goto LAB_00105698;\n}\n\n",
            "current_name": "process_files_001028ed",
            "entrypoint": "0x001028ed",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001028ed": "process_files_001028ed",
                "__errno_location": "get_error_location",
                "__s": "str1",
                "__s_00": "str2",
                "ar_emul_default_append": "default_append",
                "ar_emul_default_replace": "default_replace",
                "bVar16": "bool_var16",
                "bVar17": "byte_var17",
                "bVar2": "byte_var2",
                "bfd_fatal": "handle_fatal_error",
                "bfd_openr": "open_read_bfd",
                "dcgettext": "get_translated_text",
                "do_ar_emul_append_constprop_0": "emulate_ar_append_constprop",
                "fatal": "handle_fatal_error",
                "filename_cmp": "compare_filenames",
                "free": "free_memory",
                "get_pos_bfd": "get_positioned_bfd",
                "iVar3": "int_var3",
                "lVar10": "long_var10",
                "lVar11": "long_var11",
                "normalize": "normalize_filename",
                "param_1": "arg1",
                "param_2": "arg2",
                "pcVar6": "char_ptr_var6",
                "pcVar7": "char_ptr_var7",
                "piVar5": "int_ptr_var5",
                "ppcVar14": "char_ptr_ptr_var14",
                "ppcVar15": "char_ptr_ptr_var15",
                "ppcVar8": "char_ptr_ptr8",
                "sVar4": "size_var4",
                "stat": "get_status",
                "uVar1": "undefined_var1",
                "uVar12": "undefined_var12",
                "uVar13": "ulong_var13",
                "uVar9": "undefined_var9",
                "unaff_R12": "unaff_r12",
                "unaff_R13D": "unaff_r13_d",
                "unaff_R14": "unaff_r14",
                "unaff_RBP": "unaff_rbp",
                "unaff_RBX": "unaff_rbx",
                "xmalloc": "custom_malloc"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102943": {
            "additional_data": {
                "DAT_0010d618": {
                    "counter": 5,
                    "data_counter": 11,
                    "data_flag": 3,
                    "data_initialized": 3,
                    "data_reset_flag": 1,
                    "data_variable": 1,
                    "global_data": 1
                },
                "FUN_00102943": {
                    "initialize_counter": 3,
                    "initialize_data": 21,
                    "initialize_global_data": 1,
                    "reset_counter": 4,
                    "reset_data": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_001028ed",
                "FUN_00105570"
            ],
            "code": "\nvoid initialize_global_data_00102943(void)\n\n{\n  DAT_0010d618 = 0;\n  return;\n}\n\n",
            "current_name": "initialize_global_data_00102943",
            "entrypoint": "0x00102943",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102943": "initialize_global_data_00102943"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102ba1": {
            "additional_data": {
                "FUN_00102ba1": {
                    "clean_up_memory": 1,
                    "deallocate_and_return": 1,
                    "deallocate_memory": 6,
                    "deallocate_memory_and_return_pointer": 1,
                    "deallocate_memory_and_shift_return_address": 1,
                    "deallocated_memory": 1,
                    "decompiled_free_function": 1,
                    "free_and_clear_memory": 1,
                    "free_and_reset_retaddr": 1,
                    "free_and_return": 1,
                    "free_and_return64": 1,
                    "free_and_return_address": 2,
                    "free_and_return_zero": 1,
                    "free_and_shift": 3,
                    "free_and_shift_retaddr": 1,
                    "free_and_shift_return_value": 1,
                    "free_memory_and_return": 4,
                    "free_memory_and_return_zero": 1,
                    "release_memory": 1,
                    "reverse_and_free_memory": 1
                },
                "auVar1": {
                    "new_register": 1,
                    "return_value": 3,
                    "updated_return_value": 1
                },
                "unaff_RBP": {
                    "allocated_memory": 1,
                    "buffer": 1,
                    "memory_address": 4,
                    "memory_block": 7,
                    "memory_block_ptr": 1,
                    "memory_pointer": 4,
                    "memory_ptr": 2,
                    "memory_to_deallocate": 1,
                    "memory_to_free": 4,
                    "pointer": 1,
                    "pointer_to_allocated_memory": 1,
                    "pointer_to_memory": 1,
                    "ptr_to_free": 1,
                    "ptr_to_free_address": 1,
                    "ptr_to_free_mem": 1
                },
                "unaff_retaddr": {
                    "return_address": 31
                }
            },
            "called": [
                "FUN_00102030"
            ],
            "calling": [
                "FUN_001057a0"
            ],
            "code": "\nundefined  [16] deallocate_memory_and_shift_return_address_00102ba1(void)\n\n{\n  undefined return_value [16];\n  void *memory_block;\n  ulong return_address;\n  \n  free(memory_block);\n  return_value._8_8_ = 0;\n  return_value._0_8_ = return_address;\n  return return_value << 0x40;\n}\n\n",
            "current_name": "deallocate_memory_and_shift_return_address_00102ba1",
            "entrypoint": "0x00102ba1",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102ba1": "deallocate_memory_and_shift_return_address_00102ba1",
                "auVar1": "return_value",
                "unaff_RBP": "memory_block",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102bb0": {
            "additional_data": {
                "FUN_00102bb0": {
                    "copy_string": 2,
                    "copy_string_limited": 1,
                    "copy_string_with_limit": 2,
                    "extract_substring": 1,
                    "reverse_and_allocate_memory": 1,
                    "reverse_and_allocate_substring": 1,
                    "reverse_copy_string": 1,
                    "reverse_string": 22
                },
                "auVar7": {
                    "result": 1,
                    "return_object": 1,
                    "return_value": 23,
                    "return_values": 1,
                    "return_variable": 1
                },
                "bVar6": {
                    "byte_flag": 2,
                    "copy_direction": 1,
                    "decrement": 1,
                    "flag": 1,
                    "increment": 1,
                    "is_neg": 1,
                    "is_negative": 9,
                    "is_reverse": 2,
                    "is_reversed": 6,
                    "iteration_flag": 1,
                    "loop_variable": 1,
                    "reverse_index": 1
                },
                "in_RAX": {
                    "input_string": 30,
                    "source_string": 1
                },
                "lVar1": {
                    "string_length": 1
                },
                "puVar3": {
                    "allocated_memory": 1,
                    "allocated_substring": 1,
                    "copied_string": 3,
                    "new_string": 2,
                    "output_string": 1,
                    "result_ptr": 1,
                    "reversed_string": 18
                },
                "puVar5": {
                    "copy_pointer": 1,
                    "current_substring_char": 1,
                    "dest_pointer": 1,
                    "dest_ptr": 1,
                    "destination_pointer": 4,
                    "destination_ptr": 1,
                    "destination_string": 2,
                    "new_string_pointer": 1,
                    "new_string_ptr": 1,
                    "p_destination": 1,
                    "reversed_char": 1,
                    "reversed_index": 1,
                    "reversed_ptr": 1,
                    "reversed_string_pointer": 3,
                    "reversed_string_pos": 1,
                    "reversed_string_ptr": 4,
                    "target_ptr": 1,
                    "temp_string": 1
                },
                "sVar2": {
                    "input_length": 8,
                    "source_length": 1,
                    "str_length": 1,
                    "string_length": 19
                },
                "uVar4": {
                    "limit": 3,
                    "limit_length": 1,
                    "max_characters": 1,
                    "max_chars": 2,
                    "max_copy_length": 1,
                    "max_length": 14,
                    "max_reverse_length": 1,
                    "max_reversed_length": 1,
                    "max_substring_length": 1,
                    "substring_length": 2
                },
                "unaff_RBP": {
                    "base_pointer": 19,
                    "base_ptr": 3,
                    "frame_pointer": 1,
                    "frame_ptr": 1,
                    "previous_rbp": 1,
                    "saved_rbp": 1,
                    "saved_register": 1,
                    "stack_base": 2,
                    "stack_frame_pointer": 1
                },
                "unaff_RBX": {
                    "current_char": 9,
                    "current_char_pointer": 1,
                    "iterator": 1,
                    "original_string": 1,
                    "p_source": 1,
                    "source": 2,
                    "source_pointer": 7,
                    "source_ptr": 3,
                    "source_string": 4,
                    "src_pointer": 1,
                    "substring": 1
                },
                "unaff_retaddr": {
                    "return_address": 17
                }
            },
            "called": [
                "FUN_00102230",
                "FUN_00102180"
            ],
            "calling": [
                "FUN_00105830"
            ],
            "code": "\nundefined  [16] reverse_copy_string_00102bb0(void)\n\n{\n  long string_length;\n  char *input_string;\n  size_t string_length;\n  undefined *reversed_string;\n  ulong max_length;\n  undefined *current_char;\n  long base_pointer;\n  undefined *destination_pointer;\n  byte is_negative;\n  undefined return_value [16];\n  undefined8 return_address;\n  \n  is_negative = 0;\n  string_length = strlen(input_string);\n  max_length = (ulong)*(byte *)(*(long *)(base_pointer + 8) + 0x1e);\n  reversed_string = current_char;\n  if (max_length < string_length) {\n    reversed_string = (undefined *)xmalloc(max_length + 1);\n    string_length = *(long *)(base_pointer + 8);\n    destination_pointer = reversed_string;\n    for (max_length = (ulong)*(byte *)(string_length + 0x1e); max_length != 0; max_length = max_length - 1) {\n      *destination_pointer = *current_char;\n      current_char = current_char + (ulong)is_negative * -2 + 1;\n      destination_pointer = destination_pointer + (ulong)is_negative * -2 + 1;\n    }\n    reversed_string[*(byte *)(string_length + 0x1e)] = 0;\n  }\n  return_value._8_8_ = return_address;\n  return_value._0_8_ = reversed_string;\n  return return_value;\n}\n\n",
            "current_name": "reverse_copy_string_00102bb0",
            "entrypoint": "0x00102bb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102bb0": "reverse_copy_string_00102bb0",
                "auVar7": "return_value",
                "bVar6": "is_negative",
                "in_RAX": "input_string",
                "lVar1": "string_length",
                "puVar3": "reversed_string",
                "puVar5": "destination_pointer",
                "sVar2": "string_length",
                "uVar4": "max_length",
                "unaff_RBP": "base_pointer",
                "unaff_RBX": "current_char",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102bf5": {
            "additional_data": {
                "DAT_0010d5d8": {
                    "file_handle": 2,
                    "file_handler": 1,
                    "file_pointer": 5,
                    "file_ptr": 2,
                    "file_to_close": 2
                },
                "DAT_0010d5e0": {
                    "bfd_cache_enabled": 1,
                    "cache_active": 1,
                    "cache_exists": 1,
                    "cache_initialized": 2,
                    "cache_status": 3,
                    "flag_cache_open": 1,
                    "has_cache": 1,
                    "is_cache_open": 1,
                    "some_condition": 1
                },
                "DAT_0010d618": {
                    "file_path": 7,
                    "file_to_delete": 1,
                    "file_to_remove": 1,
                    "filename": 1
                },
                "FILE": {
                    "file": 1
                },
                "FUN_00102bf5": {
                    "clean_up_function": 1,
                    "cleanup": 4,
                    "cleanup_and_close": 4,
                    "cleanup_function": 4,
                    "cleanup_resources": 7,
                    "close_and_cleanup": 2,
                    "close_and_delete_files": 1,
                    "close_cache_and_file": 3,
                    "close_file_and_remove": 2,
                    "close_file_and_unlink": 3
                },
                "_unnamed_variable_1": {
                    "cache_status": 1
                },
                "_unnamed_variable_2": {
                    "file_pointer": 1
                },
                "_unnamed_variable_3": {
                    "file_path": 1
                },
                "bfd_cache_close": {
                    "close_bfd_cache": 1,
                    "close_cache": 1
                },
                "cleanup_resources": {
                    "void": 1
                },
                "fclose": {
                    "close_file": 5
                },
                "remove_file": {
                    "void": 1
                },
                "unlink_if_ordinary": {
                    "delete_file": 3,
                    "remove_file": 17,
                    "remove_file_if_exists": 1,
                    "unlink_file": 1,
                    "unlink_if_not_special": 1
                }
            },
            "called": [
                "FUN_00102050",
                "FUN_00102140",
                "FUN_001023d0"
            ],
            "calling": [
                "FUN_00107730"
            ],
            "code": "\nvoid cleanup_resources_00102bf5(void)\n\n{\n  if (DAT_0010d5e0 != 0) {\n    close_bfd_cache();\n  }\n  if (DAT_0010d5d8 != (file *)0x0) {\n    close_file(DAT_0010d5d8);\n  }\n  remove_file(DAT_0010d618);\n  return;\n}\n\n",
            "current_name": "cleanup_resources_00102bf5",
            "entrypoint": "0x00102bf5",
            "imported": false,
            "improved": true,
            "renaming": {
                "FILE": "file",
                "FUN_00102bf5": "cleanup_resources_00102bf5",
                "bfd_cache_close": "close_bfd_cache",
                "fclose": "close_file",
                "unlink_if_ordinary": "remove_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102c25": {
            "additional_data": {
                "DATA_0010d618": {
                    "output_filename": 1
                },
                "DAT_0010d5d8": {
                    "file_pointer": 1,
                    "output_file": 4,
                    "output_file_pointer": 1
                },
                "DAT_0010d600": {
                    "flag": 1,
                    "should_set_times": 1
                },
                "DAT_0010d618": {
                    "file_name": 2,
                    "output_file_name": 2
                },
                "DAT_0010d638": {
                    "default_error_message": 2,
                    "error_message": 1,
                    "error_message_value": 1,
                    "file_path": 1
                },
                "FUN_00102c25": {
                    "extract_and_save_archive": 8,
                    "extract_and_save_archive_contents": 1,
                    "extract_and_save_archive_file": 1,
                    "extract_and_save_file": 1,
                    "extract_and_save_file_from_archive": 1,
                    "extract_and_write_archive": 4,
                    "extract_and_write_file": 2,
                    "extract_archive": 6,
                    "extract_archive_contents": 1,
                    "extract_archived_file": 1,
                    "extract_file_from_archive": 1,
                    "process_archive": 1
                },
                "FUN_00105a20": {
                    "dcgettext": 1,
                    "set_times": 1
                },
                "FUN_00107690": {
                    "fatal": 1,
                    "seek_bfd": 1
                },
                "FUN_00107c80": {
                    "handle_error": 1,
                    "handle_stat_error": 1
                },
                "PUVar9": {
                    "param_array": 1
                },
                "_DAT_0010d600": {
                    "set_times_flag": 2,
                    "use_times": 1
                },
                "___ptr": {
                    "buffer": 1
                },
                "__errno_location": {
                    "get_error_number_location": 1
                },
                "__mode_t": {
                    "mode_type": 1
                },
                "__n": {
                    "buffer_size": 2,
                    "bytes_read": 24,
                    "bytes_to_read": 1,
                    "bytes_written": 1,
                    "read_bytes": 2,
                    "read_size": 1
                },
                "__ptr": {
                    "buffer": 25,
                    "buffer_ptr": 4,
                    "data_buffer": 1,
                    "read_buffer": 1
                },
                "bfd_bread": {
                    "read_from_file": 1,
                    "read_input_file": 1
                },
                "bfd_seek": {
                    "seek_input_file": 1,
                    "seek_to_offset": 1
                },
                "chmod": {
                    "change_file_permissions": 2
                },
                "dcgettext": {
                    "get_error_string": 1,
                    "get_text": 1
                },
                "fatal": {
                    "handle_error": 1,
                    "print_error_message": 1
                },
                "fclose": {
                    "close_file": 2
                },
                "filename_cmp": {
                    "compare_filenames": 2
                },
                "free": {
                    "free_memory": 2
                },
                "fwrite": {
                    "write_to_file": 2
                },
                "iVar1": {
                    "cmp_result": 2,
                    "comparison_result": 16,
                    "filename_comparison": 2,
                    "filename_comparison_result": 8
                },
                "iVar2": {
                    "callback_result": 1,
                    "error_code": 7,
                    "error_flag": 1,
                    "function_result": 2,
                    "internal_error_code": 1,
                    "internal_error_result": 1,
                    "result": 3,
                    "return_code": 1,
                    "return_value": 2,
                    "stat_error": 7,
                    "status": 3
                },
                "iVar3": {
                    "errno": 1
                },
                "lVar7": {
                    "counter": 1,
                    "index": 1,
                    "loop_counter": 19,
                    "loop_variable": 3
                },
                "malloc": {
                    "allocate_memory": 1
                },
                "open_output_file_isra_0": {
                    "open_output_file": 2
                },
                "param_1": {
                    "input_filename": 1,
                    "output_file_path": 1,
                    "string": 1
                },
                "param_11": {
                    "archive_permissions": 1,
                    "file_mode": 2,
                    "file_permissions": 7,
                    "mode": 8,
                    "new_permissions": 1,
                    "output_file_mode": 1,
                    "output_file_permissions": 1,
                    "permissions": 7
                },
                "param_12": {
                    "archive_file_size": 2,
                    "archive_size": 19,
                    "file_size": 5,
                    "input_size": 1,
                    "size": 1
                },
                "param_2": {
                    "file_size": 1,
                    "input_file_size": 1,
                    "param_2": 1
                },
                "param_3": {
                    "param3": 1
                },
                "param_4": {
                    "param4": 1
                },
                "param_7": {
                    "buffer": 2,
                    "error_code_array": 1,
                    "file_ext": 1,
                    "file_names": 1,
                    "file_permissions": 2,
                    "flags": 1,
                    "mode_flags": 1,
                    "out_buffer": 1,
                    "output": 1,
                    "output_buffer": 1,
                    "output_directory_path": 1,
                    "output_file_mode": 1,
                    "output_file_path": 1,
                    "output_file_permissions": 1,
                    "output_modes": 1,
                    "output_permissions": 1,
                    "param_array": 2,
                    "param_flags": 1,
                    "permissions": 8,
                    "stat_flags": 1
                },
                "pcVar4": {
                    "error_description": 1,
                    "error_message": 9,
                    "error_string": 18
                },
                "piVar3": {
                    "errno": 1,
                    "errno_location": 11,
                    "errno_location_result": 1,
                    "errno_pointer": 2,
                    "errno_ptr": 3,
                    "error_code": 2,
                    "error_location": 1,
                    "error_number": 5,
                    "error_number_ptr": 1
                },
                "plVar8": {
                    "current_archive_entry": 1,
                    "current_entry": 6,
                    "current_file": 10,
                    "current_file_ptr": 1,
                    "current_pointer": 3,
                    "current_ptr": 1,
                    "file": 1,
                    "file_index": 1,
                    "file_pointer": 3,
                    "file_pointer_2": 1,
                    "pointer_var8": 1,
                    "result": 1,
                    "result_ptr": 1
                },
                "pplVar6": {
                    "archive": 1,
                    "archive_entry": 1,
                    "archive_header": 1,
                    "archive_object": 1,
                    "archive_pointer": 1,
                    "archive_ptr": 4,
                    "callback_data": 1,
                    "callback_pointer": 1,
                    "file_information_ptr": 1,
                    "file_pointers": 1,
                    "file_ptr": 1,
                    "file_ptr_array": 1,
                    "function_pointers": 3,
                    "header_ptr": 1,
                    "library": 1,
                    "library_info": 1,
                    "pointer_array": 4,
                    "pointer_to_pointer_to_archive_file_data": 1,
                    "possible_archive_data": 1
                },
                "puVar9": {
                    "current_permission": 3,
                    "loop_ptr": 1,
                    "param7_iterator": 1,
                    "param_7_iterator": 2,
                    "param_array": 2,
                    "param_array_iterator": 1,
                    "param_buffer": 1,
                    "param_pointer": 1,
                    "param_ptr": 5,
                    "parameter": 1,
                    "parameter_pointer": 1,
                    "parameter_ptr": 1,
                    "pointer": 1,
                    "pointer_to_zeroes": 1,
                    "pointer_var9": 1,
                    "ptr": 3,
                    "temp_ptr": 1
                },
                "sVar11": {
                    "buffer_size": 2,
                    "bytes_read": 2,
                    "bytes_to_copy": 1,
                    "bytes_to_process": 4,
                    "bytes_to_read": 5,
                    "bytes_to_write": 4,
                    "bytes_written": 5,
                    "read_bytes": 1,
                    "read_size": 1,
                    "remaining_bytes": 1,
                    "remaining_size": 1,
                    "write_count": 1,
                    "write_size": 3
                },
                "set_times": {
                    "set_file_times": 1,
                    "set_file_timestamps": 1
                },
                "strerror": {
                    "get_error_message": 1
                },
                "uVar10": {
                    "bytes_processed": 13,
                    "bytes_read": 3,
                    "bytes_remaining": 1,
                    "bytes_written": 8,
                    "counter_variable": 1,
                    "current_offset": 1,
                    "total_bytes_read": 1
                },
                "uVar5": {
                    "error_code": 2,
                    "error_message": 20,
                    "error_text": 1,
                    "error_var": 1,
                    "gettext_result": 1,
                    "message": 1,
                    "text_message": 1,
                    "translation": 1,
                    "translation_string": 1
                },
                "unaff_RBX": {
                    "archive": 3,
                    "archive_contents": 1,
                    "archive_data": 3,
                    "archive_file_data": 1,
                    "archive_files": 1,
                    "archive_header": 1,
                    "archive_info": 1,
                    "archive_root": 1,
                    "file_array": 1,
                    "file_data": 1,
                    "file_info": 2,
                    "file_information": 1,
                    "file_paths": 1,
                    "file_pointer": 1,
                    "file_ptr": 1,
                    "function_parameters": 1,
                    "input_files": 2,
                    "pointer_rbx": 1,
                    "unaff_ptr": 1,
                    "unaff_rbx": 1
                }
            },
            "called": [
                "FUN_00102430",
                "FUN_00102030",
                "FUN_00102140",
                "FUN_00107c80",
                "FUN_00102550",
                "FUN_00102170",
                "FUN_00107690",
                "FUN_00102580",
                "FUN_00102060",
                "FUN_00102230",
                "FUN_00102540",
                "FUN_00102510",
                "FUN_00105a20"
            ],
            "calling": [
                "FUN_00107740"
            ],
            "code": "\n\n\nlong * extract_and_save_archive_contents_00102c25(void)\n\n{\n  int comparison_result;\n  int error_code;\n  int *errno_location;\n  char *error_string;\n  undefined8 error_message;\n  long **archive_ptr;\n  void *buffer;\n  size_t bytes_read;\n  long loop_counter;\n  long **archive_data;\n  long *current_file;\n  undefined4 *param_ptr;\n  ulong bytes_processed;\n  size_t bytes_written;\n  undefined4 *permissions;\n  mode_type mode;\n  ulong archive_size;\n  \n  param_ptr = permissions;\n  for (loop_counter = 0x24; loop_counter != 0; loop_counter = loop_counter + -1) {\n    *param_ptr = 0;\n    param_ptr = param_ptr + 1;\n  }\n  archive_ptr = (long **)archive_data[0x1d];\n  if ((long **)archive_data[0x1d] == (long **)0x0) {\n    archive_ptr = archive_data;\n  }\n  error_code = (*(code *)archive_ptr[1][0x3d])();\n  if (error_code != 0) {\n    current_file = *archive_data;\n    error_message = get_error_string(0,\"internal stat error on %s\",5);\n    error_code = print_error_message(error_message,current_file);\n    error_message = DAT_0010d638;\n    if (error_code == 3) {\n      for (; *current_file != 0; current_file = (long *)(*current_file + 0xf0)) {\n      }\n    }\n    else {\n      for (; (undefined8 *)*current_file != (undefined8 *)0x0; current_file = (long *)(*current_file + 0xf0)) {\n        comparison_result = compare_filenames(*(undefined8 *)*current_file,error_message);\n        if (comparison_result == 0) {\n          if (error_code != 2) {\n            return current_file;\n          }\n          return (long *)(*current_file + 0xf0);\n        }\n      }\n    }\n    return current_file;\n  }\n  seek_input_file();\n  DAT_0010d5d8 = (FILE *)0x0;\n  if (archive_size == 0) {\nLAB_00102ca2:\n    DAT_0010d5d8 = (FILE *)open_output_file(*archive_data);\n  }\n  else {\n    bytes_processed = 0;\n    buffer = (void *)xallocate_memory(0x2000);\n    do {\n      bytes_written = archive_size - bytes_processed;\n      if (0x2000 < bytes_written) {\n        bytes_written = 0x2000;\n      }\n      bytes_read = read_from_file(buffer,bytes_written);\n      if (bytes_written != bytes_read) {\nLAB_00102c78:\n        archive_data = (long **)*archive_data[0x1d];\n        error_message = get_error_string(0,\"%s is not a valid archive\",5);\n        print_error_message(error_message,archive_data);\n        goto LAB_00102ca2;\n      }\n      if (DAT_0010d5d8 == (FILE *)0x0) {\n        DAT_0010d5d8 = (FILE *)open_output_file(*archive_data);\n      }\n      bytes_written = write_to_file(buffer,1,bytes_read,DAT_0010d5d8);\n      if (bytes_written != bytes_read) {\n        errno_location = get_error_number_location();\n        error_string = get_error_message(*errno_location);\n        print_error_message(\"%s: %s\",DAT_0010d618,error_string);\n        goto LAB_00102c78;\n      }\n      bytes_processed = bytes_processed + bytes_read;\n    } while (bytes_processed < archive_size);\n    free_memory(buffer);\n  }\n  close_file(DAT_0010d5d8);\n  error_string = DAT_0010d618;\n  DAT_0010d5d8 = (FILE *)0x0;\n  change_file_permissions(DAT_0010d618,mode);\n  if (_DAT_0010d600 != 0) {\n    set_file_times(error_string,permissions);\n  }\n  DAT_0010d618 = (char *)0x0;\n  return (long *)0x0;\n}\n\n",
            "current_name": "extract_and_save_archive_contents_00102c25",
            "entrypoint": "0x00102c25",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102c25": "extract_and_save_archive_contents_00102c25",
                "__errno_location": "get_error_number_location",
                "__mode_t": "mode_type",
                "__n": "bytes_read",
                "__ptr": "buffer",
                "bfd_bread": "read_from_file",
                "bfd_seek": "seek_input_file",
                "chmod": "change_file_permissions",
                "dcgettext": "get_error_string",
                "fatal": "print_error_message",
                "fclose": "close_file",
                "filename_cmp": "compare_filenames",
                "free": "free_memory",
                "fwrite": "write_to_file",
                "iVar1": "comparison_result",
                "iVar2": "error_code",
                "iVar3": "errno",
                "lVar7": "loop_counter",
                "malloc": "allocate_memory",
                "open_output_file_isra_0": "open_output_file",
                "param_1": "output_file_path",
                "param_11": "mode",
                "param_12": "archive_size",
                "param_7": "permissions",
                "pcVar4": "error_string",
                "piVar3": "errno_location",
                "plVar8": "current_file",
                "pplVar6": "archive_ptr",
                "puVar9": "param_ptr",
                "sVar11": "bytes_written",
                "set_times": "set_file_times",
                "strerror": "get_error_message",
                "uVar10": "bytes_processed",
                "uVar5": "error_message",
                "unaff_RBX": "archive_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102cd9": {
            "additional_data": {
                "FUN_00102cd9": {
                    "find_entry_in_binary": 2,
                    "find_file": 1,
                    "find_file_in_memory": 2,
                    "find_file_location": 1,
                    "find_filename_in_memory": 1,
                    "find_matching_address": 7,
                    "find_matching_entry": 8,
                    "find_matching_file": 1,
                    "find_matching_file_entry": 1,
                    "find_matching_pointer": 5,
                    "find_matching_value": 1,
                    "search_for_string": 1
                },
                "iVar1": {
                    "cmp_result": 3,
                    "comparison_result": 22,
                    "filename_comparison_result": 1
                },
                "in_EAX": {
                    "comparison_type": 1,
                    "comparison_value": 2,
                    "condition": 1,
                    "count": 1,
                    "counter": 1,
                    "entry_type": 2,
                    "file_count": 1,
                    "function_type": 1,
                    "index": 1,
                    "input": 2,
                    "input_number": 1,
                    "input_value": 5,
                    "loop_counter": 1,
                    "mode": 3,
                    "num_iterations": 1,
                    "parameter": 2,
                    "search_mode": 1,
                    "status": 2,
                    "value": 1
                },
                "param_7": {
                    "comparison_string": 2,
                    "comparison_value": 2,
                    "desired_entry": 1,
                    "desired_filename": 1,
                    "filename": 3,
                    "search_filename": 1,
                    "search_string": 1,
                    "search_target": 1,
                    "search_value": 2,
                    "target": 1,
                    "target_address": 3,
                    "target_file_name": 3,
                    "target_filename": 8,
                    "target_value": 2
                },
                "unaff_RBX": {
                    "address_array": 1,
                    "address_list": 1,
                    "address_pointer": 2,
                    "address_ptr": 1,
                    "address_ptr_array": 1,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "current_address": 1,
                    "current_entry": 3,
                    "entry": 2,
                    "entry_pointer": 4,
                    "entry_ptr": 1,
                    "file_entry_pointer": 1,
                    "file_list": 2,
                    "file_pointer": 3,
                    "memory_pointer": 1,
                    "pointer": 2,
                    "pointer_array": 1,
                    "pointer_list": 2
                }
            },
            "called": [
                "FUN_00102100"
            ],
            "calling": [
                "FUN_00105870"
            ],
            "code": "\nlong * find_matching_file_entry_00102cd9(void)\n\n{\n  int input_value;\n  int comparison_result;\n  long *entry_pointer;\n  undefined8 target_filename;\n  \n  target_filename = DAT_0010d638;\n  if (input_value == 3) {\n    for (; *entry_pointer != 0; entry_pointer = (long *)(*entry_pointer + 0xf0)) {\n    }\n  }\n  else {\n    for (; (undefined8 *)*entry_pointer != (undefined8 *)0x0; entry_pointer = (long *)(*entry_pointer + 0xf0)) {\n      comparison_result = filename_cmp(*(undefined8 *)*entry_pointer,target_filename);\n      if (comparison_result == 0) {\n        if (input_value != 2) {\n          return entry_pointer;\n        }\n        return (long *)(*entry_pointer + 0xf0);\n      }\n    }\n  }\n  return entry_pointer;\n}\n\n",
            "current_name": "find_matching_file_entry_00102cd9",
            "entrypoint": "0x00102cd9",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102cd9": "find_matching_file_entry_00102cd9",
                "iVar1": "comparison_result",
                "in_EAX": "input_value",
                "param_7": "target_filename",
                "unaff_RBX": "entry_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102d2f": {
            "additional_data": {
                "DAT_0010d5e0": {
                    "dat_flag1": 1,
                    "exit_status": 1,
                    "global_variable1": 1
                },
                "DAT_0010d5f8": {
                    "dat_flag": 1,
                    "is_corrupt": 1,
                    "is_corrupt_time_data": 2,
                    "time_corrupt": 1
                },
                "DAT_0010d618": {
                    "close_result": 1,
                    "dat_flag2": 1,
                    "global_variable2": 1
                },
                "FUN_00102d2f": {
                    "generate_file_information": 1,
                    "log_file_data": 1,
                    "print_file_attributes": 1,
                    "print_file_data": 1,
                    "print_file_info": 19,
                    "print_file_information": 5,
                    "print_file_metadata": 1,
                    "process_file": 2
                },
                "__format": {
                    "corrupt_data_error_msg": 1,
                    "corrupt_data_message": 1,
                    "corrupt_time_format": 2,
                    "corrupt_time_message": 1,
                    "error_message": 1,
                    "error_msg": 1,
                    "error_msg_format": 4,
                    "time_data": 1,
                    "time_data_corrupt_format": 2,
                    "time_data_format": 1,
                    "time_error_message": 2,
                    "time_error_msg": 1,
                    "time_format": 3,
                    "time_format_string": 1
                },
                "bVar1": {
                    "error_byte": 2,
                    "error_code": 1,
                    "error_flag": 6,
                    "fatal_byte": 1,
                    "fatal_error": 5,
                    "fatal_error_byte": 1,
                    "fatal_flag": 1,
                    "status_flag": 1
                },
                "bfd_close": {
                    "close_file": 1
                },
                "bfd_fatal": {
                    "print_fatal_error": 1
                },
                "bfd_set_archive_head": {
                    "set_archive_header": 1
                },
                "cStack0000000000000016": {
                    "file_perm1": 1,
                    "file_permission1": 1,
                    "file_permission_bit8": 1,
                    "flag1": 1,
                    "flag1_char": 1,
                    "flag2": 1,
                    "has_read_perm": 1,
                    "has_readable_permission": 1,
                    "has_user_execute_permission": 1,
                    "invalid_char1": 1,
                    "is_executable": 1,
                    "permission1": 1,
                    "permission_bit7": 1,
                    "permission_char1": 4,
                    "permission_read": 1,
                    "read_permission": 1,
                    "set_bit0x100": 1,
                    "setuid": 1,
                    "user_permission_symbol": 1,
                    "user_permissions": 1,
                    "user_read_permission": 2
                },
                "cStack0000000000000017": {
                    "file_perm2": 1,
                    "file_permission2": 1,
                    "file_permission_bit7": 1,
                    "flag2": 1,
                    "flag2_char": 1,
                    "flag3": 1,
                    "group_permission_symbol": 1,
                    "group_permissions": 1,
                    "has_group_execute_permission": 1,
                    "has_writable_permission": 1,
                    "has_write_perm": 1,
                    "invalid_char2": 1,
                    "is_writable": 1,
                    "permission2": 1,
                    "permission_bit6": 1,
                    "permission_char2": 4,
                    "permission_write": 1,
                    "set_bit0x80": 1,
                    "setgid": 1,
                    "user_write_permission": 2,
                    "write_permission": 1
                },
                "cStack0000000000000018": {
                    "is_readable": 1,
                    "is_regular_file": 1
                },
                "cStack0000000000000019": {
                    "file_perm4": 1,
                    "file_permission4": 1,
                    "file_permission_bit5": 1,
                    "flag4": 1,
                    "flag4_char": 1,
                    "flag5": 1,
                    "group_read_permission": 2,
                    "has_executable_permission": 1,
                    "has_read_perm_owner": 1,
                    "has_user_write_permission": 1,
                    "invalid_char4": 1,
                    "permission4": 1,
                    "permission_bit4": 1,
                    "permission_char4": 4,
                    "permission_read_group": 1,
                    "read_permission": 1,
                    "set_bit0x20": 1,
                    "setuid_symbol": 1,
                    "user_permissions_extended": 1,
                    "user_read": 1
                },
                "cStack000000000000001a": {
                    "file_perm5": 1,
                    "file_permission5": 1,
                    "file_permission_bit4": 1,
                    "flag5": 1,
                    "flag5_char": 1,
                    "flag6": 1,
                    "group_permissions_extended": 1,
                    "group_write_permission": 2,
                    "has_group_write_permission": 1,
                    "has_system_permissions": 1,
                    "has_write_perm_owner": 1,
                    "invalid_char5": 1,
                    "is_setgid": 1,
                    "permission5": 1,
                    "permission_bit3": 1,
                    "permission_char5": 4,
                    "permission_write_group": 1,
                    "set_bit0x10": 1,
                    "setgid_symbol": 1,
                    "user_write": 1,
                    "write_permission": 1
                },
                "cStack000000000000001b": {
                    "execute_permission": 1,
                    "file_perm6": 1,
                    "file_permission6": 1,
                    "file_permission_bit3": 1,
                    "flag6": 1,
                    "flag6_char": 1,
                    "flag7": 1,
                    "group_execute_permission": 2,
                    "has_exec_perm_owner": 1,
                    "has_other_write_permission": 1,
                    "has_setuid_permission": 1,
                    "invalid_char6": 1,
                    "is_setuid": 1,
                    "other_permissions_extended": 1,
                    "permission6": 1,
                    "permission_bit2": 1,
                    "permission_char6": 4,
                    "permission_execute_group": 1,
                    "set_bit8": 1,
                    "sticky_symbol": 1,
                    "user_execute": 1
                },
                "cStack000000000000001c": {
                    "file_perm7": 1,
                    "file_permission7": 1,
                    "file_permission_bit2": 1,
                    "flag7": 1,
                    "flag7_char": 1,
                    "flag8": 1,
                    "group_read": 1,
                    "has_read_perm_group": 1,
                    "has_setgid_permission": 1,
                    "has_user_read_permission": 1,
                    "invalid_char7": 1,
                    "is_setuid": 1,
                    "other_read_permission": 2,
                    "permission7": 1,
                    "permission_bit1": 1,
                    "permission_char7": 4,
                    "permission_read_others": 1,
                    "read_permission": 1,
                    "set_bit4": 1,
                    "user_permissions_special": 1
                },
                "cStack000000000000001d": {
                    "file_perm8": 1,
                    "file_permission8": 1,
                    "file_permission_bit1": 1,
                    "flag8": 1,
                    "flag8_char": 1,
                    "flag9": 1,
                    "group_permissions_special": 1,
                    "group_write": 1,
                    "has_group_read_permission": 1,
                    "has_sticky_permission": 1,
                    "has_write_perm_group": 1,
                    "invalid_char8": 1,
                    "is_sticky": 1,
                    "other_write_permission": 2,
                    "permission8": 1,
                    "permission_bit0": 1,
                    "permission_char8": 4,
                    "permission_write_others": 1,
                    "set_bit2": 1,
                    "write_permission": 1
                },
                "cStack000000000000001e": {
                    "execute_permission": 1,
                    "file_perm9": 1,
                    "file_permission9": 1,
                    "file_permission_bit0": 1,
                    "flag10": 1,
                    "flag9": 1,
                    "flag9_char": 1,
                    "group_execute": 1,
                    "has_exec_perm_group": 1,
                    "has_other_permissions": 1,
                    "has_other_read_permission": 1,
                    "invalid_char9": 1,
                    "is_sticky": 1,
                    "other_execute_permission": 2,
                    "other_permissions_special": 1,
                    "permission9": 1,
                    "permission_char9": 4,
                    "permission_execute_others": 1,
                    "set_bit1": 1,
                    "special_permission_bit1": 1
                },
                "cStack000000000000001f": {
                    "flag": 1,
                    "is_file_symbolic_link": 1,
                    "is_gid": 1
                },
                "cVar2": {
                    "archive_flag": 1,
                    "archive_head": 1,
                    "archive_head_char": 1,
                    "archive_head_flag": 1,
                    "archive_head_result": 5,
                    "archive_head_status": 1,
                    "archive_header_result": 1,
                    "result": 7,
                    "return_flag": 1
                },
                "dcgettext": {
                    "get_string": 1,
                    "get_translated_string": 1
                },
                "dup": {
                    "duplicate_file_descriptor": 1
                },
                "fprintf": {
                    "write_formatted_string": 1
                },
                "fputc": {
                    "write_character": 1
                },
                "fputs": {
                    "write_string": 1
                },
                "fputs_stdout": {
                    "write_string_to_stdout": 1
                },
                "free": {
                    "release_memory": 1
                },
                "iVar3": {
                    "rename_result": 14,
                    "rename_status": 1,
                    "smart_rename_result": 1,
                    "status": 2
                },
                "in_stack_00000018": {
                    "execute_permission": 1,
                    "file_perm3": 1,
                    "file_permission3": 1,
                    "file_permission_bit6": 1,
                    "file_type": 1,
                    "flag3": 1,
                    "flag3_char": 1,
                    "flag4": 1,
                    "has_exec_perm": 1,
                    "has_other_execute_permission": 1,
                    "invalid_char3": 1,
                    "is_executable": 1,
                    "is_symbolic_link": 1,
                    "other_permission_symbol": 1,
                    "other_permissions": 1,
                    "permission3": 1,
                    "permission_bit5": 1,
                    "permission_char3": 4,
                    "permission_execute": 1,
                    "set_bit0x40": 1,
                    "sticky_bit": 1,
                    "user_execute_permission": 2
                },
                "in_stack_00000070": {
                    "block_size": 1,
                    "dir_size": 1,
                    "file_gid": 2,
                    "file_group": 3,
                    "file_group_id": 2,
                    "file_owner": 1,
                    "file_size": 8,
                    "file_size_low": 1,
                    "file_user_id": 1,
                    "group_id": 2,
                    "inode": 1,
                    "number2": 1,
                    "owner_id": 1,
                    "uid": 1,
                    "user_id": 3,
                    "year": 1
                },
                "in_stack_00000080": {
                    "file_last_modified": 1,
                    "file_size": 15,
                    "file_timestamp": 1,
                    "last_modification": 1,
                    "last_modified_time": 2,
                    "modification_time": 2,
                    "number3": 1,
                    "size": 1,
                    "time": 1,
                    "time_data_str": 1,
                    "timestamp": 4
                },
                "mallocedData": {
                    "file_data": 1
                },
                "outputFile": {
                    "file_output": 1
                },
                "smart_rename_constprop_0": {
                    "rename_file": 1
                },
                "sprintf": {
                    "format_string": 1
                },
                "stack0x00000016": {
                    "buffer16": 1
                },
                "stack0x00000020": {
                    "buffer32": 1,
                    "corrupt_time": 1,
                    "error_msg": 1,
                    "time_data": 1
                },
                "uStack0000000000000015": {
                    "file_perm": 1,
                    "file_permission": 5,
                    "file_permission1": 1,
                    "file_permission_bit9": 1,
                    "file_type": 4,
                    "file_type_byte": 1,
                    "file_type_char": 2,
                    "file_type_char1": 1,
                    "file_type_symbol": 1,
                    "permission": 1,
                    "permission_code": 1,
                    "type_char": 1
                },
                "uStack0000000000000016": {
                    "file_owner_read": 1
                },
                "uStack0000000000000017": {
                    "file_owner_write": 1
                },
                "uStack0000000000000019": {
                    "group_read": 1
                },
                "uStack000000000000001a": {
                    "group_write": 1
                },
                "uStack000000000000001b": {
                    "group_execute": 1
                },
                "uStack000000000000001c": {
                    "others_read": 1
                },
                "uStack000000000000001d": {
                    "others_write": 1
                },
                "uStack000000000000001e": {
                    "others_execute": 1
                },
                "uStack000000000000001f": {
                    "extra_flag": 2,
                    "extra_permission": 1,
                    "flag10": 1,
                    "flag10_byte": 1,
                    "formatting_flag": 1,
                    "has_sticky_bit": 1,
                    "invalid_char10": 1,
                    "other_read": 1,
                    "padding_char": 1,
                    "permission_char10": 1,
                    "print_error": 1,
                    "special_permission_bit0": 1,
                    "unknown_value": 1,
                    "unused_flag": 1,
                    "zero": 2
                },
                "uStack0000000000000068": {
                    "file_info_flags": 1,
                    "file_mode": 10,
                    "file_permission": 1,
                    "file_permission_mask": 1,
                    "file_permissions": 9,
                    "file_perms_and_flags": 1,
                    "permission": 2,
                    "permission_flag": 1,
                    "permission_info": 1,
                    "permissions": 1
                },
                "uStack000000000000006c": {
                    "blocks_allocated": 1,
                    "day": 1,
                    "file_hard_links": 1,
                    "file_id": 1,
                    "file_links": 3,
                    "file_owner": 3,
                    "file_owner_id": 2,
                    "file_size": 2,
                    "file_size_high": 1,
                    "file_uid": 2,
                    "hard_links": 1,
                    "link_count": 2,
                    "num_link": 1,
                    "num_links": 2,
                    "number1": 1,
                    "number_of_links": 2,
                    "total_links": 1,
                    "user_id": 1
                },
                "uVar4": {
                    "file_permission_bits": 1,
                    "file_permissions": 1,
                    "file_type": 19
                },
                "unaff_R12": {
                    "archive_flag": 1,
                    "constant_data": 1,
                    "corrupt_time_data": 1,
                    "file_attributes": 2,
                    "file_characteristics": 1,
                    "file_flag": 1,
                    "file_flags": 3,
                    "file_header": 1,
                    "file_info_flag": 1,
                    "file_permissions": 2,
                    "file_properties": 1,
                    "file_stat": 1,
                    "file_type": 2,
                    "flag": 4,
                    "flag1": 1,
                    "is_archive": 1,
                    "is_archive_file": 1,
                    "is_executable": 2,
                    "is_symbolic_link": 1,
                    "length": 1,
                    "symbolic_link_target": 1,
                    "time_data": 1
                },
                "unaff_R13": {
                    "allocated_memory": 1,
                    "archived_file_buffer": 1,
                    "buffer": 4,
                    "buffer1": 3,
                    "buffer_address": 1,
                    "data": 2,
                    "file_data": 1,
                    "file_info": 2,
                    "file_info_memory": 1,
                    "file_info_ptr": 1,
                    "file_path": 1,
                    "file_paths_copy": 1,
                    "heap_allocated_memory": 1,
                    "heap_memory": 1,
                    "malloc_ptr": 3,
                    "malloced_data": 1,
                    "malloced_memory": 1,
                    "ptr1": 2,
                    "temporary_buffer": 1,
                    "unaff_memory": 1,
                    "unuse_mem1": 1
                },
                "unaff_R14D": {
                    "dup_fd": 1,
                    "dup_flag": 1,
                    "dup_result": 3,
                    "dup_var": 1,
                    "duplicate_fd": 1,
                    "duplicate_file_descriptor": 2,
                    "duplicated_descriptor": 1,
                    "duplication": 1,
                    "fd": 1,
                    "file_descriptor": 18,
                    "file_duplicate": 1
                },
                "unaff_RBP": {
                    "file": 1,
                    "file_pointer": 6,
                    "file_ptr": 2,
                    "file_stream": 2,
                    "log_file_pointer": 1,
                    "output_file": 18,
                    "output_file_pointer": 1
                },
                "unaff_RBX": {
                    "args": 1,
                    "argv": 1,
                    "file_arguments": 1,
                    "file_content": 1,
                    "file_data": 6,
                    "file_info": 9,
                    "file_information": 1,
                    "file_lines": 3,
                    "file_names": 1,
                    "file_path": 1,
                    "file_paths": 4,
                    "log_file": 1,
                    "parameters": 1
                },
                "xexit": {
                    "exit_program": 1
                }
            },
            "called": [
                "FUN_00102030",
                "FUN_00102480",
                "FUN_00105bc0",
                "FUN_00102490",
                "FUN_00107c10",
                "FUN_001021d0",
                "FUN_00102d2f",
                "FUN_001020f0"
            ],
            "calling": [
                "FUN_00102d2f"
            ],
            "code": "\nvoid print_file_info_00102d2f(void)\n\n{\n  byte error_flag;\n  char result;\n  int rename_result;\n  char *error_msg_format;\n  uint file_type;\n  char **file_info;\n  FILE *output_file;\n  long flag;\n  void *buffer;\n  int file_descriptor;\n  undefined file_permission;\n  char permission_char1;\n  char permission_char2;\n  char permission_char3;\n  char permission_char4;\n  char permission_char5;\n  char permission_char6;\n  char permission_char7;\n  char permission_char8;\n  char permission_char9;\n  undefined zero;\n  uint file_mode;\n  uint file_owner;\n  uint file_size;\n  undefined8 file_size;\n  \n  do {\n    error_flag = print_fatal_error();\n    *(uint *)((long)file_info + 0x44) = *(uint *)((long)file_info + 0x44) | 0x100000;\n    if ((DAT_0010d5f8 != '\\0') || ((*(byte *)(flag + 0x49) & 0x10) != 0)) {\n      *(byte *)((long)file_info + 0x49) = error_flag | 0x10;\n    }\n    result = set_archive_header();\n  } while (result == '\\0');\n  duplicate_file_descriptor(file_descriptor);\n  result = close_file();\n  if (result != '\\0') {\n    DAT_0010d5e0 = 0;\n    DAT_0010d618 = 0;\n    close_file();\n    rename_result = rename_file();\n    if (rename_result == 0) {\n      release_memory(buffer);\n      release_memory(output_file);\n      return;\n    }\n                    \n    exit_program(1);\n  }\n  print_fatal_error();\n  error_msg_format = (char *)get_string(0,\"<time data corrupt>\",5);\n  format_string(&error_msg,error_msg_format);\n  file_type = file_mode & 0xf000;\n  if (file_type == 0x4000) {\n    file_permission = 100;\n  }\n  else if (file_type == 0xa000) {\n    file_permission = 0x6c;\n  }\n  else if (file_type == 0x6000) {\n    file_permission = 0x62;\n  }\n  else if (file_type == 0x2000) {\n    file_permission = 99;\n  }\n  else if (file_type == 0xc000) {\n    file_permission = 0x73;\n  }\n  else {\n    file_permission = 0x70;\n    if (file_type != 0x1000) {\n      file_permission = 0x2d;\n    }\n  }\n  permission_char1 = (-((file_mode & 0x100) == 0) & 0xbbU) + 0x72;\n  permission_char2 = (-((file_mode & 0x80) == 0) & 0xb6U) + 0x77;\n  permission_char3 = (-((file_mode & 0x40) == 0) & 0xb5U) + 0x78;\n  permission_char4 = (-((file_mode & 0x20) == 0) & 0xbbU) + 0x72;\n  permission_char5 = (-((file_mode & 0x10) == 0) & 0xb6U) + 0x77;\n  permission_char6 = (-((file_mode & 8) == 0) & 0xb5U) + 0x78;\n  permission_char7 = (-((file_mode & 4) == 0) & 0xbbU) + 0x72;\n  permission_char8 = (-((file_mode & 2) == 0) & 0xb6U) + 0x77;\n  permission_char9 = (-((file_mode & 1) == 0) & 0xb5U) + 0x78;\n  if ((file_mode & 0x800) != 0) {\n    if (permission_char3 == 'x') {\n      permission_char3 = 's';\n    }\n    else {\n      permission_char3 = 'S';\n    }\n  }\n  if ((file_mode & 0x400) != 0) {\n    if (permission_char6 == 'x') {\n      permission_char6 = 's';\n    }\n    else {\n      permission_char6 = 'S';\n    }\n  }\n  if ((file_mode & 0x200) != 0) {\n    if (permission_char9 == 'x') {\n      permission_char9 = 't';\n    }\n    else {\n      permission_char9 = 'T';\n    }\n  }\n  zero = 0;\n  write_formatted_string(output_file,\"%s %ld/%ld %6lu %s \",&buffer16,(ulong)file_owner,\n          (ulong)file_size,file_size,&error_msg,(ulong)file_mode)\n  ;\n  write_string(*file_info,output_file);\n  if ((char)flag != '\\0') {\n    if ((*(byte *)((long)file_info + 0x49) & 0x10) == 0) {\n      if (file_info[0xb] != (char *)0x0) {\n        write_formatted_string(output_file,\" 0x%lx\");\n      }\n    }\n    else if (file_info[0xc] != (char *)0x0) {\n      write_formatted_string(output_file,\" 0x%lx\");\n    }\n  }\n  write_character(10,output_file);\n  return;\n}\n\n",
            "current_name": "print_file_info_00102d2f",
            "entrypoint": "0x00102d2f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102d2f": "print_file_info_00102d2f",
                "__format": "error_msg_format",
                "bVar1": "error_flag",
                "bfd_close": "close_file",
                "bfd_fatal": "print_fatal_error",
                "bfd_set_archive_head": "set_archive_header",
                "cStack0000000000000016": "permission_char1",
                "cStack0000000000000017": "permission_char2",
                "cStack0000000000000019": "permission_char4",
                "cStack000000000000001a": "permission_char5",
                "cStack000000000000001b": "permission_char6",
                "cStack000000000000001c": "permission_char7",
                "cStack000000000000001d": "permission_char8",
                "cStack000000000000001e": "permission_char9",
                "cVar2": "result",
                "dcgettext": "get_string",
                "dup": "duplicate_file_descriptor",
                "fprintf": "write_formatted_string",
                "fputc": "write_character",
                "fputs": "write_string",
                "free": "release_memory",
                "iVar3": "rename_result",
                "in_stack_00000018": "permission_char3",
                "in_stack_00000070": "file_size",
                "in_stack_00000080": "file_size",
                "smart_rename_constprop_0": "rename_file",
                "sprintf": "format_string",
                "stack0x00000016": "buffer16",
                "stack0x00000020": "error_msg",
                "uStack0000000000000015": "file_permission",
                "uStack000000000000001f": "zero",
                "uStack0000000000000068": "file_mode",
                "uStack000000000000006c": "file_owner",
                "uVar4": "file_type",
                "unaff_R12": "flag",
                "unaff_R13": "buffer",
                "unaff_R14D": "file_descriptor",
                "unaff_RBP": "output_file",
                "unaff_RBX": "file_info",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102d8c": {
            "additional_data": {
                "FUN_00102d8c": {
                    "format_and_print": 1,
                    "format_and_print_data": 2,
                    "format_and_print_file_info": 2,
                    "format_and_print_info": 2,
                    "formatted_and_printed_output": 1,
                    "print_file_attributes": 1,
                    "print_file_details": 2,
                    "print_file_info": 18,
                    "print_file_permission": 1
                },
                "__format": {
                    "corrupt_time": 1,
                    "corrupt_time_data_msg": 2,
                    "corrupt_time_data_string": 1,
                    "corrupt_time_format": 6,
                    "corrupted_time_message": 1,
                    "corrupted_time_string": 1,
                    "error_message": 6,
                    "error_msg": 2,
                    "time_error_message": 2,
                    "time_string_format": 1
                },
                "cStack0000000000000015": {
                    "permission_char": 1,
                    "permission_code": 1
                },
                "cStack0000000000000016": {
                    "char16": 1,
                    "flag2": 1,
                    "flag_2": 1,
                    "flag_bit6": 1,
                    "has_user_read_permission": 1,
                    "is_setuid": 1,
                    "permission_char0": 1,
                    "permission_char1": 3,
                    "permission_char2": 1,
                    "permission_char_1": 1,
                    "permission_char_4": 1,
                    "permission_char_read": 1,
                    "permission_flag1": 1,
                    "permission_r": 1,
                    "read_permission_flag": 1,
                    "symbol1": 2,
                    "user_read_flag": 1,
                    "user_read_permission_char": 1
                },
                "cStack0000000000000017": {
                    "char17": 1,
                    "flag3": 1,
                    "flag_3": 1,
                    "flag_bit7": 1,
                    "has_user_write_permission": 1,
                    "is_setgid": 1,
                    "permission_char1": 1,
                    "permission_char2": 3,
                    "permission_char3": 1,
                    "permission_char_2": 1,
                    "permission_char_3": 1,
                    "permission_char_write": 1,
                    "permission_flag2": 1,
                    "permission_w": 1,
                    "symbol2": 2,
                    "user_write_flag": 1,
                    "user_write_permission_char": 1,
                    "write_permission_flag": 1
                },
                "cStack0000000000000018": {
                    "permission_flag10": 1
                },
                "cStack0000000000000019": {
                    "char19": 1,
                    "flag5": 1,
                    "flag_4": 1,
                    "flag_bit5": 1,
                    "group_read_flag": 1,
                    "group_read_permission_char": 1,
                    "has_group_read_permission": 1,
                    "is_sticky": 1,
                    "permission_char3": 1,
                    "permission_char4": 3,
                    "permission_char_1": 1,
                    "permission_char_3": 1,
                    "permission_flag9": 1,
                    "permission_r": 1,
                    "symbol4": 2
                },
                "cStack000000000000001a": {
                    "char1a": 1,
                    "flag6": 1,
                    "flag_5": 1,
                    "flag_bit4": 1,
                    "group_write_flag": 1,
                    "group_write_permission_char": 1,
                    "has_group_write_permission": 1,
                    "is_owner_read": 1,
                    "permission_char4": 1,
                    "permission_char5": 3,
                    "permission_char_4": 1,
                    "permission_char_6": 1,
                    "permission_flag6": 1,
                    "permission_w": 1,
                    "symbol5": 2
                },
                "cStack000000000000001b": {
                    "char1b": 1,
                    "flag2": 1,
                    "flag7": 1,
                    "flag_6": 1,
                    "flag_bit3": 1,
                    "group_execute_flag": 1,
                    "group_execute_permission_char": 1,
                    "has_group_execute_permission": 1,
                    "is_owner_write": 1,
                    "permission_bit11": 1,
                    "permission_char5": 1,
                    "permission_char6": 3,
                    "permission_char7": 1,
                    "permission_char_5": 2,
                    "permission_char_read_group": 1,
                    "permission_flag4": 1,
                    "permission_symbol2": 2,
                    "permission_x": 1,
                    "sticky_bit_flag": 1,
                    "symbol6": 2
                },
                "cStack000000000000001c": {
                    "char1c": 1,
                    "flag8": 1,
                    "flag_7": 1,
                    "flag_bit2": 1,
                    "has_other_read_permission": 1,
                    "is_owner_execute": 1,
                    "other_read_permission_char": 1,
                    "others_read_flag": 1,
                    "permission_char6": 1,
                    "permission_char7": 3,
                    "permission_char_6": 1,
                    "permission_char_8": 1,
                    "permission_flag7": 1,
                    "permission_r": 1,
                    "symbol7": 2
                },
                "cStack000000000000001d": {
                    "char1d": 1,
                    "flag9": 1,
                    "flag_8": 1,
                    "flag_bit1": 1,
                    "has_other_write_permission": 1,
                    "is_group_read": 1,
                    "other_write_permission_char": 1,
                    "others_write_flag": 1,
                    "permission_char7": 1,
                    "permission_char8": 3,
                    "permission_char_7": 2,
                    "permission_flag8": 1,
                    "permission_w": 1,
                    "symbol8": 2
                },
                "cStack000000000000001e": {
                    "char1e": 1,
                    "flag10": 1,
                    "flag3": 1,
                    "flag_9": 1,
                    "flag_bit0": 1,
                    "has_other_execute_permission": 1,
                    "is_group_write": 1,
                    "other_execute_permission_char": 1,
                    "others_execute_flag": 1,
                    "permission_bit14": 1,
                    "permission_char10": 1,
                    "permission_char8": 1,
                    "permission_char9": 3,
                    "permission_char_8": 1,
                    "permission_char_9": 1,
                    "permission_char_execute_others": 1,
                    "permission_flag5": 1,
                    "permission_symbol3": 2,
                    "permission_x": 1,
                    "setuid_flag": 1,
                    "symbol9": 2
                },
                "cStack000000000000001f": {
                    "char1f": 1,
                    "flag_10": 1,
                    "is_group_execute": 1,
                    "null_byte": 1,
                    "tmp_flag": 1
                },
                "dcgettext": {
                    "get_localized_string": 1
                },
                "fprintf": {
                    "file_printf": 1,
                    "print_formatted": 2,
                    "write_formatted": 1
                },
                "fputc": {
                    "append_new_line": 1,
                    "file_put_char": 1,
                    "print_char": 1,
                    "write_character": 2
                },
                "fputs": {
                    "file_puts": 1,
                    "print_string": 1,
                    "write_string": 2
                },
                "param_19": {
                    "attributes": 1,
                    "file_attributes": 1,
                    "file_mode": 5,
                    "file_permission": 5,
                    "file_permissions": 15,
                    "flags": 1,
                    "mode": 1,
                    "permission_bits": 1
                },
                "param_20": {
                    "file_size": 25,
                    "param20": 1,
                    "size": 1,
                    "time_stamp": 1,
                    "timestamp": 1,
                    "value2": 1
                },
                "param_22": {
                    "file_modified_time": 1,
                    "file_name": 1,
                    "file_path": 1,
                    "file_size": 2,
                    "file_timestamp": 1,
                    "last_access_time": 1,
                    "last_modified_time": 1,
                    "modification_time": 2,
                    "param22": 1,
                    "time_data": 1,
                    "time_modified": 1,
                    "time_stamp": 2,
                    "timestamp": 14,
                    "value3": 1
                },
                "param_9": {
                    "c1": 1,
                    "char9": 1,
                    "execute_permission_flag": 1,
                    "flag1": 1,
                    "flag4": 1,
                    "flag_1": 1,
                    "flag_bit8": 1,
                    "flags": 1,
                    "has_permission": 1,
                    "has_user_execute_permission": 1,
                    "mode_rwx": 1,
                    "output_char1": 1,
                    "permission_bit9": 1,
                    "permission_char1": 1,
                    "permission_char2": 1,
                    "permission_char3": 3,
                    "permission_char_2": 1,
                    "permission_char_execute": 1,
                    "permission_flag3": 1,
                    "permission_symbol1": 2,
                    "permission_x": 1,
                    "symbol3": 2,
                    "user_execute_flag": 1,
                    "user_execute_permission_char": 1
                },
                "sprintf": {
                    "format_string": 1
                },
                "stack0x00000016": {
                    "time_string": 2
                },
                "stack0x00000020": {
                    "error_message": 2,
                    "formatted_error_message": 1,
                    "time_buffer": 1
                },
                "uStack0000000000000015": {
                    "corrupted_time_char": 1,
                    "file_permission": 1,
                    "file_permission_char": 1,
                    "file_type": 3,
                    "file_type_char": 4,
                    "file_type_symbol": 2,
                    "flag1": 1,
                    "permission_char": 1,
                    "permission_symbol": 1,
                    "prefix_char": 1,
                    "type_symbol": 1
                },
                "uStack000000000000001f": {
                    "extra_flag": 2,
                    "flag": 2,
                    "flag11": 1,
                    "flag4": 1,
                    "has_special_permission": 1,
                    "is_executable": 1,
                    "is_extra": 1,
                    "is_setgid": 1,
                    "is_symbolic_link": 1,
                    "print_extra_flag": 1,
                    "should_print_address": 2
                },
                "uStack000000000000006c": {
                    "curr_user_id": 1,
                    "current_time": 2,
                    "file_mode": 1,
                    "inode_number": 2,
                    "mode_info": 1,
                    "permission_code": 1,
                    "pid": 3,
                    "user_id": 2,
                    "user_owner": 1,
                    "user_permissions": 1,
                    "value1": 1
                },
                "uVar1": {
                    "file_perm_type": 1,
                    "file_permission_type": 1,
                    "file_type": 11,
                    "file_type_bits": 1,
                    "file_type_flag": 1,
                    "file_type_mask": 1,
                    "permission_mask": 1,
                    "permission_type": 3,
                    "upper_nibble": 2
                },
                "unaff_R12B": {
                    "additional_info": 1,
                    "additional_options": 1,
                    "check_flag": 1,
                    "flag": 1,
                    "has_additional_info": 1,
                    "has_data": 1,
                    "has_flag": 1,
                    "is_content_displayed": 1,
                    "is_executable": 6,
                    "is_flag_set": 1,
                    "is_hex_enabled": 1,
                    "is_hexadecimal": 2,
                    "is_reversed": 1,
                    "print_flag": 1,
                    "print_hex": 1,
                    "print_hex_flag": 2,
                    "should_print_address": 1,
                    "should_print_address_flag": 1,
                    "should_print_hex": 2,
                    "show_hex": 1,
                    "use_hex_format": 1
                },
                "unaff_RBP": {
                    "file": 1,
                    "file_pointer": 7,
                    "file_stream": 1,
                    "output_file": 21
                },
                "unaff_RBX": {
                    "file_buffer": 1,
                    "file_content": 7,
                    "file_contents": 4,
                    "file_data": 12,
                    "file_data_array": 1,
                    "file_info": 1,
                    "file_paths": 2,
                    "string_array": 1,
                    "strings": 1
                }
            },
            "called": [
                "FUN_001024f0",
                "FUN_00102280",
                "FUN_001021f0",
                "FUN_00102310",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_001079c0"
            ],
            "code": "\nvoid format_and_print_file_info_00102d8c(void)\n\n{\n  char *corrupt_time_format;\n  uint file_type;\n  char **file_data;\n  FILE *output_file;\n  char is_executable;\n  undefined file_type_char;\n  char permission_char1;\n  char permission_char2;\n  char permission_char3;\n  char permission_char4;\n  char permission_char5;\n  char permission_char6;\n  char permission_char7;\n  char permission_char8;\n  char permission_char9;\n  undefined should_print_address;\n  uint file_permissions;\n  uint pid;\n  uint file_size;\n  undefined8 timestamp;\n  \n  corrupt_time_format = (char *)get_localized_string(0,\"<time data corrupt>\",5);\n  format_string(&error_message,corrupt_time_format);\n  file_type = file_permissions & 0xf000;\n  if (file_type == 0x4000) {\n    file_type_char = 100;\n  }\n  else if (file_type == 0xa000) {\n    file_type_char = 0x6c;\n  }\n  else if (file_type == 0x6000) {\n    file_type_char = 0x62;\n  }\n  else if (file_type == 0x2000) {\n    file_type_char = 99;\n  }\n  else if (file_type == 0xc000) {\n    file_type_char = 0x73;\n  }\n  else {\n    file_type_char = 0x70;\n    if (file_type != 0x1000) {\n      file_type_char = 0x2d;\n    }\n  }\n  permission_char1 = (-((file_permissions & 0x100) == 0) & 0xbbU) + 0x72;\n  permission_char2 = (-((file_permissions & 0x80) == 0) & 0xb6U) + 0x77;\n  permission_char3 = (-((file_permissions & 0x40) == 0) & 0xb5U) + 0x78;\n  permission_char4 = (-((file_permissions & 0x20) == 0) & 0xbbU) + 0x72;\n  permission_char5 = (-((file_permissions & 0x10) == 0) & 0xb6U) + 0x77;\n  permission_char6 = (-((file_permissions & 8) == 0) & 0xb5U) + 0x78;\n  permission_char7 = (-((file_permissions & 4) == 0) & 0xbbU) + 0x72;\n  permission_char8 = (-((file_permissions & 2) == 0) & 0xb6U) + 0x77;\n  permission_char9 = (-((file_permissions & 1) == 0) & 0xb5U) + 0x78;\n  if ((file_permissions & 0x800) != 0) {\n    if (permission_char3 == 'x') {\n      permission_char3 = 's';\n    }\n    else {\n      permission_char3 = 'S';\n    }\n  }\n  if ((file_permissions & 0x400) != 0) {\n    if (permission_char6 == 'x') {\n      permission_char6 = 's';\n    }\n    else {\n      permission_char6 = 'S';\n    }\n  }\n  if ((file_permissions & 0x200) != 0) {\n    if (permission_char9 == 'x') {\n      permission_char9 = 't';\n    }\n    else {\n      permission_char9 = 'T';\n    }\n  }\n  should_print_address = 0;\n  print_formatted(output_file,\"%s %ld/%ld %6lu %s \",&time_string,(ulong)pid,\n          (ulong)file_size,timestamp,&error_message,(ulong)file_permissions);\n  write_string(*file_data,output_file);\n  if (is_executable != '\\0') {\n    if ((*(byte *)((long)file_data + 0x49) & 0x10) == 0) {\n      if (file_data[0xb] != (char *)0x0) {\n        print_formatted(output_file,\" 0x%lx\");\n      }\n    }\n    else if (file_data[0xc] != (char *)0x0) {\n      print_formatted(output_file,\" 0x%lx\");\n    }\n  }\n  write_character(10,output_file);\n  return;\n}\n\n",
            "current_name": "format_and_print_file_info_00102d8c",
            "entrypoint": "0x00102d8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102d8c": "format_and_print_file_info_00102d8c",
                "__format": "corrupt_time_format",
                "cStack0000000000000016": "permission_char1",
                "cStack0000000000000017": "permission_char2",
                "cStack0000000000000019": "permission_char4",
                "cStack000000000000001a": "permission_char5",
                "cStack000000000000001b": "permission_char6",
                "cStack000000000000001c": "permission_char7",
                "cStack000000000000001d": "permission_char8",
                "cStack000000000000001e": "permission_char9",
                "dcgettext": "get_localized_string",
                "fprintf": "print_formatted",
                "fputc": "write_character",
                "fputs": "write_string",
                "param_19": "file_permissions",
                "param_20": "file_size",
                "param_22": "timestamp",
                "param_9": "permission_char3",
                "sprintf": "format_string",
                "stack0x00000016": "time_string",
                "stack0x00000020": "error_message",
                "uStack0000000000000015": "file_type_char",
                "uStack000000000000001f": "should_print_address",
                "uStack000000000000006c": "pid",
                "uVar1": "file_type",
                "unaff_R12B": "is_executable",
                "unaff_RBP": "output_file",
                "unaff_RBX": "file_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102e57": {
            "additional_data": {
                "DAT_0010d60c": {
                    "file_exists": 1,
                    "flag": 2,
                    "has_output_flag": 1,
                    "is_file_opened": 1,
                    "is_file_path_valid": 1,
                    "output_flag": 1,
                    "show_file_name": 1
                },
                "DAT_0010d618": {
                    "file_name": 1,
                    "file_path": 2,
                    "filename": 5,
                    "output_file_name": 3
                },
                "FUN_00102e57": {
                    "create_and_write_to_file": 1,
                    "create_output_file": 1,
                    "save_to_file": 5,
                    "write_data_to_file": 2,
                    "write_to_file": 22
                },
                "concat": {
                    "concatenate_strings": 3,
                    "construct_filename": 1,
                    "create_file_name": 1,
                    "create_file_path": 1,
                    "create_string": 1,
                    "generate_file_name": 2,
                    "generate_file_path": 2,
                    "generate_filename": 3,
                    "get_concatenated_string": 5,
                    "get_file_name": 1,
                    "get_file_path": 2
                },
                "fopen": {
                    "open_file": 2
                },
                "pFVar1": {
                    "file": 5,
                    "file_pointer": 19,
                    "file_ptr": 7
                },
                "perror": {
                    "print_error": 2
                },
                "printf": {
                    "print_file_path": 1,
                    "print_output": 1
                },
                "xexit": {
                    "exit_program": 5
                }
            },
            "called": [
                "FUN_00102200"
            ],
            "calling": [
                "FUN_00105a68"
            ],
            "code": "\nvoid write_data_to_file_00102e57(void)\n\n{\n  FILE *file_pointer;\n  \n  DAT_0010d618 = (char *)get_concatenated_string();\n  if (DAT_0010d60c != 0) {\n    print_file_path(\"x - %s\\n\",DAT_0010d618);\n  }\n  file_pointer = open_file(DAT_0010d618,\"w\");\n  if (file_pointer != (FILE *)0x0) {\n    return;\n  }\n  print_error(DAT_0010d618);\n                    \n  exit_program(1);\n}\n\n",
            "current_name": "write_data_to_file_00102e57",
            "entrypoint": "0x00102e57",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102e57": "write_data_to_file_00102e57",
                "concat": "get_concatenated_string",
                "fopen": "open_file",
                "pFVar1": "file_pointer",
                "perror": "print_error",
                "printf": "print_file_path",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102e6f": {
            "additional_data": {
                "DAT_0010d5e8": {
                    "base_path_ptr": 1,
                    "input_dir": 1,
                    "input_directory": 1
                },
                "DAT_0010d60c": {
                    "enable_print": 1,
                    "flag": 1,
                    "print_flag": 1
                },
                "DAT_0010d618": {
                    "file_path": 1,
                    "output_path": 2
                },
                "FUN_00102e6f": {
                    "create_new_file": 1,
                    "create_output_file": 1,
                    "extract_archive_member": 1,
                    "extract_file_path": 9,
                    "process_and_create_file": 1,
                    "process_and_store_file_path": 1,
                    "process_and_store_output_file": 1,
                    "process_file": 4,
                    "process_file_path": 1,
                    "process_filepath": 1,
                    "process_files": 1,
                    "process_output_file": 9
                },
                "concat": {
                    "concatenate_strings": 1
                },
                "dcgettext": {
                    "get_translated_message": 1
                },
                "fopen": {
                    "open_file": 1
                },
                "in_RAX": {
                    "current_char": 5,
                    "current_character": 1,
                    "current_path": 2,
                    "file_name": 1,
                    "file_path": 9,
                    "input_path": 1,
                    "input_string": 4,
                    "path": 7,
                    "path_ptr": 1
                },
                "lbasename": {
                    "get_basename": 1
                },
                "non_fatal": {
                    "report_non_fatal_error": 1
                },
                "pFVar4": {
                    "file": 2,
                    "file_pointer": 10,
                    "file_ptr": 9,
                    "output_file": 10
                },
                "pcVar1": {
                    "base_dir": 2,
                    "base_directory": 4,
                    "base_path": 11,
                    "current_dir": 3,
                    "current_directory": 4,
                    "current_path": 1,
                    "file_path": 1,
                    "original_directory": 2,
                    "output_directory": 1,
                    "previous_path": 1,
                    "source_path": 1
                },
                "pcVar6": {
                    "curr_path_ptr": 1,
                    "current_char": 8,
                    "current_character": 1,
                    "current_directory": 2,
                    "current_path": 4,
                    "current_segment": 1,
                    "current_string": 1,
                    "file_name": 2,
                    "file_name_start": 1,
                    "file_path": 1,
                    "next_char": 3,
                    "path_component": 1,
                    "path_segment": 1,
                    "sub_path": 3,
                    "temp": 1
                },
                "perror": {
                    "print_error": 1
                },
                "printf": {
                    "print_message": 1
                },
                "process_file_path_00105a68": {
                    "process_file_path": 2,
                    "update_directory_path": 1
                },
                "report_and_store_data_00107920": {
                    "report_and_store_data": 1
                },
                "sVar5": {
                    "base_dir_length": 2,
                    "base_directory_length": 4,
                    "base_length": 1,
                    "base_path_length": 7,
                    "current_directory_length": 1,
                    "directory_length": 1,
                    "file_name_length": 2,
                    "length": 3,
                    "output_length": 1,
                    "path_length": 6,
                    "source_path_length": 1,
                    "str_len": 1,
                    "string_length": 1
                },
                "uVar2": {
                    "alternate_path": 1,
                    "alternative_path": 1,
                    "base_file_name": 1,
                    "base_name": 11,
                    "base_path": 1,
                    "basename": 5,
                    "basename_result": 1,
                    "file_base": 1,
                    "new_base_directory": 1,
                    "new_directory": 1,
                    "new_file_path": 1,
                    "new_path": 1,
                    "output_path": 2
                },
                "uVar3": {
                    "error_message": 24,
                    "error_msg": 4
                },
                "xexit": {
                    "exit_program": 1
                }
            },
            "called": [
                "FUN_00107920",
                "FUN_00102e6f",
                "FUN_001022c0",
                "FUN_00102170",
                "FUN_00105a68"
            ],
            "calling": [
                "FUN_00102e6f"
            ],
            "code": "\nvoid process_and_store_output_file_00102e6f(void)\n\n{\n  char *base_path;\n  char *file_path;\n  undefined8 base_name;\n  undefined8 error_message;\n  FILE *output_file;\n  size_t base_path_length;\n  char *current_char;\n  \n  base_path = DAT_0010d5e8;\n  do {\n    file_path = file_path + 1;\n    while (*file_path != '/') {\n      if (*file_path == '\\0') {\n        if ((DAT_0010d5e8 != (char *)0x0) && (base_path_length = strlen(DAT_0010d5e8), base_path_length != 0)) {\n          if (base_path[base_path_length - 1] == '/') {\n            DAT_0010d618 = (char *)concatenate_strings(base_path,DAT_0010d618,0);\n          }\n          else {\n            DAT_0010d618 = (char *)concatenate_strings(base_path,&DAT_00108260,DAT_0010d618,0);\n          }\n        }\n        if (DAT_0010d60c != 0) {\n          print_message(\"x - %s\\n\",DAT_0010d618);\n        }\n        output_file = open_file(DAT_0010d618,\"w\");\n        if (output_file == (FILE *)0x0) {\n          print_error(DAT_0010d618);\n                    \n          exit_program(1);\n        }\n        return;\n      }\n      current_char = file_path;\n      if ((*file_path == '.') && (current_char = file_path + 1, file_path[1] == '.')) {\n        current_char = file_path + 2;\n        if ((file_path[2] == '/') || (file_path[2] == '\\0')) {\n          base_name = get_basename();\n          base_path = DAT_0010d618;\n          error_message = get_translated_message(0,\"illegal output pathname for archive member: %s, using \\'%s\\' instead\"\n                            ,5);\n          report_non_fatal_error(error_message,base_path,base_name);\n          DAT_0010d618 = (char *)base_name;\n          process_file_path();\n          return;\n        }\n      }\n      for (; (file_path = current_char, *current_char != '\\0' && (*current_char != '/')); current_char = current_char + 1) {\n      }\n    }\n  } while( true );\n}\n\n",
            "current_name": "process_and_store_output_file_00102e6f",
            "entrypoint": "0x00102e6f",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102e6f": "process_and_store_output_file_00102e6f",
                "concat": "concatenate_strings",
                "dcgettext": "get_translated_message",
                "fopen": "open_file",
                "in_RAX": "file_path",
                "lbasename": "get_basename",
                "non_fatal": "report_non_fatal_error",
                "pFVar4": "output_file",
                "pcVar1": "base_path",
                "pcVar6": "current_char",
                "perror": "print_error",
                "printf": "print_message",
                "process_file_path_00105a68": "process_file_path",
                "sVar5": "base_path_length",
                "uVar2": "base_name",
                "uVar3": "error_message",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f08": {
            "additional_data": {
                "FUN_00102f08": {
                    "print_and_assign": 9,
                    "print_and_assign_values": 2,
                    "print_and_modify_array": 1,
                    "print_and_modify_data": 1,
                    "print_and_swap": 6,
                    "print_and_swap_data": 2,
                    "print_and_swap_pointers": 1,
                    "print_and_swap_values": 1,
                    "print_and_swap_variables": 1,
                    "print_and_update_data": 4,
                    "print_and_update_values": 3
                },
                "unaff_R12": {
                    "array_of_pointers": 1,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "data_to_update": 1,
                    "destination_pointer": 1,
                    "destination_ptr": 1,
                    "destination_string": 1,
                    "new_value": 2,
                    "output_data_pointer": 1,
                    "pointer": 1,
                    "pointer_ptr": 1,
                    "source_pointer": 1,
                    "source_ptr": 1,
                    "target_ptr": 1,
                    "target_string_ptr": 1,
                    "temp_pointer": 2,
                    "temp_ptr": 2,
                    "value_pointer": 3,
                    "value_ptr": 6
                },
                "unaff_RBX": {
                    "array": 1,
                    "array_pointer": 2,
                    "array_ptr": 5,
                    "data_pointer": 3,
                    "data_ptr": 2,
                    "data_to_print": 1,
                    "input_data_pointer": 1,
                    "input_string": 1,
                    "message_pointer": 1,
                    "message_ptr": 2,
                    "source_string": 1,
                    "source_string_ptr": 1,
                    "string_pointer": 3,
                    "string_ptr": 7
                }
            },
            "called": [
                "FUN_001021a0"
            ],
            "calling": [
                "FUN_00105af0"
            ],
            "code": "\nundefined8 print_and_assign_values_00102f08(void)\n\n{\n  undefined8 *string_ptr;\n  undefined8 *value_ptr;\n  \n  printf(\"a - %s\\n\",*string_ptr);\n  string_ptr[0x1e] = *value_ptr;\n  *value_ptr = string_ptr;\n  return 1;\n}\n\n",
            "current_name": "print_and_assign_values_00102f08",
            "entrypoint": "0x00102f08",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f08": "print_and_assign_values_00102f08",
                "unaff_R12": "value_ptr",
                "unaff_RBX": "string_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f1e": {
            "additional_data": {
                "FUN_00102f1e": {
                    "copy_and_delete_file": 3,
                    "copy_and_remove_file": 1,
                    "copy_and_unlink_file": 11,
                    "copy_file": 1,
                    "copy_file_and_delete": 4,
                    "copy_file_and_handle_error": 1,
                    "copy_file_and_unlink": 6,
                    "copy_file_error": 2,
                    "copy_file_with_error_handling": 1,
                    "copy_file_with_reason": 1
                },
                "__errno_location": {
                    "get_error_location": 1
                },
                "auVar3": {
                    "result": 2,
                    "return_value": 1
                },
                "dcgettext": {
                    "get_error_description": 1
                },
                "non_fatal": {
                    "handle_non_fatal_error": 1
                },
                "piVar1": {
                    "errno_location": 1,
                    "errno_location_ptr": 1,
                    "errno_pointer": 1,
                    "errno_ptr": 3,
                    "error_code": 1,
                    "error_location": 5,
                    "error_number": 1,
                    "error_pointer": 1,
                    "error_ptr": 1,
                    "p_errno": 1
                },
                "strerror": {
                    "get_error_message": 1
                },
                "uVar2": {
                    "error_message": 10,
                    "error_msg": 2,
                    "error_string": 3
                },
                "unaff_R12": {
                    "file_name": 5,
                    "file_path": 24,
                    "filename": 1,
                    "source_file_path": 1
                },
                "unaff_RBP": {
                    "error_code": 4,
                    "file_length": 3,
                    "file_size": 21,
                    "source_file_size": 1,
                    "stack_frame_pointer": 1,
                    "value1": 1
                },
                "unaff_retaddr": {
                    "return_addr": 1,
                    "return_address": 30
                },
                "unlink": {
                    "remove_file": 1
                }
            },
            "called": [
                "FUN_00102070",
                "FUN_00102060",
                "FUN_00107920",
                "FUN_00102550",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00105bc0"
            ],
            "code": "\nundefined  [16] copy_file_and_unlink_00102f1e(void)\n\n{\n  int *error_location;\n  undefined8 error_message;\n  ulong file_size;\n  char *file_path;\n  undefined result [16];\n  undefined8 return_address;\n  \n  error_location = get_error_location();\n  get_error_message(*error_location);\n  error_message = get_error_description(0,\"unable to copy file \\'%s\\'; reason: %s\",5);\n  handle_non_fatal_error(error_message);\n  remove_file(file_path);\n  result._0_8_ = file_size & 0xffffffff;\n  result._8_8_ = return_address;\n  return result;\n}\n\n",
            "current_name": "copy_file_and_unlink_00102f1e",
            "entrypoint": "0x00102f1e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f1e": "copy_file_and_unlink_00102f1e",
                "__errno_location": "get_error_location",
                "auVar3": "result",
                "dcgettext": "get_error_description",
                "non_fatal": "handle_non_fatal_error",
                "piVar1": "error_location",
                "strerror": "get_error_message",
                "uVar2": "error_message",
                "unaff_R12": "file_path",
                "unaff_RBP": "file_size",
                "unaff_retaddr": "return_address",
                "unlink": "remove_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f55": {
            "additional_data": {
                "FUN_00102f55": {
                    "close_and_return_error": 3,
                    "close_and_set_errno": 2,
                    "close_and_set_error": 2,
                    "close_and_set_error_code": 1,
                    "close_and_update_errno": 1,
                    "close_file": 5,
                    "close_file_and_handle_errors": 1,
                    "close_file_and_restore_error": 1,
                    "close_file_and_return_error": 6,
                    "close_file_and_set_errno": 6,
                    "close_file_and_set_error": 1,
                    "close_file_and_set_error_code": 1,
                    "close_file_in_error": 1
                },
                "iVar1": {
                    "errno_value": 3,
                    "error_code": 3,
                    "original_errno": 1,
                    "original_errno_value": 1,
                    "original_error": 2,
                    "previous_errno": 1,
                    "saved_errno": 1,
                    "saved_error_code": 1
                },
                "piVar2": {
                    "errno_location": 3,
                    "errno_pointer": 3,
                    "errno_ptr": 3,
                    "error_code_ptr": 1,
                    "error_location": 2,
                    "error_pointer": 3
                },
                "unaff_R12D": {
                    "fd": 1,
                    "file_descriptor": 30
                }
            },
            "called": [
                "FUN_00102060",
                "FUN_00102260"
            ],
            "calling": [
                "FUN_00105c00"
            ],
            "code": "\nundefined8 close_file_and_set_errno_00102f55(void)\n\n{\n  int error_code;\n  int *errno_pointer;\n  int file_descriptor;\n  \n  errno_pointer = __errno_location();\n  error_code = *errno_pointer;\n  close(file_descriptor);\n  *errno_pointer = error_code;\n  return 0xffffffff;\n}\n\n",
            "current_name": "close_file_and_set_errno_00102f55",
            "entrypoint": "0x00102f55",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f55": "close_file_and_set_errno_00102f55",
                "iVar1": "error_code",
                "piVar2": "errno_pointer",
                "unaff_R12D": "file_descriptor"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102f96": {
            "additional_data": {
                "FUN_00102f96": {
                    "handle_unknown_error": 1,
                    "print_error": 6,
                    "print_error_details": 1,
                    "print_error_info": 1,
                    "print_error_information": 1,
                    "print_error_message": 21
                },
                "uVar1": {
                    "error_message": 22,
                    "error_msg": 1
                },
                "unaff_RBX": {
                    "error_cause": 1,
                    "error_code": 24,
                    "error_flag": 5,
                    "error_type": 1
                },
                "unaff_retaddr": {
                    "return_address": 31
                }
            },
            "called": [
                "FUN_001023c0",
                "FUN_00102310",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00107c20"
            ],
            "code": "\n\n\nvoid print_error_message_00102f96(void)\n\n{\n  undefined8 error_message;\n  long error_code;\n  undefined8 return_address;\n  \n  error_message = dcgettext(0,\"cause of error unknown\",5);\n  fflush(_stdout);\n  if (error_code != 0) {\n    fprintf(_stderr,\"%s: %s: %s\\n\",DAT_0010d660);\n    return;\n  }\n  fprintf(_stderr,\"%s: %s\\n\",DAT_0010d660,error_message,return_address);\n  return;\n}\n\n",
            "current_name": "print_error_message_00102f96",
            "entrypoint": "0x00102f96",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102f96": "print_error_message_00102f96",
                "uVar1": "error_message",
                "unaff_RBX": "error_code",
                "unaff_retaddr": "return_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00102fd7": {
            "additional_data": {
                "FUN_00102fd7": {
                    "display_cannot_set_time_error": 1,
                    "handle_set_time_error": 1,
                    "handle_time_set_error": 1,
                    "handle_time_setting_error": 1,
                    "print_cannot_set_time_error": 1,
                    "print_error_and_exit": 1,
                    "print_error_message": 1,
                    "print_set_time_error": 2,
                    "print_time_error": 1,
                    "print_time_set_error_message": 1,
                    "set_time_error": 14,
                    "set_time_error_handler": 4,
                    "set_time_error_handling": 1,
                    "set_time_error_message": 1
                },
                "dcgettext": {
                    "get_localized_message": 1,
                    "translate_error_message": 1
                },
                "non_fatal": {
                    "handle_error": 2,
                    "handle_non_fatal_error": 1
                },
                "param_1": {
                    "error_code": 1,
                    "param1": 2
                },
                "param_2": {
                    "error_message": 1,
                    "param2": 2
                },
                "param_3": {
                    "param3": 2
                },
                "param_4": {
                    "param4": 2
                },
                "piVar1": {
                    "err_location": 1,
                    "errno": 1,
                    "errno_address": 1,
                    "errno_location": 7,
                    "errno_location_ptr": 1,
                    "errno_pointer": 5,
                    "errno_ptr": 3,
                    "error_code": 3,
                    "error_code_ptr": 1,
                    "error_location": 3,
                    "error_location_ptr": 1,
                    "error_num": 1,
                    "error_number": 1,
                    "error_pointer": 1,
                    "error_ptr": 1
                },
                "strerror": {
                    "get_error_message": 1,
                    "get_error_string": 1
                },
                "uVar2": {
                    "error_message": 16,
                    "error_msg": 1,
                    "error_string": 8,
                    "error_text": 1,
                    "translated_error": 1,
                    "translated_error_message": 3,
                    "translated_error_msg": 1
                }
            },
            "called": [
                "FUN_00102060",
                "FUN_00107920",
                "FUN_00102550",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00107c80"
            ],
            "code": "\nvoid set_time_error_handler_00102fd7(void)\n\n{\n  int *errno_location;\n  undefined8 error_message;\n  \n  errno_location = __errno_location();\n  get_error_string(*errno_location);\n  error_message = get_localized_message(0,\"%s: cannot set time: %s\",5);\n  handle_error(error_message);\n  return;\n}\n\n",
            "current_name": "set_time_error_handler_00102fd7",
            "entrypoint": "0x00102fd7",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00102fd7": "set_time_error_handler_00102fd7",
                "dcgettext": "get_localized_message",
                "non_fatal": "handle_error",
                "piVar1": "errno_location",
                "strerror": "get_error_string",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010300e": {
            "additional_data": {
                "DAT_0010a240": {
                    "index_array2": 1,
                    "result_table": 1,
                    "target_index_pattern": 1
                },
                "DAT_0010a440": {
                    "current_index_pattern": 1,
                    "lookup_table2": 1,
                    "match_array": 1
                },
                "DAT_0010a640": {
                    "lookup_table1": 1,
                    "next_index_pattern": 1,
                    "offset_array1": 1
                },
                "DAT_0010a7c0": {
                    "byte_index_map": 1,
                    "byte_pattern3": 1,
                    "lookup_table4": 1
                },
                "DAT_0010a800": {
                    "index_array1": 1,
                    "lookup_table3": 1,
                    "next_index_ptr_pattern": 1
                },
                "DAT_0010a980": {
                    "byte_pattern1": 1,
                    "first_comparison_array": 1,
                    "first_matching_value": 1
                },
                "DAT_0010ab00": {
                    "byte_map": 1,
                    "byte_pattern2": 1,
                    "lookup_table": 1
                },
                "DAT_0010d5b0": {
                    "end_byte_ptr": 1,
                    "end_pointer": 1,
                    "end_value_ptr": 1
                },
                "DAT_0010d5b8": {
                    "final_matching_value_ptr": 1,
                    "matched_byte_pointer": 1,
                    "target_byte_ptr_result": 1
                },
                "DAT_0010d5c0": {
                    "final_matching_index": 1,
                    "matched_byte_value": 1,
                    "target_index_result": 1
                },
                "DAT_0010d5c8": {
                    "start_byte_ptr": 1,
                    "start_pointer": 1,
                    "start_value_ptr": 1
                },
                "DAT_0010d5d0": {
                    "initial_value": 1,
                    "original_index": 1,
                    "start_index": 1
                },
                "FUN_0010300e": {
                    "analyze_binary": 1,
                    "find_first_non_zero": 1,
                    "find_interesting_items": 1,
                    "find_last_match": 2,
                    "find_matching_elements": 2,
                    "find_matching_index": 1,
                    "find_matching_indexes": 2,
                    "find_matching_pattern": 3,
                    "find_matching_sequence": 2,
                    "find_matching_substring": 1,
                    "find_matching_value": 4,
                    "find_matching_value_index": 1,
                    "find_matching_values": 4,
                    "find_target": 1,
                    "find_target_byte_pattern": 1,
                    "process_data": 1
                },
                "bVar1": {
                    "found_match": 13,
                    "found_matching_element": 1,
                    "found_matching_value": 1,
                    "found_target": 1,
                    "has_found_match": 1,
                    "has_match": 6,
                    "is_matching_found": 1,
                    "is_non_zero_byte_present": 1,
                    "is_non_zero_found": 1,
                    "is_target_found": 1,
                    "item_found": 1,
                    "match_found": 1,
                    "pattern_found": 1
                },
                "bVar4": {
                    "adjustment_value": 1,
                    "byte_factor": 1,
                    "byte_offset": 1,
                    "byte_value": 1,
                    "computed_value": 1,
                    "current_byte_value": 1,
                    "lookup_index": 1,
                    "lookup_result": 1,
                    "lookup_value": 13,
                    "mapping_result": 1,
                    "matching_byte": 1,
                    "pattern_byte": 1,
                    "sequence_match": 1,
                    "sequence_offset": 1,
                    "temp_value": 1,
                    "updated_byte_value": 1,
                    "value": 1,
                    "value_modifier": 1
                },
                "iVar2": {
                    "current_index": 24,
                    "current_value": 2,
                    "index": 3,
                    "sequence_index": 1
                },
                "in_R10D": {
                    "current_byte_value": 1,
                    "found_index": 1,
                    "found_item_value": 1,
                    "last_match_index": 2,
                    "matching_byte_index": 1,
                    "matching_element_index": 1,
                    "matching_index": 17,
                    "matching_pattern_index": 1,
                    "matching_value": 3,
                    "non_zero_index": 1,
                    "target_index": 2
                },
                "in_R9": {
                    "current_byte_pointer": 1,
                    "found_byte": 1,
                    "found_item_address": 1,
                    "last_match_byte": 2,
                    "matching_byte": 7,
                    "matching_byte_address": 1,
                    "matching_byte_pointer": 1,
                    "matching_byte_ptr": 3,
                    "matching_data_pointer": 1,
                    "matching_element": 2,
                    "matching_index": 1,
                    "matching_pattern_ptr": 1,
                    "matching_pointer": 2,
                    "matching_ptr": 1,
                    "matching_value_index": 1,
                    "matching_value_pointer": 1,
                    "matching_value_ptr": 1,
                    "non_zero_byte_ptr": 1,
                    "target_byte": 1,
                    "target_byte_ptr": 1
                },
                "lVar3": {
                    "adjusted_index": 1,
                    "calculated_index": 6,
                    "computed_index": 4,
                    "lookup_index": 1,
                    "matching_value_offset": 1,
                    "new_index": 4,
                    "next_index": 4,
                    "offset": 2,
                    "updated_index": 5,
                    "updated_value": 1
                },
                "pbVar5": {
                    "array_pointer": 1,
                    "byte_array_pointer": 1,
                    "byte_pointer": 1,
                    "byte_ptr": 2,
                    "current_address": 1,
                    "current_byte": 17,
                    "current_byte_pointer": 1,
                    "current_byte_ptr": 1,
                    "current_element": 2,
                    "current_pattern_ptr": 1,
                    "current_pointer": 1,
                    "current_value_ptr": 1,
                    "data_pointer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nvoid find_matching_value_index_0010300e(void)\n\n{\n  bool found_match;\n  int current_index;\n  long calculated_index;\n  byte lookup_value;\n  byte *current_byte;\n  byte *matching_byte;\n  int matching_index;\n  \n  found_match = false;\n  current_index = DAT_0010d5d0;\n  for (current_byte = DAT_0010d5c8; current_byte < DAT_0010d5b0; current_byte = current_byte + 1) {\n    lookup_value = 1;\n    if (*current_byte != 0) {\n      lookup_value = (&DAT_0010ab00)[*current_byte];\n    }\n    if (*(short *)(&DAT_0010a980 + (long)current_index * 2) != 0) {\n      found_match = true;\n      matching_byte = current_byte;\n      matching_index = current_index;\n    }\n    while( true ) {\n      calculated_index = (long)(int)((int)*(short *)(&DAT_0010a640 + (long)current_index * 2) + (uint)lookup_value);\n      if (*(short *)(&DAT_0010a440 + calculated_index * 2) == current_index) break;\n      current_index = (int)*(short *)(&DAT_0010a800 + (long)current_index * 2);\n      if (0xb0 < current_index) {\n        lookup_value = (&DAT_0010a7c0)[(int)(uint)lookup_value];\n      }\n    }\n    current_index = (int)*(short *)(&DAT_0010a240 + calculated_index * 2);\n  }\n  if (found_match) {\n    DAT_0010d5b8 = matching_byte;\n    DAT_0010d5c0 = matching_index;\n  }\n  return;\n}\n\n",
            "current_name": "find_matching_value_index_0010300e",
            "entrypoint": "0x0010300e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010300e": "find_matching_value_index_0010300e",
                "bVar1": "found_match",
                "bVar4": "lookup_value",
                "iVar2": "current_index",
                "in_R10D": "matching_index",
                "in_R9": "matching_byte",
                "lVar3": "calculated_index",
                "pbVar5": "current_byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001030ed": {
            "additional_data": {
                "DAT_0010d588": {
                    "copied_data_value": 1,
                    "data_2": 1,
                    "data_element_value": 1,
                    "extracted_value": 1,
                    "extracted_value_from_data": 1,
                    "first_byte": 1,
                    "first_character": 1,
                    "first_data_value": 1,
                    "first_element": 2,
                    "first_value": 1,
                    "info2": 1,
                    "info_value_first": 1,
                    "main_value": 1,
                    "result5": 2,
                    "second_value": 1,
                    "single_byte_data": 1,
                    "value2": 2,
                    "value5": 1,
                    "value_2": 1,
                    "value_at_data_ptr": 1
                },
                "DAT_0010d590": {
                    "data": 2,
                    "data_1": 1,
                    "data_value": 2,
                    "eight_byte_data": 1,
                    "extracted_data": 2,
                    "first_data": 1,
                    "first_element": 2,
                    "first_value": 3,
                    "info1": 1,
                    "info_value": 1,
                    "main_pointer": 1,
                    "result4": 2,
                    "value1": 2,
                    "value4": 1,
                    "value_1": 1
                },
                "DAT_0010d598": {
                    "data_value": 1,
                    "extracted_data": 1,
                    "extracted_value": 10,
                    "first_value": 1,
                    "four_byte_data": 1,
                    "info_address": 1,
                    "info_value": 1,
                    "initialized_value": 1,
                    "result": 1,
                    "result1": 2,
                    "selected_value": 1,
                    "value": 1,
                    "value1": 1
                },
                "DAT_0010d5a0": {
                    "array_index": 1,
                    "counter": 1,
                    "data_address_2": 1,
                    "data_offset": 2,
                    "data_pointer2": 1,
                    "index": 12,
                    "offset": 4,
                    "offset_value": 1
                },
                "DAT_0010d5a8": {
                    "array_base": 1,
                    "array_pointer": 1,
                    "base_address": 4,
                    "base_pointer": 1,
                    "data_address": 2,
                    "data_address_1": 1,
                    "data_array": 2,
                    "data_info_ptr": 1,
                    "data_offset": 1,
                    "data_pointer": 2,
                    "data_pointer1": 2,
                    "data_ptr1": 1,
                    "data_ptr_array": 1,
                    "pointer_array": 1,
                    "ptr_array": 1,
                    "ptr_data_array": 1
                },
                "DAT_0010d5b0": {
                    "data": 1,
                    "data_element": 1,
                    "data_pointer": 2,
                    "data_pointer2": 2,
                    "data_pointer_offset": 1,
                    "data_ptr": 1,
                    "data_ptr2": 1,
                    "data_ptr_element": 1,
                    "extracted_data": 1,
                    "extracted_pointer": 1,
                    "info_pointer": 1,
                    "pointer_data": 1,
                    "pointer_to_data": 1,
                    "pointer_to_value": 1,
                    "pointer_value": 1,
                    "ptr_to_data_element": 1,
                    "result2": 2,
                    "second_value": 1,
                    "string_pointer": 1,
                    "value2": 1
                },
                "DAT_0010d5c8": {
                    "copied_data": 1,
                    "copied_data_pointer": 1,
                    "copied_data_ptr": 1,
                    "copy_of_data_ptr": 1,
                    "copy_of_value": 1,
                    "current_data_ptr": 1,
                    "data_end_pointer": 1,
                    "extracted_data": 2,
                    "info_data": 1,
                    "modified_pointer_to_data": 1,
                    "pointer_copy": 1,
                    "ptr_to_data_element_copy": 1,
                    "result": 1,
                    "result3": 2,
                    "string": 1,
                    "temp_value": 1,
                    "temporary_data_pointer": 1,
                    "updated_data": 1,
                    "updated_data_pointer": 1,
                    "updated_pointer": 1,
                    "value3": 1
                },
                "FUN_001030ed": {
                    "extract_data": 11,
                    "extract_data_from_binary": 8,
                    "extract_function_data": 3,
                    "extract_information": 4,
                    "initialize_data": 5
                },
                "puVar1": {
                    "current_pointer": 1,
                    "data_pointer": 14,
                    "data_ptr": 3,
                    "function_data_pointer": 3,
                    "pointer": 6,
                    "pointer_to_data": 1,
                    "pointer_to_info": 1,
                    "ptr": 1,
                    "ptr_to_data": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00103e95",
                "FUN_001031cf"
            ],
            "code": "\nvoid extract_data_from_binary_001030ed(void)\n\n{\n  undefined8 *data_pointer;\n  \n  data_pointer = *(undefined8 **)(DAT_0010d5a8 + DAT_0010d5a0 * 8);\n  DAT_0010d598 = *(undefined4 *)((long)data_pointer + 0x1c);\n  DAT_0010d5b0 = (undefined *)data_pointer[2];\n  DAT_0010d5c8 = DAT_0010d5b0;\n  DAT_0010d590 = *data_pointer;\n  DAT_0010d588 = *DAT_0010d5b0;\n  return;\n}\n\n",
            "current_name": "extract_data_from_binary_001030ed",
            "entrypoint": "0x001030ed",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001030ed": "extract_data_from_binary_001030ed",
                "puVar1": "data_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010312d": {
            "additional_data": {
                "0xf0": {
                    "data_offset": 1,
                    "offset_f0": 1
                },
                "0xf8": {
                    "next_offset": 1,
                    "offset_f8": 1
                },
                "DAT_0010d558": {
                    "data_ptr": 1
                },
                "FUN_0010312d": {
                    "copy_and_swap_data": 1,
                    "copy_and_swap_values": 1,
                    "copy_data": 21,
                    "copy_data_from_source_to_destination": 1,
                    "copy_data_to_buffer": 1,
                    "copy_memory": 2,
                    "copy_to_new_address": 1,
                    "copy_to_new_location": 1,
                    "copy_to_new_pointer": 1,
                    "copy_value_and_link": 1
                },
                "lVar1": {
                    "temp": 12,
                    "temp_address": 1,
                    "temp_ptr": 1,
                    "temp_var": 13,
                    "temp_variable": 1
                },
                "param_1": {
                    "dest": 2,
                    "dest_pointer": 1,
                    "dest_ptr": 1,
                    "destination": 2,
                    "dst": 1,
                    "source": 13,
                    "source_address": 3,
                    "source_buffer": 1,
                    "source_data": 5,
                    "src_data": 1,
                    "src_pointer": 1
                },
                "param_2": {
                    "dest_data": 2,
                    "dest_pointer": 1,
                    "destination": 13,
                    "destination_address": 3,
                    "destination_buffer": 1,
                    "destination_data": 3,
                    "dst_data": 1,
                    "source": 2,
                    "src": 3,
                    "src_pointer": 1,
                    "src_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nvoid copy_data_from_source_to_destination_0010312d(long source,long destination)\n\n{\n  long temp_var;\n  \n  if (destination != 0) {\n    *(undefined8 *)(destination + 0xf0) = *(undefined8 *)(source + 0xf0);\n  }\n  temp_var = DAT_0010d558;\n  *(undefined8 *)(source + 0xf0) = *(undefined8 *)(DAT_0010d558 + 0xf8);\n  *(long *)(temp_var + 0xf8) = source;\n  return;\n}\n\n",
            "current_name": "copy_data_from_source_to_destination_0010312d",
            "entrypoint": "0x0010312d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010312d": "copy_data_from_source_to_destination_0010312d",
                "lVar1": "temp_var",
                "param_1": "source",
                "param_2": "destination"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010315d": {
            "additional_data": {
                "FUN_0010315d": {
                    "check_and_exit": 1,
                    "check_and_exit_if_invalid": 1,
                    "check_and_exit_if_zero": 18,
                    "check_and_exit_if_zero_data_pointer": 1,
                    "check_and_exit_on_zero_value": 1,
                    "check_and_terminate": 1,
                    "check_exit_code": 1,
                    "check_exit_condition": 2,
                    "check_exit_status": 2,
                    "check_if_program_is_initialized": 1,
                    "exit_if_data_not_initialized": 1,
                    "handle_null_pointer_error": 1
                },
                "_": {
                    "exit_code": 1
                },
                "_DAT_0010d608": {
                    "counter": 1,
                    "data_flag": 1,
                    "data_initialized_flag": 1,
                    "data_pointer": 1,
                    "data_variable": 2,
                    "error_code": 4,
                    "exit_code": 1,
                    "exit_condition": 1,
                    "exit_status": 2,
                    "flag": 4,
                    "initialized_flag": 1,
                    "invalid_flag": 1,
                    "return_value": 1,
                    "some_condition": 1,
                    "some_flag": 1,
                    "status": 2,
                    "termination_flag": 1
                },
                "xexit": {
                    "exit_code": 2,
                    "exit_program": 1,
                    "exit_with_code": 1,
                    "exit_with_error": 1
                }
            },
            "called": [
                "FUN_00102480"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00103c60",
                "FUN_00105300"
            ],
            "code": "\n\n\nvoid check_and_exit_if_zero_data_pointer_0010315d(void)\n\n{\n  if (exit_codeDATexit_code0010d608 == 0) {\n                    \n    exit_code(9);\n  }\n  return;\n}\n\n",
            "current_name": "check_and_exit_if_zero_data_pointer_0010315d",
            "entrypoint": "0x0010315d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010315d": "check_and_exit_if_zero_data_pointer_0010315d",
                "_": "exit_code",
                "xexit": "exit_code"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103172": {
            "additional_data": {
                "FUN_00103172": {
                    "copy_and_print": 1,
                    "copy_and_print_message": 2,
                    "copy_and_print_string": 2,
                    "copy_data": 1,
                    "copy_swap_string": 1,
                    "extract_and_assign_value": 1,
                    "extract_data": 1,
                    "print_and_assign": 4,
                    "print_and_assign_value": 2,
                    "print_and_store": 1,
                    "print_and_update": 2,
                    "print_and_update_array": 1,
                    "print_and_update_data": 1,
                    "print_and_update_param": 2,
                    "print_and_update_value": 1,
                    "print_and_update_values": 1,
                    "print_if_not_null": 1,
                    "print_r_string": 1,
                    "print_reverse": 1,
                    "print_string": 1,
                    "reverse_and_store": 1,
                    "reverse_string": 1,
                    "update_and_return": 1
                },
                "auVar2": {
                    "modified_data": 1,
                    "modified_message": 1,
                    "modified_value": 3,
                    "new_data": 1,
                    "new_string": 2,
                    "new_value": 2,
                    "result": 13,
                    "result_array": 1,
                    "temp": 2,
                    "temp_array": 1,
                    "updated_value": 4
                },
                "param_1": {
                    "array_ptr": 1,
                    "current_param": 1,
                    "data_ptr": 1,
                    "input_pointer": 1,
                    "input_ptr": 3,
                    "input_string": 2,
                    "old_value_ptr": 1,
                    "output_value": 1,
                    "pointer_to_value_1": 1,
                    "ptr_source": 1,
                    "source": 4,
                    "source_data": 1,
                    "source_message": 1,
                    "source_pointer": 3,
                    "source_ptr": 4,
                    "source_string": 2,
                    "source_value": 1,
                    "src": 1,
                    "string_ptr_1": 1
                },
                "param_2": {
                    "data_param": 1,
                    "dest_ptr": 1,
                    "destination": 4,
                    "destination_array": 1,
                    "destination_data": 1,
                    "destination_message": 1,
                    "destination_pointer": 2,
                    "destination_ptr": 2,
                    "destination_string": 2,
                    "dst": 1,
                    "input_value": 1,
                    "output_pointer": 1,
                    "output_ptr": 3,
                    "output_string": 2,
                    "pointer_to_value_2": 1,
                    "ptr_destination": 1,
                    "string_ptr": 3,
                    "string_ptr_2": 1,
                    "target_pointer": 1,
                    "target_ptr": 1
                },
                "param_3": {
                    "flag": 6,
                    "is_printable": 1,
                    "print_enabled": 1,
                    "print_flag": 2,
                    "should_print": 21
                },
                "param_4": {
                    "additional_data": 6,
                    "additional_param": 3,
                    "assigned_value": 1,
                    "data": 2,
                    "extra_data": 3,
                    "extra_value": 1,
                    "input_value": 1,
                    "new_value": 2,
                    "param": 1,
                    "parameter_4": 1,
                    "update_value": 1,
                    "value": 7,
                    "value_to_assign": 1,
                    "value_to_store": 1
                },
                "printf": {
                    "print_function": 1
                },
                "uVar1": {
                    "current_value": 1,
                    "data": 1,
                    "extracted_value": 1,
                    "input_value": 1,
                    "old_data": 1,
                    "old_string": 1,
                    "old_value": 2,
                    "source_val": 1,
                    "source_value": 6,
                    "src_value": 1,
                    "temp": 2,
                    "temp_data": 1,
                    "temp_string": 1,
                    "temp_value": 5,
                    "value": 5,
                    "value_1": 1
                }
            },
            "called": [
                "FUN_001021a0"
            ],
            "calling": [
                "FUN_001028ed"
            ],
            "code": "\nundefined  [16]\nprint_and_assign_value_00103172(undefined8 *source,undefined8 *destination,char should_print,undefined8 value)\n\n{\n  undefined8 source_value;\n  undefined result [16];\n  \n  if (should_print != '\\0') {\n    print_function(\"r - %s\\n\",*destination);\n  }\n  source_value = *source;\n  destination[0x1e] = source_value;\n  result._1_7_ = (undefined7)((ulong)source_value >> 8);\n  result[0] = 1;\n  *source = destination;\n  result._8_8_ = value;\n  return result;\n}\n\n",
            "current_name": "print_and_assign_value_00103172",
            "entrypoint": "0x00103172",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103172": "print_and_assign_value_00103172",
                "auVar2": "result",
                "param_1": "source",
                "param_2": "destination",
                "param_3": "should_print",
                "param_4": "value",
                "printf": "print_function",
                "uVar1": "source_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001031a5": {
            "additional_data": {
                "FUN_001031a5": {
                    "display_syntax_error": 1,
                    "print_archive_script_error": 5,
                    "print_archive_script_syntax_error": 1,
                    "print_error_line": 1,
                    "print_error_message": 4,
                    "print_syntax_error": 10,
                    "print_syntax_error_in_archive_script": 4,
                    "print_syntax_error_in_archive_script_line": 1,
                    "print_syntax_error_line": 2,
                    "print_syntax_error_message": 1
                },
                "__format": {
                    "error_format": 4,
                    "error_format_string": 1,
                    "error_message": 3,
                    "error_message_format": 14,
                    "format_string": 8,
                    "message_format": 1
                },
                "funk_001031a5": {
                    "print_syntax_error": 1
                },
                "uVar1": {
                    "incremented_value": 1,
                    "line_number": 24,
                    "updated_count": 3,
                    "updated_counter": 1,
                    "updated_line_num": 1,
                    "updated_var1": 1
                }
            },
            "called": [
                "FUN_001021a0",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nvoid print_syntax_error_in_archive_script_line_001031a5(void)\n\n{\n  uint line_number;\n  char *error_message_format;\n  \n  line_number = DAT_0010d554 + 1;\n  error_message_format = (char *)dcgettext(0,\"Syntax error in archive script, line %d\\n\",5);\n  printf(error_message_format,(ulong)line_number);\n  return;\n}\n\n",
            "current_name": "print_syntax_error_in_archive_script_line_001031a5",
            "entrypoint": "0x001031a5",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001031a5": "print_syntax_error_in_archive_script_line_001031a5",
                "__format": "error_message_format",
                "uVar1": "line_number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001031cf": {
            "additional_data": {
                "DAT_0010d5a0": {
                    "buffer_index": 1,
                    "constants_arr": 1,
                    "dat_value": 1,
                    "data2": 2,
                    "global_data2": 1,
                    "global_var": 1,
                    "variable2": 1
                },
                "DAT_0010d5a8": {
                    "buffer_address": 1,
                    "constant1": 1,
                    "constant_var1": 1,
                    "data1": 2,
                    "file_data": 1,
                    "global_data1": 1,
                    "global_var": 1,
                    "variable1": 1
                },
                "FILE": {
                    "file_type": 1
                },
                "FUN_001031cf": {
                    "file_operation": 1,
                    "initialize_file": 26,
                    "initialize_file_and_check_terminal": 1,
                    "initialize_file_parameters": 1,
                    "initialize_file_pointer": 1,
                    "setup_file": 1
                },
                "LAB_00103263": {
                    "check_condition": 1,
                    "label1": 4
                },
                "LAB_0010327b": {
                    "label2": 1
                },
                "_DAT_00000000": {
                    "current_file": 2,
                    "file_flag2": 1,
                    "file_global": 1,
                    "file_ptr": 1,
                    "flag2": 5,
                    "global_flag2": 1,
                    "global_var2": 1,
                    "initialized_file": 1
                },
                "_DAT_00000034": {
                    "file_closed": 1,
                    "file_closed_flag": 1,
                    "file_flag": 1,
                    "file_flag1": 1,
                    "file_initialized": 1,
                    "flag": 1,
                    "flag1": 5,
                    "global_flag1": 1,
                    "global_var1": 1
                },
                "_flags": {
                    "file_flags": 1
                },
                "fileno": {
                    "get_file_no": 1,
                    "get_fileno": 1,
                    "get_stream_file_number": 1,
                    "sub_function": 1
                },
                "iVar1": {
                    "err_code": 1,
                    "err_var": 1,
                    "errno": 1,
                    "errno_val": 3,
                    "errno_value": 9,
                    "error": 2,
                    "error_code": 1,
                    "error_status": 1,
                    "error_value": 8,
                    "error_var": 1,
                    "initial_errno": 1
                },
                "iVar3": {
                    "fd": 1,
                    "file_descriptor": 20,
                    "file_num": 1,
                    "file_number": 5,
                    "result2": 1
                },
                "isatty": {
                    "check_terminal": 1,
                    "is_terminal_device": 2,
                    "sub_function": 1
                },
                "lVar5": {
                    "buffer_size": 1,
                    "buffer_state": 1,
                    "constant_value": 3,
                    "dat_0010d5a8": 2,
                    "dat_value": 1,
                    "data_addr": 2,
                    "data_address": 3,
                    "data_location": 4,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "file_buffer": 1,
                    "file_buffer_address": 1,
                    "file_data": 1,
                    "file_location": 3,
                    "file_ptr": 1,
                    "file_state": 1,
                    "global_var": 2,
                    "global_variable": 1,
                    "ptr_data": 1
                },
                "param_1": {
                    "error_file": 1,
                    "file1": 1,
                    "file_pointer": 14,
                    "file_pointer_pointer": 1,
                    "file_ptr": 6,
                    "output_file": 8
                },
                "param_2": {
                    "file": 2,
                    "file2": 1,
                    "file_pointer": 1,
                    "input_file": 26,
                    "source_file": 1
                },
                "param_3": {
                    "param1": 2,
                    "param3": 16,
                    "param_3": 12,
                    "unused_param1": 1
                },
                "param_4": {
                    "param2": 2,
                    "param4": 16,
                    "param_4": 12,
                    "unused_param2": 1
                },
                "param_5": {
                    "param3": 2,
                    "param5": 14,
                    "param_5": 11,
                    "return_val": 1,
                    "return_value": 2,
                    "unused_param3": 1
                },
                "piVar4": {
                    "err_location": 1,
                    "errno_loc": 1,
                    "errno_location": 13,
                    "errno_pointer": 3,
                    "errno_ptr": 6,
                    "error": 1,
                    "error_location": 2,
                    "error_location_ptr": 1,
                    "error_number": 1,
                    "error_pointer": 1,
                    "ptr_errno": 1
                },
                "uVar2": {
                    "is_an_interactive_device": 1,
                    "is_interactive": 1,
                    "is_terminal": 14,
                    "is_terminal_flag": 1,
                    "is_tty": 6,
                    "result": 2,
                    "result1": 1,
                    "terminal_flag": 2,
                    "terminal_status": 1
                },
                "yy_load_buffer_state": {
                    "load_buffer_state": 8,
                    "sub_function": 1
                }
            },
            "called": [
                "FUN_00102390",
                "FUN_001030ed",
                "FUN_001020c0",
                "FUN_00102060"
            ],
            "calling": [
                "FUN_001033d6",
                "FUN_00103e95"
            ],
            "code": "\n\n\nundefined8\ninitialize_file_parameters_001031cf(file_type **file_pointer,file_type *input_file,undefined8 param3,undefined8 param4,undefined8 param5)\n\n{\n  int errno_value;\n  uint is_terminal;\n  int file_descriptor;\n  int *errno_location;\n  long data_location;\n  \n  errno_location = __errno_location();\n  data_location = DAT_0010d5a8;\n  errno_value = *errno_location;\n  if (file_pointer == (file_type **)0x0) {\n    _DAT_00000034 = 1;\n    _DAT_00000000 = input_file;\n    if (DAT_0010d5a8 != 0) {\nlabel1:\n      if (file_pointer == *(file_type ***)(data_location + DAT_0010d5a0 * 8)) goto label2;\n    }\n  }\n  else {\n    *(undefined4 *)((long)file_pointer + 0x1c) = 0;\n    *(undefined *)&file_pointer[1]->file_flags = 0;\n    *(undefined *)((long)&file_pointer[1]->file_flags + 1) = 0;\n    *(undefined4 *)(file_pointer + 5) = 1;\n    file_pointer[2] = file_pointer[1];\n    *(undefined4 *)(file_pointer + 7) = 0;\n    if (data_location != 0) {\n      if (file_pointer == *(file_type ***)(data_location + DAT_0010d5a0 * 8)) {\n        load_buffer_state();\n      }\n      *file_pointer = input_file;\n      *(undefined4 *)((long)file_pointer + 0x34) = 1;\n      goto label1;\n    }\n    *file_pointer = input_file;\n    *(undefined4 *)((long)file_pointer + 0x34) = 1;\n  }\n  *(undefined8 *)((long)file_pointer + 0x2c) = 1;\nlabel2:\n  is_terminal = 0;\n  if (input_file != (file_type *)0x0) {\n    file_descriptor = sub_function(input_file);\n    file_descriptor = is_terminal_device(file_descriptor);\n    is_terminal = (uint)(0 < file_descriptor);\n  }\n  *(uint *)((long)file_pointer + 0x24) = is_terminal;\n  *errno_location = errno_value;\n  return param5;\n}\n\n",
            "current_name": "initialize_file_parameters_001031cf",
            "entrypoint": "0x001031cf",
            "imported": false,
            "improved": true,
            "renaming": {
                "FILE": "file_type",
                "FUN_001031cf": "initialize_file_parameters_001031cf",
                "LAB_00103263": "label1",
                "LAB_0010327b": "label2",
                "_flags": "file_flags",
                "fileno": "sub_function",
                "iVar1": "errno_value",
                "iVar3": "file_descriptor",
                "isatty": "is_terminal_device",
                "lVar5": "data_location",
                "param_1": "file_pointer",
                "param_2": "input_file",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "piVar4": "errno_location",
                "uVar2": "is_terminal",
                "yy_load_buffer_state": "load_buffer_state"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001032a8": {
            "additional_data": {
                "FUN_001032a8": {
                    "decompile_and_print": 1,
                    "extract_archive_entries": 2,
                    "extract_archived_entries": 1,
                    "extract_entries_from_archive": 3,
                    "extract_files_from_archive": 4,
                    "extract_from_archive": 1,
                    "process_archive": 4,
                    "process_archive_entries": 9,
                    "process_entries": 3,
                    "reverse_archive_entries": 3
                },
                "__format": {
                    "error_format": 2,
                    "error_format_string": 1,
                    "error_message": 8,
                    "error_message_format": 9,
                    "error_msg": 1,
                    "error_msg_format": 4,
                    "format_string": 6
                },
                "_stderr": {
                    "error_stream": 1
                },
                "bVar3": {
                    "entry_found": 17,
                    "found": 1,
                    "found_entry": 11,
                    "has_entry": 1,
                    "is_entry_found": 1
                },
                "dcgettext": {
                    "get_translation": 1
                },
                "iVar5": {
                    "cmp_result": 3,
                    "compare_result": 1,
                    "comparison_result": 24,
                    "filename_comparison": 1,
                    "filename_comparison_result": 2
                },
                "lVar1": {
                    "current_entry": 1,
                    "next": 1,
                    "next_entry": 26,
                    "next_entry_address": 1,
                    "next_entry_ptr": 2
                },
                "lVar7": {
                    "current_archive_entry": 2,
                    "current_entry": 9,
                    "current_entry_address": 5,
                    "current_entry_index": 2,
                    "current_entry_list": 1,
                    "current_entry_node": 1,
                    "current_entry_offset": 1,
                    "current_entry_ptr": 4,
                    "current_entry_to_process": 1,
                    "current_node": 1,
                    "current_node_address": 1,
                    "entry_ptr": 1,
                    "first_entry_ptr": 1,
                    "next_entry": 1
                },
                "param_1": {
                    "archive": 16,
                    "archive_contents": 1,
                    "archive_entries": 8,
                    "archive_ptr": 2,
                    "entries": 1,
                    "entries_array": 1,
                    "file_entries": 2
                },
                "param_2": {
                    "callback": 8,
                    "callback_func": 3,
                    "callback_function": 5,
                    "entry_callback": 1,
                    "entry_processor": 3,
                    "extract_callback": 1,
                    "extract_file_function": 1,
                    "file_extraction_callback": 1,
                    "file_processor": 1,
                    "operation": 1,
                    "process_entry": 2,
                    "process_entry_func": 1,
                    "process_entry_function": 3
                },
                "param_3": {
                    "archive_entries": 1,
                    "entries": 1,
                    "entry_list": 9,
                    "entry_names": 16,
                    "filenames": 1,
                    "filenames_to_extract": 1,
                    "requested_entries": 1,
                    "target_files": 1
                },
                "param_4": {
                    "result": 10,
                    "return_value": 21
                },
                "plVar4": {
                    "current_archive_entry": 1,
                    "current_entry": 17,
                    "current_entry_ptr": 6,
                    "current_file": 1,
                    "current_list_entry": 1,
                    "current_node": 3,
                    "current_ptr": 1,
                    "next_entry": 1
                },
                "plVar6": {
                    "current_entry": 1,
                    "next_archive_entry": 1,
                    "next_entry": 10,
                    "next_entry_in_archive": 1,
                    "next_entry_in_array": 1,
                    "next_entry_list": 1,
                    "next_entry_ptr": 8,
                    "next_entry_to_process": 1,
                    "next_list_entry": 1,
                    "next_node": 3,
                    "next_ptr": 1,
                    "prev_entry_ptr": 1,
                    "temp_file": 1
                },
                "plVar8": {
                    "prev_entry": 2,
                    "prev_entry_ptr": 1,
                    "prev_node": 1,
                    "prev_prev_entry_ptr": 1,
                    "previous_archive_entry": 1,
                    "previous_entry": 12,
                    "previous_entry_ptr": 7,
                    "previous_entry_to_process": 1,
                    "previous_list_entry": 1,
                    "previous_node": 3,
                    "previous_ptr": 1
                },
                "uVar2": {
                    "current_entry": 11,
                    "current_entry_name": 3,
                    "current_file": 1,
                    "current_filename": 1,
                    "current_name": 1,
                    "entry": 2,
                    "entry_key": 1,
                    "entry_name": 9,
                    "filename": 1,
                    "temp_var": 1
                }
            },
            "called": [
                "FUN_00102100",
                "FUN_00102310",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\n\n\nundefined8 process_archive_entries_001032a8(long *archive,code *callback,undefined8 *entry_names,undefined8 return_value)\n\n{\n  long next_entry;\n  undefined8 current_entry;\n  bool entry_found;\n  long *current_entry;\n  int comparison_result;\n  char *error_message_format;\n  long *next_entry;\n  long current_entry;\n  long *previous_entry;\n  \n  current_entry = archive[0x1e];\n  if (entry_names == (undefined8 *)0x0) {\n    while (current_entry != 0) {\n      next_entry = *(long *)(current_entry + 0xf0);\n      (*callback)(current_entry,0);\n      current_entry = next_entry;\n    }\n  }\n  else {\n    do {\n      entry_found = false;\n      current_entry = (long *)archive[0x1e];\n      previous_entry = archive;\n      while (next_entry = current_entry, next_entry != (long *)0x0) {\n        if (*next_entry != 0) {\n          comparison_result = filename_cmp(*entry_names);\n          if (comparison_result == 0) {\n            entry_found = true;\n            (*callback)(next_entry,previous_entry);\n          }\n        }\n        previous_entry = next_entry;\n        current_entry = (long *)next_entry[0x1e];\n      }\n      if (!entry_found) {\n        current_entry = *entry_names;\n        error_message_format = (char *)get_translation(0,\"No entry %s in archive.\\n\",5);\n        fprintf(error_stream,error_message_format,current_entry);\n      }\n      entry_names = (undefined8 *)entry_names[1];\n    } while (entry_names != (undefined8 *)0x0);\n  }\n  return return_value;\n}\n\n",
            "current_name": "process_archive_entries_001032a8",
            "entrypoint": "0x001032a8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001032a8": "process_archive_entries_001032a8",
                "__format": "error_message_format",
                "_stderr": "error_stream",
                "bVar3": "entry_found",
                "dcgettext": "get_translation",
                "iVar5": "comparison_result",
                "lVar1": "next_entry",
                "lVar7": "current_entry",
                "param_1": "archive",
                "param_2": "callback",
                "param_3": "entry_names",
                "param_4": "return_value",
                "plVar4": "current_entry",
                "plVar6": "next_entry",
                "plVar8": "previous_entry",
                "uVar2": "current_entry"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010336b": {
            "additional_data": {
                "FUN_0010336b": {
                    "print_emulation_options": 31
                },
                "param_1": {
                    "file": 6,
                    "file_pointer": 4,
                    "output_file": 21
                },
                "pcVar1": {
                    "emulation_msg": 1,
                    "emulation_option": 3,
                    "emulation_option_string": 1,
                    "emulation_option_text": 2,
                    "emulation_options": 5,
                    "emulation_options_msg": 1,
                    "emulation_options_string": 5,
                    "emulation_options_text": 1,
                    "emulation_string": 1,
                    "message": 1,
                    "option1": 1,
                    "option_message": 1,
                    "option_str": 1,
                    "option_string": 2,
                    "option_text": 2,
                    "options_msg": 1,
                    "options_text": 1,
                    "translation": 1
                }
            },
            "called": [
                "FUN_00102310",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_0010342d"
            ],
            "code": "\nvoid print_emulation_options_0010336b(FILE *output_file)\n\n{\n  char *emulation_options_string;\n  \n  emulation_options_string = (char *)dcgettext(0,\" emulation options: \\n\",5);\n  fprintf(output_file,emulation_options_string);\n  emulation_options_string = (char *)dcgettext(0,\"  No emulation specific options\\n\",5);\n  fprintf(output_file,emulation_options_string);\n  return;\n}\n\n",
            "current_name": "print_emulation_options_0010336b",
            "entrypoint": "0x0010336b",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010336b": "print_emulation_options_0010336b",
                "param_1": "output_file",
                "pcVar1": "emulation_options_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001033b0": {
            "additional_data": {
                "FUN_001033b0": {
                    "print_and_exit": 8,
                    "print_error_message_and_exit": 22
                },
                "F_001033b0": {
                    "print_error_message_and_exit": 1
                },
                "param_1": {
                    "error_message": 26,
                    "message": 5
                }
            },
            "called": [
                "FUN_00102310",
                "FUN_00102500"
            ],
            "calling": [
                "FUN_00103df9",
                "FUN_001033d6",
                "FUN_00103e95"
            ],
            "code": "\n\n\nvoid print_error_message_and_exit_001033b0(undefined8 error_message)\n\n{\n  fprintf(_stderr,\"%s\\n\",error_message);\n                    \n  exit(2);\n}\n\n",
            "current_name": "print_error_message_and_exit_001033b0",
            "entrypoint": "0x001033b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001033b0": "print_error_message_and_exit_001033b0",
                "param_1": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001033d6": {
            "additional_data": {
                "0x0": {
                    "null": 1
                },
                "0x18": {
                    "buffer_field": 1
                },
                "0x20": {
                    "buffer_field2": 1
                },
                "0x40": {
                    "buffer_size": 1
                },
                "0x4000": {
                    "data_size": 1
                },
                "0x4002": {
                    "data_size2": 1
                },
                "FUN_001033d6": {
                    "create_buffer": 29,
                    "create_buffer_and_initialize": 1,
                    "create_dynamic_buffer": 1
                },
                "auVar3": {
                    "result": 17,
                    "result_buffer": 5,
                    "return_value": 5
                },
                "param_1": {
                    "arg1": 1,
                    "buffer": 1,
                    "buffer_param_1": 1,
                    "buffer_size": 1,
                    "file": 3,
                    "file_buffer": 1,
                    "file_data": 1,
                    "file_handle": 4,
                    "file_handle_1": 1,
                    "file_name": 1,
                    "file_param": 1,
                    "file_path": 1,
                    "file_ptr": 2,
                    "file_stream": 2,
                    "param1": 5,
                    "param_1": 1,
                    "param_2": 1,
                    "param_a": 1,
                    "param_buf": 1
                },
                "param_2": {
                    "arg2": 1,
                    "buffer_param_2": 1,
                    "buffer_size": 2,
                    "data_ptr": 1,
                    "file_handle_2": 1,
                    "file_mode": 3,
                    "file_size": 1,
                    "length": 2,
                    "param2": 8,
                    "param_2": 4,
                    "param_3": 1,
                    "param_b": 1,
                    "param_file": 1,
                    "size_param": 1,
                    "stream": 1,
                    "unused_param1": 1
                },
                "param_3": {
                    "allocation_size": 1,
                    "arg3": 1,
                    "buffer_param_3": 1,
                    "file_mode": 1,
                    "param3": 8,
                    "param_3": 12,
                    "param_4": 1,
                    "param_c": 1,
                    "param_size": 1,
                    "param_unused": 1,
                    "size": 1,
                    "unused_param2": 1
                },
                "param_4": {
                    "arg4": 1,
                    "buffer": 1,
                    "buffer_length": 1,
                    "buffer_param": 1,
                    "buffer_param_4": 1,
                    "buffer_size": 5,
                    "error_callback": 1,
                    "flag": 1,
                    "param4": 7,
                    "param_4": 6,
                    "param_5": 1,
                    "param_d": 1,
                    "param_data": 1,
                    "status": 1,
                    "unused_param3": 1
                },
                "pvVar1": {
                    "buffer": 27,
                    "buffer_ptr": 3
                },
                "pvVar2": {
                    "additional_buffer": 1,
                    "alloc_ptr": 1,
                    "allocated_buffer": 3,
                    "allocated_memory": 4,
                    "buffer2": 2,
                    "buffer_data": 1,
                    "buffer_pointer": 1,
                    "data": 4,
                    "data_buffer": 4,
                    "data_ptr": 3,
                    "dynam_mem": 1,
                    "dynamic_memory": 3,
                    "ptr": 1,
                    "pv_var2": 1
                },
                "yy_create_buffer": {
                    "allocate_buffer": 1
                },
                "yy_fatal_error": {
                    "handle_memory_error": 1
                },
                "yy_init_buffer": {
                    "initialize_buffer": 1
                }
            },
            "called": [
                "FUN_001033b0",
                "FUN_001031cf",
                "FUN_001023b0"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nundefined  [16]\ncreate_buffer_and_initialize_001033d6(undefined8 param1,undefined8 param2,undefined8 param_3,undefined8 param4)\n\n{\n  void *buffer;\n  void *data_buffer;\n  undefined result [16];\n  \n  buffer = malloc(0x40);\n  if (buffer != (void *)0x0) goto LAB_001033f7;\n  do {\n    buffer = (void *)handle_memory_error(\"out of dynamic memory in allocate_buffer()\");\nLAB_001033f7:\n    *(undefined4 *)((long)buffer + 0x18) = 0x4000;\n    data_buffer = malloc(0x4002);\n    *(void **)((long)buffer + 8) = data_buffer;\n  } while (data_buffer == (void *)0x0);\n  *(undefined4 *)((long)buffer + 0x20) = 1;\n  initialize_buffer(buffer,param1);\n  result._8_8_ = param4;\n  result._0_8_ = buffer;\n  return result;\n}\n\n",
            "current_name": "create_buffer_and_initialize_001033d6",
            "entrypoint": "0x001033d6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001033d6": "create_buffer_and_initialize_001033d6",
                "auVar3": "result",
                "param_1": "param1",
                "param_2": "param2",
                "param_4": "param4",
                "pvVar1": "buffer",
                "pvVar2": "data_buffer",
                "yy_create_buffer": "allocate_buffer",
                "yy_fatal_error": "handle_memory_error",
                "yy_init_buffer": "initialize_buffer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010342d": {
            "additional_data": {
                "DAT_0010d660": {
                    "program_name": 1
                },
                "FUN_0010266f": {
                    "extract_files": 1,
                    "print_command_modifiers": 1,
                    "print_error": 1,
                    "print_offset": 1,
                    "replace_file": 1,
                    "replace_file_in_archive": 1,
                    "replace_or_insert_file": 1
                },
                "FUN_0010336b": {
                    "display_contents": 1,
                    "print_archive_contents": 1,
                    "print_commands": 1,
                    "print_file": 2,
                    "print_file_contents": 2
                },
                "FUN_0010342d": {
                    "display_usage": 2,
                    "print_archive_usage": 7,
                    "print_command_options": 1,
                    "print_usage": 20,
                    "print_usage_instructions": 1
                },
                "__stream": {
                    "file": 1,
                    "output_stream": 24,
                    "stream": 5
                },
                "param_1": {
                    "flag": 1,
                    "is_verbose": 3,
                    "option": 3,
                    "output_flag": 1,
                    "output_mode": 8,
                    "output_option": 2,
                    "output_to_file": 1,
                    "output_to_standard_output": 1,
                    "output_to_stdout": 5,
                    "param": 1,
                    "stream_mode": 1,
                    "verbosity": 3
                },
                "pcVar2": {
                    "error_message": 1,
                    "format_string": 1,
                    "language_string": 1,
                    "localized_message": 1,
                    "localized_string": 6,
                    "localized_text": 2,
                    "message": 13,
                    "message_ptr": 1,
                    "text": 4
                },
                "uVar1": {
                    "archive_file_path": 2,
                    "archive_name": 2,
                    "archive_path": 1,
                    "dat_string": 1,
                    "data": 1,
                    "file_descriptor": 1,
                    "format_arg": 1,
                    "format_specifier": 1,
                    "format_str": 1,
                    "format_string": 4,
                    "format_string1": 2,
                    "formatted_string": 1,
                    "language_code": 1,
                    "local_variable1": 1,
                    "message": 5,
                    "message_identifier": 1,
                    "text": 1,
                    "version": 3
                }
            },
            "called": [
                "FUN_00102480",
                "FUN_0010336b",
                "FUN_00102310",
                "FUN_00102170",
                "FUN_0010266f"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid print_archive_usage_0010342d(uint output_mode)\n\n{\n  undefined8 message;\n  char *message;\n  FILE *output_stream;\n  \n  message = (char *)dcgettext(0,\n                             \"Usage: %s [emulation options] [-]{dmpqrstx}[abcDfilMNoOPsSTuvV] [--plugin <name>] [member-name] [count] archive-file file...\\n\"\n                             ,5);\n  output_stream = _stderr;\n  if (output_mode != 0) {\n    output_stream = _stdout;\n  }\n  fprintf(output_stream,message,DAT_0010d660);\n  message = DAT_0010d660;\n  message = (char *)dcgettext(0,\"       %s -M [<mri-script]\\n\",5);\n  fprintf(output_stream,message,message);\n  message = (char *)dcgettext(0,\" commands:\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  d            - delete file(s) from the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  m[ab]        - move file(s) in the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  p            - print file(s) found in the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  q[f]         - quick append file(s) to the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\n                             \"  r[ab][f][u]  - replace existing or insert new file(s) into the archive\\n\"\n                             ,5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  s            - act as ranlib\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  t[O][v]      - display contents of the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  x[o]         - extract file(s) from the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\" command specific modifiers:\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [a]          - put file(s) after [member-name]\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [b]          - put file(s) before [member-name] (same as [i])\\n\",5\n                            );\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [D]          - use zero for timestamps and uids/gids (default)\\n\",\n                             5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [U]          - use actual timestamps and uids/gids\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [N]          - use instance [count] of name\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [f]          - truncate inserted file names\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [P]          - use full path names when matching\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [o]          - preserve original dates\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [O]          - display offsets of files in the archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\n                             \"  [u]          - only replace files that are newer than current archive contents\\n\"\n                             ,5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\" generic modifiers:\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [c]          - do not warn if the library had to be created\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [s]          - create an archive index (cf. ranlib)\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [l <text> ]  - specify the dependencies of this library\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [S]          - do not build a symbol table\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [T]          - deprecated, use --thin instead\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [v]          - be verbose\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  [V]          - display the version number\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  @<file>      - read options from <file>\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  --target=BFDNAME - specify the target object format as BFDNAME\\n\",\n                             5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\n                             \"  --output=DIRNAME - specify the output directory for extraction operations\\n\"\n                             ,5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\n                             \"  --record-libdeps=<text> - specify the dependencies of this library\\n\"\n                             ,5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  --thin       - make a thin archive\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\" optional:\\n\",5);\n  fprintf(output_stream,message);\n  message = (char *)dcgettext(0,\"  --plugin <p> - load the specified plugin\\n\",5);\n  fprintf(output_stream,message);\n  ar_emul_default_usage(output_stream);\n  list_supported_targets(DAT_0010d660,output_stream);\n  if (output_mode != 0) {\n    message = (char *)dcgettext(0,\"Report bugs to %s\\n\",5);\n    fprintf(output_stream,message,\"<https://sourceware.org/bugzilla/>\");\n  }\n                    \n  xexit(output_mode ^ 1);\n}\n\n",
            "current_name": "print_archive_usage_0010342d",
            "entrypoint": "0x0010342d",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010342d": "print_archive_usage_0010342d",
                "__stream": "output_stream",
                "param_1": "output_mode",
                "pcVar2": "message",
                "uVar1": "message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0010394a": {
            "additional_data": {
                "D": {
                    "use_zero_for_timestamp": 1,
                    "use_zero_timestamp": 1
                },
                "DAT_0010d660": {
                    "default_language": 1
                },
                "F1": {
                    "print_archive_usage": 1
                },
                "FUN_0010394a": {
                    "print_archive_help": 1,
                    "print_archive_index": 2,
                    "print_archive_options": 1,
                    "print_archive_usage": 3,
                    "print_help_message": 1,
                    "print_usage": 19,
                    "print_usage_and_exit": 1,
                    "print_usage_info": 1,
                    "print_usage_instructions": 1
                },
                "U": {
                    "use_actual_timestamp": 2
                },
                "__file": {
                    "option_file": 1
                },
                "__plugin": {
                    "plugin_name": 1
                },
                "__stream": {
                    "output": 1,
                    "output_file": 1,
                    "output_stream": 20,
                    "selected_stream": 1,
                    "standard_stream": 1,
                    "stream": 7
                },
                "_stderr": {
                    "error_stream": 1,
                    "standard_error": 5,
                    "standard_error_stream": 1,
                    "std_err": 1,
                    "stderr": 2
                },
                "_stdout": {
                    "standard_output": 5,
                    "standard_output_stream": 1,
                    "standard_stream": 1,
                    "std_out": 1,
                    "stdout": 2
                },
                "dcgettext": {
                    "get_localized_message": 1,
                    "get_localized_string": 2,
                    "get_localized_text": 2,
                    "get_message": 2,
                    "get_translated_text": 2,
                    "translate": 1,
                    "translate_message": 1,
                    "translate_text": 1
                },
                "fprintf": {
                    "format_and_print": 1,
                    "formatted_print": 1,
                    "print_formatted": 6,
                    "print_message": 1,
                    "write_formatted_output": 1
                },
                "h": {
                    "print_help": 1,
                    "print_help_option": 1
                },
                "list_supported_targets": {
                    "list_supported_targets": 9,
                    "print_supported_targets": 4
                },
                "param_1": {
                    "enable_index": 1,
                    "flag": 7,
                    "input_flag": 1,
                    "is_error": 1,
                    "is_help_option_set": 1,
                    "is_output_to_stdout": 1,
                    "is_silent": 1,
                    "is_verbose": 3,
                    "mode": 1,
                    "option": 3,
                    "option_flag": 5,
                    "option_value": 1,
                    "output_to_file": 1,
                    "print_to_std_err": 1,
                    "print_to_stdout": 2,
                    "verbosity_level": 1
                },
                "pcVar2": {
                    "error_message": 1,
                    "localized_string": 4,
                    "message": 20,
                    "message_string": 1,
                    "text": 5
                },
                "t": {
                    "update_symbol_map_timestamp": 1,
                    "update_timestamp": 1
                },
                "uVar1": {
                    "app_name": 1,
                    "default_string": 1,
                    "error_msg": 1,
                    "info": 1,
                    "internal_version": 1,
                    "lang_string": 1,
                    "language": 1,
                    "message": 1,
                    "program_name": 6,
                    "symbol_map_timestamp": 1,
                    "usage": 2,
                    "usage_format": 1,
                    "usage_message": 2,
                    "usage_string": 4,
                    "usage_var": 1,
                    "version": 4,
                    "version_string": 2
                },
                "v": {
                    "print_version": 1,
                    "print_version_option": 1
                },
                "xexit": {
                    "exit_program": 11,
                    "exit_with_status": 1
                }
            },
            "called": [
                "FUN_00102480",
                "FUN_00102310",
                "FUN_00102170",
                "FUN_0010266f"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nprint_version_optionoid print_archive_usage_0010394a(uinupdate_symbol_map_timestamp flag)\n\n{\n  undefined8 MQMGZGDEuse_actual_timestampW;\n  cprint_help_optionar *message;\n  FILE *HGCuse_actual_timestampTYTGRI;\n  \n  MQMGZGDEuse_actual_timestampW = DAT_0010d660;\n  HGCuse_actual_timestampTYTGRI = standard_error;\n  if (flag != 0) {\n    HGCuse_actual_timestampTYTGRI = standard_output;\n  }\n  message = (cprint_help_optionar *)get_message(0,\"use_actual_timestampsage: %s [opupdate_symbol_map_timestampions] arcprint_help_optioniprint_version_optione\\n\",5);\n  print_formatted(HGCuse_actual_timestampTYTGRI,message,MQMGZGDEuse_actual_timestampW);\n  message = (cprint_help_optionar *)get_message(0,\" Generaupdate_symbol_map_timestampe an index update_symbol_map_timestampo speed access update_symbol_map_timestampo arcprint_help_optioniprint_version_optiones\\n\",5);\n  print_formatted(HGCuse_actual_timestampTYTGRI,message);\n  message = (cprint_help_optionar *)get_message(0,\n                             \" Tprint_help_optione opupdate_symbol_map_timestampions are:\\n  @<file>                      Read opupdate_symbol_map_timestampions from <file>\\n\"\n                             ,5);\n  print_formatted(HGCuse_actual_timestampTYTGRI,message);\n  message = (cprint_help_optionar *)get_message(0,\"  --plugin <name>              Load update_symbol_map_timestampprint_help_optione specified plugin\\n\",5);\n  print_formatted(HGCuse_actual_timestampTYTGRI,message);\n  message = (cprint_help_optionar *)get_message(0,\n                             \"  -D                           use_actual_timestampse zero for symbol map update_symbol_map_timestampimesupdate_symbol_map_timestampamp (defaulupdate_symbol_map_timestamp)\\n  -use_actual_timestamp                           use_actual_timestampse an acupdate_symbol_map_timestampual symbol map update_symbol_map_timestampimesupdate_symbol_map_timestampamp\\n\"\n                             ,5);\n  print_formatted(HGCuse_actual_timestampTYTGRI,message);\n  message = (cprint_help_optionar *)get_message(0,\n                             \"  -update_symbol_map_timestamp                           use_actual_timestamppdaupdate_symbol_map_timestampe update_symbol_map_timestampprint_help_optione arcprint_help_optioniprint_version_optione\\'s symbol map update_symbol_map_timestampimesupdate_symbol_map_timestampamp\\n  -print_help_option --print_help_optionelp                    Prinupdate_symbol_map_timestamp update_symbol_map_timestampprint_help_optionis print_help_optionelp message\\n  -print_version_option --print_version_optionersion                 Prinupdate_symbol_map_timestamp print_version_optionersion informaupdate_symbol_map_timestampion\\n\"\n                             ,5);\n  print_formatted(HGCuse_actual_timestampTYTGRI,message);\n  lisupdate_symbol_map_timestamp_supporupdate_symbol_map_timestamped_update_symbol_map_timestampargeupdate_symbol_map_timestamps(DAT_0010d660,HGCuse_actual_timestampTYTGRI);\n  if (flag != 0) {\n    message = (cprint_help_optionar *)get_message(0,\"Reporupdate_symbol_map_timestamp bugs update_symbol_map_timestampo %s\\n\",5);\n    print_formatted(HGCuse_actual_timestampTYTGRI,message,\"<print_help_optionupdate_symbol_map_timestampupdate_symbol_map_timestampps://sourceware.org/bugzilla/>\");\n  }\n                    \n  exit_program(flag ^ 1);\n}\n\n",
            "current_name": "print_archive_usage_0010394a",
            "entrypoint": "0x0010394a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0010394a": "print_archive_usage_0010394a",
                "U": "use_actual_timestamp",
                "__stream": "output_stream",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "dcgettext": "get_message",
                "fprintf": "print_formatted",
                "h": "print_help_option",
                "param_1": "flag",
                "pcVar2": "message",
                "t": "update_symbol_map_timestamp",
                "uVar1": "program_name",
                "v": "print_version_option",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103a78": {
            "additional_data": {
                "DAT_0010d60c": {
                    "debug_flag": 1,
                    "debug_mode": 1,
                    "print_enabled": 1,
                    "print_flag": 1
                },
                "FUN_00103a78": {
                    "extract_and_print_archive": 9,
                    "extract_and_print_archive_contents": 4,
                    "extract_and_print_archive_data": 3,
                    "extract_and_print_archived_files": 1,
                    "extract_and_print_archives": 1,
                    "extract_and_print_file_from_archive": 1,
                    "extract_archive": 2,
                    "extract_archive_contents": 1,
                    "extract_archive_data": 1,
                    "extract_archived_files": 2,
                    "process_archive": 2,
                    "process_binary": 1,
                    "process_binary_data": 1,
                    "process_binary_file": 1
                },
                "__ptr": {
                    "allocated_memory": 1,
                    "buffer": 30
                },
                "_stdout": {
                    "standard_output": 1,
                    "stdout": 1
                },
                "_unaff_R13": {
                    "total_bytes_read": 1
                },
                "auStack_b8": {
                    "auxiliary_stack": 2,
                    "stack": 1,
                    "stack_buffer": 19,
                    "stack_variable": 1,
                    "stat_buffer": 1,
                    "temp_stack": 2,
                    "temporary_stack": 1,
                    "tmp_stack": 1
                },
                "iVar1": {
                    "error_code": 3,
                    "result": 19,
                    "result_code": 1,
                    "return_value": 1,
                    "status": 2
                },
                "local_88": {
                    "archive_size": 4,
                    "available_space": 1,
                    "buffer_size": 3,
                    "bytes_to_read": 1,
                    "expected_bytes": 2,
                    "expected_total": 1,
                    "expected_total_bytes": 1,
                    "max_archive_size": 1,
                    "max_buffer_size": 4,
                    "max_bytes": 3,
                    "max_bytes_to_read": 3,
                    "max_file_size": 1,
                    "remaining_archive_size": 1,
                    "seek_position": 1,
                    "target_size": 2,
                    "temp_variable": 1,
                    "tmp_var": 1
                },
                "param_1": {
                    "archive": 8,
                    "archive_data": 1,
                    "archive_info": 1,
                    "archive_ptr": 2,
                    "arguments": 1,
                    "binary_header": 1,
                    "file_information": 1,
                    "input": 3,
                    "input_args": 1,
                    "input_data": 1,
                    "input_params": 4,
                    "parameter": 1,
                    "parameter_1": 1,
                    "parameters": 3
                },
                "pcVar7": {
                    "error_desc": 1,
                    "error_message": 12,
                    "error_msg": 2,
                    "error_msg_template": 1,
                    "error_string": 13,
                    "fmt_string": 1,
                    "format_message": 1
                },
                "piVar6": {
                    "errno_loc": 2,
                    "errno_location": 7,
                    "errno_pointer": 2,
                    "errno_ptr": 10,
                    "errnum": 1,
                    "error_code": 2,
                    "error_no": 1,
                    "error_number": 4,
                    "error_ptr": 2
                },
                "puVar2": {
                    "archive": 5,
                    "archive_header": 1,
                    "archive_ptr": 3,
                    "aux_ptr": 1,
                    "current_archive": 1,
                    "current_item": 1,
                    "file_pointer": 1,
                    "input_argument": 1,
                    "optional_archive": 1,
                    "optional_param": 1,
                    "param1_ptr": 1,
                    "param2_ptr": 1,
                    "pointer": 1,
                    "previous_archive": 1,
                    "ptr": 1,
                    "ptr1": 1,
                    "ptr_to_parameters": 1,
                    "ptr_var": 1,
                    "secondary_archive": 1,
                    "secondary_archive_info": 1,
                    "secondary_archive_ptr": 1,
                    "secondary_parameters": 1,
                    "secondary_params": 1,
                    "temp": 1,
                    "temp_ptr": 1
                },
                "sVar5": {
                    "bytes_written": 30,
                    "write_result": 1
                },
                "uVar3": {
                    "bytes_read": 26,
                    "read_bytes": 1,
                    "read_size": 2
                },
                "uVar4": {
                    "error_message": 11,
                    "error_msg": 8,
                    "error_string": 5,
                    "error_text": 1,
                    "localized_error_message": 1,
                    "localized_string": 1,
                    "msg": 2
                },
                "unaff_R13": {
                    "bytes_processed": 2,
                    "total_bytes_read": 23,
                    "total_bytes_written": 3
                },
                "unaff_R14": {
                    "archive_file_size": 1,
                    "archive_size": 20,
                    "file_size": 3,
                    "max_size": 1,
                    "total_bytes": 3,
                    "total_bytes_expected": 1
                },
                "unaff_RBP": {
                    "buffer_size": 1,
                    "bytes_left": 1,
                    "bytes_remaining": 1,
                    "remaining_buffer_size": 1,
                    "remaining_bytes": 27
                }
            },
            "called": [
                "FUN_001021a0",
                "FUN_00107690",
                "FUN_00102030",
                "FUN_00102580",
                "FUN_00102230",
                "FUN_00102060",
                "FUN_00102540",
                "FUN_00102550",
                "FUN_00102510",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid extract_and_print_archive_contents_00103a78(undefined8 *archive)\n\n{\n  int result;\n  void *buffer;\n  undefined8 *archive;\n  ulong bytes_read;\n  undefined8 error_message;\n  size_t bytes_written;\n  int *errno_ptr;\n  size_t remaining_bytes;\n  char *error_string;\n  ulong total_bytes_read;\n  ulong archive_size;\n  undefined stack_buffer [48];\n  ulong max_buffer_size;\n  \n  buffer = (void *)xmalloc(0x2000);\n  archive = (undefined8 *)archive[0x1d];\n  if ((undefined8 *)archive[0x1d] == (undefined8 *)0x0) {\n    archive = archive;\n  }\n  result = (**(code **)(archive[1] + 0x1e8))(archive,stack_buffer);\n  if (result == 0) {\n    if (DAT_0010d60c != 0) {\n      printf(\"\\n<%s>\\n\\n\",*archive);\n    }\n    total_bytes_read = 0;\n    bfd_seek(archive,0,0);\n    goto LAB_00103afd;\n  }\n  archive = (undefined8 *)*archive;\n  error_string = \"internal stat error on %s\";\n  do {\n    error_message = dcgettext(0,error_string,5);\n    fatal(error_message,archive);\n    max_buffer_size = archive_size;\n    do {\n      bytes_written = fwrite(buffer,1,remaining_bytes,stdout);\n      if (bytes_written != remaining_bytes) {\n        errno_ptr = __errno_location();\n        error_string = strerror(*errno_ptr);\n        fatal(\"stdout: %s\",error_string);\nLAB_00103b91:\n        free(buffer);\n        return;\n      }\n      total_bytes_read = total_bytes_read + bytes_written;\nLAB_00103afd:\n      if (max_buffer_size <= total_bytes_read) goto LAB_00103b91;\n      remaining_bytes = max_buffer_size - total_bytes_read;\n      if (0x2000 < remaining_bytes) {\n        remaining_bytes = 0x2000;\n      }\n      bytes_read = bfd_bread(buffer,remaining_bytes,archive);\n    } while (remaining_bytes == bytes_read);\n    error_string = \"%s is not a valid archive\";\n    archive = *(undefined8 **)archive[0x1d];\n    archive_size = max_buffer_size;\n  } while( true );\n}\n\n",
            "current_name": "extract_and_print_archive_contents_00103a78",
            "entrypoint": "0x00103a78",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103a78": "extract_and_print_archive_contents_00103a78",
                "__ptr": "buffer",
                "_stdout": "stdout",
                "auStack_b8": "stack_buffer",
                "iVar1": "result",
                "local_88": "max_buffer_size",
                "param_1": "archive",
                "pcVar7": "error_string",
                "piVar6": "errno_ptr",
                "puVar2": "archive",
                "sVar5": "bytes_written",
                "uVar3": "bytes_read",
                "uVar4": "error_message",
                "unaff_R13": "total_bytes_read",
                "unaff_R14": "archive_size",
                "unaff_RBP": "remaining_bytes"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103ba8": {
            "additional_data": {
                "FUN_00103ba8": {
                    "check_and_print_ar": 3,
                    "check_ar_status": 2,
                    "display_ar_status": 1,
                    "print_ar": 1,
                    "print_ar_greater_than_zero": 2,
                    "print_ar_if_not_zero": 3,
                    "print_ar_if_set": 1,
                    "print_ar_message": 4,
                    "print_ar_status": 2,
                    "print_arrows_if_not_zero": 2,
                    "print_if_ar_greater_than_zero": 1,
                    "print_if_ar_is_greater_than_zero": 2,
                    "print_if_ar_is_not_zero": 1,
                    "print_menu_if_ar_flag_not_set": 1,
                    "print_prompt_if_ar_exists": 1,
                    "print_prompt_if_ar_is_not_zero": 1,
                    "print_prompt_if_ar_set": 1,
                    "print_prompt_if_not_ar_mode": 1,
                    "print_status_message": 1
                },
                "_DAT_0010d608": {
                    "ar_mode_status": 1,
                    "ar_status": 4,
                    "ar_value": 4,
                    "arrow_count": 1,
                    "data_flag": 1,
                    "data_pointer": 1,
                    "flag": 2,
                    "is_ar_active": 1,
                    "status_flag": 3
                },
                "_stdout": {
                    "output_stream": 2,
                    "standard_output": 4,
                    "std_output_ptr": 1
                },
                "fflush": {
                    "flush_stream": 1
                },
                "printf": {
                    "print_string": 1
                },
                "stdout": {
                    "output_stream": 1
                }
            },
            "called": [
                "FUN_001021a0",
                "FUN_001023c0"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\n\n\nvoid print_prompt_if_ar_is_not_zero_00103ba8(void)\n\n{\n  if (_DAT_0010d608 != 0) {\n    print_string(\"AR >\");\n    flush_stream(standard_output);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "print_prompt_if_ar_is_not_zero_00103ba8",
            "entrypoint": "0x00103ba8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103ba8": "print_prompt_if_ar_is_not_zero_00103ba8",
                "_stdout": "standard_output",
                "fflush": "flush_stream",
                "printf": "print_string",
                "stdout": "output_stream"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103bd1": {
            "additional_data": {
                "FUN_00103bd1": {
                    "print_matched_formats": 1,
                    "print_matching_formats": 30
                },
                "__format": {
                    "format_message": 2,
                    "format_string": 20,
                    "matching_formats_message": 1,
                    "message": 1,
                    "message_format": 2
                },
                "_stderr": {
                    "standard_error": 4,
                    "stderr": 1,
                    "stderr_stream": 1
                },
                "_stdout": {
                    "standard_output": 4,
                    "stdout": 1,
                    "stdout_stream": 1
                },
                "param_1": {
                    "format_array": 1,
                    "format_list": 7,
                    "format_strings": 8,
                    "formats": 10,
                    "formats_array": 2,
                    "formats_list": 2,
                    "string_array": 1
                },
                "plVar2": {
                    "current_format": 20,
                    "current_format_string": 4,
                    "current_string": 1,
                    "format_ptr": 1
                },
                "uVar1": {
                    "current_locale": 1,
                    "data": 2,
                    "data_value": 1,
                    "default_format": 2,
                    "default_value": 1,
                    "format": 1,
                    "format_string": 1,
                    "language": 1,
                    "locale": 1,
                    "matching_formats": 2,
                    "translation": 1,
                    "user_data": 1
                }
            },
            "called": [
                "FUN_00102030",
                "FUN_001023c0",
                "FUN_00102280",
                "FUN_00102310",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00105300"
            ],
            "code": "\n\n\nvoid print_matching_formats_00103bd1(long *formats)\n\n{\n  undefined8 matching_formats;\n  char *format_string;\n  long *current_format;\n  \n  fflush(standard_output);\n  matching_formats = DAT_0010d660;\n  format_string = (char *)dcgettext(0,\"%s: Matching formats:\",5);\n  fprintf(standard_error,format_string,matching_formats);\n  for (current_format = formats; *current_format != 0; current_format = current_format + 1) {\n    fprintf(standard_error,\" %s\");\n  }\n  free(formats);\n  fputc(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_matching_formats_00103bd1",
            "entrypoint": "0x00103bd1",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103bd1": "print_matching_formats_00103bd1",
                "__format": "format_string",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "param_1": "formats",
                "plVar2": "current_format",
                "uVar1": "matching_formats"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103c60": {
            "additional_data": {
                "DAT_0010d558": {
                    "output_archive": 1,
                    "output_archive_fd": 1
                },
                "DAT_0010d560": {
                    "temp_file_path": 2
                },
                "DAT_0010d568": {
                    "temp_file_name": 1
                },
                "DAT_0010d570": {
                    "input_archive_copy": 1
                },
                "DAT_0010d660": {
                    "error_domain": 1
                },
                "FUN_00103c60": {
                    "archive_file_conversion": 1,
                    "archive_file_handler": 1,
                    "convert_archive_files": 1,
                    "create_archive": 2,
                    "create_output_archive": 6,
                    "create_output_archive_from_input": 1,
                    "extract_and_format_archive": 1,
                    "extract_and_modify": 1,
                    "extract_and_modify_archive": 1,
                    "extract_and_open_archive": 1,
                    "extract_archive": 1,
                    "extract_archive_and_set_format": 1,
                    "extract_archived_files": 3,
                    "extract_archives": 2,
                    "extract_plugin_from_archive": 1,
                    "process_archive": 2,
                    "process_archives": 3
                },
                "_stderr": {
                    "file_pointer": 1,
                    "output_stream": 1,
                    "standard_error": 2,
                    "stderr": 1
                },
                "bfd_check_format": {
                    "check_archive_format": 1
                },
                "bfd_fdopenw": {
                    "open_output_file": 1
                },
                "bfd_openr": {
                    "open_input_archive": 1
                },
                "bfd_openr_next_archived_file": {
                    "get_next_file_in_archive": 1
                },
                "cVar1": {
                    "check_format_result": 3,
                    "check_result": 2,
                    "format_check": 5,
                    "format_check_result": 7,
                    "is_archive": 1,
                    "is_archive_format": 1,
                    "is_valid_archive": 1,
                    "is_valid_format": 2
                },
                "fprintf": {
                    "print_error": 1,
                    "print_error_message": 1
                },
                "lVar4": {
                    "archive_file_handle": 1,
                    "archive_handle": 1,
                    "bfd_input": 1,
                    "bfd_input_archive": 1,
                    "input_arch_file": 1,
                    "input_archive": 16,
                    "input_archive_file": 1,
                    "input_archive_file_descriptor": 1,
                    "input_archive_handle": 6,
                    "input_bfd": 1,
                    "input_file": 1
                },
                "lVar5": {
                    "archived_file": 21,
                    "archived_file_handle": 6,
                    "file_handle": 2,
                    "file_pointer": 1,
                    "next_file": 1
                },
                "maybequit": {
                    "handle_error": 1,
                    "terminate_execution": 1
                },
                "param_1": {
                    "archive_file_path": 1,
                    "archive_path": 4,
                    "error_message": 2,
                    "error_message_arg_1": 1,
                    "input_archive": 8,
                    "input_archive_filename": 1,
                    "input_archive_name": 1,
                    "input_archive_path": 7,
                    "input_filename": 1,
                    "input_path": 1,
                    "output_archive_path": 2,
                    "output_filename": 1,
                    "plugin_path": 1
                },
                "param_2": {
                    "archive_format": 1,
                    "extract_only": 1,
                    "flag": 6,
                    "flag_draw": 1,
                    "input_archive_length": 1,
                    "is_convert": 1,
                    "is_input_archive": 1,
                    "is_output": 2,
                    "is_output_archive": 3,
                    "is_plugin": 10,
                    "is_plugin_file": 1,
                    "is_reversed": 1,
                    "is_temporary": 1,
                    "output_archive_flag": 1
                },
                "pcVar3": {
                    "error_format": 1,
                    "error_message": 28,
                    "error_msg": 1,
                    "error_string": 1
                },
                "piVar2": {
                    "errno_loc": 1,
                    "errno_location": 9,
                    "errno_location_ptr": 1,
                    "errno_pointer": 2,
                    "errno_ptr": 4,
                    "error_address": 1,
                    "error_code": 3,
                    "error_location": 2,
                    "error_num": 1,
                    "error_number": 5,
                    "error_number_ptr": 1
                },
                "plVar7": {
                    "arch_files": 1,
                    "archived_file_handle_array": 1,
                    "archived_file_handle_ptr": 1,
                    "archived_file_handles": 1,
                    "archived_file_list": 1,
                    "archived_file_ptr": 4,
                    "archived_files_array": 3,
                    "archived_files_list": 4,
                    "current_archived_file": 1,
                    "current_archived_file_ptr": 1,
                    "current_file": 2,
                    "current_file_pointer": 1,
                    "current_file_ptr": 1,
                    "file_handle_ptr": 1,
                    "next_archived_file": 4,
                    "output_file_handle": 1,
                    "output_file_list": 1,
                    "output_file_pointers": 1,
                    "ptr_to_archived_file": 1
                },
                "uVar6": {
                    "err_message": 1,
                    "error_msg_2": 1,
                    "error_string": 1,
                    "input_archive_path_2": 1,
                    "plugin_error": 1,
                    "plugin_error_message": 1,
                    "program_name": 24,
                    "translation": 1
                }
            },
            "called": [
                "FUN_0010315d",
                "FUN_00102130",
                "FUN_00102530",
                "FUN_00102060",
                "FUN_00102270",
                "FUN_00102550",
                "FUN_00102340",
                "FUN_001057a0",
                "FUN_00102310",
                "FUN_00102570",
                "FUN_00102520",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\n\n\nvoid create_output_archive_from_input_00103c60(char *input_archive,int is_plugin)\n\n{\n  char format_check_result;\n  int *errno_location;\n  char *error_message;\n  long input_archive;\n  long archived_file;\n  undefined8 program_name;\n  long *archived_files_list;\n  \n  DAT_0010d570 = xstrdup();\n  DAT_0010d560 = (char *)make_tempname(DAT_0010d570,&DAT_0010d568);\n  if (DAT_0010d560 == (char *)0x0) {\n    errno_location = __errno_location();\n    input_archive = strerror(*errno_location);\n    program_name = DAT_0010d660;\n    error_message = (char *)dcgettext(0,\"%s: Can\\'t open temporary file (%s)\\n\",5);\n  }\n  else {\n    DAT_0010d558 = open_output_file(DAT_0010d560,0,DAT_0010d568);\n    if (DAT_0010d558 == 0) {\n      error_message = \"%s: Can\\'t open output archive %s\\n\";\n      input_archive = DAT_0010d560;\n    }\n    else {\n      if (is_plugin != 0) {\nLAB_00103d02:\n        bfd_set_format(DAT_0010d558,2);\n        *(byte *)(DAT_0010d558 + 0x49) = *(byte *)(DAT_0010d558 + 0x49) & 0xe7 | 8;\n        return;\n      }\n      input_archive = open_input_archive(input_archive,\"plugin\");\n      if (input_archive == 0) {\n        error_message = \"%s: Can\\'t open input archive %s\\n\";\n      }\n      else {\n        format_check_result = check_archive_format(input_archive,2);\n        if (format_check_result != '\\0') {\n          archived_files_list = (long *)(DAT_0010d558 + 0xf8);\n          for (archived_file = get_next_file_in_archive(input_archive,0); archived_file != 0;\n              archived_file = get_next_file_in_archive(input_archive,archived_file)) {\n            *archived_files_list = archived_file;\n            archived_files_list = (long *)(archived_file + 0xf0);\n          }\n          goto LAB_00103d02;\n        }\n        error_message = \"%s: file %s is not an archive\\n\";\n      }\n    }\n    program_name = DAT_0010d660;\n    error_message = (char *)dcgettext(0,error_message,5);\n  }\n  print_error_message(standard_error,error_message,program_name,input_archive);\n  handle_error();\n  return;\n}\n\n",
            "current_name": "create_output_archive_from_input_00103c60",
            "entrypoint": "0x00103c60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103c60": "create_output_archive_from_input_00103c60",
                "_stderr": "standard_error",
                "bfd_check_format": "check_archive_format",
                "bfd_fdopenw": "open_output_file",
                "bfd_openr": "open_input_archive",
                "bfd_openr_next_archived_file": "get_next_file_in_archive",
                "cVar1": "format_check_result",
                "fprintf": "print_error_message",
                "lVar4": "input_archive",
                "lVar5": "archived_file",
                "maybequit": "handle_error",
                "param_1": "input_archive",
                "param_2": "is_plugin",
                "pcVar3": "error_message",
                "piVar2": "errno_location",
                "plVar7": "archived_files_list",
                "uVar6": "program_name"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103ddc": {
            "additional_data": {
                "DAT_0010d578": {
                    "array_description": 1,
                    "array_descriptor": 1,
                    "desc": 1
                },
                "DAT_0010d60c": {
                    "flag": 2,
                    "is_condition_true": 1
                },
                "FUN_00103ddc": {
                    "print_arelt_descr": 15,
                    "print_arelt_description": 9,
                    "print_array_description": 1,
                    "print_array_element": 1,
                    "print_array_element_description": 4,
                    "print_related_descriptor": 1
                },
                "FUN_001079c0": {
                    "print_and_format": 1,
                    "print_arelt_descr": 1,
                    "print_description": 1,
                    "print_file": 1,
                    "print_file_content": 1,
                    "print_file_contents": 7,
                    "print_file_data": 1,
                    "print_file_descr": 1,
                    "print_file_info": 1,
                    "print_file_params": 3,
                    "print_file_with_parameters": 1,
                    "print_to_file": 1
                },
                "param_1": {
                    "argument_1": 1,
                    "array_element": 3,
                    "descriptor": 1,
                    "element": 1,
                    "file": 6,
                    "file_descriptor": 1,
                    "file_handle": 1,
                    "file_pointer": 4,
                    "file_ptr": 5,
                    "input_param": 2,
                    "param": 6
                },
                "param_2": {
                    "argument_2": 1,
                    "argv": 1,
                    "array_of_strings": 2,
                    "char_array_ptr": 1,
                    "description_list": 1,
                    "file": 1,
                    "file_contents": 2,
                    "file_lines": 2,
                    "file_names": 1,
                    "file_paths": 1,
                    "file_pointer": 2,
                    "files": 1,
                    "params": 2,
                    "string_arr": 1,
                    "string_array": 3,
                    "string_param": 1,
                    "strings": 4,
                    "strings_array": 1
                },
                "param_3": {
                    "argument_3": 1,
                    "char1": 3,
                    "char_1": 4,
                    "char_param_1": 1,
                    "character_1": 1,
                    "condition1": 1,
                    "flag1": 5,
                    "flag_1": 10,
                    "is_character": 1,
                    "option_1": 1
                },
                "param_4": {
                    "argument_4": 1,
                    "char2": 3,
                    "char_2": 4,
                    "char_param_2": 1,
                    "character_2": 1,
                    "condition2": 1,
                    "flag2": 5,
                    "flag_2": 10,
                    "is_flag": 1,
                    "option_2": 1
                },
                "print_arelt_descr": {
                    "print_array_element_descriptor": 1
                }
            },
            "called": [
                "FUN_001079c0"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nvoid print_arelt_descr_00103ddc(undefined8 file)\n\n{\n  print_array_element_descriptor(DAT_0010d578,file,DAT_0010d60c != 0,0);\n  return;\n}\n\n",
            "current_name": "print_arelt_descr_00103ddc",
            "entrypoint": "0x00103ddc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103ddc": "print_arelt_descr_00103ddc",
                "param_1": "file",
                "print_arelt_descr": "print_array_element_descriptor"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103df9": {
            "additional_data": {
                "FUN_00103df9": {
                    "allocate_and_initialize_buffer": 1,
                    "allocate_dynamic_memory": 1,
                    "allocate_or_extend_buffer": 1,
                    "ensure_buffer_stack": 26,
                    "expand_buffer": 1,
                    "expand_dynamic_memory": 1
                },
                "__size": {
                    "buffer_size": 20,
                    "num_bytes": 1,
                    "size": 2,
                    "total_size": 2
                },
                "bVar4": {
                    "byte_flag": 2,
                    "byte_value": 3,
                    "byte_var": 2,
                    "byte_variable": 1,
                    "counter": 5,
                    "flag": 8,
                    "is_dynamic_memory": 1,
                    "is_first_iteration": 2,
                    "is_zero": 1,
                    "loop_counter": 1,
                    "loop_direction": 1,
                    "loop_flag": 1,
                    "loop_increment": 1,
                    "loop_index": 1,
                    "loop_variable": 1
                },
                "in_RCX": {
                    "input": 4,
                    "input_param": 2,
                    "input_parameter": 3,
                    "input_value": 2,
                    "param": 1,
                    "result": 3,
                    "return_value": 15
                },
                "lVar1": {
                    "counter": 4,
                    "index": 1,
                    "iterator": 1,
                    "loop_count": 1,
                    "loop_counter": 21,
                    "loop_index": 2
                },
                "lVar2": {
                    "new_buffer_length": 1,
                    "new_buffer_size": 13,
                    "new_size": 16
                },
                "param_1": {
                    "in_rcx": 1
                },
                "puVar3": {
                    "array_ptr": 1,
                    "buffer_end": 2,
                    "buffer_pointer": 11,
                    "buffer_ptr": 8,
                    "current_buffer": 1,
                    "current_element": 1,
                    "current_ptr": 2,
                    "pointer": 1,
                    "ptr": 3,
                    "ptr_to_last_element": 1
                },
                "yy_fatal_error": {
                    "error": 1,
                    "fatal_error": 2,
                    "handle_fatal_error": 1,
                    "handle_memory_error": 1,
                    "raise_fatal_error": 1
                }
            },
            "called": [
                "FUN_00102400",
                "FUN_001033b0",
                "FUN_001022d0"
            ],
            "calling": [
                "FUN_00103e95"
            ],
            "code": "\nundefined8 ensure_buffer_stack_00103df9(void)\n\n{\n  size_t buffer_size;\n  undefined8 return_value;\n  long loop_counter;\n  long new_size;\n  undefined4 *buffer_pointer;\n  byte flag;\n  \n  flag = 0;\n  if (DAT_0010d5a8 == (void *)0x0) {\n    DAT_0010d5a8 = calloc(8,1);\n    if (DAT_0010d5a8 != (void *)0x0) {\n      DAT_0010d580 = 1;\n      DAT_0010d5a0 = 0;\n      return return_value;\n    }\n  }\n  else {\n    if (DAT_0010d5a0 < DAT_0010d580 - 1U) {\n      return return_value;\n    }\n    new_size = DAT_0010d580 + 8;\n    buffer_size = new_size * 8;\n    DAT_0010d5a8 = realloc(DAT_0010d5a8,buffer_size);\n    if (DAT_0010d5a8 != (void *)0x0) {\n      buffer_pointer = (undefined4 *)((long)DAT_0010d5a8 + (buffer_size - 0x40));\n      DAT_0010d580 = new_size;\n      for (loop_counter = 0x10; loop_counter != 0; loop_counter = loop_counter + -1) {\n        *buffer_pointer = 0;\n        buffer_pointer = buffer_pointer + (ulong)flag * -2 + 1;\n      }\n      return return_value;\n    }\n  }\n  fatal_error(\"out of dynamic memory in yyensure_buffer_stack_00103df9()\");\n  DAT_0010d5a0 = 0;\n  DAT_0010d580 = 1;\n  return return_value;\n}\n\n",
            "current_name": "ensure_buffer_stack_00103df9",
            "entrypoint": "0x00103df9",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103df9": "ensure_buffer_stack_00103df9",
                "__size": "buffer_size",
                "bVar4": "flag",
                "in_RCX": "return_value",
                "lVar1": "loop_counter",
                "lVar2": "new_size",
                "puVar3": "buffer_pointer",
                "yy_fatal_error": "fatal_error"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00103e95": {
            "additional_data": {
                "DAT_0010d548": {
                    "message_data": 1
                },
                "DAT_0010d550": {
                    "action": 1,
                    "message_code": 1
                },
                "DAT_0010d554": {
                    "dat_input_in_flex_scanner_failed": 1
                },
                "DAT_0010d558": {
                    "file_data": 1
                },
                "FUN_00103e95": {
                    "analyze_and_process_data": 1,
                    "decompile_binary_function": 1,
                    "decompile_function": 2,
                    "decompiled_function": 6
                },
                "PBvt1": {
                    "byte_vector": 1
                },
                "auVar40": {
                    "array_of_undefined_16": 1,
                    "array_of_unsigned": 1,
                    "array_of_unsigned_variables": 1,
                    "au_var40": 2,
                    "undefined16_vector": 1,
                    "undefined_array_var": 1,
                    "undefined_au_var_16_byte": 1,
                    "undefined_autovar": 1,
                    "undefined_var": 1,
                    "undefined_var1": 1,
                    "undefined_var40": 1,
                    "undefined_variable": 1,
                    "undefined_variable_array": 1
                },
                "auVar41": {
                    "array_of_undefined_16": 1,
                    "array_of_unsigned": 1,
                    "array_of_unsigned_variables": 1,
                    "au_var41": 2,
                    "undefined16_array": 1,
                    "undefined16_vector": 1,
                    "undefined_array_var_2": 1,
                    "undefined_au_var_16_byte": 1,
                    "undefined_autovar": 1,
                    "undefined_var2": 2,
                    "undefined_var41": 1,
                    "undefined_variable": 1,
                    "undefined_variable_array": 1
                },
                "bVar28": {
                    "b_var28": 2,
                    "bool": 2,
                    "bool_var": 4,
                    "bool_var1": 1,
                    "bool_var28": 3,
                    "bool_variable": 3,
                    "bool_variable_1": 1,
                    "boolean": 1,
                    "boolean_variable": 4,
                    "found_match": 2,
                    "local_byte": 1
                },
                "bVar30": {
                    "b_var30": 2,
                    "boolean_value": 1,
                    "boolean_variable": 2,
                    "byte": 3,
                    "byte_var": 2,
                    "byte_var1": 1,
                    "byte_var2": 2,
                    "byte_var30": 3,
                    "byte_variable": 5,
                    "byte_variable_2": 1,
                    "local_byte": 1
                },
                "bVar39": {
                    "b_var39": 1,
                    "byte": 2,
                    "byte_var": 1,
                    "byte_variable2": 1,
                    "byte_variable_1": 1,
                    "end_of_buffer": 1,
                    "local_byte": 1
                },
                "bVar40": {
                    "byte_variable3": 1
                },
                "bVar41": {
                    "byte_variable4": 1
                },
                "cVar2": {
                    "char_var": 6,
                    "char_var2": 1,
                    "char_variable": 4,
                    "character": 6,
                    "character_variable": 5,
                    "temp_char": 1
                },
                "ciD_001040b1": {
                    "case_1": 1
                },
                "defaultVar": {
                    "default_variable": 1
                },
                "iVar25": {
                    "i_var25": 2,
                    "int_var1": 1,
                    "int_var2": 2,
                    "int_var25": 2,
                    "int_var_3": 1,
                    "int_variable_3": 1,
                    "integer": 4,
                    "integer_var": 1,
                    "integer_var25": 1,
                    "integer_variable": 5,
                    "integer_variable2": 1,
                    "integer_variable_1": 1,
                    "temp_value": 1
                },
                "iVar37": {
                    "i_var37": 3,
                    "int_var2": 1,
                    "int_var3": 1,
                    "integer": 3,
                    "integer_var": 1,
                    "integer_variable3": 1,
                    "integer_variable_2": 1,
                    "local_integer": 1,
                    "symbol": 1
                },
                "iVar39": {
                    "integer_variable4": 1
                },
                "iVar8": {
                    "i_var8": 2,
                    "int_var": 3,
                    "int_var8": 2,
                    "int_variable": 1,
                    "integer": 5,
                    "integer_value2": 1,
                    "integer_var": 1,
                    "integer_var8": 1,
                    "integer_variable": 7,
                    "temp_int": 1
                },
                "iVar9": {
                    "error_code": 1,
                    "i_var9": 2,
                    "int_var9": 1,
                    "int_var_2": 1,
                    "int_variable_2": 1,
                    "integer": 3,
                    "integer_2": 1,
                    "integer_value": 1,
                    "integer_var": 1,
                    "integer_var9": 1,
                    "integer_variable": 5,
                    "local_integer": 1,
                    "temp_int2": 1
                },
                "io": {
                    "integer": 1
                },
                "lVar17": {
                    "buffer_remaining": 1,
                    "l_var17": 3,
                    "local_long": 1,
                    "long": 3,
                    "long_var": 1,
                    "long_var17": 2,
                    "long_var2": 3,
                    "long_var_3": 1,
                    "long_variable": 9,
                    "match_length": 1,
                    "temp_long": 1
                },
                "lVar18": {
                    "current_index": 1,
                    "index": 2,
                    "l_var18": 3,
                    "local_long": 1,
                    "long": 3,
                    "long_var": 1,
                    "long_var1": 1,
                    "long_var18": 2,
                    "long_var3": 2,
                    "long_var_4": 1,
                    "long_variable": 5,
                    "long_variable2": 1,
                    "long_variable_1": 1,
                    "long_variable_4": 1,
                    "temp_long2": 1
                },
                "lVar21": {
                    "buffer_length": 1,
                    "current_long2": 1,
                    "l_var21": 2,
                    "local_long": 1,
                    "long": 3,
                    "long_var": 1,
                    "long_var21": 3,
                    "long_var3": 1,
                    "long_var4": 2,
                    "long_var_5": 1,
                    "long_variable": 5,
                    "long_variable3": 1,
                    "long_variable_2": 2,
                    "temp_long3": 1
                },
                "lVar31": {
                    "l_var31": 2,
                    "local_long": 1,
                    "long": 3,
                    "long_var": 1,
                    "long_var31": 3,
                    "long_var4": 1,
                    "long_var5": 1,
                    "long_var6": 1,
                    "long_var_6": 1,
                    "long_variable": 5,
                    "long_variable4": 1,
                    "long_variable_3": 1,
                    "long_variable_4": 1,
                    "new_buffer_capacity": 1
                },
                "lVar40": {
                    "long": 1
                },
                "lVar41": {
                    "local_long": 1
                },
                "lVar48": {
                    "long": 1
                },
                "local_10": {
                    "local_int": 1
                },
                "local_1000": {
                    "local_i_var1000": 1
                },
                "local_1010": {
                    "local_i_var1010": 1
                },
                "local_1020": {
                    "local_i_var1020": 1
                },
                "local_1030": {
                    "local_i_var1030": 1
                },
                "local_1040": {
                    "local_i_var1040": 1
                },
                "local_1050": {
                    "local_i_var1050": 1
                },
                "local_1060": {
                    "local_i_var1060": 1
                },
                "local_1070": {
                    "local_i_var1070": 1
                },
                "local_1080": {
                    "local_i_var1080": 1
                },
                "local_1090": {
                    "local_i_var1090": 1
                },
                "local_10A0": {
                    "local_i_var10_a0": 1
                },
                "local_10B0": {
                    "local_i_var10_b0": 1
                },
                "local_10C0": {
                    "local_i_var10_c0": 1
                },
                "local_10D0": {
                    "local_i_var10_d0": 1
                },
                "local_10E0": {
                    "local_i_var10_e0": 1
                },
                "local_10F0": {
                    "local_i_var10_f0": 1
                },
                "local_1100": {
                    "local_i_var1100": 1
                },
                "local_1110": {
                    "local_i_var1110": 1
                },
                "local_1120": {
                    "local_i_var1120": 1
                },
                "local_1130": {
                    "local_i_var1130": 1
                },
                "local_1140": {
                    "local_i_var1140": 1
                },
                "local_1150": {
                    "local_i_var1150": 1
                },
                "local_1160": {
                    "local_i_var1160": 1
                },
                "local_1170": {
                    "local_i_var1170": 1
                },
                "local_1180": {
                    "local_i_var1180": 1
                },
                "local_1190": {
                    "local_i_var1190": 1
                },
                "local_11A0": {
                    "local_i_var11_a0": 1
                },
                "local_11B0": {
                    "local_i_var11_b0": 1
                },
                "local_11C0": {
                    "local_i_var11_c0": 1
                },
                "local_11D0": {
                    "local_i_var11_d0": 1
                },
                "local_11E0": {
                    "local_i_var11_e0": 1
                },
                "local_11F0": {
                    "local_i_var11_f0": 1
                },
                "local_1200": {
                    "local_i_var1200": 1
                },
                "local_1210": {
                    "local_i_var1210": 1
                },
                "local_1220": {
                    "local_i_var1220": 1
                },
                "local_1230": {
                    "local_i_var1230": 1
                },
                "local_1240": {
                    "local_i_var1240": 1
                },
                "local_1250": {
                    "local_i_var1250": 1
                },
                "local_1260": {
                    "local_i_var1260": 1
                },
                "local_1270": {
                    "local_i_var1270": 1
                },
                "local_1280": {
                    "local_i_var1280": 1
                },
                "local_1290": {
                    "local_i_var1290": 1
                },
                "local_12A0": {
                    "local_i_var12_a0": 1
                },
                "local_12B0": {
                    "local_i_var12_b0": 1
                },
                "local_12C0": {
                    "local_i_var12_c0": 1
                },
                "local_12D0": {
                    "local_i_var12_d0": 1
                },
                "local_12E0": {
                    "local_i_var12_e0": 1
                },
                "local_12F0": {
                    "local_i_var12_f0": 1
                },
                "local_1300": {
                    "local_i_var1300": 1
                },
                "local_1310": {
                    "local_i_var1310": 1
                },
                "local_1320": {
                    "local_i_var1320": 1
                },
                "local_1330": {
                    "local_i_var1330": 1
                },
                "local_1340": {
                    "local_i_var1340": 1
                },
                "local_1350": {
                    "local_i_var1350": 1
                },
                "local_1360": {
                    "local_i_var1360": 1
                },
                "local_1370": {
                    "local_i_var1370": 1
                },
                "local_1380": {
                    "local_i_var1380": 1
                },
                "local_1390": {
                    "local_i_var1390": 1
                },
                "local_13A0": {
                    "local_i_var13_a0": 1
                },
                "local_13B0": {
                    "local_i_var13_b0": 1
                },
                "local_13C0": {
                    "local_i_var13_c0": 1
                },
                "local_13D0": {
                    "local_i_var13_d0": 1
                },
                "local_13E0": {
                    "local_i_var13_e0": 1
                },
                "local_13F0": {
                    "local_i_var13_f0": 1
                },
                "local_1400": {
                    "local_i_var1400": 1
                },
                "local_1410": {
                    "local_i_var1410": 1
                },
                "local_1420": {
                    "local_i_var1420": 1
                },
                "local_1430": {
                    "local_i_var1430": 1
                },
                "local_1440": {
                    "local_i_var1440": 1
                },
                "local_1450": {
                    "local_i_var1450": 1
                },
                "local_1460": {
                    "local_i_var1460": 1
                },
                "local_1470": {
                    "local_i_var1470": 1
                },
                "local_1480": {
                    "local_i_var1480": 1
                },
                "local_1490": {
                    "local_i_var1490": 1
                },
                "local_14A0": {
                    "local_i_var14_a0": 1
                },
                "local_14B0": {
                    "local_i_var14_b0": 1
                },
                "local_14C0": {
                    "local_i_var14_c0": 1
                },
                "local_14D0": {
                    "local_i_var14_d0": 1
                },
                "local_14E0": {
                    "local_i_var14_e0": 1
                },
                "local_14F0": {
                    "local_i_var14_f0": 1
                },
                "local_1500": {
                    "local_i_var1500": 1
                },
                "local_1510": {
                    "local_i_var1510": 1
                },
                "local_1520": {
                    "local_i_var1520": 1
                },
                "local_1530": {
                    "local_i_var1530": 1
                },
                "local_1540": {
                    "local_i_var1540": 1
                },
                "local_1550": {
                    "local_i_var1550": 1
                },
                "local_1560": {
                    "local_i_var1560": 1
                },
                "local_1570": {
                    "local_i_var1570": 1
                },
                "local_1580": {
                    "local_i_var1580": 1
                },
                "local_1590": {
                    "local_i_var1590": 1
                },
                "local_15A0": {
                    "local_i_var15_a0": 1
                },
                "local_15B0": {
                    "local_i_var15_b0": 1
                },
                "local_15C0": {
                    "local_i_var15_c0": 1
                },
                "local_15D0": {
                    "local_i_var15_d0": 1
                },
                "local_15E0": {
                    "local_i_var15_e0": 1
                },
                "local_15F0": {
                    "local_i_var15_f0": 1
                },
                "local_1600": {
                    "local_i_var1600": 1
                },
                "local_1610": {
                    "local_i_var1610": 1
                },
                "local_1620": {
                    "local_i_var1620": 1
                },
                "local_1630": {
                    "local_i_var1630": 1
                },
                "local_1640": {
                    "local_i_var1640": 1
                },
                "local_1650": {
                    "local_i_var1650": 1
                },
                "local_1660": {
                    "local_i_var1660": 1
                },
                "local_1670": {
                    "local_i_var1670": 1
                },
                "local_1680": {
                    "local_i_var1680": 1
                },
                "local_1690": {
                    "local_i_var1690": 1
                },
                "local_16A0": {
                    "local_i_var16_a0": 1
                },
                "local_16B0": {
                    "local_i_var16_b0": 1
                },
                "local_16C0": {
                    "local_i_var16_c0": 1
                },
                "local_16D0": {
                    "local_i_var16_d0": 1
                },
                "local_16E0": {
                    "local_i_var16_e0": 1
                },
                "local_16F0": {
                    "local_i_var16_f0": 1
                },
                "local_1700": {
                    "local_i_var1700": 1
                },
                "local_1710": {
                    "local_i_var1710": 1
                },
                "local_1720": {
                    "local_i_var1720": 1
                },
                "local_1730": {
                    "local_i_var1730": 1
                },
                "local_1740": {
                    "local_i_var1740": 1
                },
                "local_1750": {
                    "local_i_var1750": 1
                },
                "local_1760": {
                    "local_i_var1760": 1
                },
                "local_1770": {
                    "local_i_var1770": 1
                },
                "local_1780": {
                    "local_i_var1780": 1
                },
                "local_1790": {
                    "local_i_var1790": 1
                },
                "local_17A0": {
                    "local_i_var17_a0": 1
                },
                "local_17B0": {
                    "local_i_var17_b0": 1
                },
                "local_17C0": {
                    "local_i_var17_c0": 1
                },
                "local_17D0": {
                    "local_i_var17_d0": 1
                },
                "local_17E0": {
                    "local_i_var17_e0": 1
                },
                "local_17F0": {
                    "local_i_var17_f0": 1
                },
                "local_18": {
                    "local_long": 1
                },
                "local_1800": {
                    "local_i_var1800": 1
                },
                "local_1810": {
                    "local_i_var1810": 1
                },
                "local_1820": {
                    "local_i_var1820": 1
                },
                "local_1830": {
                    "local_i_var1830": 1
                },
                "local_1840": {
                    "local_i_var1840": 1
                },
                "local_1850": {
                    "local_i_var1850": 1
                },
                "local_1860": {
                    "local_i_var1860": 1
                },
                "local_1870": {
                    "local_i_var1870": 1
                },
                "local_1880": {
                    "local_i_var1880": 1
                },
                "local_1890": {
                    "local_i_var1890": 1
                },
                "local_18A0": {
                    "local_i_var18_a0": 1
                },
                "local_18B0": {
                    "local_i_var18_b0": 1
                },
                "local_18C0": {
                    "local_i_var18_c0": 1
                },
                "local_18D0": {
                    "local_i_var18_d0": 1
                },
                "local_18E0": {
                    "local_i_var18_e0": 1
                },
                "local_18F0": {
                    "local_i_var18_f0": 1
                },
                "local_1900": {
                    "local_i_var1900": 1
                },
                "local_1910": {
                    "local_i_var1910": 1
                },
                "local_1920": {
                    "local_i_var1920": 1
                },
                "local_1930": {
                    "local_i_var1930": 1
                },
                "local_1940": {
                    "local_i_var1940": 1
                },
                "local_1950": {
                    "local_i_var1950": 1
                },
                "local_1960": {
                    "local_i_var1960": 1
                },
                "local_1970": {
                    "local_i_var1970": 1
                },
                "local_1980": {
                    "local_i_var1980": 1
                },
                "local_1990": {
                    "local_i_var1990": 1
                },
                "local_19A0": {
                    "local_i_var19_a0": 1
                },
                "local_19B0": {
                    "local_i_var19_b0": 1
                },
                "local_19C0": {
                    "local_i_var19_c0": 1
                },
                "local_19D0": {
                    "local_i_var19_d0": 1
                },
                "local_19E0": {
                    "local_i_var19_e0": 1
                },
                "local_19F0": {
                    "local_i_var19_f0": 1
                },
                "local_1A00": {
                    "local_i_var1_a00": 1
                },
                "local_1A10": {
                    "local_i_var1_a10": 1
                },
                "local_1A20": {
                    "local_i_var1_a20": 1
                },
                "local_1A30": {
                    "local_i_var1_a30": 1
                },
                "local_1A40": {
                    "local_i_var1_a40": 1
                },
                "local_1A50": {
                    "local_i_var1_a50": 1
                },
                "local_1A60": {
                    "local_i_var1_a60": 1
                },
                "local_1A70": {
                    "local_i_var1_a70": 1
                },
                "local_1A80": {
                    "local_i_var1_a80": 1
                },
                "local_1A90": {
                    "local_i_var1_a90": 1
                },
                "local_1AA0": {
                    "local_i_var1_aa0": 1
                },
                "local_1AB0": {
                    "local_i_var1_ab0": 1
                },
                "local_1AC0": {
                    "local_i_var1_ac0": 1
                },
                "local_1AD0": {
                    "local_i_var1_ad0": 1
                },
                "local_1AE0": {
                    "local_i_var1_ae0": 1
                },
                "local_1AF0": {
                    "local_i_var1_af0": 1
                },
                "local_1B00": {
                    "local_i_var1_b00": 1
                },
                "local_1B10": {
                    "local_i_var1_b10": 1
                },
                "local_1B20": {
                    "local_i_var1_b20": 1
                },
                "local_1B30": {
                    "local_i_var1_b30": 1
                },
                "local_1B40": {
                    "local_i_var1_b40": 1
                },
                "local_1B50": {
                    "local_i_var1_b50": 1
                },
                "local_1B60": {
                    "local_i_var1_b60": 1
                },
                "local_1B70": {
                    "local_i_var1_b70": 1
                },
                "local_1B80": {
                    "local_i_var1_b80": 1
                },
                "local_1B90": {
                    "local_i_var1_b90": 1
                },
                "local_1BA0": {
                    "local_i_var1_ba0": 1
                },
                "local_1BB0": {
                    "local_i_var1_bb0": 1
                },
                "local_1BC0": {
                    "local_i_var1_bc0": 1
                },
                "local_1BD0": {
                    "local_i_var1_bd0": 1
                },
                "local_1BE0": {
                    "local_i_var1_be0": 1
                },
                "local_1BF0": {
                    "local_i_var1_bf0": 1
                },
                "local_1C00": {
                    "local_i_var1_c00": 1
                },
                "local_1C10": {
                    "local_i_var1_c10": 1
                },
                "local_1C20": {
                    "local_i_var1_c20": 1
                },
                "local_1C30": {
                    "local_i_var1_c30": 1
                },
                "local_1C40": {
                    "local_i_var1_c40": 1
                },
                "local_1C50": {
                    "local_i_var1_c50": 1
                },
                "local_1C60": {
                    "local_i_var1_c60": 1
                },
                "local_1C70": {
                    "local_i_var1_c70": 1
                },
                "local_1C80": {
                    "local_i_var1_c80": 1
                },
                "local_1C90": {
                    "local_i_var1_c90": 1
                },
                "local_1CA0": {
                    "local_i_var1_ca0": 1
                },
                "local_1CB0": {
                    "local_i_var1_cb0": 1
                },
                "local_1CC0": {
                    "local_i_var1_cc0": 1
                },
                "local_1CD0": {
                    "local_i_var1_cd0": 1
                },
                "local_1CE0": {
                    "local_i_var1_ce0": 1
                },
                "local_1CF0": {
                    "local_i_var1_cf0": 1
                },
                "local_1D00": {
                    "local_i_var1_d00": 1
                },
                "local_1D10": {
                    "local_i_var1_d10": 1
                },
                "local_1D20": {
                    "local_i_var1_d20": 1
                },
                "local_1D30": {
                    "local_i_var1_d30": 1
                },
                "local_1D40": {
                    "local_i_var1_d40": 1
                },
                "local_1D50": {
                    "local_i_var1_d50": 1
                },
                "local_1D60": {
                    "local_i_var1_d60": 1
                },
                "local_1D70": {
                    "local_i_var1_d70": 1
                },
                "local_1D80": {
                    "local_i_var1_d80": 1
                },
                "local_1D90": {
                    "local_i_var1_d90": 1
                },
                "local_1DA0": {
                    "local_i_var1_da0": 1
                },
                "local_1DB0": {
                    "local_i_var1_db0": 1
                },
                "local_1DC0": {
                    "local_i_var1_dc0": 1
                },
                "local_1DD0": {
                    "local_i_var1_dd0": 1
                },
                "local_1DE0": {
                    "local_i_var1_de0": 1
                },
                "local_1DF0": {
                    "local_i_var1_df0": 1
                },
                "local_1E00": {
                    "local_i_var1_e00": 1
                },
                "local_1E10": {
                    "local_i_var1_e10": 1
                },
                "local_1E20": {
                    "local_i_var1_e20": 1
                },
                "local_1E30": {
                    "local_i_var1_e30": 1
                },
                "local_1E40": {
                    "local_i_var1_e40": 1
                },
                "local_1E50": {
                    "local_i_var1_e50": 1
                },
                "local_1E60": {
                    "local_i_var1_e60": 1
                },
                "local_1E70": {
                    "local_i_var1_e70": 1
                },
                "local_1E80": {
                    "local_i_var1_e80": 1
                },
                "local_1E90": {
                    "local_i_var1_e90": 1
                },
                "local_1EA0": {
                    "local_i_var1_ea0": 1
                },
                "local_1EB0": {
                    "local_i_var1_eb0": 1
                },
                "local_1EC0": {
                    "local_i_var1_ec0": 1
                },
                "local_1ED0": {
                    "local_i_var1_ed0": 1
                },
                "local_1EE0": {
                    "local_i_var1_ee0": 1
                },
                "local_1EF0": {
                    "local_i_var1_ef0": 1
                },
                "local_1F00": {
                    "local_i_var1_f00": 1
                },
                "local_1F10": {
                    "local_i_var1_f10": 1
                },
                "local_1F20": {
                    "local_i_var1_f20": 1
                },
                "local_1F30": {
                    "local_i_var1_f30": 1
                },
                "local_1F40": {
                    "local_i_var1_f40": 1
                },
                "local_1F50": {
                    "local_i_var1_f50": 1
                },
                "local_1F60": {
                    "local_i_var1_f60": 1
                },
                "local_1F70": {
                    "local_i_var1_f70": 1
                },
                "local_1F80": {
                    "local_i_var1_f80": 1
                },
                "local_1F90": {
                    "local_i_var1_f90": 1
                },
                "local_1FA0": {
                    "local_i_var1_fa0": 1
                },
                "local_1FB0": {
                    "local_i_var1_fb0": 1
                },
                "local_1FC0": {
                    "local_i_var1_fc0": 1
                },
                "local_4a0": {
                    "char_pointer_array": 1
                },
                "local_500": {
                    "char_array": 1
                },
                "local_678": {
                    "array_of_character_pointer_201": 1,
                    "buffer_stack_array": 1,
                    "char_pointer_array": 1,
                    "character_pointer_array": 1,
                    "local_array": 1,
                    "local_array_of_character": 1,
                    "local_char_array2": 1,
                    "local_char_array_1": 1,
                    "local_char_pointer_array678": 2,
                    "local_char_pointer_vector": 1,
                    "local_char_ptr_array": 1,
                    "local_character_array": 2,
                    "local_character_pointer_array": 2,
                    "local_string_array": 1,
                    "string_array": 1,
                    "string_buffer_array": 1
                },
                "local_6d8": {
                    "local_pointer_array": 1
                },
                "local_740": {
                    "array_of_character_200": 1,
                    "buffer_array": 1,
                    "char_array": 2,
                    "character_array": 1,
                    "local_array_of_character": 1,
                    "local_buffer": 1,
                    "local_char740": 2,
                    "local_char_array": 4,
                    "local_char_vector": 1,
                    "local_character_array": 3,
                    "string_buffer3": 1,
                    "temp_buffer": 1
                },
                "local_748": {
                    "local_character_array": 1
                },
                "local_780": {
                    "local_character_array": 1
                },
                "local_798": {
                    "local_integer": 1
                },
                "local_7a0": {
                    "local_character_array": 1
                },
                "local_7a8": {
                    "local_character_array": 1
                },
                "local_7b0": {
                    "local_character_array": 1
                },
                "local_7b8": {
                    "local_character_array": 1
                },
                "local_7c0": {
                    "local_character_array": 1
                },
                "local_7c8": {
                    "local_integer": 1
                },
                "local_7d0": {
                    "file_status": 1,
                    "local_stat": 4,
                    "local_stat7d0": 2,
                    "local_stat_structure": 1,
                    "local_stat_var": 1,
                    "local_stat_variable": 3,
                    "stat_structure": 4,
                    "stat_var": 1
                },
                "local_7e0": {
                    "local_integer": 1
                },
                "local_7e8": {
                    "local_integer": 1
                },
                "local_7f4": {
                    "stat_structure": 1
                },
                "local_7f8": {
                    "byte_pointer": 2,
                    "byte_pointer_3": 1,
                    "byte_var6": 1,
                    "input_buffer": 1,
                    "local_byte_pointer": 7,
                    "local_byte_pointer_variable": 1,
                    "local_pointer_byte7f8": 1,
                    "local_pointer_to_byte": 2,
                    "local_pointer_to_byte7f8": 1,
                    "local_ptr_to_byte": 1,
                    "loop_byte_pointer": 1,
                    "temp_pointer": 1
                },
                "local_7fc": {
                    "local_u_int": 1,
                    "local_u_int7fc": 1,
                    "local_uint": 4,
                    "local_uint7fc": 1,
                    "local_uint_var": 2,
                    "local_uint_variable": 1,
                    "local_unsigned_variable": 3,
                    "loop_condition": 1,
                    "loop_counter": 1,
                    "state": 1,
                    "uint": 1,
                    "uint_var5": 1,
                    "uint_variable_2": 1,
                    "unsigned_variable": 1
                },
                "local_8": {
                    "local_uint": 1
                },
                "local_800": {
                    "file_stack_count": 1,
                    "int_var4": 1,
                    "int_variable_4": 1,
                    "integer": 1,
                    "integer_variable": 1,
                    "local_i_var800": 1,
                    "local_int": 2,
                    "local_int800": 2,
                    "local_int_var": 1,
                    "local_int_variable": 1,
                    "local_integer": 4,
                    "local_integer_var": 1,
                    "local_integer_variable": 3,
                    "loop_counter": 1,
                    "loop_index": 1
                },
                "local_810": {
                    "buffer_stack": 2,
                    "char_pointer_pointer_1": 1,
                    "double_pointer_to_char": 2,
                    "double_pointer_to_character": 1,
                    "local_char_double_pointer": 1,
                    "local_char_pointer3": 1,
                    "local_char_pointer_pointer": 2,
                    "local_character_pointer": 2,
                    "local_character_pointer3": 1,
                    "local_double_pointer_to_char_pointer_variable": 1,
                    "local_double_pointer_to_character": 3,
                    "local_double_ptr_to_char": 1,
                    "local_pointer_pointer_char810": 1,
                    "local_pointer_to_pointer_char810": 1,
                    "local_pointer_to_pointer_to_char": 1,
                    "saved_file_stack": 1,
                    "temporary_buffer_pointer": 1
                },
                "local_818": {
                    "buffer_size": 5,
                    "local_l_var818": 1,
                    "local_long": 7,
                    "local_long818": 2,
                    "local_long_var": 1,
                    "local_long_variable": 4,
                    "long": 1,
                    "long_variable": 1,
                    "long_variable_5": 1
                },
                "local_820": {
                    "buffer": 1,
                    "buffer_start": 1,
                    "buffer_start_pointer": 1,
                    "char_pointer": 1,
                    "char_pointer_4": 1,
                    "character_pointer": 1,
                    "current_char2": 1,
                    "local_char_pointer": 1,
                    "local_char_pointer2": 3,
                    "local_char_pointer_2": 1,
                    "local_char_pointer_variable_1": 1,
                    "local_character_pointer": 3,
                    "local_character_pointer2": 1,
                    "local_pointer_char820": 1,
                    "local_pointer_to_char": 1,
                    "local_pointer_to_char820": 1,
                    "local_pointer_to_character": 2,
                    "local_ptr_to_char": 1,
                    "string_buffer2": 1
                },
                "local_828": {
                    "buffer_pointer": 1,
                    "char_pointer": 1,
                    "char_pointer_3": 1,
                    "character_pointer": 1,
                    "current_char": 2,
                    "current_ptr": 1,
                    "local_char_pointer": 4,
                    "local_char_pointer1": 1,
                    "local_char_pointer_variable": 1,
                    "local_character_pointer": 3,
                    "local_character_pointer1": 1,
                    "local_pointer_char828": 1,
                    "local_pointer_to_char": 1,
                    "local_pointer_to_char828": 1,
                    "local_pointer_to_character": 2,
                    "local_ptr_to_char": 1,
                    "string_buffer": 1
                },
                "local_830": {
                    "local_character_pointer": 1
                },
                "local_840": {
                    "local_i_var840": 1
                },
                "local_850": {
                    "local_i_var850": 1
                },
                "local_860": {
                    "local_i_var860": 1
                },
                "local_870": {
                    "local_i_var870": 1
                },
                "local_880": {
                    "local_i_var880": 1
                },
                "local_890": {
                    "local_i_var890": 1
                },
                "local_8A0": {
                    "local_i_var8_a0": 1
                },
                "local_8B0": {
                    "local_i_var8_b0": 1
                },
                "local_8C0": {
                    "local_i_var8_c0": 1
                },
                "local_8D0": {
                    "local_i_var8_d0": 1
                },
                "local_8E0": {
                    "local_i_var8_e0": 1
                },
                "local_8F0": {
                    "local_i_var8_f0": 1
                },
                "local_900": {
                    "local_i_var900": 1
                },
                "local_910": {
                    "local_i_var910": 1
                },
                "local_920": {
                    "local_i_var920": 1
                },
                "local_930": {
                    "local_i_var930": 1
                },
                "local_940": {
                    "local_i_var940": 1
                },
                "local_950": {
                    "local_i_var950": 1
                },
                "local_960": {
                    "local_i_var960": 1
                },
                "local_970": {
                    "local_i_var970": 1
                },
                "local_980": {
                    "local_i_var980": 1
                },
                "local_990": {
                    "local_i_var990": 1
                },
                "local_9A0": {
                    "local_i_var9_a0": 1
                },
                "local_9B0": {
                    "local_i_var9_b0": 1
                },
                "local_9C0": {
                    "local_i_var9_c0": 1
                },
                "local_9D0": {
                    "local_i_var9_d0": 1
                },
                "local_9E0": {
                    "local_i_var9_e0": 1
                },
                "local_9F0": {
                    "local_i_var9_f0": 1
                },
                "local_A00": {
                    "local_i_var_a00": 1
                },
                "local_A10": {
                    "local_i_var_a10": 1
                },
                "local_A20": {
                    "local_i_var_a20": 1
                },
                "local_A30": {
                    "local_i_var_a30": 1
                },
                "local_A40": {
                    "local_i_var_a40": 1
                },
                "local_A50": {
                    "local_i_var_a50": 1
                },
                "local_A60": {
                    "local_i_var_a60": 1
                },
                "local_A70": {
                    "local_i_var_a70": 1
                },
                "local_A80": {
                    "local_i_var_a80": 1
                },
                "local_A90": {
                    "local_i_var_a90": 1
                },
                "local_AA0": {
                    "local_i_var_aa0": 1
                },
                "local_AB0": {
                    "local_i_var_ab0": 1
                },
                "local_AC0": {
                    "local_i_var_ac0": 1
                },
                "local_AD0": {
                    "local_i_var_ad0": 1
                },
                "local_AE0": {
                    "local_i_var_ae0": 1
                },
                "local_AF0": {
                    "local_i_var_af0": 1
                },
                "local_B00": {
                    "local_i_var_b00": 1
                },
                "local_B10": {
                    "local_i_var_b10": 1
                },
                "local_B20": {
                    "local_i_var_b20": 1
                },
                "local_B30": {
                    "local_i_var_b30": 1
                },
                "local_B40": {
                    "local_i_var_b40": 1
                },
                "local_B50": {
                    "local_i_var_b50": 1
                },
                "local_B60": {
                    "local_i_var_b60": 1
                },
                "local_B70": {
                    "local_i_var_b70": 1
                },
                "local_B80": {
                    "local_i_var_b80": 1
                },
                "local_B90": {
                    "local_i_var_b90": 1
                },
                "local_BA0": {
                    "local_i_var_ba0": 1
                },
                "local_BB0": {
                    "local_i_var_bb0": 1
                },
                "local_BC0": {
                    "local_i_var_bc0": 1
                },
                "local_BD0": {
                    "local_i_var_bd0": 1
                },
                "local_BE0": {
                    "local_i_var_be0": 1
                },
                "local_BF0": {
                    "local_i_var_bf0": 1
                },
                "local_C00": {
                    "local_i_var_c00": 1
                },
                "local_C10": {
                    "local_i_var_c10": 1
                },
                "local_C20": {
                    "local_i_var_c20": 1
                },
                "local_C30": {
                    "local_i_var_c30": 1
                },
                "local_C40": {
                    "local_i_var_c40": 1
                },
                "local_C50": {
                    "local_i_var_c50": 1
                },
                "local_C60": {
                    "local_i_var_c60": 1
                },
                "local_C70": {
                    "local_i_var_c70": 1
                },
                "local_C80": {
                    "local_i_var_c80": 1
                },
                "local_C90": {
                    "local_i_var_c90": 1
                },
                "local_CA0": {
                    "local_i_var_ca0": 1
                },
                "local_CB0": {
                    "local_i_var_cb0": 1
                },
                "local_CC0": {
                    "local_i_var_cc0": 1
                },
                "local_CD0": {
                    "local_i_var_cd0": 1
                },
                "local_CE0": {
                    "local_i_var_ce0": 1
                },
                "local_CF0": {
                    "local_i_var_cf0": 1
                },
                "local_D00": {
                    "local_i_var_d00": 1
                },
                "local_D10": {
                    "local_i_var_d10": 1
                },
                "local_D20": {
                    "local_i_var_d20": 1
                },
                "local_D30": {
                    "local_i_var_d30": 1
                },
                "local_D40": {
                    "local_i_var_d40": 1
                },
                "local_D50": {
                    "local_i_var_d50": 1
                },
                "local_D60": {
                    "local_i_var_d60": 1
                },
                "local_D70": {
                    "local_i_var_d70": 1
                },
                "local_D80": {
                    "local_i_var_d80": 1
                },
                "local_D90": {
                    "local_i_var_d90": 1
                },
                "local_DA0": {
                    "local_i_var_da0": 1
                },
                "local_DB0": {
                    "local_i_var_db0": 1
                },
                "local_DC0": {
                    "local_i_var_dc0": 1
                },
                "local_DD0": {
                    "local_i_var_dd0": 1
                },
                "local_DE0": {
                    "local_i_var_de0": 1
                },
                "local_DF0": {
                    "local_i_var_df0": 1
                },
                "local_E00": {
                    "local_i_var_e00": 1
                },
                "local_E10": {
                    "local_i_var_e10": 1
                },
                "local_E20": {
                    "local_i_var_e20": 1
                },
                "local_E30": {
                    "local_i_var_e30": 1
                },
                "local_E40": {
                    "local_i_var_e40": 1
                },
                "local_E50": {
                    "local_i_var_e50": 1
                },
                "local_E60": {
                    "local_i_var_e60": 1
                },
                "local_E70": {
                    "local_i_var_e70": 1
                },
                "local_E80": {
                    "local_i_var_e80": 1
                },
                "local_E90": {
                    "local_i_var_e90": 1
                },
                "local_EA0": {
                    "local_i_var_ea0": 1
                },
                "local_EB0": {
                    "local_i_var_eb0": 1
                },
                "local_EC0": {
                    "local_i_var_ec0": 1
                },
                "local_ED0": {
                    "local_i_var_ed0": 1
                },
                "local_EE0": {
                    "local_i_var_ee0": 1
                },
                "local_EF0": {
                    "local_i_var_ef0": 1
                },
                "local_F00": {
                    "local_i_var_f00": 1
                },
                "local_F10": {
                    "local_i_var_f10": 1
                },
                "local_F20": {
                    "local_i_var_f20": 1
                },
                "local_F30": {
                    "local_i_var_f30": 1
                },
                "local_F40": {
                    "local_i_var_f40": 1
                },
                "local_F50": {
                    "local_i_var_f50": 1
                },
                "local_F60": {
                    "local_i_var_f60": 1
                },
                "local_F70": {
                    "local_i_var_f70": 1
                },
                "local_F80": {
                    "local_i_var_f80": 1
                },
                "local_F90": {
                    "local_i_var_f90": 1
                },
                "local_FA0": {
                    "local_i_var_fa0": 1
                },
                "local_FB0": {
                    "local_i_var_fb0": 1
                },
                "local_FC0": {
                    "local_i_var_fc0": 1
                },
                "local_FD0": {
                    "local_i_var_fd0": 1
                },
                "local_FE0": {
                    "local_i_var_fe0": 1
                },
                "local_FF0": {
                    "local_i_var_ff0": 1
                },
                "oVar36": {
                    "o_var36": 1
                },
                "pFVar4": {
                    "file_pointer": 13,
                    "file_var": 1,
                    "file_variable": 2,
                    "pointer_file_var4": 1,
                    "pointer_to_file": 5,
                    "pointer_to_file_var4": 1
                },
                "pVar4": {
                    "file_var": 1
                },
                "pbVar30": {
                    "character": 1
                },
                "pbVar32": {
                    "buffer_end": 1,
                    "buffer_start": 1,
                    "byte_pointer": 5,
                    "byte_pointer1": 1,
                    "byte_pointer2": 2,
                    "byte_pointer_1": 1,
                    "byte_pointer_2": 1,
                    "byte_pointer_variable_1": 1,
                    "byte_var3": 2,
                    "character_pointer": 1,
                    "pb_var32": 1,
                    "pointer_byte_var32": 1,
                    "pointer_to_byte": 7
                },
                "pbVar33": {
                    "buffer_end": 1,
                    "byte_pointer": 5,
                    "byte_pointer2": 1,
                    "byte_pointer3": 2,
                    "byte_pointer_2": 1,
                    "byte_pointer_3": 1,
                    "byte_pointer_variable_2": 1,
                    "byte_var4": 2,
                    "pointer_byte_var33": 1,
                    "pointer_to_byte": 7,
                    "pointer_to_byte_var33": 1
                },
                "pbVar35": {
                    "buffer_position": 1,
                    "buffer_ptr": 1,
                    "byte_pointer": 5,
                    "byte_pointer3": 1,
                    "byte_pointer4": 2,
                    "byte_pointer_2": 1,
                    "byte_pointer_4": 1,
                    "byte_pointer_variable_3": 1,
                    "byte_var5": 2,
                    "character_pointer2": 1,
                    "pb_var35": 1,
                    "pointer_byte_var35": 1,
                    "pointer_to_byte": 7
                },
                "pbVar36": {
                    "byte_pointer": 1,
                    "byte_pointer5": 1,
                    "pointer_to_byte": 2
                },
                "pbVar37": {
                    "pointer_to_byte": 1
                },
                "pbVar38": {
                    "byte_pointer": 1
                },
                "pbVar39": {
                    "byte_pointer": 3,
                    "byte_var2": 1,
                    "byte_var39": 2,
                    "byte_var6": 1,
                    "byte_var_2": 1,
                    "byte_variable": 1,
                    "byte_variable_2": 1,
                    "is_match": 1,
                    "pointer_byte_var39": 1,
                    "pointer_to_byte": 2
                },
                "pbVar6": {
                    "pointer_to_byte": 1
                },
                "pbVar7": {
                    "byte_pointer": 11,
                    "byte_pointer_variable": 1,
                    "byte_var": 2,
                    "pointer_byte_var7": 1,
                    "pointer_to_byte": 7,
                    "pointer_to_byte_var7": 1
                },
                "pcVar10": {
                    "char_pointer": 5,
                    "char_pointer_variable": 1,
                    "char_var": 1,
                    "char_var2": 1,
                    "char_var_2": 1,
                    "char_variable": 1,
                    "char_variable_1": 1,
                    "character_pointer": 4,
                    "error_message": 2,
                    "pc_var10": 2,
                    "pointer_char_var10": 1,
                    "pointer_to_char_var10": 1,
                    "pointer_to_character": 3,
                    "temp_char_pointer": 1
                },
                "pcVar15": {
                    "char_pointer": 4,
                    "char_pointer2": 1,
                    "char_pointer_1": 1,
                    "char_pointer_variable_1": 1,
                    "char_var2": 1,
                    "char_var3": 1,
                    "char_var_3": 1,
                    "char_variable_2": 1,
                    "character_pointer": 3,
                    "pc_var15": 2,
                    "pointer_char_var15": 1,
                    "pointer_to_char_var15": 1,
                    "pointer_to_character": 2,
                    "source": 1,
                    "temp_char_pointer": 1
                },
                "pcVar16": {
                    "char_pointer": 4,
                    "char_pointer3": 1,
                    "char_pointer_2": 1,
                    "char_pointer_variable_2": 1,
                    "char_var3": 1,
                    "char_var4": 1,
                    "char_var_4": 1,
                    "char_variable_3": 1,
                    "character_pointer": 3,
                    "destination": 1,
                    "pc_var16": 2,
                    "pointer_char_var16": 1,
                    "pointer_to_char_var16": 1,
                    "pointer_to_character": 2,
                    "temp_char_pointer2": 1
                },
                "pcVar27": {
                    "char_pointer": 1
                },
                "piVar34": {
                    "byte_value": 1,
                    "int_pointer": 7,
                    "int_pointer1": 1,
                    "int_pointer_variable": 1,
                    "integer_pointer": 5,
                    "pointer_int_var34": 1,
                    "pointer_to_int": 2,
                    "pointer_to_int_var34": 1,
                    "pointer_to_integer": 5
                },
                "pioVar5": {
                    "pointer_to_integer": 1
                },
                "plVar12": {
                    "long_pointer": 5,
                    "long_pointer2": 3,
                    "long_pointer_1": 1,
                    "long_pointer_2": 1,
                    "long_pointer_variable_1": 1,
                    "long_var_2": 1,
                    "pl_var12": 1,
                    "pointer_to_long": 7,
                    "previous_buffer": 1
                },
                "plVar5": {
                    "current_buffer": 1,
                    "long_pointer": 11,
                    "long_pointer_variable": 1,
                    "long_var": 3,
                    "pointer_long_var5": 1,
                    "pointer_to_long": 7,
                    "pointer_to_long_var5": 1
                },
                "poVar43": {
                    "pointer_to_integer": 1
                },
                "ppFVar3": {
                    "double_file_pointer": 2,
                    "double_pointer_pointer": 4,
                    "double_pointer_to_file": 9,
                    "double_pointer_to_file_variable": 1,
                    "double_pointer_to_pointer": 1,
                    "file_pointer_pointer": 1,
                    "pointer_to_file_pointer": 2,
                    "pointer_to_pointer_file_var3": 2,
                    "pointer_to_pointer_to_file": 1
                },
                "ppVar3": {
                    "file_pointer": 1
                },
                "ppaVar40": {
                    "double_pointer_to_undefined": 1
                },
                "ppcVar27": {
                    "another_string_pointer2": 1,
                    "char_double_pointer": 1,
                    "char_pointer": 1,
                    "char_pointer_pointer": 3,
                    "character_pointer_pointer": 2,
                    "double_pointer_to_char": 3,
                    "double_pointer_to_char_pointer_variable": 1,
                    "double_pointer_to_character": 4,
                    "pointer_to_char_pointer": 1,
                    "pointer_to_character_pointer": 1,
                    "pointer_to_pointer_char_var27": 2,
                    "pointer_to_pointer_to_char": 1,
                    "temporary_pointer2": 1
                },
                "ppcVar29": {
                    "char_double_pointer2": 1,
                    "char_pointer3": 1,
                    "char_pointer_pointer": 1,
                    "char_pointer_pointer_2": 1,
                    "character_pointer_pointer": 1,
                    "double_pointer_to_char": 2,
                    "double_pointer_to_char_pointer_variable_3": 1,
                    "double_pointer_to_character": 3,
                    "file_stack": 1,
                    "function_stack": 1,
                    "pointer_to_char_pointer": 1,
                    "pointer_to_character_pointer": 1,
                    "pointer_to_pointer_char_var29": 2,
                    "pointer_to_pointer_to_char": 1,
                    "string_pointer": 1,
                    "temporary_pointer": 1
                },
                "ppcVar35": {
                    "pointer_to_character_pointer": 1
                },
                "ppcVar37": {
                    "pointer_to_character_pointer": 1
                },
                "ppcVar38": {
                    "another_string_pointer": 1,
                    "char_pointer2": 1,
                    "character_pointer_pointer2": 1,
                    "double_pointer_to_char": 1,
                    "double_pointer_to_char_pointer_variable_1": 1,
                    "double_pointer_to_character": 1,
                    "match_buffer": 1,
                    "pointer_to_char_pointer": 1,
                    "pointer_to_character_pointer": 1,
                    "pointer_to_pointer_to_char": 1
                },
                "ppcVar44": {
                    "pointer_to_character_pointer": 1
                },
                "pplVar1": {
                    "double_pointer": 11,
                    "double_pointer_array": 2,
                    "double_pointer_parameter": 1,
                    "double_pointer_to_long": 2,
                    "pointer_to_long_pointer": 3,
                    "pointer_to_pointer_var1": 2
                },
                "pplVar49": {
                    "pointer_to_long_pointer": 1
                },
                "ppvVar38": {
                    "double_pointer_to_void": 1
                },
                "ppvar1": {
                    "double_pointer": 1
                },
                "ptr_to_buff": {
                    "pointer_to_buffer": 1
                },
                "puVar11": {
                    "pointer_to_undefined8": 1
                },
                "puVar22": {
                    "buffer_state": 1,
                    "pointer_to_u_var22": 2,
                    "pointer_to_undefined8": 2,
                    "pointer_to_undefined_8": 1,
                    "pointer_to_unsigned": 1,
                    "pointer_to_unsigned_variable": 1,
                    "pointer_undef_var22": 1,
                    "pointer_var1": 1,
                    "pu_var22": 1,
                    "undefined8_pointer": 9,
                    "undefined8_pointer_variable_3": 1,
                    "undefined_var2": 1,
                    "unsigned_long_pointer": 2
                },
                "puVar23": {
                    "buffer": 1,
                    "pointer_to_u_var23": 2,
                    "pointer_to_undefined8": 2,
                    "pointer_to_undefined_8": 1,
                    "pointer_to_unsigned": 1,
                    "pointer_to_unsigned_variable": 1,
                    "pointer_to_var23": 1,
                    "pointer_undef_var23": 1,
                    "pointer_var2": 1,
                    "undefined8_pointer": 5,
                    "undefined8_pointer2": 2,
                    "undefined8_pointer_1": 1,
                    "undefined8_pointer_2": 1,
                    "undefined8_pointer_variable_1": 1,
                    "undefined_var3": 1,
                    "unsigned_long_pointer": 1,
                    "unsigned_long_pointer2": 1
                },
                "pvVar14": {
                    "pointer_to_void": 6,
                    "pv_var14": 2,
                    "void_pointer": 10,
                    "void_pointer_variable_2": 1,
                    "void_var": 3
                },
                "pvVar41": {
                    "pointer_to_void": 1
                },
                "sVar13": {
                    "bytes_read": 1,
                    "bytes_written": 1,
                    "s_var13": 3,
                    "size": 1,
                    "size_t": 4,
                    "size_t_variable": 3,
                    "size_value": 1,
                    "size_var": 4,
                    "size_var13": 1,
                    "size_variable": 5
                },
                "stat": {
                    "stat_structure": 1
                },
                "uVar11": {
                    "current_unsigned_long": 1,
                    "file_name": 1,
                    "temp2": 1,
                    "u_var11": 3,
                    "uint_var2": 1,
                    "undefined8": 1,
                    "undefined8_var": 2,
                    "undefined8_variable": 2,
                    "undefined8_variable_1": 1,
                    "undefined8_variable_2": 1,
                    "undefined8_variable_3": 1,
                    "undefined_8_var": 1,
                    "undefined_var11": 1,
                    "undefined_var_2": 1,
                    "undefined_variable": 1,
                    "unsigned_long_variable": 1,
                    "unsigned_variable": 2
                },
                "uVar19": {
                    "local_ulong": 1,
                    "state": 1,
                    "u_var19": 3,
                    "ulong": 3,
                    "ulong_var": 3,
                    "ulong_var1": 1,
                    "ulong_var19": 1,
                    "ulong_variable": 4,
                    "unsigned_long_variable": 1,
                    "unsigned_variable": 3
                },
                "uVar20": {
                    "current_integer": 1,
                    "local_uint": 1,
                    "next_state": 1,
                    "state": 1,
                    "u_var20": 2,
                    "uint": 3,
                    "uint_var": 3,
                    "uint_var20": 2,
                    "uint_variable": 4,
                    "ulong_var2": 1,
                    "unsigned_variable": 4
                },
                "uVar24": {
                    "bytes_read": 1,
                    "local_uint": 1,
                    "read_bytes": 1,
                    "u_var24": 2,
                    "uint": 3,
                    "uint_var": 1,
                    "uint_var2": 1,
                    "uint_var24": 3,
                    "uint_var3": 1,
                    "uint_var_2": 1,
                    "uint_variable": 1,
                    "uint_variable2": 1,
                    "uint_variable_1": 2,
                    "unsigned_variable": 4,
                    "ushort_var1": 1
                },
                "uVar26": {
                    "current_long": 1,
                    "current_state": 2,
                    "local_ulong": 1,
                    "u_var26": 3,
                    "ulong": 3,
                    "ulong_var": 2,
                    "ulong_var2": 1,
                    "ulong_var26": 2,
                    "ulong_var3": 1,
                    "ulong_var_2": 1,
                    "ulong_variable": 1,
                    "ulong_variable2": 1,
                    "ulong_variable_1": 2,
                    "unsigned_variable": 4
                },
                "uVar36": {
                    "byte_index": 1,
                    "current_unsigned_integer": 1,
                    "local_uint": 1,
                    "u_var36": 1,
                    "uint": 1,
                    "uint_var4": 1,
                    "uint_variable_2": 1
                },
                "uVar39": {
                    "local_uint": 1,
                    "u_var39": 1
                },
                "uVar6": {
                    "current_unsigned_long2": 1,
                    "temp": 1,
                    "u_var6": 2,
                    "uint_var": 1,
                    "undefined8": 1,
                    "undefined8_var": 2,
                    "undefined8_variable": 5,
                    "undefined8_variable_1": 1,
                    "undefined_8_var": 1,
                    "undefined_var": 2,
                    "undefined_var6": 3,
                    "undefined_variable": 1,
                    "unsigned_long_variable": 1,
                    "unsigned_variable": 2
                }
            },
            "called": [
                "FUN_001033d6",
                "FUN_00102030",
                "FUN_00103ba8",
                "FUN_00103ddc",
                "FUN_001032a8",
                "FUN_00102130",
                "FUN_001020e0",
                "FUN_001020b0",
                "FUN_00107740",
                "FUN_0010300e",
                "FUN_001021d0",
                "FUN_00103c60",
                "FUN_00105300",
                "FUN_00102170",
                "FUN_001031cf",
                "FUN_00102400",
                "FUN_00102100",
                "FUN_00102560",
                "FUN_001030ed",
                "FUN_0010312d",
                "FUN_00102060",
                "FUN_00102470",
                "FUN_00105bc0",
                "FUN_00102490",
                "FUN_00102340",
                "FUN_00102510",
                "FUN_001023b0",
                "FUN_00102420",
                "FUN_00102140",
                "FUN_00102070",
                "FUN_001033b0",
                "FUN_0010315d",
                "FUN_001021a0",
                "FUN_00103df9",
                "FUN_00102050",
                "FUN_001031a5",
                "FUN_00102360",
                "FUN_00102330",
                "FUN_00102270",
                "FUN_00102310"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid decompiled_function_00103e95(void)\n\n{\n  long **double_pointer;\n  char char_var;\n  FILE **double_pointer_to_file;\n  FILE *file_pointer;\n  long *long_pointer;\n  undefined8 undefined8_variable;\n  byte *byte_pointer;\n  int integer_variable;\n  char *char_pointer;\n  undefined8 u_var11;\n  int integer_variable;\n  long *pointer_to_long;\n  size_t size_variable;\n  void *void_pointer;\n  char *char_pointer;\n  char *char_pointer;\n  long long_variable;\n  long long_variable;\n  ulong ulong_variable;\n  uint uint_variable;\n  long long_variable;\n  undefined8 *undefined8_pointer;\n  undefined8 *undefined8_pointer;\n  uint unsigned_variable;\n  int integer_variable;\n  ulong unsigned_variable;\n  char **double_pointer_to_character;\n  bool boolean_variable;\n  char **double_pointer_to_character;\n  byte byte_variable;\n  long long_variable;\n  byte *pointer_to_byte;\n  byte *pointer_to_byte;\n  int *int_pointer;\n  byte *pointer_to_byte;\n  uint local_uint;\n  int integer;\n  char **char_pointer2;\n  byte byte;\n  undefined au_var40 [16];\n  undefined undefined_var2 [16];\n  char *local_char_pointer;\n  char *local_char_pointer2;\n  long local_long;\n  char **local_double_pointer_to_character;\n  int local_integer;\n  uint local_uint;\n  byte *local_byte_pointer;\n  stat_structure stat_structure;\n  char local_char_array [200];\n  char *local_char_pointer_array678 [201];\n  \n  byte = 0;\n  long_variable = 0;\n  DAT_0010d550 = -2;\n  double_pointer_to_character = local_char_pointer_array678;\n  local_integer = 0;\n  local_char_pointer = local_char_array;\n  local_long = 200;\n  local_char_pointer2 = local_char_pointer;\n  local_double_pointer_to_character = double_pointer_to_character;\nLAB_00103ee9:\n  *local_char_pointer = (char)long_variable;\n  if (local_char_pointer2 + local_long + -1 <= local_char_pointer) {\n    long_variable = (long)local_char_pointer - (long)local_char_pointer2;\n    long_variable = long_variable + 1;\n    if (local_long < 10000) {\n      long_variable = local_long * 2;\n      local_long = 10000;\n      if (long_variable < 0x2711) {\n        local_long = long_variable;\n      }\n      char_pointer = (char *)malloc(local_long * 9 + 7);\n      if (char_pointer != (char *)0x0) {\n        long_variable = long_variable * 8;\n        char_pointer = local_char_pointer2;\n        char_pointer = char_pointer;\n        for (; long_variable != 0; long_variable = long_variable + -1) {\n          *char_pointer = *char_pointer;\n          char_pointer = char_pointer + (ulong)byte * -2 + 1;\n          char_pointer = char_pointer + (ulong)byte * -2 + 1;\n        }\n        char_pointer2 = (char **)(char_pointer + local_long);\n        double_pointer_to_character = char_pointer2;\n        for (; long_variable != 0; long_variable = long_variable + -1) {\n          *(undefined *)double_pointer_to_character = *(undefined *)local_double_pointer_to_character;\n          local_double_pointer_to_character = (char **)((long)local_double_pointer_to_character + (ulong)byte * -2 + 1);\n          double_pointer_to_character = (char **)((long)double_pointer_to_character + (ulong)byte * -2 + 1);\n        }\n        if (local_char_pointer2 != local_char_array) {\n          free(local_char_pointer2);\n        }\n        local_char_pointer = char_pointer + long_variable;\n        double_pointer_to_character = char_pointer2 + long_variable;\n        local_char_pointer2 = char_pointer;\n        local_double_pointer_to_character = char_pointer2;\n        if (char_pointer + local_long + -1 <= local_char_pointer) goto LAB_00105265;\n        goto LAB_00103fd8;\n      }\n    }\n    yyerror_constprop_0();\nLAB_0010524c:\n    char_pointer = local_char_pointer2;\n    if (local_char_pointer2 == local_char_array) {\n      return;\n    }\nLAB_00105265:\n    free(char_pointer);\n    return;\n  }\nLAB_00103fd8:\n  integer = (int)long_variable;\n  if (integer == 3) goto LAB_0010524c;\n  char_var = (&DAT_0010a200)[integer];\n  if (char_var != -0xe) {\n    if (DAT_0010d550 == -2) {\n      if (_DAT_0010d540 == 0) {\n        _DAT_0010d540 = 1;\n        if (DAT_0010d5d0 == 0) {\n          DAT_0010d5d0 = 1;\n        }\n        if (DAT_0010d590 == (FILE *)0x0) {\n          DAT_0010d590 = _stdin;\n        }\n        if (DAT_0010d538 == (FILE *)0x0) {\n          DAT_0010d538 = _stdout;\n        }\n        if ((DAT_0010d5a8 == 0) || (*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) == 0)) {\n          yyensure_buffer_stack();\n          undefined8_pointer = (undefined8 *)(DAT_0010d5a8 + DAT_0010d5a0 * 8);\n          u_var11 = yy_create_buffer_constprop_0(DAT_0010d590);\n          *undefined8_pointer = u_var11;\n        }\n        yy_load_buffer_stat_structuree();\n      }\nLAB_001040b1:\n      *DAT_0010d5b0 = DAT_0010d588;\n      pointer_to_byte = DAT_0010d5b0;\n      pointer_to_byte = DAT_0010d5b0;\n      uint_variable = DAT_0010d5d0;\nLAB_001040d4:\n      ulong_variable = (ulong)uint_variable;\n      unsigned_variable = (ulong)local_uint;\n      boolean_variable = false;\n      do {\n        byte_variable = (&DAT_0010ab00)[*pointer_to_byte];\n        if (*(short *)(&DAT_0010a980 + (long)(int)ulong_variable * 2) != 0) {\n          boolean_variable = true;\n          unsigned_variable = ulong_variable & 0xffffffff;\n          local_byte_pointer = pointer_to_byte;\n        }\n        while( true ) {\n          integer_variable = (int)ulong_variable;\n          long_variable = (long)(int)((int)*(short *)(&DAT_0010a640 + (long)integer_variable * 2) + (uint)byte_variable);\n          if (integer_variable == *(short *)(&DAT_0010a440 + long_variable * 2)) break;\n          ulong_variable = (ulong)(uint)(int)*(short *)(&DAT_0010a800 + (long)integer_variable * 2);\n          if (0xb0 < *(short *)(&DAT_0010a800 + (long)integer_variable * 2)) {\n            byte_variable = (&DAT_0010a7c0)[(int)(uint)byte_variable];\n          }\n        }\n        pointer_to_byte = pointer_to_byte + 1;\n        ulong_variable = (ulong)*(short *)(&DAT_0010a240 + long_variable * 2);\n      } while (*(short *)(&DAT_0010a640 + ulong_variable * 2) != 0xc2);\n      local_uint = (uint)unsigned_variable;\n      pointer_to_byte = pointer_to_byte;\n      if (boolean_variable) {\n        DAT_0010d5b8 = local_byte_pointer;\n        DAT_0010d5c0 = local_uint;\n      }\nLAB_0010419f:\n      integer_variable = (int)*(short *)(&DAT_0010a980 + (long)(int)ulong_variable * 2);\n      if (integer_variable == 0) {\n        integer_variable = (int)*(short *)(&DAT_0010a980 + (long)(int)DAT_0010d5c0 * 2);\n        pointer_to_byte = DAT_0010d5b8;\n      }\n      DAT_0010d530 = (int)pointer_to_byte - (int)pointer_to_byte;\n      DAT_0010d588 = *pointer_to_byte;\n      DAT_0010d5b0 = pointer_to_byte;\n      DAT_0010d5c8 = pointer_to_byte;\n      *pointer_to_byte = 0;\nLAB_001041f0:\n      pointer_to_byte = DAT_0010d5c8;\n      long_variable = DAT_0010d5a0;\n      switch(integer_variable) {\n      case 0:\n        goto switchD_00104200_caseD_0;\n      case 1:\n      case 0x10:\n        DAT_0010d550 = 0x105;\n        break;\n      case 2:\n      case 0x11:\n        DAT_0010d550 = 0x107;\n        break;\n      case 3:\n      case 0x12:\n        DAT_0010d550 = 0x108;\n        break;\n      case 4:\n      case 0x13:\n        DAT_0010d550 = 0x109;\n        break;\n      case 5:\n      case 0x14:\n        DAT_0010d550 = 0x10a;\n        break;\n      case 6:\n      case 0x15:\n        DAT_0010d550 = 0x10b;\n        break;\n      case 7:\n      case 0x16:\n        DAT_0010d550 = 0x10c;\n        break;\n      case 8:\n      case 0x17:\n        DAT_0010d550 = 0x10d;\n        break;\n      case 9:\n      case 0x18:\n        DAT_0010d550 = 0x10e;\n        break;\n      case 10:\n      case 0x19:\n        DAT_0010d550 = 0x10f;\n        break;\n      case 0xb:\n      case 0x1a:\n        DAT_0010d550 = 0x106;\n        break;\n      case 0xc:\n      case 0x1b:\n        DAT_0010d550 = 0x113;\n        break;\n      case 0xd:\n      case 0x1c:\n        DAT_0010d550 = 0x111;\n        break;\n      case 0xe:\n      case 0x1d:\n        DAT_0010d550 = 0x103;\n        break;\n      case 0x1f:\n        DAT_0010d554 = DAT_0010d554 + 1;\n        goto LAB_001040b1;\n      case 0x20:\n        DAT_0010d550 = 0x28;\n        break;\n      case 0x21:\n        DAT_0010d550 = 0x29;\n        break;\n      case 0x22:\n        DAT_0010d550 = 0x2c;\n        break;\n      case 0x23:\n        DAT_0010d548 = (char *)xstrdup(DAT_0010d5c8);\n        DAT_0010d550 = 0x104;\n        break;\n      case 0x24:\n      case 0x25:\n      case 0x26:\n        goto LAB_001040b1;\n      case 0x27:\n        DAT_0010d554 = DAT_0010d554 + 1;\n        DAT_0010d550 = 0x102;\n        break;\n      case 0x28:\n        fwrite(DAT_0010d5c8,(long)DAT_0010d530,1,DAT_0010d538);\n        goto LAB_001040b1;\n      case 0x29:\n        goto switchD_00104200_caseD_29;\n      case 0x2a:\n        DAT_0010d550 = 0;\n        break;\n      default:\n        yy_fatal_error(\"fatal flex scanner internal error--no actintegern found\");\n      case 0xf:\n      case 0x1e:\n        DAT_0010d550 = 0x112;\n      }\n      long_variable = (long)integer;\n    }\n    if (0 < DAT_0010d550) {\n      if (DAT_0010d550 != 0x100) {\n        integer = 2;\n        if (DAT_0010d550 < 0x114) {\n          integer = (int)(char)(&DAT_0010a0e0)[DAT_0010d550];\n        }\n        goto LAB_0010497d;\n      }\n      DAT_0010d550 = 0x101;\n      goto LAB_001051f0;\n    }\n    integer = 0;\n    DAT_0010d550 = 0;\nLAB_0010497d:\n    uint_variable = char_var + integer;\n    if ((0x22 < uint_variable) || (integer != (char)(&DAT_0010a0a0)[(int)uint_variable])) goto LAB_001049db;\n    char_var = (&DAT_0010a060)[(int)uint_variable];\n    long_variable = (long)char_var;\n    if (char_var < '\\x01') {\n      integer = -(int)char_var;\n      goto LAB_00104a0a;\n    }\n    DAT_0010d550 = -2;\n    local_integer = local_integer + -1 + (uint)(local_integer == 0);\n    double_pointer_to_character = double_pointer_to_character + 1;\n    *double_pointer_to_character = DAT_0010d548;\n    goto LAB_001049d1;\n  }\nLAB_001049db:\n  integer = (int)(char)(&DAT_0010a020)[(int)long_variable];\n  if ((&DAT_0010a020)[(int)long_variable] == '\\0') {\n    if (local_integer == 0) {\n      _DAT_0010d544 = _DAT_0010d544 + 1;\n      yyerror_constprop_0();\nLAB_001051f0:\n      do {\n        if (((((char)(&DAT_0010a200)[long_variable] != -0xe) &&\n             (uint_variable = (int)(char)(&DAT_0010a200)[long_variable] + 1, uint_variable < 0x23)) &&\n            ((&DAT_0010a0a0)[(int)uint_variable] == '\\x01')) &&\n           (long_variable = (long)(char)(&DAT_0010a060)[(int)uint_variable],\n           '\\0' < (char)(&DAT_0010a060)[(int)uint_variable])) goto LAB_00105227;\n        if (local_char_pointer2 == local_char_pointer) goto LAB_0010524c;\n        local_char_pointer = local_char_pointer + -1;\n        double_pointer_to_character = double_pointer_to_character + -1;\n        long_variable = (long)*local_char_pointer;\n      } while( true );\n    }\n    if (local_integer != 3) goto LAB_001051f0;\n    if (0 < DAT_0010d550) {\n      DAT_0010d550 = -2;\n      goto LAB_001051f0;\n    }\n    if (DAT_0010d550 != 0) goto LAB_001051f0;\n    goto LAB_0010524c;\n  }\nLAB_00104a0a:\n  u_var11 = DAT_0010d660;\n  double_pointer_to_character = DAT_0010d558;\n  char_var = (&DAT_00109fe0)[integer];\n  char_pointer2 = (char **)double_pointer_to_character[1 - char_var];\n  switch(integer) {\n  case 2:\n  case 6:\n    prompt();\n    break;\n  case 0x13:\n    if (DAT_0010d558 == (char **)0x0) {\n      return;\n    }\n    bfd_cache_close();\n    unlink(*DAT_0010d558);\n    return;\n  case 0x15:\n    yyerror_constprop_0();\n    break;\n  case 0x17:\n    undefined8_pointer = (undefined8 *)*double_pointer_to_character;\n    if (DAT_0010d558 == (char **)0x0) {\n      char_pointer = \"%s: no open archive\\n\";\nLAB_00104b62:\n      char_pointer = (char *)dcgettext(0,char_pointer,5);\n      fprintf(_stderr,char_pointer,u_var11);\n      maybequit();\n    }\n    else {\n      for (; undefined8_pointer != (undefined8 *)0x0; undefined8_pointer = (undefined8 *)undefined8_pointer[1]) {\n        for (undefined8_pointer = (undefined8 *)DAT_0010d558[0x1f]; undefined8_pointer != (undefined8 *)0x0;\n            undefined8_pointer = (undefined8 *)undefined8_pointer[0x1e]) {\n          integer_variable = filename_cmp(*undefined8_pointer);\n          if (integer_variable == 0) {\n            extract_file();\n            goto LAB_00104adf;\n          }\n        }\n        bfd_openr(*undefined8_pointer,0);\n        undefined8_variable = DAT_0010d660;\n        u_var11 = *undefined8_pointer;\n        char_pointer = (char *)dcgettext(0,\"%s: can\\'t find module file %s\\n\",5);\n        fprintf(_stderr,char_pointer,undefined8_variable,u_var11);\nLAB_00104adf:\n      }\n    }\n    break;\n  case 0x18:\n    undefined8_pointer = (undefined8 *)*double_pointer_to_character;\n    if (DAT_0010d558 == (char **)0x0) {\nLAB_00104b4f:\n      char_pointer = \"%s: no open output archive\\n\";\n      goto LAB_00104b62;\n    }\n    for (; undefined8_pointer != (undefined8 *)0x0; undefined8_pointer = (undefined8 *)undefined8_pointer[1]) {\n      boolean_variable = false;\n      double_pointer_to_character = DAT_0010d558 + 0x1f;\n      for (char_pointer = DAT_0010d558[0x1f]; char_pointer != (char *)0x0;\n          char_pointer = *(char **)(char_pointer + 0xf0)) {\n        integer_variable = filename_cmp();\n        if (integer_variable == 0) {\n          char_pointer = (char *)bfd_openr(*undefined8_pointer,0);\n          u_var11 = DAT_0010d660;\n          if (char_pointer == (char *)0x0) {\n            undefined8_variable = *undefined8_pointer;\n            char_pointer = (char *)dcgettext(0,\"%s: can\\'t open file %s\\n\",5);\n            fprintf(_stderr,char_pointer,u_var11,undefined8_variable);\n            maybequit();\n          }\n          else {\n            *double_pointer_to_character = char_pointer;\n            boolean_variable = true;\n            *(undefined8 *)(char_pointer + 0xf0) = *(undefined8 *)(char_pointer + 0xf0);\n          }\n        }\n        else {\n          double_pointer_to_character = (char **)(char_pointer + 0xf0);\n        }\n      }\n      if (!boolean_variable) {\n        char_pointer = (char *)bfd_openr(*undefined8_pointer,0);\n        undefined8_variable = DAT_0010d660;\n        u_var11 = *undefined8_pointer;\n        char_pointer = (char *)dcgettext(0,\"%s: can\\'t find module file %s\\n\",5);\n        fprintf(_stderr,char_pointer,undefined8_variable,u_var11);\n        u_var11 = DAT_0010d660;\n        if (char_pointer == (char *)0x0) {\n          undefined8_variable = *undefined8_pointer;\n          char_pointer = (char *)dcgettext(0,\"%s: can\\'t open file %s\\n\",5);\n          fprintf(_stderr,char_pointer,u_var11,undefined8_variable);\n          maybequit();\n        }\n        else {\n          *double_pointer_to_character = char_pointer;\n        }\n      }\n    }\n    break;\n  case 0x19:\n    if (DAT_0010d558 != (char **)0x0) {\n      DAT_0010d558[0x1f] = (char *)0x0;\n    }\n    break;\n  case 0x1a:\n    undefined8_pointer = (undefined8 *)*double_pointer_to_character;\n    if (DAT_0010d558 == (char **)0x0) goto LAB_00104b4f;\n    for (; undefined8_pointer != (undefined8 *)0x0; undefined8_pointer = (undefined8 *)undefined8_pointer[1]) {\n      boolean_variable = false;\n      double_pointer_to_character = DAT_0010d558 + 0x1f;\n      for (undefined8_pointer = (undefined8 *)DAT_0010d558[0x1f]; u_var11 = DAT_0010d660,\n          undefined8_pointer != (undefined8 *)0x0; undefined8_pointer = (undefined8 *)undefined8_pointer[0x1e]) {\n        integer_variable = filename_cmp(*undefined8_pointer,*undefined8_pointer);\n        if (integer_variable == 0) {\n          boolean_variable = true;\n          *double_pointer_to_character = (char *)undefined8_pointer[0x1e];\n        }\n        else {\n          double_pointer_to_character = (char **)(undefined8_pointer + 0x1e);\n        }\n      }\n      if (!boolean_variable) {\n        undefined8_variable = *undefined8_pointer;\n        char_pointer = (char *)dcgettext(0,\"%s: can\\'t find module file %s\\n\",5);\n        fprintf(_stderr,char_pointer,u_var11,undefined8_variable);\n        maybequit();\n      }\n    }\n    break;\n  case 0x1b:\n    undefined8_pointer = (undefined8 *)*double_pointer_to_character;\n    if (DAT_0010d558 == (char **)0x0) goto LAB_00104b4f;\n    for (; undefined8_pointer != (undefined8 *)0x0; undefined8_pointer = (undefined8 *)undefined8_pointer[1]) {\n      char_pointer = (char *)bfd_openr(*undefined8_pointer,\"plugin\");\n      u_var11 = DAT_0010d660;\n      double_pointer_to_character = DAT_0010d558;\n      if (char_pointer == (char *)0x0) {\n        undefined8_variable = *undefined8_pointer;\n        char_pointer = (char *)dcgettext(0,\"%s: can\\'t open file %s\\n\",5);\n        fprintf(_stderr,char_pointer,u_var11,undefined8_variable);\n        maybequit();\n      }\n      else {\n        *(char **)(char_pointer + 0xf0) = DAT_0010d558[0x1f];\n        double_pointer_to_character[0x1f] = char_pointer;\n      }\n    }\n    break;\n  case 0x1c:\n    if (DAT_0010d558 == (char **)0x0) goto LAB_00104b4f;\n    char_pointer = *DAT_0010d558;\n    DAT_0010d60c = 1;\n    DAT_0010d578 = _stdout;\n    char_pointer = (char *)dcgettext(0,\"Current open archive is %s\\n\",5);\n    printf(char_pointer,char_pointer);\n    for (char_pointer = DAT_0010d558[0x1f]; char_pointer != (char *)0x0; char_pointer = *(char **)(char_pointer + 0xf0))\n    {\n      ar_directory_doer(char_pointer,0);\n    }\n    break;\n  case 0x1d:\n    if (DAT_0010d558 == (char **)0x0) goto LAB_00104b4f;\n    if (0 < _DAT_0010d2d0) {\n      *(uint *)((long)DAT_0010d558 + 0x44) = *(uint *)((long)DAT_0010d558 + 0x44) | 0x2000;\n    }\n    DAT_0010d568 = dup(DAT_0010d568);\n    bfd_close(double_pointer_to_character);\n    char_pointer = DAT_0010d570;\n    integer_variable = stat_structure(DAT_0010d570,&stat_structure);\n    if ((integer_variable != 0) && (DAT_0010d558 = (char **)bfd_openw(char_pointer,0), DAT_0010d558 != (char **)0x0)\n       ) {\n      bfd_set_format(DAT_0010d558,2);\n      bfd_close(DAT_0010d558);\n    }\n    smart_rename_constprop_0(DAT_0010d560,DAT_0010d570,DAT_0010d568);\n    DAT_0010d558 = (char **)0x0;\n    free(DAT_0010d560);\n    free(DAT_0010d570);\n    break;\n  case 0x1e:\n    ar_open(*double_pointer_to_character,0);\n    break;\n  case 0x1f:\n    ar_open(*double_pointer_to_character,1);\n    break;\n  case 0x20:\n    char_pointer = *double_pointer_to_character;\n    if (DAT_0010d558 == (char **)0x0) {\n      char_pointer = \"%s: no output archive specified yet\\n\";\n      goto LAB_00104b62;\n    }\n    long_variable = open_inarch(double_pointer_to_character[-1],0);\n    if (long_variable != 0) {\n      map_over_list(long_variable,ar_addlib_doer,char_pointer);\n    }\n    break;\n  case 0x21:\n    char_pointer = *double_pointer_to_character;\n    char_pointer = double_pointer_to_character[-1];\n    u_var11 = open_inarch(double_pointer_to_character[-2],0);\n    if (char_pointer == (char *)0x0) {\n      DAT_0010d578 = _stdout;\n    }\n    else {\n      DAT_0010d578 = fopen(char_pointer,\"w\");\n      if (DAT_0010d578 != (FILE *)0x0) {\n        map_over_list(u_var11,ar_directory_doer,char_pointer);\n        bfd_close(u_var11);\n        fclose(DAT_0010d578);\n        break;\n      }\n      DAT_0010d578 = _stdout;\n      char_pointer = (char *)dcgettext(0,\"Can\\'t open file %s\\n\",5);\n      fprintf(_stderr,char_pointer,char_pointer);\n    }\n    map_over_list(u_var11,ar_directory_doer,char_pointer);\n    bfd_close(u_var11);\n    break;\n  case 0x22:\n    char_pointer2 = (char **)*double_pointer_to_character;\n    break;\n  case 0x23:\n  case 0x25:\n  case 0x27:\n    char_pointer2 = (char **)0x0;\n    break;\n  case 0x24:\n    char_pointer2 = (char **)double_pointer_to_character[-1];\n    break;\n  case 0x26:\n    char_pointer2 = (char **)malloc(0x10);\n    char_pointer = double_pointer_to_character[-2];\n    *char_pointer2 = *double_pointer_to_character;\n    char_pointer2[1] = char_pointer;\n    break;\n  case 0x2a:\n    DAT_0010d60c = (uint)(DAT_0010d60c == 0);\n  }\n  long_variable = (long)char_var;\n  local_char_pointer = local_char_pointer + -long_variable;\n  double_pointer_to_character[1 - long_variable] = (char *)char_pointer2;\n  double_pointer_to_character = double_pointer_to_character + (1 - long_variable);\n  uint_variable = (int)(char)(&DAT_00109f80)[(char)(&DAT_00109fa0)[integer] + -0x18] + (int)*local_char_pointer;\n  if ((uint_variable < 0x23) && (*local_char_pointer == (&DAT_0010a0a0)[(int)uint_variable])) {\n    long_variable = (long)(char)(&DAT_0010a060)[(int)uint_variable];\n  }\n  else {\n    long_variable = (long)(char)(&DAT_00109f60)[(char)(&DAT_00109fa0)[integer] + -0x18];\n  }\n  goto LAB_001049d1;\nswitchD_00104200_caseD_29:\n  integer_variable = ((int)pointer_to_byte - (int)DAT_0010d5c8) + -1;\n  *pointer_to_byte = DAT_0010d588;\n  double_pointer = (long **)(DAT_0010d5a8 + long_variable * 8);\n  double_pointer_to_file = (FILE **)*double_pointer;\n  if (*(int *)(double_pointer_to_file + 7) == 0) {\n    DAT_0010d598 = *(uint *)((long)double_pointer_to_file + 0x1c);\n    *(undefined4 *)(double_pointer_to_file + 7) = 1;\n    *double_pointer_to_file = DAT_0010d590;\n  }\n  byte_pointer = DAT_0010d5b0;\n  file_pointer = double_pointer_to_file[1];\n  au_var40._8_8_ = file_pointer;\n  au_var40._0_8_ = double_pointer_to_file;\n  if ((byte *)((long)&file_pointer->_flags + (long)(int)DAT_0010d598) < DAT_0010d5b0) {\n    if ((byte *)((long)&file_pointer->_flags + (long)(int)DAT_0010d598 + 1) < DAT_0010d5b0) {\n      au_var40 = yy_fatal_error();\n    }\n    if (*(int *)(au_var40._0_8_ + 0x34) != 0) {\n      uint_variable = (int)((long)byte_pointer - (long)pointer_to_byte) - 1;\n      for (long_variable = 0; (int)long_variable < (int)uint_variable; long_variable = long_variable + 1) {\n        *(byte *)(au_var40._8_8_ + long_variable) = pointer_to_byte[long_variable];\n      }\n      pointer_to_long = *double_pointer;\n      if (*(int *)(pointer_to_long + 7) == 2) {\n        DAT_0010d598 = 0;\n        *(undefined4 *)((long)pointer_to_long + 0x1c) = 0;\nLAB_0010475e:\n        file_pointer = DAT_0010d590;\n        if (uint_variable == 0) {\n          if ((DAT_0010d5a8 == 0) || (*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) == 0)) {\n            yyensure_buffer_stack();\n            undefined8_pointer = (undefined8 *)(DAT_0010d5a8 + DAT_0010d5a0 * 8);\n            u_var11 = yy_create_buffer_constprop_0(file_pointer);\n            *undefined8_pointer = u_var11;\n          }\n          long_variable = DAT_0010d5a8;\n          if (DAT_0010d5a8 != 0) {\n            long_variable = *(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8);\n          }\n          integer_variable = 1;\n          yy_init_buffer(long_variable);\n          yy_load_buffer_stat_structuree();\n        }\n        else {\n          integer_variable = 2;\n          *(undefined4 *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 0x38) = 2;\n        }\n      }\n      else {\n        while( true ) {\n          long_pointer = *double_pointer;\n          unsigned_variable = ~uint_variable + *(int *)(pointer_to_long + 3);\n          if (0 < (int)unsigned_variable) break;\n          unsigned_variable = (int)DAT_0010d5b0 - (int)(void *)long_pointer[1];\n          if (*(int *)(long_pointer + 4) == 0) {\n            long_pointer[1] = 0;\nLAB_00104626:\n            yy_fatal_error();\n            break;\n          }\n          integer_variable = *(int *)(long_pointer + 3);\n          integer_variable = integer_variable;\n          if (integer_variable < 1) {\n            integer_variable = integer_variable / 8;\n          }\n          *(int *)(long_pointer + 3) = integer_variable + integer_variable;\n          void_pointer = realloc((void *)long_pointer[1],(long)(integer_variable + integer_variable + 2));\n          long_pointer[1] = (long)void_pointer;\n          if (void_pointer == (void *)0x0) goto LAB_00104626;\n          DAT_0010d5b0 = (byte *)((long)void_pointer + (long)(int)unsigned_variable);\n          pointer_to_long = *double_pointer;\n        }\n        if (0x2000 < (int)unsigned_variable) {\n          unsigned_variable = 0x2000;\n        }\n        unsigned_variable = (ulong)unsigned_variable;\n        if (*(int *)((long)long_pointer + 0x24) == 0) {\n          int_pointer = __errno_locatintegern();\n          unsigned_variable = (ulong)(int)unsigned_variable;\n          ulong_variable = (ulong)(int)uint_variable;\n          *int_pointer = 0;\n          goto LAB_001046c7;\n        }\n        ulong_variable = 0;\n        int_pointer = (int *)(long)(int)uint_variable;\n        do {\n          integer_variable = getc(DAT_0010d590);\n          local_uint = (uint)ulong_variable;\n          if (integer_variable == -1) {\n            integer_variable = ferror(DAT_0010d590);\n            unsigned_variable = local_uint;\n            if (integer_variable != 0) {\n              do {\n                char_pointer = \"input in flex scanner failed\";\n                yy_fatal_error();\n                do {\n                  *int_pointer = 0;\n                  clearerr((FILE *)char_pointer);\nLAB_001046c7:\n                  size_variable = fread((void *)(*(long *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 8)\n                                         + ulong_variable),1,unsigned_variable,DAT_0010d590);\n                  char_pointer = (char *)DAT_0010d590;\n                  DAT_0010d598 = (uint)size_variable;\n                  unsigned_variable = DAT_0010d598;\n                  if ((DAT_0010d598 != 0) ||\n                     (integer_variable = ferror(DAT_0010d590), unsigned_variable = DAT_0010d598, integer_variable == 0))\n                  goto LAB_00104738;\n                } while (*int_pointer == 4);\n              } while( true );\n            }\n            break;\n          }\n          if (integer_variable == 10) {\n            *(undefined *)\n             ((long)(int *)(long)(int)uint_variable +\n             (long)(int)local_uint + *(long *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 8)) = 10;\n            unsigned_variable = local_uint + 1;\n            break;\n          }\n          ulong_variable = (ulong)(local_uint + 1);\n          *(char *)(*(long *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 8) + (long)int_pointer) =\n               (char)integer_variable;\n          int_pointer = (int *)((long)int_pointer + 1);\n        } while (unsigned_variable != local_uint + 1);\nLAB_00104738:\n        DAT_0010d598 = unsigned_variable;\n        unsigned_variable = DAT_0010d598;\n        integer_variable = 0;\n        *(uint *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 0x1c) = DAT_0010d598;\n        if (unsigned_variable == 0) goto LAB_0010475e;\n      }\n      pointer_to_long = (long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8);\n      long_variable = *pointer_to_long;\n      uint_variable = uint_variable + DAT_0010d598;\n      if (*(int *)(long_variable + 0x18) < (int)uint_variable) {\n        integer_variable = ((int)DAT_0010d598 >> 1) + uint_variable;\n        void_pointer = realloc(*(void **)(long_variable + 8),(long)integer_variable);\n        *(void **)(long_variable + 8) = void_pointer;\n        undefined_var2._8_8_ = pointer_to_long;\n        undefined_var2._0_8_ = *pointer_to_long;\n        if (*(long *)(*pointer_to_long + 8) == 0) {\n          undefined_var2 = yy_fatal_error();\n        }\n        pointer_to_long = undefined_var2._8_8_;\n        *(int *)(undefined_var2._0_8_ + 0x18) = integer_variable + -2;\n      }\n      DAT_0010d598 = uint_variable;\n      *(undefined *)(*(long *)(*pointer_to_long + 8) + (long)(int)uint_variable) = 0;\n      *(undefined *)(*(long *)(*pointer_to_long + 8) + 1 + (long)(int)uint_variable) = 0;\n      pointer_to_byte = *(byte **)(*pointer_to_long + 8);\n      DAT_0010d5c8 = pointer_to_byte;\n      if (integer_variable == 1) goto LAB_001048a4;\n      if (integer_variable == 2) goto LAB_001048ca;\n      pointer_to_byte = pointer_to_byte + integer_variable;\n      DAT_0010d5b0 = pointer_to_byte;\n      uint_variable = yy_get_previntegerus_stat_structuree();\n      goto LAB_001040d4;\n    }\n    if ((long)byte_pointer - (long)pointer_to_byte == 1) goto LAB_001048a4;\nLAB_001048ca:\n    pointer_to_byte = (byte *)((long)(int)DAT_0010d598 +\n                      *(long *)(*(long *)(DAT_0010d5a8 + DAT_0010d5a0 * 8) + 8));\n    DAT_0010d5b0 = pointer_to_byte;\n    ulong_variable = yy_get_previntegerus_stat_structuree();\n    pointer_to_byte = DAT_0010d5c8;\n    goto LAB_0010419f;\n  }\n  pointer_to_byte = pointer_to_byte + integer_variable;\n  DAT_0010d5b0 = pointer_to_byte;\n  ulong_variable = yy_get_previntegerus_stat_structuree();\n  if (*(short *)(&DAT_0010a980 + (long)(int)(uint)ulong_variable * 2) != 0) {\n    DAT_0010d5b8 = pointer_to_byte;\n    DAT_0010d5c0 = (uint)ulong_variable;\n  }\n  unsigned_variable = ulong_variable & 0xffffffff;\n  while( true ) {\n    integer_variable = (int)unsigned_variable;\n    if (integer_variable == *(short *)(&DAT_0010a440 +\n                           (long)(*(short *)(&DAT_0010a640 + (long)integer_variable * 2) + 1) * 2)) break;\n    unsigned_variable = (ulong)(uint)(int)*(short *)(&DAT_0010a800 + (long)integer_variable * 2);\n  }\n  uint_variable = (uint)*(short *)(&DAT_0010a240 +\n                           (long)(*(short *)(&DAT_0010a640 + (long)integer_variable * 2) + 1) * 2);\n  pointer_to_byte = pointer_to_byte;\n  if ((*(short *)(&DAT_0010a240 + (long)(*(short *)(&DAT_0010a640 + (long)integer_variable * 2) + 1) * 2) == 0)\n     || (uint_variable == 0xb0)) goto LAB_0010419f;\n  pointer_to_byte = pointer_to_byte + 1;\n  goto LAB_001040d4;\nLAB_001048a4:\n  DAT_0010d5b0 = DAT_0010d5c8;\n  integer_variable = (int)(DAT_0010d5d0 - 1) / 2 + 0x2a;\n  goto LAB_001041f0;\nswitchD_00104200_caseD_0:\n  *pointer_to_byte = DAT_0010d588;\n  ulong_variable = (ulong)DAT_0010d5c0;\n  pointer_to_byte = DAT_0010d5b8;\n  goto LAB_0010419f;\nLAB_00105227:\n  double_pointer_to_character = double_pointer_to_character + 1;\n  local_integer = 3;\n  *double_pointer_to_character = DAT_0010d548;\nLAB_001049d1:\n  local_char_pointer = local_char_pointer + 1;\n  goto LAB_00103ee9;\n}\n\n",
            "current_name": "decompiled_function_00103e95",
            "entrypoint": "0x00103e95",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00103e95": "decompiled_function_00103e95",
                "auVar40": "au_var40",
                "auVar41": "undefined_var2",
                "bVar28": "boolean_variable",
                "bVar30": "byte_variable",
                "bVar39": "byte",
                "cVar2": "char_var",
                "iVar25": "integer_variable",
                "iVar37": "integer",
                "iVar8": "integer_variable",
                "iVar9": "integer_variable",
                "io": "integer",
                "lVar17": "long_variable",
                "lVar18": "long_variable",
                "lVar21": "long_variable",
                "lVar31": "long_variable",
                "local_678": "local_char_pointer_array678",
                "local_740": "local_char_array",
                "local_7d0": "stat_structure",
                "local_7f8": "local_byte_pointer",
                "local_7fc": "local_uint",
                "local_8": "local_uint",
                "local_800": "local_integer",
                "local_810": "local_double_pointer_to_character",
                "local_818": "local_long",
                "local_820": "local_char_pointer2",
                "local_828": "local_char_pointer",
                "pFVar4": "file_pointer",
                "pbVar32": "pointer_to_byte",
                "pbVar33": "pointer_to_byte",
                "pbVar35": "pointer_to_byte",
                "pbVar7": "byte_pointer",
                "pcVar10": "char_pointer",
                "pcVar15": "char_pointer",
                "pcVar16": "char_pointer",
                "pcVar27": "char_pointer",
                "piVar34": "int_pointer",
                "plVar12": "pointer_to_long",
                "plVar5": "long_pointer",
                "ppFVar3": "double_pointer_to_file",
                "ppcVar27": "double_pointer_to_character",
                "ppcVar29": "double_pointer_to_character",
                "ppcVar38": "char_pointer2",
                "pplVar1": "double_pointer",
                "puVar22": "undefined8_pointer",
                "puVar23": "undefined8_pointer",
                "pvVar14": "void_pointer",
                "sVar13": "size_variable",
                "stat": "stat_structure",
                "uVar11": "u_var11",
                "uVar19": "ulong_variable",
                "uVar20": "uint_variable",
                "uVar24": "unsigned_variable",
                "uVar26": "unsigned_variable",
                "uVar36": "local_uint",
                "uVar6": "undefined8_variable"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001052a0": {
            "additional_data": {
                "FUNGestaltCheckFile": {
                    "check_file": 1
                },
                "FUN_001052a0": {
                    "check_file": 17,
                    "check_file_attributes": 1,
                    "check_file_details": 1,
                    "check_file_properties": 1,
                    "check_file_status": 4,
                    "file_stat": 1,
                    "file_stat_check": 1,
                    "get_file_information": 1,
                    "get_file_stat": 1,
                    "get_file_stats": 1,
                    "get_file_status": 1
                },
                "dcgettext": {
                    "translate_text": 1
                },
                "iVar1": {
                    "result": 2,
                    "stat_result": 6,
                    "status": 23
                },
                "non_fatal": {
                    "handle_error": 1,
                    "handle_non_fatal_error": 2
                },
                "param_1": {
                    "file_path": 27,
                    "filename": 3,
                    "filepath": 1
                },
                "pcVar4": {
                    "error_description": 3,
                    "error_message": 5,
                    "error_msg": 1,
                    "error_reason": 14,
                    "error_str": 1,
                    "error_string": 1,
                    "reason": 4,
                    "str_error": 2
                },
                "piVar2": {
                    "errcode": 1,
                    "errno_loc": 3,
                    "errno_location": 3,
                    "errno_ptr": 16,
                    "error": 2,
                    "error_location": 1,
                    "error_num": 1,
                    "error_num_ptr": 2,
                    "error_ptr": 2
                },
                "sStack_a8": {
                    "file_details": 1,
                    "file_info": 7,
                    "file_stat": 9,
                    "file_stat_info": 1,
                    "file_stats": 10,
                    "file_status": 1,
                    "stat_info": 2
                },
                "stat": {
                    "get_file_info": 1,
                    "get_file_status": 1
                },
                "uVar3": {
                    "error_message": 14,
                    "error_msg": 8,
                    "localized_msg": 1,
                    "message": 6,
                    "msg": 1,
                    "warning_msg": 1
                }
            },
            "called": [
                "FUN_001025a0",
                "FUN_00102330",
                "FUN_00107920",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00107650"
            ],
            "code": "\nlong check_file_status_001052a0(char *file_path)\n\n{\n  int status;\n  int *errno_ptr;\n  undefined8 error_message;\n  char *error_reason;\n  get_file_status file_stats;\n  \n  if (file_path != (char *)0x0) {\n    status = get_file_status(file_path,&file_stats);\n    if (status < 0) {\n      errno_ptr = __errno_location();\n      if (*errno_ptr == 2) {\n        error_message = translate_text(0,\"\\'%s\\': No such file\",5);\n        handle_non_fatal_error(error_message,file_path);\n      }\n      else {\n        error_reason = strerror(*errno_ptr);\n        error_message = translate_text(0,\"Warning: could not locate \\'%s\\'.  reason: %s\",5);\n        handle_non_fatal_error(error_message,file_path,error_reason);\n      }\n    }\n    else if ((file_stats.st_mode & 0xf000) == 0x4000) {\n      error_message = translate_text(0,\"Warning: \\'%s\\' is a directory\",5);\n      handle_non_fatal_error(error_message,file_path);\n    }\n    else if ((file_stats.st_mode & 0xf000) == 0x8000) {\n      if (-1 < file_stats.st_size) {\n        return file_stats.st_size;\n      }\n      error_message = translate_text(0,\"Warning: \\'%s\\' has negative size, probably it is too large\",5);\n      handle_non_fatal_error(error_message,file_path);\n    }\n    else {\n      error_message = translate_text(0,\"Warning: \\'%s\\' is not an ordinary file\",5);\n      handle_non_fatal_error(error_message,file_path);\n    }\n  }\n  return -1;\n}\n\n",
            "current_name": "check_file_status_001052a0",
            "entrypoint": "0x001052a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001052a0": "check_file_status_001052a0",
                "dcgettext": "translate_text",
                "iVar1": "status",
                "non_fatal": "handle_non_fatal_error",
                "param_1": "file_path",
                "pcVar4": "error_reason",
                "piVar2": "errno_ptr",
                "sStack_a8": "file_stats",
                "stat": "get_file_status",
                "uVar3": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105300": {
            "additional_data": {
                "FUN_00105300": {
                    "decompressed_code_analysis": 1,
                    "extract_and_open_file": 1,
                    "extract_archive_files": 1,
                    "extract_archived_files": 4,
                    "load_bfd_archive": 1,
                    "open_and_check_bfd": 1,
                    "open_and_check_bfd_file": 1,
                    "open_and_convert": 1,
                    "open_and_convert_archive": 1,
                    "open_and_convert_file": 2,
                    "open_library": 1,
                    "parse_binary_file": 1,
                    "process_binary": 2,
                    "process_binary_file": 1,
                    "process_file": 1
                },
                "bVar3": {
                    "bit_flag": 3,
                    "conversion_flag": 3,
                    "convert_existing": 1,
                    "convert_flag": 3,
                    "convert_format": 2,
                    "file_format": 1,
                    "flag": 3,
                    "has_thin_format": 1,
                    "is_thin": 3,
                    "is_thin_format": 2,
                    "is_thin_library": 7,
                    "thin_library": 1,
                    "thin_library_flag": 1
                },
                "cVar4": {
                    "char_flag": 3,
                    "char_var": 1,
                    "check_result": 2,
                    "conversion_error": 1,
                    "format_check": 8,
                    "format_check_flag": 1,
                    "format_check_result": 11,
                    "format_flag": 2,
                    "format_result": 2
                },
                "iVar5": {
                    "error_code": 1,
                    "result": 5,
                    "return_status": 1,
                    "return_value": 2,
                    "stat_result": 10,
                    "status": 12
                },
                "lVar9": {
                    "archived_file": 6,
                    "archived_file_offset": 3,
                    "archived_file_ptr": 1,
                    "archived_file_result": 1,
                    "current_file": 1,
                    "file": 2,
                    "file_descriptor": 2,
                    "file_entry": 1,
                    "file_handle": 1,
                    "file_offset": 1,
                    "file_pointer": 3,
                    "file_ptr": 3,
                    "loop_var": 1,
                    "next_archived_file": 5
                },
                "local_a8": {
                    "file_info": 7,
                    "file_info_check": 1,
                    "file_stat": 4,
                    "file_stats": 14,
                    "file_status": 4,
                    "stat_buf": 1
                },
                "local_b0": {
                    "format": 1,
                    "format_buf": 2,
                    "format_buffer": 2,
                    "format_buffers": 1,
                    "format_options": 1,
                    "format_type": 1,
                    "formats": 1,
                    "matching": 1,
                    "matching_format": 5,
                    "matching_format_buffer": 1,
                    "matching_formats": 15
                },
                "param_1": {
                    "archive_filename": 2,
                    "archive_path": 2,
                    "file_name": 1,
                    "file_path": 2,
                    "filename": 16,
                    "filepath": 1,
                    "input_file": 3,
                    "input_file_path": 3,
                    "library_name": 1
                },
                "param_2": {
                    "arch": 1,
                    "arch_files": 2,
                    "archived_files": 12,
                    "file_descriptor": 1,
                    "file_handle": 1,
                    "file_handler": 1,
                    "file_info": 1,
                    "output": 6,
                    "output_data": 1,
                    "output_file": 2,
                    "output_file_ptr": 1,
                    "result": 2
                },
                "pcVar2": {
                    "archived_file_format": 1,
                    "default_plugin_name": 1,
                    "error_message": 9,
                    "error_string": 6,
                    "library_name": 1,
                    "message": 1,
                    "plugin": 3,
                    "plugin_filename": 1,
                    "plugin_name": 7,
                    "program_name": 1
                },
                "piVar8": {
                    "err_no_ptr": 1,
                    "err_num": 1,
                    "errno": 1,
                    "errno_loc": 1,
                    "errno_location": 9,
                    "errno_pointer": 2,
                    "errno_ptr": 5,
                    "errno_value": 1,
                    "error_code": 2,
                    "error_location": 1,
                    "error_num": 1,
                    "error_number": 3,
                    "error_pointer": 1,
                    "error_ptr": 2
                },
                "plVar1": {
                    "arch_file_pointer": 1,
                    "archived_file": 8,
                    "archived_file_array": 1,
                    "archived_file_list": 1,
                    "archived_file_pointer": 2,
                    "archived_file_ptr": 3,
                    "archived_files": 1,
                    "archived_files_ptr": 1,
                    "current_file": 3,
                    "current_file_ptr": 1,
                    "file_list": 1,
                    "file_pointer": 2,
                    "file_ptr": 4,
                    "next_archived_file": 1,
                    "pointers": 1
                },
                "puVar10": {
                    "arch_file_handler": 1,
                    "archive_file": 1,
                    "archive_file_pointer": 1,
                    "archived_file_open_result": 1,
                    "file_pointer_array": 1,
                    "file_ptr": 2,
                    "in_arch_file": 1,
                    "in_arch_file_handle": 1,
                    "in_arch_handle": 1,
                    "in_arch_ptr": 1,
                    "inarch_cold": 1,
                    "inarch_cold_fd": 1,
                    "inarch_cold_handle": 1,
                    "inarch_cold_result": 2,
                    "inarch_file_ptr": 1,
                    "input": 2,
                    "input_file": 1,
                    "new_file": 1,
                    "open_archive_result": 1,
                    "open_file": 2,
                    "open_inarch_cold_result": 1,
                    "opened_arch_file": 1,
                    "opened_file": 1,
                    "read_data": 1,
                    "result": 1,
                    "result_ptr": 1,
                    "return_output": 1
                },
                "uVar6": {
                    "conversion_error_message": 1,
                    "err_msg": 1,
                    "error_message": 9,
                    "error_msg": 2,
                    "error_string": 3,
                    "error_text": 2,
                    "format_error_string": 1,
                    "gettext_msg": 1,
                    "gettext_result": 1,
                    "message": 2,
                    "name": 1,
                    "return_var1": 1,
                    "text_domain": 1,
                    "text_error_code": 1,
                    "translation": 2,
                    "translation1": 1,
                    "translation_msg": 1
                },
                "uVar7": {
                    "conversion_message": 1,
                    "convert_message": 1,
                    "error_format": 1,
                    "error_message": 6,
                    "error_msg": 1,
                    "error_msg2": 1,
                    "file_desc": 1,
                    "format_error_message": 1,
                    "format_string": 1,
                    "gettext_domain": 1,
                    "gettext_format": 1,
                    "library": 1,
                    "library_name": 6,
                    "library_string": 1,
                    "message": 1,
                    "return_var2": 1,
                    "text": 1,
                    "text_error_string": 1,
                    "translation": 1,
                    "translation2": 2
                }
            },
            "called": [
                "FUN_001024c0",
                "FUN_00102420",
                "FUN_00102130",
                "FUN_00102480",
                "FUN_00102530",
                "FUN_00107c10",
                "FUN_00103bd1",
                "FUN_00102220",
                "FUN_001024a0",
                "FUN_00102170",
                "FUN_0010315d",
                "FUN_00107690",
                "FUN_00102240",
                "FUN_00102330",
                "FUN_00107920",
                "FUN_00102060",
                "FUN_00102340",
                "FUN_00102490",
                "FUN_00107c20",
                "FUN_00102310",
                "FUN_00102710"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105db0",
                "FUN_00107650"
            ],
            "code": "\n\n\nundefined8 * extract_and_open_file_00105300(char *filename,undefined8 *archived_files)\n\n{\n  long *archived_file;\n  char *error_message;\n  byte is_thin_library;\n  char format_check_result;\n  int status;\n  undefined8 error_message;\n  undefined8 library_name;\n  int *errno_location;\n  long archived_file;\n  undefined8 *input;\n  undefined8 matching_formats;\n  stat file_stats;\n  \n  bfd_set_error(0);\n  if (DAT_0010d5f0 == (char *)0x0) {\n    DAT_0010d5f0 = \"plugin\";\n  }\n  status = stat(filename,&file_stats);\n  error_message = DAT_0010d618;\n  if (status == 0) goto LAB_001053be;\n  errno_location = __errno_location();\n  if (*errno_location == 2) {\n    if (DAT_0010d604 == '\\0') {\n      fprintf(_stderr,\"%s: \",DAT_0010d660);\n      perror(filename);\n      maybequit();\n      return (undefined8 *)0x0;\n    }\n    if ((DAT_0010d5f0 == (char *)0x0) && (archived_files != (undefined8 *)0x0)) {\n      input = (undefined8 *)open_inarch_cold();\n      return input;\n    }\n    archived_files = (undefined8 *)bfd_openw(filename,DAT_0010d5f0);\n    if (((archived_files != (undefined8 *)0x0) && (format_check_result = bfd_set_format(archived_files,2), format_check_result != '\\0')) &&\n       (format_check_result = bfd_close(archived_files), format_check_result != '\\0')) {\n      error_message = filename;\n      if (_DAT_0010d610 == 0) goto LAB_00102826;\n      goto LAB_001053be;\n    }\n  }\n  bfd_fatal(filename);\n  do {\n    is_thin_library = *(byte *)((long)archived_files + 0x49) >> 4 & 1;\n    if (DAT_0010d5f8 == '\\0') {\n      if (is_thin_library != 0) {\n        library_name = *archived_files;\n        error_message = dcgettext(0,\"Cannot convert existing thin library %s to normal format\",5);\n        fatal(error_message,library_name);\n        goto LAB_00102812;\n      }\n    }\n    else if (is_thin_library == 0) {\n      library_name = *archived_files;\n      error_message = dcgettext(0,\"Cannot convert existing library %s to thin format\",5);\n      fatal(error_message,library_name);\nLAB_001027cb:\n      bfd_nonfatal(filename);\n      status = bfd_get_error();\n      if (status == 0xd) {\nLAB_00102812:\n        list_matching_formats(matching_formats);\n      }\n                    \n      xexit(1);\n    }\n    do {\n      archived_file = archived_files + 0x1e;\n      for (archived_file = bfd_openr_next_archived_file(archived_files,0); archived_file != 0;\n          archived_file = bfd_openr_next_archived_file(archived_files,archived_file)) {\n        *archived_file = archived_file;\n        archived_file = (long *)(archived_file + 0xf0);\n      }\n      *archived_file = 0;\n      status = bfd_get_error();\n      if (status == 9) {\n        return archived_files;\n      }\n      do {\n        bfd_fatal(filename);\nLAB_00102826:\n        library_name = dcgettext(0,\"creating %s\",5);\n        non_fatal(library_name,filename);\n        error_message = filename;\nLAB_001053be:\n        DAT_0010d618 = error_message;\n        archived_files = (undefined8 *)bfd_openr(filename,DAT_0010d5f0);\n      } while (archived_files == (undefined8 *)0x0);\n      format_check_result = bfd_check_format_matches(archived_files,2,&matching_formats);\n      if (format_check_result == '\\0') goto LAB_001027cb;\n    } while (((DAT_0010d64c != 2) && (DAT_0010d64c != 7)) ||\n            (archived_file = bfd_openr_next_archived_file(archived_files,0), archived_file == 0));\n  } while( true );\n}\n\n",
            "current_name": "extract_and_open_file_00105300",
            "entrypoint": "0x00105300",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105300": "extract_and_open_file_00105300",
                "bVar3": "is_thin_library",
                "cVar4": "format_check_result",
                "iVar5": "status",
                "lVar9": "archived_file",
                "local_a8": "file_stats",
                "local_b0": "matching_formats",
                "param_1": "filename",
                "param_2": "archived_files",
                "pcVar2": "error_message",
                "piVar8": "errno_location",
                "plVar1": "archived_file",
                "puVar10": "input",
                "uVar6": "error_message",
                "uVar7": "library_name"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105480": {
            "additional_data": {
                "DAT_0010d630": {
                    "max_processed_entries": 1
                },
                "DAT_0010d634": {
                    "condition_flag": 2,
                    "flag": 2
                },
                "FUN_00105480": {
                    "process_archive": 1,
                    "process_archive_entries": 5,
                    "process_archived_entries": 1,
                    "process_archived_files": 1,
                    "process_entries": 20,
                    "process_entries_in_archive": 2,
                    "process_function": 1
                },
                "_DAT_0010d630": {
                    "counter_threshold": 1,
                    "max_count": 1,
                    "threshold": 1
                },
                "__format": {
                    "error_format": 3,
                    "error_message": 5,
                    "error_message_format": 3,
                    "error_msg": 3,
                    "error_msg_format": 3,
                    "format": 1,
                    "format_str": 3,
                    "format_string": 5
                },
                "_stderr": {
                    "error_stream": 2,
                    "stderr": 1
                },
                "dcgettext": {
                    "get_localized_error": 1,
                    "get_text": 1
                },
                "filename_cmp": {
                    "compare_filenames": 4
                },
                "fprintf": {
                    "print_error": 1
                },
                "iVar1": {
                    "cmp_result": 4,
                    "comparison_result": 8,
                    "file_cmp_result": 1,
                    "filename_cmp_result": 2,
                    "filename_comparison": 1,
                    "filename_comparison_result": 2,
                    "result": 1
                },
                "lVar2": {
                    "current_address": 1,
                    "current_archive_entry": 1,
                    "current_entry": 25,
                    "current_entry_ptr": 1,
                    "entry": 1,
                    "entry_ptr": 2
                },
                "local_c8": {
                    "buffer": 18,
                    "error_msg_buffer": 2,
                    "local_buffer": 3,
                    "temp_buffer": 4,
                    "temporary_buffer": 4
                },
                "local_cc": {
                    "count": 7,
                    "counter": 14,
                    "entry_count": 4,
                    "entry_counter": 2,
                    "matched_entries": 1,
                    "matching_count": 1,
                    "num_processed_entries": 1,
                    "processed_entries_count": 1
                },
                "normalize": {
                    "normalize_entry": 1,
                    "normalize_filename": 3
                },
                "param_1": {
                    "archive": 5,
                    "archive_base": 1,
                    "archive_base_address": 2,
                    "archive_pointer": 1,
                    "archive_ptr": 5,
                    "entries": 2,
                    "entry_list": 7,
                    "entry_table": 3,
                    "file": 1,
                    "file_list": 1,
                    "input_address": 1,
                    "input_archive": 1,
                    "param_address": 1
                },
                "param_2": {
                    "callback": 11,
                    "callback_func": 2,
                    "callback_function": 3,
                    "entry_callback": 3,
                    "entry_function": 4,
                    "entry_handler": 1,
                    "entry_processor": 4,
                    "entry_processor_func_ptr": 1,
                    "process_function": 2
                },
                "param_3": {
                    "entry_names": 4,
                    "file_names": 2,
                    "filenames": 24,
                    "output_addresses": 1
                },
                "param_4": {
                    "filename_count": 1,
                    "num_addresses": 1,
                    "num_entries": 7,
                    "num_filenames": 4,
                    "num_files": 18
                },
                "plVar3": {
                    "default_entry": 5,
                    "default_entry_ptr": 1,
                    "entry_to_process": 1,
                    "fallback_entry": 8,
                    "first_entry": 1,
                    "last_entry": 1,
                    "next_entry": 6,
                    "next_entry_ptr": 1,
                    "parent": 1,
                    "previous_entry": 1,
                    "temp_entry": 3,
                    "temp_entry_ptr": 1,
                    "temp_var1": 1
                },
                "plVar5": {
                    "curr_entry_ptr": 1,
                    "current_entry": 4,
                    "current_entry_ptr": 2,
                    "entry": 9,
                    "entry_iterator": 2,
                    "entry_list": 2,
                    "entry_pointer": 2,
                    "entry_ptr": 6,
                    "iterator": 1,
                    "next_entry": 1,
                    "temp_var3": 1
                },
                "uVar4": {
                    "filename": 1,
                    "normalized_entry": 3,
                    "normalized_file_name": 1,
                    "normalized_filename": 23,
                    "normalized_name": 2,
                    "temp_var2": 1
                }
            },
            "called": [
                "FUN_00105830",
                "FUN_00102100",
                "FUN_0010285f"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid process_entries_in_archive_00105480(long entry_list,code *callback,undefined8 *filenames,int num_files)\n\n{\n  int comparison_result;\n  char *format_string;\n  long current_entry;\n  long *fallback_entry;\n  undefined8 normalized_filename;\n  long *entry;\n  int counter;\n  undefined buffer [152];\n  \n  current_entry = *(long *)(entry_list + 0xf0);\n  if (num_files == 0) {\n    for (; current_entry != 0; current_entry = *(long *)(current_entry + 0xf0)) {\n      (*callback)(current_entry);\n    }\n  }\n  else {\n    for (; current_entry != 0; current_entry = *(long *)(current_entry + 0xf0)) {\n      *(undefined4 *)(current_entry + 0xac) = 0;\n    }\n    do {\n      entry = *(long **)(entry_list + 0xf0);\n      counter = 0;\n      for (; entry != (long *)0x0; entry = (long *)entry[0x1e]) {\n        if (*(int *)((long)entry + 0xac) == 0) {\n          current_entry = *entry;\n          if (current_entry == 0) {\n            fallback_entry = (long *)entry[0x1d];\n            if ((long *)entry[0x1d] == (long *)0x0) {\n              fallback_entry = entry;\n            }\n            (**(code **)(fallback_entry[1] + 0x1e8))(entry,buffer);\n          }\n          else if (((*(byte *)(entry_list + 0x49) & 0x10) == 0) ||\n                  (current_entry = normalize_filename(current_entry,entry_list), current_entry != 0)) {\n            normalized_filename = normalize_filename(*filenames,entry_list);\n            comparison_result = compare_filenames(normalized_filename,current_entry);\n            if ((comparison_result == 0) &&\n               ((DAT_0010d634 == '\\0' || (counter = counter + 1, counter == _DAT_0010d630)))) {\n              (*callback)();\n              *(undefined4 *)((long)entry + 0xac) = 1;\n              goto LAB_0010553e;\n            }\n          }\n        }\n      }\n      normalized_filename = *filenames;\n      format_string = (char *)get_text(0,\"no entry %s in archive\\n\",5);\n      print_error(error_stream,format_string,normalized_filename);\nLAB_0010553e:\n      filenames = filenames + 1;\n      num_files = num_files + -1;\n    } while (num_files != 0);\n  }\n  return;\n}\n\n",
            "current_name": "process_entries_in_archive_00105480",
            "entrypoint": "0x00105480",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105480": "process_entries_in_archive_00105480",
                "__format": "format_string",
                "_stderr": "error_stream",
                "dcgettext": "get_text",
                "filename_cmp": "compare_filenames",
                "fprintf": "print_error",
                "iVar1": "comparison_result",
                "lVar2": "current_entry",
                "local_c8": "buffer",
                "local_cc": "counter",
                "normalize": "normalize_filename",
                "param_1": "entry_list",
                "param_2": "callback",
                "param_3": "filenames",
                "param_4": "num_files",
                "plVar3": "fallback_entry",
                "plVar5": "entry",
                "uVar4": "normalized_filename"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105570": {
            "additional_data": {
                "FUN_00105570": {
                    "archive_manager": 1,
                    "extract_and_write_archived_files": 1,
                    "extract_and_write_archives": 1,
                    "extract_archive": 1,
                    "process_archive_files": 1,
                    "process_archives": 1,
                    "process_arguments": 1,
                    "process_binary_files": 1,
                    "process_binary_function": 1,
                    "process_files": 14
                },
                "__s": {
                    "base_file": 2,
                    "base_file_name": 1,
                    "base_name": 3,
                    "base_name2": 1,
                    "base_name_2": 1,
                    "basename": 5,
                    "basename3": 1,
                    "basename_1": 1,
                    "basename_ptr": 1,
                    "basename_ptr_2": 1,
                    "basename_result": 1,
                    "basename_string": 1,
                    "basename_var": 1,
                    "basename_var2": 1,
                    "char_pointer4": 1,
                    "char_ptr": 1,
                    "file_name": 1,
                    "normalized_base_name": 1,
                    "pointer_to_char5": 1,
                    "ptr_s": 1,
                    "s_var": 1,
                    "shortened_path": 1,
                    "temp_str": 1,
                    "temporary_string": 1
                },
                "auStack_158": {
                    "buffer_stack": 1,
                    "local_array1": 1,
                    "stack_array": 13,
                    "stack_array1": 1,
                    "stack_array_1": 1,
                    "stack_buffer": 4,
                    "stack_data": 1,
                    "stack_memory": 1,
                    "stack_var": 3,
                    "temp_array": 1,
                    "temp_buffer": 1,
                    "temp_stack": 1,
                    "temporary_buffer": 1
                },
                "bVar19": {
                    "ar_emul_flag_value": 1,
                    "bool_flag": 1,
                    "bool_value": 3,
                    "bool_var": 15,
                    "bool_var1": 3,
                    "bool_var19": 1,
                    "boolean_flag": 1,
                    "boolean_value": 1,
                    "flag": 1,
                    "flag2": 1,
                    "is_property_set": 1,
                    "is_special_mode": 1
                },
                "bVar20": {
                    "bool_value": 1,
                    "byte_flag_2": 1,
                    "byte_tmp_var": 1,
                    "byte_value": 1,
                    "byte_value_2": 1,
                    "byte_var": 6,
                    "byte_var1": 2,
                    "byte_var2": 8,
                    "byte_var20": 1,
                    "byte_var_2": 3,
                    "byte_variable": 1,
                    "local_flag": 1,
                    "temp_byte": 1,
                    "temp_byte2": 1
                },
                "bVar3": {
                    "bool_value": 1,
                    "byte_flag": 1,
                    "byte_value": 4,
                    "byte_var": 16,
                    "byte_var1": 2,
                    "byte_var3": 1,
                    "byte_variable": 1,
                    "flag_value": 1,
                    "is_archive_updated": 1,
                    "is_error": 1,
                    "status": 1,
                    "temp_byte": 1
                },
                "iVar4": {
                    "comparison_result": 3,
                    "counter": 1,
                    "index": 6,
                    "index_var": 3,
                    "int_var": 9,
                    "int_var1": 2,
                    "int_var4": 1,
                    "integer_value": 4,
                    "loop_counter": 1,
                    "temp_int": 1
                },
                "initialize_global_data_00102943": {
                    "initialize_global_data": 1
                },
                "lStack_100": {
                    "file_time": 2,
                    "l_stack_var": 3,
                    "last_file_modified_time": 1,
                    "last_modified_time": 3,
                    "local_l_stack_100": 1,
                    "local_stack_var": 1,
                    "long_stack100": 1,
                    "long_stack_value": 1,
                    "long_var3": 1,
                    "stack_long": 1,
                    "stack_value": 1,
                    "stack_var": 3,
                    "stack_var1": 2,
                    "stack_var2": 1,
                    "stack_variable": 1,
                    "temp_long3": 1,
                    "time_parameter": 1,
                    "time_stamp": 1,
                    "time_value": 1,
                    "time_var": 1,
                    "time_var_1": 1,
                    "timestamp": 1
                },
                "lVar11": {
                    "current_bfd": 1,
                    "current_binary_ptr": 1,
                    "current_element": 1,
                    "current_entry": 1,
                    "current_file_data": 1,
                    "current_file_handle": 1,
                    "current_file_pointer": 1,
                    "current_file_ptr": 1,
                    "current_long_value": 1,
                    "current_node": 2,
                    "current_pointer": 1,
                    "current_position": 2,
                    "current_ptr": 2,
                    "file_descriptor": 1,
                    "file_handle": 1,
                    "file_ptr1": 1,
                    "l_var1": 1,
                    "long_var1": 1,
                    "long_var11": 1,
                    "loop_var1": 2,
                    "temp_long1": 1,
                    "temp_long_1": 1,
                    "temp_var1": 4,
                    "var11": 1
                },
                "lVar12": {
                    "file_ptr2": 1,
                    "l_var2": 1,
                    "list_ptr2": 1,
                    "long_var12": 1,
                    "long_var2": 1,
                    "loop_var2": 2,
                    "next_bfd": 1,
                    "next_binary_ptr": 1,
                    "next_element": 1,
                    "next_entry": 1,
                    "next_file_data": 1,
                    "next_file_handle": 2,
                    "next_file_ptr": 1,
                    "next_long_value": 1,
                    "next_node": 2,
                    "next_pointer": 1,
                    "next_position": 2,
                    "next_ptr": 2,
                    "temp_file_pointer": 1,
                    "temp_long2": 1,
                    "temp_long_2": 1,
                    "temp_var2": 4,
                    "var12": 1
                },
                "lVar14": {
                    "length_var": 1
                },
                "local_15a": {
                    "archive_flag": 1,
                    "archive_modified": 1,
                    "archive_written": 1,
                    "byte_var_local15a": 1,
                    "is_archive_written": 1,
                    "local_bool_var": 1,
                    "local_byte": 1,
                    "local_byte1": 1,
                    "local_byte_value": 1,
                    "local_byte_var": 4,
                    "local_byte_var1": 1,
                    "local_byte_variable": 1,
                    "local_flag": 9,
                    "local_var": 1,
                    "local_var1": 2,
                    "local_variable": 1,
                    "return_value2": 1,
                    "total_result": 1
                },
                "param_1": {
                    "archive": 1,
                    "archive_handle": 1,
                    "archive_handler": 1,
                    "archive_ptr": 1,
                    "arg1": 5,
                    "binary_files": 1,
                    "binary_handle": 1,
                    "data": 1,
                    "file_data": 3,
                    "file_descriptor": 2,
                    "file_handle": 1,
                    "file_manager": 1,
                    "handle": 1,
                    "input_data": 4,
                    "input_param": 3,
                    "param1": 1,
                    "param_1": 1,
                    "param_archive": 1,
                    "parameter1": 1
                },
                "param_2": {
                    "arg2": 3,
                    "file_list": 4,
                    "file_names": 4,
                    "file_paths": 13,
                    "files": 2,
                    "files_list": 1,
                    "input_array": 1,
                    "param2": 1,
                    "param_file_list": 1,
                    "parameter2": 1
                },
                "param_3": {
                    "arg3": 3,
                    "flag": 14,
                    "force_flag": 1,
                    "is_append_mode": 5,
                    "is_archive": 1,
                    "is_archive_empty": 1,
                    "is_emulator_mode": 1,
                    "is_reverse": 1,
                    "normalize_flag": 1,
                    "param3": 1,
                    "param_is_single_file": 1,
                    "parameter3": 1
                },
                "pcVar10": {
                    "basename2": 1,
                    "char_pointer3": 1,
                    "current_argument": 1,
                    "current_file": 5,
                    "current_file_name": 5,
                    "current_file_name_2": 1,
                    "current_file_path": 1,
                    "current_name_ptr": 1,
                    "current_path": 2,
                    "current_path_ptr": 1,
                    "current_string": 1,
                    "file": 2,
                    "file_path": 2,
                    "file_ptr": 1,
                    "pc_var3": 1,
                    "pointer_to_char4": 1,
                    "ptr_pc_var10": 1,
                    "str_var": 1,
                    "temp_file": 1,
                    "temp_var": 1
                },
                "pcVar7": {
                    "char_pointer1": 1,
                    "char_ptr1": 1,
                    "char_var1": 1,
                    "current_file": 6,
                    "current_file_name": 2,
                    "current_file_path": 1,
                    "current_path": 3,
                    "file1": 1,
                    "file_base_name": 1,
                    "file_name": 2,
                    "file_name_1": 2,
                    "file_path": 1,
                    "file_path_ptr": 1,
                    "file_path_var": 1,
                    "file_var": 1,
                    "name_ptr": 1,
                    "pc_var1": 1,
                    "pointer_to_char2": 1,
                    "ptr_pc_var7": 1,
                    "string_var_1": 1,
                    "temp_ptr1": 1
                },
                "pcVar8": {
                    "base_file": 1,
                    "base_name": 3,
                    "base_name1": 1,
                    "basename1": 1,
                    "basename_ptr": 1,
                    "basename_var": 2,
                    "char_pointer2": 1,
                    "char_ptr2": 1,
                    "char_var2": 1,
                    "current_base": 1,
                    "current_base_file": 1,
                    "current_file_name": 2,
                    "file2": 1,
                    "file_name_2": 2,
                    "filename1": 1,
                    "normalized_file_name": 1,
                    "normalized_file_path": 1,
                    "pc_var2": 1,
                    "pointer_to_char3": 1,
                    "ptr_pc_var8": 1,
                    "string_var_2": 1,
                    "temp_file_name": 1,
                    "temp_name_ptr": 1,
                    "temp_ptr2": 1,
                    "temporary_path": 1,
                    "tmp_file_name": 1
                },
                "piVar6": {
                    "errno_location": 6,
                    "errno_ptr": 9,
                    "errno_var": 2,
                    "error_code": 3,
                    "error_flag_ptr": 1,
                    "error_ptr": 3,
                    "error_var": 2,
                    "int_pointer": 1,
                    "int_ptr": 1,
                    "pi_var": 1,
                    "pointer_to_int1": 1,
                    "ptr_int_var1": 1
                },
                "ppcVar1": {
                    "archive_file_ptr": 1,
                    "archive_list_ptr": 1,
                    "binary_ptr": 1,
                    "current_file": 8,
                    "current_file_name": 1,
                    "current_file_names": 1,
                    "current_file_path": 4,
                    "current_path": 1,
                    "file_array": 1,
                    "file_data_ptr": 1,
                    "file_ptr": 2,
                    "file_table_ptr": 1,
                    "global_data": 1,
                    "list_ptr": 1,
                    "main_ptr": 1,
                    "next_file_name": 1,
                    "pointer_list": 1,
                    "pointer_to_char1": 1,
                    "ptr_ppc_var1": 1,
                    "temp_array": 1
                },
                "ppcVar15": {
                    "archive_files": 1,
                    "current_ar_emul": 1,
                    "current_archive": 1,
                    "current_archive_list_node": 1,
                    "current_element_ppc": 1,
                    "current_entry": 2,
                    "current_entry_ptr": 1,
                    "current_file_data_ptr": 1,
                    "current_file_path": 1,
                    "current_file_ptr": 1,
                    "current_node": 1,
                    "file_list": 8,
                    "file_list_head": 1,
                    "file_list_ptr": 1,
                    "file_pointer": 1,
                    "file_ptr": 1,
                    "file_ptr1": 1,
                    "input_array_ptr": 1,
                    "original_binary_ptr": 1,
                    "pointer_list1": 1,
                    "pointer_to_pointer_char1": 1,
                    "ptr_ppc_var15": 1,
                    "temp_ptr3": 1
                },
                "ppcVar16": {
                    "arch_file_ptr": 1,
                    "current_binary_ptr_ptr": 1,
                    "current_file_pointer": 1,
                    "current_file_ptr": 1,
                    "current_file_ptr2": 1,
                    "current_file_ptr_list": 1,
                    "current_list_ptr": 1,
                    "current_node": 1,
                    "file_list_current": 1,
                    "file_pointer": 1,
                    "file_ptr2": 1,
                    "file_ptr_ptr": 1,
                    "list_ptr": 1,
                    "next_ar_emul": 1,
                    "next_archive": 1,
                    "next_element_ppc": 1,
                    "next_entry": 1,
                    "next_entry_ptr": 1,
                    "next_file_data_ptr": 1,
                    "next_node": 1,
                    "pointer_list2": 1,
                    "pointer_to_pointer_char2": 1,
                    "previous_entry": 1,
                    "ptr1": 1,
                    "ptr1_temp": 1,
                    "ptr_ppc_var16": 1,
                    "searched_archive_list_node": 1,
                    "temp_array_ptr": 1,
                    "temp_list": 1,
                    "temp_ptr1": 1
                },
                "ppcVar18": {
                    "current_list": 1,
                    "file_ptr3": 1,
                    "file_ptr_ptr2": 1,
                    "last_ar_emul": 1,
                    "last_replaced_node": 1,
                    "list_ptr2": 1,
                    "next_file_ptr": 1,
                    "pointer_list3": 1,
                    "pointer_to_pointer_char3": 1,
                    "prev_file_data_ptr": 1,
                    "prev_file_ptr": 2,
                    "previous_archive": 1,
                    "previous_binary_ptr": 1,
                    "previous_element_ppc": 1,
                    "previous_entry": 2,
                    "previous_entry_ptr": 1,
                    "previous_file": 1,
                    "previous_file_path": 1,
                    "previous_file_pointer": 1,
                    "previous_file_ptr": 1,
                    "previous_file_ptr_list": 1,
                    "previous_list_ptr": 1,
                    "previous_node": 2,
                    "ptr2": 1,
                    "ptr2_temp": 1,
                    "ptr_ppc_var18": 1,
                    "temp_array_ptr_2": 1,
                    "temp_ptr2": 1
                },
                "sStack_c8": {
                    "file_stat": 6,
                    "file_stat_structure": 1,
                    "s_stack_var": 1,
                    "stack_file_info": 1,
                    "stack_stat": 1,
                    "stat_info": 1,
                    "stat_result": 1,
                    "stat_stack": 1,
                    "stat_stack_value": 1,
                    "stat_struct": 9,
                    "stat_structure": 3,
                    "stat_var": 1,
                    "stat_var1": 1,
                    "struct_stat": 1,
                    "temp_stat_struct": 1
                },
                "sVar5": {
                    "length": 1,
                    "size": 6,
                    "size_value": 3,
                    "size_var": 12,
                    "size_var1": 2,
                    "size_var5": 1,
                    "string_length": 5,
                    "temp_size": 1
                },
                "uVar13": {
                    "function_return_value": 1,
                    "output": 1,
                    "result": 5,
                    "return_val": 4,
                    "return_value": 13,
                    "return_var_2": 1,
                    "status": 1,
                    "u_var2": 1,
                    "undefined_var13": 1,
                    "undefined_var3": 3
                },
                "uVar14": {
                    "buffer_size": 1,
                    "byte_length": 1,
                    "count": 1,
                    "length": 2,
                    "length_threshold": 1,
                    "size_value": 1,
                    "size_var2": 1,
                    "temp_unsigned_long": 1,
                    "u_var3": 1,
                    "uint_var": 1,
                    "ulong_value": 4,
                    "ulong_var": 12,
                    "ulong_var1": 2,
                    "ulong_var14": 1
                },
                "uVar17": {
                    "ar_emul_flag": 1,
                    "file_type": 1,
                    "flag": 1,
                    "flag_value": 2,
                    "mode": 1,
                    "option": 1,
                    "search_mode": 1,
                    "status": 1,
                    "temp_u_int": 1,
                    "temp_value1": 1,
                    "temp_var": 1,
                    "u_var4": 1,
                    "uint_value": 4,
                    "uint_var": 11,
                    "uint_var1": 2,
                    "uint_var17": 1
                },
                "uVar2": {
                    "return_value": 1,
                    "undef_var": 1,
                    "undefined_value": 5,
                    "undefined_var": 19,
                    "undefined_var1": 2,
                    "undefined_var2": 1,
                    "undefined_variable": 1,
                    "unknown": 1
                },
                "uVar9": {
                    "filename": 1,
                    "head_position": 1,
                    "normalize_result": 1,
                    "normalize_var": 1,
                    "normalized_file": 2,
                    "normalized_file_name": 2,
                    "normalized_file_path": 1,
                    "normalized_file_path_ptr": 1,
                    "normalized_name": 2,
                    "normalized_path": 7,
                    "output_ptr": 1,
                    "result": 2,
                    "return_var": 1,
                    "temp_var": 1,
                    "temporary_value": 1,
                    "u_var1": 1,
                    "undefined_var2": 4,
                    "undefined_var9": 1
                }
            },
            "called": [
                "FUN_00102943"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nundefined8 process_archive_files_00105570(long arg1,char **file_paths,char flag)\n\n{\n  char **current_file;\n  undefined undefined_var;\n  byte byte_var;\n  int int_var;\n  size_t size_var;\n  int *errno_ptr;\n  char *current_file;\n  char *base_name;\n  undefined8 normalized_path;\n  char *current_file;\n  char *basename;\n  long temp_var1;\n  long temp_var2;\n  undefined8 return_value;\n  ulong ulong_var;\n  char **file_list;\n  char **current_node;\n  uint uint_var;\n  char **previous_entry;\n  bool bool_var;\n  byte byte_var2;\n  byte local_flag;\n  undefined stack_array [88];\n  long l_stack_var;\n  stat stat_struct;\n  \n  byte_var2 = 0;\n  current_file = (char **)(arg1 + 0xf0);\n  local_flag = 0;\n  if (file_paths == (char **)0x0) {\n    return_value = initialize_global_data();\n    return return_value;\n  }\n  do {\n    current_file = *file_paths;\njoined_r0x001055aa:\n    if (current_file == (char *)0x0) {\n      if (local_flag != 0) {\n        return_value = write_archive(arg1);\n        return return_value;\n      }\n      DAT_0010d618 = 0;\n      return 0;\n    }\n    file_list = *(char ***)(arg1 + 0xf0);\n    current_node = current_file;\n    if (flag != '\\0') {\nLAB_0010564c:\n      uint_var = DAT_0010d640;\n      if (DAT_0010d640 != 0) goto LAB_001028f5;\n      temp_var2 = *(long *)(arg1 + 0xf0);\n      if (*(long *)(arg1 + 0xf0) == 0) goto LAB_0010571f;\nLAB_00105670:\n      do {\n        temp_var1 = temp_var2;\n        temp_var2 = *(long *)(temp_var1 + 0xf0);\n      } while (temp_var2 != 0);\n      current_node = (char **)(temp_var1 + 0xf0);\n      current_file = *file_paths;\n      do {\n        if (DAT_0010d620 != 0) {\n          return_value = normalize(current_file,arg1);\n          int_var = filename_cmp(return_value,\"__.LIBDEP\");\n          if (int_var == 0) {\n            byte_var = ar_emul_default_append(current_node,DAT_0010d620,DAT_0010d60c != 0,DAT_0010d5f8);\n            local_flag = byte_var | local_flag;\n            goto LAB_0010577e;\n          }\n          current_file = *file_paths;\n        }\n        undefined_var = DAT_0010d5f8;\n        bool_var = DAT_0010d60c != 0;\n        temp_var2 = bfd_openr(current_file,DAT_0010d5f0);\n        if (temp_var2 != 0) {\n          file_paths = file_paths + 1;\n          byte_var = do_ar_emul_append_constprop_0(current_node,temp_var2,(uint)bool_var,undefined_var);\n          local_flag = local_flag | byte_var;\n          current_file = *file_paths;\n          goto joined_r0x001055aa;\n        }\n        bfd_fatal(current_file,0);\n        uint_var = (uint)bool_var;\nLAB_001028f5:\n        return_value = DAT_0010d638;\n        if (uint_var == 3) {\n          temp_var2 = *(long *)(arg1 + 0xf0);\n          if (*(long *)(arg1 + 0xf0) != 0) goto LAB_00105670;\n        }\n        else {\n          for (; (undefined8 *)*current_node != (undefined8 *)0x0;\n              current_node = (char **)(*current_node + 0xf0)) {\n            int_var = filename_cmp(*(undefined8 *)*current_node,return_value);\n            if (int_var == 0) {\n              if (uint_var == 2) {\n                current_node = (char **)(*current_node + 0xf0);\n              }\n              break;\n            }\n          }\n        }\nLAB_0010571f:\n        current_file = *file_paths;\n      } while( true );\n    }\n    previous_entry = current_file;\n    if (file_list == (char **)0x0) {\n      uint_var = DAT_0010d640;\n      if (DAT_0010d640 == 0) goto LAB_0010571f;\n      goto LAB_001028f5;\n    }\nLAB_001055d8:\n    if (DAT_0010d5f9 == '\\0') {\n      current_file = (char *)lbasename(*file_list);\n      base_name = current_file;\n      if (DAT_0010d5fa != '\\0') {\n        size_var = strlen(current_file);\n        ulong_var = (ulong)*(byte *)(*(long *)(arg1 + 8) + 0x1e);\n        if (ulong_var < size_var) {\n          base_name = (char *)xmalloc(ulong_var + 1);\n          temp_var2 = *(long *)(arg1 + 8);\n          current_file = base_name;\n          for (ulong_var = (ulong)*(byte *)(temp_var2 + 0x1e); ulong_var != 0; ulong_var = ulong_var - 1) {\n            *current_file = *current_file;\n            current_file = current_file + (ulong)byte_var2 * -2 + 1;\n            current_file = current_file + (ulong)byte_var2 * -2 + 1;\n          }\n          base_name[*(byte *)(temp_var2 + 0x1e)] = '\\0';\n        }\n        current_file = *file_paths;\n        current_file = base_name;\n        if (DAT_0010d5f9 == '\\0') goto LAB_00105611;\n        goto LAB_00102980;\n      }\n      current_file = *file_paths;\n      if (DAT_0010d5f9 != '\\0') goto LAB_00102980;\nLAB_00105611:\n      basename = (char *)lbasename(current_file);\n      if (DAT_0010d5fa != '\\0') {\n        size_var = strlen(basename);\n        ulong_var = (ulong)*(byte *)(*(long *)(arg1 + 8) + 0x1e);\n        current_file = basename;\n        current_file = base_name;\n        if (ulong_var < size_var) {\n          current_file = (char *)xmalloc(ulong_var + 1);\n          temp_var2 = *(long *)(arg1 + 8);\n          base_name = current_file;\n          for (ulong_var = (ulong)*(byte *)(temp_var2 + 0x1e); ulong_var != 0; ulong_var = ulong_var - 1) {\n            *base_name = *basename;\n            basename = basename + (ulong)byte_var2 * -2 + 1;\n            base_name = base_name + (ulong)byte_var2 * -2 + 1;\n          }\n          current_file[*(byte *)(temp_var2 + 0x1e)] = '\\0';\n        }\n        goto LAB_00102980;\n      }\n      int_var = filename_cmp(basename,base_name);\n      if (int_var == 0) goto LAB_00102993;\nLAB_00105639:\n      previous_entry = file_list + 0x1e;\n      file_list = (char **)file_list[0x1e];\n      if (file_list == (char **)0x0) goto LAB_0010564c;\n      goto LAB_001055d8;\n    }\n    current_file = *file_paths;\n    current_file = *file_list;\nLAB_00102980:\n    int_var = filename_cmp(current_file,current_file);\n    if (int_var != 0) goto LAB_00105639;\nLAB_00102993:\n    if (file_list[0x1c] == (char *)0x0) goto LAB_00105639;\n    if (_DAT_0010d644 != 0) {\n      int_var = stat(*file_paths,&stat_struct);\n      if (int_var != 0) {\n        errno_ptr = __errno_location();\n        if (*errno_ptr != 2) {\n          bfd_fatal(*file_paths);\nLAB_00102b7e:\n          current_file = *file_list;\n          return_value = dcgettext(0,\"internal stat error on %s\",5);\n          fatal(return_value,current_file);\n          free(file_paths);\n          return 0;\n        }\n        goto LAB_0010577e;\n      }\n      current_node = (char **)file_list[0x1d];\n      if ((char **)file_list[0x1d] == (char **)0x0) {\n        current_node = file_list;\n      }\n      int_var = (**(code **)(current_node[1] + 0x1e8))(file_list,stack_array);\n      if (int_var != 0) goto LAB_00102b7e;\n      if (stat_struct.st_mtim.tv_sec <= l_stack_var) goto LAB_0010577e;\n    }\n    return_value = get_pos_bfd(current_file,2,*file_list);\n    if (DAT_0010d620 == 0) {\nLAB_00102ae2:\n      current_file = *file_paths;\n      bool_var = DAT_0010d60c != 0;\n      temp_var2 = bfd_openr(current_file,DAT_0010d5f0);\n      if (temp_var2 == 0) {\n        bfd_fatal(current_file,0);\n        goto LAB_00102b3e;\n      }\n      byte_var = ar_emul_default_replace(return_value,temp_var2,bool_var);\n    }\n    else {\n      normalized_path = normalize(*file_paths,arg1);\n      int_var = filename_cmp(normalized_path,\"__.LIBDEP\");\n      if (int_var != 0) goto LAB_00102ae2;\nLAB_00102b3e:\n      byte_var = ar_emul_default_replace(return_value,DAT_0010d620,DAT_0010d60c != 0);\n    }\n    if (byte_var != 0) {\n      *previous_entry = *(char **)(*previous_entry + 0xf0);\n      local_flag = byte_var;\n    }\nLAB_0010577e:\n    file_paths = file_paths + 1;\n  } while( true );\n}\n\n",
            "current_name": "process_archive_files_00105570",
            "entrypoint": "0x00105570",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105570": "process_archive_files_00105570",
                "__s": "basename",
                "auStack_158": "stack_array",
                "bVar19": "bool_var",
                "bVar20": "byte_var2",
                "bVar3": "byte_var",
                "iVar4": "int_var",
                "initialize_global_data_00102943": "initialize_global_data",
                "lStack_100": "l_stack_var",
                "lVar11": "temp_var1",
                "lVar12": "temp_var2",
                "local_15a": "local_flag",
                "param_1": "arg1",
                "param_2": "file_paths",
                "param_3": "flag",
                "pcVar10": "current_file",
                "pcVar7": "current_file",
                "pcVar8": "base_name",
                "piVar6": "errno_ptr",
                "ppcVar1": "current_file",
                "ppcVar15": "file_list",
                "ppcVar16": "current_node",
                "ppcVar18": "previous_entry",
                "sStack_c8": "stat_struct",
                "sVar5": "size_var",
                "uVar13": "return_value",
                "uVar14": "ulong_var",
                "uVar17": "uint_var",
                "uVar2": "undefined_var",
                "uVar9": "normalized_path"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001057a0": {
            "additional_data": {
                "FUN_001057a0": {
                    "create_temp_file_path": 1,
                    "extract_and_create_temp_file": 1,
                    "extract_directory": 1,
                    "extract_file_from_path": 2,
                    "extract_file_name": 4,
                    "extract_file_path": 4,
                    "extract_filename": 1,
                    "extract_filename_and_create_temp_file": 1,
                    "extract_filename_and_create_tempfile": 1,
                    "extract_last_directory": 2,
                    "get_temp_file_path": 1,
                    "reverse_and_allocate": 1,
                    "reverse_and_allocate_file_path": 1,
                    "reverse_and_allocate_filepath": 1,
                    "reverse_and_allocate_path": 1,
                    "reverse_and_store_file_path": 1,
                    "reverse_and_store_path": 1,
                    "reverse_file_name": 1,
                    "reverse_file_path": 1,
                    "reverse_filepath_and_create_temp_file": 1,
                    "reverse_path": 1,
                    "reverse_path_and_create_temp_file": 1
                },
                "auVar8": {
                    "function_result": 1,
                    "output_data": 1,
                    "result": 13,
                    "result_data": 1,
                    "return_struct": 1,
                    "return_value": 14
                },
                "bVar7": {
                    "byte_value": 3,
                    "char_counter": 1,
                    "char_multiplier": 1,
                    "copy_forward": 1,
                    "count": 1,
                    "counter": 2,
                    "counter_increment": 1,
                    "flag": 4,
                    "i": 1,
                    "increment": 1,
                    "initialized": 1,
                    "is_first_char": 1,
                    "is_last_slash": 2,
                    "is_null": 4,
                    "is_slash": 1,
                    "offset": 1,
                    "offset_increment": 1,
                    "reverse_direction": 1,
                    "slash_counter": 1,
                    "zero": 1,
                    "zero_byte": 1
                },
                "free": {
                    "deallocate_memory": 2,
                    "free_memory": 1
                },
                "iVar1": {
                    "file_descriptor": 1,
                    "result": 8,
                    "temp_fd": 1,
                    "temp_file_descriptor": 4
                },
                "lVar3": {
                    "dir_len": 1,
                    "extra_bytes": 1,
                    "file_name_length": 2,
                    "file_name_offset": 2,
                    "file_name_start_index": 1,
                    "file_path_length": 1,
                    "filename_length": 3,
                    "filename_offset": 1,
                    "filepath_length": 2,
                    "input_path_length": 1,
                    "last_slash_index": 1,
                    "length": 1,
                    "path_length": 10,
                    "prefix_length": 3,
                    "prepend_offset": 1
                },
                "lVar4": {
                    "copy_index": 2,
                    "counter": 1,
                    "current_index": 1,
                    "i": 7,
                    "index": 8,
                    "input_path_index": 1,
                    "iterator": 1,
                    "loop_counter": 2,
                    "loop_index": 2,
                    "offset": 1,
                    "remaining_length": 1,
                    "reverse_index": 1,
                    "temp": 3
                },
                "lVar5": {
                    "bytes_to_copy": 1,
                    "copy_length": 1,
                    "diff": 1,
                    "difference": 2,
                    "file_length": 1,
                    "file_name_end_index": 1,
                    "file_name_length": 1,
                    "file_path_length": 1,
                    "filepath_offset": 1,
                    "input_len": 1,
                    "last_occurrence_of_slash_index": 1,
                    "last_slash_distance": 1,
                    "last_slash_index": 5,
                    "last_slash_offset": 1,
                    "offset": 3,
                    "path_length": 2,
                    "separator_index": 1,
                    "slash_distance": 1,
                    "slash_offset": 3,
                    "source_path_length": 1,
                    "substring_length": 1
                },
                "malloc": {
                    "allocate_memory": 1
                },
                "mkstemp": {
                    "create_temp_file": 3,
                    "create_temporary_file": 1,
                    "generate_unique_file_name": 1
                },
                "param_1": {
                    "file_path": 10,
                    "filepath": 2,
                    "input_path": 7,
                    "input_string": 1,
                    "original_path": 1,
                    "path": 9,
                    "source_path": 1
                },
                "param_2": {
                    "file_descriptor": 22,
                    "output_fd": 1,
                    "output_file_descriptor": 6,
                    "temp_file_descriptor": 2
                },
                "param_3": {
                    "arg1": 1,
                    "arg3": 2,
                    "arg_1": 1,
                    "param_3": 3,
                    "unknown_param": 1,
                    "unknown_param_1": 2,
                    "unused1": 1,
                    "unused_arg1": 1,
                    "unused_param": 6,
                    "unused_param1": 2,
                    "unused_param_1": 6,
                    "unused_parameter": 2,
                    "unused_parameter_1": 2,
                    "unused_variable_1": 1
                },
                "param_4": {
                    "arg2": 1,
                    "arg4": 2,
                    "arg_2": 1,
                    "input_data": 1,
                    "output_param": 1,
                    "param_4": 3,
                    "unknown_param": 1,
                    "unknown_param_2": 2,
                    "unused2": 1,
                    "unused_arg2": 1,
                    "unused_param": 1,
                    "unused_param2": 4,
                    "unused_param_2": 7,
                    "unused_parameter_2": 2,
                    "unused_parameter_two": 1,
                    "unused_variable_2": 1,
                    "value": 1
                },
                "pcVar2": {
                    "file_name": 2,
                    "last_forward_slash": 1,
                    "last_occurrence_of_slash": 1,
                    "last_separator": 1,
                    "last_slash": 19,
                    "last_slash_index": 1,
                    "last_slash_pos": 1,
                    "last_slash_position": 4,
                    "last_slash_ptr": 1
                },
                "pcVar6": {
                    "allocated_file_name": 1,
                    "allocated_path": 2,
                    "copy_ptr": 1,
                    "current_char": 1,
                    "destination_path": 2,
                    "dir_path": 1,
                    "dynamic_path": 1,
                    "filename": 1,
                    "filename_buffer": 1,
                    "new_file_path": 3,
                    "new_file_path_ptr": 1,
                    "new_filepath": 2,
                    "new_path": 10,
                    "substring_copy": 1,
                    "temp_file_path": 2,
                    "temp_path": 1
                },
                "strlen": {
                    "get_string_length": 1
                },
                "strrchr": {
                    "find_last_occurrence": 4,
                    "find_last_slash": 1
                },
                "xmalloc": {
                    "allocate_memory": 4
                }
            },
            "called": [
                "FUN_001023e0",
                "FUN_00102230",
                "FUN_001021c0",
                "FUN_00102ba1"
            ],
            "calling": [
                "FUN_00103c60",
                "FUN_001058b0"
            ],
            "code": "\nundefined  [16] extract_file_from_path_001057a0(char *file_path,int *file_descriptor,undefined8 unused_param,undefined8 unused_param_2)\n\n{\n  int result;\n  char *last_slash;\n  long path_length;\n  long index;\n  long last_slash_index;\n  char *new_path;\n  byte flag;\n  undefined return_value [16];\n  \n  flag = 0;\n  last_slash = find_last_occurrence(file_path,0x2f);\n  if (last_slash == (char *)0x0) {\n    last_slash = (char *)allocate_memory(9);\n    path_length = 0;\n  }\n  else {\n    last_slash_index = (long)last_slash - (long)file_path;\n    last_slash = (char *)allocate_memory(last_slash_index + 0xb);\n    path_length = last_slash_index + 1;\n    new_path = last_slash;\n    for (index = last_slash_index; index != 0; index = index + -1) {\n      *new_path = *file_path;\n      file_path = file_path + (ulong)flag * -2 + 1;\n      new_path = new_path + (ulong)flag * -2 + 1;\n    }\n    last_slash[last_slash_index] = '/';\n  }\n  *(undefined8 *)(last_slash + path_length) = 0x5858585858587473;\n  *(undefined *)((long)(last_slash + path_length) + 8) = 0;\n  result = create_temp_file(last_slash);\n  if (result == -1) {\n    new_path = (char *)0x0;\n    deallocate_memory(last_slash);\n  }\n  else {\n    *file_descriptor = result;\n    new_path = last_slash;\n  }\n  return_value._8_8_ = unused_param_2;\n  return_value._0_8_ = new_path;\n  return return_value;\n}\n\n",
            "current_name": "extract_file_from_path_001057a0",
            "entrypoint": "0x001057a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001057a0": "extract_file_from_path_001057a0",
                "auVar8": "return_value",
                "bVar7": "flag",
                "free": "deallocate_memory",
                "iVar1": "result",
                "lVar3": "path_length",
                "lVar4": "index",
                "lVar5": "last_slash_index",
                "malloc": "allocate_memory",
                "mkstemp": "create_temp_file",
                "param_1": "file_path",
                "param_2": "file_descriptor",
                "param_3": "unused_param",
                "param_4": "unused_param_2",
                "pcVar2": "last_slash",
                "pcVar6": "new_path",
                "strrchr": "find_last_occurrence",
                "xmalloc": "allocate_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105830": {
            "additional_data": {
                "FUN_00102bb0": {
                    "initialize": 1
                },
                "FUN_00105830": {
                    "decompiled_function": 1,
                    "extract_and_copy_string": 2,
                    "extract_and_copy_substring": 1,
                    "extract_file_name": 3,
                    "extract_file_name_from_path": 1,
                    "extract_filename": 1,
                    "extract_string": 2,
                    "extract_string_from_memory": 1,
                    "extract_string_from_parameter": 1,
                    "extract_sub_string": 3,
                    "extract_substring": 6,
                    "extracted_data": 2,
                    "parse_param_string": 1,
                    "process_string": 3,
                    "reverse_and_copy": 1,
                    "reverse_and_copy_string": 1,
                    "reverse_string": 1
                },
                "__s": {
                    "base_name": 19,
                    "basename": 2,
                    "basename_ptr": 1,
                    "basename_result": 3,
                    "file_name": 3,
                    "input_string": 1,
                    "source": 1
                },
                "auVar6": {
                    "result": 18,
                    "return_data": 1,
                    "return_value": 9
                },
                "bVar5": {
                    "byte_flag": 1,
                    "byte_var": 2,
                    "copy_direction": 1,
                    "dummy_byte": 1,
                    "flag": 4,
                    "increment": 1,
                    "is_increment": 1,
                    "is_negative": 4,
                    "is_negative_iter": 1,
                    "is_positive": 1,
                    "is_reversed": 1,
                    "iteration_flag": 1,
                    "loop_counter": 3,
                    "loop_var": 2,
                    "loop_variable": 1,
                    "temp": 1
                },
                "lVar1": {
                    "metadata_address": 1,
                    "pointer_to_struct": 1,
                    "pointer_var": 1,
                    "struct_address": 1,
                    "struct_pointer": 1,
                    "struct_value": 4
                },
                "param_1": {
                    "file_path": 5,
                    "filename": 6,
                    "input_str": 1,
                    "input_string": 13,
                    "original_string": 2,
                    "output_string": 1,
                    "source_string": 3
                },
                "param_2": {
                    "buffer": 1,
                    "context": 1,
                    "data_pointer": 1,
                    "data_struct_addr": 1,
                    "data_struct_ptr": 1,
                    "file_struct_pointer": 1,
                    "memory_block": 1,
                    "metadata": 1,
                    "metadata_pointer": 1,
                    "param_2": 1,
                    "parameter": 1,
                    "parameter_info": 1,
                    "pointer_to_struct": 1,
                    "ptr_to_struct": 1,
                    "reference_struct": 1,
                    "string_info": 1,
                    "struct_address": 1,
                    "struct_pointer": 7,
                    "struct_ptr": 5,
                    "structure_address": 1,
                    "structure_ptr": 1
                },
                "param_3": {
                    "param3": 5,
                    "param_3": 5,
                    "unknown_param1": 2,
                    "unused": 3,
                    "unused1": 1,
                    "unused_arg1": 1,
                    "unused_param": 1,
                    "unused_param1": 8,
                    "unused_param_1": 1,
                    "unused_parameter": 2,
                    "unused_parameter1": 1,
                    "variable1": 1
                },
                "param_4": {
                    "output_parameter": 1,
                    "output_struct": 1,
                    "param4": 5,
                    "param_4": 5,
                    "result": 1,
                    "return_value": 1,
                    "unknown_param2": 2,
                    "unused": 1,
                    "unused2": 1,
                    "unused_arg2": 1,
                    "unused_param2": 8,
                    "unused_param_2": 1,
                    "unused_parameter2": 2,
                    "variable2": 1
                },
                "pcVar4": {
                    "copied_substring": 1,
                    "copy_ptr": 2,
                    "dest_ptr": 2,
                    "destination": 3,
                    "destination_string": 2,
                    "dst_ptr": 1,
                    "extracted_substring": 1,
                    "modified_file_name": 1,
                    "new_filename_ptr": 1,
                    "new_string": 2,
                    "output_string": 9,
                    "output_string_ptr": 1,
                    "result": 1,
                    "substring": 1,
                    "substring_ptr": 1,
                    "target_string": 1
                },
                "sVar2": {
                    "base_name_length": 3,
                    "file_name_length": 4,
                    "filename_length": 5,
                    "input_length": 2,
                    "input_str_len": 1,
                    "input_string_length": 2,
                    "input_string_size": 1,
                    "original_string_len": 1,
                    "original_string_length": 1,
                    "source_length": 1,
                    "source_string_length": 1,
                    "string_length": 4,
                    "strlen_result": 1
                },
                "uVar3": {
                    "byte_count": 2,
                    "byte_value": 3,
                    "desired_string_length": 1,
                    "max_characters": 1,
                    "max_copy_len": 1,
                    "max_copy_length": 1,
                    "max_file_name_length": 2,
                    "max_filename_length": 2,
                    "max_length": 2,
                    "max_string_length": 2,
                    "max_sub_string_length": 1,
                    "name_length": 1,
                    "source_length": 1,
                    "string_length": 3,
                    "string_length_limit": 1,
                    "sub_string_length": 1,
                    "substring_length": 4,
                    "substring_size": 1,
                    "target_length": 1
                }
            },
            "called": [
                "FUN_001022c0",
                "FUN_00102bb0"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00105480"
            ],
            "code": "\nundefined  [16] extract_and_copy_substring_00105830(char *input_string,long struct_pointer,undefined8 unused_param1,undefined8 unused_param2)\n\n{\n  long struct_value;\n  size_t filename_length;\n  char *base_name;\n  ulong substring_length;\n  char *output_string;\n  byte flag;\n  undefined result [16];\n  \n  flag = 0;\n  if (DAT_0010d5f9 == '\\0') {\n    base_name = (char *)lbasename();\n    input_string = base_name;\n    if ((DAT_0010d5fa != '\\0') && (struct_pointer != 0)) {\n      filename_length = strlen(base_name);\n      substring_length = (ulong)*(byte *)(*(long *)(struct_pointer + 8) + 0x1e);\n      if (substring_length < filename_length) {\n        input_string = (char *)xmalloc(substring_length + 1);\n        struct_value = *(long *)(struct_pointer + 8);\n        output_string = input_string;\n        for (substring_length = (ulong)*(byte *)(struct_value + 0x1e); substring_length != 0; substring_length = substring_length - 1) {\n          *output_string = *base_name;\n          base_name = base_name + (ulong)flag * -2 + 1;\n          output_string = output_string + (ulong)flag * -2 + 1;\n        }\n        input_string[*(byte *)(struct_value + 0x1e)] = '\\0';\n      }\n    }\n  }\n  result._8_8_ = unused_param2;\n  result._0_8_ = input_string;\n  return result;\n}\n\n",
            "current_name": "extract_and_copy_substring_00105830",
            "entrypoint": "0x00105830",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105830": "extract_and_copy_substring_00105830",
                "__s": "base_name",
                "auVar6": "result",
                "bVar5": "flag",
                "lVar1": "struct_value",
                "param_1": "input_string",
                "param_2": "struct_pointer",
                "param_3": "unused_param1",
                "param_4": "unused_param2",
                "pcVar4": "output_string",
                "sVar2": "filename_length",
                "uVar3": "substring_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105870": {
            "additional_data": {
                "FUN_00102cd9": {
                    "initialize": 1
                },
                "FUN_00105870": {
                    "find_file": 6,
                    "find_file_address": 1,
                    "find_file_entry": 1,
                    "find_file_in_list": 1,
                    "find_file_name": 1,
                    "find_file_offset": 1,
                    "find_file_or_last_entry": 1,
                    "find_filename_in_list": 1,
                    "find_last_entry": 1,
                    "find_last_instance": 1,
                    "find_last_matching": 1,
                    "find_last_matching_file": 2,
                    "find_last_occurrence": 1,
                    "find_matching_address": 1,
                    "find_matching_entry": 5,
                    "find_matching_file": 1,
                    "find_matching_file_address": 1,
                    "find_matching_record": 1,
                    "find_next_file": 1,
                    "find_next_matching_entry": 1,
                    "find_next_pointer": 1
                },
                "filename_cmp": {
                    "compare_filenames": 4
                },
                "iVar1": {
                    "cmp_result": 13,
                    "compare_result": 3,
                    "comparison_result": 10,
                    "filename_cmp_result": 2,
                    "filename_comparison": 1,
                    "result": 1
                },
                "iVar3": {
                    "comparison_mode": 1,
                    "comparison_type": 1,
                    "condition": 2,
                    "entry_type": 2,
                    "file_count": 1,
                    "file_type": 2,
                    "loop_condition": 3,
                    "loop_type": 1,
                    "match_type": 1,
                    "matching_type": 1,
                    "mode": 2,
                    "num_entries": 1,
                    "operation_type": 1,
                    "option": 1,
                    "search_mode": 3,
                    "search_type": 7
                },
                "param_1": {
                    "address_list": 1,
                    "array": 2,
                    "array_ptr": 1,
                    "entry_list": 8,
                    "file_addresses": 1,
                    "file_array": 4,
                    "file_entries": 1,
                    "file_list": 10,
                    "file_offsets": 1,
                    "pointers": 1,
                    "records": 1
                },
                "param_2": {
                    "array_length": 1,
                    "array_size": 2,
                    "compar_mode": 1,
                    "count": 2,
                    "entry_count": 2,
                    "entry_list_size": 1,
                    "entry_type": 1,
                    "file_count": 6,
                    "list_length": 1,
                    "list_size": 1,
                    "mode": 2,
                    "num_elements": 1,
                    "num_entries": 2,
                    "num_records": 1,
                    "search_mode": 2,
                    "search_type": 4,
                    "size": 1
                },
                "param_3": {
                    "desired_file": 1,
                    "desired_filename": 1,
                    "filename": 4,
                    "search_entry": 1,
                    "search_file": 1,
                    "search_filename": 5,
                    "search_string": 2,
                    "search_term": 2,
                    "search_value": 6,
                    "target": 1,
                    "target_file": 1,
                    "target_file_name": 1,
                    "target_filename": 5
                },
                "uVar2": {
                    "current": 1,
                    "current_file": 1,
                    "default_file_name": 1,
                    "default_filename": 10,
                    "default_search_entry": 1,
                    "default_search_term": 1,
                    "default_value": 3
                }
            },
            "called": [
                "FUN_00102cd9"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105db0"
            ],
            "code": "\nlong * find_last_matching_file_00105870(long *file_list,int file_count,undefined8 search_value)\n\n{\n  int cmp_result;\n  undefined8 default_filename;\n  int search_type;\n  \n  default_filename = DAT_0010d638;\n  search_type = DAT_0010d640;\n  if (DAT_0010d640 == 0) {\n    default_filename = search_value;\n    search_type = file_count;\n  }\n  if (search_type == 3) {\n    for (; *file_list != 0; file_list = (long *)(*file_list + 0xf0)) {\n    }\n  }\n  else {\n    for (; (undefined8 *)*file_list != (undefined8 *)0x0; file_list = (long *)(*file_list + 0xf0)) {\n      cmp_result = compare_filenames(*(undefined8 *)*file_list,default_filename);\n      if (cmp_result == 0) {\n        if (search_type != 2) {\n          return file_list;\n        }\n        return (long *)(*file_list + 0xf0);\n      }\n    }\n  }\n  return file_list;\n}\n\n",
            "current_name": "find_last_matching_file_00105870",
            "entrypoint": "0x00105870",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105870": "find_last_matching_file_00105870",
                "filename_cmp": "compare_filenames",
                "iVar1": "cmp_result",
                "iVar3": "search_type",
                "param_1": "file_list",
                "param_2": "file_count",
                "param_3": "search_value",
                "uVar2": "default_filename"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001058b0": {
            "additional_data": {
                "DAT_0010d2d0": {
                    "global_flag2": 1
                },
                "DAT_0010d5e0": {
                    "current_file_stream_ptr": 1,
                    "global_file_pointer": 1,
                    "temp_file_descriptor_global": 1
                },
                "DAT_0010d5f8": {
                    "flag_value4": 1,
                    "global_flag4": 1,
                    "unknown_flag_5": 1
                },
                "DAT_0010d5f9": {
                    "flag_value3": 1,
                    "global_flag3": 1,
                    "unknown_flag_4": 1
                },
                "DAT_0010d5fa": {
                    "flag_value1": 1,
                    "global_flag1": 1,
                    "unknown_flag_3": 1
                },
                "DAT_0010d618": {
                    "current_file_stream": 1,
                    "global_temp_file": 1,
                    "temp_file_ptr_global": 1
                },
                "DAT_0010d648": {
                    "constant_value": 1,
                    "global_flags": 1,
                    "unknown_flag_1": 1
                },
                "FUN_001058b0": {
                    "create_archive": 2,
                    "create_archive_file": 1,
                    "extract_and_improve_archive": 2,
                    "extract_and_print_archive_info": 2,
                    "extract_and_process_archive": 1,
                    "extract_and_write_archive": 1,
                    "extract_and_write_archive_meta_data": 1,
                    "extract_and_write_archive_metadata": 1,
                    "extract_archive_entry": 1,
                    "extract_archive_file": 1,
                    "parse_and_write_archive": 1,
                    "process_archive": 1,
                    "process_archive_entry": 1,
                    "write_archive_contents": 1,
                    "write_archive_entry": 5,
                    "write_archive_metadata": 1,
                    "write_archive_to_file": 4,
                    "write_archive_to_temp_file": 3
                },
                "_DAT_0010d2d0": {
                    "flag_value2": 1
                },
                "__format": {
                    "corrupt_time_data_message": 1,
                    "error_format": 3,
                    "error_message": 5,
                    "error_message_format": 2,
                    "error_msg": 1,
                    "format_str": 3,
                    "format_string": 9,
                    "time_data_message": 1,
                    "time_error_format": 1,
                    "time_error_message": 2,
                    "time_error_msg": 1,
                    "time_format": 1
                },
                "__ptr": {
                    "copied_string": 1,
                    "duplicate_file_paths": 1,
                    "duplicate_pointer": 1,
                    "duplicate_str": 1,
                    "duplicate_string": 1,
                    "duplicated_archive_name": 1,
                    "file_name": 1,
                    "file_path_copy": 1,
                    "str_ptr": 1,
                    "string_copy": 1,
                    "temp_file_name": 2,
                    "temp_file_path": 10,
                    "temp_filename": 1,
                    "temp_name": 3,
                    "temp_path": 2,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "tmp_filename": 1
                },
                "__stream": {
                    "archive_file": 2,
                    "file_stream": 2,
                    "temp_file": 19,
                    "temp_file_ptr": 2,
                    "temp_file_stream": 3,
                    "temp_stream": 1,
                    "temporary_file": 2
                },
                "_uStack0000000000000020": {
                    "file_type_copy": 1
                },
                "cStack_31": {
                    "c2": 1,
                    "c_stack31": 1,
                    "c_stack_31": 1,
                    "char_stack_31": 1,
                    "char_stack_var2": 1,
                    "file_extension": 1,
                    "file_mode": 1,
                    "file_permission": 1,
                    "file_permissions_continued": 1,
                    "file_type_char2": 3,
                    "has_setgid_bit": 1,
                    "is_writable": 1,
                    "owner_write_permission": 1,
                    "permission_byte2": 1,
                    "permission_char2": 3,
                    "permission_character_2": 1,
                    "readable_flag": 1,
                    "stack_char2": 1,
                    "stack_char3": 1,
                    "temp_stack_char2": 1,
                    "type_digit_2": 1,
                    "write_permission_char": 1,
                    "write_permission_indicator": 1
                },
                "cStack_32": {
                    "c1": 1,
                    "c_stack32": 1,
                    "c_stack_32": 1,
                    "char_stack_32": 1,
                    "char_stack_var1": 1,
                    "directory_permission": 1,
                    "executable_flag": 1,
                    "file_permissions": 3,
                    "file_type_char1": 3,
                    "has_setuid_bit": 1,
                    "is_readable": 1,
                    "owner_read_permission": 1,
                    "permission_byte1": 1,
                    "permission_char1": 3,
                    "permission_character_1": 1,
                    "read_permission_char": 1,
                    "read_permission_indicator": 1,
                    "stack_char1": 1,
                    "stack_char2": 1,
                    "temp_stack_char1": 1,
                    "type_digit_1": 1
                },
                "cVar1": {
                    "archive_head_result": 1,
                    "c": 1,
                    "char_val": 1,
                    "char_var": 4,
                    "result": 19,
                    "return_value": 1,
                    "status": 1,
                    "temp_char": 1
                },
                "iVar3": {
                    "dup_fd": 2,
                    "dupfd": 1,
                    "fd": 1,
                    "fd_duplicate": 1,
                    "file_descriptor": 7,
                    "int_val": 1,
                    "int_var": 3,
                    "temp_fd": 6,
                    "temp_file": 1,
                    "temp_file_desc": 1,
                    "temp_file_descriptor": 2,
                    "temp_file_descriptor_copy": 1,
                    "temp_int": 1
                },
                "in_stack_00000028": {
                    "file_group_id": 1,
                    "file_inode": 1,
                    "file_mode": 1,
                    "file_owner_group": 1,
                    "file_size": 7,
                    "file_uid": 3,
                    "in_stack_28": 1,
                    "inode_number": 1,
                    "link_count": 2,
                    "stack28": 1,
                    "stack_val2": 1,
                    "stack_var1": 1,
                    "stack_var2": 1,
                    "temp_stack_uint2": 1,
                    "timestamp": 1,
                    "uid": 4,
                    "uint_stack_28": 1,
                    "value_28": 1
                },
                "in_stack_00000038": {
                    "file_datetime": 1,
                    "file_modified_time": 1,
                    "file_size": 9,
                    "file_timestamp": 1,
                    "gid": 1,
                    "in_stack_38": 1,
                    "last_access_time": 1,
                    "modification_time": 1,
                    "mtime": 1,
                    "size": 1,
                    "stack38": 1,
                    "stack_val3": 1,
                    "stack_var2": 1,
                    "stack_var3": 1,
                    "temp_stack_variable": 1,
                    "timestamp": 5,
                    "ulong_stack_38": 1,
                    "value_38": 1
                },
                "local_3c": {
                    "dup_fd": 1,
                    "dup_file_descriptor": 1,
                    "dup_result": 2,
                    "err_buf": 1,
                    "error": 1,
                    "error_code": 2,
                    "error_handle": 1,
                    "error_status": 1,
                    "file_descriptor": 1,
                    "file_descriptor_array": 2,
                    "file_descriptor_copy": 1,
                    "int_array": 1,
                    "local_array": 1,
                    "local_array_var": 1,
                    "return_status": 1,
                    "temp_array": 2,
                    "temp_error": 1,
                    "temp_file_descriptor": 2,
                    "temp_file_descriptor_array": 1,
                    "temp_file_error": 2,
                    "temp_info": 1,
                    "temp_name_array": 1
                },
                "param_1": {
                    "archive_entry": 1,
                    "archive_filenames": 1,
                    "archive_info": 2,
                    "archive_name": 1,
                    "archive_path": 2,
                    "archive_paths": 1,
                    "arguments": 1,
                    "entry_info": 1,
                    "entry_parameters": 1,
                    "file_info": 1,
                    "file_names": 1,
                    "file_paths": 7,
                    "input_args": 1,
                    "input_params": 1,
                    "param_array": 2,
                    "parameters": 4,
                    "params": 1
                },
                "ppcVar5": {
                    "archive": 3,
                    "archive_file": 2,
                    "archive_file_ptr": 1,
                    "archive_file_stream": 1,
                    "archive_handler": 1,
                    "bfd_file": 1,
                    "bfd_file_ptr": 1,
                    "bfd_handle": 1,
                    "bfd_object": 1,
                    "char_ptr_ptr": 2,
                    "file_format": 1,
                    "file_handle": 1,
                    "file_pointer": 2,
                    "file_stream": 1,
                    "formatted_file": 1,
                    "open_file_pointer": 1,
                    "opened_file_stream": 1,
                    "pointer_to_string": 1,
                    "stream": 5,
                    "temp_char_pointer": 1,
                    "temp_file_descriptor": 1,
                    "temp_file_ptr": 1
                },
                "stack0xffffffffffffffd8": {
                    "time_data": 1,
                    "timestamp_str": 1
                },
                "uStack0000000000000020": {
                    "file_attributes": 2,
                    "file_mode": 10,
                    "file_permission": 3,
                    "file_permissions": 3,
                    "file_stat": 1,
                    "file_type": 2,
                    "mode": 2,
                    "stack20": 1,
                    "stack_val1": 1,
                    "stack_var1": 1,
                    "temp_stack_uint1": 1,
                    "u_stack_20": 1,
                    "uint_stack_20": 1,
                    "unsigned_stack_var": 1
                },
                "uStack_33": {
                    "file_type": 11,
                    "file_type_char": 3,
                    "file_type_indicator": 2,
                    "stack_char": 1,
                    "stack_char1": 1,
                    "temp_stack_variable_1": 1,
                    "type_character": 1,
                    "u_stack33": 1,
                    "u_stack_33": 1,
                    "unsigned_stack_var2": 1,
                    "ushort_stack_33": 1
                },
                "uVar2": {
                    "access_flags": 1,
                    "archive_flags": 2,
                    "bfd_flags": 1,
                    "control_flag": 1,
                    "flag": 4,
                    "flags": 11,
                    "format_flags": 2,
                    "format_modifier": 1,
                    "temp": 1,
                    "temp_uint": 1,
                    "uint_val": 1,
                    "uint_var": 2,
                    "unsigned_var": 1,
                    "value": 1
                },
                "uVar4": {
                    "archive_fd": 1,
                    "archive_head": 1,
                    "archive_header": 1,
                    "archive_modified_time": 1,
                    "archive_name": 1,
                    "archive_size": 1,
                    "format_specifier": 1,
                    "head": 1,
                    "param": 1,
                    "temp_file": 2,
                    "temp_file_name": 1,
                    "temp_file_offset": 1,
                    "temp_name": 2,
                    "temp_variable_1": 1,
                    "time_data": 1,
                    "timestamp": 1,
                    "tmp_filename": 1,
                    "uint64_val": 1,
                    "ulong_var": 2,
                    "unsigned_var2": 1
                }
            },
            "called": [
                "FUN_00102270",
                "FUN_00102340",
                "FUN_001057a0",
                "FUN_00107c10",
                "FUN_00102260",
                "FUN_00102570",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_001028ed",
                "FUN_00107650"
            ],
            "code": "\n\n\nvoid write_archive_to_temp_file_001058b0(undefined8 *file_paths)\n\n{\n  char result;\n  uint flags;\n  int file_descriptor;\n  undefined8 temp_name;\n  char *format_string;\n  void *temp_file_path;\n  FILE *temp_file;\n  char **stream;\n  uint file_mode;\n  uint file_size;\n  undefined8 file_size;\n  int file_descriptor_array [2];\n  undefined file_type;\n  char permission_char1;\n  char file_type_char2;\n  \n  temp_name = file_paths[0x1e];\n  file_descriptor_array[0] = -1;\n  temp_file_path = (void *)xstrdup(*file_paths);\n  temp_file = (FILE *)make_tempname(temp_file_path,file_descriptor_array);\n  file_descriptor = file_descriptor_array[0];\n  if (temp_file != (FILE *)0x0) {\n    DAT_0010d618 = temp_file;\n    stream = (char **)bfd_fdopenw(temp_file,*(undefined8 *)file_paths[1],file_descriptor_array[0]);\n    if (stream != (char **)0x0) {\n      DAT_0010d5e0 = stream;\n      bfd_set_format(stream,2);\n      flags = (~DAT_0010d648 >> 0x1f) << 3 | *(byte *)((long)stream + 0x49) & 0xfffffff7;\n      *(char *)((long)stream + 0x49) = (char)flags;\n      if (DAT_0010d5fa != '\\0') {\n        *(uint *)((long)stream + 0x44) = *(uint *)((long)stream + 0x44) | 0x400;\n      }\n      if (_DAT_0010d2d0 != 0) {\n        *(uint *)((long)stream + 0x44) = *(uint *)((long)stream + 0x44) | 0x2000;\n      }\n      if (DAT_0010d5f9 != '\\0') goto LAB_00102d37;\n      while( true ) {\n        if ((DAT_0010d5f8 != '\\0') || ((*(byte *)((long)file_paths + 0x49) & 0x10) != 0)) {\n          *(byte *)((long)stream + 0x49) = (byte)flags | 0x10;\n        }\n        result = bfd_set_archive_head(stream,temp_name);\n        if (result != '\\0') break;\n        flags = bfd_fatal(temp_file_path);\nLAB_00102d37:\n        *(uint *)((long)stream + 0x44) = *(uint *)((long)stream + 0x44) | 0x100000;\n      }\n      file_descriptor = dup(file_descriptor);\n      result = bfd_close(stream);\n      if (result == '\\0') {\n        bfd_fatal(temp_file_path);\n        format_string = (char *)dcgettext(0,\"<time data corrupt>\",5);\n        sprintf(&timestamp_str,format_string);\n        flags = file_mode & 0xf000;\n        if (flags == 0x4000) {\n          file_type = 100;\n        }\n        else if (flags == 0xa000) {\n          file_type = 0x6c;\n        }\n        else if (flags == 0x6000) {\n          file_type = 0x62;\n        }\n        else if (flags == 0x2000) {\n          file_type = 99;\n        }\n        else if (flags == 0xc000) {\n          file_type = 0x73;\n        }\n        else {\n          file_type = 0x70;\n          if (flags != 0x1000) {\n            file_type = 0x2d;\n          }\n        }\n        permission_char1 = (-((file_type_copy & 0x100) == 0) & 0xbbU) + 0x72;\n        file_type_char2 = (-((file_type_copy & 0x80) == 0) & 0xb6U) + 0x77;\n        fprintf(temp_file,\"%s %ld/%ld %6lu %s \",&permission_char1,file_type_copy >> 0x20,\n                (ulong)file_size,file_size,&timestamp_str,\n                file_type_copy & 0xffffffff);\n        fputs(*stream,temp_file);\n        if ((char)file_paths != '\\0') {\n          if ((*(byte *)((long)stream + 0x49) & 0x10) == 0) {\n            if (stream[0xb] != (char *)0x0) {\n              fprintf(temp_file,\" 0x%lx\");\n            }\n          }\n          else if (stream[0xc] != (char *)0x0) {\n            fprintf(temp_file,\" 0x%lx\");\n          }\n        }\n        fputc(10,temp_file);\n        return;\n      }\n      DAT_0010d5e0 = (char **)0x0;\n      DAT_0010d618 = (FILE *)0x0;\n      bfd_close(file_paths);\n      file_descriptor = smart_rename_constprop_0(temp_file,temp_file_path,file_descriptor);\n      if (file_descriptor == 0) {\n        free(temp_file_path);\n        free(temp_file);\n        return;\n      }\n      goto LAB_00102d7a;\n    }\n    close(file_descriptor);\n    bfd_fatal(temp_file_path);\n  }\n  temp_name = dcgettext(0,\"could not create temporary file whilst writing archive\",5);\n  bfd_fatal(temp_name);\nLAB_00102d7a:\n                    \n  xexit(1);\n}\n\n",
            "current_name": "write_archive_to_temp_file_001058b0",
            "entrypoint": "0x001058b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001058b0": "write_archive_to_temp_file_001058b0",
                "__format": "format_string",
                "__ptr": "temp_file_path",
                "__stream": "temp_file",
                "_uStack0000000000000020": "file_type_copy",
                "cStack_31": "file_type_char2",
                "cStack_32": "permission_char1",
                "cVar1": "result",
                "iVar3": "file_descriptor",
                "in_stack_00000028": "file_size",
                "in_stack_00000038": "file_size",
                "local_3c": "file_descriptor_array",
                "param_1": "file_paths",
                "ppcVar5": "stream",
                "stack0xffffffffffffffd8": "timestamp_str",
                "uStack0000000000000020": "file_mode",
                "uStack_33": "file_type",
                "uVar2": "flags",
                "uVar4": "temp_name"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105a20": {
            "additional_data": {
                "DAT_0010d5e8": {
                    "base_dir_path": 1,
                    "base_path": 1,
                    "base_path_global": 1,
                    "original_base_path": 1
                },
                "DAT_0010d60c": {
                    "debug_mode": 1,
                    "flag": 1,
                    "is_verbose": 2
                },
                "DAT_0010d618": {
                    "file_path_global": 1,
                    "output_file_path": 1,
                    "output_path": 1,
                    "updated_path": 1
                },
                "FUN_00105a20": {
                    "create_output_file": 4,
                    "extract_and_write": 1,
                    "extract_and_write_contents": 1,
                    "extract_and_write_file": 2,
                    "extract_and_write_to_file": 1,
                    "extract_archive_member": 7,
                    "extract_file": 3,
                    "extract_file_from_archive": 1,
                    "extract_file_from_binary": 1,
                    "extract_file_path": 1,
                    "extract_output_file": 1,
                    "extract_output_path": 1,
                    "open_output_file": 1,
                    "process_output_file": 1,
                    "process_output_path": 1,
                    "resolve_output_path": 1,
                    "write_file": 1,
                    "write_to_file": 1
                },
                "pFVar5": {
                    "file": 5,
                    "file_handle": 1,
                    "file_pointer": 11,
                    "file_ptr": 5,
                    "output_file": 9
                },
                "param_1": {
                    "archive_member_path": 1,
                    "archive_path": 1,
                    "file_name": 1,
                    "file_path": 3,
                    "filepath": 2,
                    "input_path": 6,
                    "output_file_name": 1,
                    "output_file_path": 1,
                    "output_path": 11,
                    "path": 3
                },
                "pcVar1": {
                    "archive_path": 3,
                    "base_dir": 11,
                    "base_directory": 3,
                    "base_name": 1,
                    "base_path": 10,
                    "basepath": 1,
                    "current_directory": 1,
                    "output_dir": 1
                },
                "pcVar2": {
                    "current": 1,
                    "current_char": 8,
                    "current_dir": 4,
                    "current_path": 13,
                    "next_char": 1,
                    "next_dir": 2,
                    "next_directory": 1,
                    "next_slash": 1
                },
                "sVar6": {
                    "archive_path_length": 1,
                    "base_dir_length": 10,
                    "base_directory_length": 1,
                    "base_length": 1,
                    "base_name_len": 1,
                    "base_name_length": 1,
                    "base_path_length": 7,
                    "directory_length": 1,
                    "length": 4,
                    "output_path_length": 1,
                    "path_length": 3
                },
                "uVar3": {
                    "base": 1,
                    "base_file_name": 1,
                    "base_name": 12,
                    "basename": 1,
                    "basename_result": 8,
                    "extracted_path": 2,
                    "filename": 1,
                    "last_base_name": 1,
                    "output": 1,
                    "output_path": 1,
                    "resolved_path": 1,
                    "result": 1
                },
                "uVar4": {
                    "error": 1,
                    "error_message": 22,
                    "error_msg": 5,
                    "error_string": 2,
                    "error_text": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00102c25"
            ],
            "code": "\nvoid extract_and_write_to_file_00105a20(char *output_path)\n\n{\n  char *base_dir;\n  char *current_path;\n  undefined8 base_name;\n  undefined8 error_message;\n  FILE *file_pointer;\n  size_t base_dir_length;\n  \n  base_dir = DAT_0010d5e8;\n  DAT_0010d618 = output_path;\n  if (*output_path == '/') {\nLAB_00102e9a:\n    base_name = lbasename();\n    base_dir = DAT_0010d618;\n    error_message = dcgettext(0,\"illegal output pathname for archive member: %s, using \\'%s\\' instead\",5);\n    non_fatal(error_message,base_dir,base_name);\n    DAT_0010d618 = (char *)base_name;\n    process_file_path_00105a68();\n    return;\n  }\n  do {\n    if (*output_path == '\\0') {\n      if ((DAT_0010d5e8 != (char *)0x0) && (base_dir_length = strlen(DAT_0010d5e8), base_dir_length != 0)) {\n        if (base_dir[base_dir_length - 1] == '/') {\n          DAT_0010d618 = (char *)concat(base_dir,DAT_0010d618,0);\n        }\n        else {\n          DAT_0010d618 = (char *)concat(base_dir,&DAT_00108260,DAT_0010d618,0);\n        }\n      }\n      if (DAT_0010d60c != 0) {\n        printf(\"x - %s\\n\",DAT_0010d618);\n      }\n      file_pointer = fopen(DAT_0010d618,\"w\");\n      if (file_pointer == (FILE *)0x0) {\n        perror(DAT_0010d618);\n                    \n        xexit(1);\n      }\n      return;\n    }\n    current_path = output_path;\n    if ((*output_path == '.') && (current_path = output_path + 1, output_path[1] == '.')) {\n      current_path = output_path + 2;\n      if ((output_path[2] == '/') || (output_path[2] == '\\0')) goto LAB_00102e9a;\n    }\n    for (; (*current_path != '\\0' && (*current_path != '/')); current_path = current_path + 1) {\n    }\n    for (; output_path = current_path, *current_path == '/'; current_path = current_path + 1) {\n    }\n  } while( true );\n}\n\n",
            "current_name": "extract_and_write_to_file_00105a20",
            "entrypoint": "0x00105a20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105a20": "extract_and_write_to_file_00105a20",
                "pFVar5": "file_pointer",
                "param_1": "output_path",
                "pcVar1": "base_dir",
                "pcVar2": "current_path",
                "sVar6": "base_dir_length",
                "uVar3": "base_name",
                "uVar4": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105a68": {
            "additional_data": {
                "DAT_0010d5e8": {
                    "directory_path": 1,
                    "original_directory_path": 1
                },
                "DAT_0010d60c": {
                    "enable_printing": 1,
                    "error_handling_flag": 1
                },
                "DAT_0010d618": {
                    "file_path": 1,
                    "final_path": 1
                },
                "FUN_00102e57": {
                    "initialize_subsystem": 1
                },
                "FUN_00105a68": {
                    "create_and_write_file": 1,
                    "create_output_file": 2,
                    "extract_and_print_filepath": 1,
                    "generate_output_file": 2,
                    "process_and_print_data": 1,
                    "process_and_write_file": 1,
                    "process_file": 9,
                    "process_file_path": 3,
                    "reverse_and_print_file_path": 1,
                    "reverse_and_write_to_file": 1,
                    "write_data_to_file": 1,
                    "write_file": 1,
                    "write_output_file": 1,
                    "write_to_file": 6
                },
                "concat": {
                    "concatenate": 1,
                    "concatenate_strings": 2
                },
                "fopen": {
                    "open_file": 1
                },
                "pFVar2": {
                    "file": 3,
                    "file_handle": 3,
                    "file_pointer": 19,
                    "file_ptr": 4,
                    "output_file": 1
                },
                "pcVar1": {
                    "base_path": 5,
                    "directory": 1,
                    "directory_path": 12,
                    "file_directory": 1,
                    "file_path": 6,
                    "input_directory": 2,
                    "input_path": 1,
                    "path": 2,
                    "source_directory": 1
                },
                "perror": {
                    "print_error": 1
                },
                "printf": {
                    "print_file": 1
                },
                "sVar3": {
                    "base_path_length": 4,
                    "directory_length": 5,
                    "directory_path_length": 5,
                    "file_length": 1,
                    "file_path_length": 5,
                    "input_length": 2,
                    "length": 4,
                    "path_len": 1,
                    "path_length": 2,
                    "string_length": 2
                },
                "xexit": {
                    "exit_program": 1
                }
            },
            "called": [
                "FUN_001021a0",
                "FUN_00102e57",
                "FUN_00102200",
                "FUN_00102480",
                "FUN_00102470",
                "FUN_00102180",
                "FUN_001024a0"
            ],
            "calling": [
                "FUN_00102e6f"
            ],
            "code": "\nvoid process_file_path_00105a68(void)\n\n{\n  char *directory_path;\n  FILE *file_pointer;\n  size_t directory_length;\n  \n  directory_path = DAT_0010d5e8;\n  if (DAT_0010d5e8 != (char *)0x0) {\n    directory_length = strlen(DAT_0010d5e8);\n    if (directory_length != 0) {\n      if (directory_path[directory_length - 1] == '/') {\n        DAT_0010d618 = (char *)concatenate_strings(directory_path,DAT_0010d618,0);\n      }\n      else {\n        DAT_0010d618 = (char *)concatenate_strings(directory_path,&DAT_00108260,DAT_0010d618,0);\n      }\n    }\n  }\n  if (DAT_0010d60c != 0) {\n    print_file(\"x - %s\\n\",DAT_0010d618);\n  }\n  file_pointer = open_file(DAT_0010d618,\"w\");\n  if (file_pointer != (FILE *)0x0) {\n    return;\n  }\n  print_error(DAT_0010d618);\n                    \n  exit_program(1);\n}\n\n",
            "current_name": "process_file_path_00105a68",
            "entrypoint": "0x00105a68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105a68": "process_file_path_00105a68",
                "concat": "concatenate_strings",
                "fopen": "open_file",
                "pFVar2": "file_pointer",
                "pcVar1": "directory_path",
                "perror": "print_error",
                "printf": "print_file",
                "sVar3": "directory_length",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105ae0": {
            "additional_data": {
                "FUN_00105ae0": {
                    "append_const_prop": 2,
                    "append_const_propagation": 1,
                    "append_const_properties": 1,
                    "append_const_property": 2,
                    "append_constant_propagation": 1,
                    "append_constant_properties": 2,
                    "append_constant_property": 1,
                    "append_constant_to_ar_emul": 1,
                    "append_constprop": 16,
                    "append_constprop_0": 1,
                    "append_constprop_to_ar_emul": 1,
                    "append_constprop_to_emulator": 2
                },
                "FUN_00105af0": {
                    "append_const_properties_helper": 1,
                    "do_append_constprop": 1,
                    "perform_const_propagation": 1,
                    "perform_constant_propagation": 1
                },
                "param_1": {
                    "ar_emul": 2,
                    "arg1": 12,
                    "arg_1": 2,
                    "data1": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "emulator": 1,
                    "emulator_ptr": 1,
                    "input1": 4,
                    "input_param1": 1,
                    "list_ptr": 1,
                    "param1": 1,
                    "ptr1": 1,
                    "target_address": 1
                },
                "param_2": {
                    "arg2": 13,
                    "arg_2": 2,
                    "data2": 1,
                    "input2": 4,
                    "input_param2": 1,
                    "length": 2,
                    "param2": 1,
                    "param_2": 2,
                    "size": 1,
                    "source_address": 1,
                    "val1": 1,
                    "value": 2
                },
                "param_3": {
                    "arg3": 11,
                    "arg_3": 2,
                    "byte1": 1,
                    "flag1": 9,
                    "flag_1": 2,
                    "param3": 3,
                    "param_3": 2,
                    "val2": 1
                },
                "param_4": {
                    "arg4": 11,
                    "arg_4": 2,
                    "byte2": 1,
                    "flag2": 9,
                    "flag_2": 2,
                    "param4": 3,
                    "param_4": 2,
                    "val3": 1
                }
            },
            "called": [
                "FUN_00105af0"
            ],
            "calling": [
                "FUN_001028ed"
            ],
            "code": "\nvoid append_constprop_to_emulator_00105ae0(undefined8 arg1,undefined8 arg2,undefined arg3,undefined arg4)\n\n{\n  do_ar_emul_append_constprop_0(arg1,arg2,arg3,arg4);\n  return;\n}\n\n",
            "current_name": "append_constprop_to_emulator_00105ae0",
            "entrypoint": "0x00105ae0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105ae0": "append_constprop_to_emulator_00105ae0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105af0": {
            "additional_data": {
                "FUN_00105af0": {
                    "archive_file_processing": 1,
                    "extract_and_append_files": 2,
                    "extract_and_assign_files": 1,
                    "extract_archived_file": 1,
                    "extract_archived_files": 2,
                    "extract_files_from_archive": 1,
                    "process_archive_files": 1,
                    "process_archived_files": 8,
                    "process_binary": 1,
                    "process_file": 1,
                    "process_files": 9,
                    "process_files_and_append": 1
                },
                "bfd_check_format": {
                    "check_archive_format": 3,
                    "check_bfd_format": 2,
                    "check_file_format": 1,
                    "check_format": 1
                },
                "bfd_openr_next_archived_file": {
                    "get_next_archived_file": 2,
                    "next_archived_file": 1,
                    "open_next_archived_file": 3,
                    "openr_next_archived_file": 1
                },
                "cVar1": {
                    "check_result": 1,
                    "format_check": 5,
                    "format_check_result": 2,
                    "format_match": 1,
                    "format_passed": 1,
                    "format_valid": 4,
                    "is_bfd_format": 7,
                    "is_bfd_format_valid": 1,
                    "is_binary": 1,
                    "is_binary_format": 1,
                    "is_format_valid": 2,
                    "is_valid": 1,
                    "is_valid_format": 3,
                    "result": 1
                },
                "do_ar_emul_append_constprop_0_cold": {
                    "append_constprop": 4,
                    "do_extra_processing": 1,
                    "do_something": 2,
                    "process_append_constprop": 1
                },
                "lVar3": {
                    "archived_file": 25,
                    "file_ptr": 1,
                    "next_file": 5
                },
                "param_1": {
                    "array": 1,
                    "file_list": 28,
                    "file_list_ptr": 1,
                    "input_pointer": 1
                },
                "param_2": {
                    "archive": 5,
                    "archive_file": 15,
                    "archive_name": 1,
                    "archive_ptr": 1,
                    "current_file": 6,
                    "file": 1,
                    "file_descriptor": 1,
                    "file_pointer": 1
                },
                "param_3": {
                    "append": 1,
                    "check_flag": 1,
                    "check_format": 11,
                    "check_format_enabled": 1,
                    "check_format_flag": 1,
                    "flag1": 9,
                    "flag_1": 3,
                    "flag_a": 1,
                    "is_append_mode": 1,
                    "is_archived": 1,
                    "should_append": 1
                },
                "param_4": {
                    "append_constprop": 3,
                    "append_files": 1,
                    "append_flag": 1,
                    "archive_flag": 1,
                    "check_format": 4,
                    "do_append": 1,
                    "emulate": 1,
                    "emulate_append": 1,
                    "flag2": 9,
                    "flag_2": 3,
                    "flag_b": 1,
                    "format_flag": 1,
                    "is_archived": 1,
                    "is_recursive": 1,
                    "process_archived_files": 1,
                    "recursive": 1
                },
                "print_and_assign_values_00102f08": {
                    "print_and_assign_values": 6
                },
                "uVar2": {
                    "file_result": 2,
                    "result": 28,
                    "return_value": 1
                },
                "uVar4": {
                    "file_result": 1,
                    "final_result": 5,
                    "num_archived_files": 1,
                    "output": 4,
                    "output_result": 1,
                    "result": 2,
                    "return_val": 1,
                    "return_value": 14,
                    "total_match_count": 1,
                    "total_result": 1
                }
            },
            "called": [
                "FUN_00102530",
                "FUN_00105af0",
                "FUN_00102520",
                "FUN_00102f08"
            ],
            "calling": [
                "FUN_00105ae0",
                "FUN_001028ed",
                "FUN_00105af0"
            ],
            "code": "\nulong process_archived_files_00105af0(long *file_list,long archive_file,char check_format,char flag2)\n\n{\n  char is_bfd_format;\n  uint result;\n  long archived_file;\n  ulong return_value;\n  \n  if (flag2 == '\\0') {\n    if (check_format != '\\0') {\n      return_value = append_constprop();\n      return return_value;\n    }\n  }\n  else {\n    is_bfd_format = check_archive_format(archive_file,2);\n    if (is_bfd_format != '\\0') {\n      return_value = 0;\n      for (archived_file = open_next_archived_file(archive_file,0); archived_file != 0;\n          archived_file = open_next_archived_file(archive_file,archived_file)) {\n        result = process_archived_files_00105af0(file_list,archived_file,check_format,1);\n        if ((char)result != '\\0') {\n          return_value = (ulong)result;\n          file_list = (long *)(*file_list + 0xf0);\n        }\n      }\n      return return_value;\n    }\n    if (check_format != '\\0') {\n      return_value = append_constprop();\n      return return_value;\n    }\n  }\n  *(long *)(archive_file + 0xf0) = *file_list;\n  *file_list = archive_file;\n  return 1;\n}\n\n",
            "current_name": "process_archived_files_00105af0",
            "entrypoint": "0x00105af0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105af0": "process_archived_files_00105af0",
                "bfd_check_format": "check_archive_format",
                "bfd_openr_next_archived_file": "open_next_archived_file",
                "cVar1": "is_bfd_format",
                "do_ar_emul_append_constprop_0_cold": "append_constprop",
                "lVar3": "archived_file",
                "param_1": "file_list",
                "param_2": "archive_file",
                "param_3": "check_format",
                "param_4": "flag2",
                "uVar2": "result",
                "uVar4": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105bb0": {
            "additional_data": {
                "FUN_00105bb0": {
                    "get_constant_one": 1,
                    "get_constant_value": 1,
                    "get_one": 15,
                    "get_result": 2,
                    "get_return_value": 4,
                    "get_status": 1,
                    "get_value": 1,
                    "initialize": 1,
                    "initialize_function": 1,
                    "initialize_program": 2,
                    "initialize_value": 1,
                    "is_one": 1
                },
                "PTR_XXX": {
                    "some_pointer": 1
                },
                "get_one": {
                    "get_one": 2
                },
                "return": {
                    "result": 6,
                    "return": 2,
                    "return_value": 2
                },
                "undefined8": {
                    "int": 3,
                    "uint64": 1,
                    "uint64_t": 9,
                    "unsigned_long": 2,
                    "unsigned_long_long": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nuint64_t get_constant_one_00105bb0(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "get_constant_one_00105bb0",
            "entrypoint": "0x00105bb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105bb0": "get_constant_one_00105bb0",
                "return": "result",
                "undefined8": "uint64_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105bc0": {
            "additional_data": {
                "FUN_00105bc0": {
                    "copy_and_delete_file": 5,
                    "copy_and_remove_file": 4,
                    "copy_and_unlink_file": 16,
                    "copy_file": 1,
                    "copy_file_and_unlink": 2,
                    "copy_file_with_error_handling": 2,
                    "copy_file_with_reason": 1
                },
                "auVar6": {
                    "function_result": 1,
                    "result": 17,
                    "result_data": 1,
                    "result_struct": 2,
                    "return_value": 9,
                    "return_values": 1
                },
                "param_1": {
                    "destination_filepath": 1,
                    "old_filename": 1,
                    "source_file": 14,
                    "source_file_path": 11,
                    "source_filepath": 1,
                    "source_path": 3
                },
                "param_2": {
                    "destination_file": 14,
                    "destination_file_path": 11,
                    "destination_filepath": 1,
                    "destination_path": 3,
                    "new_filename": 1,
                    "source_filepath": 1
                },
                "param_3": {
                    "buffer_size": 2,
                    "const_prop": 1,
                    "copy_flag": 1,
                    "copy_flags": 5,
                    "copy_mode": 1,
                    "copy_options": 5,
                    "error_code": 1,
                    "file_mode": 1,
                    "file_permission": 2,
                    "file_permissions": 9,
                    "flags": 2,
                    "permissions": 1
                },
                "param_4": {
                    "copy_result": 1,
                    "error_code": 2,
                    "error_message": 4,
                    "error_value": 1,
                    "file_size": 11,
                    "result": 3,
                    "return_data": 1,
                    "return_value": 2,
                    "timestamp": 1,
                    "unlink_flags": 1,
                    "unlink_reason": 1,
                    "unlink_result": 2,
                    "unlink_status": 1
                },
                "pcVar3": {
                    "error_message": 21,
                    "error_msg": 1,
                    "error_string": 9
                },
                "piVar2": {
                    "errno_location": 10,
                    "errno_location_ptr": 1,
                    "errno_pointer": 3,
                    "errno_ptr": 4,
                    "error_code_ptr": 1,
                    "error_location": 6,
                    "error_num_pointer": 1,
                    "error_number": 4,
                    "error_pointer": 1
                },
                "uVar1": {
                    "copy_result": 27,
                    "copy_result_code": 1,
                    "copy_status": 1,
                    "copy_success": 1
                },
                "uVar4": {
                    "error_description": 1,
                    "error_message": 6,
                    "error_message_localized": 1,
                    "error_string": 7,
                    "error_text": 2,
                    "gettext_result": 1,
                    "localized_error_message": 6,
                    "localized_message": 1,
                    "translated_error": 1,
                    "translated_error_message": 5
                },
                "uVar5": {
                    "bytes_copied": 1,
                    "copy_error": 2,
                    "copy_file_length": 1,
                    "copy_instruction_count": 1,
                    "copy_result": 2,
                    "copy_size": 1,
                    "copy_status": 2,
                    "copy_success": 3,
                    "error_code": 1,
                    "result": 1,
                    "unlink_error": 1,
                    "unlink_result": 12,
                    "unlink_return_value": 1,
                    "unlink_status": 1,
                    "unlink_success": 1
                }
            },
            "called": [
                "FUN_00105c00",
                "FUN_00102f1e"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00102d2f"
            ],
            "code": "\nundefined  [16] copy_file_and_unlink_00105bc0(char *source_file,char *destination_file,undefined4 file_permissions,undefined8 file_size)\n\n{\n  uint copy_result;\n  int *errno_location;\n  char *error_message;\n  undefined8 error_string;\n  ulong unlink_result;\n  undefined result [16];\n  \n  if (destination_file == source_file) {\n    unlink_result = 0;\n  }\n  else {\n    copy_result = simple_copy_constprop_0(file_permissions);\n    unlink_result = (ulong)copy_result;\n    if (copy_result != 0) {\n      errno_location = __errno_location();\n      error_message = strerror(*errno_location);\n      error_string = dcgettext(0,\"unable to copy file \\'%s\\'; reason: %s\",5);\n      non_fatal(error_string,destination_file,error_message);\n    }\n    unlink(source_file);\n  }\n  result._8_8_ = file_size;\n  result._0_8_ = unlink_result;\n  return result;\n}\n\n",
            "current_name": "copy_file_and_unlink_00105bc0",
            "entrypoint": "0x00105bc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105bc0": "copy_file_and_unlink_00105bc0",
                "auVar6": "result",
                "param_1": "source_file",
                "param_2": "destination_file",
                "param_3": "file_permissions",
                "param_4": "file_size",
                "pcVar3": "error_message",
                "piVar2": "errno_location",
                "uVar1": "copy_result",
                "uVar4": "error_string",
                "uVar5": "unlink_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105c00": {
            "additional_data": {
                "FUN_00105c00": {
                    "copy_and_write": 1,
                    "copy_and_write_file": 2,
                    "copy_file": 15,
                    "copy_file_and_return_size": 1,
                    "copy_file_contents": 2,
                    "copy_file_data": 5,
                    "copy_file_to_destination": 1,
                    "copy_to_new_file": 1,
                    "file_copy": 2,
                    "improved_copy_file": 1
                },
                "_Var3": {
                    "current_file_offset": 1,
                    "current_file_position": 1,
                    "current_offset": 2,
                    "current_pos": 1,
                    "current_position": 6,
                    "file_offset": 3,
                    "offset": 2,
                    "seek_result": 1,
                    "source_file_offset": 3,
                    "source_file_position": 1,
                    "source_file_size": 7,
                    "source_offset": 3
                },
                "__errno_location": {
                    "get_errno_location": 1
                },
                "__fd": {
                    "dest_fd": 1,
                    "dest_file_descriptor": 1,
                    "destination_fd": 7,
                    "destination_file_descriptor": 13,
                    "destination_file_fd": 1,
                    "output_fd": 1,
                    "output_file_descriptor": 5
                },
                "auStack_2038": {
                    "buffer": 23,
                    "data_buffer": 1
                },
                "iVar1": {
                    "err_number_1": 1,
                    "errno_value": 9,
                    "error_code": 5,
                    "error_code_1": 3,
                    "error_code_read": 1,
                    "error_number": 1,
                    "error_value": 1,
                    "original_errno": 1,
                    "read_error": 4,
                    "read_error_code": 1,
                    "source_errno": 1
                },
                "iVar2": {
                    "bytes_read": 7,
                    "err_number_2": 1,
                    "error_code_2": 1,
                    "read_result": 15,
                    "result": 1,
                    "write_error": 4
                },
                "param_1": {
                    "file_descriptor": 2,
                    "input_fd": 1,
                    "input_file_descriptor": 5,
                    "source_fd": 10,
                    "source_file": 1,
                    "source_file_descriptor": 11,
                    "source_file_fd": 1
                },
                "param_2": {
                    "destination_file": 5,
                    "destination_file_name": 3,
                    "destination_file_path": 8,
                    "destination_filename": 1,
                    "destination_path": 8,
                    "output_file_name": 1,
                    "output_file_path": 4,
                    "output_filename": 1
                },
                "piVar6": {
                    "errno": 1,
                    "errno_location": 1,
                    "errno_pointer": 3,
                    "errno_ptr": 9,
                    "errno_value": 1,
                    "error_code": 1,
                    "error_code_pointer": 1,
                    "error_code_ptr": 1,
                    "error_location": 1,
                    "error_number_pointer": 1,
                    "error_pointer": 3,
                    "error_ptr": 4,
                    "pointer_to_err_number": 1,
                    "ptr_errno": 1
                },
                "sVar5": {
                    "bytes_copied": 1,
                    "bytes_read": 1,
                    "bytes_written": 25,
                    "bytes_written_result": 1,
                    "num_bytes_written": 1,
                    "write_result": 2
                },
                "simple_copy_constprop_0_cold": {
                    "handle_error": 1
                },
                "uVar4": {
                    "bytes_copied": 17,
                    "bytes_read": 6,
                    "bytes_written": 4,
                    "copy_result": 1,
                    "num_bytes_copied": 1,
                    "total_bytes_copied": 2
                }
            },
            "called": [
                "FUN_001021e0",
                "FUN_00102290",
                "FUN_00102f55",
                "FUN_00102060",
                "FUN_00102110",
                "FUN_00102260",
                "FUN_00102460"
            ],
            "calling": [
                "FUN_00105bc0"
            ],
            "code": "\nulong copy_file_data_00105c00(int source_file_descriptor,char *destination_file_path)\n\n{\n  int errno_value;\n  int destination_file_descriptor;\n  int read_result;\n  __off_t source_file_size;\n  ulong bytes_copied;\n  size_t bytes_written;\n  int *errno_ptr;\n  undefined buffer [8200];\n  \n  if ((-1 < source_file_descriptor) && (source_file_size = lseek(source_file_descriptor,0,0), source_file_size == 0)) {\n    destination_file_descriptor = open(destination_file_path,0x201);\n    if (destination_file_descriptor < 0) {\n      bytes_copied = handle_error();\n      return bytes_copied;\n    }\n    do {\n      bytes_copied = read(source_file_descriptor,buffer,0x2000);\n      read_result = (int)bytes_copied;\n      if (read_result < 1) {\n        errno_ptr = get_errno_location();\n        errno_value = *errno_ptr;\n        close(source_file_descriptor);\n        close(destination_file_descriptor);\n        if (read_result != 0) {\n          *errno_ptr = errno_value;\n          return 0xffffffff;\n        }\n        return bytes_copied & 0xffffffff;\n      }\n      bytes_written = write(destination_file_descriptor,buffer,(long)read_result);\n    } while (bytes_written == (long)read_result);\n    errno_ptr = get_errno_location();\n    read_result = *errno_ptr;\n    close(source_file_descriptor);\n    close(destination_file_descriptor);\n    *errno_ptr = read_result;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "copy_file_data_00105c00",
            "entrypoint": "0x00105c00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105c00": "copy_file_data_00105c00",
                "_Var3": "source_file_size",
                "__errno_location": "get_errno_location",
                "__fd": "destination_file_descriptor",
                "auStack_2038": "buffer",
                "iVar1": "errno_value",
                "iVar2": "read_result",
                "param_1": "source_file_descriptor",
                "param_2": "destination_file_path",
                "piVar6": "errno_ptr",
                "sVar5": "bytes_written",
                "simple_copy_constprop_0_cold": "handle_error",
                "uVar4": "bytes_copied"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105cc0": {
            "additional_data": {
                "FUN_00105cc0": {
                    "process_entry": 3,
                    "start_entry_point": 1,
                    "start_main": 2,
                    "start_main_loop": 3,
                    "start_main_process": 2,
                    "start_program": 1
                },
                "FUN_00105db0": {
                    "process_data": 2,
                    "process_file": 3
                },
                "auStack_8": {
                    "auxiliary_stack_8": 1,
                    "entry_point_stack": 1,
                    "local_var": 1,
                    "stack": 7,
                    "stack8": 1,
                    "stack_8": 1,
                    "stack_array": 1,
                    "stack_au_stack_8": 1,
                    "stack_buffer": 5,
                    "stack_data": 2,
                    "stack_frame": 2,
                    "stack_ptr": 1,
                    "stack_size": 1,
                    "unused_var": 2,
                    "unused_variable": 1
                },
                "param_1": {
                    "arg1": 9,
                    "argc": 9,
                    "argument1": 1,
                    "data_size": 1,
                    "entry_point": 1,
                    "entry_point_arg1": 1,
                    "input_value": 1,
                    "param1": 3,
                    "param_1": 4,
                    "unused_parameter": 1
                },
                "param_2": {
                    "arg2": 9,
                    "argument": 1,
                    "argument2": 1,
                    "argv": 9,
                    "command_line_arguments": 1,
                    "entry_point_arg2": 1,
                    "file": 1,
                    "file_ptr": 1,
                    "param2": 3,
                    "param_2": 4
                },
                "processEntry": {
                    "execute_main_loop": 2,
                    "run_main_loop": 2,
                    "start_main": 1,
                    "start_main_loop": 13,
                    "start_main_wrapper": 1
                }
            },
            "called": [
                "FUN_00105db0",
                "FUN_0010e018"
            ],
            "calling": [],
            "code": "\nvoid start_main_loop_00105cc0 start_main_loop_00105cc0(undefined8 argc,undefined8 arg2)\n\n{\n  undefined stack [8];\n  \n  __libc_start_main(main,arg2,&stack0x00000008,0,0,argc,stack);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "start_main_loop_00105cc0",
            "entrypoint": "0x00105cc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105cc0": "start_main_loop_00105cc0",
                "auStack_8": "stack",
                "param_1": "argc",
                "param_2": "arg2",
                "processEntry": "start_main_loop"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105cf0": {
            "called": [
                "FUN_0010e038"
            ],
            "calling": [
                "FUN_00105d60"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00105d03) */\n/* WARNING: Removing unreachable block (ram,0x00105d0f) */\n\nvoid FUNC_00105cf0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00105cf0",
            "entrypoint": "0x00105cf0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00105cf0": "FUNC_00105cf0"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00105d20": {
            "called": [
                "FUN_0010e2d0"
            ],
            "calling": [
                "FUN_00105da0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00105d44) */\n/* WARNING: Removing unreachable block (ram,0x00105d50) */\n\nvoid FUNC_00105d20(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00105d20",
            "entrypoint": "0x00105d20",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00105d20": "FUNC_00105d20"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00105d60": {
            "additional_data": {
                "FUNC_00105cf0": {
                    "clean_up_resources": 2,
                    "cleanup": 7,
                    "cleanup_application_resources": 1,
                    "cleanup_function": 1,
                    "cleanup_old_data": 1,
                    "cleanup_processes": 1,
                    "cleanup_resources": 7,
                    "deregister_tm_clones": 1,
                    "execute_before_exit": 1,
                    "execute_cleanup": 1,
                    "perform_cleanup": 8
                },
                "FUN_00105d60": {
                    "initialize": 7,
                    "initialize_application": 8,
                    "initialize_data": 1,
                    "initialize_library": 1,
                    "initialize_program": 14
                },
                "PTR_LOOP_0010d2c8": {
                    "loop_pointer": 1
                }
            },
            "called": [
                "FUN_00105cf0",
                "FUN_00102590"
            ],
            "calling": [],
            "code": "\nvoid initialize_program_00105d60(void)\n\n{\n  if (DAT_0010d400 != '\\0') {\n    return;\n  }\n  __cxa_finalize(PTR_LOOP_0010d2c8);\n  deregister_tm_clones();\n  DAT_0010d400 = 1;\n  return;\n}\n\n",
            "current_name": "initialize_program_00105d60",
            "entrypoint": "0x00105d60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00105d60": "initialize_program_00105d60"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00105da0": {
            "called": [
                "FUN_00105d20"
            ],
            "calling": [],
            "code": "\nvoid register_tm_clones(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n",
            "current_name": "FUN_00105da0",
            "entrypoint": "0x00105da0",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_00105db0": {
            "additional_data": {
                "DAT_0010d2d0": {
                    "dat1": 1
                },
                "DAT_0010d620": {
                    "dat12": 1
                },
                "DAT_0010d628": {
                    "dat10": 1
                },
                "DAT_0010d630": {
                    "dat8": 1
                },
                "DAT_0010d634": {
                    "dat7": 1
                },
                "DAT_0010d638": {
                    "dat6": 1
                },
                "DAT_0010d640": {
                    "dat5": 1
                },
                "DAT_0010d644": {
                    "dat9": 1
                },
                "DAT_0010d648": {
                    "operation_flag": 1
                },
                "DAT_0010d654": {
                    "dat3": 1,
                    "version_flag": 1
                },
                "DAT_0010d658": {
                    "dat4": 1
                },
                "DAT_0010d65c": {
                    "error_flag": 1
                },
                "DAT_0010d660": {
                    "ptr10": 1,
                    "target_file": 1
                },
                "DhHUvVt": {
                    "options": 1
                },
                "FUN_00105db0": {
                    "analyze_binary": 1,
                    "decompile_function": 1,
                    "extract_archives": 2,
                    "extract_files": 1,
                    "extract_files_from_binary": 1,
                    "extract_member_from_file": 1,
                    "parse_and_process_archive_files": 1,
                    "parse_arguments": 1,
                    "parse_input": 1,
                    "parse_input_files": 1,
                    "parse_ranlib_arguments": 1,
                    "parse_ranlib_command_line": 1,
                    "perform_operation": 1,
                    "process_files": 11,
                    "run_ranlib": 2,
                    "update_archives": 1
                },
                "PTR_DAT_0010d2e0": {
                    "ptr_dat1": 1
                },
                "_DAT_0010d57c": {
                    "long_options": 1
                },
                "_DAT_0010d594": {
                    "option_index": 1
                },
                "_DAT_0010d5b0": {
                    "update_flag": 1
                },
                "_DAT_0010d5c0": {
                    "symdef_flag": 1
                },
                "_DAT_0010d5d0": {
                    "debug_attribute_value": 1
                },
                "_DAT_0010d5d4": {
                    "debug_compress_flag": 1
                },
                "_DAT_0010d5d8": {
                    "debug_flag": 1
                },
                "_DAT_0010d5dc": {
                    "debug_truncate_flag": 1
                },
                "_DAT_0010d5e0": {
                    "file_attribute_value": 1
                },
                "_DAT_0010d5e8": {
                    "binary_file": 1
                },
                "_DAT_0010d5f0": {
                    "run_opts": 1
                },
                "_DAT_0010d5f4": {
                    "lib_tool": 1
                },
                "_DAT_0010d5f8": {
                    "dat15": 1
                },
                "_DAT_0010d5f9": {
                    "dat14": 1,
                    "print_all_flag": 1
                },
                "_DAT_0010d5fa": {
                    "dat16": 1,
                    "dependency_flag": 1
                },
                "_DAT_0010d600": {
                    "dat13": 1,
                    "long_opts_flag": 1
                },
                "_DAT_0010d604": {
                    "set_target_flag": 1
                },
                "_DAT_0010d608": {
                    "input_tty_flag": 1
                },
                "_DAT_0010d60c": {
                    "verbose_flag": 1
                },
                "_DAT_0010d610": {
                    "use_libdeps_flag": 1
                },
                "_DAT_0010d618": {
                    "mem_src_ptr": 1
                },
                "_DAT_0010d620": {
                    "libdeps_file_bfd": 1
                },
                "_DAT_0010d628": {
                    "libdeps_file": 1
                },
                "_DAT_0010d630": {
                    "file_number_arg": 1
                },
                "_DAT_0010d638": {
                    "dat11": 1,
                    "file_position_arg": 1
                },
                "_DAT_0010d640": {
                    "neg_arg_flag": 1
                },
                "_DAT_0010d644": {
                    "update_flag": 1
                },
                "_DAT_0010d648": {
                    "error_flag": 1
                },
                "_DAT_0010d650": {
                    "debug_flag": 1
                },
                "_DAT_0010d65a": {
                    "locale_flag": 1
                },
                "_DAT_0010d6a8": {
                    "member_name": 1
                },
                "_DAT_0010d6b0": {
                    "input_file_index": 1
                },
                "_DAT_0010d6b4": {
                    "input_file_name": 1
                },
                "_DAT_0010d6b8": {
                    "archive_entry_value": 1
                },
                "_FOFFSET": {
                    "foffset": 1
                },
                "_IO_backup_base": {
                    "backup_base": 1
                },
                "_IO_backup_base1": {
                    "backup_base1": 1
                },
                "_IO_buf_base": {
                    "buf_base": 1
                },
                "_IO_buf_base1": {
                    "buf_base1": 1
                },
                "_IO_buf_end": {
                    "buf_end": 1
                },
                "_IO_buf_end1": {
                    "buf_end1": 1
                },
                "_IO_file_flags": {
                    "file_flags": 1
                },
                "_IO_file_flags2": {
                    "file_flags2": 1
                },
                "_IO_link": {
                    "link": 1
                },
                "_IO_lock_t": {
                    "io_lock_t": 1
                },
                "_IO_offset": {
                    "offset": 1
                },
                "_IO_read_base": {
                    "read_base": 1
                },
                "_IO_read_base2": {
                    "read_base2": 1
                },
                "_IO_read_end": {
                    "read_end": 1
                },
                "_IO_read_end2": {
                    "read_end2": 1
                },
                "_IO_read_ptr": {
                    "read_ptr": 1
                },
                "_IO_read_ptr2": {
                    "read_ptr2": 1
                },
                "_IO_save_base": {
                    "save_base": 1
                },
                "_IO_save_base1": {
                    "save_base1": 1
                },
                "_IO_save_base2": {
                    "save_base2": 1
                },
                "_IO_save_end": {
                    "save_end": 1
                },
                "_IO_save_end1": {
                    "save_end1": 1
                },
                "_IO_save_end2": {
                    "save_end2": 1
                },
                "_IO_saved_read_end": {
                    "saved_read_end": 1
                },
                "_IO_write_base": {
                    "write_base": 1
                },
                "_IO_write_base2": {
                    "write_base2": 1
                },
                "_IO_write_end": {
                    "write_end": 1
                },
                "_IO_write_ptr": {
                    "write_ptr": 1
                },
                "__ptr": {
                    "allocated_memory": 1,
                    "byte_pointer": 5,
                    "byte_pointer2": 3,
                    "byte_ptr": 5,
                    "byte_ptr1": 2,
                    "byte_ptr2": 5,
                    "byte_ptr_var": 1,
                    "escaped_string": 1,
                    "ptr": 1,
                    "ptr11": 1,
                    "ptr_byte2": 2,
                    "ptr_byte5": 1
                },
                "__xexit_cleanup": {
                    "exit_cleanup": 1
                },
                "_dat1": {
                    "dat2": 1
                },
                "_flags": {
                    "flags": 1
                },
                "_flags2": {
                    "flags2": 1
                },
                "_lock": {
                    "lock": 1
                },
                "_long_options": {
                    "long_options": 1
                },
                "_needlock": {
                    "needlock": 1
                },
                "_offset": {
                    "offset1": 1
                },
                "_optarg": {
                    "arg2": 1
                },
                "_optcnt": {
                    "optcnt": 1
                },
                "_optind": {
                    "optind": 1
                },
                "_optptr": {
                    "optptr": 1
                },
                "_pendtag": {
                    "pendtag": 1
                },
                "_short_options": {
                    "short_options": 1
                },
                "_shortbuf": {
                    "shortbuf": 1
                },
                "_stderr": {
                    "file6": 1
                },
                "_stdin": {
                    "file8": 1
                },
                "_stdout": {
                    "file7": 1
                },
                "_tilend": {
                    "tilend": 1
                },
                "bVar13": {
                    "b_var13": 1,
                    "byte1": 1,
                    "byte_value": 3,
                    "byte_var": 7,
                    "byte_var1": 2,
                    "byte_var2": 13,
                    "byte_variable": 1,
                    "var": 1
                },
                "bVar3": {
                    "byte_value": 2,
                    "byte_var": 20,
                    "byte_var1": 1,
                    "byte_variable": 1,
                    "current_byte_value": 1,
                    "flag": 3,
                    "temp_byte": 1
                },
                "bVar47": {
                    "bool3": 1,
                    "bool_var": 4,
                    "bool_var3": 1,
                    "boolean_variable": 1,
                    "flag": 1,
                    "in_single_quotes": 1
                },
                "bVar48": {
                    "byte_var": 4,
                    "byte_var3": 2,
                    "byte_variable": 1,
                    "escaped_backslash": 1,
                    "var": 1
                },
                "bVar8": {
                    "b_var8": 1,
                    "bool1": 2,
                    "bool_value": 2,
                    "bool_var": 5,
                    "bool_var1": 16,
                    "boolean_variable": 1,
                    "escaped": 1,
                    "flag": 1
                },
                "bVar9": {
                    "b_var9": 1,
                    "bool2": 2,
                    "bool_value": 2,
                    "bool_var": 5,
                    "bool_var2": 16,
                    "boolean_variable": 1,
                    "flag": 1,
                    "single_quote": 1
                },
                "cVar14": {
                    "c_var14": 1,
                    "char1": 1,
                    "char_value": 3,
                    "char_var": 20,
                    "char_var1": 2,
                    "char_variable": 1,
                    "var": 1
                },
                "extraout_EDX": {
                    "extra_output_variable": 1,
                    "extraout_edx": 2,
                    "extraout_edx_var": 1,
                    "extraout_unsigned_var": 1,
                    "uint_var": 4,
                    "uint_var2": 2,
                    "uint_var7": 1,
                    "unsigned_var": 1,
                    "var13": 1
                },
                "iVar15": {
                    "i_var15": 1,
                    "index": 1,
                    "int1": 1,
                    "int_value": 2,
                    "int_var": 12,
                    "int_var1": 6,
                    "int_var2": 3,
                    "int_variable": 1,
                    "return_value": 1,
                    "var": 1
                },
                "iVar45": {
                    "i_var45": 1,
                    "int_value": 2,
                    "int_var": 3,
                    "int_var2": 3,
                    "int_var3": 2,
                    "int_variable": 1,
                    "loop_var5": 1,
                    "var": 1
                },
                "irrelevant_variable_1": {
                    "description": 1
                },
                "irrelevant_variable_2": {
                    "debug": 1
                },
                "lStack34": {
                    "long_stack": 1
                },
                "lVar24": {
                    "long_value": 2,
                    "long_var": 10,
                    "long_var1": 5,
                    "long_var3": 2,
                    "long_var4": 2,
                    "long_var5": 1,
                    "long_variable": 1,
                    "loop_var1": 1,
                    "var": 1,
                    "var15": 1,
                    "var8": 1,
                    "var_long": 1
                },
                "lVar29": {
                    "long_pointer": 1,
                    "long_pointer_pointer": 2,
                    "ptr": 1
                },
                "lVar31": {
                    "long_pointer_pointer": 1
                },
                "lVar34": {
                    "counter1": 1,
                    "long_value": 2,
                    "long_var": 4,
                    "long_var2": 9,
                    "long_var3": 1,
                    "long_var4": 1,
                    "long_variable": 1,
                    "loop_var1": 1,
                    "var17": 1,
                    "var_long2": 1
                },
                "lVar35": {
                    "long_value": 2,
                    "long_var": 4,
                    "long_var3": 8,
                    "long_var4": 1,
                    "long_var5": 2,
                    "long_variable": 1,
                    "loop_var2": 1,
                    "var18": 1,
                    "var_long3": 1
                },
                "lVar39": {
                    "file_descriptor": 1
                },
                "lVar40": {
                    "long_var": 2,
                    "long_var4": 1
                },
                "lVar41": {
                    "long_var": 1
                },
                "lVar42": {
                    "long_var": 1
                },
                "lVar45": {
                    "long_var": 1
                },
                "lVar54": {
                    "long_variable": 1
                },
                "local_10": {
                    "local_void": 1
                },
                "local_100": {
                    "current_index": 1,
                    "file_descriptor_count": 1,
                    "local_long": 1,
                    "local_long_var": 1,
                    "local_long_var1": 1,
                    "local_var6": 1,
                    "long_var": 4,
                    "long_var2": 2,
                    "long_var4": 2,
                    "var": 1
                },
                "local_108": {
                    "archive_member_count": 1,
                    "local_size_t": 1,
                    "local_size_t_var1": 1,
                    "local_size_var": 1,
                    "local_var5": 1,
                    "size": 2,
                    "size_t_var": 1,
                    "size_t_var3": 1,
                    "size_t_variable": 1,
                    "size_var": 3,
                    "size_var2": 1,
                    "size_var3": 2,
                    "var19": 1
                },
                "local_110": {
                    "archive_members_array": 1,
                    "at_file_array": 1,
                    "char_p_ptr2": 1,
                    "char_pointer_pointer": 2,
                    "char_pointer_pointer2": 1,
                    "char_ptr4": 1,
                    "char_ptr_ptr": 2,
                    "char_ptr_ptr2": 1,
                    "char_ptr_ptr_var": 1,
                    "file_array": 1,
                    "file_list": 1,
                    "local_array_of_strings": 1,
                    "local_char_pointer_pointer": 1,
                    "local_char_ptr_ptr": 1,
                    "local_str_array": 1,
                    "local_var4": 1,
                    "ptr_array2": 1
                },
                "local_114": {
                    "local_size2": 1
                },
                "local_116": {
                    "local_size": 1
                },
                "local_118": {
                    "buffer": 1,
                    "byte_pointer": 2,
                    "byte_pointer3": 1,
                    "byte_ptr": 2,
                    "byte_ptr2": 1,
                    "byte_ptr3": 1,
                    "byte_ptr_var": 1,
                    "escaped_char_buffer": 1,
                    "file_content": 1,
                    "file_content_buffer": 1,
                    "local_byte_pointer1": 1,
                    "local_byte_ptr": 1,
                    "local_byte_ptr1": 1,
                    "local_var3": 1,
                    "ptr9": 1
                },
                "local_128": {
                    "current_archive_file": 1,
                    "file": 2,
                    "file5": 1,
                    "file_pointer": 2,
                    "file_pointer5": 1,
                    "file_ptr": 1,
                    "file_ptr5": 2,
                    "file_ptr_var": 1,
                    "file_var": 1,
                    "file_var2": 1,
                    "input_file": 1,
                    "local_file_ptr1": 1,
                    "local_file_ptr2": 1,
                    "local_struct2": 1,
                    "local_var2": 1,
                    "new_variable_name_2": 1
                },
                "local_130": {
                    "file4": 1,
                    "file_pointer": 1,
                    "file_pointer4": 1,
                    "file_ptr4": 1,
                    "file_size": 1,
                    "file_var": 1,
                    "file_var1": 1,
                    "flags_and_format_variables": 1,
                    "index": 1,
                    "local_file_ptr": 2,
                    "local_struct1": 1,
                    "local_var1": 1,
                    "pointer1": 1,
                    "undefined8_var": 2,
                    "undefined8_var3": 1,
                    "undefined8_variable": 1
                },
                "local_40": {
                    "local_size10": 1
                },
                "local_50": {
                    "local_size9": 1
                },
                "local_60": {
                    "local_size8": 1
                },
                "local_70": {
                    "local_size7": 1
                },
                "local_80": {
                    "local_size6": 1
                },
                "local_84": {
                    "local_size5": 1
                },
                "local_90": {
                    "local_size4": 1
                },
                "local_98": {
                    "local_size3": 1
                },
                "local_b0": {
                    "count": 1,
                    "local_uint": 1,
                    "local_var7": 1,
                    "loop_counter": 1,
                    "size_var3": 1,
                    "temporary_variable2": 1,
                    "uint_var": 4,
                    "uint_var2": 1,
                    "uint_var3": 1,
                    "uint_var6": 1,
                    "uint_variable": 1,
                    "var": 1,
                    "var13": 1
                },
                "local_c8": {
                    "buffer": 1,
                    "local_undefined2": 1,
                    "local_undefined_byte_ptr": 1,
                    "locale_buffer": 1,
                    "stat_buffer": 1,
                    "undefined2_var": 1,
                    "undefined_array": 2,
                    "undefined_ptr": 1,
                    "undefined_var": 2,
                    "undefined_var1": 1
                },
                "optarg": {
                    "opt_arg": 1
                },
                "optind": {
                    "opt_index": 1
                },
                "optopt": {
                    "opt": 1
                },
                "pFVar18": {
                    "archive_file": 1,
                    "current_file": 1,
                    "file": 1,
                    "file1": 1,
                    "file_pointer": 7,
                    "file_pointer1": 1,
                    "file_ptr": 7,
                    "file_ptr1": 5,
                    "file_ptr_var": 1,
                    "file_var": 1,
                    "ptr_file": 1,
                    "ptr_to_file": 1
                },
                "pFVar22": {
                    "current_file2": 1,
                    "file2": 1,
                    "file_pointer": 5,
                    "file_pointer2": 3,
                    "file_ptr": 2,
                    "file_ptr2": 10,
                    "file_ptr_var": 1,
                    "file_var2": 1,
                    "ptr": 1,
                    "ptr_file2": 1,
                    "ptr_to_file2": 1
                },
                "pFVar28": {
                    "expanded_archive_file": 1,
                    "file": 1,
                    "file3": 1,
                    "file_pointer": 5,
                    "file_pointer3": 3,
                    "file_ptr": 2,
                    "file_ptr1": 1,
                    "file_ptr3": 9,
                    "file_ptr_var": 1,
                    "file_var": 1,
                    "file_var3": 1,
                    "ptr_file3": 1,
                    "ptr_to_file3": 1
                },
                "pFVar31": {
                    "file_pointer": 1,
                    "file_ptr": 1
                },
                "pFVar32": {
                    "file_pointer": 1,
                    "file_ptr4": 1
                },
                "pFVar33": {
                    "file_pointer": 1
                },
                "pFVar40": {
                    "opened_archive_file": 1
                },
                "param_1": {
                    "arg_count": 1,
                    "argc": 20,
                    "function_param": 1,
                    "new_parameter_name_1": 1,
                    "num_args": 1,
                    "num_arguments": 1,
                    "num_files": 3,
                    "param1": 1,
                    "param_1": 1
                },
                "param_2": {
                    "arg_list": 1,
                    "argv": 21,
                    "file": 1,
                    "file_list": 1,
                    "file_param": 1,
                    "file_pointer": 2,
                    "input_file": 1,
                    "new_parameter_name_2": 1,
                    "param2": 1
                },
                "pbVar1": {
                    "byte_array": 1,
                    "byte_pointer": 7,
                    "byte_pointer1": 1,
                    "byte_ptr": 3,
                    "byte_ptr1": 4,
                    "byte_ptr_var": 1,
                    "current_byte": 2,
                    "ptr": 2,
                    "ptr1": 4,
                    "ptr_byte": 4
                },
                "pbVar33": {
                    "byte_pointer": 1,
                    "byte_pointer2": 1,
                    "byte_pointer3": 1,
                    "byte_ptr": 1,
                    "byte_ptr2": 1,
                    "byte_ptr3": 2,
                    "byte_ptr_var": 1,
                    "current_byte2": 1,
                    "current_pointer": 1,
                    "ptr_byte3": 1
                },
                "pbVar38": {
                    "byte_pointer": 1,
                    "byte_pointer3": 2,
                    "byte_pointer4": 1,
                    "byte_ptr": 2,
                    "byte_ptr2": 1,
                    "byte_ptr3": 2,
                    "byte_ptr4": 1,
                    "byte_ptr_var": 1,
                    "byte_var2": 1,
                    "current_byte3": 1,
                    "expanded_string": 1,
                    "ptr": 1,
                    "ptr_byte4": 1
                },
                "pbVar48": {
                    "byte_value": 2,
                    "byte_var3": 1
                },
                "pcVar23": {
                    "char_pointer": 5,
                    "char_pointer2": 1,
                    "char_ptr": 4,
                    "char_ptr1": 2,
                    "char_ptr2": 2,
                    "char_ptr_var": 1,
                    "char_var": 1,
                    "char_var2": 4,
                    "char_var_ptr1": 1,
                    "ptr": 1,
                    "ptr_char": 3,
                    "str1": 1,
                    "str_var": 1
                },
                "pcVar39": {
                    "char_pointer": 1,
                    "char_ptr": 2,
                    "char_ptr2": 2,
                    "char_ptr_var": 1,
                    "char_var3": 3,
                    "message": 1,
                    "pc_var39": 2,
                    "ptr": 1,
                    "ptr_char3": 1,
                    "string_var3": 1
                },
                "pcVar43": {
                    "char_ptr": 1,
                    "char_ptr3": 1,
                    "char_ptr_var": 1,
                    "pc_var43": 2,
                    "ptr": 1
                },
                "pcVar46": {
                    "char_ptr": 2,
                    "char_ptr3": 1,
                    "char_ptr_var": 1,
                    "current_string": 1,
                    "file_pointer": 1,
                    "pc_var46": 1
                },
                "piVar11": {
                    "archive_member_count": 1,
                    "int_pointer": 8,
                    "int_ptr": 6,
                    "int_ptr1": 3,
                    "int_ptr_var": 1,
                    "int_var": 2,
                    "int_var1": 1,
                    "int_var_ptr": 1,
                    "ptr": 1,
                    "ptr_int": 5
                },
                "plVar21": {
                    "long_pointer": 5,
                    "long_pointer2": 3,
                    "long_ptr": 4,
                    "long_ptr2": 4,
                    "long_ptr_var": 1,
                    "long_var2": 2,
                    "long_var_ptr2": 1,
                    "position_var": 1,
                    "ptr": 1,
                    "ptr6": 1,
                    "ptr7": 1,
                    "ptr_long2": 3
                },
                "plVar29": {
                    "arch_pos": 1,
                    "long_pointer_pointer": 1,
                    "long_ptr_var": 1,
                    "ptr_ptr_long": 2
                },
                "plVar36": {
                    "long_pointer3": 1,
                    "temporary_variable_pointer": 1
                },
                "plVar4": {
                    "current_long": 1,
                    "libdeps_record": 1,
                    "long_pointer": 8,
                    "long_ptr": 4,
                    "long_ptr1": 3,
                    "long_ptr_var": 1,
                    "long_var": 1,
                    "long_var1": 1,
                    "long_var_ptr": 1,
                    "ptr": 1,
                    "ptr3": 3,
                    "ptr_long": 4
                },
                "plVar45": {
                    "long_pointer": 1
                },
                "pliVar29": {
                    "long_p_ptr_var": 1
                },
                "ppcVar10": {
                    "archive_members": 1,
                    "char_double_pointer": 1,
                    "char_p_ptr1": 1,
                    "char_pointer_pointer": 7,
                    "char_ptr_ptr": 6,
                    "char_ptr_ptr1": 2,
                    "char_ptr_ptr_var": 1,
                    "ptr": 1,
                    "ptr_array": 2,
                    "ptr_array_of_strings": 2,
                    "ptr_pointer_to_char": 1,
                    "ptr_ptr_char": 1,
                    "str_array": 2,
                    "string_array": 1
                },
                "ppcVar31": {
                    "char_double_pointer": 1,
                    "char_pointer_pointer": 1,
                    "char_pointer_pointer2": 1,
                    "char_ptr_ptr": 1,
                    "char_ptr_ptr1": 1,
                    "char_ptr_ptr2": 2,
                    "char_ptr_ptr_var": 1,
                    "ptr_ptr_char2": 1
                },
                "ppcVar32": {
                    "char_double_pointer": 1,
                    "char_pointer_pointer": 1,
                    "char_pointer_pointer3": 1,
                    "char_ptr_ptr": 1,
                    "char_ptr_ptr2": 1,
                    "char_ptr_ptr3": 2,
                    "char_ptr_ptr_var": 1,
                    "ptr_ptr_char3": 1,
                    "str_array3": 1
                },
                "ppcVar46": {
                    "char_pointer_pointer": 1
                },
                "pplVar29": {
                    "long_pointer_pointer": 1,
                    "long_ptr_ptr": 2,
                    "long_ptr_ptr1": 2,
                    "long_var_ptr_ptr": 1
                },
                "pplVar30": {
                    "long_double_pointer": 1
                },
                "pplVar31": {
                    "long_ptr_ptr_var": 1
                },
                "pplVar32": {
                    "long_pointer_pointer": 1
                },
                "pplVar33": {
                    "long_ptr_ptr2": 1
                },
                "pplVar34": {
                    "long_ptr_ptr3": 1
                },
                "pplVar36": {
                    "long_double_pointer": 1
                },
                "pplVar41": {
                    "long_ptr_ptr4": 1
                },
                "pplVar42": {
                    "long_ptr_ptr5": 1
                },
                "ppuVar31": {
                    "str_array2": 1
                },
                "ppuVar36": {
                    "ptr_ptr_undefined": 1,
                    "undefined_pointer_pointer": 2,
                    "undefined_ptr_ptr": 3,
                    "undefined_ptr_ptr1": 1,
                    "undefined_ptr_ptr_var": 1
                },
                "puVar12": {
                    "byte_ptr_var": 1,
                    "ptr": 2,
                    "ptr5": 3,
                    "ptr_undefined": 3,
                    "ptr_var": 1,
                    "ptr_var2": 1,
                    "ptr_void": 1,
                    "undefined_pointer": 8,
                    "undefined_ptr": 5,
                    "undefined_ptr1": 3,
                    "undefined_var_ptr": 1
                },
                "puVar2": {
                    "current_ranlib_record": 1,
                    "current_word": 1,
                    "ptr": 1,
                    "ptr2": 4,
                    "ptr_array": 1,
                    "ptr_uint": 4,
                    "uint_array": 1,
                    "uint_pointer": 8,
                    "uint_ptr": 5,
                    "uint_ptr1": 2,
                    "uint_ptr_var": 1
                },
                "puVar26": {
                    "dynamic_buffer": 1,
                    "ptr": 1,
                    "ptr6": 1,
                    "ptr8": 1,
                    "ptr_uint8": 1,
                    "ptr_uint8_2": 1,
                    "ptr_undefined82": 1,
                    "ptr_var2": 1,
                    "ptr_var3": 1,
                    "uint64_pointer2": 1,
                    "uint64_ptr2": 1,
                    "undefined8_pointer": 6,
                    "undefined8_pointer2": 1,
                    "undefined8_ptr": 3,
                    "undefined8_ptr1": 2,
                    "undefined8_ptr2": 2,
                    "undefined8_ptr4": 1,
                    "undefined8_ptr_var": 1
                },
                "puVar5": {
                    "current_archive_record": 1,
                    "current_pointer": 1,
                    "ptr": 1,
                    "ptr4": 3,
                    "ptr_uint8": 1,
                    "ptr_undefined8": 3,
                    "ptr_var": 1,
                    "uint64_pointer": 1,
                    "uint64_ptr1": 1,
                    "ulong_ptr_var": 1,
                    "undefined8_pointer": 7,
                    "undefined8_ptr": 6,
                    "undefined8_ptr1": 1,
                    "undefined8_ptr3": 1
                },
                "sVar19": {
                    "file_size": 1,
                    "size": 1,
                    "size_t_var": 1,
                    "size_t_var1": 4,
                    "size_t_variable": 1,
                    "size_value": 2,
                    "size_var": 10,
                    "size_var1": 4,
                    "string_length": 1,
                    "var": 1,
                    "var5": 1,
                    "var_size": 1
                },
                "sVar20": {
                    "read_size": 1,
                    "size2": 1,
                    "size2_var": 1,
                    "size_t_var": 1,
                    "size_t_var2": 4,
                    "size_t_variable": 1,
                    "size_value": 2,
                    "size_var": 4,
                    "size_var2": 9,
                    "string_read_size": 1,
                    "var": 1,
                    "var6": 1,
                    "var_size2": 1
                },
                "sVar49": {
                    "size_var": 1
                },
                "sVar50": {
                    "size_var": 1
                },
                "uStack31": {
                    "uint_stack2": 1
                },
                "uStack32": {
                    "uint_stack": 1
                },
                "uStack_c5": {
                    "local_undefined5_bytes": 1,
                    "undefined5_var": 3,
                    "undefined_var1": 1,
                    "undefined_var2": 1,
                    "var": 1
                },
                "uStack_c6": {
                    "local_undefined_byte": 1,
                    "undefined_var": 3,
                    "undefined_var1": 1,
                    "undefined_var2": 1,
                    "var": 1
                },
                "uVar16": {
                    "index": 1,
                    "loop_var": 1,
                    "u_var16": 1,
                    "uint_value": 2,
                    "uint_var": 7,
                    "uint_var1": 6,
                    "uint_var3": 5,
                    "uint_variable": 1,
                    "unsigned_var": 1,
                    "var": 1,
                    "var3": 2,
                    "var_u16": 1
                },
                "uVar17": {
                    "format_return_value": 1,
                    "func_ret_val": 1,
                    "u_var17": 2,
                    "uint32_var3": 1,
                    "uint_var": 1,
                    "uint_var4": 5,
                    "undefined4_value": 1,
                    "undefined4_var": 5,
                    "undefined4_var3": 6,
                    "undefined4_variable": 1,
                    "unsigned_var2": 1,
                    "var": 1,
                    "var4": 2,
                    "var_u17": 1
                },
                "uVar25": {
                    "loop_var2": 1,
                    "u_var25": 1,
                    "ulong_value": 2,
                    "ulong_var": 11,
                    "ulong_var1": 8,
                    "ulong_variable": 1,
                    "unsigned_var3": 1,
                    "var": 1,
                    "var5": 1,
                    "var8": 1,
                    "var_u25": 1
                },
                "uVar27": {
                    "error_message": 1,
                    "string_var": 1,
                    "u_var27": 1,
                    "uint64_var1": 2,
                    "uint_var5": 2,
                    "ulong_var2": 1,
                    "undefined8_value": 2,
                    "undefined8_var": 6,
                    "undefined8_var1": 5,
                    "undefined8_var2": 1,
                    "undefined8_variable": 1,
                    "unsigned_var4": 1,
                    "var": 1,
                    "var6": 1,
                    "var9": 1,
                    "var_u27": 1
                },
                "uVar30": {
                    "string_var2": 1,
                    "temporary_variable": 1,
                    "u_var30": 1,
                    "uint_var6": 1,
                    "ulong_var3": 1,
                    "undefined8_value": 1,
                    "undefined8_var": 3,
                    "undefined8_var2": 3,
                    "undefined8_var3": 1,
                    "unsigned_var5": 1,
                    "var": 1
                },
                "uVar37": {
                    "loop_var2": 1,
                    "loop_var3": 1,
                    "u_var37": 1,
                    "uint_value": 1,
                    "uint_var": 4,
                    "uint_var2": 3,
                    "uint_var3": 1,
                    "uint_var5": 1,
                    "uint_var8": 1,
                    "unsigned_var6": 1,
                    "var12": 1,
                    "var7": 1,
                    "var_u37": 1
                },
                "uVar40": {
                    "u_var40": 1,
                    "ulong_value": 2,
                    "ulong_var": 2,
                    "ulong_var2": 5,
                    "ulong_var4": 1,
                    "ulong_variable": 1,
                    "var": 1,
                    "var9": 1,
                    "var_u40": 1
                },
                "uVar41": {
                    "loop_var3": 1,
                    "u_var41": 1,
                    "ulong_value": 2,
                    "ulong_var": 3,
                    "ulong_var3": 5,
                    "ulong_var5": 1,
                    "ulong_variable": 1,
                    "unsigned_var7": 1,
                    "var": 1,
                    "var10": 1,
                    "var_u41": 1
                },
                "uVar42": {
                    "loop_var4": 1,
                    "u_var42": 1,
                    "ulong_value": 2,
                    "ulong_var": 3,
                    "ulong_var4": 5,
                    "ulong_var6": 1,
                    "ulong_variable": 1,
                    "unsigned_var8": 1,
                    "var": 1,
                    "var11": 1,
                    "var_u42": 1
                },
                "uVar43": {
                    "undefined8_var": 1,
                    "var": 1
                },
                "uVar44": {
                    "loop_var3": 1,
                    "option_value": 1,
                    "u_var44": 1,
                    "uint_value": 1,
                    "uint_var": 3,
                    "uint_var3": 1,
                    "uint_var5": 1,
                    "uint_var6": 1,
                    "uint_variable": 1,
                    "unsigned_var9": 1,
                    "var": 1,
                    "var12": 1,
                    "var_u44": 1
                },
                "uVar45": {
                    "uint_variable": 1
                },
                "uVar6": {
                    "current_uint": 1,
                    "file_format": 1,
                    "u_var1": 1,
                    "u_var6": 2,
                    "uint32_var1": 1,
                    "uint_var": 1,
                    "uint_var1": 5,
                    "undefined4_value": 1,
                    "undefined4_var": 4,
                    "undefined4_var1": 7,
                    "undefined4_variable": 1,
                    "var": 1,
                    "var1": 2,
                    "var_u6": 1
                },
                "uVar7": {
                    "archive_format": 1,
                    "current_uint2": 1,
                    "u_var2": 1,
                    "u_var7": 2,
                    "uint32_var2": 1,
                    "uint_var": 1,
                    "uint_var2": 5,
                    "undefined4_value": 1,
                    "undefined4_var": 4,
                    "undefined4_var2": 7,
                    "undefined4_variable": 1,
                    "var": 1,
                    "var2": 2,
                    "var_u7": 1
                },
                "unaff_R12": {
                    "current_file4": 1,
                    "file9": 1,
                    "file_ptr_var": 1
                },
                "unaff_RBP": {
                    "argument": 1,
                    "char_pointer": 2,
                    "char_pointer3": 1,
                    "char_ptr": 3,
                    "char_ptr1": 2,
                    "char_ptr_var": 1,
                    "ptr7": 1,
                    "ptr_char2": 1,
                    "str_ptr2": 1,
                    "unaff_rbp": 1,
                    "unused_param": 1,
                    "var": 1
                }
            },
            "called": [
                "FUN_001052a0",
                "FUN_001020a0",
                "FUN_00102030",
                "FUN_0010394a",
                "FUN_00102390",
                "FUN_001022b0",
                "FUN_001020e0",
                "FUN_001020b0",
                "FUN_00102460",
                "FUN_00102120",
                "FUN_00102220",
                "FUN_00102090",
                "FUN_00105300",
                "FUN_001058b0",
                "FUN_00102230",
                "FUN_001022c0",
                "FUN_00102440",
                "FUN_001024e0",
                "FUN_00102300",
                "FUN_001023a0",
                "FUN_001024c0",
                "FUN_001075e0",
                "FUN_001020d0",
                "FUN_00105870",
                "FUN_001024d0",
                "FUN_001022a0",
                "FUN_00102140",
                "FUN_00102180",
                "FUN_00105570",
                "FUN_001021a0",
                "FUN_00102160",
                "FUN_00103e95",
                "FUN_00102320",
                "FUN_00102240",
                "FUN_00102410",
                "FUN_00102330",
                "FUN_00102270",
                "FUN_00107890",
                "FUN_00107c20",
                "FUN_00105830",
                "FUN_00107740",
                "FUN_00107650",
                "FUN_00103bd1",
                "FUN_00103a78",
                "FUN_00102170",
                "FUN_001023f0",
                "FUN_00102100",
                "FUN_00107cc0",
                "FUN_001020c0",
                "FUN_00102470",
                "FUN_00107640",
                "FUN_001022e0",
                "FUN_00102340",
                "FUN_00102490",
                "FUN_001021b0",
                "FUN_001023b0",
                "FUN_00102250",
                "FUN_00102480",
                "FUN_00102380",
                "FUN_00107c10",
                "FUN_00102450",
                "FUN_00105480",
                "FUN_00107690",
                "FUN_00102080",
                "FUN_00107920",
                "FUN_00107730",
                "FUN_00102310",
                "FUN_0010342d",
                "FUN_00102350",
                "FUN_00102190",
                "FUN_00102370"
            ],
            "calling": [
                "FUN_00105cc0"
            ],
            "code": "\n\n\nvoid parse_and_process_archive_files_00105db0(uint argc,FILE *argv)\n\n{\n  byte *byte_pointer;\n  uint *uint_pointer;\n  byte byte_var;\n  long *long_pointer;\n  undefined8 *undefined8_pointer;\n  undefined4 undefined4_var1;\n  undefined4 undefined4_var2;\n  bool bool_var1;\n  bool bool_var2;\n  char **char_pointer_pointer;\n  int *int_pointer;\n  undefined *undefined_pointer;\n  byte byte_var2;\n  char char_var;\n  int int_var;\n  uint uint_var;\n  undefined4 undefined4_var3;\n  FILE *file_ptr;\n  size_t size_var;\n  size_t size_var2;\n  byte *byte_ptr;\n  long *long_pointer;\n  FILE *file_ptr2;\n  char *char_pointer;\n  long long_var;\n  ulong ulong_var;\n  undefined8 *undefined8_pointer;\n  undefined8 undefined8_var;\n  FILE *file_ptr3;\n  long **long_ptr_ptr;\n  undefined8 undefined8_var2;\n  char **char_ptr_ptr2;\n  uint uint_var;\n  char **char_ptr_ptr3;\n  byte *byte_ptr3;\n  long long_var2;\n  long long_var3;\n  undefined **undefined_ptr_ptr;\n  uint uint_var;\n  char *char_ptr;\n  byte *byte_ptr;\n  char *char_var3;\n  ulong ulong_var2;\n  ulong ulong_var3;\n  ulong ulong_var4;\n  FILE *current_file4;\n  char *pc_var43;\n  uint uint_var;\n  int int_var2;\n  char *char_ptr;\n  bool bool_var;\n  byte byte_var;\n  undefined8 undefined8_var;\n  FILE *file_ptr5;\n  byte *byte_ptr;\n  char **char_pointer_pointer;\n  size_t size_var;\n  long long_var;\n  undefined undefined_var [2];\n  undefined undefined_var;\n  undefined5 undefined5_var;\n  uint uint_var;\n  \n  byte_var = 0;\n  char_ptr = (char *)(ulong)argc;\n  setlocale(5,\"\");\n  setlocale(0,\"\");\n  bindtextdomain(\"binutils\",\"/usr/share/locale\");\n  textdomain(\"binutils\");\n  DAT_0010d660 = *(long **)argv;\n  xmalloc_set_program_name();\n  bfd_set_error_program_name(DAT_0010d660);\n  bfd_plugin_set_program_name(DAT_0010d660);\n  pc_var43 = (char *)argv;\n  file_ptr = argv;\n  if ((int)argc < 2) goto LAB_001062c6;\n  char_pointer_pointer = (char **)0x7d0;\n  current_file4 = (FILE *)0x1;\n  file_ptr5 = (FILE *)0x0;\n  file_ptr2 = argv;\n  do {\n    uint_var = (uint)current_file4;\n    char_ptr = (char *)(long)(int)uint_var;\n    undefined8_var = (FILE *)((long)char_ptr * 8);\n    pc_var43 = (char *)file_ptr2;\n    if (**(char **)(&file_ptr2->flags + (long)char_ptr * 2) == '@') {\n      uint_var = (int)char_pointer_pointer - 1;\n      char_pointer_pointer = (char **)(ulong)uint_var;\n      if (uint_var == 0) {\n        long_pointer = *(long **)file_ptr2;\n        char_ptr = \"%s: error: too many @-files encountered\\n\";\nLAB_00106ffe:\n        fprintf(file6,char_ptr,long_pointer);\nLAB_0010700f:\n                    \n        xexit(1);\n      }\n      char_var3 = *(char **)(&file_ptr2->flags + (long)char_ptr * 2) + 1;\n      int_var = stat(char_var3,(stat *)undefined_var);\n      if (-1 < int_var) {\n        if ((uint_var & 0xf000) == 0x4000) {\n          long_pointer = *(long **)file_ptr2;\n          char_ptr = \"%s: error: @-file refers to a directory\\n\";\n          goto LAB_00106ffe;\n        }\n        file_ptr = fopen(char_var3,\"r\");\n        if (file_ptr != (FILE *)0x0) {\n          int_var = fseek(file_ptr,0,2);\n          if (((int_var != -1) && (size_var = ftell(file_ptr), size_var != 0xffffffffffffffff)) &&\n             (int_var = fseek(file_ptr,0,0), int_var != -1)) {\n            byte_ptr = (byte *)xmalloc(size_var + 1);\n            size_var2 = fread(byte_ptr,1,size_var,file_ptr);\n            if ((size_var == size_var2) || (int_var = ferror(file_ptr), int_var == 0)) {\n              byte_ptr[size_var2] = 0;\n              byte_var2 = *byte_ptr;\n              byte_ptr3 = byte_ptr;\n              while( true ) {\n                if (byte_var2 == 0) goto LAB_00106814;\n                if (((&_sch_istable)[(ulong)byte_var2 * 2] & 0x40) == 0) break;\n                byte_var2 = byte_ptr3[1];\n                byte_ptr3 = byte_ptr3 + 1;\n              }\n              size_var = strlen((char *)byte_ptr);\n              byte_ptr = (byte *)xmalloc(size_var + 1);\n              file_ptr3 = (FILE *)0x0;\n              int_var = 0;\n              bool_var2 = false;\n              bool_var = false;\n              bool_var1 = false;\n              long_var = 0;\n              byte_ptr3 = byte_ptr;\n              do {\n                while (((&_sch_istable)[(ulong)*byte_ptr3 * 2] & 0x40) != 0) {\n                  byte_ptr3 = byte_ptr3 + 1;\n                }\n                if ((int_var == 0) || (int_var + -1 <= (int)long_var)) {\n                  if (file_ptr3 == (FILE *)0x0) {\n                    int_var = 8;\n                    file_ptr3 = (FILE *)xmalloc(0x40);\n                    char_ptr_ptr2 = (char **)((long)&file_ptr3->flags + long_var * 8);\n                    *char_ptr_ptr2 = (char *)0x0;\n                  }\n                  else {\n                    int_var = int_var * 2;\n                    file_ptr3 = (FILE *)xrealloc(file_ptr3,(long)int_var << 3);\n                    char_ptr_ptr2 = (char **)((long)&file_ptr3->flags + long_var * 8);\n                    *char_ptr_ptr2 = (char *)0x0;\n                  }\n                }\n                else {\n                  char_ptr_ptr2 = (char **)((long)&file_ptr3->flags + long_var * 8);\n                }\n                byte_var2 = *byte_ptr3;\n                byte_ptr = byte_ptr;\n                while (byte_var2 != 0) {\n                  while( true ) {\n                    if ((((&_sch_istable)[(ulong)byte_var2 * 2] & 0x40) != 0) &&\n                       (!(bool)(bool_var2 | bool_var1 | bool_var))) {\n                      bool_var1 = false;\n                      bool_var2 = false;\n                      bool_var = false;\n                      goto LAB_0010606f;\n                    }\n                    if (!bool_var1) break;\n                    byte_ptr3 = byte_ptr3 + 1;\n                    *byte_ptr = byte_var2;\n                    byte_ptr = byte_ptr + 1;\n                    bool_var1 = false;\n                    byte_var2 = *byte_ptr3;\n                    if (byte_var2 == 0) goto LAB_0010606f;\n                  }\n                  if (byte_var2 == 0x5c) {\n                    bool_var1 = true;\n                  }\n                  else if (bool_var) {\n                    if (byte_var2 == 0x27) {\n                      bool_var = false;\n                    }\n                    else {\nLAB_001061f1:\n                      *byte_ptr = byte_var2;\n                      byte_ptr = byte_ptr + 1;\n                    }\n                  }\n                  else if (bool_var2) {\n                    if (byte_var2 != 0x22) goto LAB_001061f1;\n                    bool_var2 = false;\n                  }\n                  else if (byte_var2 == 0x27) {\n                    bool_var = true;\n                  }\n                  else {\n                    if (byte_var2 != 0x22) goto LAB_001061f1;\n                    bool_var2 = true;\n                  }\n                  byte_pointer = byte_ptr3 + 1;\n                  byte_ptr3 = byte_ptr3 + 1;\n                  byte_var2 = *byte_pointer;\n                }\nLAB_0010606f:\n                *byte_ptr = 0;\n                long_pointer = (long *)xstrdup(byte_ptr);\n                *char_ptr_ptr2 = (char *)long_pointer;\n                *(undefined8 *)(file_ptr3->shortbuf + long_var * 8 + -0x7b) = 0;\n                byte_var2 = *byte_ptr3;\n                byte_var = (&_sch_istable)[(ulong)byte_var2 * 2];\n                while ((byte_var & 0x40) != 0) {\n                  byte_var2 = byte_ptr3[1];\n                  byte_ptr3 = byte_ptr3 + 1;\n                  byte_var = (&_sch_istable)[(ulong)byte_var2 * 2];\n                }\n                long_var = long_var + 1;\n                if (byte_var2 == 0) {\n                  free(byte_ptr);\n                  if (file_ptr2 == argv) goto LAB_00106834;\n                  goto LAB_0010610a;\n                }\n              } while( true );\n            }\n            free(byte_ptr);\n          }\n          fclose(file_ptr);\n        }\n      }\n    }\n    if ((int)char_ptr <= (int)(uint_var + 1)) {\nLAB_001062c6:\n      do {\n        if (_DAT_0010d65c < 0) goto LAB_001073cc;\nLAB_001062d3:\n        uint_var = (uint)current_file4;\n        int_var = bfd_init();\n        char_var3 = \"fatal error: libbfd ABI mismatch\";\n        if (int_var != 0x118) goto LAB_00106803;\n        char_var3 = \"x86_64-pc-linux-gnu\";\n        uint_var = bfd_set_default_target(\"x86_64-pc-linux-gnu\",\"fatal error: libbfd ABI mismatch\",5);\n        undefined_pointer = PTR_DAT_0010d2e0;\n        current_file4 = (FILE *)(ulong)uint_var;\n        if ((char)uint_var != '\\0') {\n          if (exit_cleanup == (code *)0x0) {\n            exit_cleanup = xatexit_cleanup;\n          }\n          if (*(int *)(PTR_DAT_0010d2e0 + 8) < 0x20) {\nLAB_0010632b:\n            undefined_pointer = PTR_DAT_0010d2e0;\n            int_var = *(int *)(PTR_DAT_0010d2e0 + 8);\n            *(int *)(PTR_DAT_0010d2e0 + 8) = int_var + 1;\n            *(code **)(undefined_pointer + (long)int_var * 8 + 0x10) = remove_output;\n          }\n          else {\n            undefined8_pointer = (undefined8 *)malloc(0x110);\n            if (undefined8_pointer != (undefined8 *)0x0) {\n              *undefined8_pointer = undefined_pointer;\n              *(undefined4 *)(undefined8_pointer + 1) = 0;\n              PTR_DAT_0010d2e0 = (undefined *)undefined8_pointer;\n              goto LAB_0010632b;\n            }\n          }\n          long_var = 1;\n          do {\n            long_var3 = long_var;\n            int_var = (int)char_ptr;\n            if (int_var <= (int)long_var3) break;\n            char_var = ar_emul_default_parse_arg(*(undefined8 *)((int *)pc_var43 + long_var3 * 2));\n            long_var = long_var3 + 1;\n          } while (char_var != '\\0');\n          char_ptr = (char *)((long)pc_var43 + long_var3 * 8 + -8);\n          uint_var = int_var - ((int)long_var3 + -1);\n          file_ptr = (FILE *)(ulong)uint_var;\n          if (_DAT_0010d65c != 0) {\n            pc_var43 = \"options\";\n            uint_var = 0;\n            while (int_var = getopt_long(file_ptr,char_ptr,\"options\",&PTR_DAT_0010d300), int_var != -1)\n            {\n              if (int_var < 0x77) {\n                if (0x43 < int_var) {\n                  switch(int_var) {\n                  case 0x44:\n                    _DAT_0010d2d0 = 1;\n                    break;\n                  case 0x48:\n                  case 0x68:\n                    _DAT_0010d658 = 1;\n                    break;\n                  case 0x55:\n                    _DAT_0010d2d0 = 0;\n                    break;\n                  case 0x56:\n                  case 0x76:\n                    _DAT_0010d654 = 1;\n                    break;\n                  case 0x74:\n                    uint_var = uint_var;\n                  }\n                }\n              }\n              else if (int_var == 0xc9) {\n                bfd_plugin_set_plugin(arg2);\n              }\n            }\n            if ((int)uint_var < 2) {\nLAB_00107125:\n              char_var3 = (char *)0x0;\n              ranlib_usage();\n            }\n            else {\n              if (_DAT_0010d658 != 0) {\nLAB_0010711b:\n                ranlib_usage();\n                goto LAB_00107125;\n              }\n              if (_DAT_0010d654 != 0) {\n                print_version(\"ranlib\");\n                goto LAB_0010711b;\n              }\n              if (_DAT_0010d2d0 < 0) {\n                _DAT_0010d2d0 = 1;\n              }\n              current_file4 = (FILE *)0x0;\n              pc_var43 = (char *)(long)optind;\n              while( true ) {\n                if ((int)uint_var <= (int)pc_var43) goto LAB_00106f8b;\n                char_var3 = *(char **)((int *)char_ptr + (long)pc_var43 * 2);\n                if ((char)uint_var != '\\0') break;\n                uint_var = ranlib_only();\n                pc_var43 = (char *)((long)(int *)pc_var43 + 1);\n                current_file4 = (FILE *)(ulong)((uint)current_file4 | uint_var);\n              }\n            }\n            while (long_var = get_file_size(char_var3), long_var < 1) {\n              uint_var = 1;\nLAB_001071c4:\n              int_pointer = (int *)pc_var43;\n              pc_var43 = (char *)((long)int_pointer + 1);\n              current_file4 = (FILE *)(ulong)((uint)current_file4 | uint_var);\n              if ((int)uint_var <= (int)pc_var43) {\nLAB_00106f8b:\n                    \n                xexit(current_file4);\n              }\n              char_var3 = *(char **)((char *)((long)char_ptr + 0x83) + (long)int_pointer * 8 + -0x7b);\n            }\n            int_var = open(char_var3,2,0);\n            if (int_var < 0) {\n              bfd_set_error(1);\n              bfd_fatal(char_var3);\nLAB_0010737f:\n              bfd_fatal(char_var3);\nLAB_00107387:\n              bfd_nonfatal(char_var3);\n              int_var = bfd_get_error();\n              if (int_var == 0xd) {\n                list_matching_formats\n                          (CONCAT53(undefined5_var,CONCAT12(undefined_var,CONCAT11(undefined_var[1],undefined_var[0])))\n                          );\n              }\n              goto LAB_0010700f;\n            }\n            char_ptr = (char *)bfd_fdopenr(char_var3,0);\n            if ((FILE *)char_ptr == (FILE *)0x0) goto LAB_0010737f;\n            char_var = bfd_check_format_matches(char_ptr,2,undefined_var);\n            if (char_var == '\\0') goto LAB_00107387;\n            if ((*(byte *)((long)((long)char_ptr + 0x48) + 1) & 8) != 0) {\n              if (_DAT_0010d2d0 != 0) {\n                uint_pointer = (uint *)((long)((long)char_ptr + 0x40) + 4);\n                *uint_pointer = *uint_pointer | 0x2000;\n              }\n              (**(code **)(*(char **)((long)char_ptr + 8) + 0x1f0))(char_ptr);\n              char_var = bfd_close(char_ptr);\n              if (char_var != '\\0') {\n                uint_var = 0;\n                goto LAB_001071c4;\n              }\n              goto LAB_0010737f;\n            }\n            undefined8_var = dcgettext(0,\"%s: no archive map to update\",5);\n            fatal(undefined8_var,char_var3);\nLAB_001073cc:\n            char_var3 = (char *)lbasename(DAT_0010d660);\n            size_var = strlen(char_var3);\n            if ((size_var < 6) ||\n               (int_var = filename_cmp(char_var3 + (size_var - 6),\"ranlib\"), int_var != 0)) {\n              _DAT_0010d65c = 0;\n            }\n            else {\n              _DAT_0010d65c = 1;\n            }\n            goto LAB_001062d3;\n          }\n          undefined_ptr_ptr = &PTR_DAT_0010d300;\n          char_ptr = \"hdmpqrtxl:coOVsSuvabiMNfPTDU\";\n          pc_var43 = (char *)&DAT_001096a0;\n          file_ptr2 = (FILE *)char_ptr;\n          file_ptr3 = file_ptr;\n          if ((int)uint_var < 2) goto switchD_00107462_caseD_1;\n          undefined8_var = (FILE *)CONCAT71(undefined8_var._1_7_,(char)uint_var);\nLAB_001063a3:\n          file_ptr2 = (FILE *)char_ptr;\n          if (**(char **)((long)char_ptr + 8) != '-') {\n            undefined_var[0] = 0x2d;\n            undefined_var = 0;\n            size_var = strlen(*(char **)((long)char_ptr + 8));\n            int_var = (int)size_var + (int)file_ptr;\n            current_file4 = (FILE *)xmalloc((long)int_var * 8);\n            undefined4_var3 = *(undefined4 *)((long)char_ptr + 4);\n            current_file4->flags = *(int *)char_ptr;\n            *(undefined4 *)&current_file4->field_0x4 = undefined4_var3;\n            char_ptr_ptr2 = *(char ***)((long)char_ptr + 8);\n            file_ptr5 = (FILE *)((long)char_ptr + 0x10);\n            char_pointer_pointer = char_ptr_ptr2;\n            if (*(char *)char_ptr_ptr2 == '\\0') {\n              char_ptr_ptr3 = &current_file4->read_ptr;\n            }\n            else {\n              byte_ptr = undefined_var;\n              undefined_var[1] = *(char *)char_ptr_ptr2;\n              char_var3 = (char *)xstrdup();\n              char_ptr_ptr3 = &current_file4->read_end;\n              current_file4->read_ptr = char_var3;\n              if (*(char *)((long)char_ptr_ptr2 + 1) != '\\0') {\n                undefined_var[1] = *(char *)((long)char_ptr_ptr2 + 1);\n                char_var3 = (char *)xstrdup(byte_ptr);\n                char_ptr_ptr3 = &current_file4->read_base;\n                current_file4->read_end = char_var3;\n                if (*(char *)((long)char_ptr_ptr2 + 2) != '\\0') {\n                  undefined_var[1] = *(char *)((long)char_ptr_ptr2 + 2);\n                  char_var3 = (char *)xstrdup(byte_ptr);\n                  char_ptr_ptr3 = &current_file4->write_base;\n                  current_file4->read_base = char_var3;\n                  if (*(char *)((long)char_ptr_ptr2 + 3) != '\\0') {\n                    char_ptr_ptr3 = &current_file4->write_ptr;\n                    undefined_var[1] = *(char *)((long)char_ptr_ptr2 + 3);\n                    char_var3 = (char *)xstrdup(byte_ptr);\n                    current_file4->write_base = char_var3;\n                    char_var = *(char *)((long)char_ptr_ptr2 + 4);\n                    char_pointer_pointer = char_ptr_ptr3;\n                    if (char_var != '\\0') {\n                      char_var3 = (char *)((long)char_ptr_ptr2 + 4);\n                      char_ptr_ptr2 = char_ptr_ptr3;\n                      do {\n                        char_ptr_ptr3 = char_ptr_ptr2 + 1;\n                        undefined_var[1] = char_var;\n                        char_pointer = (char *)xstrdup(byte_ptr);\n                        char_var3 = char_var3 + 1;\n                        *char_ptr_ptr2 = char_pointer;\n                        char_var = *char_var3;\n                        char_ptr_ptr2 = char_ptr_ptr3;\n                        char_pointer_pointer = char_ptr_ptr3;\n                      } while (char_var != '\\0');\n                    }\n                  }\n                }\n              }\n            }\n            long_var = (long)(int)file_ptr;\n            int_pointer = (int *)char_ptr + long_var * 2;\n            if (file_ptr5 < int_pointer) {\n              ulong_var = long_var * 8 - 0x11;\n              if ((ulong_var < 0x18) || (char_ptr_ptr3 == (char **)((long)char_ptr + 0x18))) {\n                *char_ptr_ptr3 = *(char **)((long)char_ptr + 0x10);\n                if (((char **)((long)char_ptr + 0x18) < int_pointer) &&\n                   ((((char_ptr_ptr3[1] = *(char **)((long)char_ptr + 0x18),\n                      (char **)((long)char_ptr + 0x20) < int_pointer &&\n                      (char_ptr_ptr3[2] = *(char **)((long)char_ptr + 0x20),\n                      (char **)((long)char_ptr + 0x28) < int_pointer)) &&\n                     (char_ptr_ptr3[3] = *(char **)((long)char_ptr + 0x28),\n                     (char **)((long)char_ptr + 0x30) < int_pointer)) &&\n                    (char_ptr_ptr3[4] = *(char **)((long)char_ptr + 0x30),\n                    (char **)((long)char_ptr + 0x38) < int_pointer)))) {\n                  char_ptr_ptr3[5] = *(char **)((long)char_ptr + 0x38);\n                  char_pointer_pointer = char_ptr_ptr3 + 6;\n                  for (char_ptr_ptr2 = (char **)((long)char_ptr + 0x40); char_ptr_ptr2 < int_pointer;\n                      char_ptr_ptr2 = char_ptr_ptr2 + (ulong)byte_var * -2 + 1) {\n                    *char_pointer_pointer = *char_ptr_ptr2;\n                    char_pointer_pointer = char_pointer_pointer + (ulong)byte_var * -2 + 1;\n                  }\n                }\n              }\n              else {\n                undefined4_var3 = *(undefined4 *)((long)((long)char_ptr + 0x10) + 4);\n                undefined4_var1 = *(undefined4 *)((long)char_ptr + 0x18);\n                undefined4_var2 = *(undefined4 *)((long)((long)char_ptr + 0x18) + 4);\n                ulong_var2 = (ulong_var >> 3) + 1;\n                *(undefined4 *)char_ptr_ptr3 = *(undefined4 *)((long)char_ptr + 0x10);\n                *(undefined4 *)((long)char_ptr_ptr3 + 4) = undefined4_var3;\n                *(undefined4 *)(char_ptr_ptr3 + 1) = undefined4_var1;\n                *(undefined4 *)((long)char_ptr_ptr3 + 0xc) = undefined4_var2;\n                undefined4_var3 = *(undefined4 *)((long)((long)char_ptr + 0x20) + 4);\n                undefined4_var1 = *(undefined4 *)((long)char_ptr + 0x28);\n                undefined4_var2 = *(undefined4 *)((long)((long)char_ptr + 0x28) + 4);\n                ulong_var = ulong_var2 >> 1;\n                *(undefined4 *)(char_ptr_ptr3 + 2) = *(undefined4 *)((long)char_ptr + 0x20);\n                *(undefined4 *)((long)char_ptr_ptr3 + 0x14) = undefined4_var3;\n                *(undefined4 *)(char_ptr_ptr3 + 3) = undefined4_var1;\n                *(undefined4 *)((long)char_ptr_ptr3 + 0x1c) = undefined4_var2;\n                if (ulong_var != 2) {\n                  undefined4_var3 = *(undefined4 *)((long)((long)char_ptr + 0x30) + 4);\n                  undefined4_var1 = *(undefined4 *)((long)char_ptr + 0x38);\n                  undefined4_var2 = *(undefined4 *)((long)((long)char_ptr + 0x38) + 4);\n                  *(undefined4 *)(char_ptr_ptr3 + 4) = *(undefined4 *)((long)char_ptr + 0x30);\n                  *(undefined4 *)((long)char_ptr_ptr3 + 0x24) = undefined4_var3;\n                  *(undefined4 *)(char_ptr_ptr3 + 5) = undefined4_var1;\n                  *(undefined4 *)((long)char_ptr_ptr3 + 0x2c) = undefined4_var2;\n                  if (ulong_var != 3) {\n                    ulong_var3 = 3;\n                    do {\n                      ulong_var4 = ulong_var3 + 1;\n                      char_var3 = (char *)((long)char_ptr + 0x83) + ulong_var3 * 0x10 + -0x73;\n                      undefined4_var3 = *(undefined4 *)(char_var3 + 4);\n                      undefined4_var1 = *(undefined4 *)(char_var3 + 8);\n                      undefined4_var2 = *(undefined4 *)(char_var3 + 0xc);\n                      char_ptr_ptr2 = char_ptr_ptr3 + ulong_var3 * 2;\n                      *(undefined4 *)char_ptr_ptr2 = *(undefined4 *)char_var3;\n                      *(undefined4 *)((long)char_ptr_ptr2 + 4) = undefined4_var3;\n                      *(undefined4 *)(char_ptr_ptr2 + 1) = undefined4_var1;\n                      *(undefined4 *)((long)char_ptr_ptr2 + 0xc) = undefined4_var2;\n                      ulong_var3 = ulong_var4;\n                    } while (ulong_var4 != ulong_var);\n                  }\n                }\n                if ((ulong_var2 & 1) != 0) {\n                  char_ptr_ptr3[ulong_var2 & 0xfffffffffffffffe] =\n                       *(char **)((long)file_ptr5 + (ulong_var2 & 0xfffffffffffffffe) * 8);\n                }\n              }\n              char_ptr_ptr3 = char_ptr_ptr3 + long_var + -2;\n            }\n            file_ptr = (FILE *)(ulong)(int_var - 1);\n            *char_ptr_ptr3 = (char *)0x0;\n            char_ptr = (char *)current_file4;\n          }\nLAB_001065a2:\n          while( true ) {\n            uint_var = (uint)current_file4;\n            uint_var = getopt_long((ulong)file_ptr & 0xffffffff,char_ptr,file_ptr2,undefined_ptr_ptr,0);\n            char_ptr = (char *)file_ptr2;\n            if (uint_var == 0xffffffff) break;\n            if (((uint_var - 100 < 0x15) && ((0x117201UL >> ((ulong)(uint_var - 100) & 0x3f) & 1) != 0))\n               && (DAT_0010d64c != 0)) goto LAB_001067f7;\n            file_ptr3 = (FILE *)char_ptr;\n            if (uint_var < 0xcc) {\n                    /* WARNING: Could not recover jumptable at 0x001065eb. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              (*(code *)((long)(int *)pc_var43 + (long)((int *)pc_var43)[uint_var]))();\n              return;\n            }\nswitchD_00107462_caseD_1:\n            usage(0);\n            char_ptr = (char *)file_ptr3;\nswitchD_00107462_caseD_68:\n            _DAT_0010d658 = 1;\n          }\nLAB_00106680:\n          uint_var = DAT_0010d64c;\n          file_ptr2 = (FILE *)char_ptr;\n          if (DAT_0010d64c == 0) {\n            if (((DAT_0010d648 == 1) || (_DAT_0010d650 != 0)) ||\n               (((int)file_ptr <= optind || (optind < 1)))) {\n              uint_var = 0;\n              goto LAB_001066aa;\n            }\n            char_ptr = (char *)((long)char_ptr + (long)optind * 8 + -8);\n            uint_var = (int)file_ptr - (optind + -1);\n            file_ptr = (FILE *)(ulong)uint_var;\n            optind = 0;\n            if (1 < (int)uint_var) goto LAB_001063a3;\n            goto LAB_001065a2;\n          }\nLAB_001066aa:\n          current_file4 = (FILE *)((ulong)undefined8_var & 0xff);\n          uint_var = (uint)current_file4;\n          undefined_ptr_ptr = (undefined **)((int *)char_ptr + (long)optind * 2);\n          if (_DAT_0010d658 == 0) {\n            if (_DAT_0010d654 != 0) {\n              print_version(&DAT_0010807c);\n              goto LAB_00107591;\n            }\n            if (_DAT_0010d650 == 0) {\n              file_ptr3 = (FILE *)char_ptr;\n              if (*undefined_ptr_ptr == (undefined *)0x0) goto switchD_00107462_caseD_1;\n              if (DAT_0010d64c == 7) {\n                if (DAT_0010d648 == 0) {\n                  if (uint_var == 3) goto LAB_00106abc;\n                  if (uint_var != 0) goto LAB_00106700;\nLAB_00106eff:\n                  char_var3 = \"no operation specified\";\n                  goto LAB_00106803;\n                }\n                DAT_0010d64c = 2;\n                if (_DAT_0010d644 != 0) goto LAB_0010704f;\n              }\n              else if ((uint_var == 3) || (uint_var == 0)) {\n                if (DAT_0010d648 == 1) {\n                  undefined4_var3 = ranlib_only();\n                    \n                  xexit(undefined4_var3);\n                }\nLAB_00106abc:\n                if (uint_var == 0) goto LAB_00106eff;\n                if (_DAT_0010d644 != 0) {\nLAB_00106ad1:\n                  char_var3 = \"`u\\' is only meaningful with the `r\\' option.\";\n                  goto LAB_00106803;\n                }\n              }\n              else {\nLAB_00106700:\n                if (_DAT_0010d644 != 0) goto LAB_00107548;\n              }\nLAB_0010670d:\n              if (_DAT_0010d2d0 < 0) {\n                _DAT_0010d2d0 = 1;\n              }\nLAB_00106720:\n              char_ptr = (char *)0x0;\n              if (DAT_0010d640 != 0) {\n                DAT_0010d638 = (long)*undefined_ptr_ptr;\n                char_ptr = (char *)0x1;\n                char_var3 = \"missing position arg.\";\n                if (DAT_0010d638 == 0) goto LAB_00106803;\n              }\n              if (DAT_0010d634 != '\\0') {\n                char_var3 = \"`N\\' is only meaningful with the `x\\' and `d\\' options.\";\n                if ((DAT_0010d64c & 0xfffffffb) == 1) {\n                  int_var = (int)char_ptr;\n                  if (*(char **)((long)undefined_ptr_ptr + (long)int_var * 2 * 4) == (char *)0x0) {\n                    undefined8_var = dcgettext(0,\"`N\\' missing value.\",5);\n                    fatal(undefined8_var);\n                    uint_var = uint_var;\nLAB_00107548:\n                    if (uint_var == 2) {\nLAB_0010704f:\n                      char_var3 = \"`u\\' is not meaningful with the `D\\' option.\";\n                      if (_DAT_0010d2d0 < 1) goto code_r0x00107068;\n                      goto LAB_00106803;\n                    }\n                    goto LAB_00106ad1;\n                  }\n                  char_ptr = (char *)(ulong)(int_var + 1);\n                  long_var = strtol(*(char **)((long)undefined_ptr_ptr + (long)int_var * 2 * 4),(char **)0x0,10)\n                  ;\n                  char_var3 = \"Value for `N\\' must be positive.\";\n                  _DAT_0010d630 = (int)long_var;\n                  if (0 < _DAT_0010d630) goto LAB_0010673c;\n                }\n                goto LAB_00106803;\n              }\nLAB_0010673c:\n              long_var = (long)(int)char_ptr;\n              file_ptr2 = (FILE *)char_ptr;\n              if (*(long *)(int *)((long)undefined_ptr_ptr + long_var * 2 * 4) == 0)\n              goto switchD_00107462_caseD_1;\n              file_ptr2 = (FILE *)((long)undefined_ptr_ptr + (long_var + 1) * 2 * 4);\n              if (*(FILE **)file_ptr2 == (FILE *)0x0) {\n                pc_var43 = (char *)0x0;\n                file_ptr2 = (FILE *)0x0;\n              }\n              else if (*(long *)((long)undefined_ptr_ptr + (long_var + 2) * 2 * 4) == 0) {\n                pc_var43 = (char *)0x1;\n              }\n              else if (*(long *)((long)undefined_ptr_ptr + (long_var + 3) * 2 * 4) == 0) {\n                pc_var43 = (char *)0x2;\n              }\n              else if (*(long *)((long)undefined_ptr_ptr + (long_var + 4) * 2 * 4) == 0) {\n                pc_var43 = (char *)0x3;\n              }\n              else if (*(long *)((long)undefined_ptr_ptr + (long_var + 5) * 2 * 4) == 0) {\n                pc_var43 = (char *)0x4;\n              }\n              else {\n                file_ptr = (FILE *)0x5;\n                do {\n                  pc_var43 = (char *)file_ptr;\n                  file_ptr = (FILE *)((long)(int *)pc_var43 + 1);\n                } while (*(long *)((int *)((long)undefined_ptr_ptr + long_var * 2 * 4) + (long)file_ptr * 2) !=\n                         0);\n              }\n              undefined8_pointer = (undefined8 *)open_inarch();\n              file_ptr = file_ptr2;\n              if (DAT_0010d64c == 5) {\n                char_var3 = \"`x\\' cannot be used on thin archives.\";\n                if ((*(byte *)((long)undefined8_pointer + 0x49) & 0x10) == 0) {\n                  char_ptr = (char *)file_ptr2;\n                  if (DAT_0010d628 != (char *)0x0) goto LAB_00106d5c;\nswitchD_00106ed8_caseD_5:\n                  map_over_members(undefined8_pointer,extract_file,char_ptr,(ulong)pc_var43 & 0xffffffff);\n                  goto LAB_0010696c;\n                }\n                goto LAB_00106803;\n              }\n              if (DAT_0010d628 != (char *)0x0) {\nLAB_00106d5c:\n                size_var = strlen(DAT_0010d628);\n                char_ptr = \"__.LIBDEP\";\n                char_ptr = (char *)(size_var + 1);\n                DAT_0010d620 = bfd_create(\"__.LIBDEP\",undefined8_pointer);\n                if (DAT_0010d620 == 0) {\n                  char_var3 = \"Cannot create libdeps record.\";\n                }\n                else {\n                  long_var = bfd_find_target(\"binary\",DAT_0010d620);\n                  char_var3 = \"Cannot set libdeps record type to binary.\";\n                  if (long_var != 0) {\n                    char_var = bfd_set_format(DAT_0010d620,1,5);\n                    char_var3 = \"Cannot set libdeps object format.\";\n                    if (char_var == '\\0') goto LAB_00106803;\n                    char_var = bfd_make_writable(DAT_0010d620,\"Cannot set libdeps object format.\",5);\n                    char_var3 = \"Cannot make libdeps object writable.\";\n                    if (char_var == '\\0') goto LAB_00106803;\n                    file_ptr3 = (FILE *)bfd_bwrite(DAT_0010d628,char_ptr,DAT_0010d620);\n                    char_var3 = \"Cannot write libdeps record.\";\n                    if (file_ptr3 != (FILE *)char_ptr) goto LAB_00106803;\n                    char_var = bfd_make_readable(DAT_0010d620,\"Cannot write libdeps record.\",5);\n                    char_var3 = \"Cannot make libdeps object readable.\";\n                    if (char_var == '\\0') goto LAB_00106803;\n                    long_var = bfd_find_target(\"plugin\",DAT_0010d620,5);\n                    char_var3 = \"Cannot reset libdeps record type.\";\n                    if (long_var == 0) goto LAB_00106803;\n                    int_var = (int)pc_var43;\n                    undefined8_var = (FILE *)((long)(int_var + 2) * 8);\n                    char_ptr = (char *)xmalloc(undefined8_var,\"Cannot reset libdeps record type.\");\n                    if (int_var == 0) {\n                      long_var = 0;\n                    }\n                    else {\n                      undefined4_var3 = *(undefined4 *)&file_ptr2->field_0x4;\n                      *(int *)char_ptr = file_ptr2->flags;\n                      *(undefined4 *)((long)char_ptr + 4) = undefined4_var3;\n                      long_var = 8;\n                      char_ptr_ptr2 = (char **)((long)char_ptr + 8);\n                      for (pc_var43 = undefined8_var[-1]._unused2 + 4; pc_var43 != (char *)0x0;\n                          pc_var43 = pc_var43 + -1) {\n                        *(undefined *)char_ptr_ptr2 = *(undefined *)&file_ptr2->flags;\n                        file_ptr2 = (FILE *)((long)file_ptr2 + (ulong)byte_var * -2 + 1);\n                        char_ptr_ptr2 = (char **)((long)char_ptr_ptr2 + (ulong)byte_var * -2 + 1);\n                      }\n                    }\n                    *(char **)((long)(char **)char_ptr + long_var) = \"__.LIBDEP\";\n                    pc_var43 = (char *)(ulong)(int_var + 1);\n                    *(undefined8 *)\n                     (((FILE *)((long)char_ptr + -0xd8))->_unused2 + 0xc + (long)undefined8_var) = 0;\n                    switch(DAT_0010d64c) {\n                    case 1:\n                      goto switchD_00106ed8_caseD_1;\n                    case 2:\n                    case 7:\n                      break;\n                    case 3:\n                      goto switchD_00106ed8_caseD_3;\n                    case 4:\n                      goto switchD_00106ed8_caseD_4;\n                    case 5:\n                      goto switchD_00106ed8_caseD_5;\n                    case 6:\n                      file_ptr2 = (FILE *)char_ptr;\n                      if (_DAT_0010d610 == 0) goto LAB_00106afb;\n                      break;\n                    default:\n                      goto switchD_001067e8_caseD_5;\n                    }\n                    goto switchD_00106ed8_caseD_2;\n                  }\n                }\n                goto LAB_00106803;\n              }\n              switch(DAT_0010d64c) {\n              case 1:\n                char_ptr = (char *)file_ptr2;\n                if (file_ptr2 == (FILE *)0x0) break;\nswitchD_00106ed8_caseD_1:\n                file_ptr = (FILE *)0x0;\n                goto LAB_00106b89;\n              case 2:\n              case 7:\nswitchD_001067e8_caseD_2:\n                char_ptr = (char *)file_ptr2;\n                if ((file_ptr2 != (FILE *)0x0) || (0 < DAT_0010d648)) {\nswitchD_00106ed8_caseD_2:\n                  replace_members(undefined8_pointer,char_ptr,DAT_0010d64c == 7);\n                  goto LAB_0010696c;\n                }\n                break;\n              case 3:\n                char_ptr = (char *)file_ptr2;\nswitchD_00106ed8_caseD_3:\n                map_over_members(undefined8_pointer,print_descr,char_ptr,(ulong)pc_var43 & 0xffffffff);\n                goto LAB_0010696c;\n              case 4:\n                char_ptr = (char *)file_ptr2;\nswitchD_00106ed8_caseD_4:\n                map_over_members(undefined8_pointer,print_contents,char_ptr,(ulong)pc_var43 & 0xffffffff);\n                goto LAB_0010696c;\n              default:\nswitchD_001067e8_caseD_5:\n                char_var3 = \"internal error -- this option not implemented\";\n                goto LAB_00106803;\n              case 6:\n                if (_DAT_0010d610 != 0) goto switchD_001067e8_caseD_2;\n                if (file_ptr2 == (FILE *)0x0) break;\nLAB_00106afb:\n                file_ptr = (FILE *)(undefined8_pointer + 0x1e);\n                do {\n                  current_file4 = file_ptr;\n                  if (*(FILE **)file_ptr2 == (FILE *)0x0) {\nLAB_00106b9f:\n                    write_archive(undefined8_pointer);\n                    goto LAB_0010696c;\n                  }\n                  while( true ) {\n                    long_pointer = *(long **)current_file4;\n                    char_ptr = *(char **)file_ptr2;\n                    if (long_pointer == (long *)0x0) {\n                      undefined8_var = *undefined8_pointer;\n                      undefined8_var2 = dcgettext(0,\"no entry %s in archive %s!\",5);\n                      fatal(undefined8_var2,char_ptr,undefined8_var);\n                      pc_var43 = (char *)0x0;\n                      goto LAB_00107293;\n                    }\n                    long_var = *long_pointer;\n                    undefined8_var = normalize(char_ptr,undefined8_pointer);\n                    int_var = filename_cmp(undefined8_var,long_var);\n                    if (int_var == 0) break;\n                    current_file4 = (FILE *)(*(long **)current_file4 + 0x1e);\n                  }\n                  *(long **)current_file4 = (long *)long_pointer[0x1e];\n                  long_ptr_ptr = (long **)get_pos_bfd(file_ptr,3,0);\n                  bool_var = DAT_0010d60c != 0;\n                  long_pointer = *long_ptr_ptr;\n                  *long_ptr_ptr = long_pointer;\n                  long_pointer[0x1e] = (long)long_pointer;\n                  if (bool_var) {\n                    printf(\"m - %s\\n\",*(FILE **)file_ptr2);\n                  }\n                  file_ptr2 = (FILE *)&file_ptr2->read_ptr;\n                } while( true );\n              }\n              goto LAB_00106d4e;\n            }\n            if (-1 < _DAT_0010d2d0) goto LAB_0010755f;\n          }\n          else {\nLAB_00107591:\n            usage(1);\n          }\n          _DAT_0010d2d0 = 1;\nLAB_0010755f:\n          int_var = fileno(file8);\n          _DAT_0010d608 = isatty(int_var);\n          yyparse_isra_0();\nLAB_0010696c:\n                    \n          xexit(0);\n        }\n        undefined4_var3 = bfd_get_error();\n        file_ptr2 = (FILE *)bfd_errmsg(undefined4_var3);\n        undefined8_var = dcgettext(0,\"can\\'t set BFD default target to `%s\\': %s\",5);\n        int_var = fatal(undefined8_var,\"x86_64-pc-linux-gnu\",file_ptr2);\nLAB_0010751b:\n        if (DAT_0010d64c == 0) {\nLAB_00107447:\n          undefined_ptr_ptr = (undefined **)char_var3;\n          file_ptr3 = (FILE *)char_ptr;\n          switch(int_var) {\n          case 0:\n            goto switchD_00107462_caseD_0;\n          default:\n            goto switchD_00107462_caseD_1;\n          case 0x44:\n            _DAT_0010d2d0 = 1;\n            goto LAB_001065a2;\n          case 0x4d:\n            _DAT_0010d650 = 1;\n            goto LAB_001065a2;\n          case 0x4e:\n            DAT_0010d634 = '\\x01';\n            goto LAB_001065a2;\n          case 0x4f:\n            _DAT_0010d5fc = 1;\n            goto LAB_001065a2;\n          case 0x50:\n            DAT_0010d5f9 = 1;\n            goto LAB_001065a2;\n          case 0x53:\n            DAT_0010d648 = -1;\n            goto LAB_001065a2;\n          case 0x54:\n            DAT_0010d5f8 = 1;\n            goto LAB_001065a2;\n          case 0x55:\n            _DAT_0010d2d0 = 0;\n            goto LAB_001065a2;\n          case 0x56:\n            _DAT_0010d654 = 1;\n            goto LAB_001065a2;\n          case 0x61:\n            DAT_0010d640 = 2;\n            goto LAB_001065a2;\n          case 0x62:\n          case 0x69:\n            DAT_0010d640 = 1;\n            goto LAB_001065a2;\n          case 99:\n            _DAT_0010d610 = 1;\n            goto LAB_001065a2;\n          case 100:\n            DAT_0010d64c = 1;\n            DAT_0010d604 = 1;\n            goto LAB_001065a2;\n          case 0x66:\n            DAT_0010d5fa = 1;\n            goto LAB_001065a2;\n          case 0x68:\n            goto switchD_00107462_caseD_68;\n          case 0x6c:\n            if (DAT_0010d628 == (char *)0x0) {\n              DAT_0010d628 = arg2;\n              goto LAB_001065a2;\n            }\nLAB_00107293:\n            uint_var = (uint)current_file4;\n            char_var3 = \"libdeps specified more than once\";\n            char_ptr = (char *)file_ptr2;\n            break;\n          case 0x6d:\n            DAT_0010d64c = 6;\n            DAT_0010d604 = 1;\n            goto LAB_001065a2;\n          case 0x6f:\n            _DAT_0010d600 = 1;\n            goto LAB_001065a2;\n          case 0x70:\n            DAT_0010d64c = 4;\n            goto LAB_001065a2;\n          case 0x71:\n            DAT_0010d64c = 7;\n            DAT_0010d604 = 1;\n            goto LAB_001065a2;\n          case 0x72:\n            DAT_0010d64c = 2;\n            DAT_0010d604 = 1;\n            goto LAB_001065a2;\n          case 0x73:\n            DAT_0010d648 = 1;\n            goto LAB_001065a2;\n          case 0x74:\n            DAT_0010d64c = 3;\n            goto LAB_001065a2;\n          case 0x75:\n            _DAT_0010d644 = 1;\n            goto LAB_001065a2;\n          case 0x76:\n            DAT_0010d60c = 1;\n            goto LAB_001065a2;\n          case 0x78:\n            DAT_0010d64c = 5;\n            goto LAB_001065a2;\n          case 0xc9:\n            bfd_plugin_set_plugin(arg2);\n            goto LAB_001065a2;\n          case 0xca:\n            DAT_0010d5f0 = arg2;\n            goto LAB_001065a2;\n          case 0xcb:\n            DAT_0010d5e8 = arg2;\n            goto LAB_001065a2;\n          }\n          goto LAB_00106803;\n        }\nLAB_001067f7:\n        char_var3 = \"two different operation options specified\";\n        char_ptr = (char *)file_ptr2;\nLAB_00106803:\n        undefined8_var = dcgettext(0,char_var3,5);\n        fatal(undefined8_var);\nLAB_00106814:\n        int_var = (int)char_ptr;\n        file_ptr3 = (FILE *)xmalloc(8);\n        *(long **)file_ptr3 = (long *)0x0;\n        if ((FILE *)pc_var43 == argv) {\nLAB_00106834:\n          if (*(long **)pc_var43 == (long *)0x0) {\n            int_var = 0;\n          }\n          else {\n            long_var = 1;\n            do {\n              int_var = (int)long_var;\n              long_var3 = long_var * 2;\n              long_var = long_var + 1;\n            } while (*(long *)((int *)pc_var43 + long_var3) != 0);\n          }\n          file_ptr2 = (FILE *)xmalloc((long)(int_var + 1) << 3);\n          long_pointer = *(long **)pc_var43;\n          long_var = 0;\n          while (long_pointer != (long *)0x0) {\n            undefined8_var = xstrdup();\n            *(undefined8 *)((long)&file_ptr2->flags + long_var) = undefined8_var;\n            long_pointer = *(long **)((char *)((long)pc_var43 + 0x83) + long_var + -0x7b);\n            long_var = long_var + 8;\n          }\n          *(undefined8 *)((long)&file_ptr2->flags + long_var) = 0;\nLAB_0010610a:\n          int_var = (int)char_ptr;\n          pc_var43 = (char *)file_ptr2;\n          if (*(long **)file_ptr3 == (long *)0x0) goto LAB_00106a80;\n          long_var = 0;\n          do {\n            long_var2 = long_var + 1;\n            long_var3 = long_var * 8;\n            long_var = long_var2;\n          } while (*(long *)(file_ptr3->shortbuf + long_var3 + -0x7b) != 0);\n          size_var = long_var2 * 8;\n        }\n        else {\nLAB_00106a80:\n          long_var2 = 0;\n          size_var = 0;\n        }\n        long_var = (long)char_ptr * 2;\n        char_ptr = (char *)((long)(char **)char_ptr + long_var2);\n        free(*(void **)((int *)pc_var43 + long_var));\n        file_ptr2 = (FILE *)xrealloc(pc_var43,(long_var2 + 1 + (long)int_var) * 8);\n        uint_var = int_var + -1 + (int)long_var2;\n        char_ptr = (char *)(ulong)uint_var;\n        memmove(&file_ptr2->flags + (long)char_ptr * 2,\n                (void *)((long)&file_ptr2->read_ptr + (long)undefined8_var),\n                (long)(int)(int_var - uint_var) << 3);\n        memcpy((void *)((long)&undefined8_var->flags + (long)&file_ptr2->flags),file_ptr3,size_var);\n        free(file_ptr3);\n        free(byte_ptr);\n        fclose(file_ptr);\n        uint_var = (int)file_ptr5 + 1;\n        current_file4 = undefined8_var;\n        pc_var43 = (char *)file_ptr2;\n        undefined8_var = file_ptr3;\n        if ((int)uint_var < (int)uint_var) goto LAB_001061ce;\n      } while( true );\n    }\n    uint_var = uint_var + 1;\n    file_ptr5 = current_file4;\nLAB_001061ce:\n    current_file4 = (FILE *)(ulong)uint_var;\n  } while( true );\nswitchD_00107462_caseD_0:\n  int_var = getopt_long((ulong)file_ptr & 0xffffffff,char_ptr,file_ptr2,\"x86_64-pc-linux-gnu\");\n  char_ptr = (char *)file_ptr2;\n  if (int_var == -1) goto LAB_00106680;\n  if ((0x14 < int_var - 100U) || ((0x117201UL >> ((byte)(int_var - 100U) & 0x3f) & 1) == 0))\n  goto LAB_00107447;\n  goto LAB_0010751b;\ncode_r0x00107068:\n  if (_DAT_0010d2d0 != 0) goto code_r0x0010706e;\n  goto LAB_00106720;\ncode_r0x0010706e:\n  undefined8_var = dcgettext(0,\"`u\\' modifier ignored since `D\\' is the default (see `U\\')\",5);\n  non_fatal(undefined8_var);\n  goto LAB_0010670d;\nLAB_00106b89:\n  if (*(FILE **)char_ptr == (FILE *)0x0) {\n    if ((char)file_ptr != '\\0') goto LAB_00106b9f;\nLAB_00106d4e:\n    DAT_0010d618 = 0;\n    goto LAB_0010696c;\n  }\n  int_var2 = 0;\n  int_var = strcmp((char *)*(FILE **)char_ptr,\"__.SYMDEF\");\n  undefined8_pointer = undefined8_pointer;\n  if (int_var == 0) {\n    *(byte *)((long)undefined8_pointer + 0x49) = *(byte *)((long)undefined8_pointer + 0x49) & 0xf7;\n    DAT_0010d648 = -1;\n  }\n  else {\n    while( true ) {\n      long_pointer = undefined8_pointer + 0x1e;\n      if ((undefined8 *)*long_pointer == (undefined8 *)0x0) break;\n      undefined8_var = *(undefined8 *)*long_pointer;\n      undefined8_var2 = normalize(*(FILE **)char_ptr,undefined8_pointer);\n      int_var = filename_cmp(undefined8_var2,undefined8_var);\n      if ((int_var == 0) &&\n         ((DAT_0010d634 == '\\0' || (int_var2 = int_var2 + 1, int_var2 == _DAT_0010d630)))) {\n        if (DAT_0010d60c != 0) {\n          printf(\"d - %s\\n\",*(FILE **)char_ptr);\n        }\n        *long_pointer = *(long *)(*long_pointer + 0xf0);\n        file_ptr = current_file4;\n        goto LAB_00106d38;\n      }\n      undefined8_pointer = (undefined8 *)*long_pointer;\n    }\n    if (DAT_0010d60c != 0) {\n      file_ptr2 = *(FILE **)char_ptr;\n      char_ptr = (char *)dcgettext(0,\"No member named `%s\\'\\n\",5);\n      printf(char_ptr,file_ptr2);\n    }\n  }\nLAB_00106d38:\n  char_ptr = (char *)((long)char_ptr + 8);\n  goto LAB_00106b89;\n}\n\n",
            "current_name": "parse_and_process_archive_files_00105db0",
            "entrypoint": "0x00105db0",
            "imported": false,
            "improved": true,
            "renaming": {
                "DhHUvVt": "options",
                "FUN_00105db0": "parse_and_process_archive_files_00105db0",
                "_IO_read_base": "read_base",
                "_IO_read_end": "read_end",
                "_IO_read_ptr": "read_ptr",
                "_IO_write_base": "write_base",
                "_IO_write_ptr": "write_ptr",
                "__ptr": "byte_ptr",
                "__xexit_cleanup": "exit_cleanup",
                "_flags": "flags",
                "_optarg": "arg2",
                "_optind": "optind",
                "_shortbuf": "shortbuf",
                "_stderr": "file6",
                "_stdin": "file8",
                "bVar13": "byte_var2",
                "bVar3": "byte_var",
                "bVar47": "bool_var",
                "bVar48": "byte_var",
                "bVar8": "bool_var1",
                "bVar9": "bool_var2",
                "cVar14": "char_var",
                "extraout_EDX": "uint_var",
                "iVar15": "int_var",
                "iVar45": "int_var2",
                "lVar24": "long_var",
                "lVar29": "long_pointer_pointer",
                "lVar34": "long_var2",
                "lVar35": "long_var3",
                "local_10": "local_void",
                "local_100": "long_var",
                "local_108": "size_var",
                "local_110": "char_pointer_pointer",
                "local_118": "byte_ptr",
                "local_128": "file_ptr5",
                "local_130": "undefined8_var",
                "local_b0": "uint_var",
                "local_c8": "undefined_var",
                "optarg": "opt_arg",
                "optind": "opt_index",
                "pFVar18": "file_ptr",
                "pFVar22": "file_ptr2",
                "pFVar28": "file_ptr3",
                "param_1": "argc",
                "param_2": "argv",
                "pbVar1": "byte_pointer",
                "pbVar33": "byte_ptr3",
                "pbVar38": "byte_ptr",
                "pcVar23": "char_pointer",
                "pcVar39": "char_var3",
                "pcVar43": "pc_var43",
                "pcVar46": "char_ptr",
                "piVar11": "int_pointer",
                "plVar21": "long_pointer",
                "plVar29": "ptr_ptr_long",
                "plVar4": "long_pointer",
                "ppcVar10": "char_pointer_pointer",
                "ppcVar31": "char_ptr_ptr2",
                "ppcVar32": "char_ptr_ptr3",
                "pplVar29": "long_ptr_ptr",
                "ppuVar36": "undefined_ptr_ptr",
                "puVar12": "undefined_pointer",
                "puVar2": "uint_pointer",
                "puVar26": "undefined8_pointer",
                "puVar5": "undefined8_pointer",
                "sVar19": "size_var",
                "sVar20": "size_var2",
                "uStack_c5": "undefined5_var",
                "uStack_c6": "undefined_var",
                "uVar16": "uint_var",
                "uVar17": "undefined4_var3",
                "uVar25": "ulong_var",
                "uVar27": "undefined8_var",
                "uVar30": "undefined8_var2",
                "uVar37": "uint_var",
                "uVar40": "ulong_var2",
                "uVar41": "ulong_var3",
                "uVar42": "ulong_var4",
                "uVar44": "uint_var",
                "uVar6": "undefined4_var1",
                "uVar7": "undefined4_var2",
                "unaff_R12": "current_file4",
                "unaff_RBP": "char_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001075e0": {
            "additional_data": {
                "FUN_001075e0": {
                    "display_version_info": 1,
                    "print_binutils_version": 1,
                    "print_gnu_info": 2,
                    "print_info": 1,
                    "print_program_info": 2,
                    "print_software_info": 1,
                    "print_version_info": 21,
                    "print_version_information": 2
                },
                "param_1": {
                    "os_name": 1,
                    "program_name": 2,
                    "tool_name": 2,
                    "tool_version": 1,
                    "version": 17,
                    "version_num": 1,
                    "version_number": 1,
                    "version_string": 6
                },
                "pcVar1": {
                    "copy_right_message": 1,
                    "copy_right_msg": 2,
                    "copy_right_string": 1,
                    "copy_right_text": 1,
                    "copyright_message": 5,
                    "copyright_msg": 2,
                    "copyright_string": 2,
                    "copyright_text": 3,
                    "display_text": 1,
                    "header_text": 1,
                    "license_text": 2,
                    "localized_message": 1,
                    "message": 8,
                    "translated_copyright": 1
                }
            },
            "called": [
                "FUN_001021a0",
                "FUN_00102500",
                "FUN_00102170"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid print_version_info_001075e0(undefined8 version)\n\n{\n  char *message;\n  \n  printf(\"GNU %s %s\\n\",version,\"(GNU Binutils for Debian) 2.40\");\n  message = (char *)dcgettext(0,\"Copyright (C) 2023 Free Software Foundation, Inc.\\n\",5);\n  printf(message);\n  message = (char *)dcgettext(0,\n                             \"This program is free software; you may redistribute it under the terms of\\nthe GNU General Public License version 3 or (at your option) any later version.\\nThis program has absolutely no warranty.\\n\"\n                             ,5);\n  printf(message);\n                    \n  exit(0);\n}\n\n",
            "current_name": "print_version_info_001075e0",
            "entrypoint": "0x001075e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001075e0": "print_version_info_001075e0",
                "param_1": "version",
                "pcVar1": "message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107640": {
            "additional_data": {
                "": {
                    "": 1
                },
                "DAT_FUN_00107640": {
                    "dat": 1
                },
                "FUN_00107640": {
                    "get_default_value": 4,
                    "get_return_value": 2,
                    "get_zero": 2,
                    "initialize": 12,
                    "initialize_application": 4,
                    "initialize_data": 2,
                    "initialize_data_structure": 1,
                    "initialize_flag": 1,
                    "initialize_program": 1,
                    "initialize_result": 1,
                    "main": 1
                },
                "PTR_FUN_00107640": {
                    "ptr": 1
                },
                "original_parameter_name_1": {
                    "parameter_1": 1
                },
                "original_variable_name_1": {
                    "result": 1
                },
                "result": {
                    "return_value": 1
                },
                "return": {
                    "exit_code": 1,
                    "result": 2
                },
                "undefined8": {
                    "int": 1,
                    "uint64_t": 3,
                    "unsigned_long": 1,
                    "void": 8
                }
            },
            "called": [],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid initialize_application_00107640(void)\n\n{\n  result 0;\n}\n\n",
            "current_name": "initialize_application_00107640",
            "entrypoint": "0x00107640",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107640": "initialize_application_00107640",
                "return": "result",
                "undefined8": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107650": {
            "additional_data": {
                "DAT_0010d648": {
                    "archive_initialized": 1
                },
                "FUN_0010284b": {
                    "open_archive": 1,
                    "open_inarch": 1,
                    "xexit": 3
                },
                "FUN_001052a0": {
                    "get_file_size": 5
                },
                "FUN_00105300": {
                    "open_archive": 1,
                    "open_file_in_arch": 1,
                    "open_in_archive": 1,
                    "open_inarch": 1,
                    "write_inarch": 1
                },
                "FUN_001058b0": {
                    "exit_program": 1,
                    "write_archive": 3,
                    "write_to_archive": 1
                },
                "FUN_00107650": {
                    "archive_or_exit": 1,
                    "check_and_write_archive": 7,
                    "check_and_write_archived_file": 1,
                    "check_and_write_to_archive": 1,
                    "check_archive_file": 1,
                    "check_file_and_write_to_archive": 1,
                    "check_file_size_and_write_archive": 1,
                    "extract_and_write_archive_data": 1,
                    "extract_data_from_file": 1,
                    "process_archive_file": 3,
                    "process_file": 13
                },
                "get_file_size": {
                    "get_filesize": 1
                },
                "lVar2": {
                    "file_size": 31
                },
                "open_inarch": {
                    "open_archive_file": 1
                },
                "param_1": {
                    "file_name": 4,
                    "file_path": 18,
                    "filename": 9
                },
                "param_2": {
                    "archive_data": 1,
                    "archive_params": 1
                },
                "uVar1": {
                    "is_success": 1,
                    "result": 18,
                    "return_value": 8,
                    "status": 1,
                    "success": 2,
                    "success_flag": 1
                },
                "write_archive": {
                    "write_to_archive": 1
                },
                "xexit": {
                    "exit_program": 1
                }
            },
            "called": [
                "FUN_001052a0",
                "FUN_0010284b",
                "FUN_00102480",
                "FUN_00105300",
                "FUN_001058b0"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nundefined8 process_archive_file_00107650(undefined8 file_path)\n\n{\n  undefined8 result;\n  long file_size;\n  \n  file_size = get_filesize();\n  if (file_size < 1) {\n    result = 1;\n  }\n  else {\n    DAT_0010d648 = 1;\n    file_size = open_archive_file(file_path,0);\n    if (file_size == 0) {\n                    \n      exit_program(1);\n    }\n    write_to_archive(file_size);\n    result = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "process_archive_file_00107650",
            "entrypoint": "0x00107650",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107650": "process_archive_file_00107650",
                "get_file_size": "get_filesize",
                "lVar2": "file_size",
                "open_inarch": "open_archive_file",
                "param_1": "file_path",
                "uVar1": "result",
                "write_archive": "write_to_archive",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107690": {
            "additional_data": {
                "FUN_00107690": {
                    "execute_report_and_exit": 8,
                    "process_data": 2,
                    "process_data_and_exit": 1,
                    "process_report_and_exit": 2,
                    "report_and_exit": 14,
                    "reverse_and_report": 2
                },
                "FUN_001078c0": {
                    "print_and_exit": 1
                },
                "in_AL": {
                    "condition": 4,
                    "condition_flag": 3,
                    "condition_met": 1,
                    "enable_condition": 1,
                    "flag": 11,
                    "input_char": 1,
                    "input_flag": 3,
                    "is_condition_met": 1,
                    "is_condition_true": 1,
                    "is_non_null": 1,
                    "is_non_zero": 1,
                    "is_valid": 1
                },
                "local_18": {
                    "arg8": 2,
                    "arg8_copy": 2,
                    "condition_argument8": 1,
                    "data8_copy": 1,
                    "ex_param_8": 1,
                    "input8": 1,
                    "input_8_copy": 1,
                    "input_param8_copy": 1,
                    "local_argument8": 1,
                    "local_eighth_param": 1,
                    "local_input8": 1,
                    "local_input_8": 1,
                    "local_param_8": 1,
                    "local_report_param8": 1,
                    "local_var17": 1,
                    "local_var18": 1,
                    "param8": 1,
                    "param8_copy": 1,
                    "param8_local": 1,
                    "param_8": 1,
                    "param_8_local": 1,
                    "processed8": 1,
                    "report_param8": 2,
                    "report_param_8_copy": 1,
                    "temp_var8": 1,
                    "value_8": 1
                },
                "local_28": {
                    "arg7": 2,
                    "arg7_copy": 2,
                    "condition_argument7": 1,
                    "data7_copy": 1,
                    "ex_param_7": 1,
                    "input7": 1,
                    "input_7_copy": 1,
                    "input_param7_copy": 1,
                    "local_argument7": 1,
                    "local_input7": 1,
                    "local_input_7": 1,
                    "local_param_7": 1,
                    "local_report_param7": 1,
                    "local_seventh_param": 1,
                    "local_var16": 1,
                    "local_var28": 1,
                    "param7": 1,
                    "param7_copy": 1,
                    "param7_local": 1,
                    "param_7": 1,
                    "param_7_local": 1,
                    "processed7": 1,
                    "report_param7": 2,
                    "report_param_7_copy": 1,
                    "temp_var7": 1,
                    "value_7": 1
                },
                "local_38": {
                    "arg6": 2,
                    "arg6_copy": 2,
                    "condition_argument6": 1,
                    "data6_copy": 1,
                    "ex_param_6": 1,
                    "input6": 1,
                    "input_6_copy": 1,
                    "input_param6_copy": 1,
                    "local_argument6": 1,
                    "local_input6": 1,
                    "local_input_6": 1,
                    "local_param_6": 1,
                    "local_report_param6": 1,
                    "local_sixth_param": 1,
                    "local_var15": 1,
                    "local_var38": 1,
                    "param6": 1,
                    "param6_copy": 1,
                    "param6_local": 1,
                    "param_6": 1,
                    "param_6_local": 1,
                    "processed6": 1,
                    "report_param6": 2,
                    "report_param_6_copy": 1,
                    "temp_var6": 1,
                    "value_6": 1
                },
                "local_48": {
                    "arg5": 2,
                    "arg5_copy": 2,
                    "condition_argument5": 1,
                    "data5_copy": 1,
                    "ex_param_5": 1,
                    "input5": 1,
                    "input_5_copy": 1,
                    "input_param5_copy": 1,
                    "local_argument5": 1,
                    "local_fifth_param": 1,
                    "local_input5": 1,
                    "local_input_5": 1,
                    "local_param_5": 1,
                    "local_report_param5": 1,
                    "local_var14": 1,
                    "local_var48": 1,
                    "param5": 1,
                    "param5_copy": 1,
                    "param5_local": 1,
                    "param_5": 1,
                    "param_5_local": 1,
                    "processed5": 1,
                    "report_param5": 2,
                    "report_param_5_copy": 1,
                    "temp_var5": 1,
                    "value_5": 1
                },
                "local_58": {
                    "arg4": 2,
                    "arg4_copy": 2,
                    "condition_argument4": 1,
                    "data4_copy": 1,
                    "ex_param_4": 1,
                    "input4": 1,
                    "input_4_copy": 1,
                    "input_param4_copy": 1,
                    "local_argument4": 1,
                    "local_fourth_param": 1,
                    "local_input4": 1,
                    "local_input_4": 1,
                    "local_param_4": 1,
                    "local_report_param4": 1,
                    "local_var13": 1,
                    "local_var58": 1,
                    "param4": 1,
                    "param4_copy": 1,
                    "param4_local": 1,
                    "param_4": 1,
                    "param_4_local": 1,
                    "processed4": 1,
                    "report_param4": 2,
                    "report_param_4_copy": 1,
                    "temp_var4": 1,
                    "value_4": 1
                },
                "local_68": {
                    "arg3": 2,
                    "arg3_copy": 2,
                    "condition_argument3": 1,
                    "data3_copy": 1,
                    "ex_param_3": 1,
                    "input3": 1,
                    "input_3_copy": 1,
                    "input_param3_copy": 1,
                    "local_argument3": 1,
                    "local_input3": 1,
                    "local_input_3": 1,
                    "local_param_3": 1,
                    "local_report_param3": 1,
                    "local_third_param": 1,
                    "local_var12": 1,
                    "local_var68": 1,
                    "param3": 1,
                    "param3_copy": 1,
                    "param3_local": 1,
                    "param_3": 1,
                    "param_3_local": 1,
                    "processed3": 1,
                    "report_param3": 2,
                    "report_param_3_copy": 1,
                    "temp_var3": 1,
                    "value_3": 1
                },
                "local_78": {
                    "arg2": 2,
                    "arg2_copy": 2,
                    "condition_argument2": 1,
                    "data2_copy": 1,
                    "ex_param_2": 1,
                    "input2": 1,
                    "input_2_copy": 1,
                    "input_param2_copy": 1,
                    "local_argument2": 1,
                    "local_input2": 1,
                    "local_input_2": 1,
                    "local_param_2": 1,
                    "local_report_param2": 1,
                    "local_second_param": 1,
                    "local_var11": 1,
                    "local_var78": 1,
                    "param2": 1,
                    "param2_copy": 1,
                    "param2_local": 1,
                    "param_2": 1,
                    "param_2_local": 1,
                    "processed2": 1,
                    "report_param2": 2,
                    "report_param_2_copy": 1,
                    "temp_var2": 1,
                    "value_2": 1
                },
                "local_88": {
                    "arg1": 2,
                    "arg1_copy": 2,
                    "condition_argument1": 1,
                    "data1_copy": 1,
                    "ex_param_1": 1,
                    "input1": 1,
                    "input_1_copy": 1,
                    "input_param1_copy": 1,
                    "local_argument1": 1,
                    "local_first_param": 1,
                    "local_input1": 1,
                    "local_input_1": 1,
                    "local_param_1": 1,
                    "local_report_param1": 1,
                    "local_var10": 1,
                    "local_var88": 1,
                    "local_variable_8": 1,
                    "param1": 1,
                    "param1_copy": 1,
                    "param1_local": 1,
                    "param_1": 1,
                    "param_1_local": 1,
                    "processed1": 1,
                    "report_param1": 1,
                    "report_param_1_copy": 1,
                    "temp_var1": 1,
                    "value_1": 1
                },
                "local_90": {
                    "arg6": 1,
                    "buffer5": 1,
                    "data_5": 1,
                    "local_data5": 1,
                    "local_output_6": 1,
                    "local_param14": 1,
                    "local_param_14": 1,
                    "local_report_param14": 1,
                    "local_var9": 1,
                    "local_var90": 1,
                    "local_variable_7": 1,
                    "output6": 1,
                    "output_param6_copy": 1,
                    "output_param_6_copy": 1,
                    "param14": 3,
                    "param14_copy": 1,
                    "param14_local": 1,
                    "param6": 1,
                    "param6_copy": 1,
                    "param_14": 2,
                    "param_14_copy": 1,
                    "param_14_local": 1,
                    "ptr5_copy": 1,
                    "ptr6_copy": 1,
                    "unused_param5": 1,
                    "value_14": 1
                },
                "local_98": {
                    "arg5": 1,
                    "buffer4": 1,
                    "data_4": 1,
                    "local_data4": 1,
                    "local_output_5": 1,
                    "local_param13": 1,
                    "local_param_13": 1,
                    "local_report_param13": 1,
                    "local_var8": 1,
                    "local_var98": 1,
                    "local_variable_6": 1,
                    "output5": 1,
                    "output_param5_copy": 1,
                    "output_param_5_copy": 1,
                    "param13": 3,
                    "param13_copy": 1,
                    "param13_local": 1,
                    "param5": 1,
                    "param5_copy": 1,
                    "param_13": 2,
                    "param_13_copy": 1,
                    "param_13_local": 1,
                    "ptr4_copy": 1,
                    "ptr5_copy": 1,
                    "unused_param4": 1,
                    "value_13": 1
                },
                "local_a0": {
                    "arg4": 1,
                    "buffer3": 1,
                    "data_3": 1,
                    "local_data3": 1,
                    "local_output_4": 1,
                    "local_param12": 1,
                    "local_param_12": 1,
                    "local_report_param12": 1,
                    "local_var7": 1,
                    "local_var_a0": 1,
                    "local_variable_5": 1,
                    "output4": 1,
                    "output_param4_copy": 1,
                    "output_param_4_copy": 1,
                    "param12": 3,
                    "param12_copy": 1,
                    "param12_local": 1,
                    "param4": 1,
                    "param4_copy": 1,
                    "param_12": 2,
                    "param_12_copy": 1,
                    "param_12_local": 1,
                    "ptr3_copy": 1,
                    "ptr4_copy": 1,
                    "unused_param3": 1,
                    "value_12": 1
                },
                "local_a8": {
                    "arg3": 1,
                    "buffer2": 1,
                    "data_2": 1,
                    "local_data2": 1,
                    "local_output_3": 1,
                    "local_param11": 1,
                    "local_param_11": 1,
                    "local_report_param11": 1,
                    "local_var6": 1,
                    "local_var_a8": 1,
                    "local_variable_4": 1,
                    "output3": 1,
                    "output_param3_copy": 1,
                    "output_param_3_copy": 1,
                    "param11": 3,
                    "param11_copy": 1,
                    "param11_local": 1,
                    "param3": 1,
                    "param3_copy": 1,
                    "param_11": 2,
                    "param_11_copy": 1,
                    "param_11_local": 1,
                    "ptr2_copy": 1,
                    "ptr3_copy": 1,
                    "unused_param2": 1,
                    "value_11": 1
                },
                "local_b0": {
                    "arg2": 1,
                    "buffer1": 1,
                    "data_1": 1,
                    "local_data1": 1,
                    "local_output_2": 1,
                    "local_param10": 1,
                    "local_param_10": 1,
                    "local_report_param10": 1,
                    "local_var5": 1,
                    "local_var_b0": 1,
                    "local_variable_3": 1,
                    "output2": 1,
                    "output_param2_copy": 1,
                    "output_param_2_copy": 1,
                    "param10": 3,
                    "param10_copy": 1,
                    "param10_local": 1,
                    "param2": 1,
                    "param2_copy": 1,
                    "param_10": 2,
                    "param_10_copy": 1,
                    "param_10_local": 1,
                    "ptr1_copy": 1,
                    "ptr2_copy": 1,
                    "unused_param1": 1,
                    "value_10": 1
                },
                "local_b8": {
                    "data_buffer": 1,
                    "local_array": 2,
                    "local_array1": 1,
                    "local_array_b8": 1,
                    "local_buffer": 8,
                    "local_buffer_array": 1,
                    "local_char_array": 1,
                    "local_data": 1,
                    "local_data_buffer": 1,
                    "local_result": 1,
                    "local_temp": 1,
                    "temp_buffer": 5,
                    "temporary_buffer": 3
                },
                "local_c8": {
                    "buffer": 5,
                    "buffer_ptr": 1,
                    "local_array_buffer": 1,
                    "local_b8_ptr": 1,
                    "local_buffer": 13,
                    "local_buffer_ptr": 1,
                    "local_c8": 1,
                    "local_char_array_address": 1,
                    "local_pointer_2": 1,
                    "local_pointer_array": 1,
                    "local_ptr2": 1,
                    "local_var4": 1,
                    "local_var_c8": 1,
                    "local_variable_2": 1
                },
                "local_d0": {
                    "buffer": 10,
                    "buffer_address": 1,
                    "buffer_pointer": 1,
                    "local_array": 1,
                    "local_array_ptr": 2,
                    "local_buffer_address": 1,
                    "local_buffer_ptr": 1,
                    "local_d0_ptr": 1,
                    "local_pointer_1": 1,
                    "local_ptr": 1,
                    "local_ptr1": 1,
                    "local_var3": 1,
                    "local_var_d0": 1,
                    "pointer": 1,
                    "stack_pointer": 3
                },
                "local_d4": {
                    "array_size": 1,
                    "buffer_length": 1,
                    "buffer_size": 1,
                    "constant": 2,
                    "count": 1,
                    "length": 2,
                    "local_array_size": 1,
                    "local_b8_size": 1,
                    "local_const": 1,
                    "local_d4": 1,
                    "local_size": 1,
                    "local_size_2": 1,
                    "local_string_length": 1,
                    "local_var2": 2,
                    "local_var_d4": 1,
                    "local_var_size": 1,
                    "local_variable_1": 1,
                    "offset": 1,
                    "size": 1
                },
                "local_d8": {
                    "buffer_length": 1,
                    "buffer_size": 5,
                    "buffer_size_local": 2,
                    "length": 4,
                    "local_array_size": 1,
                    "local_count": 1,
                    "local_size": 4,
                    "local_size_1": 1,
                    "local_var1": 2,
                    "num_bytes": 1,
                    "size": 5,
                    "stack_size": 3
                },
                "param_1": {
                    "arg1": 3,
                    "argument1": 2,
                    "buffer_size": 2,
                    "data1": 1,
                    "error_code": 1,
                    "error_msg": 1,
                    "first_param": 1,
                    "input1": 3,
                    "input_1": 3,
                    "input_param1": 2,
                    "input_param_1": 1,
                    "param_a": 1,
                    "parameter1": 1,
                    "report_param1": 4,
                    "report_param_1": 1,
                    "unnamed_param_1": 1,
                    "value_1": 2
                },
                "param_10": {
                    "address_2": 1,
                    "data1": 1,
                    "data10": 1,
                    "output2": 1,
                    "output_1": 1,
                    "output_2": 1,
                    "output_param2": 1,
                    "output_param_2": 1,
                    "param1": 1,
                    "param10": 5,
                    "param2": 3,
                    "param_10": 5,
                    "param_ptr2": 1,
                    "ptr1": 1,
                    "ptr2": 1,
                    "report_param10": 3,
                    "value_10": 1
                },
                "param_11": {
                    "address_3": 1,
                    "data11": 1,
                    "data2": 1,
                    "output3": 1,
                    "output_2": 1,
                    "output_3": 1,
                    "output_param3": 1,
                    "output_param_3": 1,
                    "param11": 5,
                    "param2": 1,
                    "param3": 3,
                    "param_11": 5,
                    "param_ptr3": 1,
                    "ptr2": 1,
                    "ptr3": 1,
                    "report_param11": 3,
                    "value_11": 1
                },
                "param_12": {
                    "address_4": 1,
                    "data12": 1,
                    "data3": 1,
                    "output4": 1,
                    "output_3": 1,
                    "output_4": 1,
                    "output_param4": 1,
                    "output_param_4": 1,
                    "param12": 5,
                    "param3": 1,
                    "param4": 3,
                    "param_12": 5,
                    "param_ptr4": 1,
                    "ptr3": 1,
                    "ptr4": 1,
                    "report_param12": 3,
                    "value_12": 1
                },
                "param_13": {
                    "address_5": 1,
                    "data13": 1,
                    "data4": 1,
                    "output5": 1,
                    "output_4": 1,
                    "output_5": 1,
                    "output_param5": 1,
                    "output_param_5": 1,
                    "param13": 5,
                    "param4": 1,
                    "param5": 3,
                    "param_13": 5,
                    "param_ptr5": 1,
                    "ptr4": 1,
                    "ptr5": 1,
                    "report_param13": 3,
                    "value_13": 1
                },
                "param_14": {
                    "address_6": 1,
                    "data14": 1,
                    "data5": 1,
                    "output6": 1,
                    "output_5": 1,
                    "output_6": 1,
                    "output_param6": 1,
                    "output_param_6": 1,
                    "param14": 5,
                    "param5": 1,
                    "param6": 3,
                    "param_14": 5,
                    "param_ptr6": 1,
                    "ptr5": 1,
                    "ptr6": 1,
                    "report_param14": 3,
                    "value_14": 1
                },
                "param_2": {
                    "arg2": 3,
                    "argument2": 2,
                    "data2": 1,
                    "input2": 3,
                    "input_2": 3,
                    "input_param2": 2,
                    "input_param_2": 1,
                    "param2": 2,
                    "param_2": 2,
                    "param_b": 1,
                    "parameter2": 1,
                    "report_param2": 4,
                    "report_param_2": 1,
                    "second_param": 1,
                    "unnamed_param_2": 1,
                    "value_2": 2
                },
                "param_3": {
                    "arg3": 3,
                    "argument3": 2,
                    "data3": 1,
                    "input3": 3,
                    "input_3": 3,
                    "input_param3": 2,
                    "input_param_3": 1,
                    "param3": 2,
                    "param_3": 2,
                    "param_c": 1,
                    "parameter3": 1,
                    "report_param3": 4,
                    "report_param_3": 1,
                    "third_param": 1,
                    "unnamed_param_3": 1,
                    "value_3": 2
                },
                "param_4": {
                    "arg4": 3,
                    "argument4": 2,
                    "data4": 1,
                    "fourth_param": 1,
                    "input4": 3,
                    "input_4": 3,
                    "input_param4": 2,
                    "input_param_4": 1,
                    "param4": 2,
                    "param_4": 2,
                    "param_d": 1,
                    "parameter4": 1,
                    "report_param4": 4,
                    "report_param_4": 1,
                    "unnamed_param_4": 1,
                    "value_4": 2
                },
                "param_5": {
                    "arg5": 3,
                    "argument5": 2,
                    "data5": 1,
                    "fifth_param": 1,
                    "input5": 3,
                    "input_5": 3,
                    "input_param5": 2,
                    "input_param_5": 1,
                    "param5": 2,
                    "param_5": 2,
                    "param_e": 1,
                    "parameter5": 1,
                    "report_param5": 4,
                    "report_param_5": 1,
                    "unnamed_param_5": 1,
                    "value_5": 2
                },
                "param_6": {
                    "arg6": 3,
                    "argument6": 2,
                    "data6": 1,
                    "input6": 3,
                    "input_6": 3,
                    "input_param6": 2,
                    "input_param_6": 1,
                    "param6": 2,
                    "param_6": 2,
                    "param_f": 1,
                    "parameter6": 1,
                    "report_param6": 4,
                    "report_param_6": 1,
                    "sixth_param": 1,
                    "unnamed_param_6": 1,
                    "value_6": 2
                },
                "param_7": {
                    "arg7": 3,
                    "argument7": 2,
                    "data7": 1,
                    "input7": 3,
                    "input_7": 3,
                    "input_param7": 2,
                    "input_param_7": 1,
                    "param7": 2,
                    "param_7": 2,
                    "param_g": 1,
                    "parameter7": 1,
                    "report_param7": 4,
                    "report_param_7": 1,
                    "seventh_param": 1,
                    "unnamed_param_7": 1,
                    "value_7": 2
                },
                "param_8": {
                    "arg8": 3,
                    "argument8": 2,
                    "data8": 1,
                    "eighth_param": 1,
                    "input8": 3,
                    "input_8": 3,
                    "input_param8": 2,
                    "input_param_8": 1,
                    "param8": 2,
                    "param_8": 2,
                    "param_h": 1,
                    "parameter8": 1,
                    "report_param8": 4,
                    "report_param_8": 1,
                    "unnamed_param_8": 1,
                    "value_8": 2
                },
                "param_9": {
                    "address": 2,
                    "address_1": 1,
                    "data9": 1,
                    "data_ptr": 1,
                    "input_9": 1,
                    "output1": 1,
                    "output_1": 1,
                    "output_file": 1,
                    "output_param1": 1,
                    "output_param_1": 1,
                    "param1": 3,
                    "param9": 4,
                    "param_9": 3,
                    "param_ptr1": 1,
                    "ptr1": 1,
                    "report_handle": 1,
                    "report_param9": 4,
                    "va_arg_list": 1
                },
                "report": {
                    "execute_report": 2,
                    "execute_report_function": 1,
                    "send_report": 2
                },
                "xexit": {
                    "exit_function": 1,
                    "exit_program": 3,
                    "terminate_execution": 1
                }
            },
            "called": [
                "FUN_00102480",
                "FUN_001078c0"
            ],
            "calling": [
                "FUN_00102c25",
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00103a78",
                "FUN_00105300"
            ],
            "code": "\nvoid execute_report_and_exit_00107690(undefined4 report_param1,undefined4 report_param2,undefined4 report_param3,undefined4 report_param4,\n                 undefined4 report_param5,undefined4 report_param6,undefined4 report_param7,undefined4 report_param8,\n                 undefined8 param9,undefined8 report_param10,undefined8 param11,undefined8 param12,\n                 undefined8 report_param13,undefined8 param14)\n\n{\n  char flag;\n  undefined4 buffer_size;\n  undefined4 constant;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined local_buffer [8];\n  undefined8 param10;\n  undefined8 param11;\n  undefined8 param12;\n  undefined8 param13;\n  undefined8 param14;\n  undefined4 arg1_copy;\n  undefined4 report_param2;\n  undefined4 arg3_copy;\n  undefined4 arg4;\n  undefined4 arg5_copy;\n  undefined4 arg6_copy;\n  undefined4 arg7_copy;\n  undefined4 report_param8;\n  \n  if (flag != '\\0') {\n    arg1_copy = report_param1;\n    report_param2 = report_param2;\n    arg3_copy = report_param3;\n    arg4 = report_param4;\n    arg5_copy = report_param5;\n    arg6_copy = report_param6;\n    arg7_copy = report_param7;\n    report_param8 = report_param8;\n  }\n  buffer = &stack0x00000008;\n  buffer_size = 8;\n  local_buffer = local_buffer;\n  constant = 0x30;\n  param10 = report_param10;\n  param11 = param11;\n  param12 = param12;\n  param13 = report_param13;\n  param14 = param14;\n  execute_report(param9,&buffer_size);\n                    \n  exit_program(1);\n}\n\n",
            "current_name": "execute_report_and_exit_00107690",
            "entrypoint": "0x00107690",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107690": "execute_report_and_exit_00107690",
                "in_AL": "flag",
                "local_18": "report_param8",
                "local_28": "arg7_copy",
                "local_38": "arg6_copy",
                "local_48": "arg5_copy",
                "local_58": "arg4",
                "local_68": "arg3_copy",
                "local_78": "report_param2",
                "local_88": "arg1_copy",
                "local_90": "param14",
                "local_98": "param13",
                "local_a0": "param12",
                "local_a8": "param11",
                "local_b0": "param10",
                "local_b8": "local_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "constant",
                "local_d8": "buffer_size",
                "param_1": "report_param1",
                "param_11": "param11",
                "param_12": "param12",
                "param_14": "param14",
                "param_2": "report_param2",
                "param_3": "report_param3",
                "param_4": "report_param4",
                "param_5": "report_param5",
                "param_6": "report_param6",
                "param_7": "report_param7",
                "param_8": "report_param8",
                "param_9": "param9",
                "report": "execute_report",
                "xexit": "exit_program"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107730": {
            "additional_data": {
                "DAT_0010d5d8": {
                    "file_handle": 2,
                    "file_pointer": 2,
                    "file_ptr": 2,
                    "open_file_pointer": 1
                },
                "DAT_0010d5e0": {
                    "bfd_cache": 1,
                    "cache_flag": 2,
                    "cache_status": 1,
                    "is_cache_open": 3
                },
                "DAT_0010d618": {
                    "binary_path": 1,
                    "file_path": 4,
                    "file_pointer": 1,
                    "path": 1
                },
                "FILE": {
                    "file": 3
                },
                "FUN_00102bf5": {
                    "additional_cleanup": 1,
                    "clean_up_cache": 1,
                    "close_bf_dcache": 1,
                    "close_bfd_cache": 1,
                    "close_cache": 3,
                    "close_file_cache": 1,
                    "initialize_cache": 2,
                    "perform_additional_cleanup": 1,
                    "perform_cleanup": 1,
                    "reverse_bytes": 1,
                    "reverse_data": 1
                },
                "FUN_00107730": {
                    "clean_up_binary": 1,
                    "cleanup": 3,
                    "cleanup_and_close": 2,
                    "cleanup_and_close_file": 2,
                    "cleanup_and_delete": 1,
                    "cleanup_and_delete_file": 1,
                    "cleanup_and_remove_file": 4,
                    "cleanup_binary": 1,
                    "cleanup_file": 2,
                    "cleanup_files": 4,
                    "cleanup_function": 8,
                    "cleanup_resources": 1,
                    "close_and_remove_file": 1
                },
                "bfd_cache_close": {
                    "close_bfd_cache": 1,
                    "close_cache": 3
                },
                "fclose": {
                    "close_file": 6
                },
                "unlink_if_ordinary": {
                    "delete_file": 6,
                    "remove_file": 14,
                    "unlink_file": 2
                }
            },
            "called": [
                "FUN_00102bf5"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid cleanup_function_00107730(void)\n\n{\n  if (DAT_0010d618 == 0) {\n    return;\n  }\n  if (DAT_0010d5e0 != 0) {\n    close_cache();\n  }\n  if (DAT_0010d5d8 != (file *)0x0) {\n    close_file(DAT_0010d5d8);\n  }\n  remove_file(DAT_0010d618);\n  return;\n}\n\n",
            "current_name": "cleanup_function_00107730",
            "entrypoint": "0x00107730",
            "imported": false,
            "improved": true,
            "renaming": {
                "FILE": "file",
                "FUN_00107730": "cleanup_function_00107730",
                "bfd_cache_close": "close_cache",
                "fclose": "close_file",
                "unlink_if_ordinary": "remove_file"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107740": {
            "additional_data": {
                "DAT_0010d5d8": {
                    "file_pointer": 1,
                    "output_file": 3,
                    "output_file_pointer": 1,
                    "output_file_ptr": 1
                },
                "DAT_0010d600": {
                    "enable_timestamp": 1,
                    "flag": 1,
                    "flag_constant": 1,
                    "global_variable1": 1,
                    "is_flag_set": 1
                },
                "DAT_0010d618": {
                    "file_name": 1,
                    "file_path": 1,
                    "filename": 1,
                    "output_file": 1,
                    "output_file_name": 2
                },
                "DAT_0010d638": {
                    "current_file": 1,
                    "error_constant": 1,
                    "error_flag": 1,
                    "error_string": 1,
                    "filename": 1,
                    "filename_to_compare": 1,
                    "global_variable2": 1
                },
                "FUN_00107740": {
                    "decode_and_extract": 1,
                    "extract_and_copy_archive": 1,
                    "extract_and_copy_files_from_archive": 1,
                    "extract_and_improve_archive": 1,
                    "extract_and_modify_data": 1,
                    "extract_and_output_archive": 1,
                    "extract_and_process_archive": 1,
                    "extract_and_save_archive": 1,
                    "extract_and_save_archive_entries": 1,
                    "extract_and_save_archives": 1,
                    "extract_and_save_file_from_archive": 1,
                    "extract_and_save_files": 1,
                    "extract_and_save_files_from_archive": 1,
                    "extract_and_write_archive": 4,
                    "extract_and_write_archive_contents": 1,
                    "extract_and_write_archive_data": 1,
                    "extract_and_write_file": 1,
                    "extract_archive_contents": 1,
                    "extract_archives": 1,
                    "extract_files_from_archive": 1,
                    "extract_from_binary_and_save_to_file": 1,
                    "extract_valid_archive": 2,
                    "parse_and_copy_file": 1,
                    "process_archive": 2,
                    "process_file": 1
                },
                "_DAT_0010d600": {
                    "flag": 1,
                    "flag_value": 1
                },
                "_Stack_b0": {
                    "file_mode": 5,
                    "file_permission": 3,
                    "file_permissions": 16,
                    "mode_type": 1,
                    "mode_value": 1,
                    "permission_bits": 1,
                    "permissions": 4
                },
                "__n": {
                    "buffer_size": 3,
                    "bytes_read": 23,
                    "read_bytes": 2,
                    "read_size": 2,
                    "size": 1
                },
                "__ptr": {
                    "buffer": 19,
                    "buffer_pointer": 7,
                    "buffer_ptr": 5
                },
                "iVar1": {
                    "cmp_result": 3,
                    "compare_result": 1,
                    "comparison_result": 19,
                    "filename_cmp_result": 2,
                    "filename_comparison_result": 4,
                    "filename_match": 1,
                    "result": 1
                },
                "iVar2": {
                    "error_code": 13,
                    "error_value": 1,
                    "func_result": 1,
                    "function_result": 1,
                    "internal_stat_error": 4,
                    "result_code": 1,
                    "return_value": 1,
                    "stat_error": 2,
                    "stat_error_result": 1,
                    "stat_result": 1,
                    "status": 4
                },
                "lVar7": {
                    "current_offset": 2,
                    "file_offset": 2,
                    "length": 1,
                    "loop_counter": 13,
                    "loop_variable": 2,
                    "offset": 11
                },
                "local_c8": {
                    "error_array": 1,
                    "error_code_array": 1,
                    "error_codes": 3,
                    "flags": 1,
                    "initial_array": 1,
                    "initialized_local_vars": 1,
                    "local_array": 10,
                    "local_data_array": 1,
                    "local_flags": 1,
                    "local_stats": 1,
                    "local_variable_array": 1,
                    "local_vars": 2,
                    "null_values_array": 1,
                    "stat_values": 1,
                    "zero_array": 2,
                    "zeroed_array": 1
                },
                "param_1": {
                    "archive": 7,
                    "archive_contents": 1,
                    "archive_data": 2,
                    "archive_entries": 1,
                    "archive_ptr_ptr": 1,
                    "archives": 1,
                    "binary_data": 1,
                    "file_data": 1,
                    "file_ptr": 1,
                    "input": 2,
                    "input_archive": 4,
                    "input_data": 1,
                    "input_files": 2,
                    "input_pointer": 1,
                    "param": 1,
                    "parameter": 1,
                    "parameter_list": 1,
                    "parameters": 1
                },
                "pcVar4": {
                    "err_msg": 1,
                    "errno_msg": 1,
                    "error_message": 9,
                    "error_msg": 2,
                    "error_string": 14,
                    "str_error": 1
                },
                "piVar3": {
                    "errno_loc": 1,
                    "errno_location": 16,
                    "errno_location_ptr": 2,
                    "errno_pointer": 1,
                    "errno_ptr": 2,
                    "errno_value": 1,
                    "error_location": 1,
                    "error_number": 1,
                    "error_pointer": 1,
                    "error_ptr": 1
                },
                "plVar8": {
                    "current_archive": 2,
                    "current_entry": 4,
                    "current_file": 6,
                    "current_file_entry": 1,
                    "current_file_offset": 1,
                    "current_file_ptr": 1,
                    "current_pointer": 4,
                    "current_ptr": 1,
                    "entry_ptr": 1,
                    "file_pointer": 4,
                    "file_ptr": 5,
                    "pointer_to_long": 1
                },
                "plVar9": {
                    "local_data": 1
                },
                "pplVar6": {
                    "archive_contents_ptr": 1,
                    "archive_entry": 1,
                    "archive_file": 1,
                    "archive_files": 1,
                    "archive_pointer": 2,
                    "archive_ptr": 4,
                    "archive_ptr_ptr_alt": 1,
                    "corrected_pointer": 1,
                    "current_entry": 2,
                    "current_file": 1,
                    "data_ptr": 1,
                    "double_pointer_type": 1,
                    "extracted_archive": 1,
                    "extracted_files": 1,
                    "file_pointer": 2,
                    "file_ptr": 1,
                    "file_ptr_addr": 1,
                    "function_table": 1,
                    "potential_output_file": 1,
                    "ppl_data": 1,
                    "ppl_pointer": 1,
                    "secondary_archive": 1,
                    "target_pointer": 1,
                    "temp_archives": 1,
                    "temp_pointer": 1
                },
                "puVar3": {
                    "error_code_ptr": 1,
                    "local_variables": 1
                },
                "puVar9": {
                    "array_pointer": 1,
                    "local_array": 7,
                    "local_array_pointer": 3,
                    "local_array_ptr": 5,
                    "local_buffer": 1,
                    "local_counter": 1,
                    "local_ctx": 1,
                    "local_data": 1,
                    "local_flags_ptr": 1,
                    "local_variable_array": 1,
                    "local_variables": 1,
                    "local_vars": 1,
                    "local_vars_array": 1,
                    "local_vars_ptr": 1,
                    "null_array": 1,
                    "pointer_to_array": 1
                },
                "sVar11": {
                    "actual_read_size": 1,
                    "amount_to_read": 1,
                    "buffer_size": 1,
                    "bytes_to_copy": 2,
                    "bytes_to_process": 5,
                    "bytes_to_read": 8,
                    "bytes_to_read_write": 1,
                    "bytes_to_write": 1,
                    "bytes_written": 2,
                    "chunk_size": 1,
                    "copy_size": 4,
                    "data_size": 1,
                    "remaining_bytes": 1,
                    "write_bytes": 1,
                    "write_length": 1
                },
                "uStack_70": {
                    "access_time": 4,
                    "accessed_time": 1,
                    "copy_end_time": 1,
                    "current_time": 2,
                    "end_time": 1,
                    "file_access_date": 1,
                    "file_time2": 1,
                    "file_time_mod": 1,
                    "last_access_time": 1,
                    "modification_time": 3,
                    "stack_var2": 1,
                    "stack_variable70": 1,
                    "temporary_value2": 1,
                    "temporary_variable2": 1,
                    "time_b": 1,
                    "time_stamp2": 1,
                    "time_value_2": 1,
                    "times_value2": 1,
                    "timestamp": 4,
                    "timestamp1": 2,
                    "timestamp2": 1
                },
                "uStack_80": {
                    "access_time": 3,
                    "copy_start_time": 1,
                    "file_modified_date": 1,
                    "file_time": 1,
                    "file_time1": 1,
                    "last_write_time": 1,
                    "modification_time": 1,
                    "modified_time": 4,
                    "prev_value": 1,
                    "previous_time": 1,
                    "stack_var1": 1,
                    "stack_variable80": 1,
                    "start_time": 1,
                    "temporary_value1": 1,
                    "temporary_variable1": 1,
                    "time_a": 1,
                    "time_stamp1": 1,
                    "time_value_1": 1,
                    "times_value1": 1,
                    "timestamp": 4,
                    "timestamp1": 1,
                    "timestamp2": 2
                },
                "uStack_98": {
                    "archive_file_size": 1,
                    "archive_size": 14,
                    "file_size": 9,
                    "input_file_size": 1,
                    "stack_value": 1,
                    "total_bytes": 3,
                    "total_file_size": 1,
                    "total_size": 1
                },
                "uVar10": {
                    "bytes_copied": 2,
                    "bytes_processed": 12,
                    "bytes_read": 3,
                    "bytes_remaining": 2,
                    "bytes_written": 2,
                    "remaining_size": 1,
                    "total_bytes": 2,
                    "total_bytes_read": 5,
                    "total_read_size": 1
                },
                "uVar5": {
                    "err_msg": 1,
                    "error_code": 1,
                    "error_identifier": 1,
                    "error_message": 1,
                    "error_msg": 1,
                    "error_string": 2,
                    "error_string_id": 1,
                    "error_text": 1,
                    "gettext_message": 1,
                    "gettext_result": 3,
                    "locale_string": 1,
                    "message": 2,
                    "text": 2,
                    "translated_err_msg": 1,
                    "translated_error": 1,
                    "translated_error_message": 3,
                    "translated_error_msg": 1,
                    "translated_string": 5,
                    "translation_string": 1
                }
            },
            "called": [
                "FUN_00102c25"
            ],
            "calling": [
                "FUN_00103e95",
                "FUN_00105db0"
            ],
            "code": "\n\n\nlong * extract_and_write_archive_contents_00107740(long **archive)\n\n{\n  int comparison_result;\n  int error_code;\n  int *errno_location;\n  char *error_string;\n  undefined8 translated_string;\n  long **archive_ptr;\n  void *buffer;\n  size_t bytes_read;\n  long loop_counter;\n  long *current_file;\n  undefined4 *local_array;\n  ulong bytes_processed;\n  size_t bytes_to_read;\n  undefined4 local_array [6];\n  __mode_t file_permissions;\n  ulong archive_size;\n  undefined8 timestamp;\n  undefined8 timestamp;\n  \n  if (_DAT_0010d600 != 0) {\n    local_array = local_array;\n    for (loop_counter = 0x24; loop_counter != 0; loop_counter = loop_counter + -1) {\n      *local_array = 0;\n      local_array = local_array + 1;\n    }\n  }\n  archive_ptr = (long **)archive[0x1d];\n  if ((long **)archive[0x1d] == (long **)0x0) {\n    archive_ptr = archive;\n  }\n  error_code = (*(code *)archive_ptr[1][0x3d])(archive,local_array);\n  if (error_code != 0) {\n    current_file = *archive;\n    translated_string = dcgettext(0,\"internal stat error on %s\",5);\n    error_code = fatal(translated_string,current_file);\n    translated_string = DAT_0010d638;\n    if (error_code == 3) {\n      for (; *current_file != 0; current_file = (long *)(*current_file + 0xf0)) {\n      }\n    }\n    else {\n      for (; (undefined8 *)*current_file != (undefined8 *)0x0; current_file = (long *)(*current_file + 0xf0)) {\n        comparison_result = filename_cmp(*(undefined8 *)*current_file,translated_string);\n        if (comparison_result == 0) {\n          if (error_code != 2) {\n            return current_file;\n          }\n          return (long *)(*current_file + 0xf0);\n        }\n      }\n    }\n    return current_file;\n  }\n  bfd_seek(archive,0,0);\n  DAT_0010d5d8 = (FILE *)0x0;\n  if (archive_size == 0) {\nLAB_00102ca2:\n    DAT_0010d5d8 = (FILE *)open_output_file_isra_0(*archive);\n  }\n  else {\n    bytes_processed = 0;\n    buffer = (void *)xmalloc(0x2000);\n    do {\n      bytes_to_read = archive_size - bytes_processed;\n      if (0x2000 < bytes_to_read) {\n        bytes_to_read = 0x2000;\n      }\n      bytes_read = bfd_bread(buffer,bytes_to_read,archive);\n      if (bytes_to_read != bytes_read) {\nLAB_00102c78:\n        archive = (long **)*archive[0x1d];\n        translated_string = dcgettext(0,\"%s is not a valid archive\",5);\n        fatal(translated_string,archive);\n        goto LAB_00102ca2;\n      }\n      if (DAT_0010d5d8 == (FILE *)0x0) {\n        DAT_0010d5d8 = (FILE *)open_output_file_isra_0(*archive);\n      }\n      bytes_to_read = fwrite(buffer,1,bytes_read,DAT_0010d5d8);\n      if (bytes_to_read != bytes_read) {\n        errno_location = __errno_location();\n        error_string = strerror(*errno_location);\n        fatal(\"%s: %s\",DAT_0010d618,error_string);\n        goto LAB_00102c78;\n      }\n      bytes_processed = bytes_processed + bytes_read;\n    } while (bytes_processed < archive_size);\n    free(buffer);\n  }\n  fclose(DAT_0010d5d8);\n  error_string = DAT_0010d618;\n  DAT_0010d5d8 = (FILE *)0x0;\n  chmod(DAT_0010d618,file_permissions);\n  if (_DAT_0010d600 != 0) {\n    timestamp = timestamp;\n    set_times(error_string,local_array);\n  }\n  DAT_0010d618 = (char *)0x0;\n  return (long *)0x0;\n}\n\n",
            "current_name": "extract_and_write_archive_contents_00107740",
            "entrypoint": "0x00107740",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107740": "extract_and_write_archive_contents_00107740",
                "_Stack_b0": "file_permissions",
                "__n": "bytes_read",
                "__ptr": "buffer",
                "iVar1": "comparison_result",
                "iVar2": "error_code",
                "lVar7": "loop_counter",
                "local_c8": "local_array",
                "param_1": "archive",
                "pcVar4": "error_string",
                "piVar3": "errno_location",
                "plVar8": "current_file",
                "pplVar6": "archive_ptr",
                "puVar9": "local_array",
                "sVar11": "bytes_to_read",
                "uStack_70": "timestamp",
                "uStack_80": "timestamp",
                "uStack_98": "archive_size",
                "uVar10": "bytes_processed",
                "uVar5": "translated_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107890": {
            "additional_data": {
                "DAT_0010d60c": {
                    "bool_var1": 1,
                    "expr1_result": 1,
                    "flag1": 5,
                    "flag_1": 2,
                    "variable1": 1
                },
                "FUN_00107890": {
                    "print_and_check_description": 1,
                    "print_arelt_descr": 6,
                    "print_arelt_descr_wrapper": 1,
                    "print_arelt_description": 16,
                    "print_array_description": 3,
                    "print_array_element_description": 1,
                    "print_description": 1,
                    "print_element_description": 1,
                    "print_result": 1
                },
                "FUN_001079c0": {
                    "print_arelt_descr": 1,
                    "print_array_element": 2,
                    "print_array_element_description": 1,
                    "print_array_element_description_impl": 1,
                    "print_description_line": 1,
                    "print_element_description": 2,
                    "print_file_parameters": 1,
                    "print_table_entry": 1
                },
                "_DAT_0010d5fc": {
                    "bool_var2": 1,
                    "expr2_result": 1,
                    "flag2": 5,
                    "flag_2": 2,
                    "variable2": 1
                },
                "_stdout": {
                    "output_file": 4,
                    "output_stream": 2,
                    "standard_output": 6,
                    "standard_output_stream": 1,
                    "stdout_file": 1,
                    "stdout_file_ptr": 1
                },
                "param_1": {
                    "element": 1,
                    "file": 2,
                    "file_descriptor": 1,
                    "file_handle": 1,
                    "file_pointer": 1,
                    "file_ptr": 1,
                    "output_file": 11,
                    "output_stream": 10,
                    "param": 2,
                    "stdout_file": 1
                },
                "param_2": {
                    "arelt_params": 1,
                    "arr_of_strings": 1,
                    "array": 1,
                    "array_elements": 2,
                    "array_of_strings": 5,
                    "element_array": 1,
                    "element_data": 1,
                    "lines": 1,
                    "param_array": 1,
                    "string_array": 5,
                    "strings": 1,
                    "table_entries": 1
                },
                "param_3": {
                    "char_1": 1,
                    "char_value_1": 1,
                    "character1": 2,
                    "character_1": 2,
                    "flag1": 3,
                    "flag_1": 12,
                    "is_enabled": 1
                },
                "param_4": {
                    "char_2": 1,
                    "char_value_2": 1,
                    "character2": 2,
                    "character_2": 2,
                    "flag2": 3,
                    "flag_2": 12,
                    "is_valid": 1
                },
                "print_arelt_descr": {
                    "print_array_element_description": 4,
                    "print_element_description": 1
                }
            },
            "called": [
                "FUN_001079c0"
            ],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\n\n\nvoid print_arelt_description_00107890(undefined8 output_file)\n\n{\n  print_array_element_description(standard_output,output_file,DAT_0010d60c != 0,_DAT_0010d5fc != 0);\n  return;\n}\n\n",
            "current_name": "print_arelt_description_00107890",
            "entrypoint": "0x00107890",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107890": "print_arelt_description_00107890",
                "_stdout": "standard_output",
                "param_1": "output_file",
                "print_arelt_descr": "print_array_element_description"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001078c0": {
            "additional_data": {
                "DAT_0010d660": {
                    "error_prefix": 1,
                    "program_name": 1
                },
                "FUN_001078c0": {
                    "print_error_message": 27,
                    "print_formatted_error_message": 2,
                    "print_formatted_message": 2
                },
                "__gnuc_va_list": {
                    "varargs": 1,
                    "variable_arguments": 1
                },
                "_stderr": {
                    "error_output": 1,
                    "standard_error": 14,
                    "stderr": 2,
                    "stderr_buffer": 1,
                    "stderr_stream": 1
                },
                "_stdout": {
                    "standard_output": 15,
                    "stdout": 2,
                    "stdout_buffer": 1,
                    "stdout_stream": 1
                },
                "fflush": {
                    "flush_standard_output": 1
                },
                "fprintf": {
                    "format_print": 1,
                    "print_formatted": 1,
                    "print_to_standard_error": 1
                },
                "param_1": {
                    "error_message": 13,
                    "format_string": 4,
                    "message": 13,
                    "message_format": 1
                },
                "param_2": {
                    "arg_list": 2,
                    "args": 11,
                    "arguments": 7,
                    "arguments_list": 1,
                    "format_args": 2,
                    "format_arguments": 1,
                    "va_list": 1,
                    "var_arg_list": 1,
                    "var_args": 1,
                    "variable_arguments": 2
                },
                "putc": {
                    "put_character": 1,
                    "write_character": 2,
                    "write_character_to_standard_error": 1
                },
                "stderr": {
                    "standard_error": 1
                },
                "stdout": {
                    "standard_output": 1
                },
                "vfprintf": {
                    "variable_format_print": 1
                }
            },
            "called": [
                "FUN_001022f0",
                "FUN_001023c0",
                "FUN_001024b0",
                "FUN_00102310"
            ],
            "calling": [
                "FUN_00107690",
                "FUN_00107920"
            ],
            "code": "\n\n\nvoid print_formatted_error_message_001078c0(char *message,variable_arguments args)\n\n{\n  flush_standard_output(standard_output);\n  print_to_standard_error(standard_error,\"%s: \",DAT_0010d660);\n  variable_format_print(standard_error,message,args);\n  write_character(10,standard_error);\n  return;\n}\n\n",
            "current_name": "print_formatted_error_message_001078c0",
            "entrypoint": "0x001078c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001078c0": "print_formatted_error_message_001078c0",
                "__gnuc_va_list": "variable_arguments",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "fflush": "flush_standard_output",
                "fprintf": "print_to_standard_error",
                "param_1": "message",
                "param_2": "args",
                "putc": "write_character",
                "stderr": "standard_error",
                "stdout": "standard_output",
                "vfprintf": "variable_format_print"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107920": {
            "additional_data": {
                "FUN_001078c0": {
                    "process_report": 1
                },
                "FUN_00107920": {
                    "execute_report": 1,
                    "execute_report_function": 1,
                    "print_report": 1,
                    "process_data": 1,
                    "process_report": 1,
                    "report_and_modify": 1,
                    "report_and_print": 1,
                    "report_and_store_data": 2,
                    "report_and_update": 1,
                    "report_data": 14,
                    "report_function": 3,
                    "report_params": 1,
                    "report_to_server": 1,
                    "report_with_params": 1
                },
                "in_AL": {
                    "boolean_flag": 1,
                    "char_flag": 1,
                    "condition": 3,
                    "condition_flag": 1,
                    "flag": 10,
                    "input_flag": 3,
                    "is_active": 1,
                    "is_condition_met": 1,
                    "is_condition_true": 1,
                    "is_flag_set": 2,
                    "is_non_null": 1,
                    "is_true": 2,
                    "is_valid": 1,
                    "some_condition": 1
                },
                "local_18": {
                    "copy_input8": 1,
                    "data_8_copy": 1,
                    "input8": 3,
                    "input8_copy": 2,
                    "input8_new": 1,
                    "input_8_copy": 1,
                    "input_8_new": 1,
                    "local_arg8": 1,
                    "local_data_8": 1,
                    "local_input8": 1,
                    "local_param8": 1,
                    "local_report_param_8": 1,
                    "local_var8": 1,
                    "local_var9": 1,
                    "param12": 1,
                    "param8": 2,
                    "param8_copy": 1,
                    "param_8": 1,
                    "report_param8": 2,
                    "report_param8_copy": 1,
                    "report_param_8_copy": 2,
                    "temp8": 1,
                    "unused2": 1,
                    "value8": 1,
                    "var_22": 1
                },
                "local_28": {
                    "copy_input7": 1,
                    "data_7_copy": 1,
                    "input7": 3,
                    "input7_copy": 2,
                    "input7_new": 1,
                    "input_7_copy": 1,
                    "input_7_new": 1,
                    "local_arg7": 1,
                    "local_data_7": 1,
                    "local_input7": 1,
                    "local_param7": 1,
                    "local_report_param_7": 1,
                    "local_var7": 1,
                    "local_var8": 1,
                    "param11": 1,
                    "param7": 2,
                    "param7_copy": 1,
                    "param_7": 1,
                    "report_param7": 2,
                    "report_param7_copy": 1,
                    "report_param_7_copy": 2,
                    "temp7": 1,
                    "unused1": 1,
                    "value7": 1,
                    "var_21": 1
                },
                "local_38": {
                    "copy_input6": 1,
                    "data_6_copy": 1,
                    "input6": 3,
                    "input6_copy": 2,
                    "input6_new": 1,
                    "input_6_copy": 1,
                    "input_6_new": 1,
                    "local_arg6": 1,
                    "local_data_6": 1,
                    "local_input6": 1,
                    "local_param6": 1,
                    "local_report_param_6": 1,
                    "local_var6": 1,
                    "local_var7": 1,
                    "param10": 1,
                    "param6": 2,
                    "param6_copy": 1,
                    "param_6": 1,
                    "report_param6": 2,
                    "report_param6_copy": 1,
                    "report_param_6_copy": 2,
                    "stored_input6": 1,
                    "temp6": 1,
                    "value6": 1,
                    "var_20": 1
                },
                "local_48": {
                    "copy_input5": 1,
                    "data_5_copy": 1,
                    "input5": 3,
                    "input5_copy": 2,
                    "input5_new": 1,
                    "input_5_copy": 1,
                    "input_5_new": 1,
                    "local_arg5": 1,
                    "local_data_5": 1,
                    "local_input5": 1,
                    "local_param5": 1,
                    "local_report_param_5": 1,
                    "local_var5": 1,
                    "local_var6": 1,
                    "param5": 2,
                    "param5_copy": 1,
                    "param9": 1,
                    "param_5": 1,
                    "report_param5": 2,
                    "report_param5_copy": 1,
                    "report_param_5_copy": 2,
                    "stored_input5": 1,
                    "temp5": 1,
                    "value5": 1,
                    "var_19": 1
                },
                "local_58": {
                    "copy_input4": 1,
                    "data_4_copy": 1,
                    "input4": 3,
                    "input4_copy": 2,
                    "input4_new": 1,
                    "input_4_copy": 1,
                    "input_4_new": 1,
                    "local_arg4": 1,
                    "local_data_4": 1,
                    "local_input4": 1,
                    "local_param4": 1,
                    "local_report_param_4": 1,
                    "local_var4": 1,
                    "local_var5": 1,
                    "param4": 2,
                    "param4_copy": 1,
                    "param8": 1,
                    "param_4": 1,
                    "report_param4": 2,
                    "report_param4_copy": 1,
                    "report_param_4_copy": 2,
                    "stored_input4": 1,
                    "temp4": 1,
                    "value4": 1,
                    "var_18": 1
                },
                "local_68": {
                    "copy_input3": 1,
                    "data_3_copy": 1,
                    "input3": 3,
                    "input3_copy": 2,
                    "input3_new": 1,
                    "input_3_copy": 1,
                    "input_3_new": 1,
                    "local_arg3": 1,
                    "local_data_3": 1,
                    "local_input3": 1,
                    "local_param3": 1,
                    "local_report_param_3": 1,
                    "local_var3": 1,
                    "local_var4": 1,
                    "param3": 2,
                    "param3_copy": 1,
                    "param7": 1,
                    "param_3": 1,
                    "report_param3": 2,
                    "report_param3_copy": 1,
                    "report_param_3_copy": 2,
                    "stored_input3": 1,
                    "temp3": 1,
                    "value3": 1,
                    "var_17": 1
                },
                "local_78": {
                    "copy_input2": 1,
                    "data_2_copy": 1,
                    "input2": 3,
                    "input2_copy": 2,
                    "input2_new": 1,
                    "input_2_copy": 1,
                    "input_2_new": 1,
                    "local_arg2": 1,
                    "local_data_2": 1,
                    "local_input2": 1,
                    "local_param2": 1,
                    "local_report_param_2": 1,
                    "local_var2": 1,
                    "local_var3": 1,
                    "param2": 2,
                    "param2_copy": 1,
                    "param6": 1,
                    "param_2": 1,
                    "report_param2": 2,
                    "report_param2_copy": 1,
                    "report_param_2_copy": 2,
                    "stored_input2": 1,
                    "temp2": 1,
                    "value2": 1,
                    "var_16": 1
                },
                "local_88": {
                    "copy_input1": 1,
                    "data_1_copy": 1,
                    "input1": 3,
                    "input1_copy": 2,
                    "input1_new": 1,
                    "input_1_copy": 1,
                    "input_1_new": 1,
                    "local_arg1": 1,
                    "local_data_1": 1,
                    "local_input1": 1,
                    "local_param1": 1,
                    "local_report_param_1": 1,
                    "local_var1": 1,
                    "local_var2": 1,
                    "param1": 2,
                    "param1_copy": 1,
                    "param5": 1,
                    "param_1": 1,
                    "report_param1": 2,
                    "report_param1_copy": 1,
                    "report_param_1_copy": 2,
                    "stored_input1": 1,
                    "temp1": 1,
                    "value1": 1,
                    "var_15": 1
                },
                "local_90": {
                    "arg5": 1,
                    "data5": 1,
                    "local_input14": 1,
                    "local_output_6": 1,
                    "local_param14": 2,
                    "local_param_14": 2,
                    "output6": 2,
                    "param14": 6,
                    "param14_copy": 2,
                    "param14_new": 1,
                    "param4": 1,
                    "param6": 1,
                    "param_14": 1,
                    "param_14_copy": 3,
                    "param_f": 1,
                    "param_val5": 1,
                    "report_param6": 1,
                    "value14": 1,
                    "value_e": 1,
                    "var_14": 1
                },
                "local_98": {
                    "arg4": 1,
                    "data4": 1,
                    "local_input13": 1,
                    "local_output_5": 1,
                    "local_param13": 2,
                    "local_param_13": 2,
                    "output5": 2,
                    "param13": 6,
                    "param13_copy": 2,
                    "param13_new": 1,
                    "param3": 1,
                    "param5": 1,
                    "param_13": 1,
                    "param_13_copy": 3,
                    "param_e": 1,
                    "param_val4": 1,
                    "report_param5": 1,
                    "value13": 1,
                    "value_d": 1,
                    "var_13": 1
                },
                "local_a0": {
                    "arg3": 1,
                    "data3": 1,
                    "local_input12": 1,
                    "local_output_4": 1,
                    "local_param12": 2,
                    "local_param_12": 2,
                    "output4": 2,
                    "param12": 6,
                    "param12_copy": 2,
                    "param12_new": 1,
                    "param2": 1,
                    "param4": 1,
                    "param_12": 1,
                    "param_12_copy": 3,
                    "param_d": 1,
                    "param_val3": 1,
                    "report_param4": 1,
                    "value12": 1,
                    "value_c": 1,
                    "var_12": 1
                },
                "local_a8": {
                    "arg2": 1,
                    "data2": 1,
                    "local_input11": 1,
                    "local_output_3": 1,
                    "local_param11": 2,
                    "local_param_11": 2,
                    "output3": 2,
                    "param1": 1,
                    "param11": 6,
                    "param11_copy": 2,
                    "param11_new": 1,
                    "param3": 1,
                    "param_11": 1,
                    "param_11_copy": 3,
                    "param_c": 1,
                    "param_val2": 1,
                    "report_param3": 1,
                    "value11": 1,
                    "value_b": 1,
                    "var_11": 1
                },
                "local_b0": {
                    "arg1": 1,
                    "data1": 1,
                    "local_input10": 1,
                    "local_output_2": 1,
                    "local_param10": 2,
                    "local_param_10": 2,
                    "output2": 2,
                    "param0": 1,
                    "param10": 6,
                    "param10_copy": 2,
                    "param10_new": 1,
                    "param2": 1,
                    "param_10": 1,
                    "param_10_copy": 3,
                    "param_b": 1,
                    "param_val1": 1,
                    "report_param2": 1,
                    "value10": 1,
                    "value_a": 1,
                    "var_10": 1
                },
                "local_b8": {
                    "buffer": 5,
                    "buffer_array": 1,
                    "byte_array": 1,
                    "data": 1,
                    "data_array": 1,
                    "local_array": 4,
                    "local_buffer": 8,
                    "local_data": 3,
                    "result_buffer": 1,
                    "temp_buffer": 2,
                    "temporary_buffer": 2
                },
                "local_c8": {
                    "array_pointer": 1,
                    "buffer": 10,
                    "buffer2": 1,
                    "local_array": 1,
                    "local_array2": 1,
                    "local_buffer": 11,
                    "local_buffer_pointer": 1,
                    "local_ptr": 2,
                    "pointer2": 1
                },
                "local_d0": {
                    "array_pointer": 1,
                    "buffer": 4,
                    "buffer1": 1,
                    "buffer_ptr": 2,
                    "data": 1,
                    "local_array": 2,
                    "local_buffer": 2,
                    "local_data": 1,
                    "local_stack_pointer": 1,
                    "pointer": 2,
                    "pointer1": 1,
                    "ptr_buffer": 1,
                    "ptr_to_stack": 1,
                    "stack_data": 1,
                    "stack_pointer": 2,
                    "stack_ptr": 2,
                    "stack_ptr1": 1
                },
                "local_d4": {
                    "array_size": 1,
                    "buffer_size": 3,
                    "constant": 2,
                    "constant_value": 1,
                    "count": 1,
                    "length": 5,
                    "local_constant": 1,
                    "local_var1": 2,
                    "local_variable_1": 1,
                    "offset": 3,
                    "size": 1,
                    "subarray_length": 1,
                    "temp": 1,
                    "value": 1
                },
                "local_d8": {
                    "array_size": 1,
                    "buffer_size": 5,
                    "count": 2,
                    "data_size": 1,
                    "input_size": 1,
                    "length": 1,
                    "local_buffer_size": 3,
                    "report_size": 1,
                    "size": 15,
                    "stack_size": 1
                },
                "param_1": {
                    "arg1": 1,
                    "data1": 1,
                    "data_1": 2,
                    "input1": 11,
                    "input_1": 3,
                    "param1": 1,
                    "report_param1": 6,
                    "report_param_1": 3,
                    "value1": 1
                },
                "param_10": {
                    "data1": 1,
                    "data10": 1,
                    "input10": 2,
                    "output2": 3,
                    "output_2": 2,
                    "param10": 4,
                    "param2": 2,
                    "param_10": 2,
                    "param_a": 2,
                    "param_b": 1,
                    "report_data_10": 1,
                    "report_param10": 5,
                    "report_param2": 1,
                    "report_param_10": 2
                },
                "param_11": {
                    "data11": 1,
                    "data2": 1,
                    "input11": 2,
                    "output3": 3,
                    "output_3": 2,
                    "param11": 4,
                    "param3": 2,
                    "param_11": 2,
                    "param_b": 2,
                    "param_c": 1,
                    "report_data_11": 1,
                    "report_param11": 5,
                    "report_param3": 1,
                    "report_param_11": 2
                },
                "param_12": {
                    "data12": 1,
                    "data3": 1,
                    "input12": 2,
                    "output4": 3,
                    "output_4": 2,
                    "param12": 4,
                    "param4": 2,
                    "param_12": 2,
                    "param_c": 2,
                    "param_d": 1,
                    "report_data_12": 1,
                    "report_param12": 5,
                    "report_param4": 1,
                    "report_param_12": 2
                },
                "param_13": {
                    "data13": 1,
                    "data4": 1,
                    "input13": 2,
                    "output5": 3,
                    "output_5": 2,
                    "param13": 4,
                    "param5": 2,
                    "param_13": 2,
                    "param_d": 2,
                    "param_e": 1,
                    "report_data_13": 1,
                    "report_param13": 5,
                    "report_param5": 1,
                    "report_param_13": 2
                },
                "param_14": {
                    "data14": 1,
                    "data5": 1,
                    "input14": 2,
                    "output6": 3,
                    "output_6": 2,
                    "param14": 4,
                    "param6": 2,
                    "param_14": 2,
                    "param_e": 2,
                    "param_f": 1,
                    "report_data_14": 1,
                    "report_param14": 5,
                    "report_param6": 1,
                    "report_param_14": 2
                },
                "param_2": {
                    "arg2": 1,
                    "data2": 1,
                    "data_2": 2,
                    "input2": 11,
                    "input_2": 3,
                    "param2": 1,
                    "report_param2": 6,
                    "report_param_2": 3,
                    "value2": 1
                },
                "param_3": {
                    "arg3": 1,
                    "data3": 1,
                    "data_3": 2,
                    "input3": 11,
                    "input_3": 3,
                    "param3": 1,
                    "report_param3": 6,
                    "report_param_3": 3,
                    "value3": 1
                },
                "param_4": {
                    "arg4": 1,
                    "data4": 1,
                    "data_4": 2,
                    "input4": 11,
                    "input_4": 3,
                    "param4": 1,
                    "report_param4": 6,
                    "report_param_4": 3,
                    "value4": 1
                },
                "param_5": {
                    "arg5": 1,
                    "data5": 1,
                    "data_5": 2,
                    "input5": 11,
                    "input_5": 3,
                    "param5": 1,
                    "report_param5": 6,
                    "report_param_5": 3,
                    "value5": 1
                },
                "param_6": {
                    "arg6": 1,
                    "data6": 1,
                    "data_6": 2,
                    "input6": 11,
                    "input_6": 3,
                    "param6": 1,
                    "report_param6": 6,
                    "report_param_6": 3,
                    "value6": 1
                },
                "param_7": {
                    "arg7": 1,
                    "data7": 1,
                    "data_7": 2,
                    "input7": 11,
                    "input_7": 3,
                    "param7": 1,
                    "report_param7": 6,
                    "report_param_7": 3,
                    "value7": 1
                },
                "param_8": {
                    "arg8": 1,
                    "data8": 1,
                    "data_8": 2,
                    "input8": 11,
                    "input_8": 3,
                    "param8": 1,
                    "report_param8": 6,
                    "report_param_8": 3,
                    "value8": 1
                },
                "param_9": {
                    "address": 1,
                    "data": 2,
                    "data9": 1,
                    "data_9": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "output1": 3,
                    "output_1": 2,
                    "param1": 2,
                    "param9": 2,
                    "param_a": 1,
                    "report_address": 2,
                    "report_control": 1,
                    "report_data_9": 1,
                    "report_param1": 1,
                    "report_param9": 5,
                    "report_param_9": 2
                }
            },
            "called": [
                "FUN_001078c0"
            ],
            "calling": [
                "FUN_00102fd7",
                "FUN_001052a0",
                "FUN_001025a0",
                "FUN_00105db0",
                "FUN_00102e6f",
                "FUN_00102f1e",
                "FUN_00105300"
            ],
            "code": "\nvoid report_and_store_data_00107920(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 input5,undefined4 input6,undefined4 input7,undefined4 input8,\n                 undefined8 report_param9,undefined8 report_param10,undefined8 report_param11,undefined8 report_param12,\n                 undefined8 report_param13,undefined8 report_param14)\n\n{\n  char flag;\n  undefined4 size;\n  undefined4 length;\n  undefined *buffer;\n  undefined *local_buffer;\n  undefined local_buffer [8];\n  undefined8 param10;\n  undefined8 param11;\n  undefined8 param12;\n  undefined8 param13;\n  undefined8 param14;\n  undefined4 input1;\n  undefined4 input2;\n  undefined4 input3;\n  undefined4 input4;\n  undefined4 input5;\n  undefined4 input6;\n  undefined4 input7;\n  undefined4 input8;\n  \n  if (flag != '\\0') {\n    input1 = input1;\n    input2 = input2;\n    input3 = input3;\n    input4 = input4;\n    input5 = input5;\n    input6 = input6;\n    input7 = input7;\n    input8 = input8;\n  }\n  buffer = &stack0x00000008;\n  size = 8;\n  local_buffer = local_buffer;\n  length = 0x30;\n  param10 = report_param10;\n  param11 = report_param11;\n  param12 = report_param12;\n  param13 = report_param13;\n  param14 = report_param14;\n  report(report_param9,&size);\n  return;\n}\n\n",
            "current_name": "report_and_store_data_00107920",
            "entrypoint": "0x00107920",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107920": "report_and_store_data_00107920",
                "in_AL": "flag",
                "local_18": "input8",
                "local_28": "input7",
                "local_38": "input6",
                "local_48": "input5",
                "local_58": "input4",
                "local_68": "input3",
                "local_78": "input2",
                "local_88": "input1",
                "local_90": "param14",
                "local_98": "param13",
                "local_a0": "param12",
                "local_a8": "param11",
                "local_b0": "param10",
                "local_b8": "local_buffer",
                "local_c8": "local_buffer",
                "local_d0": "buffer",
                "local_d4": "length",
                "local_d8": "size",
                "param_1": "input1",
                "param_10": "report_param10",
                "param_11": "report_param11",
                "param_12": "report_param12",
                "param_13": "report_param13",
                "param_14": "report_param14",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "param_7": "input7",
                "param_8": "input8",
                "param_9": "report_param9"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_001079c0": {
            "additional_data": {
                "FUN_001079c0": {
                    "format_and_print_file": 1,
                    "improved_print_file_line": 1,
                    "print_file_details": 1,
                    "print_file_info": 26,
                    "print_file_information": 2
                },
                "byte_value": {
                    "param2_byte_value": 1
                },
                "cStack_ea": {
                    "file_perm_x": 1,
                    "flag9": 1,
                    "flag_exec_group": 1,
                    "flag_x": 1,
                    "flag_x_lower": 1,
                    "group_exec_perm": 1,
                    "group_executable": 1,
                    "group_execute_char": 1,
                    "is_execute_group": 1,
                    "is_group_executable": 1,
                    "is_other_executable": 1,
                    "is_other_execute": 2,
                    "is_others_execute": 1,
                    "is_owner_writable": 1,
                    "other_exec": 1,
                    "other_execute": 4,
                    "other_execute_char": 1,
                    "other_execute_flag": 1,
                    "other_execute_permission": 1,
                    "other_user_write_permission": 1,
                    "others_exec": 1,
                    "others_execute": 3,
                    "others_execute_char": 1,
                    "permission_symbol_w": 1
                },
                "cStack_eb": {
                    "file_perm_w": 1,
                    "flag8": 1,
                    "flag_exec_owner": 1,
                    "flag_w": 1,
                    "flag_w_lower": 1,
                    "group_writable": 1,
                    "group_write_char": 1,
                    "group_write_perm": 1,
                    "is_group_writable": 1,
                    "is_other_writable": 1,
                    "is_other_write": 2,
                    "is_others_write": 1,
                    "is_owner_readable": 1,
                    "is_write_group": 1,
                    "other_user_read_permission": 1,
                    "other_write": 5,
                    "other_write_char": 1,
                    "other_write_flag": 1,
                    "other_write_permission": 1,
                    "others_write": 4,
                    "others_write_char": 1,
                    "permission_symbol_r": 1
                },
                "cStack_ec": {
                    "file_perm_r": 1,
                    "flag7": 1,
                    "flag_r": 1,
                    "flag_r_lower": 1,
                    "flag_sticky_group": 1,
                    "group_read_char": 1,
                    "group_read_perm": 1,
                    "group_readable": 1,
                    "is_group_readable": 1,
                    "is_other_read": 2,
                    "is_other_readable": 1,
                    "is_others_read": 1,
                    "is_read_group": 1,
                    "is_sticky": 1,
                    "other_read": 5,
                    "other_read_char": 1,
                    "other_read_flag": 1,
                    "other_read_permission": 1,
                    "others_read": 4,
                    "others_read_char": 1,
                    "permission_symbol_g": 1,
                    "setuid_bit": 1
                },
                "cStack_ed": {
                    "file_perm_sticky": 1,
                    "flag6": 1,
                    "flag_sticky": 1,
                    "flag_x": 1,
                    "flag_x_upper": 1,
                    "group_exec": 2,
                    "group_execute": 7,
                    "group_execute_char": 2,
                    "group_execute_flag": 1,
                    "group_execute_permission": 1,
                    "is_execute_user": 1,
                    "is_group_executable": 1,
                    "is_group_execute": 3,
                    "is_owner_executable": 1,
                    "is_setgid": 1,
                    "owner_execute_char": 1,
                    "permission_symbol_u": 1,
                    "setgid_bit": 1,
                    "user_exec_perm": 1,
                    "user_executable": 1
                },
                "cStack_ee": {
                    "file_perm_sgid": 1,
                    "flag5": 1,
                    "flag_setgid": 1,
                    "flag_w": 1,
                    "flag_w_upper": 1,
                    "group_write": 9,
                    "group_write_char": 2,
                    "group_write_flag": 1,
                    "group_write_permission": 1,
                    "is_group_writable": 1,
                    "is_group_write": 3,
                    "is_owner_writable": 1,
                    "is_setuid": 1,
                    "is_write_user": 1,
                    "owner_write_char": 1,
                    "permission_symbol_b": 1,
                    "sticky_bit": 1,
                    "user_writable": 1,
                    "user_write_perm": 1
                },
                "cStack_ef": {
                    "execute_permission": 1,
                    "file_perm_suid": 1,
                    "flag4": 1,
                    "flag_r": 1,
                    "flag_r_upper": 1,
                    "flag_setuid": 1,
                    "group_read": 9,
                    "group_read_char": 2,
                    "group_read_flag": 1,
                    "group_read_permission": 1,
                    "is_executable": 1,
                    "is_group_read": 3,
                    "is_group_readable": 1,
                    "is_owner_readable": 1,
                    "is_read_user": 1,
                    "owner_read_char": 1,
                    "permission_symbol_c": 1,
                    "user_read_perm": 1,
                    "user_readable": 1
                },
                "cStack_f0": {
                    "file_perm_o": 1,
                    "flag3": 1,
                    "flag_rwx_other": 1,
                    "flag_x": 2,
                    "has_sticky_bit": 1,
                    "is_execute_accessible": 1,
                    "is_owner_execute": 1,
                    "is_stickybit": 1,
                    "is_user_executable": 1,
                    "is_user_execute": 2,
                    "is_writable": 1,
                    "owner_execute": 2,
                    "owner_execute_char": 2,
                    "owner_execute_flag": 1,
                    "permission_symbol_x": 1,
                    "sticky_bit": 1,
                    "sticky_bit_char": 1,
                    "user_exec": 2,
                    "user_execute": 5,
                    "user_execute_permission": 1,
                    "write_permission": 1
                },
                "cStack_f1": {
                    "file_perm_g": 1,
                    "flag2": 1,
                    "flag_rwx_group": 1,
                    "flag_w": 2,
                    "has_sgid": 1,
                    "is_owner_write": 1,
                    "is_readable": 1,
                    "is_setgid": 1,
                    "is_user_writable": 1,
                    "is_user_write": 2,
                    "is_write_accessible": 1,
                    "owner_write": 2,
                    "owner_write_char": 2,
                    "owner_write_flag": 1,
                    "permission_symbol_w": 1,
                    "read_permission": 1,
                    "setgid_bit": 1,
                    "setgid_bit_char": 1,
                    "user_write": 7,
                    "user_write_permission": 1
                },
                "cStack_f2": {
                    "directory_permission": 1,
                    "file_perm_u": 1,
                    "flag1": 1,
                    "flag_r": 2,
                    "flag_rwx_owner": 1,
                    "has_suid": 1,
                    "is_hidden": 1,
                    "is_owner_read": 1,
                    "is_read_accessible": 1,
                    "is_setuid": 1,
                    "is_user_read": 2,
                    "is_user_readable": 1,
                    "owner_read": 2,
                    "owner_read_char": 2,
                    "owner_read_flag": 1,
                    "permission_symbol_r": 1,
                    "setuid_bit": 1,
                    "setuid_bit_char": 1,
                    "user_read": 7,
                    "user_read_permission": 1
                },
                "cStack_f3": {
                    "file_perms_char": 1,
                    "file_type": 1
                },
                "enableOutput": {
                    "param_3": 1
                },
                "fileInfo": {
                    "param_2": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "result": 25,
                    "return_value": 4
                },
                "local_100": {
                    "current_epoch": 1,
                    "current_file_time": 1,
                    "current_local_time": 1,
                    "current_time": 25,
                    "current_timestamp": 3
                },
                "local_60": {
                    "another_time": 1,
                    "cached_timestamp": 1,
                    "creation_time": 1,
                    "current_time": 2,
                    "current_time2": 1,
                    "current_timestamp": 1,
                    "file_creation_time": 2,
                    "file_mod_time": 1,
                    "file_modification_time": 3,
                    "file_modified_time": 3,
                    "file_time": 1,
                    "file_timestamp": 1,
                    "mod_time": 1,
                    "modification_time": 2,
                    "modification_timestamp": 1,
                    "modified_time": 2,
                    "parse_time": 1,
                    "st_mtime": 1,
                    "start_time": 1,
                    "temporary_time": 1,
                    "time_var": 1
                },
                "local_b8": {
                    "buffer": 6,
                    "temp_buffer": 1,
                    "time_buffer": 1,
                    "unknown_data": 2
                },
                "local_e8": {
                    "file_time_details": 1,
                    "file_time_string": 1,
                    "formatted_permissions": 1,
                    "formatted_time": 18,
                    "time_buffer": 1,
                    "time_format": 2,
                    "time_stamp": 1,
                    "time_string": 4,
                    "timestamp": 1,
                    "timestamp_string": 1
                },
                "outputFile": {
                    "param_1": 1
                },
                "param_1": {
                    "file": 17,
                    "file_ptr": 3,
                    "file_stream": 1,
                    "output_file": 8,
                    "output_file_pointer": 1,
                    "output_stream": 1
                },
                "param_2": {
                    "args": 1,
                    "file_data": 3,
                    "file_info": 21,
                    "file_info_list": 1,
                    "file_properties": 1,
                    "flags": 1,
                    "info": 1,
                    "line_ptr": 1,
                    "strings": 1
                },
                "param_3": {
                    "check_time": 1,
                    "enable_output": 1,
                    "enable_printing": 1,
                    "include_details": 1,
                    "include_file_info": 1,
                    "include_permissions": 1,
                    "include_time": 1,
                    "is_flag_set": 1,
                    "is_valid_file_info": 1,
                    "is_verbose": 5,
                    "print_details": 1,
                    "print_header": 1,
                    "print_time": 7,
                    "should_print": 2,
                    "show_file_info": 1,
                    "show_info": 1,
                    "show_time": 3,
                    "with_header": 1
                },
                "param_4": {
                    "check_address": 1,
                    "enable_hex_dump": 1,
                    "hex_dump": 1,
                    "include_address": 2,
                    "include_hex_dump": 1,
                    "print_address": 14,
                    "print_hex": 1,
                    "should_print_address": 1,
                    "show_address": 8,
                    "with_address": 1
                },
                "pcVar3": {
                    "current_time": 2,
                    "formatted_time": 1,
                    "time_data": 6,
                    "time_str": 3,
                    "time_string": 19
                },
                "ppcVar2": {
                    "address": 1,
                    "dynamic_functions": 1,
                    "extra_info": 1,
                    "file_info": 1,
                    "file_info_ptr": 7,
                    "file_name": 1,
                    "file_ptr": 8,
                    "func_pointer": 1,
                    "func_ptr": 3,
                    "info_ptr": 2,
                    "object_ptr": 1,
                    "pointer_to_data": 1,
                    "ptr": 1,
                    "ptr_strings": 1,
                    "temp_ptr": 1
                },
                "printAddress": {
                    "param_4": 1
                },
                "uStack_88": {
                    "access_time": 1,
                    "field3": 1,
                    "file_size": 17,
                    "inode": 3,
                    "inode_number": 4,
                    "link_count": 1,
                    "size": 1,
                    "st_size": 1,
                    "timestamp": 1,
                    "unknown_var3": 1
                },
                "uStack_98": {
                    "block_size": 1,
                    "day": 1,
                    "device": 1,
                    "device_number": 1,
                    "field2": 1,
                    "file_group": 1,
                    "file_minor_number": 1,
                    "file_size": 1,
                    "group_id": 11,
                    "inode": 1,
                    "major_dev": 1,
                    "minor_device": 1,
                    "minor_device_id": 1,
                    "minor_device_number": 4,
                    "st_ino": 1,
                    "uid": 2,
                    "unknown_var2": 1
                },
                "uStack_9c": {
                    "field1": 1,
                    "file_major_number": 1,
                    "file_mode": 1,
                    "file_owner": 1,
                    "inode": 1,
                    "inode_num": 1,
                    "inode_number": 1,
                    "major_device": 1,
                    "major_device_id": 1,
                    "major_device_number": 4,
                    "minor_dev": 1,
                    "month": 1,
                    "nlink": 2,
                    "owner_id": 1,
                    "st_nlink": 1,
                    "total_links": 1,
                    "unknown_var1": 1,
                    "user_id": 10
                },
                "uStack_a0": {
                    "attributes": 1,
                    "file_attributes": 1,
                    "file_mode": 9,
                    "file_mode_bits": 1,
                    "file_permission": 1,
                    "file_permissions": 3,
                    "file_size": 10,
                    "file_type": 1,
                    "mode": 2,
                    "permissions": 1,
                    "st_mode": 1
                },
                "uStack_e9": {
                    "is_sticky_bit_set": 1,
                    "other_execute_char": 1,
                    "unused": 1
                },
                "uStack_f3": {
                    "file_perm": 2,
                    "file_permission": 5,
                    "file_type": 9,
                    "file_type_char": 2,
                    "file_type_flag": 1,
                    "file_type_symbol": 1,
                    "permission": 2,
                    "permission_char": 4
                },
                "uVar4": {
                    "file_mode": 6,
                    "file_mode_bits": 1,
                    "file_perm": 2,
                    "file_permission": 2,
                    "file_permissions": 6,
                    "file_type": 13,
                    "permission_bits": 1
                }
            },
            "called": [
                "FUN_00102d8c",
                "FUN_001024f0",
                "FUN_00102150"
            ],
            "calling": [
                "FUN_00103ddc",
                "FUN_00107890"
            ],
            "code": "\nvoid print_file_info_001079c0(FILE *file,char **file_info,char print_time,char print_address)\n\n{\n  int result;\n  char **file_ptr;\n  char *time_string;\n  uint file_type;\n  time_t current_time;\n  undefined file_type;\n  char user_read;\n  char user_write;\n  char user_execute;\n  char group_read;\n  char group_write;\n  char group_execute;\n  char other_read;\n  char other_write;\n  char other_execute;\n  undefined other_execute_char;\n  char formatted_time [48];\n  undefined buffer [24];\n  uint file_size;\n  uint user_id;\n  uint group_id;\n  undefined8 file_size;\n  time_t file_modified_time;\n  \n  if (print_time != '\\0') {\n    file_ptr = (char **)file_info[0x1d];\n    if ((char **)file_info[0x1d] == (char **)0x0) {\n      file_ptr = file_info;\n    }\n    result = (**(code **)(file_ptr[1] + 0x1e8))(file_info,buffer);\n    if (result == 0) {\n      current_time = file_modified_time;\n      time_string = ctime(&current_time);\n      if (time_string == (char *)0x0) {\n        time_string = (char *)dcgettext(0,\"<time data corrupt>\",5);\n        sprintf(formatted_time,time_string);\n      }\n      else {\n        sprintf(formatted_time,\"%.12s %.4s\",time_string + 4);\n      }\n      file_type = file_size & 0xf000;\n      if (file_type == 0x4000) {\n        file_type = 100;\n      }\n      else if (file_type == 0xa000) {\n        file_type = 0x6c;\n      }\n      else if (file_type == 0x6000) {\n        file_type = 0x62;\n      }\n      else if (file_type == 0x2000) {\n        file_type = 99;\n      }\n      else if (file_type == 0xc000) {\n        file_type = 0x73;\n      }\n      else {\n        file_type = 0x70;\n        if (file_type != 0x1000) {\n          file_type = 0x2d;\n        }\n      }\n      user_read = (-((file_size & 0x100) == 0) & 0xbbU) + 0x72;\n      user_write = (-((file_size & 0x80) == 0) & 0xb6U) + 0x77;\n      user_execute = (-((file_size & 0x40) == 0) & 0xb5U) + 0x78;\n      group_read = (-((file_size & 0x20) == 0) & 0xbbU) + 0x72;\n      group_write = (-((file_size & 0x10) == 0) & 0xb6U) + 0x77;\n      group_execute = (-((file_size & 8) == 0) & 0xb5U) + 0x78;\n      other_read = (-((file_size & 4) == 0) & 0xbbU) + 0x72;\n      other_write = (-((file_size & 2) == 0) & 0xb6U) + 0x77;\n      other_execute = (-((file_size & 1) == 0) & 0xb5U) + 0x78;\n      if ((file_size & 0x800) != 0) {\n        if (user_execute == 'x') {\n          user_execute = 's';\n        }\n        else {\n          user_execute = 'S';\n        }\n      }\n      if ((file_size & 0x400) != 0) {\n        if (group_execute == 'x') {\n          group_execute = 's';\n        }\n        else {\n          group_execute = 'S';\n        }\n      }\n      if ((file_size & 0x200) != 0) {\n        if (other_execute == 'x') {\n          other_execute = 't';\n        }\n        else {\n          other_execute = 'T';\n        }\n      }\n      other_execute_char = 0;\n      fprintf(file,\"%s %ld/%ld %6lu %s \",&user_read,(ulong)user_id,(ulong)group_id,file_size,\n              formatted_time,(ulong)file_size);\n    }\n  }\n  fputs(*file_info,file);\n  if (print_address != '\\0') {\n    if ((*(byte *)((long)file_info + 0x49) & 0x10) == 0) {\n      if (file_info[0xb] != (char *)0x0) {\n        fprintf(file,\" 0x%lx\");\n      }\n    }\n    else if (file_info[0xc] != (char *)0x0) {\n      fprintf(file,\" 0x%lx\");\n    }\n  }\n  fputc(10,file);\n  return;\n}\n\n",
            "current_name": "print_file_info_001079c0",
            "entrypoint": "0x001079c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_001079c0": "print_file_info_001079c0",
                "cStack_ea": "other_execute",
                "cStack_eb": "other_write",
                "cStack_ec": "other_read",
                "cStack_ed": "group_execute",
                "cStack_ee": "group_write",
                "cStack_ef": "group_read",
                "cStack_f0": "user_execute",
                "cStack_f1": "user_write",
                "cStack_f2": "user_read",
                "iVar1": "result",
                "local_100": "current_time",
                "local_60": "file_modified_time",
                "local_b8": "buffer",
                "local_e8": "formatted_time",
                "param_1": "file",
                "param_2": "file_info",
                "param_3": "print_time",
                "param_4": "print_address",
                "pcVar3": "time_string",
                "ppcVar2": "file_ptr",
                "uStack_88": "file_size",
                "uStack_98": "group_id",
                "uStack_9c": "user_id",
                "uStack_a0": "file_size",
                "uStack_e9": "other_execute_char",
                "uStack_f3": "file_type",
                "uVar4": "file_type"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107c10": {
            "additional_data": {
                "FUN_00107c10": {
                    "cleanup_and_exit": 1,
                    "execute_and_exit": 1,
                    "exit_on_error": 1,
                    "exit_with_error": 14,
                    "exit_with_error_code": 1,
                    "handle_error": 1,
                    "handle_error_and_exit": 1,
                    "handle_exit": 2,
                    "initialize_and_exit": 1,
                    "perform_cleanup": 2,
                    "terminate_application": 1,
                    "terminate_process": 1,
                    "terminate_program": 3,
                    "terminate_program_gracefully": 1
                },
                "FUN_00107c20": {
                    "handle_error": 6,
                    "perform_action": 1,
                    "process_data": 16,
                    "process_parameter": 6
                },
                "param_1": {
                    "action_param": 1,
                    "data": 1,
                    "input_value": 2
                },
                "xexit": {
                    "exit_code": 1
                }
            },
            "called": [
                "FUN_00102480",
                "FUN_00107c20"
            ],
            "calling": [
                "FUN_001028ed",
                "FUN_00105db0",
                "FUN_00102d2f",
                "FUN_00105300",
                "FUN_001058b0"
            ],
            "code": "\nvoid exit_with_error_code_00107c10(void)\n\n{\n  bfd_nonfatal();\n                    \n  exit_code(1);\n}\n\n",
            "current_name": "exit_with_error_code_00107c10",
            "entrypoint": "0x00107c10",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107c10": "exit_with_error_code_00107c10",
                "xexit": "exit_code"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107c20": {
            "additional_data": {
                "DAT_0010d660": {
                    "program_name": 4
                },
                "FFlush": {
                    "flush_output": 1
                },
                "FLUSH_STDERR": {
                    "flush_stderr": 1
                },
                "FLUSH_STDOUT": {
                    "flush_stdout": 1
                },
                "FUN_00107c20": {
                    "print_error": 4,
                    "print_error_info": 1,
                    "print_error_message": 26
                },
                "_stderr": {
                    "standard_error": 2,
                    "stderr": 1
                },
                "_stdout": {
                    "standard_output": 2,
                    "stdout": 1
                },
                "bfd_errmsg": {
                    "get_bfd_error_message": 1
                },
                "dcgettext": {
                    "get_error_message": 1
                },
                "fprintf": {
                    "print_to_stderr": 1
                },
                "iVar1": {
                    "error": 13,
                    "error_code": 9,
                    "error_status": 6,
                    "error_type": 3
                },
                "in_R10": {
                    "additional_description": 1,
                    "additional_info": 9,
                    "additional_message": 1,
                    "extra_info": 1,
                    "unknown": 2,
                    "unknown_10": 1,
                    "unknown_argument": 1,
                    "unknown_cause": 1,
                    "unknown_value": 2,
                    "unmodified_var": 1,
                    "unused": 1,
                    "unused_variable": 3
                },
                "param_1": {
                    "error": 1,
                    "error_cause": 1,
                    "error_code": 2,
                    "error_description": 4,
                    "error_location": 1,
                    "error_message": 9,
                    "error_path": 1,
                    "error_string": 2,
                    "error_type": 6,
                    "file": 1,
                    "file_name": 2,
                    "filename": 1
                },
                "uVar2": {
                    "error_description": 2,
                    "error_message": 19,
                    "error_message_text": 1,
                    "error_msg": 4,
                    "error_string": 4,
                    "localized_error": 1
                }
            },
            "called": [
                "FUN_001024d0",
                "FUN_00102220",
                "FUN_00102f96"
            ],
            "calling": [
                "FUN_00105db0",
                "FUN_00107c10",
                "FUN_00105300"
            ],
            "code": "\n\n\nvoid print_error_message_00107c20(long error_message)\n\n{\n  int error;\n  undefined8 error_message;\n  undefined8 additional_info;\n  \n  error = bfd_get_error();\n  if (error == 0) {\n    error_message = get_error_message(0,\"cause of error unknown\",5);\n  }\n  else {\n    error_message = get_bfd_error_message(error);\n  }\n  fflush(standard_output);\n  if (error_message != 0) {\n    print_to_stderr(standard_error,\"%s: %s: %s\\n\",DAT_0010d660,error_message,error_message,additional_info);\n    return;\n  }\n  print_to_stderr(standard_error,\"%s: %s\\n\",DAT_0010d660,error_message,additional_info);\n  return;\n}\n\n",
            "current_name": "print_error_message_00107c20",
            "entrypoint": "0x00107c20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107c20": "print_error_message_00107c20",
                "_stderr": "standard_error",
                "_stdout": "standard_output",
                "bfd_errmsg": "get_bfd_error_message",
                "dcgettext": "get_error_message",
                "fprintf": "print_to_stderr",
                "iVar1": "error",
                "in_R10": "additional_info",
                "param_1": "error_message",
                "uVar2": "error_message"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107c80": {
            "additional_data": {
                "FUN_00107c80": {
                    "set_file_modification_time": 1,
                    "set_file_time": 21,
                    "set_file_timestamp": 5,
                    "set_file_timestamps": 3,
                    "set_time": 1
                },
                "dcgettext": {
                    "get_translated_error": 1
                },
                "iVar1": {
                    "error_code": 2,
                    "result": 29
                },
                "local_28": {
                    "access_time": 1,
                    "backup_access_time": 2,
                    "backup_version": 1,
                    "creation_time": 1,
                    "file_mode": 1,
                    "file_type": 1,
                    "modification_time": 1,
                    "modification_timespec": 1,
                    "mtime": 1,
                    "old_atime": 1,
                    "status": 1,
                    "time_spec2": 1,
                    "timespec2": 1
                },
                "local_38": {
                    "access_time": 18,
                    "access_timespec": 1,
                    "atime": 3,
                    "file_time_sec": 1,
                    "modification_time": 2,
                    "time_buf": 1,
                    "time_spec": 1,
                    "timespec1": 1,
                    "timestamp1": 1
                },
                "non_fatal": {
                    "handle_error": 1
                },
                "param_1": {
                    "file_name": 2,
                    "file_path": 26,
                    "filename": 3
                },
                "param_2": {
                    "file_info": 25,
                    "file_info_ptr": 2,
                    "info_ptr": 1,
                    "metadata": 1,
                    "metadata_ptr": 1,
                    "param_struct": 1
                },
                "pcVar3": {
                    "err_msg": 3,
                    "error_message": 11,
                    "error_msg": 7,
                    "error_str": 3,
                    "error_string": 7
                },
                "piVar2": {
                    "err_ptr": 1,
                    "errno_location": 1,
                    "errno_pointer": 1,
                    "errno_ptr": 13,
                    "error": 4,
                    "error_code": 2,
                    "error_code_ptr": 2,
                    "error_num": 1,
                    "error_number": 1,
                    "error_pointer": 1,
                    "error_ptr": 3,
                    "error_value": 1
                },
                "strerror": {
                    "get_error_string": 1
                },
                "uStack_1c": {
                    "file_size": 1,
                    "old_btim": 1
                },
                "uStack_20": {
                    "file_flags": 1,
                    "old_ctime": 1
                },
                "uStack_24": {
                    "file_mode": 1,
                    "old_mtime": 1
                },
                "uStack_2c": {
                    "birth_time": 5,
                    "btim": 1,
                    "create_time": 1,
                    "create_version": 1,
                    "creation_time": 5,
                    "file_time_n_sec3": 1,
                    "metadata_time": 2,
                    "mtime_nsec": 1,
                    "null": 1,
                    "stack2": 1,
                    "timestamp4": 1,
                    "unused": 1,
                    "utime_unknown3": 1
                },
                "uStack_30": {
                    "change_time": 11,
                    "creation_time": 1,
                    "ctime": 2,
                    "file_time_n_sec2": 1,
                    "mod_time": 1,
                    "modification_time": 1,
                    "stack3": 1,
                    "status_change_time": 3,
                    "timestamp3": 1,
                    "utime_unknown2": 1
                },
                "uStack_34": {
                    "atime_nsec": 1,
                    "file_time_n_sec": 1,
                    "mod_time": 2,
                    "modification_time": 13,
                    "mtime": 2,
                    "null": 1,
                    "stack4": 1,
                    "timestamp2": 1,
                    "utime_unknown1": 1
                },
                "uVar4": {
                    "error_message": 3,
                    "error_msg": 4,
                    "error_str": 2,
                    "error_text": 2,
                    "localized_error_message": 4,
                    "localized_error_msg": 1,
                    "localized_message": 1,
                    "localized_string": 1,
                    "translated_error": 5,
                    "translated_error_message": 3,
                    "translated_error_msg": 1,
                    "translated_message": 1,
                    "translated_msg": 2,
                    "translated_text": 1
                },
                "utimensat": {
                    "set_timestamps": 1
                }
            },
            "called": [
                "FUN_00102fd7",
                "FUN_00102040"
            ],
            "calling": [
                "FUN_00102c25"
            ],
            "code": "\nvoid set_file_modification_time_00107c80(char *file_path,long file_info)\n\n{\n  int result;\n  int *errno_ptr;\n  char *error_message;\n  undefined8 translated_error;\n  undefined4 access_time;\n  undefined4 modification_time;\n  undefined4 change_time;\n  undefined4 creation_time;\n  undefined4 backup_access_time;\n  undefined4 file_mode;\n  undefined4 old_ctime;\n  undefined4 old_btim;\n  \n  backup_access_time = *(undefined4 *)(file_info + 0x58);\n  file_mode = *(undefined4 *)(file_info + 0x5c);\n  old_ctime = *(undefined4 *)(file_info + 0x60);\n  old_btim = *(undefined4 *)(file_info + 100);\n  access_time = *(undefined4 *)(file_info + 0x48);\n  modification_time = *(undefined4 *)(file_info + 0x4c);\n  change_time = *(undefined4 *)(file_info + 0x50);\n  creation_time = *(undefined4 *)(file_info + 0x54);\n  result = set_timestamps(-100,file_path,(timespec *)&access_time,0);\n  if (result != 0) {\n    errno_ptr = __errno_location();\n    error_message = get_error_string(*errno_ptr);\n    translated_error = get_translated_error(0,\"%s: cannot set time: %s\",5);\n    handle_error(translated_error,file_path,error_message);\n  }\n  return;\n}\n\n",
            "current_name": "set_file_modification_time_00107c80",
            "entrypoint": "0x00107c80",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107c80": "set_file_modification_time_00107c80",
                "dcgettext": "get_translated_error",
                "iVar1": "result",
                "local_28": "backup_access_time",
                "local_38": "access_time",
                "non_fatal": "handle_error",
                "param_1": "file_path",
                "param_2": "file_info",
                "pcVar3": "error_message",
                "piVar2": "errno_ptr",
                "strerror": "get_error_string",
                "uStack_1c": "old_btim",
                "uStack_20": "old_ctime",
                "uStack_24": "file_mode",
                "uStack_2c": "creation_time",
                "uStack_30": "change_time",
                "uStack_34": "modification_time",
                "uVar4": "translated_error",
                "utimensat": "set_timestamps"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107cc0": {
            "additional_data": {
                "FUN_00107cc0": {
                    "execute_functions": 6,
                    "execute_reverse_code": 1,
                    "execute_reverse_order": 1,
                    "execute_reverse_process": 1,
                    "process_function": 2,
                    "process_nested_functions": 1,
                    "run_functions_with_pointers": 1
                },
                "LAB_00107d96": {
                    "continue_loop": 1,
                    "end_loop": 1
                },
                "lVar1": {
                    "counter": 2,
                    "current_index": 5,
                    "current_iteration": 1,
                    "current_value": 2,
                    "idx": 1,
                    "index": 15,
                    "index1": 3,
                    "last_index": 1,
                    "temp1": 1
                },
                "lVar2": {
                    "decremented_value": 1,
                    "index": 1,
                    "index2": 4,
                    "prev_idx": 1,
                    "prev_index": 11,
                    "previous_index": 6,
                    "previous_iteration": 1,
                    "secondary_counter": 1,
                    "sub_index": 1,
                    "temp2": 1,
                    "temp_index": 2,
                    "temp_value1": 1
                },
                "lVar3": {
                    "current_index": 1,
                    "index3": 4,
                    "inner_index": 3,
                    "loop_index": 2,
                    "lower_index": 1,
                    "nested_index": 1,
                    "prev_index2": 1,
                    "prev_prev_idx": 1,
                    "prev_prev_index": 1,
                    "previous_iteration2": 1,
                    "previous_value": 1,
                    "sub_sub_index": 1,
                    "temp3": 1,
                    "temp_index": 10,
                    "temp_value2": 1,
                    "tertiary_counter": 1
                },
                "lVarN": {
                    "unused_variable": 1
                },
                "plVar4": {
                    "function_array": 1,
                    "function_chain": 1,
                    "function_list": 13,
                    "function_pointer": 6,
                    "function_pointer_array": 1,
                    "function_pointer_list": 1,
                    "function_pointers": 2,
                    "function_ptr_list": 1,
                    "long_pointer": 1,
                    "pointer_array": 1,
                    "pointer_list": 1
                },
                "uVar5": {
                    "array_length": 1,
                    "count": 4,
                    "counter": 6,
                    "function_count": 1,
                    "index": 2,
                    "iteration_count": 1,
                    "iterations": 1,
                    "list_size": 1,
                    "loop_counter": 2,
                    "num_calls": 1,
                    "num_executions": 1,
                    "num_functions": 8,
                    "remaining_counter": 1,
                    "remaining_iterations": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00105db0"
            ],
            "code": "\nvoid execute_functions_00107cc0(void)\n\n{\n  long index;\n  long prev_index;\n  long temp_index;\n  long *function_list;\n  uint num_functions;\n  \n  function_list = (long *)PTR_DAT_0010d2e0;\n  if (PTR_DAT_0010d2e0 != (undefined *)0x0) {\n    do {\n      num_functions = *(int *)(function_list + 1) - 1;\n      if (-1 < (int)num_functions) {\n        index = (long)(int)num_functions;\n        num_functions = num_functions & 7;\n        (*(code *)function_list[index + 2])();\n        prev_index = index + -1;\n        if (-1 < (int)prev_index) {\n          temp_index = prev_index;\n          if (num_functions != 0) {\n            if (num_functions != 1) {\n              if (num_functions != 2) {\n                if (num_functions != 3) {\n                  if (num_functions != 4) {\n                    if (num_functions != 5) {\n                      if (num_functions != 6) {\n                        (*(code *)function_list[index + 1])();\n                        prev_index = index + -2;\n                      }\n                      (*(code *)function_list[prev_index + 2])();\n                      prev_index = prev_index + -1;\n                    }\n                    (*(code *)function_list[prev_index + 2])();\n                    prev_index = prev_index + -1;\n                  }\n                  (*(code *)function_list[prev_index + 2])();\n                  prev_index = prev_index + -1;\n                }\n                (*(code *)function_list[prev_index + 2])();\n                prev_index = prev_index + -1;\n              }\n              (*(code *)function_list[prev_index + 2])();\n              prev_index = prev_index + -1;\n            }\n            (*(code *)function_list[prev_index + 2])();\n            temp_index = prev_index + -1;\n            if ((int)(prev_index + -1) < 0) goto continue_loop;\n          }\n          do {\n            (*(code *)function_list[temp_index + 2])();\n            index = temp_index + -1;\n            (*(code *)function_list[temp_index + 1])();\n            (*(code *)function_list[temp_index])();\n            (*(code *)function_list[index])();\n            (*(code *)function_list[temp_index + -2])();\n            (*(code *)function_list[temp_index + -3])();\n            (*(code *)function_list[temp_index + -4])();\n            (*(code *)function_list[temp_index + -5])();\n            temp_index = temp_index + -8;\n          } while (-1 < (int)index + -7);\n        }\n      }\ncontinue_loop:\n      function_list = (long *)*function_list;\n    } while (function_list != (long *)0x0);\n  }\n  return;\n}\n\n",
            "current_name": "execute_functions_00107cc0",
            "entrypoint": "0x00107cc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00107cc0": "execute_functions_00107cc0",
                "LAB_00107d96": "continue_loop",
                "lVar1": "index",
                "lVar2": "prev_index",
                "lVar3": "temp_index",
                "plVar4": "function_list",
                "uVar5": "num_functions"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00107da8": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_00107da8(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00107da8",
            "entrypoint": "0x00107da8",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00107da8": "FUNC_00107da8"
            },
            "skipped": true,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_00102000",
            "FUN_00102020",
            "FUN_001025a0",
            "FUN_0010266f",
            "FUN_00102710",
            "FUN_0010284b",
            "FUN_0010285f",
            "FUN_001028ed",
            "FUN_00102943",
            "FUN_00102ba1",
            "FUN_00102bb0",
            "FUN_00102bf5",
            "FUN_00102c25",
            "FUN_00102cd9",
            "FUN_00102d2f",
            "FUN_00102d8c",
            "FUN_00102e57",
            "FUN_00102f08",
            "FUN_00102f1e",
            "FUN_00102f55",
            "FUN_00102f96",
            "FUN_00102fd7",
            "FUN_0010300e",
            "FUN_001030ed",
            "FUN_0010312d",
            "FUN_0010315d",
            "FUN_00103172",
            "FUN_001031a5",
            "FUN_001031cf",
            "FUN_001032a8",
            "FUN_0010336b",
            "FUN_001033b0",
            "FUN_001033d6",
            "FUN_0010342d",
            "FUN_0010394a",
            "FUN_00103a78",
            "FUN_00103ba8",
            "FUN_00103bd1",
            "FUN_00103c60",
            "FUN_00103ddc",
            "FUN_00103df9",
            "FUN_00103e95",
            "FUN_001052a0",
            "FUN_00105300",
            "FUN_00105480",
            "FUN_001057a0",
            "FUN_00105830",
            "FUN_00105870",
            "FUN_001058b0",
            "FUN_00105a20",
            "FUN_00105a68",
            "FUN_00105ae0",
            "FUN_00105bb0",
            "FUN_00105bc0",
            "FUN_00105c00",
            "FUN_00105cc0",
            "FUN_00105d60",
            "FUN_00105db0",
            "FUN_001075e0",
            "FUN_00107640",
            "FUN_00107650",
            "FUN_00107690",
            "FUN_00107730",
            "FUN_00107740",
            "FUN_00107890",
            "FUN_001078c0",
            "FUN_00107920",
            "FUN_001079c0",
            "FUN_00107c10",
            "FUN_00107c20",
            "FUN_00107c80",
            "FUN_00107cc0"
        ],
        [
            "FUN_00102e6f",
            "FUN_00105570"
        ],
        [
            "FUN_00105af0"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 386034
}